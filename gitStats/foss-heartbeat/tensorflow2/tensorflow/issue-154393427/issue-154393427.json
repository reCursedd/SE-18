{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2334", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2334/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2334/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2334/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/2334", "id": 154393427, "node_id": "MDU6SXNzdWUxNTQzOTM0Mjc=", "number": 2334, "title": "Immediate-mode execution in TensorFlow", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "keveman", "id": 229914, "node_id": "MDQ6VXNlcjIyOTkxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/229914?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keveman", "html_url": "https://github.com/keveman", "followers_url": "https://api.github.com/users/keveman/followers", "following_url": "https://api.github.com/users/keveman/following{/other_user}", "gists_url": "https://api.github.com/users/keveman/gists{/gist_id}", "starred_url": "https://api.github.com/users/keveman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keveman/subscriptions", "organizations_url": "https://api.github.com/users/keveman/orgs", "repos_url": "https://api.github.com/users/keveman/repos", "events_url": "https://api.github.com/users/keveman/events{/privacy}", "received_events_url": "https://api.github.com/users/keveman/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "keveman", "id": 229914, "node_id": "MDQ6VXNlcjIyOTkxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/229914?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keveman", "html_url": "https://github.com/keveman", "followers_url": "https://api.github.com/users/keveman/followers", "following_url": "https://api.github.com/users/keveman/following{/other_user}", "gists_url": "https://api.github.com/users/keveman/gists{/gist_id}", "starred_url": "https://api.github.com/users/keveman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keveman/subscriptions", "organizations_url": "https://api.github.com/users/keveman/orgs", "repos_url": "https://api.github.com/users/keveman/repos", "events_url": "https://api.github.com/users/keveman/events{/privacy}", "received_events_url": "https://api.github.com/users/keveman/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2016-05-12T04:14:08Z", "updated_at": "2016-08-16T00:26:58Z", "closed_at": "2016-08-16T00:26:58Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Mirror TensorFlow API to provide \"numpy/Torch\"-like mode for executing TensorFlow programs.</p>\n<p>Briefly, provide a mode where you can do the following:</p>\n<pre><code>a = tf.constant([[1,1],[1,1]])   # constant is created\nb = tf.constant([[2,2],[2,2]])\nc = tf.matmul(a, b)  # executes matrix multiplication\nprint c                      # transfers contents of c from TensorFlow runtime to Python runtime and prints it\n\n</code></pre>\n<p>Goals</p>\n<ol>\n<li>No separation between graph-construction and evaluation - each op is executed in TensorFlow runtime the moment the corresponding wrapper is evaluated by Python</li>\n<li>Reuse of TensorFlow Graph for efficiency. For instance, after float32 addition was performed once, any additional float32 addition operations should be done by reusing previously created OpDef</li>\n<li>Immediate-style Tensor object implements functions in <a href=\"https://docs.python.org/2/reference/datamodel.html#emulating-numeric-types\" rel=\"nofollow\">3.4.8. Emulating numeric types</a> and translates them to appropriate TensorFlow operations</li>\n<li>Immediate-style Tensor object keep contents of underlying tensors in TensorFlow runtime and only transfers them to Python when necessary, such when needed for flow control and printing.</li>\n</ol>\n<p>Design doc: <a href=\"https://docs.google.com/document/d/1CRfhT2_-EaboFbN1U7gKXlGIVAZ21bWpcl1fOwDZLjw/edit#heading=h.yhcm0hj5bq25\" rel=\"nofollow\">https://docs.google.com/document/d/1CRfhT2_-EaboFbN1U7gKXlGIVAZ21bWpcl1fOwDZLjw/edit#heading=h.yhcm0hj5bq25</a></p>\n<p>CLA signed (for design doc). I'll start submitting code for this as soon as I figure out github/bazel workflow</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=229914\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/keveman\">@keveman</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=2342391\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/yuanbyu\">@yuanbyu</a></p>", "body_text": "Mirror TensorFlow API to provide \"numpy/Torch\"-like mode for executing TensorFlow programs.\nBriefly, provide a mode where you can do the following:\na = tf.constant([[1,1],[1,1]])   # constant is created\nb = tf.constant([[2,2],[2,2]])\nc = tf.matmul(a, b)  # executes matrix multiplication\nprint c                      # transfers contents of c from TensorFlow runtime to Python runtime and prints it\n\n\nGoals\n\nNo separation between graph-construction and evaluation - each op is executed in TensorFlow runtime the moment the corresponding wrapper is evaluated by Python\nReuse of TensorFlow Graph for efficiency. For instance, after float32 addition was performed once, any additional float32 addition operations should be done by reusing previously created OpDef\nImmediate-style Tensor object implements functions in 3.4.8. Emulating numeric types and translates them to appropriate TensorFlow operations\nImmediate-style Tensor object keep contents of underlying tensors in TensorFlow runtime and only transfers them to Python when necessary, such when needed for flow control and printing.\n\nDesign doc: https://docs.google.com/document/d/1CRfhT2_-EaboFbN1U7gKXlGIVAZ21bWpcl1fOwDZLjw/edit#heading=h.yhcm0hj5bq25\nCLA signed (for design doc). I'll start submitting code for this as soon as I figure out github/bazel workflow\n@keveman @yuanbyu", "body": "Mirror TensorFlow API to provide \"numpy/Torch\"-like mode for executing TensorFlow programs. \n\nBriefly, provide a mode where you can do the following: \n\n```\na = tf.constant([[1,1],[1,1]])   # constant is created\nb = tf.constant([[2,2],[2,2]])\nc = tf.matmul(a, b)  # executes matrix multiplication\nprint c                      # transfers contents of c from TensorFlow runtime to Python runtime and prints it\n\n```\n\nGoals\n1. No separation between graph-construction and evaluation - each op is executed in TensorFlow runtime the moment the corresponding wrapper is evaluated by Python\n2. Reuse of TensorFlow Graph for efficiency. For instance, after float32 addition was performed once, any additional float32 addition operations should be done by reusing previously created OpDef\n3. Immediate-style Tensor object implements functions in [3.4.8. Emulating numeric types](https://docs.python.org/2/reference/datamodel.html#emulating-numeric-types) and translates them to appropriate TensorFlow operations \n4. Immediate-style Tensor object keep contents of underlying tensors in TensorFlow runtime and only transfers them to Python when necessary, such when needed for flow control and printing.\n\nDesign doc: https://docs.google.com/document/d/1CRfhT2_-EaboFbN1U7gKXlGIVAZ21bWpcl1fOwDZLjw/edit#heading=h.yhcm0hj5bq25\n\nCLA signed (for design doc). I'll start submitting code for this as soon as I figure out github/bazel workflow\n\n@keveman @yuanbyu \n"}