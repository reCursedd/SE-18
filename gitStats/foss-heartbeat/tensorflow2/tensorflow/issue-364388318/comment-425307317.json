{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/425307317", "html_url": "https://github.com/tensorflow/tensorflow/pull/22559#issuecomment-425307317", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22559", "id": 425307317, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTMwNzMxNw==", "user": {"login": "byronyi", "id": 2613663, "node_id": "MDQ6VXNlcjI2MTM2NjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/2613663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/byronyi", "html_url": "https://github.com/byronyi", "followers_url": "https://api.github.com/users/byronyi/followers", "following_url": "https://api.github.com/users/byronyi/following{/other_user}", "gists_url": "https://api.github.com/users/byronyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/byronyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/byronyi/subscriptions", "organizations_url": "https://api.github.com/users/byronyi/orgs", "repos_url": "https://api.github.com/users/byronyi/repos", "events_url": "https://api.github.com/users/byronyi/events{/privacy}", "received_events_url": "https://api.github.com/users/byronyi/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-28T03:10:02Z", "updated_at": "2018-09-28T06:51:26Z", "author_association": "CONTRIBUTOR", "body_html": "<p>It's quite alright. In fact, with Ubuntu 18.04 or any Linux distro with kernel &gt; 4.14, we could build the package without using any specific hardware or proprietary drivers/libraries, like in a GCP VM or a plain container (all necessary libraries are free software and maintained by distro). Testing is also possible with SoftRoCE (with in-tree driver rdma-rxe). I will add detailed docs after we move the current code to tensorflow/networking.</p>\n<p>As to the tensors allocated by cpu_allocator(), I found many of them falls into one of the following categories:</p>\n<ol>\n<li>boolean flag, like <code>report_uninitialized_variables/boolean_mask/Prod</code></li>\n<li>global step counter, like <code>edge_138_inc_global_step/AssignAdd</code></li>\n<li>single aggregated value, like <code>edge_133_average_loss/Mean</code></li>\n<li>other vectorised tensors, like <code>append_apply_gradient_ops/GradientDescent/update_v/cg/affine2/biases/ApplyGradientDescent</code> and <code>tower_0/v/gradients/AddN_1_S33</code></li>\n</ol>\n<p>You could take a look of the detailed log of <a href=\"https://gist.github.com/byronyi/568998c100615dfc9cada5112c7fd05c\">PS</a> and the log of the corresponding <a href=\"https://gist.github.com/byronyi/e4ba356dfb40c135dc673acc36b9424f\">worker</a>. I may have looked the wrong place, but I could find many of them by  <code>grep \"allocator_name:\\ \\\"cpu\\\"\"</code>.</p>", "body_text": "It's quite alright. In fact, with Ubuntu 18.04 or any Linux distro with kernel > 4.14, we could build the package without using any specific hardware or proprietary drivers/libraries, like in a GCP VM or a plain container (all necessary libraries are free software and maintained by distro). Testing is also possible with SoftRoCE (with in-tree driver rdma-rxe). I will add detailed docs after we move the current code to tensorflow/networking.\nAs to the tensors allocated by cpu_allocator(), I found many of them falls into one of the following categories:\n\nboolean flag, like report_uninitialized_variables/boolean_mask/Prod\nglobal step counter, like edge_138_inc_global_step/AssignAdd\nsingle aggregated value, like edge_133_average_loss/Mean\nother vectorised tensors, like append_apply_gradient_ops/GradientDescent/update_v/cg/affine2/biases/ApplyGradientDescent and tower_0/v/gradients/AddN_1_S33\n\nYou could take a look of the detailed log of PS and the log of the corresponding worker. I may have looked the wrong place, but I could find many of them by  grep \"allocator_name:\\ \\\"cpu\\\"\".", "body": "It's quite alright. In fact, with Ubuntu 18.04 or any Linux distro with kernel > 4.14, we could build the package without using any specific hardware or proprietary drivers/libraries, like in a GCP VM or a plain container (all necessary libraries are free software and maintained by distro). Testing is also possible with SoftRoCE (with in-tree driver rdma-rxe). I will add detailed docs after we move the current code to tensorflow/networking.\r\n\r\nAs to the tensors allocated by cpu_allocator(), I found many of them falls into one of the following categories:\r\n\r\n1. boolean flag, like `report_uninitialized_variables/boolean_mask/Prod` \r\n2. global step counter, like `edge_138_inc_global_step/AssignAdd`\r\n3. single aggregated value, like `edge_133_average_loss/Mean`\r\n4. other vectorised tensors, like `append_apply_gradient_ops/GradientDescent/update_v/cg/affine2/biases/ApplyGradientDescent` and `tower_0/v/gradients/AddN_1_S33`\r\n\r\n You could take a look of the detailed log of [PS](https://gist.github.com/byronyi/568998c100615dfc9cada5112c7fd05c) and the log of the corresponding [worker](https://gist.github.com/byronyi/e4ba356dfb40c135dc673acc36b9424f). I may have looked the wrong place, but I could find many of them by  ```grep \"allocator_name:\\ \\\"cpu\\\"\"```."}