{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/427659942", "html_url": "https://github.com/tensorflow/tensorflow/pull/22559#issuecomment-427659942", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22559", "id": 427659942, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzY1OTk0Mg==", "user": {"login": "yanivbl6", "id": 24679884, "node_id": "MDQ6VXNlcjI0Njc5ODg0", "avatar_url": "https://avatars2.githubusercontent.com/u/24679884?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yanivbl6", "html_url": "https://github.com/yanivbl6", "followers_url": "https://api.github.com/users/yanivbl6/followers", "following_url": "https://api.github.com/users/yanivbl6/following{/other_user}", "gists_url": "https://api.github.com/users/yanivbl6/gists{/gist_id}", "starred_url": "https://api.github.com/users/yanivbl6/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yanivbl6/subscriptions", "organizations_url": "https://api.github.com/users/yanivbl6/orgs", "repos_url": "https://api.github.com/users/yanivbl6/repos", "events_url": "https://api.github.com/users/yanivbl6/events{/privacy}", "received_events_url": "https://api.github.com/users/yanivbl6/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-07T15:01:26Z", "updated_at": "2018-10-07T15:01:26Z", "author_association": "CONTRIBUTOR", "body_html": "<p>hi <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=2613663\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/byronyi\">@byronyi</a>, <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=15676913\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/poxvoculi\">@poxvoculi</a><br>\nI tried running the new GDR from latest master but I encountered an error:<br>\nCheck failed: 0 == cpu_allocators_.size() (0 vs. 1)AddCPUAllocVisitor must be called prior to first call to ProcessState::GetCPUAllocator</p>\n<p>I am also getting the same error on my the patch I am working on to fix the verbs contribution.</p>\n<p>My understanding is the the GPU \"base device\" is created in <a href=\"https://github.com/tensorflow/tensorflow/blob/aab3c53e1484404a70565324d1231c4e6ead7425/tensorflow/core/common_runtime/gpu/gpu_device.cc#L1111\">this line</a>, trigerring the call to GetCPUAllocator before the visitors are registered, which is an error.<br>\nI am still trying to figure out how the tensorflow core is managing/syncing those event (GPU context creation and memory manager initialization).</p>", "body_text": "hi @byronyi, @poxvoculi\nI tried running the new GDR from latest master but I encountered an error:\nCheck failed: 0 == cpu_allocators_.size() (0 vs. 1)AddCPUAllocVisitor must be called prior to first call to ProcessState::GetCPUAllocator\nI am also getting the same error on my the patch I am working on to fix the verbs contribution.\nMy understanding is the the GPU \"base device\" is created in this line, trigerring the call to GetCPUAllocator before the visitors are registered, which is an error.\nI am still trying to figure out how the tensorflow core is managing/syncing those event (GPU context creation and memory manager initialization).", "body": "hi @byronyi, @poxvoculi \r\nI tried running the new GDR from latest master but I encountered an error:\r\nCheck failed: 0 == cpu_allocators_.size() (0 vs. 1)AddCPUAllocVisitor must be called prior to first call to ProcessState::GetCPUAllocator\r\n\r\nI am also getting the same error on my the patch I am working on to fix the verbs contribution.\r\n\r\nMy understanding is the the GPU \"base device\" is created in [this line](https://github.com/tensorflow/tensorflow/blob/aab3c53e1484404a70565324d1231c4e6ead7425/tensorflow/core/common_runtime/gpu/gpu_device.cc#L1111), trigerring the call to GetCPUAllocator before the visitors are registered, which is an error.\r\nI am still trying to figure out how the tensorflow core is managing/syncing those event (GPU context creation and memory manager initialization). "}