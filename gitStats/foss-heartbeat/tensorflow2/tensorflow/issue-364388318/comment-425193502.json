{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/425193502", "html_url": "https://github.com/tensorflow/tensorflow/pull/22559#issuecomment-425193502", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22559", "id": 425193502, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTE5MzUwMg==", "user": {"login": "poxvoculi", "id": 15676913, "node_id": "MDQ6VXNlcjE1Njc2OTEz", "avatar_url": "https://avatars2.githubusercontent.com/u/15676913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poxvoculi", "html_url": "https://github.com/poxvoculi", "followers_url": "https://api.github.com/users/poxvoculi/followers", "following_url": "https://api.github.com/users/poxvoculi/following{/other_user}", "gists_url": "https://api.github.com/users/poxvoculi/gists{/gist_id}", "starred_url": "https://api.github.com/users/poxvoculi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poxvoculi/subscriptions", "organizations_url": "https://api.github.com/users/poxvoculi/orgs", "repos_url": "https://api.github.com/users/poxvoculi/repos", "events_url": "https://api.github.com/users/poxvoculi/events{/privacy}", "received_events_url": "https://api.github.com/users/poxvoculi/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-27T18:18:55Z", "updated_at": "2018-09-27T18:18:55Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=2613663\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/byronyi\">@byronyi</a> Sorry for breaking this directory.  I don't have an environment in which I can compile and test it, so I ended up submitting a best guess.</p>\n<p>With the latest change, the value returned by cpu_allocator() should not be directly passed to any devices if ProcessState::AddCPUAllocVisitor is called prior to any CPU devices being created.   It's important when RDMA is going to be used that visitors be registered very early in process startup, so that all uses get the correct allocators.    I tried to achieve that by putting the new RegMemVisitors in the GdrMemoryManager constructor, which gets called in the GdrServer constructor.  The devices are not created until GrpcServer::Init, <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/distributed_runtime/rpc/grpc_server_lib.cc#L162\">here</a>.  Are you seeing the PS processes using the cpu_allocator() values directly, and not the allocator with SubAllocator using the registered visitors, created <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/common_runtime/process_state.cc#L91\">here?</a></p>\n<p>Whether it's a problem to duplicate-register the same region depends on the networking libraries in use.  For us it's a fatal error, but I can imagine another library ignoring a duplicate registration or making a duplicate table entry.</p>", "body_text": "@byronyi Sorry for breaking this directory.  I don't have an environment in which I can compile and test it, so I ended up submitting a best guess.\nWith the latest change, the value returned by cpu_allocator() should not be directly passed to any devices if ProcessState::AddCPUAllocVisitor is called prior to any CPU devices being created.   It's important when RDMA is going to be used that visitors be registered very early in process startup, so that all uses get the correct allocators.    I tried to achieve that by putting the new RegMemVisitors in the GdrMemoryManager constructor, which gets called in the GdrServer constructor.  The devices are not created until GrpcServer::Init, here.  Are you seeing the PS processes using the cpu_allocator() values directly, and not the allocator with SubAllocator using the registered visitors, created here?\nWhether it's a problem to duplicate-register the same region depends on the networking libraries in use.  For us it's a fatal error, but I can imagine another library ignoring a duplicate registration or making a duplicate table entry.", "body": "@byronyi Sorry for breaking this directory.  I don't have an environment in which I can compile and test it, so I ended up submitting a best guess.\r\n\r\nWith the latest change, the value returned by cpu_allocator() should not be directly passed to any devices if ProcessState::AddCPUAllocVisitor is called prior to any CPU devices being created.   It's important when RDMA is going to be used that visitors be registered very early in process startup, so that all uses get the correct allocators.    I tried to achieve that by putting the new RegMemVisitors in the GdrMemoryManager constructor, which gets called in the GdrServer constructor.  The devices are not created until GrpcServer::Init, [here](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/distributed_runtime/rpc/grpc_server_lib.cc#L162).  Are you seeing the PS processes using the cpu_allocator() values directly, and not the allocator with SubAllocator using the registered visitors, created [here?](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/common_runtime/process_state.cc#L91)\r\n\r\nWhether it's a problem to duplicate-register the same region depends on the networking libraries in use.  For us it's a fatal error, but I can imagine another library ignoring a duplicate registration or making a duplicate table entry."}