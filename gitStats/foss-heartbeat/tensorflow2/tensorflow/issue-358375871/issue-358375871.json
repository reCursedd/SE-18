{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22171", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22171/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22171/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22171/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/22171", "id": 358375871, "node_id": "MDU6SXNzdWUzNTgzNzU4NzE=", "number": 22171, "title": "Elements of a CsvDataset should be tensors instead of tuples", "user": {"login": "mattscar", "id": 173746, "node_id": "MDQ6VXNlcjE3Mzc0Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/173746?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattscar", "html_url": "https://github.com/mattscar", "followers_url": "https://api.github.com/users/mattscar/followers", "following_url": "https://api.github.com/users/mattscar/following{/other_user}", "gists_url": "https://api.github.com/users/mattscar/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattscar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattscar/subscriptions", "organizations_url": "https://api.github.com/users/mattscar/orgs", "repos_url": "https://api.github.com/users/mattscar/repos", "events_url": "https://api.github.com/users/mattscar/events{/privacy}", "received_events_url": "https://api.github.com/users/mattscar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "rachellim", "id": 9589037, "node_id": "MDQ6VXNlcjk1ODkwMzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/9589037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rachellim", "html_url": "https://github.com/rachellim", "followers_url": "https://api.github.com/users/rachellim/followers", "following_url": "https://api.github.com/users/rachellim/following{/other_user}", "gists_url": "https://api.github.com/users/rachellim/gists{/gist_id}", "starred_url": "https://api.github.com/users/rachellim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rachellim/subscriptions", "organizations_url": "https://api.github.com/users/rachellim/orgs", "repos_url": "https://api.github.com/users/rachellim/repos", "events_url": "https://api.github.com/users/rachellim/events{/privacy}", "received_events_url": "https://api.github.com/users/rachellim/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rachellim", "id": 9589037, "node_id": "MDQ6VXNlcjk1ODkwMzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/9589037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rachellim", "html_url": "https://github.com/rachellim", "followers_url": "https://api.github.com/users/rachellim/followers", "following_url": "https://api.github.com/users/rachellim/following{/other_user}", "gists_url": "https://api.github.com/users/rachellim/gists{/gist_id}", "starred_url": "https://api.github.com/users/rachellim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rachellim/subscriptions", "organizations_url": "https://api.github.com/users/rachellim/orgs", "repos_url": "https://api.github.com/users/rachellim/repos", "events_url": "https://api.github.com/users/rachellim/events{/privacy}", "received_events_url": "https://api.github.com/users/rachellim/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-09-09T12:46:50Z", "updated_at": "2018-10-31T18:24:39Z", "closed_at": "2018-10-31T18:24:39Z", "author_association": "NONE", "body_html": "<hr>\n<h3>System information</h3>\n<ul>\n<li>Have I written custom code (as opposed to using a stock example script provided in TensorFlow): <strong>Yes</strong></li>\n<li>OS Platform and Distribution (e.g., Linux Ubuntu 16.04): <strong>Linux Ubuntu 18.04</strong></li>\n<li>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: <strong>No</strong></li>\n<li>TensorFlow installed from (source or binary): <strong>source</strong></li>\n<li>TensorFlow version (use command below): <strong>1.10</strong></li>\n<li>Python version: <strong>3.6</strong></li>\n<li>Bazel version (if compiling from source): <strong>0.16.1</strong></li>\n<li>GCC/Compiler version (if compiling from source): <strong>7.3.0</strong></li>\n<li>CUDA/cuDNN version: <strong>N/A</strong></li>\n<li>GPU model and memory: <strong>N/A</strong></li>\n<li>Exact command to reproduce:</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>According to the <a href=\"https://www.tensorflow.org/api_docs/python/tf/data/Dataset\" rel=\"nofollow\">tf.data.Dataset</a> documentation, the elements of a generated dataset are expected to be tensors or sparse tensors. But when you create a <a href=\"https://www.tensorflow.org/api_docs/python/tf/contrib/data/CsvDataset\" rel=\"nofollow\">CsvDataset</a>, the elements are tuples. As a result, the dataset methods behave strangely.</p>\n<h3>Source code / logs</h3>\n<p>Assume the file example.csv contains this text:</p>\n<pre><code>1.0,2.0,3.0\n4.0,5.0,6.0\n</code></pre>\n<p>This code creates a CsvDataset and calls batch to combine elements into batches:</p>\n<pre><code>ds1 = tf.contrib.data.CsvDataset('example.csv', [tf.float32, tf.float32, tf.float32])\nds2 = ds1.batch(2)\niter = ds2.make_one_shot_iterator()\nwith tf.Session() as sess:\n    while True:            \n        try:\n          print(sess.run(iter.get_next()))\n        except tf.errors.OutOfRangeError:\n          break\n</code></pre>\n<p>The application prints the following result for ds2:<br>\n<code>(array([1., 4.], dtype=float32), array([2., 5.], dtype=float32), array([3., 6.], dtype=float32))</code></p>\n<p>The elements don't form expected batches because the elements of ds1 are tuples instead of tensors.</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 18.04\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: No\nTensorFlow installed from (source or binary): source\nTensorFlow version (use command below): 1.10\nPython version: 3.6\nBazel version (if compiling from source): 0.16.1\nGCC/Compiler version (if compiling from source): 7.3.0\nCUDA/cuDNN version: N/A\nGPU model and memory: N/A\nExact command to reproduce:\n\nDescribe the problem\nAccording to the tf.data.Dataset documentation, the elements of a generated dataset are expected to be tensors or sparse tensors. But when you create a CsvDataset, the elements are tuples. As a result, the dataset methods behave strangely.\nSource code / logs\nAssume the file example.csv contains this text:\n1.0,2.0,3.0\n4.0,5.0,6.0\n\nThis code creates a CsvDataset and calls batch to combine elements into batches:\nds1 = tf.contrib.data.CsvDataset('example.csv', [tf.float32, tf.float32, tf.float32])\nds2 = ds1.batch(2)\niter = ds2.make_one_shot_iterator()\nwith tf.Session() as sess:\n    while True:            \n        try:\n          print(sess.run(iter.get_next()))\n        except tf.errors.OutOfRangeError:\n          break\n\nThe application prints the following result for ds2:\n(array([1., 4.], dtype=float32), array([2., 5.], dtype=float32), array([3., 6.], dtype=float32))\nThe elements don't form expected batches because the elements of ds1 are tuples instead of tensors.", "body": "------------------------\r\n\r\n### System information\r\n- Have I written custom code (as opposed to using a stock example script provided in TensorFlow): **Yes**\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04): **Linux Ubuntu 18.04**\r\n- Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: **No**\r\n- TensorFlow installed from (source or binary): **source**\r\n- TensorFlow version (use command below): **1.10**\r\n- Python version: **3.6**\r\n- Bazel version (if compiling from source): **0.16.1**\r\n- GCC/Compiler version (if compiling from source): **7.3.0**\r\n- CUDA/cuDNN version: **N/A**\r\n- GPU model and memory: **N/A**\r\n- Exact command to reproduce:\r\n\r\n### Describe the problem\r\nAccording to the [tf.data.Dataset](https://www.tensorflow.org/api_docs/python/tf/data/Dataset) documentation, the elements of a generated dataset are expected to be tensors or sparse tensors. But when you create a [CsvDataset](https://www.tensorflow.org/api_docs/python/tf/contrib/data/CsvDataset), the elements are tuples. As a result, the dataset methods behave strangely.\r\n\r\n### Source code / logs\r\nAssume the file example.csv contains this text:\r\n```\r\n1.0,2.0,3.0\r\n4.0,5.0,6.0\r\n```\r\n\r\nThis code creates a CsvDataset and calls batch to combine elements into batches:\r\n```\r\nds1 = tf.contrib.data.CsvDataset('example.csv', [tf.float32, tf.float32, tf.float32])\r\nds2 = ds1.batch(2)\r\niter = ds2.make_one_shot_iterator()\r\nwith tf.Session() as sess:\r\n    while True:            \r\n        try:\r\n          print(sess.run(iter.get_next()))\r\n        except tf.errors.OutOfRangeError:\r\n          break\r\n```\r\n\r\nThe application prints the following result for ds2:\r\n```(array([1., 4.], dtype=float32), array([2., 5.], dtype=float32), array([3., 6.], dtype=float32))```\r\n\r\nThe elements don't form expected batches because the elements of ds1 are tuples instead of tensors.\r\n"}