{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22032", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22032/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22032/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22032/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/22032", "id": 356561329, "node_id": "MDU6SXNzdWUzNTY1NjEzMjk=", "number": 22032, "title": "[1.10.1] sparse_tensor_dense_matmul_op.cc doesn't compile", "user": {"login": "cdluminate", "id": 5723047, "node_id": "MDQ6VXNlcjU3MjMwNDc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5723047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdluminate", "html_url": "https://github.com/cdluminate", "followers_url": "https://api.github.com/users/cdluminate/followers", "following_url": "https://api.github.com/users/cdluminate/following{/other_user}", "gists_url": "https://api.github.com/users/cdluminate/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdluminate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdluminate/subscriptions", "organizations_url": "https://api.github.com/users/cdluminate/orgs", "repos_url": "https://api.github.com/users/cdluminate/repos", "events_url": "https://api.github.com/users/cdluminate/events{/privacy}", "received_events_url": "https://api.github.com/users/cdluminate/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "jart", "id": 49262, "node_id": "MDQ6VXNlcjQ5MjYy", "avatar_url": "https://avatars1.githubusercontent.com/u/49262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jart", "html_url": "https://github.com/jart", "followers_url": "https://api.github.com/users/jart/followers", "following_url": "https://api.github.com/users/jart/following{/other_user}", "gists_url": "https://api.github.com/users/jart/gists{/gist_id}", "starred_url": "https://api.github.com/users/jart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jart/subscriptions", "organizations_url": "https://api.github.com/users/jart/orgs", "repos_url": "https://api.github.com/users/jart/repos", "events_url": "https://api.github.com/users/jart/events{/privacy}", "received_events_url": "https://api.github.com/users/jart/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jart", "id": 49262, "node_id": "MDQ6VXNlcjQ5MjYy", "avatar_url": "https://avatars1.githubusercontent.com/u/49262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jart", "html_url": "https://github.com/jart", "followers_url": "https://api.github.com/users/jart/followers", "following_url": "https://api.github.com/users/jart/following{/other_user}", "gists_url": "https://api.github.com/users/jart/gists{/gist_id}", "starred_url": "https://api.github.com/users/jart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jart/subscriptions", "organizations_url": "https://api.github.com/users/jart/orgs", "repos_url": "https://api.github.com/users/jart/repos", "events_url": "https://api.github.com/users/jart/events{/privacy}", "received_events_url": "https://api.github.com/users/jart/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-09-03T16:35:29Z", "updated_at": "2018-09-04T08:40:55Z", "closed_at": "2018-09-04T08:40:55Z", "author_association": "NONE", "body_html": "<p>command</p>\n<pre><code>g++ -w -std=c++11 -O2 -fPIC -gsplit-dwarf -pthread -I. -I/usr/include/gemmlowp -I/usr/include/jsoncpp -I/usr/include/llvm-c-7 -I/usr/include/llvm-7 -Ithird_party/toolchains/gpus/cuda/ -c tensorflow/core/kernels/sparse_tensor_dense_matmul_op.cc -o tensorflow/core/kernels/sparse_tensor_dense_matmul_op.o -Idebian/embedded/eigen\n</code></pre>\n<p>where debian/embedded/eigen is the eigen source code directory whose version is the same as specified in bazel workspace.</p>\n<p>error output</p>\n<pre><code>tensorflow/core/kernels/sparse_tensor_dense_matmul_op.cc: In instantiation of \u2018static tensorflow::Status tensorflow::functor::SparseTensorDenseMatMulFunctor&lt;Eigen::ThreadPoolDevice, T, Tindices, ADJ_A, ADJ_B&gt;::Compute(const CPUDevice&amp;, typename tensorflow::TTypes&lt;T&gt;::Matrix, typename tensorflow::TTypes&lt;T&gt;::ConstMatrix, typename tensorflow::TTypes&lt;T&gt;::ConstVec, typename tensorflow::TTypes&lt;T&gt;::ConstMatrix) [with T = std::complex&lt;double&gt;; Tindices = int; bool ADJ_A = true; bool ADJ_B = false; tensorflow::CPUDevice = Eigen::ThreadPoolDevice; typename tensorflow::TTypes&lt;T&gt;::Matrix = Eigen::TensorMap&lt;Eigen::Tensor&lt;std::complex&lt;double&gt;, 2, 1, long int&gt;, 16, Eigen::MakePointer&gt;; typename tensorflow::TTypes&lt;T&gt;::ConstMatrix = Eigen::TensorMap&lt;Eigen::Tensor&lt;const int, 2, 1, long int&gt;, 16, Eigen::MakePointer&gt;; typename tensorflow::TTypes&lt;T&gt;::ConstVec = Eigen::TensorMap&lt;Eigen::Tensor&lt;const std::complex&lt;double&gt;, 1, 1, long int&gt;, 16, Eigen::MakePointer&gt;; typename tensorflow::TTypes&lt;T&gt;::ConstMatrix = Eigen::TensorMap&lt;Eigen::Tensor&lt;const std::complex&lt;double&gt;, 2, 1, long int&gt;, 16, Eigen::MakePointer&gt;]\u2019:\ntensorflow/core/kernels/sparse_tensor_dense_matmul_op.cc:148:5:   required from \u2018void tensorflow::SparseTensorDenseMatMulOp&lt;Device, T, Tindices&gt;::Compute(tensorflow::OpKernelContext*) [with Device = Eigen::ThreadPoolDevice; T = std::complex&lt;double&gt;; Tindices = int]\u2019\ntensorflow/core/kernels/sparse_tensor_dense_matmul_op.cc:42:8:   required from here\ntensorflow/core/kernels/sparse_tensor_dense_matmul_op.cc:305:30: error: no matching function for call to \u2018std::array&lt;int, 2&gt;::array(int, int)\u2019\n         Eigen::array&lt;int, 2&gt; shuffle(1, 0);  // preserve dimension order\n                              ^~~~~~~\nIn file included from ./tensorflow/core/kernels/sparse_tensor_dense_matmul_op.h:19,\n                 from tensorflow/core/kernels/sparse_tensor_dense_matmul_op.cc:20:\n/usr/include/c++/8/array:94:12: note: candidate: \u2018std::array&lt;int, 2&gt;::array()\u2019\n     struct array\n            ^~~~~\n/usr/include/c++/8/array:94:12: note:   candidate expects 0 arguments, 2 provided\n/usr/include/c++/8/array:94:12: note: candidate: \u2018constexpr std::array&lt;int, 2&gt;::array(const std::array&lt;int, 2&gt;&amp;)\u2019\n/usr/include/c++/8/array:94:12: note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/8/array:94:12: note: candidate: \u2018constexpr std::array&lt;int, 2&gt;::array(std::array&lt;int, 2&gt;&amp;&amp;)\u2019\n/usr/include/c++/8/array:94:12: note:   candidate expects 1 argument, 2 provided\ntensorflow/core/kernels/sparse_tensor_dense_matmul_op.cc: In instantiation of \u2018static tensorflow::Status tensorflow::functor::SparseTensorDenseMatMulFunctor&lt;Eigen::ThreadPoolDevice, T, Tindices, ADJ_A, ADJ_B&gt;::Compute(const CPUDevice&amp;, typename tensorflow::TTypes&lt;T&gt;::Matrix, typename tensorflow::TTypes&lt;T&gt;::ConstMatrix, typename tensorflow::TTypes&lt;T&gt;::ConstVec, typename tensorflow::TTypes&lt;T&gt;::ConstMatrix) [with T = std::complex&lt;double&gt;; Tindices = int; bool ADJ_A = true; bool ADJ_B = true; tensorflow::CPUDevice = Eigen::ThreadPoolDevice; typename tensorflow::TTypes&lt;T&gt;::Matrix = Eigen::TensorMap&lt;Eigen::Tensor&lt;std::complex&lt;double&gt;, 2, 1, long int&gt;, 16, Eigen::MakePointer&gt;; typename tensorflow::TTypes&lt;T&gt;::ConstMatrix = Eigen::TensorMap&lt;Eigen::Tensor&lt;const int, 2, 1, long int&gt;, 16, Eigen::MakePointer&gt;; typename tensorflow::TTypes&lt;T&gt;::ConstVec = Eigen::TensorMap&lt;Eigen::Tensor&lt;const std::complex&lt;double&gt;, 1, 1, long int&gt;, 16, Eigen::MakePointer&gt;; typename tensorflow::TTypes&lt;T&gt;::ConstMatrix = Eigen::TensorMap&lt;Eigen::Tensor&lt;const std::complex&lt;double&gt;, 2, 1, long int&gt;, 16, Eigen::MakePointer&gt;]\u2019:\ntensorflow/core/kernels/sparse_tensor_dense_matmul_op.cc:149:5:   required from \u2018void tensorflow::SparseTensorDenseMatMulOp&lt;Device, T, Tindices&gt;::Compute(tensorflow::OpKernelContext*) [with Device = Eigen::ThreadPoolDevice; T = std::complex&lt;double&gt;; Tindices = int]\u2019\ntensorflow/core/kernels/sparse_tensor_dense_matmul_op.cc:42:8:   required from here\ntensorflow/core/kernels/sparse_tensor_dense_matmul_op.cc:305:30: error: no matching function for call to \u2018std::array&lt;int, 2&gt;::array(int, int)\u2019\n         Eigen::array&lt;int, 2&gt; shuffle(1, 0);  // preserve dimension order\n                              ^~~~~~~\nIn file included from ./tensorflow/core/kernels/sparse_tensor_dense_matmul_op.h:19,\n                 from tensorflow/core/kernels/sparse_tensor_dense_matmul_op.cc:20:\n/usr/include/c++/8/array:94:12: note: candidate: \u2018std::array&lt;int, 2&gt;::array()\u2019\n     struct array\n            ^~~~~\n/usr/include/c++/8/array:94:12: note:   candidate expects 0 arguments, 2 provided\n/usr/include/c++/8/array:94:12: note: candidate: \u2018constexpr std::array&lt;int, 2&gt;::array(const std::array&lt;int, 2&gt;&amp;)\u2019\n/usr/include/c++/8/array:94:12: note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/8/array:94:12: note: candidate: \u2018constexpr std::array&lt;int, 2&gt;::array(std::array&lt;int, 2&gt;&amp;&amp;)\u2019\n/usr/include/c++/8/array:94:12: note:   candidate expects 1 argument, 2 provided\n</code></pre>\n<hr>\n<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: no</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: debian experimental</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>: N/A</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: source</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.10.1</li>\n<li><strong>Python version</strong>: not related</li>\n<li><strong>Bazel version (if compiling from source)</strong>: not related</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: g++ (Debian 8.2.0-4) 8.2.0</li>\n<li><strong>CUDA/cuDNN version</strong>: N/A</li>\n<li><strong>GPU model and memory</strong>: N/A</li>\n<li><strong>Exact command to reproduce</strong>: above</li>\n</ul>", "body_text": "command\ng++ -w -std=c++11 -O2 -fPIC -gsplit-dwarf -pthread -I. -I/usr/include/gemmlowp -I/usr/include/jsoncpp -I/usr/include/llvm-c-7 -I/usr/include/llvm-7 -Ithird_party/toolchains/gpus/cuda/ -c tensorflow/core/kernels/sparse_tensor_dense_matmul_op.cc -o tensorflow/core/kernels/sparse_tensor_dense_matmul_op.o -Idebian/embedded/eigen\n\nwhere debian/embedded/eigen is the eigen source code directory whose version is the same as specified in bazel workspace.\nerror output\ntensorflow/core/kernels/sparse_tensor_dense_matmul_op.cc: In instantiation of \u2018static tensorflow::Status tensorflow::functor::SparseTensorDenseMatMulFunctor<Eigen::ThreadPoolDevice, T, Tindices, ADJ_A, ADJ_B>::Compute(const CPUDevice&, typename tensorflow::TTypes<T>::Matrix, typename tensorflow::TTypes<T>::ConstMatrix, typename tensorflow::TTypes<T>::ConstVec, typename tensorflow::TTypes<T>::ConstMatrix) [with T = std::complex<double>; Tindices = int; bool ADJ_A = true; bool ADJ_B = false; tensorflow::CPUDevice = Eigen::ThreadPoolDevice; typename tensorflow::TTypes<T>::Matrix = Eigen::TensorMap<Eigen::Tensor<std::complex<double>, 2, 1, long int>, 16, Eigen::MakePointer>; typename tensorflow::TTypes<T>::ConstMatrix = Eigen::TensorMap<Eigen::Tensor<const int, 2, 1, long int>, 16, Eigen::MakePointer>; typename tensorflow::TTypes<T>::ConstVec = Eigen::TensorMap<Eigen::Tensor<const std::complex<double>, 1, 1, long int>, 16, Eigen::MakePointer>; typename tensorflow::TTypes<T>::ConstMatrix = Eigen::TensorMap<Eigen::Tensor<const std::complex<double>, 2, 1, long int>, 16, Eigen::MakePointer>]\u2019:\ntensorflow/core/kernels/sparse_tensor_dense_matmul_op.cc:148:5:   required from \u2018void tensorflow::SparseTensorDenseMatMulOp<Device, T, Tindices>::Compute(tensorflow::OpKernelContext*) [with Device = Eigen::ThreadPoolDevice; T = std::complex<double>; Tindices = int]\u2019\ntensorflow/core/kernels/sparse_tensor_dense_matmul_op.cc:42:8:   required from here\ntensorflow/core/kernels/sparse_tensor_dense_matmul_op.cc:305:30: error: no matching function for call to \u2018std::array<int, 2>::array(int, int)\u2019\n         Eigen::array<int, 2> shuffle(1, 0);  // preserve dimension order\n                              ^~~~~~~\nIn file included from ./tensorflow/core/kernels/sparse_tensor_dense_matmul_op.h:19,\n                 from tensorflow/core/kernels/sparse_tensor_dense_matmul_op.cc:20:\n/usr/include/c++/8/array:94:12: note: candidate: \u2018std::array<int, 2>::array()\u2019\n     struct array\n            ^~~~~\n/usr/include/c++/8/array:94:12: note:   candidate expects 0 arguments, 2 provided\n/usr/include/c++/8/array:94:12: note: candidate: \u2018constexpr std::array<int, 2>::array(const std::array<int, 2>&)\u2019\n/usr/include/c++/8/array:94:12: note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/8/array:94:12: note: candidate: \u2018constexpr std::array<int, 2>::array(std::array<int, 2>&&)\u2019\n/usr/include/c++/8/array:94:12: note:   candidate expects 1 argument, 2 provided\ntensorflow/core/kernels/sparse_tensor_dense_matmul_op.cc: In instantiation of \u2018static tensorflow::Status tensorflow::functor::SparseTensorDenseMatMulFunctor<Eigen::ThreadPoolDevice, T, Tindices, ADJ_A, ADJ_B>::Compute(const CPUDevice&, typename tensorflow::TTypes<T>::Matrix, typename tensorflow::TTypes<T>::ConstMatrix, typename tensorflow::TTypes<T>::ConstVec, typename tensorflow::TTypes<T>::ConstMatrix) [with T = std::complex<double>; Tindices = int; bool ADJ_A = true; bool ADJ_B = true; tensorflow::CPUDevice = Eigen::ThreadPoolDevice; typename tensorflow::TTypes<T>::Matrix = Eigen::TensorMap<Eigen::Tensor<std::complex<double>, 2, 1, long int>, 16, Eigen::MakePointer>; typename tensorflow::TTypes<T>::ConstMatrix = Eigen::TensorMap<Eigen::Tensor<const int, 2, 1, long int>, 16, Eigen::MakePointer>; typename tensorflow::TTypes<T>::ConstVec = Eigen::TensorMap<Eigen::Tensor<const std::complex<double>, 1, 1, long int>, 16, Eigen::MakePointer>; typename tensorflow::TTypes<T>::ConstMatrix = Eigen::TensorMap<Eigen::Tensor<const std::complex<double>, 2, 1, long int>, 16, Eigen::MakePointer>]\u2019:\ntensorflow/core/kernels/sparse_tensor_dense_matmul_op.cc:149:5:   required from \u2018void tensorflow::SparseTensorDenseMatMulOp<Device, T, Tindices>::Compute(tensorflow::OpKernelContext*) [with Device = Eigen::ThreadPoolDevice; T = std::complex<double>; Tindices = int]\u2019\ntensorflow/core/kernels/sparse_tensor_dense_matmul_op.cc:42:8:   required from here\ntensorflow/core/kernels/sparse_tensor_dense_matmul_op.cc:305:30: error: no matching function for call to \u2018std::array<int, 2>::array(int, int)\u2019\n         Eigen::array<int, 2> shuffle(1, 0);  // preserve dimension order\n                              ^~~~~~~\nIn file included from ./tensorflow/core/kernels/sparse_tensor_dense_matmul_op.h:19,\n                 from tensorflow/core/kernels/sparse_tensor_dense_matmul_op.cc:20:\n/usr/include/c++/8/array:94:12: note: candidate: \u2018std::array<int, 2>::array()\u2019\n     struct array\n            ^~~~~\n/usr/include/c++/8/array:94:12: note:   candidate expects 0 arguments, 2 provided\n/usr/include/c++/8/array:94:12: note: candidate: \u2018constexpr std::array<int, 2>::array(const std::array<int, 2>&)\u2019\n/usr/include/c++/8/array:94:12: note:   candidate expects 1 argument, 2 provided\n/usr/include/c++/8/array:94:12: note: candidate: \u2018constexpr std::array<int, 2>::array(std::array<int, 2>&&)\u2019\n/usr/include/c++/8/array:94:12: note:   candidate expects 1 argument, 2 provided\n\n\nSystem information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): no\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): debian experimental\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A\nTensorFlow installed from (source or binary): source\nTensorFlow version (use command below): 1.10.1\nPython version: not related\nBazel version (if compiling from source): not related\nGCC/Compiler version (if compiling from source): g++ (Debian 8.2.0-4) 8.2.0\nCUDA/cuDNN version: N/A\nGPU model and memory: N/A\nExact command to reproduce: above", "body": "command\r\n```\r\ng++ -w -std=c++11 -O2 -fPIC -gsplit-dwarf -pthread -I. -I/usr/include/gemmlowp -I/usr/include/jsoncpp -I/usr/include/llvm-c-7 -I/usr/include/llvm-7 -Ithird_party/toolchains/gpus/cuda/ -c tensorflow/core/kernels/sparse_tensor_dense_matmul_op.cc -o tensorflow/core/kernels/sparse_tensor_dense_matmul_op.o -Idebian/embedded/eigen\r\n```\r\nwhere debian/embedded/eigen is the eigen source code directory whose version is the same as specified in bazel workspace.\r\n\r\nerror output\r\n```\r\ntensorflow/core/kernels/sparse_tensor_dense_matmul_op.cc: In instantiation of \u2018static tensorflow::Status tensorflow::functor::SparseTensorDenseMatMulFunctor<Eigen::ThreadPoolDevice, T, Tindices, ADJ_A, ADJ_B>::Compute(const CPUDevice&, typename tensorflow::TTypes<T>::Matrix, typename tensorflow::TTypes<T>::ConstMatrix, typename tensorflow::TTypes<T>::ConstVec, typename tensorflow::TTypes<T>::ConstMatrix) [with T = std::complex<double>; Tindices = int; bool ADJ_A = true; bool ADJ_B = false; tensorflow::CPUDevice = Eigen::ThreadPoolDevice; typename tensorflow::TTypes<T>::Matrix = Eigen::TensorMap<Eigen::Tensor<std::complex<double>, 2, 1, long int>, 16, Eigen::MakePointer>; typename tensorflow::TTypes<T>::ConstMatrix = Eigen::TensorMap<Eigen::Tensor<const int, 2, 1, long int>, 16, Eigen::MakePointer>; typename tensorflow::TTypes<T>::ConstVec = Eigen::TensorMap<Eigen::Tensor<const std::complex<double>, 1, 1, long int>, 16, Eigen::MakePointer>; typename tensorflow::TTypes<T>::ConstMatrix = Eigen::TensorMap<Eigen::Tensor<const std::complex<double>, 2, 1, long int>, 16, Eigen::MakePointer>]\u2019:\r\ntensorflow/core/kernels/sparse_tensor_dense_matmul_op.cc:148:5:   required from \u2018void tensorflow::SparseTensorDenseMatMulOp<Device, T, Tindices>::Compute(tensorflow::OpKernelContext*) [with Device = Eigen::ThreadPoolDevice; T = std::complex<double>; Tindices = int]\u2019\r\ntensorflow/core/kernels/sparse_tensor_dense_matmul_op.cc:42:8:   required from here\r\ntensorflow/core/kernels/sparse_tensor_dense_matmul_op.cc:305:30: error: no matching function for call to \u2018std::array<int, 2>::array(int, int)\u2019\r\n         Eigen::array<int, 2> shuffle(1, 0);  // preserve dimension order\r\n                              ^~~~~~~\r\nIn file included from ./tensorflow/core/kernels/sparse_tensor_dense_matmul_op.h:19,\r\n                 from tensorflow/core/kernels/sparse_tensor_dense_matmul_op.cc:20:\r\n/usr/include/c++/8/array:94:12: note: candidate: \u2018std::array<int, 2>::array()\u2019\r\n     struct array\r\n            ^~~~~\r\n/usr/include/c++/8/array:94:12: note:   candidate expects 0 arguments, 2 provided\r\n/usr/include/c++/8/array:94:12: note: candidate: \u2018constexpr std::array<int, 2>::array(const std::array<int, 2>&)\u2019\r\n/usr/include/c++/8/array:94:12: note:   candidate expects 1 argument, 2 provided\r\n/usr/include/c++/8/array:94:12: note: candidate: \u2018constexpr std::array<int, 2>::array(std::array<int, 2>&&)\u2019\r\n/usr/include/c++/8/array:94:12: note:   candidate expects 1 argument, 2 provided\r\ntensorflow/core/kernels/sparse_tensor_dense_matmul_op.cc: In instantiation of \u2018static tensorflow::Status tensorflow::functor::SparseTensorDenseMatMulFunctor<Eigen::ThreadPoolDevice, T, Tindices, ADJ_A, ADJ_B>::Compute(const CPUDevice&, typename tensorflow::TTypes<T>::Matrix, typename tensorflow::TTypes<T>::ConstMatrix, typename tensorflow::TTypes<T>::ConstVec, typename tensorflow::TTypes<T>::ConstMatrix) [with T = std::complex<double>; Tindices = int; bool ADJ_A = true; bool ADJ_B = true; tensorflow::CPUDevice = Eigen::ThreadPoolDevice; typename tensorflow::TTypes<T>::Matrix = Eigen::TensorMap<Eigen::Tensor<std::complex<double>, 2, 1, long int>, 16, Eigen::MakePointer>; typename tensorflow::TTypes<T>::ConstMatrix = Eigen::TensorMap<Eigen::Tensor<const int, 2, 1, long int>, 16, Eigen::MakePointer>; typename tensorflow::TTypes<T>::ConstVec = Eigen::TensorMap<Eigen::Tensor<const std::complex<double>, 1, 1, long int>, 16, Eigen::MakePointer>; typename tensorflow::TTypes<T>::ConstMatrix = Eigen::TensorMap<Eigen::Tensor<const std::complex<double>, 2, 1, long int>, 16, Eigen::MakePointer>]\u2019:\r\ntensorflow/core/kernels/sparse_tensor_dense_matmul_op.cc:149:5:   required from \u2018void tensorflow::SparseTensorDenseMatMulOp<Device, T, Tindices>::Compute(tensorflow::OpKernelContext*) [with Device = Eigen::ThreadPoolDevice; T = std::complex<double>; Tindices = int]\u2019\r\ntensorflow/core/kernels/sparse_tensor_dense_matmul_op.cc:42:8:   required from here\r\ntensorflow/core/kernels/sparse_tensor_dense_matmul_op.cc:305:30: error: no matching function for call to \u2018std::array<int, 2>::array(int, int)\u2019\r\n         Eigen::array<int, 2> shuffle(1, 0);  // preserve dimension order\r\n                              ^~~~~~~\r\nIn file included from ./tensorflow/core/kernels/sparse_tensor_dense_matmul_op.h:19,\r\n                 from tensorflow/core/kernels/sparse_tensor_dense_matmul_op.cc:20:\r\n/usr/include/c++/8/array:94:12: note: candidate: \u2018std::array<int, 2>::array()\u2019\r\n     struct array\r\n            ^~~~~\r\n/usr/include/c++/8/array:94:12: note:   candidate expects 0 arguments, 2 provided\r\n/usr/include/c++/8/array:94:12: note: candidate: \u2018constexpr std::array<int, 2>::array(const std::array<int, 2>&)\u2019\r\n/usr/include/c++/8/array:94:12: note:   candidate expects 1 argument, 2 provided\r\n/usr/include/c++/8/array:94:12: note: candidate: \u2018constexpr std::array<int, 2>::array(std::array<int, 2>&&)\u2019\r\n/usr/include/c++/8/array:94:12: note:   candidate expects 1 argument, 2 provided\r\n```\r\n\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: no\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: debian experimental\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**: N/A\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: 1.10.1\r\n- **Python version**: not related\r\n- **Bazel version (if compiling from source)**: not related\r\n- **GCC/Compiler version (if compiling from source)**: g++ (Debian 8.2.0-4) 8.2.0\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: above\r\n"}