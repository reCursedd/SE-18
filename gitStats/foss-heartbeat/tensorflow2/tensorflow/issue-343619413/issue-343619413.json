{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21053", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21053/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21053/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21053/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21053", "id": 343619413, "node_id": "MDU6SXNzdWUzNDM2MTk0MTM=", "number": 21053, "title": "Session.run() on Operation return None. Design question", "user": {"login": "Jylomaki", "id": 16537704, "node_id": "MDQ6VXNlcjE2NTM3NzA0", "avatar_url": "https://avatars2.githubusercontent.com/u/16537704?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jylomaki", "html_url": "https://github.com/Jylomaki", "followers_url": "https://api.github.com/users/Jylomaki/followers", "following_url": "https://api.github.com/users/Jylomaki/following{/other_user}", "gists_url": "https://api.github.com/users/Jylomaki/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jylomaki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jylomaki/subscriptions", "organizations_url": "https://api.github.com/users/Jylomaki/orgs", "repos_url": "https://api.github.com/users/Jylomaki/repos", "events_url": "https://api.github.com/users/Jylomaki/events{/privacy}", "received_events_url": "https://api.github.com/users/Jylomaki/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "drpngx", "id": 20959853, "node_id": "MDQ6VXNlcjIwOTU5ODUz", "avatar_url": "https://avatars1.githubusercontent.com/u/20959853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drpngx", "html_url": "https://github.com/drpngx", "followers_url": "https://api.github.com/users/drpngx/followers", "following_url": "https://api.github.com/users/drpngx/following{/other_user}", "gists_url": "https://api.github.com/users/drpngx/gists{/gist_id}", "starred_url": "https://api.github.com/users/drpngx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drpngx/subscriptions", "organizations_url": "https://api.github.com/users/drpngx/orgs", "repos_url": "https://api.github.com/users/drpngx/repos", "events_url": "https://api.github.com/users/drpngx/events{/privacy}", "received_events_url": "https://api.github.com/users/drpngx/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "drpngx", "id": 20959853, "node_id": "MDQ6VXNlcjIwOTU5ODUz", "avatar_url": "https://avatars1.githubusercontent.com/u/20959853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drpngx", "html_url": "https://github.com/drpngx", "followers_url": "https://api.github.com/users/drpngx/followers", "following_url": "https://api.github.com/users/drpngx/following{/other_user}", "gists_url": "https://api.github.com/users/drpngx/gists{/gist_id}", "starred_url": "https://api.github.com/users/drpngx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drpngx/subscriptions", "organizations_url": "https://api.github.com/users/drpngx/orgs", "repos_url": "https://api.github.com/users/drpngx/repos", "events_url": "https://api.github.com/users/drpngx/events{/privacy}", "received_events_url": "https://api.github.com/users/drpngx/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2018-07-23T12:50:32Z", "updated_at": "2018-11-22T18:57:27Z", "closed_at": null, "author_association": "NONE", "body_html": "<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:<br>\nYes, see this issue. <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"343029033\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/20990\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/20990/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/20990\">#20990</a></li>\n</ul>\n<p>The documentation of Session.run from tensorflow:</p>\n<pre><code>run(\n    fetches,\n    feed_dict=None,\n    options=None,\n    run_metadata=None\n)\n</code></pre>\n<blockquote>\n<p>Runs operations and evaluates tensors in fetches.</p>\n<p>This method runs one \"step\" of TensorFlow computation, by running the necessary graph fragment to execute every Operation and evaluate every Tensor in fetches, substituting the values in feed_dict for the corresponding input values.</p>\n<p>The fetches argument may be a single graph element, or an arbitrarily nested list, tuple, namedtuple, dict, or OrderedDict containing graph elements at its leaves. A graph element can be one of the following types:</p>\n<pre><code>**An tf.Operation. The corresponding fetched value will be None.**\nA tf.Tensor. The corresponding fetched value will be a numpy ndarray containing the value of that tensor.\nA tf.SparseTensor. The corresponding fetched value will be a tf.SparseTensorValue containing the value of that sparse tensor.\nA get_tensor_handle op. The corresponding fetched value will be a numpy ndarray containing the handle of that tensor.\nA string which is the name of a tensor or operation in the graph.\n</code></pre>\n</blockquote>\n<p>I was stuck for quite a while on this issue, due to a<code>sess.run()</code>returning <code>None</code> all the time and not raising any exception.<br>\nI don't quite get the design intention under such a behaviour:<br>\n<code>Session.run()</code> is expected to return values. But it return <code>None</code> for <code>tf.operation</code><br>\nNot raising any exception, nor outputing any information make you think it is okay to call <code>sess.run()</code> on your parameter and that the issue is not on this function call.<br>\nWhy is it okay to allow user to call this method with parameter that will result in no effect?<br>\nAlso, as <code>tf.Operation</code> is a tensorflow type, wouldn't it be possible to automatically call for its <code>.values()</code> in the <code>Session.run()</code> instead of returning a <code>None</code>?</p>", "body_text": "Have I written custom code (as opposed to using a stock example script provided in TensorFlow):\nYes, see this issue. #20990\n\nThe documentation of Session.run from tensorflow:\nrun(\n    fetches,\n    feed_dict=None,\n    options=None,\n    run_metadata=None\n)\n\n\nRuns operations and evaluates tensors in fetches.\nThis method runs one \"step\" of TensorFlow computation, by running the necessary graph fragment to execute every Operation and evaluate every Tensor in fetches, substituting the values in feed_dict for the corresponding input values.\nThe fetches argument may be a single graph element, or an arbitrarily nested list, tuple, namedtuple, dict, or OrderedDict containing graph elements at its leaves. A graph element can be one of the following types:\n**An tf.Operation. The corresponding fetched value will be None.**\nA tf.Tensor. The corresponding fetched value will be a numpy ndarray containing the value of that tensor.\nA tf.SparseTensor. The corresponding fetched value will be a tf.SparseTensorValue containing the value of that sparse tensor.\nA get_tensor_handle op. The corresponding fetched value will be a numpy ndarray containing the handle of that tensor.\nA string which is the name of a tensor or operation in the graph.\n\n\nI was stuck for quite a while on this issue, due to asess.run()returning None all the time and not raising any exception.\nI don't quite get the design intention under such a behaviour:\nSession.run() is expected to return values. But it return None for tf.operation\nNot raising any exception, nor outputing any information make you think it is okay to call sess.run() on your parameter and that the issue is not on this function call.\nWhy is it okay to allow user to call this method with parameter that will result in no effect?\nAlso, as tf.Operation is a tensorflow type, wouldn't it be possible to automatically call for its .values() in the Session.run() instead of returning a None?", "body": "- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nYes, see this issue. https://github.com/tensorflow/tensorflow/issues/20990\r\n\r\nThe documentation of Session.run from tensorflow:\r\n```\r\nrun(\r\n    fetches,\r\n    feed_dict=None,\r\n    options=None,\r\n    run_metadata=None\r\n)\r\n```\r\n> Runs operations and evaluates tensors in fetches.\r\n> \r\n> This method runs one \"step\" of TensorFlow computation, by running the necessary graph fragment to execute every Operation and evaluate every Tensor in fetches, substituting the values in feed_dict for the corresponding input values.\r\n> \r\n> The fetches argument may be a single graph element, or an arbitrarily nested list, tuple, namedtuple, dict, or OrderedDict containing graph elements at its leaves. A graph element can be one of the following types:\r\n> \r\n>     **An tf.Operation. The corresponding fetched value will be None.**\r\n>     A tf.Tensor. The corresponding fetched value will be a numpy ndarray containing the value of that tensor.\r\n>     A tf.SparseTensor. The corresponding fetched value will be a tf.SparseTensorValue containing the value of that sparse tensor.\r\n>     A get_tensor_handle op. The corresponding fetched value will be a numpy ndarray containing the handle of that tensor.\r\n>     A string which is the name of a tensor or operation in the graph.\r\n\r\nI was stuck for quite a while on this issue, due to a` sess.run() `returning `None` all the time and not raising any exception.\r\nI don't quite get the design intention under such a behaviour:\r\n`Session.run()` is expected to return values. But it return `None` for `tf.operation`\r\nNot raising any exception, nor outputing any information make you think it is okay to call `sess.run()` on your parameter and that the issue is not on this function call.\r\nWhy is it okay to allow user to call this method with parameter that will result in no effect?\r\nAlso, as `tf.Operation` is a tensorflow type, wouldn't it be possible to automatically call for its `.values()` in the `Session.run()` instead of returning a `None`?\r\n"}