{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/408516914", "html_url": "https://github.com/tensorflow/tensorflow/issues/20146#issuecomment-408516914", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20146", "id": 408516914, "node_id": "MDEyOklzc3VlQ29tbWVudDQwODUxNjkxNA==", "user": {"login": "nikhilmishra000", "id": 9015977, "node_id": "MDQ6VXNlcjkwMTU5Nzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/9015977?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikhilmishra000", "html_url": "https://github.com/nikhilmishra000", "followers_url": "https://api.github.com/users/nikhilmishra000/followers", "following_url": "https://api.github.com/users/nikhilmishra000/following{/other_user}", "gists_url": "https://api.github.com/users/nikhilmishra000/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikhilmishra000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikhilmishra000/subscriptions", "organizations_url": "https://api.github.com/users/nikhilmishra000/orgs", "repos_url": "https://api.github.com/users/nikhilmishra000/repos", "events_url": "https://api.github.com/users/nikhilmishra000/events{/privacy}", "received_events_url": "https://api.github.com/users/nikhilmishra000/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-27T19:28:25Z", "updated_at": "2018-07-27T19:28:40Z", "author_association": "CONTRIBUTOR", "body_html": "<p><code>tf.while_loop</code> doesn't make sense here but you could speed this up through better use of numpy functions.</p>\n<p>I would suggest using <code>np.meshgrid</code> to create the initial set of indices (this would give you an array of shape <code>(cols_out, rows_out, 2)</code> corresponding to the values taken by <code>i</code> and <code>j</code>). Then the body of the loop could be expressed via elementwise operations on that array.</p>", "body_text": "tf.while_loop doesn't make sense here but you could speed this up through better use of numpy functions.\nI would suggest using np.meshgrid to create the initial set of indices (this would give you an array of shape (cols_out, rows_out, 2) corresponding to the values taken by i and j). Then the body of the loop could be expressed via elementwise operations on that array.", "body": "`tf.while_loop` doesn't make sense here but you could speed this up through better use of numpy functions.\r\n\r\nI would suggest using `np.meshgrid` to create the initial set of indices (this would give you an array of shape `(cols_out, rows_out, 2)` corresponding to the values taken by `i` and `j`). Then the body of the loop could be expressed via elementwise operations on that array."}