{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21417", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21417/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21417/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21417/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21417", "id": 348055866, "node_id": "MDU6SXNzdWUzNDgwNTU4NjY=", "number": 21417, "title": "Discrepancy between Python and C++ loading of corrupt SavedModels", "user": {"login": "priyankjain", "id": 4019056, "node_id": "MDQ6VXNlcjQwMTkwNTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/4019056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/priyankjain", "html_url": "https://github.com/priyankjain", "followers_url": "https://api.github.com/users/priyankjain/followers", "following_url": "https://api.github.com/users/priyankjain/following{/other_user}", "gists_url": "https://api.github.com/users/priyankjain/gists{/gist_id}", "starred_url": "https://api.github.com/users/priyankjain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/priyankjain/subscriptions", "organizations_url": "https://api.github.com/users/priyankjain/orgs", "repos_url": "https://api.github.com/users/priyankjain/repos", "events_url": "https://api.github.com/users/priyankjain/events{/privacy}", "received_events_url": "https://api.github.com/users/priyankjain/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "karmel", "id": 667809, "node_id": "MDQ6VXNlcjY2NzgwOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/667809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karmel", "html_url": "https://github.com/karmel", "followers_url": "https://api.github.com/users/karmel/followers", "following_url": "https://api.github.com/users/karmel/following{/other_user}", "gists_url": "https://api.github.com/users/karmel/gists{/gist_id}", "starred_url": "https://api.github.com/users/karmel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karmel/subscriptions", "organizations_url": "https://api.github.com/users/karmel/orgs", "repos_url": "https://api.github.com/users/karmel/repos", "events_url": "https://api.github.com/users/karmel/events{/privacy}", "received_events_url": "https://api.github.com/users/karmel/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "karmel", "id": 667809, "node_id": "MDQ6VXNlcjY2NzgwOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/667809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karmel", "html_url": "https://github.com/karmel", "followers_url": "https://api.github.com/users/karmel/followers", "following_url": "https://api.github.com/users/karmel/following{/other_user}", "gists_url": "https://api.github.com/users/karmel/gists{/gist_id}", "starred_url": "https://api.github.com/users/karmel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karmel/subscriptions", "organizations_url": "https://api.github.com/users/karmel/orgs", "repos_url": "https://api.github.com/users/karmel/repos", "events_url": "https://api.github.com/users/karmel/events{/privacy}", "received_events_url": "https://api.github.com/users/karmel/received_events", "type": "User", "site_admin": false}, {"login": "priyankjain", "id": 4019056, "node_id": "MDQ6VXNlcjQwMTkwNTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/4019056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/priyankjain", "html_url": "https://github.com/priyankjain", "followers_url": "https://api.github.com/users/priyankjain/followers", "following_url": "https://api.github.com/users/priyankjain/following{/other_user}", "gists_url": "https://api.github.com/users/priyankjain/gists{/gist_id}", "starred_url": "https://api.github.com/users/priyankjain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/priyankjain/subscriptions", "organizations_url": "https://api.github.com/users/priyankjain/orgs", "repos_url": "https://api.github.com/users/priyankjain/repos", "events_url": "https://api.github.com/users/priyankjain/events{/privacy}", "received_events_url": "https://api.github.com/users/priyankjain/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 13, "created_at": "2018-08-06T19:40:03Z", "updated_at": "2018-11-19T23:26:12Z", "closed_at": null, "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: YES</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: MacOS High Seirra 10.13.6</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>: NOT MOBILE</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: ('v1.9.0-0-g25c197e023', '1.9.0')</li>\n<li><strong>Python version</strong>:Python 2.7.10</li>\n<li><strong>Bazel version (if compiling from source)</strong>: N/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: N/A</li>\n<li><strong>CUDA/cuDNN version</strong>: N/A</li>\n<li><strong>GPU model and memory</strong>: N/A</li>\n<li><strong>Exact command to reproduce</strong>:\n<ul>\n<li>\n<p>Train and export the MNIST model with <code>python mnist.py</code>. This will export a model in tmp directory in the same folder as mnist.py script.</p>\n</li>\n<li>\n<p>Remove the variables.index file from ./tmp/mnist_model/15*/variables/ folder. This is an important step required to reproduce the partial model load issue.</p>\n</li>\n<li>\n<p>Load the model in python with load.py (might want to change path on line 6) by executing<br>\n<code>python load.py</code>. This should throw an error. Expected behavior.</p>\n</li>\n<li>\n<p>Load the model in java with Load.java (might want to change path on line 6) by executing<br>\n<code>javac -cp libtensorflow-1.9.0.jar Load.java</code> and<br>\n<code>java -cp libtensorflow-1.9.0.jar:. -Djava.library.path=./jni Load</code>. This does not throw an error. Only when you send some input data to this model does it throw an error. Unexpected behavior.</p>\n</li>\n</ul>\n</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>This bug is to illustrate the partial model load discrepancy in the Python and Java API.</p>\n<ul>\n<li>\n<p>The exported model directory consists of a saved_model.pb file corresponding to the<br>\ngraph of the exported model. The directory also consists of a variables directory. This variables<br>\ndirectory consists of a variables.index file which list the variables used by the model and a variables.data file. Note that it is possible to have a model with no variables directory for a model with zero variables.</p>\n</li>\n<li>\n<p>Situation: In cases where model does not have the variables.index file, Python API throws an exception whereas Java API doesn't throw an exception.</p>\n</li>\n</ul>\n<p>If you load the partial model in Python with</p>\n<p><code>tf.saved_model.loader.load</code><br>\nthe missing variables.index file issue is caught and it throws an error. This is because, in python when it loads the model, it restores the variables too: <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/saved_model/loader_impl.py#L349\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/saved_model/loader_impl.py#L349</a>. It sees that some of the variables needed in the graph, are not specified via the variables.index file, hence results in UndefinedError.</p>\n<p>If you load the partial model in Java with</p>\n<p><code>SavedModelBundle.load</code><br>\nthe missing variables.index file issue is not caught and therefore it does not throw an error. This is because in Java, when it loads the model: <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/cc/saved_model/loader.cc#L171\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/cc/saved_model/loader.cc#L171</a>, it sees that the variables.index file is missing, hence makes the assumption that the graph does not have any variables.</p>\n<h3>Source code / logs</h3>\n<p>mnist.py</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n\n<span class=\"pl-k\">from</span> tensorflow.examples.tutorials.mnist <span class=\"pl-k\">import</span> input_data\nmnist <span class=\"pl-k\">=</span> input_data.read_data_sets(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>MNIST_data<span class=\"pl-pds\">'</span></span>)\n\n<span class=\"pl-k\">def</span> <span class=\"pl-c1\">input</span>(<span class=\"pl-smi\">dataset</span>):\n    <span class=\"pl-k\">return</span> dataset.images, dataset.labels.astype(np.int32)\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Specify feature</span>\nfeature_columns <span class=\"pl-k\">=</span> [tf.feature_column.numeric_column(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>x<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">28</span>, <span class=\"pl-c1\">28</span>])]\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Build 2 layer DNN classifier</span>\nclassifier <span class=\"pl-k\">=</span> tf.estimator.DNNClassifier(\n    <span class=\"pl-v\">feature_columns</span><span class=\"pl-k\">=</span>feature_columns,\n    <span class=\"pl-v\">hidden_units</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">256</span>, <span class=\"pl-c1\">32</span>],\n    <span class=\"pl-v\">optimizer</span><span class=\"pl-k\">=</span>tf.train.AdamOptimizer(<span class=\"pl-c1\">1e-4</span>),\n    <span class=\"pl-v\">n_classes</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">10</span>,\n    <span class=\"pl-v\">dropout</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0.1</span>,\n    <span class=\"pl-v\">model_dir</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>./tmp/mnist_model<span class=\"pl-pds\">\"</span></span>\n)\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Define the training inputs</span>\ntrain_input_fn <span class=\"pl-k\">=</span> tf.estimator.inputs.numpy_input_fn(\n    <span class=\"pl-v\">x</span><span class=\"pl-k\">=</span>{<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>x<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-c1\">input</span>(mnist.train)[<span class=\"pl-c1\">0</span>]},\n    <span class=\"pl-v\">y</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">input</span>(mnist.train)[<span class=\"pl-c1\">1</span>],\n    <span class=\"pl-v\">num_epochs</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">None</span>,\n    <span class=\"pl-v\">batch_size</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">50</span>,\n    <span class=\"pl-v\">shuffle</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>\n)\n\nclassifier.train(<span class=\"pl-v\">input_fn</span><span class=\"pl-k\">=</span>train_input_fn, <span class=\"pl-v\">steps</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">100</span>)\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Define the test inputs</span>\ntest_input_fn <span class=\"pl-k\">=</span> tf.estimator.inputs.numpy_input_fn(\n    <span class=\"pl-v\">x</span><span class=\"pl-k\">=</span>{<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>x<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-c1\">input</span>(mnist.test)[<span class=\"pl-c1\">0</span>]},\n    <span class=\"pl-v\">y</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">input</span>(mnist.test)[<span class=\"pl-c1\">1</span>],\n    <span class=\"pl-v\">num_epochs</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>,\n    <span class=\"pl-v\">shuffle</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">False</span>\n)\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Evaluate accuracy</span>\naccuracy_score <span class=\"pl-k\">=</span> classifier.evaluate(<span class=\"pl-v\">input_fn</span><span class=\"pl-k\">=</span>test_input_fn)[<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>accuracy<span class=\"pl-pds\">\"</span></span>]\n<span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\n</span>Test Accuracy: <span class=\"pl-c1\">{0<span class=\"pl-k\">:f</span>}</span>%<span class=\"pl-cce\">\\n</span><span class=\"pl-pds\">\"</span></span>.format(accuracy_score<span class=\"pl-k\">*</span><span class=\"pl-c1\">100</span>))\nimage <span class=\"pl-k\">=</span> tf.placeholder(tf.float32,[<span class=\"pl-c1\">None</span>])\nclassifier.export_savedmodel(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>./tmp/mnist_model<span class=\"pl-pds\">\"</span></span>, \n\ttf.estimator.export.build_raw_serving_input_receiver_fn({<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>x<span class=\"pl-pds\">\"</span></span>:image}))</pre></div>\n<p>load.py (might want to change path in line 6)</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf \n\nsess <span class=\"pl-k\">=</span> tf.Session()\ntf.saved_model.loader.load(sess, \n\t[tf.saved_model.tag_constants.<span class=\"pl-c1\">SERVING</span>],\n\t<span class=\"pl-s\"><span class=\"pl-pds\">'</span>./tmp/mnist_model/1533576273<span class=\"pl-pds\">'</span></span>)</pre></div>\n<p>Load.java (might want to change path in line 6)</p>\n<div class=\"highlight highlight-source-java\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-smi\">org.tensorflow.SavedModelBundle</span>;\n\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-en\">Load</span> {\n  <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">void</span> <span class=\"pl-en\">main</span>(<span class=\"pl-k\">String</span>[] <span class=\"pl-v\">args</span>) <span class=\"pl-k\">throws</span> <span class=\"pl-smi\">Exception</span> {\n  \t<span class=\"pl-smi\">SavedModelBundle</span> savedModelBundle <span class=\"pl-k\">=</span> <span class=\"pl-smi\">SavedModelBundle</span><span class=\"pl-k\">.</span>load(\n  \t\t<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>./tmp/mnist_model/1533576273/<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>serve<span class=\"pl-pds\">\"</span></span>);\n  }\n}</pre></div>\n<p>Here's the output when loading the model in python:</p>\n<div class=\"highlight highlight-source-shell\"><pre>$ python load.py\n/Users/priyankj/lib/python2.7/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from <span class=\"pl-s\"><span class=\"pl-pds\">`</span>float<span class=\"pl-pds\">`</span></span> to <span class=\"pl-s\"><span class=\"pl-pds\">`</span>np.floating<span class=\"pl-pds\">`</span></span> is deprecated. In future, it will be treated as <span class=\"pl-s\"><span class=\"pl-pds\">`</span>np.float64 == np.dtype(float).type<span class=\"pl-pds\">`</span></span>.\n  from ._conv import register_converters as _register_converters\n2018-08-06 15:27:37.363952: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA\n2018-08-06 15:27:37.411644: W tensorflow/core/framework/op_kernel.cc:1318] OP_REQUIRES failed at save_restore_tensor.cc:170 <span class=\"pl-c1\">:</span> Not found: Unsuccessful TensorSliceReader constructor: Failed to find any matching files <span class=\"pl-k\">for</span> ./tmp/mnist_model/1533576273/variables/variables\nTraceback (most recent call last):\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>load.py<span class=\"pl-pds\">\"</span></span>, line 6, <span class=\"pl-k\">in</span> <span class=\"pl-k\">&lt;</span>module<span class=\"pl-k\">&gt;</span>\n    <span class=\"pl-s\"><span class=\"pl-pds\">'</span>./tmp/mnist_model/1533576273<span class=\"pl-pds\">'</span></span>)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/saved_model/loader_impl.py<span class=\"pl-pds\">\"</span></span>, line 229, <span class=\"pl-k\">in</span> load\n    saver.restore(sess, variables_path)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/training/saver.py<span class=\"pl-pds\">\"</span></span>, line 1768, <span class=\"pl-k\">in</span> restore\n    six.reraise(exception_type, exception_value, exception_traceback)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/training/saver.py<span class=\"pl-pds\">\"</span></span>, line 1752, <span class=\"pl-k\">in</span> restore\n    {self.saver_def.filename_tensor_name: save_path})\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/client/session.py<span class=\"pl-pds\">\"</span></span>, line 900, <span class=\"pl-k\">in</span> run\n    run_metadata_ptr)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/client/session.py<span class=\"pl-pds\">\"</span></span>, line 1135, <span class=\"pl-k\">in</span> _run\n    feed_dict_tensor, options, run_metadata)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/client/session.py<span class=\"pl-pds\">\"</span></span>, line 1316, <span class=\"pl-k\">in</span> _do_run\n    run_metadata)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/client/session.py<span class=\"pl-pds\">\"</span></span>, line 1335, <span class=\"pl-k\">in</span> _do_call\n    raise type(e)(node_def, op, message)\ntensorflow.python.framework.errors_impl.NotFoundError: Unsuccessful TensorSliceReader constructor: Failed to find any matching files <span class=\"pl-k\">for</span> ./tmp/mnist_model/1533576273/variables/variables\n\t [[Node: save_1/RestoreV2 <span class=\"pl-k\">=</span> RestoreV2[dtypes<span class=\"pl-k\">=</span>[DT_FLOAT, DT_FLOAT, DT_FLOAT, DT_FLOAT, DT_FLOAT, DT_FLOAT, DT_INT64], _device<span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/job:localhost/replica:0/task:0/device:CPU:0<span class=\"pl-pds\">\"</span></span>](_arg_save_1/Const_0_0, save_1/RestoreV2/tensor_names, save_1/RestoreV2/shape_and_slices)]]\n\nCaused by op u<span class=\"pl-s\"><span class=\"pl-pds\">'</span>save_1/RestoreV2<span class=\"pl-pds\">'</span></span>, defined at:\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>load.py<span class=\"pl-pds\">\"</span></span>, line 6, <span class=\"pl-k\">in</span> <span class=\"pl-k\">&lt;</span>module<span class=\"pl-k\">&gt;</span>\n    <span class=\"pl-s\"><span class=\"pl-pds\">'</span>./tmp/mnist_model/1533576273<span class=\"pl-pds\">'</span></span>)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/saved_model/loader_impl.py<span class=\"pl-pds\">\"</span></span>, line 219, <span class=\"pl-k\">in</span> load\n    saver = tf_saver.import_meta_graph(meta_graph_def_to_load, <span class=\"pl-k\">**</span>saver_kwargs)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/training/saver.py<span class=\"pl-pds\">\"</span></span>, line 1960, <span class=\"pl-k\">in</span> import_meta_graph\n    <span class=\"pl-k\">**</span>kwargs)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/framework/meta_graph.py<span class=\"pl-pds\">\"</span></span>, line 744, <span class=\"pl-k\">in</span> import_scoped_meta_graph\n    producer_op_list=producer_op_list)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/util/deprecation.py<span class=\"pl-pds\">\"</span></span>, line 432, <span class=\"pl-k\">in</span> new_func\n    <span class=\"pl-k\">return</span> func(<span class=\"pl-k\">*</span>args, <span class=\"pl-k\">**</span>kwargs)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/framework/importer.py<span class=\"pl-pds\">\"</span></span>, line 442, <span class=\"pl-k\">in</span> import_graph_def\n    _ProcessNewOps(graph)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/framework/importer.py<span class=\"pl-pds\">\"</span></span>, line 234, <span class=\"pl-k\">in</span> _ProcessNewOps\n    <span class=\"pl-k\">for</span> <span class=\"pl-smi\">new_op</span> <span class=\"pl-k\">in</span> graph._add_new_tf_operations(compute_devices=False):  <span class=\"pl-c\"><span class=\"pl-c\">#</span> pylint: disable=protected-access</span>\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/framework/ops.py<span class=\"pl-pds\">\"</span></span>, line 3563, <span class=\"pl-k\">in</span> _add_new_tf_operations\n    <span class=\"pl-k\">for</span> <span class=\"pl-smi\">c_op</span> <span class=\"pl-k\">in</span> c_api_util.new_tf_operations(self)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/framework/ops.py<span class=\"pl-pds\">\"</span></span>, line 3450, <span class=\"pl-k\">in</span> _create_op_from_tf_operation\n    ret = Operation(c_op, self)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/framework/ops.py<span class=\"pl-pds\">\"</span></span>, line 1740, <span class=\"pl-k\">in</span> __init__\n    self._traceback = <span class=\"pl-en\">self._graph._extract_stack</span>()  <span class=\"pl-c\"><span class=\"pl-c\">#</span> pylint: disable=protected-access</span>\n\nNotFoundError (see above <span class=\"pl-k\">for</span> traceback): Unsuccessful TensorSliceReader constructor: Failed to find any matching files <span class=\"pl-k\">for</span> ./tmp/mnist_model/1533576273/variables/variables\n\t [[Node: save_1/RestoreV2 <span class=\"pl-k\">=</span> RestoreV2[dtypes<span class=\"pl-k\">=</span>[DT_FLOAT, DT_FLOAT, DT_FLOAT, DT_FLOAT, DT_FLOAT, DT_FLOAT, DT_INT64], _device<span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/job:localhost/replica:0/task:0/device:CPU:0<span class=\"pl-pds\">\"</span></span>](_arg_save_1/Const_0_0, save_1/RestoreV2/tensor_names, save_1/RestoreV2/shape_and_slices)]]</pre></div>\n<p>Here's the output of loading the model in Java:</p>\n<div class=\"highlight highlight-source-shell\"><pre>$ javac -cp libtensorflow-1.9.0.jar Load.java\n$ java -cp libtensorflow-1.9.0.jar:. -Djava.library.path=./jni Load\n2018-08-06 14:56:48.242783: I tensorflow/cc/saved_model/loader.cc:242] Loading SavedModel with tags: { serve }<span class=\"pl-k\">;</span> from: ./tmp/mnist_model/1533576273/\n2018-08-06 14:56:48.244329: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.2 AVX AVX2 FMA\n2018-08-06 14:56:48.246854: I tensorflow/cc/saved_model/loader.cc:161] Restoring SavedModel bundle.\n2018-08-06 14:56:48.246888: I tensorflow/cc/saved_model/loader.cc:171] The specified SavedModel has no variables<span class=\"pl-k\">;</span> no checkpoints were restored.\n2018-08-06 14:56:48.246894: I tensorflow/cc/saved_model/loader.cc:196] Running LegacyInitOp on SavedModel bundle.\n2018-08-06 14:56:48.250752: I tensorflow/cc/saved_model/loader.cc:291] SavedModel load <span class=\"pl-k\">for</span> tags { serve }<span class=\"pl-k\">;</span> Status: success. Took 8012 microseconds.</pre></div>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): YES\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): MacOS High Seirra 10.13.6\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: NOT MOBILE\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): ('v1.9.0-0-g25c197e023', '1.9.0')\nPython version:Python 2.7.10\nBazel version (if compiling from source): N/A\nGCC/Compiler version (if compiling from source): N/A\nCUDA/cuDNN version: N/A\nGPU model and memory: N/A\nExact command to reproduce:\n\n\nTrain and export the MNIST model with python mnist.py. This will export a model in tmp directory in the same folder as mnist.py script.\n\n\nRemove the variables.index file from ./tmp/mnist_model/15*/variables/ folder. This is an important step required to reproduce the partial model load issue.\n\n\nLoad the model in python with load.py (might want to change path on line 6) by executing\npython load.py. This should throw an error. Expected behavior.\n\n\nLoad the model in java with Load.java (might want to change path on line 6) by executing\njavac -cp libtensorflow-1.9.0.jar Load.java and\njava -cp libtensorflow-1.9.0.jar:. -Djava.library.path=./jni Load. This does not throw an error. Only when you send some input data to this model does it throw an error. Unexpected behavior.\n\n\n\n\nDescribe the problem\nThis bug is to illustrate the partial model load discrepancy in the Python and Java API.\n\n\nThe exported model directory consists of a saved_model.pb file corresponding to the\ngraph of the exported model. The directory also consists of a variables directory. This variables\ndirectory consists of a variables.index file which list the variables used by the model and a variables.data file. Note that it is possible to have a model with no variables directory for a model with zero variables.\n\n\nSituation: In cases where model does not have the variables.index file, Python API throws an exception whereas Java API doesn't throw an exception.\n\n\nIf you load the partial model in Python with\ntf.saved_model.loader.load\nthe missing variables.index file issue is caught and it throws an error. This is because, in python when it loads the model, it restores the variables too: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/saved_model/loader_impl.py#L349. It sees that some of the variables needed in the graph, are not specified via the variables.index file, hence results in UndefinedError.\nIf you load the partial model in Java with\nSavedModelBundle.load\nthe missing variables.index file issue is not caught and therefore it does not throw an error. This is because in Java, when it loads the model: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/cc/saved_model/loader.cc#L171, it sees that the variables.index file is missing, hence makes the assumption that the graph does not have any variables.\nSource code / logs\nmnist.py\nimport tensorflow as tf\nimport numpy as np\n\nfrom tensorflow.examples.tutorials.mnist import input_data\nmnist = input_data.read_data_sets('MNIST_data')\n\ndef input(dataset):\n    return dataset.images, dataset.labels.astype(np.int32)\n\n# Specify feature\nfeature_columns = [tf.feature_column.numeric_column(\"x\", shape=[28, 28])]\n\n# Build 2 layer DNN classifier\nclassifier = tf.estimator.DNNClassifier(\n    feature_columns=feature_columns,\n    hidden_units=[256, 32],\n    optimizer=tf.train.AdamOptimizer(1e-4),\n    n_classes=10,\n    dropout=0.1,\n    model_dir=\"./tmp/mnist_model\"\n)\n\n# Define the training inputs\ntrain_input_fn = tf.estimator.inputs.numpy_input_fn(\n    x={\"x\": input(mnist.train)[0]},\n    y=input(mnist.train)[1],\n    num_epochs=None,\n    batch_size=50,\n    shuffle=True\n)\n\nclassifier.train(input_fn=train_input_fn, steps=100)\n\n# Define the test inputs\ntest_input_fn = tf.estimator.inputs.numpy_input_fn(\n    x={\"x\": input(mnist.test)[0]},\n    y=input(mnist.test)[1],\n    num_epochs=1,\n    shuffle=False\n)\n\n# Evaluate accuracy\naccuracy_score = classifier.evaluate(input_fn=test_input_fn)[\"accuracy\"]\nprint(\"\\nTest Accuracy: {0:f}%\\n\".format(accuracy_score*100))\nimage = tf.placeholder(tf.float32,[None])\nclassifier.export_savedmodel(\"./tmp/mnist_model\", \n\ttf.estimator.export.build_raw_serving_input_receiver_fn({\"x\":image}))\nload.py (might want to change path in line 6)\nimport tensorflow as tf \n\nsess = tf.Session()\ntf.saved_model.loader.load(sess, \n\t[tf.saved_model.tag_constants.SERVING],\n\t'./tmp/mnist_model/1533576273')\nLoad.java (might want to change path in line 6)\nimport org.tensorflow.SavedModelBundle;\n\npublic class Load {\n  public static void main(String[] args) throws Exception {\n  \tSavedModelBundle savedModelBundle = SavedModelBundle.load(\n  \t\t\"./tmp/mnist_model/1533576273/\", \"serve\");\n  }\n}\nHere's the output when loading the model in python:\n$ python load.py\n/Users/priyankj/lib/python2.7/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.\n  from ._conv import register_converters as _register_converters\n2018-08-06 15:27:37.363952: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA\n2018-08-06 15:27:37.411644: W tensorflow/core/framework/op_kernel.cc:1318] OP_REQUIRES failed at save_restore_tensor.cc:170 : Not found: Unsuccessful TensorSliceReader constructor: Failed to find any matching files for ./tmp/mnist_model/1533576273/variables/variables\nTraceback (most recent call last):\n  File \"load.py\", line 6, in <module>\n    './tmp/mnist_model/1533576273')\n  File \"/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/saved_model/loader_impl.py\", line 229, in load\n    saver.restore(sess, variables_path)\n  File \"/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/training/saver.py\", line 1768, in restore\n    six.reraise(exception_type, exception_value, exception_traceback)\n  File \"/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/training/saver.py\", line 1752, in restore\n    {self.saver_def.filename_tensor_name: save_path})\n  File \"/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 900, in run\n    run_metadata_ptr)\n  File \"/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 1135, in _run\n    feed_dict_tensor, options, run_metadata)\n  File \"/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 1316, in _do_run\n    run_metadata)\n  File \"/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 1335, in _do_call\n    raise type(e)(node_def, op, message)\ntensorflow.python.framework.errors_impl.NotFoundError: Unsuccessful TensorSliceReader constructor: Failed to find any matching files for ./tmp/mnist_model/1533576273/variables/variables\n\t [[Node: save_1/RestoreV2 = RestoreV2[dtypes=[DT_FLOAT, DT_FLOAT, DT_FLOAT, DT_FLOAT, DT_FLOAT, DT_FLOAT, DT_INT64], _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](_arg_save_1/Const_0_0, save_1/RestoreV2/tensor_names, save_1/RestoreV2/shape_and_slices)]]\n\nCaused by op u'save_1/RestoreV2', defined at:\n  File \"load.py\", line 6, in <module>\n    './tmp/mnist_model/1533576273')\n  File \"/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/saved_model/loader_impl.py\", line 219, in load\n    saver = tf_saver.import_meta_graph(meta_graph_def_to_load, **saver_kwargs)\n  File \"/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/training/saver.py\", line 1960, in import_meta_graph\n    **kwargs)\n  File \"/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/framework/meta_graph.py\", line 744, in import_scoped_meta_graph\n    producer_op_list=producer_op_list)\n  File \"/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/util/deprecation.py\", line 432, in new_func\n    return func(*args, **kwargs)\n  File \"/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/framework/importer.py\", line 442, in import_graph_def\n    _ProcessNewOps(graph)\n  File \"/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/framework/importer.py\", line 234, in _ProcessNewOps\n    for new_op in graph._add_new_tf_operations(compute_devices=False):  # pylint: disable=protected-access\n  File \"/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 3563, in _add_new_tf_operations\n    for c_op in c_api_util.new_tf_operations(self)\n  File \"/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 3450, in _create_op_from_tf_operation\n    ret = Operation(c_op, self)\n  File \"/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1740, in __init__\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\n\nNotFoundError (see above for traceback): Unsuccessful TensorSliceReader constructor: Failed to find any matching files for ./tmp/mnist_model/1533576273/variables/variables\n\t [[Node: save_1/RestoreV2 = RestoreV2[dtypes=[DT_FLOAT, DT_FLOAT, DT_FLOAT, DT_FLOAT, DT_FLOAT, DT_FLOAT, DT_INT64], _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](_arg_save_1/Const_0_0, save_1/RestoreV2/tensor_names, save_1/RestoreV2/shape_and_slices)]]\nHere's the output of loading the model in Java:\n$ javac -cp libtensorflow-1.9.0.jar Load.java\n$ java -cp libtensorflow-1.9.0.jar:. -Djava.library.path=./jni Load\n2018-08-06 14:56:48.242783: I tensorflow/cc/saved_model/loader.cc:242] Loading SavedModel with tags: { serve }; from: ./tmp/mnist_model/1533576273/\n2018-08-06 14:56:48.244329: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.2 AVX AVX2 FMA\n2018-08-06 14:56:48.246854: I tensorflow/cc/saved_model/loader.cc:161] Restoring SavedModel bundle.\n2018-08-06 14:56:48.246888: I tensorflow/cc/saved_model/loader.cc:171] The specified SavedModel has no variables; no checkpoints were restored.\n2018-08-06 14:56:48.246894: I tensorflow/cc/saved_model/loader.cc:196] Running LegacyInitOp on SavedModel bundle.\n2018-08-06 14:56:48.250752: I tensorflow/cc/saved_model/loader.cc:291] SavedModel load for tags { serve }; Status: success. Took 8012 microseconds.", "body": "\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: YES\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: MacOS High Seirra 10.13.6\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**: NOT MOBILE\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: ('v1.9.0-0-g25c197e023', '1.9.0')\r\n- **Python version**:Python 2.7.10\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: \r\n \t- Train and export the MNIST model with `python mnist.py`. This will export a model in tmp directory in the same folder as mnist.py script.\r\n\r\n \t-  Remove the variables.index file from ./tmp/mnist_model/15*/variables/ folder. This is an important step required to reproduce the partial model load issue.\r\n\t- Load the model in python with load.py (might want to change path on line 6) by executing\r\n\t`python load.py`. This should throw an error. Expected behavior.\r\n\t- Load the model in java with Load.java (might want to change path on line 6) by executing\r\n\t`javac -cp libtensorflow-1.9.0.jar Load.java` and\r\n\t`java -cp libtensorflow-1.9.0.jar:. -Djava.library.path=./jni Load`. This does not throw an error. Only when you send some input data to this model does it throw an error. Unexpected behavior.\r\n\r\n### Describe the problem\r\nThis bug is to illustrate the partial model load discrepancy in the Python and Java API.\r\n\r\n- The exported model directory consists of a saved_model.pb file corresponding to the \r\ngraph of the exported model. The directory also consists of a variables directory. This variables\r\ndirectory consists of a variables.index file which list the variables used by the model and a variables.data file. Note that it is possible to have a model with no variables directory for a model with zero variables.\r\n\r\n\r\n- Situation: In cases where model does not have the variables.index file, Python API throws an exception whereas Java API doesn't throw an exception.\r\n\r\nIf you load the partial model in Python with\r\n\r\n`tf.saved_model.loader.load`\r\nthe missing variables.index file issue is caught and it throws an error. This is because, in python when it loads the model, it restores the variables too: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/saved_model/loader_impl.py#L349. It sees that some of the variables needed in the graph, are not specified via the variables.index file, hence results in UndefinedError.\r\n\r\nIf you load the partial model in Java with\r\n\r\n`SavedModelBundle.load`\r\nthe missing variables.index file issue is not caught and therefore it does not throw an error. This is because in Java, when it loads the model: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/cc/saved_model/loader.cc#L171, it sees that the variables.index file is missing, hence makes the assumption that the graph does not have any variables.\r\n\r\n\r\n\r\n\r\n\r\n### Source code / logs\r\nmnist.py\r\n```python\r\nimport tensorflow as tf\r\nimport numpy as np\r\n\r\nfrom tensorflow.examples.tutorials.mnist import input_data\r\nmnist = input_data.read_data_sets('MNIST_data')\r\n\r\ndef input(dataset):\r\n    return dataset.images, dataset.labels.astype(np.int32)\r\n\r\n# Specify feature\r\nfeature_columns = [tf.feature_column.numeric_column(\"x\", shape=[28, 28])]\r\n\r\n# Build 2 layer DNN classifier\r\nclassifier = tf.estimator.DNNClassifier(\r\n    feature_columns=feature_columns,\r\n    hidden_units=[256, 32],\r\n    optimizer=tf.train.AdamOptimizer(1e-4),\r\n    n_classes=10,\r\n    dropout=0.1,\r\n    model_dir=\"./tmp/mnist_model\"\r\n)\r\n\r\n# Define the training inputs\r\ntrain_input_fn = tf.estimator.inputs.numpy_input_fn(\r\n    x={\"x\": input(mnist.train)[0]},\r\n    y=input(mnist.train)[1],\r\n    num_epochs=None,\r\n    batch_size=50,\r\n    shuffle=True\r\n)\r\n\r\nclassifier.train(input_fn=train_input_fn, steps=100)\r\n\r\n# Define the test inputs\r\ntest_input_fn = tf.estimator.inputs.numpy_input_fn(\r\n    x={\"x\": input(mnist.test)[0]},\r\n    y=input(mnist.test)[1],\r\n    num_epochs=1,\r\n    shuffle=False\r\n)\r\n\r\n# Evaluate accuracy\r\naccuracy_score = classifier.evaluate(input_fn=test_input_fn)[\"accuracy\"]\r\nprint(\"\\nTest Accuracy: {0:f}%\\n\".format(accuracy_score*100))\r\nimage = tf.placeholder(tf.float32,[None])\r\nclassifier.export_savedmodel(\"./tmp/mnist_model\", \r\n\ttf.estimator.export.build_raw_serving_input_receiver_fn({\"x\":image}))\r\n```\r\n\r\nload.py (might want to change path in line 6)\r\n```python\r\nimport tensorflow as tf \r\n\r\nsess = tf.Session()\r\ntf.saved_model.loader.load(sess, \r\n\t[tf.saved_model.tag_constants.SERVING],\r\n\t'./tmp/mnist_model/1533576273')\r\n```\r\n\r\nLoad.java (might want to change path in line 6)\r\n```java\r\nimport org.tensorflow.SavedModelBundle;\r\n\r\npublic class Load {\r\n  public static void main(String[] args) throws Exception {\r\n  \tSavedModelBundle savedModelBundle = SavedModelBundle.load(\r\n  \t\t\"./tmp/mnist_model/1533576273/\", \"serve\");\r\n  }\r\n}\r\n```\r\n\r\nHere's the output when loading the model in python:\r\n```sh\r\n$ python load.py\r\n/Users/priyankj/lib/python2.7/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.\r\n  from ._conv import register_converters as _register_converters\r\n2018-08-06 15:27:37.363952: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA\r\n2018-08-06 15:27:37.411644: W tensorflow/core/framework/op_kernel.cc:1318] OP_REQUIRES failed at save_restore_tensor.cc:170 : Not found: Unsuccessful TensorSliceReader constructor: Failed to find any matching files for ./tmp/mnist_model/1533576273/variables/variables\r\nTraceback (most recent call last):\r\n  File \"load.py\", line 6, in <module>\r\n    './tmp/mnist_model/1533576273')\r\n  File \"/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/saved_model/loader_impl.py\", line 229, in load\r\n    saver.restore(sess, variables_path)\r\n  File \"/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/training/saver.py\", line 1768, in restore\r\n    six.reraise(exception_type, exception_value, exception_traceback)\r\n  File \"/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/training/saver.py\", line 1752, in restore\r\n    {self.saver_def.filename_tensor_name: save_path})\r\n  File \"/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 900, in run\r\n    run_metadata_ptr)\r\n  File \"/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 1135, in _run\r\n    feed_dict_tensor, options, run_metadata)\r\n  File \"/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 1316, in _do_run\r\n    run_metadata)\r\n  File \"/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 1335, in _do_call\r\n    raise type(e)(node_def, op, message)\r\ntensorflow.python.framework.errors_impl.NotFoundError: Unsuccessful TensorSliceReader constructor: Failed to find any matching files for ./tmp/mnist_model/1533576273/variables/variables\r\n\t [[Node: save_1/RestoreV2 = RestoreV2[dtypes=[DT_FLOAT, DT_FLOAT, DT_FLOAT, DT_FLOAT, DT_FLOAT, DT_FLOAT, DT_INT64], _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](_arg_save_1/Const_0_0, save_1/RestoreV2/tensor_names, save_1/RestoreV2/shape_and_slices)]]\r\n\r\nCaused by op u'save_1/RestoreV2', defined at:\r\n  File \"load.py\", line 6, in <module>\r\n    './tmp/mnist_model/1533576273')\r\n  File \"/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/saved_model/loader_impl.py\", line 219, in load\r\n    saver = tf_saver.import_meta_graph(meta_graph_def_to_load, **saver_kwargs)\r\n  File \"/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/training/saver.py\", line 1960, in import_meta_graph\r\n    **kwargs)\r\n  File \"/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/framework/meta_graph.py\", line 744, in import_scoped_meta_graph\r\n    producer_op_list=producer_op_list)\r\n  File \"/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/util/deprecation.py\", line 432, in new_func\r\n    return func(*args, **kwargs)\r\n  File \"/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/framework/importer.py\", line 442, in import_graph_def\r\n    _ProcessNewOps(graph)\r\n  File \"/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/framework/importer.py\", line 234, in _ProcessNewOps\r\n    for new_op in graph._add_new_tf_operations(compute_devices=False):  # pylint: disable=protected-access\r\n  File \"/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 3563, in _add_new_tf_operations\r\n    for c_op in c_api_util.new_tf_operations(self)\r\n  File \"/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 3450, in _create_op_from_tf_operation\r\n    ret = Operation(c_op, self)\r\n  File \"/Users/priyankj/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1740, in __init__\r\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\r\n\r\nNotFoundError (see above for traceback): Unsuccessful TensorSliceReader constructor: Failed to find any matching files for ./tmp/mnist_model/1533576273/variables/variables\r\n\t [[Node: save_1/RestoreV2 = RestoreV2[dtypes=[DT_FLOAT, DT_FLOAT, DT_FLOAT, DT_FLOAT, DT_FLOAT, DT_FLOAT, DT_INT64], _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](_arg_save_1/Const_0_0, save_1/RestoreV2/tensor_names, save_1/RestoreV2/shape_and_slices)]]\r\n```\r\n\r\nHere's the output of loading the model in Java:\r\n```sh\r\n$ javac -cp libtensorflow-1.9.0.jar Load.java\r\n$ java -cp libtensorflow-1.9.0.jar:. -Djava.library.path=./jni Load\r\n2018-08-06 14:56:48.242783: I tensorflow/cc/saved_model/loader.cc:242] Loading SavedModel with tags: { serve }; from: ./tmp/mnist_model/1533576273/\r\n2018-08-06 14:56:48.244329: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.2 AVX AVX2 FMA\r\n2018-08-06 14:56:48.246854: I tensorflow/cc/saved_model/loader.cc:161] Restoring SavedModel bundle.\r\n2018-08-06 14:56:48.246888: I tensorflow/cc/saved_model/loader.cc:171] The specified SavedModel has no variables; no checkpoints were restored.\r\n2018-08-06 14:56:48.246894: I tensorflow/cc/saved_model/loader.cc:196] Running LegacyInitOp on SavedModel bundle.\r\n2018-08-06 14:56:48.250752: I tensorflow/cc/saved_model/loader.cc:291] SavedModel load for tags { serve }; Status: success. Took 8012 microseconds.\r\n```"}