{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/424757888", "html_url": "https://github.com/tensorflow/tensorflow/issues/21417#issuecomment-424757888", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21417", "id": 424757888, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDc1Nzg4OA==", "user": {"login": "priyankjain", "id": 4019056, "node_id": "MDQ6VXNlcjQwMTkwNTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/4019056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/priyankjain", "html_url": "https://github.com/priyankjain", "followers_url": "https://api.github.com/users/priyankjain/followers", "following_url": "https://api.github.com/users/priyankjain/following{/other_user}", "gists_url": "https://api.github.com/users/priyankjain/gists{/gist_id}", "starred_url": "https://api.github.com/users/priyankjain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/priyankjain/subscriptions", "organizations_url": "https://api.github.com/users/priyankjain/orgs", "repos_url": "https://api.github.com/users/priyankjain/repos", "events_url": "https://api.github.com/users/priyankjain/events{/privacy}", "received_events_url": "https://api.github.com/users/priyankjain/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-26T15:24:25Z", "updated_at": "2018-09-26T15:24:25Z", "author_association": "NONE", "body_html": "<p>As I understand the outlined solutions: One is to change the Python implementation to match C++ logic (proposed by <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=35930234\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/christisg\">@christisg</a>). Second is to modify the C++ implementation to add the check (proposed by <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=667809\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/karmel\">@karmel</a>). Solution 1 will not throw an exception. Solution 2 will always throw an exception. The plan is to go ahead with solution 2?</p>\n<p>Could you confirm whether my understanding is correct? Not sure what the \"crashing the server\" terminology is in this context, is it related to tensorflow serving or simply graceful handling of exception instead of failing the program?</p>", "body_text": "As I understand the outlined solutions: One is to change the Python implementation to match C++ logic (proposed by @christisg). Second is to modify the C++ implementation to add the check (proposed by @karmel). Solution 1 will not throw an exception. Solution 2 will always throw an exception. The plan is to go ahead with solution 2?\nCould you confirm whether my understanding is correct? Not sure what the \"crashing the server\" terminology is in this context, is it related to tensorflow serving or simply graceful handling of exception instead of failing the program?", "body": "As I understand the outlined solutions: One is to change the Python implementation to match C++ logic (proposed by @christisg). Second is to modify the C++ implementation to add the check (proposed by @karmel). Solution 1 will not throw an exception. Solution 2 will always throw an exception. The plan is to go ahead with solution 2? \r\n\r\nCould you confirm whether my understanding is correct? Not sure what the \"crashing the server\" terminology is in this context, is it related to tensorflow serving or simply graceful handling of exception instead of failing the program?"}