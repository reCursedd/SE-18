{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22027", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22027/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22027/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22027/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/22027", "id": 356480384, "node_id": "MDU6SXNzdWUzNTY0ODAzODQ=", "number": 22027, "title": "tfcompile: minimum_alignment_for_allocation and kAlign = 64", "user": {"login": "wuclv", "id": 30358621, "node_id": "MDQ6VXNlcjMwMzU4NjIx", "avatar_url": "https://avatars0.githubusercontent.com/u/30358621?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wuclv", "html_url": "https://github.com/wuclv", "followers_url": "https://api.github.com/users/wuclv/followers", "following_url": "https://api.github.com/users/wuclv/following{/other_user}", "gists_url": "https://api.github.com/users/wuclv/gists{/gist_id}", "starred_url": "https://api.github.com/users/wuclv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wuclv/subscriptions", "organizations_url": "https://api.github.com/users/wuclv/orgs", "repos_url": "https://api.github.com/users/wuclv/repos", "events_url": "https://api.github.com/users/wuclv/events{/privacy}", "received_events_url": "https://api.github.com/users/wuclv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "open", "locked": false, "assignee": {"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-09-03T12:09:20Z", "updated_at": "2018-11-14T19:26:32Z", "closed_at": null, "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu 18.04.1</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>: -</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: Yes</li>\n<li><strong>TensorFlow version (use command below)</strong>: v1.10.1-0-g4dcfddc5d1</li>\n<li><strong>Python version</strong>: 3.6.5</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.16.1</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: 7.3.0</li>\n<li><strong>CUDA/cuDNN version</strong>: -</li>\n<li><strong>GPU model and memory</strong>: -</li>\n<li><strong>Exact command to reproduce</strong>: -</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>tfcompile uses <code>minimum_alignment_for_allocation</code> to check if it can call Eigen on a tensor. <code>minimum_alignment_for_allocation</code> uses the minimum alignment of <code>malloc</code> but the buffers that tfcompile uses are allocated by <code>MallocContiguousBuffers</code> which currently always returns buffers with a minimum alignment of <code>kAlign</code> = 64.</p>\n<h3>Source code / logs</h3>\n<p><div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/4dcfddc5d12018a5a0fdca652b9221ed95e9eb23/tensorflow/compiler/xla/service/cpu/target_machine_features.cc#L34-L43\">tensorflow/tensorflow/compiler/xla/service/cpu/target_machine_features.cc</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 34 to 43\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/4dcfddc5d12018a5a0fdca652b9221ed95e9eb23\">4dcfddc</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L34\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"34\"></td>\n          <td id=\"LC34\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> int64 <span class=\"pl-en\">LLVMTargetMachineFeatures::minimum_alignment_for_allocation</span>( </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L35\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"35\"></td>\n          <td id=\"LC35\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     int64 size_bytes) <span class=\"pl-k\">const</span> { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L36\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"36\"></td>\n          <td id=\"LC36\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-c\"><span class=\"pl-c\">//</span> GLibc malloc returns a pointer with alignment 8 on 32-bit platforms and 16</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L37\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"37\"></td>\n          <td id=\"LC37\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-c\"><span class=\"pl-c\">//</span> on 64-bit platforms.  TCMalloc returns a pointer with alignment 8 for</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L38\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"38\"></td>\n          <td id=\"LC38\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-c\"><span class=\"pl-c\">//</span> allocations smaller than kMallocAlignmentThreshold bytes and at least</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L39\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"39\"></td>\n          <td id=\"LC39\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-c\"><span class=\"pl-c\">//</span> alignment 16 for allocations greater than or equal to</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L40\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"40\"></td>\n          <td id=\"LC40\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-c\"><span class=\"pl-c\">//</span> kMallocAlignmentThreshold bytes.  N.B. We could improve on this lower bound</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L41\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"41\"></td>\n          <td id=\"LC41\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-c\"><span class=\"pl-c\">//</span> by explicitly allocating the memory with posix_memalign.  This is</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L42\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"42\"></td>\n          <td id=\"LC42\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-c\"><span class=\"pl-c\">//</span> complicated by our desire to allow parameter buffers created by clients to</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L43\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"43\"></td>\n          <td id=\"LC43\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-c\"><span class=\"pl-c\">//</span> be consumed directly by the JIT.</span> </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<p><div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/4dcfddc5d12018a5a0fdca652b9221ed95e9eb23/tensorflow/compiler/aot/runtime.h#L36-L37\">tensorflow/tensorflow/compiler/aot/runtime.h</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 36 to 37\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/4dcfddc5d12018a5a0fdca652b9221ed95e9eb23\">4dcfddc</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L36\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"36\"></td>\n          <td id=\"LC36\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-c\"><span class=\"pl-c\">//</span> MallocContiguousBuffers allocates buffers for use by the entry point</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L37\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"37\"></td>\n          <td id=\"LC37\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-c\"><span class=\"pl-c\">//</span> generated by tfcompile.  `sizes` is an array of byte sizes for each buffer,</span> </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<p><div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/4dcfddc5d12018a5a0fdca652b9221ed95e9eb23/tensorflow/compiler/aot/runtime.h#L29\">tensorflow/tensorflow/compiler/aot/runtime.h</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n         Line 29\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/4dcfddc5d12018a5a0fdca652b9221ed95e9eb23\">4dcfddc</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L29\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"29\"></td>\n          <td id=\"LC29\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">static</span> <span class=\"pl-k\">constexpr</span> <span class=\"pl-c1\">size_t</span> <span class=\"pl-c1\">kAlign</span> = <span class=\"pl-c1\">64</span>; </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 18.04.1\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: -\nTensorFlow installed from (source or binary): Yes\nTensorFlow version (use command below): v1.10.1-0-g4dcfddc5d1\nPython version: 3.6.5\nBazel version (if compiling from source): 0.16.1\nGCC/Compiler version (if compiling from source): 7.3.0\nCUDA/cuDNN version: -\nGPU model and memory: -\nExact command to reproduce: -\n\nDescribe the problem\ntfcompile uses minimum_alignment_for_allocation to check if it can call Eigen on a tensor. minimum_alignment_for_allocation uses the minimum alignment of malloc but the buffers that tfcompile uses are allocated by MallocContiguousBuffers which currently always returns buffers with a minimum alignment of kAlign = 64.\nSource code / logs\n\n  \n    \n      tensorflow/tensorflow/compiler/xla/service/cpu/target_machine_features.cc\n    \n    \n        Lines 34 to 43\n      in\n      4dcfddc\n    \n    \n    \n    \n\n        \n          \n           int64 LLVMTargetMachineFeatures::minimum_alignment_for_allocation( \n        \n\n        \n          \n               int64 size_bytes) const { \n        \n\n        \n          \n             // GLibc malloc returns a pointer with alignment 8 on 32-bit platforms and 16 \n        \n\n        \n          \n             // on 64-bit platforms.  TCMalloc returns a pointer with alignment 8 for \n        \n\n        \n          \n             // allocations smaller than kMallocAlignmentThreshold bytes and at least \n        \n\n        \n          \n             // alignment 16 for allocations greater than or equal to \n        \n\n        \n          \n             // kMallocAlignmentThreshold bytes.  N.B. We could improve on this lower bound \n        \n\n        \n          \n             // by explicitly allocating the memory with posix_memalign.  This is \n        \n\n        \n          \n             // complicated by our desire to allow parameter buffers created by clients to \n        \n\n        \n          \n             // be consumed directly by the JIT. \n        \n    \n  \n\n\n\n  \n    \n      tensorflow/tensorflow/compiler/aot/runtime.h\n    \n    \n        Lines 36 to 37\n      in\n      4dcfddc\n    \n    \n    \n    \n\n        \n          \n           // MallocContiguousBuffers allocates buffers for use by the entry point \n        \n\n        \n          \n           // generated by tfcompile.  `sizes` is an array of byte sizes for each buffer, \n        \n    \n  \n\n\n\n  \n    \n      tensorflow/tensorflow/compiler/aot/runtime.h\n    \n    \n         Line 29\n      in\n      4dcfddc\n    \n    \n    \n    \n\n        \n          \n           static constexpr size_t kAlign = 64;", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 18.04.1\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**: -\r\n- **TensorFlow installed from (source or binary)**: Yes\r\n- **TensorFlow version (use command below)**: v1.10.1-0-g4dcfddc5d1\r\n- **Python version**: 3.6.5\r\n- **Bazel version (if compiling from source)**: 0.16.1\r\n- **GCC/Compiler version (if compiling from source)**: 7.3.0\r\n- **CUDA/cuDNN version**: -\r\n- **GPU model and memory**: -\r\n- **Exact command to reproduce**: -\r\n\r\n\r\n### Describe the problem\r\n\r\ntfcompile uses `minimum_alignment_for_allocation` to check if it can call Eigen on a tensor. `minimum_alignment_for_allocation` uses the minimum alignment of `malloc` but the buffers that tfcompile uses are allocated by `MallocContiguousBuffers` which currently always returns buffers with a minimum alignment of `kAlign` = 64.\r\n\r\n\r\n### Source code / logs\r\n\r\nhttps://github.com/tensorflow/tensorflow/blob/4dcfddc5d12018a5a0fdca652b9221ed95e9eb23/tensorflow/compiler/xla/service/cpu/target_machine_features.cc#L34-L43\r\n\r\nhttps://github.com/tensorflow/tensorflow/blob/4dcfddc5d12018a5a0fdca652b9221ed95e9eb23/tensorflow/compiler/aot/runtime.h#L36-L37\r\n\r\nhttps://github.com/tensorflow/tensorflow/blob/4dcfddc5d12018a5a0fdca652b9221ed95e9eb23/tensorflow/compiler/aot/runtime.h#L29"}