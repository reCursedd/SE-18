{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/224837249", "html_url": "https://github.com/tensorflow/tensorflow/issues/2687#issuecomment-224837249", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2687", "id": 224837249, "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDgzNzI0OQ==", "user": {"login": "samfux84", "id": 11944875, "node_id": "MDQ6VXNlcjExOTQ0ODc1", "avatar_url": "https://avatars0.githubusercontent.com/u/11944875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samfux84", "html_url": "https://github.com/samfux84", "followers_url": "https://api.github.com/users/samfux84/followers", "following_url": "https://api.github.com/users/samfux84/following{/other_user}", "gists_url": "https://api.github.com/users/samfux84/gists{/gist_id}", "starred_url": "https://api.github.com/users/samfux84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samfux84/subscriptions", "organizations_url": "https://api.github.com/users/samfux84/orgs", "repos_url": "https://api.github.com/users/samfux84/repos", "events_url": "https://api.github.com/users/samfux84/events{/privacy}", "received_events_url": "https://api.github.com/users/samfux84/received_events", "type": "User", "site_admin": false}, "created_at": "2016-06-09T08:54:42Z", "updated_at": "2016-06-09T08:54:42Z", "author_association": "NONE", "body_html": "<p>I tried building r0.9 and for some reason it worked, or at least it did not terminate with an error message (I have no idea why it worked this time, and I am not sure if the build is reproducible).</p>\n<pre><code>bazel-out/host/genfiles/tensorflow/core/protobuf/config.pb_text.cc: In function 'bool tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::ConfigProto*)':\nbazel-out/host/genfiles/tensorflow/core/protobuf/config.pb_text.cc:435:34: warning: 'map_value' may be used uninitialized in this function [-Wmaybe-uninitialized]\n       (*map)[map_key] = map_value;\n                                  ^\nbazel-out/host/genfiles/tensorflow/core/protobuf/config.pb_text.cc:426:9: note: 'map_value' was declared here\n   int32 map_value;\n         ^\nTarget //tensorflow/tools/pip_package:build_pip_package up-to-date:\n  bazel-bin/tensorflow/tools/pip_package/build_pip_package\nINFO: Elapsed time: 119.956s, Critical Path: 95.89s\n[sfux@e3001 tensorflow]$ \n</code></pre>\n<p>In the instructions provided on the tensorflow webpage, it is stated that the files to create the pip wheel are stored in /tmp/tensorflow_pkg:</p>\n<pre><code>$ bazel build -c opt //tensorflow/tools/pip_package:build_pip_package\n\n# To build with GPU support:\n$ bazel build -c opt --config=cuda //tensorflow/tools/pip_package:build_pip_package\n\n**$ bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg**\n\n# The name of the .whl file will depend on your platform.\n$ sudo pip install /tmp/tensorflow_pkg/tensorflow-0.9.0rc0-py2-none-any.whl\n</code></pre>\n<p>But in my case, there is no directory tensorflow_pkg in /tmp. Therefore I don't know how I should build the pip wheel.</p>\n<p>Have you ever considered to switch from bazel to GNU autoconf or CMAKE to build tensorflow ? In CMAKE I can specify an absolute path for all dependencies, which avoids issues as for instance bazel not finding Python. In my case tensorflow decided to again install Eigen 3.2.1 even though I already have a central installation of Eigen 3.2.1 and plenty of environment variables are set:</p>\n<pre><code>[sfux@euler06 x86_64]$ module show eigen/3.2.1                                                                                   \n-------------------------------------------------------------------                                                              \n/cluster/apps/modules/modulefiles/eigen/3.2.1:                                                                                   \n\nmodule-whatis    Eigen 3.2.1                                                                                                     \nsetenv           MODULE_eigen_ROOT_DIR /cluster/apps/eigen/3.2.1/x86_64/gcc_4.8.2/serial                                         \nprepend-path     CPATH /cluster/apps/eigen/3.2.1/x86_64/gcc_4.8.2/serial/include                                                 \nprepend-path     C_INCLUDE_PATH /cluster/apps/eigen/3.2.1/x86_64/gcc_4.8.2/serial/include                                        \nprepend-path     CPLUS_INCLUDE_PATH /cluster/apps/eigen/3.2.1/x86_64/gcc_4.8.2/serial/include                                    \nprepend-path     INCLUDE /cluster/apps/eigen/3.2.1/x86_64/gcc_4.8.2/serial/include                                               \nprepend-path     FPATH /cluster/apps/eigen/3.2.1/x86_64/gcc_4.8.2/serial/include                                                 \n-------------------------------------------------------------------\n\n[sfux@euler06 x86_64]$ \n\n</code></pre>\n<p>In CMAKE I would have to set one variable in order to find an existing Eigen installation.</p>\n<p>Thank you very much for your help.</p>", "body_text": "I tried building r0.9 and for some reason it worked, or at least it did not terminate with an error message (I have no idea why it worked this time, and I am not sure if the build is reproducible).\nbazel-out/host/genfiles/tensorflow/core/protobuf/config.pb_text.cc: In function 'bool tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::ConfigProto*)':\nbazel-out/host/genfiles/tensorflow/core/protobuf/config.pb_text.cc:435:34: warning: 'map_value' may be used uninitialized in this function [-Wmaybe-uninitialized]\n       (*map)[map_key] = map_value;\n                                  ^\nbazel-out/host/genfiles/tensorflow/core/protobuf/config.pb_text.cc:426:9: note: 'map_value' was declared here\n   int32 map_value;\n         ^\nTarget //tensorflow/tools/pip_package:build_pip_package up-to-date:\n  bazel-bin/tensorflow/tools/pip_package/build_pip_package\nINFO: Elapsed time: 119.956s, Critical Path: 95.89s\n[sfux@e3001 tensorflow]$ \n\nIn the instructions provided on the tensorflow webpage, it is stated that the files to create the pip wheel are stored in /tmp/tensorflow_pkg:\n$ bazel build -c opt //tensorflow/tools/pip_package:build_pip_package\n\n# To build with GPU support:\n$ bazel build -c opt --config=cuda //tensorflow/tools/pip_package:build_pip_package\n\n**$ bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg**\n\n# The name of the .whl file will depend on your platform.\n$ sudo pip install /tmp/tensorflow_pkg/tensorflow-0.9.0rc0-py2-none-any.whl\n\nBut in my case, there is no directory tensorflow_pkg in /tmp. Therefore I don't know how I should build the pip wheel.\nHave you ever considered to switch from bazel to GNU autoconf or CMAKE to build tensorflow ? In CMAKE I can specify an absolute path for all dependencies, which avoids issues as for instance bazel not finding Python. In my case tensorflow decided to again install Eigen 3.2.1 even though I already have a central installation of Eigen 3.2.1 and plenty of environment variables are set:\n[sfux@euler06 x86_64]$ module show eigen/3.2.1                                                                                   \n-------------------------------------------------------------------                                                              \n/cluster/apps/modules/modulefiles/eigen/3.2.1:                                                                                   \n\nmodule-whatis    Eigen 3.2.1                                                                                                     \nsetenv           MODULE_eigen_ROOT_DIR /cluster/apps/eigen/3.2.1/x86_64/gcc_4.8.2/serial                                         \nprepend-path     CPATH /cluster/apps/eigen/3.2.1/x86_64/gcc_4.8.2/serial/include                                                 \nprepend-path     C_INCLUDE_PATH /cluster/apps/eigen/3.2.1/x86_64/gcc_4.8.2/serial/include                                        \nprepend-path     CPLUS_INCLUDE_PATH /cluster/apps/eigen/3.2.1/x86_64/gcc_4.8.2/serial/include                                    \nprepend-path     INCLUDE /cluster/apps/eigen/3.2.1/x86_64/gcc_4.8.2/serial/include                                               \nprepend-path     FPATH /cluster/apps/eigen/3.2.1/x86_64/gcc_4.8.2/serial/include                                                 \n-------------------------------------------------------------------\n\n[sfux@euler06 x86_64]$ \n\n\nIn CMAKE I would have to set one variable in order to find an existing Eigen installation.\nThank you very much for your help.", "body": "I tried building r0.9 and for some reason it worked, or at least it did not terminate with an error message (I have no idea why it worked this time, and I am not sure if the build is reproducible).\n\n```\nbazel-out/host/genfiles/tensorflow/core/protobuf/config.pb_text.cc: In function 'bool tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::ConfigProto*)':\nbazel-out/host/genfiles/tensorflow/core/protobuf/config.pb_text.cc:435:34: warning: 'map_value' may be used uninitialized in this function [-Wmaybe-uninitialized]\n       (*map)[map_key] = map_value;\n                                  ^\nbazel-out/host/genfiles/tensorflow/core/protobuf/config.pb_text.cc:426:9: note: 'map_value' was declared here\n   int32 map_value;\n         ^\nTarget //tensorflow/tools/pip_package:build_pip_package up-to-date:\n  bazel-bin/tensorflow/tools/pip_package/build_pip_package\nINFO: Elapsed time: 119.956s, Critical Path: 95.89s\n[sfux@e3001 tensorflow]$ \n```\n\nIn the instructions provided on the tensorflow webpage, it is stated that the files to create the pip wheel are stored in /tmp/tensorflow_pkg:\n\n```\n$ bazel build -c opt //tensorflow/tools/pip_package:build_pip_package\n\n# To build with GPU support:\n$ bazel build -c opt --config=cuda //tensorflow/tools/pip_package:build_pip_package\n\n**$ bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg**\n\n# The name of the .whl file will depend on your platform.\n$ sudo pip install /tmp/tensorflow_pkg/tensorflow-0.9.0rc0-py2-none-any.whl\n```\n\nBut in my case, there is no directory tensorflow_pkg in /tmp. Therefore I don't know how I should build the pip wheel.\n\nHave you ever considered to switch from bazel to GNU autoconf or CMAKE to build tensorflow ? In CMAKE I can specify an absolute path for all dependencies, which avoids issues as for instance bazel not finding Python. In my case tensorflow decided to again install Eigen 3.2.1 even though I already have a central installation of Eigen 3.2.1 and plenty of environment variables are set:\n\n```\n[sfux@euler06 x86_64]$ module show eigen/3.2.1                                                                                   \n-------------------------------------------------------------------                                                              \n/cluster/apps/modules/modulefiles/eigen/3.2.1:                                                                                   \n\nmodule-whatis    Eigen 3.2.1                                                                                                     \nsetenv           MODULE_eigen_ROOT_DIR /cluster/apps/eigen/3.2.1/x86_64/gcc_4.8.2/serial                                         \nprepend-path     CPATH /cluster/apps/eigen/3.2.1/x86_64/gcc_4.8.2/serial/include                                                 \nprepend-path     C_INCLUDE_PATH /cluster/apps/eigen/3.2.1/x86_64/gcc_4.8.2/serial/include                                        \nprepend-path     CPLUS_INCLUDE_PATH /cluster/apps/eigen/3.2.1/x86_64/gcc_4.8.2/serial/include                                    \nprepend-path     INCLUDE /cluster/apps/eigen/3.2.1/x86_64/gcc_4.8.2/serial/include                                               \nprepend-path     FPATH /cluster/apps/eigen/3.2.1/x86_64/gcc_4.8.2/serial/include                                                 \n-------------------------------------------------------------------\n\n[sfux@euler06 x86_64]$ \n\n```\n\nIn CMAKE I would have to set one variable in order to find an existing Eigen installation.\n\nThank you very much for your help.\n"}