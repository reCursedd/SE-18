{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20040", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20040/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20040/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20040/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20040", "id": 332581892, "node_id": "MDU6SXNzdWUzMzI1ODE4OTI=", "number": 20040, "title": "Same loss different/incorrect results", "user": {"login": "pbamotra", "id": 6505165, "node_id": "MDQ6VXNlcjY1MDUxNjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6505165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pbamotra", "html_url": "https://github.com/pbamotra", "followers_url": "https://api.github.com/users/pbamotra/followers", "following_url": "https://api.github.com/users/pbamotra/following{/other_user}", "gists_url": "https://api.github.com/users/pbamotra/gists{/gist_id}", "starred_url": "https://api.github.com/users/pbamotra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pbamotra/subscriptions", "organizations_url": "https://api.github.com/users/pbamotra/orgs", "repos_url": "https://api.github.com/users/pbamotra/repos", "events_url": "https://api.github.com/users/pbamotra/events{/privacy}", "received_events_url": "https://api.github.com/users/pbamotra/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "bignamehyp", "id": 3474655, "node_id": "MDQ6VXNlcjM0NzQ2NTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3474655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bignamehyp", "html_url": "https://github.com/bignamehyp", "followers_url": "https://api.github.com/users/bignamehyp/followers", "following_url": "https://api.github.com/users/bignamehyp/following{/other_user}", "gists_url": "https://api.github.com/users/bignamehyp/gists{/gist_id}", "starred_url": "https://api.github.com/users/bignamehyp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bignamehyp/subscriptions", "organizations_url": "https://api.github.com/users/bignamehyp/orgs", "repos_url": "https://api.github.com/users/bignamehyp/repos", "events_url": "https://api.github.com/users/bignamehyp/events{/privacy}", "received_events_url": "https://api.github.com/users/bignamehyp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bignamehyp", "id": 3474655, "node_id": "MDQ6VXNlcjM0NzQ2NTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3474655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bignamehyp", "html_url": "https://github.com/bignamehyp", "followers_url": "https://api.github.com/users/bignamehyp/followers", "following_url": "https://api.github.com/users/bignamehyp/following{/other_user}", "gists_url": "https://api.github.com/users/bignamehyp/gists{/gist_id}", "starred_url": "https://api.github.com/users/bignamehyp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bignamehyp/subscriptions", "organizations_url": "https://api.github.com/users/bignamehyp/orgs", "repos_url": "https://api.github.com/users/bignamehyp/repos", "events_url": "https://api.github.com/users/bignamehyp/events{/privacy}", "received_events_url": "https://api.github.com/users/bignamehyp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-06-14T22:10:16Z", "updated_at": "2018-08-15T02:58:12Z", "closed_at": "2018-08-15T02:49:11Z", "author_association": "NONE", "body_html": "<p>TF version: 1.8<br>\nInstallation: tensorflow/tensorflow:latest-gpu<br>\nOS details:<br>\nDistributor ID:\tUbuntu<br>\nDescription:\tUbuntu 16.04.4 LTS<br>\nRelease:\t16.04<br>\nCodename:\txenial</p>\n<p>AWS instance: p2.xlarge<br>\nGPU details:</p>\n<pre><code>[name: \"/device:CPU:0\"\ndevice_type: \"CPU\"\nmemory_limit: 268435456\nlocality {\n}\nincarnation: 16086859869116902206\n, name: \"/device:GPU:0\"\ndevice_type: \"GPU\"\nmemory_limit: 11285974221\nlocality {\n  bus_id: 1\n  links {\n  }\n}\nincarnation: 13890740079777279899\nphysical_device_desc: \"device: 0, name: Tesla K80, pci bus id: 0000:00:1e.0, compute capability: 3.7\"\n]\n</code></pre>\n<p>Custom code:<br>\nThis works</p>\n<div class=\"highlight highlight-source-python\"><pre>model.compile(<span class=\"pl-v\">loss</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>sparse_categorical_crossentropy<span class=\"pl-pds\">'</span></span>,\n              <span class=\"pl-v\">optimizer</span><span class=\"pl-k\">=</span>keras.optimizers.Adam(<span class=\"pl-v\">lr</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0.01</span>, <span class=\"pl-v\">clipnorm</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>., <span class=\"pl-v\">amsgrad</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>),\n              <span class=\"pl-v\">metrics</span><span class=\"pl-k\">=</span>[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>acc<span class=\"pl-pds\">'</span></span>])</pre></div>\n<p>This works too</p>\n<div class=\"highlight highlight-source-python\"><pre>model.compile(<span class=\"pl-v\">loss</span><span class=\"pl-k\">=</span>keras.losses.sparse_categorical_crossentropy,\n              <span class=\"pl-v\">optimizer</span><span class=\"pl-k\">=</span>keras.optimizers.Adam(<span class=\"pl-v\">lr</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0.01</span>, <span class=\"pl-v\">clipnorm</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>., <span class=\"pl-v\">amsgrad</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>),\n              <span class=\"pl-v\">metrics</span><span class=\"pl-k\">=</span>[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>acc<span class=\"pl-pds\">'</span></span>])</pre></div>\n<p>This doesn't work. The loss value looks fine but the accuracy stays at 0 or very low value.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">sparse_cate_loss</span>(<span class=\"pl-smi\">y_true</span>, <span class=\"pl-smi\">y_pred</span>):\n    <span class=\"pl-k\">return</span> keras.losses.sparse_categorical_crossentropy(y_true, y_pred)\n\nmodel.compile(<span class=\"pl-v\">loss</span><span class=\"pl-k\">=</span>sparse_cate_loss,\n              <span class=\"pl-v\">optimizer</span><span class=\"pl-k\">=</span>keras.optimizers.Adam(<span class=\"pl-v\">lr</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0.01</span>, <span class=\"pl-v\">clipnorm</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>., <span class=\"pl-v\">amsgrad</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>),\n              <span class=\"pl-v\">metrics</span><span class=\"pl-k\">=</span>[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>acc<span class=\"pl-pds\">'</span></span>])</pre></div>", "body_text": "TF version: 1.8\nInstallation: tensorflow/tensorflow:latest-gpu\nOS details:\nDistributor ID:\tUbuntu\nDescription:\tUbuntu 16.04.4 LTS\nRelease:\t16.04\nCodename:\txenial\nAWS instance: p2.xlarge\nGPU details:\n[name: \"/device:CPU:0\"\ndevice_type: \"CPU\"\nmemory_limit: 268435456\nlocality {\n}\nincarnation: 16086859869116902206\n, name: \"/device:GPU:0\"\ndevice_type: \"GPU\"\nmemory_limit: 11285974221\nlocality {\n  bus_id: 1\n  links {\n  }\n}\nincarnation: 13890740079777279899\nphysical_device_desc: \"device: 0, name: Tesla K80, pci bus id: 0000:00:1e.0, compute capability: 3.7\"\n]\n\nCustom code:\nThis works\nmodel.compile(loss='sparse_categorical_crossentropy',\n              optimizer=keras.optimizers.Adam(lr=0.01, clipnorm=1., amsgrad=True),\n              metrics=['acc'])\nThis works too\nmodel.compile(loss=keras.losses.sparse_categorical_crossentropy,\n              optimizer=keras.optimizers.Adam(lr=0.01, clipnorm=1., amsgrad=True),\n              metrics=['acc'])\nThis doesn't work. The loss value looks fine but the accuracy stays at 0 or very low value.\ndef sparse_cate_loss(y_true, y_pred):\n    return keras.losses.sparse_categorical_crossentropy(y_true, y_pred)\n\nmodel.compile(loss=sparse_cate_loss,\n              optimizer=keras.optimizers.Adam(lr=0.01, clipnorm=1., amsgrad=True),\n              metrics=['acc'])", "body": "TF version: 1.8\r\nInstallation: tensorflow/tensorflow:latest-gpu\r\nOS details: \r\nDistributor ID:\tUbuntu\r\nDescription:\tUbuntu 16.04.4 LTS\r\nRelease:\t16.04\r\nCodename:\txenial\r\n\r\nAWS instance: p2.xlarge\r\nGPU details:\r\n```\r\n[name: \"/device:CPU:0\"\r\ndevice_type: \"CPU\"\r\nmemory_limit: 268435456\r\nlocality {\r\n}\r\nincarnation: 16086859869116902206\r\n, name: \"/device:GPU:0\"\r\ndevice_type: \"GPU\"\r\nmemory_limit: 11285974221\r\nlocality {\r\n  bus_id: 1\r\n  links {\r\n  }\r\n}\r\nincarnation: 13890740079777279899\r\nphysical_device_desc: \"device: 0, name: Tesla K80, pci bus id: 0000:00:1e.0, compute capability: 3.7\"\r\n]\r\n```\r\n\r\nCustom code:\r\nThis works\r\n```python\r\nmodel.compile(loss='sparse_categorical_crossentropy',\r\n              optimizer=keras.optimizers.Adam(lr=0.01, clipnorm=1., amsgrad=True),\r\n              metrics=['acc'])\r\n```\r\nThis works too\r\n```python\r\nmodel.compile(loss=keras.losses.sparse_categorical_crossentropy,\r\n              optimizer=keras.optimizers.Adam(lr=0.01, clipnorm=1., amsgrad=True),\r\n              metrics=['acc'])\r\n```\r\nThis doesn't work. The loss value looks fine but the accuracy stays at 0 or very low value.\r\n```python\r\ndef sparse_cate_loss(y_true, y_pred):\r\n    return keras.losses.sparse_categorical_crossentropy(y_true, y_pred)\r\n\r\nmodel.compile(loss=sparse_cate_loss,\r\n              optimizer=keras.optimizers.Adam(lr=0.01, clipnorm=1., amsgrad=True),\r\n              metrics=['acc'])\r\n```"}