{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/436354249", "html_url": "https://github.com/tensorflow/tensorflow/issues/23559#issuecomment-436354249", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23559", "id": 436354249, "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjM1NDI0OQ==", "user": {"login": "harahu", "id": 6145801, "node_id": "MDQ6VXNlcjYxNDU4MDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/6145801?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harahu", "html_url": "https://github.com/harahu", "followers_url": "https://api.github.com/users/harahu/followers", "following_url": "https://api.github.com/users/harahu/following{/other_user}", "gists_url": "https://api.github.com/users/harahu/gists{/gist_id}", "starred_url": "https://api.github.com/users/harahu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harahu/subscriptions", "organizations_url": "https://api.github.com/users/harahu/orgs", "repos_url": "https://api.github.com/users/harahu/repos", "events_url": "https://api.github.com/users/harahu/events{/privacy}", "received_events_url": "https://api.github.com/users/harahu/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-06T18:17:41Z", "updated_at": "2018-11-06T22:42:37Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I am lazy and should have read the code with a bit more thoroughness. I see that an attempt have been made at avoiding adding the handler if the root logger is already configured. From <code>_get_logger()</code>:</p>\n<pre><code># Don't further configure the TensorFlow logger if the root logger is\n# already configured. This prevents double logging in those cases.\nif not _logging.getLogger().handlers:\n...\n</code></pre>\n<p>The problem is that this function is already called when importing tensorflow. So if you import tensorflow in your <code>__main__</code> module, you don't get to configure the root logger before the tensorflow logger is initialized, and the StreamHandler is added. If this is not the intended behaviour I guess this issue should rather be made into a bug report. If it <em>is</em> the intended behaviour I still think it is quite ugly and should be reconsidered.</p>", "body_text": "I am lazy and should have read the code with a bit more thoroughness. I see that an attempt have been made at avoiding adding the handler if the root logger is already configured. From _get_logger():\n# Don't further configure the TensorFlow logger if the root logger is\n# already configured. This prevents double logging in those cases.\nif not _logging.getLogger().handlers:\n...\n\nThe problem is that this function is already called when importing tensorflow. So if you import tensorflow in your __main__ module, you don't get to configure the root logger before the tensorflow logger is initialized, and the StreamHandler is added. If this is not the intended behaviour I guess this issue should rather be made into a bug report. If it is the intended behaviour I still think it is quite ugly and should be reconsidered.", "body": "I am lazy and should have read the code with a bit more thoroughness. I see that an attempt have been made at avoiding adding the handler if the root logger is already configured. From `_get_logger()`:\r\n```\r\n# Don't further configure the TensorFlow logger if the root logger is\r\n# already configured. This prevents double logging in those cases.\r\nif not _logging.getLogger().handlers:\r\n...\r\n```\r\nThe problem is that this function is already called when importing tensorflow. So if you import tensorflow in your `__main__` module, you don't get to configure the root logger before the tensorflow logger is initialized, and the StreamHandler is added. If this is not the intended behaviour I guess this issue should rather be made into a bug report. If it _is_ the intended behaviour I still think it is quite ugly and should be reconsidered.\r\n"}