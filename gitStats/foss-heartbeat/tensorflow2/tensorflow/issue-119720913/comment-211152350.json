{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/211152350", "html_url": "https://github.com/tensorflow/tensorflow/issues/386#issuecomment-211152350", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/386", "id": 211152350, "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTE1MjM1MA==", "user": {"login": "zffchen78", "id": 7943790, "node_id": "MDQ6VXNlcjc5NDM3OTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/7943790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zffchen78", "html_url": "https://github.com/zffchen78", "followers_url": "https://api.github.com/users/zffchen78/followers", "following_url": "https://api.github.com/users/zffchen78/following{/other_user}", "gists_url": "https://api.github.com/users/zffchen78/gists{/gist_id}", "starred_url": "https://api.github.com/users/zffchen78/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zffchen78/subscriptions", "organizations_url": "https://api.github.com/users/zffchen78/orgs", "repos_url": "https://api.github.com/users/zffchen78/repos", "events_url": "https://api.github.com/users/zffchen78/events{/privacy}", "received_events_url": "https://api.github.com/users/zffchen78/received_events", "type": "User", "site_admin": false}, "created_at": "2016-04-18T01:52:37Z", "updated_at": "2016-04-18T01:52:37Z", "author_association": "CONTRIBUTOR", "body_html": "<p>If your usage is not performance critical yet (if you do, probably you better get a gpu), you can always fall back to numpy for prototyping your model. E.g., here is how you can use numpy fft modules to in tf:</p>\n<pre><code># a bit excotic function (rfft)\nwith self.test_session():\n  x = tf.constant([1., 2., 3., 4.], tf.float32)\n  def rfft(x):\n    return np.fft.rfft(x).astype(np.complex64)\n  y, = tf.py_func(rfft, [x], [tf.complex64])\n  self.assertAllClose(y.eval(), np.fft.rfft([1., 2., 3., 4.]))\n</code></pre>", "body_text": "If your usage is not performance critical yet (if you do, probably you better get a gpu), you can always fall back to numpy for prototyping your model. E.g., here is how you can use numpy fft modules to in tf:\n# a bit excotic function (rfft)\nwith self.test_session():\n  x = tf.constant([1., 2., 3., 4.], tf.float32)\n  def rfft(x):\n    return np.fft.rfft(x).astype(np.complex64)\n  y, = tf.py_func(rfft, [x], [tf.complex64])\n  self.assertAllClose(y.eval(), np.fft.rfft([1., 2., 3., 4.]))", "body": "If your usage is not performance critical yet (if you do, probably you better get a gpu), you can always fall back to numpy for prototyping your model. E.g., here is how you can use numpy fft modules to in tf:\n\n```\n# a bit excotic function (rfft)\nwith self.test_session():\n  x = tf.constant([1., 2., 3., 4.], tf.float32)\n  def rfft(x):\n    return np.fft.rfft(x).astype(np.complex64)\n  y, = tf.py_func(rfft, [x], [tf.complex64])\n  self.assertAllClose(y.eval(), np.fft.rfft([1., 2., 3., 4.]))\n```\n"}