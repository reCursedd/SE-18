{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/194883367", "pull_request_review_id": 128140543, "id": 194883367, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDg4MzM2Nw==", "diff_hunk": "@@ -0,0 +1,258 @@\n+/*\n+Copyright 2018 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+*/\n+\n+package tensorflow\n+\n+// #include <stdlib.h>\n+// #include \"tensorflow/c/c_api.h\"\n+//\n+// TF_AttrType attrMetadataType(TF_AttrMetadata meta) {\n+//   return meta.type;\n+// }\n+import \"C\"\n+import (\n+\t\"unsafe\"\n+\n+\t\"github.com/pkg/errors\"\n+)\n+\n+type AttrType C.TF_AttrType", "path": "tensorflow/go/attrs.go", "position": null, "original_position": 32, "commit_id": "f00771010853734065a73453f8e73df4b51483da", "original_commit_id": "0bf46a701d5315660b58e0b7bb3366c9db76fd5c", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "body": "For now, we've maintained a 1:1 correspondence between a Go type and an attribute type, which is why we don't need to export an \"attribute type\" concept when setting attributes (https://github.com/tensorflow/tensorflow/blob/5fa7b03a255d3c0d05aa48e7604a94185ef6b9e2/tensorflow/go/graph.go#L235).\r\n\r\nI'd be tempted to maintain that here. Can we do away with all the new types here and instead have a single:\r\n\r\n```go\r\nfunc (op *Operation) Attr(name string) (interface{}, error)\r\n```\r\n?\r\n\r\nWhy bother with `IsList`, `ListSize`, `TotalSize` etc.?", "created_at": "2018-06-12T20:47:53Z", "updated_at": "2018-06-13T16:41:25Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/19953#discussion_r194883367", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/19953", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/194883367"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/19953#discussion_r194883367"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/19953"}}, "body_html": "<p>For now, we've maintained a 1:1 correspondence between a Go type and an attribute type, which is why we don't need to export an \"attribute type\" concept when setting attributes (<div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/5fa7b03a255d3c0d05aa48e7604a94185ef6b9e2/tensorflow/go/graph.go#L235\">tensorflow/tensorflow/go/graph.go</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n         Line 235\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/5fa7b03a255d3c0d05aa48e7604a94185ef6b9e2\">5fa7b03</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L235\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"235\"></td>\n          <td id=\"LC235\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">func</span> <span class=\"pl-en\">setAttr</span>(<span class=\"pl-v\">cdesc</span> *<span class=\"pl-v\">C</span>.<span class=\"pl-v\">TF_OperationDescription</span>, <span class=\"pl-v\">status</span> *<span class=\"pl-v\">status</span>, <span class=\"pl-v\">name</span> <span class=\"pl-v\">string</span>, <span class=\"pl-v\">value</span> <span class=\"pl-v\">interface</span>{}) <span class=\"pl-v\">error</span> { </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n).</p>\n<p>I'd be tempted to maintain that here. Can we do away with all the new types here and instead have a single:</p>\n<div class=\"highlight highlight-source-go\"><pre><span class=\"pl-k\">func</span> <span class=\"pl-en\">(<span class=\"pl-v\">op</span> *<span class=\"pl-v\">Operation</span>) <span class=\"pl-en\">Attr</span></span>(<span class=\"pl-v\">name</span> <span class=\"pl-v\">string</span>) (<span class=\"pl-v\">interface</span>{}, <span class=\"pl-k\">error</span>)</pre></div>\n<p>?</p>\n<p>Why bother with <code>IsList</code>, <code>ListSize</code>, <code>TotalSize</code> etc.?</p>", "body_text": "For now, we've maintained a 1:1 correspondence between a Go type and an attribute type, which is why we don't need to export an \"attribute type\" concept when setting attributes (\n  \n    \n      tensorflow/tensorflow/go/graph.go\n    \n    \n         Line 235\n      in\n      5fa7b03\n    \n    \n    \n    \n\n        \n          \n           func setAttr(cdesc *C.TF_OperationDescription, status *status, name string, value interface{}) error { \n        \n    \n  \n\n).\nI'd be tempted to maintain that here. Can we do away with all the new types here and instead have a single:\nfunc (op *Operation) Attr(name string) (interface{}, error)\n?\nWhy bother with IsList, ListSize, TotalSize etc.?"}