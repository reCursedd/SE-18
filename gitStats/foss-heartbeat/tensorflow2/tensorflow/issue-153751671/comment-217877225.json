{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/217877225", "html_url": "https://github.com/tensorflow/tensorflow/issues/2289#issuecomment-217877225", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2289", "id": 217877225, "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzg3NzIyNQ==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2016-05-09T14:18:19Z", "updated_at": "2016-05-09T14:18:19Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Perhaps we need the <code>__array_priority__</code> hack in <code>tf.Variable</code>? We already use it in <code>tf.Tensor</code> <a href=\"https://github.com/tensorflow/tensorflow/blob/2296dd8060ce77c71fc820c77442835f050399dd/tensorflow/python/framework/ops.py#L407\">here</a>. Operator overloading is a mess....</p>", "body_text": "Perhaps we need the __array_priority__ hack in tf.Variable? We already use it in tf.Tensor here. Operator overloading is a mess....", "body": "Perhaps we need the `__array_priority__` hack in `tf.Variable`? We already use it in `tf.Tensor` [here](https://github.com/tensorflow/tensorflow/blob/2296dd8060ce77c71fc820c77442835f050399dd/tensorflow/python/framework/ops.py#L407). Operator overloading is a mess....\n"}