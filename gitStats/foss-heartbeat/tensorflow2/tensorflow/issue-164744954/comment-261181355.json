{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/261181355", "html_url": "https://github.com/tensorflow/tensorflow/issues/3261#issuecomment-261181355", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3261", "id": 261181355, "node_id": "MDEyOklzc3VlQ29tbWVudDI2MTE4MTM1NQ==", "user": {"login": "greg1github", "id": 4562787, "node_id": "MDQ6VXNlcjQ1NjI3ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/4562787?v=4", "gravatar_id": "", "url": "https://api.github.com/users/greg1github", "html_url": "https://github.com/greg1github", "followers_url": "https://api.github.com/users/greg1github/followers", "following_url": "https://api.github.com/users/greg1github/following{/other_user}", "gists_url": "https://api.github.com/users/greg1github/gists{/gist_id}", "starred_url": "https://api.github.com/users/greg1github/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/greg1github/subscriptions", "organizations_url": "https://api.github.com/users/greg1github/orgs", "repos_url": "https://api.github.com/users/greg1github/repos", "events_url": "https://api.github.com/users/greg1github/events{/privacy}", "received_events_url": "https://api.github.com/users/greg1github/received_events", "type": "User", "site_admin": false}, "created_at": "2016-11-17T08:08:02Z", "updated_at": "2016-11-17T08:23:23Z", "author_association": "NONE", "body_html": "<p>Still not working for me.  I use bazel-0.4.0 and tensorflow-0.11.0.</p>\n<p>I compiled bazel from the source, with CROSSTOOL modified so as to hard-code the library path</p>\n<p>linker_flag: \"-Wl,-rpath,/home/sr1/greg.m/lib/gcc-4.9.4_built/lib64\"</p>\n<p>and this setup does have an effect on bazel itself, even when I clear env variables</p>\n<p>env - ldd ~/bin/bazel<br>\nlinux-vdso.so.1 =&gt;  (0x00007ffe8999e000)<br>\nlibrt.so.1 =&gt; /lib64/librt.so.1 (0x000000347ee00000)<br>\nlibdl.so.2 =&gt; /lib64/libdl.so.2 (0x000000347e600000)<br>\nlibpthread.so.0 =&gt; /lib64/libpthread.so.0 (0x000000347e200000)<br>\n<strong>libstdc++.so.6</strong> =&gt; /home/sr1/greg.m/lib/gcc-4.9.4_built/lib64/libstdc++.so.6 (0x00002ae1100c1000)<br>\nlibm.so.6 =&gt; /lib64/libm.so.6 (0x000000347ea00000)<br>\nlibgcc_s.so.1 =&gt; /home/sr1/greg.m/lib/gcc-4.9.4_built/lib64/libgcc_s.so.1 (0x00002ae1103d3000)<br>\nlibc.so.6 =&gt; /lib64/libc.so.6 (0x000000347de00000)<br>\n/lib64/ld-linux-x86-64.so.2 (0x000000347d600000)</p>\n<p>However, when I try to build tensorflow with that bazel binary, protoc complains about missing libraries</p>\n<p>bazel build -c opt --config=cuda --verbose_failures //tensorflow/tools/pip_package:build_pip_package<br>\n...<br>\nERROR: /home/sr1/greg.m/lib/tensorflow-0.11.0/tensorflow/python/BUILD:1611:1: null failed: protoc failed: error executing command<br>\n(cd /scratch/greg.m/.cache/bazel/_bazel_greg.m/a9520ec1e3d4c7a317ca28043c7f63b1/execroot/tensorflow-0.11.0 &amp;&amp; <br>\nexec env - <br>\nbazel-out/host/bin/external/protobuf/protoc '--python_out=bazel-out/local_linux-py3-opt/genfiles/' -I. -Iexternal/protobuf/python -Ibazel-out/local_linux-py3-opt/genfiles/external/protobuf/python tensorflow/python/training/checkpoint_state.proto): com.google.devtools.build.lib.shell.BadExitStatusException: Process exited with status 1.</p>\n<p>And I verified that the protoc indeed is missing the path to libstdc++.so.6 that we expect to see because of the linker_flag added to CROSSTOOL</p>\n<p>env - ldd bazel-out/host/bin/external/protobuf/protoc<br>\nbazel-out/host/bin/external/protobuf/protoc: /usr/lib64/libstdc++.so.6: version <code>GLIBCXX_3.4.20' not found (required by bazel-out/host/bin/external/protobuf/protoc) bazel-out/host/bin/external/protobuf/protoc: /usr/lib64/libstdc++.so.6: version</code>CXXABI_1.3.8' not found (required by bazel-out/host/bin/external/protobuf/protoc)<br>\nbazel-out/host/bin/external/protobuf/protoc: /usr/lib64/libstdc++.so.6: version `GLIBCXX_3.4.18' not found (required by bazel-out/host/bin/external/protobuf/protoc)<br>\nlinux-vdso.so.1 =&gt;  (0x00007fffa0aa2000)<br>\nlibpthread.so.0 =&gt; /lib64/libpthread.so.0 (0x00002ab8e7ec3000)<br>\n<strong>libstdc++.so.6</strong> =&gt; /usr/lib64/libstdc++.so.6 (0x00002ab8e80e0000)<br>\nlibgcc_s.so.1 =&gt; /lib64/libgcc_s.so.1 (0x00002ab8e83e7000)<br>\nlibc.so.6 =&gt; /lib64/libc.so.6 (0x00002ab8e85fd000)<br>\n/lib64/ld-linux-x86-64.so.2 (0x000000347d600000)<br>\nlibm.so.6 =&gt; /lib64/libm.so.6 (0x00002ab8e8991000)</p>\n<p>Without clearing env variables, protoc has the library</p>\n<p>ldd bazel-out/host/bin/external/protobuf/protoc<br>\nlinux-vdso.so.1 =&gt;  (0x00007ffebe1f2000)<br>\nlibpthread.so.0 =&gt; /lib64/libpthread.so.0 (0x00002b11fde14000)<br>\n<strong>libstdc++.so.6</strong> =&gt; /home/sr1/greg.m/lib/gcc-4.9.4_built/lib64/libstdc++.so.6 (0x00002b11fe032000)<br>\nlibgcc_s.so.1 =&gt; /home/sr1/greg.m/lib/gcc-4.9.4_built/lib64/libgcc_s.so.1 (0x00002b11fe344000)<br>\nlibc.so.6 =&gt; /lib64/libc.so.6 (0x00002b11fe55a000)<br>\n/lib64/ld-linux-x86-64.so.2 (0x000000347d600000)<br>\nlibm.so.6 =&gt; /lib64/libm.so.6 (0x00002b11fe8ef000)</p>", "body_text": "Still not working for me.  I use bazel-0.4.0 and tensorflow-0.11.0.\nI compiled bazel from the source, with CROSSTOOL modified so as to hard-code the library path\nlinker_flag: \"-Wl,-rpath,/home/sr1/greg.m/lib/gcc-4.9.4_built/lib64\"\nand this setup does have an effect on bazel itself, even when I clear env variables\nenv - ldd ~/bin/bazel\nlinux-vdso.so.1 =>  (0x00007ffe8999e000)\nlibrt.so.1 => /lib64/librt.so.1 (0x000000347ee00000)\nlibdl.so.2 => /lib64/libdl.so.2 (0x000000347e600000)\nlibpthread.so.0 => /lib64/libpthread.so.0 (0x000000347e200000)\nlibstdc++.so.6 => /home/sr1/greg.m/lib/gcc-4.9.4_built/lib64/libstdc++.so.6 (0x00002ae1100c1000)\nlibm.so.6 => /lib64/libm.so.6 (0x000000347ea00000)\nlibgcc_s.so.1 => /home/sr1/greg.m/lib/gcc-4.9.4_built/lib64/libgcc_s.so.1 (0x00002ae1103d3000)\nlibc.so.6 => /lib64/libc.so.6 (0x000000347de00000)\n/lib64/ld-linux-x86-64.so.2 (0x000000347d600000)\nHowever, when I try to build tensorflow with that bazel binary, protoc complains about missing libraries\nbazel build -c opt --config=cuda --verbose_failures //tensorflow/tools/pip_package:build_pip_package\n...\nERROR: /home/sr1/greg.m/lib/tensorflow-0.11.0/tensorflow/python/BUILD:1611:1: null failed: protoc failed: error executing command\n(cd /scratch/greg.m/.cache/bazel/_bazel_greg.m/a9520ec1e3d4c7a317ca28043c7f63b1/execroot/tensorflow-0.11.0 && \nexec env - \nbazel-out/host/bin/external/protobuf/protoc '--python_out=bazel-out/local_linux-py3-opt/genfiles/' -I. -Iexternal/protobuf/python -Ibazel-out/local_linux-py3-opt/genfiles/external/protobuf/python tensorflow/python/training/checkpoint_state.proto): com.google.devtools.build.lib.shell.BadExitStatusException: Process exited with status 1.\nAnd I verified that the protoc indeed is missing the path to libstdc++.so.6 that we expect to see because of the linker_flag added to CROSSTOOL\nenv - ldd bazel-out/host/bin/external/protobuf/protoc\nbazel-out/host/bin/external/protobuf/protoc: /usr/lib64/libstdc++.so.6: version GLIBCXX_3.4.20' not found (required by bazel-out/host/bin/external/protobuf/protoc) bazel-out/host/bin/external/protobuf/protoc: /usr/lib64/libstdc++.so.6: versionCXXABI_1.3.8' not found (required by bazel-out/host/bin/external/protobuf/protoc)\nbazel-out/host/bin/external/protobuf/protoc: /usr/lib64/libstdc++.so.6: version `GLIBCXX_3.4.18' not found (required by bazel-out/host/bin/external/protobuf/protoc)\nlinux-vdso.so.1 =>  (0x00007fffa0aa2000)\nlibpthread.so.0 => /lib64/libpthread.so.0 (0x00002ab8e7ec3000)\nlibstdc++.so.6 => /usr/lib64/libstdc++.so.6 (0x00002ab8e80e0000)\nlibgcc_s.so.1 => /lib64/libgcc_s.so.1 (0x00002ab8e83e7000)\nlibc.so.6 => /lib64/libc.so.6 (0x00002ab8e85fd000)\n/lib64/ld-linux-x86-64.so.2 (0x000000347d600000)\nlibm.so.6 => /lib64/libm.so.6 (0x00002ab8e8991000)\nWithout clearing env variables, protoc has the library\nldd bazel-out/host/bin/external/protobuf/protoc\nlinux-vdso.so.1 =>  (0x00007ffebe1f2000)\nlibpthread.so.0 => /lib64/libpthread.so.0 (0x00002b11fde14000)\nlibstdc++.so.6 => /home/sr1/greg.m/lib/gcc-4.9.4_built/lib64/libstdc++.so.6 (0x00002b11fe032000)\nlibgcc_s.so.1 => /home/sr1/greg.m/lib/gcc-4.9.4_built/lib64/libgcc_s.so.1 (0x00002b11fe344000)\nlibc.so.6 => /lib64/libc.so.6 (0x00002b11fe55a000)\n/lib64/ld-linux-x86-64.so.2 (0x000000347d600000)\nlibm.so.6 => /lib64/libm.so.6 (0x00002b11fe8ef000)", "body": "Still not working for me.  I use bazel-0.4.0 and tensorflow-0.11.0.\n\nI compiled bazel from the source, with CROSSTOOL modified so as to hard-code the library path\n\n  linker_flag: \"-Wl,-rpath,/home/sr1/greg.m/lib/gcc-4.9.4_built/lib64\"\n\nand this setup does have an effect on bazel itself, even when I clear env variables\n\nenv - ldd ~/bin/bazel\n        linux-vdso.so.1 =>  (0x00007ffe8999e000)\n        librt.so.1 => /lib64/librt.so.1 (0x000000347ee00000)\n        libdl.so.2 => /lib64/libdl.so.2 (0x000000347e600000)\n        libpthread.so.0 => /lib64/libpthread.so.0 (0x000000347e200000)\n        **libstdc++.so.6** => /home/sr1/greg.m/lib/gcc-4.9.4_built/lib64/libstdc++.so.6 (0x00002ae1100c1000)\n        libm.so.6 => /lib64/libm.so.6 (0x000000347ea00000)\n        libgcc_s.so.1 => /home/sr1/greg.m/lib/gcc-4.9.4_built/lib64/libgcc_s.so.1 (0x00002ae1103d3000)\n        libc.so.6 => /lib64/libc.so.6 (0x000000347de00000)\n        /lib64/ld-linux-x86-64.so.2 (0x000000347d600000)\n\nHowever, when I try to build tensorflow with that bazel binary, protoc complains about missing libraries\n\nbazel build -c opt --config=cuda --verbose_failures //tensorflow/tools/pip_package:build_pip_package\n...\nERROR: /home/sr1/greg.m/lib/tensorflow-0.11.0/tensorflow/python/BUILD:1611:1: null failed: protoc failed: error executing command \n  (cd /scratch/greg.m/.cache/bazel/_bazel_greg.m/a9520ec1e3d4c7a317ca28043c7f63b1/execroot/tensorflow-0.11.0 && \\\n  exec env - \\\n  bazel-out/host/bin/external/protobuf/protoc '--python_out=bazel-out/local_linux-py3-opt/genfiles/' -I. -Iexternal/protobuf/python -Ibazel-out/local_linux-py3-opt/genfiles/external/protobuf/python tensorflow/python/training/checkpoint_state.proto): com.google.devtools.build.lib.shell.BadExitStatusException: Process exited with status 1.\n\nAnd I verified that the protoc indeed is missing the path to libstdc++.so.6 that we expect to see because of the linker_flag added to CROSSTOOL \n\nenv - ldd bazel-out/host/bin/external/protobuf/protoc\nbazel-out/host/bin/external/protobuf/protoc: /usr/lib64/libstdc++.so.6: version `GLIBCXX_3.4.20' not found (required by bazel-out/host/bin/external/protobuf/protoc)\nbazel-out/host/bin/external/protobuf/protoc: /usr/lib64/libstdc++.so.6: version`CXXABI_1.3.8' not found (required by bazel-out/host/bin/external/protobuf/protoc)\nbazel-out/host/bin/external/protobuf/protoc: /usr/lib64/libstdc++.so.6: version `GLIBCXX_3.4.18' not found (required by bazel-out/host/bin/external/protobuf/protoc)\n        linux-vdso.so.1 =>  (0x00007fffa0aa2000)\n        libpthread.so.0 => /lib64/libpthread.so.0 (0x00002ab8e7ec3000)\n        **libstdc++.so.6** => /usr/lib64/libstdc++.so.6 (0x00002ab8e80e0000)\n        libgcc_s.so.1 => /lib64/libgcc_s.so.1 (0x00002ab8e83e7000)\n        libc.so.6 => /lib64/libc.so.6 (0x00002ab8e85fd000)\n        /lib64/ld-linux-x86-64.so.2 (0x000000347d600000)\n        libm.so.6 => /lib64/libm.so.6 (0x00002ab8e8991000)\n\nWithout clearing env variables, protoc has the library\n\nldd bazel-out/host/bin/external/protobuf/protoc\n        linux-vdso.so.1 =>  (0x00007ffebe1f2000)\n        libpthread.so.0 => /lib64/libpthread.so.0 (0x00002b11fde14000)\n        **libstdc++.so.6** => /home/sr1/greg.m/lib/gcc-4.9.4_built/lib64/libstdc++.so.6 (0x00002b11fe032000)\n        libgcc_s.so.1 => /home/sr1/greg.m/lib/gcc-4.9.4_built/lib64/libgcc_s.so.1 (0x00002b11fe344000)\n        libc.so.6 => /lib64/libc.so.6 (0x00002b11fe55a000)\n        /lib64/ld-linux-x86-64.so.2 (0x000000347d600000)\n        libm.so.6 => /lib64/libm.so.6 (0x00002b11fe8ef000)\n"}