{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6286", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6286/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6286/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6286/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/6286", "id": 195263819, "node_id": "MDU6SXNzdWUxOTUyNjM4MTk=", "number": 6286, "title": "Problem about get_variable() and variable_scope()", "user": {"login": "SJTUzhanglj", "id": 20128487, "node_id": "MDQ6VXNlcjIwMTI4NDg3", "avatar_url": "https://avatars0.githubusercontent.com/u/20128487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SJTUzhanglj", "html_url": "https://github.com/SJTUzhanglj", "followers_url": "https://api.github.com/users/SJTUzhanglj/followers", "following_url": "https://api.github.com/users/SJTUzhanglj/following{/other_user}", "gists_url": "https://api.github.com/users/SJTUzhanglj/gists{/gist_id}", "starred_url": "https://api.github.com/users/SJTUzhanglj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SJTUzhanglj/subscriptions", "organizations_url": "https://api.github.com/users/SJTUzhanglj/orgs", "repos_url": "https://api.github.com/users/SJTUzhanglj/repos", "events_url": "https://api.github.com/users/SJTUzhanglj/events{/privacy}", "received_events_url": "https://api.github.com/users/SJTUzhanglj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-13T14:15:39Z", "updated_at": "2016-12-13T21:40:26Z", "closed_at": "2016-12-13T21:40:26Z", "author_association": "NONE", "body_html": "<p>NOTE: Only file GitHub issues for bugs and feature requests.  All other topics will be closed.</p>\n<p>For general support from the community, see <a href=\"https://stackoverflow.com/questions/tagged/tensorflow\" rel=\"nofollow\">StackOverflow</a>.<br>\nTo make bugs and feature requests more easy to find and organize, we close issues that are deemed<br>\nout of scope for GitHub Issues and point people to StackOverflow.</p>\n<p>For bugs or installation issues, please provide the following information.<br>\nThe more information you provide, the more easily we will be able to offer<br>\nhelp and advice.</p>\n<h3>What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?</h3>\n<p>I retrained the inception-V3 model according to the image_retrain example with one extra conv and pool layers on the top of the original bottleneck layer. The two layers are initialized with get_variable() function<br>\nin a variable_scope() and after training the graph and parameters are stored in a .pb file.<br>\nBut when i read the just trained .pb file for test and wanna retrieve the variables in the two layers, with variable_scope() and get_variable(,reuse=true), exception are raised about<br>\n'Variable weights/W does not exist, or was not created with tf.get_variable(). Did you mean to set reuse=None in VarScope?'</p>\n<h3>Environment info</h3>\n<p>Operating System: Ubuntu 14.04</p>\n<p>Installed version of CUDA and cuDNN:<br>\n(please attach the output of <code>ls -l /path/to/cuda/lib/libcud*</code>):<br>\ncuda 8.0<br>\ncudnn 5.1</p>\n<p>If installed from binary pip package, provide:</p>\n<ol>\n<li>A link to the pip package you installed: rc0.12.0</li>\n<li>The output from <code>python -c \"import tensorflow; print(tensorflow.__version__)\"</code>.<br>\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally<br>\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so locally<br>\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally<br>\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally<br>\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally<br>\n0.12.0-rc0</li>\n</ol>\n<h3>If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)</h3>\n<p>I initialize the two extra layer as:</p>\n<pre><code>  with tf.variable_scope('CAM_unit'):\n      CAM_conv = new_conv_layer(bottleneck_input,   [3,3,BOTTLENECK_TENSOR_SIZE,BOTTLENECK_TENSOR_SIZE], 'CAM_CONV')\n      CAM_pool = tf.reduce_mean(tf.nn.relu(CAM_conv), [1,2], name='CAM_AVG_POOL')\n  with tf.variable_scope('weights'):\n      layer_weights = tf.get_variable('W', \n                                      shape = [BOTTLENECK_TENSOR_SIZE, class_count], \n                                      initializer = tf.random_normal_initializer(0., 0.01))\n</code></pre>\n<p>And access the weights/W variables as:</p>\n<pre><code> with tf.variable_scope('weights', reuse=True):\n        label_w = tf.gather(tf.transpose(tf.get_variable('W')), label)\n</code></pre>\n<p>error is<br>\n<code>Variable weights/W does not exist, or was not created with tf.get_variable(). Did you mean to set reuse=None in VarScope?</code></p>\n<h3>What other attempted solutions have you tried?</h3>\n<p>I tried to set reuse=None, but the error is<br>\n<code>Shape of a new variable (weights/W) must be fully defined, but instead was &lt;unknown&gt;</code><br>\nI doubt about the .pb file in which the model converged with a very high accuracy, because when i retrain again with this output .pb file, the accuracy is very low like an untrained one. But i import the model, the new added layers are there as expected, just inaccessible with get_variable()</p>\n<h3>Logs or other output that would be helpful</h3>\n<p>(If logs are large, please upload as attachment or provide link).<br>\nI import the .pb file with code:</p>\n<pre><code>ops = [op.name for op in graph.get_operations() if 'weights/' in op.name]\n    pprint.pprint(ops)\n</code></pre>\n<p>and find the weights/W variables are available:<br>\n<code>[u'weights/W', u'weights/W/read']</code></p>", "body_text": "NOTE: Only file GitHub issues for bugs and feature requests.  All other topics will be closed.\nFor general support from the community, see StackOverflow.\nTo make bugs and feature requests more easy to find and organize, we close issues that are deemed\nout of scope for GitHub Issues and point people to StackOverflow.\nFor bugs or installation issues, please provide the following information.\nThe more information you provide, the more easily we will be able to offer\nhelp and advice.\nWhat related GitHub issues or StackOverflow threads have you found by searching the web for your problem?\nI retrained the inception-V3 model according to the image_retrain example with one extra conv and pool layers on the top of the original bottleneck layer. The two layers are initialized with get_variable() function\nin a variable_scope() and after training the graph and parameters are stored in a .pb file.\nBut when i read the just trained .pb file for test and wanna retrieve the variables in the two layers, with variable_scope() and get_variable(,reuse=true), exception are raised about\n'Variable weights/W does not exist, or was not created with tf.get_variable(). Did you mean to set reuse=None in VarScope?'\nEnvironment info\nOperating System: Ubuntu 14.04\nInstalled version of CUDA and cuDNN:\n(please attach the output of ls -l /path/to/cuda/lib/libcud*):\ncuda 8.0\ncudnn 5.1\nIf installed from binary pip package, provide:\n\nA link to the pip package you installed: rc0.12.0\nThe output from python -c \"import tensorflow; print(tensorflow.__version__)\".\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally\n0.12.0-rc0\n\nIf possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\nI initialize the two extra layer as:\n  with tf.variable_scope('CAM_unit'):\n      CAM_conv = new_conv_layer(bottleneck_input,   [3,3,BOTTLENECK_TENSOR_SIZE,BOTTLENECK_TENSOR_SIZE], 'CAM_CONV')\n      CAM_pool = tf.reduce_mean(tf.nn.relu(CAM_conv), [1,2], name='CAM_AVG_POOL')\n  with tf.variable_scope('weights'):\n      layer_weights = tf.get_variable('W', \n                                      shape = [BOTTLENECK_TENSOR_SIZE, class_count], \n                                      initializer = tf.random_normal_initializer(0., 0.01))\n\nAnd access the weights/W variables as:\n with tf.variable_scope('weights', reuse=True):\n        label_w = tf.gather(tf.transpose(tf.get_variable('W')), label)\n\nerror is\nVariable weights/W does not exist, or was not created with tf.get_variable(). Did you mean to set reuse=None in VarScope?\nWhat other attempted solutions have you tried?\nI tried to set reuse=None, but the error is\nShape of a new variable (weights/W) must be fully defined, but instead was <unknown>\nI doubt about the .pb file in which the model converged with a very high accuracy, because when i retrain again with this output .pb file, the accuracy is very low like an untrained one. But i import the model, the new added layers are there as expected, just inaccessible with get_variable()\nLogs or other output that would be helpful\n(If logs are large, please upload as attachment or provide link).\nI import the .pb file with code:\nops = [op.name for op in graph.get_operations() if 'weights/' in op.name]\n    pprint.pprint(ops)\n\nand find the weights/W variables are available:\n[u'weights/W', u'weights/W/read']", "body": "NOTE: Only file GitHub issues for bugs and feature requests.  All other topics will be closed.\r\n\r\nFor general support from the community, see [StackOverflow](https://stackoverflow.com/questions/tagged/tensorflow).\r\nTo make bugs and feature requests more easy to find and organize, we close issues that are deemed\r\nout of scope for GitHub Issues and point people to StackOverflow.\r\n\r\nFor bugs or installation issues, please provide the following information.\r\nThe more information you provide, the more easily we will be able to offer\r\nhelp and advice.\r\n\r\n### What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?\r\nI retrained the inception-V3 model according to the image_retrain example with one extra conv and pool layers on the top of the original bottleneck layer. The two layers are initialized with get_variable() function\r\nin a variable_scope() and after training the graph and parameters are stored in a .pb file.\r\nBut when i read the just trained .pb file for test and wanna retrieve the variables in the two layers, with variable_scope() and get_variable(,reuse=true), exception are raised about \r\n'Variable weights/W does not exist, or was not created with tf.get_variable(). Did you mean to set reuse=None in VarScope?'\r\n\r\n### Environment info\r\nOperating System: Ubuntu 14.04\r\n\r\nInstalled version of CUDA and cuDNN: \r\n(please attach the output of `ls -l /path/to/cuda/lib/libcud*`):\r\ncuda 8.0\r\ncudnn 5.1\r\n\r\nIf installed from binary pip package, provide:\r\n\r\n1. A link to the pip package you installed: rc0.12.0\r\n2. The output from `python -c \"import tensorflow; print(tensorflow.__version__)\"`.\r\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally\r\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so locally\r\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally\r\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally\r\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally\r\n0.12.0-rc0\r\n\r\n\r\n\r\n### If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\r\nI initialize the two extra layer as:\r\n\r\n```\r\n  with tf.variable_scope('CAM_unit'):\r\n      CAM_conv = new_conv_layer(bottleneck_input,   [3,3,BOTTLENECK_TENSOR_SIZE,BOTTLENECK_TENSOR_SIZE], 'CAM_CONV')\r\n      CAM_pool = tf.reduce_mean(tf.nn.relu(CAM_conv), [1,2], name='CAM_AVG_POOL')\r\n  with tf.variable_scope('weights'):\r\n      layer_weights = tf.get_variable('W', \r\n                                      shape = [BOTTLENECK_TENSOR_SIZE, class_count], \r\n                                      initializer = tf.random_normal_initializer(0., 0.01))\r\n```\r\n\r\nAnd access the weights/W variables as:\r\n\r\n```\r\n with tf.variable_scope('weights', reuse=True):\r\n        label_w = tf.gather(tf.transpose(tf.get_variable('W')), label)\r\n```\r\nerror is\r\n`Variable weights/W does not exist, or was not created with tf.get_variable(). Did you mean to set reuse=None in VarScope?`\r\n\r\n### What other attempted solutions have you tried?\r\nI tried to set reuse=None, but the error is \r\n`Shape of a new variable (weights/W) must be fully defined, but instead was <unknown>`\r\nI doubt about the .pb file in which the model converged with a very high accuracy, because when i retrain again with this output .pb file, the accuracy is very low like an untrained one. But i import the model, the new added layers are there as expected, just inaccessible with get_variable()\r\n\r\n\r\n### Logs or other output that would be helpful\r\n(If logs are large, please upload as attachment or provide link).\r\nI import the .pb file with code:\r\n```\r\nops = [op.name for op in graph.get_operations() if 'weights/' in op.name]\r\n    pprint.pprint(ops)\r\n```\r\nand find the weights/W variables are available:\r\n`[u'weights/W', u'weights/W/read']`"}