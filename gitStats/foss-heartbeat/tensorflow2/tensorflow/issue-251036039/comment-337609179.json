{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/337609179", "html_url": "https://github.com/tensorflow/tensorflow/issues/12367#issuecomment-337609179", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12367", "id": 337609179, "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzYwOTE3OQ==", "user": {"login": "sudododo", "id": 14881815, "node_id": "MDQ6VXNlcjE0ODgxODE1", "avatar_url": "https://avatars1.githubusercontent.com/u/14881815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sudododo", "html_url": "https://github.com/sudododo", "followers_url": "https://api.github.com/users/sudododo/followers", "following_url": "https://api.github.com/users/sudododo/following{/other_user}", "gists_url": "https://api.github.com/users/sudododo/gists{/gist_id}", "starred_url": "https://api.github.com/users/sudododo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sudododo/subscriptions", "organizations_url": "https://api.github.com/users/sudododo/orgs", "repos_url": "https://api.github.com/users/sudododo/repos", "events_url": "https://api.github.com/users/sudododo/events{/privacy}", "received_events_url": "https://api.github.com/users/sudododo/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-18T14:26:03Z", "updated_at": "2017-10-18T14:26:03Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=7421733\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/rutadesai\">@rutadesai</a> Sorry for the late reply. build_parsing_serving_input_fn and build_raw_serving_input_receiver_fn are expecting different inputs. build_parsing_serving_input_fn expect feature_spec which you could consider as some sort of \"data contract\" so that TensorFlow serving can translate the request. So what you did is valid for build_parsing_serving_input_fn. However, it you serve the mode locally (without TensorFlow serving), you need to define the input tensor of your graph. Therefore you have to define a placeholder. Actually if you check the input names of two functions, build_parsing_serving_input_fn is \"feature_spec\" vs \"feature\" for build_raw_serving_input_receiver_fn.</p>", "body_text": "@rutadesai Sorry for the late reply. build_parsing_serving_input_fn and build_raw_serving_input_receiver_fn are expecting different inputs. build_parsing_serving_input_fn expect feature_spec which you could consider as some sort of \"data contract\" so that TensorFlow serving can translate the request. So what you did is valid for build_parsing_serving_input_fn. However, it you serve the mode locally (without TensorFlow serving), you need to define the input tensor of your graph. Therefore you have to define a placeholder. Actually if you check the input names of two functions, build_parsing_serving_input_fn is \"feature_spec\" vs \"feature\" for build_raw_serving_input_receiver_fn.", "body": "@rutadesai Sorry for the late reply. build_parsing_serving_input_fn and build_raw_serving_input_receiver_fn are expecting different inputs. build_parsing_serving_input_fn expect feature_spec which you could consider as some sort of \"data contract\" so that TensorFlow serving can translate the request. So what you did is valid for build_parsing_serving_input_fn. However, it you serve the mode locally (without TensorFlow serving), you need to define the input tensor of your graph. Therefore you have to define a placeholder. Actually if you check the input names of two functions, build_parsing_serving_input_fn is \"feature_spec\" vs \"feature\" for build_raw_serving_input_receiver_fn."}