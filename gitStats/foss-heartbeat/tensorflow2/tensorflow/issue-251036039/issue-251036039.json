{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12367", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12367/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12367/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12367/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/12367", "id": 251036039, "node_id": "MDU6SXNzdWUyNTEwMzYwMzk=", "number": 12367, "title": "Estimator classification export feature request: input single string Tensor input limitation.", "user": {"login": "Ouwen", "id": 5455421, "node_id": "MDQ6VXNlcjU0NTU0MjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5455421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ouwen", "html_url": "https://github.com/Ouwen", "followers_url": "https://api.github.com/users/Ouwen/followers", "following_url": "https://api.github.com/users/Ouwen/following{/other_user}", "gists_url": "https://api.github.com/users/Ouwen/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ouwen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ouwen/subscriptions", "organizations_url": "https://api.github.com/users/Ouwen/orgs", "repos_url": "https://api.github.com/users/Ouwen/repos", "events_url": "https://api.github.com/users/Ouwen/events{/privacy}", "received_events_url": "https://api.github.com/users/Ouwen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2017-08-17T18:44:46Z", "updated_at": "2018-06-07T16:29:57Z", "closed_at": "2017-10-09T23:54:30Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Within class <code>ClassificationOutput</code> contains the <code>as_signature_def</code> method. I was wondering why there is a limitation that this method only allows recievor_tensors of length 1.</p>\n<p><div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/53aef8a3a5920e53f7da3ea2140374546d1bf708/tensorflow/python/estimator/export/export_output.py#L109-L118\">tensorflow/tensorflow/python/estimator/export/export_output.py</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 109 to 118\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/53aef8a3a5920e53f7da3ea2140374546d1bf708\">53aef8a</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L109\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"109\"></td>\n          <td id=\"LC109\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">def</span> <span class=\"pl-en\">as_signature_def</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>, <span class=\"pl-smi\">receiver_tensors</span>): </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L110\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"110\"></td>\n          <td id=\"LC110\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-k\">if</span> <span class=\"pl-c1\">len</span>(receiver_tensors) <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">1</span>: </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L111\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"111\"></td>\n          <td id=\"LC111\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-k\">raise</span> <span class=\"pl-c1\">ValueError</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Classification input must be a single string Tensor; <span class=\"pl-pds\">'</span></span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L112\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"112\"></td>\n          <td id=\"LC112\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">                      <span class=\"pl-s\"><span class=\"pl-pds\">'</span>got <span class=\"pl-c1\">{}</span><span class=\"pl-pds\">'</span></span>.format(receiver_tensors)) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L113\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"113\"></td>\n          <td id=\"LC113\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   (_, examples), <span class=\"pl-k\">=</span> receiver_tensors.items() </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L114\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"114\"></td>\n          <td id=\"LC114\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-k\">if</span> dtypes.as_dtype(examples.dtype) <span class=\"pl-k\">!=</span> dtypes.string: </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L115\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"115\"></td>\n          <td id=\"LC115\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-k\">raise</span> <span class=\"pl-c1\">ValueError</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Classification input must be a single string Tensor; <span class=\"pl-pds\">'</span></span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L116\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"116\"></td>\n          <td id=\"LC116\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">                      <span class=\"pl-s\"><span class=\"pl-pds\">'</span>got <span class=\"pl-c1\">{}</span><span class=\"pl-pds\">'</span></span>.format(receiver_tensors)) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L117\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"117\"></td>\n          <td id=\"LC117\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-k\">return</span> signature_def_utils.classification_signature_def( </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L118\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"118\"></td>\n          <td id=\"LC118\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">       examples, <span class=\"pl-c1\">self</span>.classes, <span class=\"pl-c1\">self</span>.scores) </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<p>For example the following code should seemingly just \"work\" for the model created from the <a href=\"https://github.com/tensorflow/tensorflow/blob/r1.3/tensorflow/examples/learn/wide_n_deep_tutorial.py\">wide and deep model tutorial.<br>\n</a></p>\n<pre><code>feature_inputs = {\n        'age': tf.placeholder(dtype=tf.float32, shape=[1,1], name='age'),\n        'capital_gain': tf.placeholder(dtype=tf.float32, shape=[1,1], name='age'),\n        'capital_loss': tf.placeholder(dtype=tf.float32, shape=[1,1], name='capital_loss'),\n        'education': tf.placeholder(dtype=tf.string, shape=[1,1], name='education'),\n        'education_num': tf.placeholder(dtype=tf.float32, shape=[1,1], name='education_num'),\n        'gender': tf.placeholder(dtype=tf.string, shape=[1,1], name='gender'),\n        'hours_per_week': tf.placeholder(dtype=tf.float32, shape=[1,1], name='hours_per_week'),\n        'native_country': tf.placeholder(dtype=tf.string, shape=[1,1], name='native_country'),\n        'occupation': tf.placeholder(dtype=tf.string, shape=[1,1], name='occupation'),\n        'relationship': tf.placeholder(dtype=tf.string, shape=[1,1], name='relationship'),\n        'workclass': tf.placeholder(dtype=tf.string, shape=[1,1], name='workclass') \n    }\n\nserving_input_receiver_fn = tf.estimator.export.build_raw_serving_input_receiver_fn(feature_inputs)\n\n# model is the loaded wide and deep model produced\nmodel.export_savedmodel(\"./my_dir\",  serving_input_receiver_fn)\n</code></pre>\n<p>However there is an error here:</p>\n<pre><code>/usr/local/lib/python2.7/dist-packages/tensorflow/python/estimator/export/export.pyc in build_all_signature_defs(receiver_tensors, export_outputs)\n    158       '{}'.format(output_key or 'None'):\n    159       export_output.as_signature_def(receiver_tensors)\n--&gt; 160       for output_key, export_output in export_outputs.items()}\n    161 \n    162   return signature_def_map\n\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/estimator/export/export.pyc in &lt;dictcomp&gt;((output_key, export_output))\n    158       '{}'.format(output_key or 'None'):\n    159       export_output.as_signature_def(receiver_tensors)\n--&gt; 160       for output_key, export_output in export_outputs.items()}\n    161 \n    162   return signature_def_map\n\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/estimator/export/export_output.pyc in as_signature_def(self, receiver_tensors)\n    110     if len(receiver_tensors) != 1:\n    111       raise ValueError('Classification input must be a single string Tensor; '\n--&gt; 112                        'got {}'.format(receiver_tensors))\n    113     (_, examples), = receiver_tensors.items()\n    114     if dtypes.as_dtype(examples.dtype) != dtypes.string:\n\nValueError: Classification input must be a single string Tensor; got {'hours_per_week': &lt;tf.Tensor 'hours_per_week_14_1:0' shape=(?, 1) dtype=float32&gt;, 'native_country': &lt;tf.Tensor 'native_country_14_1:0' shape=(?, 1) dtype=string&gt;, 'relationship': &lt;tf.Tensor 'relationship_14_1:0' shape=(?, 1) dtype=string&gt;, 'gender': &lt;tf.Tensor 'gender_14_1:0' shape=(?, 1) dtype=string&gt;, 'age': &lt;tf.Tensor 'age_14_1:0' shape=(?, 1) dtype=float32&gt;, 'capital_gain': &lt;tf.Tensor 'capital_gain_14_1:0' shape=(?, 1) dtype=float32&gt;, 'workclass': &lt;tf.Tensor 'workclass_14_1:0' shape=(?, 1) dtype=string&gt;, 'capital_loss': &lt;tf.Tensor 'capital_loss_14_1:0' shape=(?, 1) dtype=float32&gt;, 'education': &lt;tf.Tensor 'education_14_1:0' shape=(?, 1) dtype=string&gt;, 'education_num': &lt;tf.Tensor 'education_num_14_1:0' shape=(?, 1) dtype=float32&gt;, 'occupation': &lt;tf.Tensor 'occupation_14_1:0' shape=(?, 1) dtype=string&gt;}\n</code></pre>", "body_text": "Within class ClassificationOutput contains the as_signature_def method. I was wondering why there is a limitation that this method only allows recievor_tensors of length 1.\n\n  \n    \n      tensorflow/tensorflow/python/estimator/export/export_output.py\n    \n    \n        Lines 109 to 118\n      in\n      53aef8a\n    \n    \n    \n    \n\n        \n          \n           def as_signature_def(self, receiver_tensors): \n        \n\n        \n          \n             if len(receiver_tensors) != 1: \n        \n\n        \n          \n               raise ValueError('Classification input must be a single string Tensor; ' \n        \n\n        \n          \n                                'got {}'.format(receiver_tensors)) \n        \n\n        \n          \n             (_, examples), = receiver_tensors.items() \n        \n\n        \n          \n             if dtypes.as_dtype(examples.dtype) != dtypes.string: \n        \n\n        \n          \n               raise ValueError('Classification input must be a single string Tensor; ' \n        \n\n        \n          \n                                'got {}'.format(receiver_tensors)) \n        \n\n        \n          \n             return signature_def_utils.classification_signature_def( \n        \n\n        \n          \n                 examples, self.classes, self.scores) \n        \n    \n  \n\n\nFor example the following code should seemingly just \"work\" for the model created from the wide and deep model tutorial.\n\nfeature_inputs = {\n        'age': tf.placeholder(dtype=tf.float32, shape=[1,1], name='age'),\n        'capital_gain': tf.placeholder(dtype=tf.float32, shape=[1,1], name='age'),\n        'capital_loss': tf.placeholder(dtype=tf.float32, shape=[1,1], name='capital_loss'),\n        'education': tf.placeholder(dtype=tf.string, shape=[1,1], name='education'),\n        'education_num': tf.placeholder(dtype=tf.float32, shape=[1,1], name='education_num'),\n        'gender': tf.placeholder(dtype=tf.string, shape=[1,1], name='gender'),\n        'hours_per_week': tf.placeholder(dtype=tf.float32, shape=[1,1], name='hours_per_week'),\n        'native_country': tf.placeholder(dtype=tf.string, shape=[1,1], name='native_country'),\n        'occupation': tf.placeholder(dtype=tf.string, shape=[1,1], name='occupation'),\n        'relationship': tf.placeholder(dtype=tf.string, shape=[1,1], name='relationship'),\n        'workclass': tf.placeholder(dtype=tf.string, shape=[1,1], name='workclass') \n    }\n\nserving_input_receiver_fn = tf.estimator.export.build_raw_serving_input_receiver_fn(feature_inputs)\n\n# model is the loaded wide and deep model produced\nmodel.export_savedmodel(\"./my_dir\",  serving_input_receiver_fn)\n\nHowever there is an error here:\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/estimator/export/export.pyc in build_all_signature_defs(receiver_tensors, export_outputs)\n    158       '{}'.format(output_key or 'None'):\n    159       export_output.as_signature_def(receiver_tensors)\n--> 160       for output_key, export_output in export_outputs.items()}\n    161 \n    162   return signature_def_map\n\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/estimator/export/export.pyc in <dictcomp>((output_key, export_output))\n    158       '{}'.format(output_key or 'None'):\n    159       export_output.as_signature_def(receiver_tensors)\n--> 160       for output_key, export_output in export_outputs.items()}\n    161 \n    162   return signature_def_map\n\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/estimator/export/export_output.pyc in as_signature_def(self, receiver_tensors)\n    110     if len(receiver_tensors) != 1:\n    111       raise ValueError('Classification input must be a single string Tensor; '\n--> 112                        'got {}'.format(receiver_tensors))\n    113     (_, examples), = receiver_tensors.items()\n    114     if dtypes.as_dtype(examples.dtype) != dtypes.string:\n\nValueError: Classification input must be a single string Tensor; got {'hours_per_week': <tf.Tensor 'hours_per_week_14_1:0' shape=(?, 1) dtype=float32>, 'native_country': <tf.Tensor 'native_country_14_1:0' shape=(?, 1) dtype=string>, 'relationship': <tf.Tensor 'relationship_14_1:0' shape=(?, 1) dtype=string>, 'gender': <tf.Tensor 'gender_14_1:0' shape=(?, 1) dtype=string>, 'age': <tf.Tensor 'age_14_1:0' shape=(?, 1) dtype=float32>, 'capital_gain': <tf.Tensor 'capital_gain_14_1:0' shape=(?, 1) dtype=float32>, 'workclass': <tf.Tensor 'workclass_14_1:0' shape=(?, 1) dtype=string>, 'capital_loss': <tf.Tensor 'capital_loss_14_1:0' shape=(?, 1) dtype=float32>, 'education': <tf.Tensor 'education_14_1:0' shape=(?, 1) dtype=string>, 'education_num': <tf.Tensor 'education_num_14_1:0' shape=(?, 1) dtype=float32>, 'occupation': <tf.Tensor 'occupation_14_1:0' shape=(?, 1) dtype=string>}", "body": "Within class `ClassificationOutput` contains the `as_signature_def` method. I was wondering why there is a limitation that this method only allows recievor_tensors of length 1.\r\n\r\nhttps://github.com/tensorflow/tensorflow/blob/53aef8a3a5920e53f7da3ea2140374546d1bf708/tensorflow/python/estimator/export/export_output.py#L109-L118\r\n\r\nFor example the following code should seemingly just \"work\" for the model created from the [wide and deep model tutorial.\r\n](https://github.com/tensorflow/tensorflow/blob/r1.3/tensorflow/examples/learn/wide_n_deep_tutorial.py)\r\n\r\n```\r\nfeature_inputs = {\r\n        'age': tf.placeholder(dtype=tf.float32, shape=[1,1], name='age'),\r\n        'capital_gain': tf.placeholder(dtype=tf.float32, shape=[1,1], name='age'),\r\n        'capital_loss': tf.placeholder(dtype=tf.float32, shape=[1,1], name='capital_loss'),\r\n        'education': tf.placeholder(dtype=tf.string, shape=[1,1], name='education'),\r\n        'education_num': tf.placeholder(dtype=tf.float32, shape=[1,1], name='education_num'),\r\n        'gender': tf.placeholder(dtype=tf.string, shape=[1,1], name='gender'),\r\n        'hours_per_week': tf.placeholder(dtype=tf.float32, shape=[1,1], name='hours_per_week'),\r\n        'native_country': tf.placeholder(dtype=tf.string, shape=[1,1], name='native_country'),\r\n        'occupation': tf.placeholder(dtype=tf.string, shape=[1,1], name='occupation'),\r\n        'relationship': tf.placeholder(dtype=tf.string, shape=[1,1], name='relationship'),\r\n        'workclass': tf.placeholder(dtype=tf.string, shape=[1,1], name='workclass') \r\n    }\r\n\r\nserving_input_receiver_fn = tf.estimator.export.build_raw_serving_input_receiver_fn(feature_inputs)\r\n\r\n# model is the loaded wide and deep model produced\r\nmodel.export_savedmodel(\"./my_dir\",  serving_input_receiver_fn)\r\n```\r\n\r\nHowever there is an error here:\r\n```\r\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/estimator/export/export.pyc in build_all_signature_defs(receiver_tensors, export_outputs)\r\n    158       '{}'.format(output_key or 'None'):\r\n    159       export_output.as_signature_def(receiver_tensors)\r\n--> 160       for output_key, export_output in export_outputs.items()}\r\n    161 \r\n    162   return signature_def_map\r\n\r\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/estimator/export/export.pyc in <dictcomp>((output_key, export_output))\r\n    158       '{}'.format(output_key or 'None'):\r\n    159       export_output.as_signature_def(receiver_tensors)\r\n--> 160       for output_key, export_output in export_outputs.items()}\r\n    161 \r\n    162   return signature_def_map\r\n\r\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/estimator/export/export_output.pyc in as_signature_def(self, receiver_tensors)\r\n    110     if len(receiver_tensors) != 1:\r\n    111       raise ValueError('Classification input must be a single string Tensor; '\r\n--> 112                        'got {}'.format(receiver_tensors))\r\n    113     (_, examples), = receiver_tensors.items()\r\n    114     if dtypes.as_dtype(examples.dtype) != dtypes.string:\r\n\r\nValueError: Classification input must be a single string Tensor; got {'hours_per_week': <tf.Tensor 'hours_per_week_14_1:0' shape=(?, 1) dtype=float32>, 'native_country': <tf.Tensor 'native_country_14_1:0' shape=(?, 1) dtype=string>, 'relationship': <tf.Tensor 'relationship_14_1:0' shape=(?, 1) dtype=string>, 'gender': <tf.Tensor 'gender_14_1:0' shape=(?, 1) dtype=string>, 'age': <tf.Tensor 'age_14_1:0' shape=(?, 1) dtype=float32>, 'capital_gain': <tf.Tensor 'capital_gain_14_1:0' shape=(?, 1) dtype=float32>, 'workclass': <tf.Tensor 'workclass_14_1:0' shape=(?, 1) dtype=string>, 'capital_loss': <tf.Tensor 'capital_loss_14_1:0' shape=(?, 1) dtype=float32>, 'education': <tf.Tensor 'education_14_1:0' shape=(?, 1) dtype=string>, 'education_num': <tf.Tensor 'education_num_14_1:0' shape=(?, 1) dtype=float32>, 'occupation': <tf.Tensor 'occupation_14_1:0' shape=(?, 1) dtype=string>}\r\n```\r\n\r\n"}