{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15084", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15084/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15084/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15084/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15084", "id": 278846794, "node_id": "MDU6SXNzdWUyNzg4NDY3OTQ=", "number": 15084, "title": "calculation gradients of tf.nn.embedding_lookup", "user": {"login": "wweichn", "id": 10001692, "node_id": "MDQ6VXNlcjEwMDAxNjky", "avatar_url": "https://avatars3.githubusercontent.com/u/10001692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wweichn", "html_url": "https://github.com/wweichn", "followers_url": "https://api.github.com/users/wweichn/followers", "following_url": "https://api.github.com/users/wweichn/following{/other_user}", "gists_url": "https://api.github.com/users/wweichn/gists{/gist_id}", "starred_url": "https://api.github.com/users/wweichn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wweichn/subscriptions", "organizations_url": "https://api.github.com/users/wweichn/orgs", "repos_url": "https://api.github.com/users/wweichn/repos", "events_url": "https://api.github.com/users/wweichn/events{/privacy}", "received_events_url": "https://api.github.com/users/wweichn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-12-04T01:47:48Z", "updated_at": "2018-01-19T01:40:15Z", "closed_at": "2018-01-19T01:40:15Z", "author_association": "NONE", "body_html": "<hr>\n<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Mac OS</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: source</li>\n<li><strong>TensorFlow version (use command below)</strong>:1.3.0</li>\n<li><strong>Python version</strong>: 2.7</li>\n</ul>\n<h3>Source code / logs</h3>\n<p>import tensorflow as tf<br>\ntypes_lookup_table = tf.get_variable(\"types_lookup_table\", shape=[234, 10],<br>\ninitializer=tf.random_normal_initializer(0, 1), dtype=tf.float32,<br>\ntrainable=True)<br>\nembedding_types = tf.nn.embedding_lookup(types_lookup_table,[[2,3,4],[1,2,3]])<br>\nopt = tf.train.GradientDescentOptimizer(0.1)<br>\ngradients = tf.gradients(embedding_types, xs=types_lookup_table)<br>\ntrain = opt.apply_gradients([(gradients[0], types_lookup_table)])</p>\n<p>with tf.Session() as sess:<br>\ntf.global_variables_initializer().run()<br>\nh = sess.run(gradients)<br>\nprint(sess.run(train))                                                                              #right<br>\nprint(sess.run(opt.apply_gradients([(h[0],types_lookup_table)]))).    # wrong</p>\n<h3>Describe the problem</h3>\n<p>I tried to calculate the gradients of tf.nn.embedding_lookup, but the result shown is an IndexedSliceValue with 3 elements<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/10001692/33532464-ec59088e-d8d4-11e7-9c08-d53c6d87abf5.png\"><img width=\"1250\" alt=\"2017-12-04 9 23 45\" src=\"https://user-images.githubusercontent.com/10001692/33532464-ec59088e-d8d4-11e7-9c08-d53c6d87abf5.png\" style=\"max-width:100%;\"></a><br>\nhowever the corresponding gradient(without sess.run) is an indexSliceValue with 1 elements.I don't know why.<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/10001692/33532533-6aa0a5bc-d8d5-11e7-9b0d-69a950cb5fb0.png\"><img width=\"1226\" alt=\"2017-12-04 9 27 31\" src=\"https://user-images.githubusercontent.com/10001692/33532533-6aa0a5bc-d8d5-11e7-9b0d-69a950cb5fb0.png\" style=\"max-width:100%;\"></a></p>\n<p>And therefore I can't sess.run(opt.apply_gradients([(h[0],types_lookup_table)]) because the shape of calculation value doesn't match the shape of types_lookup_table, however, when I didn't calculate the intermediate value, and directly<br>\nsess.run(train) (ps:train = opt.apply_gradients([(gradients,types_lookup_table)]))<br>\nthere is no problem.</p>\n<p>But I need to calculate the intermediate value and do an add. I don't know how.<br>\nThanks</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Mac OS\nTensorFlow installed from (source or binary): source\nTensorFlow version (use command below):1.3.0\nPython version: 2.7\n\nSource code / logs\nimport tensorflow as tf\ntypes_lookup_table = tf.get_variable(\"types_lookup_table\", shape=[234, 10],\ninitializer=tf.random_normal_initializer(0, 1), dtype=tf.float32,\ntrainable=True)\nembedding_types = tf.nn.embedding_lookup(types_lookup_table,[[2,3,4],[1,2,3]])\nopt = tf.train.GradientDescentOptimizer(0.1)\ngradients = tf.gradients(embedding_types, xs=types_lookup_table)\ntrain = opt.apply_gradients([(gradients[0], types_lookup_table)])\nwith tf.Session() as sess:\ntf.global_variables_initializer().run()\nh = sess.run(gradients)\nprint(sess.run(train))                                                                              #right\nprint(sess.run(opt.apply_gradients([(h[0],types_lookup_table)]))).    # wrong\nDescribe the problem\nI tried to calculate the gradients of tf.nn.embedding_lookup, but the result shown is an IndexedSliceValue with 3 elements\n\nhowever the corresponding gradient(without sess.run) is an indexSliceValue with 1 elements.I don't know why.\n\nAnd therefore I can't sess.run(opt.apply_gradients([(h[0],types_lookup_table)]) because the shape of calculation value doesn't match the shape of types_lookup_table, however, when I didn't calculate the intermediate value, and directly\nsess.run(train) (ps:train = opt.apply_gradients([(gradients,types_lookup_table)]))\nthere is no problem.\nBut I need to calculate the intermediate value and do an add. I don't know how.\nThanks", "body": "------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Mac OS\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**:1.3.0\r\n- **Python version**: 2.7\r\n\r\n### Source code / logs\r\nimport tensorflow as tf\r\ntypes_lookup_table = tf.get_variable(\"types_lookup_table\", shape=[234, 10],\r\n                                     initializer=tf.random_normal_initializer(0, 1), dtype=tf.float32,\r\n                                     trainable=True)\r\nembedding_types = tf.nn.embedding_lookup(types_lookup_table,[[2,3,4],[1,2,3]])\r\nopt = tf.train.GradientDescentOptimizer(0.1)\r\ngradients = tf.gradients(embedding_types, xs=types_lookup_table)\r\ntrain = opt.apply_gradients([(gradients[0], types_lookup_table)])\r\n\r\nwith tf.Session() as sess:\r\n    tf.global_variables_initializer().run()\r\n    h = sess.run(gradients)\r\n    print(sess.run(train))                                                                              #right\r\n    print(sess.run(opt.apply_gradients([(h[0],types_lookup_table)]))).    # wrong\r\n\r\n### Describe the problem\r\nI tried to calculate the gradients of tf.nn.embedding_lookup, but the result shown is an IndexedSliceValue with 3 elements\r\n<img width=\"1250\" alt=\"2017-12-04 9 23 45\" src=\"https://user-images.githubusercontent.com/10001692/33532464-ec59088e-d8d4-11e7-9c08-d53c6d87abf5.png\">\r\nhowever the corresponding gradient(without sess.run) is an indexSliceValue with 1 elements.I don't know why.\r\n<img width=\"1226\" alt=\"2017-12-04 9 27 31\" src=\"https://user-images.githubusercontent.com/10001692/33532533-6aa0a5bc-d8d5-11e7-9b0d-69a950cb5fb0.png\">\r\n\r\nAnd therefore I can't sess.run(opt.apply_gradients([(h[0],types_lookup_table)]) because the shape of calculation value doesn't match the shape of types_lookup_table, however, when I didn't calculate the intermediate value, and directly \r\nsess.run(train) (ps:train = opt.apply_gradients([(gradients,types_lookup_table)]))\r\nthere is no problem.\r\n\r\nBut I need to calculate the intermediate value and do an add. I don't know how.\r\nThanks\r\n\r\n"}