{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16924", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16924/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16924/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16924/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16924", "id": 296138745, "node_id": "MDU6SXNzdWUyOTYxMzg3NDU=", "number": 16924, "title": "typeid broken across shared boundary makes a271c36b5ead4686b72d972b193bf1f534a92ffd not work ", "user": {"login": "galv", "id": 4767568, "node_id": "MDQ6VXNlcjQ3Njc1Njg=", "avatar_url": "https://avatars0.githubusercontent.com/u/4767568?v=4", "gravatar_id": "", "url": "https://api.github.com/users/galv", "html_url": "https://github.com/galv", "followers_url": "https://api.github.com/users/galv/followers", "following_url": "https://api.github.com/users/galv/following{/other_user}", "gists_url": "https://api.github.com/users/galv/gists{/gist_id}", "starred_url": "https://api.github.com/users/galv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/galv/subscriptions", "organizations_url": "https://api.github.com/users/galv/orgs", "repos_url": "https://api.github.com/users/galv/repos", "events_url": "https://api.github.com/users/galv/events{/privacy}", "received_events_url": "https://api.github.com/users/galv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2018-02-10T22:09:34Z", "updated_at": "2018-02-12T15:49:56Z", "closed_at": "2018-02-11T18:39:30Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Custom shared object linking to</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu 16.04)</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: source</li>\n<li><strong>TensorFlow version (use command below)</strong>: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/a271c36b5ead4686b72d972b193bf1f534a92ffd/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/a271c36b5ead4686b72d972b193bf1f534a92ffd\"><tt>a271c36</tt></a></li>\n<li><strong>Python version</strong>: 3.5</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.5.4</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: 5.4</li>\n<li><strong>CUDA/cuDNN version</strong>: 9.0/7.0.5</li>\n<li><strong>GPU model and memory</strong>: P4000 (8 GB)</li>\n<li><strong>Exact command to reproduce</strong>: This is a little involved.</li>\n</ul>\n<h3>Describe the problem</h3>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=192142\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mrry\">@mrry</a> First of all, thanks for quickly responding to my issue <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"293758917\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/16682\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/16682/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/16682\">#16682</a>, and for following up with the fixes in <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/a271c36b5ead4686b72d972b193bf1f534a92ffd/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/a271c36b5ead4686b72d972b193bf1f534a92ffd\"><tt>a271c36</tt></a> without my even mentioning the problem to you. Very impressive.</p>\n<p>I know that in that commit, you mention \"A subsequent change will move <code>tf.contrib.data</code> kernel implementations to a custom op library.\" When you say custom op library, I assume you mean a  distinct shared object file.</p>\n<p>Unfortunately, unless you use --config=monolithic to build, this will not work because the typeid of DatasetVariantWrapper will be different between libtensorflow_framework.so and the custom op library shared object, because they are loaded with RTLD_LOCAL. --config=monolithic avoids the problem because _python_framework_internal.so is loaded with RTLD_GLOBAL in that case. This will override the custom op library's \"weak\" (I am talking about weak linkage of symbols here) typeid of DatasetVariantWrapper. Otherwise, <code>variant::get&lt;DatasetVariantWrapper&gt;()</code> will fail in dataset.cc's GetDatasetFromVariantTensor, because the two typeids that get compared have two separate pointers.</p>\n<p>I first found this problem documented <a href=\"https://svn.boost.org/trac10/ticket/754\" rel=\"nofollow\">here</a>. <a href=\"https://stackoverflow.com/questions/23383102/dynamic-cast-troubles-over-shared-libraries\" rel=\"nofollow\">This</a> stack overflow answer was also helpful.</p>\n<p>I'm not sure what the right solution is to this yet. It seems it may be possible to change from pointer equality for type info to checking the equality of mangled strings with strcmp, based on my reading of libstdc++'s typeinfo header file.</p>\n<p>Happy to answer any questions,s ince this is rather involved.</p>\n<h3>Source code / logs</h3>\n<pre><code>2018-02-10 13:53:14.169478: I tensorflow/core/platform/cpu_feature_guard.cc:140] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.1 SSE4.2 AVX AVX2 FMA\n2018-02-10 13:53:14.422106: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1326] Found device 0 with properties:\nname: Quadro P4000 major: 6 minor: 1 memoryClockRate(GHz): 1.48\npciBusID: 0000:02:00.0\ntotalMemory: 7.91GiB freeMemory: 6.98GiB\n2018-02-10 13:53:14.422134: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1405] Adding visible gpu devices: 0\n2018-02-10 13:54:11.579203: I tensorflow/core/common_runtime/gpu/gpu_device.cc:906] Device interconnect StreamExecutor with strength 1 edge matrix:\n2018-02-10 13:54:11.579230: I tensorflow/core/common_runtime/gpu/gpu_device.cc:912]      0\n2018-02-10 13:54:11.579254: I tensorflow/core/common_runtime/gpu/gpu_device.cc:925] 0:   N\n2018-02-10 13:54:11.579420: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1016] Creating TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 6740 MB memory) -&gt; physical GPU (device: 0, name: Quadro P4000, pci bus id: 0000:02:00.0, compute capability: 6.1)\n2018-02-10 13:54:11.619971: W tensorflow/core/framework/op_kernel.cc:1273] OP_REQUIRES failed at iterator_ops.cc:827 : Invalid argument: Tensor must be a Dataset object.\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Custom shared object linking to\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04)\nTensorFlow installed from (source or binary): source\nTensorFlow version (use command below): a271c36\nPython version: 3.5\nBazel version (if compiling from source): 0.5.4\nGCC/Compiler version (if compiling from source): 5.4\nCUDA/cuDNN version: 9.0/7.0.5\nGPU model and memory: P4000 (8 GB)\nExact command to reproduce: This is a little involved.\n\nDescribe the problem\n@mrry First of all, thanks for quickly responding to my issue #16682, and for following up with the fixes in a271c36 without my even mentioning the problem to you. Very impressive.\nI know that in that commit, you mention \"A subsequent change will move tf.contrib.data kernel implementations to a custom op library.\" When you say custom op library, I assume you mean a  distinct shared object file.\nUnfortunately, unless you use --config=monolithic to build, this will not work because the typeid of DatasetVariantWrapper will be different between libtensorflow_framework.so and the custom op library shared object, because they are loaded with RTLD_LOCAL. --config=monolithic avoids the problem because _python_framework_internal.so is loaded with RTLD_GLOBAL in that case. This will override the custom op library's \"weak\" (I am talking about weak linkage of symbols here) typeid of DatasetVariantWrapper. Otherwise, variant::get<DatasetVariantWrapper>() will fail in dataset.cc's GetDatasetFromVariantTensor, because the two typeids that get compared have two separate pointers.\nI first found this problem documented here. This stack overflow answer was also helpful.\nI'm not sure what the right solution is to this yet. It seems it may be possible to change from pointer equality for type info to checking the equality of mangled strings with strcmp, based on my reading of libstdc++'s typeinfo header file.\nHappy to answer any questions,s ince this is rather involved.\nSource code / logs\n2018-02-10 13:53:14.169478: I tensorflow/core/platform/cpu_feature_guard.cc:140] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.1 SSE4.2 AVX AVX2 FMA\n2018-02-10 13:53:14.422106: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1326] Found device 0 with properties:\nname: Quadro P4000 major: 6 minor: 1 memoryClockRate(GHz): 1.48\npciBusID: 0000:02:00.0\ntotalMemory: 7.91GiB freeMemory: 6.98GiB\n2018-02-10 13:53:14.422134: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1405] Adding visible gpu devices: 0\n2018-02-10 13:54:11.579203: I tensorflow/core/common_runtime/gpu/gpu_device.cc:906] Device interconnect StreamExecutor with strength 1 edge matrix:\n2018-02-10 13:54:11.579230: I tensorflow/core/common_runtime/gpu/gpu_device.cc:912]      0\n2018-02-10 13:54:11.579254: I tensorflow/core/common_runtime/gpu/gpu_device.cc:925] 0:   N\n2018-02-10 13:54:11.579420: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1016] Creating TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 6740 MB memory) -> physical GPU (device: 0, name: Quadro P4000, pci bus id: 0000:02:00.0, compute capability: 6.1)\n2018-02-10 13:54:11.619971: W tensorflow/core/framework/op_kernel.cc:1273] OP_REQUIRES failed at iterator_ops.cc:827 : Invalid argument: Tensor must be a Dataset object.", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Custom shared object linking to \r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04)\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: a271c36b5ead4686b72d972b193bf1f534a92ffd\r\n- **Python version**: 3.5\r\n- **Bazel version (if compiling from source)**: 0.5.4\r\n- **GCC/Compiler version (if compiling from source)**: 5.4\r\n- **CUDA/cuDNN version**: 9.0/7.0.5\r\n- **GPU model and memory**: P4000 (8 GB)\r\n- **Exact command to reproduce**: This is a little involved.\r\n\r\n### Describe the problem\r\n\r\n@mrry First of all, thanks for quickly responding to my issue #16682, and for following up with the fixes in a271c36b5ead4686b72d972b193bf1f534a92ffd without my even mentioning the problem to you. Very impressive.\r\n\r\nI know that in that commit, you mention \"A subsequent change will move `tf.contrib.data` kernel implementations to a custom op library.\" When you say custom op library, I assume you mean a  distinct shared object file.\r\n\r\nUnfortunately, unless you use --config=monolithic to build, this will not work because the typeid of DatasetVariantWrapper will be different between libtensorflow_framework.so and the custom op library shared object, because they are loaded with RTLD_LOCAL. --config=monolithic avoids the problem because _python_framework_internal.so is loaded with RTLD_GLOBAL in that case. This will override the custom op library's \"weak\" (I am talking about weak linkage of symbols here) typeid of DatasetVariantWrapper. Otherwise, `variant::get<DatasetVariantWrapper>()` will fail in dataset.cc's GetDatasetFromVariantTensor, because the two typeids that get compared have two separate pointers.\r\n\r\nI first found this problem documented [here](https://svn.boost.org/trac10/ticket/754). [This](https://stackoverflow.com/questions/23383102/dynamic-cast-troubles-over-shared-libraries) stack overflow answer was also helpful.\r\n\r\nI'm not sure what the right solution is to this yet. It seems it may be possible to change from pointer equality for type info to checking the equality of mangled strings with strcmp, based on my reading of libstdc++'s typeinfo header file.\r\n\r\nHappy to answer any questions,s ince this is rather involved.\r\n\r\n### Source code / logs\r\n\r\n```\r\n2018-02-10 13:53:14.169478: I tensorflow/core/platform/cpu_feature_guard.cc:140] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.1 SSE4.2 AVX AVX2 FMA\r\n2018-02-10 13:53:14.422106: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1326] Found device 0 with properties:\r\nname: Quadro P4000 major: 6 minor: 1 memoryClockRate(GHz): 1.48\r\npciBusID: 0000:02:00.0\r\ntotalMemory: 7.91GiB freeMemory: 6.98GiB\r\n2018-02-10 13:53:14.422134: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1405] Adding visible gpu devices: 0\r\n2018-02-10 13:54:11.579203: I tensorflow/core/common_runtime/gpu/gpu_device.cc:906] Device interconnect StreamExecutor with strength 1 edge matrix:\r\n2018-02-10 13:54:11.579230: I tensorflow/core/common_runtime/gpu/gpu_device.cc:912]      0\r\n2018-02-10 13:54:11.579254: I tensorflow/core/common_runtime/gpu/gpu_device.cc:925] 0:   N\r\n2018-02-10 13:54:11.579420: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1016] Creating TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 6740 MB memory) -> physical GPU (device: 0, name: Quadro P4000, pci bus id: 0000:02:00.0, compute capability: 6.1)\r\n2018-02-10 13:54:11.619971: W tensorflow/core/framework/op_kernel.cc:1273] OP_REQUIRES failed at iterator_ops.cc:827 : Invalid argument: Tensor must be a Dataset object.\r\n```"}