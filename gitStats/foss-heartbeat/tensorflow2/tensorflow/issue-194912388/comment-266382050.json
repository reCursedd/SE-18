{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/266382050", "html_url": "https://github.com/tensorflow/tensorflow/issues/6263#issuecomment-266382050", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6263", "id": 266382050, "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjM4MjA1MA==", "user": {"login": "taochenshh", "id": 15166943, "node_id": "MDQ6VXNlcjE1MTY2OTQz", "avatar_url": "https://avatars3.githubusercontent.com/u/15166943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taochenshh", "html_url": "https://github.com/taochenshh", "followers_url": "https://api.github.com/users/taochenshh/followers", "following_url": "https://api.github.com/users/taochenshh/following{/other_user}", "gists_url": "https://api.github.com/users/taochenshh/gists{/gist_id}", "starred_url": "https://api.github.com/users/taochenshh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taochenshh/subscriptions", "organizations_url": "https://api.github.com/users/taochenshh/orgs", "repos_url": "https://api.github.com/users/taochenshh/repos", "events_url": "https://api.github.com/users/taochenshh/events{/privacy}", "received_events_url": "https://api.github.com/users/taochenshh/received_events", "type": "User", "site_admin": false}, "created_at": "2016-12-12T09:34:03Z", "updated_at": "2016-12-12T09:34:03Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1501158\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/shiyemin\">@shiyemin</a>, Do you mean add following lines:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">from</span> <span class=\"pl-c1\">__future__</span> <span class=\"pl-k\">import</span> print_function\n<span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\nserver <span class=\"pl-k\">=</span> tf.train.Server.create_local_server()\nlogs_path <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>mnist/logs<span class=\"pl-pds\">\"</span></span>\n\n\nglobal_step <span class=\"pl-k\">=</span> tf.get_variable(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>global_step<span class=\"pl-pds\">'</span></span>, [],\n                              <span class=\"pl-v\">initializer</span><span class=\"pl-k\">=</span>tf.constant_initializer(<span class=\"pl-c1\">0</span>),\n                              <span class=\"pl-v\">trainable</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">False</span>)\n<span class=\"pl-k\">with</span> tf.name_scope(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>weights<span class=\"pl-pds\">\"</span></span>):\n    W1 <span class=\"pl-k\">=</span> tf.Variable(tf.random_normal([<span class=\"pl-c1\">784</span>, <span class=\"pl-c1\">100</span>]))\n    W2 <span class=\"pl-k\">=</span> tf.Variable(tf.random_normal([<span class=\"pl-c1\">784</span>, <span class=\"pl-c1\">100</span>]))\n\n<span class=\"pl-k\">for</span> variable <span class=\"pl-k\">in</span> tf.global_variables():\n    tf.contrib.framework.add_model_variable(variable)\ninit_op <span class=\"pl-k\">=</span> tf.global_variables_initializer()\n<span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Variables initialized ...<span class=\"pl-pds\">\"</span></span>)\nsv <span class=\"pl-k\">=</span> tf.train.Supervisor(<span class=\"pl-v\">is_chief</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>,\n                         <span class=\"pl-v\">logdir</span><span class=\"pl-k\">=</span>logs_path,\n                         <span class=\"pl-v\">global_step</span><span class=\"pl-k\">=</span>global_step,\n                         <span class=\"pl-v\">init_op</span><span class=\"pl-k\">=</span>init_op,\n                         <span class=\"pl-v\">save_model_secs</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">600</span>)\n<span class=\"pl-k\">with</span> sv.managed_session(server.target) <span class=\"pl-k\">as</span> sess:\n    <span class=\"pl-k\">while</span> <span class=\"pl-k\">not</span> sv.should_stop():\n        <span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>==============<span class=\"pl-pds\">'</span></span>)\nsv.stop()</pre></div>\n<p>I tried this, still no success.</p>", "body_text": "@shiyemin, Do you mean add following lines:\nfrom __future__ import print_function\nimport tensorflow as tf\n\nserver = tf.train.Server.create_local_server()\nlogs_path = \"mnist/logs\"\n\n\nglobal_step = tf.get_variable('global_step', [],\n                              initializer=tf.constant_initializer(0),\n                              trainable=False)\nwith tf.name_scope(\"weights\"):\n    W1 = tf.Variable(tf.random_normal([784, 100]))\n    W2 = tf.Variable(tf.random_normal([784, 100]))\n\nfor variable in tf.global_variables():\n    tf.contrib.framework.add_model_variable(variable)\ninit_op = tf.global_variables_initializer()\nprint(\"Variables initialized ...\")\nsv = tf.train.Supervisor(is_chief=True,\n                         logdir=logs_path,\n                         global_step=global_step,\n                         init_op=init_op,\n                         save_model_secs=600)\nwith sv.managed_session(server.target) as sess:\n    while not sv.should_stop():\n        print('==============')\nsv.stop()\nI tried this, still no success.", "body": "@shiyemin, Do you mean add following lines:\r\n```python\r\nfrom __future__ import print_function\r\nimport tensorflow as tf\r\n\r\nserver = tf.train.Server.create_local_server()\r\nlogs_path = \"mnist/logs\"\r\n\r\n\r\nglobal_step = tf.get_variable('global_step', [],\r\n                              initializer=tf.constant_initializer(0),\r\n                              trainable=False)\r\nwith tf.name_scope(\"weights\"):\r\n    W1 = tf.Variable(tf.random_normal([784, 100]))\r\n    W2 = tf.Variable(tf.random_normal([784, 100]))\r\n\r\nfor variable in tf.global_variables():\r\n    tf.contrib.framework.add_model_variable(variable)\r\ninit_op = tf.global_variables_initializer()\r\nprint(\"Variables initialized ...\")\r\nsv = tf.train.Supervisor(is_chief=True,\r\n                         logdir=logs_path,\r\n                         global_step=global_step,\r\n                         init_op=init_op,\r\n                         save_model_secs=600)\r\nwith sv.managed_session(server.target) as sess:\r\n    while not sv.should_stop():\r\n        print('==============')\r\nsv.stop()\r\n```\r\nI tried this, still no success."}