{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12934", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12934/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12934/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12934/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/12934", "id": 256441814, "node_id": "MDExOlB1bGxSZXF1ZXN0MTQwMTcxMzk0", "number": 12934, "title": "Added support for JVM callback ops", "user": {"login": "eaplatanios", "id": 1294940, "node_id": "MDQ6VXNlcjEyOTQ5NDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1294940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eaplatanios", "html_url": "https://github.com/eaplatanios", "followers_url": "https://api.github.com/users/eaplatanios/followers", "following_url": "https://api.github.com/users/eaplatanios/following{/other_user}", "gists_url": "https://api.github.com/users/eaplatanios/gists{/gist_id}", "starred_url": "https://api.github.com/users/eaplatanios/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eaplatanios/subscriptions", "organizations_url": "https://api.github.com/users/eaplatanios/orgs", "repos_url": "https://api.github.com/users/eaplatanios/repos", "events_url": "https://api.github.com/users/eaplatanios/events{/privacy}", "received_events_url": "https://api.github.com/users/eaplatanios/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390482148, "node_id": "MDU6TGFiZWwzOTA0ODIxNDg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/awaiting%20review", "name": "awaiting review", "color": "fef2c0", "default": false}, {"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2017-09-09T14:19:47Z", "updated_at": "2017-09-11T17:09:30Z", "closed_at": "2017-09-11T17:09:30Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/12934", "html_url": "https://github.com/tensorflow/tensorflow/pull/12934", "diff_url": "https://github.com/tensorflow/tensorflow/pull/12934.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/12934.patch"}, "body_html": "<p>This PR is a proposed workaround for a limitation related to my Scala API and discussed in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"256117755\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/12895\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/12895/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/12895\">#12895</a> and <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"256320508\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/12915\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/tensorflow/tensorflow/pull/12915/hovercard\" href=\"https://github.com/tensorflow/tensorflow/pull/12915\">#12915</a>. Given that we currently cannot load external op libraries through languages other than Python, this PR adds a JVM callback op to the main TensorFlow library. I understand this is not ideal and may not be acceptable but it's just offered as a possible workaround.</p>\n<p>On the plus side, this op is not specific to Scala. It allows any JVM language to create ops that call functions in that language. The arguments and outputs of such functions are arrays of pointers to \"eager tensors\". The only limitation is that the op invocation has access to the original JVM instance that was used when constructing it. This is similar to the current <code>py_func</code> op limitation though and so, should be fine for now.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=16018\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/asimshankar\">@asimshankar</a> Do you think that this is acceptable for now?</p>\n<p>P.S. The replication of a few lines from the C API code is ugly but I'm not sure what's best to do here and I didn't want to introduce more changes until you take a look.</p>", "body_text": "This PR is a proposed workaround for a limitation related to my Scala API and discussed in #12895 and #12915. Given that we currently cannot load external op libraries through languages other than Python, this PR adds a JVM callback op to the main TensorFlow library. I understand this is not ideal and may not be acceptable but it's just offered as a possible workaround.\nOn the plus side, this op is not specific to Scala. It allows any JVM language to create ops that call functions in that language. The arguments and outputs of such functions are arrays of pointers to \"eager tensors\". The only limitation is that the op invocation has access to the original JVM instance that was used when constructing it. This is similar to the current py_func op limitation though and so, should be fine for now.\n@asimshankar Do you think that this is acceptable for now?\nP.S. The replication of a few lines from the C API code is ugly but I'm not sure what's best to do here and I didn't want to introduce more changes until you take a look.", "body": "This PR is a proposed workaround for a limitation related to my Scala API and discussed in #12895 and #12915. Given that we currently cannot load external op libraries through languages other than Python, this PR adds a JVM callback op to the main TensorFlow library. I understand this is not ideal and may not be acceptable but it's just offered as a possible workaround.\r\n\r\nOn the plus side, this op is not specific to Scala. It allows any JVM language to create ops that call functions in that language. The arguments and outputs of such functions are arrays of pointers to \"eager tensors\". The only limitation is that the op invocation has access to the original JVM instance that was used when constructing it. This is similar to the current `py_func` op limitation though and so, should be fine for now.\r\n\r\n@asimshankar Do you think that this is acceptable for now?\r\n\r\nP.S. The replication of a few lines from the C API code is ugly but I'm not sure what's best to do here and I didn't want to introduce more changes until you take a look."}