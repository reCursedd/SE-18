{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/424975902", "html_url": "https://github.com/tensorflow/tensorflow/issues/22535#issuecomment-424975902", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22535", "id": 424975902, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDk3NTkwMg==", "user": {"login": "minizon", "id": 11333107, "node_id": "MDQ6VXNlcjExMzMzMTA3", "avatar_url": "https://avatars2.githubusercontent.com/u/11333107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minizon", "html_url": "https://github.com/minizon", "followers_url": "https://api.github.com/users/minizon/followers", "following_url": "https://api.github.com/users/minizon/following{/other_user}", "gists_url": "https://api.github.com/users/minizon/gists{/gist_id}", "starred_url": "https://api.github.com/users/minizon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minizon/subscriptions", "organizations_url": "https://api.github.com/users/minizon/orgs", "repos_url": "https://api.github.com/users/minizon/repos", "events_url": "https://api.github.com/users/minizon/events{/privacy}", "received_events_url": "https://api.github.com/users/minizon/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-27T06:39:14Z", "updated_at": "2018-09-27T06:39:46Z", "author_association": "NONE", "body_html": "<blockquote>\n<p>After the post-training quantization, the type of input tensors are changed from floating point into quantized uint8. You need to change your code accordingly.</p>\n</blockquote>\n<p>But in the python env, I found the dtype of input was still float</p>\n<pre><code>&gt;&gt;&gt;input_details\n[{'name': 'input', 'index': 89, 'shape': array([  1, 224, 224,   3], dtype=int32), 'dtype': &lt;class 'numpy.float32'&gt;, 'quantization': (0.0, 0)}]\n&gt;&gt;&gt; output_details\n[{'name': 'final_result', 'index': 85, 'shape': array([1, 5], dtype=int32), 'dtype': &lt;class 'numpy.float32'&gt;, 'quantization': (0.0, 0)}]\n</code></pre>\n<p>Whether additional setting params are required for the post-training quantization? Could you give any detailed tutorials?</p>", "body_text": "After the post-training quantization, the type of input tensors are changed from floating point into quantized uint8. You need to change your code accordingly.\n\nBut in the python env, I found the dtype of input was still float\n>>>input_details\n[{'name': 'input', 'index': 89, 'shape': array([  1, 224, 224,   3], dtype=int32), 'dtype': <class 'numpy.float32'>, 'quantization': (0.0, 0)}]\n>>> output_details\n[{'name': 'final_result', 'index': 85, 'shape': array([1, 5], dtype=int32), 'dtype': <class 'numpy.float32'>, 'quantization': (0.0, 0)}]\n\nWhether additional setting params are required for the post-training quantization? Could you give any detailed tutorials?", "body": "> After the post-training quantization, the type of input tensors are changed from floating point into quantized uint8. You need to change your code accordingly.\r\n\r\nBut in the python env, I found the dtype of input was still float\r\n```\r\n>>>input_details\r\n[{'name': 'input', 'index': 89, 'shape': array([  1, 224, 224,   3], dtype=int32), 'dtype': <class 'numpy.float32'>, 'quantization': (0.0, 0)}]\r\n>>> output_details\r\n[{'name': 'final_result', 'index': 85, 'shape': array([1, 5], dtype=int32), 'dtype': <class 'numpy.float32'>, 'quantization': (0.0, 0)}]\r\n```\r\n\r\nWhether additional setting params are required for the post-training quantization? Could you give any detailed tutorials?"}