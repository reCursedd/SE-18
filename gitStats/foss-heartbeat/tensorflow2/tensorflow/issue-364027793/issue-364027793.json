{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22535", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22535/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22535/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22535/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/22535", "id": 364027793, "node_id": "MDU6SXNzdWUzNjQwMjc3OTM=", "number": 22535, "title": "After post-training quantization -- Internal error: Cannot allocate memory for the interpreter", "user": {"login": "minizon", "id": 11333107, "node_id": "MDQ6VXNlcjExMzMzMTA3", "avatar_url": "https://avatars2.githubusercontent.com/u/11333107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minizon", "html_url": "https://github.com/minizon", "followers_url": "https://api.github.com/users/minizon/followers", "following_url": "https://api.github.com/users/minizon/following{/other_user}", "gists_url": "https://api.github.com/users/minizon/gists{/gist_id}", "starred_url": "https://api.github.com/users/minizon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minizon/subscriptions", "organizations_url": "https://api.github.com/users/minizon/orgs", "repos_url": "https://api.github.com/users/minizon/repos", "events_url": "https://api.github.com/users/minizon/events{/privacy}", "received_events_url": "https://api.github.com/users/minizon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "wt-huang", "id": 42785337, "node_id": "MDQ6VXNlcjQyNzg1MzM3", "avatar_url": "https://avatars0.githubusercontent.com/u/42785337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wt-huang", "html_url": "https://github.com/wt-huang", "followers_url": "https://api.github.com/users/wt-huang/followers", "following_url": "https://api.github.com/users/wt-huang/following{/other_user}", "gists_url": "https://api.github.com/users/wt-huang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wt-huang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wt-huang/subscriptions", "organizations_url": "https://api.github.com/users/wt-huang/orgs", "repos_url": "https://api.github.com/users/wt-huang/repos", "events_url": "https://api.github.com/users/wt-huang/events{/privacy}", "received_events_url": "https://api.github.com/users/wt-huang/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "wt-huang", "id": 42785337, "node_id": "MDQ6VXNlcjQyNzg1MzM3", "avatar_url": "https://avatars0.githubusercontent.com/u/42785337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wt-huang", "html_url": "https://github.com/wt-huang", "followers_url": "https://api.github.com/users/wt-huang/followers", "following_url": "https://api.github.com/users/wt-huang/following{/other_user}", "gists_url": "https://api.github.com/users/wt-huang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wt-huang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wt-huang/subscriptions", "organizations_url": "https://api.github.com/users/wt-huang/orgs", "repos_url": "https://api.github.com/users/wt-huang/repos", "events_url": "https://api.github.com/users/wt-huang/events{/privacy}", "received_events_url": "https://api.github.com/users/wt-huang/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 16, "created_at": "2018-09-26T13:22:56Z", "updated_at": "2018-11-17T08:37:53Z", "closed_at": "2018-10-06T01:51:27Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: No</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Ubuntu 16.04</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>: No</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: tf-nightly-1.12.0.dev20180926</li>\n<li><strong>TensorFlow version (use command below)</strong>: tf-nightly-1.12.0.dev20180926</li>\n<li><strong>Python version</strong>: 3.6</li>\n<li><strong>Bazel version (if compiling from source)</strong>: no</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: no</li>\n<li><strong>CUDA/cuDNN version</strong>: no</li>\n<li><strong>GPU model and memory</strong>: no</li>\n<li><strong>Exact command to reproduce</strong>: see follows</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>When I tried to use the quantized model for the example <a href=\"https://codelabs.developers.google.com/codelabs/tensorflow-for-poets-2-tflite/#0\" rel=\"nofollow\">TensorFlow for Poets 2: TFLite Android</a>, I encountered the following problem.<br>\nbeginning of crash<br>\n09-26 13:08:10.249 31824-31824/? E/AndroidRuntime: FATAL EXCEPTION: main<br>\nProcess: android.example.com.tflitecamerademo, PID: 31824<br>\njava.lang.RuntimeException: Unable to start activity ComponentInfo{android.example.com.tflitecamerademo/com.example.android.tflitecamerademo.CameraActivity}: <strong>java.lang.NullPointerException: Internal error: Cannot allocate memory for the interpreter: tensorflow/contrib/lite/kernels/conv.cc:201 filter-&gt;type != data_type (3 != 1)Node 4 failed to prepare.</strong></p>\n<pre><code>    at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2665)\n    at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2726)\n    at android.app.ActivityThread.-wrap12(ActivityThread.java)\n    at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1477)\n    at android.os.Handler.dispatchMessage(Handler.java:102)\n    at android.os.Looper.loop(Looper.java:154)\n    at android.app.ActivityThread.main(ActivityThread.java:6119)\n    at java.lang.reflect.Method.invoke(Native Method)\n    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:886)\n    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:776)\n Caused by: java.lang.NullPointerException: Internal error: Cannot allocate memory for the interpreter: tensorflow/contrib/lite/kernels/conv.cc:201 filter-&gt;type != data_type (3 != 1)Node 4 failed to prepare.\n\n    at org.tensorflow.lite.NativeInterpreterWrapper.createInterpreter(Native Method)\n    at org.tensorflow.lite.NativeInterpreterWrapper.&lt;init&gt;(NativeInterpreterWrapper.java:75)\n    at org.tensorflow.lite.NativeInterpreterWrapper.&lt;init&gt;(NativeInterpreterWrapper.java:54)\n    at org.tensorflow.lite.Interpreter.&lt;init&gt;(Interpreter.java:114)\n    at com.example.android.tflitecamerademo.ImageClassifier.&lt;init&gt;(ImageClassifier.java:97)\n    at com.example.android.tflitecamerademo.Camera2BasicFragment.onActivityCreated(Camera2BasicFragment.java:299)\n    at android.app.Fragment.performActivityCreated(Fragment.java:2362)\n    at android.app.FragmentManagerImpl.moveToState(FragmentManager.java:1014)\n    at android.app.FragmentManagerImpl.moveToState(FragmentManager.java:1171)\n    at android.app.BackStackRecord.run(BackStackRecord.java:816)\n    at android.app.FragmentManagerImpl.execPendingActions(FragmentManager.java:1578)\n    at android.app.FragmentController.execPendingActions(FragmentController.java:371)\n    at android.app.Activity.performStart(Activity.java:6695)\n    at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2628)\n    at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2726)\u00a0\n    at android.app.ActivityThread.-wrap12(ActivityThread.java)\u00a0\n    at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1477)\u00a0\n    at android.os.Handler.dispatchMessage(Handler.java:102)\u00a0\n    at android.os.Looper.loop(Looper.java:154)\u00a0\n    at android.app.ActivityThread.main(ActivityThread.java:6119)\u00a0\n    at java.lang.reflect.Method.invoke(Native Method)\u00a0\n    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:886)\u00a0\n    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:776)\n</code></pre>\n<p>The cmds were as follows:</p>\n<pre><code>import tensorflow as tf\ngraph_def_file='retrained_graph.pb'\ninput_arrays = [\"input\"]\noutput_arrays = [\"final_result\"]\nconverter = tf.contrib.lite.TocoConverter.from_frozen_graph(graph_def_file, input_arrays, output_arrays)\nconverter.post_training_quantize = True\ntflite_quantized_model = converter.convert()\nopen(\"quantized_graph.tflite\", \"wb\").write(tflite_quantized_model)\n</code></pre>\n<p>But if post-training quantization is not enabled, the app works.</p>\n<p>The quantized model could work in python env (though the result is not accurate).</p>\n<pre><code>interpreter = tf.contrib.lite.Interpreter(model_path=\"quantized_graph.tflite\")\ninterpreter.allocate_tensors()\ninput_details = interpreter.get_input_details()\noutput_details = interpreter.get_output_details()\nfrom label_image import read_tensor_from_image_file\ninput_data = read_tensor_from_image_file('1.jpg',input_height=224,input_width=224, input_mean=128, input_std=128)\ninterpreter.set_tensor(input_details[0]['index'], input_data)\ninterpreter.invoke()\noutput_data = interpreter.get_tensor(output_details[0]['index'])\nprint(output_data)\n</code></pre>\n<h3>Source code / logs</h3>\n<p>Models are attached.<br>\n<a href=\"https://github.com/tensorflow/tensorflow/files/2419845/tf_files.zip\">tf_files.zip</a></p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): No\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 16.04\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: No\nTensorFlow installed from (source or binary): tf-nightly-1.12.0.dev20180926\nTensorFlow version (use command below): tf-nightly-1.12.0.dev20180926\nPython version: 3.6\nBazel version (if compiling from source): no\nGCC/Compiler version (if compiling from source): no\nCUDA/cuDNN version: no\nGPU model and memory: no\nExact command to reproduce: see follows\n\nDescribe the problem\nWhen I tried to use the quantized model for the example TensorFlow for Poets 2: TFLite Android, I encountered the following problem.\nbeginning of crash\n09-26 13:08:10.249 31824-31824/? E/AndroidRuntime: FATAL EXCEPTION: main\nProcess: android.example.com.tflitecamerademo, PID: 31824\njava.lang.RuntimeException: Unable to start activity ComponentInfo{android.example.com.tflitecamerademo/com.example.android.tflitecamerademo.CameraActivity}: java.lang.NullPointerException: Internal error: Cannot allocate memory for the interpreter: tensorflow/contrib/lite/kernels/conv.cc:201 filter->type != data_type (3 != 1)Node 4 failed to prepare.\n    at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2665)\n    at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2726)\n    at android.app.ActivityThread.-wrap12(ActivityThread.java)\n    at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1477)\n    at android.os.Handler.dispatchMessage(Handler.java:102)\n    at android.os.Looper.loop(Looper.java:154)\n    at android.app.ActivityThread.main(ActivityThread.java:6119)\n    at java.lang.reflect.Method.invoke(Native Method)\n    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:886)\n    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:776)\n Caused by: java.lang.NullPointerException: Internal error: Cannot allocate memory for the interpreter: tensorflow/contrib/lite/kernels/conv.cc:201 filter->type != data_type (3 != 1)Node 4 failed to prepare.\n\n    at org.tensorflow.lite.NativeInterpreterWrapper.createInterpreter(Native Method)\n    at org.tensorflow.lite.NativeInterpreterWrapper.<init>(NativeInterpreterWrapper.java:75)\n    at org.tensorflow.lite.NativeInterpreterWrapper.<init>(NativeInterpreterWrapper.java:54)\n    at org.tensorflow.lite.Interpreter.<init>(Interpreter.java:114)\n    at com.example.android.tflitecamerademo.ImageClassifier.<init>(ImageClassifier.java:97)\n    at com.example.android.tflitecamerademo.Camera2BasicFragment.onActivityCreated(Camera2BasicFragment.java:299)\n    at android.app.Fragment.performActivityCreated(Fragment.java:2362)\n    at android.app.FragmentManagerImpl.moveToState(FragmentManager.java:1014)\n    at android.app.FragmentManagerImpl.moveToState(FragmentManager.java:1171)\n    at android.app.BackStackRecord.run(BackStackRecord.java:816)\n    at android.app.FragmentManagerImpl.execPendingActions(FragmentManager.java:1578)\n    at android.app.FragmentController.execPendingActions(FragmentController.java:371)\n    at android.app.Activity.performStart(Activity.java:6695)\n    at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2628)\n    at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2726)\u00a0\n    at android.app.ActivityThread.-wrap12(ActivityThread.java)\u00a0\n    at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1477)\u00a0\n    at android.os.Handler.dispatchMessage(Handler.java:102)\u00a0\n    at android.os.Looper.loop(Looper.java:154)\u00a0\n    at android.app.ActivityThread.main(ActivityThread.java:6119)\u00a0\n    at java.lang.reflect.Method.invoke(Native Method)\u00a0\n    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:886)\u00a0\n    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:776)\n\nThe cmds were as follows:\nimport tensorflow as tf\ngraph_def_file='retrained_graph.pb'\ninput_arrays = [\"input\"]\noutput_arrays = [\"final_result\"]\nconverter = tf.contrib.lite.TocoConverter.from_frozen_graph(graph_def_file, input_arrays, output_arrays)\nconverter.post_training_quantize = True\ntflite_quantized_model = converter.convert()\nopen(\"quantized_graph.tflite\", \"wb\").write(tflite_quantized_model)\n\nBut if post-training quantization is not enabled, the app works.\nThe quantized model could work in python env (though the result is not accurate).\ninterpreter = tf.contrib.lite.Interpreter(model_path=\"quantized_graph.tflite\")\ninterpreter.allocate_tensors()\ninput_details = interpreter.get_input_details()\noutput_details = interpreter.get_output_details()\nfrom label_image import read_tensor_from_image_file\ninput_data = read_tensor_from_image_file('1.jpg',input_height=224,input_width=224, input_mean=128, input_std=128)\ninterpreter.set_tensor(input_details[0]['index'], input_data)\ninterpreter.invoke()\noutput_data = interpreter.get_tensor(output_details[0]['index'])\nprint(output_data)\n\nSource code / logs\nModels are attached.\ntf_files.zip", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 16.04\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**: No\r\n- **TensorFlow installed from (source or binary)**: tf-nightly-1.12.0.dev20180926\r\n- **TensorFlow version (use command below)**: tf-nightly-1.12.0.dev20180926\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**: no\r\n- **GCC/Compiler version (if compiling from source)**: no\r\n- **CUDA/cuDNN version**: no\r\n- **GPU model and memory**: no\r\n- **Exact command to reproduce**: see follows\r\n\r\n### Describe the problem\r\nWhen I tried to use the quantized model for the example [TensorFlow for Poets 2: TFLite Android](https://codelabs.developers.google.com/codelabs/tensorflow-for-poets-2-tflite/#0), I encountered the following problem.\r\nbeginning of crash\r\n09-26 13:08:10.249 31824-31824/? E/AndroidRuntime: FATAL EXCEPTION: main\r\n    Process: android.example.com.tflitecamerademo, PID: 31824\r\n    java.lang.RuntimeException: Unable to start activity ComponentInfo{android.example.com.tflitecamerademo/com.example.android.tflitecamerademo.CameraActivity}: **java.lang.NullPointerException: Internal error: Cannot allocate memory for the interpreter: tensorflow/contrib/lite/kernels/conv.cc:201 filter->type != data_type (3 != 1)Node 4 failed to prepare.**\r\n    \r\n        at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2665)\r\n        at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2726)\r\n        at android.app.ActivityThread.-wrap12(ActivityThread.java)\r\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1477)\r\n        at android.os.Handler.dispatchMessage(Handler.java:102)\r\n        at android.os.Looper.loop(Looper.java:154)\r\n        at android.app.ActivityThread.main(ActivityThread.java:6119)\r\n        at java.lang.reflect.Method.invoke(Native Method)\r\n        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:886)\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:776)\r\n     Caused by: java.lang.NullPointerException: Internal error: Cannot allocate memory for the interpreter: tensorflow/contrib/lite/kernels/conv.cc:201 filter->type != data_type (3 != 1)Node 4 failed to prepare.\r\n    \r\n        at org.tensorflow.lite.NativeInterpreterWrapper.createInterpreter(Native Method)\r\n        at org.tensorflow.lite.NativeInterpreterWrapper.<init>(NativeInterpreterWrapper.java:75)\r\n        at org.tensorflow.lite.NativeInterpreterWrapper.<init>(NativeInterpreterWrapper.java:54)\r\n        at org.tensorflow.lite.Interpreter.<init>(Interpreter.java:114)\r\n        at com.example.android.tflitecamerademo.ImageClassifier.<init>(ImageClassifier.java:97)\r\n        at com.example.android.tflitecamerademo.Camera2BasicFragment.onActivityCreated(Camera2BasicFragment.java:299)\r\n        at android.app.Fragment.performActivityCreated(Fragment.java:2362)\r\n        at android.app.FragmentManagerImpl.moveToState(FragmentManager.java:1014)\r\n        at android.app.FragmentManagerImpl.moveToState(FragmentManager.java:1171)\r\n        at android.app.BackStackRecord.run(BackStackRecord.java:816)\r\n        at android.app.FragmentManagerImpl.execPendingActions(FragmentManager.java:1578)\r\n        at android.app.FragmentController.execPendingActions(FragmentController.java:371)\r\n        at android.app.Activity.performStart(Activity.java:6695)\r\n        at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2628)\r\n        at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2726)\u00a0\r\n        at android.app.ActivityThread.-wrap12(ActivityThread.java)\u00a0\r\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1477)\u00a0\r\n        at android.os.Handler.dispatchMessage(Handler.java:102)\u00a0\r\n        at android.os.Looper.loop(Looper.java:154)\u00a0\r\n        at android.app.ActivityThread.main(ActivityThread.java:6119)\u00a0\r\n        at java.lang.reflect.Method.invoke(Native Method)\u00a0\r\n        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:886)\u00a0\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:776)\r\n\r\nThe cmds were as follows:\r\n```\r\nimport tensorflow as tf\r\ngraph_def_file='retrained_graph.pb'\r\ninput_arrays = [\"input\"]\r\noutput_arrays = [\"final_result\"]\r\nconverter = tf.contrib.lite.TocoConverter.from_frozen_graph(graph_def_file, input_arrays, output_arrays)\r\nconverter.post_training_quantize = True\r\ntflite_quantized_model = converter.convert()\r\nopen(\"quantized_graph.tflite\", \"wb\").write(tflite_quantized_model)\r\n```\r\nBut if post-training quantization is not enabled, the app works.\r\n\r\nThe quantized model could work in python env (though the result is not accurate).\r\n```\r\ninterpreter = tf.contrib.lite.Interpreter(model_path=\"quantized_graph.tflite\")\r\ninterpreter.allocate_tensors()\r\ninput_details = interpreter.get_input_details()\r\noutput_details = interpreter.get_output_details()\r\nfrom label_image import read_tensor_from_image_file\r\ninput_data = read_tensor_from_image_file('1.jpg',input_height=224,input_width=224, input_mean=128, input_std=128)\r\ninterpreter.set_tensor(input_details[0]['index'], input_data)\r\ninterpreter.invoke()\r\noutput_data = interpreter.get_tensor(output_details[0]['index'])\r\nprint(output_data)\r\n```\r\n\r\n### Source code / logs\r\nModels are attached.\r\n[tf_files.zip](https://github.com/tensorflow/tensorflow/files/2419845/tf_files.zip)\r\n\r\n"}