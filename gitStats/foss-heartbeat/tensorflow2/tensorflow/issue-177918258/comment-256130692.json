{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/256130692", "html_url": "https://github.com/tensorflow/tensorflow/issues/4478#issuecomment-256130692", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4478", "id": 256130692, "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjEzMDY5Mg==", "user": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "created_at": "2016-10-25T18:34:03Z", "updated_at": "2016-10-25T18:34:03Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Can you do this without the templating mechanism?</p>\n<p>On Oct 21, 2016 2:55 PM, \"Christian\" <a href=\"mailto:notifications@github.com\">notifications@github.com</a> wrote:</p>\n<blockquote>\n<p>I'm having the same error message that is reported in the issue(s). I have<br>\na RNN like structure that has some building blocks (component neural<br>\nnetworks) that are passed in by the user. Here is a minimal example:</p>\n<p>import tensorflow as tf<br>\ntf.reset_default_graph()</p>\n<p>def initialize(shape):<br>\ninit = tf.random_normal(shape, mean=0, stddev=0.1, dtype=tf.float32)<br>\nreturn init</p>\n<p>def test_rnn_with_external(input, hiddens, external_fct):<br>\n\"\"\"<br>\nA simple rnn that makes the standard update, then<br>\nfeeds the new hidden state through some external<br>\nfunction.<br>\n\"\"\"<br>\ndim_in = input.get_shape().as_list()[-1]<br>\nbtsz = input.get_shape().as_list()[1]<br>\nshape = (dim_in + hiddens, hiddens)<br>\n_init = initialize(shape)<br>\nW = tf.get_variable(\"rnn_w\", initializer=_init)<br>\n_init = tf.zeros([hiddens])<br>\nb = tf.get_variable(\"rnn_b\", initializer=_init)</p>\n<pre><code>def _step(previous, input):\n    concat = tf.concat(1, [input, previous])\n    h_t = tf.tanh(tf.add(tf.matmul(concat, W), b))\n\n    h_t = external_fct(h_t)\n\n    return h_t\n\nh_0 = tf.zeros([btsz, hiddens])\nstates = tf.scan(_step,\n                 input,\n                 initializer=h_0,\n                 name=\"states\")\nreturn states\n</code></pre>\n<h1>the external function, relying on the templating mechanism.</h1>\n<p>def ext_fct(hiddens):<br>\n\"\"\"<br>\n\"\"\"<br>\ndef tmp(input):<br>\nshape = (hiddens, hiddens)<br>\n<em>init = initialize(shape)<br>\nW = tf.get_variable(\"ext_w\", initializer=<em>init)<br>\nb = 0<br>\nreturn tf.add(tf.matmul(input, W), b, name=\"external\")<br>\nreturn tf.make_template(name</em>=\"external_fct\", func</em>=tmp)</p>\n<h1>run from here on</h1>\n<p>t = 5<br>\nbtsz = 4<br>\ndim = 2<br>\nhiddens = 3</p>\n<p>x = tf.placeholder(tf.float32, shape=(t, btsz, dim))<br>\next = ext_fct(hiddens)</p>\n<p>states = test_rnn_with_external(x, hiddens, external_fct=ext)</p>\n<p>sess = tf.InteractiveSession()<br>\nsess.run(tf.initialize_all_variables())</p>\n<p>with the error ending in:</p>\n<p>InvalidArgumentError: All inputs to node external_fct/ext_w/Assign must be from the same frame.</p>\n<p>\u2014<br>\nYou are receiving this because you were mentioned.<br>\nReply to this email directly, view it on GitHub<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"177918258\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/4478\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/4478/hovercard?comment_id=255474721&amp;comment_type=issue_comment\" href=\"https://github.com/tensorflow/tensorflow/issues/4478#issuecomment-255474721\">#4478 (comment)</a>,<br>\nor mute the thread<br>\n<a href=\"https://github.com/notifications/unsubscribe-auth/ABtim27Ix4gaRbkMdbrS6mw9SglCr7iJks5q2TS5gaJpZM4KBDCg\">https://github.com/notifications/unsubscribe-auth/ABtim27Ix4gaRbkMdbrS6mw9SglCr7iJks5q2TS5gaJpZM4KBDCg</a><br>\n.</p>\n</blockquote>", "body_text": "Can you do this without the templating mechanism?\nOn Oct 21, 2016 2:55 PM, \"Christian\" notifications@github.com wrote:\n\nI'm having the same error message that is reported in the issue(s). I have\na RNN like structure that has some building blocks (component neural\nnetworks) that are passed in by the user. Here is a minimal example:\nimport tensorflow as tf\ntf.reset_default_graph()\ndef initialize(shape):\ninit = tf.random_normal(shape, mean=0, stddev=0.1, dtype=tf.float32)\nreturn init\ndef test_rnn_with_external(input, hiddens, external_fct):\n\"\"\"\nA simple rnn that makes the standard update, then\nfeeds the new hidden state through some external\nfunction.\n\"\"\"\ndim_in = input.get_shape().as_list()[-1]\nbtsz = input.get_shape().as_list()[1]\nshape = (dim_in + hiddens, hiddens)\n_init = initialize(shape)\nW = tf.get_variable(\"rnn_w\", initializer=_init)\n_init = tf.zeros([hiddens])\nb = tf.get_variable(\"rnn_b\", initializer=_init)\ndef _step(previous, input):\n    concat = tf.concat(1, [input, previous])\n    h_t = tf.tanh(tf.add(tf.matmul(concat, W), b))\n\n    h_t = external_fct(h_t)\n\n    return h_t\n\nh_0 = tf.zeros([btsz, hiddens])\nstates = tf.scan(_step,\n                 input,\n                 initializer=h_0,\n                 name=\"states\")\nreturn states\n\nthe external function, relying on the templating mechanism.\ndef ext_fct(hiddens):\n\"\"\"\n\"\"\"\ndef tmp(input):\nshape = (hiddens, hiddens)\ninit = initialize(shape)\nW = tf.get_variable(\"ext_w\", initializer=init)\nb = 0\nreturn tf.add(tf.matmul(input, W), b, name=\"external\")\nreturn tf.make_template(name=\"external_fct\", func=tmp)\nrun from here on\nt = 5\nbtsz = 4\ndim = 2\nhiddens = 3\nx = tf.placeholder(tf.float32, shape=(t, btsz, dim))\next = ext_fct(hiddens)\nstates = test_rnn_with_external(x, hiddens, external_fct=ext)\nsess = tf.InteractiveSession()\nsess.run(tf.initialize_all_variables())\nwith the error ending in:\nInvalidArgumentError: All inputs to node external_fct/ext_w/Assign must be from the same frame.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\n#4478 (comment),\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABtim27Ix4gaRbkMdbrS6mw9SglCr7iJks5q2TS5gaJpZM4KBDCg\n.", "body": "Can you do this without the templating mechanism?\n\nOn Oct 21, 2016 2:55 PM, \"Christian\" notifications@github.com wrote:\n\n> I'm having the same error message that is reported in the issue(s). I have\n> a RNN like structure that has some building blocks (component neural\n> networks) that are passed in by the user. Here is a minimal example:\n> \n> import tensorflow as tf\n> tf.reset_default_graph()\n> \n> def initialize(shape):\n>     init = tf.random_normal(shape, mean=0, stddev=0.1, dtype=tf.float32)\n>     return init\n> \n> def test_rnn_with_external(input, hiddens, external_fct):\n>     \"\"\"\n>     A simple rnn that makes the standard update, then\n>     feeds the new hidden state through some external\n>     function.\n>     \"\"\"\n>     dim_in = input.get_shape().as_list()[-1]\n>     btsz = input.get_shape().as_list()[1]\n>     shape = (dim_in + hiddens, hiddens)\n>     _init = initialize(shape)\n>     W = tf.get_variable(\"rnn_w\", initializer=_init)\n>     _init = tf.zeros([hiddens])\n>     b = tf.get_variable(\"rnn_b\", initializer=_init)\n> \n> ```\n> def _step(previous, input):\n>     concat = tf.concat(1, [input, previous])\n>     h_t = tf.tanh(tf.add(tf.matmul(concat, W), b))\n> \n>     h_t = external_fct(h_t)\n> \n>     return h_t\n> \n> h_0 = tf.zeros([btsz, hiddens])\n> states = tf.scan(_step,\n>                  input,\n>                  initializer=h_0,\n>                  name=\"states\")\n> return states\n> ```\n> \n> # the external function, relying on the templating mechanism.\n> \n> def ext_fct(hiddens):\n>     \"\"\"\n>     \"\"\"\n>     def tmp(input):\n>         shape = (hiddens, hiddens)\n>         _init = initialize(shape)\n>         W = tf.get_variable(\"ext_w\", initializer=_init)\n>         b = 0\n>         return tf.add(tf.matmul(input, W), b, name=\"external\")\n>     return tf.make_template(name_=\"external_fct\", func_=tmp)\n> \n> # run from here on\n> \n> t = 5\n> btsz = 4\n> dim = 2\n> hiddens = 3\n> \n> x = tf.placeholder(tf.float32, shape=(t, btsz, dim))\n> ext = ext_fct(hiddens)\n> \n> states = test_rnn_with_external(x, hiddens, external_fct=ext)\n> \n> sess = tf.InteractiveSession()\n> sess.run(tf.initialize_all_variables())\n> \n> with the error ending in:\n> \n> InvalidArgumentError: All inputs to node external_fct/ext_w/Assign must be from the same frame.\n> \n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/tensorflow/tensorflow/issues/4478#issuecomment-255474721,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/ABtim27Ix4gaRbkMdbrS6mw9SglCr7iJks5q2TS5gaJpZM4KBDCg\n> .\n"}