{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/304018123", "html_url": "https://github.com/tensorflow/tensorflow/issues/288#issuecomment-304018123", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/288", "id": 304018123, "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDAxODEyMw==", "user": {"login": "ringw", "id": 1391644, "node_id": "MDQ6VXNlcjEzOTE2NDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1391644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ringw", "html_url": "https://github.com/ringw", "followers_url": "https://api.github.com/users/ringw/followers", "following_url": "https://api.github.com/users/ringw/following{/other_user}", "gists_url": "https://api.github.com/users/ringw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ringw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ringw/subscriptions", "organizations_url": "https://api.github.com/users/ringw/orgs", "repos_url": "https://api.github.com/users/ringw/repos", "events_url": "https://api.github.com/users/ringw/events{/privacy}", "received_events_url": "https://api.github.com/users/ringw/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-25T14:04:35Z", "updated_at": "2017-05-25T14:04:35Z", "author_association": "MEMBER", "body_html": "<p>It looks like top_k uses <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/lib/gtl/top_n.h\">sequential heap sort</a>. It would be a big improvement to at least have parallel quicksort or merge sort on the CPU, and support sort and argsort. <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=24605895\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ed-alertedh\">@ed-alertedh</a> mentioned a GPU top-k implementation in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"190499357\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/5719\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/5719/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/5719\">#5719</a>, but it sounds like it's only faster for huge tensors.</p>\n<p>On the CPU, we can share code for parallel sort and top_k (using quicksort and <a href=\"https://en.wikipedia.org/wiki/Quickselect\" rel=\"nofollow\">quickselect</a>). <a href=\"http://www.cse.chalmers.se/~tsigas/papers/GPU-Quicksort-jea.pdf\" rel=\"nofollow\">GPU-Quicksort</a> might work well too.</p>", "body_text": "It looks like top_k uses sequential heap sort. It would be a big improvement to at least have parallel quicksort or merge sort on the CPU, and support sort and argsort. @ed-alertedh mentioned a GPU top-k implementation in #5719, but it sounds like it's only faster for huge tensors.\nOn the CPU, we can share code for parallel sort and top_k (using quicksort and quickselect). GPU-Quicksort might work well too.", "body": "It looks like top_k uses [sequential heap sort](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/lib/gtl/top_n.h). It would be a big improvement to at least have parallel quicksort or merge sort on the CPU, and support sort and argsort. @ed-alertedh mentioned a GPU top-k implementation in #5719, but it sounds like it's only faster for huge tensors.\r\n\r\nOn the CPU, we can share code for parallel sort and top_k (using quicksort and [quickselect](https://en.wikipedia.org/wiki/Quickselect)). [GPU-Quicksort](http://www.cse.chalmers.se/~tsigas/papers/GPU-Quicksort-jea.pdf) might work well too."}