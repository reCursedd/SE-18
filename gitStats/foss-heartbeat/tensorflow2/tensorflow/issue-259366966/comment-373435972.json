{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/373435972", "html_url": "https://github.com/tensorflow/tensorflow/issues/13202#issuecomment-373435972", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13202", "id": 373435972, "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzQzNTk3Mg==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-15T16:21:46Z", "updated_at": "2018-03-15T16:21:46Z", "author_association": "CONTRIBUTOR", "body_html": "<p>So after implementing a couple of fixes for this, it seems there's no way to stop the leak without breaking an existing use case. The \"fix\" will be a warning, as <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1595907\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/carlthome\">@carlthome</a> suggested, and we will investigate a more principled fix for TensorFlow 2.0.</p>", "body_text": "So after implementing a couple of fixes for this, it seems there's no way to stop the leak without breaking an existing use case. The \"fix\" will be a warning, as @carlthome suggested, and we will investigate a more principled fix for TensorFlow 2.0.", "body": "So after implementing a couple of fixes for this, it seems there's no way to stop the leak without breaking an existing use case. The \"fix\" will be a warning, as @carlthome suggested, and we will investigate a more principled fix for TensorFlow 2.0."}