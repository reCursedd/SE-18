{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22208", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22208/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22208/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22208/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/22208", "id": 358936128, "node_id": "MDU6SXNzdWUzNTg5MzYxMjg=", "number": 22208, "title": "LookupError: No gradient defined for operation type: ResizeNearestNeighborGrad or ResizeBilinearGrad", "user": {"login": "GPrathap", "id": 7587302, "node_id": "MDQ6VXNlcjc1ODczMDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/7587302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GPrathap", "html_url": "https://github.com/GPrathap", "followers_url": "https://api.github.com/users/GPrathap/followers", "following_url": "https://api.github.com/users/GPrathap/following{/other_user}", "gists_url": "https://api.github.com/users/GPrathap/gists{/gist_id}", "starred_url": "https://api.github.com/users/GPrathap/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GPrathap/subscriptions", "organizations_url": "https://api.github.com/users/GPrathap/orgs", "repos_url": "https://api.github.com/users/GPrathap/repos", "events_url": "https://api.github.com/users/GPrathap/events{/privacy}", "received_events_url": "https://api.github.com/users/GPrathap/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-09-11T08:15:48Z", "updated_at": "2018-10-19T07:01:35Z", "closed_at": null, "author_association": "NONE", "body_html": "<h3>System information:</h3>\n<ul>\n<li><strong>OS Platform and Distribution</strong>: Linux Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:binary</li>\n<li><strong>TensorFlow version</strong>:1.10.0</li>\n<li><strong>Python version</strong>:2.7.x</li>\n<li><strong>CUDA/cuDNN version</strong>:9.0.x</li>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:Nope</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>:N/</li>\n<li><strong>Bazel version (if compiling from source)</strong>: N/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:N/A</li>\n<li><strong>GPU model and memory</strong>: Geforce 940mx</li>\n<li><strong>Exact command to reproduce</strong>: N/A</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I want to the gradient of any of <a href=\"https://www.tensorflow.org/api_docs/python/tf/image/ResizeMethod\" rel=\"nofollow\">these image resizing operations</a> inside the neural network. But seems to be any of these does not define the gradient ops for them. I see there is a <a href=\"https://github.com/tensorflow/tensorflow/issues/7641\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/7641/hovercard\">similar issue </a> which has not been answered yet. I also asked in the <a href=\"https://stackoverflow.com/questions/52264891/lookuperror-no-gradient-defined-for-operation-type-resizenearestneighborgrad\" rel=\"nofollow\">SO</a> but still, I did not get an answer for this.</p>\n<h3>Source code / logs</h3>\n<pre><code>\tdifferences = tf.subtract(images_fake, images_real)\n\talpha_shape = [params.batch_size] + [1] * (differences.shape.ndims - 1)\n\talpha = tf.random_uniform(shape=alpha_shape, minval=0., maxval=1.)\n\tinterpolates = images_real + (alpha * differences)\n\td_model = Model(params, args.mode, interpolates, reuse_variables, images_fake, 1)\n\tgradients = tf.gradients(d_model.logistic_linear, [interpolates])[0]\n\tslopes = tf.sqrt(tf.reduce_sum(tf.square(gradients), reduction_indices=[1]))\n\tgradient_penalty = tf.reduce_mean((slopes - 1.) ** 2)\n\t_gradient_penalty = 10 * gradient_penalty\n</code></pre>\n<p>Inside my model, it uses <a href=\"https://www.tensorflow.org/api_docs/python/tf/image/resize_bicubic\" rel=\"nofollow\"> tf.image.resize_bicubic()</a>. But I see there are some <a href=\"https://github.com/tensorflow/tensorflow/commit/3331c574bcfd85787d7a4f3d1b1b139239a6595b\">exisiting implementation</a> for this. But not sure how those things get it them working. Please let me know how this can be achieved. These image resizing cannot be done as preprocessing it needs to be done inside a model. Any help would be really appreciated.</p>", "body_text": "System information:\n\nOS Platform and Distribution: Linux Ubuntu 16.04\nTensorFlow installed from (source or binary):binary\nTensorFlow version:1.10.0\nPython version:2.7.x\nCUDA/cuDNN version:9.0.x\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):Nope\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:N/\nBazel version (if compiling from source): N/A\nGCC/Compiler version (if compiling from source):N/A\nGPU model and memory: Geforce 940mx\nExact command to reproduce: N/A\n\nDescribe the problem\nI want to the gradient of any of these image resizing operations inside the neural network. But seems to be any of these does not define the gradient ops for them. I see there is a similar issue  which has not been answered yet. I also asked in the SO but still, I did not get an answer for this.\nSource code / logs\n\tdifferences = tf.subtract(images_fake, images_real)\n\talpha_shape = [params.batch_size] + [1] * (differences.shape.ndims - 1)\n\talpha = tf.random_uniform(shape=alpha_shape, minval=0., maxval=1.)\n\tinterpolates = images_real + (alpha * differences)\n\td_model = Model(params, args.mode, interpolates, reuse_variables, images_fake, 1)\n\tgradients = tf.gradients(d_model.logistic_linear, [interpolates])[0]\n\tslopes = tf.sqrt(tf.reduce_sum(tf.square(gradients), reduction_indices=[1]))\n\tgradient_penalty = tf.reduce_mean((slopes - 1.) ** 2)\n\t_gradient_penalty = 10 * gradient_penalty\n\nInside my model, it uses  tf.image.resize_bicubic(). But I see there are some exisiting implementation for this. But not sure how those things get it them working. Please let me know how this can be achieved. These image resizing cannot be done as preprocessing it needs to be done inside a model. Any help would be really appreciated.", "body": "### System information:\r\n- **OS Platform and Distribution**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**:binary\r\n- **TensorFlow version**:1.10.0\r\n- **Python version**:2.7.x\r\n- **CUDA/cuDNN version**:9.0.x\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:Nope\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**:N/\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**:N/A\r\n- **GPU model and memory**: Geforce 940mx\r\n- **Exact command to reproduce**: N/A\r\n\r\n### Describe the problem\r\nI want to the gradient of any of [these image resizing operations](https://www.tensorflow.org/api_docs/python/tf/image/ResizeMethod) inside the neural network. But seems to be any of these does not define the gradient ops for them. I see there is a [similar issue ](https://github.com/tensorflow/tensorflow/issues/7641) which has not been answered yet. I also asked in the [SO](https://stackoverflow.com/questions/52264891/lookuperror-no-gradient-defined-for-operation-type-resizenearestneighborgrad) but still, I did not get an answer for this. \r\n\r\n### Source code / logs\r\n\r\n      \r\n\t\tdifferences = tf.subtract(images_fake, images_real)\r\n\t\talpha_shape = [params.batch_size] + [1] * (differences.shape.ndims - 1)\r\n\t\talpha = tf.random_uniform(shape=alpha_shape, minval=0., maxval=1.)\r\n\t\tinterpolates = images_real + (alpha * differences)\r\n\t\td_model = Model(params, args.mode, interpolates, reuse_variables, images_fake, 1)\r\n\t\tgradients = tf.gradients(d_model.logistic_linear, [interpolates])[0]\r\n\t\tslopes = tf.sqrt(tf.reduce_sum(tf.square(gradients), reduction_indices=[1]))\r\n\t\tgradient_penalty = tf.reduce_mean((slopes - 1.) ** 2)\r\n\t\t_gradient_penalty = 10 * gradient_penalty\r\n\r\nInside my model, it uses [ tf.image.resize_bicubic()](https://www.tensorflow.org/api_docs/python/tf/image/resize_bicubic). But I see there are some [exisiting implementation](https://github.com/tensorflow/tensorflow/commit/3331c574bcfd85787d7a4f3d1b1b139239a6595b) for this. But not sure how those things get it them working. Please let me know how this can be achieved. These image resizing cannot be done as preprocessing it needs to be done inside a model. Any help would be really appreciated. "}