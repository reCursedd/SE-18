{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/428722081", "html_url": "https://github.com/tensorflow/tensorflow/pull/17690#issuecomment-428722081", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17690", "id": 428722081, "node_id": "MDEyOklzc3VlQ29tbWVudDQyODcyMjA4MQ==", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-10T20:36:40Z", "updated_at": "2018-10-10T20:36:40Z", "author_association": "MEMBER", "body_html": "<p>(For API review)</p>\n<p>Can't this break callers that use only positional arguments (since a new argument was inserted before the last one, <code>name</code>)? If so, let's add a wrapper (just for v1) to prevent that, i.e., where the new argument is after <code>name</code> in the Python API.</p>", "body_text": "(For API review)\nCan't this break callers that use only positional arguments (since a new argument was inserted before the last one, name)? If so, let's add a wrapper (just for v1) to prevent that, i.e., where the new argument is after name in the Python API.", "body": "(For API review)\r\n\r\nCan't this break callers that use only positional arguments (since a new argument was inserted before the last one, `name`)? If so, let's add a wrapper (just for v1) to prevent that, i.e., where the new argument is after `name` in the Python API."}