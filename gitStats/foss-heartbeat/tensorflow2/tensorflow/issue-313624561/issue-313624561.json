{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18453", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18453/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18453/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18453/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18453", "id": 313624561, "node_id": "MDU6SXNzdWUzMTM2MjQ1NjE=", "number": 18453, "title": "Slim Train API doesn't provide control to user to extract loss and accuracy metrics", "user": {"login": "deepak-2017", "id": 32203263, "node_id": "MDQ6VXNlcjMyMjAzMjYz", "avatar_url": "https://avatars3.githubusercontent.com/u/32203263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deepak-2017", "html_url": "https://github.com/deepak-2017", "followers_url": "https://api.github.com/users/deepak-2017/followers", "following_url": "https://api.github.com/users/deepak-2017/following{/other_user}", "gists_url": "https://api.github.com/users/deepak-2017/gists{/gist_id}", "starred_url": "https://api.github.com/users/deepak-2017/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deepak-2017/subscriptions", "organizations_url": "https://api.github.com/users/deepak-2017/orgs", "repos_url": "https://api.github.com/users/deepak-2017/repos", "events_url": "https://api.github.com/users/deepak-2017/events{/privacy}", "received_events_url": "https://api.github.com/users/deepak-2017/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}, {"id": 473184161, "node_id": "MDU6TGFiZWw0NzMxODQxNjE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:support", "name": "type:support", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "rohan100jain", "id": 144114, "node_id": "MDQ6VXNlcjE0NDExNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/144114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rohan100jain", "html_url": "https://github.com/rohan100jain", "followers_url": "https://api.github.com/users/rohan100jain/followers", "following_url": "https://api.github.com/users/rohan100jain/following{/other_user}", "gists_url": "https://api.github.com/users/rohan100jain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rohan100jain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rohan100jain/subscriptions", "organizations_url": "https://api.github.com/users/rohan100jain/orgs", "repos_url": "https://api.github.com/users/rohan100jain/repos", "events_url": "https://api.github.com/users/rohan100jain/events{/privacy}", "received_events_url": "https://api.github.com/users/rohan100jain/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rohan100jain", "id": 144114, "node_id": "MDQ6VXNlcjE0NDExNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/144114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rohan100jain", "html_url": "https://github.com/rohan100jain", "followers_url": "https://api.github.com/users/rohan100jain/followers", "following_url": "https://api.github.com/users/rohan100jain/following{/other_user}", "gists_url": "https://api.github.com/users/rohan100jain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rohan100jain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rohan100jain/subscriptions", "organizations_url": "https://api.github.com/users/rohan100jain/orgs", "repos_url": "https://api.github.com/users/rohan100jain/repos", "events_url": "https://api.github.com/users/rohan100jain/events{/privacy}", "received_events_url": "https://api.github.com/users/rohan100jain/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2018-04-12T08:25:34Z", "updated_at": "2018-09-28T21:20:50Z", "closed_at": "2018-09-28T21:20:50Z", "author_association": "NONE", "body_html": "<p>I am referring to <a href=\"https://github.com/tensorflow/models/blob/master/research/slim/train_image_classifier.py\">train_image_classifier.py</a> script provided by Tensorflow for image classification.</p>\n<p>Script uses slim.learning.train API to kick off the training and then it takes care for everything internally.<br>\nThough it logs the metrics i.e. loss/accuracy but that's all internal to slim. I doesn't provide handle to get periodic updates of loss/accuracy in my script while training is going on.<br>\nMy requirement is to extract loss and accuracy metrics after every n number of epochs, i.e. 5 and dump that into database for later analysis.</p>\n<p>But because of high level abstraction of slim train API, It seems there is now way to get periodic updates loss/accuracy info during the training.</p>\n<p>Is it possible to tap the training process and get the loss/accuracy values after every given number of steps/epochs ?<br>\nIf it's possible, please share the pseudo code for that.</p>\n<p>It will be really helpful for me.</p>\n<p>Thanks.</p>", "body_text": "I am referring to train_image_classifier.py script provided by Tensorflow for image classification.\nScript uses slim.learning.train API to kick off the training and then it takes care for everything internally.\nThough it logs the metrics i.e. loss/accuracy but that's all internal to slim. I doesn't provide handle to get periodic updates of loss/accuracy in my script while training is going on.\nMy requirement is to extract loss and accuracy metrics after every n number of epochs, i.e. 5 and dump that into database for later analysis.\nBut because of high level abstraction of slim train API, It seems there is now way to get periodic updates loss/accuracy info during the training.\nIs it possible to tap the training process and get the loss/accuracy values after every given number of steps/epochs ?\nIf it's possible, please share the pseudo code for that.\nIt will be really helpful for me.\nThanks.", "body": "I am referring to [train_image_classifier.py][1] script provided by Tensorflow for image classification.\r\n\r\nScript uses slim.learning.train API to kick off the training and then it takes care for everything internally.\r\nThough it logs the metrics i.e. loss/accuracy but that's all internal to slim. I doesn't provide handle to get periodic updates of loss/accuracy in my script while training is going on.\r\nMy requirement is to extract loss and accuracy metrics after every n number of epochs, i.e. 5 and dump that into database for later analysis.\r\n\r\nBut because of high level abstraction of slim train API, It seems there is now way to get periodic updates loss/accuracy info during the training.\r\n\r\n\r\nIs it possible to tap the training process and get the loss/accuracy values after every given number of steps/epochs ?\r\nIf it's possible, please share the pseudo code for that.\r\n\r\nIt will be really helpful for me. \r\n\r\nThanks.\r\n\r\n\r\n  [1]: https://github.com/tensorflow/models/blob/master/research/slim/train_image_classifier.py"}