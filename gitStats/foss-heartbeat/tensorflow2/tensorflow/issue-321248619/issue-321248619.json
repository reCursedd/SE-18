{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19151", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19151/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19151/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19151/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19151", "id": 321248619, "node_id": "MDU6SXNzdWUzMjEyNDg2MTk=", "number": 19151, "title": "Keras metrics raise RuntimeError with MirroredStrategy", "user": {"login": "blezek", "id": 76340, "node_id": "MDQ6VXNlcjc2MzQw", "avatar_url": "https://avatars3.githubusercontent.com/u/76340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blezek", "html_url": "https://github.com/blezek", "followers_url": "https://api.github.com/users/blezek/followers", "following_url": "https://api.github.com/users/blezek/following{/other_user}", "gists_url": "https://api.github.com/users/blezek/gists{/gist_id}", "starred_url": "https://api.github.com/users/blezek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blezek/subscriptions", "organizations_url": "https://api.github.com/users/blezek/orgs", "repos_url": "https://api.github.com/users/blezek/repos", "events_url": "https://api.github.com/users/blezek/events{/privacy}", "received_events_url": "https://api.github.com/users/blezek/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "isaprykin", "id": 234070, "node_id": "MDQ6VXNlcjIzNDA3MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/234070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/isaprykin", "html_url": "https://github.com/isaprykin", "followers_url": "https://api.github.com/users/isaprykin/followers", "following_url": "https://api.github.com/users/isaprykin/following{/other_user}", "gists_url": "https://api.github.com/users/isaprykin/gists{/gist_id}", "starred_url": "https://api.github.com/users/isaprykin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/isaprykin/subscriptions", "organizations_url": "https://api.github.com/users/isaprykin/orgs", "repos_url": "https://api.github.com/users/isaprykin/repos", "events_url": "https://api.github.com/users/isaprykin/events{/privacy}", "received_events_url": "https://api.github.com/users/isaprykin/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "isaprykin", "id": 234070, "node_id": "MDQ6VXNlcjIzNDA3MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/234070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/isaprykin", "html_url": "https://github.com/isaprykin", "followers_url": "https://api.github.com/users/isaprykin/followers", "following_url": "https://api.github.com/users/isaprykin/following{/other_user}", "gists_url": "https://api.github.com/users/isaprykin/gists{/gist_id}", "starred_url": "https://api.github.com/users/isaprykin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/isaprykin/subscriptions", "organizations_url": "https://api.github.com/users/isaprykin/orgs", "repos_url": "https://api.github.com/users/isaprykin/repos", "events_url": "https://api.github.com/users/isaprykin/events{/privacy}", "received_events_url": "https://api.github.com/users/isaprykin/received_events", "type": "User", "site_admin": false}, {"login": "guptapriya", "id": 14104855, "node_id": "MDQ6VXNlcjE0MTA0ODU1", "avatar_url": "https://avatars1.githubusercontent.com/u/14104855?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guptapriya", "html_url": "https://github.com/guptapriya", "followers_url": "https://api.github.com/users/guptapriya/followers", "following_url": "https://api.github.com/users/guptapriya/following{/other_user}", "gists_url": "https://api.github.com/users/guptapriya/gists{/gist_id}", "starred_url": "https://api.github.com/users/guptapriya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guptapriya/subscriptions", "organizations_url": "https://api.github.com/users/guptapriya/orgs", "repos_url": "https://api.github.com/users/guptapriya/repos", "events_url": "https://api.github.com/users/guptapriya/events{/privacy}", "received_events_url": "https://api.github.com/users/guptapriya/received_events", "type": "User", "site_admin": false}, {"login": "anj-s", "id": 32556631, "node_id": "MDQ6VXNlcjMyNTU2NjMx", "avatar_url": "https://avatars1.githubusercontent.com/u/32556631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anj-s", "html_url": "https://github.com/anj-s", "followers_url": "https://api.github.com/users/anj-s/followers", "following_url": "https://api.github.com/users/anj-s/following{/other_user}", "gists_url": "https://api.github.com/users/anj-s/gists{/gist_id}", "starred_url": "https://api.github.com/users/anj-s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anj-s/subscriptions", "organizations_url": "https://api.github.com/users/anj-s/orgs", "repos_url": "https://api.github.com/users/anj-s/repos", "events_url": "https://api.github.com/users/anj-s/events{/privacy}", "received_events_url": "https://api.github.com/users/anj-s/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-05-08T16:02:01Z", "updated_at": "2018-05-15T15:40:34Z", "closed_at": "2018-05-15T14:35:44Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: YES</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Docker built on nvidia/cuda:9.0-devel-ubuntu16.04</li>\n<li><strong>TensorFlow installed from</strong>: binary</li>\n<li><strong>TensorFlow version</strong>: v1.8.0-0-g93bc2e2072 1.8.0</li>\n<li><strong>Cuda version</strong>: 9.0</li>\n<li><strong>Bazel version</strong>: N/A (binary install)</li>\n<li><strong>Python version</strong>: Python 3.5.2</li>\n<li><strong>GPU model and memory</strong>:  4x1080 w/8G / See output from tf_env_collect.sh below</li>\n<li><strong>Exact command to reproduce</strong>: <code>python3 simple_tfkeras_example.py ./simple_model/</code></li>\n</ul>\n<h3>Describe the problem</h3>\n<p>Trying to adapt Keras code to be distributed using <code>tf.contrib.distribute.MirroredStrategy</code>, however, using <code>metrics</code> in the Keras model causes an Exception to be raised:</p>\n<pre><code>    \"Use DistributionStrategy.update() to modify a MirroredVariable.\")\nRuntimeError: Use DistributionStrategy.update() to modify a MirroredVariable.\nException ignored in: &lt;generator object get_controller at 0x7f7be0048f68&gt;\n</code></pre>\n<p>If the <code>strategy</code> is set to <code>None</code> or <code>OneDeviceStrategy</code>, the metrics perform as expected.  When <code>strategy</code> is <code>MirroredStrategy</code>, the exception is raised.  If the metrics are removed from the <code>model.compile</code> call, the code works as expected.</p>\n<p>This appears to be a bug, or an unimplemented feature, with the understanding that <code>MirroredStrategy</code> is new in TF 1.8.</p>\n<h3>Source code / logs</h3>\n<p><code>simple_tfkeras_example.py</code> (slightly modified from the <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/distribute/python/examples/simple_tfkeras_example.py\">examples</a>)</p>\n<pre><code># Copyright 2018 The TensorFlow Authors. All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n# ==============================================================================\n\"\"\"An example tf.keras model that is trained using MirroredStrategy.\"\"\"\nfrom __future__ import absolute_import\nfrom __future__ import division\nfrom __future__ import print_function\nfrom sys import argv\nimport numpy as np\nimport tensorflow as tf\n\nsz = 16\nnchannels = 5\nsh = (sz,sz,sz,nchannels)\ndef input_fn():\n  x = np.random.random((2,sz,sz,sz,nchannels))\n  y = np.random.randint(2, size=(2,sz,sz,sz,nchannels))\n  x = tf.cast(x, tf.float32)\n  dataset = tf.data.Dataset.from_tensor_slices((x, y))\n  dataset = dataset.repeat(10)\n  dataset = dataset.batch(32)\n  return dataset\n\n\ndef main(args):\n  if len(args) &lt; 2:\n    print('You must specify  model_dir for checkpoints such as'\n          ' /tmp/tfkeras_example./')\n    return\n\n  print('Using %s to store checkpoints.' % args[1])\n\n  # These strategies work\n  # strategy = None\n  # strategy = tf.contrib.distribute.OneDeviceStrategy('/device:GPU:0')\n  \n  # These strategies fail with:\n  # \"Use DistributionStrategy.update() to modify a MirroredVariable.\")\n  # RuntimeError: Use DistributionStrategy.update() to modify a MirroredVariable.\n  # Exception ignored in: &lt;generator object get_controller at 0x7f7be0048f68&gt;\n  strategy = tf.contrib.distribute.MirroredStrategy(\n      ['/device:GPU:0', '/device:GPU:1'])\n  strategy = tf.contrib.distribute.MirroredStrategy(num_gpus=4)\n  \n  config = tf.estimator.RunConfig(train_distribute=strategy)\n  optimizer = tf.train.GradientDescentOptimizer(0.2)\n\n  optimizer = tf.train.AdadeltaOptimizer()\n  \n  model = tf.keras.Sequential()\n  l = tf.keras.layers\n  model.add(l.Conv3D(5,3, padding='same', activation='relu', input_shape=sh))\n  # model.add(tf.keras.layers.Dense(16, activation='relu', input_shape=(10,)))\n  # model.add(tf.keras.layers.Dense(1, activation='sigmoid'))\n\n  # works correctly with OneDeviceStrategy and MirroredStrategy\n  metrics = None\n  # works correctly with OneDeviceStrategy, but not with MirroredStrategy\n  metrics = ['binary_accuracy']\n    \n  model.compile(loss='binary_crossentropy', optimizer=optimizer, metrics=metrics)\n  model.summary()\n  tf.keras.backend.set_learning_phase(True)\n  keras_estimator = tf.keras.estimator.model_to_estimator(\n      keras_model=model, config=config, model_dir=args[1])\n\n  keras_estimator.train(input_fn=input_fn, steps=1000)\n  eval_result = keras_estimator.evaluate(input_fn=input_fn)\n  print('Eval result: {}'.format(eval_result))\n\nif __name__ == '__main__':\n  tf.app.run(argv=argv)\n</code></pre>\n<h3>Output of <code>tf_env_collect.sh</code></h3>\n<pre><code>== cat /etc/issue ===============================================\nLinux c036785af2e5 3.10.0-693.17.1.el7.x86_64 #1 SMP Thu Jan 25 04:11:40 CST 2018 x86_64 x86_64 x86_64 GNU/Linux\nVERSION=\"16.04.4 LTS (Xenial Xerus)\"\nVERSION_ID=\"16.04\"\nVERSION_CODENAME=xenial\n\n== are we in docker =============================================\nYes\n\n== compiler =====================================================\nc++ (Ubuntu 5.4.0-6ubuntu1~16.04.9) 5.4.0 20160609\nCopyright (C) 2015 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n\n== uname -a =====================================================\nLinux c036785af2e5 3.10.0-693.17.1.el7.x86_64 #1 SMP Thu Jan 25 04:11:40 CST 2018 x86_64 x86_64 x86_64 GNU/Linux\n\n== check pips ===================================================\nnumpy           1.14.3\nprotobuf        3.5.2.post1\ntensorflow-gpu  1.8.0\n\n== check for virtualenv =========================================\nFalse\n\n== tensorflow import ============================================\ntf.VERSION = 1.8.0\ntf.GIT_VERSION = v1.8.0-0-g93bc2e2072\ntf.COMPILER_VERSION = v1.8.0-0-g93bc2e2072\nSanity check: array([1], dtype=int32)\n/usr/local/lib/python3.5/dist-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.\n  from ._conv import register_converters as _register_converters\n\n== env ==========================================================\nLD_LIBRARY_PATH /usr/local/nvidia/lib:/usr/local/nvidia/lib64\nDYLD_LIBRARY_PATH is unset\n\n== nvidia-smi ===================================================\nTue May  8 15:47:06 2018\n+-----------------------------------------------------------------------------+\n| NVIDIA-SMI 384.90                 Driver Version: 384.90                    |\n|-------------------------------+----------------------+----------------------+\n| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n|===============================+======================+======================|\n|   0  GeForce GTX 1080    Off  | 00000000:84:00.0 Off |                  N/A |\n| 27%   35C    P0    39W / 180W |      0MiB /  8114MiB |      0%      Default |\n+-------------------------------+----------------------+----------------------+\n|   1  GeForce GTX 1080    Off  | 00000000:85:00.0 Off |                  N/A |\n| 27%   37C    P0    38W / 180W |      0MiB /  8114MiB |      0%      Default |\n+-------------------------------+----------------------+----------------------+\n|   2  GeForce GTX 1080    Off  | 00000000:88:00.0 Off |                  N/A |\n| 27%   27C    P0    39W / 180W |      0MiB /  8114MiB |      0%      Default |\n+-------------------------------+----------------------+----------------------+\n|   3  GeForce GTX 1080    Off  | 00000000:89:00.0 Off |                  N/A |\n| 27%   32C    P0    38W / 180W |      0MiB /  8114MiB |      0%      Default |\n+-------------------------------+----------------------+----------------------+\n\n+-----------------------------------------------------------------------------+\n| Processes:                                                       GPU Memory |\n|  GPU       PID   Type   Process name                             Usage      |\n|=============================================================================|\n|  No running processes found                                                 |\n+-----------------------------------------------------------------------------+\n\n== cuda libs  ===================================================\n/usr/local/cuda-9.0/targets/x86_64-linux/lib/libcudart.so.9.0.176\n/usr/local/cuda-9.0/targets/x86_64-linux/lib/libcudart_static.a\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): YES\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Docker built on nvidia/cuda:9.0-devel-ubuntu16.04\nTensorFlow installed from: binary\nTensorFlow version: v1.8.0-0-g93bc2e2072 1.8.0\nCuda version: 9.0\nBazel version: N/A (binary install)\nPython version: Python 3.5.2\nGPU model and memory:  4x1080 w/8G / See output from tf_env_collect.sh below\nExact command to reproduce: python3 simple_tfkeras_example.py ./simple_model/\n\nDescribe the problem\nTrying to adapt Keras code to be distributed using tf.contrib.distribute.MirroredStrategy, however, using metrics in the Keras model causes an Exception to be raised:\n    \"Use DistributionStrategy.update() to modify a MirroredVariable.\")\nRuntimeError: Use DistributionStrategy.update() to modify a MirroredVariable.\nException ignored in: <generator object get_controller at 0x7f7be0048f68>\n\nIf the strategy is set to None or OneDeviceStrategy, the metrics perform as expected.  When strategy is MirroredStrategy, the exception is raised.  If the metrics are removed from the model.compile call, the code works as expected.\nThis appears to be a bug, or an unimplemented feature, with the understanding that MirroredStrategy is new in TF 1.8.\nSource code / logs\nsimple_tfkeras_example.py (slightly modified from the examples)\n# Copyright 2018 The TensorFlow Authors. All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n# ==============================================================================\n\"\"\"An example tf.keras model that is trained using MirroredStrategy.\"\"\"\nfrom __future__ import absolute_import\nfrom __future__ import division\nfrom __future__ import print_function\nfrom sys import argv\nimport numpy as np\nimport tensorflow as tf\n\nsz = 16\nnchannels = 5\nsh = (sz,sz,sz,nchannels)\ndef input_fn():\n  x = np.random.random((2,sz,sz,sz,nchannels))\n  y = np.random.randint(2, size=(2,sz,sz,sz,nchannels))\n  x = tf.cast(x, tf.float32)\n  dataset = tf.data.Dataset.from_tensor_slices((x, y))\n  dataset = dataset.repeat(10)\n  dataset = dataset.batch(32)\n  return dataset\n\n\ndef main(args):\n  if len(args) < 2:\n    print('You must specify  model_dir for checkpoints such as'\n          ' /tmp/tfkeras_example./')\n    return\n\n  print('Using %s to store checkpoints.' % args[1])\n\n  # These strategies work\n  # strategy = None\n  # strategy = tf.contrib.distribute.OneDeviceStrategy('/device:GPU:0')\n  \n  # These strategies fail with:\n  # \"Use DistributionStrategy.update() to modify a MirroredVariable.\")\n  # RuntimeError: Use DistributionStrategy.update() to modify a MirroredVariable.\n  # Exception ignored in: <generator object get_controller at 0x7f7be0048f68>\n  strategy = tf.contrib.distribute.MirroredStrategy(\n      ['/device:GPU:0', '/device:GPU:1'])\n  strategy = tf.contrib.distribute.MirroredStrategy(num_gpus=4)\n  \n  config = tf.estimator.RunConfig(train_distribute=strategy)\n  optimizer = tf.train.GradientDescentOptimizer(0.2)\n\n  optimizer = tf.train.AdadeltaOptimizer()\n  \n  model = tf.keras.Sequential()\n  l = tf.keras.layers\n  model.add(l.Conv3D(5,3, padding='same', activation='relu', input_shape=sh))\n  # model.add(tf.keras.layers.Dense(16, activation='relu', input_shape=(10,)))\n  # model.add(tf.keras.layers.Dense(1, activation='sigmoid'))\n\n  # works correctly with OneDeviceStrategy and MirroredStrategy\n  metrics = None\n  # works correctly with OneDeviceStrategy, but not with MirroredStrategy\n  metrics = ['binary_accuracy']\n    \n  model.compile(loss='binary_crossentropy', optimizer=optimizer, metrics=metrics)\n  model.summary()\n  tf.keras.backend.set_learning_phase(True)\n  keras_estimator = tf.keras.estimator.model_to_estimator(\n      keras_model=model, config=config, model_dir=args[1])\n\n  keras_estimator.train(input_fn=input_fn, steps=1000)\n  eval_result = keras_estimator.evaluate(input_fn=input_fn)\n  print('Eval result: {}'.format(eval_result))\n\nif __name__ == '__main__':\n  tf.app.run(argv=argv)\n\nOutput of tf_env_collect.sh\n== cat /etc/issue ===============================================\nLinux c036785af2e5 3.10.0-693.17.1.el7.x86_64 #1 SMP Thu Jan 25 04:11:40 CST 2018 x86_64 x86_64 x86_64 GNU/Linux\nVERSION=\"16.04.4 LTS (Xenial Xerus)\"\nVERSION_ID=\"16.04\"\nVERSION_CODENAME=xenial\n\n== are we in docker =============================================\nYes\n\n== compiler =====================================================\nc++ (Ubuntu 5.4.0-6ubuntu1~16.04.9) 5.4.0 20160609\nCopyright (C) 2015 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n\n== uname -a =====================================================\nLinux c036785af2e5 3.10.0-693.17.1.el7.x86_64 #1 SMP Thu Jan 25 04:11:40 CST 2018 x86_64 x86_64 x86_64 GNU/Linux\n\n== check pips ===================================================\nnumpy           1.14.3\nprotobuf        3.5.2.post1\ntensorflow-gpu  1.8.0\n\n== check for virtualenv =========================================\nFalse\n\n== tensorflow import ============================================\ntf.VERSION = 1.8.0\ntf.GIT_VERSION = v1.8.0-0-g93bc2e2072\ntf.COMPILER_VERSION = v1.8.0-0-g93bc2e2072\nSanity check: array([1], dtype=int32)\n/usr/local/lib/python3.5/dist-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.\n  from ._conv import register_converters as _register_converters\n\n== env ==========================================================\nLD_LIBRARY_PATH /usr/local/nvidia/lib:/usr/local/nvidia/lib64\nDYLD_LIBRARY_PATH is unset\n\n== nvidia-smi ===================================================\nTue May  8 15:47:06 2018\n+-----------------------------------------------------------------------------+\n| NVIDIA-SMI 384.90                 Driver Version: 384.90                    |\n|-------------------------------+----------------------+----------------------+\n| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n|===============================+======================+======================|\n|   0  GeForce GTX 1080    Off  | 00000000:84:00.0 Off |                  N/A |\n| 27%   35C    P0    39W / 180W |      0MiB /  8114MiB |      0%      Default |\n+-------------------------------+----------------------+----------------------+\n|   1  GeForce GTX 1080    Off  | 00000000:85:00.0 Off |                  N/A |\n| 27%   37C    P0    38W / 180W |      0MiB /  8114MiB |      0%      Default |\n+-------------------------------+----------------------+----------------------+\n|   2  GeForce GTX 1080    Off  | 00000000:88:00.0 Off |                  N/A |\n| 27%   27C    P0    39W / 180W |      0MiB /  8114MiB |      0%      Default |\n+-------------------------------+----------------------+----------------------+\n|   3  GeForce GTX 1080    Off  | 00000000:89:00.0 Off |                  N/A |\n| 27%   32C    P0    38W / 180W |      0MiB /  8114MiB |      0%      Default |\n+-------------------------------+----------------------+----------------------+\n\n+-----------------------------------------------------------------------------+\n| Processes:                                                       GPU Memory |\n|  GPU       PID   Type   Process name                             Usage      |\n|=============================================================================|\n|  No running processes found                                                 |\n+-----------------------------------------------------------------------------+\n\n== cuda libs  ===================================================\n/usr/local/cuda-9.0/targets/x86_64-linux/lib/libcudart.so.9.0.176\n/usr/local/cuda-9.0/targets/x86_64-linux/lib/libcudart_static.a", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: YES\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Docker built on nvidia/cuda:9.0-devel-ubuntu16.04\r\n- **TensorFlow installed from**: binary\r\n- **TensorFlow version**: v1.8.0-0-g93bc2e2072 1.8.0\r\n- **Cuda version**: 9.0\r\n- **Bazel version**: N/A (binary install)\r\n- **Python version**: Python 3.5.2\r\n- **GPU model and memory**:  4x1080 w/8G / See output from tf_env_collect.sh below\r\n- **Exact command to reproduce**: `python3 simple_tfkeras_example.py ./simple_model/`\r\n\r\n### Describe the problem\r\n\r\nTrying to adapt Keras code to be distributed using `tf.contrib.distribute.MirroredStrategy`, however, using `metrics` in the Keras model causes an Exception to be raised:\r\n\r\n```\r\n    \"Use DistributionStrategy.update() to modify a MirroredVariable.\")\r\nRuntimeError: Use DistributionStrategy.update() to modify a MirroredVariable.\r\nException ignored in: <generator object get_controller at 0x7f7be0048f68>\r\n```\r\n\r\nIf the `strategy` is set to `None` or `OneDeviceStrategy`, the metrics perform as expected.  When `strategy` is `MirroredStrategy`, the exception is raised.  If the metrics are removed from the `model.compile` call, the code works as expected.\r\n\r\nThis appears to be a bug, or an unimplemented feature, with the understanding that `MirroredStrategy` is new in TF 1.8.\r\n\r\n### Source code / logs\r\n`simple_tfkeras_example.py` (slightly modified from the [examples](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/distribute/python/examples/simple_tfkeras_example.py))\r\n\r\n```\r\n# Copyright 2018 The TensorFlow Authors. All Rights Reserved.\r\n#\r\n# Licensed under the Apache License, Version 2.0 (the \"License\");\r\n# you may not use this file except in compliance with the License.\r\n# You may obtain a copy of the License at\r\n#\r\n#     http://www.apache.org/licenses/LICENSE-2.0\r\n#\r\n# Unless required by applicable law or agreed to in writing, software\r\n# distributed under the License is distributed on an \"AS IS\" BASIS,\r\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n# See the License for the specific language governing permissions and\r\n# limitations under the License.\r\n# ==============================================================================\r\n\"\"\"An example tf.keras model that is trained using MirroredStrategy.\"\"\"\r\nfrom __future__ import absolute_import\r\nfrom __future__ import division\r\nfrom __future__ import print_function\r\nfrom sys import argv\r\nimport numpy as np\r\nimport tensorflow as tf\r\n\r\nsz = 16\r\nnchannels = 5\r\nsh = (sz,sz,sz,nchannels)\r\ndef input_fn():\r\n  x = np.random.random((2,sz,sz,sz,nchannels))\r\n  y = np.random.randint(2, size=(2,sz,sz,sz,nchannels))\r\n  x = tf.cast(x, tf.float32)\r\n  dataset = tf.data.Dataset.from_tensor_slices((x, y))\r\n  dataset = dataset.repeat(10)\r\n  dataset = dataset.batch(32)\r\n  return dataset\r\n\r\n\r\ndef main(args):\r\n  if len(args) < 2:\r\n    print('You must specify  model_dir for checkpoints such as'\r\n          ' /tmp/tfkeras_example./')\r\n    return\r\n\r\n  print('Using %s to store checkpoints.' % args[1])\r\n\r\n  # These strategies work\r\n  # strategy = None\r\n  # strategy = tf.contrib.distribute.OneDeviceStrategy('/device:GPU:0')\r\n  \r\n  # These strategies fail with:\r\n  # \"Use DistributionStrategy.update() to modify a MirroredVariable.\")\r\n  # RuntimeError: Use DistributionStrategy.update() to modify a MirroredVariable.\r\n  # Exception ignored in: <generator object get_controller at 0x7f7be0048f68>\r\n  strategy = tf.contrib.distribute.MirroredStrategy(\r\n      ['/device:GPU:0', '/device:GPU:1'])\r\n  strategy = tf.contrib.distribute.MirroredStrategy(num_gpus=4)\r\n  \r\n  config = tf.estimator.RunConfig(train_distribute=strategy)\r\n  optimizer = tf.train.GradientDescentOptimizer(0.2)\r\n\r\n  optimizer = tf.train.AdadeltaOptimizer()\r\n  \r\n  model = tf.keras.Sequential()\r\n  l = tf.keras.layers\r\n  model.add(l.Conv3D(5,3, padding='same', activation='relu', input_shape=sh))\r\n  # model.add(tf.keras.layers.Dense(16, activation='relu', input_shape=(10,)))\r\n  # model.add(tf.keras.layers.Dense(1, activation='sigmoid'))\r\n\r\n  # works correctly with OneDeviceStrategy and MirroredStrategy\r\n  metrics = None\r\n  # works correctly with OneDeviceStrategy, but not with MirroredStrategy\r\n  metrics = ['binary_accuracy']\r\n    \r\n  model.compile(loss='binary_crossentropy', optimizer=optimizer, metrics=metrics)\r\n  model.summary()\r\n  tf.keras.backend.set_learning_phase(True)\r\n  keras_estimator = tf.keras.estimator.model_to_estimator(\r\n      keras_model=model, config=config, model_dir=args[1])\r\n\r\n  keras_estimator.train(input_fn=input_fn, steps=1000)\r\n  eval_result = keras_estimator.evaluate(input_fn=input_fn)\r\n  print('Eval result: {}'.format(eval_result))\r\n\r\nif __name__ == '__main__':\r\n  tf.app.run(argv=argv)\r\n```\r\n\r\n### Output of `tf_env_collect.sh`\r\n\r\n```\r\n== cat /etc/issue ===============================================\r\nLinux c036785af2e5 3.10.0-693.17.1.el7.x86_64 #1 SMP Thu Jan 25 04:11:40 CST 2018 x86_64 x86_64 x86_64 GNU/Linux\r\nVERSION=\"16.04.4 LTS (Xenial Xerus)\"\r\nVERSION_ID=\"16.04\"\r\nVERSION_CODENAME=xenial\r\n\r\n== are we in docker =============================================\r\nYes\r\n\r\n== compiler =====================================================\r\nc++ (Ubuntu 5.4.0-6ubuntu1~16.04.9) 5.4.0 20160609\r\nCopyright (C) 2015 Free Software Foundation, Inc.\r\nThis is free software; see the source for copying conditions.  There is NO\r\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n\r\n\r\n== uname -a =====================================================\r\nLinux c036785af2e5 3.10.0-693.17.1.el7.x86_64 #1 SMP Thu Jan 25 04:11:40 CST 2018 x86_64 x86_64 x86_64 GNU/Linux\r\n\r\n== check pips ===================================================\r\nnumpy           1.14.3\r\nprotobuf        3.5.2.post1\r\ntensorflow-gpu  1.8.0\r\n\r\n== check for virtualenv =========================================\r\nFalse\r\n\r\n== tensorflow import ============================================\r\ntf.VERSION = 1.8.0\r\ntf.GIT_VERSION = v1.8.0-0-g93bc2e2072\r\ntf.COMPILER_VERSION = v1.8.0-0-g93bc2e2072\r\nSanity check: array([1], dtype=int32)\r\n/usr/local/lib/python3.5/dist-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.\r\n  from ._conv import register_converters as _register_converters\r\n\r\n== env ==========================================================\r\nLD_LIBRARY_PATH /usr/local/nvidia/lib:/usr/local/nvidia/lib64\r\nDYLD_LIBRARY_PATH is unset\r\n\r\n== nvidia-smi ===================================================\r\nTue May  8 15:47:06 2018\r\n+-----------------------------------------------------------------------------+\r\n| NVIDIA-SMI 384.90                 Driver Version: 384.90                    |\r\n|-------------------------------+----------------------+----------------------+\r\n| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\r\n| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\r\n|===============================+======================+======================|\r\n|   0  GeForce GTX 1080    Off  | 00000000:84:00.0 Off |                  N/A |\r\n| 27%   35C    P0    39W / 180W |      0MiB /  8114MiB |      0%      Default |\r\n+-------------------------------+----------------------+----------------------+\r\n|   1  GeForce GTX 1080    Off  | 00000000:85:00.0 Off |                  N/A |\r\n| 27%   37C    P0    38W / 180W |      0MiB /  8114MiB |      0%      Default |\r\n+-------------------------------+----------------------+----------------------+\r\n|   2  GeForce GTX 1080    Off  | 00000000:88:00.0 Off |                  N/A |\r\n| 27%   27C    P0    39W / 180W |      0MiB /  8114MiB |      0%      Default |\r\n+-------------------------------+----------------------+----------------------+\r\n|   3  GeForce GTX 1080    Off  | 00000000:89:00.0 Off |                  N/A |\r\n| 27%   32C    P0    38W / 180W |      0MiB /  8114MiB |      0%      Default |\r\n+-------------------------------+----------------------+----------------------+\r\n\r\n+-----------------------------------------------------------------------------+\r\n| Processes:                                                       GPU Memory |\r\n|  GPU       PID   Type   Process name                             Usage      |\r\n|=============================================================================|\r\n|  No running processes found                                                 |\r\n+-----------------------------------------------------------------------------+\r\n\r\n== cuda libs  ===================================================\r\n/usr/local/cuda-9.0/targets/x86_64-linux/lib/libcudart.so.9.0.176\r\n/usr/local/cuda-9.0/targets/x86_64-linux/lib/libcudart_static.a\r\n```\r\n\r\n\r\n"}