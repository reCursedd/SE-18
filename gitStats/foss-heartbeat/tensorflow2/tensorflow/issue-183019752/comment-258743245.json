{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/258743245", "html_url": "https://github.com/tensorflow/tensorflow/issues/4965#issuecomment-258743245", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4965", "id": 258743245, "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODc0MzI0NQ==", "user": {"login": "dustinvtran", "id": 2569867, "node_id": "MDQ6VXNlcjI1Njk4Njc=", "avatar_url": "https://avatars1.githubusercontent.com/u/2569867?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dustinvtran", "html_url": "https://github.com/dustinvtran", "followers_url": "https://api.github.com/users/dustinvtran/followers", "following_url": "https://api.github.com/users/dustinvtran/following{/other_user}", "gists_url": "https://api.github.com/users/dustinvtran/gists{/gist_id}", "starred_url": "https://api.github.com/users/dustinvtran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dustinvtran/subscriptions", "organizations_url": "https://api.github.com/users/dustinvtran/orgs", "repos_url": "https://api.github.com/users/dustinvtran/repos", "events_url": "https://api.github.com/users/dustinvtran/events{/privacy}", "received_events_url": "https://api.github.com/users/dustinvtran/received_events", "type": "User", "site_admin": false}, "created_at": "2016-11-07T04:07:18Z", "updated_at": "2016-11-07T04:07:18Z", "author_association": "MEMBER", "body_html": "<p>HMC is in edward. there are experiments comparing it to stan and pymc3 in our <a href=\"http://openreview.net/forum?id=Hy6b4Pqee\" rel=\"nofollow\">iclr submission</a>. spoiler: it's <em>really</em> fast. source:</p>\n<p><a href=\"https://github.com/blei-lab/edward/blob/master/edward/inferences/hmc.py\">https://github.com/blei-lab/edward/blob/master/edward/inferences/hmc.py</a></p>\n<blockquote>\n<p>Yes this is something I've been an advocate of for some time.  Having said<br>\nthat, I wonder if StochasticTensor (ST) isn't all that we need to support<br>\nHMC?  Can you imagine needing something from ST that isn't there or worse,<br>\nthat would be hard to add?</p>\n</blockquote>\n<p>yes that's the only abstraction needed. the hmc implementation in edward only requires a RandomVariable abstraction, which is a simplified version of ST. the question arises in that, should ST be part of tensorflow natively, and to what extent should inference algorithms in tensorflow support the sort of compositionality that's explained in the paper above.</p>\n<p>if there's an interest i can help move things from edward's implementation to native tensorflow.</p>", "body_text": "HMC is in edward. there are experiments comparing it to stan and pymc3 in our iclr submission. spoiler: it's really fast. source:\nhttps://github.com/blei-lab/edward/blob/master/edward/inferences/hmc.py\n\nYes this is something I've been an advocate of for some time.  Having said\nthat, I wonder if StochasticTensor (ST) isn't all that we need to support\nHMC?  Can you imagine needing something from ST that isn't there or worse,\nthat would be hard to add?\n\nyes that's the only abstraction needed. the hmc implementation in edward only requires a RandomVariable abstraction, which is a simplified version of ST. the question arises in that, should ST be part of tensorflow natively, and to what extent should inference algorithms in tensorflow support the sort of compositionality that's explained in the paper above.\nif there's an interest i can help move things from edward's implementation to native tensorflow.", "body": "HMC is in edward. there are experiments comparing it to stan and pymc3 in our [iclr submission](http://openreview.net/forum?id=Hy6b4Pqee). spoiler: it's _really_ fast. source:\n\nhttps://github.com/blei-lab/edward/blob/master/edward/inferences/hmc.py\n\n> Yes this is something I've been an advocate of for some time.  Having said\n> that, I wonder if StochasticTensor (ST) isn't all that we need to support\n> HMC?  Can you imagine needing something from ST that isn't there or worse,\n> that would be hard to add?\n\nyes that's the only abstraction needed. the hmc implementation in edward only requires a RandomVariable abstraction, which is a simplified version of ST. the question arises in that, should ST be part of tensorflow natively, and to what extent should inference algorithms in tensorflow support the sort of compositionality that's explained in the paper above.\n\nif there's an interest i can help move things from edward's implementation to native tensorflow.\n"}