{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16548", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16548/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16548/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16548/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16548", "id": 292484300, "node_id": "MDU6SXNzdWUyOTI0ODQzMDA=", "number": 16548, "title": "AttributeError: module 'tensorflow.python.layers.layers' has no attribute 'conv_2d'", "user": {"login": "ziofil", "id": 8944955, "node_id": "MDQ6VXNlcjg5NDQ5NTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/8944955?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ziofil", "html_url": "https://github.com/ziofil", "followers_url": "https://api.github.com/users/ziofil/followers", "following_url": "https://api.github.com/users/ziofil/following{/other_user}", "gists_url": "https://api.github.com/users/ziofil/gists{/gist_id}", "starred_url": "https://api.github.com/users/ziofil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ziofil/subscriptions", "organizations_url": "https://api.github.com/users/ziofil/orgs", "repos_url": "https://api.github.com/users/ziofil/repos", "events_url": "https://api.github.com/users/ziofil/events{/privacy}", "received_events_url": "https://api.github.com/users/ziofil/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-01-29T17:01:12Z", "updated_at": "2018-01-31T19:21:38Z", "closed_at": "2018-01-31T19:21:38Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: see below</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: OSX 10.13.2</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.5.0</li>\n<li><strong>Python version</strong>: 3.6.3</li>\n<li><strong>GPU model and memory</strong>: no GPU</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">class</span> <span class=\"pl-en\">my_RNNCell</span>(<span class=\"pl-e\">tf</span>.<span class=\"pl-e\">nn</span>.<span class=\"pl-e\">rnn_cell</span>.<span class=\"pl-e\">RNNCell</span>):\n    <span class=\"pl-k\">def</span> <span class=\"pl-c1\">__init__</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>):\n        <span class=\"pl-c1\">super</span>(my_RNNCell, <span class=\"pl-c1\">self</span>).<span class=\"pl-c1\">__init__</span>()\n        <span class=\"pl-c1\">self</span>._output_size <span class=\"pl-k\">=</span> <span class=\"pl-c1\">2</span>\n        <span class=\"pl-c1\">self</span>._state_size <span class=\"pl-k\">=</span> <span class=\"pl-c1\">2</span>\n\n    <span class=\"pl-k\">def</span> <span class=\"pl-c1\">__call__</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>, <span class=\"pl-smi\">tensor_in</span>, <span class=\"pl-smi\">state</span>):\n\n        output <span class=\"pl-k\">=</span> tf.layers.conv_2d(tensor_in, <span class=\"pl-c1\">1</span>, [<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">10</span>])\n\n        <span class=\"pl-k\">return</span> output, output\n    \n    <span class=\"pl-en\">@</span><span class=\"pl-c1\">property</span>\n    <span class=\"pl-k\">def</span> <span class=\"pl-en\">output_size</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>):\n        <span class=\"pl-k\">return</span> <span class=\"pl-c1\">self</span>._output_size\n    <span class=\"pl-en\">@</span><span class=\"pl-c1\">property</span>\n    <span class=\"pl-k\">def</span> <span class=\"pl-en\">state_size</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>):\n        <span class=\"pl-k\">return</span> <span class=\"pl-c1\">self</span>._state_size\n\n\ntf.nn.dynamic_rnn(my_RNNCell(), <span class=\"pl-v\">inputs</span><span class=\"pl-k\">=</span>tf.placeholder(<span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">None</span>,<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">100</span>,<span class=\"pl-c1\">3</span>], <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.float32), <span class=\"pl-v\">initial_state</span><span class=\"pl-k\">=</span> tf.placeholder(<span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">None</span>,<span class=\"pl-c1\">2</span>], <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.float32))\n\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span>\n<span class=\"pl-c1\">AttributeError</span>: module <span class=\"pl-s\"><span class=\"pl-pds\">'</span>tensorflow.python.layers.layers<span class=\"pl-pds\">'</span></span> has no attribute <span class=\"pl-s\"><span class=\"pl-pds\">'</span>conv_2d<span class=\"pl-pds\">'</span></span></pre></div>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): see below\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): OSX 10.13.2\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): 1.5.0\nPython version: 3.6.3\nGPU model and memory: no GPU\nExact command to reproduce:\n\nclass my_RNNCell(tf.nn.rnn_cell.RNNCell):\n    def __init__(self):\n        super(my_RNNCell, self).__init__()\n        self._output_size = 2\n        self._state_size = 2\n\n    def __call__(self, tensor_in, state):\n\n        output = tf.layers.conv_2d(tensor_in, 1, [1, 10])\n\n        return output, output\n    \n    @property\n    def output_size(self):\n        return self._output_size\n    @property\n    def state_size(self):\n        return self._state_size\n\n\ntf.nn.dynamic_rnn(my_RNNCell(), inputs=tf.placeholder(shape=[None,2,100,3], dtype=tf.float32), initial_state= tf.placeholder(shape=[None,2], dtype=tf.float32))\n\n>>>\nAttributeError: module 'tensorflow.python.layers.layers' has no attribute 'conv_2d'", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: see below\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: OSX 10.13.2\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.5.0\r\n- **Python version**: 3.6.3\r\n- **GPU model and memory**: no GPU\r\n- **Exact command to reproduce**:\r\n\r\n```python\r\nclass my_RNNCell(tf.nn.rnn_cell.RNNCell):\r\n    def __init__(self):\r\n        super(my_RNNCell, self).__init__()\r\n        self._output_size = 2\r\n        self._state_size = 2\r\n\r\n    def __call__(self, tensor_in, state):\r\n\r\n        output = tf.layers.conv_2d(tensor_in, 1, [1, 10])\r\n\r\n        return output, output\r\n    \r\n    @property\r\n    def output_size(self):\r\n        return self._output_size\r\n    @property\r\n    def state_size(self):\r\n        return self._state_size\r\n\r\n\r\ntf.nn.dynamic_rnn(my_RNNCell(), inputs=tf.placeholder(shape=[None,2,100,3], dtype=tf.float32), initial_state= tf.placeholder(shape=[None,2], dtype=tf.float32))\r\n\r\n>>>\r\nAttributeError: module 'tensorflow.python.layers.layers' has no attribute 'conv_2d'\r\n```\r\n"}