{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11677", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11677/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11677/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11677/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/11677", "id": 244799714, "node_id": "MDU6SXNzdWUyNDQ3OTk3MTQ=", "number": 11677, "title": "Does orthogonal initialization have GPU implementation (fails when explicitly assigned on a gpu)?", "user": {"login": "Kipok", "id": 2354422, "node_id": "MDQ6VXNlcjIzNTQ0MjI=", "avatar_url": "https://avatars0.githubusercontent.com/u/2354422?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kipok", "html_url": "https://github.com/Kipok", "followers_url": "https://api.github.com/users/Kipok/followers", "following_url": "https://api.github.com/users/Kipok/following{/other_user}", "gists_url": "https://api.github.com/users/Kipok/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kipok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kipok/subscriptions", "organizations_url": "https://api.github.com/users/Kipok/orgs", "repos_url": "https://api.github.com/users/Kipok/repos", "events_url": "https://api.github.com/users/Kipok/events{/privacy}", "received_events_url": "https://api.github.com/users/Kipok/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-21T22:41:05Z", "updated_at": "2017-07-24T22:19:32Z", "closed_at": "2017-07-24T22:19:32Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:  Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Ubuntu 14.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: source</li>\n<li><strong>TensorFlow version (use command below)</strong>:  1.2.1</li>\n<li><strong>Python version</strong>:  3.4.3</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.5.2</li>\n<li><strong>CUDA/cuDNN version</strong>:  8.0/6.0</li>\n<li><strong>GPU model and memory</strong>: Tesla P100 (16 gb)</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I get an error when trying to use orthogonal initialization which is explicitly assigned to be run on GPU. Looking at the log it looks like some parts of it (e.g. QR decomposition) are available on CPU only. Is this the case or is there some bug that is blocking it from being run on GPU only?</p>\n<h3>Source code / logs</h3>\n<p>The following code could be used to reproduce the issue:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">with</span> tf.device(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>/gpu:0<span class=\"pl-pds\">'</span></span>):\n    a <span class=\"pl-k\">=</span> tf.get_variable(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>a<span class=\"pl-pds\">'</span></span>, (<span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">20</span>), tf.float32, tf.orthogonal_initializer())\nsess <span class=\"pl-k\">=</span> tf.Session()\nsess.run(tf.global_variables_initializer())</pre></div>\n<p>The error log:</p>\n<pre><code>---------------------------------------------------------------------------\nInvalidArgumentError                      Traceback (most recent call last)\n~/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/client/session.py in _do_call(self, fn, *args)\n   1284     try:\n-&gt; 1285       return fn(*args)\n   1286     except errors.OpError as e:\n\n~/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/client/session.py in _run_fn(session, feed_dict, fetch_list, target_list, options, run_metadata)\n   1254       # Ensure any changes to the graph are reflected in the runtime.\n-&gt; 1255       self._extend_graph()\n   1256       with errors.raise_exception_on_not_ok_status() as status:\n\n~/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/client/session.py in _extend_graph(self)\n   1315           tf_session.TF_ExtendGraph(\n-&gt; 1316               self._session, graph_def.SerializeToString(), status)\n   1317         self._opened = True\n\n/usr/lib/python3.4/contextlib.py in __exit__(self, type, value, traceback)\n     65             try:\n---&gt; 66                 next(self.gen)\n     67             except StopIteration:\n\n~/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/framework/errors_impl.py in raise_exception_on_not_ok_status()\n    465           compat.as_text(pywrap_tensorflow.TF_Message(status)),\n--&gt; 466           pywrap_tensorflow.TF_GetCode(status))\n    467   finally:\n\nInvalidArgumentError: Cannot assign a device for operation 'a': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.\nColocation Debug Info:\nColocation group had the following types and devices: \nAssign: GPU CPU \nReshape: GPU CPU \nRealDiv: GPU CPU \nAbs: GPU CPU \nDiagPart: CPU \nStridedSlice: GPU CPU \nQr: CPU \nAdd: GPU CPU \nMul: GPU CPU \nIdentity: CPU \nVariableV2: GPU CPU \nRandomStandardNormal: GPU CPU \nMinimum: GPU CPU \nConst: GPU CPU \nPack: GPU CPU \n\t [[Node: a = VariableV2[_class=[\"loc:@a\"], container=\"\", dtype=DT_FLOAT, shape=[10,3,3,20], shared_name=\"\", _device=\"/device:GPU:0\"]()]]\n\nDuring handling of the above exception, another exception occurred:\n\nInvalidArgumentError                      Traceback (most recent call last)\n&lt;ipython-input-1-f5bccc7031ec&gt; in &lt;module&gt;()\n      5 \n      6 sess = tf.Session()\n----&gt; 7 sess.run(tf.global_variables_initializer())\n\n~/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/client/session.py in run(self, fetches, feed_dict, options, run_metadata)\n    894     try:\n    895       result = self._run(None, fetches, feed_dict, options_ptr,\n--&gt; 896                          run_metadata_ptr)\n    897       if run_metadata:\n    898         proto_data = tf_session.TF_GetBuffer(run_metadata_ptr)\n\n~/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/client/session.py in _run(self, handle, fetches, feed_dict, options, run_metadata)\n   1122     if final_fetches or final_targets or (handle and feed_dict_tensor):\n   1123       results = self._do_run(handle, final_targets, final_fetches,\n-&gt; 1124                              feed_dict_tensor, options, run_metadata)\n   1125     else:\n   1126       results = []\n\n~/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/client/session.py in _do_run(self, handle, target_list, fetch_list, feed_dict, options, run_metadata)\n   1277     if handle is None:\n   1278       return self._do_call(_run_fn, self._session, feeds, fetches, targets,\n-&gt; 1279                            options, run_metadata)\n   1280     else:\n   1281       return self._do_call(_prun_fn, self._session, handle, feeds, fetches)\n\n~/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/client/session.py in _do_call(self, fn, *args)\n   1296         except KeyError:\n   1297           pass\n-&gt; 1298       raise type(e)(node_def, op, message)\n   1299 \n   1300   def _extend_graph(self):\n\nInvalidArgumentError: Cannot assign a device for operation 'a': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.\nColocation Debug Info:\nColocation group had the following types and devices: \nAssign: GPU CPU \nReshape: GPU CPU \nRealDiv: GPU CPU \nAbs: GPU CPU \nDiagPart: CPU \nStridedSlice: GPU CPU \nQr: CPU \nAdd: GPU CPU \nMul: GPU CPU \nIdentity: CPU \nVariableV2: GPU CPU \nRandomStandardNormal: GPU CPU \nMinimum: GPU CPU \nConst: GPU CPU \nPack: GPU CPU \n\t [[Node: a = VariableV2[_class=[\"loc:@a\"], container=\"\", dtype=DT_FLOAT, shape=[10,3,3,20], shared_name=\"\", _device=\"/device:GPU:0\"]()]]\n\nCaused by op 'a', defined at:\n  File \"/usr/lib/python3.4/runpy.py\", line 170, in _run_module_as_main\n    \"__main__\", mod_spec)\n  File \"/usr/lib/python3.4/runpy.py\", line 85, in _run_code\n    exec(code, run_globals)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/ipykernel_launcher.py\", line 16, in &lt;module&gt;\n    app.launch_new_instance()\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/traitlets/config/application.py\", line 658, in launch_instance\n    app.start()\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/ipykernel/kernelapp.py\", line 477, in start\n    ioloop.IOLoop.instance().start()\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/zmq/eventloop/ioloop.py\", line 177, in start\n    super(ZMQIOLoop, self).start()\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tornado/ioloop.py\", line 888, in start\n    handler_func(fd_obj, events)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tornado/stack_context.py\", line 277, in null_wrapper\n    return fn(*args, **kwargs)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/zmq/eventloop/zmqstream.py\", line 440, in _handle_events\n    self._handle_recv()\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/zmq/eventloop/zmqstream.py\", line 472, in _handle_recv\n    self._run_callback(callback, msg)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/zmq/eventloop/zmqstream.py\", line 414, in _run_callback\n    callback(*args, **kwargs)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tornado/stack_context.py\", line 277, in null_wrapper\n    return fn(*args, **kwargs)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/ipykernel/kernelbase.py\", line 283, in dispatcher\n    return self.dispatch_shell(stream, msg)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/ipykernel/kernelbase.py\", line 235, in dispatch_shell\n    handler(stream, idents, msg)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/ipykernel/kernelbase.py\", line 399, in execute_request\n    user_expressions, allow_stdin)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/ipykernel/ipkernel.py\", line 196, in do_execute\n    res = shell.run_cell(code, store_history=store_history, silent=silent)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/ipykernel/zmqshell.py\", line 533, in run_cell\n    return super(ZMQInteractiveShell, self).run_cell(*args, **kwargs)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/IPython/core/interactiveshell.py\", line 2698, in run_cell\n    interactivity=interactivity, compiler=compiler, result=result)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/IPython/core/interactiveshell.py\", line 2802, in run_ast_nodes\n    if self.run_code(code, result):\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/IPython/core/interactiveshell.py\", line 2862, in run_code\n    exec(code_obj, self.user_global_ns, self.user_ns)\n  File \"&lt;ipython-input-1-f5bccc7031ec&gt;\", line 4, in &lt;module&gt;\n    a = tf.get_variable('a', (10, 3, 3, 20), tf.float32, tf.orthogonal_initializer())\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/ops/variable_scope.py\", line 1065, in get_variable\n    use_resource=use_resource, custom_getter=custom_getter)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/ops/variable_scope.py\", line 962, in get_variable\n    use_resource=use_resource, custom_getter=custom_getter)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/ops/variable_scope.py\", line 367, in get_variable\n    validate_shape=validate_shape, use_resource=use_resource)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/ops/variable_scope.py\", line 352, in _true_getter\n    use_resource=use_resource)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/ops/variable_scope.py\", line 725, in _get_single_variable\n    validate_shape=validate_shape)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/ops/variables.py\", line 199, in __init__\n    expected_shape=expected_shape)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/ops/variables.py\", line 283, in _init_from_args\n    name=name)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/ops/state_ops.py\", line 131, in variable_op_v2\n    shared_name=shared_name)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/ops/gen_state_ops.py\", line 684, in _variable_v2\n    name=name)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/framework/op_def_library.py\", line 767, in apply_op\n    op_def=op_def)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/framework/ops.py\", line 2576, in create_op\n    original_op=self._default_original_op, op_def=op_def)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/framework/ops.py\", line 1204, in __init__\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\n\nInvalidArgumentError (see above for traceback): Cannot assign a device for operation 'a': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.\nColocation Debug Info:\nColocation group had the following types and devices: \nAssign: GPU CPU \nReshape: GPU CPU \nRealDiv: GPU CPU \nAbs: GPU CPU \nDiagPart: CPU \nStridedSlice: GPU CPU \nQr: CPU \nAdd: GPU CPU \nMul: GPU CPU \nIdentity: CPU \nVariableV2: GPU CPU \nRandomStandardNormal: GPU CPU \nMinimum: GPU CPU \nConst: GPU CPU \nPack: GPU CPU \n\t [[Node: a = VariableV2[_class=[\"loc:@a\"], container=\"\", dtype=DT_FLOAT, shape=[10,3,3,20], shared_name=\"\", _device=\"/device:GPU:0\"]()]]\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):  Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 14.04\nTensorFlow installed from (source or binary): source\nTensorFlow version (use command below):  1.2.1\nPython version:  3.4.3\nBazel version (if compiling from source): 0.5.2\nCUDA/cuDNN version:  8.0/6.0\nGPU model and memory: Tesla P100 (16 gb)\n\nDescribe the problem\nI get an error when trying to use orthogonal initialization which is explicitly assigned to be run on GPU. Looking at the log it looks like some parts of it (e.g. QR decomposition) are available on CPU only. Is this the case or is there some bug that is blocking it from being run on GPU only?\nSource code / logs\nThe following code could be used to reproduce the issue:\nimport tensorflow as tf\nwith tf.device('/gpu:0'):\n    a = tf.get_variable('a', (10, 3, 3, 20), tf.float32, tf.orthogonal_initializer())\nsess = tf.Session()\nsess.run(tf.global_variables_initializer())\nThe error log:\n---------------------------------------------------------------------------\nInvalidArgumentError                      Traceback (most recent call last)\n~/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/client/session.py in _do_call(self, fn, *args)\n   1284     try:\n-> 1285       return fn(*args)\n   1286     except errors.OpError as e:\n\n~/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/client/session.py in _run_fn(session, feed_dict, fetch_list, target_list, options, run_metadata)\n   1254       # Ensure any changes to the graph are reflected in the runtime.\n-> 1255       self._extend_graph()\n   1256       with errors.raise_exception_on_not_ok_status() as status:\n\n~/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/client/session.py in _extend_graph(self)\n   1315           tf_session.TF_ExtendGraph(\n-> 1316               self._session, graph_def.SerializeToString(), status)\n   1317         self._opened = True\n\n/usr/lib/python3.4/contextlib.py in __exit__(self, type, value, traceback)\n     65             try:\n---> 66                 next(self.gen)\n     67             except StopIteration:\n\n~/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/framework/errors_impl.py in raise_exception_on_not_ok_status()\n    465           compat.as_text(pywrap_tensorflow.TF_Message(status)),\n--> 466           pywrap_tensorflow.TF_GetCode(status))\n    467   finally:\n\nInvalidArgumentError: Cannot assign a device for operation 'a': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.\nColocation Debug Info:\nColocation group had the following types and devices: \nAssign: GPU CPU \nReshape: GPU CPU \nRealDiv: GPU CPU \nAbs: GPU CPU \nDiagPart: CPU \nStridedSlice: GPU CPU \nQr: CPU \nAdd: GPU CPU \nMul: GPU CPU \nIdentity: CPU \nVariableV2: GPU CPU \nRandomStandardNormal: GPU CPU \nMinimum: GPU CPU \nConst: GPU CPU \nPack: GPU CPU \n\t [[Node: a = VariableV2[_class=[\"loc:@a\"], container=\"\", dtype=DT_FLOAT, shape=[10,3,3,20], shared_name=\"\", _device=\"/device:GPU:0\"]()]]\n\nDuring handling of the above exception, another exception occurred:\n\nInvalidArgumentError                      Traceback (most recent call last)\n<ipython-input-1-f5bccc7031ec> in <module>()\n      5 \n      6 sess = tf.Session()\n----> 7 sess.run(tf.global_variables_initializer())\n\n~/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/client/session.py in run(self, fetches, feed_dict, options, run_metadata)\n    894     try:\n    895       result = self._run(None, fetches, feed_dict, options_ptr,\n--> 896                          run_metadata_ptr)\n    897       if run_metadata:\n    898         proto_data = tf_session.TF_GetBuffer(run_metadata_ptr)\n\n~/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/client/session.py in _run(self, handle, fetches, feed_dict, options, run_metadata)\n   1122     if final_fetches or final_targets or (handle and feed_dict_tensor):\n   1123       results = self._do_run(handle, final_targets, final_fetches,\n-> 1124                              feed_dict_tensor, options, run_metadata)\n   1125     else:\n   1126       results = []\n\n~/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/client/session.py in _do_run(self, handle, target_list, fetch_list, feed_dict, options, run_metadata)\n   1277     if handle is None:\n   1278       return self._do_call(_run_fn, self._session, feeds, fetches, targets,\n-> 1279                            options, run_metadata)\n   1280     else:\n   1281       return self._do_call(_prun_fn, self._session, handle, feeds, fetches)\n\n~/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/client/session.py in _do_call(self, fn, *args)\n   1296         except KeyError:\n   1297           pass\n-> 1298       raise type(e)(node_def, op, message)\n   1299 \n   1300   def _extend_graph(self):\n\nInvalidArgumentError: Cannot assign a device for operation 'a': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.\nColocation Debug Info:\nColocation group had the following types and devices: \nAssign: GPU CPU \nReshape: GPU CPU \nRealDiv: GPU CPU \nAbs: GPU CPU \nDiagPart: CPU \nStridedSlice: GPU CPU \nQr: CPU \nAdd: GPU CPU \nMul: GPU CPU \nIdentity: CPU \nVariableV2: GPU CPU \nRandomStandardNormal: GPU CPU \nMinimum: GPU CPU \nConst: GPU CPU \nPack: GPU CPU \n\t [[Node: a = VariableV2[_class=[\"loc:@a\"], container=\"\", dtype=DT_FLOAT, shape=[10,3,3,20], shared_name=\"\", _device=\"/device:GPU:0\"]()]]\n\nCaused by op 'a', defined at:\n  File \"/usr/lib/python3.4/runpy.py\", line 170, in _run_module_as_main\n    \"__main__\", mod_spec)\n  File \"/usr/lib/python3.4/runpy.py\", line 85, in _run_code\n    exec(code, run_globals)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/ipykernel_launcher.py\", line 16, in <module>\n    app.launch_new_instance()\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/traitlets/config/application.py\", line 658, in launch_instance\n    app.start()\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/ipykernel/kernelapp.py\", line 477, in start\n    ioloop.IOLoop.instance().start()\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/zmq/eventloop/ioloop.py\", line 177, in start\n    super(ZMQIOLoop, self).start()\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tornado/ioloop.py\", line 888, in start\n    handler_func(fd_obj, events)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tornado/stack_context.py\", line 277, in null_wrapper\n    return fn(*args, **kwargs)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/zmq/eventloop/zmqstream.py\", line 440, in _handle_events\n    self._handle_recv()\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/zmq/eventloop/zmqstream.py\", line 472, in _handle_recv\n    self._run_callback(callback, msg)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/zmq/eventloop/zmqstream.py\", line 414, in _run_callback\n    callback(*args, **kwargs)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tornado/stack_context.py\", line 277, in null_wrapper\n    return fn(*args, **kwargs)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/ipykernel/kernelbase.py\", line 283, in dispatcher\n    return self.dispatch_shell(stream, msg)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/ipykernel/kernelbase.py\", line 235, in dispatch_shell\n    handler(stream, idents, msg)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/ipykernel/kernelbase.py\", line 399, in execute_request\n    user_expressions, allow_stdin)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/ipykernel/ipkernel.py\", line 196, in do_execute\n    res = shell.run_cell(code, store_history=store_history, silent=silent)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/ipykernel/zmqshell.py\", line 533, in run_cell\n    return super(ZMQInteractiveShell, self).run_cell(*args, **kwargs)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/IPython/core/interactiveshell.py\", line 2698, in run_cell\n    interactivity=interactivity, compiler=compiler, result=result)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/IPython/core/interactiveshell.py\", line 2802, in run_ast_nodes\n    if self.run_code(code, result):\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/IPython/core/interactiveshell.py\", line 2862, in run_code\n    exec(code_obj, self.user_global_ns, self.user_ns)\n  File \"<ipython-input-1-f5bccc7031ec>\", line 4, in <module>\n    a = tf.get_variable('a', (10, 3, 3, 20), tf.float32, tf.orthogonal_initializer())\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/ops/variable_scope.py\", line 1065, in get_variable\n    use_resource=use_resource, custom_getter=custom_getter)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/ops/variable_scope.py\", line 962, in get_variable\n    use_resource=use_resource, custom_getter=custom_getter)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/ops/variable_scope.py\", line 367, in get_variable\n    validate_shape=validate_shape, use_resource=use_resource)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/ops/variable_scope.py\", line 352, in _true_getter\n    use_resource=use_resource)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/ops/variable_scope.py\", line 725, in _get_single_variable\n    validate_shape=validate_shape)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/ops/variables.py\", line 199, in __init__\n    expected_shape=expected_shape)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/ops/variables.py\", line 283, in _init_from_args\n    name=name)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/ops/state_ops.py\", line 131, in variable_op_v2\n    shared_name=shared_name)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/ops/gen_state_ops.py\", line 684, in _variable_v2\n    name=name)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/framework/op_def_library.py\", line 767, in apply_op\n    op_def=op_def)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/framework/ops.py\", line 2576, in create_op\n    original_op=self._default_original_op, op_def=op_def)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/framework/ops.py\", line 1204, in __init__\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\n\nInvalidArgumentError (see above for traceback): Cannot assign a device for operation 'a': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.\nColocation Debug Info:\nColocation group had the following types and devices: \nAssign: GPU CPU \nReshape: GPU CPU \nRealDiv: GPU CPU \nAbs: GPU CPU \nDiagPart: CPU \nStridedSlice: GPU CPU \nQr: CPU \nAdd: GPU CPU \nMul: GPU CPU \nIdentity: CPU \nVariableV2: GPU CPU \nRandomStandardNormal: GPU CPU \nMinimum: GPU CPU \nConst: GPU CPU \nPack: GPU CPU \n\t [[Node: a = VariableV2[_class=[\"loc:@a\"], container=\"\", dtype=DT_FLOAT, shape=[10,3,3,20], shared_name=\"\", _device=\"/device:GPU:0\"]()]]", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:  Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 14.04\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**:  1.2.1\r\n- **Python version**:  3.4.3\r\n- **Bazel version (if compiling from source)**: 0.5.2\r\n- **CUDA/cuDNN version**:  8.0/6.0\r\n- **GPU model and memory**: Tesla P100 (16 gb)\r\n\r\n### Describe the problem\r\nI get an error when trying to use orthogonal initialization which is explicitly assigned to be run on GPU. Looking at the log it looks like some parts of it (e.g. QR decomposition) are available on CPU only. Is this the case or is there some bug that is blocking it from being run on GPU only?\r\n\r\n### Source code / logs\r\nThe following code could be used to reproduce the issue:\r\n```python\r\nimport tensorflow as tf\r\nwith tf.device('/gpu:0'):\r\n    a = tf.get_variable('a', (10, 3, 3, 20), tf.float32, tf.orthogonal_initializer())\r\nsess = tf.Session()\r\nsess.run(tf.global_variables_initializer())\r\n```\r\nThe error log:\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nInvalidArgumentError                      Traceback (most recent call last)\r\n~/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/client/session.py in _do_call(self, fn, *args)\r\n   1284     try:\r\n-> 1285       return fn(*args)\r\n   1286     except errors.OpError as e:\r\n\r\n~/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/client/session.py in _run_fn(session, feed_dict, fetch_list, target_list, options, run_metadata)\r\n   1254       # Ensure any changes to the graph are reflected in the runtime.\r\n-> 1255       self._extend_graph()\r\n   1256       with errors.raise_exception_on_not_ok_status() as status:\r\n\r\n~/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/client/session.py in _extend_graph(self)\r\n   1315           tf_session.TF_ExtendGraph(\r\n-> 1316               self._session, graph_def.SerializeToString(), status)\r\n   1317         self._opened = True\r\n\r\n/usr/lib/python3.4/contextlib.py in __exit__(self, type, value, traceback)\r\n     65             try:\r\n---> 66                 next(self.gen)\r\n     67             except StopIteration:\r\n\r\n~/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/framework/errors_impl.py in raise_exception_on_not_ok_status()\r\n    465           compat.as_text(pywrap_tensorflow.TF_Message(status)),\r\n--> 466           pywrap_tensorflow.TF_GetCode(status))\r\n    467   finally:\r\n\r\nInvalidArgumentError: Cannot assign a device for operation 'a': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.\r\nColocation Debug Info:\r\nColocation group had the following types and devices: \r\nAssign: GPU CPU \r\nReshape: GPU CPU \r\nRealDiv: GPU CPU \r\nAbs: GPU CPU \r\nDiagPart: CPU \r\nStridedSlice: GPU CPU \r\nQr: CPU \r\nAdd: GPU CPU \r\nMul: GPU CPU \r\nIdentity: CPU \r\nVariableV2: GPU CPU \r\nRandomStandardNormal: GPU CPU \r\nMinimum: GPU CPU \r\nConst: GPU CPU \r\nPack: GPU CPU \r\n\t [[Node: a = VariableV2[_class=[\"loc:@a\"], container=\"\", dtype=DT_FLOAT, shape=[10,3,3,20], shared_name=\"\", _device=\"/device:GPU:0\"]()]]\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nInvalidArgumentError                      Traceback (most recent call last)\r\n<ipython-input-1-f5bccc7031ec> in <module>()\r\n      5 \r\n      6 sess = tf.Session()\r\n----> 7 sess.run(tf.global_variables_initializer())\r\n\r\n~/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/client/session.py in run(self, fetches, feed_dict, options, run_metadata)\r\n    894     try:\r\n    895       result = self._run(None, fetches, feed_dict, options_ptr,\r\n--> 896                          run_metadata_ptr)\r\n    897       if run_metadata:\r\n    898         proto_data = tf_session.TF_GetBuffer(run_metadata_ptr)\r\n\r\n~/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/client/session.py in _run(self, handle, fetches, feed_dict, options, run_metadata)\r\n   1122     if final_fetches or final_targets or (handle and feed_dict_tensor):\r\n   1123       results = self._do_run(handle, final_targets, final_fetches,\r\n-> 1124                              feed_dict_tensor, options, run_metadata)\r\n   1125     else:\r\n   1126       results = []\r\n\r\n~/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/client/session.py in _do_run(self, handle, target_list, fetch_list, feed_dict, options, run_metadata)\r\n   1277     if handle is None:\r\n   1278       return self._do_call(_run_fn, self._session, feeds, fetches, targets,\r\n-> 1279                            options, run_metadata)\r\n   1280     else:\r\n   1281       return self._do_call(_prun_fn, self._session, handle, feeds, fetches)\r\n\r\n~/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/client/session.py in _do_call(self, fn, *args)\r\n   1296         except KeyError:\r\n   1297           pass\r\n-> 1298       raise type(e)(node_def, op, message)\r\n   1299 \r\n   1300   def _extend_graph(self):\r\n\r\nInvalidArgumentError: Cannot assign a device for operation 'a': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.\r\nColocation Debug Info:\r\nColocation group had the following types and devices: \r\nAssign: GPU CPU \r\nReshape: GPU CPU \r\nRealDiv: GPU CPU \r\nAbs: GPU CPU \r\nDiagPart: CPU \r\nStridedSlice: GPU CPU \r\nQr: CPU \r\nAdd: GPU CPU \r\nMul: GPU CPU \r\nIdentity: CPU \r\nVariableV2: GPU CPU \r\nRandomStandardNormal: GPU CPU \r\nMinimum: GPU CPU \r\nConst: GPU CPU \r\nPack: GPU CPU \r\n\t [[Node: a = VariableV2[_class=[\"loc:@a\"], container=\"\", dtype=DT_FLOAT, shape=[10,3,3,20], shared_name=\"\", _device=\"/device:GPU:0\"]()]]\r\n\r\nCaused by op 'a', defined at:\r\n  File \"/usr/lib/python3.4/runpy.py\", line 170, in _run_module_as_main\r\n    \"__main__\", mod_spec)\r\n  File \"/usr/lib/python3.4/runpy.py\", line 85, in _run_code\r\n    exec(code, run_globals)\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/ipykernel_launcher.py\", line 16, in <module>\r\n    app.launch_new_instance()\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/traitlets/config/application.py\", line 658, in launch_instance\r\n    app.start()\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/ipykernel/kernelapp.py\", line 477, in start\r\n    ioloop.IOLoop.instance().start()\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/zmq/eventloop/ioloop.py\", line 177, in start\r\n    super(ZMQIOLoop, self).start()\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tornado/ioloop.py\", line 888, in start\r\n    handler_func(fd_obj, events)\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tornado/stack_context.py\", line 277, in null_wrapper\r\n    return fn(*args, **kwargs)\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/zmq/eventloop/zmqstream.py\", line 440, in _handle_events\r\n    self._handle_recv()\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/zmq/eventloop/zmqstream.py\", line 472, in _handle_recv\r\n    self._run_callback(callback, msg)\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/zmq/eventloop/zmqstream.py\", line 414, in _run_callback\r\n    callback(*args, **kwargs)\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tornado/stack_context.py\", line 277, in null_wrapper\r\n    return fn(*args, **kwargs)\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/ipykernel/kernelbase.py\", line 283, in dispatcher\r\n    return self.dispatch_shell(stream, msg)\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/ipykernel/kernelbase.py\", line 235, in dispatch_shell\r\n    handler(stream, idents, msg)\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/ipykernel/kernelbase.py\", line 399, in execute_request\r\n    user_expressions, allow_stdin)\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/ipykernel/ipkernel.py\", line 196, in do_execute\r\n    res = shell.run_cell(code, store_history=store_history, silent=silent)\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/ipykernel/zmqshell.py\", line 533, in run_cell\r\n    return super(ZMQInteractiveShell, self).run_cell(*args, **kwargs)\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/IPython/core/interactiveshell.py\", line 2698, in run_cell\r\n    interactivity=interactivity, compiler=compiler, result=result)\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/IPython/core/interactiveshell.py\", line 2802, in run_ast_nodes\r\n    if self.run_code(code, result):\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/IPython/core/interactiveshell.py\", line 2862, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-1-f5bccc7031ec>\", line 4, in <module>\r\n    a = tf.get_variable('a', (10, 3, 3, 20), tf.float32, tf.orthogonal_initializer())\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/ops/variable_scope.py\", line 1065, in get_variable\r\n    use_resource=use_resource, custom_getter=custom_getter)\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/ops/variable_scope.py\", line 962, in get_variable\r\n    use_resource=use_resource, custom_getter=custom_getter)\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/ops/variable_scope.py\", line 367, in get_variable\r\n    validate_shape=validate_shape, use_resource=use_resource)\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/ops/variable_scope.py\", line 352, in _true_getter\r\n    use_resource=use_resource)\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/ops/variable_scope.py\", line 725, in _get_single_variable\r\n    validate_shape=validate_shape)\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/ops/variables.py\", line 199, in __init__\r\n    expected_shape=expected_shape)\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/ops/variables.py\", line 283, in _init_from_args\r\n    name=name)\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/ops/state_ops.py\", line 131, in variable_op_v2\r\n    shared_name=shared_name)\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/ops/gen_state_ops.py\", line 684, in _variable_v2\r\n    name=name)\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/framework/op_def_library.py\", line 767, in apply_op\r\n    op_def=op_def)\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/framework/ops.py\", line 2576, in create_op\r\n    original_op=self._default_original_op, op_def=op_def)\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/framework/ops.py\", line 1204, in __init__\r\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\r\n\r\nInvalidArgumentError (see above for traceback): Cannot assign a device for operation 'a': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.\r\nColocation Debug Info:\r\nColocation group had the following types and devices: \r\nAssign: GPU CPU \r\nReshape: GPU CPU \r\nRealDiv: GPU CPU \r\nAbs: GPU CPU \r\nDiagPart: CPU \r\nStridedSlice: GPU CPU \r\nQr: CPU \r\nAdd: GPU CPU \r\nMul: GPU CPU \r\nIdentity: CPU \r\nVariableV2: GPU CPU \r\nRandomStandardNormal: GPU CPU \r\nMinimum: GPU CPU \r\nConst: GPU CPU \r\nPack: GPU CPU \r\n\t [[Node: a = VariableV2[_class=[\"loc:@a\"], container=\"\", dtype=DT_FLOAT, shape=[10,3,3,20], shared_name=\"\", _device=\"/device:GPU:0\"]()]]\r\n```"}