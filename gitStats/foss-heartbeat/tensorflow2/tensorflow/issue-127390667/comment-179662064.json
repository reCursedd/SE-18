{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/179662064", "html_url": "https://github.com/tensorflow/tensorflow/issues/808#issuecomment-179662064", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/808", "id": 179662064, "node_id": "MDEyOklzc3VlQ29tbWVudDE3OTY2MjA2NA==", "user": {"login": "ruffsl", "id": 2293573, "node_id": "MDQ6VXNlcjIyOTM1NzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/2293573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ruffsl", "html_url": "https://github.com/ruffsl", "followers_url": "https://api.github.com/users/ruffsl/followers", "following_url": "https://api.github.com/users/ruffsl/following{/other_user}", "gists_url": "https://api.github.com/users/ruffsl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ruffsl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ruffsl/subscriptions", "organizations_url": "https://api.github.com/users/ruffsl/orgs", "repos_url": "https://api.github.com/users/ruffsl/repos", "events_url": "https://api.github.com/users/ruffsl/events{/privacy}", "received_events_url": "https://api.github.com/users/ruffsl/received_events", "type": "User", "site_admin": false}, "created_at": "2016-02-04T06:01:26Z", "updated_at": "2016-02-04T07:00:57Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=51059\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/cancan101\">@cancan101</a> , that's odd. Just did a fresh build of both cuda and tensorflow with <a href=\"https://github.com/tensorflow/tensorflow/blob/41671d980d1c0e517e588d217d0d7d63b430d03b/tensorflow/tools/docker/Dockerfile.devel-gpu\"><code>Dockerfile.devel-gpu</code> </a> and then got the same error you got:</p>\n<pre><code>...\nI tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library libcublas.so.7.0 locally\nI tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library libcudnn.so.6.5 locally\nI tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library libcufft.so.7.0 locally\nI tensorflow/stream_executor/dso_loader.cc:93] Couldn't open CUDA library libcuda.so. LD_LIBRARY_PATH: /usr/local/nvidia/lib:/usr/local/nvidia/lib64:\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:121] hostname: 6816d202e2bd\n...\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1061] failed to find libcuda.so on this system: Failed precondition: could not dlopen DSO: libcuda.so; dlerror: libcuda.so: cannot open shared object file: No such file or directory\n</code></pre>\n<p>I checked to make sure the library was installed and ldconfig finds it just fine:</p>\n<div class=\"highlight highlight-source-shell\"><pre>env\n...\nLD_LIBRARY_PATH=/usr/local/nvidia/lib:/usr/local/nvidia/lib64:\nPATH=/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nCUDA_PATH=/usr/local/cuda\n...\n\nldconfig -p <span class=\"pl-k\">|</span> grep libcuda\n        libcudart.so.7.0 (libc6,x86-64) =<span class=\"pl-k\">&gt;</span> /usr/local/cuda/lib64/libcudart.so.7.0\n        libcudart.so (libc6,x86-64) =<span class=\"pl-k\">&gt;</span> /usr/local/cuda/lib64/libcudart.so\n        libcuda.so.1 (libc6,x86-64) =<span class=\"pl-k\">&gt;</span> /usr/local/nvidia/lib64/libcuda.so.1\n        libcuda.so.1 (libc6) =<span class=\"pl-k\">&gt;</span> /usr/local/nvidia/lib/libcuda.so.1</pre></div>\n<p>Is there a path missing somewhere?</p>\n<p>I even tried the old images up on <a href=\"https://hub.docker.com/r/tensorflow/tensorflow/tags/\" rel=\"nofollow\">docker hub last repo</a> modified 2 months ago and the b.gcr.io updated recently by adding in the new nvidia meta label:</p>\n<div class=\"highlight highlight-source-dockerfile\"><pre><span class=\"pl-k\">FROM</span> tensorflow/tensorflow:0.6.0-gpu # or b.gcr.io/tensorflow/tensorflow-devel-gpu\n<span class=\"pl-k\">LABEL</span> com.nvidia.volumes.needed=<span class=\"pl-s\">\"nvidia_driver\"</span></pre></div>\n<p>for nvidia-docker, but still got the same error.</p>", "body_text": "@cancan101 , that's odd. Just did a fresh build of both cuda and tensorflow with Dockerfile.devel-gpu  and then got the same error you got:\n...\nI tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library libcublas.so.7.0 locally\nI tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library libcudnn.so.6.5 locally\nI tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library libcufft.so.7.0 locally\nI tensorflow/stream_executor/dso_loader.cc:93] Couldn't open CUDA library libcuda.so. LD_LIBRARY_PATH: /usr/local/nvidia/lib:/usr/local/nvidia/lib64:\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:121] hostname: 6816d202e2bd\n...\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1061] failed to find libcuda.so on this system: Failed precondition: could not dlopen DSO: libcuda.so; dlerror: libcuda.so: cannot open shared object file: No such file or directory\n\nI checked to make sure the library was installed and ldconfig finds it just fine:\nenv\n...\nLD_LIBRARY_PATH=/usr/local/nvidia/lib:/usr/local/nvidia/lib64:\nPATH=/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nCUDA_PATH=/usr/local/cuda\n...\n\nldconfig -p | grep libcuda\n        libcudart.so.7.0 (libc6,x86-64) => /usr/local/cuda/lib64/libcudart.so.7.0\n        libcudart.so (libc6,x86-64) => /usr/local/cuda/lib64/libcudart.so\n        libcuda.so.1 (libc6,x86-64) => /usr/local/nvidia/lib64/libcuda.so.1\n        libcuda.so.1 (libc6) => /usr/local/nvidia/lib/libcuda.so.1\nIs there a path missing somewhere?\nI even tried the old images up on docker hub last repo modified 2 months ago and the b.gcr.io updated recently by adding in the new nvidia meta label:\nFROM tensorflow/tensorflow:0.6.0-gpu # or b.gcr.io/tensorflow/tensorflow-devel-gpu\nLABEL com.nvidia.volumes.needed=\"nvidia_driver\"\nfor nvidia-docker, but still got the same error.", "body": "@cancan101 , that's odd. Just did a fresh build of both cuda and tensorflow with [`Dockerfile.devel-gpu` ](https://github.com/tensorflow/tensorflow/blob/41671d980d1c0e517e588d217d0d7d63b430d03b/tensorflow/tools/docker/Dockerfile.devel-gpu) and then got the same error you got:\n\n```\n...\nI tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library libcublas.so.7.0 locally\nI tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library libcudnn.so.6.5 locally\nI tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library libcufft.so.7.0 locally\nI tensorflow/stream_executor/dso_loader.cc:93] Couldn't open CUDA library libcuda.so. LD_LIBRARY_PATH: /usr/local/nvidia/lib:/usr/local/nvidia/lib64:\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:121] hostname: 6816d202e2bd\n...\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1061] failed to find libcuda.so on this system: Failed precondition: could not dlopen DSO: libcuda.so; dlerror: libcuda.so: cannot open shared object file: No such file or directory\n```\n\nI checked to make sure the library was installed and ldconfig finds it just fine:\n\n``` command\nenv\n...\nLD_LIBRARY_PATH=/usr/local/nvidia/lib:/usr/local/nvidia/lib64:\nPATH=/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nCUDA_PATH=/usr/local/cuda\n...\n\nldconfig -p | grep libcuda\n        libcudart.so.7.0 (libc6,x86-64) => /usr/local/cuda/lib64/libcudart.so.7.0\n        libcudart.so (libc6,x86-64) => /usr/local/cuda/lib64/libcudart.so\n        libcuda.so.1 (libc6,x86-64) => /usr/local/nvidia/lib64/libcuda.so.1\n        libcuda.so.1 (libc6) => /usr/local/nvidia/lib/libcuda.so.1\n```\n\nIs there a path missing somewhere?\n\nI even tried the old images up on [docker hub last repo](https://hub.docker.com/r/tensorflow/tensorflow/tags/) modified 2 months ago and the b.gcr.io updated recently by adding in the new nvidia meta label:\n\n``` Dockerfile\nFROM tensorflow/tensorflow:0.6.0-gpu # or b.gcr.io/tensorflow/tensorflow-devel-gpu\nLABEL com.nvidia.volumes.needed=\"nvidia_driver\"\n```\n\nfor nvidia-docker, but still got the same error.\n"}