{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/187931361", "html_url": "https://github.com/tensorflow/tensorflow/issues/808#issuecomment-187931361", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/808", "id": 187931361, "node_id": "MDEyOklzc3VlQ29tbWVudDE4NzkzMTM2MQ==", "user": {"login": "flx42", "id": 3645581, "node_id": "MDQ6VXNlcjM2NDU1ODE=", "avatar_url": "https://avatars3.githubusercontent.com/u/3645581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flx42", "html_url": "https://github.com/flx42", "followers_url": "https://api.github.com/users/flx42/followers", "following_url": "https://api.github.com/users/flx42/following{/other_user}", "gists_url": "https://api.github.com/users/flx42/gists{/gist_id}", "starred_url": "https://api.github.com/users/flx42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flx42/subscriptions", "organizations_url": "https://api.github.com/users/flx42/orgs", "repos_url": "https://api.github.com/users/flx42/repos", "events_url": "https://api.github.com/users/flx42/events{/privacy}", "received_events_url": "https://api.github.com/users/flx42/received_events", "type": "User", "site_admin": false}, "created_at": "2016-02-23T21:56:12Z", "updated_at": "2016-02-23T22:17:43Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5890073\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zcyang\">@zcyang</a>: the <code>0.7.1-devel-gpu</code> image seems to work:</p>\n<pre><code>$ nvidia-docker run -ti b.gcr.io/tensorflow/tensorflow:0.7.1-devel-gpu sh -c \"python -m tensorflow.models.image.mnist.convolutional\"\n</code></pre>\n<p>But the <code>0.7.1-gpu</code> image doesn't work:</p>\n<pre><code>$ nvidia-docker run -ti b.gcr.io/tensorflow/tensorflow:0.7.1-gpu sh -c \"python -m tensorflow.models.image.mnist.convolutional\"\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:99] Couldn't open CUDA library libcudnn.so. LD_LIBRARY_PATH: /usr/local/nvidia/lib:/usr/local/nvidia/lib64:\nI tensorflow/stream_executor/cuda/cuda_dnn.cc:1407] Unable to load cuDNN DSO\n</code></pre>\n<p>The problem here is that it tries to dlopen <code>libcudnn.so</code> but it doesn't exist if you don't have the package <code>libcudnn4-dev</code> (which is the case for <code>nvidia/cuda:7.5-cudnn4-runtime</code>). Instead, <code>libcudnn.so.4</code> is present, which corresponds to the <code>SONAME</code>. It works for other CUDA libraries though, it seems we have a small inconsistency here.</p>\n<p>This code seems to be handling the cuDNN version correctly:<br>\n<div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/ea083742206761139f734c04b354b84c0cb027de/tensorflow/stream_executor/dso_loader.cc#L49-L57\">tensorflow/tensorflow/stream_executor/dso_loader.cc</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 49 to 57\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/ea083742206761139f734c04b354b84c0cb027de\">ea08374</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L49\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"49\"></td>\n          <td id=\"LC49\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-c\"><span class=\"pl-c\">/*</span> static <span class=\"pl-c\">*/</span></span> port::Status <span class=\"pl-en\">DsoLoader::GetCudnnDsoHandle</span>(<span class=\"pl-k\">void</span>** dso_handle) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L50\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"50\"></td>\n          <td id=\"LC50\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-c\"><span class=\"pl-c\">//</span> libcudnn is versioned differently than the other libraries and may have a</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L51\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"51\"></td>\n          <td id=\"LC51\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-c\"><span class=\"pl-c\">//</span> different version number than other CUDA libraries.  See b/22397368 for</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L52\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"52\"></td>\n          <td id=\"LC52\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-c\"><span class=\"pl-c\">//</span> some details about the complications surrounding this.</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L53\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"53\"></td>\n          <td id=\"LC53\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-k\">return</span> <span class=\"pl-c1\">GetDsoHandle</span>( </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L54\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"54\"></td>\n          <td id=\"LC54\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">       <span class=\"pl-c1\">FindDsoPath</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>libcudnn.so<span class=\"pl-pds\">\"</span></span> + <span class=\"pl-c1\">GetCudnnVersion</span>(), </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L55\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"55\"></td>\n          <td id=\"LC55\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">                   <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>third_party/gpus/cuda/lib64<span class=\"pl-pds\">\"</span></span>), </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L56\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"56\"></td>\n          <td id=\"LC56\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">       dso_handle); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L57\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"57\"></td>\n          <td id=\"LC57\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> } </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<br>\nSo it looks like it could be a problem when calling <a href=\"https://github.com/tensorflow/tensorflow/blob/master/configure\">configure</a>, the cuDNN version was maybe not set explicitly.</p>", "body_text": "@zcyang: the 0.7.1-devel-gpu image seems to work:\n$ nvidia-docker run -ti b.gcr.io/tensorflow/tensorflow:0.7.1-devel-gpu sh -c \"python -m tensorflow.models.image.mnist.convolutional\"\n\nBut the 0.7.1-gpu image doesn't work:\n$ nvidia-docker run -ti b.gcr.io/tensorflow/tensorflow:0.7.1-gpu sh -c \"python -m tensorflow.models.image.mnist.convolutional\"\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:99] Couldn't open CUDA library libcudnn.so. LD_LIBRARY_PATH: /usr/local/nvidia/lib:/usr/local/nvidia/lib64:\nI tensorflow/stream_executor/cuda/cuda_dnn.cc:1407] Unable to load cuDNN DSO\n\nThe problem here is that it tries to dlopen libcudnn.so but it doesn't exist if you don't have the package libcudnn4-dev (which is the case for nvidia/cuda:7.5-cudnn4-runtime). Instead, libcudnn.so.4 is present, which corresponds to the SONAME. It works for other CUDA libraries though, it seems we have a small inconsistency here.\nThis code seems to be handling the cuDNN version correctly:\n\n  \n    \n      tensorflow/tensorflow/stream_executor/dso_loader.cc\n    \n    \n        Lines 49 to 57\n      in\n      ea08374\n    \n    \n    \n    \n\n        \n          \n           /* static */ port::Status DsoLoader::GetCudnnDsoHandle(void** dso_handle) { \n        \n\n        \n          \n             // libcudnn is versioned differently than the other libraries and may have a \n        \n\n        \n          \n             // different version number than other CUDA libraries.  See b/22397368 for \n        \n\n        \n          \n             // some details about the complications surrounding this. \n        \n\n        \n          \n             return GetDsoHandle( \n        \n\n        \n          \n                 FindDsoPath(\"libcudnn.so\" + GetCudnnVersion(), \n        \n\n        \n          \n                             \"third_party/gpus/cuda/lib64\"), \n        \n\n        \n          \n                 dso_handle); \n        \n\n        \n          \n           } \n        \n    \n  \n\n\nSo it looks like it could be a problem when calling configure, the cuDNN version was maybe not set explicitly.", "body": "@zcyang: the `0.7.1-devel-gpu` image seems to work:\n\n```\n$ nvidia-docker run -ti b.gcr.io/tensorflow/tensorflow:0.7.1-devel-gpu sh -c \"python -m tensorflow.models.image.mnist.convolutional\"\n```\n\nBut the `0.7.1-gpu` image doesn't work:\n\n```\n$ nvidia-docker run -ti b.gcr.io/tensorflow/tensorflow:0.7.1-gpu sh -c \"python -m tensorflow.models.image.mnist.convolutional\"\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:99] Couldn't open CUDA library libcudnn.so. LD_LIBRARY_PATH: /usr/local/nvidia/lib:/usr/local/nvidia/lib64:\nI tensorflow/stream_executor/cuda/cuda_dnn.cc:1407] Unable to load cuDNN DSO\n```\n\nThe problem here is that it tries to dlopen `libcudnn.so` but it doesn't exist if you don't have the package `libcudnn4-dev` (which is the case for `nvidia/cuda:7.5-cudnn4-runtime`). Instead, `libcudnn.so.4` is present, which corresponds to the `SONAME`. It works for other CUDA libraries though, it seems we have a small inconsistency here.\n\nThis code seems to be handling the cuDNN version correctly:\nhttps://github.com/tensorflow/tensorflow/blob/ea083742206761139f734c04b354b84c0cb027de/tensorflow/stream_executor/dso_loader.cc#L49-L57\nSo it looks like it could be a problem when calling [configure](https://github.com/tensorflow/tensorflow/blob/master/configure), the cuDNN version was maybe not set explicitly.\n"}