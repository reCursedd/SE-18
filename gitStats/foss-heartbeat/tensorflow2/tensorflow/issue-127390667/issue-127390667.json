{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/808", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/808/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/808/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/808/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/808", "id": 127390667, "node_id": "MDU6SXNzdWUxMjczOTA2Njc=", "number": 808, "title": "CUDA_ERROR_NO_DEVICE inside docker with GTX Titan X", "user": {"login": "mcuadros", "id": 1573114, "node_id": "MDQ6VXNlcjE1NzMxMTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1573114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcuadros", "html_url": "https://github.com/mcuadros", "followers_url": "https://api.github.com/users/mcuadros/followers", "following_url": "https://api.github.com/users/mcuadros/following{/other_user}", "gists_url": "https://api.github.com/users/mcuadros/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcuadros/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcuadros/subscriptions", "organizations_url": "https://api.github.com/users/mcuadros/orgs", "repos_url": "https://api.github.com/users/mcuadros/repos", "events_url": "https://api.github.com/users/mcuadros/events{/privacy}", "received_events_url": "https://api.github.com/users/mcuadros/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 284463744, "node_id": "MDU6TGFiZWwyODQ0NjM3NDQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cuda", "name": "cuda", "color": "f7c6c7", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "zheng-xq", "id": 15736910, "node_id": "MDQ6VXNlcjE1NzM2OTEw", "avatar_url": "https://avatars0.githubusercontent.com/u/15736910?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zheng-xq", "html_url": "https://github.com/zheng-xq", "followers_url": "https://api.github.com/users/zheng-xq/followers", "following_url": "https://api.github.com/users/zheng-xq/following{/other_user}", "gists_url": "https://api.github.com/users/zheng-xq/gists{/gist_id}", "starred_url": "https://api.github.com/users/zheng-xq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zheng-xq/subscriptions", "organizations_url": "https://api.github.com/users/zheng-xq/orgs", "repos_url": "https://api.github.com/users/zheng-xq/repos", "events_url": "https://api.github.com/users/zheng-xq/events{/privacy}", "received_events_url": "https://api.github.com/users/zheng-xq/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "zheng-xq", "id": 15736910, "node_id": "MDQ6VXNlcjE1NzM2OTEw", "avatar_url": "https://avatars0.githubusercontent.com/u/15736910?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zheng-xq", "html_url": "https://github.com/zheng-xq", "followers_url": "https://api.github.com/users/zheng-xq/followers", "following_url": "https://api.github.com/users/zheng-xq/following{/other_user}", "gists_url": "https://api.github.com/users/zheng-xq/gists{/gist_id}", "starred_url": "https://api.github.com/users/zheng-xq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zheng-xq/subscriptions", "organizations_url": "https://api.github.com/users/zheng-xq/orgs", "repos_url": "https://api.github.com/users/zheng-xq/repos", "events_url": "https://api.github.com/users/zheng-xq/events{/privacy}", "received_events_url": "https://api.github.com/users/zheng-xq/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 27, "created_at": "2016-01-19T08:28:33Z", "updated_at": "2016-07-27T10:38:33Z", "closed_at": "2016-06-13T19:05:44Z", "author_association": "NONE", "body_html": "<p>Running <code>b.gcr.io/tensorflow/tensorflow:latest-gpu</code> having CUDA 7.0 installed on the host when I try to create the session it returns <code>CUDA_ERROR_NO_DEVICE</code> and <code>was unable to find libcuda.so DSO loaded into this program</code> but when the strange thing is that when the module is imported all the libraries are loaded correctly.</p>\n<h4>Log:</h4>\n<pre><code>root@5b1e79697b49:~# python\nPython 2.7.6 (default, Jun 22 2015, 17:58:13) \n[GCC 4.8.2] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt; import tensorflow as tf\nI tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library libcublas.so.7.0 locally\nI tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library libcudnn.so.6.5 locally\nI tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library libcufft.so.7.0 locally\nI tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library libcuda.so locally\nI tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library libcurand.so.7.0 locally\n&gt;&gt;&gt; \n&gt;&gt;&gt; with tf.Session() as sess:\n...   with tf.device(\"/gpu:0\"):\n...     matrix1 = tf.constant([[3., 3.]])\n...     matrix2 = tf.constant([[2.],[2.]])\n...     product = tf.matmul(matrix1, matrix2)\n...     sess.run(product)\n... \nI tensorflow/core/common_runtime/local_device.cc:40] Local device intra op parallelism threads: 8\nE tensorflow/stream_executor/cuda/cuda_driver.cc:481] failed call to cuInit: CUDA_ERROR_NO_DEVICE\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:114] retrieving CUDA diagnostic information for host: 5b1e79697b49\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:121] hostname: 5b1e79697b49\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:146] libcuda reported version is: Not found: was unable to find libcuda.so DSO loaded into this program\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:257] driver version file contents: \"\"\"NVRM version: NVIDIA UNIX x86_64 Kernel Module  358.16  Mon Nov 16 19:25:55 PST 2015\nGCC version:  gcc version 4.8.5 20150623 (Red Hat 4.8.5-4) (GCC) \n\"\"\"\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:150] kernel reported version is: 358.16\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:127] DMA: \nI tensorflow/core/common_runtime/direct_session.cc:58] Direct session inter op parallelism threads: 8\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 6, in &lt;module&gt;\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 368, in run\n    results = self._do_run(target_list, unique_fetch_targets, feed_dict_string)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 444, in _do_run\n    e.code)\ntensorflow.python.framework.errors.InvalidArgumentError: Cannot assign a device to node 'Const_1': Could not satisfy explicit device specification '/gpu:0'\n         [[Node: Const_1 = Const[dtype=DT_FLOAT, value=Tensor&lt;type: float shape: [2,1] values: 2 2&gt;, _device=\"/gpu:0\"]()]]\nCaused by op u'Const_1', defined at:\n  File \"&lt;stdin&gt;\", line 4, in &lt;module&gt;\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/constant_op.py\", line 165, in constant\n    attrs={\"value\": tensor_value, \"dtype\": dtype_value}, name=name).outputs[0]\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 1834, in create_op\n    original_op=self._default_original_op, op_def=op_def)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 1043, in __init__\n    self._traceback = _extract_stack()\n\n&gt;&gt;&gt; \n</code></pre>\n<h4>Versions:</h4>\n<ul>\n<li>OS: <code>CentOS Linux elease.2.1511(Core)                                                                                                         </code></li>\n<li>Kernel: <code>Linux localhost.localdomain 3.10.0-327.el7.x86_64 #1 SMP Thu Nov 19 22:10:57 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux</code></li>\n<li>GPU: <code>NVIDIA Corporation GM200 [GeForce GTX TITAN X] (rev a1)</code></li>\n<li>Docker: <code>1.9.1</code></li>\n</ul>\n<h4>Env:</h4>\n<pre><code>CUDA_HOME=/usr/local/cuda-7.0\nLD_LIBRARY_PATH=/usr/local/cuda-7.0/lib64:\n</code></pre>\n<h4>Command:</h4>\n<p><code>docker run -it -v /usr/lib/x86_64-linux-gnu/libcudadevrt.a:/usr/lib/x86_64-linux-gnu/libcudadevrt.a -v /usr/lib/x86_64-linux-gnu/libcudart.so:/usr/lib/x86_64-linux-gnu/libcudart.so -v /usr/lib/x86_64-linux-gnu/libcudart.so.7.0:/usr/lib/x86_64-linux-gnu/libcudart.so.7.0 -v /usr/lib/x86_64-linux-gnu/libcudart.so.7.0.28:/usr/lib/x86_64-linux-gnu/libcudart.so.7.0.28 -v /usr/lib/x86_64-linux-gnu/libcudart_static.a:/usr/lib/x86_64-linux-gnu/libcudart_static.a -v /usr/lib/x86_64-linux-gnu/libcuda.so:/usr/lib/x86_64-linux-gnu/libcuda.so --device /dev/nvidia0:/dev/nvidia0 --device /dev/nvidiactl:/dev/nvidiactl --device /dev/nvidia-modeset:/dev/nvidia-modeset b.gcr.io/tensorflow/tensorflow:latest-gpu</code></p>", "body_text": "Running b.gcr.io/tensorflow/tensorflow:latest-gpu having CUDA 7.0 installed on the host when I try to create the session it returns CUDA_ERROR_NO_DEVICE and was unable to find libcuda.so DSO loaded into this program but when the strange thing is that when the module is imported all the libraries are loaded correctly.\nLog:\nroot@5b1e79697b49:~# python\nPython 2.7.6 (default, Jun 22 2015, 17:58:13) \n[GCC 4.8.2] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import tensorflow as tf\nI tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library libcublas.so.7.0 locally\nI tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library libcudnn.so.6.5 locally\nI tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library libcufft.so.7.0 locally\nI tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library libcuda.so locally\nI tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library libcurand.so.7.0 locally\n>>> \n>>> with tf.Session() as sess:\n...   with tf.device(\"/gpu:0\"):\n...     matrix1 = tf.constant([[3., 3.]])\n...     matrix2 = tf.constant([[2.],[2.]])\n...     product = tf.matmul(matrix1, matrix2)\n...     sess.run(product)\n... \nI tensorflow/core/common_runtime/local_device.cc:40] Local device intra op parallelism threads: 8\nE tensorflow/stream_executor/cuda/cuda_driver.cc:481] failed call to cuInit: CUDA_ERROR_NO_DEVICE\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:114] retrieving CUDA diagnostic information for host: 5b1e79697b49\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:121] hostname: 5b1e79697b49\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:146] libcuda reported version is: Not found: was unable to find libcuda.so DSO loaded into this program\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:257] driver version file contents: \"\"\"NVRM version: NVIDIA UNIX x86_64 Kernel Module  358.16  Mon Nov 16 19:25:55 PST 2015\nGCC version:  gcc version 4.8.5 20150623 (Red Hat 4.8.5-4) (GCC) \n\"\"\"\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:150] kernel reported version is: 358.16\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:127] DMA: \nI tensorflow/core/common_runtime/direct_session.cc:58] Direct session inter op parallelism threads: 8\nTraceback (most recent call last):\n  File \"<stdin>\", line 6, in <module>\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 368, in run\n    results = self._do_run(target_list, unique_fetch_targets, feed_dict_string)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 444, in _do_run\n    e.code)\ntensorflow.python.framework.errors.InvalidArgumentError: Cannot assign a device to node 'Const_1': Could not satisfy explicit device specification '/gpu:0'\n         [[Node: Const_1 = Const[dtype=DT_FLOAT, value=Tensor<type: float shape: [2,1] values: 2 2>, _device=\"/gpu:0\"]()]]\nCaused by op u'Const_1', defined at:\n  File \"<stdin>\", line 4, in <module>\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/constant_op.py\", line 165, in constant\n    attrs={\"value\": tensor_value, \"dtype\": dtype_value}, name=name).outputs[0]\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 1834, in create_op\n    original_op=self._default_original_op, op_def=op_def)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 1043, in __init__\n    self._traceback = _extract_stack()\n\n>>> \n\nVersions:\n\nOS: CentOS Linux elease.2.1511(Core)                                                                                                         \nKernel: Linux localhost.localdomain 3.10.0-327.el7.x86_64 #1 SMP Thu Nov 19 22:10:57 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux\nGPU: NVIDIA Corporation GM200 [GeForce GTX TITAN X] (rev a1)\nDocker: 1.9.1\n\nEnv:\nCUDA_HOME=/usr/local/cuda-7.0\nLD_LIBRARY_PATH=/usr/local/cuda-7.0/lib64:\n\nCommand:\ndocker run -it -v /usr/lib/x86_64-linux-gnu/libcudadevrt.a:/usr/lib/x86_64-linux-gnu/libcudadevrt.a -v /usr/lib/x86_64-linux-gnu/libcudart.so:/usr/lib/x86_64-linux-gnu/libcudart.so -v /usr/lib/x86_64-linux-gnu/libcudart.so.7.0:/usr/lib/x86_64-linux-gnu/libcudart.so.7.0 -v /usr/lib/x86_64-linux-gnu/libcudart.so.7.0.28:/usr/lib/x86_64-linux-gnu/libcudart.so.7.0.28 -v /usr/lib/x86_64-linux-gnu/libcudart_static.a:/usr/lib/x86_64-linux-gnu/libcudart_static.a -v /usr/lib/x86_64-linux-gnu/libcuda.so:/usr/lib/x86_64-linux-gnu/libcuda.so --device /dev/nvidia0:/dev/nvidia0 --device /dev/nvidiactl:/dev/nvidiactl --device /dev/nvidia-modeset:/dev/nvidia-modeset b.gcr.io/tensorflow/tensorflow:latest-gpu", "body": "Running `b.gcr.io/tensorflow/tensorflow:latest-gpu` having CUDA 7.0 installed on the host when I try to create the session it returns `CUDA_ERROR_NO_DEVICE` and `was unable to find libcuda.so DSO loaded into this program` but when the strange thing is that when the module is imported all the libraries are loaded correctly.\n#### Log:\n\n```\nroot@5b1e79697b49:~# python\nPython 2.7.6 (default, Jun 22 2015, 17:58:13) \n[GCC 4.8.2] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import tensorflow as tf\nI tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library libcublas.so.7.0 locally\nI tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library libcudnn.so.6.5 locally\nI tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library libcufft.so.7.0 locally\nI tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library libcuda.so locally\nI tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library libcurand.so.7.0 locally\n>>> \n>>> with tf.Session() as sess:\n...   with tf.device(\"/gpu:0\"):\n...     matrix1 = tf.constant([[3., 3.]])\n...     matrix2 = tf.constant([[2.],[2.]])\n...     product = tf.matmul(matrix1, matrix2)\n...     sess.run(product)\n... \nI tensorflow/core/common_runtime/local_device.cc:40] Local device intra op parallelism threads: 8\nE tensorflow/stream_executor/cuda/cuda_driver.cc:481] failed call to cuInit: CUDA_ERROR_NO_DEVICE\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:114] retrieving CUDA diagnostic information for host: 5b1e79697b49\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:121] hostname: 5b1e79697b49\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:146] libcuda reported version is: Not found: was unable to find libcuda.so DSO loaded into this program\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:257] driver version file contents: \"\"\"NVRM version: NVIDIA UNIX x86_64 Kernel Module  358.16  Mon Nov 16 19:25:55 PST 2015\nGCC version:  gcc version 4.8.5 20150623 (Red Hat 4.8.5-4) (GCC) \n\"\"\"\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:150] kernel reported version is: 358.16\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:127] DMA: \nI tensorflow/core/common_runtime/direct_session.cc:58] Direct session inter op parallelism threads: 8\nTraceback (most recent call last):\n  File \"<stdin>\", line 6, in <module>\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 368, in run\n    results = self._do_run(target_list, unique_fetch_targets, feed_dict_string)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 444, in _do_run\n    e.code)\ntensorflow.python.framework.errors.InvalidArgumentError: Cannot assign a device to node 'Const_1': Could not satisfy explicit device specification '/gpu:0'\n         [[Node: Const_1 = Const[dtype=DT_FLOAT, value=Tensor<type: float shape: [2,1] values: 2 2>, _device=\"/gpu:0\"]()]]\nCaused by op u'Const_1', defined at:\n  File \"<stdin>\", line 4, in <module>\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/constant_op.py\", line 165, in constant\n    attrs={\"value\": tensor_value, \"dtype\": dtype_value}, name=name).outputs[0]\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 1834, in create_op\n    original_op=self._default_original_op, op_def=op_def)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 1043, in __init__\n    self._traceback = _extract_stack()\n\n>>> \n```\n#### Versions:\n- OS: `CentOS Linux elease.2.1511(Core)                                                                                                        \n  `\n- Kernel: `Linux localhost.localdomain 3.10.0-327.el7.x86_64 #1 SMP Thu Nov 19 22:10:57 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux` \n- GPU: `NVIDIA Corporation GM200 [GeForce GTX TITAN X] (rev a1)`\n- Docker: `1.9.1`\n#### Env:\n\n```\nCUDA_HOME=/usr/local/cuda-7.0\nLD_LIBRARY_PATH=/usr/local/cuda-7.0/lib64:\n```\n#### Command:\n\n`docker run -it -v /usr/lib/x86_64-linux-gnu/libcudadevrt.a:/usr/lib/x86_64-linux-gnu/libcudadevrt.a -v /usr/lib/x86_64-linux-gnu/libcudart.so:/usr/lib/x86_64-linux-gnu/libcudart.so -v /usr/lib/x86_64-linux-gnu/libcudart.so.7.0:/usr/lib/x86_64-linux-gnu/libcudart.so.7.0 -v /usr/lib/x86_64-linux-gnu/libcudart.so.7.0.28:/usr/lib/x86_64-linux-gnu/libcudart.so.7.0.28 -v /usr/lib/x86_64-linux-gnu/libcudart_static.a:/usr/lib/x86_64-linux-gnu/libcudart_static.a -v /usr/lib/x86_64-linux-gnu/libcuda.so:/usr/lib/x86_64-linux-gnu/libcuda.so --device /dev/nvidia0:/dev/nvidia0 --device /dev/nvidiactl:/dev/nvidiactl --device /dev/nvidia-modeset:/dev/nvidia-modeset b.gcr.io/tensorflow/tensorflow:latest-gpu`\n"}