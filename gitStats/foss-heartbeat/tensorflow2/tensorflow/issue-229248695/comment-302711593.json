{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/302711593", "html_url": "https://github.com/tensorflow/tensorflow/pull/9957#issuecomment-302711593", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9957", "id": 302711593, "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjcxMTU5Mw==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-19T14:04:15Z", "updated_at": "2017-05-19T14:04:15Z", "author_association": "CONTRIBUTOR", "body_html": "<p>It looks like <code>MakePerStepResourceHandle</code> would work, yes. As for adding a template parameter to <code>ResourceOpKernel&lt;T&gt;</code>, I don't have a strong feeling either way... but it wouldn't be useful for creating per-step <code>DatasetBase</code> resources, because the <code>CreateResource()</code> method does not have access to the <code>OpKernelContext*</code>, and this is usually needed for getting the arguments to the <code>Dataset</code> constructor.</p>", "body_text": "It looks like MakePerStepResourceHandle would work, yes. As for adding a template parameter to ResourceOpKernel<T>, I don't have a strong feeling either way... but it wouldn't be useful for creating per-step DatasetBase resources, because the CreateResource() method does not have access to the OpKernelContext*, and this is usually needed for getting the arguments to the Dataset constructor.", "body": "It looks like `MakePerStepResourceHandle` would work, yes. As for adding a template parameter to `ResourceOpKernel<T>`, I don't have a strong feeling either way... but it wouldn't be useful for creating per-step `DatasetBase` resources, because the `CreateResource()` method does not have access to the `OpKernelContext*`, and this is usually needed for getting the arguments to the `Dataset` constructor."}