{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/401108675", "html_url": "https://github.com/tensorflow/tensorflow/issues/4680#issuecomment-401108675", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4680", "id": 401108675, "node_id": "MDEyOklzc3VlQ29tbWVudDQwMTEwODY3NQ==", "user": {"login": "leftofcenter", "id": 27082529, "node_id": "MDQ6VXNlcjI3MDgyNTI5", "avatar_url": "https://avatars0.githubusercontent.com/u/27082529?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leftofcenter", "html_url": "https://github.com/leftofcenter", "followers_url": "https://api.github.com/users/leftofcenter/followers", "following_url": "https://api.github.com/users/leftofcenter/following{/other_user}", "gists_url": "https://api.github.com/users/leftofcenter/gists{/gist_id}", "starred_url": "https://api.github.com/users/leftofcenter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leftofcenter/subscriptions", "organizations_url": "https://api.github.com/users/leftofcenter/orgs", "repos_url": "https://api.github.com/users/leftofcenter/repos", "events_url": "https://api.github.com/users/leftofcenter/events{/privacy}", "received_events_url": "https://api.github.com/users/leftofcenter/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-28T17:14:58Z", "updated_at": "2018-06-28T17:14:58Z", "author_association": "NONE", "body_html": "<p>I built tensorflow from source including creation and installation of the python installer.  For the tensorflow directory:</p>\n<p>$ find tensorflow -type f -name 'Tensor' -print<br>\ntensorflow/third_party/eigen3/unsupported/Eigen/CXX11/Tensor</p>\n<p>For my python dist-packages directory:</p>\n<p>$ find dist-packages -type f -name 'Tensor' -print<br>\ndist-packages/tensorflow/include/third_party/eigen3/unsupported/Eigen/CXX11/Tensor<br>\ndist-packages/tensorflow/include/external/eigen_archive/unsupported/Eigen/CXX11/Tensor</p>\n<p>The first Tensor file is the one that is indirectly included by session.h.  The 2nd Tensor file is the one that the first Tensor file needs to include.  Since the 2nd file is not present in the tensorflow tree (I don't know what magic puts it into the dist-packages tree), I don't see how a bazel build can work unless you arrange to get the 2nd file by some means (via network?).  If you try to #include the 2nd file in a bazel c_opts block you get an error for the file not being in the workspace tree.</p>\n<p>Therefore I think I am on the road to success with my first tensorflow project by not using bazel and getting my include files from the dist-packages.  I am using makefile and correct use of -I in my compiler commands has fixed this problem.</p>\n<p>Roger</p>", "body_text": "I built tensorflow from source including creation and installation of the python installer.  For the tensorflow directory:\n$ find tensorflow -type f -name 'Tensor' -print\ntensorflow/third_party/eigen3/unsupported/Eigen/CXX11/Tensor\nFor my python dist-packages directory:\n$ find dist-packages -type f -name 'Tensor' -print\ndist-packages/tensorflow/include/third_party/eigen3/unsupported/Eigen/CXX11/Tensor\ndist-packages/tensorflow/include/external/eigen_archive/unsupported/Eigen/CXX11/Tensor\nThe first Tensor file is the one that is indirectly included by session.h.  The 2nd Tensor file is the one that the first Tensor file needs to include.  Since the 2nd file is not present in the tensorflow tree (I don't know what magic puts it into the dist-packages tree), I don't see how a bazel build can work unless you arrange to get the 2nd file by some means (via network?).  If you try to #include the 2nd file in a bazel c_opts block you get an error for the file not being in the workspace tree.\nTherefore I think I am on the road to success with my first tensorflow project by not using bazel and getting my include files from the dist-packages.  I am using makefile and correct use of -I in my compiler commands has fixed this problem.\nRoger", "body": "I built tensorflow from source including creation and installation of the python installer.  For the tensorflow directory:\r\n\r\n$ find tensorflow -type f -name 'Tensor' -print\r\ntensorflow/third_party/eigen3/unsupported/Eigen/CXX11/Tensor\r\n\r\nFor my python dist-packages directory:\r\n\r\n$ find dist-packages -type f -name 'Tensor' -print\r\ndist-packages/tensorflow/include/third_party/eigen3/unsupported/Eigen/CXX11/Tensor\r\ndist-packages/tensorflow/include/external/eigen_archive/unsupported/Eigen/CXX11/Tensor\r\n \r\nThe first Tensor file is the one that is indirectly included by session.h.  The 2nd Tensor file is the one that the first Tensor file needs to include.  Since the 2nd file is not present in the tensorflow tree (I don't know what magic puts it into the dist-packages tree), I don't see how a bazel build can work unless you arrange to get the 2nd file by some means (via network?).  If you try to #include the 2nd file in a bazel c_opts block you get an error for the file not being in the workspace tree.\r\n\r\nTherefore I think I am on the road to success with my first tensorflow project by not using bazel and getting my include files from the dist-packages.  I am using makefile and correct use of -I in my compiler commands has fixed this problem.\r\n\r\nRoger\r\n"}