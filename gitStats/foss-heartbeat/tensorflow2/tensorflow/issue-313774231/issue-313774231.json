{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18460", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18460/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18460/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18460/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18460", "id": 313774231, "node_id": "MDU6SXNzdWUzMTM3NzQyMzE=", "number": 18460, "title": "tf.nn.conv3d_transpose operation with data_format='NCDHW'", "user": {"login": "d-acharya", "id": 11586277, "node_id": "MDQ6VXNlcjExNTg2Mjc3", "avatar_url": "https://avatars1.githubusercontent.com/u/11586277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/d-acharya", "html_url": "https://github.com/d-acharya", "followers_url": "https://api.github.com/users/d-acharya/followers", "following_url": "https://api.github.com/users/d-acharya/following{/other_user}", "gists_url": "https://api.github.com/users/d-acharya/gists{/gist_id}", "starred_url": "https://api.github.com/users/d-acharya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/d-acharya/subscriptions", "organizations_url": "https://api.github.com/users/d-acharya/orgs", "repos_url": "https://api.github.com/users/d-acharya/repos", "events_url": "https://api.github.com/users/d-acharya/events{/privacy}", "received_events_url": "https://api.github.com/users/d-acharya/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-04-12T15:20:33Z", "updated_at": "2018-04-17T23:44:22Z", "closed_at": "2018-04-17T23:44:22Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<p>Irrelevant.</p>\n<h3>Describe the problem</h3>\n<p>In implementation of \"tf.nn.conv3d_transpose\" operation with \"data_format='NCDHW'\",<br>\nthe shape compatibility of \"output shape\" and \"kernel size\" check is not carried out correctly. (However, the check is fine in tf.nn.conv2d_transpose)</p>\n<h3>Source code / logs</h3>\n<p><code>    if isinstance(output_shape, (list, np.ndarray)): # output_shape's shape should be == [5] if reached this point. if not filter.get_shape()[3].is_compatible_with(output_shape[4]): raise ValueError( \"output_shape does not match filter's output channels, \" \"{} != {}\".format(output_shape[4], filter.get_shape()[3]))</code></p>\n<p>should be changed to</p>\n<p><code>    if isinstance(output_shape, (list, np.ndarray)): # output_shape's shape should be == [5] if reached this point. if not filter.get_shape()[3].is_compatible_with(output_shape[axis]): raise ValueError( \"output_shape does not match filter's output channels, \" \"{} != {}\".format(output_shape[axis], filter.get_shape()[3]))</code></p>\n<p>more specifically, output_shape[4] to output_shape[axis].</p>", "body_text": "System information\nIrrelevant.\nDescribe the problem\nIn implementation of \"tf.nn.conv3d_transpose\" operation with \"data_format='NCDHW'\",\nthe shape compatibility of \"output shape\" and \"kernel size\" check is not carried out correctly. (However, the check is fine in tf.nn.conv2d_transpose)\nSource code / logs\n    if isinstance(output_shape, (list, np.ndarray)): # output_shape's shape should be == [5] if reached this point. if not filter.get_shape()[3].is_compatible_with(output_shape[4]): raise ValueError( \"output_shape does not match filter's output channels, \" \"{} != {}\".format(output_shape[4], filter.get_shape()[3]))\nshould be changed to\n    if isinstance(output_shape, (list, np.ndarray)): # output_shape's shape should be == [5] if reached this point. if not filter.get_shape()[3].is_compatible_with(output_shape[axis]): raise ValueError( \"output_shape does not match filter's output channels, \" \"{} != {}\".format(output_shape[axis], filter.get_shape()[3]))\nmore specifically, output_shape[4] to output_shape[axis].", "body": "### System information\r\nIrrelevant.\r\n\r\n### Describe the problem\r\nIn implementation of \"tf.nn.conv3d_transpose\" operation with \"data_format='NCDHW'\",\r\nthe shape compatibility of \"output shape\" and \"kernel size\" check is not carried out correctly. (However, the check is fine in tf.nn.conv2d_transpose)\r\n\r\n\r\n### Source code / logs\r\n`    if isinstance(output_shape, (list, np.ndarray)):\r\n      # output_shape's shape should be == [5] if reached this point.\r\n      if not filter.get_shape()[3].is_compatible_with(output_shape[4]):\r\n        raise ValueError(\r\n            \"output_shape does not match filter's output channels, \"\r\n            \"{} != {}\".format(output_shape[4],\r\n                              filter.get_shape()[3]))`\r\n\r\nshould be changed to \r\n\r\n`    if isinstance(output_shape, (list, np.ndarray)):\r\n      # output_shape's shape should be == [5] if reached this point.\r\n      if not filter.get_shape()[3].is_compatible_with(output_shape[axis]):\r\n        raise ValueError(\r\n            \"output_shape does not match filter's output channels, \"\r\n            \"{} != {}\".format(output_shape[axis],\r\n                              filter.get_shape()[3]))`\r\n\r\nmore specifically, output_shape[4] to output_shape[axis]."}