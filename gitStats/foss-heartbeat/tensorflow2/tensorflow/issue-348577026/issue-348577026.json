{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21469", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21469/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21469/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21469/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21469", "id": 348577026, "node_id": "MDU6SXNzdWUzNDg1NzcwMjY=", "number": 21469, "title": "ci.tensorflow.org is now deprecated.  Where can I get nightly builds for pi-zero AND regular pis when I only have a pi3?", "user": {"login": "gragundier", "id": 3095335, "node_id": "MDQ6VXNlcjMwOTUzMzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3095335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gragundier", "html_url": "https://github.com/gragundier", "followers_url": "https://api.github.com/users/gragundier/followers", "following_url": "https://api.github.com/users/gragundier/following{/other_user}", "gists_url": "https://api.github.com/users/gragundier/gists{/gist_id}", "starred_url": "https://api.github.com/users/gragundier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gragundier/subscriptions", "organizations_url": "https://api.github.com/users/gragundier/orgs", "repos_url": "https://api.github.com/users/gragundier/repos", "events_url": "https://api.github.com/users/gragundier/events{/privacy}", "received_events_url": "https://api.github.com/users/gragundier/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "petewarden", "id": 161459, "node_id": "MDQ6VXNlcjE2MTQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/161459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petewarden", "html_url": "https://github.com/petewarden", "followers_url": "https://api.github.com/users/petewarden/followers", "following_url": "https://api.github.com/users/petewarden/following{/other_user}", "gists_url": "https://api.github.com/users/petewarden/gists{/gist_id}", "starred_url": "https://api.github.com/users/petewarden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petewarden/subscriptions", "organizations_url": "https://api.github.com/users/petewarden/orgs", "repos_url": "https://api.github.com/users/petewarden/repos", "events_url": "https://api.github.com/users/petewarden/events{/privacy}", "received_events_url": "https://api.github.com/users/petewarden/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "petewarden", "id": 161459, "node_id": "MDQ6VXNlcjE2MTQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/161459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petewarden", "html_url": "https://github.com/petewarden", "followers_url": "https://api.github.com/users/petewarden/followers", "following_url": "https://api.github.com/users/petewarden/following{/other_user}", "gists_url": "https://api.github.com/users/petewarden/gists{/gist_id}", "starred_url": "https://api.github.com/users/petewarden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petewarden/subscriptions", "organizations_url": "https://api.github.com/users/petewarden/orgs", "repos_url": "https://api.github.com/users/petewarden/repos", "events_url": "https://api.github.com/users/petewarden/events{/privacy}", "received_events_url": "https://api.github.com/users/petewarden/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2018-08-08T05:09:21Z", "updated_at": "2018-09-18T17:30:21Z", "closed_at": "2018-09-01T00:06:36Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:No</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:Raspbian Stretch 9</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>:Raspberry Pi 3 Model B</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:latest pi-zero nightly binary that was on jenkins.</li>\n<li><strong>TensorFlow version (use command below)</strong>:1.9.0 (ultimately not relevant so this should be good enough)</li>\n<li><strong>Python version</strong>:3.5.3</li>\n<li><strong>Bazel version (if compiling from source)</strong>:N/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:N/A</li>\n<li><strong>CUDA/cuDNN version</strong>:N/A</li>\n<li><strong>GPU model and memory</strong>:VideoCore IV</li>\n<li><strong>Exact command to reproduce</strong>:<br>\npip3 install tf-nightly</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>Describe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.<br>\nNow, that ci.tensorflow.org is gone.  I'm struggling to find an easy way to view changelogs between nightly builds AND download both pi-zero and regular raspberry pi nightly builds.  The reason why this is useful is because recently <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"345409745\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/21198\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/21198/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/21198\">#21198</a> armv7 optimizations interferred with the tflite interpreter.  The current most practical work around was to go to ci.tensorflow.org and grab the pi-zero binary instead of the default one you get when installing tf-nightly or tensorflow on the raspberry pi.  I can see how this wouldn't be a problem for other tensorflow versions that only have one binary that works for only that specific machine.  I understand that you can use the 2.7 tensorflow vs 3.n tensorflow on other machines, but those you can do <code>pip install tensorflow</code> or <code>pip3 install tensorflow</code>.  This isn't possible with the raspberry pi as far as I can tell, or at least it's not documented clearly anywhere that I can.  Furthermore, it was great being able to roll back a couple of days and just download the .whl from yesterday with ease.  I saved many hours by just playing around with the available .whl's instead of having to cross-compile each one.<br>\ntl;dr I miss ci.tensorflow.org.  Please let me choose whether to install the tf nightly binaries of either pi-zero or regular raspberry-pi by choice since they both work on the raspberry pi.</p>\n<h3>Source code / logs</h3>\n<p>Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):No\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):Raspbian Stretch 9\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:Raspberry Pi 3 Model B\nTensorFlow installed from (source or binary):latest pi-zero nightly binary that was on jenkins.\nTensorFlow version (use command below):1.9.0 (ultimately not relevant so this should be good enough)\nPython version:3.5.3\nBazel version (if compiling from source):N/A\nGCC/Compiler version (if compiling from source):N/A\nCUDA/cuDNN version:N/A\nGPU model and memory:VideoCore IV\nExact command to reproduce:\npip3 install tf-nightly\n\nDescribe the problem\nDescribe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.\nNow, that ci.tensorflow.org is gone.  I'm struggling to find an easy way to view changelogs between nightly builds AND download both pi-zero and regular raspberry pi nightly builds.  The reason why this is useful is because recently #21198 armv7 optimizations interferred with the tflite interpreter.  The current most practical work around was to go to ci.tensorflow.org and grab the pi-zero binary instead of the default one you get when installing tf-nightly or tensorflow on the raspberry pi.  I can see how this wouldn't be a problem for other tensorflow versions that only have one binary that works for only that specific machine.  I understand that you can use the 2.7 tensorflow vs 3.n tensorflow on other machines, but those you can do pip install tensorflow or pip3 install tensorflow.  This isn't possible with the raspberry pi as far as I can tell, or at least it's not documented clearly anywhere that I can.  Furthermore, it was great being able to roll back a couple of days and just download the .whl from yesterday with ease.  I saved many hours by just playing around with the available .whl's instead of having to cross-compile each one.\ntl;dr I miss ci.tensorflow.org.  Please let me choose whether to install the tf nightly binaries of either pi-zero or regular raspberry-pi by choice since they both work on the raspberry pi.\nSource code / logs\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:Raspbian Stretch 9\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**:Raspberry Pi 3 Model B\r\n- **TensorFlow installed from (source or binary)**:latest pi-zero nightly binary that was on jenkins.\r\n- **TensorFlow version (use command below)**:1.9.0 (ultimately not relevant so this should be good enough)\r\n- **Python version**:3.5.3\r\n- **Bazel version (if compiling from source)**:N/A\r\n- **GCC/Compiler version (if compiling from source)**:N/A\r\n- **CUDA/cuDNN version**:N/A\r\n- **GPU model and memory**:VideoCore IV\r\n- **Exact command to reproduce**:\r\npip3 install tf-nightly\r\n\r\n### Describe the problem\r\nDescribe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.\r\nNow, that ci.tensorflow.org is gone.  I'm struggling to find an easy way to view changelogs between nightly builds AND download both pi-zero and regular raspberry pi nightly builds.  The reason why this is useful is because recently #21198 armv7 optimizations interferred with the tflite interpreter.  The current most practical work around was to go to ci.tensorflow.org and grab the pi-zero binary instead of the default one you get when installing tf-nightly or tensorflow on the raspberry pi.  I can see how this wouldn't be a problem for other tensorflow versions that only have one binary that works for only that specific machine.  I understand that you can use the 2.7 tensorflow vs 3.n tensorflow on other machines, but those you can do `pip install tensorflow` or `pip3 install tensorflow`.  This isn't possible with the raspberry pi as far as I can tell, or at least it's not documented clearly anywhere that I can.  Furthermore, it was great being able to roll back a couple of days and just download the .whl from yesterday with ease.  I saved many hours by just playing around with the available .whl's instead of having to cross-compile each one.  \r\ntl;dr I miss ci.tensorflow.org.  Please let me choose whether to install the tf nightly binaries of either pi-zero or regular raspberry-pi by choice since they both work on the raspberry pi.\r\n### Source code / logs\r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.\r\n"}