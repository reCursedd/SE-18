{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7957", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7957/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7957/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7957/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/7957", "id": 210971085, "node_id": "MDU6SXNzdWUyMTA5NzEwODU=", "number": 7957, "title": "tf.contrib.layers.sparse_column_with_hash_bucket() lead to 'out of memory error' with large hash_bucket_size?", "user": {"login": "Sean-Git", "id": 6144395, "node_id": "MDQ6VXNlcjYxNDQzOTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6144395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sean-Git", "html_url": "https://github.com/Sean-Git", "followers_url": "https://api.github.com/users/Sean-Git/followers", "following_url": "https://api.github.com/users/Sean-Git/following{/other_user}", "gists_url": "https://api.github.com/users/Sean-Git/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sean-Git/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sean-Git/subscriptions", "organizations_url": "https://api.github.com/users/Sean-Git/orgs", "repos_url": "https://api.github.com/users/Sean-Git/repos", "events_url": "https://api.github.com/users/Sean-Git/events{/privacy}", "received_events_url": "https://api.github.com/users/Sean-Git/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-01T03:39:17Z", "updated_at": "2017-03-01T06:12:50Z", "closed_at": "2017-03-01T06:12:50Z", "author_association": "NONE", "body_html": "<p>I'm using the wide_n_deep model on my own data, which has feature dimension about <em>100million</em>. When I use the <em>sparse_column_with_hash_bucket()</em> and set the <em>hash_bucket_size</em> to <em>10million</em> (because some categorical features have that much different values), the program always failed with the out of memory error.</p>\n<p>So I wonder if tensorflow's wide_n_deep model could handles data with high dimension like the case above?</p>", "body_text": "I'm using the wide_n_deep model on my own data, which has feature dimension about 100million. When I use the sparse_column_with_hash_bucket() and set the hash_bucket_size to 10million (because some categorical features have that much different values), the program always failed with the out of memory error.\nSo I wonder if tensorflow's wide_n_deep model could handles data with high dimension like the case above?", "body": "  I'm using the wide_n_deep model on my own data, which has feature dimension about _100million_. When I use the _sparse_column_with_hash_bucket()_ and set the _hash_bucket_size_ to _10million_ (because some categorical features have that much different values), the program always failed with the out of memory error.\r\n\r\n  So I wonder if tensorflow's wide_n_deep model could handles data with high dimension like the case above? "}