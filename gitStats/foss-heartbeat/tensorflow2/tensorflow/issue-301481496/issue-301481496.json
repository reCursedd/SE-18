{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17361", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17361/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17361/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17361/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17361", "id": 301481496, "node_id": "MDU6SXNzdWUzMDE0ODE0OTY=", "number": 17361, "title": "Feature request: Let Dataset.padded_batch() return a sequence_length tensor as a feature", "user": {"login": "harahu", "id": 6145801, "node_id": "MDQ6VXNlcjYxNDU4MDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/6145801?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harahu", "html_url": "https://github.com/harahu", "followers_url": "https://api.github.com/users/harahu/followers", "following_url": "https://api.github.com/users/harahu/following{/other_user}", "gists_url": "https://api.github.com/users/harahu/gists{/gist_id}", "starred_url": "https://api.github.com/users/harahu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harahu/subscriptions", "organizations_url": "https://api.github.com/users/harahu/orgs", "repos_url": "https://api.github.com/users/harahu/repos", "events_url": "https://api.github.com/users/harahu/events{/privacy}", "received_events_url": "https://api.github.com/users/harahu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-03-01T16:56:44Z", "updated_at": "2018-04-19T06:15:08Z", "closed_at": "2018-04-19T06:15:08Z", "author_association": "CONTRIBUTOR", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code</strong>: Yes</li>\n<li><strong>OS Platform and Distribution</strong>: MacOS High Sierra v10.13.3</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: pip</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.5.0</li>\n<li><strong>Python version</strong>: 3.6.4 :: Anaconda, Inc.</li>\n<li><strong>Bazel version (if compiling from source)</strong>: n/a</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: n/a</li>\n<li><strong>CUDA/cuDNN version</strong>: n/a</li>\n<li><strong>GPU model and memory</strong>: Intel Iris Pro 1536 MB</li>\n<li><strong>Exact command to reproduce</strong>: n/a</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I am building a <code>tf.data.Dataset</code> that should return batches for model built around <code>tf.nn.dynamic_rnn</code>. The data consists of variable length time series, and i use <code>Dataset.padded_batch</code> to build batch tensors from these time series. When operating on variable length data, we want to pass a <code>sequence_length</code> tensor to <code>tf.nn.dynamic_rnn</code>. This tensor is also useful to extract the final valid outputs of the rnn for each series in the batch. It is possible to generate <code>sequence_length</code> in the model itself, knowing the padding symbol used by <code>Dataset.padded_batch</code>. This is unsatisfactory, however, as the padding symbol can be in the domain of the time series function, and thus, it is hard to know if you are looking at padding or real data.</p>\n<h3>Feature request</h3>\n<p>I suggest modifying <code>Dataset.padded_batch</code> in such a way that it can optionally return a <code>sequence_length</code> tensor as one of it's features, storing the <em>true</em> padding information. I think this would be very convenient for work with time series.</p>", "body_text": "System information\n\nHave I written custom code: Yes\nOS Platform and Distribution: MacOS High Sierra v10.13.3\nTensorFlow installed from (source or binary): pip\nTensorFlow version (use command below): 1.5.0\nPython version: 3.6.4 :: Anaconda, Inc.\nBazel version (if compiling from source): n/a\nGCC/Compiler version (if compiling from source): n/a\nCUDA/cuDNN version: n/a\nGPU model and memory: Intel Iris Pro 1536 MB\nExact command to reproduce: n/a\n\nDescribe the problem\nI am building a tf.data.Dataset that should return batches for model built around tf.nn.dynamic_rnn. The data consists of variable length time series, and i use Dataset.padded_batch to build batch tensors from these time series. When operating on variable length data, we want to pass a sequence_length tensor to tf.nn.dynamic_rnn. This tensor is also useful to extract the final valid outputs of the rnn for each series in the batch. It is possible to generate sequence_length in the model itself, knowing the padding symbol used by Dataset.padded_batch. This is unsatisfactory, however, as the padding symbol can be in the domain of the time series function, and thus, it is hard to know if you are looking at padding or real data.\nFeature request\nI suggest modifying Dataset.padded_batch in such a way that it can optionally return a sequence_length tensor as one of it's features, storing the true padding information. I think this would be very convenient for work with time series.", "body": "### System information\r\n- **Have I written custom code**: Yes\r\n- **OS Platform and Distribution**: MacOS High Sierra v10.13.3\r\n- **TensorFlow installed from (source or binary)**: pip\r\n- **TensorFlow version (use command below)**: 1.5.0\r\n- **Python version**: 3.6.4 :: Anaconda, Inc.\r\n- **Bazel version (if compiling from source)**: n/a\r\n- **GCC/Compiler version (if compiling from source)**: n/a\r\n- **CUDA/cuDNN version**: n/a\r\n- **GPU model and memory**: Intel Iris Pro 1536 MB\r\n- **Exact command to reproduce**: n/a\r\n\r\n### Describe the problem\r\nI am building a `tf.data.Dataset` that should return batches for model built around `tf.nn.dynamic_rnn`. The data consists of variable length time series, and i use `Dataset.padded_batch` to build batch tensors from these time series. When operating on variable length data, we want to pass a `sequence_length` tensor to `tf.nn.dynamic_rnn`. This tensor is also useful to extract the final valid outputs of the rnn for each series in the batch. It is possible to generate `sequence_length` in the model itself, knowing the padding symbol used by `Dataset.padded_batch`. This is unsatisfactory, however, as the padding symbol can be in the domain of the time series function, and thus, it is hard to know if you are looking at padding or real data.\r\n\r\n### Feature request\r\nI suggest modifying `Dataset.padded_batch` in such a way that it can optionally return a `sequence_length` tensor as one of it's features, storing the _true_ padding information. I think this would be very convenient for work with time series.\r\n"}