{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/413080412", "html_url": "https://github.com/tensorflow/tensorflow/issues/21555#issuecomment-413080412", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21555", "id": 413080412, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzA4MDQxMg==", "user": {"login": "Elch123", "id": 7143767, "node_id": "MDQ6VXNlcjcxNDM3Njc=", "avatar_url": "https://avatars2.githubusercontent.com/u/7143767?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Elch123", "html_url": "https://github.com/Elch123", "followers_url": "https://api.github.com/users/Elch123/followers", "following_url": "https://api.github.com/users/Elch123/following{/other_user}", "gists_url": "https://api.github.com/users/Elch123/gists{/gist_id}", "starred_url": "https://api.github.com/users/Elch123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Elch123/subscriptions", "organizations_url": "https://api.github.com/users/Elch123/orgs", "repos_url": "https://api.github.com/users/Elch123/repos", "events_url": "https://api.github.com/users/Elch123/events{/privacy}", "received_events_url": "https://api.github.com/users/Elch123/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-15T03:04:10Z", "updated_at": "2018-08-15T03:05:17Z", "author_association": "NONE", "body_html": "<p>Have I written custom code: Yes<br>\nOS Platform and Distribution: Linux<br>\nTensorFlow installed from: pip,<br>\nTensorFlow version: 1.8.0<br>\nBazel version: 0.11.1<br>\nCUDA/cuDNN version: 9.0<br>\nGPU model and memory: GTX 950 M<br>\nExact command to reproduce:N/A<br>\nMobile deviceN/A</p>\n<p>In tensorflows stop if no increase hook, <a href=\"https://www.tensorflow.org/api_docs/python/tf/contrib/estimator/stop_if_no_increase_hook\" rel=\"nofollow\">https://www.tensorflow.org/api_docs/python/tf/contrib/estimator/stop_if_no_increase_hook</a>, I find it gives inconsistent results. It currently works by stopping if loss hasn't decreased for a certain number of steps. If there is a single very low loss, then the training will stop too early. What I found worked better was to maintain a running average of the loss, with and stop if that didn't increase beyond a certain number of steps, because that also takes into account trends in the loss.</p>", "body_text": "Have I written custom code: Yes\nOS Platform and Distribution: Linux\nTensorFlow installed from: pip,\nTensorFlow version: 1.8.0\nBazel version: 0.11.1\nCUDA/cuDNN version: 9.0\nGPU model and memory: GTX 950 M\nExact command to reproduce:N/A\nMobile deviceN/A\nIn tensorflows stop if no increase hook, https://www.tensorflow.org/api_docs/python/tf/contrib/estimator/stop_if_no_increase_hook, I find it gives inconsistent results. It currently works by stopping if loss hasn't decreased for a certain number of steps. If there is a single very low loss, then the training will stop too early. What I found worked better was to maintain a running average of the loss, with and stop if that didn't increase beyond a certain number of steps, because that also takes into account trends in the loss.", "body": "Have I written custom code: Yes\r\nOS Platform and Distribution: Linux \r\nTensorFlow installed from: pip, \r\nTensorFlow version: 1.8.0\r\nBazel version: 0.11.1\r\nCUDA/cuDNN version: 9.0\r\nGPU model and memory: GTX 950 M\r\nExact command to reproduce:N/A\r\nMobile deviceN/A\r\n\r\nIn tensorflows stop if no increase hook, https://www.tensorflow.org/api_docs/python/tf/contrib/estimator/stop_if_no_increase_hook, I find it gives inconsistent results. It currently works by stopping if loss hasn't decreased for a certain number of steps. If there is a single very low loss, then the training will stop too early. What I found worked better was to maintain a running average of the loss, with and stop if that didn't increase beyond a certain number of steps, because that also takes into account trends in the loss. "}