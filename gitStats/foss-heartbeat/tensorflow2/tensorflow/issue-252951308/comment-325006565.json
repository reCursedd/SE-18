{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/325006565", "html_url": "https://github.com/tensorflow/tensorflow/issues/12601#issuecomment-325006565", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12601", "id": 325006565, "node_id": "MDEyOklzc3VlQ29tbWVudDMyNTAwNjU2NQ==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-25T18:47:32Z", "updated_at": "2017-08-25T18:47:32Z", "author_association": "CONTRIBUTOR", "body_html": "<p>One possible workaround is to build the mask yourself using a <code>map()</code>:</p>\n<pre><code>dataset = tf.contrib.data.Dataset.range(100)\ndataset = dataset.map(lambda x: tf.fill([tf.cast(x, tf.int32)], x))\n\ndef build_mask(x):\n  return tf.ones_like(x, dtype=tf.int32)\ndataset = dataset.map(lambda x: (x, build_mask(x)))\n\ndataset = dataset.padded_batch(4, padded_shapes=([None], [None]))\n\niterator = dataset.make_one_shot_iterator()\nnext_element = iterator.get_next()\n</code></pre>", "body_text": "One possible workaround is to build the mask yourself using a map():\ndataset = tf.contrib.data.Dataset.range(100)\ndataset = dataset.map(lambda x: tf.fill([tf.cast(x, tf.int32)], x))\n\ndef build_mask(x):\n  return tf.ones_like(x, dtype=tf.int32)\ndataset = dataset.map(lambda x: (x, build_mask(x)))\n\ndataset = dataset.padded_batch(4, padded_shapes=([None], [None]))\n\niterator = dataset.make_one_shot_iterator()\nnext_element = iterator.get_next()", "body": "One possible workaround is to build the mask yourself using a `map()`:\r\n\r\n```\r\ndataset = tf.contrib.data.Dataset.range(100)\r\ndataset = dataset.map(lambda x: tf.fill([tf.cast(x, tf.int32)], x))\r\n\r\ndef build_mask(x):\r\n  return tf.ones_like(x, dtype=tf.int32)\r\ndataset = dataset.map(lambda x: (x, build_mask(x)))\r\n\r\ndataset = dataset.padded_batch(4, padded_shapes=([None], [None]))\r\n\r\niterator = dataset.make_one_shot_iterator()\r\nnext_element = iterator.get_next()\r\n```\r\n\r\n"}