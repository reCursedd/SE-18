{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/305698651", "html_url": "https://github.com/tensorflow/tensorflow/issues/10270#issuecomment-305698651", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10270", "id": 305698651, "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTY5ODY1MQ==", "user": {"login": "KashiErez", "id": 8734262, "node_id": "MDQ6VXNlcjg3MzQyNjI=", "avatar_url": "https://avatars0.githubusercontent.com/u/8734262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KashiErez", "html_url": "https://github.com/KashiErez", "followers_url": "https://api.github.com/users/KashiErez/followers", "following_url": "https://api.github.com/users/KashiErez/following{/other_user}", "gists_url": "https://api.github.com/users/KashiErez/gists{/gist_id}", "starred_url": "https://api.github.com/users/KashiErez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KashiErez/subscriptions", "organizations_url": "https://api.github.com/users/KashiErez/orgs", "repos_url": "https://api.github.com/users/KashiErez/repos", "events_url": "https://api.github.com/users/KashiErez/events{/privacy}", "received_events_url": "https://api.github.com/users/KashiErez/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-02T06:10:06Z", "updated_at": "2017-06-02T06:10:46Z", "author_association": "NONE", "body_html": "<p>Regarding Question: <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=8734262\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/KashiErez\">@KashiErez</a>: One useful clarification would be how many indices are going into the UniqueOp, which should be equal to the number of embeddings that are accessed in each iteration (e.g. sentence length).</p>\n<p>Answer:</p>\n<p>The batch size is 1024.</p>\n<p>Regarding words:<br>\nThe sentence length is 21.<br>\nNumber if unique words ~ 100K</p>\n<p>But We have another categorical feature that has only one value in each iteration.<br>\nAnd the number of unique values is ~ 300K.</p>\n<p>From the trace you can see that this categorical feature 'unique op' is running much slower then the word embedding 'unique op'.</p>\n<p>So I think that the parameter you should look at first is 'number of unique values' (== lookup table size).</p>", "body_text": "Regarding Question: @KashiErez: One useful clarification would be how many indices are going into the UniqueOp, which should be equal to the number of embeddings that are accessed in each iteration (e.g. sentence length).\nAnswer:\nThe batch size is 1024.\nRegarding words:\nThe sentence length is 21.\nNumber if unique words ~ 100K\nBut We have another categorical feature that has only one value in each iteration.\nAnd the number of unique values is ~ 300K.\nFrom the trace you can see that this categorical feature 'unique op' is running much slower then the word embedding 'unique op'.\nSo I think that the parameter you should look at first is 'number of unique values' (== lookup table size).", "body": "Regarding Question: @KashiErez: One useful clarification would be how many indices are going into the UniqueOp, which should be equal to the number of embeddings that are accessed in each iteration (e.g. sentence length).\r\n\r\nAnswer:\r\n\r\nThe batch size is 1024. \r\n\r\nRegarding words:\r\nThe sentence length is 21. \r\nNumber if unique words ~ 100K\r\n\r\nBut We have another categorical feature that has only one value in each iteration.\r\nAnd the number of unique values is ~ 300K.\r\n\r\nFrom the trace you can see that this categorical feature 'unique op' is running much slower then the word embedding 'unique op'.\r\n \r\nSo I think that the parameter you should look at first is 'number of unique values' (== lookup table size)."}