{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/267434257", "html_url": "https://github.com/tensorflow/tensorflow/issues/4536#issuecomment-267434257", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4536", "id": 267434257, "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzQzNDI1Nw==", "user": {"login": "carlthome", "id": 1595907, "node_id": "MDQ6VXNlcjE1OTU5MDc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1595907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlthome", "html_url": "https://github.com/carlthome", "followers_url": "https://api.github.com/users/carlthome/followers", "following_url": "https://api.github.com/users/carlthome/following{/other_user}", "gists_url": "https://api.github.com/users/carlthome/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlthome/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlthome/subscriptions", "organizations_url": "https://api.github.com/users/carlthome/orgs", "repos_url": "https://api.github.com/users/carlthome/repos", "events_url": "https://api.github.com/users/carlthome/events{/privacy}", "received_events_url": "https://api.github.com/users/carlthome/received_events", "type": "User", "site_admin": false}, "created_at": "2016-12-15T20:24:25Z", "updated_at": "2016-12-15T20:24:25Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=172688\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/davek44\">@davek44</a>, it's mostly applicable to seq2seq where you only want the final RNN output from the encoder, but it's hard to say really, because a ConvLSTM also has convolutions for the hidden states, which you're missing by sequentially applying a conv3d and then a RNN.</p>", "body_text": "@davek44, it's mostly applicable to seq2seq where you only want the final RNN output from the encoder, but it's hard to say really, because a ConvLSTM also has convolutions for the hidden states, which you're missing by sequentially applying a conv3d and then a RNN.", "body": "@davek44, it's mostly applicable to seq2seq where you only want the final RNN output from the encoder, but it's hard to say really, because a ConvLSTM also has convolutions for the hidden states, which you're missing by sequentially applying a conv3d and then a RNN."}