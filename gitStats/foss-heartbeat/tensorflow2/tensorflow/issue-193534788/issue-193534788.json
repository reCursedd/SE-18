{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6087", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6087/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6087/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6087/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/6087", "id": 193534788, "node_id": "MDU6SXNzdWUxOTM1MzQ3ODg=", "number": 6087, "title": "control_dependencies throw Frame error when used in while_loop", "user": {"login": "gongbudaizhe", "id": 5178646, "node_id": "MDQ6VXNlcjUxNzg2NDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/5178646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gongbudaizhe", "html_url": "https://github.com/gongbudaizhe", "followers_url": "https://api.github.com/users/gongbudaizhe/followers", "following_url": "https://api.github.com/users/gongbudaizhe/following{/other_user}", "gists_url": "https://api.github.com/users/gongbudaizhe/gists{/gist_id}", "starred_url": "https://api.github.com/users/gongbudaizhe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gongbudaizhe/subscriptions", "organizations_url": "https://api.github.com/users/gongbudaizhe/orgs", "repos_url": "https://api.github.com/users/gongbudaizhe/repos", "events_url": "https://api.github.com/users/gongbudaizhe/events{/privacy}", "received_events_url": "https://api.github.com/users/gongbudaizhe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2016-12-05T15:52:45Z", "updated_at": "2018-04-26T12:53:55Z", "closed_at": "2017-02-17T05:09:49Z", "author_association": "NONE", "body_html": "<p>Hello,</p>\n<h3>Problem description</h3>\n<p>I need to put InceptionV3 in a while loop to save both GPU and CPU memory usage since I am handling videos, each contains hundreds of images. The problem is, InceptionV3 uses <code>control_dependencies</code> for BatchNorm and TensorFlow throws Frame Error if   <code>control_dependencies</code> function is in the <code>while_loop</code>. It can run without errors if <code>control_dependencies</code> is removed though.</p>\n<p>Below is a minimal snippet that reproduces the error:</p>\n<div class=\"highlight highlight-source-python\"><pre>sess <span class=\"pl-k\">=</span> tf.Session()\n\n<span class=\"pl-k\">with</span> tf.variable_scope(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>state<span class=\"pl-pds\">'</span></span>):\n    x <span class=\"pl-k\">=</span> tf.get_variable(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>x<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>(), \n                             <span class=\"pl-v\">initializer</span><span class=\"pl-k\">=</span>tf.constant_initializer(<span class=\"pl-c1\">1</span>), \n                             <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.float32)\n    update_x <span class=\"pl-k\">=</span> tf.assign(x, x<span class=\"pl-k\">+</span><span class=\"pl-c1\">1</span>)\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">iter_fun</span>(<span class=\"pl-smi\">i</span>, <span class=\"pl-smi\">y</span>):\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> comment the line below, the program will run without any error</span>\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> but I need control_dependencies, or at least some way to replace it...</span>\n    <span class=\"pl-k\">with</span> tf.control_dependencies([update_x]): \n        y <span class=\"pl-k\">=</span> y <span class=\"pl-k\">+</span> x\n    <span class=\"pl-k\">return</span> (i<span class=\"pl-k\">+</span><span class=\"pl-c1\">1</span>, y)\n\n<span class=\"pl-k\">with</span> tf.variable_scope(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>iteration<span class=\"pl-pds\">'</span></span>):\n    num_iterations <span class=\"pl-k\">=</span> <span class=\"pl-c1\">5</span>   \n    initial_i <span class=\"pl-k\">=</span> tf.constant(<span class=\"pl-c1\">0</span>, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.int32)\n    initial_y <span class=\"pl-k\">=</span> tf.constant(<span class=\"pl-c1\">0</span>, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.float32)\n    _, result <span class=\"pl-k\">=</span> tf.while_loop(\n        <span class=\"pl-v\">cond</span><span class=\"pl-k\">=</span><span class=\"pl-k\">lambda</span> <span class=\"pl-smi\">i</span>, <span class=\"pl-k\">*</span><span class=\"pl-smi\">_</span>: i <span class=\"pl-k\">&lt;</span> num_iterations,\n        <span class=\"pl-v\">body</span><span class=\"pl-k\">=</span>iter_fun,\n        <span class=\"pl-v\">loop_vars</span><span class=\"pl-k\">=</span>(initial_i, initial_y))\n\ninit_op <span class=\"pl-k\">=</span> tf.global_variables_initializer()\nsess.run(init_op)\nsess.run(result)  </pre></div>\n<p>The stack trace of the error:</p>\n<pre><code>Traceback (most recent call last):\n  File \"demo.py\", line 28, in &lt;module&gt;\n    sess.run(result)\n  File \"/workspace/bily/anoaconda2/envs/tensorflow0.12/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 766, in run\n    run_metadata_ptr)\n  File \"/workspace/bily/anoaconda2/envs/tensorflow0.12/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 964, in _run\n    feed_dict_string, options, run_metadata)\n  File \"/workspace/bily/anoaconda2/envs/tensorflow0.12/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 1014, in _do_run\n    target_list, options, run_metadata)\n  File \"/workspace/bily/anoaconda2/envs/tensorflow0.12/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 1034, in _do_call\n    raise type(e)(node_def, op, message)\ntensorflow.python.framework.errors_impl.InvalidArgumentError: The node 'iteration/while/add' has inputs from different frames. The input 'iteration/while/add/Enter' is in frame 'iteration/while/iteration/while/'. The input 'state/Assign' is in frame ''.\n</code></pre>\n<h3>Environments</h3>\n<ul>\n<li>CentOS Linux release 7.2.1511</li>\n<li>TensorFlow 0.12 built from source</li>\n<li>Python 2.7.12</li>\n<li>CUDA 7.5 and CUDNN v5.1</li>\n</ul>\n<h3>Related issues</h3>\n<ol>\n<li><a href=\"https://github.com/tflearn/tflearn/issues/427\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tflearn/tflearn/issues/427/hovercard\">This issue in tflearn</a> seems to be related to my problem but removing <code>control_denpendencies</code> isn't a solution for me.</li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"177918258\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/4478\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/4478/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/4478\">#4478</a> and <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"163042317\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/3114\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/3114/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/3114\">#3114</a> are issues about frame errors but these errors are caused by variables instead of <code>control_dependencies</code>.</li>\n</ol>\n<p>Any help will be appreciated : )</p>", "body_text": "Hello,\nProblem description\nI need to put InceptionV3 in a while loop to save both GPU and CPU memory usage since I am handling videos, each contains hundreds of images. The problem is, InceptionV3 uses control_dependencies for BatchNorm and TensorFlow throws Frame Error if   control_dependencies function is in the while_loop. It can run without errors if control_dependencies is removed though.\nBelow is a minimal snippet that reproduces the error:\nsess = tf.Session()\n\nwith tf.variable_scope('state'):\n    x = tf.get_variable('x', shape=(), \n                             initializer=tf.constant_initializer(1), \n                             dtype=tf.float32)\n    update_x = tf.assign(x, x+1)\n\ndef iter_fun(i, y):\n    # comment the line below, the program will run without any error\n    # but I need control_dependencies, or at least some way to replace it...\n    with tf.control_dependencies([update_x]): \n        y = y + x\n    return (i+1, y)\n\nwith tf.variable_scope('iteration'):\n    num_iterations = 5   \n    initial_i = tf.constant(0, dtype=tf.int32)\n    initial_y = tf.constant(0, dtype=tf.float32)\n    _, result = tf.while_loop(\n        cond=lambda i, *_: i < num_iterations,\n        body=iter_fun,\n        loop_vars=(initial_i, initial_y))\n\ninit_op = tf.global_variables_initializer()\nsess.run(init_op)\nsess.run(result)  \nThe stack trace of the error:\nTraceback (most recent call last):\n  File \"demo.py\", line 28, in <module>\n    sess.run(result)\n  File \"/workspace/bily/anoaconda2/envs/tensorflow0.12/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 766, in run\n    run_metadata_ptr)\n  File \"/workspace/bily/anoaconda2/envs/tensorflow0.12/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 964, in _run\n    feed_dict_string, options, run_metadata)\n  File \"/workspace/bily/anoaconda2/envs/tensorflow0.12/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 1014, in _do_run\n    target_list, options, run_metadata)\n  File \"/workspace/bily/anoaconda2/envs/tensorflow0.12/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 1034, in _do_call\n    raise type(e)(node_def, op, message)\ntensorflow.python.framework.errors_impl.InvalidArgumentError: The node 'iteration/while/add' has inputs from different frames. The input 'iteration/while/add/Enter' is in frame 'iteration/while/iteration/while/'. The input 'state/Assign' is in frame ''.\n\nEnvironments\n\nCentOS Linux release 7.2.1511\nTensorFlow 0.12 built from source\nPython 2.7.12\nCUDA 7.5 and CUDNN v5.1\n\nRelated issues\n\nThis issue in tflearn seems to be related to my problem but removing control_denpendencies isn't a solution for me.\n#4478 and #3114 are issues about frame errors but these errors are caused by variables instead of control_dependencies.\n\nAny help will be appreciated : )", "body": "Hello,\r\n\r\n### Problem description\r\nI need to put InceptionV3 in a while loop to save both GPU and CPU memory usage since I am handling videos, each contains hundreds of images. The problem is, InceptionV3 uses `control_dependencies` for BatchNorm and TensorFlow throws Frame Error if   `control_dependencies` function is in the `while_loop`. It can run without errors if `control_dependencies` is removed though. \r\n\r\nBelow is a minimal snippet that reproduces the error:\r\n\r\n```python\r\nsess = tf.Session()\r\n\r\nwith tf.variable_scope('state'):\r\n    x = tf.get_variable('x', shape=(), \r\n                             initializer=tf.constant_initializer(1), \r\n                             dtype=tf.float32)\r\n    update_x = tf.assign(x, x+1)\r\n\r\ndef iter_fun(i, y):\r\n    # comment the line below, the program will run without any error\r\n    # but I need control_dependencies, or at least some way to replace it...\r\n    with tf.control_dependencies([update_x]): \r\n        y = y + x\r\n    return (i+1, y)\r\n\r\nwith tf.variable_scope('iteration'):\r\n    num_iterations = 5   \r\n    initial_i = tf.constant(0, dtype=tf.int32)\r\n    initial_y = tf.constant(0, dtype=tf.float32)\r\n    _, result = tf.while_loop(\r\n        cond=lambda i, *_: i < num_iterations,\r\n        body=iter_fun,\r\n        loop_vars=(initial_i, initial_y))\r\n\r\ninit_op = tf.global_variables_initializer()\r\nsess.run(init_op)\r\nsess.run(result)  \r\n``` \r\n\r\nThe stack trace of the error:\r\n```\r\nTraceback (most recent call last):\r\n  File \"demo.py\", line 28, in <module>\r\n    sess.run(result)\r\n  File \"/workspace/bily/anoaconda2/envs/tensorflow0.12/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 766, in run\r\n    run_metadata_ptr)\r\n  File \"/workspace/bily/anoaconda2/envs/tensorflow0.12/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 964, in _run\r\n    feed_dict_string, options, run_metadata)\r\n  File \"/workspace/bily/anoaconda2/envs/tensorflow0.12/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 1014, in _do_run\r\n    target_list, options, run_metadata)\r\n  File \"/workspace/bily/anoaconda2/envs/tensorflow0.12/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 1034, in _do_call\r\n    raise type(e)(node_def, op, message)\r\ntensorflow.python.framework.errors_impl.InvalidArgumentError: The node 'iteration/while/add' has inputs from different frames. The input 'iteration/while/add/Enter' is in frame 'iteration/while/iteration/while/'. The input 'state/Assign' is in frame ''.\r\n```\r\n### Environments\r\n- CentOS Linux release 7.2.1511\r\n- TensorFlow 0.12 built from source\r\n- Python 2.7.12\r\n- CUDA 7.5 and CUDNN v5.1\r\n\r\n### Related issues\r\n1. [This issue in tflearn](https://github.com/tflearn/tflearn/issues/427) seems to be related to my problem but removing `control_denpendencies` isn't a solution for me. \r\n2. #4478 and #3114 are issues about frame errors but these errors are caused by variables instead of `control_dependencies`.\r\n\r\nAny help will be appreciated : )"}