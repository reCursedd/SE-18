{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2125", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2125/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2125/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2125/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/2125", "id": 151321522, "node_id": "MDU6SXNzdWUxNTEzMjE1MjI=", "number": 2125, "title": "Taking gradient of tf.cond(..., tf.nn.dyamic_rnn(...)) raises exception", "user": {"login": "rshin", "id": 13770, "node_id": "MDQ6VXNlcjEzNzcw", "avatar_url": "https://avatars0.githubusercontent.com/u/13770?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rshin", "html_url": "https://github.com/rshin", "followers_url": "https://api.github.com/users/rshin/followers", "following_url": "https://api.github.com/users/rshin/following{/other_user}", "gists_url": "https://api.github.com/users/rshin/gists{/gist_id}", "starred_url": "https://api.github.com/users/rshin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rshin/subscriptions", "organizations_url": "https://api.github.com/users/rshin/orgs", "repos_url": "https://api.github.com/users/rshin/repos", "events_url": "https://api.github.com/users/rshin/events{/privacy}", "received_events_url": "https://api.github.com/users/rshin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "yuanbyu", "id": 2342391, "node_id": "MDQ6VXNlcjIzNDIzOTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/2342391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuanbyu", "html_url": "https://github.com/yuanbyu", "followers_url": "https://api.github.com/users/yuanbyu/followers", "following_url": "https://api.github.com/users/yuanbyu/following{/other_user}", "gists_url": "https://api.github.com/users/yuanbyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuanbyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuanbyu/subscriptions", "organizations_url": "https://api.github.com/users/yuanbyu/orgs", "repos_url": "https://api.github.com/users/yuanbyu/repos", "events_url": "https://api.github.com/users/yuanbyu/events{/privacy}", "received_events_url": "https://api.github.com/users/yuanbyu/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "yuanbyu", "id": 2342391, "node_id": "MDQ6VXNlcjIzNDIzOTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/2342391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuanbyu", "html_url": "https://github.com/yuanbyu", "followers_url": "https://api.github.com/users/yuanbyu/followers", "following_url": "https://api.github.com/users/yuanbyu/following{/other_user}", "gists_url": "https://api.github.com/users/yuanbyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuanbyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuanbyu/subscriptions", "organizations_url": "https://api.github.com/users/yuanbyu/orgs", "repos_url": "https://api.github.com/users/yuanbyu/repos", "events_url": "https://api.github.com/users/yuanbyu/events{/privacy}", "received_events_url": "https://api.github.com/users/yuanbyu/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2016-04-27T07:56:51Z", "updated_at": "2016-12-11T00:21:56Z", "closed_at": "2016-12-11T00:21:56Z", "author_association": "CONTRIBUTOR", "body_html": "<h3>Environment info</h3>\n<p>Operating System: Ubuntu 15.10</p>\n<p>Installed version of CUDA and cuDNN:</p>\n<pre><code>-rw-r--r-- 1 root root    322936 Aug 15  2015 /usr/local/cuda/lib64/libcudadevrt.a\nlrwxrwxrwx 1 root root        16 Aug 15  2015 /usr/local/cuda/lib64/libcudart.so -&gt; libcudart.so.7.5\nlrwxrwxrwx 1 root root        19 Aug 15  2015 /usr/local/cuda/lib64/libcudart.so.7.5 -&gt; libcudart.so.7.5.18\n-rwxr-xr-x 1 root root    383336 Aug 15  2015 /usr/local/cuda/lib64/libcudart.so.7.5.18\n-rw-r--r-- 1 root root    720192 Aug 15  2015 /usr/local/cuda/lib64/libcudart_static.a\nlrwxrwxrwx 1 3319 users       13 Feb  9 09:48 /usr/local/cuda/lib64/libcudnn.so -&gt; libcudnn.so.4\nlrwxrwxrwx 1 3319 users       17 Feb  9 09:48 /usr/local/cuda/lib64/libcudnn.so.4 -&gt; libcudnn.so.4.0.7\n-rwxrwxr-x 1 3319 users 61453024 Feb  8 14:12 /usr/local/cuda/lib64/libcudnn.so.4.0.7\n-rw-rw-r-- 1 3319 users 62025862 Feb  8 14:12 /usr/local/cuda/lib64/libcudnn_static.a\n</code></pre>\n<p>Commit hash: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/8d310bfcffcd46418d68dd535fb0fbcfee74b8a0/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/8d310bfcffcd46418d68dd535fb0fbcfee74b8a0\"><tt>8d310bf</tt></a></p>\n<h3>Steps to reproduce</h3>\n<p>Run the following test case:</p>\n<pre><code>import tensorflow as tf\n\nout = tf.cond(tf.constant(False),\n        lambda: tf.nn.dynamic_rnn(tf.nn.rnn_cell.BasicRNNCell(1),\n            tf.zeros((1, 1, 1)),\n            dtype=tf.float32)[1],\n        lambda: tf.zeros((1, 1, 1))\n)\n\ntvars = tf.trainable_variables()\ngrads = tf.gradients(tf.reduce_sum(out), tvars)\n</code></pre>\n<p>The above gives the following traceback:</p>\n<pre><code>Traceback (most recent call last):\n  File \"cond_rnn_bug.py\", line 11, in &lt;module&gt;\n    grads = tf.gradients(tf.reduce_sum(out), tvars)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gradients.py\", line 481, in gradients\n    in_grads = _AsList(grad_fn(op, *out_grads))\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/math_grad.py\", line 254, in _TanhGrad\n    return grad * (1 - math_ops.square(y))\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gen_math_ops.py\", line 1655, in square\n    return _op_def_lib.apply_op(\"Square\", x=x, name=name)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/op_def_library.py\", line 694, in apply_op\n    op_def=op_def)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 2153, in create_op\n    original_op=self._default_original_op, op_def=op_def)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 1157, in __init__\n    self._control_flow_context.AddOp(self)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/control_flow_ops.py\", line 1330, in AddOp\n    self._AddOpInternal(op)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/control_flow_ops.py\", line 1352, in _AddOpInternal\n    self.AddValue(x)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/control_flow_ops.py\", line 1288, in AddValue\n    real_val = grad_ctxt.grad_state.GetRealValue(val)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/control_flow_ops.py\", line 662, in GetRealValue\n    real_value = self.AddBackPropAccumulatedValue(h_value, value)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/control_flow_ops.py\", line 612, in AddBackPropAccumulatedValue\n    history_value = _SwitchRefOrTensor(history_value, pred)[branch]\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/control_flow_ops.py\", line 306, in _SwitchRefOrTensor\n    return ref_switch(data, pred, name=name)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gen_control_flow_ops.py\", line 275, in ref_switch\n    return _op_def_lib.apply_op(\"RefSwitch\", data=data, pred=pred, name=name)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/op_def_library.py\", line 449, in apply_op\n    as_ref=input_arg.is_ref).dtype.name\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 565, in convert_to_tensor\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/constant_op.py\", line 179, in _constant_tensor_conversion_function\n    return constant(v, dtype=dtype, name=name)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/constant_op.py\", line 162, in constant\n    tensor_util.make_tensor_proto(value, dtype=dtype, shape=shape))\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/tensor_util.py\", line 336, in make_tensor_proto\n    raise ValueError(\"None values not supported.\")\nValueError: None values not supported.\n</code></pre>\n<h3>What have you tried?</h3>\n<p>Running tf.nn.dynamic_rnn outside the lambda works, but my understanding is that the two are not semantically equivalent (although I'm not sure exactly in which ways).</p>\n<p>That is, the following works:</p>\n<pre><code>import tensorflow as tf\n\nrnn_out = tf.nn.dynamic_rnn(tf.nn.rnn_cell.BasicRNNCell(1),\n            tf.zeros((1, 1, 1)),\n            dtype=tf.float32)[1]\nout = tf.cond(tf.constant(False),\n        lambda: rnn_out,\n        lambda: tf.zeros((1, 1, 1))\n)\n\ntvars = tf.trainable_variables()\ngrads = tf.gradients(tf.reduce_sum(out), tvars)\n</code></pre>", "body_text": "Environment info\nOperating System: Ubuntu 15.10\nInstalled version of CUDA and cuDNN:\n-rw-r--r-- 1 root root    322936 Aug 15  2015 /usr/local/cuda/lib64/libcudadevrt.a\nlrwxrwxrwx 1 root root        16 Aug 15  2015 /usr/local/cuda/lib64/libcudart.so -> libcudart.so.7.5\nlrwxrwxrwx 1 root root        19 Aug 15  2015 /usr/local/cuda/lib64/libcudart.so.7.5 -> libcudart.so.7.5.18\n-rwxr-xr-x 1 root root    383336 Aug 15  2015 /usr/local/cuda/lib64/libcudart.so.7.5.18\n-rw-r--r-- 1 root root    720192 Aug 15  2015 /usr/local/cuda/lib64/libcudart_static.a\nlrwxrwxrwx 1 3319 users       13 Feb  9 09:48 /usr/local/cuda/lib64/libcudnn.so -> libcudnn.so.4\nlrwxrwxrwx 1 3319 users       17 Feb  9 09:48 /usr/local/cuda/lib64/libcudnn.so.4 -> libcudnn.so.4.0.7\n-rwxrwxr-x 1 3319 users 61453024 Feb  8 14:12 /usr/local/cuda/lib64/libcudnn.so.4.0.7\n-rw-rw-r-- 1 3319 users 62025862 Feb  8 14:12 /usr/local/cuda/lib64/libcudnn_static.a\n\nCommit hash: 8d310bf\nSteps to reproduce\nRun the following test case:\nimport tensorflow as tf\n\nout = tf.cond(tf.constant(False),\n        lambda: tf.nn.dynamic_rnn(tf.nn.rnn_cell.BasicRNNCell(1),\n            tf.zeros((1, 1, 1)),\n            dtype=tf.float32)[1],\n        lambda: tf.zeros((1, 1, 1))\n)\n\ntvars = tf.trainable_variables()\ngrads = tf.gradients(tf.reduce_sum(out), tvars)\n\nThe above gives the following traceback:\nTraceback (most recent call last):\n  File \"cond_rnn_bug.py\", line 11, in <module>\n    grads = tf.gradients(tf.reduce_sum(out), tvars)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gradients.py\", line 481, in gradients\n    in_grads = _AsList(grad_fn(op, *out_grads))\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/math_grad.py\", line 254, in _TanhGrad\n    return grad * (1 - math_ops.square(y))\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gen_math_ops.py\", line 1655, in square\n    return _op_def_lib.apply_op(\"Square\", x=x, name=name)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/op_def_library.py\", line 694, in apply_op\n    op_def=op_def)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 2153, in create_op\n    original_op=self._default_original_op, op_def=op_def)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 1157, in __init__\n    self._control_flow_context.AddOp(self)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/control_flow_ops.py\", line 1330, in AddOp\n    self._AddOpInternal(op)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/control_flow_ops.py\", line 1352, in _AddOpInternal\n    self.AddValue(x)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/control_flow_ops.py\", line 1288, in AddValue\n    real_val = grad_ctxt.grad_state.GetRealValue(val)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/control_flow_ops.py\", line 662, in GetRealValue\n    real_value = self.AddBackPropAccumulatedValue(h_value, value)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/control_flow_ops.py\", line 612, in AddBackPropAccumulatedValue\n    history_value = _SwitchRefOrTensor(history_value, pred)[branch]\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/control_flow_ops.py\", line 306, in _SwitchRefOrTensor\n    return ref_switch(data, pred, name=name)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gen_control_flow_ops.py\", line 275, in ref_switch\n    return _op_def_lib.apply_op(\"RefSwitch\", data=data, pred=pred, name=name)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/op_def_library.py\", line 449, in apply_op\n    as_ref=input_arg.is_ref).dtype.name\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 565, in convert_to_tensor\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/constant_op.py\", line 179, in _constant_tensor_conversion_function\n    return constant(v, dtype=dtype, name=name)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/constant_op.py\", line 162, in constant\n    tensor_util.make_tensor_proto(value, dtype=dtype, shape=shape))\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/tensor_util.py\", line 336, in make_tensor_proto\n    raise ValueError(\"None values not supported.\")\nValueError: None values not supported.\n\nWhat have you tried?\nRunning tf.nn.dynamic_rnn outside the lambda works, but my understanding is that the two are not semantically equivalent (although I'm not sure exactly in which ways).\nThat is, the following works:\nimport tensorflow as tf\n\nrnn_out = tf.nn.dynamic_rnn(tf.nn.rnn_cell.BasicRNNCell(1),\n            tf.zeros((1, 1, 1)),\n            dtype=tf.float32)[1]\nout = tf.cond(tf.constant(False),\n        lambda: rnn_out,\n        lambda: tf.zeros((1, 1, 1))\n)\n\ntvars = tf.trainable_variables()\ngrads = tf.gradients(tf.reduce_sum(out), tvars)", "body": "### Environment info\n\nOperating System: Ubuntu 15.10\n\nInstalled version of CUDA and cuDNN: \n\n```\n-rw-r--r-- 1 root root    322936 Aug 15  2015 /usr/local/cuda/lib64/libcudadevrt.a\nlrwxrwxrwx 1 root root        16 Aug 15  2015 /usr/local/cuda/lib64/libcudart.so -> libcudart.so.7.5\nlrwxrwxrwx 1 root root        19 Aug 15  2015 /usr/local/cuda/lib64/libcudart.so.7.5 -> libcudart.so.7.5.18\n-rwxr-xr-x 1 root root    383336 Aug 15  2015 /usr/local/cuda/lib64/libcudart.so.7.5.18\n-rw-r--r-- 1 root root    720192 Aug 15  2015 /usr/local/cuda/lib64/libcudart_static.a\nlrwxrwxrwx 1 3319 users       13 Feb  9 09:48 /usr/local/cuda/lib64/libcudnn.so -> libcudnn.so.4\nlrwxrwxrwx 1 3319 users       17 Feb  9 09:48 /usr/local/cuda/lib64/libcudnn.so.4 -> libcudnn.so.4.0.7\n-rwxrwxr-x 1 3319 users 61453024 Feb  8 14:12 /usr/local/cuda/lib64/libcudnn.so.4.0.7\n-rw-rw-r-- 1 3319 users 62025862 Feb  8 14:12 /usr/local/cuda/lib64/libcudnn_static.a\n```\n\nCommit hash: 8d310bfcffcd46418d68dd535fb0fbcfee74b8a0\n### Steps to reproduce\n\nRun the following test case:\n\n```\nimport tensorflow as tf\n\nout = tf.cond(tf.constant(False),\n        lambda: tf.nn.dynamic_rnn(tf.nn.rnn_cell.BasicRNNCell(1),\n            tf.zeros((1, 1, 1)),\n            dtype=tf.float32)[1],\n        lambda: tf.zeros((1, 1, 1))\n)\n\ntvars = tf.trainable_variables()\ngrads = tf.gradients(tf.reduce_sum(out), tvars)\n```\n\nThe above gives the following traceback:\n\n```\nTraceback (most recent call last):\n  File \"cond_rnn_bug.py\", line 11, in <module>\n    grads = tf.gradients(tf.reduce_sum(out), tvars)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gradients.py\", line 481, in gradients\n    in_grads = _AsList(grad_fn(op, *out_grads))\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/math_grad.py\", line 254, in _TanhGrad\n    return grad * (1 - math_ops.square(y))\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gen_math_ops.py\", line 1655, in square\n    return _op_def_lib.apply_op(\"Square\", x=x, name=name)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/op_def_library.py\", line 694, in apply_op\n    op_def=op_def)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 2153, in create_op\n    original_op=self._default_original_op, op_def=op_def)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 1157, in __init__\n    self._control_flow_context.AddOp(self)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/control_flow_ops.py\", line 1330, in AddOp\n    self._AddOpInternal(op)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/control_flow_ops.py\", line 1352, in _AddOpInternal\n    self.AddValue(x)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/control_flow_ops.py\", line 1288, in AddValue\n    real_val = grad_ctxt.grad_state.GetRealValue(val)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/control_flow_ops.py\", line 662, in GetRealValue\n    real_value = self.AddBackPropAccumulatedValue(h_value, value)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/control_flow_ops.py\", line 612, in AddBackPropAccumulatedValue\n    history_value = _SwitchRefOrTensor(history_value, pred)[branch]\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/control_flow_ops.py\", line 306, in _SwitchRefOrTensor\n    return ref_switch(data, pred, name=name)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gen_control_flow_ops.py\", line 275, in ref_switch\n    return _op_def_lib.apply_op(\"RefSwitch\", data=data, pred=pred, name=name)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/op_def_library.py\", line 449, in apply_op\n    as_ref=input_arg.is_ref).dtype.name\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 565, in convert_to_tensor\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/constant_op.py\", line 179, in _constant_tensor_conversion_function\n    return constant(v, dtype=dtype, name=name)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/constant_op.py\", line 162, in constant\n    tensor_util.make_tensor_proto(value, dtype=dtype, shape=shape))\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/tensor_util.py\", line 336, in make_tensor_proto\n    raise ValueError(\"None values not supported.\")\nValueError: None values not supported.\n```\n### What have you tried?\n\nRunning tf.nn.dynamic_rnn outside the lambda works, but my understanding is that the two are not semantically equivalent (although I'm not sure exactly in which ways).\n\nThat is, the following works:\n\n```\nimport tensorflow as tf\n\nrnn_out = tf.nn.dynamic_rnn(tf.nn.rnn_cell.BasicRNNCell(1),\n            tf.zeros((1, 1, 1)),\n            dtype=tf.float32)[1]\nout = tf.cond(tf.constant(False),\n        lambda: rnn_out,\n        lambda: tf.zeros((1, 1, 1))\n)\n\ntvars = tf.trainable_variables()\ngrads = tf.gradients(tf.reduce_sum(out), tvars)\n```\n"}