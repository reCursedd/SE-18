{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18841", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18841/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18841/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18841/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18841", "id": 317403817, "node_id": "MDU6SXNzdWUzMTc0MDM4MTc=", "number": 18841, "title": "tensorflow/compiler/xla/statusor.h not included in installation, but required for compiling custom TensorFlow operators", "user": {"login": "naibaf7", "id": 5577650, "node_id": "MDQ6VXNlcjU1Nzc2NTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/5577650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/naibaf7", "html_url": "https://github.com/naibaf7", "followers_url": "https://api.github.com/users/naibaf7/followers", "following_url": "https://api.github.com/users/naibaf7/following{/other_user}", "gists_url": "https://api.github.com/users/naibaf7/gists{/gist_id}", "starred_url": "https://api.github.com/users/naibaf7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/naibaf7/subscriptions", "organizations_url": "https://api.github.com/users/naibaf7/orgs", "repos_url": "https://api.github.com/users/naibaf7/repos", "events_url": "https://api.github.com/users/naibaf7/events{/privacy}", "received_events_url": "https://api.github.com/users/naibaf7/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 14, "created_at": "2018-04-24T21:35:08Z", "updated_at": "2018-07-09T05:31:08Z", "closed_at": "2018-07-06T23:56:04Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Fedora 27</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: Source</li>\n<li><strong>TensorFlow version (use command below)</strong>: v1.8.0-rc1-909-g968addadfd 1.8.0-rc1</li>\n<li><strong>Python version</strong>: 3.6m</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.12.0</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: 6.4</li>\n<li><strong>CUDA/cuDNN version</strong>: 9.1/7.1</li>\n<li><strong>GPU model and memory</strong>: GTX 1080 8GB</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<pre><code>include Makefile.config\nTF_INC = `$(PYTHON) -W ignore -c 'import tensorflow as tf; print(tf.sysconfig.get_include())'`\nTF_CFLAGS = `$(PYTHON) -W ignore -c 'import tensorflow as tf; print(\" \".join(tf.sysconfig.get_compile_flags()))'`\nTF_LFLAGS = `$(PYTHON) -W ignore -c 'import tensorflow as tf; print(\" \".join(tf.sysconfig.get_link_flags()))'`\nCUDA_INC = $(CUDA_HOME)/../\nGPUCC     = nvcc -ccbin=$(CXX)\nCFLAGS    = -std=c++11 $(TF_CFLAGS) -I. -I$(CUDA_INC) -I$(TF_INC)\nGPUCFLAGS = -c\nLFLAGS    = $(ODFLAGS) -pthread -fopenmp -shared -fPIC $(TF_LFLAGS)\nGPULFLAGS = -x cu -Xcompiler \"$(CFLAGS) $(LFLAGS)\" --expt-relaxed-constexpr\nGPUDEF    = -DGOOGLE_CUDA=1\nCGPUFLAGS = -lcuda\nSRC       = cart_hex_interpol.cc\nGPUSRC    = cart_hex_interpol.cu.cc\nSRC_O\t  = cart_hex_interpol.o\nGPUSRC_O  = cart_hex_interpol.cu.o\nLIB       = cart_hex_interpol.so\nall: gpu\ndefault: gpu\ncpu:\n\t$(CXX) $(CFLAGS) $(SRC) $(LFLAGS) -o $(LIB)\ngpu:\n\t$(GPUCC) $(GPUDEF) $(CFLAGS) $(GPUCFLAGS) $(GPUSRC) $(GPULFLAGS) -o $(GPUSRC_O)\n\t$(CXX) $(GPUDEF) $(CFLAGS) $(SRC) $(GPUSRC_O) $(LFLAGS) $(CGPUFLAGS)  -o $(LIB)\nclean:\n\trm -f $(SRC_O) $(GPUSRC_O) $(LIB)\n</code></pre>\n<h3>Describe the problem</h3>\n<p>When compiling a custom TensorFlow operator using a Makefile and including CUDA/GPU code, the compilation fails due to missing <code>fatal error: tensorflow/compiler/xla/statusor.h: No such file or directory</code>. The files are missing in <code>/usr/local/lib/python3.6/site-packages/tensorflow/</code> because the headers do not get installed during installation of the wheel package for TensorFlow.<br>\nA temporary fix is to copy the headers from source:</p>\n<pre><code>sudo mkdir /usr/local/lib/python3.6/site-packages/tensorflow/include/tensorflow/compiler/\nsudo mkdir /usr/local/lib/python3.6/site-packages/tensorflow/include/tensorflow/compiler/xla\nsudo cp tensorflow/compiler/xla/*.h /usr/local/lib/python3.6/site-packages/tensorflow/include/tensorflow/compiler/xla/\n</code></pre>\n<p>This issue was not present in TensorFlow 1.5, but must have been introduced since then. Compiling with or without XLA makes no difference.</p>\n<h3>Source code / logs</h3>\n<pre><code>make gpu -j2\nnvcc -ccbin=/usr/local/gcc-6.4/bin/g++-6.4 -DGOOGLE_CUDA=1 -std=c++11 `python3 -W ignore -c 'import tensorflow as tf; print(\" \".join(tf.sysconfig.get_compile_flags()))'` -I. -I/usr/local/cuda/../ -I`python3 -W ignore -c 'import tensorflow as tf; print(tf.sysconfig.get_include())'` -c cart_hex_interpol.cu.cc -x cu -Xcompiler \"-std=c++11 `python3 -W ignore -c 'import tensorflow as tf; print(\" \".join(tf.sysconfig.get_compile_flags()))'` -I. -I/usr/local/cuda/../ -I`python3 -W ignore -c 'import tensorflow as tf; print(tf.sysconfig.get_include())'` -O3 -pthread -fopenmp -shared -fPIC `python3 -W ignore -c 'import tensorflow as tf; print(\" \".join(tf.sysconfig.get_link_flags()))'`\" --expt-relaxed-constexpr -o cart_hex_interpol.cu.o\nIn file included from /usr/local/lib/python3.6/site-packages/tensorflow/include/tensorflow/stream_executor/dso_loader.h:26:0,\n                 from /usr/local/lib/python3.6/site-packages/tensorflow/include/tensorflow/core/platform/stream_executor.h:26,\n                 from /usr/local/lib/python3.6/site-packages/tensorflow/include/tensorflow/core/util/cuda_launch_config.h:27,\n                 from /usr/local/lib/python3.6/site-packages/tensorflow/include/tensorflow/core/util/cuda_kernel_helper.h:22,\n                 from cart_hex_interpol.cu.cc:5:\n/usr/local/lib/python3.6/site-packages/tensorflow/include/tensorflow/stream_executor/lib/statusor.h:21:46: fatal error: tensorflow/compiler/xla/statusor.h: No such file or directory\n #include \"tensorflow/compiler/xla/statusor.h\"\n\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Fedora 27\nTensorFlow installed from (source or binary): Source\nTensorFlow version (use command below): v1.8.0-rc1-909-g968addadfd 1.8.0-rc1\nPython version: 3.6m\nBazel version (if compiling from source): 0.12.0\nGCC/Compiler version (if compiling from source): 6.4\nCUDA/cuDNN version: 9.1/7.1\nGPU model and memory: GTX 1080 8GB\nExact command to reproduce:\n\ninclude Makefile.config\nTF_INC = `$(PYTHON) -W ignore -c 'import tensorflow as tf; print(tf.sysconfig.get_include())'`\nTF_CFLAGS = `$(PYTHON) -W ignore -c 'import tensorflow as tf; print(\" \".join(tf.sysconfig.get_compile_flags()))'`\nTF_LFLAGS = `$(PYTHON) -W ignore -c 'import tensorflow as tf; print(\" \".join(tf.sysconfig.get_link_flags()))'`\nCUDA_INC = $(CUDA_HOME)/../\nGPUCC     = nvcc -ccbin=$(CXX)\nCFLAGS    = -std=c++11 $(TF_CFLAGS) -I. -I$(CUDA_INC) -I$(TF_INC)\nGPUCFLAGS = -c\nLFLAGS    = $(ODFLAGS) -pthread -fopenmp -shared -fPIC $(TF_LFLAGS)\nGPULFLAGS = -x cu -Xcompiler \"$(CFLAGS) $(LFLAGS)\" --expt-relaxed-constexpr\nGPUDEF    = -DGOOGLE_CUDA=1\nCGPUFLAGS = -lcuda\nSRC       = cart_hex_interpol.cc\nGPUSRC    = cart_hex_interpol.cu.cc\nSRC_O\t  = cart_hex_interpol.o\nGPUSRC_O  = cart_hex_interpol.cu.o\nLIB       = cart_hex_interpol.so\nall: gpu\ndefault: gpu\ncpu:\n\t$(CXX) $(CFLAGS) $(SRC) $(LFLAGS) -o $(LIB)\ngpu:\n\t$(GPUCC) $(GPUDEF) $(CFLAGS) $(GPUCFLAGS) $(GPUSRC) $(GPULFLAGS) -o $(GPUSRC_O)\n\t$(CXX) $(GPUDEF) $(CFLAGS) $(SRC) $(GPUSRC_O) $(LFLAGS) $(CGPUFLAGS)  -o $(LIB)\nclean:\n\trm -f $(SRC_O) $(GPUSRC_O) $(LIB)\n\nDescribe the problem\nWhen compiling a custom TensorFlow operator using a Makefile and including CUDA/GPU code, the compilation fails due to missing fatal error: tensorflow/compiler/xla/statusor.h: No such file or directory. The files are missing in /usr/local/lib/python3.6/site-packages/tensorflow/ because the headers do not get installed during installation of the wheel package for TensorFlow.\nA temporary fix is to copy the headers from source:\nsudo mkdir /usr/local/lib/python3.6/site-packages/tensorflow/include/tensorflow/compiler/\nsudo mkdir /usr/local/lib/python3.6/site-packages/tensorflow/include/tensorflow/compiler/xla\nsudo cp tensorflow/compiler/xla/*.h /usr/local/lib/python3.6/site-packages/tensorflow/include/tensorflow/compiler/xla/\n\nThis issue was not present in TensorFlow 1.5, but must have been introduced since then. Compiling with or without XLA makes no difference.\nSource code / logs\nmake gpu -j2\nnvcc -ccbin=/usr/local/gcc-6.4/bin/g++-6.4 -DGOOGLE_CUDA=1 -std=c++11 `python3 -W ignore -c 'import tensorflow as tf; print(\" \".join(tf.sysconfig.get_compile_flags()))'` -I. -I/usr/local/cuda/../ -I`python3 -W ignore -c 'import tensorflow as tf; print(tf.sysconfig.get_include())'` -c cart_hex_interpol.cu.cc -x cu -Xcompiler \"-std=c++11 `python3 -W ignore -c 'import tensorflow as tf; print(\" \".join(tf.sysconfig.get_compile_flags()))'` -I. -I/usr/local/cuda/../ -I`python3 -W ignore -c 'import tensorflow as tf; print(tf.sysconfig.get_include())'` -O3 -pthread -fopenmp -shared -fPIC `python3 -W ignore -c 'import tensorflow as tf; print(\" \".join(tf.sysconfig.get_link_flags()))'`\" --expt-relaxed-constexpr -o cart_hex_interpol.cu.o\nIn file included from /usr/local/lib/python3.6/site-packages/tensorflow/include/tensorflow/stream_executor/dso_loader.h:26:0,\n                 from /usr/local/lib/python3.6/site-packages/tensorflow/include/tensorflow/core/platform/stream_executor.h:26,\n                 from /usr/local/lib/python3.6/site-packages/tensorflow/include/tensorflow/core/util/cuda_launch_config.h:27,\n                 from /usr/local/lib/python3.6/site-packages/tensorflow/include/tensorflow/core/util/cuda_kernel_helper.h:22,\n                 from cart_hex_interpol.cu.cc:5:\n/usr/local/lib/python3.6/site-packages/tensorflow/include/tensorflow/stream_executor/lib/statusor.h:21:46: fatal error: tensorflow/compiler/xla/statusor.h: No such file or directory\n #include \"tensorflow/compiler/xla/statusor.h\"", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Fedora 27\r\n- **TensorFlow installed from (source or binary)**: Source\r\n- **TensorFlow version (use command below)**: v1.8.0-rc1-909-g968addadfd 1.8.0-rc1\r\n- **Python version**: 3.6m\r\n- **Bazel version (if compiling from source)**: 0.12.0\r\n- **GCC/Compiler version (if compiling from source)**: 6.4\r\n- **CUDA/cuDNN version**: 9.1/7.1\r\n- **GPU model and memory**: GTX 1080 8GB\r\n- **Exact command to reproduce**:\r\n```\r\ninclude Makefile.config\r\nTF_INC = `$(PYTHON) -W ignore -c 'import tensorflow as tf; print(tf.sysconfig.get_include())'`\r\nTF_CFLAGS = `$(PYTHON) -W ignore -c 'import tensorflow as tf; print(\" \".join(tf.sysconfig.get_compile_flags()))'`\r\nTF_LFLAGS = `$(PYTHON) -W ignore -c 'import tensorflow as tf; print(\" \".join(tf.sysconfig.get_link_flags()))'`\r\nCUDA_INC = $(CUDA_HOME)/../\r\nGPUCC     = nvcc -ccbin=$(CXX)\r\nCFLAGS    = -std=c++11 $(TF_CFLAGS) -I. -I$(CUDA_INC) -I$(TF_INC)\r\nGPUCFLAGS = -c\r\nLFLAGS    = $(ODFLAGS) -pthread -fopenmp -shared -fPIC $(TF_LFLAGS)\r\nGPULFLAGS = -x cu -Xcompiler \"$(CFLAGS) $(LFLAGS)\" --expt-relaxed-constexpr\r\nGPUDEF    = -DGOOGLE_CUDA=1\r\nCGPUFLAGS = -lcuda\r\nSRC       = cart_hex_interpol.cc\r\nGPUSRC    = cart_hex_interpol.cu.cc\r\nSRC_O\t  = cart_hex_interpol.o\r\nGPUSRC_O  = cart_hex_interpol.cu.o\r\nLIB       = cart_hex_interpol.so\r\nall: gpu\r\ndefault: gpu\r\ncpu:\r\n\t$(CXX) $(CFLAGS) $(SRC) $(LFLAGS) -o $(LIB)\r\ngpu:\r\n\t$(GPUCC) $(GPUDEF) $(CFLAGS) $(GPUCFLAGS) $(GPUSRC) $(GPULFLAGS) -o $(GPUSRC_O)\r\n\t$(CXX) $(GPUDEF) $(CFLAGS) $(SRC) $(GPUSRC_O) $(LFLAGS) $(CGPUFLAGS)  -o $(LIB)\r\nclean:\r\n\trm -f $(SRC_O) $(GPUSRC_O) $(LIB)\r\n```\r\n\r\n### Describe the problem\r\nWhen compiling a custom TensorFlow operator using a Makefile and including CUDA/GPU code, the compilation fails due to missing `fatal error: tensorflow/compiler/xla/statusor.h: No such file or directory`. The files are missing in `/usr/local/lib/python3.6/site-packages/tensorflow/` because the headers do not get installed during installation of the wheel package for TensorFlow.\r\nA temporary fix is to copy the headers from source:\r\n```\r\nsudo mkdir /usr/local/lib/python3.6/site-packages/tensorflow/include/tensorflow/compiler/\r\nsudo mkdir /usr/local/lib/python3.6/site-packages/tensorflow/include/tensorflow/compiler/xla\r\nsudo cp tensorflow/compiler/xla/*.h /usr/local/lib/python3.6/site-packages/tensorflow/include/tensorflow/compiler/xla/\r\n```\r\nThis issue was not present in TensorFlow 1.5, but must have been introduced since then. Compiling with or without XLA makes no difference.\r\n\r\n### Source code / logs\r\n```\r\nmake gpu -j2\r\nnvcc -ccbin=/usr/local/gcc-6.4/bin/g++-6.4 -DGOOGLE_CUDA=1 -std=c++11 `python3 -W ignore -c 'import tensorflow as tf; print(\" \".join(tf.sysconfig.get_compile_flags()))'` -I. -I/usr/local/cuda/../ -I`python3 -W ignore -c 'import tensorflow as tf; print(tf.sysconfig.get_include())'` -c cart_hex_interpol.cu.cc -x cu -Xcompiler \"-std=c++11 `python3 -W ignore -c 'import tensorflow as tf; print(\" \".join(tf.sysconfig.get_compile_flags()))'` -I. -I/usr/local/cuda/../ -I`python3 -W ignore -c 'import tensorflow as tf; print(tf.sysconfig.get_include())'` -O3 -pthread -fopenmp -shared -fPIC `python3 -W ignore -c 'import tensorflow as tf; print(\" \".join(tf.sysconfig.get_link_flags()))'`\" --expt-relaxed-constexpr -o cart_hex_interpol.cu.o\r\nIn file included from /usr/local/lib/python3.6/site-packages/tensorflow/include/tensorflow/stream_executor/dso_loader.h:26:0,\r\n                 from /usr/local/lib/python3.6/site-packages/tensorflow/include/tensorflow/core/platform/stream_executor.h:26,\r\n                 from /usr/local/lib/python3.6/site-packages/tensorflow/include/tensorflow/core/util/cuda_launch_config.h:27,\r\n                 from /usr/local/lib/python3.6/site-packages/tensorflow/include/tensorflow/core/util/cuda_kernel_helper.h:22,\r\n                 from cart_hex_interpol.cu.cc:5:\r\n/usr/local/lib/python3.6/site-packages/tensorflow/include/tensorflow/stream_executor/lib/statusor.h:21:46: fatal error: tensorflow/compiler/xla/statusor.h: No such file or directory\r\n #include \"tensorflow/compiler/xla/statusor.h\"\r\n\r\n```\r\n"}