{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/125784882", "pull_request_review_id": 48207399, "id": 125784882, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNTc4NDg4Mg==", "diff_hunk": "@@ -29,8 +29,8 @@ limitations under the License.\n #include \"tensorflow/core/util/tensor_format.h\"\n \n #include \"tensorflow/core/util/mkl_util.h\"\n-#include \"third_party/mkl/include/mkl_dnn.h\"\n-#include \"third_party/mkl/include/mkl_dnn_types.h\"\n+#include \"mkl_dnn.h\"", "path": "tensorflow/core/kernels/mkl_tfconv_op.cc", "position": 6, "original_position": 6, "commit_id": "8f66df09793033367a6f629a9e77e83239f54f00", "original_commit_id": "a8ca182e5b2eed46f39ce93aa33a5a0bdd41b71d", "user": {"login": "gunan", "id": 7946809, "node_id": "MDQ6VXNlcjc5NDY4MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7946809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gunan", "html_url": "https://github.com/gunan", "followers_url": "https://api.github.com/users/gunan/followers", "following_url": "https://api.github.com/users/gunan/following{/other_user}", "gists_url": "https://api.github.com/users/gunan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gunan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gunan/subscriptions", "organizations_url": "https://api.github.com/users/gunan/orgs", "repos_url": "https://api.github.com/users/gunan/repos", "events_url": "https://api.github.com/users/gunan/events{/privacy}", "received_events_url": "https://api.github.com/users/gunan/received_events", "type": "User", "site_admin": false}, "body": "That convention is for internal includes. Anything that is a part of tensorflow. If something is an external dependency, we point our build rules to their include folder:\r\nhttps://github.com/tensorflow/tensorflow/blob/master/third_party/png.BUILD#L31\r\n\r\nThen include them directly in our files. This is what I am doing here. Getting rid of brittle downloading through configure script mechanism end up moving us to here.\r\nUnless we check in the headers into our third_party/mkl folder, we cannot make them accessible through the `third_party/mkl/include`path.\r\n\r\nMoving everything into a single header is something I had in mind, but that will come in a later PR.\r\n", "created_at": "2017-07-05T23:56:02Z", "updated_at": "2017-07-14T20:12:27Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/11212#discussion_r125784882", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11212", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/125784882"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/11212#discussion_r125784882"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11212"}}, "body_html": "<p>That convention is for internal includes. Anything that is a part of tensorflow. If something is an external dependency, we point our build rules to their include folder:<br>\n<a href=\"https://github.com/tensorflow/tensorflow/blob/master/third_party/png.BUILD#L31\">https://github.com/tensorflow/tensorflow/blob/master/third_party/png.BUILD#L31</a></p>\n<p>Then include them directly in our files. This is what I am doing here. Getting rid of brittle downloading through configure script mechanism end up moving us to here.<br>\nUnless we check in the headers into our third_party/mkl folder, we cannot make them accessible through the <code>third_party/mkl/include</code>path.</p>\n<p>Moving everything into a single header is something I had in mind, but that will come in a later PR.</p>", "body_text": "That convention is for internal includes. Anything that is a part of tensorflow. If something is an external dependency, we point our build rules to their include folder:\nhttps://github.com/tensorflow/tensorflow/blob/master/third_party/png.BUILD#L31\nThen include them directly in our files. This is what I am doing here. Getting rid of brittle downloading through configure script mechanism end up moving us to here.\nUnless we check in the headers into our third_party/mkl folder, we cannot make them accessible through the third_party/mkl/includepath.\nMoving everything into a single header is something I had in mind, but that will come in a later PR.", "in_reply_to_id": 125192608}