{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18903", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18903/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18903/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18903/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18903", "id": 318071803, "node_id": "MDU6SXNzdWUzMTgwNzE4MDM=", "number": 18903, "title": "Feature: tf.contrib.rnn Downsampling Wrapper ", "user": {"login": "georgesterpu", "id": 6018251, "node_id": "MDQ6VXNlcjYwMTgyNTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/6018251?v=4", "gravatar_id": "", "url": "https://api.github.com/users/georgesterpu", "html_url": "https://github.com/georgesterpu", "followers_url": "https://api.github.com/users/georgesterpu/followers", "following_url": "https://api.github.com/users/georgesterpu/following{/other_user}", "gists_url": "https://api.github.com/users/georgesterpu/gists{/gist_id}", "starred_url": "https://api.github.com/users/georgesterpu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/georgesterpu/subscriptions", "organizations_url": "https://api.github.com/users/georgesterpu/orgs", "repos_url": "https://api.github.com/users/georgesterpu/repos", "events_url": "https://api.github.com/users/georgesterpu/events{/privacy}", "received_events_url": "https://api.github.com/users/georgesterpu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2018-04-26T15:06:04Z", "updated_at": "2018-06-29T19:15:35Z", "closed_at": "2018-06-29T19:15:35Z", "author_association": "CONTRIBUTOR", "body_html": "<h3>Feature description</h3>\n<ul>\n<li>On sequential inputs with many timesteps (e.g. speech), it is common to down-sample the higher order representations in a multi-layer recurrent network to improve the computation time and eventually the attention weights learning [1]. The MultiRNNCell class in TensorFlow simplifies the construction of multi-layered RNNs but gives users no control to post-process the outputs of intermediate layers. Would it be possible to add a new cell wrapper implementing RNN layer output sub-sampling, or more general used-defined post-processing ? The simplest case could be down-sampling the outputs by a factor of 2, as in [1], section 3.1, but without concatenation.</li>\n</ul>\n<p>Thanks,<br>\nGeorge</p>\n<p>[1] <a href=\"https://arxiv.org/abs/1508.01211\" rel=\"nofollow\">https://arxiv.org/abs/1508.01211</a></p>", "body_text": "Feature description\n\nOn sequential inputs with many timesteps (e.g. speech), it is common to down-sample the higher order representations in a multi-layer recurrent network to improve the computation time and eventually the attention weights learning [1]. The MultiRNNCell class in TensorFlow simplifies the construction of multi-layered RNNs but gives users no control to post-process the outputs of intermediate layers. Would it be possible to add a new cell wrapper implementing RNN layer output sub-sampling, or more general used-defined post-processing ? The simplest case could be down-sampling the outputs by a factor of 2, as in [1], section 3.1, but without concatenation.\n\nThanks,\nGeorge\n[1] https://arxiv.org/abs/1508.01211", "body": "### Feature description\r\n-  On sequential inputs with many timesteps (e.g. speech), it is common to down-sample the higher order representations in a multi-layer recurrent network to improve the computation time and eventually the attention weights learning [1]. The MultiRNNCell class in TensorFlow simplifies the construction of multi-layered RNNs but gives users no control to post-process the outputs of intermediate layers. Would it be possible to add a new cell wrapper implementing RNN layer output sub-sampling, or more general used-defined post-processing ? The simplest case could be down-sampling the outputs by a factor of 2, as in [1], section 3.1, but without concatenation.\r\n\r\nThanks,\r\nGeorge \r\n\r\n[1] https://arxiv.org/abs/1508.01211"}