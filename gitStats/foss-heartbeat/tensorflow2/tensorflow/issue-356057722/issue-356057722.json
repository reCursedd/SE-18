{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21995", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21995/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21995/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21995/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21995", "id": 356057722, "node_id": "MDU6SXNzdWUzNTYwNTc3MjI=", "number": 21995, "title": "[solved] Android Static Library in Visual Studio with Tensorflow C++ API", "user": {"login": "arnaldog12", "id": 4855538, "node_id": "MDQ6VXNlcjQ4NTU1Mzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/4855538?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arnaldog12", "html_url": "https://github.com/arnaldog12", "followers_url": "https://api.github.com/users/arnaldog12/followers", "following_url": "https://api.github.com/users/arnaldog12/following{/other_user}", "gists_url": "https://api.github.com/users/arnaldog12/gists{/gist_id}", "starred_url": "https://api.github.com/users/arnaldog12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arnaldog12/subscriptions", "organizations_url": "https://api.github.com/users/arnaldog12/orgs", "repos_url": "https://api.github.com/users/arnaldog12/repos", "events_url": "https://api.github.com/users/arnaldog12/events{/privacy}", "received_events_url": "https://api.github.com/users/arnaldog12/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "cy89", "id": 29663194, "node_id": "MDQ6VXNlcjI5NjYzMTk0", "avatar_url": "https://avatars0.githubusercontent.com/u/29663194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cy89", "html_url": "https://github.com/cy89", "followers_url": "https://api.github.com/users/cy89/followers", "following_url": "https://api.github.com/users/cy89/following{/other_user}", "gists_url": "https://api.github.com/users/cy89/gists{/gist_id}", "starred_url": "https://api.github.com/users/cy89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cy89/subscriptions", "organizations_url": "https://api.github.com/users/cy89/orgs", "repos_url": "https://api.github.com/users/cy89/repos", "events_url": "https://api.github.com/users/cy89/events{/privacy}", "received_events_url": "https://api.github.com/users/cy89/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cy89", "id": 29663194, "node_id": "MDQ6VXNlcjI5NjYzMTk0", "avatar_url": "https://avatars0.githubusercontent.com/u/29663194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cy89", "html_url": "https://github.com/cy89", "followers_url": "https://api.github.com/users/cy89/followers", "following_url": "https://api.github.com/users/cy89/following{/other_user}", "gists_url": "https://api.github.com/users/cy89/gists{/gist_id}", "starred_url": "https://api.github.com/users/cy89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cy89/subscriptions", "organizations_url": "https://api.github.com/users/cy89/orgs", "repos_url": "https://api.github.com/users/cy89/repos", "events_url": "https://api.github.com/users/cy89/events{/privacy}", "received_events_url": "https://api.github.com/users/cy89/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-08-31T17:04:50Z", "updated_at": "2018-09-28T22:17:15Z", "closed_at": "2018-09-06T11:58:19Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: No</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Windows 10</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>: Any Android device</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: source</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.4</li>\n<li><strong>Python version</strong>: 3.6.5</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.7</li>\n<li><strong>NDK version</strong>: 14b</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:</li>\n<li><strong>CUDA/cuDNN version</strong>: N/A</li>\n<li><strong>GPU model and memory</strong>: N/A</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<div class=\"highlight highlight-source-shell\"><pre>bazel build -c opt //tensorflow/contrib/android:libtensorflow_inference.so --crosstool_top=//external:android/crosstool --host_crosstool_top=@bazel_tools//tools/cpp:toolchain --cpu=armeabi-v7a</pre></div>\n<h3>Describe the problem</h3>\n<p>Hi,<br>\ncurrently, I have been trying to use Tensorflow C++ API to create an Android static library using Visual Studio. There are some Stack Overflow Questions related to this (<a href=\"https://stackoverflow.com/questions/45066790/tensorflow-c-example-on-android\" rel=\"nofollow\">1</a>, <a href=\"https://stackoverflow.com/questions/48647592/compile-tensorflow-c-api-for-arm64-v8a\" rel=\"nofollow\">2</a>, <a href=\"https://stackoverflow.com/questions/50964234/using-tensorflow-c-in-android-with-cmake\" rel=\"nofollow\">3</a>, <a href=\"https://stackoverflow.com/questions/48181092/tensorflow-c-input-output-tensor-reshape\" rel=\"nofollow\">4</a>), but all with no answers. I was unable to find issues about it in Tensorflow's repo.</p>\n<p>I built Tensorflow for Android using Bazel in a Linux Ubuntu 18.04.1 LTS machine following <a href=\"https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/android\">this instructions</a>. Thus, I have a <strong>libtensorflow_inference.so</strong> and a java binding (<strong>libandroid_tensorflow_inference_java.jar</strong>). For my Android static library project in Visual Studio, I'm using the <em>libtensorflow_inference.so</em> as \"<em>Additional Dependency</em>\" and the following \"<em>Additional Include Directories</em>\":</p>\n<pre><code>C:\\tensorflow\nC:\\tensorflow\\build\nC:\\tensorflow\\build\\external\\eigen_archive\nC:\\tensorflow\\third_party\\eigen3\nC:\\tensorflow\\build\\protobuf\\src\\protobuf\\src\nC:\\tensorflow\\build\\nsync\\src\\nsync\\public\nC:\\tensorflow\\build\\snappy\\src\\snappy\n</code></pre>\n<p>However, I'm getting the following errors:</p>\n<pre><code>undefined reference to 'tensorflow::SessionOptions::SessionOptions()'\nundefined reference to 'tensorflow::ConfigProto::~ConfigProto()'\nundefined reference to 'tensorflow::ConfigProto::~ConfigProto()'\nundefined reference to 'tensorflow::GraphDef::GraphDef(tensorflow::GraphDef const&amp;)'\nundefined reference to 'tensorflow::ConfigProto::ConfigProto(tensorflow::ConfigProto const&amp;)'\nundefined reference to 'tensorflow::ConfigProto::~ConfigProto()'\nundefined reference to 'tensorflow::GraphDef::~GraphDef()'\nundefined reference to 'tensorflow::GraphDef::~GraphDef()'\nundefined reference to 'tensorflow::ConfigProto::~ConfigProto()'\nundefined reference to 'tensorflow::GraphDef::~GraphDef()'\nundefined reference to 'tensorflow::GraphDef::~GraphDef()'\nundefined reference to 'tensorflow::GraphDef::GraphDef()'\nundefined reference to 'tensorflow::Env::Default()'\nundefined reference to 'tensorflow::ReadBinaryProto(tensorflow::Env*, std::string const&amp;, google::protobuf::MessageLite*)'\nundefined reference to 'tensorflow::TfCheckOpHelperOutOfLine(tensorflow::Status const&amp;, char const*)'\nundefined reference to 'tensorflow::internal::LogMessageFatal::LogMessageFatal(char const*, int)'\nundefined reference to 'tensorflow::internal::LogMessageFatal::~LogMessageFatal()'\nundefined reference to 'tensorflow::internal::LogMessageFatal::~LogMessageFatal()'\nundefined reference to 'tensorflow::NewSession(tensorflow::SessionOptions const&amp;, tensorflow::Session**)'\nundefined reference to 'tensorflow::TfCheckOpHelperOutOfLine(tensorflow::Status const&amp;, char const*)'\nundefined reference to 'tensorflow::internal::LogMessageFatal::LogMessageFatal(char const*, int)'\nundefined reference to 'tensorflow::internal::LogMessageFatal::~LogMessageFatal()'\nundefined reference to 'tensorflow::TfCheckOpHelperOutOfLine(tensorflow::Status const&amp;, char const*)'\nundefined reference to 'tensorflow::internal::LogMessageFatal::LogMessageFatal(char const*, int)'\nundefined reference to 'tensorflow::internal::LogMessageFatal::~LogMessageFatal()'\n</code></pre>\n<p>Therefore, my questions are:</p>\n<ul>\n<li>It is possible to use the <strong>libtensorflow_inference.so</strong> for a C++ Android static library?</li>\n<li>Am I missing addiitional dependencies?</li>\n</ul>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): No\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: Any Android device\nTensorFlow installed from (source or binary): source\nTensorFlow version (use command below): 1.4\nPython version: 3.6.5\nBazel version (if compiling from source): 0.7\nNDK version: 14b\nGCC/Compiler version (if compiling from source):\nCUDA/cuDNN version: N/A\nGPU model and memory: N/A\nExact command to reproduce:\n\nbazel build -c opt //tensorflow/contrib/android:libtensorflow_inference.so --crosstool_top=//external:android/crosstool --host_crosstool_top=@bazel_tools//tools/cpp:toolchain --cpu=armeabi-v7a\nDescribe the problem\nHi,\ncurrently, I have been trying to use Tensorflow C++ API to create an Android static library using Visual Studio. There are some Stack Overflow Questions related to this (1, 2, 3, 4), but all with no answers. I was unable to find issues about it in Tensorflow's repo.\nI built Tensorflow for Android using Bazel in a Linux Ubuntu 18.04.1 LTS machine following this instructions. Thus, I have a libtensorflow_inference.so and a java binding (libandroid_tensorflow_inference_java.jar). For my Android static library project in Visual Studio, I'm using the libtensorflow_inference.so as \"Additional Dependency\" and the following \"Additional Include Directories\":\nC:\\tensorflow\nC:\\tensorflow\\build\nC:\\tensorflow\\build\\external\\eigen_archive\nC:\\tensorflow\\third_party\\eigen3\nC:\\tensorflow\\build\\protobuf\\src\\protobuf\\src\nC:\\tensorflow\\build\\nsync\\src\\nsync\\public\nC:\\tensorflow\\build\\snappy\\src\\snappy\n\nHowever, I'm getting the following errors:\nundefined reference to 'tensorflow::SessionOptions::SessionOptions()'\nundefined reference to 'tensorflow::ConfigProto::~ConfigProto()'\nundefined reference to 'tensorflow::ConfigProto::~ConfigProto()'\nundefined reference to 'tensorflow::GraphDef::GraphDef(tensorflow::GraphDef const&)'\nundefined reference to 'tensorflow::ConfigProto::ConfigProto(tensorflow::ConfigProto const&)'\nundefined reference to 'tensorflow::ConfigProto::~ConfigProto()'\nundefined reference to 'tensorflow::GraphDef::~GraphDef()'\nundefined reference to 'tensorflow::GraphDef::~GraphDef()'\nundefined reference to 'tensorflow::ConfigProto::~ConfigProto()'\nundefined reference to 'tensorflow::GraphDef::~GraphDef()'\nundefined reference to 'tensorflow::GraphDef::~GraphDef()'\nundefined reference to 'tensorflow::GraphDef::GraphDef()'\nundefined reference to 'tensorflow::Env::Default()'\nundefined reference to 'tensorflow::ReadBinaryProto(tensorflow::Env*, std::string const&, google::protobuf::MessageLite*)'\nundefined reference to 'tensorflow::TfCheckOpHelperOutOfLine(tensorflow::Status const&, char const*)'\nundefined reference to 'tensorflow::internal::LogMessageFatal::LogMessageFatal(char const*, int)'\nundefined reference to 'tensorflow::internal::LogMessageFatal::~LogMessageFatal()'\nundefined reference to 'tensorflow::internal::LogMessageFatal::~LogMessageFatal()'\nundefined reference to 'tensorflow::NewSession(tensorflow::SessionOptions const&, tensorflow::Session**)'\nundefined reference to 'tensorflow::TfCheckOpHelperOutOfLine(tensorflow::Status const&, char const*)'\nundefined reference to 'tensorflow::internal::LogMessageFatal::LogMessageFatal(char const*, int)'\nundefined reference to 'tensorflow::internal::LogMessageFatal::~LogMessageFatal()'\nundefined reference to 'tensorflow::TfCheckOpHelperOutOfLine(tensorflow::Status const&, char const*)'\nundefined reference to 'tensorflow::internal::LogMessageFatal::LogMessageFatal(char const*, int)'\nundefined reference to 'tensorflow::internal::LogMessageFatal::~LogMessageFatal()'\n\nTherefore, my questions are:\n\nIt is possible to use the libtensorflow_inference.so for a C++ Android static library?\nAm I missing addiitional dependencies?", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 10\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**: Any Android device\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: 1.4\r\n- **Python version**: 3.6.5\r\n- **Bazel version (if compiling from source)**: 0.7\r\n- **NDK version**: 14b\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**:\r\n```sh\r\nbazel build -c opt //tensorflow/contrib/android:libtensorflow_inference.so --crosstool_top=//external:android/crosstool --host_crosstool_top=@bazel_tools//tools/cpp:toolchain --cpu=armeabi-v7a\r\n```\r\n\r\n### Describe the problem\r\n\r\nHi,\r\ncurrently, I have been trying to use Tensorflow C++ API to create an Android static library using Visual Studio. There are some Stack Overflow Questions related to this ([1](https://stackoverflow.com/questions/45066790/tensorflow-c-example-on-android), [2](https://stackoverflow.com/questions/48647592/compile-tensorflow-c-api-for-arm64-v8a), [3](https://stackoverflow.com/questions/50964234/using-tensorflow-c-in-android-with-cmake), [4](https://stackoverflow.com/questions/48181092/tensorflow-c-input-output-tensor-reshape)), but all with no answers. I was unable to find issues about it in Tensorflow's repo.\r\n\r\nI built Tensorflow for Android using Bazel in a Linux Ubuntu 18.04.1 LTS machine following [this instructions](https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/android). Thus, I have a **libtensorflow_inference.so** and a java binding (**libandroid_tensorflow_inference_java.jar**). For my Android static library project in Visual Studio, I'm using the _libtensorflow_inference.so_ as \"_Additional Dependency_\" and the following \"_Additional Include Directories_\":\r\n\r\n```\r\nC:\\tensorflow\r\nC:\\tensorflow\\build\r\nC:\\tensorflow\\build\\external\\eigen_archive\r\nC:\\tensorflow\\third_party\\eigen3\r\nC:\\tensorflow\\build\\protobuf\\src\\protobuf\\src\r\nC:\\tensorflow\\build\\nsync\\src\\nsync\\public\r\nC:\\tensorflow\\build\\snappy\\src\\snappy\r\n```\r\n\r\nHowever, I'm getting the following errors:\r\n\r\n```\r\nundefined reference to 'tensorflow::SessionOptions::SessionOptions()'\r\nundefined reference to 'tensorflow::ConfigProto::~ConfigProto()'\r\nundefined reference to 'tensorflow::ConfigProto::~ConfigProto()'\r\nundefined reference to 'tensorflow::GraphDef::GraphDef(tensorflow::GraphDef const&)'\r\nundefined reference to 'tensorflow::ConfigProto::ConfigProto(tensorflow::ConfigProto const&)'\r\nundefined reference to 'tensorflow::ConfigProto::~ConfigProto()'\r\nundefined reference to 'tensorflow::GraphDef::~GraphDef()'\r\nundefined reference to 'tensorflow::GraphDef::~GraphDef()'\r\nundefined reference to 'tensorflow::ConfigProto::~ConfigProto()'\r\nundefined reference to 'tensorflow::GraphDef::~GraphDef()'\r\nundefined reference to 'tensorflow::GraphDef::~GraphDef()'\r\nundefined reference to 'tensorflow::GraphDef::GraphDef()'\r\nundefined reference to 'tensorflow::Env::Default()'\r\nundefined reference to 'tensorflow::ReadBinaryProto(tensorflow::Env*, std::string const&, google::protobuf::MessageLite*)'\r\nundefined reference to 'tensorflow::TfCheckOpHelperOutOfLine(tensorflow::Status const&, char const*)'\r\nundefined reference to 'tensorflow::internal::LogMessageFatal::LogMessageFatal(char const*, int)'\r\nundefined reference to 'tensorflow::internal::LogMessageFatal::~LogMessageFatal()'\r\nundefined reference to 'tensorflow::internal::LogMessageFatal::~LogMessageFatal()'\r\nundefined reference to 'tensorflow::NewSession(tensorflow::SessionOptions const&, tensorflow::Session**)'\r\nundefined reference to 'tensorflow::TfCheckOpHelperOutOfLine(tensorflow::Status const&, char const*)'\r\nundefined reference to 'tensorflow::internal::LogMessageFatal::LogMessageFatal(char const*, int)'\r\nundefined reference to 'tensorflow::internal::LogMessageFatal::~LogMessageFatal()'\r\nundefined reference to 'tensorflow::TfCheckOpHelperOutOfLine(tensorflow::Status const&, char const*)'\r\nundefined reference to 'tensorflow::internal::LogMessageFatal::LogMessageFatal(char const*, int)'\r\nundefined reference to 'tensorflow::internal::LogMessageFatal::~LogMessageFatal()'\r\n```\r\n\r\nTherefore, my questions are:\r\n- It is possible to use the __libtensorflow_inference.so__ for a C++ Android static library?\r\n- Am I missing addiitional dependencies?\r\n"}