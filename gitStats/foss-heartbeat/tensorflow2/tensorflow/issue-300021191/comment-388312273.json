{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/388312273", "html_url": "https://github.com/tensorflow/tensorflow/issues/17257#issuecomment-388312273", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17257", "id": 388312273, "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODMxMjI3Mw==", "user": {"login": "sleighsoft", "id": 9438971, "node_id": "MDQ6VXNlcjk0Mzg5NzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/9438971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sleighsoft", "html_url": "https://github.com/sleighsoft", "followers_url": "https://api.github.com/users/sleighsoft/followers", "following_url": "https://api.github.com/users/sleighsoft/following{/other_user}", "gists_url": "https://api.github.com/users/sleighsoft/gists{/gist_id}", "starred_url": "https://api.github.com/users/sleighsoft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sleighsoft/subscriptions", "organizations_url": "https://api.github.com/users/sleighsoft/orgs", "repos_url": "https://api.github.com/users/sleighsoft/repos", "events_url": "https://api.github.com/users/sleighsoft/events{/privacy}", "received_events_url": "https://api.github.com/users/sleighsoft/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-11T09:28:46Z", "updated_at": "2018-05-11T09:41:43Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Small example:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">import</span> tensorflow.contrib.eager <span class=\"pl-k\">as</span> tfe\n<span class=\"pl-k\">from</span> tensorflow.python.training <span class=\"pl-k\">import</span> checkpointable\n<span class=\"pl-k\">from</span> tensorflow.contrib.eager.python <span class=\"pl-k\">import</span> checkpointable_utils\n\n\n<span class=\"pl-k\">class</span> <span class=\"pl-en\">MyModel</span>(<span class=\"pl-e\">checkpointable</span>.<span class=\"pl-e\">Checkpointable</span>):\n\n  <span class=\"pl-k\">def</span> <span class=\"pl-c1\">__init__</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>):\n    <span class=\"pl-c1\">self</span>.optimizer <span class=\"pl-k\">=</span> tf.train.GradientDescentOptimizer(<span class=\"pl-c1\">0.1</span>)\n    <span class=\"pl-c1\">self</span>.var <span class=\"pl-k\">=</span> tf.get_variable(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>var<span class=\"pl-pds\">'</span></span>, [])\n\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">optimizer_to_adam</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>):\n    <span class=\"pl-c1\">self</span>.optimizer <span class=\"pl-k\">=</span> tf.train.AdamOptimizer()\n\n\ncheckpoint_path <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>modeldir/test/<span class=\"pl-pds\">'</span></span>\n\n<span class=\"pl-k\">with</span> tf.Graph().as_default():\n  model <span class=\"pl-k\">=</span> MyModel()\n  checkpoint <span class=\"pl-k\">=</span> tfe.Checkpoint(<span class=\"pl-v\">model</span><span class=\"pl-k\">=</span>model)\n  train_op <span class=\"pl-k\">=</span> model.optimizer.minimize(model.var <span class=\"pl-k\">*</span> model.var)\n  <span class=\"pl-c1\">print</span>(checkpointable_utils._serialize_object_graph(checkpoint))\n  session <span class=\"pl-k\">=</span> tf.Session()\n  session.run(tf.global_variables_initializer())\n  checkpoint.save(checkpoint_path, session)\n  session.run(train_op)\n  <span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Finished Model with SGD<span class=\"pl-pds\">'</span></span>)\n\n<span class=\"pl-k\">with</span> tf.Graph().as_default():\n  model <span class=\"pl-k\">=</span> MyModel()\n  model.optimizer_to_adam()\n  latest <span class=\"pl-k\">=</span> tf.train.latest_checkpoint(checkpoint_path)\n  train_op <span class=\"pl-k\">=</span> model.optimizer.minimize(model.var <span class=\"pl-k\">*</span> model.var)\n  checkpoint <span class=\"pl-k\">=</span> tfe.Checkpoint(<span class=\"pl-v\">model</span><span class=\"pl-k\">=</span>model)\n  <span class=\"pl-c1\">print</span>(checkpointable_utils._serialize_object_graph(checkpoint))\n  session <span class=\"pl-k\">=</span> tf.Session()\n  checkpoint.restore(latest).initialize_or_restore(session)\n  session.run(train_op)\n  <span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Finished Model with Adam<span class=\"pl-pds\">'</span></span>)</pre></div>\n<p>I would expect that the second graph (<code>Finished Model with Adam</code>) works.<br>\nBut it throws <code>Attempting to use uninitialized value beta2_power</code>.<br>\nI expected the <code>.initialize_or_restore</code> to initialize the <code>Adam</code> variables but that does not happen.</p>\n<p>They are printed by <code>print(checkpointable_utils._serialize_object_graph(checkpoint))</code> though.</p>\n<p>If you think that's a bug I can open up a new issue to track it. I hope I am not using the API incorrectly.</p>", "body_text": "Small example:\nimport tensorflow as tf\nimport tensorflow.contrib.eager as tfe\nfrom tensorflow.python.training import checkpointable\nfrom tensorflow.contrib.eager.python import checkpointable_utils\n\n\nclass MyModel(checkpointable.Checkpointable):\n\n  def __init__(self):\n    self.optimizer = tf.train.GradientDescentOptimizer(0.1)\n    self.var = tf.get_variable('var', [])\n\n  def optimizer_to_adam(self):\n    self.optimizer = tf.train.AdamOptimizer()\n\n\ncheckpoint_path = 'modeldir/test/'\n\nwith tf.Graph().as_default():\n  model = MyModel()\n  checkpoint = tfe.Checkpoint(model=model)\n  train_op = model.optimizer.minimize(model.var * model.var)\n  print(checkpointable_utils._serialize_object_graph(checkpoint))\n  session = tf.Session()\n  session.run(tf.global_variables_initializer())\n  checkpoint.save(checkpoint_path, session)\n  session.run(train_op)\n  print('Finished Model with SGD')\n\nwith tf.Graph().as_default():\n  model = MyModel()\n  model.optimizer_to_adam()\n  latest = tf.train.latest_checkpoint(checkpoint_path)\n  train_op = model.optimizer.minimize(model.var * model.var)\n  checkpoint = tfe.Checkpoint(model=model)\n  print(checkpointable_utils._serialize_object_graph(checkpoint))\n  session = tf.Session()\n  checkpoint.restore(latest).initialize_or_restore(session)\n  session.run(train_op)\n  print('Finished Model with Adam')\nI would expect that the second graph (Finished Model with Adam) works.\nBut it throws Attempting to use uninitialized value beta2_power.\nI expected the .initialize_or_restore to initialize the Adam variables but that does not happen.\nThey are printed by print(checkpointable_utils._serialize_object_graph(checkpoint)) though.\nIf you think that's a bug I can open up a new issue to track it. I hope I am not using the API incorrectly.", "body": "Small example:\r\n```python\r\nimport tensorflow as tf\r\nimport tensorflow.contrib.eager as tfe\r\nfrom tensorflow.python.training import checkpointable\r\nfrom tensorflow.contrib.eager.python import checkpointable_utils\r\n\r\n\r\nclass MyModel(checkpointable.Checkpointable):\r\n\r\n  def __init__(self):\r\n    self.optimizer = tf.train.GradientDescentOptimizer(0.1)\r\n    self.var = tf.get_variable('var', [])\r\n\r\n  def optimizer_to_adam(self):\r\n    self.optimizer = tf.train.AdamOptimizer()\r\n\r\n\r\ncheckpoint_path = 'modeldir/test/'\r\n\r\nwith tf.Graph().as_default():\r\n  model = MyModel()\r\n  checkpoint = tfe.Checkpoint(model=model)\r\n  train_op = model.optimizer.minimize(model.var * model.var)\r\n  print(checkpointable_utils._serialize_object_graph(checkpoint))\r\n  session = tf.Session()\r\n  session.run(tf.global_variables_initializer())\r\n  checkpoint.save(checkpoint_path, session)\r\n  session.run(train_op)\r\n  print('Finished Model with SGD')\r\n\r\nwith tf.Graph().as_default():\r\n  model = MyModel()\r\n  model.optimizer_to_adam()\r\n  latest = tf.train.latest_checkpoint(checkpoint_path)\r\n  train_op = model.optimizer.minimize(model.var * model.var)\r\n  checkpoint = tfe.Checkpoint(model=model)\r\n  print(checkpointable_utils._serialize_object_graph(checkpoint))\r\n  session = tf.Session()\r\n  checkpoint.restore(latest).initialize_or_restore(session)\r\n  session.run(train_op)\r\n  print('Finished Model with Adam')\r\n```\r\n\r\nI would expect that the second graph (`Finished Model with Adam`) works.\r\nBut it throws `Attempting to use uninitialized value beta2_power`.\r\nI expected the `.initialize_or_restore` to initialize the `Adam` variables but that does not happen.\r\n\r\nThey are printed by `print(checkpointable_utils._serialize_object_graph(checkpoint))` though.\r\n\r\nIf you think that's a bug I can open up a new issue to track it. I hope I am not using the API incorrectly."}