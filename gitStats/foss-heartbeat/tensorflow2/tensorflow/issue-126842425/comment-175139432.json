{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/175139432", "html_url": "https://github.com/tensorflow/tensorflow/issues/783#issuecomment-175139432", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/783", "id": 175139432, "node_id": "MDEyOklzc3VlQ29tbWVudDE3NTEzOTQzMg==", "user": {"login": "girving", "id": 70511, "node_id": "MDQ6VXNlcjcwNTEx", "avatar_url": "https://avatars1.githubusercontent.com/u/70511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/girving", "html_url": "https://github.com/girving", "followers_url": "https://api.github.com/users/girving/followers", "following_url": "https://api.github.com/users/girving/following{/other_user}", "gists_url": "https://api.github.com/users/girving/gists{/gist_id}", "starred_url": "https://api.github.com/users/girving/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/girving/subscriptions", "organizations_url": "https://api.github.com/users/girving/orgs", "repos_url": "https://api.github.com/users/girving/repos", "events_url": "https://api.github.com/users/girving/events{/privacy}", "received_events_url": "https://api.github.com/users/girving/received_events", "type": "User", "site_admin": false}, "created_at": "2016-01-26T17:48:56Z", "updated_at": "2016-01-26T17:48:56Z", "author_association": "CONTRIBUTOR", "body_html": "<p>It looks like there are hundreds of direct uses of <code>tf.gradients</code> within Google, so I don't think a silent performance breaking change is okay.  If we're going to change the default behavior, I think the only way would be to make the special <code>Zeros</code> class and give it suitable arithmetic overloads.  That way, anyone who doesn't realize and treats it as a normal tensor in a way that doesn't take advantage of zeros will throw an exception.</p>\n<p>For now, how about a <code>return_zeros</code> argument that defaults to <code>False</code>?</p>", "body_text": "It looks like there are hundreds of direct uses of tf.gradients within Google, so I don't think a silent performance breaking change is okay.  If we're going to change the default behavior, I think the only way would be to make the special Zeros class and give it suitable arithmetic overloads.  That way, anyone who doesn't realize and treats it as a normal tensor in a way that doesn't take advantage of zeros will throw an exception.\nFor now, how about a return_zeros argument that defaults to False?", "body": "It looks like there are hundreds of direct uses of `tf.gradients` within Google, so I don't think a silent performance breaking change is okay.  If we're going to change the default behavior, I think the only way would be to make the special `Zeros` class and give it suitable arithmetic overloads.  That way, anyone who doesn't realize and treats it as a normal tensor in a way that doesn't take advantage of zeros will throw an exception.\n\nFor now, how about a `return_zeros` argument that defaults to `False`?\n"}