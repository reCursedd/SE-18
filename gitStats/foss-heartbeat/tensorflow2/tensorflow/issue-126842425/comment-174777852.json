{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/174777852", "html_url": "https://github.com/tensorflow/tensorflow/issues/783#issuecomment-174777852", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/783", "id": 174777852, "node_id": "MDEyOklzc3VlQ29tbWVudDE3NDc3Nzg1Mg==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2016-01-26T02:15:44Z", "updated_at": "2016-01-26T02:15:44Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I'm pretty sure this is intended behavior. <a href=\"https://github.com/tensorflow/tensorflow/blob/b159e211860e26e3dbae26989163b9da55e3f430/tensorflow/python/training/optimizer.py#L239\"><code>Optimizer.apply_gradients()</code></a> uses the fact that individual gradients may be <code>None</code> to remove assignment ops. While this would be an easy case for a graph rewriter, it's not something we currently do, so I'd be a little worried about regressions if various variables suddenly started being updated every time.</p>\n<p>Since <code>tf.gradients()</code> is mostly hidden behind the optimizers, and the behavior isn't currently documented, we could consider a breaking change to the API, but I think we'd want to retain the existing functionality. Perhaps it could be controlled by an optional arg?</p>", "body_text": "I'm pretty sure this is intended behavior. Optimizer.apply_gradients() uses the fact that individual gradients may be None to remove assignment ops. While this would be an easy case for a graph rewriter, it's not something we currently do, so I'd be a little worried about regressions if various variables suddenly started being updated every time.\nSince tf.gradients() is mostly hidden behind the optimizers, and the behavior isn't currently documented, we could consider a breaking change to the API, but I think we'd want to retain the existing functionality. Perhaps it could be controlled by an optional arg?", "body": "I'm pretty sure this is intended behavior. [`Optimizer.apply_gradients()`](https://github.com/tensorflow/tensorflow/blob/b159e211860e26e3dbae26989163b9da55e3f430/tensorflow/python/training/optimizer.py#L239) uses the fact that individual gradients may be `None` to remove assignment ops. While this would be an easy case for a graph rewriter, it's not something we currently do, so I'd be a little worried about regressions if various variables suddenly started being updated every time.\n\nSince `tf.gradients()` is mostly hidden behind the optimizers, and the behavior isn't currently documented, we could consider a breaking change to the API, but I think we'd want to retain the existing functionality. Perhaps it could be controlled by an optional arg?\n"}