{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/111499136", "pull_request_review_id": 32752022, "id": 111499136, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMTQ5OTEzNg==", "diff_hunk": "@@ -87,106 +87,104 @@ namespace tensorflow {\n //\n //          O, O_m = MklRelu(A, A_m)\n //\n-// MklRelu has 2 inputs (A and A_m) and 2 outputs (O and O_m). Here A input is\n-// same as A input of Relu; O output is same as O output of Relu. O_m is the\n+// MklRelu has 2 inputs (A and A_m) and 2 outputs (O and O_m). Here input A is\n+// same as input A of Relu; output O is same as output O of Relu. O_m is the\n // additional output tensor that will be set by MklRelu, and it represents\n // Mkl tensor corresponding to O -- in other words, O_m is some kind of\n // metadata for O. A_m is additional input of Relu, and it represents metadata\n // for A - as O_m is metadata for O, A_m is metadata for A. MklRelu receives\n-// this metadata from previous layer (in the graph).\n+// this metadata from previous node in the graph.\n //\n-// When previous layer in the graph is Mkl layer, A_m will represent a valid\n-// Mkl tensor. But when previous Mkl layer is not an Mkl layer, then A_m\n-// represents a dummy Mkl tensor.\n+// When a previous node in the graph is an Mkl node, A_m will represent a valid\n+// Mkl tensor. But when a previous node is not an Mkl node, A_m will represent\n+// represent a dummy Mkl tensor.\n //\n // Rewriting rules:\n-//  - Selection of an op for rewriting happens by registering an op with this\n-//     pass. If an op is not registered, then it is not rewritten.\n+//  - Selection of a node for rewriting happens by registering the op type of\n+//    the node with the rewriting pass. If the op type is not registered, then\n+//    all nodes of this op type will not be rewritten.\n //  - Number of inputs after rewriting:\n-//      Since for every input Tensorflow tensor, the rewritten layer gets Mkl\n-//      tensor, rewritten op gets 2*N inputs, where N is the number of inputs\n-//      for original op.\n+//      Since for every input Tensorflow tensor, the rewritten node gets Mkl\n+//      tensor(s), rewritten node gets 2*N inputs, where N is the number of\n+//      inputs for the original node.\n //  - Number of outputs after rewriting:\n-//      Since for every output Tensorflow tensor, the rewritten layer generates\n-//      Mkl tensor, rewritten op generates 2*N outputs, where N is the number\n-//      of outputs of original op.\n+//      Since for every output Tensorflow tensor, the rewritten node generates\n+//      Mkl tensor(s), the rewritten node generates 2*N outputs, where N is the\n+//      number of outputs of the original node.\n //  - Ordering of Tensorflow tensors and Mkl tensors:\n-//      Since every op generates twice the number of inputs and outputs, one\n-//      could imagine different ordering among Tensorflow tensors and Mkl\n-//      tensors. E.g., let's assume an op 'Conv2D' takes (A, B) as input, then\n-//      new op 'MklConv2D' can take (A, A_m, B, B_m) as input or it can also\n-//      take (A, B, A_m, B_m) as input. Among N inputs one can get N!\n-//      permutations.\n+//      Since every rewritten node generates twice the number of inputs and\n+//      outputs, one ould imagine various orderings among Tensorflow tensors", "path": "tensorflow/core/graph/mkl_layout_pass.cc", "position": null, "original_position": 72, "commit_id": "b5ef5bfcb39a0ba0cef4e1f7e9d766344f918ab2", "original_commit_id": "75496707d8c32d960561e0e0fe3735d64aeecd5b", "user": {"login": "zhangyaobit", "id": 1034716, "node_id": "MDQ6VXNlcjEwMzQ3MTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1034716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangyaobit", "html_url": "https://github.com/zhangyaobit", "followers_url": "https://api.github.com/users/zhangyaobit/followers", "following_url": "https://api.github.com/users/zhangyaobit/following{/other_user}", "gists_url": "https://api.github.com/users/zhangyaobit/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangyaobit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangyaobit/subscriptions", "organizations_url": "https://api.github.com/users/zhangyaobit/orgs", "repos_url": "https://api.github.com/users/zhangyaobit/repos", "events_url": "https://api.github.com/users/zhangyaobit/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangyaobit/received_events", "type": "User", "site_admin": false}, "body": "ould --> could", "created_at": "2017-04-13T22:18:35Z", "updated_at": "2017-04-13T23:37:54Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/8968#discussion_r111499136", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/8968", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/111499136"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/8968#discussion_r111499136"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/8968"}}, "body_html": "<p>ould --&gt; could</p>", "body_text": "ould --> could"}