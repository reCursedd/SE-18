{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/111265415", "pull_request_review_id": 32494753, "id": 111265415, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMTI2NTQxNQ==", "diff_hunk": "@@ -2843,6 +2843,211 @@ NOTE Do not invoke this operator directly in Python. Graph rewrite pass is\n expected to invoke these operators.\n )doc\");\n \n+REGISTER_OP(\"MklLRN\")\n+    .Input(\"input: T\")\n+    .Input(\"mkl_input: uint8\")\n+    .Output(\"output: T\")\n+    .Output(\"workspace: T\")\n+    .Output(\"mkl_output: uint8\")\n+    .Output(\"mkl_workspace: uint8\")\n+    .Attr(\"depth_radius: int = 5\")\n+    .Attr(\"bias: float = 1.0\")\n+    .Attr(\"alpha: float = 1.0\")\n+    .Attr(\"beta: float = 0.5\")\n+    .Attr(\"workspace_enabled: bool = false\")\n+    .Attr(\"T: {float, half} = DT_FLOAT\")\n+    .SetShapeFn([](InferenceContext* c) {\n+      return UnchangedShapeWithRank(c, 4);\n+    })\n+    .Doc(R\"doc(\n+MKL version of LRN operator. Uses MKL DNN APIs to perform local response\n+normalization.\n+\n+NOTE Do not invoke this operator directly in Python. Graph rewrite pass is\n+expected to invoke these operators.\n+)doc\");\n+\n+REGISTER_OP(\"MklLRNGrad\")\n+    .Input(\"input_grads: T\")\n+    .Input(\"input_image: T\")\n+    .Input(\"output_image: T\")\n+    .Input(\"workspace: T\")\n+    .Input(\"mkl_input_grads: uint8\")\n+    .Input(\"mkl_input_image: uint8\")\n+    .Input(\"mkl_output_image: uint8\")\n+    .Input(\"mkl_workspace: uint8\")\n+    .Output(\"output: T\")\n+    .Output(\"mkl_output: uint8\")\n+    .Attr(\"depth_radius: int = 5\")\n+    .Attr(\"bias: float = 1.0\")\n+    .Attr(\"alpha: float = 1.0\")\n+    .Attr(\"beta: float = 0.5\")\n+    .Attr(\"workspace_enabled: bool = false\")\n+    .Attr(\"T: {float, half} = DT_FLOAT\")\n+    .SetShapeFn([](InferenceContext* c) {\n+      ShapeHandle s;\n+      TF_RETURN_IF_ERROR(c->WithRank(c->input(0), 4, &s));  // input_grads\n+      TF_RETURN_IF_ERROR(c->Merge(s, c->input(1), &s));     // input_image\n+      TF_RETURN_IF_ERROR(c->Merge(s, c->input(2), &s));     // output_image\n+      c->set_output(0, s);\n+      return Status::OK();\n+    })\n+    .Doc(R\"doc(\n+MKL version of LRNGrad operator. Uses MKL DNN APIs to compute gradient for\n+local response normalization.\n+\n+NOTE Do not invoke this operator directly in Python. Graph rewrite pass is\n+expected to invoke these operators.\n+)doc\");\n+\n+REGISTER_OP(\"MklFusedBatchNorm\")\n+    .Input(\"x: T\")\n+    .Input(\"scale: T\")\n+    .Input(\"offset: T\")\n+    .Input(\"mean: T\")\n+    .Input(\"variance: T\")\n+    .Input(\"mkl_x: uint8\")\n+    .Input(\"mkl_scale: uint8\")\n+    .Input(\"mkl_offset: uint8\")\n+    .Input(\"mkl_mean: uint8\")\n+    .Input(\"mkl_variance: uint8\")\n+    .Output(\"y: T\")\n+    .Output(\"batch_mean: T\")\n+    .Output(\"batch_variance: T\")\n+    .Output(\"reserve_space_1: T\")", "path": "tensorflow/core/ops/nn_ops.cc", "position": 179, "original_position": 179, "commit_id": "b5ef5bfcb39a0ba0cef4e1f7e9d766344f918ab2", "original_commit_id": "67f9925ef9ceed02892c200a3122092ab497943a", "user": {"login": "zhangyaobit", "id": 1034716, "node_id": "MDQ6VXNlcjEwMzQ3MTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1034716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangyaobit", "html_url": "https://github.com/zhangyaobit", "followers_url": "https://api.github.com/users/zhangyaobit/followers", "following_url": "https://api.github.com/users/zhangyaobit/following{/other_user}", "gists_url": "https://api.github.com/users/zhangyaobit/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangyaobit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangyaobit/subscriptions", "organizations_url": "https://api.github.com/users/zhangyaobit/orgs", "repos_url": "https://api.github.com/users/zhangyaobit/repos", "events_url": "https://api.github.com/users/zhangyaobit/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangyaobit/received_events", "type": "User", "site_admin": false}, "body": "Looks like reserve_space_1 and reserve_space_2 are not needed in this case. Are you able to reuse batch_mean and batch_variance in MklFusedBatchNormGrad? If so, I think we can remove these two reserved space.\r\n\r\nFor CuDNN, this is not the case, because they compute the inverse of variance, which is not compatible with TensorFlow, and that's why we introduce the two reserved spaces; but for Mkl, looks like these two reserved spaces are not needed.", "created_at": "2017-04-12T21:30:50Z", "updated_at": "2017-04-13T23:37:54Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/8968#discussion_r111265415", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/8968", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/111265415"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/8968#discussion_r111265415"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/8968"}}, "body_html": "<p>Looks like reserve_space_1 and reserve_space_2 are not needed in this case. Are you able to reuse batch_mean and batch_variance in MklFusedBatchNormGrad? If so, I think we can remove these two reserved space.</p>\n<p>For CuDNN, this is not the case, because they compute the inverse of variance, which is not compatible with TensorFlow, and that's why we introduce the two reserved spaces; but for Mkl, looks like these two reserved spaces are not needed.</p>", "body_text": "Looks like reserve_space_1 and reserve_space_2 are not needed in this case. Are you able to reuse batch_mean and batch_variance in MklFusedBatchNormGrad? If so, I think we can remove these two reserved space.\nFor CuDNN, this is not the case, because they compute the inverse of variance, which is not compatible with TensorFlow, and that's why we introduce the two reserved spaces; but for Mkl, looks like these two reserved spaces are not needed."}