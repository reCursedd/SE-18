{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/111069454", "pull_request_review_id": 32280177, "id": 111069454, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMTA2OTQ1NA==", "diff_hunk": "@@ -561,76 +727,273 @@ static void FillInputs(const Node* n,\n   }\n }\n \n+void MklLayoutRewritePass::GetNodesProducingTFTensorList(\n+    const gtl::InlinedVector<std::pair<Node*, int>, 4>& inputs,\n+    int* input_idx, int list_length,\n+    std::vector<NodeBuilder::NodeOut>* output_nodes) {\n+  CHECK_LT(*input_idx, inputs.size());\n+  CHECK_GT(list_length, 0);\n+  CHECK_NOTNULL(output_nodes);\n+  output_nodes->reserve(list_length);\n+\n+  while (list_length != 0) {\n+    CHECK_GT(list_length, 0);\n+    CHECK_LE(*input_idx, inputs.size());\n+    Node* n = inputs[*input_idx].first;\n+    int slot = inputs[*input_idx].second;\n+    const OpDef::ArgDef& arg = n->op_def().output_arg(slot);\n+    // If input node 'n' is producing a list/array output at output\n+    // slot 'slot' then we need to find out the length of that list/array.\n+    if (ArgIsList(arg)) {\n+      int N = GetTensorListLength(arg, n);\n+      CHECK_LE(N, list_length);\n+      for (int j = 0; j < N; j++) {\n+        output_nodes->push_back(NodeBuilder::NodeOut(n, slot));\n+      }\n+      (*input_idx)++;\n+      list_length -= N;\n+    } else {\n+      // But if input node 'n' is just producing a single tensor at\n+      // output slot 'slot' then we just add that single node.\n+      output_nodes->push_back(NodeBuilder::NodeOut(n, slot));\n+      (*input_idx)++;\n+      list_length--;\n+    }\n+  }\n+}\n+\n // TODO(nhasabni) We should move this to mkl_util.h.\n-void MklLayoutRewritePass::GetDummyMklTensorNode(std::unique_ptr<Graph>* g,\n-                                                 Node** out, Node* orign) {\n+void MklLayoutRewritePass::GetDummyMklTensorNode(\n+    std::unique_ptr<Graph>* g, Node** out, Node* orig_node) {\n   // We use a tensor of shape {8} and value 0,0,0,0,0,0,0,0 to represent\n   // dummy Mkl tensor. 8 = 2*size_t.\n   const DataType dt = DataTypeToEnum<uint8>::v();\n   TensorProto proto;\n   proto.set_dtype(dt);\n   uint8 zero[8] = {0, 0, 0, 0, 0, 0, 0, 0};\n-  proto.set_tensor_content(const_cast<const void*>(static_cast<void*>(&zero)),\n-                           8);\n+  proto.set_tensor_content(const_cast<const void*>(\n+      static_cast<void*>(&zero)), 8);\n   TensorShape dummy_shape({8});\n   dummy_shape.AsProto(proto.mutable_tensor_shape());\n-  TF_CHECK_OK(\n-      NodeBuilder((*g)->NewName(\"DMT\"), \"Const\")\n-          .Attr(\"value\", proto)\n-          .Attr(\"dtype\", dt)\n-          .Device(orign->def().device())  // We place this node on same\n-                                          // device as device of original\n-                                          // node.\n-          .Finalize(&**g, out));\n-  (*out)->set_assigned_device_name(orign->assigned_device_name());\n+  TF_CHECK_OK(NodeBuilder((*g)->NewName(\"DMT\"), \"Const\")\n+                 .Attr(\"value\", proto)\n+                 .Attr(\"dtype\", dt)\n+                 .Device(orig_node->def().device())  // We place this node on\n+                                             // same device as device of", "path": "tensorflow/core/graph/mkl_layout_pass.cc", "position": null, "original_position": 677, "commit_id": "b5ef5bfcb39a0ba0cef4e1f7e9d766344f918ab2", "original_commit_id": "67f9925ef9ceed02892c200a3122092ab497943a", "user": {"login": "zhangyaobit", "id": 1034716, "node_id": "MDQ6VXNlcjEwMzQ3MTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1034716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangyaobit", "html_url": "https://github.com/zhangyaobit", "followers_url": "https://api.github.com/users/zhangyaobit/followers", "following_url": "https://api.github.com/users/zhangyaobit/following{/other_user}", "gists_url": "https://api.github.com/users/zhangyaobit/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangyaobit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangyaobit/subscriptions", "organizations_url": "https://api.github.com/users/zhangyaobit/orgs", "repos_url": "https://api.github.com/users/zhangyaobit/repos", "events_url": "https://api.github.com/users/zhangyaobit/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangyaobit/received_events", "type": "User", "site_admin": false}, "body": "Fix indentation?", "created_at": "2017-04-12T05:54:52Z", "updated_at": "2017-04-13T23:37:54Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/8968#discussion_r111069454", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/8968", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/111069454"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/8968#discussion_r111069454"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/8968"}}, "body_html": "<p>Fix indentation?</p>", "body_text": "Fix indentation?"}