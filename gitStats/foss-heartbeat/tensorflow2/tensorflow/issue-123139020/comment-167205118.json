{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/167205118", "html_url": "https://github.com/tensorflow/tensorflow/issues/566#issuecomment-167205118", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/566", "id": 167205118, "node_id": "MDEyOklzc3VlQ29tbWVudDE2NzIwNTExOA==", "user": {"login": "davefairtex", "id": 16368350, "node_id": "MDQ6VXNlcjE2MzY4MzUw", "avatar_url": "https://avatars2.githubusercontent.com/u/16368350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davefairtex", "html_url": "https://github.com/davefairtex", "followers_url": "https://api.github.com/users/davefairtex/followers", "following_url": "https://api.github.com/users/davefairtex/following{/other_user}", "gists_url": "https://api.github.com/users/davefairtex/gists{/gist_id}", "starred_url": "https://api.github.com/users/davefairtex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davefairtex/subscriptions", "organizations_url": "https://api.github.com/users/davefairtex/orgs", "repos_url": "https://api.github.com/users/davefairtex/repos", "events_url": "https://api.github.com/users/davefairtex/events{/privacy}", "received_events_url": "https://api.github.com/users/davefairtex/received_events", "type": "User", "site_admin": false}, "created_at": "2015-12-25T07:41:50Z", "updated_at": "2015-12-25T07:41:50Z", "author_association": "NONE", "body_html": "<p>rekha- thanks for the update.  With your help I found the re2::FLAGS_minloglevel variable in the shared object, but I have no way of setting it directly from python.  (If I were using C++ I could totally do it - but I'm not).   I tried setting it using the python gflags interface:</p>\n<p>import tensorflow<br>\nimport gflags<br>\ngflags.ADOPT_module_key_flags(tensorflow)<br>\ngflags.FLAGS(['-minloglevel', '3'])<br>\ntensorflow.Session()</p>\n<p>but that still gives me the log messages.  Is this the correct way to set the tensorflow gflags?  (Is this actually a tensorflow module gflag?  It does show up in \"nm _pywrap_tensorflow.so\")</p>\n<p>It would be awesome if the code had only one logging mechanism, controllable via python.</p>\n<p>I know I can use sed; it just seemed so disagreeable to do that.  I was hoping there was a three-line \"real\" way to fix the problem.</p>", "body_text": "rekha- thanks for the update.  With your help I found the re2::FLAGS_minloglevel variable in the shared object, but I have no way of setting it directly from python.  (If I were using C++ I could totally do it - but I'm not).   I tried setting it using the python gflags interface:\nimport tensorflow\nimport gflags\ngflags.ADOPT_module_key_flags(tensorflow)\ngflags.FLAGS(['-minloglevel', '3'])\ntensorflow.Session()\nbut that still gives me the log messages.  Is this the correct way to set the tensorflow gflags?  (Is this actually a tensorflow module gflag?  It does show up in \"nm _pywrap_tensorflow.so\")\nIt would be awesome if the code had only one logging mechanism, controllable via python.\nI know I can use sed; it just seemed so disagreeable to do that.  I was hoping there was a three-line \"real\" way to fix the problem.", "body": "rekha- thanks for the update.  With your help I found the re2::FLAGS_minloglevel variable in the shared object, but I have no way of setting it directly from python.  (If I were using C++ I could totally do it - but I'm not).   I tried setting it using the python gflags interface:\n\nimport tensorflow\nimport gflags\ngflags.ADOPT_module_key_flags(tensorflow)\ngflags.FLAGS(['-minloglevel', '3'])\ntensorflow.Session()\n\nbut that still gives me the log messages.  Is this the correct way to set the tensorflow gflags?  (Is this actually a tensorflow module gflag?  It does show up in \"nm _pywrap_tensorflow.so\")\n\nIt would be awesome if the code had only one logging mechanism, controllable via python.\n\nI know I can use sed; it just seemed so disagreeable to do that.  I was hoping there was a three-line \"real\" way to fix the problem.\n"}