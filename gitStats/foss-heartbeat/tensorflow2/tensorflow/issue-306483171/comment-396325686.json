{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/396325686", "html_url": "https://github.com/tensorflow/tensorflow/issues/17825#issuecomment-396325686", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17825", "id": 396325686, "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjMyNTY4Ng==", "user": {"login": "rryan", "id": 26527, "node_id": "MDQ6VXNlcjI2NTI3", "avatar_url": "https://avatars3.githubusercontent.com/u/26527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rryan", "html_url": "https://github.com/rryan", "followers_url": "https://api.github.com/users/rryan/followers", "following_url": "https://api.github.com/users/rryan/following{/other_user}", "gists_url": "https://api.github.com/users/rryan/gists{/gist_id}", "starred_url": "https://api.github.com/users/rryan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rryan/subscriptions", "organizations_url": "https://api.github.com/users/rryan/orgs", "repos_url": "https://api.github.com/users/rryan/repos", "events_url": "https://api.github.com/users/rryan/events{/privacy}", "received_events_url": "https://api.github.com/users/rryan/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-11T17:41:46Z", "updated_at": "2018-06-11T17:41:46Z", "author_association": "MEMBER", "body_html": "<p>I'm learning that a lot of RFFT implementations simply zero the imaginary component of the first frequency bin instead of computing them.</p>\n<p>For example, numpy.fft.rfft (FFTPack) does this:<br>\n<a href=\"https://github.com/numpy/numpy/blob/master/numpy/fft/fftpack_litemodule.c#L193-L200\">https://github.com/numpy/numpy/blob/master/numpy/fft/fftpack_litemodule.c#L193-L200</a></p>\n<p>Due to floating point error I think it's unlikely we'll reach true zero, so maybe we should follow suit.</p>", "body_text": "I'm learning that a lot of RFFT implementations simply zero the imaginary component of the first frequency bin instead of computing them.\nFor example, numpy.fft.rfft (FFTPack) does this:\nhttps://github.com/numpy/numpy/blob/master/numpy/fft/fftpack_litemodule.c#L193-L200\nDue to floating point error I think it's unlikely we'll reach true zero, so maybe we should follow suit.", "body": "I'm learning that a lot of RFFT implementations simply zero the imaginary component of the first frequency bin instead of computing them. \r\n\r\nFor example, numpy.fft.rfft (FFTPack) does this:\r\nhttps://github.com/numpy/numpy/blob/master/numpy/fft/fftpack_litemodule.c#L193-L200\r\n\r\nDue to floating point error I think it's unlikely we'll reach true zero, so maybe we should follow suit."}