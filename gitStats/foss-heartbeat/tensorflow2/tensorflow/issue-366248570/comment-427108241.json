{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/427108241", "html_url": "https://github.com/tensorflow/tensorflow/issues/22692#issuecomment-427108241", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22692", "id": 427108241, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzEwODI0MQ==", "user": {"login": "anj-s", "id": 32556631, "node_id": "MDQ6VXNlcjMyNTU2NjMx", "avatar_url": "https://avatars1.githubusercontent.com/u/32556631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anj-s", "html_url": "https://github.com/anj-s", "followers_url": "https://api.github.com/users/anj-s/followers", "following_url": "https://api.github.com/users/anj-s/following{/other_user}", "gists_url": "https://api.github.com/users/anj-s/gists{/gist_id}", "starred_url": "https://api.github.com/users/anj-s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anj-s/subscriptions", "organizations_url": "https://api.github.com/users/anj-s/orgs", "repos_url": "https://api.github.com/users/anj-s/repos", "events_url": "https://api.github.com/users/anj-s/events{/privacy}", "received_events_url": "https://api.github.com/users/anj-s/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-04T17:43:36Z", "updated_at": "2018-10-04T17:43:52Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=23486130\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/tfboyd\">@tfboyd</a> You can try using DistributionStrategy APIs directly and your code snippet should look something like this:</p>\n<pre><code>  with my_distribution.scope():\n    iterator = my_distribution.distribute_dataset(\n        dataset).make_one_shot_iterator()\n    tower_train_ops = my_distribution.call_for_each_tower(\n        tower_fn, iterator.get_next())\n    train_op = tf.group(my_distribution.unwrap(tower_train_ops))\n</code></pre>\n<p>If you use MirroredStrategy for distributing your model on multiple GPUs on a single machine DistributionStrategy handles aggregating gradients using allreduce.</p>\n<p>From the above conversation it seems like <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=32110820\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/kazemSafari\">@kazemSafari</a> wants to implement the allreduce functionality. Hence I am not sure if using DistributionStrategy API directly will help.</p>", "body_text": "@tfboyd You can try using DistributionStrategy APIs directly and your code snippet should look something like this:\n  with my_distribution.scope():\n    iterator = my_distribution.distribute_dataset(\n        dataset).make_one_shot_iterator()\n    tower_train_ops = my_distribution.call_for_each_tower(\n        tower_fn, iterator.get_next())\n    train_op = tf.group(my_distribution.unwrap(tower_train_ops))\n\nIf you use MirroredStrategy for distributing your model on multiple GPUs on a single machine DistributionStrategy handles aggregating gradients using allreduce.\nFrom the above conversation it seems like @kazemSafari wants to implement the allreduce functionality. Hence I am not sure if using DistributionStrategy API directly will help.", "body": "@tfboyd You can try using DistributionStrategy APIs directly and your code snippet should look something like this:\r\n  ```\r\n    with my_distribution.scope():\r\n      iterator = my_distribution.distribute_dataset(\r\n          dataset).make_one_shot_iterator()\r\n      tower_train_ops = my_distribution.call_for_each_tower(\r\n          tower_fn, iterator.get_next())\r\n      train_op = tf.group(my_distribution.unwrap(tower_train_ops))\r\n``` \r\n\r\nIf you use MirroredStrategy for distributing your model on multiple GPUs on a single machine DistributionStrategy handles aggregating gradients using allreduce. \r\n\r\nFrom the above conversation it seems like @kazemSafari wants to implement the allreduce functionality. Hence I am not sure if using DistributionStrategy API directly will help.  \r\n\r\n\r\n"}