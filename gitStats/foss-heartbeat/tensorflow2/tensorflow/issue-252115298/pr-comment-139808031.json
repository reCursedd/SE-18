{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/139808031", "pull_request_review_id": 63791725, "id": 139808031, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzOTgwODAzMQ==", "diff_hunk": "@@ -616,7 +616,9 @@ class ScopedPoolingDescriptor {\n       LOG(FATAL) << \"could not create cudnn pooling descriptor: \"\n                  << ToString(status);\n     }\n-\n+    bool propagate_nans;\n+    tensorflow::ReadBoolFromEnvVar(\"TF_ENABLE_MAXPOOL_NANPROP\",", "path": "tensorflow/stream_executor/cuda/cuda_dnn.cc", "position": null, "original_position": 6, "commit_id": "45b5b1c57a5c19ac8510fc14db6d4435b4fe2f07", "original_commit_id": "75b29d2b271e2517f3564467594864efb3b32b86", "user": {"login": "nluehr", "id": 1873655, "node_id": "MDQ6VXNlcjE4NzM2NTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1873655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nluehr", "html_url": "https://github.com/nluehr", "followers_url": "https://api.github.com/users/nluehr/followers", "following_url": "https://api.github.com/users/nluehr/following{/other_user}", "gists_url": "https://api.github.com/users/nluehr/gists{/gist_id}", "starred_url": "https://api.github.com/users/nluehr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nluehr/subscriptions", "organizations_url": "https://api.github.com/users/nluehr/orgs", "repos_url": "https://api.github.com/users/nluehr/repos", "events_url": "https://api.github.com/users/nluehr/events{/privacy}", "received_events_url": "https://api.github.com/users/nluehr/received_events", "type": "User", "site_admin": false}, "body": "Most other examples of caching envars are static, but we need to be able to toggle the value in order to test both propagating and non-propagating nans conveniently. This will require plumbing the propagation flag through from the MaxPoolingGradOp<> class in maxpooling_op.cc. I'll also also add a nan-prop field to the dnn::PoolingDescriptor wrapper class.", "created_at": "2017-09-19T20:25:22Z", "updated_at": "2017-09-19T23:35:57Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/12504#discussion_r139808031", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/12504", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/139808031"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/12504#discussion_r139808031"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/12504"}}, "body_html": "<p>Most other examples of caching envars are static, but we need to be able to toggle the value in order to test both propagating and non-propagating nans conveniently. This will require plumbing the propagation flag through from the MaxPoolingGradOp&lt;&gt; class in maxpooling_op.cc. I'll also also add a nan-prop field to the dnn::PoolingDescriptor wrapper class.</p>", "body_text": "Most other examples of caching envars are static, but we need to be able to toggle the value in order to test both propagating and non-propagating nans conveniently. This will require plumbing the propagation flag through from the MaxPoolingGradOp<> class in maxpooling_op.cc. I'll also also add a nan-prop field to the dnn::PoolingDescriptor wrapper class.", "in_reply_to_id": 139574307}