{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/407573639", "html_url": "https://github.com/tensorflow/tensorflow/issues/20842#issuecomment-407573639", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20842", "id": 407573639, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzU3MzYzOQ==", "user": {"login": "ORippler", "id": 24656669, "node_id": "MDQ6VXNlcjI0NjU2NjY5", "avatar_url": "https://avatars0.githubusercontent.com/u/24656669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ORippler", "html_url": "https://github.com/ORippler", "followers_url": "https://api.github.com/users/ORippler/followers", "following_url": "https://api.github.com/users/ORippler/following{/other_user}", "gists_url": "https://api.github.com/users/ORippler/gists{/gist_id}", "starred_url": "https://api.github.com/users/ORippler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ORippler/subscriptions", "organizations_url": "https://api.github.com/users/ORippler/orgs", "repos_url": "https://api.github.com/users/ORippler/repos", "events_url": "https://api.github.com/users/ORippler/events{/privacy}", "received_events_url": "https://api.github.com/users/ORippler/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-24T22:33:09Z", "updated_at": "2018-07-25T05:24:56Z", "author_association": "NONE", "body_html": "<p>Okay, so I am still a bit confused of what the expected behavior is for <code>tf.keras.layers</code>, <code>tf.layers</code> and <code>variable_scopes</code> and <code>tf.get_variable</code> with regard to the future.</p>\n<p>As of 1.9.0, the <code>tf.keras.layers.Layer</code> and all subclasses no longer allow for <a href=\"https://github.com/tensorflow/tensorflow/blob/r1.9/tensorflow/python/training/checkpointable/util.py#L193\">variable reusing, but instead use a \"pared-down\"</a> version of <code>tf.get_variable</code>. Furthermore, the <code>tf.layers</code> as well as <code>tf.contrib.layers</code> still allow for reusing with <code>tf.variable_scopes</code> and perform all required checks.</p>\n<p>However, according to <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"275163354\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/14703\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/14703/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/14703\">#14703</a>, <code>tf.layers</code> is set to be removed in the future.</p>\n<p>I would be very delighted, if you could give a roadmap on what's the future of a <code>high-level layers API</code> for tensorflow (as additionally requested here <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"289171688\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/16182\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/16182/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/16182\">#16182</a>, where use of <code>tf.layers</code> together with estimators are suggested as best practice).</p>", "body_text": "Okay, so I am still a bit confused of what the expected behavior is for tf.keras.layers, tf.layers and variable_scopes and tf.get_variable with regard to the future.\nAs of 1.9.0, the tf.keras.layers.Layer and all subclasses no longer allow for variable reusing, but instead use a \"pared-down\" version of tf.get_variable. Furthermore, the tf.layers as well as tf.contrib.layers still allow for reusing with tf.variable_scopes and perform all required checks.\nHowever, according to #14703, tf.layers is set to be removed in the future.\nI would be very delighted, if you could give a roadmap on what's the future of a high-level layers API for tensorflow (as additionally requested here #16182, where use of tf.layers together with estimators are suggested as best practice).", "body": "Okay, so I am still a bit confused of what the expected behavior is for `tf.keras.layers`, `tf.layers` and `variable_scopes` and `tf.get_variable` with regard to the future.\r\n\r\nAs of 1.9.0, the `tf.keras.layers.Layer` and all subclasses no longer allow for [variable reusing, but instead use a \"pared-down\"](https://github.com/tensorflow/tensorflow/blob/r1.9/tensorflow/python/training/checkpointable/util.py#L193) version of `tf.get_variable`. Furthermore, the `tf.layers` as well as `tf.contrib.layers` still allow for reusing with `tf.variable_scopes` and perform all required checks.\r\n\r\nHowever, according to #14703, `tf.layers` is set to be removed in the future. \r\n\r\nI would be very delighted, if you could give a roadmap on what's the future of a `high-level layers API` for tensorflow (as additionally requested here #16182, where use of `tf.layers` together with estimators are suggested as best practice)."}