{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17116", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17116/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17116/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17116/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17116", "id": 298139714, "node_id": "MDU6SXNzdWUyOTgxMzk3MTQ=", "number": 17116, "title": "Apparent thread-safety issue in tensorflow/core/common_runtime/executor.cc", "user": {"login": "ghost", "id": 10137, "node_id": "MDQ6VXNlcjEwMTM3", "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2018-02-19T01:31:24Z", "updated_at": "2018-04-07T20:35:17Z", "closed_at": "2018-04-07T20:35:17Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: No</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: macOS 10.13.3</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: source</li>\n<li><strong>TensorFlow version (use command below)</strong>: ('v1.6.0-rc1-277-g993006fa76', '1.6.0-rc1')</li>\n<li><strong>Python version</strong>: Python 2.7.14</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.10.1-homebrew</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: 4.2.1</li>\n<li><strong>CUDA/cuDNN version</strong>: 9.1 / 7.0.5</li>\n<li><strong>GPU model and memory</strong>: NVIDIA GeForce GT 750M with 2 GB device memory (CUDA compute capability 3.0)</li>\n<li><strong>Exact command to reproduce</strong>: N/A</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>Clang warns about a thread-safety issue in <code>tensorflow/core/common_runtime/executor.cc</code> at line 2338 which warning appears to be valid.</p>\n<p>Here is the code around that line:</p>\n<div class=\"highlight highlight-source-c++\"><pre>  <span class=\"pl-k\">if</span> (parent_frame != <span class=\"pl-c1\">nullptr</span>) {\n    mutex_lock <span class=\"pl-smi\">paranet_frame_lock</span>(parent_frame-&gt;<span class=\"pl-smi\">mu</span>);\n    <span class=\"pl-c\"><span class=\"pl-c\">//</span> Propagate all the dead exits to the parent frame.</span>\n    <span class=\"pl-k\">for</span> (<span class=\"pl-k\">const</span> Node* node : frame-&gt;<span class=\"pl-smi\">dead_exits</span>) {                         <span class=\"pl-c\"><span class=\"pl-c\">//</span> Line 2338</span>\n      <span class=\"pl-k\">auto</span> parent_iter_state = parent_frame-&gt;<span class=\"pl-c1\">GetIteration</span>(parent_iter);</pre></div>\n<p>A lock is held on <code>parent_frame-&gt;mu</code>, but not <code>frame-&gt;mu</code>.</p>\n<p>If there is no thread safety issue, I think that a comment should be added to explain why, as it's not clear.</p>\n<h3>Source code / logs</h3>\n<pre>tensorflow/core/common_runtime/executor.cc:2338:27: warning: reading variable 'dead_exits' requires holding mutex 'frame-&gt;mu' [-Wthread-safety-precise]\n    for (const Node* node : frame-&gt;dead_exits) {\n                          ^\ntensorflow/core/common_runtime/executor.cc:2338:27: note: found near match 'parent_frame-&gt;mu'\ntensorflow/core/common_runtime/executor.cc:2338:27: warning: reading variable 'dead_exits' requires holding mutex 'frame-&gt;mu' [-Wthread-safety-precise]\n    for (const Node* node : frame-&gt;dead_exits) {\n                          ^\ntensorflow/core/common_runtime/executor.cc:2338:27: note: found near match 'parent_frame-&gt;mu'\n</pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): No\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): macOS 10.13.3\nTensorFlow installed from (source or binary): source\nTensorFlow version (use command below): ('v1.6.0-rc1-277-g993006fa76', '1.6.0-rc1')\nPython version: Python 2.7.14\nBazel version (if compiling from source): 0.10.1-homebrew\nGCC/Compiler version (if compiling from source): 4.2.1\nCUDA/cuDNN version: 9.1 / 7.0.5\nGPU model and memory: NVIDIA GeForce GT 750M with 2 GB device memory (CUDA compute capability 3.0)\nExact command to reproduce: N/A\n\nDescribe the problem\nClang warns about a thread-safety issue in tensorflow/core/common_runtime/executor.cc at line 2338 which warning appears to be valid.\nHere is the code around that line:\n  if (parent_frame != nullptr) {\n    mutex_lock paranet_frame_lock(parent_frame->mu);\n    // Propagate all the dead exits to the parent frame.\n    for (const Node* node : frame->dead_exits) {                         // Line 2338\n      auto parent_iter_state = parent_frame->GetIteration(parent_iter);\nA lock is held on parent_frame->mu, but not frame->mu.\nIf there is no thread safety issue, I think that a comment should be added to explain why, as it's not clear.\nSource code / logs\ntensorflow/core/common_runtime/executor.cc:2338:27: warning: reading variable 'dead_exits' requires holding mutex 'frame->mu' [-Wthread-safety-precise]\n    for (const Node* node : frame->dead_exits) {\n                          ^\ntensorflow/core/common_runtime/executor.cc:2338:27: note: found near match 'parent_frame->mu'\ntensorflow/core/common_runtime/executor.cc:2338:27: warning: reading variable 'dead_exits' requires holding mutex 'frame->mu' [-Wthread-safety-precise]\n    for (const Node* node : frame->dead_exits) {\n                          ^\ntensorflow/core/common_runtime/executor.cc:2338:27: note: found near match 'parent_frame->mu'", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: macOS 10.13.3\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: ('v1.6.0-rc1-277-g993006fa76', '1.6.0-rc1')\r\n- **Python version**: Python 2.7.14\r\n- **Bazel version (if compiling from source)**: 0.10.1-homebrew\r\n- **GCC/Compiler version (if compiling from source)**: 4.2.1\r\n- **CUDA/cuDNN version**: 9.1 / 7.0.5\r\n- **GPU model and memory**: NVIDIA GeForce GT 750M with 2 GB device memory (CUDA compute capability 3.0)\r\n- **Exact command to reproduce**: N/A\r\n\r\n### Describe the problem\r\nClang warns about a thread-safety issue in `tensorflow/core/common_runtime/executor.cc` at line 2338 which warning appears to be valid.\r\n\r\nHere is the code around that line:\r\n\r\n```c++\r\n  if (parent_frame != nullptr) {\r\n    mutex_lock paranet_frame_lock(parent_frame->mu);\r\n    // Propagate all the dead exits to the parent frame.\r\n    for (const Node* node : frame->dead_exits) {                         // Line 2338\r\n      auto parent_iter_state = parent_frame->GetIteration(parent_iter);\r\n```\r\n\r\nA lock is held on `parent_frame->mu`, but not `frame->mu`.\r\n\r\nIf there is no thread safety issue, I think that a comment should be added to explain why, as it's not clear.\r\n\r\n### Source code / logs\r\n<pre>\r\ntensorflow/core/common_runtime/executor.cc:2338:27: warning: reading variable 'dead_exits' requires holding mutex 'frame->mu' [-Wthread-safety-precise]\r\n    for (const Node* node : frame->dead_exits) {\r\n                          ^\r\ntensorflow/core/common_runtime/executor.cc:2338:27: note: found near match 'parent_frame->mu'\r\ntensorflow/core/common_runtime/executor.cc:2338:27: warning: reading variable 'dead_exits' requires holding mutex 'frame->mu' [-Wthread-safety-precise]\r\n    for (const Node* node : frame->dead_exits) {\r\n                          ^\r\ntensorflow/core/common_runtime/executor.cc:2338:27: note: found near match 'parent_frame->mu'\r\n</pre>"}