{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/367053971", "html_url": "https://github.com/tensorflow/tensorflow/issues/17116#issuecomment-367053971", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17116", "id": 367053971, "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzA1Mzk3MQ==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-20T17:29:13Z", "updated_at": "2018-02-20T17:29:13Z", "author_association": "CONTRIBUTOR", "body_html": "<p>It looks like that code is only called here on L2027:</p>\n<p><div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/a4f1478134cdbf73f0ad7eda3e73407135a54566/tensorflow/core/common_runtime/executor.cc#L2024-L2027\">tensorflow/tensorflow/core/common_runtime/executor.cc</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 2024 to 2027\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/a4f1478134cdbf73f0ad7eda3e73407135a54566\">a4f1478</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L2024\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"2024\"></td>\n          <td id=\"LC2024\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">if</span> (is_frame_done) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L2025\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"2025\"></td>\n          <td id=\"LC2025\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   FrameState* parent_frame = input_frame-&gt;<span class=\"pl-smi\">parent_frame</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L2026\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"2026\"></td>\n          <td id=\"LC2026\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-k\">const</span> int64 parent_iter = input_frame-&gt;<span class=\"pl-smi\">parent_iter</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L2027\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"2027\"></td>\n          <td id=\"LC2027\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-c1\">DeleteFrame</span>(input_frame, ready); </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<p>I suspect that <code>is_frame_done</code> implies that there is only one thread operating on <code>frame</code>, but it doesn't look like any annotations or lock acquisitions protect that invariant.</p>", "body_text": "It looks like that code is only called here on L2027:\n\n  \n    \n      tensorflow/tensorflow/core/common_runtime/executor.cc\n    \n    \n        Lines 2024 to 2027\n      in\n      a4f1478\n    \n    \n    \n    \n\n        \n          \n           if (is_frame_done) { \n        \n\n        \n          \n             FrameState* parent_frame = input_frame->parent_frame; \n        \n\n        \n          \n             const int64 parent_iter = input_frame->parent_iter; \n        \n\n        \n          \n             DeleteFrame(input_frame, ready); \n        \n    \n  \n\n\nI suspect that is_frame_done implies that there is only one thread operating on frame, but it doesn't look like any annotations or lock acquisitions protect that invariant.", "body": "It looks like that code is only called here on L2027:\r\n\r\nhttps://github.com/tensorflow/tensorflow/blob/a4f1478134cdbf73f0ad7eda3e73407135a54566/tensorflow/core/common_runtime/executor.cc#L2024-L2027\r\n\r\nI suspect that `is_frame_done` implies that there is only one thread operating on `frame`, but it doesn't look like any annotations or lock acquisitions protect that invariant."}