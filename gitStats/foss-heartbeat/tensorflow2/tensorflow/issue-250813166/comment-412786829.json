{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/412786829", "html_url": "https://github.com/tensorflow/tensorflow/issues/12345#issuecomment-412786829", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12345", "id": 412786829, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjc4NjgyOQ==", "user": {"login": "darthdeus", "id": 123374, "node_id": "MDQ6VXNlcjEyMzM3NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/123374?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darthdeus", "html_url": "https://github.com/darthdeus", "followers_url": "https://api.github.com/users/darthdeus/followers", "following_url": "https://api.github.com/users/darthdeus/following{/other_user}", "gists_url": "https://api.github.com/users/darthdeus/gists{/gist_id}", "starred_url": "https://api.github.com/users/darthdeus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darthdeus/subscriptions", "organizations_url": "https://api.github.com/users/darthdeus/orgs", "repos_url": "https://api.github.com/users/darthdeus/repos", "events_url": "https://api.github.com/users/darthdeus/events{/privacy}", "received_events_url": "https://api.github.com/users/darthdeus/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-14T07:56:01Z", "updated_at": "2018-08-14T07:56:01Z", "author_association": "NONE", "body_html": "<p>Just as a small note regarding MonkeyType, it does work quite well. The only \"problem\" I encountered so far was when you're various tuples as <code>Iterable[T]</code> (don't ask me why), but it infers <code>Union[Tuple[T], Tuple[T, T], ...]</code>.</p>", "body_text": "Just as a small note regarding MonkeyType, it does work quite well. The only \"problem\" I encountered so far was when you're various tuples as Iterable[T] (don't ask me why), but it infers Union[Tuple[T], Tuple[T, T], ...].", "body": "Just as a small note regarding MonkeyType, it does work quite well. The only \"problem\" I encountered so far was when you're various tuples as `Iterable[T]` (don't ask me why), but it infers `Union[Tuple[T], Tuple[T, T], ...]`."}