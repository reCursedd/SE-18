{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/422084747", "html_url": "https://github.com/tensorflow/tensorflow/issues/21615#issuecomment-422084747", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21615", "id": 422084747, "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjA4NDc0Nw==", "user": {"login": "weinman", "id": 3750004, "node_id": "MDQ6VXNlcjM3NTAwMDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/3750004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weinman", "html_url": "https://github.com/weinman", "followers_url": "https://api.github.com/users/weinman/followers", "following_url": "https://api.github.com/users/weinman/following{/other_user}", "gists_url": "https://api.github.com/users/weinman/gists{/gist_id}", "starred_url": "https://api.github.com/users/weinman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weinman/subscriptions", "organizations_url": "https://api.github.com/users/weinman/orgs", "repos_url": "https://api.github.com/users/weinman/repos", "events_url": "https://api.github.com/users/weinman/events{/privacy}", "received_events_url": "https://api.github.com/users/weinman/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-17T16:36:47Z", "updated_at": "2018-09-17T16:36:47Z", "author_association": "NONE", "body_html": "<p>Thanks. I'm not sure how to best construct a minimum working example, but here's a more concrete sketch than the description in the OP.</p>\n<p>In our <code>model_fn.py</code> which has all the custom Estimator framework, we have something like ...</p>\n<pre><code>def train_fn( tune_from_model ): \n    \"\"\"Returns a function that trains the model\"\"\"\n\n    def train( features, labels, mode ):\n\n        train_op, loss = _get_training( )\n        scaffold = tf.train.Scaffold( init_fn=\n                                      _get_init_pretrained( tune_from ) )\n\n        return tf.estimator.EstimatorSpec( mode=mode, \n                                           loss=loss, \n                                           train_op=train_op,\n                                           scaffold=scaffold )\n    return train\n</code></pre>\n<p>and then in our  <code>train.py</code> driver</p>\n<pre><code>    # Initialize the classifier\n    classifier = tf.estimator.Estimator( config=_get_config(), \n                                         model_fn=model_fn.train_fn(FLAGS.tune_from),\n                                         model_dir=FLAGS.output )\n   \n    # Train the model\n    classifier.train( input_fn=_get_input, max_steps=FLAGS.max_num_steps )\n</code></pre>\n<p>The root issue seems to be tied to <a href=\"https://github.com/tensorflow/tensorflow/blob/c8a0dfc741736a59f8fd1776b71f38619d66da56/tensorflow/python/estimator/estimator.py#L1628\">this line/comment</a> in <code>estimator.py</code>.</p>", "body_text": "Thanks. I'm not sure how to best construct a minimum working example, but here's a more concrete sketch than the description in the OP.\nIn our model_fn.py which has all the custom Estimator framework, we have something like ...\ndef train_fn( tune_from_model ): \n    \"\"\"Returns a function that trains the model\"\"\"\n\n    def train( features, labels, mode ):\n\n        train_op, loss = _get_training( )\n        scaffold = tf.train.Scaffold( init_fn=\n                                      _get_init_pretrained( tune_from ) )\n\n        return tf.estimator.EstimatorSpec( mode=mode, \n                                           loss=loss, \n                                           train_op=train_op,\n                                           scaffold=scaffold )\n    return train\n\nand then in our  train.py driver\n    # Initialize the classifier\n    classifier = tf.estimator.Estimator( config=_get_config(), \n                                         model_fn=model_fn.train_fn(FLAGS.tune_from),\n                                         model_dir=FLAGS.output )\n   \n    # Train the model\n    classifier.train( input_fn=_get_input, max_steps=FLAGS.max_num_steps )\n\nThe root issue seems to be tied to this line/comment in estimator.py.", "body": "Thanks. I'm not sure how to best construct a minimum working example, but here's a more concrete sketch than the description in the OP.\r\n\r\nIn our `model_fn.py` which has all the custom Estimator framework, we have something like ...\r\n\r\n```\r\ndef train_fn( tune_from_model ): \r\n    \"\"\"Returns a function that trains the model\"\"\"\r\n\r\n    def train( features, labels, mode ):\r\n\r\n        train_op, loss = _get_training( )\r\n        scaffold = tf.train.Scaffold( init_fn=\r\n                                      _get_init_pretrained( tune_from ) )\r\n\r\n        return tf.estimator.EstimatorSpec( mode=mode, \r\n                                           loss=loss, \r\n                                           train_op=train_op,\r\n                                           scaffold=scaffold )\r\n    return train\r\n```\r\n\r\nand then in our  `train.py` driver \r\n\r\n```\r\n    # Initialize the classifier\r\n    classifier = tf.estimator.Estimator( config=_get_config(), \r\n                                         model_fn=model_fn.train_fn(FLAGS.tune_from),\r\n                                         model_dir=FLAGS.output )\r\n   \r\n    # Train the model\r\n    classifier.train( input_fn=_get_input, max_steps=FLAGS.max_num_steps )\r\n```\r\n\r\nThe root issue seems to be tied to [this line/comment](https://github.com/tensorflow/tensorflow/blob/c8a0dfc741736a59f8fd1776b71f38619d66da56/tensorflow/python/estimator/estimator.py#L1628) in `estimator.py`."}