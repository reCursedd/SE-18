{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/340662911", "html_url": "https://github.com/tensorflow/tensorflow/issues/14048#issuecomment-340662911", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14048", "id": 340662911, "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDY2MjkxMQ==", "user": {"login": "meccaLeccaHi", "id": 15203083, "node_id": "MDQ6VXNlcjE1MjAzMDgz", "avatar_url": "https://avatars2.githubusercontent.com/u/15203083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meccaLeccaHi", "html_url": "https://github.com/meccaLeccaHi", "followers_url": "https://api.github.com/users/meccaLeccaHi/followers", "following_url": "https://api.github.com/users/meccaLeccaHi/following{/other_user}", "gists_url": "https://api.github.com/users/meccaLeccaHi/gists{/gist_id}", "starred_url": "https://api.github.com/users/meccaLeccaHi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meccaLeccaHi/subscriptions", "organizations_url": "https://api.github.com/users/meccaLeccaHi/orgs", "repos_url": "https://api.github.com/users/meccaLeccaHi/repos", "events_url": "https://api.github.com/users/meccaLeccaHi/events{/privacy}", "received_events_url": "https://api.github.com/users/meccaLeccaHi/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-31T05:18:45Z", "updated_at": "2017-10-31T05:20:25Z", "author_association": "NONE", "body_html": "<p>OK, if I add '/usr/local/cuda-8.0/targets/x86_64-linux/lib' to my LD_LIBRARY_PATH, importing tensorflow is successful (so, many thanks to you for that). But, I am still experiencing my original error which is shown below:</p>\n<p>`$ python classify_image.py</p>\n<blockquote>\n<blockquote>\n<p>Downloading inception-2015-12-05.tgz 100.0%<br>\nSuccessfully downloaded inception-2015-12-05.tgz 88931400 bytes.<br>\n2017-10-30 22:14:54.542348: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.<br>\n2017-10-30 22:14:54.542378: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.<br>\n2017-10-30 22:14:54.705978: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:893] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero<br>\n2017-10-30 22:14:54.706540: I tensorflow/core/common_runtime/gpu/gpu_device.cc:955] Found device 0 with properties:<br>\nname: GeForce GTX TITAN X<br>\nmajor: 5 minor: 2 memoryClockRate (GHz) 1.2155<br>\npciBusID 0000:01:00.0<br>\nTotal memory: 11.92GiB<br>\nFree memory: 11.80GiB<br>\n2017-10-30 22:14:54.706561: I tensorflow/core/common_runtime/gpu/gpu_device.cc:976] DMA: 0<br>\n2017-10-30 22:14:54.706568: I tensorflow/core/common_runtime/gpu/gpu_device.cc:986] 0:   Y<br>\n2017-10-30 22:14:54.706578: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1045] Creating TensorFlow device (/gpu:0) -&gt; (device: 0, name: GeForce GTX TITAN X, pci bus id: 0000:01:00.0)<br>\n2017-10-30 22:14:55.237837: W tensorflow/core/framework/op_def_util.cc:333] Op BatchNormWithGlobalNormalization is deprecated. It will cease to work in GraphDef version 9. Use tf.nn.batch_normalization().<br>\n2017-10-30 22:14:58.319995: E tensorflow/stream_executor/cuda/cuda_dnn.cc:371] could not create cudnn handle: CUDNN_STATUS_INTERNAL_ERROR<br>\n2017-10-30 22:14:58.320026: E tensorflow/stream_executor/cuda/cuda_dnn.cc:338] could not destroy cudnn handle: CUDNN_STATUS_BAD_PARAM<br>\n2017-10-30 22:14:58.320035: F tensorflow/core/kernels/conv_ops.cc:672] Check failed: stream-&gt;parent()-&gt;GetConvolveAlgorithms( conv_parameters.ShouldIncludeWinogradNonfusedAlgo(), &amp;algorithms)<br>\nAborted (core dumped)<br>\n`</p>\n</blockquote>\n</blockquote>", "body_text": "OK, if I add '/usr/local/cuda-8.0/targets/x86_64-linux/lib' to my LD_LIBRARY_PATH, importing tensorflow is successful (so, many thanks to you for that). But, I am still experiencing my original error which is shown below:\n`$ python classify_image.py\n\n\nDownloading inception-2015-12-05.tgz 100.0%\nSuccessfully downloaded inception-2015-12-05.tgz 88931400 bytes.\n2017-10-30 22:14:54.542348: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.\n2017-10-30 22:14:54.542378: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\n2017-10-30 22:14:54.705978: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:893] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n2017-10-30 22:14:54.706540: I tensorflow/core/common_runtime/gpu/gpu_device.cc:955] Found device 0 with properties:\nname: GeForce GTX TITAN X\nmajor: 5 minor: 2 memoryClockRate (GHz) 1.2155\npciBusID 0000:01:00.0\nTotal memory: 11.92GiB\nFree memory: 11.80GiB\n2017-10-30 22:14:54.706561: I tensorflow/core/common_runtime/gpu/gpu_device.cc:976] DMA: 0\n2017-10-30 22:14:54.706568: I tensorflow/core/common_runtime/gpu/gpu_device.cc:986] 0:   Y\n2017-10-30 22:14:54.706578: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1045] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX TITAN X, pci bus id: 0000:01:00.0)\n2017-10-30 22:14:55.237837: W tensorflow/core/framework/op_def_util.cc:333] Op BatchNormWithGlobalNormalization is deprecated. It will cease to work in GraphDef version 9. Use tf.nn.batch_normalization().\n2017-10-30 22:14:58.319995: E tensorflow/stream_executor/cuda/cuda_dnn.cc:371] could not create cudnn handle: CUDNN_STATUS_INTERNAL_ERROR\n2017-10-30 22:14:58.320026: E tensorflow/stream_executor/cuda/cuda_dnn.cc:338] could not destroy cudnn handle: CUDNN_STATUS_BAD_PARAM\n2017-10-30 22:14:58.320035: F tensorflow/core/kernels/conv_ops.cc:672] Check failed: stream->parent()->GetConvolveAlgorithms( conv_parameters.ShouldIncludeWinogradNonfusedAlgo(), &algorithms)\nAborted (core dumped)\n`", "body": "OK, if I add '/usr/local/cuda-8.0/targets/x86_64-linux/lib' to my LD_LIBRARY_PATH, importing tensorflow is successful (so, many thanks to you for that). But, I am still experiencing my original error which is shown below:\r\n\r\n`$ python classify_image.py \r\n>> Downloading inception-2015-12-05.tgz 100.0%\r\nSuccessfully downloaded inception-2015-12-05.tgz 88931400 bytes.\r\n2017-10-30 22:14:54.542348: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.\r\n2017-10-30 22:14:54.542378: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\r\n2017-10-30 22:14:54.705978: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:893] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\r\n2017-10-30 22:14:54.706540: I tensorflow/core/common_runtime/gpu/gpu_device.cc:955] Found device 0 with properties: \r\nname: GeForce GTX TITAN X\r\nmajor: 5 minor: 2 memoryClockRate (GHz) 1.2155\r\npciBusID 0000:01:00.0\r\nTotal memory: 11.92GiB\r\nFree memory: 11.80GiB\r\n2017-10-30 22:14:54.706561: I tensorflow/core/common_runtime/gpu/gpu_device.cc:976] DMA: 0 \r\n2017-10-30 22:14:54.706568: I tensorflow/core/common_runtime/gpu/gpu_device.cc:986] 0:   Y \r\n2017-10-30 22:14:54.706578: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1045] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX TITAN X, pci bus id: 0000:01:00.0)\r\n2017-10-30 22:14:55.237837: W tensorflow/core/framework/op_def_util.cc:333] Op BatchNormWithGlobalNormalization is deprecated. It will cease to work in GraphDef version 9. Use tf.nn.batch_normalization().\r\n2017-10-30 22:14:58.319995: E tensorflow/stream_executor/cuda/cuda_dnn.cc:371] could not create cudnn handle: CUDNN_STATUS_INTERNAL_ERROR\r\n2017-10-30 22:14:58.320026: E tensorflow/stream_executor/cuda/cuda_dnn.cc:338] could not destroy cudnn handle: CUDNN_STATUS_BAD_PARAM\r\n2017-10-30 22:14:58.320035: F tensorflow/core/kernels/conv_ops.cc:672] Check failed: stream->parent()->GetConvolveAlgorithms( conv_parameters.ShouldIncludeWinogradNonfusedAlgo<T>(), &algorithms) \r\nAborted (core dumped)\r\n`"}