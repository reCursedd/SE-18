{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21778", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21778/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21778/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21778/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21778", "id": 352752341, "node_id": "MDU6SXNzdWUzNTI3NTIzNDE=", "number": 21778, "title": "tf.keras.estimator.model_to_estimator ignores layer reuse for Sequential models", "user": {"login": "artkorenev", "id": 5678669, "node_id": "MDQ6VXNlcjU2Nzg2Njk=", "avatar_url": "https://avatars0.githubusercontent.com/u/5678669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artkorenev", "html_url": "https://github.com/artkorenev", "followers_url": "https://api.github.com/users/artkorenev/followers", "following_url": "https://api.github.com/users/artkorenev/following{/other_user}", "gists_url": "https://api.github.com/users/artkorenev/gists{/gist_id}", "starred_url": "https://api.github.com/users/artkorenev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artkorenev/subscriptions", "organizations_url": "https://api.github.com/users/artkorenev/orgs", "repos_url": "https://api.github.com/users/artkorenev/repos", "events_url": "https://api.github.com/users/artkorenev/events{/privacy}", "received_events_url": "https://api.github.com/users/artkorenev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}, {"login": "pavithrasv", "id": 13326758, "node_id": "MDQ6VXNlcjEzMzI2NzU4", "avatar_url": "https://avatars0.githubusercontent.com/u/13326758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pavithrasv", "html_url": "https://github.com/pavithrasv", "followers_url": "https://api.github.com/users/pavithrasv/followers", "following_url": "https://api.github.com/users/pavithrasv/following{/other_user}", "gists_url": "https://api.github.com/users/pavithrasv/gists{/gist_id}", "starred_url": "https://api.github.com/users/pavithrasv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pavithrasv/subscriptions", "organizations_url": "https://api.github.com/users/pavithrasv/orgs", "repos_url": "https://api.github.com/users/pavithrasv/repos", "events_url": "https://api.github.com/users/pavithrasv/events{/privacy}", "received_events_url": "https://api.github.com/users/pavithrasv/received_events", "type": "User", "site_admin": false}, {"login": "tanzhenyu", "id": 15220929, "node_id": "MDQ6VXNlcjE1MjIwOTI5", "avatar_url": "https://avatars3.githubusercontent.com/u/15220929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tanzhenyu", "html_url": "https://github.com/tanzhenyu", "followers_url": "https://api.github.com/users/tanzhenyu/followers", "following_url": "https://api.github.com/users/tanzhenyu/following{/other_user}", "gists_url": "https://api.github.com/users/tanzhenyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/tanzhenyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tanzhenyu/subscriptions", "organizations_url": "https://api.github.com/users/tanzhenyu/orgs", "repos_url": "https://api.github.com/users/tanzhenyu/repos", "events_url": "https://api.github.com/users/tanzhenyu/events{/privacy}", "received_events_url": "https://api.github.com/users/tanzhenyu/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2018-08-21T23:58:45Z", "updated_at": "2018-11-22T18:57:48Z", "closed_at": null, "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code</strong>: yes</li>\n<li><strong>OS Platform and Distribution</strong>: Linux Ubuntu 16.04</li>\n<li><strong>Mobile device</strong>: N/A</li>\n<li><strong>TensorFlow installed from</strong>: binary</li>\n<li><strong>TensorFlow version</strong>: 1.10.0</li>\n<li><strong>Python version</strong>: 3.6</li>\n<li><strong>Bazel version</strong>: N/A</li>\n<li><strong>GCC/Compiler version</strong>: N/A</li>\n<li><strong>CUDA/cuDNN version</strong>: N/A</li>\n<li><strong>GPU model and memory</strong>: N/A</li>\n<li><strong>Exact command to reproduce</strong>: <code>python my_custom_script.py</code></li>\n</ul>\n<p><strong>Overview:</strong></p>\n<p>If a model is created using <code>tf.keras.models.Sequential</code> with reuse of some layers (including those that are parameterless) then the estimator created from <code>tf.keras.estimator.model_to_estimator</code> may contain a different model from the original Keras model.</p>\n<p>This also may produce an error of shape mismatch in case that the <code>tf.keras.estimator.model_to_estimator</code> is called after fitting the Sequential model.</p>\n<p><strong>Simple example:</strong></p>\n<pre><code>import tensorflow as tf\nimport numpy as np\n\nmax_pool = tf.keras.layers.MaxPooling2D(2)\nmodel = tf.keras.Sequential([\n    max_pool,\n    max_pool,\n    tf.keras.layers.Flatten(),\n    tf.keras.layers.Dense(1, activation='sigmoid')\n])\nmodel.compile(optimizer='adam', loss='binary_crossentropy')\n\nX, y = np.zeros((32, 8, 8, 1)), np.ones((32,))\nmodel.fit(X, y)\n\ntf.keras.estimator.model_to_estimator(keras_model=model)\n</code></pre>\n<p><strong>The error produced:</strong></p>\n<pre><code>...\n  File \"~/.local/lib/python3.6/site-packages/tensorflow/python/framework/tensor_shape.py\", line 847, in assert_is_compatible_with\n    raise ValueError(\"Shapes %s and %s are incompatible\" % (self, other))\nValueError: Shapes (16, 1) and (4, 1) are incompatible\n</code></pre>\n<p><strong>Explanation:</strong></p>\n<p>The mismatch happens because <code>tf.keras.estimator.model_to_estimator</code> traverses <code>model.layers</code> which has a single entry of max pooling. Therefore, instead of making 2 max pooling operations it performs a single one which results in <strong>16</strong> outputs after <code>tf.keras.layers.Flatten()</code> instead of <strong>4</strong> that was intended initially.</p>\n<p>If <code>model.fit</code> is not called then <code>tf.keras.estimator.model_to_estimator</code> does not produce any errors which is actually more concerning since it may be not obvious that the new model is different from the initial Sequential model.</p>", "body_text": "System information\n\nHave I written custom code: yes\nOS Platform and Distribution: Linux Ubuntu 16.04\nMobile device: N/A\nTensorFlow installed from: binary\nTensorFlow version: 1.10.0\nPython version: 3.6\nBazel version: N/A\nGCC/Compiler version: N/A\nCUDA/cuDNN version: N/A\nGPU model and memory: N/A\nExact command to reproduce: python my_custom_script.py\n\nOverview:\nIf a model is created using tf.keras.models.Sequential with reuse of some layers (including those that are parameterless) then the estimator created from tf.keras.estimator.model_to_estimator may contain a different model from the original Keras model.\nThis also may produce an error of shape mismatch in case that the tf.keras.estimator.model_to_estimator is called after fitting the Sequential model.\nSimple example:\nimport tensorflow as tf\nimport numpy as np\n\nmax_pool = tf.keras.layers.MaxPooling2D(2)\nmodel = tf.keras.Sequential([\n    max_pool,\n    max_pool,\n    tf.keras.layers.Flatten(),\n    tf.keras.layers.Dense(1, activation='sigmoid')\n])\nmodel.compile(optimizer='adam', loss='binary_crossentropy')\n\nX, y = np.zeros((32, 8, 8, 1)), np.ones((32,))\nmodel.fit(X, y)\n\ntf.keras.estimator.model_to_estimator(keras_model=model)\n\nThe error produced:\n...\n  File \"~/.local/lib/python3.6/site-packages/tensorflow/python/framework/tensor_shape.py\", line 847, in assert_is_compatible_with\n    raise ValueError(\"Shapes %s and %s are incompatible\" % (self, other))\nValueError: Shapes (16, 1) and (4, 1) are incompatible\n\nExplanation:\nThe mismatch happens because tf.keras.estimator.model_to_estimator traverses model.layers which has a single entry of max pooling. Therefore, instead of making 2 max pooling operations it performs a single one which results in 16 outputs after tf.keras.layers.Flatten() instead of 4 that was intended initially.\nIf model.fit is not called then tf.keras.estimator.model_to_estimator does not produce any errors which is actually more concerning since it may be not obvious that the new model is different from the initial Sequential model.", "body": "### System information\r\n- **Have I written custom code**: yes\r\n- **OS Platform and Distribution**: Linux Ubuntu 16.04\r\n- **Mobile device**: N/A\r\n- **TensorFlow installed from**: binary\r\n- **TensorFlow version**: 1.10.0\r\n- **Python version**: 3.6\r\n- **Bazel version**: N/A\r\n- **GCC/Compiler version**: N/A\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: `python my_custom_script.py`\r\n\r\n**Overview:**\r\n\r\nIf a model is created using `tf.keras.models.Sequential` with reuse of some layers (including those that are parameterless) then the estimator created from `tf.keras.estimator.model_to_estimator` may contain a different model from the original Keras model.\r\n\r\nThis also may produce an error of shape mismatch in case that the `tf.keras.estimator.model_to_estimator` is called after fitting the Sequential model. \r\n\r\n**Simple example:**\r\n```\r\nimport tensorflow as tf\r\nimport numpy as np\r\n\r\nmax_pool = tf.keras.layers.MaxPooling2D(2)\r\nmodel = tf.keras.Sequential([\r\n    max_pool,\r\n    max_pool,\r\n    tf.keras.layers.Flatten(),\r\n    tf.keras.layers.Dense(1, activation='sigmoid')\r\n])\r\nmodel.compile(optimizer='adam', loss='binary_crossentropy')\r\n\r\nX, y = np.zeros((32, 8, 8, 1)), np.ones((32,))\r\nmodel.fit(X, y)\r\n\r\ntf.keras.estimator.model_to_estimator(keras_model=model)\r\n```\r\n**The error produced:**\r\n```\r\n...\r\n  File \"~/.local/lib/python3.6/site-packages/tensorflow/python/framework/tensor_shape.py\", line 847, in assert_is_compatible_with\r\n    raise ValueError(\"Shapes %s and %s are incompatible\" % (self, other))\r\nValueError: Shapes (16, 1) and (4, 1) are incompatible\r\n```\r\n\r\n\r\n**Explanation:**\r\n\r\nThe mismatch happens because `tf.keras.estimator.model_to_estimator` traverses `model.layers` which has a single entry of max pooling. Therefore, instead of making 2 max pooling operations it performs a single one which results in **16** outputs after `tf.keras.layers.Flatten()` instead of **4** that was intended initially.\r\n\r\nIf `model.fit` is not called then `tf.keras.estimator.model_to_estimator` does not produce any errors which is actually more concerning since it may be not obvious that the new model is different from the initial Sequential model."}