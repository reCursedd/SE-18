{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11970", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11970/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11970/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11970/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/11970", "id": 247420291, "node_id": "MDU6SXNzdWUyNDc0MjAyOTE=", "number": 11970, "title": "Error when using dataset.map() with num_threads != None", "user": {"login": "GPhilo", "id": 4441724, "node_id": "MDQ6VXNlcjQ0NDE3MjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/4441724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GPhilo", "html_url": "https://github.com/GPhilo", "followers_url": "https://api.github.com/users/GPhilo/followers", "following_url": "https://api.github.com/users/GPhilo/following{/other_user}", "gists_url": "https://api.github.com/users/GPhilo/gists{/gist_id}", "starred_url": "https://api.github.com/users/GPhilo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GPhilo/subscriptions", "organizations_url": "https://api.github.com/users/GPhilo/orgs", "repos_url": "https://api.github.com/users/GPhilo/repos", "events_url": "https://api.github.com/users/GPhilo/events{/privacy}", "received_events_url": "https://api.github.com/users/GPhilo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2017-08-02T15:01:04Z", "updated_at": "2017-08-03T22:23:39Z", "closed_at": "2017-08-03T22:23:39Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes (code attached below)</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Windows 10</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.2.1</li>\n<li><strong>Python version</strong>: 3.5</li>\n<li><strong>Bazel version (if compiling from source)</strong>: --</li>\n<li><strong>CUDA/cuDNN version</strong>: 8/5.1</li>\n<li><strong>GPU model and memory</strong>: GeForce GTX 1080, 8GB</li>\n<li><strong>Exact command to reproduce</strong>: just run the script below</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>When using the <code>tf.contrib.data</code> API and applying a function to a dataset via <code>dataset.map(my_function, num_threads=2)</code>, the following error occurs:</p>\n<blockquote>\n<p>TypeError: Input 'output_buffer_size' of 'ParallelMapDataset' Op has type int32 that does not match expected type of int64.</p>\n</blockquote>\n<p>Please note that <code>num_threads=2</code> is necessary to cause the error.<br>\nFrom what I can see, in <code>MapDataset::make_dataset_resource()</code> (file <code>dataset_ops.py</code>) the <code>if self._num_threads is None:</code> triggers the call to <code>gen_dataset_ops.parallel_map_dataset</code> which then raises the error. I suspect a cast from int32 to int64 got lost somewhere in that function.</p>\n<h3>Source code / logs</h3>\n<pre><code>import tensorflow as tf\nfrom functools import partial\n\nfiles = [ 'some_filename' ]\n\nkeys_to_features = {\n    'image/encoded': tf.FixedLenFeature((), tf.string, default_value=''),\n    'image/format': tf.FixedLenFeature((), tf.string, default_value='jpg'),\n    'image/class/label': tf.FixedLenFeature([], tf.int64, default_value=-1),\n    'image/height': tf.FixedLenFeature([], tf.int64),\n    'image/width': tf.FixedLenFeature([], tf.int64),\n}\n\nitems_to_handlers = {\n    'image': tf.contrib.slim.tfexample_decoder.Image('image/encoded', 'image/format'),\n    'label': tf.contrib.slim.tfexample_decoder.Tensor('image/class/label'),\n}\n\ndecoder = tf.contrib.slim.tfexample_decoder.TFExampleDecoder(keys_to_features, items_to_handlers)\nmap_decode = partial(decoder.decode, items=['label', 'image'])\n\ndataset = tf.contrib.data.TFRecordDataset(files)\ndataset = dataset.map(map_decode, num_threads=2)\nit = dataset.make_one_shot_iterator()\n</code></pre>\n<p>Full traceback:</p>\n<pre><code>Traceback (most recent call last):\n\n  File \"&lt;ipython-input-8-7ba67ea47c21&gt;\", line 44, in &lt;module&gt;\n    it = dataset.make_one_shot_iterator()\n\n  File \"C:\\Users\\1\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\contrib\\data\\python\\ops\\dataset_ops.py\", line 413, in make_one_shot_iterator\n    _make_dataset.add_to_graph(ops.get_default_graph())\n\n  File \"C:\\Users\\1\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\framework\\function.py\", line 619, in add_to_graph\n    self._create_definition_if_needed()\n\n  File \"C:\\Users\\1\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\contrib\\data\\python\\framework\\function.py\", line 167, in _create_definition_if_needed\n    outputs = self._func(*inputs)\n\n  File \"C:\\Users\\1\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\contrib\\data\\python\\ops\\dataset_ops.py\", line 411, in _make_dataset\n    return self.make_dataset_resource()\n\n  File \"C:\\Users\\1\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\contrib\\data\\python\\ops\\dataset_ops.py\", line 1466, in make_dataset_resource\n    output_shapes=nest.flatten(self.output_shapes))\n\n  File \"C:\\Users\\1\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\ops\\gen_dataset_ops.py\", line 414, in parallel_map_dataset\n    output_shapes=output_shapes, name=name)\n\n  File \"C:\\Users\\1\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\framework\\op_def_library.py\", line 513, in apply_op\n    (prefix, dtypes.as_dtype(input_arg.type).name))\n\nTypeError: Input 'output_buffer_size' of 'ParallelMapDataset' Op has type int32 that does not match expected type of int64.\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes (code attached below)\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): 1.2.1\nPython version: 3.5\nBazel version (if compiling from source): --\nCUDA/cuDNN version: 8/5.1\nGPU model and memory: GeForce GTX 1080, 8GB\nExact command to reproduce: just run the script below\n\nDescribe the problem\nWhen using the tf.contrib.data API and applying a function to a dataset via dataset.map(my_function, num_threads=2), the following error occurs:\n\nTypeError: Input 'output_buffer_size' of 'ParallelMapDataset' Op has type int32 that does not match expected type of int64.\n\nPlease note that num_threads=2 is necessary to cause the error.\nFrom what I can see, in MapDataset::make_dataset_resource() (file dataset_ops.py) the if self._num_threads is None: triggers the call to gen_dataset_ops.parallel_map_dataset which then raises the error. I suspect a cast from int32 to int64 got lost somewhere in that function.\nSource code / logs\nimport tensorflow as tf\nfrom functools import partial\n\nfiles = [ 'some_filename' ]\n\nkeys_to_features = {\n    'image/encoded': tf.FixedLenFeature((), tf.string, default_value=''),\n    'image/format': tf.FixedLenFeature((), tf.string, default_value='jpg'),\n    'image/class/label': tf.FixedLenFeature([], tf.int64, default_value=-1),\n    'image/height': tf.FixedLenFeature([], tf.int64),\n    'image/width': tf.FixedLenFeature([], tf.int64),\n}\n\nitems_to_handlers = {\n    'image': tf.contrib.slim.tfexample_decoder.Image('image/encoded', 'image/format'),\n    'label': tf.contrib.slim.tfexample_decoder.Tensor('image/class/label'),\n}\n\ndecoder = tf.contrib.slim.tfexample_decoder.TFExampleDecoder(keys_to_features, items_to_handlers)\nmap_decode = partial(decoder.decode, items=['label', 'image'])\n\ndataset = tf.contrib.data.TFRecordDataset(files)\ndataset = dataset.map(map_decode, num_threads=2)\nit = dataset.make_one_shot_iterator()\n\nFull traceback:\nTraceback (most recent call last):\n\n  File \"<ipython-input-8-7ba67ea47c21>\", line 44, in <module>\n    it = dataset.make_one_shot_iterator()\n\n  File \"C:\\Users\\1\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\contrib\\data\\python\\ops\\dataset_ops.py\", line 413, in make_one_shot_iterator\n    _make_dataset.add_to_graph(ops.get_default_graph())\n\n  File \"C:\\Users\\1\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\framework\\function.py\", line 619, in add_to_graph\n    self._create_definition_if_needed()\n\n  File \"C:\\Users\\1\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\contrib\\data\\python\\framework\\function.py\", line 167, in _create_definition_if_needed\n    outputs = self._func(*inputs)\n\n  File \"C:\\Users\\1\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\contrib\\data\\python\\ops\\dataset_ops.py\", line 411, in _make_dataset\n    return self.make_dataset_resource()\n\n  File \"C:\\Users\\1\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\contrib\\data\\python\\ops\\dataset_ops.py\", line 1466, in make_dataset_resource\n    output_shapes=nest.flatten(self.output_shapes))\n\n  File \"C:\\Users\\1\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\ops\\gen_dataset_ops.py\", line 414, in parallel_map_dataset\n    output_shapes=output_shapes, name=name)\n\n  File \"C:\\Users\\1\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\framework\\op_def_library.py\", line 513, in apply_op\n    (prefix, dtypes.as_dtype(input_arg.type).name))\n\nTypeError: Input 'output_buffer_size' of 'ParallelMapDataset' Op has type int32 that does not match expected type of int64.", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes (code attached below)\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 10\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.2.1\r\n- **Python version**: 3.5\r\n- **Bazel version (if compiling from source)**: --\r\n- **CUDA/cuDNN version**: 8/5.1\r\n- **GPU model and memory**: GeForce GTX 1080, 8GB\r\n- **Exact command to reproduce**: just run the script below\r\n\r\n### Describe the problem\r\nWhen using the `tf.contrib.data` API and applying a function to a dataset via `dataset.map(my_function, num_threads=2)`, the following error occurs:\r\n>TypeError: Input 'output_buffer_size' of 'ParallelMapDataset' Op has type int32 that does not match expected type of int64.\r\n\r\nPlease note that `num_threads=2` is necessary to cause the error.\r\nFrom what I can see, in `MapDataset::make_dataset_resource()` (file `dataset_ops.py`) the `if self._num_threads is None:` triggers the call to `gen_dataset_ops.parallel_map_dataset` which then raises the error. I suspect a cast from int32 to int64 got lost somewhere in that function.\r\n\r\n### Source code / logs\r\n\r\n```\r\nimport tensorflow as tf\r\nfrom functools import partial\r\n\r\nfiles = [ 'some_filename' ]\r\n\r\nkeys_to_features = {\r\n    'image/encoded': tf.FixedLenFeature((), tf.string, default_value=''),\r\n    'image/format': tf.FixedLenFeature((), tf.string, default_value='jpg'),\r\n    'image/class/label': tf.FixedLenFeature([], tf.int64, default_value=-1),\r\n    'image/height': tf.FixedLenFeature([], tf.int64),\r\n    'image/width': tf.FixedLenFeature([], tf.int64),\r\n}\r\n\r\nitems_to_handlers = {\r\n    'image': tf.contrib.slim.tfexample_decoder.Image('image/encoded', 'image/format'),\r\n    'label': tf.contrib.slim.tfexample_decoder.Tensor('image/class/label'),\r\n}\r\n\r\ndecoder = tf.contrib.slim.tfexample_decoder.TFExampleDecoder(keys_to_features, items_to_handlers)\r\nmap_decode = partial(decoder.decode, items=['label', 'image'])\r\n\r\ndataset = tf.contrib.data.TFRecordDataset(files)\r\ndataset = dataset.map(map_decode, num_threads=2)\r\nit = dataset.make_one_shot_iterator()\r\n```\r\n\r\nFull traceback:\r\n```\r\nTraceback (most recent call last):\r\n\r\n  File \"<ipython-input-8-7ba67ea47c21>\", line 44, in <module>\r\n    it = dataset.make_one_shot_iterator()\r\n\r\n  File \"C:\\Users\\1\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\contrib\\data\\python\\ops\\dataset_ops.py\", line 413, in make_one_shot_iterator\r\n    _make_dataset.add_to_graph(ops.get_default_graph())\r\n\r\n  File \"C:\\Users\\1\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\framework\\function.py\", line 619, in add_to_graph\r\n    self._create_definition_if_needed()\r\n\r\n  File \"C:\\Users\\1\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\contrib\\data\\python\\framework\\function.py\", line 167, in _create_definition_if_needed\r\n    outputs = self._func(*inputs)\r\n\r\n  File \"C:\\Users\\1\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\contrib\\data\\python\\ops\\dataset_ops.py\", line 411, in _make_dataset\r\n    return self.make_dataset_resource()\r\n\r\n  File \"C:\\Users\\1\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\contrib\\data\\python\\ops\\dataset_ops.py\", line 1466, in make_dataset_resource\r\n    output_shapes=nest.flatten(self.output_shapes))\r\n\r\n  File \"C:\\Users\\1\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\ops\\gen_dataset_ops.py\", line 414, in parallel_map_dataset\r\n    output_shapes=output_shapes, name=name)\r\n\r\n  File \"C:\\Users\\1\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\framework\\op_def_library.py\", line 513, in apply_op\r\n    (prefix, dtypes.as_dtype(input_arg.type).name))\r\n\r\nTypeError: Input 'output_buffer_size' of 'ParallelMapDataset' Op has type int32 that does not match expected type of int64.\r\n```"}