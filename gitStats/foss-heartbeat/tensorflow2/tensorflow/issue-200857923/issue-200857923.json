{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6860", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6860/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6860/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6860/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/6860", "id": 200857923, "node_id": "MDU6SXNzdWUyMDA4NTc5MjM=", "number": 6860, "title": "Problems with generate_batch() in word2vec_basic.py", "user": {"login": "soloice", "id": 8534653, "node_id": "MDQ6VXNlcjg1MzQ2NTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/8534653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soloice", "html_url": "https://github.com/soloice", "followers_url": "https://api.github.com/users/soloice/followers", "following_url": "https://api.github.com/users/soloice/following{/other_user}", "gists_url": "https://api.github.com/users/soloice/gists{/gist_id}", "starred_url": "https://api.github.com/users/soloice/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soloice/subscriptions", "organizations_url": "https://api.github.com/users/soloice/orgs", "repos_url": "https://api.github.com/users/soloice/repos", "events_url": "https://api.github.com/users/soloice/events{/privacy}", "received_events_url": "https://api.github.com/users/soloice/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-01-15T09:15:43Z", "updated_at": "2017-02-15T00:58:36Z", "closed_at": "2017-02-15T00:58:36Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Does the generate_batch() function miss some possible (word, context) pairs? The sliding window always skips the end of a batch.</p>\n<p>For example, if I change the demonstration codes followed by this function into</p>\n<pre><code>batch, labels = generate_batch(batch_size=4, num_skips=2, skip_window=1)\nfor i in range(4):\n  print(batch[i], reverse_dictionary[batch[i]],\n        '-&gt;', labels[i, 0], reverse_dictionary[labels[i, 0]])\n\nprint('-'*40)\nbatch, labels = generate_batch(batch_size=4, num_skips=2, skip_window=1)\nfor i in range(4):\n  print(batch[i], reverse_dictionary[batch[i]],\n        '-&gt;', labels[i, 0], reverse_dictionary[labels[i, 0]])\n</code></pre>\n<p>, the sampled pairs would be:</p>\n<pre><code>3083 originated -&gt; 5242 anarchism\n3083 originated -&gt; 12 as\n12 as -&gt; 3083 originated\n12 as -&gt; 6 a\n----------------------------------------\n3134 abuse -&gt; 2 of\n3134 abuse -&gt; 46 first\n46 first -&gt; 3134 abuse\n46 first -&gt; 59 used\n</code></pre>\n<p>Note that the sampled sentence is:<br>\n<code>Sample data [5242, 3083, 12, 6, 195, 2, 3134, 46, 59, 156] ['anarchism', 'originated', 'as', 'a', 'term', 'of', 'abuse', 'first', 'used', 'against']</code><br>\n, pairs such like <code>a -&gt; term</code>, <code>term -&gt; of</code>, <code>of -&gt; abuse</code> are skipped.</p>", "body_text": "Does the generate_batch() function miss some possible (word, context) pairs? The sliding window always skips the end of a batch.\nFor example, if I change the demonstration codes followed by this function into\nbatch, labels = generate_batch(batch_size=4, num_skips=2, skip_window=1)\nfor i in range(4):\n  print(batch[i], reverse_dictionary[batch[i]],\n        '->', labels[i, 0], reverse_dictionary[labels[i, 0]])\n\nprint('-'*40)\nbatch, labels = generate_batch(batch_size=4, num_skips=2, skip_window=1)\nfor i in range(4):\n  print(batch[i], reverse_dictionary[batch[i]],\n        '->', labels[i, 0], reverse_dictionary[labels[i, 0]])\n\n, the sampled pairs would be:\n3083 originated -> 5242 anarchism\n3083 originated -> 12 as\n12 as -> 3083 originated\n12 as -> 6 a\n----------------------------------------\n3134 abuse -> 2 of\n3134 abuse -> 46 first\n46 first -> 3134 abuse\n46 first -> 59 used\n\nNote that the sampled sentence is:\nSample data [5242, 3083, 12, 6, 195, 2, 3134, 46, 59, 156] ['anarchism', 'originated', 'as', 'a', 'term', 'of', 'abuse', 'first', 'used', 'against']\n, pairs such like a -> term, term -> of, of -> abuse are skipped.", "body": "Does the generate_batch() function miss some possible (word, context) pairs? The sliding window always skips the end of a batch.\r\n\r\nFor example, if I change the demonstration codes followed by this function into\r\n```\r\nbatch, labels = generate_batch(batch_size=4, num_skips=2, skip_window=1)\r\nfor i in range(4):\r\n  print(batch[i], reverse_dictionary[batch[i]],\r\n        '->', labels[i, 0], reverse_dictionary[labels[i, 0]])\r\n\r\nprint('-'*40)\r\nbatch, labels = generate_batch(batch_size=4, num_skips=2, skip_window=1)\r\nfor i in range(4):\r\n  print(batch[i], reverse_dictionary[batch[i]],\r\n        '->', labels[i, 0], reverse_dictionary[labels[i, 0]])\r\n```\r\n, the sampled pairs would be:\r\n```\r\n3083 originated -> 5242 anarchism\r\n3083 originated -> 12 as\r\n12 as -> 3083 originated\r\n12 as -> 6 a\r\n----------------------------------------\r\n3134 abuse -> 2 of\r\n3134 abuse -> 46 first\r\n46 first -> 3134 abuse\r\n46 first -> 59 used\r\n```\r\n\r\nNote that the sampled sentence is:\r\n`Sample data [5242, 3083, 12, 6, 195, 2, 3134, 46, 59, 156] ['anarchism', 'originated', 'as', 'a', 'term', 'of', 'abuse', 'first', 'used', 'against']`\r\n, pairs such like `a -> term`, `term -> of`, `of -> abuse` are skipped."}