{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/371112904", "html_url": "https://github.com/tensorflow/tensorflow/issues/17150#issuecomment-371112904", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17150", "id": 371112904, "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTExMjkwNA==", "user": {"login": "Hvass-Labs", "id": 13588114, "node_id": "MDQ6VXNlcjEzNTg4MTE0", "avatar_url": "https://avatars2.githubusercontent.com/u/13588114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hvass-Labs", "html_url": "https://github.com/Hvass-Labs", "followers_url": "https://api.github.com/users/Hvass-Labs/followers", "following_url": "https://api.github.com/users/Hvass-Labs/following{/other_user}", "gists_url": "https://api.github.com/users/Hvass-Labs/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hvass-Labs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hvass-Labs/subscriptions", "organizations_url": "https://api.github.com/users/Hvass-Labs/orgs", "repos_url": "https://api.github.com/users/Hvass-Labs/repos", "events_url": "https://api.github.com/users/Hvass-Labs/events{/privacy}", "received_events_url": "https://api.github.com/users/Hvass-Labs/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-07T11:43:16Z", "updated_at": "2018-03-07T11:43:16Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Furthermore, I'm not quite sure whether my custom <code>sparse_loss()</code> function should reduce the loss-values from a batch-tensor to a single scalar value, e.g. like this:</p>\n<pre><code>def sparse_loss(y_true, y_pred):\n    foo = tf.nn.sparse_softmax_cross_entropy_with_logits(labels=y_true,\n                                                         logits=y_pred)\n    return tf.reduce_mean(foo)\n</code></pre>\n<p>Keras' <code>fit()</code> function has a parameter <code>sample_weight</code> which should calculate the weighted average of the loss across the batch, but I'm not sure it does that when I provide both a custom loss function and <code>target_tensors</code>.</p>\n<p>These are generally quite confusing aspects of the Keras API. I've looked in the source-code but it's really hard to understand because it's so dense and has practically no comments.</p>", "body_text": "Furthermore, I'm not quite sure whether my custom sparse_loss() function should reduce the loss-values from a batch-tensor to a single scalar value, e.g. like this:\ndef sparse_loss(y_true, y_pred):\n    foo = tf.nn.sparse_softmax_cross_entropy_with_logits(labels=y_true,\n                                                         logits=y_pred)\n    return tf.reduce_mean(foo)\n\nKeras' fit() function has a parameter sample_weight which should calculate the weighted average of the loss across the batch, but I'm not sure it does that when I provide both a custom loss function and target_tensors.\nThese are generally quite confusing aspects of the Keras API. I've looked in the source-code but it's really hard to understand because it's so dense and has practically no comments.", "body": "Furthermore, I'm not quite sure whether my custom `sparse_loss()` function should reduce the loss-values from a batch-tensor to a single scalar value, e.g. like this:\r\n\r\n    def sparse_loss(y_true, y_pred):\r\n        foo = tf.nn.sparse_softmax_cross_entropy_with_logits(labels=y_true,\r\n                                                             logits=y_pred)\r\n        return tf.reduce_mean(foo)\r\n\r\nKeras' `fit()` function has a parameter `sample_weight` which should calculate the weighted average of the loss across the batch, but I'm not sure it does that when I provide both a custom loss function and `target_tensors`.\r\n\r\nThese are generally quite confusing aspects of the Keras API. I've looked in the source-code but it's really hard to understand because it's so dense and has practically no comments."}