{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/399776510", "html_url": "https://github.com/tensorflow/tensorflow/issues/17150#issuecomment-399776510", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17150", "id": 399776510, "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTc3NjUxMA==", "user": {"login": "johntrimble", "id": 156620, "node_id": "MDQ6VXNlcjE1NjYyMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/156620?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johntrimble", "html_url": "https://github.com/johntrimble", "followers_url": "https://api.github.com/users/johntrimble/followers", "following_url": "https://api.github.com/users/johntrimble/following{/other_user}", "gists_url": "https://api.github.com/users/johntrimble/gists{/gist_id}", "starred_url": "https://api.github.com/users/johntrimble/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johntrimble/subscriptions", "organizations_url": "https://api.github.com/users/johntrimble/orgs", "repos_url": "https://api.github.com/users/johntrimble/repos", "events_url": "https://api.github.com/users/johntrimble/events{/privacy}", "received_events_url": "https://api.github.com/users/johntrimble/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-24T18:20:58Z", "updated_at": "2018-06-24T18:20:58Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=19495261\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Krumpet\">@Krumpet</a> you might be on to something here. I think our reproduction example is actually missing a steps dimension for the labels, so <code>y_data = np.random.randint(0, 9, size=(32,))</code> should really be <code>y_data = np.random.randint(0, 9, size=(32,5))</code>, giving us a reproduction example of:</p>\n<pre><code>import keras\nimport numpy as np\n\nmodel = keras.Sequential()\nmodel.add(keras.layers.Dense(10, input_shape=(5, 6)))\n\nmodel.compile(optimizer='adam',\n              loss='sparse_categorical_crossentropy')\n\nx_data = np.random.random((32, 5, 6))\ny_data = np.random.randint(0, 9, size=(32,5))\n\nmodel.fit(x=x_data, y=y_data, batch_size=16, epochs=3)\n</code></pre>\n<p>That gives the same sort of error about the shape:</p>\n<pre><code>ValueError: Error when checking target: expected dense_1 to have 3 dimensions, but got array with shape (32, 5)\n</code></pre>\n<p>If we expand the labels dimensions to have shape <code>(32, 5, 1)</code> like so:</p>\n<pre><code>import keras\nimport numpy as np\n\nmodel = keras.Sequential()\nmodel.add(keras.layers.Dense(10, input_shape=(5, 6)))\n\nmodel.compile(optimizer='adam',\n              loss='sparse_categorical_crossentropy')\n\nx_data = np.random.random((32, 5, 6))\ny_data = np.random.randint(0, 9, size=(32,5,1))\n\nmodel.fit(x=x_data, y=y_data, batch_size=16, epochs=3)\n</code></pre>\n<p>The error does appear to go away (with TensorFlow backend at least, I'm not up and running with Theano presently). I'm going to kick the tires a bit more and make sure this is really working and things like masking still function as we expect. If someone could check the above with Theano, that would be helpful.</p>", "body_text": "@Krumpet you might be on to something here. I think our reproduction example is actually missing a steps dimension for the labels, so y_data = np.random.randint(0, 9, size=(32,)) should really be y_data = np.random.randint(0, 9, size=(32,5)), giving us a reproduction example of:\nimport keras\nimport numpy as np\n\nmodel = keras.Sequential()\nmodel.add(keras.layers.Dense(10, input_shape=(5, 6)))\n\nmodel.compile(optimizer='adam',\n              loss='sparse_categorical_crossentropy')\n\nx_data = np.random.random((32, 5, 6))\ny_data = np.random.randint(0, 9, size=(32,5))\n\nmodel.fit(x=x_data, y=y_data, batch_size=16, epochs=3)\n\nThat gives the same sort of error about the shape:\nValueError: Error when checking target: expected dense_1 to have 3 dimensions, but got array with shape (32, 5)\n\nIf we expand the labels dimensions to have shape (32, 5, 1) like so:\nimport keras\nimport numpy as np\n\nmodel = keras.Sequential()\nmodel.add(keras.layers.Dense(10, input_shape=(5, 6)))\n\nmodel.compile(optimizer='adam',\n              loss='sparse_categorical_crossentropy')\n\nx_data = np.random.random((32, 5, 6))\ny_data = np.random.randint(0, 9, size=(32,5,1))\n\nmodel.fit(x=x_data, y=y_data, batch_size=16, epochs=3)\n\nThe error does appear to go away (with TensorFlow backend at least, I'm not up and running with Theano presently). I'm going to kick the tires a bit more and make sure this is really working and things like masking still function as we expect. If someone could check the above with Theano, that would be helpful.", "body": "@Krumpet you might be on to something here. I think our reproduction example is actually missing a steps dimension for the labels, so `y_data = np.random.randint(0, 9, size=(32,))` should really be `y_data = np.random.randint(0, 9, size=(32,5))`, giving us a reproduction example of:\r\n\r\n```\r\nimport keras\r\nimport numpy as np\r\n\r\nmodel = keras.Sequential()\r\nmodel.add(keras.layers.Dense(10, input_shape=(5, 6)))\r\n\r\nmodel.compile(optimizer='adam',\r\n              loss='sparse_categorical_crossentropy')\r\n\r\nx_data = np.random.random((32, 5, 6))\r\ny_data = np.random.randint(0, 9, size=(32,5))\r\n\r\nmodel.fit(x=x_data, y=y_data, batch_size=16, epochs=3)\r\n```\r\n\r\nThat gives the same sort of error about the shape:\r\n\r\n```\r\nValueError: Error when checking target: expected dense_1 to have 3 dimensions, but got array with shape (32, 5)\r\n```\r\n\r\nIf we expand the labels dimensions to have shape `(32, 5, 1)` like so:\r\n\r\n```\r\nimport keras\r\nimport numpy as np\r\n\r\nmodel = keras.Sequential()\r\nmodel.add(keras.layers.Dense(10, input_shape=(5, 6)))\r\n\r\nmodel.compile(optimizer='adam',\r\n              loss='sparse_categorical_crossentropy')\r\n\r\nx_data = np.random.random((32, 5, 6))\r\ny_data = np.random.randint(0, 9, size=(32,5,1))\r\n\r\nmodel.fit(x=x_data, y=y_data, batch_size=16, epochs=3)\r\n```\r\n\r\nThe error does appear to go away (with TensorFlow backend at least, I'm not up and running with Theano presently). I'm going to kick the tires a bit more and make sure this is really working and things like masking still function as we expect. If someone could check the above with Theano, that would be helpful."}