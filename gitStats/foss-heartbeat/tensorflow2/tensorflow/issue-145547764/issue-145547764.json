{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1758", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1758/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1758/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1758/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/1758", "id": 145547764, "node_id": "MDU6SXNzdWUxNDU1NDc3NjQ=", "number": 1758, "title": "Network Surgery: Changing Inputs in existing networks", "user": {"login": "kmader", "id": 116120, "node_id": "MDQ6VXNlcjExNjEyMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/116120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmader", "html_url": "https://github.com/kmader", "followers_url": "https://api.github.com/users/kmader/followers", "following_url": "https://api.github.com/users/kmader/following{/other_user}", "gists_url": "https://api.github.com/users/kmader/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmader/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmader/subscriptions", "organizations_url": "https://api.github.com/users/kmader/orgs", "repos_url": "https://api.github.com/users/kmader/repos", "events_url": "https://api.github.com/users/kmader/events{/privacy}", "received_events_url": "https://api.github.com/users/kmader/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2016-04-03T22:34:44Z", "updated_at": "2018-05-21T21:44:30Z", "closed_at": "2016-04-04T14:27:54Z", "author_association": "NONE", "body_html": "<p>I am trying to modify an existing graph (inception) loaded using the standard approach</p>\n<pre><code>with gfile.FastGFile(os.path.join(\n      model_dir, 'classify_image_graph_def.pb'), 'r') as f:\n    graph_def = tf.GraphDef()\n    graph_def.ParseFromString(f.read())\n    _ = tf.import_graph_def(graph_def, name='')\n</code></pre>\n<p>The nodes are accessible using the <code>get_tensor_by_name</code> method. Here I try to replace the input to <code>Cast</code> (which is <code>DecodeJpeg</code>) with a <code>tf.Variable</code> with the same contents (allowing it to be used for optimization)</p>\n<pre><code>old_cast_node = sess.graph.get_tensor_by_name('Cast:0')\nold_image_input = old_cast_node.op.inputs[0]\ntf_new_image = tf.Variable(old_image_input.eval())\nold_cast_node.op.inputs[0] = tf_new_image\n</code></pre>\n<p>Results in this error</p>\n<pre><code>TypeError: '_InputList' object does not support item assignment\n</code></pre>\n<p>Can the inputlist of an op be modified in any other way?</p>", "body_text": "I am trying to modify an existing graph (inception) loaded using the standard approach\nwith gfile.FastGFile(os.path.join(\n      model_dir, 'classify_image_graph_def.pb'), 'r') as f:\n    graph_def = tf.GraphDef()\n    graph_def.ParseFromString(f.read())\n    _ = tf.import_graph_def(graph_def, name='')\n\nThe nodes are accessible using the get_tensor_by_name method. Here I try to replace the input to Cast (which is DecodeJpeg) with a tf.Variable with the same contents (allowing it to be used for optimization)\nold_cast_node = sess.graph.get_tensor_by_name('Cast:0')\nold_image_input = old_cast_node.op.inputs[0]\ntf_new_image = tf.Variable(old_image_input.eval())\nold_cast_node.op.inputs[0] = tf_new_image\n\nResults in this error\nTypeError: '_InputList' object does not support item assignment\n\nCan the inputlist of an op be modified in any other way?", "body": "I am trying to modify an existing graph (inception) loaded using the standard approach \n\n```\nwith gfile.FastGFile(os.path.join(\n      model_dir, 'classify_image_graph_def.pb'), 'r') as f:\n    graph_def = tf.GraphDef()\n    graph_def.ParseFromString(f.read())\n    _ = tf.import_graph_def(graph_def, name='')\n```\n\nThe nodes are accessible using the `get_tensor_by_name` method. Here I try to replace the input to `Cast` (which is `DecodeJpeg`) with a `tf.Variable` with the same contents (allowing it to be used for optimization)\n\n```\nold_cast_node = sess.graph.get_tensor_by_name('Cast:0')\nold_image_input = old_cast_node.op.inputs[0]\ntf_new_image = tf.Variable(old_image_input.eval())\nold_cast_node.op.inputs[0] = tf_new_image\n```\n\nResults in this error\n\n```\nTypeError: '_InputList' object does not support item assignment\n```\n\nCan the inputlist of an op be modified in any other way?\n"}