{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/321934990", "html_url": "https://github.com/tensorflow/tensorflow/issues/11839#issuecomment-321934990", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11839", "id": 321934990, "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTkzNDk5MA==", "user": {"login": "sguada", "id": 1766524, "node_id": "MDQ6VXNlcjE3NjY1MjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1766524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sguada", "html_url": "https://github.com/sguada", "followers_url": "https://api.github.com/users/sguada/followers", "following_url": "https://api.github.com/users/sguada/following{/other_user}", "gists_url": "https://api.github.com/users/sguada/gists{/gist_id}", "starred_url": "https://api.github.com/users/sguada/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sguada/subscriptions", "organizations_url": "https://api.github.com/users/sguada/orgs", "repos_url": "https://api.github.com/users/sguada/repos", "events_url": "https://api.github.com/users/sguada/events{/privacy}", "received_events_url": "https://api.github.com/users/sguada/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-11T22:46:40Z", "updated_at": "2017-08-11T22:47:01Z", "author_association": "MEMBER", "body_html": "<p>If you do what I mentioned then you would get it, because now we are telling ema that we only want to use <code>x.ExponentialMovingAverage</code> but not the others by passing <code>tf.moving_average_variables()</code></p>\n<pre><code>x = tf.Variable(12.,name='x')\ny = tf.Variable(34.,name='y')\nz = tf.Variable(0, trainable=False)\nema = tf.train.ExponentialMovingAverage(.0)\nema.apply([x])\nvariables_to_restore = ema.variables_to_restore(tf.moving_average_variables())\nprint(variables_to_restore)\n</code></pre>\n<pre><code>{u'y': &lt;tf.Variable 'y:0' shape=() dtype=float32_ref&gt;, u'Variable': &lt;tf.Variable 'Variable:0' shape=() dtype=int32_ref&gt;, u'x/ExponentialMovingAverage': &lt;tf.Variable 'x:0' shape=() dtype=float32_ref&gt;}\n</code></pre>", "body_text": "If you do what I mentioned then you would get it, because now we are telling ema that we only want to use x.ExponentialMovingAverage but not the others by passing tf.moving_average_variables()\nx = tf.Variable(12.,name='x')\ny = tf.Variable(34.,name='y')\nz = tf.Variable(0, trainable=False)\nema = tf.train.ExponentialMovingAverage(.0)\nema.apply([x])\nvariables_to_restore = ema.variables_to_restore(tf.moving_average_variables())\nprint(variables_to_restore)\n\n{u'y': <tf.Variable 'y:0' shape=() dtype=float32_ref>, u'Variable': <tf.Variable 'Variable:0' shape=() dtype=int32_ref>, u'x/ExponentialMovingAverage': <tf.Variable 'x:0' shape=() dtype=float32_ref>}", "body": "If you do what I mentioned then you would get it, because now we are telling ema that we only want to use `x.ExponentialMovingAverage` but not the others by passing `tf.moving_average_variables()`\r\n\r\n```\r\nx = tf.Variable(12.,name='x')\r\ny = tf.Variable(34.,name='y')\r\nz = tf.Variable(0, trainable=False)\r\nema = tf.train.ExponentialMovingAverage(.0)\r\nema.apply([x])\r\nvariables_to_restore = ema.variables_to_restore(tf.moving_average_variables())\r\nprint(variables_to_restore)\r\n```\r\n```\r\n{u'y': <tf.Variable 'y:0' shape=() dtype=float32_ref>, u'Variable': <tf.Variable 'Variable:0' shape=() dtype=int32_ref>, u'x/ExponentialMovingAverage': <tf.Variable 'x:0' shape=() dtype=float32_ref>}\r\n```"}