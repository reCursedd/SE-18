{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11839", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11839/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11839/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11839/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/11839", "id": 246217403, "node_id": "MDU6SXNzdWUyNDYyMTc0MDM=", "number": 11839, "title": "tf.train.ExponentialMovingAverage.variables_to_restore", "user": {"login": "gauss-clb", "id": 11674304, "node_id": "MDQ6VXNlcjExNjc0MzA0", "avatar_url": "https://avatars2.githubusercontent.com/u/11674304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gauss-clb", "html_url": "https://github.com/gauss-clb", "followers_url": "https://api.github.com/users/gauss-clb/followers", "following_url": "https://api.github.com/users/gauss-clb/following{/other_user}", "gists_url": "https://api.github.com/users/gauss-clb/gists{/gist_id}", "starred_url": "https://api.github.com/users/gauss-clb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gauss-clb/subscriptions", "organizations_url": "https://api.github.com/users/gauss-clb/orgs", "repos_url": "https://api.github.com/users/gauss-clb/repos", "events_url": "https://api.github.com/users/gauss-clb/events{/privacy}", "received_events_url": "https://api.github.com/users/gauss-clb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-07-28T02:03:50Z", "updated_at": "2017-11-11T15:01:51Z", "closed_at": "2017-11-11T15:01:51Z", "author_association": "NONE", "body_html": "<p>When I view the API doc, <a href=\"https://www.tensorflow.org/versions/master/api_docs/python/tf/train/ExponentialMovingAverage#variables_to_restore\" rel=\"nofollow\">tf.train.ExponentialMovingAverage.variables_to_restore</a>. It said <code>If a variable has a moving average, use the moving average variable name as the restore name; otherwise, use the variable name.</code>, but I test it is wrong.<br>\nLook the code:</p>\n<pre><code>import tensorflow as tf\n\na = tf.Variable(tf.constant(1.0),name='a')\nb = tf.Variable(tf.constant(3.0),name='b')\nc = tf.Variable(tf.constant(5.0),name='c')\nema = tf.train.ExponentialMovingAverage(decay=0.9999)\nema.apply([a,b])\n\nprint(tf.get_default_graph().get_all_collection_keys())\nprint(tf.get_collection('moving_average_variables'))\nprint(tf.global_variables())\nvariables_to_restore = ema.variables_to_restore()\nprint(variables_to_restore)\n</code></pre>\n<p>And the output is:</p>\n<pre><code>['trainable_variables', 'moving_average_variables', 'cond_context', 'variables']\n[&lt;tf.Variable 'a:0' shape=() dtype=float32_ref&gt;, &lt;tf.Variable 'b:0' shape=() dtype=float32_ref&gt;]\n[&lt;tf.Variable 'a:0' shape=() dtype=float32_ref&gt;, &lt;tf.Variable 'b:0' shape=() dtype=float32_ref&gt;, &lt;tf.Variable 'c:0' shape=() dtype=float32_ref&gt;, &lt;tf.Variable 'a/ExponentialMovingAverage:0' shape=() dtype=float32_ref&gt;, &lt;tf.Variable 'b/ExponentialMovingAverage:0' shape=() dtype=float32_ref&gt;]\n{'a/ExponentialMovingAverage': &lt;tf.Variable 'a:0' shape=() dtype=float32_ref&gt;, 'c/ExponentialMovingAverage': &lt;tf.Variable 'c:0' shape=() dtype=float32_ref&gt;, 'b/ExponentialMovingAverage': &lt;tf.Variable 'b:0' shape=() dtype=float32_ref&gt;}\n\n</code></pre>\n<p>Variable c don't has a moving average, but in <code>variables_to_restore</code>, it use key=shadow_name either.<br>\nWho can tell me what's wrong?</p>", "body_text": "When I view the API doc, tf.train.ExponentialMovingAverage.variables_to_restore. It said If a variable has a moving average, use the moving average variable name as the restore name; otherwise, use the variable name., but I test it is wrong.\nLook the code:\nimport tensorflow as tf\n\na = tf.Variable(tf.constant(1.0),name='a')\nb = tf.Variable(tf.constant(3.0),name='b')\nc = tf.Variable(tf.constant(5.0),name='c')\nema = tf.train.ExponentialMovingAverage(decay=0.9999)\nema.apply([a,b])\n\nprint(tf.get_default_graph().get_all_collection_keys())\nprint(tf.get_collection('moving_average_variables'))\nprint(tf.global_variables())\nvariables_to_restore = ema.variables_to_restore()\nprint(variables_to_restore)\n\nAnd the output is:\n['trainable_variables', 'moving_average_variables', 'cond_context', 'variables']\n[<tf.Variable 'a:0' shape=() dtype=float32_ref>, <tf.Variable 'b:0' shape=() dtype=float32_ref>]\n[<tf.Variable 'a:0' shape=() dtype=float32_ref>, <tf.Variable 'b:0' shape=() dtype=float32_ref>, <tf.Variable 'c:0' shape=() dtype=float32_ref>, <tf.Variable 'a/ExponentialMovingAverage:0' shape=() dtype=float32_ref>, <tf.Variable 'b/ExponentialMovingAverage:0' shape=() dtype=float32_ref>]\n{'a/ExponentialMovingAverage': <tf.Variable 'a:0' shape=() dtype=float32_ref>, 'c/ExponentialMovingAverage': <tf.Variable 'c:0' shape=() dtype=float32_ref>, 'b/ExponentialMovingAverage': <tf.Variable 'b:0' shape=() dtype=float32_ref>}\n\n\nVariable c don't has a moving average, but in variables_to_restore, it use key=shadow_name either.\nWho can tell me what's wrong?", "body": "When I view the API doc, [tf.train.ExponentialMovingAverage.variables_to_restore](https://www.tensorflow.org/versions/master/api_docs/python/tf/train/ExponentialMovingAverage#variables_to_restore). It said `If a variable has a moving average, use the moving average variable name as the restore name; otherwise, use the variable name.`, but I test it is wrong.\r\nLook the code:\r\n\r\n```\r\nimport tensorflow as tf\r\n\r\na = tf.Variable(tf.constant(1.0),name='a')\r\nb = tf.Variable(tf.constant(3.0),name='b')\r\nc = tf.Variable(tf.constant(5.0),name='c')\r\nema = tf.train.ExponentialMovingAverage(decay=0.9999)\r\nema.apply([a,b])\r\n\r\nprint(tf.get_default_graph().get_all_collection_keys())\r\nprint(tf.get_collection('moving_average_variables'))\r\nprint(tf.global_variables())\r\nvariables_to_restore = ema.variables_to_restore()\r\nprint(variables_to_restore)\r\n```\r\nAnd the output is:\r\n```\r\n['trainable_variables', 'moving_average_variables', 'cond_context', 'variables']\r\n[<tf.Variable 'a:0' shape=() dtype=float32_ref>, <tf.Variable 'b:0' shape=() dtype=float32_ref>]\r\n[<tf.Variable 'a:0' shape=() dtype=float32_ref>, <tf.Variable 'b:0' shape=() dtype=float32_ref>, <tf.Variable 'c:0' shape=() dtype=float32_ref>, <tf.Variable 'a/ExponentialMovingAverage:0' shape=() dtype=float32_ref>, <tf.Variable 'b/ExponentialMovingAverage:0' shape=() dtype=float32_ref>]\r\n{'a/ExponentialMovingAverage': <tf.Variable 'a:0' shape=() dtype=float32_ref>, 'c/ExponentialMovingAverage': <tf.Variable 'c:0' shape=() dtype=float32_ref>, 'b/ExponentialMovingAverage': <tf.Variable 'b:0' shape=() dtype=float32_ref>}\r\n\r\n```\r\nVariable c don't has a moving average, but in `variables_to_restore`, it use key=shadow_name either.\r\nWho can tell me what's wrong?"}