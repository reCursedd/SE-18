{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/321595127", "html_url": "https://github.com/tensorflow/tensorflow/issues/11839#issuecomment-321595127", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11839", "id": 321595127, "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTU5NTEyNw==", "user": {"login": "sguada", "id": 1766524, "node_id": "MDQ6VXNlcjE3NjY1MjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1766524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sguada", "html_url": "https://github.com/sguada", "followers_url": "https://api.github.com/users/sguada/followers", "following_url": "https://api.github.com/users/sguada/following{/other_user}", "gists_url": "https://api.github.com/users/sguada/gists{/gist_id}", "starred_url": "https://api.github.com/users/sguada/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sguada/subscriptions", "organizations_url": "https://api.github.com/users/sguada/orgs", "repos_url": "https://api.github.com/users/sguada/repos", "events_url": "https://api.github.com/users/sguada/events{/privacy}", "received_events_url": "https://api.github.com/users/sguada/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-10T15:58:28Z", "updated_at": "2017-08-10T15:58:38Z", "author_association": "MEMBER", "body_html": "<p>I'm sorry but I don't understand your comment.</p>\n<p>The code I suggested is for the restoring phase, for saving one would use <code>tf.train.Saver()</code> which would save <code>x</code>, <code>y</code>, <code>z</code> and <code>x/ExponentialMovingAverage</code></p>\n<p>If you print <code>variables_to_restore</code> I would expect that you get the following:</p>\n<pre><code>{'x/ExponentialMovingAverage': &lt;tf.Variable 'x:0' shape=() dtype=float32_ref&gt;, \n'y': &lt;tf.Variable 'y:0' shape=() dtype=float32_ref&gt;,\n'z': &lt;tf.Variable 'z:0' shape=() dtype=float32_ref&gt;}\n</code></pre>\n<p>What means that the variable <code>x</code> would restore its value from <code>x/EMA</code> instead of from <code>x</code> itself, while <code>y</code> and <code>z</code> would restore their values from themselves.</p>", "body_text": "I'm sorry but I don't understand your comment.\nThe code I suggested is for the restoring phase, for saving one would use tf.train.Saver() which would save x, y, z and x/ExponentialMovingAverage\nIf you print variables_to_restore I would expect that you get the following:\n{'x/ExponentialMovingAverage': <tf.Variable 'x:0' shape=() dtype=float32_ref>, \n'y': <tf.Variable 'y:0' shape=() dtype=float32_ref>,\n'z': <tf.Variable 'z:0' shape=() dtype=float32_ref>}\n\nWhat means that the variable x would restore its value from x/EMA instead of from x itself, while y and z would restore their values from themselves.", "body": "I'm sorry but I don't understand your comment. \r\n\r\nThe code I suggested is for the restoring phase, for saving one would use `tf.train.Saver()` which would save `x`, `y`, `z` and `x/ExponentialMovingAverage`\r\n\r\nIf you print `variables_to_restore` I would expect that you get the following:\r\n```\r\n{'x/ExponentialMovingAverage': <tf.Variable 'x:0' shape=() dtype=float32_ref>, \r\n'y': <tf.Variable 'y:0' shape=() dtype=float32_ref>,\r\n'z': <tf.Variable 'z:0' shape=() dtype=float32_ref>}\r\n```\r\n\r\nWhat means that the variable `x` would restore its value from `x/EMA` instead of from `x` itself, while `y` and `z` would restore their values from themselves.\r\n\r\n\r\n"}