{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/227530040", "html_url": "https://github.com/tensorflow/tensorflow/pull/2971#issuecomment-227530040", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2971", "id": 227530040, "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzUzMDA0MA==", "user": {"login": "maciekcc", "id": 15237924, "node_id": "MDQ6VXNlcjE1MjM3OTI0", "avatar_url": "https://avatars0.githubusercontent.com/u/15237924?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maciekcc", "html_url": "https://github.com/maciekcc", "followers_url": "https://api.github.com/users/maciekcc/followers", "following_url": "https://api.github.com/users/maciekcc/following{/other_user}", "gists_url": "https://api.github.com/users/maciekcc/gists{/gist_id}", "starred_url": "https://api.github.com/users/maciekcc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maciekcc/subscriptions", "organizations_url": "https://api.github.com/users/maciekcc/orgs", "repos_url": "https://api.github.com/users/maciekcc/repos", "events_url": "https://api.github.com/users/maciekcc/events{/privacy}", "received_events_url": "https://api.github.com/users/maciekcc/received_events", "type": "User", "site_admin": false}, "created_at": "2016-06-21T18:31:19Z", "updated_at": "2016-06-21T18:31:47Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Thanks for the update!</p>\n<p>Sorry for nit-picking :). Can you please pass the tolerance explicitly in the test body, say:</p>\n<p><code>self._compareBothSparse(z, np.sqrt, tf.sqrt, tolerance=1e-3)</code></p>\n<p>pass it down to _check and use <code>None</code> as default value. This way you can rely on the defaults defined in the super class. You do not need to keep them synced in two places, and overload only when you want to. Maybe something like this will do:</p>\n<pre><code>def _check(self, result_tensor, result_np, input_sp_t, tolerance=None):\n  ..\n  if tolerance is None:\n    self.assertAllClose(result_np, result_tensor.values.eval())\n  else:\n    self.assertAllClose(result_np, result_tensor.values.eval(), rtol=tolerance, atol=tolerance)\n\n</code></pre>", "body_text": "Thanks for the update!\nSorry for nit-picking :). Can you please pass the tolerance explicitly in the test body, say:\nself._compareBothSparse(z, np.sqrt, tf.sqrt, tolerance=1e-3)\npass it down to _check and use None as default value. This way you can rely on the defaults defined in the super class. You do not need to keep them synced in two places, and overload only when you want to. Maybe something like this will do:\ndef _check(self, result_tensor, result_np, input_sp_t, tolerance=None):\n  ..\n  if tolerance is None:\n    self.assertAllClose(result_np, result_tensor.values.eval())\n  else:\n    self.assertAllClose(result_np, result_tensor.values.eval(), rtol=tolerance, atol=tolerance)", "body": "Thanks for the update!\n\nSorry for nit-picking :). Can you please pass the tolerance explicitly in the test body, say:\n\n`self._compareBothSparse(z, np.sqrt, tf.sqrt, tolerance=1e-3)`\n\npass it down to _check and use `None` as default value. This way you can rely on the defaults defined in the super class. You do not need to keep them synced in two places, and overload only when you want to. Maybe something like this will do:\n\n```\ndef _check(self, result_tensor, result_np, input_sp_t, tolerance=None):\n  ..\n  if tolerance is None:\n    self.assertAllClose(result_np, result_tensor.values.eval())\n  else:\n    self.assertAllClose(result_np, result_tensor.values.eval(), rtol=tolerance, atol=tolerance)\n\n```\n"}