{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/368668779", "html_url": "https://github.com/tensorflow/tensorflow/issues/17246#issuecomment-368668779", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17246", "id": 368668779, "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODY2ODc3OQ==", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-26T22:10:03Z", "updated_at": "2018-02-26T22:10:19Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Yes, same speed is with resource variables. I also get fast fetch speed if I turn off all optimizers and fetch <code>var+0</code></p>\n<p><a href=\"https://github.com/diux-dev/cluster/blob/37d069c20fae6aeac10a53e3f801d29aebc5d6b4/yuxin_numpy/tf_numpy_benchmark.py\">tf_numpy_benchmark.py</a></p>\n<pre><code>python tf_numpy_benchmark.py --benchmark=fetch_cpu_variable_add --size-mb=1024 --num-iters=31\nfetch_cpu_variable_add        :  21.0 GB/sec, min: 48.83, median: 56.08, mean: 55.69\n\npython tf_numpy_benchmark.py --benchmark=fetch_cpu_resource_variable --num-iters=11 --size-mb=1024\nfetch_cpu_variable            :   2.6 GB/sec, min: 401.36, median: 404.02, mean: 403.63\n</code></pre>\n<p>I suspect that fetching variable triggers a single threaded memcpy. Meanwhile fetching \"var+0\" uses multiple cores, so it's essentially a multi-threaded memory copy</p>", "body_text": "Yes, same speed is with resource variables. I also get fast fetch speed if I turn off all optimizers and fetch var+0\ntf_numpy_benchmark.py\npython tf_numpy_benchmark.py --benchmark=fetch_cpu_variable_add --size-mb=1024 --num-iters=31\nfetch_cpu_variable_add        :  21.0 GB/sec, min: 48.83, median: 56.08, mean: 55.69\n\npython tf_numpy_benchmark.py --benchmark=fetch_cpu_resource_variable --num-iters=11 --size-mb=1024\nfetch_cpu_variable            :   2.6 GB/sec, min: 401.36, median: 404.02, mean: 403.63\n\nI suspect that fetching variable triggers a single threaded memcpy. Meanwhile fetching \"var+0\" uses multiple cores, so it's essentially a multi-threaded memory copy", "body": "Yes, same speed is with resource variables. I also get fast fetch speed if I turn off all optimizers and fetch `var+0`\r\n\r\n[tf_numpy_benchmark.py](https://github.com/diux-dev/cluster/blob/37d069c20fae6aeac10a53e3f801d29aebc5d6b4/yuxin_numpy/tf_numpy_benchmark.py)\r\n\r\n```\r\npython tf_numpy_benchmark.py --benchmark=fetch_cpu_variable_add --size-mb=1024 --num-iters=31\r\nfetch_cpu_variable_add        :  21.0 GB/sec, min: 48.83, median: 56.08, mean: 55.69\r\n\r\npython tf_numpy_benchmark.py --benchmark=fetch_cpu_resource_variable --num-iters=11 --size-mb=1024\r\nfetch_cpu_variable            :   2.6 GB/sec, min: 401.36, median: 404.02, mean: 403.63\r\n```\r\n\r\nI suspect that fetching variable triggers a single threaded memcpy. Meanwhile fetching \"var+0\" uses multiple cores, so it's essentially a multi-threaded memory copy"}