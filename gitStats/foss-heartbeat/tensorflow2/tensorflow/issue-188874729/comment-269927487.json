{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/269927487", "html_url": "https://github.com/tensorflow/tensorflow/pull/5558#issuecomment-269927487", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5558", "id": 269927487, "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTkyNzQ4Nw==", "user": {"login": "foxik", "id": 560016, "node_id": "MDQ6VXNlcjU2MDAxNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/560016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/foxik", "html_url": "https://github.com/foxik", "followers_url": "https://api.github.com/users/foxik/followers", "following_url": "https://api.github.com/users/foxik/following{/other_user}", "gists_url": "https://api.github.com/users/foxik/gists{/gist_id}", "starred_url": "https://api.github.com/users/foxik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/foxik/subscriptions", "organizations_url": "https://api.github.com/users/foxik/orgs", "repos_url": "https://api.github.com/users/foxik/repos", "events_url": "https://api.github.com/users/foxik/events{/privacy}", "received_events_url": "https://api.github.com/users/foxik/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-02T00:59:40Z", "updated_at": "2017-01-02T00:59:40Z", "author_association": "CONTRIBUTOR", "body_html": "<p>+1 for implementing some way of using string tensor as summary name.</p>\n<p>I frequently used the following scenario, where I want to measure accuracy on train/devel/test data (to appear in different graphs in TensorBoard):</p>\n<div class=\"highlight highlight-source-python\"><pre>    dataset_name <span class=\"pl-k\">=</span> tf.placeholder(tf.string, [])\n    summary <span class=\"pl-k\">=</span> tf.scalar_summary(<span class=\"pl-c1\">self</span>.dataset_name<span class=\"pl-k\">+</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/accuracy<span class=\"pl-pds\">\"</span></span>, accuracy)</pre></div>\n<p>That way I could use the same <code>summary</code> with any of the data:</p>\n<div class=\"highlight highlight-source-python\"><pre>   summary <span class=\"pl-k\">=</span> session.run([summary], {dataset_name:<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>train<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>devel<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">/</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>test<span class=\"pl-pds\">\"</span></span>})</pre></div>\n<p>A <code>prefix</code> option would be ideal for me, but generaly any way of using string tensor is. Currently I have to create separate summary operations for every dataset I want to evaluate on.</p>", "body_text": "+1 for implementing some way of using string tensor as summary name.\nI frequently used the following scenario, where I want to measure accuracy on train/devel/test data (to appear in different graphs in TensorBoard):\n    dataset_name = tf.placeholder(tf.string, [])\n    summary = tf.scalar_summary(self.dataset_name+\"/accuracy\", accuracy)\nThat way I could use the same summary with any of the data:\n   summary = session.run([summary], {dataset_name:\"train\" / \"devel\" / \"test\"})\nA prefix option would be ideal for me, but generaly any way of using string tensor is. Currently I have to create separate summary operations for every dataset I want to evaluate on.", "body": "+1 for implementing some way of using string tensor as summary name.\r\n\r\nI frequently used the following scenario, where I want to measure accuracy on train/devel/test data (to appear in different graphs in TensorBoard):\r\n```python\r\n    dataset_name = tf.placeholder(tf.string, [])\r\n    summary = tf.scalar_summary(self.dataset_name+\"/accuracy\", accuracy)\r\n```\r\nThat way I could use the same `summary` with any of the data:\r\n```python\r\n   summary = session.run([summary], {dataset_name:\"train\" / \"devel\" / \"test\"})\r\n```\r\nA `prefix` option would be ideal for me, but generaly any way of using string tensor is. Currently I have to create separate summary operations for every dataset I want to evaluate on."}