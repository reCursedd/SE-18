{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/246080982", "html_url": "https://github.com/tensorflow/tensorflow/issues/4297#issuecomment-246080982", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4297", "id": 246080982, "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjA4MDk4Mg==", "user": {"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}, "created_at": "2016-09-10T01:53:23Z", "updated_at": "2016-09-10T01:53:23Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=12466121\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/VaWheel\">@VaWheel</a> I think I see where the confusion occurred.</p>\n<p>In the paper, I believe the output formula you're using is is from section 2.4 \"Zero padding, non-unit strides\".  That formula is correct, but make sure you don't miss the floor function!</p>\n<p>But you mention that SAME padding should be [kernel/2], which you're getting from section 2.2.1 \"Half (same) padding\".  Note that in the formula s=1, i.e. there is a unit stride.  All of section 2.2 is only discussing the s=1 case, so it's not applicable to your stride=2 scenario.  It doesn't make sense to combine the two formulas.</p>\n<p>Also note that the use of \"same\" in section 2.2.1 is different than the terminology we use in tensorflow.  Here's how we define SAME and VALID padding in tensorflow:<br>\n<a href=\"https://www.tensorflow.org/versions/r0.10/api_docs/python/nn.html#convolution\" rel=\"nofollow\">https://www.tensorflow.org/versions/r0.10/api_docs/python/nn.html#convolution</a></p>\n<p>Roughly speaking VALID means we never pad, and only apply the filter (i.e. kernel) over real inputs.  SAME means we pad equally on all sides, such that the output size = ceil(input/stride)</p>\n<p>Let's consider your original example of a 28x28 image, kernel size 2x2, stride 2.  Starting from the top left corner (0,0), we will move to (0,2), (0,4), ..., (0,26).  That's a total of 14 steps, which is why the output is 14x14.  There are no missed pixels.</p>\n<p>Hope that helps.</p>", "body_text": "@VaWheel I think I see where the confusion occurred.\nIn the paper, I believe the output formula you're using is is from section 2.4 \"Zero padding, non-unit strides\".  That formula is correct, but make sure you don't miss the floor function!\nBut you mention that SAME padding should be [kernel/2], which you're getting from section 2.2.1 \"Half (same) padding\".  Note that in the formula s=1, i.e. there is a unit stride.  All of section 2.2 is only discussing the s=1 case, so it's not applicable to your stride=2 scenario.  It doesn't make sense to combine the two formulas.\nAlso note that the use of \"same\" in section 2.2.1 is different than the terminology we use in tensorflow.  Here's how we define SAME and VALID padding in tensorflow:\nhttps://www.tensorflow.org/versions/r0.10/api_docs/python/nn.html#convolution\nRoughly speaking VALID means we never pad, and only apply the filter (i.e. kernel) over real inputs.  SAME means we pad equally on all sides, such that the output size = ceil(input/stride)\nLet's consider your original example of a 28x28 image, kernel size 2x2, stride 2.  Starting from the top left corner (0,0), we will move to (0,2), (0,4), ..., (0,26).  That's a total of 14 steps, which is why the output is 14x14.  There are no missed pixels.\nHope that helps.", "body": "@VaWheel I think I see where the confusion occurred.\n\nIn the paper, I believe the output formula you're using is is from section 2.4 \"Zero padding, non-unit strides\".  That formula is correct, but make sure you don't miss the floor function!\n\nBut you mention that SAME padding should be [kernel/2], which you're getting from section 2.2.1 \"Half (same) padding\".  Note that in the formula s=1, i.e. there is a unit stride.  All of section 2.2 is only discussing the s=1 case, so it's not applicable to your stride=2 scenario.  It doesn't make sense to combine the two formulas.\n\nAlso note that the use of \"same\" in section 2.2.1 is different than the terminology we use in tensorflow.  Here's how we define SAME and VALID padding in tensorflow:\nhttps://www.tensorflow.org/versions/r0.10/api_docs/python/nn.html#convolution\n\nRoughly speaking VALID means we never pad, and only apply the filter (i.e. kernel) over real inputs.  SAME means we pad equally on all sides, such that the output size = ceil(input/stride)\n\nLet's consider your original example of a 28x28 image, kernel size 2x2, stride 2.  Starting from the top left corner (0,0), we will move to (0,2), (0,4), ..., (0,26).  That's a total of 14 steps, which is why the output is 14x14.  There are no missed pixels.\n\nHope that helps.\n"}