{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/184664527", "html_url": "https://github.com/tensorflow/tensorflow/issues/583#issuecomment-184664527", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/583", "id": 184664527, "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDY2NDUyNw==", "user": {"login": "dvyukov", "id": 1095328, "node_id": "MDQ6VXNlcjEwOTUzMjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1095328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dvyukov", "html_url": "https://github.com/dvyukov", "followers_url": "https://api.github.com/users/dvyukov/followers", "following_url": "https://api.github.com/users/dvyukov/following{/other_user}", "gists_url": "https://api.github.com/users/dvyukov/gists{/gist_id}", "starred_url": "https://api.github.com/users/dvyukov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dvyukov/subscriptions", "organizations_url": "https://api.github.com/users/dvyukov/orgs", "repos_url": "https://api.github.com/users/dvyukov/repos", "events_url": "https://api.github.com/users/dvyukov/events{/privacy}", "received_events_url": "https://api.github.com/users/dvyukov/received_events", "type": "User", "site_admin": false}, "created_at": "2016-02-16T12:30:30Z", "updated_at": "2016-02-16T12:30:30Z", "author_association": "NONE", "body_html": "<p>Doh. I've added a global FIFO queue for externally submitted work and deadlocks go away. The pool is still faster than the default one. But what I see is that <em>all</em> work is on the global queue. So what provides speedup in our cases is merely thread spinning before blocking. Ouch. If we remove the worker work queue, I bet it will become just faster...</p>\n<p>Such parallel algorithms are not going to scale whatever pool is used for scheduling. The parallelization part needs to be rewritten.</p>", "body_text": "Doh. I've added a global FIFO queue for externally submitted work and deadlocks go away. The pool is still faster than the default one. But what I see is that all work is on the global queue. So what provides speedup in our cases is merely thread spinning before blocking. Ouch. If we remove the worker work queue, I bet it will become just faster...\nSuch parallel algorithms are not going to scale whatever pool is used for scheduling. The parallelization part needs to be rewritten.", "body": "Doh. I've added a global FIFO queue for externally submitted work and deadlocks go away. The pool is still faster than the default one. But what I see is that _all_ work is on the global queue. So what provides speedup in our cases is merely thread spinning before blocking. Ouch. If we remove the worker work queue, I bet it will become just faster...\n\nSuch parallel algorithms are not going to scale whatever pool is used for scheduling. The parallelization part needs to be rewritten.\n"}