{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/311857045", "html_url": "https://github.com/tensorflow/tensorflow/pull/9551#issuecomment-311857045", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9551", "id": 311857045, "node_id": "MDEyOklzc3VlQ29tbWVudDMxMTg1NzA0NQ==", "user": {"login": "sesamesub", "id": 22533891, "node_id": "MDQ6VXNlcjIyNTMzODkx", "avatar_url": "https://avatars3.githubusercontent.com/u/22533891?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sesamesub", "html_url": "https://github.com/sesamesub", "followers_url": "https://api.github.com/users/sesamesub/followers", "following_url": "https://api.github.com/users/sesamesub/following{/other_user}", "gists_url": "https://api.github.com/users/sesamesub/gists{/gist_id}", "starred_url": "https://api.github.com/users/sesamesub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sesamesub/subscriptions", "organizations_url": "https://api.github.com/users/sesamesub/orgs", "repos_url": "https://api.github.com/users/sesamesub/repos", "events_url": "https://api.github.com/users/sesamesub/events{/privacy}", "received_events_url": "https://api.github.com/users/sesamesub/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-29T04:05:58Z", "updated_at": "2017-06-29T04:05:58Z", "author_association": "NONE", "body_html": "<p>I'm trying to learn more dcsgd and external optimizers for tf, I'm unsure how to implement this feature with the tf learn library examples.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1414676\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zhuhyc\">@zhuhyc</a><br>\nDoes your testcode work for CPUs? When I run the softmax example on docker nightly CPU build, I get the following result:</p>\n<p>$ python mnist_softmax_dc_asgd.py</p>\n<blockquote>\n<p>Traceback (most recent call last):<br>\nFile \"mnist_softmax_dc_asgd.py\", line 84, in <br>\ntf.app.run(main=main, argv=[sys.argv[0]] + unparsed)<br>\nFile \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py\", line 48, in run<br>\n_sys.exit(main(_sys.argv[:1] + flags_passthrough))<br>\nFile \"mnist_softmax_dc_asgd.py\", line 64, in main<br>\ntrain_step = optimizer.minimize(cross_entropy,worker_index=0)<br>\nFile \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/opt/python/training/delay_compensated_gradient_descent.py\", line 144, in minimize<br>\nname=name, worker_index=worker_index)<br>\nFile \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/opt/python/training/delay_compensated_gradient_descent.py\", line 217, in apply_gradients<br>\nworker_index))<br>\nFile \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/opt/python/training/delay_compensated_gradient_descent.py\", line 34, in update_op_asynchronous<br>\nreturn optimizer._apply_dense(g, self._v, index)<br>\nTypeError: _apply_dense() takes exactly 3 arguments (4 given)</p>\n</blockquote>\n<blockquote>\n</blockquote>", "body_text": "I'm trying to learn more dcsgd and external optimizers for tf, I'm unsure how to implement this feature with the tf learn library examples.\n@zhuhyc\nDoes your testcode work for CPUs? When I run the softmax example on docker nightly CPU build, I get the following result:\n$ python mnist_softmax_dc_asgd.py\n\nTraceback (most recent call last):\nFile \"mnist_softmax_dc_asgd.py\", line 84, in \ntf.app.run(main=main, argv=[sys.argv[0]] + unparsed)\nFile \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py\", line 48, in run\n_sys.exit(main(_sys.argv[:1] + flags_passthrough))\nFile \"mnist_softmax_dc_asgd.py\", line 64, in main\ntrain_step = optimizer.minimize(cross_entropy,worker_index=0)\nFile \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/opt/python/training/delay_compensated_gradient_descent.py\", line 144, in minimize\nname=name, worker_index=worker_index)\nFile \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/opt/python/training/delay_compensated_gradient_descent.py\", line 217, in apply_gradients\nworker_index))\nFile \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/opt/python/training/delay_compensated_gradient_descent.py\", line 34, in update_op_asynchronous\nreturn optimizer._apply_dense(g, self._v, index)\nTypeError: _apply_dense() takes exactly 3 arguments (4 given)", "body": "I'm trying to learn more dcsgd and external optimizers for tf, I'm unsure how to implement this feature with the tf learn library examples. \r\n\r\n@zhuhyc \r\nDoes your testcode work for CPUs? When I run the softmax example on docker nightly CPU build, I get the following result:\r\n\r\n $ python mnist_softmax_dc_asgd.py\r\n\r\n> Traceback (most recent call last):\r\n  File \"mnist_softmax_dc_asgd.py\", line 84, in <module>\r\n    tf.app.run(main=main, argv=[sys.argv[0]] + unparsed)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py\", line 48, in run\r\n    _sys.exit(main(_sys.argv[:1] + flags_passthrough))\r\n  File \"mnist_softmax_dc_asgd.py\", line 64, in main\r\n    train_step = optimizer.minimize(cross_entropy,worker_index=0)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/opt/python/training/delay_compensated_gradient_descent.py\", line 144, in minimize\r\n    name=name, worker_index=worker_index)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/opt/python/training/delay_compensated_gradient_descent.py\", line 217, in apply_gradients\r\n    worker_index))\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/opt/python/training/delay_compensated_gradient_descent.py\", line 34, in update_op_asynchronous\r\n    return optimizer._apply_dense(g, self._v, index)\r\nTypeError: _apply_dense() takes exactly 3 arguments (4 given)\r\n\r\n> "}