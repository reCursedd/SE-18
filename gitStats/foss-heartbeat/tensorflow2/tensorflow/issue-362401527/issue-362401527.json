{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22430", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22430/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22430/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22430/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/22430", "id": 362401527, "node_id": "MDU6SXNzdWUzNjI0MDE1Mjc=", "number": 22430, "title": "TensorFlow C++ API on ARM processor issue", "user": {"login": "RothLuo", "id": 16584056, "node_id": "MDQ6VXNlcjE2NTg0MDU2", "avatar_url": "https://avatars1.githubusercontent.com/u/16584056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RothLuo", "html_url": "https://github.com/RothLuo", "followers_url": "https://api.github.com/users/RothLuo/followers", "following_url": "https://api.github.com/users/RothLuo/following{/other_user}", "gists_url": "https://api.github.com/users/RothLuo/gists{/gist_id}", "starred_url": "https://api.github.com/users/RothLuo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RothLuo/subscriptions", "organizations_url": "https://api.github.com/users/RothLuo/orgs", "repos_url": "https://api.github.com/users/RothLuo/repos", "events_url": "https://api.github.com/users/RothLuo/events{/privacy}", "received_events_url": "https://api.github.com/users/RothLuo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "wt-huang", "id": 42785337, "node_id": "MDQ6VXNlcjQyNzg1MzM3", "avatar_url": "https://avatars0.githubusercontent.com/u/42785337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wt-huang", "html_url": "https://github.com/wt-huang", "followers_url": "https://api.github.com/users/wt-huang/followers", "following_url": "https://api.github.com/users/wt-huang/following{/other_user}", "gists_url": "https://api.github.com/users/wt-huang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wt-huang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wt-huang/subscriptions", "organizations_url": "https://api.github.com/users/wt-huang/orgs", "repos_url": "https://api.github.com/users/wt-huang/repos", "events_url": "https://api.github.com/users/wt-huang/events{/privacy}", "received_events_url": "https://api.github.com/users/wt-huang/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "wt-huang", "id": 42785337, "node_id": "MDQ6VXNlcjQyNzg1MzM3", "avatar_url": "https://avatars0.githubusercontent.com/u/42785337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wt-huang", "html_url": "https://github.com/wt-huang", "followers_url": "https://api.github.com/users/wt-huang/followers", "following_url": "https://api.github.com/users/wt-huang/following{/other_user}", "gists_url": "https://api.github.com/users/wt-huang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wt-huang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wt-huang/subscriptions", "organizations_url": "https://api.github.com/users/wt-huang/orgs", "repos_url": "https://api.github.com/users/wt-huang/repos", "events_url": "https://api.github.com/users/wt-huang/events{/privacy}", "received_events_url": "https://api.github.com/users/wt-huang/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-09-20T23:16:25Z", "updated_at": "2018-09-29T03:41:01Z", "closed_at": "2018-09-29T03:41:01Z", "author_association": "NONE", "body_html": "<p>System information<br>\n***Have I written custom code (as opposed to using a stock example script provided in TensorFlow):<br>\nNo<br>\n***OS Platform and Distribution (e.g., Linux Ubuntu 16.04):<br>\nLinux Kernel 4.4.103, Linaro 5.4.0<br>\n***TensorFlow installed from (source or binary):<br>\nCross compilation in Ubuntu 16.04 and install the C++ library (libtensorflow.so + protobuf + nsync) in<br>\nthe ARM development board<br>\n***TensorFlow version (use command below):<br>\n1.10.1<br>\n***Python version:<br>\n3.5<br>\n***CUDA/cuDNN version:<br>\nOnly CPU no GPU<br>\n***Exact command to reproduce:<br>\nSession-&gt;Run(feed_dict, {\"num_detections:0\", \"detection_boxes:0\",<br>\n\"detection_scores:0\", \"detection_classes:0\"}, {}, &amp;outputs)</p>\n<p>Describe the problem<br>\nTrained Detection API mobileNetSSD model and saved as a 'pb' file.  Cross compiled the TensorFlow on the PC and installed the binary  (libtensorflow.so + protobuf + nsync) to the ARM board.  The code can be successfully built on the ARM side.  The pb file can be successfully read and loaded into a graph in a session.  However, when trying to run the session by feeding a tensor, the following error message came up:</p>\n<p>2018-09-20 18:28:38.852657: F tensorflow/core/framework/tensor.cc:657] Check failed: in_size != 0 (0 vs. 0)</p>\n<p>It refers to Tensor::UnsafeCopyFromInternal function Line 3:  CHECK_NE(in_size, 0), and in_size =DataTypeSize(other.dtype()), which is unlikely to be zero.</p>\n<p>BTW, these message also came up when loading the 'pb' file:<br>\n2018-09-20 18:28:37.864057: E tensorflow/core/framework/op_kernel.cc:1197] OpKernel ('op: \"DecodeProtoV2\" device_type: \"CPU\"') for unknown op: DecodeProtoV2<br>\n2018-09-20 18:28:37.865515: E tensorflow/core/framework/op_kernel.cc:1197] OpKernel ('op: \"EncodeProto\" device_type: \"CPU\"') for unknown op: EncodeProto</p>", "body_text": "System information\n***Have I written custom code (as opposed to using a stock example script provided in TensorFlow):\nNo\n***OS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nLinux Kernel 4.4.103, Linaro 5.4.0\n***TensorFlow installed from (source or binary):\nCross compilation in Ubuntu 16.04 and install the C++ library (libtensorflow.so + protobuf + nsync) in\nthe ARM development board\n***TensorFlow version (use command below):\n1.10.1\n***Python version:\n3.5\n***CUDA/cuDNN version:\nOnly CPU no GPU\n***Exact command to reproduce:\nSession->Run(feed_dict, {\"num_detections:0\", \"detection_boxes:0\",\n\"detection_scores:0\", \"detection_classes:0\"}, {}, &outputs)\nDescribe the problem\nTrained Detection API mobileNetSSD model and saved as a 'pb' file.  Cross compiled the TensorFlow on the PC and installed the binary  (libtensorflow.so + protobuf + nsync) to the ARM board.  The code can be successfully built on the ARM side.  The pb file can be successfully read and loaded into a graph in a session.  However, when trying to run the session by feeding a tensor, the following error message came up:\n2018-09-20 18:28:38.852657: F tensorflow/core/framework/tensor.cc:657] Check failed: in_size != 0 (0 vs. 0)\nIt refers to Tensor::UnsafeCopyFromInternal function Line 3:  CHECK_NE(in_size, 0), and in_size =DataTypeSize(other.dtype()), which is unlikely to be zero.\nBTW, these message also came up when loading the 'pb' file:\n2018-09-20 18:28:37.864057: E tensorflow/core/framework/op_kernel.cc:1197] OpKernel ('op: \"DecodeProtoV2\" device_type: \"CPU\"') for unknown op: DecodeProtoV2\n2018-09-20 18:28:37.865515: E tensorflow/core/framework/op_kernel.cc:1197] OpKernel ('op: \"EncodeProto\" device_type: \"CPU\"') for unknown op: EncodeProto", "body": "System information\r\n***Have I written custom code (as opposed to using a stock example script provided in TensorFlow):\r\n   No\r\n***OS Platform and Distribution (e.g., Linux Ubuntu 16.04):\r\n   Linux Kernel 4.4.103, Linaro 5.4.0\r\n***TensorFlow installed from (source or binary):\r\n   Cross compilation in Ubuntu 16.04 and install the C++ library (libtensorflow.so + protobuf + nsync) in \r\n   the ARM development board\r\n***TensorFlow version (use command below):\r\n   1.10.1\r\n***Python version:\r\n  3.5\r\n***CUDA/cuDNN version:\r\n  Only CPU no GPU\r\n***Exact command to reproduce:\r\n  Session->Run(feed_dict, {\"num_detections:0\", \"detection_boxes:0\", \r\n              \"detection_scores:0\", \"detection_classes:0\"}, {}, &outputs)\r\n\r\nDescribe the problem\r\n   Trained Detection API mobileNetSSD model and saved as a 'pb' file.  Cross compiled the TensorFlow on the PC and installed the binary  (libtensorflow.so + protobuf + nsync) to the ARM board.  The code can be successfully built on the ARM side.  The pb file can be successfully read and loaded into a graph in a session.  However, when trying to run the session by feeding a tensor, the following error message came up:\r\n\r\n2018-09-20 18:28:38.852657: F tensorflow/core/framework/tensor.cc:657] Check failed: in_size != 0 (0 vs. 0)\r\n\r\nIt refers to Tensor::UnsafeCopyFromInternal function Line 3:  CHECK_NE(in_size, 0), and in_size =DataTypeSize(other.dtype()), which is unlikely to be zero.  \r\n\r\nBTW, these message also came up when loading the 'pb' file:\r\n2018-09-20 18:28:37.864057: E tensorflow/core/framework/op_kernel.cc:1197] OpKernel ('op: \"DecodeProtoV2\" device_type: \"CPU\"') for unknown op: DecodeProtoV2\r\n2018-09-20 18:28:37.865515: E tensorflow/core/framework/op_kernel.cc:1197] OpKernel ('op: \"EncodeProto\" device_type: \"CPU\"') for unknown op: EncodeProto"}