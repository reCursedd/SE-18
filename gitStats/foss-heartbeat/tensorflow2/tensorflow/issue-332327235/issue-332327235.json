{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20010", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20010/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20010/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20010/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20010", "id": 332327235, "node_id": "MDU6SXNzdWUzMzIzMjcyMzU=", "number": 20010, "title": "unclear doc: precision_at_k, recall_at_k in metric function (for estimator.add_metrics)", "user": {"login": "jysoo", "id": 4901676, "node_id": "MDQ6VXNlcjQ5MDE2NzY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4901676?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jysoo", "html_url": "https://github.com/jysoo", "followers_url": "https://api.github.com/users/jysoo/followers", "following_url": "https://api.github.com/users/jysoo/following{/other_user}", "gists_url": "https://api.github.com/users/jysoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jysoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jysoo/subscriptions", "organizations_url": "https://api.github.com/users/jysoo/orgs", "repos_url": "https://api.github.com/users/jysoo/repos", "events_url": "https://api.github.com/users/jysoo/events{/privacy}", "received_events_url": "https://api.github.com/users/jysoo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-14T09:42:49Z", "updated_at": "2018-06-14T16:52:43Z", "closed_at": "2018-06-14T16:52:43Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: MacOS Sierra</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>:  1.7</li>\n<li><strong>Python version</strong>: 3</li>\n<li><strong>GPU model and memory</strong>: GPU:0 (not using GPU)</li>\n<li><strong>Exact command to reproduce</strong>:<br>\ntf.metrics.precision_at_k(labels=labels, predictions=predictions, k=5)<br>\ntf.metrics.precision_at_k(labels=labels, predictions=predictions['logits'], k=5)</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>May I ask if it is possible to have clearer documentation on what is expected for the metric_fn for prebuilt metrics? (perhaps there is documentation that I have missed out, or perhaps I just did not understand them). For example, the link below demonstrates that auc can be calculated from predictions['logistic'] obtained from the estimator.<br>\n<a href=\"https://www.tensorflow.org/api_docs/python/tf/contrib/estimator/add_metrics\" rel=\"nofollow\">https://www.tensorflow.org/api_docs/python/tf/contrib/estimator/add_metrics</a><br>\n`  def my_auc(labels, predictions):<br>\nreturn {'auc': tf.metrics.auc(labels, predictions['logistic'])}</p>\n<p>estimator = tf.estimator.DNNClassifier(...)<br>\nestimator = tf.contrib.estimator.add_metrics(estimator, my_auc)`</p>\n<p>However, when I try to add precision_at_k and recall_at_k, I could not get the desired result.<br>\n<a href=\"https://github.com/tensorflow/tensorflow/blob/r1.8/tensorflow/python/ops/metrics_impl.py\">https://github.com/tensorflow/tensorflow/blob/r1.8/tensorflow/python/ops/metrics_impl.py</a><br>\n<code>predictions: Float </code>Tensor<code>with shape [D1, ... DN, num_classes] where N &gt;= 1. Commonly, N=1 and predictions has shape [batch size, num_classes]. The final dimension contains the logit values for each class. [D1, ... DN] must match</code>labels``</p>\n<p>I tried the following metric functions:<br>\nCase A.<br>\n<code>def precision_at_5(labels, predictions): labels = tf.to_int64(labels) return {'precision_at_5': tf.metrics.precision_at_k(labels=labels, predictions=predictions, k=5)} </code><br>\nCase B.<br>\n<code>def precision_at_5(labels, predictions): labels = tf.to_int64(labels) return {'precision_at_5': tf.metrics.precision_at_k(labels=labels, predictions=predictions['logits'], k=5)} #or predictions['probabilities'] </code></p>\n<h3>Source code / logs</h3>\n<p>The estimator that uses the metric function above is as follows<br>\n<code>estimator = tf.estimator.DNNLinearCombinedClassifier( model_dir=model_dir, linear_feature_columns=wide_columns, dnn_feature_columns=deep_columns, dnn_hidden_units=hidden_units, config=run_config) estimator = tf.contrib.estimator.add_metrics(estimator, precision_at_5) estimator = tf.contrib.estimator.add_metrics(estimator, recall_at_5) estimator = tf.contrib.estimator.add_metrics(estimator, average_precision_at_5) return estimator</code></p>\n<p>Errors for the 3 examples are as follows:<br>\nCase A.<br>\n<code>File \"wide_deep.py\", line 165, in precision_at_5 return {'precision_at_5': tf.metrics.precision_at_k(labels=labels, predictions=predictions, k=5)} File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/ops/metrics_impl.py\", line 3405, in precision_at_k _, top_k_idx = nn.top_k(predictions, k) File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/ops/nn_ops.py\", line 2354, in top_k return gen_nn_ops.top_kv2(input, k=k, sorted=sorted, name=name) File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/ops/gen_nn_ops.py\", line 7631, in top_kv2 \"TopKV2\", input=input, k=k, sorted=sorted, name=name) File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/framework/op_def_library.py\", line 513, in _apply_op_helper raise err File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/framework/op_def_library.py\", line 510, in _apply_op_helper preferred_dtype=default_dtype) File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/framework/ops.py\", line 1040, in internal_convert_to_tensor ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref) File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/framework/constant_op.py\", line 235, in _constant_tensor_conversion_function return constant(v, dtype=dtype, name=name) File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/framework/constant_op.py\", line 214, in constant value, dtype=dtype, shape=shape, verify_shape=verify_shape)) File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/framework/tensor_util.py\", line 522, in make_tensor_proto \"supported type.\" % (type(values), values)) TypeError: Failed to convert object of type &lt;class 'dict'&gt; to Tensor. Contents: {'logistic': &lt;tf.Tensor 'head/predictions/logistic:0' shape=(?, 1) dtype=float32&gt;, 'logits': &lt;tf.Tensor 'add:0' shape=(?, 1) dtype=float32&gt;, 'classes': &lt;tf.Tensor 'head/predictions/str_classes:0' shape=(?, 1) dtype=string&gt;, 'probabilities': &lt;tf.Tensor 'head/predictions/probabilities:0' shape=(?, 2) dtype=float32&gt;, 'class_ids': &lt;tf.Tensor 'head/predictions/ExpandDims:0' shape=(?, 1) dtype=int64&gt;}. Consider casting elements to a supported type.</code></p>\n<p>Case B.<br>\n<code>File \"wide_deep.py\", line 161, in precision_at_5 return {'precision_at_5': tf.metrics.precision_at_k(labels=labels, predictions=predictions['logits'], k=5)} File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/ops/metrics_impl.py\", line 3405, in precision_at_k _, top_k_idx = nn.top_k(predictions, k) File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/ops/nn_ops.py\", line 2354, in top_k return gen_nn_ops.top_kv2(input, k=k, sorted=sorted, name=name) File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/ops/gen_nn_ops.py\", line 7631, in top_kv2 \"TopKV2\", input=input, k=k, sorted=sorted, name=name) File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/framework/op_def_library.py\", line 787, in _apply_op_helper op_def=op_def) File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/framework/ops.py\", line 3292, in create_op compute_device=compute_device) File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/framework/ops.py\", line 3332, in _create_op_helper set_shapes_for_outputs(op) File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/framework/ops.py\", line 2496, in set_shapes_for_outputs return _set_shapes_for_outputs(op) File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/framework/ops.py\", line 2469, in _set_shapes_for_outputs shapes = shape_func(op) File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/framework/ops.py\", line 2399, in call_with_requiring return call_cpp_shape_fn(op, require_shape_fn=True) File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/framework/common_shapes.py\", line 627, in call_cpp_shape_fn require_shape_fn) File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/framework/common_shapes.py\", line 691, in _call_cpp_shape_fn_impl raise ValueError(err.message) ValueError: input must have last dimension &gt;= k = 5 but is 1 for 'precision_at_5/TopKV2' (op: 'TopKV2') with input shapes: [?,1], [] and with computed input tensors: input[1] = &lt;5&gt;.</code></p>\n<p>Thank you very much!</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): MacOS Sierra\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below):  1.7\nPython version: 3\nGPU model and memory: GPU:0 (not using GPU)\nExact command to reproduce:\ntf.metrics.precision_at_k(labels=labels, predictions=predictions, k=5)\ntf.metrics.precision_at_k(labels=labels, predictions=predictions['logits'], k=5)\n\nDescribe the problem\nMay I ask if it is possible to have clearer documentation on what is expected for the metric_fn for prebuilt metrics? (perhaps there is documentation that I have missed out, or perhaps I just did not understand them). For example, the link below demonstrates that auc can be calculated from predictions['logistic'] obtained from the estimator.\nhttps://www.tensorflow.org/api_docs/python/tf/contrib/estimator/add_metrics\n`  def my_auc(labels, predictions):\nreturn {'auc': tf.metrics.auc(labels, predictions['logistic'])}\nestimator = tf.estimator.DNNClassifier(...)\nestimator = tf.contrib.estimator.add_metrics(estimator, my_auc)`\nHowever, when I try to add precision_at_k and recall_at_k, I could not get the desired result.\nhttps://github.com/tensorflow/tensorflow/blob/r1.8/tensorflow/python/ops/metrics_impl.py\npredictions: Float Tensorwith shape [D1, ... DN, num_classes] where N >= 1. Commonly, N=1 and predictions has shape [batch size, num_classes]. The final dimension contains the logit values for each class. [D1, ... DN] must matchlabels``\nI tried the following metric functions:\nCase A.\ndef precision_at_5(labels, predictions): labels = tf.to_int64(labels) return {'precision_at_5': tf.metrics.precision_at_k(labels=labels, predictions=predictions, k=5)} \nCase B.\ndef precision_at_5(labels, predictions): labels = tf.to_int64(labels) return {'precision_at_5': tf.metrics.precision_at_k(labels=labels, predictions=predictions['logits'], k=5)} #or predictions['probabilities'] \nSource code / logs\nThe estimator that uses the metric function above is as follows\nestimator = tf.estimator.DNNLinearCombinedClassifier( model_dir=model_dir, linear_feature_columns=wide_columns, dnn_feature_columns=deep_columns, dnn_hidden_units=hidden_units, config=run_config) estimator = tf.contrib.estimator.add_metrics(estimator, precision_at_5) estimator = tf.contrib.estimator.add_metrics(estimator, recall_at_5) estimator = tf.contrib.estimator.add_metrics(estimator, average_precision_at_5) return estimator\nErrors for the 3 examples are as follows:\nCase A.\nFile \"wide_deep.py\", line 165, in precision_at_5 return {'precision_at_5': tf.metrics.precision_at_k(labels=labels, predictions=predictions, k=5)} File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/ops/metrics_impl.py\", line 3405, in precision_at_k _, top_k_idx = nn.top_k(predictions, k) File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/ops/nn_ops.py\", line 2354, in top_k return gen_nn_ops.top_kv2(input, k=k, sorted=sorted, name=name) File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/ops/gen_nn_ops.py\", line 7631, in top_kv2 \"TopKV2\", input=input, k=k, sorted=sorted, name=name) File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/framework/op_def_library.py\", line 513, in _apply_op_helper raise err File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/framework/op_def_library.py\", line 510, in _apply_op_helper preferred_dtype=default_dtype) File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/framework/ops.py\", line 1040, in internal_convert_to_tensor ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref) File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/framework/constant_op.py\", line 235, in _constant_tensor_conversion_function return constant(v, dtype=dtype, name=name) File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/framework/constant_op.py\", line 214, in constant value, dtype=dtype, shape=shape, verify_shape=verify_shape)) File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/framework/tensor_util.py\", line 522, in make_tensor_proto \"supported type.\" % (type(values), values)) TypeError: Failed to convert object of type <class 'dict'> to Tensor. Contents: {'logistic': <tf.Tensor 'head/predictions/logistic:0' shape=(?, 1) dtype=float32>, 'logits': <tf.Tensor 'add:0' shape=(?, 1) dtype=float32>, 'classes': <tf.Tensor 'head/predictions/str_classes:0' shape=(?, 1) dtype=string>, 'probabilities': <tf.Tensor 'head/predictions/probabilities:0' shape=(?, 2) dtype=float32>, 'class_ids': <tf.Tensor 'head/predictions/ExpandDims:0' shape=(?, 1) dtype=int64>}. Consider casting elements to a supported type.\nCase B.\nFile \"wide_deep.py\", line 161, in precision_at_5 return {'precision_at_5': tf.metrics.precision_at_k(labels=labels, predictions=predictions['logits'], k=5)} File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/ops/metrics_impl.py\", line 3405, in precision_at_k _, top_k_idx = nn.top_k(predictions, k) File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/ops/nn_ops.py\", line 2354, in top_k return gen_nn_ops.top_kv2(input, k=k, sorted=sorted, name=name) File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/ops/gen_nn_ops.py\", line 7631, in top_kv2 \"TopKV2\", input=input, k=k, sorted=sorted, name=name) File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/framework/op_def_library.py\", line 787, in _apply_op_helper op_def=op_def) File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/framework/ops.py\", line 3292, in create_op compute_device=compute_device) File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/framework/ops.py\", line 3332, in _create_op_helper set_shapes_for_outputs(op) File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/framework/ops.py\", line 2496, in set_shapes_for_outputs return _set_shapes_for_outputs(op) File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/framework/ops.py\", line 2469, in _set_shapes_for_outputs shapes = shape_func(op) File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/framework/ops.py\", line 2399, in call_with_requiring return call_cpp_shape_fn(op, require_shape_fn=True) File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/framework/common_shapes.py\", line 627, in call_cpp_shape_fn require_shape_fn) File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/framework/common_shapes.py\", line 691, in _call_cpp_shape_fn_impl raise ValueError(err.message) ValueError: input must have last dimension >= k = 5 but is 1 for 'precision_at_5/TopKV2' (op: 'TopKV2') with input shapes: [?,1], [] and with computed input tensors: input[1] = <5>.\nThank you very much!", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: MacOS Sierra\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**:  1.7\r\n- **Python version**: 3\r\n- **GPU model and memory**: GPU:0 (not using GPU)\r\n- **Exact command to reproduce**:\r\ntf.metrics.precision_at_k(labels=labels, predictions=predictions, k=5)\r\ntf.metrics.precision_at_k(labels=labels, predictions=predictions['logits'], k=5)\r\n\r\n### Describe the problem\r\nMay I ask if it is possible to have clearer documentation on what is expected for the metric_fn for prebuilt metrics? (perhaps there is documentation that I have missed out, or perhaps I just did not understand them). For example, the link below demonstrates that auc can be calculated from predictions['logistic'] obtained from the estimator.\r\nhttps://www.tensorflow.org/api_docs/python/tf/contrib/estimator/add_metrics\r\n`  def my_auc(labels, predictions):\r\n    return {'auc': tf.metrics.auc(labels, predictions['logistic'])}\r\n\r\n  estimator = tf.estimator.DNNClassifier(...)\r\n  estimator = tf.contrib.estimator.add_metrics(estimator, my_auc)`\r\n\r\nHowever, when I try to add precision_at_k and recall_at_k, I could not get the desired result.\r\nhttps://github.com/tensorflow/tensorflow/blob/r1.8/tensorflow/python/ops/metrics_impl.py\r\n`predictions: Float `Tensor` with shape [D1, ... DN, num_classes] where\r\n      N >= 1. Commonly, N=1 and predictions has shape [batch size, num_classes].\r\n      The final dimension contains the logit values for each class. [D1, ... DN]\r\n      must match `labels``\r\n\r\nI tried the following metric functions:\r\nCase A.\r\n`def precision_at_5(labels, predictions):\r\n      labels = tf.to_int64(labels)\r\n      return {'precision_at_5': tf.metrics.precision_at_k(labels=labels, predictions=predictions, k=5)}\r\n`\r\nCase B.\r\n`def precision_at_5(labels, predictions):\r\n      labels = tf.to_int64(labels)\r\n      return {'precision_at_5': tf.metrics.precision_at_k(labels=labels, predictions=predictions['logits'], k=5)} #or predictions['probabilities']\r\n`\r\n\r\n\r\n### Source code / logs\r\nThe estimator that uses the metric function above is as follows\r\n`estimator = tf.estimator.DNNLinearCombinedClassifier(\r\n        model_dir=model_dir,\r\n        linear_feature_columns=wide_columns,\r\n        dnn_feature_columns=deep_columns,\r\n        dnn_hidden_units=hidden_units,\r\n        config=run_config)\r\n    estimator = tf.contrib.estimator.add_metrics(estimator, precision_at_5)\r\n    estimator = tf.contrib.estimator.add_metrics(estimator, recall_at_5)\r\n    estimator = tf.contrib.estimator.add_metrics(estimator, average_precision_at_5)\r\n    return estimator`\r\n\r\nErrors for the 3 examples are as follows:\r\nCase A.\r\n`File \"wide_deep.py\", line 165, in precision_at_5\r\n    return {'precision_at_5': tf.metrics.precision_at_k(labels=labels, predictions=predictions, k=5)}\r\n  File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/ops/metrics_impl.py\", line 3405, in precision_at_k\r\n    _, top_k_idx = nn.top_k(predictions, k)\r\n  File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/ops/nn_ops.py\", line 2354, in top_k\r\n    return gen_nn_ops.top_kv2(input, k=k, sorted=sorted, name=name)\r\n  File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/ops/gen_nn_ops.py\", line 7631, in top_kv2\r\n    \"TopKV2\", input=input, k=k, sorted=sorted, name=name)\r\n  File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/framework/op_def_library.py\", line 513, in _apply_op_helper\r\n    raise err\r\n  File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/framework/op_def_library.py\", line 510, in _apply_op_helper\r\n    preferred_dtype=default_dtype)\r\n  File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/framework/ops.py\", line 1040, in internal_convert_to_tensor\r\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\r\n  File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/framework/constant_op.py\", line 235, in _constant_tensor_conversion_function\r\n    return constant(v, dtype=dtype, name=name)\r\n  File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/framework/constant_op.py\", line 214, in constant\r\n    value, dtype=dtype, shape=shape, verify_shape=verify_shape))\r\n  File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/framework/tensor_util.py\", line 522, in make_tensor_proto\r\n    \"supported type.\" % (type(values), values))\r\nTypeError: Failed to convert object of type <class 'dict'> to Tensor. Contents: {'logistic': <tf.Tensor 'head/predictions/logistic:0' shape=(?, 1) dtype=float32>, 'logits': <tf.Tensor 'add:0' shape=(?, 1) dtype=float32>, 'classes': <tf.Tensor 'head/predictions/str_classes:0' shape=(?, 1) dtype=string>, 'probabilities': <tf.Tensor 'head/predictions/probabilities:0' shape=(?, 2) dtype=float32>, 'class_ids': <tf.Tensor 'head/predictions/ExpandDims:0' shape=(?, 1) dtype=int64>}. Consider casting elements to a supported type.`\r\n\r\nCase B.\r\n`File \"wide_deep.py\", line 161, in precision_at_5\r\n    return {'precision_at_5': tf.metrics.precision_at_k(labels=labels, predictions=predictions['logits'], k=5)}\r\n  File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/ops/metrics_impl.py\", line 3405, in precision_at_k\r\n    _, top_k_idx = nn.top_k(predictions, k)\r\n  File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/ops/nn_ops.py\", line 2354, in top_k\r\n    return gen_nn_ops.top_kv2(input, k=k, sorted=sorted, name=name)\r\n  File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/ops/gen_nn_ops.py\", line 7631, in top_kv2\r\n    \"TopKV2\", input=input, k=k, sorted=sorted, name=name)\r\n  File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/framework/op_def_library.py\", line 787, in _apply_op_helper\r\n    op_def=op_def)\r\n  File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/framework/ops.py\", line 3292, in create_op\r\n    compute_device=compute_device)\r\n  File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/framework/ops.py\", line 3332, in _create_op_helper\r\n    set_shapes_for_outputs(op)\r\n  File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/framework/ops.py\", line 2496, in set_shapes_for_outputs\r\n    return _set_shapes_for_outputs(op)\r\n  File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/framework/ops.py\", line 2469, in _set_shapes_for_outputs\r\n    shapes = shape_func(op)\r\n  File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/framework/ops.py\", line 2399, in call_with_requiring\r\n    return call_cpp_shape_fn(op, require_shape_fn=True)\r\n  File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/framework/common_shapes.py\", line 627, in call_cpp_shape_fn\r\n    require_shape_fn)\r\n  File \"/Users/jinyunsoo/tensorflow/lib/python3.4/site-packages/tensorflow/python/framework/common_shapes.py\", line 691, in _call_cpp_shape_fn_impl\r\n    raise ValueError(err.message)\r\nValueError: input must have last dimension >= k = 5 but is 1 for 'precision_at_5/TopKV2' (op: 'TopKV2') with input shapes: [?,1], [] and with computed input tensors: input[1] = <5>.`\r\n\r\n\r\nThank you very much!"}