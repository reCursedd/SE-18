{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/180444315", "html_url": "https://github.com/tensorflow/tensorflow/issues/976#issuecomment-180444315", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/976", "id": 180444315, "node_id": "MDEyOklzc3VlQ29tbWVudDE4MDQ0NDMxNQ==", "user": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "created_at": "2016-02-05T17:08:53Z", "updated_at": "2016-02-05T17:08:53Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Aside from the bad naming, tf.FixedLenSequenceFeature is exactly what you want.  The \"FixedLen\" in your case is 13, but the first dimension of SequenceFeatures is considered unknown.  Store your data in SequenceExample proto (which is meant for data like speech), use parse_single_sequence_example, and pull out FixedLenSequenceFeature(float32, FEA_DIM),  and FixedLenSequenceFeature(int64, 1).  This will immediately return to you matrices of the shape [-1, FEA_DIM] and [-1, 1].</p>\n<p>Alternatively you can just use tf.reshape(x.values, [-1, FEA_DIM]) and tf.reshape(y.values, [-1, 1])  since you can access the values vectors directly from a SparseTensor via property values.  But this won't scale if you start having more complicated features (e.g. 2D per time step, variable-length per time step).</p>\n<p>The former solution</p>", "body_text": "Aside from the bad naming, tf.FixedLenSequenceFeature is exactly what you want.  The \"FixedLen\" in your case is 13, but the first dimension of SequenceFeatures is considered unknown.  Store your data in SequenceExample proto (which is meant for data like speech), use parse_single_sequence_example, and pull out FixedLenSequenceFeature(float32, FEA_DIM),  and FixedLenSequenceFeature(int64, 1).  This will immediately return to you matrices of the shape [-1, FEA_DIM] and [-1, 1].\nAlternatively you can just use tf.reshape(x.values, [-1, FEA_DIM]) and tf.reshape(y.values, [-1, 1])  since you can access the values vectors directly from a SparseTensor via property values.  But this won't scale if you start having more complicated features (e.g. 2D per time step, variable-length per time step).\nThe former solution", "body": "Aside from the bad naming, tf.FixedLenSequenceFeature is exactly what you want.  The \"FixedLen\" in your case is 13, but the first dimension of SequenceFeatures is considered unknown.  Store your data in SequenceExample proto (which is meant for data like speech), use parse_single_sequence_example, and pull out FixedLenSequenceFeature(float32, FEA_DIM),  and FixedLenSequenceFeature(int64, 1).  This will immediately return to you matrices of the shape [-1, FEA_DIM] and [-1, 1].\n\nAlternatively you can just use tf.reshape(x.values, [-1, FEA_DIM]) and tf.reshape(y.values, [-1, 1])  since you can access the values vectors directly from a SparseTensor via property values.  But this won't scale if you start having more complicated features (e.g. 2D per time step, variable-length per time step).\n\nThe former solution\n"}