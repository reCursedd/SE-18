{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6037", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6037/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6037/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6037/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/6037", "id": 193059027, "node_id": "MDU6SXNzdWUxOTMwNTkwMjc=", "number": 6037, "title": "Cannot get the values of tf.contrib.learn.DNNRegressor.predict() in boston.py", "user": {"login": "taochenshh", "id": 15166943, "node_id": "MDQ6VXNlcjE1MTY2OTQz", "avatar_url": "https://avatars3.githubusercontent.com/u/15166943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taochenshh", "html_url": "https://github.com/taochenshh", "followers_url": "https://api.github.com/users/taochenshh/followers", "following_url": "https://api.github.com/users/taochenshh/following{/other_user}", "gists_url": "https://api.github.com/users/taochenshh/gists{/gist_id}", "starred_url": "https://api.github.com/users/taochenshh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taochenshh/subscriptions", "organizations_url": "https://api.github.com/users/taochenshh/orgs", "repos_url": "https://api.github.com/users/taochenshh/repos", "events_url": "https://api.github.com/users/taochenshh/events{/privacy}", "received_events_url": "https://api.github.com/users/taochenshh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "sandersk", "id": 703865, "node_id": "MDQ6VXNlcjcwMzg2NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/703865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sandersk", "html_url": "https://github.com/sandersk", "followers_url": "https://api.github.com/users/sandersk/followers", "following_url": "https://api.github.com/users/sandersk/following{/other_user}", "gists_url": "https://api.github.com/users/sandersk/gists{/gist_id}", "starred_url": "https://api.github.com/users/sandersk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sandersk/subscriptions", "organizations_url": "https://api.github.com/users/sandersk/orgs", "repos_url": "https://api.github.com/users/sandersk/repos", "events_url": "https://api.github.com/users/sandersk/events{/privacy}", "received_events_url": "https://api.github.com/users/sandersk/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sandersk", "id": 703865, "node_id": "MDQ6VXNlcjcwMzg2NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/703865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sandersk", "html_url": "https://github.com/sandersk", "followers_url": "https://api.github.com/users/sandersk/followers", "following_url": "https://api.github.com/users/sandersk/following{/other_user}", "gists_url": "https://api.github.com/users/sandersk/gists{/gist_id}", "starred_url": "https://api.github.com/users/sandersk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sandersk/subscriptions", "organizations_url": "https://api.github.com/users/sandersk/orgs", "repos_url": "https://api.github.com/users/sandersk/repos", "events_url": "https://api.github.com/users/sandersk/events{/privacy}", "received_events_url": "https://api.github.com/users/sandersk/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2016-12-02T08:21:56Z", "updated_at": "2017-01-18T21:11:57Z", "closed_at": "2016-12-07T13:30:26Z", "author_association": "NONE", "body_html": "<p>I am following the tutorials on the tensorflow's official website. And when I executed boston.py, I cannot get the prediction values. But when I executed iris.py, I can get the prediction values. The only difference I found between these two files is that boston.py uses DNNRegressor, but iris.py uses DNNClassifier. I am using <strong>0.12 tensorflow, ubuntu 16.04, CUDA 8.0, cuDNN 5.1.5</strong>, my gpu is <strong>TITAN X (Pascal)</strong>.<br>\nHere is the ending output of boston.py:</p>\n<div class=\"highlight highlight-source-shell\"><pre>INFO:tensorflow:Summary name dnn/hiddenlayer_0:fraction_of_zero_values is illegal<span class=\"pl-k\">;</span> using dnn/hiddenlayer_0_fraction_of_zero_values instead.\nINFO:tensorflow:Summary name dnn/hiddenlayer_0:activation is illegal<span class=\"pl-k\">;</span> using dnn/hiddenlayer_0_activation instead.\nINFO:tensorflow:Summary name dnn/hiddenlayer_1:fraction_of_zero_values is illegal<span class=\"pl-k\">;</span> using dnn/hiddenlayer_1_fraction_of_zero_values instead.\nINFO:tensorflow:Summary name dnn/hiddenlayer_1:activation is illegal<span class=\"pl-k\">;</span> using dnn/hiddenlayer_1_activation instead.\nINFO:tensorflow:Summary name logits:fraction_of_zero_values is illegal<span class=\"pl-k\">;</span> using logits_fraction_of_zero_values instead.\nINFO:tensorflow:Summary name logits:activation is illegal<span class=\"pl-k\">;</span> using logits_activation instead.\nPredictions: <span class=\"pl-k\">&lt;</span>generator object _as_iterable at 0x7ff9f406db<span class=\"pl-k\">90&gt;</span></pre></div>", "body_text": "I am following the tutorials on the tensorflow's official website. And when I executed boston.py, I cannot get the prediction values. But when I executed iris.py, I can get the prediction values. The only difference I found between these two files is that boston.py uses DNNRegressor, but iris.py uses DNNClassifier. I am using 0.12 tensorflow, ubuntu 16.04, CUDA 8.0, cuDNN 5.1.5, my gpu is TITAN X (Pascal).\nHere is the ending output of boston.py:\nINFO:tensorflow:Summary name dnn/hiddenlayer_0:fraction_of_zero_values is illegal; using dnn/hiddenlayer_0_fraction_of_zero_values instead.\nINFO:tensorflow:Summary name dnn/hiddenlayer_0:activation is illegal; using dnn/hiddenlayer_0_activation instead.\nINFO:tensorflow:Summary name dnn/hiddenlayer_1:fraction_of_zero_values is illegal; using dnn/hiddenlayer_1_fraction_of_zero_values instead.\nINFO:tensorflow:Summary name dnn/hiddenlayer_1:activation is illegal; using dnn/hiddenlayer_1_activation instead.\nINFO:tensorflow:Summary name logits:fraction_of_zero_values is illegal; using logits_fraction_of_zero_values instead.\nINFO:tensorflow:Summary name logits:activation is illegal; using logits_activation instead.\nPredictions: <generator object _as_iterable at 0x7ff9f406db90>", "body": "I am following the tutorials on the tensorflow's official website. And when I executed boston.py, I cannot get the prediction values. But when I executed iris.py, I can get the prediction values. The only difference I found between these two files is that boston.py uses DNNRegressor, but iris.py uses DNNClassifier. I am using **0.12 tensorflow, ubuntu 16.04, CUDA 8.0, cuDNN 5.1.5**, my gpu is **TITAN X (Pascal)**.\r\nHere is the ending output of boston.py:\r\n```bash\r\nINFO:tensorflow:Summary name dnn/hiddenlayer_0:fraction_of_zero_values is illegal; using dnn/hiddenlayer_0_fraction_of_zero_values instead.\r\nINFO:tensorflow:Summary name dnn/hiddenlayer_0:activation is illegal; using dnn/hiddenlayer_0_activation instead.\r\nINFO:tensorflow:Summary name dnn/hiddenlayer_1:fraction_of_zero_values is illegal; using dnn/hiddenlayer_1_fraction_of_zero_values instead.\r\nINFO:tensorflow:Summary name dnn/hiddenlayer_1:activation is illegal; using dnn/hiddenlayer_1_activation instead.\r\nINFO:tensorflow:Summary name logits:fraction_of_zero_values is illegal; using logits_fraction_of_zero_values instead.\r\nINFO:tensorflow:Summary name logits:activation is illegal; using logits_activation instead.\r\nPredictions: <generator object _as_iterable at 0x7ff9f406db90>\r\n```\r\n"}