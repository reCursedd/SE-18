{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13860", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13860/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13860/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13860/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/13860", "id": 267257426, "node_id": "MDU6SXNzdWUyNjcyNTc0MjY=", "number": 13860, "title": "cudnnGRU is_training placeholder", "user": {"login": "ilkarman", "id": 20063954, "node_id": "MDQ6VXNlcjIwMDYzOTU0", "avatar_url": "https://avatars2.githubusercontent.com/u/20063954?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilkarman", "html_url": "https://github.com/ilkarman", "followers_url": "https://api.github.com/users/ilkarman/followers", "following_url": "https://api.github.com/users/ilkarman/following{/other_user}", "gists_url": "https://api.github.com/users/ilkarman/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilkarman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilkarman/subscriptions", "organizations_url": "https://api.github.com/users/ilkarman/orgs", "repos_url": "https://api.github.com/users/ilkarman/repos", "events_url": "https://api.github.com/users/ilkarman/events{/privacy}", "received_events_url": "https://api.github.com/users/ilkarman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-20T18:02:46Z", "updated_at": "2017-10-20T19:38:07Z", "closed_at": "2017-10-20T19:38:07Z", "author_association": "NONE", "body_html": "<p>When creating a model with batch normalisation I can supply a place-holder for the is_training param like so:</p>\n<pre><code>training = tf.placeholder(tf.bool)  \nsym = create_symbol(training)\n# ....\n# Training: sess.run(model, feed_dict={X: data, y: label, training: True})\n# Inference: sess.run(pred, feed_dict={X: data, training: False})\n</code></pre>\n<p>However when I do this for a symbol that contains cudnnGRU (or cudnnLSTM), it doesn't like the place-holder:</p>\n<pre><code>cudnn_cell = tf.contrib.cudnn_rnn.CudnnGRU(num_layers=1, \n                                           num_units=NUMHIDDEN, \n                                           input_size=EMBEDSIZE)    # Set params\nparams_size_t = cudnn_cell.params_size()\nparams = tf.Variable(tf.random_uniform([params_size_t]), validate_shape=False)   \ninput_h = tf.Variable(tf.zeros([1, BATCHSIZE, NUMHIDDEN]))\noutputs, states = cudnn_cell(is_training=training ,\n                             input_data=word_list,\n                             input_h=input_h,\n                             params=params)\n</code></pre>\n<p>Error message:</p>\n<blockquote>\n</blockquote>\n<p>TypeError: Expected bool for argument 'is_training' not &lt;tf.Tensor 'Placeholder_2:0' shape= dtype=bool&gt;.</p>", "body_text": "When creating a model with batch normalisation I can supply a place-holder for the is_training param like so:\ntraining = tf.placeholder(tf.bool)  \nsym = create_symbol(training)\n# ....\n# Training: sess.run(model, feed_dict={X: data, y: label, training: True})\n# Inference: sess.run(pred, feed_dict={X: data, training: False})\n\nHowever when I do this for a symbol that contains cudnnGRU (or cudnnLSTM), it doesn't like the place-holder:\ncudnn_cell = tf.contrib.cudnn_rnn.CudnnGRU(num_layers=1, \n                                           num_units=NUMHIDDEN, \n                                           input_size=EMBEDSIZE)    # Set params\nparams_size_t = cudnn_cell.params_size()\nparams = tf.Variable(tf.random_uniform([params_size_t]), validate_shape=False)   \ninput_h = tf.Variable(tf.zeros([1, BATCHSIZE, NUMHIDDEN]))\noutputs, states = cudnn_cell(is_training=training ,\n                             input_data=word_list,\n                             input_h=input_h,\n                             params=params)\n\nError message:\n\n\nTypeError: Expected bool for argument 'is_training' not <tf.Tensor 'Placeholder_2:0' shape= dtype=bool>.", "body": "When creating a model with batch normalisation I can supply a place-holder for the is_training param like so:\r\n\r\n```\r\ntraining = tf.placeholder(tf.bool)  \r\nsym = create_symbol(training)\r\n# ....\r\n# Training: sess.run(model, feed_dict={X: data, y: label, training: True})\r\n# Inference: sess.run(pred, feed_dict={X: data, training: False})\r\n```\r\n\r\nHowever when I do this for a symbol that contains cudnnGRU (or cudnnLSTM), it doesn't like the place-holder:\r\n\r\n```\r\ncudnn_cell = tf.contrib.cudnn_rnn.CudnnGRU(num_layers=1, \r\n                                           num_units=NUMHIDDEN, \r\n                                           input_size=EMBEDSIZE)    # Set params\r\nparams_size_t = cudnn_cell.params_size()\r\nparams = tf.Variable(tf.random_uniform([params_size_t]), validate_shape=False)   \r\ninput_h = tf.Variable(tf.zeros([1, BATCHSIZE, NUMHIDDEN]))\r\noutputs, states = cudnn_cell(is_training=training ,\r\n                             input_data=word_list,\r\n                             input_h=input_h,\r\n                             params=params)\r\n```\r\n\r\nError message:\r\n\r\n> \r\nTypeError: Expected bool for argument 'is_training' not <tf.Tensor 'Placeholder_2:0' shape=<unknown> dtype=bool>."}