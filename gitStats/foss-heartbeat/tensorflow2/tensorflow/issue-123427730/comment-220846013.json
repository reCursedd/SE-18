{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/220846013", "html_url": "https://github.com/tensorflow/tensorflow/issues/586#issuecomment-220846013", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/586", "id": 220846013, "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDg0NjAxMw==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2016-05-22T17:51:53Z", "updated_at": "2016-05-22T17:51:53Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Tensors in TensorFlow can have dynamic shapes. <code>TensorShape</code> is used throughout the Python API to represent shapes that might have one or more unknown dimensions, or even an unknown rank; and to combine such shapes easily.</p>\n<p>So, yes, I'd be opposed to having two slightly incompatible properties/methods on <code>Tensor</code> that convey the same information, but cannot be used the same way. If we add <code>Tensor.shape</code>, it should return <code>TensorShape</code>, and we should deprecate <code>Tensor.get_shape()</code> at the same time.</p>\n<p>Which tensor initialization function doesn't support <code>TensorShape</code> objects as the <code>shape</code> argument? We should fix that.</p>", "body_text": "Tensors in TensorFlow can have dynamic shapes. TensorShape is used throughout the Python API to represent shapes that might have one or more unknown dimensions, or even an unknown rank; and to combine such shapes easily.\nSo, yes, I'd be opposed to having two slightly incompatible properties/methods on Tensor that convey the same information, but cannot be used the same way. If we add Tensor.shape, it should return TensorShape, and we should deprecate Tensor.get_shape() at the same time.\nWhich tensor initialization function doesn't support TensorShape objects as the shape argument? We should fix that.", "body": "Tensors in TensorFlow can have dynamic shapes. `TensorShape` is used throughout the Python API to represent shapes that might have one or more unknown dimensions, or even an unknown rank; and to combine such shapes easily.\n\nSo, yes, I'd be opposed to having two slightly incompatible properties/methods on `Tensor` that convey the same information, but cannot be used the same way. If we add `Tensor.shape`, it should return `TensorShape`, and we should deprecate `Tensor.get_shape()` at the same time.\n\nWhich tensor initialization function doesn't support `TensorShape` objects as the `shape` argument? We should fix that.\n"}