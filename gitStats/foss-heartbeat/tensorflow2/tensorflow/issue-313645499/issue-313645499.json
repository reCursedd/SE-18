{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18454", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18454/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18454/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18454/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18454", "id": 313645499, "node_id": "MDU6SXNzdWUzMTM2NDU0OTk=", "number": 18454, "title": "Wrong behavior of tf.nn.conv2d when dilated rate>1 on CPU version of tensorflow.", "user": {"login": "Mooonside", "id": 20972647, "node_id": "MDQ6VXNlcjIwOTcyNjQ3", "avatar_url": "https://avatars1.githubusercontent.com/u/20972647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mooonside", "html_url": "https://github.com/Mooonside", "followers_url": "https://api.github.com/users/Mooonside/followers", "following_url": "https://api.github.com/users/Mooonside/following{/other_user}", "gists_url": "https://api.github.com/users/Mooonside/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mooonside/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mooonside/subscriptions", "organizations_url": "https://api.github.com/users/Mooonside/orgs", "repos_url": "https://api.github.com/users/Mooonside/repos", "events_url": "https://api.github.com/users/Mooonside/events{/privacy}", "received_events_url": "https://api.github.com/users/Mooonside/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-04-12T09:26:21Z", "updated_at": "2018-11-22T18:55:43Z", "closed_at": null, "author_association": "NONE", "body_html": "<h1>Required Info</h1>\n<ul>\n<li><strong>OS Platform and Distribution</strong>:Linux Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from</strong>:binary</li>\n<li><strong>Tensorflow Version</strong>:1.6.0</li>\n<li><strong>Python Version</strong>:3.6.3</li>\n<li><strong>Have I written custom code</strong>:Yes</li>\n<li><strong>Bazel version</strong>:N/A</li>\n<li><strong>CUDA/cuDNN version</strong> : N/A</li>\n<li><strong>GPU model and memory</strong>: N/A</li>\n<li><strong>Exact command to reproduce</strong>: See Below</li>\n</ul>\n<h1>Problem description:</h1>\n<p>When constucting the graph, i use tf.nn.conv2d with diated_rate &gt; 1 and padding='VALID', the wrapper returns a correct shape. However when i feed an input in, and use sess.run to get the output, it turns out that tf.nn.ops is not using diliated conv at all. Then i run the exact commands on a machine with tensorflow_gpu, the gpu_versions output is correct. So i believe that i should be a bug.</p>\n<h1>Exact Commands:</h1>\n<pre><code>import tensorflow as tf\nimport numpy as np\ninputs = tf.get_variable(shape=[1, 7, 7, 1], dtype=tf.float32, name='inputs')\nfilters = tf.get_variable(shape=[3, 3, 1, 1], dtype=tf.float32, name='filters', initializer=tf.constant_initializer(\n    [\n        [1, 1, 1],\n        [1, 1, 1],\n        [1, 1, 1]\n    ]\n))\nconv = tf.nn.conv2d(input=inputs,\n                    filter=filters,\n                    strides=[1] + [1, 1] + [1],\n                    padding='VALID',\n                    use_cudnn_on_gpu=False,\n                    data_format=\"NHWC\",\n                    dilations=[1] + [2, 2] + [1],\n                    name='conv')\nprint(conv)\n\ninputs_v = np.zeros([1,7,7,1])\ninputs_v[:,0,:,:] = np.reshape([1,2,3,4,5,6,7], newshape=[1,7,1])\nsess = tf.Session()\nsess.run(tf.global_variables_initializer())\n\nconv_v = sess.run(conv, feed_dict={inputs:inputs_v})\nprint(conv_v) \n</code></pre>", "body_text": "Required Info\n\nOS Platform and Distribution:Linux Ubuntu 16.04\nTensorFlow installed from:binary\nTensorflow Version:1.6.0\nPython Version:3.6.3\nHave I written custom code:Yes\nBazel version:N/A\nCUDA/cuDNN version : N/A\nGPU model and memory: N/A\nExact command to reproduce: See Below\n\nProblem description:\nWhen constucting the graph, i use tf.nn.conv2d with diated_rate > 1 and padding='VALID', the wrapper returns a correct shape. However when i feed an input in, and use sess.run to get the output, it turns out that tf.nn.ops is not using diliated conv at all. Then i run the exact commands on a machine with tensorflow_gpu, the gpu_versions output is correct. So i believe that i should be a bug.\nExact Commands:\nimport tensorflow as tf\nimport numpy as np\ninputs = tf.get_variable(shape=[1, 7, 7, 1], dtype=tf.float32, name='inputs')\nfilters = tf.get_variable(shape=[3, 3, 1, 1], dtype=tf.float32, name='filters', initializer=tf.constant_initializer(\n    [\n        [1, 1, 1],\n        [1, 1, 1],\n        [1, 1, 1]\n    ]\n))\nconv = tf.nn.conv2d(input=inputs,\n                    filter=filters,\n                    strides=[1] + [1, 1] + [1],\n                    padding='VALID',\n                    use_cudnn_on_gpu=False,\n                    data_format=\"NHWC\",\n                    dilations=[1] + [2, 2] + [1],\n                    name='conv')\nprint(conv)\n\ninputs_v = np.zeros([1,7,7,1])\ninputs_v[:,0,:,:] = np.reshape([1,2,3,4,5,6,7], newshape=[1,7,1])\nsess = tf.Session()\nsess.run(tf.global_variables_initializer())\n\nconv_v = sess.run(conv, feed_dict={inputs:inputs_v})\nprint(conv_v)", "body": "# Required Info\r\n- **OS Platform and Distribution**:Linux Ubuntu 16.04\r\n- **TensorFlow installed from**:binary\r\n- **Tensorflow Version**:1.6.0\r\n- **Python Version**:3.6.3\r\n- **Have I written custom code**:Yes\r\n- **Bazel version**:N/A\r\n- **CUDA/cuDNN version** : N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: See Below\r\n\r\n# Problem description:\r\nWhen constucting the graph, i use tf.nn.conv2d with diated_rate > 1 and padding='VALID', the wrapper returns a correct shape. However when i feed an input in, and use sess.run to get the output, it turns out that tf.nn.ops is not using diliated conv at all. Then i run the exact commands on a machine with tensorflow_gpu, the gpu_versions output is correct. So i believe that i should be a bug.\r\n\r\n# Exact Commands:\r\n```\r\nimport tensorflow as tf\r\nimport numpy as np\r\ninputs = tf.get_variable(shape=[1, 7, 7, 1], dtype=tf.float32, name='inputs')\r\nfilters = tf.get_variable(shape=[3, 3, 1, 1], dtype=tf.float32, name='filters', initializer=tf.constant_initializer(\r\n    [\r\n        [1, 1, 1],\r\n        [1, 1, 1],\r\n        [1, 1, 1]\r\n    ]\r\n))\r\nconv = tf.nn.conv2d(input=inputs,\r\n                    filter=filters,\r\n                    strides=[1] + [1, 1] + [1],\r\n                    padding='VALID',\r\n                    use_cudnn_on_gpu=False,\r\n                    data_format=\"NHWC\",\r\n                    dilations=[1] + [2, 2] + [1],\r\n                    name='conv')\r\nprint(conv)\r\n\r\ninputs_v = np.zeros([1,7,7,1])\r\ninputs_v[:,0,:,:] = np.reshape([1,2,3,4,5,6,7], newshape=[1,7,1])\r\nsess = tf.Session()\r\nsess.run(tf.global_variables_initializer())\r\n\r\nconv_v = sess.run(conv, feed_dict={inputs:inputs_v})\r\nprint(conv_v) \r\n```\r\n"}