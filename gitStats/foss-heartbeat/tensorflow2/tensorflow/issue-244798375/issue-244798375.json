{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11676", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11676/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11676/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11676/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/11676", "id": 244798375, "node_id": "MDU6SXNzdWUyNDQ3OTgzNzU=", "number": 11676, "title": "Error in tf.contrib.layers.batch_norm when explicitly assigned on gpu", "user": {"login": "Kipok", "id": 2354422, "node_id": "MDQ6VXNlcjIzNTQ0MjI=", "avatar_url": "https://avatars0.githubusercontent.com/u/2354422?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kipok", "html_url": "https://github.com/Kipok", "followers_url": "https://api.github.com/users/Kipok/followers", "following_url": "https://api.github.com/users/Kipok/following{/other_user}", "gists_url": "https://api.github.com/users/Kipok/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kipok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kipok/subscriptions", "organizations_url": "https://api.github.com/users/Kipok/orgs", "repos_url": "https://api.github.com/users/Kipok/repos", "events_url": "https://api.github.com/users/Kipok/events{/privacy}", "received_events_url": "https://api.github.com/users/Kipok/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-07-21T22:31:12Z", "updated_at": "2017-08-29T17:47:24Z", "closed_at": "2017-08-29T17:47:24Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:  Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Ubuntu 14.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: source</li>\n<li><strong>TensorFlow version (use command below)</strong>:  1.2.1</li>\n<li><strong>Python version</strong>:  3.4.3</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.5.2</li>\n<li><strong>CUDA/cuDNN version</strong>:  8.0/6.0</li>\n<li><strong>GPU model and memory</strong>: Tesla P100 (16 gb)</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>Batch norm layer fails with an error when explicitly assigned to be run on gpu and zero_debias_moving_mean is False. Interesting that I'm getting this error only when is_training is a placeholder (passing just True doesn't reproduce the error). If commented line is used instead (zero_debias_moving_mean=True) the code also works without any error.</p>\n<h3>Source code / logs</h3>\n<p>The following code could be used to reproduce the issue:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\nis_training <span class=\"pl-k\">=</span> tf.placeholder(tf.bool, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>is_training<span class=\"pl-pds\">'</span></span>)\na <span class=\"pl-k\">=</span> tf.placeholder(tf.float32, <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">10</span>))\n<span class=\"pl-k\">with</span> tf.device(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>/gpu:0<span class=\"pl-pds\">'</span></span>):\n    b <span class=\"pl-k\">=</span> tf.contrib.layers.batch_norm(a, <span class=\"pl-v\">is_training</span><span class=\"pl-k\">=</span>is_training)\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>     b = tf.contrib.layers.batch_norm(a, is_training=is_training, zero_debias_moving_mean=True)</span>\nsess <span class=\"pl-k\">=</span> tf.Session()\nsess.run(tf.global_variables_initializer())</pre></div>\n<p>The error log:</p>\n<pre><code>---------------------------------------------------------------------------\nInvalidArgumentError                      Traceback (most recent call last)\n~/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/client/session.py in _do_call(self, fn, *args)\n   1284     try:\n-&gt; 1285       return fn(*args)\n   1286     except errors.OpError as e:\n\n~/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/client/session.py in _run_fn(session, feed_dict, fetch_list, target_list, options, run_metadata)\n   1254       # Ensure any changes to the graph are reflected in the runtime.\n-&gt; 1255       self._extend_graph()\n   1256       with errors.raise_exception_on_not_ok_status() as status:\n\n~/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/client/session.py in _extend_graph(self)\n   1315           tf_session.TF_ExtendGraph(\n-&gt; 1316               self._session, graph_def.SerializeToString(), status)\n   1317         self._opened = True\n\n/usr/lib/python3.4/contextlib.py in __exit__(self, type, value, traceback)\n     65             try:\n---&gt; 66                 next(self.gen)\n     67             except StopIteration:\n\n~/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/framework/errors_impl.py in raise_exception_on_not_ok_status()\n    465           compat.as_text(pywrap_tensorflow.TF_Message(status)),\n--&gt; 466           pywrap_tensorflow.TF_GetCode(status))\n    467   finally:\n\nInvalidArgumentError: Cannot assign a device for operation 'BatchNorm/Reshape_2': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.\n\t [[Node: BatchNorm/Reshape_2 = Reshape[T=DT_BOOL, Tshape=DT_INT32, _device=\"/device:GPU:0\"](is_training, BatchNorm/Reshape_2/shape)]]\n\nDuring handling of the above exception, another exception occurred:\n\nInvalidArgumentError                      Traceback (most recent call last)\n&lt;ipython-input-1-285b7d56d919&gt; in &lt;module&gt;()\n      8 #     b = tf.contrib.layers.batch_norm(a, is_training=is_training, zero_debias_moving_mean=True)\n      9 sess = tf.Session()\n---&gt; 10 sess.run(tf.global_variables_initializer())\n\n~/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/client/session.py in run(self, fetches, feed_dict, options, run_metadata)\n    894     try:\n    895       result = self._run(None, fetches, feed_dict, options_ptr,\n--&gt; 896                          run_metadata_ptr)\n    897       if run_metadata:\n    898         proto_data = tf_session.TF_GetBuffer(run_metadata_ptr)\n\n~/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/client/session.py in _run(self, handle, fetches, feed_dict, options, run_metadata)\n   1122     if final_fetches or final_targets or (handle and feed_dict_tensor):\n   1123       results = self._do_run(handle, final_targets, final_fetches,\n-&gt; 1124                              feed_dict_tensor, options, run_metadata)\n   1125     else:\n   1126       results = []\n\n~/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/client/session.py in _do_run(self, handle, target_list, fetch_list, feed_dict, options, run_metadata)\n   1277     if handle is None:\n   1278       return self._do_call(_run_fn, self._session, feeds, fetches, targets,\n-&gt; 1279                            options, run_metadata)\n   1280     else:\n   1281       return self._do_call(_prun_fn, self._session, handle, feeds, fetches)\n\n~/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/client/session.py in _do_call(self, fn, *args)\n   1296         except KeyError:\n   1297           pass\n-&gt; 1298       raise type(e)(node_def, op, message)\n   1299 \n   1300   def _extend_graph(self):\n\nInvalidArgumentError: Cannot assign a device for operation 'BatchNorm/Reshape_2': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.\n\t [[Node: BatchNorm/Reshape_2 = Reshape[T=DT_BOOL, Tshape=DT_INT32, _device=\"/device:GPU:0\"](is_training, BatchNorm/Reshape_2/shape)]]\n\nCaused by op 'BatchNorm/Reshape_2', defined at:\n  File \"/usr/lib/python3.4/runpy.py\", line 170, in _run_module_as_main\n    \"__main__\", mod_spec)\n  File \"/usr/lib/python3.4/runpy.py\", line 85, in _run_code\n    exec(code, run_globals)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/ipykernel_launcher.py\", line 16, in &lt;module&gt;\n    app.launch_new_instance()\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/traitlets/config/application.py\", line 658, in launch_instance\n    app.start()\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/ipykernel/kernelapp.py\", line 477, in start\n    ioloop.IOLoop.instance().start()\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/zmq/eventloop/ioloop.py\", line 177, in start\n    super(ZMQIOLoop, self).start()\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tornado/ioloop.py\", line 888, in start\n    handler_func(fd_obj, events)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tornado/stack_context.py\", line 277, in null_wrapper\n    return fn(*args, **kwargs)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/zmq/eventloop/zmqstream.py\", line 440, in _handle_events\n    self._handle_recv()\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/zmq/eventloop/zmqstream.py\", line 472, in _handle_recv\n    self._run_callback(callback, msg)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/zmq/eventloop/zmqstream.py\", line 414, in _run_callback\n    callback(*args, **kwargs)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tornado/stack_context.py\", line 277, in null_wrapper\n    return fn(*args, **kwargs)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/ipykernel/kernelbase.py\", line 283, in dispatcher\n    return self.dispatch_shell(stream, msg)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/ipykernel/kernelbase.py\", line 235, in dispatch_shell\n    handler(stream, idents, msg)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/ipykernel/kernelbase.py\", line 399, in execute_request\n    user_expressions, allow_stdin)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/ipykernel/ipkernel.py\", line 196, in do_execute\n    res = shell.run_cell(code, store_history=store_history, silent=silent)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/ipykernel/zmqshell.py\", line 533, in run_cell\n    return super(ZMQInteractiveShell, self).run_cell(*args, **kwargs)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/IPython/core/interactiveshell.py\", line 2698, in run_cell\n    interactivity=interactivity, compiler=compiler, result=result)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/IPython/core/interactiveshell.py\", line 2802, in run_ast_nodes\n    if self.run_code(code, result):\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/IPython/core/interactiveshell.py\", line 2862, in run_code\n    exec(code_obj, self.user_global_ns, self.user_ns)\n  File \"&lt;ipython-input-1-285b7d56d919&gt;\", line 7, in &lt;module&gt;\n    b = tf.contrib.layers.batch_norm(a, is_training=is_training)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/contrib/framework/python/ops/arg_scope.py\", line 181, in func_with_args\n    return func(*args, **current_args)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/contrib/layers/python/layers/layers.py\", line 634, in batch_norm\n    outputs = layer.apply(inputs, training=is_training)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/layers/base.py\", line 492, in apply\n    return self.__call__(inputs, *args, **kwargs)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/layers/base.py\", line 441, in __call__\n    outputs = self.call(inputs, *args, **kwargs)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/layers/normalization.py\", line 395, in call\n    decay = _smart_select(training, lambda: self.momentum, lambda: 1.)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/layers/normalization.py\", line 568, in _smart_select\n    pred = array_ops.reshape(pred, [1])\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/ops/gen_array_ops.py\", line 2502, in reshape\n    name=name)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/framework/op_def_library.py\", line 767, in apply_op\n    op_def=op_def)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/framework/ops.py\", line 2576, in create_op\n    original_op=self._default_original_op, op_def=op_def)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/framework/ops.py\", line 1204, in __init__\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\n\nInvalidArgumentError (see above for traceback): Cannot assign a device for operation 'BatchNorm/Reshape_2': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.\n\t [[Node: BatchNorm/Reshape_2 = Reshape[T=DT_BOOL, Tshape=DT_INT32, _device=\"/device:GPU:0\"](is_training, BatchNorm/Reshape_2/shape)]]\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):  Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 14.04\nTensorFlow installed from (source or binary): source\nTensorFlow version (use command below):  1.2.1\nPython version:  3.4.3\nBazel version (if compiling from source): 0.5.2\nCUDA/cuDNN version:  8.0/6.0\nGPU model and memory: Tesla P100 (16 gb)\n\nDescribe the problem\nBatch norm layer fails with an error when explicitly assigned to be run on gpu and zero_debias_moving_mean is False. Interesting that I'm getting this error only when is_training is a placeholder (passing just True doesn't reproduce the error). If commented line is used instead (zero_debias_moving_mean=True) the code also works without any error.\nSource code / logs\nThe following code could be used to reproduce the issue:\nimport tensorflow as tf\nis_training = tf.placeholder(tf.bool, name='is_training')\na = tf.placeholder(tf.float32, shape=(10, 10, 10, 10))\nwith tf.device('/gpu:0'):\n    b = tf.contrib.layers.batch_norm(a, is_training=is_training)\n#     b = tf.contrib.layers.batch_norm(a, is_training=is_training, zero_debias_moving_mean=True)\nsess = tf.Session()\nsess.run(tf.global_variables_initializer())\nThe error log:\n---------------------------------------------------------------------------\nInvalidArgumentError                      Traceback (most recent call last)\n~/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/client/session.py in _do_call(self, fn, *args)\n   1284     try:\n-> 1285       return fn(*args)\n   1286     except errors.OpError as e:\n\n~/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/client/session.py in _run_fn(session, feed_dict, fetch_list, target_list, options, run_metadata)\n   1254       # Ensure any changes to the graph are reflected in the runtime.\n-> 1255       self._extend_graph()\n   1256       with errors.raise_exception_on_not_ok_status() as status:\n\n~/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/client/session.py in _extend_graph(self)\n   1315           tf_session.TF_ExtendGraph(\n-> 1316               self._session, graph_def.SerializeToString(), status)\n   1317         self._opened = True\n\n/usr/lib/python3.4/contextlib.py in __exit__(self, type, value, traceback)\n     65             try:\n---> 66                 next(self.gen)\n     67             except StopIteration:\n\n~/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/framework/errors_impl.py in raise_exception_on_not_ok_status()\n    465           compat.as_text(pywrap_tensorflow.TF_Message(status)),\n--> 466           pywrap_tensorflow.TF_GetCode(status))\n    467   finally:\n\nInvalidArgumentError: Cannot assign a device for operation 'BatchNorm/Reshape_2': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.\n\t [[Node: BatchNorm/Reshape_2 = Reshape[T=DT_BOOL, Tshape=DT_INT32, _device=\"/device:GPU:0\"](is_training, BatchNorm/Reshape_2/shape)]]\n\nDuring handling of the above exception, another exception occurred:\n\nInvalidArgumentError                      Traceback (most recent call last)\n<ipython-input-1-285b7d56d919> in <module>()\n      8 #     b = tf.contrib.layers.batch_norm(a, is_training=is_training, zero_debias_moving_mean=True)\n      9 sess = tf.Session()\n---> 10 sess.run(tf.global_variables_initializer())\n\n~/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/client/session.py in run(self, fetches, feed_dict, options, run_metadata)\n    894     try:\n    895       result = self._run(None, fetches, feed_dict, options_ptr,\n--> 896                          run_metadata_ptr)\n    897       if run_metadata:\n    898         proto_data = tf_session.TF_GetBuffer(run_metadata_ptr)\n\n~/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/client/session.py in _run(self, handle, fetches, feed_dict, options, run_metadata)\n   1122     if final_fetches or final_targets or (handle and feed_dict_tensor):\n   1123       results = self._do_run(handle, final_targets, final_fetches,\n-> 1124                              feed_dict_tensor, options, run_metadata)\n   1125     else:\n   1126       results = []\n\n~/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/client/session.py in _do_run(self, handle, target_list, fetch_list, feed_dict, options, run_metadata)\n   1277     if handle is None:\n   1278       return self._do_call(_run_fn, self._session, feeds, fetches, targets,\n-> 1279                            options, run_metadata)\n   1280     else:\n   1281       return self._do_call(_prun_fn, self._session, handle, feeds, fetches)\n\n~/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/client/session.py in _do_call(self, fn, *args)\n   1296         except KeyError:\n   1297           pass\n-> 1298       raise type(e)(node_def, op, message)\n   1299 \n   1300   def _extend_graph(self):\n\nInvalidArgumentError: Cannot assign a device for operation 'BatchNorm/Reshape_2': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.\n\t [[Node: BatchNorm/Reshape_2 = Reshape[T=DT_BOOL, Tshape=DT_INT32, _device=\"/device:GPU:0\"](is_training, BatchNorm/Reshape_2/shape)]]\n\nCaused by op 'BatchNorm/Reshape_2', defined at:\n  File \"/usr/lib/python3.4/runpy.py\", line 170, in _run_module_as_main\n    \"__main__\", mod_spec)\n  File \"/usr/lib/python3.4/runpy.py\", line 85, in _run_code\n    exec(code, run_globals)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/ipykernel_launcher.py\", line 16, in <module>\n    app.launch_new_instance()\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/traitlets/config/application.py\", line 658, in launch_instance\n    app.start()\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/ipykernel/kernelapp.py\", line 477, in start\n    ioloop.IOLoop.instance().start()\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/zmq/eventloop/ioloop.py\", line 177, in start\n    super(ZMQIOLoop, self).start()\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tornado/ioloop.py\", line 888, in start\n    handler_func(fd_obj, events)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tornado/stack_context.py\", line 277, in null_wrapper\n    return fn(*args, **kwargs)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/zmq/eventloop/zmqstream.py\", line 440, in _handle_events\n    self._handle_recv()\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/zmq/eventloop/zmqstream.py\", line 472, in _handle_recv\n    self._run_callback(callback, msg)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/zmq/eventloop/zmqstream.py\", line 414, in _run_callback\n    callback(*args, **kwargs)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tornado/stack_context.py\", line 277, in null_wrapper\n    return fn(*args, **kwargs)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/ipykernel/kernelbase.py\", line 283, in dispatcher\n    return self.dispatch_shell(stream, msg)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/ipykernel/kernelbase.py\", line 235, in dispatch_shell\n    handler(stream, idents, msg)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/ipykernel/kernelbase.py\", line 399, in execute_request\n    user_expressions, allow_stdin)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/ipykernel/ipkernel.py\", line 196, in do_execute\n    res = shell.run_cell(code, store_history=store_history, silent=silent)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/ipykernel/zmqshell.py\", line 533, in run_cell\n    return super(ZMQInteractiveShell, self).run_cell(*args, **kwargs)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/IPython/core/interactiveshell.py\", line 2698, in run_cell\n    interactivity=interactivity, compiler=compiler, result=result)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/IPython/core/interactiveshell.py\", line 2802, in run_ast_nodes\n    if self.run_code(code, result):\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/IPython/core/interactiveshell.py\", line 2862, in run_code\n    exec(code_obj, self.user_global_ns, self.user_ns)\n  File \"<ipython-input-1-285b7d56d919>\", line 7, in <module>\n    b = tf.contrib.layers.batch_norm(a, is_training=is_training)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/contrib/framework/python/ops/arg_scope.py\", line 181, in func_with_args\n    return func(*args, **current_args)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/contrib/layers/python/layers/layers.py\", line 634, in batch_norm\n    outputs = layer.apply(inputs, training=is_training)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/layers/base.py\", line 492, in apply\n    return self.__call__(inputs, *args, **kwargs)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/layers/base.py\", line 441, in __call__\n    outputs = self.call(inputs, *args, **kwargs)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/layers/normalization.py\", line 395, in call\n    decay = _smart_select(training, lambda: self.momentum, lambda: 1.)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/layers/normalization.py\", line 568, in _smart_select\n    pred = array_ops.reshape(pred, [1])\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/ops/gen_array_ops.py\", line 2502, in reshape\n    name=name)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/framework/op_def_library.py\", line 767, in apply_op\n    op_def=op_def)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/framework/ops.py\", line 2576, in create_op\n    original_op=self._default_original_op, op_def=op_def)\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/framework/ops.py\", line 1204, in __init__\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\n\nInvalidArgumentError (see above for traceback): Cannot assign a device for operation 'BatchNorm/Reshape_2': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.\n\t [[Node: BatchNorm/Reshape_2 = Reshape[T=DT_BOOL, Tshape=DT_INT32, _device=\"/device:GPU:0\"](is_training, BatchNorm/Reshape_2/shape)]]", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:  Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 14.04\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**:  1.2.1\r\n- **Python version**:  3.4.3\r\n- **Bazel version (if compiling from source)**: 0.5.2\r\n- **CUDA/cuDNN version**:  8.0/6.0\r\n- **GPU model and memory**: Tesla P100 (16 gb)\r\n\r\n### Describe the problem\r\nBatch norm layer fails with an error when explicitly assigned to be run on gpu and zero_debias_moving_mean is False. Interesting that I'm getting this error only when is_training is a placeholder (passing just True doesn't reproduce the error). If commented line is used instead (zero_debias_moving_mean=True) the code also works without any error.\r\n\r\n### Source code / logs\r\nThe following code could be used to reproduce the issue:\r\n```python\r\nimport tensorflow as tf\r\nis_training = tf.placeholder(tf.bool, name='is_training')\r\na = tf.placeholder(tf.float32, shape=(10, 10, 10, 10))\r\nwith tf.device('/gpu:0'):\r\n    b = tf.contrib.layers.batch_norm(a, is_training=is_training)\r\n#     b = tf.contrib.layers.batch_norm(a, is_training=is_training, zero_debias_moving_mean=True)\r\nsess = tf.Session()\r\nsess.run(tf.global_variables_initializer())\r\n```\r\nThe error log:\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nInvalidArgumentError                      Traceback (most recent call last)\r\n~/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/client/session.py in _do_call(self, fn, *args)\r\n   1284     try:\r\n-> 1285       return fn(*args)\r\n   1286     except errors.OpError as e:\r\n\r\n~/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/client/session.py in _run_fn(session, feed_dict, fetch_list, target_list, options, run_metadata)\r\n   1254       # Ensure any changes to the graph are reflected in the runtime.\r\n-> 1255       self._extend_graph()\r\n   1256       with errors.raise_exception_on_not_ok_status() as status:\r\n\r\n~/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/client/session.py in _extend_graph(self)\r\n   1315           tf_session.TF_ExtendGraph(\r\n-> 1316               self._session, graph_def.SerializeToString(), status)\r\n   1317         self._opened = True\r\n\r\n/usr/lib/python3.4/contextlib.py in __exit__(self, type, value, traceback)\r\n     65             try:\r\n---> 66                 next(self.gen)\r\n     67             except StopIteration:\r\n\r\n~/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/framework/errors_impl.py in raise_exception_on_not_ok_status()\r\n    465           compat.as_text(pywrap_tensorflow.TF_Message(status)),\r\n--> 466           pywrap_tensorflow.TF_GetCode(status))\r\n    467   finally:\r\n\r\nInvalidArgumentError: Cannot assign a device for operation 'BatchNorm/Reshape_2': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.\r\n\t [[Node: BatchNorm/Reshape_2 = Reshape[T=DT_BOOL, Tshape=DT_INT32, _device=\"/device:GPU:0\"](is_training, BatchNorm/Reshape_2/shape)]]\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nInvalidArgumentError                      Traceback (most recent call last)\r\n<ipython-input-1-285b7d56d919> in <module>()\r\n      8 #     b = tf.contrib.layers.batch_norm(a, is_training=is_training, zero_debias_moving_mean=True)\r\n      9 sess = tf.Session()\r\n---> 10 sess.run(tf.global_variables_initializer())\r\n\r\n~/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/client/session.py in run(self, fetches, feed_dict, options, run_metadata)\r\n    894     try:\r\n    895       result = self._run(None, fetches, feed_dict, options_ptr,\r\n--> 896                          run_metadata_ptr)\r\n    897       if run_metadata:\r\n    898         proto_data = tf_session.TF_GetBuffer(run_metadata_ptr)\r\n\r\n~/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/client/session.py in _run(self, handle, fetches, feed_dict, options, run_metadata)\r\n   1122     if final_fetches or final_targets or (handle and feed_dict_tensor):\r\n   1123       results = self._do_run(handle, final_targets, final_fetches,\r\n-> 1124                              feed_dict_tensor, options, run_metadata)\r\n   1125     else:\r\n   1126       results = []\r\n\r\n~/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/client/session.py in _do_run(self, handle, target_list, fetch_list, feed_dict, options, run_metadata)\r\n   1277     if handle is None:\r\n   1278       return self._do_call(_run_fn, self._session, feeds, fetches, targets,\r\n-> 1279                            options, run_metadata)\r\n   1280     else:\r\n   1281       return self._do_call(_prun_fn, self._session, handle, feeds, fetches)\r\n\r\n~/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/client/session.py in _do_call(self, fn, *args)\r\n   1296         except KeyError:\r\n   1297           pass\r\n-> 1298       raise type(e)(node_def, op, message)\r\n   1299 \r\n   1300   def _extend_graph(self):\r\n\r\nInvalidArgumentError: Cannot assign a device for operation 'BatchNorm/Reshape_2': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.\r\n\t [[Node: BatchNorm/Reshape_2 = Reshape[T=DT_BOOL, Tshape=DT_INT32, _device=\"/device:GPU:0\"](is_training, BatchNorm/Reshape_2/shape)]]\r\n\r\nCaused by op 'BatchNorm/Reshape_2', defined at:\r\n  File \"/usr/lib/python3.4/runpy.py\", line 170, in _run_module_as_main\r\n    \"__main__\", mod_spec)\r\n  File \"/usr/lib/python3.4/runpy.py\", line 85, in _run_code\r\n    exec(code, run_globals)\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/ipykernel_launcher.py\", line 16, in <module>\r\n    app.launch_new_instance()\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/traitlets/config/application.py\", line 658, in launch_instance\r\n    app.start()\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/ipykernel/kernelapp.py\", line 477, in start\r\n    ioloop.IOLoop.instance().start()\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/zmq/eventloop/ioloop.py\", line 177, in start\r\n    super(ZMQIOLoop, self).start()\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tornado/ioloop.py\", line 888, in start\r\n    handler_func(fd_obj, events)\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tornado/stack_context.py\", line 277, in null_wrapper\r\n    return fn(*args, **kwargs)\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/zmq/eventloop/zmqstream.py\", line 440, in _handle_events\r\n    self._handle_recv()\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/zmq/eventloop/zmqstream.py\", line 472, in _handle_recv\r\n    self._run_callback(callback, msg)\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/zmq/eventloop/zmqstream.py\", line 414, in _run_callback\r\n    callback(*args, **kwargs)\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tornado/stack_context.py\", line 277, in null_wrapper\r\n    return fn(*args, **kwargs)\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/ipykernel/kernelbase.py\", line 283, in dispatcher\r\n    return self.dispatch_shell(stream, msg)\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/ipykernel/kernelbase.py\", line 235, in dispatch_shell\r\n    handler(stream, idents, msg)\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/ipykernel/kernelbase.py\", line 399, in execute_request\r\n    user_expressions, allow_stdin)\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/ipykernel/ipkernel.py\", line 196, in do_execute\r\n    res = shell.run_cell(code, store_history=store_history, silent=silent)\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/ipykernel/zmqshell.py\", line 533, in run_cell\r\n    return super(ZMQInteractiveShell, self).run_cell(*args, **kwargs)\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/IPython/core/interactiveshell.py\", line 2698, in run_cell\r\n    interactivity=interactivity, compiler=compiler, result=result)\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/IPython/core/interactiveshell.py\", line 2802, in run_ast_nodes\r\n    if self.run_code(code, result):\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/IPython/core/interactiveshell.py\", line 2862, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-1-285b7d56d919>\", line 7, in <module>\r\n    b = tf.contrib.layers.batch_norm(a, is_training=is_training)\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/contrib/framework/python/ops/arg_scope.py\", line 181, in func_with_args\r\n    return func(*args, **current_args)\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/contrib/layers/python/layers/layers.py\", line 634, in batch_norm\r\n    outputs = layer.apply(inputs, training=is_training)\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/layers/base.py\", line 492, in apply\r\n    return self.__call__(inputs, *args, **kwargs)\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/layers/base.py\", line 441, in __call__\r\n    outputs = self.call(inputs, *args, **kwargs)\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/layers/normalization.py\", line 395, in call\r\n    decay = _smart_select(training, lambda: self.momentum, lambda: 1.)\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/layers/normalization.py\", line 568, in _smart_select\r\n    pred = array_ops.reshape(pred, [1])\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/ops/gen_array_ops.py\", line 2502, in reshape\r\n    name=name)\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/framework/op_def_library.py\", line 767, in apply_op\r\n    op_def=op_def)\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/framework/ops.py\", line 2576, in create_op\r\n    original_op=self._default_original_op, op_def=op_def)\r\n  File \"/home/igitman/Documents/weight-normalization-exps/venv/lib/python3.4/site-packages/tensorflow/python/framework/ops.py\", line 1204, in __init__\r\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\r\n\r\nInvalidArgumentError (see above for traceback): Cannot assign a device for operation 'BatchNorm/Reshape_2': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.\r\n\t [[Node: BatchNorm/Reshape_2 = Reshape[T=DT_BOOL, Tshape=DT_INT32, _device=\"/device:GPU:0\"](is_training, BatchNorm/Reshape_2/shape)]]\r\n```\r\n"}