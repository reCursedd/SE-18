{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1347", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1347/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1347/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1347/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/1347", "id": 137679043, "node_id": "MDU6SXNzdWUxMzc2NzkwNDM=", "number": 1347, "title": "Embedding Lookup - shared weights: Dimensions are not compatible error", "user": {"login": "ponythewhite", "id": 585524, "node_id": "MDQ6VXNlcjU4NTUyNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/585524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ponythewhite", "html_url": "https://github.com/ponythewhite", "followers_url": "https://api.github.com/users/ponythewhite/followers", "following_url": "https://api.github.com/users/ponythewhite/following{/other_user}", "gists_url": "https://api.github.com/users/ponythewhite/gists{/gist_id}", "starred_url": "https://api.github.com/users/ponythewhite/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ponythewhite/subscriptions", "organizations_url": "https://api.github.com/users/ponythewhite/orgs", "repos_url": "https://api.github.com/users/ponythewhite/repos", "events_url": "https://api.github.com/users/ponythewhite/events{/privacy}", "received_events_url": "https://api.github.com/users/ponythewhite/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-03-01T20:34:09Z", "updated_at": "2016-03-02T10:31:13Z", "closed_at": "2016-03-01T22:02:16Z", "author_association": "NONE", "body_html": "<h3>Environment info</h3>\n<p>Operating System: Linux</p>\n<p>Installed from sources, commit hash: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/7b5fef17806e2138ef16e8399ef5b1078d404dbe/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/7b5fef17806e2138ef16e8399ef5b1078d404dbe\"><tt>7b5fef1</tt></a><br>\nPython 2.7.11 |Anaconda 2.3.0 (64-bit)| (default, Dec  6 2015, 18:08:32)</p>\n<h3>Steps to reproduce</h3>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\nvocab_size <span class=\"pl-k\">=</span> <span class=\"pl-c1\">1337</span>\nembedding_size <span class=\"pl-k\">=</span> <span class=\"pl-c1\">100</span>\nbatch_size <span class=\"pl-k\">=</span> <span class=\"pl-c1\">512</span>\nQmax <span class=\"pl-k\">=</span> <span class=\"pl-c1\">19</span>\nTmax <span class=\"pl-k\">=</span> <span class=\"pl-c1\">17</span>\n\nW <span class=\"pl-k\">=</span> tf.Variable(\n    tf.random_uniform([vocab_size, embedding_size], <span class=\"pl-k\">-</span><span class=\"pl-c1\">1.0</span>, <span class=\"pl-c1\">1.0</span>) ,<span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>W<span class=\"pl-pds\">\"</span></span>)\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>W2 = tf.Variable(</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>    tf.random_uniform([vocab_size, embedding_size], -1.0, 1.0) ,name=\"W2\")</span>\n\n_q <span class=\"pl-k\">=</span> tf.placeholder(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>int32<span class=\"pl-pds\">\"</span></span>, [batch_size, Qmax])\n_t <span class=\"pl-k\">=</span> tf.placeholder(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>int32<span class=\"pl-pds\">\"</span></span>, [batch_size, Tmax])\n\nA <span class=\"pl-k\">=</span> tf.reduce_mean(tf.nn.embedding_lookup(W, _q), [<span class=\"pl-c1\">1</span>])\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> DOES NOT WORK</span>\nB <span class=\"pl-k\">=</span> tf.reduce_mean(tf.nn.embedding_lookup(W, _t), [<span class=\"pl-c1\">1</span>])\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> WORKS</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>B = tf.reduce_mean(tf.nn.embedding_lookup(W2, _t), [1])</span>\n\ncost <span class=\"pl-k\">=</span> tf.reduce_mean(tf.add(A, B))\n\noptimizer <span class=\"pl-k\">=</span> tf.train.AdamOptimizer(<span class=\"pl-v\">learning_rate</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0.001</span>).minimize(cost)</pre></div>\n<h3>What have you tried?</h3>\n<ol>\n<li>Commented lines seem to mitigate the problem, but then the embedding matrix is not shared, which is desired for my use case.</li>\n</ol>\n<h3>Logs or other output that would be helpful</h3>\n<pre><code>jd@jd-cuda:~$ python tensor_fail.py \nI tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library libcublas.so.7.0 locally\nI tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library libcudnn.so.6.5 locally\nI tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library libcufft.so.7.0 locally\nI tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library libcuda.so locally\nI tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library libcurand.so.7.0 locally\nTraceback (most recent call last):\n  File \"tensor_fail.py\", line 28, in &lt;module&gt;\n    optimizer = tf.train.AdamOptimizer(learning_rate=0.001).minimize(cost)\n  File \"/home/jd/anaconda/lib/python2.7/site-packages/tensorflow/python/training/optimizer.py\", line 186, in minimize\n    aggregation_method=aggregation_method)\n  File \"/home/jd/anaconda/lib/python2.7/site-packages/tensorflow/python/training/optimizer.py\", line 232, in compute_gradients\n    aggregation_method=aggregation_method)\n  File \"/home/jd/anaconda/lib/python2.7/site-packages/tensorflow/python/ops/gradients.py\", line 416, in gradients\n    aggregation_method)\n  File \"/home/jd/anaconda/lib/python2.7/site-packages/tensorflow/python/ops/gradients.py\", line 638, in _AggregatedGrads\n    for x in out_grad]), out_grad[0].dense_shape)\n  File \"/home/jd/anaconda/lib/python2.7/site-packages/tensorflow/python/ops/array_ops.py\", line 309, in concat\n    name=name)\n  File \"/home/jd/anaconda/lib/python2.7/site-packages/tensorflow/python/ops/gen_array_ops.py\", line 70, in _concat\n    name=name)\n  File \"/home/jd/anaconda/lib/python2.7/site-packages/tensorflow/python/ops/op_def_library.py\", line 664, in apply_op\n    op_def=op_def)\n  File \"/home/jd/anaconda/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1836, in create_op\n    set_shapes_for_outputs(ret)\n  File \"/home/jd/anaconda/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1476, in set_shapes_for_outputs\n    shapes = shape_func(op)\n  File \"/home/jd/anaconda/lib/python2.7/site-packages/tensorflow/python/ops/array_ops.py\", line 364, in _ConcatShape\n    concat_dim + 1:].merge_with(value_shape[concat_dim + 1:])\n  File \"/home/jd/anaconda/lib/python2.7/site-packages/tensorflow/python/framework/tensor_shape.py\", line 530, in merge_with\n    new_dims.append(dim.merge_with(other[i]))\n  File \"/home/jd/anaconda/lib/python2.7/site-packages/tensorflow/python/framework/tensor_shape.py\", line 119, in merge_with\n    self.assert_is_compatible_with(other)\n  File \"/home/jd/anaconda/lib/python2.7/site-packages/tensorflow/python/framework/tensor_shape.py\", line 94, in assert_is_compatible_with\n    % (self, other))\nValueError: Dimensions Dimension(19) and Dimension(17) are not compatible\n</code></pre>\n<p>I would be grateful for any help.</p>\n<p>Best regards,</p>\n<h2></h2>\n<p>Jacek Dabrowski</p>", "body_text": "Environment info\nOperating System: Linux\nInstalled from sources, commit hash: 7b5fef1\nPython 2.7.11 |Anaconda 2.3.0 (64-bit)| (default, Dec  6 2015, 18:08:32)\nSteps to reproduce\nimport tensorflow as tf\n\nvocab_size = 1337\nembedding_size = 100\nbatch_size = 512\nQmax = 19\nTmax = 17\n\nW = tf.Variable(\n    tf.random_uniform([vocab_size, embedding_size], -1.0, 1.0) ,name=\"W\")\n\n#W2 = tf.Variable(\n#    tf.random_uniform([vocab_size, embedding_size], -1.0, 1.0) ,name=\"W2\")\n\n_q = tf.placeholder(\"int32\", [batch_size, Qmax])\n_t = tf.placeholder(\"int32\", [batch_size, Tmax])\n\nA = tf.reduce_mean(tf.nn.embedding_lookup(W, _q), [1])\n\n# DOES NOT WORK\nB = tf.reduce_mean(tf.nn.embedding_lookup(W, _t), [1])\n\n# WORKS\n#B = tf.reduce_mean(tf.nn.embedding_lookup(W2, _t), [1])\n\ncost = tf.reduce_mean(tf.add(A, B))\n\noptimizer = tf.train.AdamOptimizer(learning_rate=0.001).minimize(cost)\nWhat have you tried?\n\nCommented lines seem to mitigate the problem, but then the embedding matrix is not shared, which is desired for my use case.\n\nLogs or other output that would be helpful\njd@jd-cuda:~$ python tensor_fail.py \nI tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library libcublas.so.7.0 locally\nI tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library libcudnn.so.6.5 locally\nI tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library libcufft.so.7.0 locally\nI tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library libcuda.so locally\nI tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library libcurand.so.7.0 locally\nTraceback (most recent call last):\n  File \"tensor_fail.py\", line 28, in <module>\n    optimizer = tf.train.AdamOptimizer(learning_rate=0.001).minimize(cost)\n  File \"/home/jd/anaconda/lib/python2.7/site-packages/tensorflow/python/training/optimizer.py\", line 186, in minimize\n    aggregation_method=aggregation_method)\n  File \"/home/jd/anaconda/lib/python2.7/site-packages/tensorflow/python/training/optimizer.py\", line 232, in compute_gradients\n    aggregation_method=aggregation_method)\n  File \"/home/jd/anaconda/lib/python2.7/site-packages/tensorflow/python/ops/gradients.py\", line 416, in gradients\n    aggregation_method)\n  File \"/home/jd/anaconda/lib/python2.7/site-packages/tensorflow/python/ops/gradients.py\", line 638, in _AggregatedGrads\n    for x in out_grad]), out_grad[0].dense_shape)\n  File \"/home/jd/anaconda/lib/python2.7/site-packages/tensorflow/python/ops/array_ops.py\", line 309, in concat\n    name=name)\n  File \"/home/jd/anaconda/lib/python2.7/site-packages/tensorflow/python/ops/gen_array_ops.py\", line 70, in _concat\n    name=name)\n  File \"/home/jd/anaconda/lib/python2.7/site-packages/tensorflow/python/ops/op_def_library.py\", line 664, in apply_op\n    op_def=op_def)\n  File \"/home/jd/anaconda/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1836, in create_op\n    set_shapes_for_outputs(ret)\n  File \"/home/jd/anaconda/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1476, in set_shapes_for_outputs\n    shapes = shape_func(op)\n  File \"/home/jd/anaconda/lib/python2.7/site-packages/tensorflow/python/ops/array_ops.py\", line 364, in _ConcatShape\n    concat_dim + 1:].merge_with(value_shape[concat_dim + 1:])\n  File \"/home/jd/anaconda/lib/python2.7/site-packages/tensorflow/python/framework/tensor_shape.py\", line 530, in merge_with\n    new_dims.append(dim.merge_with(other[i]))\n  File \"/home/jd/anaconda/lib/python2.7/site-packages/tensorflow/python/framework/tensor_shape.py\", line 119, in merge_with\n    self.assert_is_compatible_with(other)\n  File \"/home/jd/anaconda/lib/python2.7/site-packages/tensorflow/python/framework/tensor_shape.py\", line 94, in assert_is_compatible_with\n    % (self, other))\nValueError: Dimensions Dimension(19) and Dimension(17) are not compatible\n\nI would be grateful for any help.\nBest regards,\n\nJacek Dabrowski", "body": "### Environment info\n\nOperating System: Linux\n\nInstalled from sources, commit hash: 7b5fef17806e2138ef16e8399ef5b1078d404dbe\nPython 2.7.11 |Anaconda 2.3.0 (64-bit)| (default, Dec  6 2015, 18:08:32)\n### Steps to reproduce\n\n``` python\nimport tensorflow as tf\n\nvocab_size = 1337\nembedding_size = 100\nbatch_size = 512\nQmax = 19\nTmax = 17\n\nW = tf.Variable(\n    tf.random_uniform([vocab_size, embedding_size], -1.0, 1.0) ,name=\"W\")\n\n#W2 = tf.Variable(\n#    tf.random_uniform([vocab_size, embedding_size], -1.0, 1.0) ,name=\"W2\")\n\n_q = tf.placeholder(\"int32\", [batch_size, Qmax])\n_t = tf.placeholder(\"int32\", [batch_size, Tmax])\n\nA = tf.reduce_mean(tf.nn.embedding_lookup(W, _q), [1])\n\n# DOES NOT WORK\nB = tf.reduce_mean(tf.nn.embedding_lookup(W, _t), [1])\n\n# WORKS\n#B = tf.reduce_mean(tf.nn.embedding_lookup(W2, _t), [1])\n\ncost = tf.reduce_mean(tf.add(A, B))\n\noptimizer = tf.train.AdamOptimizer(learning_rate=0.001).minimize(cost)\n```\n### What have you tried?\n1. Commented lines seem to mitigate the problem, but then the embedding matrix is not shared, which is desired for my use case.\n### Logs or other output that would be helpful\n\n```\njd@jd-cuda:~$ python tensor_fail.py \nI tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library libcublas.so.7.0 locally\nI tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library libcudnn.so.6.5 locally\nI tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library libcufft.so.7.0 locally\nI tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library libcuda.so locally\nI tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library libcurand.so.7.0 locally\nTraceback (most recent call last):\n  File \"tensor_fail.py\", line 28, in <module>\n    optimizer = tf.train.AdamOptimizer(learning_rate=0.001).minimize(cost)\n  File \"/home/jd/anaconda/lib/python2.7/site-packages/tensorflow/python/training/optimizer.py\", line 186, in minimize\n    aggregation_method=aggregation_method)\n  File \"/home/jd/anaconda/lib/python2.7/site-packages/tensorflow/python/training/optimizer.py\", line 232, in compute_gradients\n    aggregation_method=aggregation_method)\n  File \"/home/jd/anaconda/lib/python2.7/site-packages/tensorflow/python/ops/gradients.py\", line 416, in gradients\n    aggregation_method)\n  File \"/home/jd/anaconda/lib/python2.7/site-packages/tensorflow/python/ops/gradients.py\", line 638, in _AggregatedGrads\n    for x in out_grad]), out_grad[0].dense_shape)\n  File \"/home/jd/anaconda/lib/python2.7/site-packages/tensorflow/python/ops/array_ops.py\", line 309, in concat\n    name=name)\n  File \"/home/jd/anaconda/lib/python2.7/site-packages/tensorflow/python/ops/gen_array_ops.py\", line 70, in _concat\n    name=name)\n  File \"/home/jd/anaconda/lib/python2.7/site-packages/tensorflow/python/ops/op_def_library.py\", line 664, in apply_op\n    op_def=op_def)\n  File \"/home/jd/anaconda/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1836, in create_op\n    set_shapes_for_outputs(ret)\n  File \"/home/jd/anaconda/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1476, in set_shapes_for_outputs\n    shapes = shape_func(op)\n  File \"/home/jd/anaconda/lib/python2.7/site-packages/tensorflow/python/ops/array_ops.py\", line 364, in _ConcatShape\n    concat_dim + 1:].merge_with(value_shape[concat_dim + 1:])\n  File \"/home/jd/anaconda/lib/python2.7/site-packages/tensorflow/python/framework/tensor_shape.py\", line 530, in merge_with\n    new_dims.append(dim.merge_with(other[i]))\n  File \"/home/jd/anaconda/lib/python2.7/site-packages/tensorflow/python/framework/tensor_shape.py\", line 119, in merge_with\n    self.assert_is_compatible_with(other)\n  File \"/home/jd/anaconda/lib/python2.7/site-packages/tensorflow/python/framework/tensor_shape.py\", line 94, in assert_is_compatible_with\n    % (self, other))\nValueError: Dimensions Dimension(19) and Dimension(17) are not compatible\n```\n\nI would be grateful for any help.\n\nBest regards,\n## \n\nJacek Dabrowski\n"}