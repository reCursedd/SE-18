{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16009", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16009/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16009/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16009/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16009", "id": 287446219, "node_id": "MDU6SXNzdWUyODc0NDYyMTk=", "number": 16009, "title": "bazel build ask for ANDROID_NDK_HOME, ANDROID_SDK_HOME -- no way to disable it", "user": {"login": "PatWie", "id": 6756603, "node_id": "MDQ6VXNlcjY3NTY2MDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/6756603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PatWie", "html_url": "https://github.com/PatWie", "followers_url": "https://api.github.com/users/PatWie/followers", "following_url": "https://api.github.com/users/PatWie/following{/other_user}", "gists_url": "https://api.github.com/users/PatWie/gists{/gist_id}", "starred_url": "https://api.github.com/users/PatWie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PatWie/subscriptions", "organizations_url": "https://api.github.com/users/PatWie/orgs", "repos_url": "https://api.github.com/users/PatWie/repos", "events_url": "https://api.github.com/users/PatWie/events{/privacy}", "received_events_url": "https://api.github.com/users/PatWie/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-01-10T14:10:14Z", "updated_at": "2018-02-02T17:31:56Z", "closed_at": "2018-01-30T19:31:57Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:<br>\nno</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:<br>\nLinux Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:<br>\nsource</li>\n<li><strong>TensorFlow version (use command below)</strong>:<br>\n('v1.5.0-rc0-1-g793280a', '1.5.0-rc0')</li>\n<li><strong>Python version</strong>:<br>\n2.7</li>\n<li><strong>Bazel version (if compiling from source)</strong>:</li>\n</ul>\n<pre><code>Build label: 0.9.0\nBuild target: bazel-out/k8-fastbuild/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar\nBuild time: Tue Dec 19 09:31:58 2017 (1513675918)\nBuild timestamp: 1513675918\nBuild timestamp as int: 1513675918\n</code></pre>\n<ul>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:<br>\ng++ (Ubuntu 5.4.0-6ubuntu1~16.04.5) 5.4.0 20160609</li>\n<li><strong>CUDA/cuDNN version</strong>:<br>\ntoolkit_9.0 and cudnn 7.0.5_for_9.0</li>\n<li><strong>GPU model and memory</strong>:<br>\ndifferent machines (irrelevant)</li>\n<li><strong>Exact command to reproduce</strong>:<br>\nsee <a href=\"https://gist.github.com/PatWie/aef90e72dbeaf2f79fbcaa031d74baad\">this gist</a> which is mainly</li>\n</ul>\n<div class=\"highlight highlight-source-shell\"><pre><span class=\"pl-k\">export</span> TF_NEED_GCP=0\n<span class=\"pl-k\">export</span> TF_NEED_CUDA=1\n<span class=\"pl-k\">export</span> TF_CUDA_VERSION=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-s\"><span class=\"pl-pds\">$(</span><span class=\"pl-smi\">$CUDA_TOOLKIT_PATH</span>/bin/nvcc --version <span class=\"pl-k\">|</span> sed -n <span class=\"pl-s\"><span class=\"pl-pds\">'</span>s/^.*release \\(.*\\),.*/\\1/p<span class=\"pl-pds\">'</span></span><span class=\"pl-pds\">)</span></span><span class=\"pl-pds\">\"</span></span>\n<span class=\"pl-k\">export</span> TF_CUDA_COMPUTE_CAPABILITIES=6.1,5.2,3.5\n<span class=\"pl-k\">export</span> TF_NEED_HDFS=0\n<span class=\"pl-k\">export</span> TF_NEED_OPENCL=0\n<span class=\"pl-k\">export</span> TF_NEED_JEMALLOC=1\n<span class=\"pl-k\">export</span> TF_ENABLE_XLA=0\n<span class=\"pl-k\">export</span> TF_NEED_VERBS=0\n<span class=\"pl-k\">export</span> TF_CUDA_CLANG=0\n<span class=\"pl-k\">export</span> TF_CUDNN_VERSION=7\n<span class=\"pl-k\">export</span> TF_NEED_MKL=0\n<span class=\"pl-k\">export</span> TF_DOWNLOAD_MKL=0\n<span class=\"pl-k\">export</span> TF_NEED_MPI=0\n<span class=\"pl-k\">export</span> TF_NEED_GDR=0\n<span class=\"pl-k\">export</span> TF_NEED_S3=0\n<span class=\"pl-k\">export</span> TF_NEED_OPENCL_SYCL=0\n<span class=\"pl-k\">export</span> TF_NEED_COMPUTECPP=0\n<span class=\"pl-k\">export</span> GCC_HOST_COMPILER_PATH=<span class=\"pl-s\"><span class=\"pl-pds\">$(</span>which gcc<span class=\"pl-pds\">)</span></span>\n<span class=\"pl-k\">export</span> CC_OPT_FLAGS=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>-march=native<span class=\"pl-pds\">\"</span></span>\n\n./configure\n\nbazel build --config=opt --copt=-mfpmath=both --copt=-msse4.2 --copt=-O3 --cxxopt=-D_GLIBCXX_USE_CXX11_ABI=1 ....</pre></div>\n<h3>Describe the problem</h3>\n<p>In the past, using exactly this scripted worked. However, there are now a few issues:<br>\nThe build uses <code>AVX2</code> even I haven't specified it as <code>--copt</code> (which worked in the past)</p>\n<h3>Source code / logs</h3>\n<p>depending on the machine it gives</p>\n<pre><code>Python 2.7.12 (default, Nov 20 2017, 18:23:56) \n[GCC 5.4.0 20160609] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt; import tensorflow\n2018-01-10 15:06:19.070740: F tensorflow/core/platform/cpu_feature_guard.cc:36] The TensorFlow library was compiled to use AVX2 instructions, but these aren't available on your machine.\nzsh: abort      python\n</code></pre>\n<p>or</p>\n<pre><code>Python 2.7.12 (default, Nov 20 2017, 18:23:56) \n[GCC 5.4.0 20160609] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt; import tensorflow\nzsh: illegal hardware instruction  python\n</code></pre>\n<p>On machines with AVX2 everything is fine. Further, there is no way to skip to setup ANDROID_NDK_HOME, ANDROID_SDK_HOME (I manually uncommented this in <code>configure.py</code>).</p>\n<p><em>edit</em><br>\nI am willing to provide a pull-request for <code>configure.py</code>, adding something like <code>TF_NEED_ANDROID</code>.</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nno\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nLinux Ubuntu 16.04\nTensorFlow installed from (source or binary):\nsource\nTensorFlow version (use command below):\n('v1.5.0-rc0-1-g793280a', '1.5.0-rc0')\nPython version:\n2.7\nBazel version (if compiling from source):\n\nBuild label: 0.9.0\nBuild target: bazel-out/k8-fastbuild/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar\nBuild time: Tue Dec 19 09:31:58 2017 (1513675918)\nBuild timestamp: 1513675918\nBuild timestamp as int: 1513675918\n\n\nGCC/Compiler version (if compiling from source):\ng++ (Ubuntu 5.4.0-6ubuntu1~16.04.5) 5.4.0 20160609\nCUDA/cuDNN version:\ntoolkit_9.0 and cudnn 7.0.5_for_9.0\nGPU model and memory:\ndifferent machines (irrelevant)\nExact command to reproduce:\nsee this gist which is mainly\n\nexport TF_NEED_GCP=0\nexport TF_NEED_CUDA=1\nexport TF_CUDA_VERSION=\"$($CUDA_TOOLKIT_PATH/bin/nvcc --version | sed -n 's/^.*release \\(.*\\),.*/\\1/p')\"\nexport TF_CUDA_COMPUTE_CAPABILITIES=6.1,5.2,3.5\nexport TF_NEED_HDFS=0\nexport TF_NEED_OPENCL=0\nexport TF_NEED_JEMALLOC=1\nexport TF_ENABLE_XLA=0\nexport TF_NEED_VERBS=0\nexport TF_CUDA_CLANG=0\nexport TF_CUDNN_VERSION=7\nexport TF_NEED_MKL=0\nexport TF_DOWNLOAD_MKL=0\nexport TF_NEED_MPI=0\nexport TF_NEED_GDR=0\nexport TF_NEED_S3=0\nexport TF_NEED_OPENCL_SYCL=0\nexport TF_NEED_COMPUTECPP=0\nexport GCC_HOST_COMPILER_PATH=$(which gcc)\nexport CC_OPT_FLAGS=\"-march=native\"\n\n./configure\n\nbazel build --config=opt --copt=-mfpmath=both --copt=-msse4.2 --copt=-O3 --cxxopt=-D_GLIBCXX_USE_CXX11_ABI=1 ....\nDescribe the problem\nIn the past, using exactly this scripted worked. However, there are now a few issues:\nThe build uses AVX2 even I haven't specified it as --copt (which worked in the past)\nSource code / logs\ndepending on the machine it gives\nPython 2.7.12 (default, Nov 20 2017, 18:23:56) \n[GCC 5.4.0 20160609] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import tensorflow\n2018-01-10 15:06:19.070740: F tensorflow/core/platform/cpu_feature_guard.cc:36] The TensorFlow library was compiled to use AVX2 instructions, but these aren't available on your machine.\nzsh: abort      python\n\nor\nPython 2.7.12 (default, Nov 20 2017, 18:23:56) \n[GCC 5.4.0 20160609] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import tensorflow\nzsh: illegal hardware instruction  python\n\nOn machines with AVX2 everything is fine. Further, there is no way to skip to setup ANDROID_NDK_HOME, ANDROID_SDK_HOME (I manually uncommented this in configure.py).\nedit\nI am willing to provide a pull-request for configure.py, adding something like TF_NEED_ANDROID.", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nno\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nLinux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**:\r\nsource\r\n- **TensorFlow version (use command below)**:\r\n('v1.5.0-rc0-1-g793280a', '1.5.0-rc0')\r\n- **Python version**: \r\n2.7\r\n- **Bazel version (if compiling from source)**:\r\n```\r\nBuild label: 0.9.0\r\nBuild target: bazel-out/k8-fastbuild/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar\r\nBuild time: Tue Dec 19 09:31:58 2017 (1513675918)\r\nBuild timestamp: 1513675918\r\nBuild timestamp as int: 1513675918\r\n```\r\n- **GCC/Compiler version (if compiling from source)**:\r\ng++ (Ubuntu 5.4.0-6ubuntu1~16.04.5) 5.4.0 20160609\r\n- **CUDA/cuDNN version**:\r\ntoolkit_9.0 and cudnn 7.0.5_for_9.0\r\n- **GPU model and memory**:\r\ndifferent machines (irrelevant)\r\n- **Exact command to reproduce**:\r\nsee [this gist](https://gist.github.com/PatWie/aef90e72dbeaf2f79fbcaa031d74baad) which is mainly\r\n\r\n```bash\r\nexport TF_NEED_GCP=0\r\nexport TF_NEED_CUDA=1\r\nexport TF_CUDA_VERSION=\"$($CUDA_TOOLKIT_PATH/bin/nvcc --version | sed -n 's/^.*release \\(.*\\),.*/\\1/p')\"\r\nexport TF_CUDA_COMPUTE_CAPABILITIES=6.1,5.2,3.5\r\nexport TF_NEED_HDFS=0\r\nexport TF_NEED_OPENCL=0\r\nexport TF_NEED_JEMALLOC=1\r\nexport TF_ENABLE_XLA=0\r\nexport TF_NEED_VERBS=0\r\nexport TF_CUDA_CLANG=0\r\nexport TF_CUDNN_VERSION=7\r\nexport TF_NEED_MKL=0\r\nexport TF_DOWNLOAD_MKL=0\r\nexport TF_NEED_MPI=0\r\nexport TF_NEED_GDR=0\r\nexport TF_NEED_S3=0\r\nexport TF_NEED_OPENCL_SYCL=0\r\nexport TF_NEED_COMPUTECPP=0\r\nexport GCC_HOST_COMPILER_PATH=$(which gcc)\r\nexport CC_OPT_FLAGS=\"-march=native\"\r\n\r\n./configure\r\n\r\nbazel build --config=opt --copt=-mfpmath=both --copt=-msse4.2 --copt=-O3 --cxxopt=-D_GLIBCXX_USE_CXX11_ABI=1 ....\r\n```\r\n### Describe the problem\r\nIn the past, using exactly this scripted worked. However, there are now a few issues:\r\nThe build uses `AVX2` even I haven't specified it as `--copt` (which worked in the past)\r\n\r\n### Source code / logs\r\ndepending on the machine it gives\r\n\r\n```\r\nPython 2.7.12 (default, Nov 20 2017, 18:23:56) \r\n[GCC 5.4.0 20160609] on linux2\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import tensorflow\r\n2018-01-10 15:06:19.070740: F tensorflow/core/platform/cpu_feature_guard.cc:36] The TensorFlow library was compiled to use AVX2 instructions, but these aren't available on your machine.\r\nzsh: abort      python\r\n```\r\nor\r\n```\r\nPython 2.7.12 (default, Nov 20 2017, 18:23:56) \r\n[GCC 5.4.0 20160609] on linux2\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import tensorflow\r\nzsh: illegal hardware instruction  python\r\n```\r\n\r\nOn machines with AVX2 everything is fine. Further, there is no way to skip to setup ANDROID_NDK_HOME, ANDROID_SDK_HOME (I manually uncommented this in `configure.py`).\r\n\r\n*edit*\r\nI am willing to provide a pull-request for `configure.py`, adding something like `TF_NEED_ANDROID`."}