{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21752", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21752/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21752/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21752/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21752", "id": 352401423, "node_id": "MDU6SXNzdWUzNTI0MDE0MjM=", "number": 21752, "title": "tflite-nnapi sometimes returns error result on same image.", "user": {"login": "jiarenyf", "id": 12405578, "node_id": "MDQ6VXNlcjEyNDA1NTc4", "avatar_url": "https://avatars2.githubusercontent.com/u/12405578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jiarenyf", "html_url": "https://github.com/jiarenyf", "followers_url": "https://api.github.com/users/jiarenyf/followers", "following_url": "https://api.github.com/users/jiarenyf/following{/other_user}", "gists_url": "https://api.github.com/users/jiarenyf/gists{/gist_id}", "starred_url": "https://api.github.com/users/jiarenyf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jiarenyf/subscriptions", "organizations_url": "https://api.github.com/users/jiarenyf/orgs", "repos_url": "https://api.github.com/users/jiarenyf/repos", "events_url": "https://api.github.com/users/jiarenyf/events{/privacy}", "received_events_url": "https://api.github.com/users/jiarenyf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 750616506, "node_id": "MDU6TGFiZWw3NTA2MTY1MDY=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:lite", "name": "comp:lite", "color": "0052cc", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "jdduke", "id": 479117, "node_id": "MDQ6VXNlcjQ3OTExNw==", "avatar_url": "https://avatars2.githubusercontent.com/u/479117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdduke", "html_url": "https://github.com/jdduke", "followers_url": "https://api.github.com/users/jdduke/followers", "following_url": "https://api.github.com/users/jdduke/following{/other_user}", "gists_url": "https://api.github.com/users/jdduke/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdduke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdduke/subscriptions", "organizations_url": "https://api.github.com/users/jdduke/orgs", "repos_url": "https://api.github.com/users/jdduke/repos", "events_url": "https://api.github.com/users/jdduke/events{/privacy}", "received_events_url": "https://api.github.com/users/jdduke/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jdduke", "id": 479117, "node_id": "MDQ6VXNlcjQ3OTExNw==", "avatar_url": "https://avatars2.githubusercontent.com/u/479117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdduke", "html_url": "https://github.com/jdduke", "followers_url": "https://api.github.com/users/jdduke/followers", "following_url": "https://api.github.com/users/jdduke/following{/other_user}", "gists_url": "https://api.github.com/users/jdduke/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdduke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdduke/subscriptions", "organizations_url": "https://api.github.com/users/jdduke/orgs", "repos_url": "https://api.github.com/users/jdduke/repos", "events_url": "https://api.github.com/users/jdduke/events{/privacy}", "received_events_url": "https://api.github.com/users/jdduke/received_events", "type": "User", "site_admin": false}, {"login": "suharshs", "id": 1450614, "node_id": "MDQ6VXNlcjE0NTA2MTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1450614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suharshs", "html_url": "https://github.com/suharshs", "followers_url": "https://api.github.com/users/suharshs/followers", "following_url": "https://api.github.com/users/suharshs/following{/other_user}", "gists_url": "https://api.github.com/users/suharshs/gists{/gist_id}", "starred_url": "https://api.github.com/users/suharshs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suharshs/subscriptions", "organizations_url": "https://api.github.com/users/suharshs/orgs", "repos_url": "https://api.github.com/users/suharshs/repos", "events_url": "https://api.github.com/users/suharshs/events{/privacy}", "received_events_url": "https://api.github.com/users/suharshs/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2018-08-21T06:25:57Z", "updated_at": "2018-08-25T10:42:00Z", "closed_at": "2018-08-25T10:42:00Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Ubuntu14.04</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>: Xiaomi 8, OnePlus 5T, Oppo.</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.10.0</li>\n<li><strong>Python version</strong>: 2.7.12</li>\n<li><strong>Bazel version (if compiling from source)</strong>:</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:</li>\n<li><strong>CUDA/cuDNN version</strong>: 9.0 / 7.1</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I use tflite in android phone and it return right result. But when setting <code>tflite.useNNAPI(true)</code>, the result sometimes is error, while sometimes is right on the same images. See the source code below for details.</p>\n<h3>Source code / logs</h3>\n<pre><code>private boolean NNAPI = true; # when set to `false` everything is ok, but when set to `true`, sometimes returns error result on the same images.\n\nprivate String getResult(final Bitmap bitmap) {\n    tflite.setUseNNAPI(NNAPI );\n\n    startTime = System.currentTimeMillis();\n\n    int width = bitmap.getWidth();\n    int height = bitmap.getHeight();\n    float scale = (float)IMG_HEIGHT / height;\n    int nWidth = (int) Math.floor(width * scale);\n    int nHeight = (int) Math.floor(height * scale);\n    int IMG_WIDTH =  (int) Math.ceil((float)nWidth/BLOCK)*BLOCK;\n\n    Bitmap nBitmap = Bitmap.createScaledBitmap(bitmap, nWidth, nHeight, true);\n\n    int intValues[] = new int[nWidth * nHeight];\n    nBitmap.getPixels(intValues, 0, nWidth, 0, 0, nWidth, nHeight);\n\n    ByteBuffer imgData = ByteBuffer.allocateDirect(IMG_WIDTH*IMG_HEIGHT);\n    imgData.order(ByteOrder.nativeOrder());\n\n    for (int i = 0; i &lt; IMG_HEIGHT; ++i) {\n        for (int k = 0; k &lt; IMG_WIDTH; ++k) {\n            if(i &gt;= nHeight || k &gt;= nWidth) {\n                imgData.put((byte)0);\n                continue;\n            }\n\n            int val = intValues[i*nWidth+k];\n            int b = val &amp; 0xFF;\n            int g = (val &gt;&gt; 8) &amp; 0xFF;\n            int r = (val &gt;&gt; 16) &amp; 0xFF;\n\n            float gray = (float) (r * 0.30 + g * 0.59 + b * 0.11);\n            imgData.put((byte) gray);\n        }\n    }\n\n    endTime1 = System.currentTimeMillis();\n\n    int MAX_LENGTH = IMG_WIDTH / BLOCK;\n    int dims[] = { 1, IMG_HEIGHT, IMG_WIDTH, 1 };\n    byte outputs[][] = new byte[MAX_LENGTH][KIND];\n\n    tflite.resizeInput(0, dims);\n    tflite.run(imgData, outputs);\n\n    endTime2 = System.currentTimeMillis();\n\n    int indices[] = new int[MAX_LENGTH];\n    for(int i=0; i &lt; MAX_LENGTH; ++i) {\n        float prob = Byte.MIN_VALUE;\n        int index = KIND-1;\n        for (int k = 0; k &lt; KIND; ++k) {\n            if (outputs[i][k] &gt; prob) {\n                index = k;\n                prob = outputs[i][k];\n            }\n        }\n        indices[i] = index;\n    }\n\n    int blank = KIND - 1;\n    StringBuilder sb = new StringBuilder();\n    for(int i=0; i &lt; MAX_LENGTH; ++i) {\n        if(indices[i] == blank) { continue; }\n\n        if(i==0 || indices[i] != indices[i-1]) {\n            sb.append(CHARS[indices[i]]);\n        }\n    }\n\n    endTime3 = System.currentTimeMillis();\n    return sb.toString();\n}\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu14.04\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: Xiaomi 8, OnePlus 5T, Oppo.\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): 1.10.0\nPython version: 2.7.12\nBazel version (if compiling from source):\nGCC/Compiler version (if compiling from source):\nCUDA/cuDNN version: 9.0 / 7.1\n\nDescribe the problem\nI use tflite in android phone and it return right result. But when setting tflite.useNNAPI(true), the result sometimes is error, while sometimes is right on the same images. See the source code below for details.\nSource code / logs\nprivate boolean NNAPI = true; # when set to `false` everything is ok, but when set to `true`, sometimes returns error result on the same images.\n\nprivate String getResult(final Bitmap bitmap) {\n    tflite.setUseNNAPI(NNAPI );\n\n    startTime = System.currentTimeMillis();\n\n    int width = bitmap.getWidth();\n    int height = bitmap.getHeight();\n    float scale = (float)IMG_HEIGHT / height;\n    int nWidth = (int) Math.floor(width * scale);\n    int nHeight = (int) Math.floor(height * scale);\n    int IMG_WIDTH =  (int) Math.ceil((float)nWidth/BLOCK)*BLOCK;\n\n    Bitmap nBitmap = Bitmap.createScaledBitmap(bitmap, nWidth, nHeight, true);\n\n    int intValues[] = new int[nWidth * nHeight];\n    nBitmap.getPixels(intValues, 0, nWidth, 0, 0, nWidth, nHeight);\n\n    ByteBuffer imgData = ByteBuffer.allocateDirect(IMG_WIDTH*IMG_HEIGHT);\n    imgData.order(ByteOrder.nativeOrder());\n\n    for (int i = 0; i < IMG_HEIGHT; ++i) {\n        for (int k = 0; k < IMG_WIDTH; ++k) {\n            if(i >= nHeight || k >= nWidth) {\n                imgData.put((byte)0);\n                continue;\n            }\n\n            int val = intValues[i*nWidth+k];\n            int b = val & 0xFF;\n            int g = (val >> 8) & 0xFF;\n            int r = (val >> 16) & 0xFF;\n\n            float gray = (float) (r * 0.30 + g * 0.59 + b * 0.11);\n            imgData.put((byte) gray);\n        }\n    }\n\n    endTime1 = System.currentTimeMillis();\n\n    int MAX_LENGTH = IMG_WIDTH / BLOCK;\n    int dims[] = { 1, IMG_HEIGHT, IMG_WIDTH, 1 };\n    byte outputs[][] = new byte[MAX_LENGTH][KIND];\n\n    tflite.resizeInput(0, dims);\n    tflite.run(imgData, outputs);\n\n    endTime2 = System.currentTimeMillis();\n\n    int indices[] = new int[MAX_LENGTH];\n    for(int i=0; i < MAX_LENGTH; ++i) {\n        float prob = Byte.MIN_VALUE;\n        int index = KIND-1;\n        for (int k = 0; k < KIND; ++k) {\n            if (outputs[i][k] > prob) {\n                index = k;\n                prob = outputs[i][k];\n            }\n        }\n        indices[i] = index;\n    }\n\n    int blank = KIND - 1;\n    StringBuilder sb = new StringBuilder();\n    for(int i=0; i < MAX_LENGTH; ++i) {\n        if(indices[i] == blank) { continue; }\n\n        if(i==0 || indices[i] != indices[i-1]) {\n            sb.append(CHARS[indices[i]]);\n        }\n    }\n\n    endTime3 = System.currentTimeMillis();\n    return sb.toString();\n}", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu14.04\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**: Xiaomi 8, OnePlus 5T, Oppo.\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.10.0\r\n- **Python version**: 2.7.12\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**: 9.0 / 7.1\r\n\r\n### Describe the problem\r\n\r\nI use tflite in android phone and it return right result. But when setting `tflite.useNNAPI(true)`, the result sometimes is error, while sometimes is right on the same images. See the source code below for details.\r\n\r\n### Source code / logs\r\n\r\n    private boolean NNAPI = true; # when set to `false` everything is ok, but when set to `true`, sometimes returns error result on the same images.\r\n\r\n    private String getResult(final Bitmap bitmap) {\r\n        tflite.setUseNNAPI(NNAPI );\r\n\r\n        startTime = System.currentTimeMillis();\r\n\r\n        int width = bitmap.getWidth();\r\n        int height = bitmap.getHeight();\r\n        float scale = (float)IMG_HEIGHT / height;\r\n        int nWidth = (int) Math.floor(width * scale);\r\n        int nHeight = (int) Math.floor(height * scale);\r\n        int IMG_WIDTH =  (int) Math.ceil((float)nWidth/BLOCK)*BLOCK;\r\n\r\n        Bitmap nBitmap = Bitmap.createScaledBitmap(bitmap, nWidth, nHeight, true);\r\n\r\n        int intValues[] = new int[nWidth * nHeight];\r\n        nBitmap.getPixels(intValues, 0, nWidth, 0, 0, nWidth, nHeight);\r\n\r\n        ByteBuffer imgData = ByteBuffer.allocateDirect(IMG_WIDTH*IMG_HEIGHT);\r\n        imgData.order(ByteOrder.nativeOrder());\r\n\r\n        for (int i = 0; i < IMG_HEIGHT; ++i) {\r\n            for (int k = 0; k < IMG_WIDTH; ++k) {\r\n                if(i >= nHeight || k >= nWidth) {\r\n                    imgData.put((byte)0);\r\n                    continue;\r\n                }\r\n\r\n                int val = intValues[i*nWidth+k];\r\n                int b = val & 0xFF;\r\n                int g = (val >> 8) & 0xFF;\r\n                int r = (val >> 16) & 0xFF;\r\n\r\n                float gray = (float) (r * 0.30 + g * 0.59 + b * 0.11);\r\n                imgData.put((byte) gray);\r\n            }\r\n        }\r\n\r\n        endTime1 = System.currentTimeMillis();\r\n\r\n        int MAX_LENGTH = IMG_WIDTH / BLOCK;\r\n        int dims[] = { 1, IMG_HEIGHT, IMG_WIDTH, 1 };\r\n        byte outputs[][] = new byte[MAX_LENGTH][KIND];\r\n\r\n        tflite.resizeInput(0, dims);\r\n        tflite.run(imgData, outputs);\r\n\r\n        endTime2 = System.currentTimeMillis();\r\n\r\n        int indices[] = new int[MAX_LENGTH];\r\n        for(int i=0; i < MAX_LENGTH; ++i) {\r\n            float prob = Byte.MIN_VALUE;\r\n            int index = KIND-1;\r\n            for (int k = 0; k < KIND; ++k) {\r\n                if (outputs[i][k] > prob) {\r\n                    index = k;\r\n                    prob = outputs[i][k];\r\n                }\r\n            }\r\n            indices[i] = index;\r\n        }\r\n\r\n        int blank = KIND - 1;\r\n        StringBuilder sb = new StringBuilder();\r\n        for(int i=0; i < MAX_LENGTH; ++i) {\r\n            if(indices[i] == blank) { continue; }\r\n\r\n            if(i==0 || indices[i] != indices[i-1]) {\r\n                sb.append(CHARS[indices[i]]);\r\n            }\r\n        }\r\n\r\n        endTime3 = System.currentTimeMillis();\r\n        return sb.toString();\r\n    }\r\n"}