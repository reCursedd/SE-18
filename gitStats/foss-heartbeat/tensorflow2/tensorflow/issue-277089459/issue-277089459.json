{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14914", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14914/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14914/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14914/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14914", "id": 277089459, "node_id": "MDU6SXNzdWUyNzcwODk0NTk=", "number": 14914, "title": "\"and\", \"or\", etc, should be overloaded if possible", "user": {"login": "lvilnis", "id": 994930, "node_id": "MDQ6VXNlcjk5NDkzMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/994930?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lvilnis", "html_url": "https://github.com/lvilnis", "followers_url": "https://api.github.com/users/lvilnis/followers", "following_url": "https://api.github.com/users/lvilnis/following{/other_user}", "gists_url": "https://api.github.com/users/lvilnis/gists{/gist_id}", "starred_url": "https://api.github.com/users/lvilnis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lvilnis/subscriptions", "organizations_url": "https://api.github.com/users/lvilnis/orgs", "repos_url": "https://api.github.com/users/lvilnis/repos", "events_url": "https://api.github.com/users/lvilnis/events{/privacy}", "received_events_url": "https://api.github.com/users/lvilnis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "alextp", "id": 5061, "node_id": "MDQ6VXNlcjUwNjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alextp", "html_url": "https://github.com/alextp", "followers_url": "https://api.github.com/users/alextp/followers", "following_url": "https://api.github.com/users/alextp/following{/other_user}", "gists_url": "https://api.github.com/users/alextp/gists{/gist_id}", "starred_url": "https://api.github.com/users/alextp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alextp/subscriptions", "organizations_url": "https://api.github.com/users/alextp/orgs", "repos_url": "https://api.github.com/users/alextp/repos", "events_url": "https://api.github.com/users/alextp/events{/privacy}", "received_events_url": "https://api.github.com/users/alextp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "alextp", "id": 5061, "node_id": "MDQ6VXNlcjUwNjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alextp", "html_url": "https://github.com/alextp", "followers_url": "https://api.github.com/users/alextp/followers", "following_url": "https://api.github.com/users/alextp/following{/other_user}", "gists_url": "https://api.github.com/users/alextp/gists{/gist_id}", "starred_url": "https://api.github.com/users/alextp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alextp/subscriptions", "organizations_url": "https://api.github.com/users/alextp/orgs", "repos_url": "https://api.github.com/users/alextp/repos", "events_url": "https://api.github.com/users/alextp/events{/privacy}", "received_events_url": "https://api.github.com/users/alextp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2017-11-27T16:49:40Z", "updated_at": "2017-11-29T18:29:47Z", "closed_at": "2017-11-29T18:29:47Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: OS X 10.13.1</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: Binary (anaconda)</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.1.0</li>\n<li><strong>Python version</strong>: 2.7</li>\n<li><strong>Bazel version (if compiling from source)</strong>: N/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: N/A</li>\n<li><strong>CUDA/cuDNN version</strong>:  N/A</li>\n<li><strong>GPU model and memory</strong>: Intel HD Graphics 630 1536 MB (not used)</li>\n<li><strong>Exact command to reproduce</strong>: N/A</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>It would make code much cleaner if more of Python's binary boolean operations were overloaded for<br>\nTF. I understand this can't be done for \"==\" because of hashmap key problems but \"and\", \"or\", \"^\", \"not\", really as many operations as possible, would be great.</p>\n<h3>Source code / logs</h3>\n<p>Currently:</p>\n<pre><code>def cube_isect(x_m,x_M,y_m,y_M):\n  return tf.logical_or(tf.logical_and(x_m &gt;= y_m, x_m &lt;= y_M), \n                                  tf.logical_and(y_m &gt;= x_m, y_m &lt;= x_M))\n</code></pre>\n<p>Proposed:</p>\n<pre><code>def cube_isect(x_m,x_M,y_m,y_M):\n  return (x_m &gt;= y_m and x_m &lt;= y_M) or (y_m &gt;= x_m and y_m &lt;= x_M)\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): OS X 10.13.1\nTensorFlow installed from (source or binary): Binary (anaconda)\nTensorFlow version (use command below): 1.1.0\nPython version: 2.7\nBazel version (if compiling from source): N/A\nGCC/Compiler version (if compiling from source): N/A\nCUDA/cuDNN version:  N/A\nGPU model and memory: Intel HD Graphics 630 1536 MB (not used)\nExact command to reproduce: N/A\n\nDescribe the problem\nIt would make code much cleaner if more of Python's binary boolean operations were overloaded for\nTF. I understand this can't be done for \"==\" because of hashmap key problems but \"and\", \"or\", \"^\", \"not\", really as many operations as possible, would be great.\nSource code / logs\nCurrently:\ndef cube_isect(x_m,x_M,y_m,y_M):\n  return tf.logical_or(tf.logical_and(x_m >= y_m, x_m <= y_M), \n                                  tf.logical_and(y_m >= x_m, y_m <= x_M))\n\nProposed:\ndef cube_isect(x_m,x_M,y_m,y_M):\n  return (x_m >= y_m and x_m <= y_M) or (y_m >= x_m and y_m <= x_M)", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: OS X 10.13.1\r\n- **TensorFlow installed from (source or binary)**: Binary (anaconda)\r\n- **TensorFlow version (use command below)**: 1.1.0\r\n- **Python version**: 2.7\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**:  N/A\r\n- **GPU model and memory**: Intel HD Graphics 630 1536 MB (not used)\r\n- **Exact command to reproduce**: N/A\r\n\r\n### Describe the problem\r\nIt would make code much cleaner if more of Python's binary boolean operations were overloaded for \r\nTF. I understand this can't be done for \"==\" because of hashmap key problems but \"and\", \"or\", \"^\", \"not\", really as many operations as possible, would be great.\r\n\r\n\r\n### Source code / logs\r\n\r\nCurrently:\r\n```\r\ndef cube_isect(x_m,x_M,y_m,y_M):\r\n  return tf.logical_or(tf.logical_and(x_m >= y_m, x_m <= y_M), \r\n                                  tf.logical_and(y_m >= x_m, y_m <= x_M))\r\n```\r\nProposed:\r\n```\r\ndef cube_isect(x_m,x_M,y_m,y_M):\r\n  return (x_m >= y_m and x_m <= y_M) or (y_m >= x_m and y_m <= x_M)\r\n```\r\n"}