{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/271530655", "html_url": "https://github.com/tensorflow/tensorflow/pull/6615#issuecomment-271530655", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6615", "id": 271530655, "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTUzMDY1NQ==", "user": {"login": "DavidNorman", "id": 606831, "node_id": "MDQ6VXNlcjYwNjgzMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/606831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DavidNorman", "html_url": "https://github.com/DavidNorman", "followers_url": "https://api.github.com/users/DavidNorman/followers", "following_url": "https://api.github.com/users/DavidNorman/following{/other_user}", "gists_url": "https://api.github.com/users/DavidNorman/gists{/gist_id}", "starred_url": "https://api.github.com/users/DavidNorman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DavidNorman/subscriptions", "organizations_url": "https://api.github.com/users/DavidNorman/orgs", "repos_url": "https://api.github.com/users/DavidNorman/repos", "events_url": "https://api.github.com/users/DavidNorman/events{/privacy}", "received_events_url": "https://api.github.com/users/DavidNorman/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-10T09:45:12Z", "updated_at": "2017-01-10T09:45:12Z", "author_association": "CONTRIBUTOR", "body_html": "<p>i can also see that a local run of timeline test is ok.   I can also see that XLA is in the repo, which is good.  I think I shall have to spend some time browsing that code base now.</p>\n<p>Hopefully you don't think that this change has been a big time hole for you.  It has been very useful for me, especially to get a feeling for the process of pushing code into the public repo.  I guess I will have to do more of this in the future.</p>\n<p>It is possible that XLA eliminates the problem that I was trying to solve with this change, although I suspect that it will be useful in general (until the placer is re-written), and also it helped to expose the thing where an explicitly placed constant would still follow its consumer.</p>\n<p>I will, soon, do another merge request for the fix for my other issue (where a tree with a constant value remains on a device even when replaced by a single constant, due to the presence of control edges).</p>", "body_text": "i can also see that a local run of timeline test is ok.   I can also see that XLA is in the repo, which is good.  I think I shall have to spend some time browsing that code base now.\nHopefully you don't think that this change has been a big time hole for you.  It has been very useful for me, especially to get a feeling for the process of pushing code into the public repo.  I guess I will have to do more of this in the future.\nIt is possible that XLA eliminates the problem that I was trying to solve with this change, although I suspect that it will be useful in general (until the placer is re-written), and also it helped to expose the thing where an explicitly placed constant would still follow its consumer.\nI will, soon, do another merge request for the fix for my other issue (where a tree with a constant value remains on a device even when replaced by a single constant, due to the presence of control edges).", "body": "i can also see that a local run of timeline test is ok.   I can also see that XLA is in the repo, which is good.  I think I shall have to spend some time browsing that code base now.  \r\n\r\nHopefully you don't think that this change has been a big time hole for you.  It has been very useful for me, especially to get a feeling for the process of pushing code into the public repo.  I guess I will have to do more of this in the future.\r\n\r\nIt is possible that XLA eliminates the problem that I was trying to solve with this change, although I suspect that it will be useful in general (until the placer is re-written), and also it helped to expose the thing where an explicitly placed constant would still follow its consumer.\r\n\r\nI will, soon, do another merge request for the fix for my other issue (where a tree with a constant value remains on a device even when replaced by a single constant, due to the presence of control edges).\r\n"}