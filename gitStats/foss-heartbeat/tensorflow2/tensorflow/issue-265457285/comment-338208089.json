{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/338208089", "html_url": "https://github.com/tensorflow/tensorflow/issues/13705#issuecomment-338208089", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13705", "id": 338208089, "node_id": "MDEyOklzc3VlQ29tbWVudDMzODIwODA4OQ==", "user": {"login": "Timmmm", "id": 376842, "node_id": "MDQ6VXNlcjM3Njg0Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/376842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Timmmm", "html_url": "https://github.com/Timmmm", "followers_url": "https://api.github.com/users/Timmmm/followers", "following_url": "https://api.github.com/users/Timmmm/following{/other_user}", "gists_url": "https://api.github.com/users/Timmmm/gists{/gist_id}", "starred_url": "https://api.github.com/users/Timmmm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Timmmm/subscriptions", "organizations_url": "https://api.github.com/users/Timmmm/orgs", "repos_url": "https://api.github.com/users/Timmmm/repos", "events_url": "https://api.github.com/users/Timmmm/events{/privacy}", "received_events_url": "https://api.github.com/users/Timmmm/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-20T13:34:07Z", "updated_at": "2017-10-20T13:34:07Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I have the same issue but it happens when I <code>#include &lt;tensorflow/core/framework/op_kernel.h&gt;</code>:</p>\n<pre><code>In file included from ../tensorflow/tensorflow/core/framework/op_kernel.h:23:\nIn file included from ../tensorflow/tensorflow/core/framework/allocator.h:23:\nIn file included from ../tensorflow/tensorflow/core/framework/numeric_types.h:21:\n../tensorflow/third_party/eigen3/unsupported/Eigen/CXX11/Tensor:1:10: fatal error: 'unsupported/Eigen/CXX11/Tensor' file not found\n#include \"unsupported/Eigen/CXX11/Tensor\"\n</code></pre>\n<p>I added <code>-I../tensorflow/third_party/eigen3</code> which allows it to find the <code>Tensor</code> header, but ... that file seems to <code>#include</code> itself??</p>\n<pre><code>$ cd ../tensorflow/third_party/eigen3\n$ ls unsupported/Eigen/CXX11/Tensor\n\n#include \"unsupported/Eigen/CXX11/Tensor\"\n\n#ifdef _WIN32\n#ifndef SLEEP_FUNC_HEADER_GUARD\n#define SLEEP_FUNC_HEADER_GUARD\ninline void sleep(unsigned int seconds) { Sleep(1000*seconds); }\n#endif\n\n// On Windows, Eigen will include Windows.h, which defines various\n// macros that conflict with TensorFlow symbols. Undefine them here to\n// prevent clashes.\n#undef DeleteFile\n#undef ERROR\n#undef LoadLibrary\n#endif  // _WIN32\n</code></pre>\n<p>I don't see how this could ever work. Also that file doesn't match <a href=\"https://bitbucket.org/eigen/eigen/src/d63bd3cb7378d8d7fcbf2c3e5dbf92763f705660/unsupported/Eigen/CXX11/Tensor?at=default&amp;fileviewer=file-view-default\" rel=\"nofollow\">the current <code>Tensor</code> header</a>. In fact it seems like all of the files in <code>third_party/eigen3</code> just mirror the structure of Eigen and <code>#include</code> themselves.</p>\n<p>In 2016 they actually <code>#include</code>d a different directory, e.g.</p>\n<pre><code>$ cd ../tensorflow/third_party/eigen3/\n$ ls Eigen/Core\n\n#include \"eigen-eigen-b4fa9622b809/Eigen/Core\"\n</code></pre>\n<p>But in July 2016 Igor Babuschkin changed them all like this:</p>\n<pre><code>#include \"Eigen/Core\"\n</code></pre>\n<p>Can't see how that is supposed to work given that there is no other copy of Eigen in the source. Am I supposed to have a copy of it on my system? Anyway I guess <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=890531\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ibab\">@ibab</a> would know!</p>", "body_text": "I have the same issue but it happens when I #include <tensorflow/core/framework/op_kernel.h>:\nIn file included from ../tensorflow/tensorflow/core/framework/op_kernel.h:23:\nIn file included from ../tensorflow/tensorflow/core/framework/allocator.h:23:\nIn file included from ../tensorflow/tensorflow/core/framework/numeric_types.h:21:\n../tensorflow/third_party/eigen3/unsupported/Eigen/CXX11/Tensor:1:10: fatal error: 'unsupported/Eigen/CXX11/Tensor' file not found\n#include \"unsupported/Eigen/CXX11/Tensor\"\n\nI added -I../tensorflow/third_party/eigen3 which allows it to find the Tensor header, but ... that file seems to #include itself??\n$ cd ../tensorflow/third_party/eigen3\n$ ls unsupported/Eigen/CXX11/Tensor\n\n#include \"unsupported/Eigen/CXX11/Tensor\"\n\n#ifdef _WIN32\n#ifndef SLEEP_FUNC_HEADER_GUARD\n#define SLEEP_FUNC_HEADER_GUARD\ninline void sleep(unsigned int seconds) { Sleep(1000*seconds); }\n#endif\n\n// On Windows, Eigen will include Windows.h, which defines various\n// macros that conflict with TensorFlow symbols. Undefine them here to\n// prevent clashes.\n#undef DeleteFile\n#undef ERROR\n#undef LoadLibrary\n#endif  // _WIN32\n\nI don't see how this could ever work. Also that file doesn't match the current Tensor header. In fact it seems like all of the files in third_party/eigen3 just mirror the structure of Eigen and #include themselves.\nIn 2016 they actually #included a different directory, e.g.\n$ cd ../tensorflow/third_party/eigen3/\n$ ls Eigen/Core\n\n#include \"eigen-eigen-b4fa9622b809/Eigen/Core\"\n\nBut in July 2016 Igor Babuschkin changed them all like this:\n#include \"Eigen/Core\"\n\nCan't see how that is supposed to work given that there is no other copy of Eigen in the source. Am I supposed to have a copy of it on my system? Anyway I guess @ibab would know!", "body": "I have the same issue but it happens when I `#include <tensorflow/core/framework/op_kernel.h>`:\r\n\r\n```\r\nIn file included from ../tensorflow/tensorflow/core/framework/op_kernel.h:23:\r\nIn file included from ../tensorflow/tensorflow/core/framework/allocator.h:23:\r\nIn file included from ../tensorflow/tensorflow/core/framework/numeric_types.h:21:\r\n../tensorflow/third_party/eigen3/unsupported/Eigen/CXX11/Tensor:1:10: fatal error: 'unsupported/Eigen/CXX11/Tensor' file not found\r\n#include \"unsupported/Eigen/CXX11/Tensor\"\r\n```\r\n\r\nI added `-I../tensorflow/third_party/eigen3` which allows it to find the `Tensor` header, but ... that file seems to `#include` itself??\r\n\r\n```\r\n$ cd ../tensorflow/third_party/eigen3\r\n$ ls unsupported/Eigen/CXX11/Tensor\r\n\r\n#include \"unsupported/Eigen/CXX11/Tensor\"\r\n\r\n#ifdef _WIN32\r\n#ifndef SLEEP_FUNC_HEADER_GUARD\r\n#define SLEEP_FUNC_HEADER_GUARD\r\ninline void sleep(unsigned int seconds) { Sleep(1000*seconds); }\r\n#endif\r\n\r\n// On Windows, Eigen will include Windows.h, which defines various\r\n// macros that conflict with TensorFlow symbols. Undefine them here to\r\n// prevent clashes.\r\n#undef DeleteFile\r\n#undef ERROR\r\n#undef LoadLibrary\r\n#endif  // _WIN32\r\n```\r\n\r\nI don't see how this could ever work. Also that file doesn't match [the current `Tensor` header](https://bitbucket.org/eigen/eigen/src/d63bd3cb7378d8d7fcbf2c3e5dbf92763f705660/unsupported/Eigen/CXX11/Tensor?at=default&fileviewer=file-view-default). In fact it seems like all of the files in `third_party/eigen3` just mirror the structure of Eigen and `#include` themselves.\r\n\r\nIn 2016 they actually `#include`d a different directory, e.g.\r\n\r\n```\r\n$ cd ../tensorflow/third_party/eigen3/\r\n$ ls Eigen/Core\r\n\r\n#include \"eigen-eigen-b4fa9622b809/Eigen/Core\"\r\n```\r\n\r\nBut in July 2016 Igor Babuschkin changed them all like this:\r\n\r\n```\r\n#include \"Eigen/Core\"\r\n```\r\n\r\nCan't see how that is supposed to work given that there is no other copy of Eigen in the source. Am I supposed to have a copy of it on my system? Anyway I guess @ibab would know!"}