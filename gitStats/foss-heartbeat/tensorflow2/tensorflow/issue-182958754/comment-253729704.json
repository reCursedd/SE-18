{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/253729704", "html_url": "https://github.com/tensorflow/tensorflow/issues/4960#issuecomment-253729704", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4960", "id": 253729704, "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzcyOTcwNA==", "user": {"login": "jart", "id": 49262, "node_id": "MDQ6VXNlcjQ5MjYy", "avatar_url": "https://avatars1.githubusercontent.com/u/49262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jart", "html_url": "https://github.com/jart", "followers_url": "https://api.github.com/users/jart/followers", "following_url": "https://api.github.com/users/jart/following{/other_user}", "gists_url": "https://api.github.com/users/jart/gists{/gist_id}", "starred_url": "https://api.github.com/users/jart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jart/subscriptions", "organizations_url": "https://api.github.com/users/jart/orgs", "repos_url": "https://api.github.com/users/jart/repos", "events_url": "https://api.github.com/users/jart/events{/privacy}", "received_events_url": "https://api.github.com/users/jart/received_events", "type": "User", "site_admin": false}, "created_at": "2016-10-14T07:32:33Z", "updated_at": "2016-10-14T07:32:33Z", "author_association": "MEMBER", "body_html": "<p>It seems like Red Hat might not have fully overcome this issue. I see an open bug on their issue tracker which seems to pertain to exactly this. <a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=1305406\" rel=\"nofollow\">https://bugzilla.redhat.com/show_bug.cgi?id=1305406</a> It has recent activity.</p>\n<p>Do me a favor. This is just a crazy hunch I have. But if you were to use <a href=\"http://goog-perftools.sourceforge.net/doc/tcmalloc.html\" rel=\"nofollow\">tcmalloc</a>, either by adding a Bazel rule for it in the BUILD file, or LD_PRELOAD'ing it, then does the problem go away? That actually might work as a workaround. And you'll get a much better heap allocator in the process.</p>\n<p>We also have a similar issue <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"159833096\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/2815\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/2815/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/2815\">#2815</a>.</p>", "body_text": "It seems like Red Hat might not have fully overcome this issue. I see an open bug on their issue tracker which seems to pertain to exactly this. https://bugzilla.redhat.com/show_bug.cgi?id=1305406 It has recent activity.\nDo me a favor. This is just a crazy hunch I have. But if you were to use tcmalloc, either by adding a Bazel rule for it in the BUILD file, or LD_PRELOAD'ing it, then does the problem go away? That actually might work as a workaround. And you'll get a much better heap allocator in the process.\nWe also have a similar issue #2815.", "body": "It seems like Red Hat might not have fully overcome this issue. I see an open bug on their issue tracker which seems to pertain to exactly this. https://bugzilla.redhat.com/show_bug.cgi?id=1305406 It has recent activity.\n\nDo me a favor. This is just a crazy hunch I have. But if you were to use [tcmalloc](http://goog-perftools.sourceforge.net/doc/tcmalloc.html), either by adding a Bazel rule for it in the BUILD file, or LD_PRELOAD'ing it, then does the problem go away? That actually might work as a workaround. And you'll get a much better heap allocator in the process.\n\nWe also have a similar issue #2815.\n"}