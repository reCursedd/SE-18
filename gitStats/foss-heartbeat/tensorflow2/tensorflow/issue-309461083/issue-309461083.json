{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18058", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18058/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18058/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18058/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18058", "id": 309461083, "node_id": "MDU6SXNzdWUzMDk0NjEwODM=", "number": 18058, "title": "Large multinomial sampling on GPU causes OOM", "user": {"login": "mbarnes1", "id": 6663112, "node_id": "MDQ6VXNlcjY2NjMxMTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/6663112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbarnes1", "html_url": "https://github.com/mbarnes1", "followers_url": "https://api.github.com/users/mbarnes1/followers", "following_url": "https://api.github.com/users/mbarnes1/following{/other_user}", "gists_url": "https://api.github.com/users/mbarnes1/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbarnes1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbarnes1/subscriptions", "organizations_url": "https://api.github.com/users/mbarnes1/orgs", "repos_url": "https://api.github.com/users/mbarnes1/repos", "events_url": "https://api.github.com/users/mbarnes1/events{/privacy}", "received_events_url": "https://api.github.com/users/mbarnes1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "cy89", "id": 29663194, "node_id": "MDQ6VXNlcjI5NjYzMTk0", "avatar_url": "https://avatars0.githubusercontent.com/u/29663194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cy89", "html_url": "https://github.com/cy89", "followers_url": "https://api.github.com/users/cy89/followers", "following_url": "https://api.github.com/users/cy89/following{/other_user}", "gists_url": "https://api.github.com/users/cy89/gists{/gist_id}", "starred_url": "https://api.github.com/users/cy89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cy89/subscriptions", "organizations_url": "https://api.github.com/users/cy89/orgs", "repos_url": "https://api.github.com/users/cy89/repos", "events_url": "https://api.github.com/users/cy89/events{/privacy}", "received_events_url": "https://api.github.com/users/cy89/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cy89", "id": 29663194, "node_id": "MDQ6VXNlcjI5NjYzMTk0", "avatar_url": "https://avatars0.githubusercontent.com/u/29663194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cy89", "html_url": "https://github.com/cy89", "followers_url": "https://api.github.com/users/cy89/followers", "following_url": "https://api.github.com/users/cy89/following{/other_user}", "gists_url": "https://api.github.com/users/cy89/gists{/gist_id}", "starred_url": "https://api.github.com/users/cy89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cy89/subscriptions", "organizations_url": "https://api.github.com/users/cy89/orgs", "repos_url": "https://api.github.com/users/cy89/repos", "events_url": "https://api.github.com/users/cy89/events{/privacy}", "received_events_url": "https://api.github.com/users/cy89/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2018-03-28T17:31:40Z", "updated_at": "2018-11-11T18:39:33Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>Sampling m samples from <code>tf.multinomial</code> with support n allocates an unnecessarily large n x m tensor when running on a GPU. For large n and m, this causes out of memory errors. It should be possible to sample from a multinomial distribution without allocating such a large tensor (output tensor is only b x m, where b is the batch size).</p>\n<h3>Example and traceback:</h3>\n<pre><code>sample_indices = tf.multinomial(tf.ones([1, 1e6]), 10000, output_dtype=tf.int32)  # sample_indices has shape [1 x 1e4]\nwith tf.Session() as sess:\n    output = sess.run([sample_indices])\n</code></pre>\n<p>Traceback:</p>\n<blockquote>\n<p>ResourceExhaustedError (see above for traceback): OOM when allocating tensor with shape[1,10000,1000000] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc<br>\n[[Node: multinomial/Multinomial = Multinomial[T=DT_FLOAT, output_dtype=DT_INT32, seed=0, seed2=0,<br>\n_device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](ones, multinomial/Multinomial/num_samples)]]</p>\n</blockquote>\n<hr>\n<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: No</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:  Springdale LInux 7.4 (Redhat)</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: Binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.6.0</li>\n<li><strong>Python version</strong>: 2.7.5</li>\n<li><strong>Bazel version (if compiling from source)</strong>: N/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: N/A</li>\n<li><strong>CUDA/cuDNN version</strong>: CUDA 9.0, cuDNN 7.0.5</li>\n<li><strong>GPU model and memory</strong>: TITAN X (Pascal) 12GB</li>\n<li><strong>Exact command to reproduce</strong>: (see above)</li>\n</ul>", "body_text": "Sampling m samples from tf.multinomial with support n allocates an unnecessarily large n x m tensor when running on a GPU. For large n and m, this causes out of memory errors. It should be possible to sample from a multinomial distribution without allocating such a large tensor (output tensor is only b x m, where b is the batch size).\nExample and traceback:\nsample_indices = tf.multinomial(tf.ones([1, 1e6]), 10000, output_dtype=tf.int32)  # sample_indices has shape [1 x 1e4]\nwith tf.Session() as sess:\n    output = sess.run([sample_indices])\n\nTraceback:\n\nResourceExhaustedError (see above for traceback): OOM when allocating tensor with shape[1,10000,1000000] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc\n[[Node: multinomial/Multinomial = Multinomial[T=DT_FLOAT, output_dtype=DT_INT32, seed=0, seed2=0,\n_device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](ones, multinomial/Multinomial/num_samples)]]\n\n\nSystem information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): No\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):  Springdale LInux 7.4 (Redhat)\nTensorFlow installed from (source or binary): Binary\nTensorFlow version (use command below): 1.6.0\nPython version: 2.7.5\nBazel version (if compiling from source): N/A\nGCC/Compiler version (if compiling from source): N/A\nCUDA/cuDNN version: CUDA 9.0, cuDNN 7.0.5\nGPU model and memory: TITAN X (Pascal) 12GB\nExact command to reproduce: (see above)", "body": "Sampling m samples from `tf.multinomial` with support n allocates an unnecessarily large n x m tensor when running on a GPU. For large n and m, this causes out of memory errors. It should be possible to sample from a multinomial distribution without allocating such a large tensor (output tensor is only b x m, where b is the batch size).\r\n\r\n### Example and traceback:\r\n```\r\nsample_indices = tf.multinomial(tf.ones([1, 1e6]), 10000, output_dtype=tf.int32)  # sample_indices has shape [1 x 1e4]\r\nwith tf.Session() as sess:\r\n    output = sess.run([sample_indices])\r\n```\r\n\r\nTraceback:\r\n\r\n> ResourceExhaustedError (see above for traceback): OOM when allocating tensor with shape[1,10000,1000000] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc\r\n         [[Node: multinomial/Multinomial = Multinomial[T=DT_FLOAT, output_dtype=DT_INT32, seed=0, seed2=0,\r\n_device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](ones, multinomial/Multinomial/num_samples)]]\r\n\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:  Springdale LInux 7.4 (Redhat)\r\n- **TensorFlow installed from (source or binary)**: Binary\r\n- **TensorFlow version (use command below)**: 1.6.0\r\n- **Python version**: 2.7.5\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: CUDA 9.0, cuDNN 7.0.5\r\n- **GPU model and memory**: TITAN X (Pascal) 12GB\r\n- **Exact command to reproduce**: (see above)"}