{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23815", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23815/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23815/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23815/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/23815", "id": 381814645, "node_id": "MDU6SXNzdWUzODE4MTQ2NDU=", "number": 23815, "title": "TensorFlow restore model Key Variable not found in checkpoint", "user": {"login": "631068264", "id": 8144089, "node_id": "MDQ6VXNlcjgxNDQwODk=", "avatar_url": "https://avatars2.githubusercontent.com/u/8144089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/631068264", "html_url": "https://github.com/631068264", "followers_url": "https://api.github.com/users/631068264/followers", "following_url": "https://api.github.com/users/631068264/following{/other_user}", "gists_url": "https://api.github.com/users/631068264/gists{/gist_id}", "starred_url": "https://api.github.com/users/631068264/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/631068264/subscriptions", "organizations_url": "https://api.github.com/users/631068264/orgs", "repos_url": "https://api.github.com/users/631068264/repos", "events_url": "https://api.github.com/users/631068264/events{/privacy}", "received_events_url": "https://api.github.com/users/631068264/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}], "state": "open", "locked": false, "assignee": {"login": "karmel", "id": 667809, "node_id": "MDQ6VXNlcjY2NzgwOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/667809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karmel", "html_url": "https://github.com/karmel", "followers_url": "https://api.github.com/users/karmel/followers", "following_url": "https://api.github.com/users/karmel/following{/other_user}", "gists_url": "https://api.github.com/users/karmel/gists{/gist_id}", "starred_url": "https://api.github.com/users/karmel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karmel/subscriptions", "organizations_url": "https://api.github.com/users/karmel/orgs", "repos_url": "https://api.github.com/users/karmel/repos", "events_url": "https://api.github.com/users/karmel/events{/privacy}", "received_events_url": "https://api.github.com/users/karmel/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "karmel", "id": 667809, "node_id": "MDQ6VXNlcjY2NzgwOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/667809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karmel", "html_url": "https://github.com/karmel", "followers_url": "https://api.github.com/users/karmel/followers", "following_url": "https://api.github.com/users/karmel/following{/other_user}", "gists_url": "https://api.github.com/users/karmel/gists{/gist_id}", "starred_url": "https://api.github.com/users/karmel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karmel/subscriptions", "organizations_url": "https://api.github.com/users/karmel/orgs", "repos_url": "https://api.github.com/users/karmel/repos", "events_url": "https://api.github.com/users/karmel/events{/privacy}", "received_events_url": "https://api.github.com/users/karmel/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-11-17T01:36:36Z", "updated_at": "2018-11-21T17:21:44Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>OSX10.14.1  py3.6  tf1.8</p>\n<p>I'm a tensorflow beginner.I try to train a model for mnist. When I restore the model I get Error.</p>\n<pre><code>from datetime import datetime\n\nimport tensorflow as tf\nfrom tensorflow.examples.tutorials.mnist import input_data\n\nmnist = input_data.read_data_sets(\"MNIST_data/\", one_hot=True)\nsave_model_path = 'mnist_model/model.ckpt'\n\n\ndef train():\n    learning_rate = 0.05\n    batch_size = 100\n    max_epochs = 100\n    num_of_batch = int(mnist.train.num_examples / batch_size)\n    now = datetime.utcnow().strftime(\"%Y%m%d%H%M%S\")\n\n    X = tf.placeholder(tf.float32, shape=[None, 784], name='X')\n    y = tf.placeholder(tf.float32, shape=[None, 10], name='y')\n    print(X.name, y.name)\n\n    W = tf.get_variable(shape=[784, 10], name='weight')\n    b = tf.get_variable(initializer=tf.zeros([10]), name='bais')\n    tf.summary.histogram(\"weights\", W)\n    tf.summary.histogram(\"biases\", b)\n\n    with tf.name_scope('pred'):\n        y_pred = tf.nn.softmax(tf.matmul(X, W) + b, name='predict')\n        print(y_pred.name)\n\n    with tf.name_scope('loss'):\n        loss = tf.reduce_mean(tf.nn.softmax_cross_entropy_with_logits(labels=y, logits=y_pred))\n        tf.summary.scalar('loss', loss)\n        optimizer = tf.train.AdamOptimizer(learning_rate=learning_rate).minimize(loss)\n\n    with tf.name_scope('acc'):\n        correct_prediction = tf.equal(tf.argmax(y_pred, 1), tf.argmax(y, 1))\n        accuracy = tf.reduce_mean(tf.cast(correct_prediction, tf.float32), name='acc')\n        print(accuracy.name)\n\n    merged_summary_op = tf.summary.merge_all()\n    init_op = tf.global_variables_initializer()\n\n    saver = tf.train.Saver()\n\n    with tf.Session() as sess:\n        sess.run(init_op)\n\n        loss_avg = 0\n        writer = tf.summary.FileWriter('mnist/{}'.format(now), sess.graph)\n        for epoch in range(max_epochs):\n            for i in range(num_of_batch):\n                batch_x, batch_y = mnist.train.next_batch(batch_size)\n                summary_str, _, l = sess.run([merged_summary_op, optimizer, loss], feed_dict={X: batch_x, y: batch_y})\n                loss_avg += l\n                global_step = epoch * num_of_batch + i\n                writer.add_summary(summary_str, global_step)\n\n                if global_step % 100 == 0:\n                    print('Epoch {}: {} save model'.format(epoch, i))\n                    # save model in halfway\n                    saver.save(sess, save_model_path, global_step=global_step)\n\n            loss_avg /= num_of_batch\n            print('Epoch {}: Loss {}'.format(epoch, loss_avg))\n\n        print(sess.run(accuracy, feed_dict={X: mnist.test.images, y: mnist.test.labels}))\n        saver.save(sess, save_model_path)\n\n\ndef predict(import_from_meta=False):\n    if import_from_meta:\n        meta_path = 'mnist_model/model.ckpt.meta'\n        checkpoint_path = 'mnist_model'\n    else:\n        # stupid var WTF ValueError: No variables to save\n        _ = tf.Variable(0)\n        saver = tf.train.Saver()\n\n    with tf.Session() as sess:\n        sess.run(tf.global_variables_initializer())\n        if import_from_meta:\n            saver = tf.train.import_meta_graph(meta_path)\n            saver.restore(sess, tf.train.latest_checkpoint(checkpoint_path))\n        else:\n            saver.restore(sess, save_model_path)\n        graph = tf.get_default_graph()\n        X = graph.get_tensor_by_name('X:0')\n        y = graph.get_tensor_by_name('y:0')\n        accuracy = graph.get_tensor_by_name('acc/acc:0')\n        print(sess.run(accuracy, feed_dict={X: mnist.test.images, y: mnist.test.labels}))\n\n        pred = graph.get_tensor_by_name('pred/predict:0')\n        import matplotlib.pyplot as plt\n        i = 90\n        img_orign = mnist.train.images[i]\n        img = img_orign.reshape((28, 28))\n        plt.imshow(img, cmap='gray')\n        plt.title(mnist.train.labels[i])\n        plt.show()\n        a = sess.run(pred, feed_dict={X: img_orign.reshape(-1, 784)})\n        print(a.shape)\n        import numpy as np\n        print(np.argmax(a))\n\n\ndef check_ckpt():\n    from tensorflow.python.tools import inspect_checkpoint as chkp\n    chkp.print_tensors_in_checkpoint_file(save_model_path, tensor_name='', all_tensors=True)\n\n\nif __name__ == '__main__':\n    # train()\n    predict(import_from_meta=False)\n    # check_ckpt()\n</code></pre>\n<p>use <code>predict(import_from_meta=False)</code></p>\n<p>Error:</p>\n<pre><code>WARNING:tensorflow:From /Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/contrib/learn/python/learn/datasets/mnist.py:290: DataSet.__init__ (from tensorflow.contrib.learn.python.learn.datasets.mnist) is deprecated and will be removed in a future version.\nInstructions for updating:\nPlease use alternatives such as official/mnist/dataset.py from tensorflow/models.\n2018-11-08 16:53:40.482921: W tensorflow/core/framework/op_kernel.cc:1318] OP_REQUIRES failed at save_restore_v2_ops.cc:184 : Not found: Key Variable not found in checkpoint\nTraceback (most recent call last):\n  File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1322, in _do_call\n    return fn(*args)\n  File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1307, in _run_fn\n    options, feed_dict, fetch_list, target_list, run_metadata)\n  File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1409, in _call_tf_sessionrun\n    run_metadata)\ntensorflow.python.framework.errors_impl.NotFoundError: Key Variable not found in checkpoint\n\t [[Node: save/RestoreV2 = RestoreV2[dtypes=[DT_INT32], _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](_arg_save/Const_0_0, save/RestoreV2/tensor_names, save/RestoreV2/shape_and_slices)]]\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/Users/wyx/project/learn-sktf/tf/mnist_clf.py\", line 115, in &lt;module&gt;\n    predict(import_from_meta=False)\n  File \"/Users/wyx/project/learn-sktf/tf/mnist_clf.py\", line 92, in predict\n    saver.restore(sess, save_model_path)\n  File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/training/saver.py\", line 1802, in restore\n    {self.saver_def.filename_tensor_name: save_path})\n  File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 900, in run\n    run_metadata_ptr)\n  File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1135, in _run\n    feed_dict_tensor, options, run_metadata)\n  File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1316, in _do_run\n    run_metadata)\n  File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1335, in _do_call\n    raise type(e)(node_def, op, message)\ntensorflow.python.framework.errors_impl.NotFoundError: Key Variable not found in checkpoint\n\t [[Node: save/RestoreV2 = RestoreV2[dtypes=[DT_INT32], _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](_arg_save/Const_0_0, save/RestoreV2/tensor_names, save/RestoreV2/shape_and_slices)]]\n\nCaused by op 'save/RestoreV2', defined at:\n  File \"/Users/wyx/project/learn-sktf/tf/mnist_clf.py\", line 115, in &lt;module&gt;\n    predict(import_from_meta=False)\n  File \"/Users/wyx/project/learn-sktf/tf/mnist_clf.py\", line 84, in predict\n    saver = tf.train.Saver()\n  File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/training/saver.py\", line 1338, in __init__\n    self.build()\n  File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/training/saver.py\", line 1347, in build\n    self._build(self._filename, build_save=True, build_restore=True)\n  File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/training/saver.py\", line 1384, in _build\n    build_save=build_save, build_restore=build_restore)\n  File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/training/saver.py\", line 835, in _build_internal\n    restore_sequentially, reshape)\n  File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/training/saver.py\", line 472, in _AddRestoreOps\n    restore_sequentially)\n  File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/training/saver.py\", line 886, in bulk_restore\n    return io_ops.restore_v2(filename_tensor, names, slices, dtypes)\n  File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/ops/gen_io_ops.py\", line 1463, in restore_v2\n    shape_and_slices=shape_and_slices, dtypes=dtypes, name=name)\n  File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/framework/op_def_library.py\", line 787, in _apply_op_helper\n    op_def=op_def)\n  File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 3392, in create_op\n    op_def=op_def)\n  File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 1718, in __init__\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\n\nNotFoundError (see above for traceback): Key Variable not found in checkpoint\n\t [[Node: save/RestoreV2 = RestoreV2[dtypes=[DT_INT32], _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](_arg_save/Const_0_0, save/RestoreV2/tensor_names, save/RestoreV2/shape_and_slices)]]\n</code></pre>\n<p>It's very strange that when I use <code>predict(import_from_meta=True)</code> I can get a <strong>right answer</strong>.</p>\n<p>Then I try <code>check_ckpt()</code> to <a href=\"https://www.tensorflow.org/guide/saved_model#inspect_variables_in_a_checkpoint\" rel=\"nofollow\">inspect variables in a checkpoint</a>. I can't find any right tensor_name . That's so funny and <code>name_scope</code> just like a joke.</p>\n<pre><code>tensor_name:  bais\n[-24.933702    1.7660792   3.697866  -14.221888    8.967291   42.149403\n  -3.2693458  23.876926  -30.643892   -3.7861202]\ntensor_name:  bais/Adam\n[ 3.1726879e-07 -5.2043208e-07  3.4227469e-05  2.5119303e-07\n -2.0110610e-04  1.8493415e-04 -3.6275055e-06 -1.4343520e-04\n -7.2765622e-05  2.0172486e-04]\ntensor_name:  bais/Adam_1\n[5.2586905e-08 8.9204484e-08 1.5440051e-07 2.9412612e-07 2.4380788e-07\n 3.4676964e-07 8.7062219e-08 1.8839150e-07 4.3878950e-07 4.2466107e-07]\ntensor_name:  loss/beta1_power\n0.0\ntensor_name:  loss/beta2_power\n1.2639432e-24\ntensor_name:  weight\n[[-0.03386476  0.03485525 -0.03267809 ... -0.08548199  0.00565728\n  -0.01887459]\n [ 0.00370622  0.08523928  0.05811391 ... -0.07838921  0.05987743\n   0.074329  ]\n [ 0.0180116   0.04400793 -0.0260816  ...  0.00807328  0.06537797\n  -0.07446742]\n ...\n [-0.00665552 -0.03390152 -0.03889231 ... -0.01871967 -0.05968629\n   0.07207178]\n [ 0.01317277  0.03459686 -0.03268962 ...  0.07082433  0.03290742\n   0.03172391]\n [-0.04514085 -0.03013236  0.01006595 ...  0.01906221  0.02611361\n   0.04348358]]\ntensor_name:  weight/Adam\n[[0. 0. 0. ... 0. 0. 0.]\n [0. 0. 0. ... 0. 0. 0.]\n [0. 0. 0. ... 0. 0. 0.]\n ...\n [0. 0. 0. ... 0. 0. 0.]\n [0. 0. 0. ... 0. 0. 0.]\n [0. 0. 0. ... 0. 0. 0.]]\ntensor_name:  weight/Adam_1\n[[0. 0. 0. ... 0. 0. 0.]\n [0. 0. 0. ... 0. 0. 0.]\n [0. 0. 0. ... 0. 0. 0.]\n ...\n [0. 0. 0. ... 0. 0. 0.]\n [0. 0. 0. ... 0. 0. 0.]\n [0. 0. 0. ... 0. 0. 0.]]\n\nProcess finished with exit code 0\n</code></pre>\n<p>So what's wrong in my code?  and why must create variables before <code>tf.train.Saver</code> when we just want to restore a model?</p>", "body_text": "OSX10.14.1  py3.6  tf1.8\nI'm a tensorflow beginner.I try to train a model for mnist. When I restore the model I get Error.\nfrom datetime import datetime\n\nimport tensorflow as tf\nfrom tensorflow.examples.tutorials.mnist import input_data\n\nmnist = input_data.read_data_sets(\"MNIST_data/\", one_hot=True)\nsave_model_path = 'mnist_model/model.ckpt'\n\n\ndef train():\n    learning_rate = 0.05\n    batch_size = 100\n    max_epochs = 100\n    num_of_batch = int(mnist.train.num_examples / batch_size)\n    now = datetime.utcnow().strftime(\"%Y%m%d%H%M%S\")\n\n    X = tf.placeholder(tf.float32, shape=[None, 784], name='X')\n    y = tf.placeholder(tf.float32, shape=[None, 10], name='y')\n    print(X.name, y.name)\n\n    W = tf.get_variable(shape=[784, 10], name='weight')\n    b = tf.get_variable(initializer=tf.zeros([10]), name='bais')\n    tf.summary.histogram(\"weights\", W)\n    tf.summary.histogram(\"biases\", b)\n\n    with tf.name_scope('pred'):\n        y_pred = tf.nn.softmax(tf.matmul(X, W) + b, name='predict')\n        print(y_pred.name)\n\n    with tf.name_scope('loss'):\n        loss = tf.reduce_mean(tf.nn.softmax_cross_entropy_with_logits(labels=y, logits=y_pred))\n        tf.summary.scalar('loss', loss)\n        optimizer = tf.train.AdamOptimizer(learning_rate=learning_rate).minimize(loss)\n\n    with tf.name_scope('acc'):\n        correct_prediction = tf.equal(tf.argmax(y_pred, 1), tf.argmax(y, 1))\n        accuracy = tf.reduce_mean(tf.cast(correct_prediction, tf.float32), name='acc')\n        print(accuracy.name)\n\n    merged_summary_op = tf.summary.merge_all()\n    init_op = tf.global_variables_initializer()\n\n    saver = tf.train.Saver()\n\n    with tf.Session() as sess:\n        sess.run(init_op)\n\n        loss_avg = 0\n        writer = tf.summary.FileWriter('mnist/{}'.format(now), sess.graph)\n        for epoch in range(max_epochs):\n            for i in range(num_of_batch):\n                batch_x, batch_y = mnist.train.next_batch(batch_size)\n                summary_str, _, l = sess.run([merged_summary_op, optimizer, loss], feed_dict={X: batch_x, y: batch_y})\n                loss_avg += l\n                global_step = epoch * num_of_batch + i\n                writer.add_summary(summary_str, global_step)\n\n                if global_step % 100 == 0:\n                    print('Epoch {}: {} save model'.format(epoch, i))\n                    # save model in halfway\n                    saver.save(sess, save_model_path, global_step=global_step)\n\n            loss_avg /= num_of_batch\n            print('Epoch {}: Loss {}'.format(epoch, loss_avg))\n\n        print(sess.run(accuracy, feed_dict={X: mnist.test.images, y: mnist.test.labels}))\n        saver.save(sess, save_model_path)\n\n\ndef predict(import_from_meta=False):\n    if import_from_meta:\n        meta_path = 'mnist_model/model.ckpt.meta'\n        checkpoint_path = 'mnist_model'\n    else:\n        # stupid var WTF ValueError: No variables to save\n        _ = tf.Variable(0)\n        saver = tf.train.Saver()\n\n    with tf.Session() as sess:\n        sess.run(tf.global_variables_initializer())\n        if import_from_meta:\n            saver = tf.train.import_meta_graph(meta_path)\n            saver.restore(sess, tf.train.latest_checkpoint(checkpoint_path))\n        else:\n            saver.restore(sess, save_model_path)\n        graph = tf.get_default_graph()\n        X = graph.get_tensor_by_name('X:0')\n        y = graph.get_tensor_by_name('y:0')\n        accuracy = graph.get_tensor_by_name('acc/acc:0')\n        print(sess.run(accuracy, feed_dict={X: mnist.test.images, y: mnist.test.labels}))\n\n        pred = graph.get_tensor_by_name('pred/predict:0')\n        import matplotlib.pyplot as plt\n        i = 90\n        img_orign = mnist.train.images[i]\n        img = img_orign.reshape((28, 28))\n        plt.imshow(img, cmap='gray')\n        plt.title(mnist.train.labels[i])\n        plt.show()\n        a = sess.run(pred, feed_dict={X: img_orign.reshape(-1, 784)})\n        print(a.shape)\n        import numpy as np\n        print(np.argmax(a))\n\n\ndef check_ckpt():\n    from tensorflow.python.tools import inspect_checkpoint as chkp\n    chkp.print_tensors_in_checkpoint_file(save_model_path, tensor_name='', all_tensors=True)\n\n\nif __name__ == '__main__':\n    # train()\n    predict(import_from_meta=False)\n    # check_ckpt()\n\nuse predict(import_from_meta=False)\nError:\nWARNING:tensorflow:From /Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/contrib/learn/python/learn/datasets/mnist.py:290: DataSet.__init__ (from tensorflow.contrib.learn.python.learn.datasets.mnist) is deprecated and will be removed in a future version.\nInstructions for updating:\nPlease use alternatives such as official/mnist/dataset.py from tensorflow/models.\n2018-11-08 16:53:40.482921: W tensorflow/core/framework/op_kernel.cc:1318] OP_REQUIRES failed at save_restore_v2_ops.cc:184 : Not found: Key Variable not found in checkpoint\nTraceback (most recent call last):\n  File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1322, in _do_call\n    return fn(*args)\n  File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1307, in _run_fn\n    options, feed_dict, fetch_list, target_list, run_metadata)\n  File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1409, in _call_tf_sessionrun\n    run_metadata)\ntensorflow.python.framework.errors_impl.NotFoundError: Key Variable not found in checkpoint\n\t [[Node: save/RestoreV2 = RestoreV2[dtypes=[DT_INT32], _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](_arg_save/Const_0_0, save/RestoreV2/tensor_names, save/RestoreV2/shape_and_slices)]]\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/Users/wyx/project/learn-sktf/tf/mnist_clf.py\", line 115, in <module>\n    predict(import_from_meta=False)\n  File \"/Users/wyx/project/learn-sktf/tf/mnist_clf.py\", line 92, in predict\n    saver.restore(sess, save_model_path)\n  File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/training/saver.py\", line 1802, in restore\n    {self.saver_def.filename_tensor_name: save_path})\n  File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 900, in run\n    run_metadata_ptr)\n  File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1135, in _run\n    feed_dict_tensor, options, run_metadata)\n  File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1316, in _do_run\n    run_metadata)\n  File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1335, in _do_call\n    raise type(e)(node_def, op, message)\ntensorflow.python.framework.errors_impl.NotFoundError: Key Variable not found in checkpoint\n\t [[Node: save/RestoreV2 = RestoreV2[dtypes=[DT_INT32], _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](_arg_save/Const_0_0, save/RestoreV2/tensor_names, save/RestoreV2/shape_and_slices)]]\n\nCaused by op 'save/RestoreV2', defined at:\n  File \"/Users/wyx/project/learn-sktf/tf/mnist_clf.py\", line 115, in <module>\n    predict(import_from_meta=False)\n  File \"/Users/wyx/project/learn-sktf/tf/mnist_clf.py\", line 84, in predict\n    saver = tf.train.Saver()\n  File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/training/saver.py\", line 1338, in __init__\n    self.build()\n  File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/training/saver.py\", line 1347, in build\n    self._build(self._filename, build_save=True, build_restore=True)\n  File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/training/saver.py\", line 1384, in _build\n    build_save=build_save, build_restore=build_restore)\n  File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/training/saver.py\", line 835, in _build_internal\n    restore_sequentially, reshape)\n  File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/training/saver.py\", line 472, in _AddRestoreOps\n    restore_sequentially)\n  File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/training/saver.py\", line 886, in bulk_restore\n    return io_ops.restore_v2(filename_tensor, names, slices, dtypes)\n  File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/ops/gen_io_ops.py\", line 1463, in restore_v2\n    shape_and_slices=shape_and_slices, dtypes=dtypes, name=name)\n  File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/framework/op_def_library.py\", line 787, in _apply_op_helper\n    op_def=op_def)\n  File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 3392, in create_op\n    op_def=op_def)\n  File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 1718, in __init__\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\n\nNotFoundError (see above for traceback): Key Variable not found in checkpoint\n\t [[Node: save/RestoreV2 = RestoreV2[dtypes=[DT_INT32], _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](_arg_save/Const_0_0, save/RestoreV2/tensor_names, save/RestoreV2/shape_and_slices)]]\n\nIt's very strange that when I use predict(import_from_meta=True) I can get a right answer.\nThen I try check_ckpt() to inspect variables in a checkpoint. I can't find any right tensor_name . That's so funny and name_scope just like a joke.\ntensor_name:  bais\n[-24.933702    1.7660792   3.697866  -14.221888    8.967291   42.149403\n  -3.2693458  23.876926  -30.643892   -3.7861202]\ntensor_name:  bais/Adam\n[ 3.1726879e-07 -5.2043208e-07  3.4227469e-05  2.5119303e-07\n -2.0110610e-04  1.8493415e-04 -3.6275055e-06 -1.4343520e-04\n -7.2765622e-05  2.0172486e-04]\ntensor_name:  bais/Adam_1\n[5.2586905e-08 8.9204484e-08 1.5440051e-07 2.9412612e-07 2.4380788e-07\n 3.4676964e-07 8.7062219e-08 1.8839150e-07 4.3878950e-07 4.2466107e-07]\ntensor_name:  loss/beta1_power\n0.0\ntensor_name:  loss/beta2_power\n1.2639432e-24\ntensor_name:  weight\n[[-0.03386476  0.03485525 -0.03267809 ... -0.08548199  0.00565728\n  -0.01887459]\n [ 0.00370622  0.08523928  0.05811391 ... -0.07838921  0.05987743\n   0.074329  ]\n [ 0.0180116   0.04400793 -0.0260816  ...  0.00807328  0.06537797\n  -0.07446742]\n ...\n [-0.00665552 -0.03390152 -0.03889231 ... -0.01871967 -0.05968629\n   0.07207178]\n [ 0.01317277  0.03459686 -0.03268962 ...  0.07082433  0.03290742\n   0.03172391]\n [-0.04514085 -0.03013236  0.01006595 ...  0.01906221  0.02611361\n   0.04348358]]\ntensor_name:  weight/Adam\n[[0. 0. 0. ... 0. 0. 0.]\n [0. 0. 0. ... 0. 0. 0.]\n [0. 0. 0. ... 0. 0. 0.]\n ...\n [0. 0. 0. ... 0. 0. 0.]\n [0. 0. 0. ... 0. 0. 0.]\n [0. 0. 0. ... 0. 0. 0.]]\ntensor_name:  weight/Adam_1\n[[0. 0. 0. ... 0. 0. 0.]\n [0. 0. 0. ... 0. 0. 0.]\n [0. 0. 0. ... 0. 0. 0.]\n ...\n [0. 0. 0. ... 0. 0. 0.]\n [0. 0. 0. ... 0. 0. 0.]\n [0. 0. 0. ... 0. 0. 0.]]\n\nProcess finished with exit code 0\n\nSo what's wrong in my code?  and why must create variables before tf.train.Saver when we just want to restore a model?", "body": "OSX10.14.1  py3.6  tf1.8\r\n\r\nI'm a tensorflow beginner.I try to train a model for mnist. When I restore the model I get Error.\r\n\r\n    from datetime import datetime\r\n    \r\n    import tensorflow as tf\r\n    from tensorflow.examples.tutorials.mnist import input_data\r\n    \r\n    mnist = input_data.read_data_sets(\"MNIST_data/\", one_hot=True)\r\n    save_model_path = 'mnist_model/model.ckpt'\r\n    \r\n    \r\n    def train():\r\n        learning_rate = 0.05\r\n        batch_size = 100\r\n        max_epochs = 100\r\n        num_of_batch = int(mnist.train.num_examples / batch_size)\r\n        now = datetime.utcnow().strftime(\"%Y%m%d%H%M%S\")\r\n    \r\n        X = tf.placeholder(tf.float32, shape=[None, 784], name='X')\r\n        y = tf.placeholder(tf.float32, shape=[None, 10], name='y')\r\n        print(X.name, y.name)\r\n    \r\n        W = tf.get_variable(shape=[784, 10], name='weight')\r\n        b = tf.get_variable(initializer=tf.zeros([10]), name='bais')\r\n        tf.summary.histogram(\"weights\", W)\r\n        tf.summary.histogram(\"biases\", b)\r\n    \r\n        with tf.name_scope('pred'):\r\n            y_pred = tf.nn.softmax(tf.matmul(X, W) + b, name='predict')\r\n            print(y_pred.name)\r\n    \r\n        with tf.name_scope('loss'):\r\n            loss = tf.reduce_mean(tf.nn.softmax_cross_entropy_with_logits(labels=y, logits=y_pred))\r\n            tf.summary.scalar('loss', loss)\r\n            optimizer = tf.train.AdamOptimizer(learning_rate=learning_rate).minimize(loss)\r\n    \r\n        with tf.name_scope('acc'):\r\n            correct_prediction = tf.equal(tf.argmax(y_pred, 1), tf.argmax(y, 1))\r\n            accuracy = tf.reduce_mean(tf.cast(correct_prediction, tf.float32), name='acc')\r\n            print(accuracy.name)\r\n    \r\n        merged_summary_op = tf.summary.merge_all()\r\n        init_op = tf.global_variables_initializer()\r\n    \r\n        saver = tf.train.Saver()\r\n    \r\n        with tf.Session() as sess:\r\n            sess.run(init_op)\r\n    \r\n            loss_avg = 0\r\n            writer = tf.summary.FileWriter('mnist/{}'.format(now), sess.graph)\r\n            for epoch in range(max_epochs):\r\n                for i in range(num_of_batch):\r\n                    batch_x, batch_y = mnist.train.next_batch(batch_size)\r\n                    summary_str, _, l = sess.run([merged_summary_op, optimizer, loss], feed_dict={X: batch_x, y: batch_y})\r\n                    loss_avg += l\r\n                    global_step = epoch * num_of_batch + i\r\n                    writer.add_summary(summary_str, global_step)\r\n    \r\n                    if global_step % 100 == 0:\r\n                        print('Epoch {}: {} save model'.format(epoch, i))\r\n                        # save model in halfway\r\n                        saver.save(sess, save_model_path, global_step=global_step)\r\n    \r\n                loss_avg /= num_of_batch\r\n                print('Epoch {}: Loss {}'.format(epoch, loss_avg))\r\n    \r\n            print(sess.run(accuracy, feed_dict={X: mnist.test.images, y: mnist.test.labels}))\r\n            saver.save(sess, save_model_path)\r\n    \r\n    \r\n    def predict(import_from_meta=False):\r\n        if import_from_meta:\r\n            meta_path = 'mnist_model/model.ckpt.meta'\r\n            checkpoint_path = 'mnist_model'\r\n        else:\r\n            # stupid var WTF ValueError: No variables to save\r\n            _ = tf.Variable(0)\r\n            saver = tf.train.Saver()\r\n    \r\n        with tf.Session() as sess:\r\n            sess.run(tf.global_variables_initializer())\r\n            if import_from_meta:\r\n                saver = tf.train.import_meta_graph(meta_path)\r\n                saver.restore(sess, tf.train.latest_checkpoint(checkpoint_path))\r\n            else:\r\n                saver.restore(sess, save_model_path)\r\n            graph = tf.get_default_graph()\r\n            X = graph.get_tensor_by_name('X:0')\r\n            y = graph.get_tensor_by_name('y:0')\r\n            accuracy = graph.get_tensor_by_name('acc/acc:0')\r\n            print(sess.run(accuracy, feed_dict={X: mnist.test.images, y: mnist.test.labels}))\r\n    \r\n            pred = graph.get_tensor_by_name('pred/predict:0')\r\n            import matplotlib.pyplot as plt\r\n            i = 90\r\n            img_orign = mnist.train.images[i]\r\n            img = img_orign.reshape((28, 28))\r\n            plt.imshow(img, cmap='gray')\r\n            plt.title(mnist.train.labels[i])\r\n            plt.show()\r\n            a = sess.run(pred, feed_dict={X: img_orign.reshape(-1, 784)})\r\n            print(a.shape)\r\n            import numpy as np\r\n            print(np.argmax(a))\r\n    \r\n    \r\n    def check_ckpt():\r\n        from tensorflow.python.tools import inspect_checkpoint as chkp\r\n        chkp.print_tensors_in_checkpoint_file(save_model_path, tensor_name='', all_tensors=True)\r\n    \r\n    \r\n    if __name__ == '__main__':\r\n        # train()\r\n        predict(import_from_meta=False)\r\n        # check_ckpt()\r\n\r\n\r\nuse `predict(import_from_meta=False)`\r\n\r\nError:\r\n\r\n\r\n    WARNING:tensorflow:From /Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/contrib/learn/python/learn/datasets/mnist.py:290: DataSet.__init__ (from tensorflow.contrib.learn.python.learn.datasets.mnist) is deprecated and will be removed in a future version.\r\n    Instructions for updating:\r\n    Please use alternatives such as official/mnist/dataset.py from tensorflow/models.\r\n    2018-11-08 16:53:40.482921: W tensorflow/core/framework/op_kernel.cc:1318] OP_REQUIRES failed at save_restore_v2_ops.cc:184 : Not found: Key Variable not found in checkpoint\r\n    Traceback (most recent call last):\r\n      File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1322, in _do_call\r\n        return fn(*args)\r\n      File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1307, in _run_fn\r\n        options, feed_dict, fetch_list, target_list, run_metadata)\r\n      File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1409, in _call_tf_sessionrun\r\n        run_metadata)\r\n    tensorflow.python.framework.errors_impl.NotFoundError: Key Variable not found in checkpoint\r\n    \t [[Node: save/RestoreV2 = RestoreV2[dtypes=[DT_INT32], _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](_arg_save/Const_0_0, save/RestoreV2/tensor_names, save/RestoreV2/shape_and_slices)]]\r\n    \r\n    During handling of the above exception, another exception occurred:\r\n    \r\n    Traceback (most recent call last):\r\n      File \"/Users/wyx/project/learn-sktf/tf/mnist_clf.py\", line 115, in <module>\r\n        predict(import_from_meta=False)\r\n      File \"/Users/wyx/project/learn-sktf/tf/mnist_clf.py\", line 92, in predict\r\n        saver.restore(sess, save_model_path)\r\n      File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/training/saver.py\", line 1802, in restore\r\n        {self.saver_def.filename_tensor_name: save_path})\r\n      File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 900, in run\r\n        run_metadata_ptr)\r\n      File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1135, in _run\r\n        feed_dict_tensor, options, run_metadata)\r\n      File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1316, in _do_run\r\n        run_metadata)\r\n      File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1335, in _do_call\r\n        raise type(e)(node_def, op, message)\r\n    tensorflow.python.framework.errors_impl.NotFoundError: Key Variable not found in checkpoint\r\n    \t [[Node: save/RestoreV2 = RestoreV2[dtypes=[DT_INT32], _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](_arg_save/Const_0_0, save/RestoreV2/tensor_names, save/RestoreV2/shape_and_slices)]]\r\n    \r\n    Caused by op 'save/RestoreV2', defined at:\r\n      File \"/Users/wyx/project/learn-sktf/tf/mnist_clf.py\", line 115, in <module>\r\n        predict(import_from_meta=False)\r\n      File \"/Users/wyx/project/learn-sktf/tf/mnist_clf.py\", line 84, in predict\r\n        saver = tf.train.Saver()\r\n      File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/training/saver.py\", line 1338, in __init__\r\n        self.build()\r\n      File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/training/saver.py\", line 1347, in build\r\n        self._build(self._filename, build_save=True, build_restore=True)\r\n      File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/training/saver.py\", line 1384, in _build\r\n        build_save=build_save, build_restore=build_restore)\r\n      File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/training/saver.py\", line 835, in _build_internal\r\n        restore_sequentially, reshape)\r\n      File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/training/saver.py\", line 472, in _AddRestoreOps\r\n        restore_sequentially)\r\n      File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/training/saver.py\", line 886, in bulk_restore\r\n        return io_ops.restore_v2(filename_tensor, names, slices, dtypes)\r\n      File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/ops/gen_io_ops.py\", line 1463, in restore_v2\r\n        shape_and_slices=shape_and_slices, dtypes=dtypes, name=name)\r\n      File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/framework/op_def_library.py\", line 787, in _apply_op_helper\r\n        op_def=op_def)\r\n      File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 3392, in create_op\r\n        op_def=op_def)\r\n      File \"/Users/wyx/project/learn-sktf/.env/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 1718, in __init__\r\n        self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\r\n    \r\n    NotFoundError (see above for traceback): Key Variable not found in checkpoint\r\n    \t [[Node: save/RestoreV2 = RestoreV2[dtypes=[DT_INT32], _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](_arg_save/Const_0_0, save/RestoreV2/tensor_names, save/RestoreV2/shape_and_slices)]]\r\n\r\nIt's very strange that when I use `predict(import_from_meta=True)` I can get a **right answer**.\r\n\r\nThen I try `check_ckpt()` to [inspect variables in a checkpoint](https://www.tensorflow.org/guide/saved_model#inspect_variables_in_a_checkpoint). I can't find any right tensor_name . That's so funny and `name_scope` just like a joke.\r\n\r\n    tensor_name:  bais\r\n    [-24.933702    1.7660792   3.697866  -14.221888    8.967291   42.149403\r\n      -3.2693458  23.876926  -30.643892   -3.7861202]\r\n    tensor_name:  bais/Adam\r\n    [ 3.1726879e-07 -5.2043208e-07  3.4227469e-05  2.5119303e-07\r\n     -2.0110610e-04  1.8493415e-04 -3.6275055e-06 -1.4343520e-04\r\n     -7.2765622e-05  2.0172486e-04]\r\n    tensor_name:  bais/Adam_1\r\n    [5.2586905e-08 8.9204484e-08 1.5440051e-07 2.9412612e-07 2.4380788e-07\r\n     3.4676964e-07 8.7062219e-08 1.8839150e-07 4.3878950e-07 4.2466107e-07]\r\n    tensor_name:  loss/beta1_power\r\n    0.0\r\n    tensor_name:  loss/beta2_power\r\n    1.2639432e-24\r\n    tensor_name:  weight\r\n    [[-0.03386476  0.03485525 -0.03267809 ... -0.08548199  0.00565728\r\n      -0.01887459]\r\n     [ 0.00370622  0.08523928  0.05811391 ... -0.07838921  0.05987743\r\n       0.074329  ]\r\n     [ 0.0180116   0.04400793 -0.0260816  ...  0.00807328  0.06537797\r\n      -0.07446742]\r\n     ...\r\n     [-0.00665552 -0.03390152 -0.03889231 ... -0.01871967 -0.05968629\r\n       0.07207178]\r\n     [ 0.01317277  0.03459686 -0.03268962 ...  0.07082433  0.03290742\r\n       0.03172391]\r\n     [-0.04514085 -0.03013236  0.01006595 ...  0.01906221  0.02611361\r\n       0.04348358]]\r\n    tensor_name:  weight/Adam\r\n    [[0. 0. 0. ... 0. 0. 0.]\r\n     [0. 0. 0. ... 0. 0. 0.]\r\n     [0. 0. 0. ... 0. 0. 0.]\r\n     ...\r\n     [0. 0. 0. ... 0. 0. 0.]\r\n     [0. 0. 0. ... 0. 0. 0.]\r\n     [0. 0. 0. ... 0. 0. 0.]]\r\n    tensor_name:  weight/Adam_1\r\n    [[0. 0. 0. ... 0. 0. 0.]\r\n     [0. 0. 0. ... 0. 0. 0.]\r\n     [0. 0. 0. ... 0. 0. 0.]\r\n     ...\r\n     [0. 0. 0. ... 0. 0. 0.]\r\n     [0. 0. 0. ... 0. 0. 0.]\r\n     [0. 0. 0. ... 0. 0. 0.]]\r\n    \r\n    Process finished with exit code 0\r\n\r\n\r\nSo what's wrong in my code?  and why must create variables before `tf.train.Saver` when we just want to restore a model?"}