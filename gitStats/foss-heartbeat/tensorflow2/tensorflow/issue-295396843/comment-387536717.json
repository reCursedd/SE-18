{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/387536717", "html_url": "https://github.com/tensorflow/tensorflow/issues/16855#issuecomment-387536717", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16855", "id": 387536717, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzUzNjcxNw==", "user": {"login": "lanahra", "id": 10381509, "node_id": "MDQ6VXNlcjEwMzgxNTA5", "avatar_url": "https://avatars0.githubusercontent.com/u/10381509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lanahra", "html_url": "https://github.com/lanahra", "followers_url": "https://api.github.com/users/lanahra/followers", "following_url": "https://api.github.com/users/lanahra/following{/other_user}", "gists_url": "https://api.github.com/users/lanahra/gists{/gist_id}", "starred_url": "https://api.github.com/users/lanahra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lanahra/subscriptions", "organizations_url": "https://api.github.com/users/lanahra/orgs", "repos_url": "https://api.github.com/users/lanahra/repos", "events_url": "https://api.github.com/users/lanahra/events{/privacy}", "received_events_url": "https://api.github.com/users/lanahra/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-08T20:45:11Z", "updated_at": "2018-05-08T20:45:11Z", "author_association": "NONE", "body_html": "<p>Hello <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=741544\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/yupbank\">@yupbank</a>, I'm also having the same problem, I wrote a minimum script that reproduces the error:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> pandas <span class=\"pl-k\">as</span> pd\n<span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">from</span> tensorflow.contrib.tensor_forest.python <span class=\"pl-k\">import</span> tensor_forest\n<span class=\"pl-k\">from</span> tensorflow.contrib.tensor_forest.client <span class=\"pl-k\">import</span> random_forest \n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">main</span>():\n    model_dir <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>./model<span class=\"pl-pds\">'</span></span>\n\n    params <span class=\"pl-k\">=</span> tensor_forest.ForestHParams(\n        <span class=\"pl-v\">num_features</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>,\n        <span class=\"pl-v\">num_classes</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">2</span>,\n        <span class=\"pl-v\">num_trees</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">100</span>,\n        <span class=\"pl-v\">max_nodes</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1000</span>,\n    ).fill()\n\n    classifier <span class=\"pl-k\">=</span> random_forest.TensorForestEstimator(\n        params,\n        <span class=\"pl-v\">model_dir</span><span class=\"pl-k\">=</span>model_dir\n    )\n\n    data <span class=\"pl-k\">=</span> pd.DataFrame(<span class=\"pl-v\">data</span><span class=\"pl-k\">=</span>{<span class=\"pl-s\"><span class=\"pl-pds\">'</span>x<span class=\"pl-pds\">'</span></span>:[<span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>], <span class=\"pl-s\"><span class=\"pl-pds\">'</span>y<span class=\"pl-pds\">'</span></span>: [<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span>]})\n\n    x_train, y_train <span class=\"pl-k\">=</span> data, data.pop(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>y<span class=\"pl-pds\">'</span></span>)\n\n    input_fn_train <span class=\"pl-k\">=</span> tf.estimator.inputs.pandas_input_fn(\n        <span class=\"pl-v\">x</span><span class=\"pl-k\">=</span>x_train,\n        <span class=\"pl-v\">y</span><span class=\"pl-k\">=</span>y_train,\n        <span class=\"pl-v\">batch_size</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>,\n        <span class=\"pl-v\">num_epochs</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">100</span>,\n        <span class=\"pl-v\">shuffle</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>,\n        <span class=\"pl-v\">target_column</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>y<span class=\"pl-pds\">'</span></span>\n    )\n    \n    classifier.fit(<span class=\"pl-v\">input_fn</span><span class=\"pl-k\">=</span>input_fn_train)\n\n<span class=\"pl-k\">if</span> <span class=\"pl-c1\">__name__</span> <span class=\"pl-k\">==</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>__main__<span class=\"pl-pds\">'</span></span>:\n    main()</pre></div>", "body_text": "Hello @yupbank, I'm also having the same problem, I wrote a minimum script that reproduces the error:\nimport pandas as pd\nimport tensorflow as tf\nfrom tensorflow.contrib.tensor_forest.python import tensor_forest\nfrom tensorflow.contrib.tensor_forest.client import random_forest \n\ndef main():\n    model_dir = './model'\n\n    params = tensor_forest.ForestHParams(\n        num_features=1,\n        num_classes=2,\n        num_trees=100,\n        max_nodes=1000,\n    ).fill()\n\n    classifier = random_forest.TensorForestEstimator(\n        params,\n        model_dir=model_dir\n    )\n\n    data = pd.DataFrame(data={'x':[2, 3], 'y': [0, 1]})\n\n    x_train, y_train = data, data.pop('y')\n\n    input_fn_train = tf.estimator.inputs.pandas_input_fn(\n        x=x_train,\n        y=y_train,\n        batch_size=1,\n        num_epochs=100,\n        shuffle=True,\n        target_column='y'\n    )\n    \n    classifier.fit(input_fn=input_fn_train)\n\nif __name__ == '__main__':\n    main()", "body": "Hello @yupbank, I'm also having the same problem, I wrote a minimum script that reproduces the error:\r\n\r\n```python\r\nimport pandas as pd\r\nimport tensorflow as tf\r\nfrom tensorflow.contrib.tensor_forest.python import tensor_forest\r\nfrom tensorflow.contrib.tensor_forest.client import random_forest \r\n\r\ndef main():\r\n    model_dir = './model'\r\n\r\n    params = tensor_forest.ForestHParams(\r\n        num_features=1,\r\n        num_classes=2,\r\n        num_trees=100,\r\n        max_nodes=1000,\r\n    ).fill()\r\n\r\n    classifier = random_forest.TensorForestEstimator(\r\n        params,\r\n        model_dir=model_dir\r\n    )\r\n\r\n    data = pd.DataFrame(data={'x':[2, 3], 'y': [0, 1]})\r\n\r\n    x_train, y_train = data, data.pop('y')\r\n\r\n    input_fn_train = tf.estimator.inputs.pandas_input_fn(\r\n        x=x_train,\r\n        y=y_train,\r\n        batch_size=1,\r\n        num_epochs=100,\r\n        shuffle=True,\r\n        target_column='y'\r\n    )\r\n    \r\n    classifier.fit(input_fn=input_fn_train)\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```"}