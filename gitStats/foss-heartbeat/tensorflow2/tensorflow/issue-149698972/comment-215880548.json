{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/215880548", "html_url": "https://github.com/tensorflow/tensorflow/issues/2034#issuecomment-215880548", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2034", "id": 215880548, "node_id": "MDEyOklzc3VlQ29tbWVudDIxNTg4MDU0OA==", "user": {"login": "martinwicke", "id": 577277, "node_id": "MDQ6VXNlcjU3NzI3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/577277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinwicke", "html_url": "https://github.com/martinwicke", "followers_url": "https://api.github.com/users/martinwicke/followers", "following_url": "https://api.github.com/users/martinwicke/following{/other_user}", "gists_url": "https://api.github.com/users/martinwicke/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinwicke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinwicke/subscriptions", "organizations_url": "https://api.github.com/users/martinwicke/orgs", "repos_url": "https://api.github.com/users/martinwicke/repos", "events_url": "https://api.github.com/users/martinwicke/events{/privacy}", "received_events_url": "https://api.github.com/users/martinwicke/received_events", "type": "User", "site_admin": false}, "created_at": "2016-04-29T21:00:29Z", "updated_at": "2016-04-29T21:00:29Z", "author_association": "MEMBER", "body_html": "<p>+Illia Polosukhin <a href=\"mailto:ipolosukhin@google.com\">ipolosukhin@google.com</a></p>\n<p>Let's disable that. It should automatically load the mock base class for<br>\nestimator, I think that's the only one we need. We already have conditional<br>\nloading there anyway (it only loads scipy if available).</p>\n<p>That does seem like a pretty terrible bug in scipy though?</p>\n<p>On Fri, Apr 29, 2016 at 11:45 AM Stephen Roller <a href=\"mailto:notifications@github.com\">notifications@github.com</a><br>\nwrote:</p>\n<blockquote>\n<p>Yeah, it seems wrong that skflow is being automatically loaded. If nothing<br>\nelse, it's adding a whole bunch of unnecessary startup time to a submodule<br>\nthat may not ever be used...</p>\n<p>However, it's explicitly not a dependency: it's wrapped in an ImportError<br>\nthat has smart fallback behavior. The fallback behavior doesn't trigger the<br>\nsegfault, as it doesn't have these cascading imports to this obscure module.</p>\n<p>But explicitly importing numpy in tf.contrib.learn wouldn't help; numpy is<br>\nimported nearly a dozen times before then, by scikit-learn, scipy <em>and</em><br>\ntf.contrib.learn.</p>\n<p>Looking at the specfun module, it calls import_array and doesn't properly<br>\ndefine a PY_ARRAY_UNIQUE_SYMBOL like all c modules are supposed to do. And<br>\nI <em>think</em> TensorFlow is doing things in the wrong order, either in numpy.c<br>\nor numpy.h. The result is that you have both modules slightly misbehaving<br>\nabout import_array and overwriting some function pointers somewhere, hence<br>\nthe segfault. I'm still confirming this though.</p>\n<p>\u2014<br>\nYou are receiving this because you were mentioned.<br>\nReply to this email directly or view it on GitHub<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"149698972\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/2034\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/2034/hovercard?comment_id=215845406&amp;comment_type=issue_comment\" href=\"https://github.com/tensorflow/tensorflow/issues/2034#issuecomment-215845406\">#2034 (comment)</a></p>\n</blockquote>", "body_text": "+Illia Polosukhin ipolosukhin@google.com\nLet's disable that. It should automatically load the mock base class for\nestimator, I think that's the only one we need. We already have conditional\nloading there anyway (it only loads scipy if available).\nThat does seem like a pretty terrible bug in scipy though?\nOn Fri, Apr 29, 2016 at 11:45 AM Stephen Roller notifications@github.com\nwrote:\n\nYeah, it seems wrong that skflow is being automatically loaded. If nothing\nelse, it's adding a whole bunch of unnecessary startup time to a submodule\nthat may not ever be used...\nHowever, it's explicitly not a dependency: it's wrapped in an ImportError\nthat has smart fallback behavior. The fallback behavior doesn't trigger the\nsegfault, as it doesn't have these cascading imports to this obscure module.\nBut explicitly importing numpy in tf.contrib.learn wouldn't help; numpy is\nimported nearly a dozen times before then, by scikit-learn, scipy and\ntf.contrib.learn.\nLooking at the specfun module, it calls import_array and doesn't properly\ndefine a PY_ARRAY_UNIQUE_SYMBOL like all c modules are supposed to do. And\nI think TensorFlow is doing things in the wrong order, either in numpy.c\nor numpy.h. The result is that you have both modules slightly misbehaving\nabout import_array and overwriting some function pointers somewhere, hence\nthe segfault. I'm still confirming this though.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\n#2034 (comment)", "body": "+Illia Polosukhin ipolosukhin@google.com\n\nLet's disable that. It should automatically load the mock base class for\nestimator, I think that's the only one we need. We already have conditional\nloading there anyway (it only loads scipy if available).\n\nThat does seem like a pretty terrible bug in scipy though?\n\nOn Fri, Apr 29, 2016 at 11:45 AM Stephen Roller notifications@github.com\nwrote:\n\n> Yeah, it seems wrong that skflow is being automatically loaded. If nothing\n> else, it's adding a whole bunch of unnecessary startup time to a submodule\n> that may not ever be used...\n> \n> However, it's explicitly not a dependency: it's wrapped in an ImportError\n> that has smart fallback behavior. The fallback behavior doesn't trigger the\n> segfault, as it doesn't have these cascading imports to this obscure module.\n> \n> But explicitly importing numpy in tf.contrib.learn wouldn't help; numpy is\n> imported nearly a dozen times before then, by scikit-learn, scipy _and_\n> tf.contrib.learn.\n> \n> Looking at the specfun module, it calls import_array and doesn't properly\n> define a PY_ARRAY_UNIQUE_SYMBOL like all c modules are supposed to do. And\n> I _think_ TensorFlow is doing things in the wrong order, either in numpy.c\n> or numpy.h. The result is that you have both modules slightly misbehaving\n> about import_array and overwriting some function pointers somewhere, hence\n> the segfault. I'm still confirming this though.\n> \n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly or view it on GitHub\n> https://github.com/tensorflow/tensorflow/issues/2034#issuecomment-215845406\n"}