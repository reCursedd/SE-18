{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/215926429", "html_url": "https://github.com/tensorflow/tensorflow/issues/2034#issuecomment-215926429", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2034", "id": 215926429, "node_id": "MDEyOklzc3VlQ29tbWVudDIxNTkyNjQyOQ==", "user": {"login": "stephenroller", "id": 31896, "node_id": "MDQ6VXNlcjMxODk2", "avatar_url": "https://avatars2.githubusercontent.com/u/31896?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stephenroller", "html_url": "https://github.com/stephenroller", "followers_url": "https://api.github.com/users/stephenroller/followers", "following_url": "https://api.github.com/users/stephenroller/following{/other_user}", "gists_url": "https://api.github.com/users/stephenroller/gists{/gist_id}", "starred_url": "https://api.github.com/users/stephenroller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stephenroller/subscriptions", "organizations_url": "https://api.github.com/users/stephenroller/orgs", "repos_url": "https://api.github.com/users/stephenroller/repos", "events_url": "https://api.github.com/users/stephenroller/events{/privacy}", "received_events_url": "https://api.github.com/users/stephenroller/received_events", "type": "User", "site_admin": false}, "created_at": "2016-04-30T02:29:44Z", "updated_at": "2016-04-30T02:32:26Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I found where/why it's happening. I don't know the solution though.</p>\n<p>If I modify <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/__init__.py#L37\">tensorflow/python/<strong>init</strong>.py</a>, starting at line 43:</p>\n<p>This crashes:</p>\n<div class=\"highlight highlight-source-python\"><pre>_default_dlopen_flags <span class=\"pl-k\">=</span> sys.getdlopenflags()\nsys.setdlopenflags(_default_dlopen_flags <span class=\"pl-k\">|</span> ctypes.<span class=\"pl-c1\">RTLD_GLOBAL</span>)\n<span class=\"pl-c1\">print</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>before import pywrap_tf<span class=\"pl-pds\">\"</span></span>\n<span class=\"pl-k\">from</span> tensorflow.python <span class=\"pl-k\">import</span> pywrap_tensorflow\n<span class=\"pl-c1\">print</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>after import pywrap_tf<span class=\"pl-pds\">\"</span></span>\nsys.setdlopenflags(_default_dlopen_flags)\n<span class=\"pl-k\">from</span> scipy.special <span class=\"pl-k\">import</span> <span class=\"pl-k\">*</span>\n\n<span class=\"pl-c1\">print</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Exiting gracefully.<span class=\"pl-pds\">\"</span></span>\nsys.exit(<span class=\"pl-c1\">0</span>)</pre></div>\n<p>So the sys.exit(0) happens before any call to contrib, and therefore before scikit-learn. It's definitely not scikit-learn then.</p>\n<p>After trial and error, I figured out it's the call to setdlopenflags, which I have no idea what it does. Here's a minimum use case:</p>\n<pre><code>$ python\nPython 2.7.11 (default, Apr 25 2016, 20:02:17)\n[GCC 4.9.1] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt; import sys, ctypes\n&gt;&gt;&gt; flags = sys.getdlopenflags()\n&gt;&gt;&gt; sys.setdlopenflags(flags | ctypes.RTLD_GLOBAL)\n&gt;&gt;&gt; from scipy.special import *\nzsh: segmentation fault (core dumped)  python\n</code></pre>\n<p>So the moment you've called import_array with the RTLD_GLOBAL flag up, something seems to get messed up royally. Maybe because scipy doesn't bother with a PY_ARRAY_UNIQUE_SYMBOL?</p>\n<p>I'm tempted to hack in a PY_ARRAY_UNIQUE_SYMBOL thingy into f2py and see what happens.</p>", "body_text": "I found where/why it's happening. I don't know the solution though.\nIf I modify tensorflow/python/init.py, starting at line 43:\nThis crashes:\n_default_dlopen_flags = sys.getdlopenflags()\nsys.setdlopenflags(_default_dlopen_flags | ctypes.RTLD_GLOBAL)\nprint \"before import pywrap_tf\"\nfrom tensorflow.python import pywrap_tensorflow\nprint \"after import pywrap_tf\"\nsys.setdlopenflags(_default_dlopen_flags)\nfrom scipy.special import *\n\nprint \"Exiting gracefully.\"\nsys.exit(0)\nSo the sys.exit(0) happens before any call to contrib, and therefore before scikit-learn. It's definitely not scikit-learn then.\nAfter trial and error, I figured out it's the call to setdlopenflags, which I have no idea what it does. Here's a minimum use case:\n$ python\nPython 2.7.11 (default, Apr 25 2016, 20:02:17)\n[GCC 4.9.1] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import sys, ctypes\n>>> flags = sys.getdlopenflags()\n>>> sys.setdlopenflags(flags | ctypes.RTLD_GLOBAL)\n>>> from scipy.special import *\nzsh: segmentation fault (core dumped)  python\n\nSo the moment you've called import_array with the RTLD_GLOBAL flag up, something seems to get messed up royally. Maybe because scipy doesn't bother with a PY_ARRAY_UNIQUE_SYMBOL?\nI'm tempted to hack in a PY_ARRAY_UNIQUE_SYMBOL thingy into f2py and see what happens.", "body": "I found where/why it's happening. I don't know the solution though.\n\nIf I modify [tensorflow/python/**init**.py](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/__init__.py#L37), starting at line 43:\n\nThis crashes:\n\n``` python\n_default_dlopen_flags = sys.getdlopenflags()\nsys.setdlopenflags(_default_dlopen_flags | ctypes.RTLD_GLOBAL)\nprint \"before import pywrap_tf\"\nfrom tensorflow.python import pywrap_tensorflow\nprint \"after import pywrap_tf\"\nsys.setdlopenflags(_default_dlopen_flags)\nfrom scipy.special import *\n\nprint \"Exiting gracefully.\"\nsys.exit(0)\n```\n\nSo the sys.exit(0) happens before any call to contrib, and therefore before scikit-learn. It's definitely not scikit-learn then.\n\nAfter trial and error, I figured out it's the call to setdlopenflags, which I have no idea what it does. Here's a minimum use case:\n\n```\n$ python\nPython 2.7.11 (default, Apr 25 2016, 20:02:17)\n[GCC 4.9.1] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import sys, ctypes\n>>> flags = sys.getdlopenflags()\n>>> sys.setdlopenflags(flags | ctypes.RTLD_GLOBAL)\n>>> from scipy.special import *\nzsh: segmentation fault (core dumped)  python\n```\n\nSo the moment you've called import_array with the RTLD_GLOBAL flag up, something seems to get messed up royally. Maybe because scipy doesn't bother with a PY_ARRAY_UNIQUE_SYMBOL?\n\nI'm tempted to hack in a PY_ARRAY_UNIQUE_SYMBOL thingy into f2py and see what happens.\n"}