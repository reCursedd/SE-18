{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5179", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5179/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5179/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5179/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/5179", "id": 184988897, "node_id": "MDU6SXNzdWUxODQ5ODg4OTc=", "number": 5179, "title": "Undefined reference to CheckOpMessageBuilder::NewString() when linking libtensorflow_cc.so", "user": {"login": "hemalshahX", "id": 22327027, "node_id": "MDQ6VXNlcjIyMzI3MDI3", "avatar_url": "https://avatars1.githubusercontent.com/u/22327027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hemalshahX", "html_url": "https://github.com/hemalshahX", "followers_url": "https://api.github.com/users/hemalshahX/followers", "following_url": "https://api.github.com/users/hemalshahX/following{/other_user}", "gists_url": "https://api.github.com/users/hemalshahX/gists{/gist_id}", "starred_url": "https://api.github.com/users/hemalshahX/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hemalshahX/subscriptions", "organizations_url": "https://api.github.com/users/hemalshahX/orgs", "repos_url": "https://api.github.com/users/hemalshahX/repos", "events_url": "https://api.github.com/users/hemalshahX/events{/privacy}", "received_events_url": "https://api.github.com/users/hemalshahX/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}, {"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2016-10-25T00:25:45Z", "updated_at": "2018-03-09T20:21:48Z", "closed_at": "2016-11-11T17:45:36Z", "author_association": "NONE", "body_html": "<p>I am trying to use the TensorFlow Session C++ API (Python-free) to load a pre-trained model for inference. For build-time considerations, I am trying to deploy TensorFlow as a \"system\" package by linking against libtensorflow_cc.so and including headers into my Bazel-based workspace which has its own copies of protobuf and Eigen. I am almost there except that I have run into linker errors for missing implementations of tensorflow::internal::CheckOpMessageBuilder::NewString(). The symbols appear to be exported by libtensorflow_cc.so and it does seem to all be linking correctly, just not this symbol.</p>\n<p>Any help fixing this issue or suggestions for a better way of doing this would be greatly appreciated.</p>\n<p>Thanks,<br>\nHemal</p>\n<p>My setup is the following:<br>\nDocker image from ubuntu:16.04 using gcc5.<br>\nBazel 0.3.1 (needed to upgrade from 0.3.0 because of other Tensorflow build issues)<br>\nI matched the Eigen version but the protobuf used to build the Tensorflow wheel below is installed via apt-get and there is another copy (3.0.0) within my workspace's third_party directory.</p>\n<p>The following is in my Dockerfile to build and \"deploy\" Tensorflow:<br>\nRUN git clone <a href=\"https://github.com/tensorflow/tensorflow.git\">https://github.com/tensorflow/tensorflow.git</a> /tmp/tensorflow \\<br>\n&amp;&amp; cd /tmp/tensorflow &amp;&amp; git checkout r0.11 \\<br>\n&amp;&amp; yes '' | ./configure \\<br>\n&amp;&amp; bazel build -c opt //tensorflow/tools/pip_package:build_pip_package \\<br>\n&amp;&amp; /tmp/tensorflow/bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg \\<br>\n&amp;&amp; pip2 install --quiet --upgrade /tmp/tensorflow_pkg/*.whl \\<br>\n&amp;&amp; bazel build -c opt //tensorflow:libtensorflow_cc.so \\<br>\n&amp;&amp; cp /tmp/tensorflow/bazel-bin/tensorflow/libtensorflow_cc.so /usr/lib/libtensorflow_cc.so \\<br>\n&amp;&amp; ln -sv /usr/local/lib/python2.7/dist-packages/tensorflow/include/tensorflow /usr/include/tensorflow \\<br>\n&amp;&amp; ln -sv /usr/local/lib/python2.7/dist-packages/tensorflow/include/third_party /usr/include/third_party</p>\n<p>164:1: Linking of rule '//estimation/detection:playback_ground_truth' failed: clang-3.6 failed: error executing command<br>\n(cd /code/.cache/bazel/_bazel_hemalshah/6fa7a91faa1abdfbb41bc875fa66f0f6/execroot/robotics &amp;&amp; <br>\nexec env - <br>\n/usr/bin/clang-3.6 -o bazel-out/local_linux-opt/bin/estimation/detection/playback_ground_truth -L/usr/lib/python2.7/config-x86_64-linux-gnu -L/usr/lib -Wl,-O1 -Wl,-Bsymbolic-functions -pthread -B/usr/bin/ -Wl,@bazel-out/local_linux-opt/bin/estimation/detection/playback_ground_truth-2.params): com.google.devtools.build.lib.shell.BadExitStatusException: Process exited with status 1.</p>\n<p>bazel-out/local_linux-opt/bin/estimation/detection/libtof_pose_estimator.lo(tof_pose_estimator.o): In function <code>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;* tensorflow::internal::MakeCheckOpString&lt;long long, long long&gt;(long long const&amp;, long long const&amp;, char const*)': /usr/include/tensorflow/core/platform/default/logging.h:170: undefined reference to</code>tensorflow::internal::CheckOpMessageBuilder::NewString()'<br>\nbazel-out/local_linux-opt/bin/estimation/detection/libtof_pose_estimator.lo(tof_pose_estimator.o): In function <code>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;* tensorflow::internal::MakeCheckOpString&lt;unsigned long, unsigned long&gt;(unsigned long const&amp;, unsigned long const&amp;, char const*)': /usr/include/tensorflow/core/platform/default/logging.h:170: undefined reference to</code>tensorflow::internal::CheckOpMessageBuilder::NewString()'</p>", "body_text": "I am trying to use the TensorFlow Session C++ API (Python-free) to load a pre-trained model for inference. For build-time considerations, I am trying to deploy TensorFlow as a \"system\" package by linking against libtensorflow_cc.so and including headers into my Bazel-based workspace which has its own copies of protobuf and Eigen. I am almost there except that I have run into linker errors for missing implementations of tensorflow::internal::CheckOpMessageBuilder::NewString(). The symbols appear to be exported by libtensorflow_cc.so and it does seem to all be linking correctly, just not this symbol.\nAny help fixing this issue or suggestions for a better way of doing this would be greatly appreciated.\nThanks,\nHemal\nMy setup is the following:\nDocker image from ubuntu:16.04 using gcc5.\nBazel 0.3.1 (needed to upgrade from 0.3.0 because of other Tensorflow build issues)\nI matched the Eigen version but the protobuf used to build the Tensorflow wheel below is installed via apt-get and there is another copy (3.0.0) within my workspace's third_party directory.\nThe following is in my Dockerfile to build and \"deploy\" Tensorflow:\nRUN git clone https://github.com/tensorflow/tensorflow.git /tmp/tensorflow \\\n&& cd /tmp/tensorflow && git checkout r0.11 \\\n&& yes '' | ./configure \\\n&& bazel build -c opt //tensorflow/tools/pip_package:build_pip_package \\\n&& /tmp/tensorflow/bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg \\\n&& pip2 install --quiet --upgrade /tmp/tensorflow_pkg/*.whl \\\n&& bazel build -c opt //tensorflow:libtensorflow_cc.so \\\n&& cp /tmp/tensorflow/bazel-bin/tensorflow/libtensorflow_cc.so /usr/lib/libtensorflow_cc.so \\\n&& ln -sv /usr/local/lib/python2.7/dist-packages/tensorflow/include/tensorflow /usr/include/tensorflow \\\n&& ln -sv /usr/local/lib/python2.7/dist-packages/tensorflow/include/third_party /usr/include/third_party\n164:1: Linking of rule '//estimation/detection:playback_ground_truth' failed: clang-3.6 failed: error executing command\n(cd /code/.cache/bazel/_bazel_hemalshah/6fa7a91faa1abdfbb41bc875fa66f0f6/execroot/robotics && \nexec env - \n/usr/bin/clang-3.6 -o bazel-out/local_linux-opt/bin/estimation/detection/playback_ground_truth -L/usr/lib/python2.7/config-x86_64-linux-gnu -L/usr/lib -Wl,-O1 -Wl,-Bsymbolic-functions -pthread -B/usr/bin/ -Wl,@bazel-out/local_linux-opt/bin/estimation/detection/playback_ground_truth-2.params): com.google.devtools.build.lib.shell.BadExitStatusException: Process exited with status 1.\nbazel-out/local_linux-opt/bin/estimation/detection/libtof_pose_estimator.lo(tof_pose_estimator.o): In function std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* tensorflow::internal::MakeCheckOpString<long long, long long>(long long const&, long long const&, char const*)': /usr/include/tensorflow/core/platform/default/logging.h:170: undefined reference totensorflow::internal::CheckOpMessageBuilder::NewString()'\nbazel-out/local_linux-opt/bin/estimation/detection/libtof_pose_estimator.lo(tof_pose_estimator.o): In function std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* tensorflow::internal::MakeCheckOpString<unsigned long, unsigned long>(unsigned long const&, unsigned long const&, char const*)': /usr/include/tensorflow/core/platform/default/logging.h:170: undefined reference totensorflow::internal::CheckOpMessageBuilder::NewString()'", "body": "I am trying to use the TensorFlow Session C++ API (Python-free) to load a pre-trained model for inference. For build-time considerations, I am trying to deploy TensorFlow as a \"system\" package by linking against libtensorflow_cc.so and including headers into my Bazel-based workspace which has its own copies of protobuf and Eigen. I am almost there except that I have run into linker errors for missing implementations of tensorflow::internal::CheckOpMessageBuilder::NewString(). The symbols appear to be exported by libtensorflow_cc.so and it does seem to all be linking correctly, just not this symbol.\n\nAny help fixing this issue or suggestions for a better way of doing this would be greatly appreciated.\n\nThanks, \nHemal\n\nMy setup is the following: \nDocker image from ubuntu:16.04 using gcc5.\nBazel 0.3.1 (needed to upgrade from 0.3.0 because of other Tensorflow build issues) \nI matched the Eigen version but the protobuf used to build the Tensorflow wheel below is installed via apt-get and there is another copy (3.0.0) within my workspace's third_party directory.\n\nThe following is in my Dockerfile to build and \"deploy\" Tensorflow: \nRUN git clone https://github.com/tensorflow/tensorflow.git /tmp/tensorflow \\ \n&& cd /tmp/tensorflow && git checkout r0.11 \\ \n&& yes '' | ./configure \\ \n&& bazel build -c opt //tensorflow/tools/pip_package:build_pip_package \\ \n&& /tmp/tensorflow/bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg \\ \n&& pip2 install --quiet --upgrade /tmp/tensorflow_pkg/*.whl \\ \n&& bazel build -c opt //tensorflow:libtensorflow_cc.so \\ \n&& cp /tmp/tensorflow/bazel-bin/tensorflow/libtensorflow_cc.so /usr/lib/libtensorflow_cc.so \\ \n&& ln -sv /usr/local/lib/python2.7/dist-packages/tensorflow/include/tensorflow /usr/include/tensorflow \\ \n&& ln -sv /usr/local/lib/python2.7/dist-packages/tensorflow/include/third_party /usr/include/third_party\n\n164:1: Linking of rule '//estimation/detection:playback_ground_truth' failed: clang-3.6 failed: error executing command \n  (cd /code/.cache/bazel/_bazel_hemalshah/6fa7a91faa1abdfbb41bc875fa66f0f6/execroot/robotics && \\\n  exec env - \\\n  /usr/bin/clang-3.6 -o bazel-out/local_linux-opt/bin/estimation/detection/playback_ground_truth -L/usr/lib/python2.7/config-x86_64-linux-gnu -L/usr/lib -Wl,-O1 -Wl,-Bsymbolic-functions -pthread -B/usr/bin/ -Wl,@bazel-out/local_linux-opt/bin/estimation/detection/playback_ground_truth-2.params): com.google.devtools.build.lib.shell.BadExitStatusException: Process exited with status 1.\n\nbazel-out/local_linux-opt/bin/estimation/detection/libtof_pose_estimator.lo(tof_pose_estimator.o): In function `std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* tensorflow::internal::MakeCheckOpString<long long, long long>(long long const&, long long const&, char const*)':\n/usr/include/tensorflow/core/platform/default/logging.h:170: undefined reference to`tensorflow::internal::CheckOpMessageBuilder::NewString()'\nbazel-out/local_linux-opt/bin/estimation/detection/libtof_pose_estimator.lo(tof_pose_estimator.o): In function `std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* tensorflow::internal::MakeCheckOpString<unsigned long, unsigned long>(unsigned long const&, unsigned long const&, char const*)':\n/usr/include/tensorflow/core/platform/default/logging.h:170: undefined reference to`tensorflow::internal::CheckOpMessageBuilder::NewString()'\n"}