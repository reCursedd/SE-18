{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/256201681", "html_url": "https://github.com/tensorflow/tensorflow/issues/5179#issuecomment-256201681", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5179", "id": 256201681, "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjIwMTY4MQ==", "user": {"login": "hemalshahX", "id": 22327027, "node_id": "MDQ6VXNlcjIyMzI3MDI3", "avatar_url": "https://avatars1.githubusercontent.com/u/22327027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hemalshahX", "html_url": "https://github.com/hemalshahX", "followers_url": "https://api.github.com/users/hemalshahX/followers", "following_url": "https://api.github.com/users/hemalshahX/following{/other_user}", "gists_url": "https://api.github.com/users/hemalshahX/gists{/gist_id}", "starred_url": "https://api.github.com/users/hemalshahX/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hemalshahX/subscriptions", "organizations_url": "https://api.github.com/users/hemalshahX/orgs", "repos_url": "https://api.github.com/users/hemalshahX/repos", "events_url": "https://api.github.com/users/hemalshahX/events{/privacy}", "received_events_url": "https://api.github.com/users/hemalshahX/received_events", "type": "User", "site_admin": false}, "created_at": "2016-10-25T22:52:08Z", "updated_at": "2016-10-25T22:52:08Z", "author_association": "NONE", "body_html": "<p>So, that is definitely the problem, but how to solve it has me puzzled. I tried globally reverting to the old ABI, but then I have trouble with boost libraries linking. I end up playing whack-a-mole until everything is consistent. Clang 3.9 would supposedly help the situation, but not available yet as a Debian package it seems except in the nightly.</p>\n<p>The root cause though is why is tensorflow::internal::MakeCheckOpString trying to link against the non-CXX11 ABI version of tensorflow::internal::CheckOpMessageBuilder::NewString (when the cxx11 ABI version is available)? I'm trying to find why that particular function is the only one with what appears to be this ABI mismatch.</p>", "body_text": "So, that is definitely the problem, but how to solve it has me puzzled. I tried globally reverting to the old ABI, but then I have trouble with boost libraries linking. I end up playing whack-a-mole until everything is consistent. Clang 3.9 would supposedly help the situation, but not available yet as a Debian package it seems except in the nightly.\nThe root cause though is why is tensorflow::internal::MakeCheckOpString trying to link against the non-CXX11 ABI version of tensorflow::internal::CheckOpMessageBuilder::NewString (when the cxx11 ABI version is available)? I'm trying to find why that particular function is the only one with what appears to be this ABI mismatch.", "body": "So, that is definitely the problem, but how to solve it has me puzzled. I tried globally reverting to the old ABI, but then I have trouble with boost libraries linking. I end up playing whack-a-mole until everything is consistent. Clang 3.9 would supposedly help the situation, but not available yet as a Debian package it seems except in the nightly.\n\nThe root cause though is why is tensorflow::internal::MakeCheckOpString trying to link against the non-CXX11 ABI version of tensorflow::internal::CheckOpMessageBuilder::NewString (when the cxx11 ABI version is available)? I'm trying to find why that particular function is the only one with what appears to be this ABI mismatch. \n"}