{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14753", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14753/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14753/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14753/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14753", "id": 275690071, "node_id": "MDU6SXNzdWUyNzU2OTAwNzE=", "number": 14753, "title": "compile tensorflow lite static library using QCC on QNX Platform", "user": {"login": "charleys", "id": 443715, "node_id": "MDQ6VXNlcjQ0MzcxNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/443715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/charleys", "html_url": "https://github.com/charleys", "followers_url": "https://api.github.com/users/charleys/followers", "following_url": "https://api.github.com/users/charleys/following{/other_user}", "gists_url": "https://api.github.com/users/charleys/gists{/gist_id}", "starred_url": "https://api.github.com/users/charleys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/charleys/subscriptions", "organizations_url": "https://api.github.com/users/charleys/orgs", "repos_url": "https://api.github.com/users/charleys/repos", "events_url": "https://api.github.com/users/charleys/events{/privacy}", "received_events_url": "https://api.github.com/users/charleys/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 750616506, "node_id": "MDU6TGFiZWw3NTA2MTY1MDY=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:lite", "name": "comp:lite", "color": "0052cc", "default": false}, {"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}, {"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "poxvoculi", "id": 15676913, "node_id": "MDQ6VXNlcjE1Njc2OTEz", "avatar_url": "https://avatars2.githubusercontent.com/u/15676913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poxvoculi", "html_url": "https://github.com/poxvoculi", "followers_url": "https://api.github.com/users/poxvoculi/followers", "following_url": "https://api.github.com/users/poxvoculi/following{/other_user}", "gists_url": "https://api.github.com/users/poxvoculi/gists{/gist_id}", "starred_url": "https://api.github.com/users/poxvoculi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poxvoculi/subscriptions", "organizations_url": "https://api.github.com/users/poxvoculi/orgs", "repos_url": "https://api.github.com/users/poxvoculi/repos", "events_url": "https://api.github.com/users/poxvoculi/events{/privacy}", "received_events_url": "https://api.github.com/users/poxvoculi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "poxvoculi", "id": 15676913, "node_id": "MDQ6VXNlcjE1Njc2OTEz", "avatar_url": "https://avatars2.githubusercontent.com/u/15676913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poxvoculi", "html_url": "https://github.com/poxvoculi", "followers_url": "https://api.github.com/users/poxvoculi/followers", "following_url": "https://api.github.com/users/poxvoculi/following{/other_user}", "gists_url": "https://api.github.com/users/poxvoculi/gists{/gist_id}", "starred_url": "https://api.github.com/users/poxvoculi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poxvoculi/subscriptions", "organizations_url": "https://api.github.com/users/poxvoculi/orgs", "repos_url": "https://api.github.com/users/poxvoculi/repos", "events_url": "https://api.github.com/users/poxvoculi/events{/privacy}", "received_events_url": "https://api.github.com/users/poxvoculi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 12, "created_at": "2017-11-21T12:12:51Z", "updated_at": "2018-05-14T17:48:23Z", "closed_at": "2018-05-14T17:48:23Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:binary</li>\n<li><strong>TensorFlow version (use command below)</strong>:master latest</li>\n<li><strong>Python version</strong>: 2.7</li>\n<li><strong>Bazel version (if compiling from source)</strong>:0.7</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>my goal is compile tensorflow lite static library using QNX-QCC compiler\u3002 This is possible?<br>\nAnd do I need to modify the code in kernels/*.cc or other souce code , and how do\u3002</p>\n<p>Please give me some advice, thx\u3002</p>\n<p><strong>the make script is just  like below\uff1a</strong></p>\n<p><strong>make script file:</strong></p>\n<p>function make_qnx() {<br>\nif [ ! -d $1 ];then<br>\nmkdir $1 || exit_popd 1<br>\nfi<br>\ncd $1<br>\nexport QNX_ABI=$1<br>\nsource /opt/qnx660/qnx660-env.sh<br>\n~/DevTools/cmake-3.9.0-rc5-Linux-x86_64/bin/cmake -G \"Unix Makefiles\" -DQNX_PLATFORM_ABI=\"$1\" -DPLATFORM_ABI=qnx -DCMAKE_TOOLCHAIN_FILE=${CURRENT_SCRIPT_DIR}/toolchains/<strong>qnx.toolchain.cmake</strong><br>\nmake<br>\n}</p>\n<p><strong>qnx.toolchain.cmake file :</strong></p>\n<p>cmake_minimum_required(VERSION 2.8)<br>\nset(CMAKE_SYSTEM_NAME QNX)<br>\nset(QNX_PLATFORM_ABI \"$ENV{QNX_ABI}\")</p>\n<p>if(QNX_PLATFORM_ABI STREQUAL \"x86\")<br>\nset(ARCH_NAME gcc_ntox86)</p>\n<pre><code>set(CMAKE_C_COMPILER /opt/qnx660/host/linux/x86/usr/bin/qcc)\nset(CMAKE_C_COMPILER_TARGET ${ARCH_NAME})\nset(CMAKE_CXX_COMPILER /opt/qnx660/host/linux/x86/usr/bin/QCC)\nset(CMAKE_CXX_COMPILER_TARGET ${ARCH_NAME})\n</code></pre>\n<p>elseif(QNX_PLATFORM_ABI STREQUAL \"armv7\")<br>\nset(ARCH_NAME gcc_ntoarmv7le)</p>\n<pre><code>set(CMAKE_C_COMPILER /opt/qnx660/host/linux/x86/usr/bin/qcc)\nset(CMAKE_C_COMPILER_TARGET ${ARCH_NAME})\nset(CMAKE_CXX_COMPILER /opt/qnx660/host/linux/x86/usr/bin/QCC)\nset(CMAKE_CXX_COMPILER_TARGET ${ARCH_NAME})\n</code></pre>\n<p>else()<br>\nmessage( SEND_ERROR \"Unknown QNX_PLATFORM_ABI=\"${QNX_PLATFORM_ABI}\" is specified.\" )<br>\nendif()</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=25754898\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/andrehentz\">@andrehentz</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=326106\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/aselle\">@aselle</a></p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04\nTensorFlow installed from (source or binary):binary\nTensorFlow version (use command below):master latest\nPython version: 2.7\nBazel version (if compiling from source):0.7\n\nDescribe the problem\nmy goal is compile tensorflow lite static library using QNX-QCC compiler\u3002 This is possible?\nAnd do I need to modify the code in kernels/*.cc or other souce code , and how do\u3002\nPlease give me some advice, thx\u3002\nthe make script is just  like below\uff1a\nmake script file:\nfunction make_qnx() {\nif [ ! -d $1 ];then\nmkdir $1 || exit_popd 1\nfi\ncd $1\nexport QNX_ABI=$1\nsource /opt/qnx660/qnx660-env.sh\n~/DevTools/cmake-3.9.0-rc5-Linux-x86_64/bin/cmake -G \"Unix Makefiles\" -DQNX_PLATFORM_ABI=\"$1\" -DPLATFORM_ABI=qnx -DCMAKE_TOOLCHAIN_FILE=${CURRENT_SCRIPT_DIR}/toolchains/qnx.toolchain.cmake\nmake\n}\nqnx.toolchain.cmake file :\ncmake_minimum_required(VERSION 2.8)\nset(CMAKE_SYSTEM_NAME QNX)\nset(QNX_PLATFORM_ABI \"$ENV{QNX_ABI}\")\nif(QNX_PLATFORM_ABI STREQUAL \"x86\")\nset(ARCH_NAME gcc_ntox86)\nset(CMAKE_C_COMPILER /opt/qnx660/host/linux/x86/usr/bin/qcc)\nset(CMAKE_C_COMPILER_TARGET ${ARCH_NAME})\nset(CMAKE_CXX_COMPILER /opt/qnx660/host/linux/x86/usr/bin/QCC)\nset(CMAKE_CXX_COMPILER_TARGET ${ARCH_NAME})\n\nelseif(QNX_PLATFORM_ABI STREQUAL \"armv7\")\nset(ARCH_NAME gcc_ntoarmv7le)\nset(CMAKE_C_COMPILER /opt/qnx660/host/linux/x86/usr/bin/qcc)\nset(CMAKE_C_COMPILER_TARGET ${ARCH_NAME})\nset(CMAKE_CXX_COMPILER /opt/qnx660/host/linux/x86/usr/bin/QCC)\nset(CMAKE_CXX_COMPILER_TARGET ${ARCH_NAME})\n\nelse()\nmessage( SEND_ERROR \"Unknown QNX_PLATFORM_ABI=\"${QNX_PLATFORM_ABI}\" is specified.\" )\nendif()\n@andrehentz @aselle", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**:binary\r\n- **TensorFlow version (use command below)**:master latest\r\n- **Python version**: 2.7\r\n- **Bazel version (if compiling from source)**:0.7\r\n\r\n### Describe the problem\r\n\r\nmy goal is compile tensorflow lite static library using QNX-QCC compiler\u3002 This is possible?\r\nAnd do I need to modify the code in kernels/*.cc or other souce code , and how do\u3002\r\n\r\nPlease give me some advice, thx\u3002\r\n\r\n**the make script is just  like below\uff1a**\r\n\r\n**make script file:**\r\n\r\nfunction make_qnx() {\r\n\tif [ ! -d $1 ];then\r\n\t\tmkdir $1 || exit_popd 1\r\n\tfi\r\n\tcd $1\r\n\texport QNX_ABI=$1\r\n\tsource /opt/qnx660/qnx660-env.sh\r\n\t~/DevTools/cmake-3.9.0-rc5-Linux-x86_64/bin/cmake -G \"Unix Makefiles\" -DQNX_PLATFORM_ABI=\"$1\" -DPLATFORM_ABI=qnx -DCMAKE_TOOLCHAIN_FILE=${CURRENT_SCRIPT_DIR}/toolchains/**qnx.toolchain.cmake**\r\n\tmake\r\n}\r\n\r\n**qnx.toolchain.cmake file :**\r\n\r\ncmake_minimum_required(VERSION 2.8)\r\nset(CMAKE_SYSTEM_NAME QNX)\r\nset(QNX_PLATFORM_ABI \"$ENV{QNX_ABI}\")\r\n\r\nif(QNX_PLATFORM_ABI STREQUAL \"x86\")\r\n\tset(ARCH_NAME gcc_ntox86)\r\n\r\n\tset(CMAKE_C_COMPILER /opt/qnx660/host/linux/x86/usr/bin/qcc)\r\n\tset(CMAKE_C_COMPILER_TARGET ${ARCH_NAME})\r\n\tset(CMAKE_CXX_COMPILER /opt/qnx660/host/linux/x86/usr/bin/QCC)\r\n\tset(CMAKE_CXX_COMPILER_TARGET ${ARCH_NAME})\r\nelseif(QNX_PLATFORM_ABI STREQUAL \"armv7\")\r\n\tset(ARCH_NAME gcc_ntoarmv7le)\r\n\t\r\n\tset(CMAKE_C_COMPILER /opt/qnx660/host/linux/x86/usr/bin/qcc)\r\n\tset(CMAKE_C_COMPILER_TARGET ${ARCH_NAME})\r\n\tset(CMAKE_CXX_COMPILER /opt/qnx660/host/linux/x86/usr/bin/QCC)\r\n\tset(CMAKE_CXX_COMPILER_TARGET ${ARCH_NAME})\r\nelse()\r\n message( SEND_ERROR \"Unknown QNX_PLATFORM_ABI=\\\"${QNX_PLATFORM_ABI}\\\" is specified.\" )\r\nendif()\r\n\r\n@andrehentz @aselle \r\n\r\n\r\n"}