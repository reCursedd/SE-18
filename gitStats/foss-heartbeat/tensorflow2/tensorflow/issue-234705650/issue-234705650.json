{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10580", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10580/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10580/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10580/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/10580", "id": 234705650, "node_id": "MDU6SXNzdWUyMzQ3MDU2NTA=", "number": 10580, "title": "contrib.keras TypeError with HDF5Matrix and validation_split", "user": {"login": "droidicus", "id": 6981482, "node_id": "MDQ6VXNlcjY5ODE0ODI=", "avatar_url": "https://avatars2.githubusercontent.com/u/6981482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/droidicus", "html_url": "https://github.com/droidicus", "followers_url": "https://api.github.com/users/droidicus/followers", "following_url": "https://api.github.com/users/droidicus/following{/other_user}", "gists_url": "https://api.github.com/users/droidicus/gists{/gist_id}", "starred_url": "https://api.github.com/users/droidicus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/droidicus/subscriptions", "organizations_url": "https://api.github.com/users/droidicus/orgs", "repos_url": "https://api.github.com/users/droidicus/repos", "events_url": "https://api.github.com/users/droidicus/events{/privacy}", "received_events_url": "https://api.github.com/users/droidicus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2017-06-09T02:30:42Z", "updated_at": "2017-06-09T19:45:11Z", "closed_at": "2017-06-09T19:45:11Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Windows 10</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: Binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: v1.2.0-rc2</li>\n<li><strong>Bazel version (if compiling from source)</strong>: N/A</li>\n<li><strong>CUDA/cuDNN version</strong>: v8.0/v5.1</li>\n<li><strong>GPU model and memory</strong>: NVIDIA M4000, 8GB</li>\n<li><strong>Exact command to reproduce</strong>: <a href=\"https://gist.github.com/droidicus/4a55c83e522d90b103b81bf5fb63e610\">https://gist.github.com/droidicus/4a55c83e522d90b103b81bf5fb63e610</a></li>\n</ul>\n<h3>Describe the problem</h3>\n<p>When using tf.contrib.keras.HDF5Matrix as an input to model.fit, a TypeError is thrown if validation_split is used. If no validation_split is used then the model.fit command proceeds as expected.</p>\n<h3>Source code / logs</h3>\n<p>A gist of a minimal example is available here: <a href=\"https://gist.github.com/droidicus/4a55c83e522d90b103b81bf5fb63e610\">https://gist.github.com/droidicus/4a55c83e522d90b103b81bf5fb63e610</a></p>\n<p>The trace of the error is as follows:</p>\n<pre><code>TypeError                                 Traceback (most recent call last)\n&lt;ipython-input-2-bdaf6d0caaa7&gt; in &lt;module&gt;()\n     13 # This call to fit uses a validation_split, and causes:\n     14 # TypeError: unsupported operand type(s) for +: 'NoneType' and 'int'\n---&gt; 15 model.fit(X_train, y_train, validation_split=0.1, shuffle='batch')\n \nC:\\Program Files\\Anaconda3\\envs\\tensorflow_rc\\lib\\site-packages\\tensorflow\\contrib\\keras\\python\\keras\\models.py in fit(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch)\n    842         class_weight=class_weight,\n    843         sample_weight=sample_weight,\n--&gt; 844         initial_epoch=initial_epoch)\n    845\n    846   def evaluate(self, x, y, batch_size=32, verbose=1, sample_weight=None):\n \nC:\\Program Files\\Anaconda3\\envs\\tensorflow_rc\\lib\\site-packages\\tensorflow\\contrib\\keras\\python\\keras\\engine\\training.py in fit(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch)\n   1436       do_validation = True\n   1437       split_at = int(len(x[0]) * (1. - validation_split))\n-&gt; 1438       x, val_x = (_slice_arrays(x, 0, split_at), _slice_arrays(x, split_at))\n   1439       y, val_y = (_slice_arrays(y, 0, split_at), _slice_arrays(y, split_at))\n   1440       sample_weights, val_sample_weights = (_slice_arrays(\n \nC:\\Program Files\\Anaconda3\\envs\\tensorflow_rc\\lib\\site-packages\\tensorflow\\contrib\\keras\\python\\keras\\engine\\training.py in _slice_arrays(arrays, start, stop)\n    395       return [x[start] for x in arrays]\n    396     else:\n--&gt; 397       return [x[start:stop] for x in arrays]\n    398   else:\n    399     if hasattr(start, '__len__'):\n \nC:\\Program Files\\Anaconda3\\envs\\tensorflow_rc\\lib\\site-packages\\tensorflow\\contrib\\keras\\python\\keras\\engine\\training.py in &lt;listcomp&gt;(.0)\n    395       return [x[start] for x in arrays]\n    396     else:\n--&gt; 397       return [x[start:stop] for x in arrays]\n    398   else:\n    399     if hasattr(start, '__len__'):\n \nC:\\Program Files\\Anaconda3\\envs\\tensorflow_rc\\lib\\site-packages\\tensorflow\\contrib\\keras\\python\\keras\\utils\\io_utils.py in __getitem__(self, key)\n     81   def __getitem__(self, key):\n     82     if isinstance(key, slice):\n---&gt; 83       if key.stop + self.start &lt;= self.end:\n     84         idx = slice(key.start + self.start, key.stop + self.start)\n     85       else:\n \nTypeError: unsupported operand type(s) for +: 'NoneType' and 'int'\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10\nTensorFlow installed from (source or binary): Binary\nTensorFlow version (use command below): v1.2.0-rc2\nBazel version (if compiling from source): N/A\nCUDA/cuDNN version: v8.0/v5.1\nGPU model and memory: NVIDIA M4000, 8GB\nExact command to reproduce: https://gist.github.com/droidicus/4a55c83e522d90b103b81bf5fb63e610\n\nDescribe the problem\nWhen using tf.contrib.keras.HDF5Matrix as an input to model.fit, a TypeError is thrown if validation_split is used. If no validation_split is used then the model.fit command proceeds as expected.\nSource code / logs\nA gist of a minimal example is available here: https://gist.github.com/droidicus/4a55c83e522d90b103b81bf5fb63e610\nThe trace of the error is as follows:\nTypeError                                 Traceback (most recent call last)\n<ipython-input-2-bdaf6d0caaa7> in <module>()\n     13 # This call to fit uses a validation_split, and causes:\n     14 # TypeError: unsupported operand type(s) for +: 'NoneType' and 'int'\n---> 15 model.fit(X_train, y_train, validation_split=0.1, shuffle='batch')\n \nC:\\Program Files\\Anaconda3\\envs\\tensorflow_rc\\lib\\site-packages\\tensorflow\\contrib\\keras\\python\\keras\\models.py in fit(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch)\n    842         class_weight=class_weight,\n    843         sample_weight=sample_weight,\n--> 844         initial_epoch=initial_epoch)\n    845\n    846   def evaluate(self, x, y, batch_size=32, verbose=1, sample_weight=None):\n \nC:\\Program Files\\Anaconda3\\envs\\tensorflow_rc\\lib\\site-packages\\tensorflow\\contrib\\keras\\python\\keras\\engine\\training.py in fit(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch)\n   1436       do_validation = True\n   1437       split_at = int(len(x[0]) * (1. - validation_split))\n-> 1438       x, val_x = (_slice_arrays(x, 0, split_at), _slice_arrays(x, split_at))\n   1439       y, val_y = (_slice_arrays(y, 0, split_at), _slice_arrays(y, split_at))\n   1440       sample_weights, val_sample_weights = (_slice_arrays(\n \nC:\\Program Files\\Anaconda3\\envs\\tensorflow_rc\\lib\\site-packages\\tensorflow\\contrib\\keras\\python\\keras\\engine\\training.py in _slice_arrays(arrays, start, stop)\n    395       return [x[start] for x in arrays]\n    396     else:\n--> 397       return [x[start:stop] for x in arrays]\n    398   else:\n    399     if hasattr(start, '__len__'):\n \nC:\\Program Files\\Anaconda3\\envs\\tensorflow_rc\\lib\\site-packages\\tensorflow\\contrib\\keras\\python\\keras\\engine\\training.py in <listcomp>(.0)\n    395       return [x[start] for x in arrays]\n    396     else:\n--> 397       return [x[start:stop] for x in arrays]\n    398   else:\n    399     if hasattr(start, '__len__'):\n \nC:\\Program Files\\Anaconda3\\envs\\tensorflow_rc\\lib\\site-packages\\tensorflow\\contrib\\keras\\python\\keras\\utils\\io_utils.py in __getitem__(self, key)\n     81   def __getitem__(self, key):\n     82     if isinstance(key, slice):\n---> 83       if key.stop + self.start <= self.end:\n     84         idx = slice(key.start + self.start, key.stop + self.start)\n     85       else:\n \nTypeError: unsupported operand type(s) for +: 'NoneType' and 'int'", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 10\r\n- **TensorFlow installed from (source or binary)**: Binary\r\n- **TensorFlow version (use command below)**: v1.2.0-rc2\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: v8.0/v5.1\r\n- **GPU model and memory**: NVIDIA M4000, 8GB\r\n- **Exact command to reproduce**: https://gist.github.com/droidicus/4a55c83e522d90b103b81bf5fb63e610\r\n\r\n### Describe the problem\r\nWhen using tf.contrib.keras.HDF5Matrix as an input to model.fit, a TypeError is thrown if validation_split is used. If no validation_split is used then the model.fit command proceeds as expected.\r\n\r\n### Source code / logs\r\nA gist of a minimal example is available here: https://gist.github.com/droidicus/4a55c83e522d90b103b81bf5fb63e610\r\n\r\nThe trace of the error is as follows:\r\n```\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-2-bdaf6d0caaa7> in <module>()\r\n     13 # This call to fit uses a validation_split, and causes:\r\n     14 # TypeError: unsupported operand type(s) for +: 'NoneType' and 'int'\r\n---> 15 model.fit(X_train, y_train, validation_split=0.1, shuffle='batch')\r\n \r\nC:\\Program Files\\Anaconda3\\envs\\tensorflow_rc\\lib\\site-packages\\tensorflow\\contrib\\keras\\python\\keras\\models.py in fit(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch)\r\n    842         class_weight=class_weight,\r\n    843         sample_weight=sample_weight,\r\n--> 844         initial_epoch=initial_epoch)\r\n    845\r\n    846   def evaluate(self, x, y, batch_size=32, verbose=1, sample_weight=None):\r\n \r\nC:\\Program Files\\Anaconda3\\envs\\tensorflow_rc\\lib\\site-packages\\tensorflow\\contrib\\keras\\python\\keras\\engine\\training.py in fit(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch)\r\n   1436       do_validation = True\r\n   1437       split_at = int(len(x[0]) * (1. - validation_split))\r\n-> 1438       x, val_x = (_slice_arrays(x, 0, split_at), _slice_arrays(x, split_at))\r\n   1439       y, val_y = (_slice_arrays(y, 0, split_at), _slice_arrays(y, split_at))\r\n   1440       sample_weights, val_sample_weights = (_slice_arrays(\r\n \r\nC:\\Program Files\\Anaconda3\\envs\\tensorflow_rc\\lib\\site-packages\\tensorflow\\contrib\\keras\\python\\keras\\engine\\training.py in _slice_arrays(arrays, start, stop)\r\n    395       return [x[start] for x in arrays]\r\n    396     else:\r\n--> 397       return [x[start:stop] for x in arrays]\r\n    398   else:\r\n    399     if hasattr(start, '__len__'):\r\n \r\nC:\\Program Files\\Anaconda3\\envs\\tensorflow_rc\\lib\\site-packages\\tensorflow\\contrib\\keras\\python\\keras\\engine\\training.py in <listcomp>(.0)\r\n    395       return [x[start] for x in arrays]\r\n    396     else:\r\n--> 397       return [x[start:stop] for x in arrays]\r\n    398   else:\r\n    399     if hasattr(start, '__len__'):\r\n \r\nC:\\Program Files\\Anaconda3\\envs\\tensorflow_rc\\lib\\site-packages\\tensorflow\\contrib\\keras\\python\\keras\\utils\\io_utils.py in __getitem__(self, key)\r\n     81   def __getitem__(self, key):\r\n     82     if isinstance(key, slice):\r\n---> 83       if key.stop + self.start <= self.end:\r\n     84         idx = slice(key.start + self.start, key.stop + self.start)\r\n     85       else:\r\n \r\nTypeError: unsupported operand type(s) for +: 'NoneType' and 'int'\r\n```"}