{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/307158441", "html_url": "https://github.com/tensorflow/tensorflow/issues/6683#issuecomment-307158441", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6683", "id": 307158441, "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzE1ODQ0MQ==", "user": {"login": "igorbb", "id": 1078598, "node_id": "MDQ6VXNlcjEwNzg1OTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1078598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igorbb", "html_url": "https://github.com/igorbb", "followers_url": "https://api.github.com/users/igorbb/followers", "following_url": "https://api.github.com/users/igorbb/following{/other_user}", "gists_url": "https://api.github.com/users/igorbb/gists{/gist_id}", "starred_url": "https://api.github.com/users/igorbb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igorbb/subscriptions", "organizations_url": "https://api.github.com/users/igorbb/orgs", "repos_url": "https://api.github.com/users/igorbb/repos", "events_url": "https://api.github.com/users/igorbb/events{/privacy}", "received_events_url": "https://api.github.com/users/igorbb/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-08T16:35:35Z", "updated_at": "2017-06-08T16:36:38Z", "author_association": "NONE", "body_html": "<p>Yes</p>\n<p><strong>Before trainig</strong></p>\n<pre><code>with tf.Session(graph=train_graph) as sess:\n    list_before_train = [v.name for v in tf.global_variables()]\npprint.pprint(list_before_train)    \n</code></pre>\n<blockquote>\n<p>['EMBEDDING/Variable:0',<br>\n'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights:0',<br>\n'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases:0',<br>\n'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights:0',<br>\n'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases:0',<br>\n'OUT/W:0',<br>\n'OUT/B:0',<br>\n'beta1_power:0',<br>\n'beta2_power:0',<br>\n'EMBEDDING/Variable/Adam:0',<br>\n'EMBEDDING/Variable/Adam_1:0',<br>\n'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Adam:0',<br>\n'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Adam_1:0',<br>\n'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/Adam:0',<br>\n'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/Adam_1:0',<br>\n'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Adam:0',<br>\n'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Adam_1:0',<br>\n'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/Adam:0',<br>\n'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/Adam_1:0',<br>\n'OUT/W/Adam:0',<br>\n'OUT/W/Adam_1:0',<br>\n'OUT/B/Adam:0',<br>\n'OUT/B/Adam_1:0']</p>\n</blockquote>\n<p><strong>After Training</strong></p>\n<pre><code>with tf.Session(graph=train_graph) as sess:\n    list_after_train = [v.name for v in tf.global_variables()]\npprint.pprint(list_after_train)    \n\n</code></pre>\n<blockquote>\n<p>['EMBEDDING/Variable:0',<br>\n'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights:0',<br>\n'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases:0',<br>\n'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights:0',<br>\n'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases:0',<br>\n'OUT/W:0',<br>\n'OUT/B:0',<br>\n'beta1_power:0',<br>\n'beta2_power:0',<br>\n'EMBEDDING/Variable/Adam:0',<br>\n'EMBEDDING/Variable/Adam_1:0',<br>\n'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Adam:0',<br>\n'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Adam_1:0',<br>\n'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/Adam:0',<br>\n'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/Adam_1:0',<br>\n'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Adam:0',<br>\n'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Adam_1:0',<br>\n'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/Adam:0',<br>\n'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/Adam_1:0',<br>\n'OUT/W/Adam:0',<br>\n'OUT/W/Adam_1:0',<br>\n'OUT/B/Adam:0',<br>\n'OUT/B/Adam_1:0']</p>\n</blockquote>\n<p><strong>After load</strong><br>\n*This means we reset the jupyter kernel (python env)</p>\n<pre><code>tf.reset_default_graph()\ntest_acc =[]\nwith tf.Session() as sess:\n    saver = tf.train.import_meta_graph(ckpt+'.meta')\n    saver.restore(sess, ckpt)\n    list_after_reset = [v.name for v in tf.global_variables()]\n</code></pre>\n<blockquote>\n<p>['EMBEDDING/Variable:0',<br>\n'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights:0',<br>\n'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases:0',<br>\n'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights:0',<br>\n'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases:0',<br>\n'OUT/W:0',<br>\n'OUT/B:0',<br>\n'beta1_power:0',<br>\n'beta2_power:0',<br>\n'EMBEDDING/Variable/Adam:0',<br>\n'EMBEDDING/Variable/Adam_1:0',<br>\n'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Adam:0',<br>\n'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Adam_1:0',<br>\n'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/Adam:0',<br>\n'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/Adam_1:0',<br>\n'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Adam:0',<br>\n'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Adam_1:0',<br>\n'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/Adam:0',<br>\n'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/Adam_1:0',<br>\n'OUT/W/Adam:0',<br>\n'OUT/W/Adam_1:0',<br>\n'OUT/B/Adam:0',<br>\n'OUT/B/Adam_1:0']</p>\n</blockquote>", "body_text": "Yes\nBefore trainig\nwith tf.Session(graph=train_graph) as sess:\n    list_before_train = [v.name for v in tf.global_variables()]\npprint.pprint(list_before_train)    \n\n\n['EMBEDDING/Variable:0',\n'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights:0',\n'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases:0',\n'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights:0',\n'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases:0',\n'OUT/W:0',\n'OUT/B:0',\n'beta1_power:0',\n'beta2_power:0',\n'EMBEDDING/Variable/Adam:0',\n'EMBEDDING/Variable/Adam_1:0',\n'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Adam:0',\n'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Adam_1:0',\n'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/Adam:0',\n'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/Adam_1:0',\n'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Adam:0',\n'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Adam_1:0',\n'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/Adam:0',\n'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/Adam_1:0',\n'OUT/W/Adam:0',\n'OUT/W/Adam_1:0',\n'OUT/B/Adam:0',\n'OUT/B/Adam_1:0']\n\nAfter Training\nwith tf.Session(graph=train_graph) as sess:\n    list_after_train = [v.name for v in tf.global_variables()]\npprint.pprint(list_after_train)    \n\n\n\n['EMBEDDING/Variable:0',\n'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights:0',\n'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases:0',\n'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights:0',\n'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases:0',\n'OUT/W:0',\n'OUT/B:0',\n'beta1_power:0',\n'beta2_power:0',\n'EMBEDDING/Variable/Adam:0',\n'EMBEDDING/Variable/Adam_1:0',\n'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Adam:0',\n'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Adam_1:0',\n'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/Adam:0',\n'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/Adam_1:0',\n'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Adam:0',\n'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Adam_1:0',\n'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/Adam:0',\n'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/Adam_1:0',\n'OUT/W/Adam:0',\n'OUT/W/Adam_1:0',\n'OUT/B/Adam:0',\n'OUT/B/Adam_1:0']\n\nAfter load\n*This means we reset the jupyter kernel (python env)\ntf.reset_default_graph()\ntest_acc =[]\nwith tf.Session() as sess:\n    saver = tf.train.import_meta_graph(ckpt+'.meta')\n    saver.restore(sess, ckpt)\n    list_after_reset = [v.name for v in tf.global_variables()]\n\n\n['EMBEDDING/Variable:0',\n'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights:0',\n'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases:0',\n'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights:0',\n'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases:0',\n'OUT/W:0',\n'OUT/B:0',\n'beta1_power:0',\n'beta2_power:0',\n'EMBEDDING/Variable/Adam:0',\n'EMBEDDING/Variable/Adam_1:0',\n'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Adam:0',\n'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Adam_1:0',\n'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/Adam:0',\n'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/Adam_1:0',\n'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Adam:0',\n'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Adam_1:0',\n'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/Adam:0',\n'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/Adam_1:0',\n'OUT/W/Adam:0',\n'OUT/W/Adam_1:0',\n'OUT/B/Adam:0',\n'OUT/B/Adam_1:0']", "body": "Yes\r\n\r\n**Before trainig**\r\n```\r\nwith tf.Session(graph=train_graph) as sess:\r\n    list_before_train = [v.name for v in tf.global_variables()]\r\npprint.pprint(list_before_train)    \r\n```\r\n\r\n> \r\n> ['EMBEDDING/Variable:0',\r\n>  'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights:0',\r\n>  'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases:0',\r\n>  'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights:0',\r\n>  'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases:0',\r\n>  'OUT/W:0',\r\n>  'OUT/B:0',\r\n>  'beta1_power:0',\r\n>  'beta2_power:0',\r\n>  'EMBEDDING/Variable/Adam:0',\r\n>  'EMBEDDING/Variable/Adam_1:0',\r\n>  'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Adam:0',\r\n>  'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Adam_1:0',\r\n>  'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/Adam:0',\r\n>  'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/Adam_1:0',\r\n>  'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Adam:0',\r\n>  'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Adam_1:0',\r\n>  'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/Adam:0',\r\n>  'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/Adam_1:0',\r\n>  'OUT/W/Adam:0',\r\n>  'OUT/W/Adam_1:0',\r\n>  'OUT/B/Adam:0',\r\n>  'OUT/B/Adam_1:0']\r\n> \r\n\r\n**After Training**\r\n```\r\nwith tf.Session(graph=train_graph) as sess:\r\n    list_after_train = [v.name for v in tf.global_variables()]\r\npprint.pprint(list_after_train)    \r\n\r\n```\r\n\r\n> ['EMBEDDING/Variable:0',\r\n>  'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights:0',\r\n>  'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases:0',\r\n>  'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights:0',\r\n>  'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases:0',\r\n>  'OUT/W:0',\r\n>  'OUT/B:0',\r\n>  'beta1_power:0',\r\n>  'beta2_power:0',\r\n>  'EMBEDDING/Variable/Adam:0',\r\n>  'EMBEDDING/Variable/Adam_1:0',\r\n>  'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Adam:0',\r\n>  'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Adam_1:0',\r\n>  'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/Adam:0',\r\n>  'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/Adam_1:0',\r\n>  'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Adam:0',\r\n>  'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Adam_1:0',\r\n>  'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/Adam:0',\r\n>  'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/Adam_1:0',\r\n>  'OUT/W/Adam:0',\r\n>  'OUT/W/Adam_1:0',\r\n>  'OUT/B/Adam:0',\r\n>  'OUT/B/Adam_1:0']\r\n\r\n**After load**\r\n *This means we reset the jupyter kernel (python env)\r\n```\r\ntf.reset_default_graph()\r\ntest_acc =[]\r\nwith tf.Session() as sess:\r\n    saver = tf.train.import_meta_graph(ckpt+'.meta')\r\n    saver.restore(sess, ckpt)\r\n    list_after_reset = [v.name for v in tf.global_variables()]\r\n```\r\n\r\n> \r\n> ['EMBEDDING/Variable:0',\r\n>  'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights:0',\r\n>  'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases:0',\r\n>  'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights:0',\r\n>  'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases:0',\r\n>  'OUT/W:0',\r\n>  'OUT/B:0',\r\n>  'beta1_power:0',\r\n>  'beta2_power:0',\r\n>  'EMBEDDING/Variable/Adam:0',\r\n>  'EMBEDDING/Variable/Adam_1:0',\r\n>  'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Adam:0',\r\n>  'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Adam_1:0',\r\n>  'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/Adam:0',\r\n>  'LSTM_ENS/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/Adam_1:0',\r\n>  'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Adam:0',\r\n>  'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Adam_1:0',\r\n>  'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/Adam:0',\r\n>  'LSTM_ENS/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/Adam_1:0',\r\n>  'OUT/W/Adam:0',\r\n>  'OUT/W/Adam_1:0',\r\n>  'OUT/B/Adam:0',\r\n>  'OUT/B/Adam_1:0']"}