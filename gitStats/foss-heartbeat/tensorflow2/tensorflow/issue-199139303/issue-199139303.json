{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6683", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6683/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6683/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6683/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/6683", "id": 199139303, "node_id": "MDU6SXNzdWUxOTkxMzkzMDM=", "number": 6683, "title": "Tensorflow Model with CTC loss having save and restore problem", "user": {"login": "xisnu", "id": 15844017, "node_id": "MDQ6VXNlcjE1ODQ0MDE3", "avatar_url": "https://avatars2.githubusercontent.com/u/15844017?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xisnu", "html_url": "https://github.com/xisnu", "followers_url": "https://api.github.com/users/xisnu/followers", "following_url": "https://api.github.com/users/xisnu/following{/other_user}", "gists_url": "https://api.github.com/users/xisnu/gists{/gist_id}", "starred_url": "https://api.github.com/users/xisnu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xisnu/subscriptions", "organizations_url": "https://api.github.com/users/xisnu/orgs", "repos_url": "https://api.github.com/users/xisnu/repos", "events_url": "https://api.github.com/users/xisnu/events{/privacy}", "received_events_url": "https://api.github.com/users/xisnu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}, {"id": 473184161, "node_id": "MDU6TGFiZWw0NzMxODQxNjE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:support", "name": "type:support", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 71, "created_at": "2017-01-06T07:19:15Z", "updated_at": "2018-03-05T15:25:43Z", "closed_at": "2018-02-28T18:29:41Z", "author_association": "NONE", "body_html": "<p>I am using tensorflow 0.12 without GPU support. I was testing it with various models. My template structure is</p>\n<pre><code>#Load some data from file\ngraph=tf.Graph()\nwith graph.as_default():\n     #Build Network\n     #saver=tf.train.Saver()\nwith tf.Session(graph=graph) as session:\n     if(sys.argv[1]==\"load\"):\n          saver.restore(session,\"weight_last\")\n     else:\n           initop=tf.global_variables_initializer()\n           session.run(initop)\n    #Continue Training\n</code></pre>\n<p>Now, I am facing a strange issue. When I am creating a MLP or RNN with this structure with a categorical cross entropy loss model this saving and restoring is working perfectly, i.e. after restore the loss is showing exact value that was showed during last save. But unfortunately when the network is loaded with CTC loss then after restoring the model is starting almost a new training. I am not sure what is going wrong? Any help shall be highly appreciated.</p>", "body_text": "I am using tensorflow 0.12 without GPU support. I was testing it with various models. My template structure is\n#Load some data from file\ngraph=tf.Graph()\nwith graph.as_default():\n     #Build Network\n     #saver=tf.train.Saver()\nwith tf.Session(graph=graph) as session:\n     if(sys.argv[1]==\"load\"):\n          saver.restore(session,\"weight_last\")\n     else:\n           initop=tf.global_variables_initializer()\n           session.run(initop)\n    #Continue Training\n\nNow, I am facing a strange issue. When I am creating a MLP or RNN with this structure with a categorical cross entropy loss model this saving and restoring is working perfectly, i.e. after restore the loss is showing exact value that was showed during last save. But unfortunately when the network is loaded with CTC loss then after restoring the model is starting almost a new training. I am not sure what is going wrong? Any help shall be highly appreciated.", "body": "I am using tensorflow 0.12 without GPU support. I was testing it with various models. My template structure is\r\n```\r\n#Load some data from file\r\ngraph=tf.Graph()\r\nwith graph.as_default():\r\n     #Build Network\r\n     #saver=tf.train.Saver()\r\nwith tf.Session(graph=graph) as session:\r\n     if(sys.argv[1]==\"load\"):\r\n          saver.restore(session,\"weight_last\")\r\n     else:\r\n           initop=tf.global_variables_initializer()\r\n           session.run(initop)\r\n    #Continue Training\r\n```\r\nNow, I am facing a strange issue. When I am creating a MLP or RNN with this structure with a categorical cross entropy loss model this saving and restoring is working perfectly, i.e. after restore the loss is showing exact value that was showed during last save. But unfortunately when the network is loaded with CTC loss then after restoring the model is starting almost a new training. I am not sure what is going wrong? Any help shall be highly appreciated."}