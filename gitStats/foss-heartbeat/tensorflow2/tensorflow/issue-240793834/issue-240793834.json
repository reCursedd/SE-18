{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11307", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11307/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11307/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11307/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/11307", "id": 240793834, "node_id": "MDU6SXNzdWUyNDA3OTM4MzQ=", "number": 11307, "title": "Feature are incompatible with given information in evaluate() using contrib.learn.SVM", "user": {"login": "annieyuan", "id": 16944112, "node_id": "MDQ6VXNlcjE2OTQ0MTEy", "avatar_url": "https://avatars1.githubusercontent.com/u/16944112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/annieyuan", "html_url": "https://github.com/annieyuan", "followers_url": "https://api.github.com/users/annieyuan/followers", "following_url": "https://api.github.com/users/annieyuan/following{/other_user}", "gists_url": "https://api.github.com/users/annieyuan/gists{/gist_id}", "starred_url": "https://api.github.com/users/annieyuan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/annieyuan/subscriptions", "organizations_url": "https://api.github.com/users/annieyuan/orgs", "repos_url": "https://api.github.com/users/annieyuan/repos", "events_url": "https://api.github.com/users/annieyuan/events{/privacy}", "received_events_url": "https://api.github.com/users/annieyuan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-05T22:27:19Z", "updated_at": "2017-07-07T16:13:29Z", "closed_at": "2017-07-07T16:13:29Z", "author_association": "NONE", "body_html": "<p>Code is as follows:</p>\n<pre><code>def svm_tf(file):\n\tX,Y,training_size, index = process_data(file)\n\tdef input_fn():\n\t\treturn {\n              'example_id': tf.constant(index[:training_size]),\n              'multi_dim_feature': tf.constant(X[:training_size].values.tolist()),\n        }, tf.constant(Y[:training_size])\n\n\tfeature_columns = [tf.contrib.layers.real_valued_column(\"multi_dim_feature\",dimension=4)]\n\tsvm = learn.SVM(feature_columns=feature_columns,\n\t\t\t\t\tl1_regularization=0.0,\n\t\t\t\t\tl2_regularization=1.0,\n\t\t\t\t\texample_id_column='example_id')\t\n\tsvm.fit(input_fn=input_fn,steps=50)\n\n        def test_input():\n\t\treturn{\n\t\t'example_id': tf.constant(index[training_size:]),\n\t\t'features': tf.constant(X[training_size:].values.tolist())\n\t\t}, tf.constant(Y[training_size:])\n\t \n\n\taccuracy = svm.evaluate(input_fn=test_input,steps=1)['accuracy']\n\tprint('\\nAccuracy :{0:f}\\n'.format(accuracy))\n</code></pre>\n<p>However, when I run the program, it runs into error as follows:</p>\n<pre><code>Traceback (most recent call last):\n  File \"subscriber.py\", line 84, in &lt;module&gt;\n    svm_tf(file)\n  File \"subscriber.py\", line 75, in svm_tf\n    accuracy = svm.evaluate(input_fn=test_input,steps=1)['accuracy']\n  File \"/home/annie/.local/lib/python2.7/site-packages/tensorflow/python/util/deprecation.py\", line 289, in new_func\n    return func(*args, **kwargs)\n  File \"/home/annie/.local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 543, in evaluate\n    log_progress=log_progress)\n  File \"/home/annie/.local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 827, in _evaluate_model\n    self._check_inputs(features, labels)\n  File \"/home/annie/.local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 757, in _check_inputs\n    (str(features), str(self._features_info)))\nValueError: Features are incompatible with given information. Given features: {'example_id': &lt;tf.Tensor 'Const:0' shape=(1000,) dtype=string&gt;, 'features': &lt;tf.Tensor 'Const_1:0' shape=(1000, 4) dtype=float32&gt;}, required signatures: {'example_id': TensorSignature(dtype=tf.string, shape=TensorShape([Dimension(4000)]), is_sparse=False), 'multi_dim_feature': TensorSignature(dtype=tf.float32, shape=TensorShape([Dimension(4000), Dimension(4)]), is_sparse=False)}.\n</code></pre>\n<p>I cannot find any relevant questions online and therefore is very lost<br>\nPlease help! Thanks in advance</p>", "body_text": "Code is as follows:\ndef svm_tf(file):\n\tX,Y,training_size, index = process_data(file)\n\tdef input_fn():\n\t\treturn {\n              'example_id': tf.constant(index[:training_size]),\n              'multi_dim_feature': tf.constant(X[:training_size].values.tolist()),\n        }, tf.constant(Y[:training_size])\n\n\tfeature_columns = [tf.contrib.layers.real_valued_column(\"multi_dim_feature\",dimension=4)]\n\tsvm = learn.SVM(feature_columns=feature_columns,\n\t\t\t\t\tl1_regularization=0.0,\n\t\t\t\t\tl2_regularization=1.0,\n\t\t\t\t\texample_id_column='example_id')\t\n\tsvm.fit(input_fn=input_fn,steps=50)\n\n        def test_input():\n\t\treturn{\n\t\t'example_id': tf.constant(index[training_size:]),\n\t\t'features': tf.constant(X[training_size:].values.tolist())\n\t\t}, tf.constant(Y[training_size:])\n\t \n\n\taccuracy = svm.evaluate(input_fn=test_input,steps=1)['accuracy']\n\tprint('\\nAccuracy :{0:f}\\n'.format(accuracy))\n\nHowever, when I run the program, it runs into error as follows:\nTraceback (most recent call last):\n  File \"subscriber.py\", line 84, in <module>\n    svm_tf(file)\n  File \"subscriber.py\", line 75, in svm_tf\n    accuracy = svm.evaluate(input_fn=test_input,steps=1)['accuracy']\n  File \"/home/annie/.local/lib/python2.7/site-packages/tensorflow/python/util/deprecation.py\", line 289, in new_func\n    return func(*args, **kwargs)\n  File \"/home/annie/.local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 543, in evaluate\n    log_progress=log_progress)\n  File \"/home/annie/.local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 827, in _evaluate_model\n    self._check_inputs(features, labels)\n  File \"/home/annie/.local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 757, in _check_inputs\n    (str(features), str(self._features_info)))\nValueError: Features are incompatible with given information. Given features: {'example_id': <tf.Tensor 'Const:0' shape=(1000,) dtype=string>, 'features': <tf.Tensor 'Const_1:0' shape=(1000, 4) dtype=float32>}, required signatures: {'example_id': TensorSignature(dtype=tf.string, shape=TensorShape([Dimension(4000)]), is_sparse=False), 'multi_dim_feature': TensorSignature(dtype=tf.float32, shape=TensorShape([Dimension(4000), Dimension(4)]), is_sparse=False)}.\n\nI cannot find any relevant questions online and therefore is very lost\nPlease help! Thanks in advance", "body": "Code is as follows:\r\n```\r\ndef svm_tf(file):\r\n\tX,Y,training_size, index = process_data(file)\r\n\tdef input_fn():\r\n\t\treturn {\r\n              'example_id': tf.constant(index[:training_size]),\r\n              'multi_dim_feature': tf.constant(X[:training_size].values.tolist()),\r\n        }, tf.constant(Y[:training_size])\r\n\r\n\tfeature_columns = [tf.contrib.layers.real_valued_column(\"multi_dim_feature\",dimension=4)]\r\n\tsvm = learn.SVM(feature_columns=feature_columns,\r\n\t\t\t\t\tl1_regularization=0.0,\r\n\t\t\t\t\tl2_regularization=1.0,\r\n\t\t\t\t\texample_id_column='example_id')\t\r\n\tsvm.fit(input_fn=input_fn,steps=50)\r\n\r\n        def test_input():\r\n\t\treturn{\r\n\t\t'example_id': tf.constant(index[training_size:]),\r\n\t\t'features': tf.constant(X[training_size:].values.tolist())\r\n\t\t}, tf.constant(Y[training_size:])\r\n\t \r\n\r\n\taccuracy = svm.evaluate(input_fn=test_input,steps=1)['accuracy']\r\n\tprint('\\nAccuracy :{0:f}\\n'.format(accuracy))\r\n```\r\n\r\n\t\r\n\t\r\n\r\n\r\nHowever, when I run the program, it runs into error as follows:\r\n```\r\nTraceback (most recent call last):\r\n  File \"subscriber.py\", line 84, in <module>\r\n    svm_tf(file)\r\n  File \"subscriber.py\", line 75, in svm_tf\r\n    accuracy = svm.evaluate(input_fn=test_input,steps=1)['accuracy']\r\n  File \"/home/annie/.local/lib/python2.7/site-packages/tensorflow/python/util/deprecation.py\", line 289, in new_func\r\n    return func(*args, **kwargs)\r\n  File \"/home/annie/.local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 543, in evaluate\r\n    log_progress=log_progress)\r\n  File \"/home/annie/.local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 827, in _evaluate_model\r\n    self._check_inputs(features, labels)\r\n  File \"/home/annie/.local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 757, in _check_inputs\r\n    (str(features), str(self._features_info)))\r\nValueError: Features are incompatible with given information. Given features: {'example_id': <tf.Tensor 'Const:0' shape=(1000,) dtype=string>, 'features': <tf.Tensor 'Const_1:0' shape=(1000, 4) dtype=float32>}, required signatures: {'example_id': TensorSignature(dtype=tf.string, shape=TensorShape([Dimension(4000)]), is_sparse=False), 'multi_dim_feature': TensorSignature(dtype=tf.float32, shape=TensorShape([Dimension(4000), Dimension(4)]), is_sparse=False)}.\r\n```\r\n\r\nI cannot find any relevant questions online and therefore is very lost\r\nPlease help! Thanks in advance\r\n"}