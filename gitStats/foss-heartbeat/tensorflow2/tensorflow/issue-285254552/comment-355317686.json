{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/355317686", "html_url": "https://github.com/tensorflow/tensorflow/issues/15755#issuecomment-355317686", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15755", "id": 355317686, "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTMxNzY4Ng==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-04T15:51:07Z", "updated_at": "2018-01-04T16:24:30Z", "author_association": "CONTRIBUTOR", "body_html": "<p>It prints out all hundred outputs, then raises an exception because your code enqueues <code>None</code> into the queue:</p>\n<blockquote>\n<p>2018-01-04 07:44:40.490573: W tensorflow/core/framework/op_kernel.cc:1192] Invalid argument: TypeError: int() argument must be a string, a bytes-like object or a number, not 'NoneType'</p>\n</blockquote>\n<p>Perhaps the problem is in your shutdown logic, because it's possible that one worker could dequeue more than one <code>None</code>, leaving another worker blocked? I would have written <code>data_iter()</code> as:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">data_iter</span>():\n    next_val <span class=\"pl-k\">=</span> request_queue.get()\n    <span class=\"pl-k\">while</span> next_val <span class=\"pl-k\">is</span> <span class=\"pl-k\">not</span> <span class=\"pl-c1\">None</span>:\n        <span class=\"pl-k\">yield</span> next_val\n        next_val <span class=\"pl-k\">=</span> request_queue.get()</pre></div>\n<p>...to avoid that possibility.</p>", "body_text": "It prints out all hundred outputs, then raises an exception because your code enqueues None into the queue:\n\n2018-01-04 07:44:40.490573: W tensorflow/core/framework/op_kernel.cc:1192] Invalid argument: TypeError: int() argument must be a string, a bytes-like object or a number, not 'NoneType'\n\nPerhaps the problem is in your shutdown logic, because it's possible that one worker could dequeue more than one None, leaving another worker blocked? I would have written data_iter() as:\ndef data_iter():\n    next_val = request_queue.get()\n    while next_val is not None:\n        yield next_val\n        next_val = request_queue.get()\n...to avoid that possibility.", "body": "It prints out all hundred outputs, then raises an exception because your code enqueues `None` into the queue:\r\n\r\n> 2018-01-04 07:44:40.490573: W tensorflow/core/framework/op_kernel.cc:1192] Invalid argument: TypeError: int() argument must be a string, a bytes-like object or a number, not 'NoneType'\r\n\r\nPerhaps the problem is in your shutdown logic, because it's possible that one worker could dequeue more than one `None`, leaving another worker blocked? I would have written `data_iter()` as:\r\n\r\n```python\r\ndef data_iter():\r\n    next_val = request_queue.get()\r\n    while next_val is not None:\r\n        yield next_val\r\n        next_val = request_queue.get()\r\n```\r\n \r\n...to avoid that possibility."}