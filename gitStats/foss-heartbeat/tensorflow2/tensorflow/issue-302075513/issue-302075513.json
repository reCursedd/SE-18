{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17411", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17411/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17411/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17411/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17411", "id": 302075513, "node_id": "MDU6SXNzdWUzMDIwNzU1MTM=", "number": 17411, "title": "Illegal instruction (core dumped) after running import tensorflow", "user": {"login": "konnerthg", "id": 22011849, "node_id": "MDQ6VXNlcjIyMDExODQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/22011849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/konnerthg", "html_url": "https://github.com/konnerthg", "followers_url": "https://api.github.com/users/konnerthg/followers", "following_url": "https://api.github.com/users/konnerthg/following{/other_user}", "gists_url": "https://api.github.com/users/konnerthg/gists{/gist_id}", "starred_url": "https://api.github.com/users/konnerthg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/konnerthg/subscriptions", "organizations_url": "https://api.github.com/users/konnerthg/orgs", "repos_url": "https://api.github.com/users/konnerthg/repos", "events_url": "https://api.github.com/users/konnerthg/events{/privacy}", "received_events_url": "https://api.github.com/users/konnerthg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 78, "created_at": "2018-03-04T10:45:05Z", "updated_at": "2018-10-03T06:02:53Z", "closed_at": "2018-03-04T19:19:32Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: No</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>:<br>\n1.6.0-cp27-cp27mu-manylinux1_x86_64 (can only guess since <code>python -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"</code> gives me an error already)</li>\n<li><strong>Python version</strong>: Python 2.7.12</li>\n<li><strong>Exact command to reproduce</strong>: <code>import tensorflow</code></li>\n</ul>\n<p>I created a fresh virtual environment: <code>virtualenv -p python2 test_venv/</code><br>\nAnd installed tensorflow: <code>pip install --upgrade --no-cache-dir tensorflow</code><br>\n<code>import tensorflow</code> gives me <code>Illegal instruction (core dumped)</code></p>\n<p>Please help me understand what's going on and how I can fix it. Thank you.</p>\n<p>CPU information:</p>\n<pre><code>-cpu\n          description: CPU\n          product: Intel(R) Core(TM) i3 CPU       M 330  @ 2.13GHz\n          bus info: cpu@0\n          version: CPU Version\n          capabilities: x86-64 fpu fpu_exception wp vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni dtes64 monitor ds_cpl vmx est tm2 ssse3 cx16 xtpr pdcm sse4_1 sse4_2 popcnt lahf_lm tpr_shadow vnmi flexpriority ept vpid dtherm arat cpufreq\n</code></pre>\n<p><em>EDIT</em><br>\nStacktrace obtained with gdb:</p>\n<pre><code>#0  0x00007fffe5793880 in std::pair&lt;std::__detail::_Node_iterator&lt;std::pair&lt;tensorflow::StringPiece const, std::function&lt;bool (tensorflow::Variant*)&gt; &gt;, false, true&gt;, bool&gt; std::_Hashtable&lt;tensorflow::StringPiece, std::pair&lt;tensorflow::StringPiece const, std::function&lt;bool (tensorflow::Variant*)&gt; &gt;, std::allocator&lt;std::pair&lt;tensorflow::StringPiece const, std::function&lt;bool (tensorflow::Variant*)&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;tensorflow::StringPiece&gt;, tensorflow::StringPieceHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;tensorflow::StringPiece, std::function&lt;bool (tensorflow::Variant*)&gt; &gt; &gt;(std::integral_constant&lt;bool, true&gt;, std::pair&lt;tensorflow::StringPiece, std::function&lt;bool (tensorflow::Variant*)&gt; &gt;&amp;&amp;) ()\n   from /media/gerry/hdd_1/ws_hdd/test_venv/local/lib/python2.7/site-packages/tensorflow/python/../libtensorflow_framework.so\n#1  0x00007fffe5795735 in tensorflow::UnaryVariantOpRegistry::RegisterDecodeFn(std::string const&amp;, std::function&lt;bool (tensorflow::Variant*)&gt; const&amp;) () from /media/gerry/hdd_1/ws_hdd/test_venv/local/lib/python2.7/site-packages/tensorflow/python/../libtensorflow_framework.so\n#2  0x00007fffe5770a7c in tensorflow::variant_op_registry_fn_registration::UnaryVariantDecodeRegistration&lt;tensorflow::Tensor&gt;::UnaryVariantDecodeRegistration(std::string const&amp;) ()\n   from /media/gerry/hdd_1/ws_hdd/test_venv/local/lib/python2.7/site-packages/tensorflow/python/../libtensorflow_framework.so\n#3  0x00007fffe56ea165 in _GLOBAL__sub_I_tensor.cc ()\n   from /media/gerry/hdd_1/ws_hdd/test_venv/local/lib/python2.7/site-packages/tensorflow/python/../libtensorflow_framework.so\n#4  0x00007ffff7de76ba in call_init (l=&lt;optimized out&gt;, argc=argc@entry=2, argv=argv@entry=0x7fffffffd5c8, env=env@entry=0xa7b4d0)\n    at dl-init.c:72\n#5  0x00007ffff7de77cb in call_init (env=0xa7b4d0, argv=0x7fffffffd5c8, argc=2, l=&lt;optimized out&gt;) at dl-init.c:30\n#6  _dl_init (main_map=main_map@entry=0xa11920, argc=2, argv=0x7fffffffd5c8, env=0xa7b4d0) at dl-init.c:120\n#7  0x00007ffff7dec8e2 in dl_open_worker (a=a@entry=0x7fffffffb5c0) at dl-open.c:575\n#8  0x00007ffff7de7564 in _dl_catch_error (objname=objname@entry=0x7fffffffb5b0, errstring=errstring@entry=0x7fffffffb5b8, \n    mallocedp=mallocedp@entry=0x7fffffffb5af, operate=operate@entry=0x7ffff7dec4d0 &lt;dl_open_worker&gt;, args=args@entry=0x7fffffffb5c0)\n    at dl-error.c:187\n#9  0x00007ffff7debda9 in _dl_open (\n    file=0x7fffea7cbc34 \"/media/gerry/hdd_1/ws_hdd/test_venv/local/lib/python2.7/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\", mode=-2147483646, caller_dlopen=0x51ad19 &lt;_PyImport_GetDynLoadFunc+233&gt;, nsid=-2, argc=&lt;optimized out&gt;, argv=&lt;optimized out&gt;, env=0xa7b4d0)\n    at dl-open.c:660\n#10 0x00007ffff75ecf09 in dlopen_doit (a=a@entry=0x7fffffffb7f0) at dlopen.c:66\n#11 0x00007ffff7de7564 in _dl_catch_error (objname=0x9b1870, errstring=0x9b1878, mallocedp=0x9b1868, operate=0x7ffff75eceb0 &lt;dlopen_doit&gt;, \n    args=0x7fffffffb7f0) at dl-error.c:187\n#12 0x00007ffff75ed571 in _dlerror_run (operate=operate@entry=0x7ffff75eceb0 &lt;dlopen_doit&gt;, args=args@entry=0x7fffffffb7f0) at dlerror.c:163\n#13 0x00007ffff75ecfa1 in __dlopen (file=&lt;optimized out&gt;, mode=&lt;optimized out&gt;) at dlopen.c:87\n#14 0x000000000051ad19 in _PyImport_GetDynLoadFunc ()\n#15 0x000000000051a8e4 in _PyImport_LoadDynamicModule ()\n#16 0x00000000005b7b1b in ?? ()\n#17 0x00000000004bc3fa in PyEval_EvalFrameEx ()\n#18 0x00000000004c136f in PyEval_EvalFrameEx ()\n#19 0x00000000004b9ab6 in PyEval_EvalCodeEx ()\n#20 0x00000000004b97a6 in PyEval_EvalCode ()\n#21 0x00000000004b96df in PyImport_ExecCodeModuleEx ()\n#22 0x00000000004b2b06 in ?? ()\n#23 0x00000000004a4ae1 in ?? ()\n</code></pre>\n<p><em>EDIT 2</em><br>\nBazel version: N/A<br>\nCUDA/cuDNN version: N/A<br>\nGPU model and memory: N/A</p>\n<p>After downgrading to an older version of tensorflow the error goes away. I've been advised that my CPU (see information above) might not work with some improvements in the new API. If this is the case, I suppose there's no solution for my problem. Therefore, I will close this thread. Feel free to correct me though. Thank you for your support</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): No\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below):\n1.6.0-cp27-cp27mu-manylinux1_x86_64 (can only guess since python -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\" gives me an error already)\nPython version: Python 2.7.12\nExact command to reproduce: import tensorflow\n\nI created a fresh virtual environment: virtualenv -p python2 test_venv/\nAnd installed tensorflow: pip install --upgrade --no-cache-dir tensorflow\nimport tensorflow gives me Illegal instruction (core dumped)\nPlease help me understand what's going on and how I can fix it. Thank you.\nCPU information:\n-cpu\n          description: CPU\n          product: Intel(R) Core(TM) i3 CPU       M 330  @ 2.13GHz\n          bus info: cpu@0\n          version: CPU Version\n          capabilities: x86-64 fpu fpu_exception wp vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni dtes64 monitor ds_cpl vmx est tm2 ssse3 cx16 xtpr pdcm sse4_1 sse4_2 popcnt lahf_lm tpr_shadow vnmi flexpriority ept vpid dtherm arat cpufreq\n\nEDIT\nStacktrace obtained with gdb:\n#0  0x00007fffe5793880 in std::pair<std::__detail::_Node_iterator<std::pair<tensorflow::StringPiece const, std::function<bool (tensorflow::Variant*)> >, false, true>, bool> std::_Hashtable<tensorflow::StringPiece, std::pair<tensorflow::StringPiece const, std::function<bool (tensorflow::Variant*)> >, std::allocator<std::pair<tensorflow::StringPiece const, std::function<bool (tensorflow::Variant*)> > >, std::__detail::_Select1st, std::equal_to<tensorflow::StringPiece>, tensorflow::StringPieceHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_emplace<std::pair<tensorflow::StringPiece, std::function<bool (tensorflow::Variant*)> > >(std::integral_constant<bool, true>, std::pair<tensorflow::StringPiece, std::function<bool (tensorflow::Variant*)> >&&) ()\n   from /media/gerry/hdd_1/ws_hdd/test_venv/local/lib/python2.7/site-packages/tensorflow/python/../libtensorflow_framework.so\n#1  0x00007fffe5795735 in tensorflow::UnaryVariantOpRegistry::RegisterDecodeFn(std::string const&, std::function<bool (tensorflow::Variant*)> const&) () from /media/gerry/hdd_1/ws_hdd/test_venv/local/lib/python2.7/site-packages/tensorflow/python/../libtensorflow_framework.so\n#2  0x00007fffe5770a7c in tensorflow::variant_op_registry_fn_registration::UnaryVariantDecodeRegistration<tensorflow::Tensor>::UnaryVariantDecodeRegistration(std::string const&) ()\n   from /media/gerry/hdd_1/ws_hdd/test_venv/local/lib/python2.7/site-packages/tensorflow/python/../libtensorflow_framework.so\n#3  0x00007fffe56ea165 in _GLOBAL__sub_I_tensor.cc ()\n   from /media/gerry/hdd_1/ws_hdd/test_venv/local/lib/python2.7/site-packages/tensorflow/python/../libtensorflow_framework.so\n#4  0x00007ffff7de76ba in call_init (l=<optimized out>, argc=argc@entry=2, argv=argv@entry=0x7fffffffd5c8, env=env@entry=0xa7b4d0)\n    at dl-init.c:72\n#5  0x00007ffff7de77cb in call_init (env=0xa7b4d0, argv=0x7fffffffd5c8, argc=2, l=<optimized out>) at dl-init.c:30\n#6  _dl_init (main_map=main_map@entry=0xa11920, argc=2, argv=0x7fffffffd5c8, env=0xa7b4d0) at dl-init.c:120\n#7  0x00007ffff7dec8e2 in dl_open_worker (a=a@entry=0x7fffffffb5c0) at dl-open.c:575\n#8  0x00007ffff7de7564 in _dl_catch_error (objname=objname@entry=0x7fffffffb5b0, errstring=errstring@entry=0x7fffffffb5b8, \n    mallocedp=mallocedp@entry=0x7fffffffb5af, operate=operate@entry=0x7ffff7dec4d0 <dl_open_worker>, args=args@entry=0x7fffffffb5c0)\n    at dl-error.c:187\n#9  0x00007ffff7debda9 in _dl_open (\n    file=0x7fffea7cbc34 \"/media/gerry/hdd_1/ws_hdd/test_venv/local/lib/python2.7/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\", mode=-2147483646, caller_dlopen=0x51ad19 <_PyImport_GetDynLoadFunc+233>, nsid=-2, argc=<optimized out>, argv=<optimized out>, env=0xa7b4d0)\n    at dl-open.c:660\n#10 0x00007ffff75ecf09 in dlopen_doit (a=a@entry=0x7fffffffb7f0) at dlopen.c:66\n#11 0x00007ffff7de7564 in _dl_catch_error (objname=0x9b1870, errstring=0x9b1878, mallocedp=0x9b1868, operate=0x7ffff75eceb0 <dlopen_doit>, \n    args=0x7fffffffb7f0) at dl-error.c:187\n#12 0x00007ffff75ed571 in _dlerror_run (operate=operate@entry=0x7ffff75eceb0 <dlopen_doit>, args=args@entry=0x7fffffffb7f0) at dlerror.c:163\n#13 0x00007ffff75ecfa1 in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87\n#14 0x000000000051ad19 in _PyImport_GetDynLoadFunc ()\n#15 0x000000000051a8e4 in _PyImport_LoadDynamicModule ()\n#16 0x00000000005b7b1b in ?? ()\n#17 0x00000000004bc3fa in PyEval_EvalFrameEx ()\n#18 0x00000000004c136f in PyEval_EvalFrameEx ()\n#19 0x00000000004b9ab6 in PyEval_EvalCodeEx ()\n#20 0x00000000004b97a6 in PyEval_EvalCode ()\n#21 0x00000000004b96df in PyImport_ExecCodeModuleEx ()\n#22 0x00000000004b2b06 in ?? ()\n#23 0x00000000004a4ae1 in ?? ()\n\nEDIT 2\nBazel version: N/A\nCUDA/cuDNN version: N/A\nGPU model and memory: N/A\nAfter downgrading to an older version of tensorflow the error goes away. I've been advised that my CPU (see information above) might not work with some improvements in the new API. If this is the case, I suppose there's no solution for my problem. Therefore, I will close this thread. Feel free to correct me though. Thank you for your support", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: \r\n1.6.0-cp27-cp27mu-manylinux1_x86_64 (can only guess since `python -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"` gives me an error already)\r\n- **Python version**: Python 2.7.12\r\n- **Exact command to reproduce**: `import tensorflow`\r\n\r\nI created a fresh virtual environment: `virtualenv -p python2 test_venv/`\r\nAnd installed tensorflow: `pip install --upgrade --no-cache-dir tensorflow`\r\n`import tensorflow` gives me `Illegal instruction (core dumped)`\r\n\r\nPlease help me understand what's going on and how I can fix it. Thank you.\r\n\r\nCPU information:\r\n```\r\n-cpu\r\n          description: CPU\r\n          product: Intel(R) Core(TM) i3 CPU       M 330  @ 2.13GHz\r\n          bus info: cpu@0\r\n          version: CPU Version\r\n          capabilities: x86-64 fpu fpu_exception wp vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni dtes64 monitor ds_cpl vmx est tm2 ssse3 cx16 xtpr pdcm sse4_1 sse4_2 popcnt lahf_lm tpr_shadow vnmi flexpriority ept vpid dtherm arat cpufreq\r\n```\r\n*EDIT*\r\nStacktrace obtained with gdb:\r\n\r\n```\r\n#0  0x00007fffe5793880 in std::pair<std::__detail::_Node_iterator<std::pair<tensorflow::StringPiece const, std::function<bool (tensorflow::Variant*)> >, false, true>, bool> std::_Hashtable<tensorflow::StringPiece, std::pair<tensorflow::StringPiece const, std::function<bool (tensorflow::Variant*)> >, std::allocator<std::pair<tensorflow::StringPiece const, std::function<bool (tensorflow::Variant*)> > >, std::__detail::_Select1st, std::equal_to<tensorflow::StringPiece>, tensorflow::StringPieceHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_emplace<std::pair<tensorflow::StringPiece, std::function<bool (tensorflow::Variant*)> > >(std::integral_constant<bool, true>, std::pair<tensorflow::StringPiece, std::function<bool (tensorflow::Variant*)> >&&) ()\r\n   from /media/gerry/hdd_1/ws_hdd/test_venv/local/lib/python2.7/site-packages/tensorflow/python/../libtensorflow_framework.so\r\n#1  0x00007fffe5795735 in tensorflow::UnaryVariantOpRegistry::RegisterDecodeFn(std::string const&, std::function<bool (tensorflow::Variant*)> const&) () from /media/gerry/hdd_1/ws_hdd/test_venv/local/lib/python2.7/site-packages/tensorflow/python/../libtensorflow_framework.so\r\n#2  0x00007fffe5770a7c in tensorflow::variant_op_registry_fn_registration::UnaryVariantDecodeRegistration<tensorflow::Tensor>::UnaryVariantDecodeRegistration(std::string const&) ()\r\n   from /media/gerry/hdd_1/ws_hdd/test_venv/local/lib/python2.7/site-packages/tensorflow/python/../libtensorflow_framework.so\r\n#3  0x00007fffe56ea165 in _GLOBAL__sub_I_tensor.cc ()\r\n   from /media/gerry/hdd_1/ws_hdd/test_venv/local/lib/python2.7/site-packages/tensorflow/python/../libtensorflow_framework.so\r\n#4  0x00007ffff7de76ba in call_init (l=<optimized out>, argc=argc@entry=2, argv=argv@entry=0x7fffffffd5c8, env=env@entry=0xa7b4d0)\r\n    at dl-init.c:72\r\n#5  0x00007ffff7de77cb in call_init (env=0xa7b4d0, argv=0x7fffffffd5c8, argc=2, l=<optimized out>) at dl-init.c:30\r\n#6  _dl_init (main_map=main_map@entry=0xa11920, argc=2, argv=0x7fffffffd5c8, env=0xa7b4d0) at dl-init.c:120\r\n#7  0x00007ffff7dec8e2 in dl_open_worker (a=a@entry=0x7fffffffb5c0) at dl-open.c:575\r\n#8  0x00007ffff7de7564 in _dl_catch_error (objname=objname@entry=0x7fffffffb5b0, errstring=errstring@entry=0x7fffffffb5b8, \r\n    mallocedp=mallocedp@entry=0x7fffffffb5af, operate=operate@entry=0x7ffff7dec4d0 <dl_open_worker>, args=args@entry=0x7fffffffb5c0)\r\n    at dl-error.c:187\r\n#9  0x00007ffff7debda9 in _dl_open (\r\n    file=0x7fffea7cbc34 \"/media/gerry/hdd_1/ws_hdd/test_venv/local/lib/python2.7/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\", mode=-2147483646, caller_dlopen=0x51ad19 <_PyImport_GetDynLoadFunc+233>, nsid=-2, argc=<optimized out>, argv=<optimized out>, env=0xa7b4d0)\r\n    at dl-open.c:660\r\n#10 0x00007ffff75ecf09 in dlopen_doit (a=a@entry=0x7fffffffb7f0) at dlopen.c:66\r\n#11 0x00007ffff7de7564 in _dl_catch_error (objname=0x9b1870, errstring=0x9b1878, mallocedp=0x9b1868, operate=0x7ffff75eceb0 <dlopen_doit>, \r\n    args=0x7fffffffb7f0) at dl-error.c:187\r\n#12 0x00007ffff75ed571 in _dlerror_run (operate=operate@entry=0x7ffff75eceb0 <dlopen_doit>, args=args@entry=0x7fffffffb7f0) at dlerror.c:163\r\n#13 0x00007ffff75ecfa1 in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87\r\n#14 0x000000000051ad19 in _PyImport_GetDynLoadFunc ()\r\n#15 0x000000000051a8e4 in _PyImport_LoadDynamicModule ()\r\n#16 0x00000000005b7b1b in ?? ()\r\n#17 0x00000000004bc3fa in PyEval_EvalFrameEx ()\r\n#18 0x00000000004c136f in PyEval_EvalFrameEx ()\r\n#19 0x00000000004b9ab6 in PyEval_EvalCodeEx ()\r\n#20 0x00000000004b97a6 in PyEval_EvalCode ()\r\n#21 0x00000000004b96df in PyImport_ExecCodeModuleEx ()\r\n#22 0x00000000004b2b06 in ?? ()\r\n#23 0x00000000004a4ae1 in ?? ()\r\n```\r\n\r\n*EDIT 2*\r\nBazel version: N/A\r\nCUDA/cuDNN version: N/A\r\nGPU model and memory: N/A\r\n\r\nAfter downgrading to an older version of tensorflow the error goes away. I've been advised that my CPU (see information above) might not work with some improvements in the new API. If this is the case, I suppose there's no solution for my problem. Therefore, I will close this thread. Feel free to correct me though. Thank you for your support"}