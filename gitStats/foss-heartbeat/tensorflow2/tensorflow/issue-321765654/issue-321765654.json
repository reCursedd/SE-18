{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19188", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19188/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19188/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19188/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/19188", "id": 321765654, "node_id": "MDExOlB1bGxSZXF1ZXN0MTg3MDcwMzA1", "number": 19188, "title": " Add TensorFlow ecosystem Spark and Hadoop jars to Maven deployment", "user": {"login": "skavulya", "id": 6307926, "node_id": "MDQ6VXNlcjYzMDc5MjY=", "avatar_url": "https://avatars2.githubusercontent.com/u/6307926?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skavulya", "html_url": "https://github.com/skavulya", "followers_url": "https://api.github.com/users/skavulya/followers", "following_url": "https://api.github.com/users/skavulya/following{/other_user}", "gists_url": "https://api.github.com/users/skavulya/gists{/gist_id}", "starred_url": "https://api.github.com/users/skavulya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skavulya/subscriptions", "organizations_url": "https://api.github.com/users/skavulya/orgs", "repos_url": "https://api.github.com/users/skavulya/repos", "events_url": "https://api.github.com/users/skavulya/events{/privacy}", "received_events_url": "https://api.github.com/users/skavulya/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 419840263, "node_id": "MDU6TGFiZWw0MTk4NDAyNjM=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/awaiting%20testing%20(then%20merge)", "name": "awaiting testing (then merge)", "color": "c2e0c6", "default": false}, {"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 14, "created_at": "2018-05-10T00:02:21Z", "updated_at": "2018-06-14T18:52:52Z", "closed_at": "2018-06-14T00:51:53Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/19188", "html_url": "https://github.com/tensorflow/tensorflow/pull/19188", "diff_url": "https://github.com/tensorflow/tensorflow/pull/19188.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/19188.patch"}, "body_html": "<p><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #29.\">Fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"200521320\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/ecosystem/issues/29\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/ecosystem/issues/29/hovercard\" href=\"https://github.com/tensorflow/ecosystem/issues/29\">tensorflow/ecosystem#29</a> by adding TensorFlow ecosystem jars to public Maven repo.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=22079586\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jsheu\">@jsheu</a> Not sure if this is the best way to do this. There were a couple of hacks I had to do since the poms in the TensorFlow ecosystem are decoupled from the TensorFlow java ones. I added a placeholder poms in tensorflow-hadoop and spark-tensorflow-connector to prevent errors during the initial mvn clean. I overwrite these poms with the ones from the ecosystem. I also added the deployment profiles to the ecosystem poms so we would need to manually change them if the TensorFlow java ones change.</p>\n<p>An alternative approach I could use is to remove the TensorFlow ecosystem modules from the parent pom, and deploy the TensorFlow java jars first using <code>deploy_artifacts</code> then write a separate function to deploy the ecosystem jars. The advantage of this is that we could pass any changes to deployment settings via command-line and we wouldn't need placeholder poms for maven clean.</p>\n<p>The previous approach I tried was dynamically editing the ecosystem poms using Python XML so that they would inherit from the parent pom but it made a number of hard-coded assumptions about the structure of the poms.</p>\n<p>Please let me know what changes to make.</p>", "body_text": "Fixes tensorflow/ecosystem#29 by adding TensorFlow ecosystem jars to public Maven repo.\n@jsheu Not sure if this is the best way to do this. There were a couple of hacks I had to do since the poms in the TensorFlow ecosystem are decoupled from the TensorFlow java ones. I added a placeholder poms in tensorflow-hadoop and spark-tensorflow-connector to prevent errors during the initial mvn clean. I overwrite these poms with the ones from the ecosystem. I also added the deployment profiles to the ecosystem poms so we would need to manually change them if the TensorFlow java ones change.\nAn alternative approach I could use is to remove the TensorFlow ecosystem modules from the parent pom, and deploy the TensorFlow java jars first using deploy_artifacts then write a separate function to deploy the ecosystem jars. The advantage of this is that we could pass any changes to deployment settings via command-line and we wouldn't need placeholder poms for maven clean.\nThe previous approach I tried was dynamically editing the ecosystem poms using Python XML so that they would inherit from the parent pom but it made a number of hard-coded assumptions about the structure of the poms.\nPlease let me know what changes to make.", "body": "Fixes https://github.com/tensorflow/ecosystem/issues/29 by adding TensorFlow ecosystem jars to public Maven repo.\r\n\r\n@jsheu Not sure if this is the best way to do this. There were a couple of hacks I had to do since the poms in the TensorFlow ecosystem are decoupled from the TensorFlow java ones. I added a placeholder poms in tensorflow-hadoop and spark-tensorflow-connector to prevent errors during the initial mvn clean. I overwrite these poms with the ones from the ecosystem. I also added the deployment profiles to the ecosystem poms so we would need to manually change them if the TensorFlow java ones change.\r\n\r\nAn alternative approach I could use is to remove the TensorFlow ecosystem modules from the parent pom, and deploy the TensorFlow java jars first using `deploy_artifacts` then write a separate function to deploy the ecosystem jars. The advantage of this is that we could pass any changes to deployment settings via command-line and we wouldn't need placeholder poms for maven clean.\r\n\r\nThe previous approach I tried was dynamically editing the ecosystem poms using Python XML so that they would inherit from the parent pom but it made a number of hard-coded assumptions about the structure of the poms.\r\n\r\nPlease let me know what changes to make."}