{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13334", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13334/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13334/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13334/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/13334", "id": 260861945, "node_id": "MDExOlB1bGxSZXF1ZXN0MTQzMzA5MTA0", "number": 13334, "title": "Make tf.pow work for integer inputs.", "user": {"login": "codrut3", "id": 10788581, "node_id": "MDQ6VXNlcjEwNzg4NTgx", "avatar_url": "https://avatars1.githubusercontent.com/u/10788581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codrut3", "html_url": "https://github.com/codrut3", "followers_url": "https://api.github.com/users/codrut3/followers", "following_url": "https://api.github.com/users/codrut3/following{/other_user}", "gists_url": "https://api.github.com/users/codrut3/gists{/gist_id}", "starred_url": "https://api.github.com/users/codrut3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codrut3/subscriptions", "organizations_url": "https://api.github.com/users/codrut3/orgs", "repos_url": "https://api.github.com/users/codrut3/repos", "events_url": "https://api.github.com/users/codrut3/events{/privacy}", "received_events_url": "https://api.github.com/users/codrut3/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390482148, "node_id": "MDU6TGFiZWwzOTA0ODIxNDg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/awaiting%20review", "name": "awaiting review", "color": "fef2c0", "default": false}, {"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "MarkDaoust", "id": 1414837, "node_id": "MDQ6VXNlcjE0MTQ4Mzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1414837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MarkDaoust", "html_url": "https://github.com/MarkDaoust", "followers_url": "https://api.github.com/users/MarkDaoust/followers", "following_url": "https://api.github.com/users/MarkDaoust/following{/other_user}", "gists_url": "https://api.github.com/users/MarkDaoust/gists{/gist_id}", "starred_url": "https://api.github.com/users/MarkDaoust/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MarkDaoust/subscriptions", "organizations_url": "https://api.github.com/users/MarkDaoust/orgs", "repos_url": "https://api.github.com/users/MarkDaoust/repos", "events_url": "https://api.github.com/users/MarkDaoust/events{/privacy}", "received_events_url": "https://api.github.com/users/MarkDaoust/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "MarkDaoust", "id": 1414837, "node_id": "MDQ6VXNlcjE0MTQ4Mzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1414837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MarkDaoust", "html_url": "https://github.com/MarkDaoust", "followers_url": "https://api.github.com/users/MarkDaoust/followers", "following_url": "https://api.github.com/users/MarkDaoust/following{/other_user}", "gists_url": "https://api.github.com/users/MarkDaoust/gists{/gist_id}", "starred_url": "https://api.github.com/users/MarkDaoust/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MarkDaoust/subscriptions", "organizations_url": "https://api.github.com/users/MarkDaoust/orgs", "repos_url": "https://api.github.com/users/MarkDaoust/repos", "events_url": "https://api.github.com/users/MarkDaoust/events{/privacy}", "received_events_url": "https://api.github.com/users/MarkDaoust/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2017-09-27T06:35:22Z", "updated_at": "2017-09-28T20:50:50Z", "closed_at": "2017-09-28T20:50:50Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/13334", "html_url": "https://github.com/tensorflow/tensorflow/pull/13334", "diff_url": "https://github.com/tensorflow/tensorflow/pull/13334.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/13334.patch"}, "body_html": "<p>Currently tf.pow freezes if both inputs are integer tensors and y contains negative values. For example<br>\nthe call<br>\n<code>tf.pow(5, -2).eval()</code><br>\nnever finishes.</p>\n<p>The cause is the implementation of pow in Eigen. To get around this issue I've changed the<br>\nunderlying C++ functor to treat differently integer inputs. However, tf.pow now returns float tensors on<br>\ninput integer tensors.</p>\n<p>In order to pass the backwards compatibility test, I had to create a new op IntegralPow for the case of<br>\ninteger inputs. This mirrors the implementation of abs using Abs and ComplexAbs. I've made this<br>\nop hidden.</p>\n<p>I've also added tests for the pow function in python.</p>\n<p>This should fix issue <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"225380863\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/9560\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/9560/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/9560\">#9560</a>.</p>", "body_text": "Currently tf.pow freezes if both inputs are integer tensors and y contains negative values. For example\nthe call\ntf.pow(5, -2).eval()\nnever finishes.\nThe cause is the implementation of pow in Eigen. To get around this issue I've changed the\nunderlying C++ functor to treat differently integer inputs. However, tf.pow now returns float tensors on\ninput integer tensors.\nIn order to pass the backwards compatibility test, I had to create a new op IntegralPow for the case of\ninteger inputs. This mirrors the implementation of abs using Abs and ComplexAbs. I've made this\nop hidden.\nI've also added tests for the pow function in python.\nThis should fix issue #9560.", "body": "Currently tf.pow freezes if both inputs are integer tensors and y contains negative values. For example\r\nthe call\r\n`tf.pow(5, -2).eval()`\r\nnever finishes.\r\n\r\nThe cause is the implementation of pow in Eigen. To get around this issue I've changed the\r\nunderlying C++ functor to treat differently integer inputs. However, tf.pow now returns float tensors on\r\ninput integer tensors.\r\n\r\nIn order to pass the backwards compatibility test, I had to create a new op IntegralPow for the case of\r\ninteger inputs. This mirrors the implementation of abs using Abs and ComplexAbs. I've made this\r\nop hidden.\r\n\r\nI've also added tests for the pow function in python.\r\n\r\nThis should fix issue #9560."}