{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/332959557", "html_url": "https://github.com/tensorflow/tensorflow/pull/13334#issuecomment-332959557", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13334", "id": 332959557, "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjk1OTU1Nw==", "user": {"login": "codrut3", "id": 10788581, "node_id": "MDQ6VXNlcjEwNzg4NTgx", "avatar_url": "https://avatars1.githubusercontent.com/u/10788581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codrut3", "html_url": "https://github.com/codrut3", "followers_url": "https://api.github.com/users/codrut3/followers", "following_url": "https://api.github.com/users/codrut3/following{/other_user}", "gists_url": "https://api.github.com/users/codrut3/gists{/gist_id}", "starred_url": "https://api.github.com/users/codrut3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codrut3/subscriptions", "organizations_url": "https://api.github.com/users/codrut3/orgs", "repos_url": "https://api.github.com/users/codrut3/repos", "events_url": "https://api.github.com/users/codrut3/events{/privacy}", "received_events_url": "https://api.github.com/users/codrut3/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-28T20:48:40Z", "updated_at": "2017-09-28T20:48:40Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I did, and there were two types of failures:</p>\n<ol>\n<li>I was handling dtype incorrectly in math_ops.pow (I fixed this)</li>\n<li>There are use cases where it's natural to expect tf.pow to return an int32 tensor.<br>\nFor example, one of the tests did x ** 2, for x a tf.int32 tensor.<br>\nAnother computed tf.pow(2, layer), with layer a tf.constant.</li>\n</ol>\n<p>These are reasonable use cases, and I don't see a way around them. I don't see how to fix the issue<br>\nwithout returning float for all integer inputs.</p>\n<p>So I was thinking of closing the pull request. I apologize for this.</p>", "body_text": "I did, and there were two types of failures:\n\nI was handling dtype incorrectly in math_ops.pow (I fixed this)\nThere are use cases where it's natural to expect tf.pow to return an int32 tensor.\nFor example, one of the tests did x ** 2, for x a tf.int32 tensor.\nAnother computed tf.pow(2, layer), with layer a tf.constant.\n\nThese are reasonable use cases, and I don't see a way around them. I don't see how to fix the issue\nwithout returning float for all integer inputs.\nSo I was thinking of closing the pull request. I apologize for this.", "body": "I did, and there were two types of failures:\r\n1. I was handling dtype incorrectly in math_ops.pow (I fixed this)\r\n2. There are use cases where it's natural to expect tf.pow to return an int32 tensor.\r\n    For example, one of the tests did x ** 2, for x a tf.int32 tensor.\r\n    Another computed tf.pow(2, layer), with layer a tf.constant.\r\n\r\nThese are reasonable use cases, and I don't see a way around them. I don't see how to fix the issue\r\nwithout returning float for all integer inputs.\r\n\r\nSo I was thinking of closing the pull request. I apologize for this."}