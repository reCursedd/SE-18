{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11440", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11440/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11440/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11440/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/11440", "id": 242229458, "node_id": "MDU6SXNzdWUyNDIyMjk0NTg=", "number": 11440, "title": "Linear Model Tutorial: How to extract prediction? ", "user": {"login": "strman", "id": 6642928, "node_id": "MDQ6VXNlcjY2NDI5Mjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/6642928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/strman", "html_url": "https://github.com/strman", "followers_url": "https://api.github.com/users/strman/followers", "following_url": "https://api.github.com/users/strman/following{/other_user}", "gists_url": "https://api.github.com/users/strman/gists{/gist_id}", "starred_url": "https://api.github.com/users/strman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/strman/subscriptions", "organizations_url": "https://api.github.com/users/strman/orgs", "repos_url": "https://api.github.com/users/strman/repos", "events_url": "https://api.github.com/users/strman/events{/privacy}", "received_events_url": "https://api.github.com/users/strman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2017-07-12T01:22:30Z", "updated_at": "2018-03-08T07:24:29Z", "closed_at": "2018-03-08T07:24:29Z", "author_association": "NONE", "body_html": "<p>Similar to this issue: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"116139917\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/97\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/97/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/97\">#97</a></p>\n<p>For the \"<a href=\"https://www.tensorflow.org/tutorials/wide\" rel=\"nofollow\">TensorFlow Linear Model Tutorial</a>\", the project implies that it will end with a program that, based on input data, outputs a 0 or 1:</p>\n<blockquote>\n<p>Given census data about a person such as age, gender, education and occupation (the features), we will try to predict whether or not the person earns more than 50,000 dollars a year (the target label). We will train a logistic regression model, <strong>and given an individual's information our model will output a number between 0 and 1, which can be interpreted as the probability that the individual has an annual income of over 50,000 dollars.</strong></p>\n</blockquote>\n<p>However, it seems that the tutorial is incomplete. The last steps have you calculate the accuracy of the trained model:</p>\n<blockquote>\n<p>The first line of the output should be something like accuracy: 0.83557522, which means the accuracy is 83.6%. Feel free to try more features and transformations and see if you can do even better!</p>\n</blockquote>\n<p>And then point you in the direction of the full example code:</p>\n<blockquote>\n<p>If you'd like to see a working end-to-end example, you can download our <a href=\"https://www.github.com/tensorflow/tensorflow/blob/r1.2/tensorflow/examples/learn/wide_n_deep_tutorial.py\">example code.</a> and set the model_type flag to wide.</p>\n</blockquote>\n<p>When I run the final program, my output looks like this:</p>\n<blockquote>\n<p><code>accuracy: 0.989583</code><br>\n<code>accuracy/baseline_label_mean: 0.364583</code><br>\n<code>accuracy/threshold_0.500000_mean: 0.989583</code><br>\n<code>auc: 1.0</code><br>\n<code>auc_precision_recall: 1.0</code><br>\n<code>global_step: 3000</code><br>\n<code>labels/actual_label_mean: 0.364583</code><br>\n<code>labels/prediction_mean: 0.369466</code><br>\n<code>loss: 0.0242721</code><br>\n<code>precision/positive_threshold_0.500000_mean: 0.972222</code><br>\n<code>recall/positive_threshold_0.500000_mean: 1.0</code></p>\n</blockquote>\n<p>Only <code>accuracy</code> is explained in the instructions, and it doesn't seem that there are final steps to complete the tutorial: to take a set of given values, and predict <code>income_bracket.</code> Can someone provide a code example, or point to documentation on how to extract final predictions after training the model?</p>\n<p>Thanks!</p>", "body_text": "Similar to this issue: #97\nFor the \"TensorFlow Linear Model Tutorial\", the project implies that it will end with a program that, based on input data, outputs a 0 or 1:\n\nGiven census data about a person such as age, gender, education and occupation (the features), we will try to predict whether or not the person earns more than 50,000 dollars a year (the target label). We will train a logistic regression model, and given an individual's information our model will output a number between 0 and 1, which can be interpreted as the probability that the individual has an annual income of over 50,000 dollars.\n\nHowever, it seems that the tutorial is incomplete. The last steps have you calculate the accuracy of the trained model:\n\nThe first line of the output should be something like accuracy: 0.83557522, which means the accuracy is 83.6%. Feel free to try more features and transformations and see if you can do even better!\n\nAnd then point you in the direction of the full example code:\n\nIf you'd like to see a working end-to-end example, you can download our example code. and set the model_type flag to wide.\n\nWhen I run the final program, my output looks like this:\n\naccuracy: 0.989583\naccuracy/baseline_label_mean: 0.364583\naccuracy/threshold_0.500000_mean: 0.989583\nauc: 1.0\nauc_precision_recall: 1.0\nglobal_step: 3000\nlabels/actual_label_mean: 0.364583\nlabels/prediction_mean: 0.369466\nloss: 0.0242721\nprecision/positive_threshold_0.500000_mean: 0.972222\nrecall/positive_threshold_0.500000_mean: 1.0\n\nOnly accuracy is explained in the instructions, and it doesn't seem that there are final steps to complete the tutorial: to take a set of given values, and predict income_bracket. Can someone provide a code example, or point to documentation on how to extract final predictions after training the model?\nThanks!", "body": "Similar to this issue: https://github.com/tensorflow/tensorflow/issues/97 \r\n\r\nFor the \"[TensorFlow Linear Model Tutorial](https://www.tensorflow.org/tutorials/wide)\", the project implies that it will end with a program that, based on input data, outputs a 0 or 1: \r\n\r\n> Given census data about a person such as age, gender, education and occupation (the features), we will try to predict whether or not the person earns more than 50,000 dollars a year (the target label). We will train a logistic regression model, **and given an individual's information our model will output a number between 0 and 1, which can be interpreted as the probability that the individual has an annual income of over 50,000 dollars.**\r\n\r\nHowever, it seems that the tutorial is incomplete. The last steps have you calculate the accuracy of the trained model: \r\n\r\n> The first line of the output should be something like accuracy: 0.83557522, which means the accuracy is 83.6%. Feel free to try more features and transformations and see if you can do even better!\r\n\r\nAnd then point you in the direction of the full example code: \r\n\r\n> If you'd like to see a working end-to-end example, you can download our [example code.](https://www.github.com/tensorflow/tensorflow/blob/r1.2/tensorflow/examples/learn/wide_n_deep_tutorial.py) and set the model_type flag to wide. \r\n\r\nWhen I run the final program, my output looks like this: \r\n\r\n> `accuracy: 0.989583`\r\n> `accuracy/baseline_label_mean: 0.364583`\r\n> `accuracy/threshold_0.500000_mean: 0.989583`\r\n> `auc: 1.0`\r\n> `auc_precision_recall: 1.0`\r\n> `global_step: 3000`\r\n> `labels/actual_label_mean: 0.364583`\r\n> `labels/prediction_mean: 0.369466`\r\n> `loss: 0.0242721`\r\n> `precision/positive_threshold_0.500000_mean: 0.972222`\r\n> `recall/positive_threshold_0.500000_mean: 1.0`\r\n\r\nOnly `accuracy` is explained in the instructions, and it doesn't seem that there are final steps to complete the tutorial: to take a set of given values, and predict `income_bracket.` Can someone provide a code example, or point to documentation on how to extract final predictions after training the model?\r\n\r\nThanks! "}