{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/363524417", "html_url": "https://github.com/tensorflow/tensorflow/issues/12649#issuecomment-363524417", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12649", "id": 363524417, "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzUyNDQxNw==", "user": {"login": "jart", "id": 49262, "node_id": "MDQ6VXNlcjQ5MjYy", "avatar_url": "https://avatars1.githubusercontent.com/u/49262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jart", "html_url": "https://github.com/jart", "followers_url": "https://api.github.com/users/jart/followers", "following_url": "https://api.github.com/users/jart/following{/other_user}", "gists_url": "https://api.github.com/users/jart/gists{/gist_id}", "starred_url": "https://api.github.com/users/jart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jart/subscriptions", "organizations_url": "https://api.github.com/users/jart/orgs", "repos_url": "https://api.github.com/users/jart/repos", "events_url": "https://api.github.com/users/jart/events{/privacy}", "received_events_url": "https://api.github.com/users/jart/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-06T18:47:23Z", "updated_at": "2018-02-06T18:47:23Z", "author_association": "MEMBER", "body_html": "<p>I'm going to take this issue out of triage. Ideally what I'd like to see happen is someone who was involved in creating that model come along and let us know that configuring shapes in this manner is a must-have requirement, which would make this bug.</p>\n<p>I'll also note I think it's a little peculiar that fails with buffer overflow. But it seems like Java is doing a good job keeping us safe here. What would scare me is if this was happening in the unsafe C++ code that lurks beneath the Java. Furnish evidence of that and this becomes a much different story.</p>", "body_text": "I'm going to take this issue out of triage. Ideally what I'd like to see happen is someone who was involved in creating that model come along and let us know that configuring shapes in this manner is a must-have requirement, which would make this bug.\nI'll also note I think it's a little peculiar that fails with buffer overflow. But it seems like Java is doing a good job keeping us safe here. What would scare me is if this was happening in the unsafe C++ code that lurks beneath the Java. Furnish evidence of that and this becomes a much different story.", "body": "I'm going to take this issue out of triage. Ideally what I'd like to see happen is someone who was involved in creating that model come along and let us know that configuring shapes in this manner is a must-have requirement, which would make this bug.\r\n\r\nI'll also note I think it's a little peculiar that fails with buffer overflow. But it seems like Java is doing a good job keeping us safe here. What would scare me is if this was happening in the unsafe C++ code that lurks beneath the Java. Furnish evidence of that and this becomes a much different story."}