{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3840", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3840/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3840/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3840/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/3840", "id": 171351219, "node_id": "MDU6SXNzdWUxNzEzNTEyMTk=", "number": 3840, "title": "missing return statement at end of non-void function", "user": {"login": "hholst80", "id": 6200749, "node_id": "MDQ6VXNlcjYyMDA3NDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6200749?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hholst80", "html_url": "https://github.com/hholst80", "followers_url": "https://api.github.com/users/hholst80/followers", "following_url": "https://api.github.com/users/hholst80/following{/other_user}", "gists_url": "https://api.github.com/users/hholst80/gists{/gist_id}", "starred_url": "https://api.github.com/users/hholst80/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hholst80/subscriptions", "organizations_url": "https://api.github.com/users/hholst80/orgs", "repos_url": "https://api.github.com/users/hholst80/repos", "events_url": "https://api.github.com/users/hholst80/events{/privacy}", "received_events_url": "https://api.github.com/users/hholst80/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-08-16T08:21:58Z", "updated_at": "2018-02-07T23:47:51Z", "closed_at": "2018-02-07T23:47:51Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Since TensorFlow uses C++11 I think it would be good style to fix the errors such as:</p>\n<pre><code>framework/allocator.h(155): warning: missing return statement at end of non-void function \"tensorflow::Allocator::RequestedSize\"\n</code></pre>\n<p>The code is not harmful in this instance but the compiler would have to parse and trust comments:</p>\n<div class=\"highlight highlight-source-c++\"><pre><span class=\"pl-c\"><span class=\"pl-c\">//</span> CHECK dies with a fatal error if condition is not true.  It is *not*</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> controlled by NDEBUG, so the check will be executed regardless of</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> compilation mode.</span></pre></div>\n<p>A simple patch for the problem would be:</p>\n<div class=\"highlight highlight-source-c++\"><pre>  <span class=\"pl-k\">virtual</span> <span class=\"pl-c1\">size_t</span> <span class=\"pl-en\">RequestedSize</span>(<span class=\"pl-k\">void</span>* ptr) {\n    <span class=\"pl-c1\">CHECK</span>(<span class=\"pl-c1\">false</span>) &lt;&lt; <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>allocator doesn't track sizes<span class=\"pl-pds\">\"</span></span>;\n  }</pre></div>\n<p>--&gt;</p>\n<div class=\"highlight highlight-source-c++\"><pre>  <span class=\"pl-k\">virtual</span> <span class=\"pl-c1\">size_t</span> RequestedSize  [[ noreturn ]] (<span class=\"pl-k\">void</span>* ptr) {\n    <span class=\"pl-c1\">CHECK</span>(<span class=\"pl-c1\">false</span>) &lt;&lt; <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>allocator doesn't track sizes<span class=\"pl-pds\">\"</span></span>;\n  }</pre></div>\n<p>Reference: <a href=\"http://www.stroustrup.com/C++11FAQ.html#attributes\" rel=\"nofollow\">http://www.stroustrup.com/C++11FAQ.html#attributes</a></p>", "body_text": "Since TensorFlow uses C++11 I think it would be good style to fix the errors such as:\nframework/allocator.h(155): warning: missing return statement at end of non-void function \"tensorflow::Allocator::RequestedSize\"\n\nThe code is not harmful in this instance but the compiler would have to parse and trust comments:\n// CHECK dies with a fatal error if condition is not true.  It is *not*\n// controlled by NDEBUG, so the check will be executed regardless of\n// compilation mode.\nA simple patch for the problem would be:\n  virtual size_t RequestedSize(void* ptr) {\n    CHECK(false) << \"allocator doesn't track sizes\";\n  }\n-->\n  virtual size_t RequestedSize  [[ noreturn ]] (void* ptr) {\n    CHECK(false) << \"allocator doesn't track sizes\";\n  }\nReference: http://www.stroustrup.com/C++11FAQ.html#attributes", "body": "Since TensorFlow uses C++11 I think it would be good style to fix the errors such as:\n\n```\nframework/allocator.h(155): warning: missing return statement at end of non-void function \"tensorflow::Allocator::RequestedSize\"\n```\n\nThe code is not harmful in this instance but the compiler would have to parse and trust comments:\n\n``` cpp\n// CHECK dies with a fatal error if condition is not true.  It is *not*\n// controlled by NDEBUG, so the check will be executed regardless of\n// compilation mode.\n```\n\nA simple patch for the problem would be:\n\n``` cpp\n  virtual size_t RequestedSize(void* ptr) {\n    CHECK(false) << \"allocator doesn't track sizes\";\n  }\n```\n\n-->\n\n``` cpp\n  virtual size_t RequestedSize  [[ noreturn ]] (void* ptr) {\n    CHECK(false) << \"allocator doesn't track sizes\";\n  }\n```\n\nReference: http://www.stroustrup.com/C++11FAQ.html#attributes\n"}