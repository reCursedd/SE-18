{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/288236997", "html_url": "https://github.com/tensorflow/tensorflow/issues/8554#issuecomment-288236997", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8554", "id": 288236997, "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODIzNjk5Nw==", "user": {"login": "Panaetius", "id": 664486, "node_id": "MDQ6VXNlcjY2NDQ4Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/664486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Panaetius", "html_url": "https://github.com/Panaetius", "followers_url": "https://api.github.com/users/Panaetius/followers", "following_url": "https://api.github.com/users/Panaetius/following{/other_user}", "gists_url": "https://api.github.com/users/Panaetius/gists{/gist_id}", "starred_url": "https://api.github.com/users/Panaetius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Panaetius/subscriptions", "organizations_url": "https://api.github.com/users/Panaetius/orgs", "repos_url": "https://api.github.com/users/Panaetius/repos", "events_url": "https://api.github.com/users/Panaetius/events{/privacy}", "received_events_url": "https://api.github.com/users/Panaetius/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-21T22:17:44Z", "updated_at": "2017-03-21T22:20:32Z", "author_association": "NONE", "body_html": "<p>Ok I managed to reproduce it in a simple test case: <a href=\"https://gist.github.com/Panaetius/8da26064491ab4ad1890bca3dfd86eff\">https://gist.github.com/Panaetius/8da26064491ab4ad1890bca3dfd86eff</a></p>\n<p>The test case can probably be made smaller still (for instance, the whole save data -&gt; load data with tf.VarLenFeature is probably not needed, you could just construct an empty SparseTensor, though I couldn't get this to work when I gave it a quick try).</p>\n<p>Basically, calling tf.map_fn with an empty tensor ( [ ] ) leads to the SIGFPE, most likely when the x[0] is done in the lambda.</p>\n<p>I'll change the title of the issue to reflect that this is an issue with tf.map_fn</p>\n<p>Of course I'll have to change my code to correctly deal with empty/missing labels, so I doubt this will be an issue for me in the future, though tf.map_fn actually trying to run over an empty tensor and then just straight crashing seems like a bug that should be fixed to me</p>", "body_text": "Ok I managed to reproduce it in a simple test case: https://gist.github.com/Panaetius/8da26064491ab4ad1890bca3dfd86eff\nThe test case can probably be made smaller still (for instance, the whole save data -> load data with tf.VarLenFeature is probably not needed, you could just construct an empty SparseTensor, though I couldn't get this to work when I gave it a quick try).\nBasically, calling tf.map_fn with an empty tensor ( [ ] ) leads to the SIGFPE, most likely when the x[0] is done in the lambda.\nI'll change the title of the issue to reflect that this is an issue with tf.map_fn\nOf course I'll have to change my code to correctly deal with empty/missing labels, so I doubt this will be an issue for me in the future, though tf.map_fn actually trying to run over an empty tensor and then just straight crashing seems like a bug that should be fixed to me", "body": "Ok I managed to reproduce it in a simple test case: https://gist.github.com/Panaetius/8da26064491ab4ad1890bca3dfd86eff\r\n\r\nThe test case can probably be made smaller still (for instance, the whole save data -> load data with tf.VarLenFeature is probably not needed, you could just construct an empty SparseTensor, though I couldn't get this to work when I gave it a quick try).\r\n\r\nBasically, calling tf.map_fn with an empty tensor ( [ ] ) leads to the SIGFPE, most likely when the x[0] is done in the lambda.\r\n\r\nI'll change the title of the issue to reflect that this is an issue with tf.map_fn\r\n\r\nOf course I'll have to change my code to correctly deal with empty/missing labels, so I doubt this will be an issue for me in the future, though tf.map_fn actually trying to run over an empty tensor and then just straight crashing seems like a bug that should be fixed to me"}