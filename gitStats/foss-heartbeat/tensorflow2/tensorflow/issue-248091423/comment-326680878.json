{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/326680878", "html_url": "https://github.com/tensorflow/tensorflow/issues/12046#issuecomment-326680878", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12046", "id": 326680878, "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjY4MDg3OA==", "user": {"login": "jhseu", "id": 170179, "node_id": "MDQ6VXNlcjE3MDE3OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/170179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhseu", "html_url": "https://github.com/jhseu", "followers_url": "https://api.github.com/users/jhseu/followers", "following_url": "https://api.github.com/users/jhseu/following{/other_user}", "gists_url": "https://api.github.com/users/jhseu/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhseu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhseu/subscriptions", "organizations_url": "https://api.github.com/users/jhseu/orgs", "repos_url": "https://api.github.com/users/jhseu/repos", "events_url": "https://api.github.com/users/jhseu/events{/privacy}", "received_events_url": "https://api.github.com/users/jhseu/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-01T20:49:41Z", "updated_at": "2017-09-01T20:49:41Z", "author_association": "MEMBER", "body_html": "<p>We had to revert the fix. A minimal reproducible breakage is here:</p>\n<pre><code>def main(unused_argv):\n  dtype = tf.bool\n  bool_var = tf.get_variable(\"bool_var\", dtype=dtype,\n                             initializer=tf.cast(1, dtype),\n                             trainable=False)\n  def set_bool_var_false():\n    return tf.group(tf.assign(bool_var, tf.cast(0, dtype)))\n\n  conditional_on_bool_var = tf.cond(pred=tf.cast(bool_var, tf.bool),\n                                    true_fn=set_bool_var_false,\n                                    false_fn=tf.no_op)\n\n  with tf.train.MonitoredSession() as sess:\n    print(sess.run(bool_var))\n    print(sess.run(conditional_on_bool_var))\n    print(sess.run(bool_var))\n</code></pre>", "body_text": "We had to revert the fix. A minimal reproducible breakage is here:\ndef main(unused_argv):\n  dtype = tf.bool\n  bool_var = tf.get_variable(\"bool_var\", dtype=dtype,\n                             initializer=tf.cast(1, dtype),\n                             trainable=False)\n  def set_bool_var_false():\n    return tf.group(tf.assign(bool_var, tf.cast(0, dtype)))\n\n  conditional_on_bool_var = tf.cond(pred=tf.cast(bool_var, tf.bool),\n                                    true_fn=set_bool_var_false,\n                                    false_fn=tf.no_op)\n\n  with tf.train.MonitoredSession() as sess:\n    print(sess.run(bool_var))\n    print(sess.run(conditional_on_bool_var))\n    print(sess.run(bool_var))", "body": "We had to revert the fix. A minimal reproducible breakage is here:\r\n```\r\ndef main(unused_argv):\r\n  dtype = tf.bool\r\n  bool_var = tf.get_variable(\"bool_var\", dtype=dtype,\r\n                             initializer=tf.cast(1, dtype),\r\n                             trainable=False)\r\n  def set_bool_var_false():\r\n    return tf.group(tf.assign(bool_var, tf.cast(0, dtype)))\r\n\r\n  conditional_on_bool_var = tf.cond(pred=tf.cast(bool_var, tf.bool),\r\n                                    true_fn=set_bool_var_false,\r\n                                    false_fn=tf.no_op)\r\n\r\n  with tf.train.MonitoredSession() as sess:\r\n    print(sess.run(bool_var))\r\n    print(sess.run(conditional_on_bool_var))\r\n    print(sess.run(bool_var))\r\n```"}