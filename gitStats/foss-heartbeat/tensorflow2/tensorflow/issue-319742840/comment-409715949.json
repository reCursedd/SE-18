{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/409715949", "html_url": "https://github.com/tensorflow/tensorflow/issues/19041#issuecomment-409715949", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19041", "id": 409715949, "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTcxNTk0OQ==", "user": {"login": "zeyademam", "id": 28906340, "node_id": "MDQ6VXNlcjI4OTA2MzQw", "avatar_url": "https://avatars0.githubusercontent.com/u/28906340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zeyademam", "html_url": "https://github.com/zeyademam", "followers_url": "https://api.github.com/users/zeyademam/followers", "following_url": "https://api.github.com/users/zeyademam/following{/other_user}", "gists_url": "https://api.github.com/users/zeyademam/gists{/gist_id}", "starred_url": "https://api.github.com/users/zeyademam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zeyademam/subscriptions", "organizations_url": "https://api.github.com/users/zeyademam/orgs", "repos_url": "https://api.github.com/users/zeyademam/repos", "events_url": "https://api.github.com/users/zeyademam/events{/privacy}", "received_events_url": "https://api.github.com/users/zeyademam/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-01T20:43:41Z", "updated_at": "2018-08-01T20:43:41Z", "author_association": "NONE", "body_html": "<p>Thank you. I tried using tensorboard to do so for my <a href=\"https://github.com/tensorflow/tensorflow/issues/19041#issuecomment-389611457\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/19041/hovercard\">code snippet above</a>, however, the names of the tensors are not easy to discern.  In that code snippet, the first computation that I define in the graph is a <code>reshape</code> op. Tensorboard shows the input to that op as another op called <code>random_shuffle_queue_DequeueUpTo</code> which is not a placeholder. And once again the inputs to that op is <code>enqueue_input/random_shuffle_queue</code> which is also an op and not a placeholder - this latter op has no inputs. I was not able to trace back to the original placeholder. I am not sure if I am missing something obvious.</p>\n<p>As for using the lower level api, I do so as well, however, when generating adversarial examples for instance, it is easier to download a trained network from the web and work with it. Having access to the input placeholder would make this feasible (i ended up re-purposing the PREDICT mode in the estimator to produce adversarial examples and it looks really whacky.)</p>", "body_text": "Thank you. I tried using tensorboard to do so for my code snippet above, however, the names of the tensors are not easy to discern.  In that code snippet, the first computation that I define in the graph is a reshape op. Tensorboard shows the input to that op as another op called random_shuffle_queue_DequeueUpTo which is not a placeholder. And once again the inputs to that op is enqueue_input/random_shuffle_queue which is also an op and not a placeholder - this latter op has no inputs. I was not able to trace back to the original placeholder. I am not sure if I am missing something obvious.\nAs for using the lower level api, I do so as well, however, when generating adversarial examples for instance, it is easier to download a trained network from the web and work with it. Having access to the input placeholder would make this feasible (i ended up re-purposing the PREDICT mode in the estimator to produce adversarial examples and it looks really whacky.)", "body": "Thank you. I tried using tensorboard to do so for my [code snippet above](https://github.com/tensorflow/tensorflow/issues/19041#issuecomment-389611457), however, the names of the tensors are not easy to discern.  In that code snippet, the first computation that I define in the graph is a `reshape` op. Tensorboard shows the input to that op as another op called `random_shuffle_queue_DequeueUpTo` which is not a placeholder. And once again the inputs to that op is `enqueue_input/random_shuffle_queue` which is also an op and not a placeholder - this latter op has no inputs. I was not able to trace back to the original placeholder. I am not sure if I am missing something obvious. \r\n\r\nAs for using the lower level api, I do so as well, however, when generating adversarial examples for instance, it is easier to download a trained network from the web and work with it. Having access to the input placeholder would make this feasible (i ended up re-purposing the PREDICT mode in the estimator to produce adversarial examples and it looks really whacky.) "}