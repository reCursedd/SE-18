{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/142205622", "pull_request_review_id": 66533556, "id": 142205622, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjIwNTYyMg==", "diff_hunk": "@@ -83,16 +83,23 @@ def GenerateImage(self, image_format, image_shape):\n     Returns:\n       image: the generated image.\n       example: a TF-example with a feature key 'image/encoded' set to the\n-        serialized image and a feature key 'image/format' set to the image\n-        encoding format ['jpeg', 'JPEG', 'png', 'PNG', 'raw'].\n+        serialized image, a feature key 'image/format' set to the image\n+        encoding format ['jpeg', 'JPEG', 'png', 'PNG', 'raw'], the feature keys\n+        'image/height', 'image/width', and 'image/channels' set to the three\n+        respective shape components, and 'image/shape' to the image shape.\n     \"\"\"\n+    shape_array = np.asarray(image_shape)\n     num_pixels = image_shape[0] * image_shape[1] * image_shape[2]\n     image = np.linspace(\n         0, num_pixels - 1, num=num_pixels).reshape(image_shape).astype(np.uint8)\n     tf_encoded = self._Encoder(image, image_format)\n     example = example_pb2.Example(features=feature_pb2.Features(feature={\n         'image/encoded': self._EncodedBytesFeature(tf_encoded),\n-        'image/format': self._StringFeature(image_format)\n+        'image/format': self._StringFeature(image_format),\n+        'image/shape': self._EncodedInt64Feature(shape_array),\n+        'image/height': self._EncodedInt64Feature(shape_array[0:1]),\n+        'image/width': self._EncodedInt64Feature(shape_array[1:2]),\n+        'image/channels': self._EncodedInt64Feature(shape_array[2:3]),", "path": "tensorflow/contrib/slim/python/slim/data/tfexample_decoder_test.py", "position": null, "original_position": 23, "commit_id": "780a7877eea10d8a7bfae9028bf3e3260c482ca3", "original_commit_id": "c78d66aad8faf32d815d373c057594ef1dfc9904", "user": {"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}, "body": "For a 2D image, should channels be left out, i.e. implied to be 1?", "created_at": "2017-10-02T17:39:55Z", "updated_at": "2017-11-08T04:28:35Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/13400#discussion_r142205622", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/13400", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/142205622"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/13400#discussion_r142205622"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/13400"}}, "body_html": "<p>For a 2D image, should channels be left out, i.e. implied to be 1?</p>", "body_text": "For a 2D image, should channels be left out, i.e. implied to be 1?"}