{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/333696001", "html_url": "https://github.com/tensorflow/tensorflow/issues/8389#issuecomment-333696001", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8389", "id": 333696001, "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzY5NjAwMQ==", "user": {"login": "hannah-rae", "id": 6354180, "node_id": "MDQ6VXNlcjYzNTQxODA=", "avatar_url": "https://avatars3.githubusercontent.com/u/6354180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hannah-rae", "html_url": "https://github.com/hannah-rae", "followers_url": "https://api.github.com/users/hannah-rae/followers", "following_url": "https://api.github.com/users/hannah-rae/following{/other_user}", "gists_url": "https://api.github.com/users/hannah-rae/gists{/gist_id}", "starred_url": "https://api.github.com/users/hannah-rae/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hannah-rae/subscriptions", "organizations_url": "https://api.github.com/users/hannah-rae/orgs", "repos_url": "https://api.github.com/users/hannah-rae/repos", "events_url": "https://api.github.com/users/hannah-rae/events{/privacy}", "received_events_url": "https://api.github.com/users/hannah-rae/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-02T23:40:14Z", "updated_at": "2017-10-02T23:40:57Z", "author_association": "NONE", "body_html": "<p>I'm having this problem too where I've defined my learning rate in flags.py and I'm getting the error \"argparse.ArgumentError: argument --learning_rate: conflicting option string(s): --learning_rate\". However, learning_rate is only mentioned in the flags.py file (below) and the config.yaml file (both specified as floats).</p>\n<p>I've never had this error before... my code was working perfectly until I reorganized my files into subdirectories in preparation for tuning hyperparameters with Google ML Cloud engine.</p>\n<pre><code>import tensorflow as tf\nimport sys\n\nflags = tf.app.flags\nflags.DEFINE_float('learning_rate', 1e-3, 'Initial learning rate')\nflags.DEFINE_integer('batch_size', 4, 'Batch size')\nflags.DEFINE_integer('input_rows', 144, 'Number of rows in input images')\nflags.DEFINE_integer('input_cols', 160, 'Number of columns in input images')\nflags.DEFINE_integer('input_filters', 3, 'Number of filters in input images')\nflags.DEFINE_integer('num_train_samples', 42096, 'Number of training examples')\nflags.DEFINE_integer('n_z', 2200, 'Size of bottleneck layer')\nflags.DEFINE_integer('C1', 64, 'Number of feature maps in first conv layer')\nflags.DEFINE_integer('C2', 32, 'Number of feature maps in second conv layer')\nflags.DEFINE_integer('C3', 16, 'Number of feature maps in third conv layer')\nflags.DEFINE_integer('FC4', 1024, 'Number of feature maps in first fully connected layer')\nflags.DEFINE_integer('FC5', 512, 'Number of feature maps in second fully connected layer')\nflags.DEFINE_integer('FC6', 256, 'Number of feature maps in third fully connected layer')\nflags.DEFINE_integer('kernel_size', 3, 'Kernel size for all convolutions')\nflags.DEFINE_integer('stride_size', 1, 'Stride size for all convolutions')\nflags.DEFINE_string('log_dir', './log', 'Directory to store training checkpoints')\nflags.DEFINE_string('train_dir', '/Users/hannahrae/data/mcam_vae/train', 'Directory containing training images')\nflags.DEFINE_string('test_dir', '/Users/hannahrae/data/mcam_vae/test', 'Directory containing test images')\nflags.DEFINE_string('val_dir', '/Users/hannahrae/data/mcam_vae/validation', 'Directory containing validation images')\nflags.DEFINE_integer('max_steps', 800, 'Maximum number of times to run trainer')\nflags.DEFINE_integer('num_epochs', 10, 'Number of times to go through all the training data')\nflags.DEFINE_float('l2_beta', 0.01, 'Beta term in L2 regularization of weights')\nflags.DEFINE_string('tmp_dir', './tmp/data', 'Directory to download data files and write the converted result')\n\nFLAGS = flags.FLAGS\n</code></pre>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/6354180/31104142-1b59b686-a790-11e7-8f9f-39855255d2f1.png\"><img width=\"237\" alt=\"screen shot 2017-10-02 at 4 38 01 pm\" src=\"https://user-images.githubusercontent.com/6354180/31104142-1b59b686-a790-11e7-8f9f-39855255d2f1.png\" style=\"max-width:100%;\"></a></p>", "body_text": "I'm having this problem too where I've defined my learning rate in flags.py and I'm getting the error \"argparse.ArgumentError: argument --learning_rate: conflicting option string(s): --learning_rate\". However, learning_rate is only mentioned in the flags.py file (below) and the config.yaml file (both specified as floats).\nI've never had this error before... my code was working perfectly until I reorganized my files into subdirectories in preparation for tuning hyperparameters with Google ML Cloud engine.\nimport tensorflow as tf\nimport sys\n\nflags = tf.app.flags\nflags.DEFINE_float('learning_rate', 1e-3, 'Initial learning rate')\nflags.DEFINE_integer('batch_size', 4, 'Batch size')\nflags.DEFINE_integer('input_rows', 144, 'Number of rows in input images')\nflags.DEFINE_integer('input_cols', 160, 'Number of columns in input images')\nflags.DEFINE_integer('input_filters', 3, 'Number of filters in input images')\nflags.DEFINE_integer('num_train_samples', 42096, 'Number of training examples')\nflags.DEFINE_integer('n_z', 2200, 'Size of bottleneck layer')\nflags.DEFINE_integer('C1', 64, 'Number of feature maps in first conv layer')\nflags.DEFINE_integer('C2', 32, 'Number of feature maps in second conv layer')\nflags.DEFINE_integer('C3', 16, 'Number of feature maps in third conv layer')\nflags.DEFINE_integer('FC4', 1024, 'Number of feature maps in first fully connected layer')\nflags.DEFINE_integer('FC5', 512, 'Number of feature maps in second fully connected layer')\nflags.DEFINE_integer('FC6', 256, 'Number of feature maps in third fully connected layer')\nflags.DEFINE_integer('kernel_size', 3, 'Kernel size for all convolutions')\nflags.DEFINE_integer('stride_size', 1, 'Stride size for all convolutions')\nflags.DEFINE_string('log_dir', './log', 'Directory to store training checkpoints')\nflags.DEFINE_string('train_dir', '/Users/hannahrae/data/mcam_vae/train', 'Directory containing training images')\nflags.DEFINE_string('test_dir', '/Users/hannahrae/data/mcam_vae/test', 'Directory containing test images')\nflags.DEFINE_string('val_dir', '/Users/hannahrae/data/mcam_vae/validation', 'Directory containing validation images')\nflags.DEFINE_integer('max_steps', 800, 'Maximum number of times to run trainer')\nflags.DEFINE_integer('num_epochs', 10, 'Number of times to go through all the training data')\nflags.DEFINE_float('l2_beta', 0.01, 'Beta term in L2 regularization of weights')\nflags.DEFINE_string('tmp_dir', './tmp/data', 'Directory to download data files and write the converted result')\n\nFLAGS = flags.FLAGS", "body": "I'm having this problem too where I've defined my learning rate in flags.py and I'm getting the error \"argparse.ArgumentError: argument --learning_rate: conflicting option string(s): --learning_rate\". However, learning_rate is only mentioned in the flags.py file (below) and the config.yaml file (both specified as floats).\r\n\r\nI've never had this error before... my code was working perfectly until I reorganized my files into subdirectories in preparation for tuning hyperparameters with Google ML Cloud engine. \r\n\r\n```\r\nimport tensorflow as tf\r\nimport sys\r\n\r\nflags = tf.app.flags\r\nflags.DEFINE_float('learning_rate', 1e-3, 'Initial learning rate')\r\nflags.DEFINE_integer('batch_size', 4, 'Batch size')\r\nflags.DEFINE_integer('input_rows', 144, 'Number of rows in input images')\r\nflags.DEFINE_integer('input_cols', 160, 'Number of columns in input images')\r\nflags.DEFINE_integer('input_filters', 3, 'Number of filters in input images')\r\nflags.DEFINE_integer('num_train_samples', 42096, 'Number of training examples')\r\nflags.DEFINE_integer('n_z', 2200, 'Size of bottleneck layer')\r\nflags.DEFINE_integer('C1', 64, 'Number of feature maps in first conv layer')\r\nflags.DEFINE_integer('C2', 32, 'Number of feature maps in second conv layer')\r\nflags.DEFINE_integer('C3', 16, 'Number of feature maps in third conv layer')\r\nflags.DEFINE_integer('FC4', 1024, 'Number of feature maps in first fully connected layer')\r\nflags.DEFINE_integer('FC5', 512, 'Number of feature maps in second fully connected layer')\r\nflags.DEFINE_integer('FC6', 256, 'Number of feature maps in third fully connected layer')\r\nflags.DEFINE_integer('kernel_size', 3, 'Kernel size for all convolutions')\r\nflags.DEFINE_integer('stride_size', 1, 'Stride size for all convolutions')\r\nflags.DEFINE_string('log_dir', './log', 'Directory to store training checkpoints')\r\nflags.DEFINE_string('train_dir', '/Users/hannahrae/data/mcam_vae/train', 'Directory containing training images')\r\nflags.DEFINE_string('test_dir', '/Users/hannahrae/data/mcam_vae/test', 'Directory containing test images')\r\nflags.DEFINE_string('val_dir', '/Users/hannahrae/data/mcam_vae/validation', 'Directory containing validation images')\r\nflags.DEFINE_integer('max_steps', 800, 'Maximum number of times to run trainer')\r\nflags.DEFINE_integer('num_epochs', 10, 'Number of times to go through all the training data')\r\nflags.DEFINE_float('l2_beta', 0.01, 'Beta term in L2 regularization of weights')\r\nflags.DEFINE_string('tmp_dir', './tmp/data', 'Directory to download data files and write the converted result')\r\n\r\nFLAGS = flags.FLAGS\r\n```\r\n\r\n<img width=\"237\" alt=\"screen shot 2017-10-02 at 4 38 01 pm\" src=\"https://user-images.githubusercontent.com/6354180/31104142-1b59b686-a790-11e7-8f9f-39855255d2f1.png\">\r\n"}