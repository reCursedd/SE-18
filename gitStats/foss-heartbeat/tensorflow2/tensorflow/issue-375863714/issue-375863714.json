{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23399", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23399/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23399/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23399/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/23399", "id": 375863714, "node_id": "MDU6SXNzdWUzNzU4NjM3MTQ=", "number": 23399, "title": "TFLite failed to allocate tensors when changing the input size", "user": {"login": "shawn-tian", "id": 12387954, "node_id": "MDQ6VXNlcjEyMzg3OTU0", "avatar_url": "https://avatars0.githubusercontent.com/u/12387954?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shawn-tian", "html_url": "https://github.com/shawn-tian", "followers_url": "https://api.github.com/users/shawn-tian/followers", "following_url": "https://api.github.com/users/shawn-tian/following{/other_user}", "gists_url": "https://api.github.com/users/shawn-tian/gists{/gist_id}", "starred_url": "https://api.github.com/users/shawn-tian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shawn-tian/subscriptions", "organizations_url": "https://api.github.com/users/shawn-tian/orgs", "repos_url": "https://api.github.com/users/shawn-tian/repos", "events_url": "https://api.github.com/users/shawn-tian/events{/privacy}", "received_events_url": "https://api.github.com/users/shawn-tian/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 750616506, "node_id": "MDU6TGFiZWw3NTA2MTY1MDY=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:lite", "name": "comp:lite", "color": "0052cc", "default": false}], "state": "open", "locked": false, "assignee": {"login": "aselle", "id": 326106, "node_id": "MDQ6VXNlcjMyNjEwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/326106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aselle", "html_url": "https://github.com/aselle", "followers_url": "https://api.github.com/users/aselle/followers", "following_url": "https://api.github.com/users/aselle/following{/other_user}", "gists_url": "https://api.github.com/users/aselle/gists{/gist_id}", "starred_url": "https://api.github.com/users/aselle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aselle/subscriptions", "organizations_url": "https://api.github.com/users/aselle/orgs", "repos_url": "https://api.github.com/users/aselle/repos", "events_url": "https://api.github.com/users/aselle/events{/privacy}", "received_events_url": "https://api.github.com/users/aselle/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "aselle", "id": 326106, "node_id": "MDQ6VXNlcjMyNjEwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/326106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aselle", "html_url": "https://github.com/aselle", "followers_url": "https://api.github.com/users/aselle/followers", "following_url": "https://api.github.com/users/aselle/following{/other_user}", "gists_url": "https://api.github.com/users/aselle/gists{/gist_id}", "starred_url": "https://api.github.com/users/aselle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aselle/subscriptions", "organizations_url": "https://api.github.com/users/aselle/orgs", "repos_url": "https://api.github.com/users/aselle/repos", "events_url": "https://api.github.com/users/aselle/events{/privacy}", "received_events_url": "https://api.github.com/users/aselle/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-10-31T09:11:40Z", "updated_at": "2018-11-20T13:25:30Z", "closed_at": null, "author_association": "NONE", "body_html": "<p><strong>System information</strong></p>\n<ul>\n<li>Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes</li>\n<li>OS Platform and Distribution (e.g., Linux Ubuntu 16.04): macOS</li>\n<li>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: iPhone 7 simulator</li>\n<li>TensorFlow installed from (source or binary): source</li>\n<li>TensorFlow version (use command below): master</li>\n<li>Python version: 2.7</li>\n<li>Bazel version (if compiling from source): 0.15.0</li>\n<li>GCC/Compiler version (if compiling from source): None</li>\n<li>CUDA/cuDNN version: None</li>\n<li>GPU model and memory: None</li>\n</ul>\n<p><strong>Describe the current behavior</strong><br>\nI convert the TF model to TFLite model by tflite_convert command with float inference_type, and input_shapes set to 1,W,H,3; when I run the model with input shape W*H, <strong>it works well</strong>; However, when I <strong>change</strong> the input shapes to different values, it would give error like \"tensorflow/contrib/lite/kernels/kernel_util.cc:125 d1 == d2 || d1 == 1 || d2 == 1 was not true; Node number xx (ADD) failed to prepare\" for tf.add op. Similar errors appear for other ops like CONCAT and RESHAPE. When I set breakpoints in tflite codes, it seems to always check/use the tensor shapes when converting the model, even the input shape has changed.</p>\n<p>Part of the codes are like this:</p>\n<pre><code>int input = interpreter-&gt;inputs()[0];\n    interpreter-&gt;ResizeInputTensor(input, new_input_sizes);\n    if (interpreter-&gt;AllocateTensors() != kTfLiteOk) {\n        NSLog(@\"Failed to allocate tensors for model.\");\n        exit(-1);\n    }\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): macOS\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: iPhone 7 simulator\nTensorFlow installed from (source or binary): source\nTensorFlow version (use command below): master\nPython version: 2.7\nBazel version (if compiling from source): 0.15.0\nGCC/Compiler version (if compiling from source): None\nCUDA/cuDNN version: None\nGPU model and memory: None\n\nDescribe the current behavior\nI convert the TF model to TFLite model by tflite_convert command with float inference_type, and input_shapes set to 1,W,H,3; when I run the model with input shape W*H, it works well; However, when I change the input shapes to different values, it would give error like \"tensorflow/contrib/lite/kernels/kernel_util.cc:125 d1 == d2 || d1 == 1 || d2 == 1 was not true; Node number xx (ADD) failed to prepare\" for tf.add op. Similar errors appear for other ops like CONCAT and RESHAPE. When I set breakpoints in tflite codes, it seems to always check/use the tensor shapes when converting the model, even the input shape has changed.\nPart of the codes are like this:\nint input = interpreter->inputs()[0];\n    interpreter->ResizeInputTensor(input, new_input_sizes);\n    if (interpreter->AllocateTensors() != kTfLiteOk) {\n        NSLog(@\"Failed to allocate tensors for model.\");\n        exit(-1);\n    }", "body": "**System information**\r\n- Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04): macOS\r\n- Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: iPhone 7 simulator\r\n- TensorFlow installed from (source or binary): source \r\n- TensorFlow version (use command below): master\r\n- Python version: 2.7\r\n- Bazel version (if compiling from source): 0.15.0\r\n- GCC/Compiler version (if compiling from source): None\r\n- CUDA/cuDNN version: None\r\n- GPU model and memory: None\r\n\r\n**Describe the current behavior**\r\nI convert the TF model to TFLite model by tflite_convert command with float inference_type, and input_shapes set to 1,W,H,3; when I run the model with input shape W*H, **it works well**; However, when I **change** the input shapes to different values, it would give error like \"tensorflow/contrib/lite/kernels/kernel_util.cc:125 d1 == d2 || d1 == 1 || d2 == 1 was not true; Node number xx (ADD) failed to prepare\" for tf.add op. Similar errors appear for other ops like CONCAT and RESHAPE. When I set breakpoints in tflite codes, it seems to always check/use the tensor shapes when converting the model, even the input shape has changed. \r\n\r\nPart of the codes are like this:\r\n\r\n```\r\nint input = interpreter->inputs()[0];\r\n    interpreter->ResizeInputTensor(input, new_input_sizes);\r\n    if (interpreter->AllocateTensors() != kTfLiteOk) {\r\n        NSLog(@\"Failed to allocate tensors for model.\");\r\n        exit(-1);\r\n    }\r\n```\r\n"}