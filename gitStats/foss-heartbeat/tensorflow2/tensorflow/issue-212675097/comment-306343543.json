{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/306343543", "html_url": "https://github.com/tensorflow/tensorflow/issues/8190#issuecomment-306343543", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8190", "id": 306343543, "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjM0MzU0Mw==", "user": {"login": "nharada1", "id": 5891210, "node_id": "MDQ6VXNlcjU4OTEyMTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/5891210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nharada1", "html_url": "https://github.com/nharada1", "followers_url": "https://api.github.com/users/nharada1/followers", "following_url": "https://api.github.com/users/nharada1/following{/other_user}", "gists_url": "https://api.github.com/users/nharada1/gists{/gist_id}", "starred_url": "https://api.github.com/users/nharada1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nharada1/subscriptions", "organizations_url": "https://api.github.com/users/nharada1/orgs", "repos_url": "https://api.github.com/users/nharada1/repos", "events_url": "https://api.github.com/users/nharada1/events{/privacy}", "received_events_url": "https://api.github.com/users/nharada1/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-05T23:59:19Z", "updated_at": "2017-06-05T23:59:19Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I'm also running into this bug: If I use <code>int64</code> for global_step my training hangs, but if I use <code>int32</code> the training runs and the <code>evaluation_loop</code> fails when loading the checkpoints because of <code>Invalid size in bundle entry: key global_step/global_step; stored size 4; expected size 8</code></p>", "body_text": "I'm also running into this bug: If I use int64 for global_step my training hangs, but if I use int32 the training runs and the evaluation_loop fails when loading the checkpoints because of Invalid size in bundle entry: key global_step/global_step; stored size 4; expected size 8", "body": "I'm also running into this bug: If I use `int64` for global_step my training hangs, but if I use `int32` the training runs and the `evaluation_loop` fails when loading the checkpoints because of `Invalid size in bundle entry: key global_step/global_step; stored size 4; expected size 8`"}