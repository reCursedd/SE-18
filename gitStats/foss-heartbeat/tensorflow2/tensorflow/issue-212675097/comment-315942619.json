{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/315942619", "html_url": "https://github.com/tensorflow/tensorflow/issues/8190#issuecomment-315942619", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8190", "id": 315942619, "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTk0MjYxOQ==", "user": {"login": "j-wilson", "id": 6174242, "node_id": "MDQ6VXNlcjYxNzQyNDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/6174242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j-wilson", "html_url": "https://github.com/j-wilson", "followers_url": "https://api.github.com/users/j-wilson/followers", "following_url": "https://api.github.com/users/j-wilson/following{/other_user}", "gists_url": "https://api.github.com/users/j-wilson/gists{/gist_id}", "starred_url": "https://api.github.com/users/j-wilson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j-wilson/subscriptions", "organizations_url": "https://api.github.com/users/j-wilson/orgs", "repos_url": "https://api.github.com/users/j-wilson/repos", "events_url": "https://api.github.com/users/j-wilson/events{/privacy}", "received_events_url": "https://api.github.com/users/j-wilson/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-18T02:46:45Z", "updated_at": "2017-07-18T02:46:45Z", "author_association": "NONE", "body_html": "<p>Also running into <code>tf.int32</code> vs. <code>tf.int64</code> issues when using <code>tf.train.get_or_create_global_step</code> (this issue seems most closely related). Is there a particular reason why the resulting variable is <a href=\"https://github.com/tensorflow/tensorflow/blob/0ea7b2bcc2f553b06859b7cbf6962dfc340c868d/tensorflow/python/training/training_util.py#L116\">hardcoded</a> as <code>tf.int64</code>? More generally, can the related set of methods be updated to support passing in <code>dtype</code> as a keyword argument?</p>", "body_text": "Also running into tf.int32 vs. tf.int64 issues when using tf.train.get_or_create_global_step (this issue seems most closely related). Is there a particular reason why the resulting variable is hardcoded as tf.int64? More generally, can the related set of methods be updated to support passing in dtype as a keyword argument?", "body": "Also running into `tf.int32` vs. `tf.int64` issues when using `tf.train.get_or_create_global_step` (this issue seems most closely related). Is there a particular reason why the resulting variable is [hardcoded](https://github.com/tensorflow/tensorflow/blob/0ea7b2bcc2f553b06859b7cbf6962dfc340c868d/tensorflow/python/training/training_util.py#L116) as `tf.int64`? More generally, can the related set of methods be updated to support passing in `dtype` as a keyword argument?"}