{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/426474897", "html_url": "https://github.com/tensorflow/tensorflow/issues/22651#issuecomment-426474897", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22651", "id": 426474897, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjQ3NDg5Nw==", "user": {"login": "tfboyd", "id": 23486130, "node_id": "MDQ6VXNlcjIzNDg2MTMw", "avatar_url": "https://avatars1.githubusercontent.com/u/23486130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tfboyd", "html_url": "https://github.com/tfboyd", "followers_url": "https://api.github.com/users/tfboyd/followers", "following_url": "https://api.github.com/users/tfboyd/following{/other_user}", "gists_url": "https://api.github.com/users/tfboyd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tfboyd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tfboyd/subscriptions", "organizations_url": "https://api.github.com/users/tfboyd/orgs", "repos_url": "https://api.github.com/users/tfboyd/repos", "events_url": "https://api.github.com/users/tfboyd/events{/privacy}", "received_events_url": "https://api.github.com/users/tfboyd/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-03T00:32:28Z", "updated_at": "2018-10-03T00:38:20Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=8064384\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/chahld\">@chahld</a></p>\n<p>Went an extra mile here is what I tried:</p>\n<ul>\n<li><code>nvidia-docker run -it nvidia/cuda:9.2-devel-ubuntu16.04 bash</code></li>\n<li><code>apt-get install python3</code></li>\n<li><code>apt-get install python3-pip</code></li>\n<li><code>pip3 install tensorflow-gpu</code></li>\n<li><code>python3</code>  and then <code>import tensorflow as tf</code></li>\n</ul>\n<p>Error is what I expected below, but it is possible that CUDA 9.0 is still in your path.  I have used cuDNN that says it is for a different version of CUDA that I installed a few times.  No idea how often that should work but it likely works more often than not I would guess as I do not think it does any kind of check the API just has to match up. You can run  <code>ldconfig -p | grep cuda</code> for fun and look at the files.  I would guess the debian packages would overwrite/upgrade but you can run this (<code>apt list --installed | grep cud</code>) to see if what is installed.  I have seen multiple cuDNN's installed before if you run the debian package directly.</p>\n<div class=\"highlight highlight-source-shell\"><pre>File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/lib/python3.5/imp.py<span class=\"pl-pds\">\"</span></span>, line 342, <span class=\"pl-k\">in</span> load_dynamic\n    <span class=\"pl-k\">return</span> _load(spec)\nImportError: libcublas.so.9.0: cannot open shared object file: No such file or directory</pre></div>", "body_text": "@chahld\nWent an extra mile here is what I tried:\n\nnvidia-docker run -it nvidia/cuda:9.2-devel-ubuntu16.04 bash\napt-get install python3\napt-get install python3-pip\npip3 install tensorflow-gpu\npython3  and then import tensorflow as tf\n\nError is what I expected below, but it is possible that CUDA 9.0 is still in your path.  I have used cuDNN that says it is for a different version of CUDA that I installed a few times.  No idea how often that should work but it likely works more often than not I would guess as I do not think it does any kind of check the API just has to match up. You can run  ldconfig -p | grep cuda for fun and look at the files.  I would guess the debian packages would overwrite/upgrade but you can run this (apt list --installed | grep cud) to see if what is installed.  I have seen multiple cuDNN's installed before if you run the debian package directly.\nFile \"/usr/lib/python3.5/imp.py\", line 342, in load_dynamic\n    return _load(spec)\nImportError: libcublas.so.9.0: cannot open shared object file: No such file or directory", "body": "@chahld \r\n\r\nWent an extra mile here is what I tried:\r\n- `nvidia-docker run -it nvidia/cuda:9.2-devel-ubuntu16.04 bash`\r\n- `apt-get install python3`\r\n- `apt-get install python3-pip`\r\n- `pip3 install tensorflow-gpu`\r\n- `python3`  and then `import tensorflow as tf`\r\n\r\nError is what I expected below, but it is possible that CUDA 9.0 is still in your path.  I have used cuDNN that says it is for a different version of CUDA that I installed a few times.  No idea how often that should work but it likely works more often than not I would guess as I do not think it does any kind of check the API just has to match up. You can run  `ldconfig -p | grep cuda` for fun and look at the files.  I would guess the debian packages would overwrite/upgrade but you can run this (`apt list --installed | grep cud`) to see if what is installed.  I have seen multiple cuDNN's installed before if you run the debian package directly.  \r\n\r\n```bash\r\nFile \"/usr/lib/python3.5/imp.py\", line 342, in load_dynamic\r\n    return _load(spec)\r\nImportError: libcublas.so.9.0: cannot open shared object file: No such file or directory\r\n```"}