{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/132038629", "pull_request_review_id": 55077200, "id": 132038629, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMjAzODYyOQ==", "diff_hunk": "@@ -955,10 +955,11 @@ def test_export_savedmodel(self):\n         self.assertTrue('input_example_tensor' in graph_ops)\n         self.assertTrue('ParseExample/ParseExample' in graph_ops)\n         self.assertTrue('linear/linear/feature/matmul' in graph_ops)\n-        self.assertSameElements(\n-            ['bogus_lookup', 'feature'],\n-            graph.get_collection(\n-                constants.COLLECTION_DEF_KEY_FOR_INPUT_FEATURE_KEYS))\n+        self.assertItemsEqual(\n+          ['bogus_lookup', 'feature'],\n+          [x.decode(\"utf-8\") for x in graph.get_collection(", "path": "tensorflow/contrib/learn/python/learn/estimators/estimator_test.py", "position": null, "original_position": 19, "commit_id": "2729867326eb371d1dc7fb23974204f5ac9daaff", "original_commit_id": "e87df4fef3f38cb8e0250eb290314c31b964914b", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "body": "Does this work on Python 2.x with non-Unicode strings?\r\n\r\nIt might be better to use the `compat.py` conversion functions to canonicalize these to bytes (or str) objects....", "created_at": "2017-08-08T21:31:59Z", "updated_at": "2017-08-10T20:49:45Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/11853#discussion_r132038629", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11853", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/132038629"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/11853#discussion_r132038629"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11853"}}, "body_html": "<p>Does this work on Python 2.x with non-Unicode strings?</p>\n<p>It might be better to use the <code>compat.py</code> conversion functions to canonicalize these to bytes (or str) objects....</p>", "body_text": "Does this work on Python 2.x with non-Unicode strings?\nIt might be better to use the compat.py conversion functions to canonicalize these to bytes (or str) objects...."}