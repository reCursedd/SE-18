{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/313160628", "html_url": "https://github.com/tensorflow/tensorflow/issues/11232#issuecomment-313160628", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11232", "id": 313160628, "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzE2MDYyOA==", "user": {"login": "tfboyd", "id": 23486130, "node_id": "MDQ6VXNlcjIzNDg2MTMw", "avatar_url": "https://avatars1.githubusercontent.com/u/23486130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tfboyd", "html_url": "https://github.com/tfboyd", "followers_url": "https://api.github.com/users/tfboyd/followers", "following_url": "https://api.github.com/users/tfboyd/following{/other_user}", "gists_url": "https://api.github.com/users/tfboyd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tfboyd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tfboyd/subscriptions", "organizations_url": "https://api.github.com/users/tfboyd/orgs", "repos_url": "https://api.github.com/users/tfboyd/repos", "events_url": "https://api.github.com/users/tfboyd/events{/privacy}", "received_events_url": "https://api.github.com/users/tfboyd/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-05T16:47:47Z", "updated_at": "2017-07-05T16:47:47Z", "author_association": "MEMBER", "body_html": "<p>I am working on a post with data to help people with CPU only situations.  MKL can provide a lot of improvement for CNN style models but there are some edge cases and you will need to set some environment variables as well as use the desired data format NCHW (assuming image data).  I am a big fan and I realize there is a lot we do not know about MKL performance.  With not very many people running the MKL version there are issue that could exist.  I have everyone knows the TensorFlow in GitHub is the same we use internally at Google and we do a lot of CPU training.  This provides a huge testing bed.  For a few reasons we cannot use MKL internally and thus it will be a while before it gets the level of testing as AVX and AVX2 editions.</p>\n<p>MKL also provides the most gains for training and on larger systems, e.g. 22-44 cores.  What you can do that is much safer is make sure to compile with AVX or AVX2 support based on your underlying system.  That will also provide significant gains over the default build that uses SSE3.</p>\n<p>Finally, while we are working on getting the MKL editions to build on OSX and possibly windows it currently is only running on Linux.  Some community members have compiled for OSX but the configs need cleaned up for everyone to use.</p>\n<p>Happy to answer questions and share any info I have from my testing.</p>", "body_text": "I am working on a post with data to help people with CPU only situations.  MKL can provide a lot of improvement for CNN style models but there are some edge cases and you will need to set some environment variables as well as use the desired data format NCHW (assuming image data).  I am a big fan and I realize there is a lot we do not know about MKL performance.  With not very many people running the MKL version there are issue that could exist.  I have everyone knows the TensorFlow in GitHub is the same we use internally at Google and we do a lot of CPU training.  This provides a huge testing bed.  For a few reasons we cannot use MKL internally and thus it will be a while before it gets the level of testing as AVX and AVX2 editions.\nMKL also provides the most gains for training and on larger systems, e.g. 22-44 cores.  What you can do that is much safer is make sure to compile with AVX or AVX2 support based on your underlying system.  That will also provide significant gains over the default build that uses SSE3.\nFinally, while we are working on getting the MKL editions to build on OSX and possibly windows it currently is only running on Linux.  Some community members have compiled for OSX but the configs need cleaned up for everyone to use.\nHappy to answer questions and share any info I have from my testing.", "body": "I am working on a post with data to help people with CPU only situations.  MKL can provide a lot of improvement for CNN style models but there are some edge cases and you will need to set some environment variables as well as use the desired data format NCHW (assuming image data).  I am a big fan and I realize there is a lot we do not know about MKL performance.  With not very many people running the MKL version there are issue that could exist.  I have everyone knows the TensorFlow in GitHub is the same we use internally at Google and we do a lot of CPU training.  This provides a huge testing bed.  For a few reasons we cannot use MKL internally and thus it will be a while before it gets the level of testing as AVX and AVX2 editions.\r\n\r\nMKL also provides the most gains for training and on larger systems, e.g. 22-44 cores.  What you can do that is much safer is make sure to compile with AVX or AVX2 support based on your underlying system.  That will also provide significant gains over the default build that uses SSE3.  \r\n\r\nFinally, while we are working on getting the MKL editions to build on OSX and possibly windows it currently is only running on Linux.  Some community members have compiled for OSX but the configs need cleaned up for everyone to use.  \r\n\r\nHappy to answer questions and share any info I have from my testing.  "}