{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17266", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17266/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17266/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17266/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17266", "id": 300124249, "node_id": "MDU6SXNzdWUzMDAxMjQyNDk=", "number": 17266, "title": "'num' must be either a scalar or vector in tf.unstack?", "user": {"login": "Imorton-zd", "id": 13865086, "node_id": "MDQ6VXNlcjEzODY1MDg2", "avatar_url": "https://avatars1.githubusercontent.com/u/13865086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Imorton-zd", "html_url": "https://github.com/Imorton-zd", "followers_url": "https://api.github.com/users/Imorton-zd/followers", "following_url": "https://api.github.com/users/Imorton-zd/following{/other_user}", "gists_url": "https://api.github.com/users/Imorton-zd/gists{/gist_id}", "starred_url": "https://api.github.com/users/Imorton-zd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Imorton-zd/subscriptions", "organizations_url": "https://api.github.com/users/Imorton-zd/orgs", "repos_url": "https://api.github.com/users/Imorton-zd/repos", "events_url": "https://api.github.com/users/Imorton-zd/events{/privacy}", "received_events_url": "https://api.github.com/users/Imorton-zd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-02-26T06:33:59Z", "updated_at": "2018-05-14T06:21:27Z", "closed_at": null, "author_association": "NONE", "body_html": "<pre><code>batch_size = tf.placeholder([],dtype=tf.int32) \ntf_x = tf.placeholder(tf.float32, [None,timestep_size,input_size])     \n  \nlstm_cell = rnn.BasicLSTMCell(num_units=hidden_size, forget_bias=1.0, state_is_tuple=True)\ninit_state = lstm_cell.zero_state(batch_size, dtype=tf.float32)\n\ninputs = tf.unstack(tf_x,num=batch_size,axis=0)\n\nValueError: 'num' must be either a scalar or vector, but saw tensor\n</code></pre>\n<p>When training and test, I want to use the different batch size. But in <code>unstack</code> function, the <code>num</code> parameter doesn't support a tensor as input. However, in <code>zero_state</code> function, the first parameter can support a tensor as input. I think the new version should support this practical feature. Thanks!</p>", "body_text": "batch_size = tf.placeholder([],dtype=tf.int32) \ntf_x = tf.placeholder(tf.float32, [None,timestep_size,input_size])     \n  \nlstm_cell = rnn.BasicLSTMCell(num_units=hidden_size, forget_bias=1.0, state_is_tuple=True)\ninit_state = lstm_cell.zero_state(batch_size, dtype=tf.float32)\n\ninputs = tf.unstack(tf_x,num=batch_size,axis=0)\n\nValueError: 'num' must be either a scalar or vector, but saw tensor\n\nWhen training and test, I want to use the different batch size. But in unstack function, the num parameter doesn't support a tensor as input. However, in zero_state function, the first parameter can support a tensor as input. I think the new version should support this practical feature. Thanks!", "body": "```\r\nbatch_size = tf.placeholder([],dtype=tf.int32) \r\ntf_x = tf.placeholder(tf.float32, [None,timestep_size,input_size])     \r\n  \r\nlstm_cell = rnn.BasicLSTMCell(num_units=hidden_size, forget_bias=1.0, state_is_tuple=True)\r\ninit_state = lstm_cell.zero_state(batch_size, dtype=tf.float32)\r\n\r\ninputs = tf.unstack(tf_x,num=batch_size,axis=0)\r\n\r\nValueError: 'num' must be either a scalar or vector, but saw tensor\r\n```\r\n\r\nWhen training and test, I want to use the different batch size. But in `unstack` function, the `num` parameter doesn't support a tensor as input. However, in `zero_state` function, the first parameter can support a tensor as input. I think the new version should support this practical feature. Thanks!"}