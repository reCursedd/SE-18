{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/440761634", "html_url": "https://github.com/tensorflow/tensorflow/issues/23779#issuecomment-440761634", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23779", "id": 440761634, "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDc2MTYzNA==", "user": {"login": "ThomasHagebols", "id": 19171292, "node_id": "MDQ6VXNlcjE5MTcxMjky", "avatar_url": "https://avatars2.githubusercontent.com/u/19171292?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThomasHagebols", "html_url": "https://github.com/ThomasHagebols", "followers_url": "https://api.github.com/users/ThomasHagebols/followers", "following_url": "https://api.github.com/users/ThomasHagebols/following{/other_user}", "gists_url": "https://api.github.com/users/ThomasHagebols/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThomasHagebols/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThomasHagebols/subscriptions", "organizations_url": "https://api.github.com/users/ThomasHagebols/orgs", "repos_url": "https://api.github.com/users/ThomasHagebols/repos", "events_url": "https://api.github.com/users/ThomasHagebols/events{/privacy}", "received_events_url": "https://api.github.com/users/ThomasHagebols/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-21T18:10:42Z", "updated_at": "2018-11-21T18:11:31Z", "author_association": "NONE", "body_html": "<p>An easy workaround it to change the types in y_train and y_test to np.int64.</p>\n<pre lang=\"import\" data-meta=\"tensorflow as tf\"><code>import numpy as np\nmnist = tf.keras.datasets.mnist\n\ntf.enable_eager_execution()\n\n(x_train, y_train),(x_test, y_test) = mnist.load_data()\ny_train = y_train.astype(np.int64)\ny_test = y_test.astype(np.int64)\n\nx_train, x_test = x_train / 255.0, x_test / 255.0\n\nmodel = tf.keras.models.Sequential([\n  tf.keras.layers.Flatten(),\n  tf.keras.layers.Dense(512, input_shape=(784,), activation=tf.nn.relu),\n  tf.keras.layers.Dropout(0.2),\n  tf.keras.layers.Dense(10, input_shape=(512,), activation=tf.nn.softmax)\n])\nmodel.compile(optimizer=tf.train.AdamOptimizer(),\n              loss='sparse_categorical_crossentropy',\n              metrics=['accuracy'])\n\nmodel.fit(x_train, y_train, epochs=5)\nmodel.evaluate(x_test, y_test)```\n</code></pre>", "body_text": "An easy workaround it to change the types in y_train and y_test to np.int64.\nimport numpy as np\nmnist = tf.keras.datasets.mnist\n\ntf.enable_eager_execution()\n\n(x_train, y_train),(x_test, y_test) = mnist.load_data()\ny_train = y_train.astype(np.int64)\ny_test = y_test.astype(np.int64)\n\nx_train, x_test = x_train / 255.0, x_test / 255.0\n\nmodel = tf.keras.models.Sequential([\n  tf.keras.layers.Flatten(),\n  tf.keras.layers.Dense(512, input_shape=(784,), activation=tf.nn.relu),\n  tf.keras.layers.Dropout(0.2),\n  tf.keras.layers.Dense(10, input_shape=(512,), activation=tf.nn.softmax)\n])\nmodel.compile(optimizer=tf.train.AdamOptimizer(),\n              loss='sparse_categorical_crossentropy',\n              metrics=['accuracy'])\n\nmodel.fit(x_train, y_train, epochs=5)\nmodel.evaluate(x_test, y_test)```", "body": "An easy workaround it to change the types in y_train and y_test to np.int64.\r\n\r\n```import tensorflow as tf\r\nimport numpy as np\r\nmnist = tf.keras.datasets.mnist\r\n\r\ntf.enable_eager_execution()\r\n\r\n(x_train, y_train),(x_test, y_test) = mnist.load_data()\r\ny_train = y_train.astype(np.int64)\r\ny_test = y_test.astype(np.int64)\r\n\r\nx_train, x_test = x_train / 255.0, x_test / 255.0\r\n\r\nmodel = tf.keras.models.Sequential([\r\n  tf.keras.layers.Flatten(),\r\n  tf.keras.layers.Dense(512, input_shape=(784,), activation=tf.nn.relu),\r\n  tf.keras.layers.Dropout(0.2),\r\n  tf.keras.layers.Dense(10, input_shape=(512,), activation=tf.nn.softmax)\r\n])\r\nmodel.compile(optimizer=tf.train.AdamOptimizer(),\r\n              loss='sparse_categorical_crossentropy',\r\n              metrics=['accuracy'])\r\n\r\nmodel.fit(x_train, y_train, epochs=5)\r\nmodel.evaluate(x_test, y_test)```"}