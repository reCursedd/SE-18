{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/348732662", "html_url": "https://github.com/tensorflow/tensorflow/issues/15058#issuecomment-348732662", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15058", "id": 348732662, "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODczMjY2Mg==", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-03T01:13:01Z", "updated_at": "2017-12-03T01:13:01Z", "author_association": "MEMBER", "body_html": "<p>This is by design. TensorFlow \"resources\" (<code>DT_RESOURCE</code> tensors) are identified by their shared name (and in fact, in distributed settings, the shared name is used to identify variables across different sessions as each worker is running a different session).</p>\n<p>In Python, the <code>VarHandleOp</code> is typically not invoked directly, but instead variables are created via the <a href=\"https://github.com/tensorflow/tensorflow/blob/r1.4/tensorflow/python/ops/resource_variable_ops.py#L66\"><code>ResourceVariable</code></a> class, which ensures that names are unique (with the use of <code>name_scope</code>s).</p>\n<p>I understand that the fact that the <code>shared_name</code> attribute is optional can be confusing. Unfortunately, this is something we won't be changing because of our backward compatibility guarantees.</p>\n<p>Long story short, the Go API you provide to create variables (<code>makeVariable</code> in your snippet, or some type abstraction that you might be creating similar to the Python <code>ResourceVariable</code> class), should require a name argument and set the attribute.</p>\n<p>Hope that helps.</p>\n<p>I'm going to close this bug as things are working as intended. Improvements to these low level resource details are being discussed but are beyond the scope of this bug.</p>\n<p>Feel free to re-open if I'm mistaken.</p>\n<p>Thanks.</p>\n<p>(FYI <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5061\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/alextp\">@alextp</a> )</p>", "body_text": "This is by design. TensorFlow \"resources\" (DT_RESOURCE tensors) are identified by their shared name (and in fact, in distributed settings, the shared name is used to identify variables across different sessions as each worker is running a different session).\nIn Python, the VarHandleOp is typically not invoked directly, but instead variables are created via the ResourceVariable class, which ensures that names are unique (with the use of name_scopes).\nI understand that the fact that the shared_name attribute is optional can be confusing. Unfortunately, this is something we won't be changing because of our backward compatibility guarantees.\nLong story short, the Go API you provide to create variables (makeVariable in your snippet, or some type abstraction that you might be creating similar to the Python ResourceVariable class), should require a name argument and set the attribute.\nHope that helps.\nI'm going to close this bug as things are working as intended. Improvements to these low level resource details are being discussed but are beyond the scope of this bug.\nFeel free to re-open if I'm mistaken.\nThanks.\n(FYI @alextp )", "body": "This is by design. TensorFlow \"resources\" (`DT_RESOURCE` tensors) are identified by their shared name (and in fact, in distributed settings, the shared name is used to identify variables across different sessions as each worker is running a different session).\r\n\r\nIn Python, the `VarHandleOp` is typically not invoked directly, but instead variables are created via the [`ResourceVariable`](https://github.com/tensorflow/tensorflow/blob/r1.4/tensorflow/python/ops/resource_variable_ops.py#L66) class, which ensures that names are unique (with the use of `name_scope`s).\r\n\r\nI understand that the fact that the `shared_name` attribute is optional can be confusing. Unfortunately, this is something we won't be changing because of our backward compatibility guarantees.\r\n\r\nLong story short, the Go API you provide to create variables (`makeVariable` in your snippet, or some type abstraction that you might be creating similar to the Python `ResourceVariable` class), should require a name argument and set the attribute.\r\n\r\nHope that helps.\r\n\r\nI'm going to close this bug as things are working as intended. Improvements to these low level resource details are being discussed but are beyond the scope of this bug.\r\n\r\nFeel free to re-open if I'm mistaken.\r\n\r\nThanks.\r\n\r\n(FYI @alextp )"}