{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12853", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12853/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12853/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12853/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/12853", "id": 255706129, "node_id": "MDU6SXNzdWUyNTU3MDYxMjk=", "number": 12853, "title": "Sub-gradient for self_adjoin_eig when eigen values are equal ", "user": {"login": "RAditi", "id": 5721034, "node_id": "MDQ6VXNlcjU3MjEwMzQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/5721034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RAditi", "html_url": "https://github.com/RAditi", "followers_url": "https://api.github.com/users/RAditi/followers", "following_url": "https://api.github.com/users/RAditi/following{/other_user}", "gists_url": "https://api.github.com/users/RAditi/gists{/gist_id}", "starred_url": "https://api.github.com/users/RAditi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RAditi/subscriptions", "organizations_url": "https://api.github.com/users/RAditi/orgs", "repos_url": "https://api.github.com/users/RAditi/repos", "events_url": "https://api.github.com/users/RAditi/events{/privacy}", "received_events_url": "https://api.github.com/users/RAditi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-09-06T18:49:32Z", "updated_at": "2018-01-25T02:42:32Z", "closed_at": null, "author_association": "NONE", "body_html": "<hr>\n<h3>System information</h3>\n<ul>\n<li>\n<p><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:<br>\nYes, I have written custom code</p>\n</li>\n<li>\n<p><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:<br>\nLinux 14.04</p>\n</li>\n<li>\n<p><strong>TensorFlow installed from (source or binary)</strong>:<br>\nBinary</p>\n</li>\n<li>\n<p><strong>TensorFlow version (use command below)</strong>:<br>\n1.2.1</p>\n</li>\n<li>\n<p><strong>Python version</strong>:<br>\nPython 2.7</p>\n</li>\n<li>\n<p><strong>Bazel version (if compiling from source)</strong>:</p>\n</li>\n<li>\n<p><strong>CUDA/cuDNN version</strong>:<br>\n8.0.61</p>\n</li>\n<li>\n<p><strong>GPU model and memory</strong>:<br>\nTesla K40c</p>\n</li>\n<li>\n<p><strong>Exact command to reproduce</strong>:</p>\n</li>\n</ul>\n<p>You can collect some of this information using our environment capture script:</p>\n<p><a href=\"https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\">https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh</a></p>\n<p>You can obtain the TensorFlow version with</p>\n<p>python -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"</p>\n<h3>Describe the problem</h3>\n<p>Describe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.<br>\nThis is a feature request. When any two eigen values are equal, the tf.gradients( tf.self_adjoint_eig(matrix), matrix) returns NaN.<br>\nWhile the gradient is not well defined, it would be useful if some valid sub-gradient is returned (which could be used in the optimization).</p>\n<p>In particular, I am trying to optimize a function involving max eigen value of a matrix.<br>\nEven when two eigen values are equal, a valid sub-gradient would be v_1 * v_1^T,<br>\nwhere v_1 is the eigen vector corresponding to a max eigen value.</p>\n<h3>Source code / logs</h3>\n<p>Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.</p>", "body_text": "System information\n\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nYes, I have written custom code\n\n\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nLinux 14.04\n\n\nTensorFlow installed from (source or binary):\nBinary\n\n\nTensorFlow version (use command below):\n1.2.1\n\n\nPython version:\nPython 2.7\n\n\nBazel version (if compiling from source):\n\n\nCUDA/cuDNN version:\n8.0.61\n\n\nGPU model and memory:\nTesla K40c\n\n\nExact command to reproduce:\n\n\nYou can collect some of this information using our environment capture script:\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\nYou can obtain the TensorFlow version with\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\nDescribe the problem\nDescribe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.\nThis is a feature request. When any two eigen values are equal, the tf.gradients( tf.self_adjoint_eig(matrix), matrix) returns NaN.\nWhile the gradient is not well defined, it would be useful if some valid sub-gradient is returned (which could be used in the optimization).\nIn particular, I am trying to optimize a function involving max eigen value of a matrix.\nEven when two eigen values are equal, a valid sub-gradient would be v_1 * v_1^T,\nwhere v_1 is the eigen vector corresponding to a max eigen value.\nSource code / logs\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.", "body": "------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nYes, I have written custom code \r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nLinux 14.04\r\n- **TensorFlow installed from (source or binary)**:\r\nBinary\r\n- **TensorFlow version (use command below)**:\r\n1.2.1\r\n- **Python version**: \r\nPython 2.7\r\n- **Bazel version (if compiling from source)**:\r\n\r\n- **CUDA/cuDNN version**:\r\n8.0.61\r\n- **GPU model and memory**:\r\nTesla K40c\r\n- **Exact command to reproduce**:\r\n\r\nYou can collect some of this information using our environment capture script:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\nYou can obtain the TensorFlow version with\r\n\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n\r\n### Describe the problem\r\nDescribe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.\r\nThis is a feature request. When any two eigen values are equal, the tf.gradients( tf.self_adjoint_eig(matrix), matrix) returns NaN.\r\nWhile the gradient is not well defined, it would be useful if some valid sub-gradient is returned (which could be used in the optimization).\r\n \r\nIn particular, I am trying to optimize a function involving max eigen value of a matrix. \r\nEven when two eigen values are equal, a valid sub-gradient would be v_1 * v_1^T, \r\nwhere v_1 is the eigen vector corresponding to a max eigen value. \r\n\r\n### Source code / logs\r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.\r\n"}