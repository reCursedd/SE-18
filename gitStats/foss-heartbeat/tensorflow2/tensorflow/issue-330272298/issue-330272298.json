{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19835", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19835/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19835/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19835/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19835", "id": 330272298, "node_id": "MDU6SXNzdWUzMzAyNzIyOTg=", "number": 19835, "title": "tensorflow/contrib/lite module tests are failed to build", "user": {"login": "sandipmgiri", "id": 16284232, "node_id": "MDQ6VXNlcjE2Mjg0MjMy", "avatar_url": "https://avatars0.githubusercontent.com/u/16284232?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sandipmgiri", "html_url": "https://github.com/sandipmgiri", "followers_url": "https://api.github.com/users/sandipmgiri/followers", "following_url": "https://api.github.com/users/sandipmgiri/following{/other_user}", "gists_url": "https://api.github.com/users/sandipmgiri/gists{/gist_id}", "starred_url": "https://api.github.com/users/sandipmgiri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sandipmgiri/subscriptions", "organizations_url": "https://api.github.com/users/sandipmgiri/orgs", "repos_url": "https://api.github.com/users/sandipmgiri/repos", "events_url": "https://api.github.com/users/sandipmgiri/events{/privacy}", "received_events_url": "https://api.github.com/users/sandipmgiri/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 750616506, "node_id": "MDU6TGFiZWw3NTA2MTY1MDY=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:lite", "name": "comp:lite", "color": "0052cc", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "petewarden", "id": 161459, "node_id": "MDQ6VXNlcjE2MTQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/161459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petewarden", "html_url": "https://github.com/petewarden", "followers_url": "https://api.github.com/users/petewarden/followers", "following_url": "https://api.github.com/users/petewarden/following{/other_user}", "gists_url": "https://api.github.com/users/petewarden/gists{/gist_id}", "starred_url": "https://api.github.com/users/petewarden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petewarden/subscriptions", "organizations_url": "https://api.github.com/users/petewarden/orgs", "repos_url": "https://api.github.com/users/petewarden/repos", "events_url": "https://api.github.com/users/petewarden/events{/privacy}", "received_events_url": "https://api.github.com/users/petewarden/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "petewarden", "id": 161459, "node_id": "MDQ6VXNlcjE2MTQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/161459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petewarden", "html_url": "https://github.com/petewarden", "followers_url": "https://api.github.com/users/petewarden/followers", "following_url": "https://api.github.com/users/petewarden/following{/other_user}", "gists_url": "https://api.github.com/users/petewarden/gists{/gist_id}", "starred_url": "https://api.github.com/users/petewarden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petewarden/subscriptions", "organizations_url": "https://api.github.com/users/petewarden/orgs", "repos_url": "https://api.github.com/users/petewarden/repos", "events_url": "https://api.github.com/users/petewarden/events{/privacy}", "received_events_url": "https://api.github.com/users/petewarden/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2018-06-07T13:28:22Z", "updated_at": "2018-07-12T08:41:26Z", "closed_at": "2018-07-12T08:41:26Z", "author_association": "CONTRIBUTOR", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: NA</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:<br>\nUbuntu 16.04 (ppc64le)</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:<br>\nFrom source</li>\n<li><strong>TensorFlow version (use command below)</strong>:<br>\nTF-master</li>\n<li><strong>Python version</strong>:<br>\n2.7.12</li>\n<li><strong>Bazel version (if compiling from source)</strong>:<br>\n0.11.1</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:<br>\n5.4.0</li>\n<li><strong>CUDA/cuDNN version</strong>:<br>\nNA</li>\n<li><strong>GPU model and memory</strong>:<br>\nNA</li>\n<li><strong>Exact command to reproduce</strong>:<br>\n<code>bazel test -c opt  -k --jobs 1 test_timeout 300,450,1200,3600 --build_tests_only -- //tensorflow/... -//tensorflow/compiler/...  </code></li>\n</ul>\n<h3>Describe the problem</h3>\n<p>The TF-master build completed successfully.However while running the tests , around 80+ tests are failed to build. All of the failed tests are belongs to <code>tensorflow/contrib/lite </code>module.<br>\nNow , I'm trying to understand the reason. But, if anyone knows these are known failures then please let me know.<br>\nAlso, I would like to understand more about <code>tensorflow/contrib/lite </code> module  - Is it supported on our platform or do we need to skip the tests for this module ? or need special configuration to run the tests?</p>\n<p>I'm using below configuration to build and test TF-master :<br>\nEnabled only 3 features i.e. TF_NEED_GCP=1 , TF_NEED_HDFS=1 &amp; TF_NEED_JEMALLOC=1 , and all other are disabled.</p>\n<pre><code>Please input the desired Python library path to use.  Default is [/usr/local/lib/python2.7/dist-packages]\n\nDo you wish to build TensorFlow with jemalloc as malloc support? [Y/n]: y\njemalloc as malloc support will be enabled for TensorFlow.\n\nDo you wish to build TensorFlow with Google Cloud Platform support? [Y/n]: y\nGoogle Cloud Platform support will be enabled for TensorFlow.\n\nDo you wish to build TensorFlow with Hadoop File System support? [Y/n]: y\nHadoop File System support will be enabled for TensorFlow.\n\nDo you wish to build TensorFlow with Amazon S3 File System support? [Y/n]: n\nNo Amazon S3 File System support will be enabled for TensorFlow.\n\nDo you wish to build TensorFlow with Apache Kafka Platform support? [Y/n]: n\nNo Apache Kafka Platform support will be enabled for TensorFlow.\n\nDo you wish to build TensorFlow with XLA JIT support? [y/N]: n\nNo XLA JIT support will be enabled for TensorFlow.\n\nDo you wish to build TensorFlow with GDR support? [y/N]: n\nNo GDR support will be enabled for TensorFlow.\n\nDo you wish to build TensorFlow with VERBS support? [y/N]: n\nNo VERBS support will be enabled for TensorFlow.\n\nDo you wish to build TensorFlow with OpenCL SYCL support? [y/N]: n\nNo OpenCL SYCL support will be enabled for TensorFlow.\n\nDo you wish to build TensorFlow with CUDA support? [y/N]: n\nNo CUDA support will be enabled for TensorFlow.\n\nDo you wish to download a fresh release of clang? (Experimental) [y/N]: n\nClang will not be downloaded.\n\nDo you wish to build TensorFlow with MPI support? [y/N]: n\nNo MPI support will be enabled for TensorFlow.\n\nPlease specify optimization flags to use during compilation when bazel option \"--config=opt\" is specified [Default is -mcpu=native]: \"-mcpu=power8 -mtune=power8\"\n\n\nWould you like to interactively configure ./WORKSPACE for Android builds? [y/N]: n\nNot configuring the WORKSPACE for Android builds.\n\nPreconfigured Bazel build configs. You can use any of the below by adding \"--config=&lt;&gt;\" to your build command. See tools/bazel.rc for more details.\n        --config=mkl            # Build with MKL support.\n        --config=monolithic     # Config for mostly static monolithic build.\nConfiguration finished\n</code></pre>\n<h3>Source code / logs</h3>\n<p>For more details please check the logfile.txt.</p>\n<p><a href=\"https://github.com/tensorflow/tensorflow/files/2080578/logfile.txt\">logfile.txt</a></p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): NA\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nUbuntu 16.04 (ppc64le)\nTensorFlow installed from (source or binary):\nFrom source\nTensorFlow version (use command below):\nTF-master\nPython version:\n2.7.12\nBazel version (if compiling from source):\n0.11.1\nGCC/Compiler version (if compiling from source):\n5.4.0\nCUDA/cuDNN version:\nNA\nGPU model and memory:\nNA\nExact command to reproduce:\nbazel test -c opt  -k --jobs 1 test_timeout 300,450,1200,3600 --build_tests_only -- //tensorflow/... -//tensorflow/compiler/...  \n\nDescribe the problem\nThe TF-master build completed successfully.However while running the tests , around 80+ tests are failed to build. All of the failed tests are belongs to tensorflow/contrib/lite module.\nNow , I'm trying to understand the reason. But, if anyone knows these are known failures then please let me know.\nAlso, I would like to understand more about tensorflow/contrib/lite  module  - Is it supported on our platform or do we need to skip the tests for this module ? or need special configuration to run the tests?\nI'm using below configuration to build and test TF-master :\nEnabled only 3 features i.e. TF_NEED_GCP=1 , TF_NEED_HDFS=1 & TF_NEED_JEMALLOC=1 , and all other are disabled.\nPlease input the desired Python library path to use.  Default is [/usr/local/lib/python2.7/dist-packages]\n\nDo you wish to build TensorFlow with jemalloc as malloc support? [Y/n]: y\njemalloc as malloc support will be enabled for TensorFlow.\n\nDo you wish to build TensorFlow with Google Cloud Platform support? [Y/n]: y\nGoogle Cloud Platform support will be enabled for TensorFlow.\n\nDo you wish to build TensorFlow with Hadoop File System support? [Y/n]: y\nHadoop File System support will be enabled for TensorFlow.\n\nDo you wish to build TensorFlow with Amazon S3 File System support? [Y/n]: n\nNo Amazon S3 File System support will be enabled for TensorFlow.\n\nDo you wish to build TensorFlow with Apache Kafka Platform support? [Y/n]: n\nNo Apache Kafka Platform support will be enabled for TensorFlow.\n\nDo you wish to build TensorFlow with XLA JIT support? [y/N]: n\nNo XLA JIT support will be enabled for TensorFlow.\n\nDo you wish to build TensorFlow with GDR support? [y/N]: n\nNo GDR support will be enabled for TensorFlow.\n\nDo you wish to build TensorFlow with VERBS support? [y/N]: n\nNo VERBS support will be enabled for TensorFlow.\n\nDo you wish to build TensorFlow with OpenCL SYCL support? [y/N]: n\nNo OpenCL SYCL support will be enabled for TensorFlow.\n\nDo you wish to build TensorFlow with CUDA support? [y/N]: n\nNo CUDA support will be enabled for TensorFlow.\n\nDo you wish to download a fresh release of clang? (Experimental) [y/N]: n\nClang will not be downloaded.\n\nDo you wish to build TensorFlow with MPI support? [y/N]: n\nNo MPI support will be enabled for TensorFlow.\n\nPlease specify optimization flags to use during compilation when bazel option \"--config=opt\" is specified [Default is -mcpu=native]: \"-mcpu=power8 -mtune=power8\"\n\n\nWould you like to interactively configure ./WORKSPACE for Android builds? [y/N]: n\nNot configuring the WORKSPACE for Android builds.\n\nPreconfigured Bazel build configs. You can use any of the below by adding \"--config=<>\" to your build command. See tools/bazel.rc for more details.\n        --config=mkl            # Build with MKL support.\n        --config=monolithic     # Config for mostly static monolithic build.\nConfiguration finished\n\nSource code / logs\nFor more details please check the logfile.txt.\nlogfile.txt", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: NA\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nUbuntu 16.04 (ppc64le)\r\n- **TensorFlow installed from (source or binary)**:\r\nFrom source\r\n- **TensorFlow version (use command below)**:\r\nTF-master\r\n- **Python version**: \r\n2.7.12\r\n- **Bazel version (if compiling from source)**:\r\n0.11.1\r\n- **GCC/Compiler version (if compiling from source)**:\r\n5.4.0\r\n- **CUDA/cuDNN version**: \r\nNA\r\n- **GPU model and memory**:\r\nNA\r\n- **Exact command to reproduce**:\r\n`bazel test -c opt  -k --jobs 1 test_timeout 300,450,1200,3600 --build_tests_only -- //tensorflow/... -//tensorflow/compiler/...  `\r\n\r\n### Describe the problem\r\nThe TF-master build completed successfully.However while running the tests , around 80+ tests are failed to build. All of the failed tests are belongs to `tensorflow/contrib/lite `module.\r\nNow , I'm trying to understand the reason. But, if anyone knows these are known failures then please let me know.  \r\nAlso, I would like to understand more about `tensorflow/contrib/lite ` module  - Is it supported on our platform or do we need to skip the tests for this module ? or need special configuration to run the tests?\r\n\r\nI'm using below configuration to build and test TF-master :\r\nEnabled only 3 features i.e. TF_NEED_GCP=1 , TF_NEED_HDFS=1 & TF_NEED_JEMALLOC=1 , and all other are disabled. \r\n```\r\nPlease input the desired Python library path to use.  Default is [/usr/local/lib/python2.7/dist-packages]\r\n\r\nDo you wish to build TensorFlow with jemalloc as malloc support? [Y/n]: y\r\njemalloc as malloc support will be enabled for TensorFlow.\r\n\r\nDo you wish to build TensorFlow with Google Cloud Platform support? [Y/n]: y\r\nGoogle Cloud Platform support will be enabled for TensorFlow.\r\n\r\nDo you wish to build TensorFlow with Hadoop File System support? [Y/n]: y\r\nHadoop File System support will be enabled for TensorFlow.\r\n\r\nDo you wish to build TensorFlow with Amazon S3 File System support? [Y/n]: n\r\nNo Amazon S3 File System support will be enabled for TensorFlow.\r\n\r\nDo you wish to build TensorFlow with Apache Kafka Platform support? [Y/n]: n\r\nNo Apache Kafka Platform support will be enabled for TensorFlow.\r\n\r\nDo you wish to build TensorFlow with XLA JIT support? [y/N]: n\r\nNo XLA JIT support will be enabled for TensorFlow.\r\n\r\nDo you wish to build TensorFlow with GDR support? [y/N]: n\r\nNo GDR support will be enabled for TensorFlow.\r\n\r\nDo you wish to build TensorFlow with VERBS support? [y/N]: n\r\nNo VERBS support will be enabled for TensorFlow.\r\n\r\nDo you wish to build TensorFlow with OpenCL SYCL support? [y/N]: n\r\nNo OpenCL SYCL support will be enabled for TensorFlow.\r\n\r\nDo you wish to build TensorFlow with CUDA support? [y/N]: n\r\nNo CUDA support will be enabled for TensorFlow.\r\n\r\nDo you wish to download a fresh release of clang? (Experimental) [y/N]: n\r\nClang will not be downloaded.\r\n\r\nDo you wish to build TensorFlow with MPI support? [y/N]: n\r\nNo MPI support will be enabled for TensorFlow.\r\n\r\nPlease specify optimization flags to use during compilation when bazel option \"--config=opt\" is specified [Default is -mcpu=native]: \"-mcpu=power8 -mtune=power8\"\r\n\r\n\r\nWould you like to interactively configure ./WORKSPACE for Android builds? [y/N]: n\r\nNot configuring the WORKSPACE for Android builds.\r\n\r\nPreconfigured Bazel build configs. You can use any of the below by adding \"--config=<>\" to your build command. See tools/bazel.rc for more details.\r\n        --config=mkl            # Build with MKL support.\r\n        --config=monolithic     # Config for mostly static monolithic build.\r\nConfiguration finished\r\n```\r\n\r\n\r\n### Source code / logs\r\nFor more details please check the logfile.txt.\r\n\r\n[logfile.txt](https://github.com/tensorflow/tensorflow/files/2080578/logfile.txt)\r\n"}