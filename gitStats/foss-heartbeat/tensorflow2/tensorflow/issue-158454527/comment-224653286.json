{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/224653286", "html_url": "https://github.com/tensorflow/tensorflow/issues/2646#issuecomment-224653286", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2646", "id": 224653286, "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDY1MzI4Ng==", "user": {"login": "llchan", "id": 51099, "node_id": "MDQ6VXNlcjUxMDk5", "avatar_url": "https://avatars2.githubusercontent.com/u/51099?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llchan", "html_url": "https://github.com/llchan", "followers_url": "https://api.github.com/users/llchan/followers", "following_url": "https://api.github.com/users/llchan/following{/other_user}", "gists_url": "https://api.github.com/users/llchan/gists{/gist_id}", "starred_url": "https://api.github.com/users/llchan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llchan/subscriptions", "organizations_url": "https://api.github.com/users/llchan/orgs", "repos_url": "https://api.github.com/users/llchan/repos", "events_url": "https://api.github.com/users/llchan/events{/privacy}", "received_events_url": "https://api.github.com/users/llchan/received_events", "type": "User", "site_admin": false}, "created_at": "2016-06-08T16:47:40Z", "updated_at": "2016-06-08T17:48:23Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=326106\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/aselle\">@aselle</a> Hiding inlines might solve one class of problems, but non-inlined functions could also be clobbered.  We really need to either make the two libraries hidden from each other (i.e. remove/restrict RTLD_GLOBAL-ness), or share the same libprotobuf.so.</p>\n<p>By far the best solution would be to dynamically link to an existing protobuf library and sprinkle in one or two version checks to make sure the right one is loaded.  Is there any reason not to do this other than the work involved to put it in the bazel build configs?</p>", "body_text": "@aselle Hiding inlines might solve one class of problems, but non-inlined functions could also be clobbered.  We really need to either make the two libraries hidden from each other (i.e. remove/restrict RTLD_GLOBAL-ness), or share the same libprotobuf.so.\nBy far the best solution would be to dynamically link to an existing protobuf library and sprinkle in one or two version checks to make sure the right one is loaded.  Is there any reason not to do this other than the work involved to put it in the bazel build configs?", "body": "@aselle Hiding inlines might solve one class of problems, but non-inlined functions could also be clobbered.  We really need to either make the two libraries hidden from each other (i.e. remove/restrict RTLD_GLOBAL-ness), or share the same libprotobuf.so.\n\nBy far the best solution would be to dynamically link to an existing protobuf library and sprinkle in one or two version checks to make sure the right one is loaded.  Is there any reason not to do this other than the work involved to put it in the bazel build configs?\n"}