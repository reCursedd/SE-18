{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/224671337", "html_url": "https://github.com/tensorflow/tensorflow/issues/2646#issuecomment-224671337", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2646", "id": 224671337, "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDY3MTMzNw==", "user": {"login": "llchan", "id": 51099, "node_id": "MDQ6VXNlcjUxMDk5", "avatar_url": "https://avatars2.githubusercontent.com/u/51099?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llchan", "html_url": "https://github.com/llchan", "followers_url": "https://api.github.com/users/llchan/followers", "following_url": "https://api.github.com/users/llchan/following{/other_user}", "gists_url": "https://api.github.com/users/llchan/gists{/gist_id}", "starred_url": "https://api.github.com/users/llchan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llchan/subscriptions", "organizations_url": "https://api.github.com/users/llchan/orgs", "repos_url": "https://api.github.com/users/llchan/repos", "events_url": "https://api.github.com/users/llchan/events{/privacy}", "received_events_url": "https://api.github.com/users/llchan/received_events", "type": "User", "site_admin": false}, "created_at": "2016-06-08T17:44:08Z", "updated_at": "2016-06-08T17:44:08Z", "author_association": "NONE", "body_html": "<p>I think this may impact the other libraries that are embedded in tensorflow.  Suppose I do this:</p>\n<ol>\n<li>Import tensorflow, it loads _pywrap_tensorflow.so with RTLD_GLOBAL, libpng symbols are loaded with global visibility</li>\n<li>Import matplotlib.pyplot, it loads _png.so, which depends on libpng15.so, but when it's linked some of the symbols it needs are globally visible via _pywrap_tensorflow.so so it uses those instead</li>\n<li>Potential problems?  On my box, I have libpng-1.5.x, but tensorflow embeds libpng-1.2.x.  I don't know the details of the implementation but there could very well be struct changes between those versions.</li>\n</ol>\n<p>In an ideal world we'd link to existing libraries whenever possible.  If I had to guess, we are embedding these libraries so we don't need to support the entire universe of different versions people might have installed.  That's fine while TF is still young, but if we're going to do that we really can't have those embedded libraries loaded with global visibility or they will cause problems with libraries loaded the normal way.</p>", "body_text": "I think this may impact the other libraries that are embedded in tensorflow.  Suppose I do this:\n\nImport tensorflow, it loads _pywrap_tensorflow.so with RTLD_GLOBAL, libpng symbols are loaded with global visibility\nImport matplotlib.pyplot, it loads _png.so, which depends on libpng15.so, but when it's linked some of the symbols it needs are globally visible via _pywrap_tensorflow.so so it uses those instead\nPotential problems?  On my box, I have libpng-1.5.x, but tensorflow embeds libpng-1.2.x.  I don't know the details of the implementation but there could very well be struct changes between those versions.\n\nIn an ideal world we'd link to existing libraries whenever possible.  If I had to guess, we are embedding these libraries so we don't need to support the entire universe of different versions people might have installed.  That's fine while TF is still young, but if we're going to do that we really can't have those embedded libraries loaded with global visibility or they will cause problems with libraries loaded the normal way.", "body": "I think this may impact the other libraries that are embedded in tensorflow.  Suppose I do this:\n1. Import tensorflow, it loads _pywrap_tensorflow.so with RTLD_GLOBAL, libpng symbols are loaded with global visibility\n2. Import matplotlib.pyplot, it loads _png.so, which depends on libpng15.so, but when it's linked some of the symbols it needs are globally visible via _pywrap_tensorflow.so so it uses those instead\n3. Potential problems?  On my box, I have libpng-1.5.x, but tensorflow embeds libpng-1.2.x.  I don't know the details of the implementation but there could very well be struct changes between those versions.\n\nIn an ideal world we'd link to existing libraries whenever possible.  If I had to guess, we are embedding these libraries so we don't need to support the entire universe of different versions people might have installed.  That's fine while TF is still young, but if we're going to do that we really can't have those embedded libraries loaded with global visibility or they will cause problems with libraries loaded the normal way.\n"}