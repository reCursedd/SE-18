{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/405979907", "html_url": "https://github.com/tensorflow/tensorflow/pull/20845#issuecomment-405979907", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20845", "id": 405979907, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTk3OTkwNw==", "user": {"login": "hawkinsp", "id": 348932, "node_id": "MDQ6VXNlcjM0ODkzMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/348932?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hawkinsp", "html_url": "https://github.com/hawkinsp", "followers_url": "https://api.github.com/users/hawkinsp/followers", "following_url": "https://api.github.com/users/hawkinsp/following{/other_user}", "gists_url": "https://api.github.com/users/hawkinsp/gists{/gist_id}", "starred_url": "https://api.github.com/users/hawkinsp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hawkinsp/subscriptions", "organizations_url": "https://api.github.com/users/hawkinsp/orgs", "repos_url": "https://api.github.com/users/hawkinsp/repos", "events_url": "https://api.github.com/users/hawkinsp/events{/privacy}", "received_events_url": "https://api.github.com/users/hawkinsp/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-18T15:49:31Z", "updated_at": "2018-07-18T15:49:46Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4129721\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/gstoner\">@gstoner</a> I don't think that's true. Ultimately CUDA code becomes PTX/SASS that is linked into the host-side binary and loaded and launched by host-side code. I assume something similar happens with the AMD toolchain. What is to stop us from linking both CUDA and AMD binary blobs into the same host-side binary? If we get the host-side code right, this should be possible.</p>", "body_text": "@gstoner I don't think that's true. Ultimately CUDA code becomes PTX/SASS that is linked into the host-side binary and loaded and launched by host-side code. I assume something similar happens with the AMD toolchain. What is to stop us from linking both CUDA and AMD binary blobs into the same host-side binary? If we get the host-side code right, this should be possible.", "body": "@gstoner I don't think that's true. Ultimately CUDA code becomes PTX/SASS that is linked into the host-side binary and loaded and launched by host-side code. I assume something similar happens with the AMD toolchain. What is to stop us from linking both CUDA and AMD binary blobs into the same host-side binary? If we get the host-side code right, this should be possible.\r\n"}