{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17832", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17832/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17832/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17832/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17832", "id": 306527723, "node_id": "MDU6SXNzdWUzMDY1Mjc3MjM=", "number": 17832, "title": "tf.contrib.estimator.add_metrics does not pass label_ids to tf.estimator.DNNClassifier evaluation", "user": {"login": "jprosevear", "id": 699616, "node_id": "MDQ6VXNlcjY5OTYxNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/699616?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jprosevear", "html_url": "https://github.com/jprosevear", "followers_url": "https://api.github.com/users/jprosevear/followers", "following_url": "https://api.github.com/users/jprosevear/following{/other_user}", "gists_url": "https://api.github.com/users/jprosevear/gists{/gist_id}", "starred_url": "https://api.github.com/users/jprosevear/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jprosevear/subscriptions", "organizations_url": "https://api.github.com/users/jprosevear/orgs", "repos_url": "https://api.github.com/users/jprosevear/repos", "events_url": "https://api.github.com/users/jprosevear/events{/privacy}", "received_events_url": "https://api.github.com/users/jprosevear/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-03-19T16:07:35Z", "updated_at": "2018-09-17T16:25:09Z", "closed_at": null, "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li>\n<p><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:<br>\nYes</p>\n</li>\n<li>\n<p><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:<br>\nOSX 10.12.6</p>\n</li>\n<li>\n<p><strong>TensorFlow installed from (source or binary)</strong>:<br>\nBinary</p>\n</li>\n<li>\n<p><strong>TensorFlow version (use command below)</strong>:<br>\n('v1.6.0-0-gd2e24b6039', '1.6.0')</p>\n</li>\n<li>\n<p><strong>Python version</strong>:<br>\n2.7.13</p>\n</li>\n<li>\n<p><strong>Bazel version (if compiling from source)</strong>:<br>\nN/A</p>\n</li>\n<li>\n<p><strong>GCC/Compiler version (if compiling from source)</strong>:<br>\nN/A</p>\n</li>\n<li>\n<p><strong>CUDA/cuDNN version</strong>:</p>\n</li>\n<li>\n<p><strong>GPU model and memory</strong>:</p>\n</li>\n<li>\n<p><strong>Exact command to reproduce</strong>:</p>\n</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>Using tf.estimator.DNNClassifier as a multi-class estimator with a string label_vocabulary, tf.contrib.estimator.add_metrics will enable additional metrics functions as designed, however the label set pass to the metrics function will be the string tensor of labels, not the internal integer 'label_ids' of  DNNClassifier.</p>\n<p>This means the metrics do not have access to the labels used in the prediction tensor 'class_ids' (the tensor 'classes' does have the string labels).  This is a particular problem when trying to construct a confusion_matrix metric, as the confusion matrix tries to cast the labels to int64.</p>\n<p>With the canned metrics, DNNClassifier  will simply pass in label_ids/class_ids:<br>\n<div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/9054c9b2ac303cbd1538166d0821f389cbc75894/tensorflow/python/estimator/canned/head.py#L776\">tensorflow/tensorflow/python/estimator/canned/head.py</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n         Line 776\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/9054c9b2ac303cbd1538166d0821f389cbc75894\">9054c9b</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L776\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"776\"></td>\n          <td id=\"LC776\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-v\">labels</span><span class=\"pl-k\">=</span>label_ids, </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>", "body_text": "System information\n\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nYes\n\n\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nOSX 10.12.6\n\n\nTensorFlow installed from (source or binary):\nBinary\n\n\nTensorFlow version (use command below):\n('v1.6.0-0-gd2e24b6039', '1.6.0')\n\n\nPython version:\n2.7.13\n\n\nBazel version (if compiling from source):\nN/A\n\n\nGCC/Compiler version (if compiling from source):\nN/A\n\n\nCUDA/cuDNN version:\n\n\nGPU model and memory:\n\n\nExact command to reproduce:\n\n\nDescribe the problem\nUsing tf.estimator.DNNClassifier as a multi-class estimator with a string label_vocabulary, tf.contrib.estimator.add_metrics will enable additional metrics functions as designed, however the label set pass to the metrics function will be the string tensor of labels, not the internal integer 'label_ids' of  DNNClassifier.\nThis means the metrics do not have access to the labels used in the prediction tensor 'class_ids' (the tensor 'classes' does have the string labels).  This is a particular problem when trying to construct a confusion_matrix metric, as the confusion matrix tries to cast the labels to int64.\nWith the canned metrics, DNNClassifier  will simply pass in label_ids/class_ids:\n\n  \n    \n      tensorflow/tensorflow/python/estimator/canned/head.py\n    \n    \n         Line 776\n      in\n      9054c9b\n    \n    \n    \n    \n\n        \n          \n           labels=label_ids,", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nYes\r\n\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nOSX 10.12.6\r\n\r\n- **TensorFlow installed from (source or binary)**:\r\nBinary\r\n\r\n- **TensorFlow version (use command below)**:\r\n('v1.6.0-0-gd2e24b6039', '1.6.0')\r\n\r\n- **Python version**: \r\n2.7.13\r\n\r\n- **Bazel version (if compiling from source)**:\r\nN/A\r\n\r\n- **GCC/Compiler version (if compiling from source)**:\r\nN/A\r\n\r\n- **CUDA/cuDNN version**:\r\n- **GPU model and memory**:\r\n- **Exact command to reproduce**:\r\n\r\n\r\n### Describe the problem\r\nUsing tf.estimator.DNNClassifier as a multi-class estimator with a string label_vocabulary, tf.contrib.estimator.add_metrics will enable additional metrics functions as designed, however the label set pass to the metrics function will be the string tensor of labels, not the internal integer 'label_ids' of  DNNClassifier.  \r\n\r\nThis means the metrics do not have access to the labels used in the prediction tensor 'class_ids' (the tensor 'classes' does have the string labels).  This is a particular problem when trying to construct a confusion_matrix metric, as the confusion matrix tries to cast the labels to int64.\r\n\r\nWith the canned metrics, DNNClassifier  will simply pass in label_ids/class_ids:\r\nhttps://github.com/tensorflow/tensorflow/blob/9054c9b2ac303cbd1538166d0821f389cbc75894/tensorflow/python/estimator/canned/head.py#L776\r\n\r\n\r\n"}