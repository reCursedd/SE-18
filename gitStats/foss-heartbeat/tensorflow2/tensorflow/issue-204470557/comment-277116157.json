{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/277116157", "html_url": "https://github.com/tensorflow/tensorflow/issues/7173#issuecomment-277116157", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7173", "id": 277116157, "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzExNjE1Nw==", "user": {"login": "civilman628", "id": 8059551, "node_id": "MDQ6VXNlcjgwNTk1NTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/8059551?v=4", "gravatar_id": "", "url": "https://api.github.com/users/civilman628", "html_url": "https://github.com/civilman628", "followers_url": "https://api.github.com/users/civilman628/followers", "following_url": "https://api.github.com/users/civilman628/following{/other_user}", "gists_url": "https://api.github.com/users/civilman628/gists{/gist_id}", "starred_url": "https://api.github.com/users/civilman628/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/civilman628/subscriptions", "organizations_url": "https://api.github.com/users/civilman628/orgs", "repos_url": "https://api.github.com/users/civilman628/repos", "events_url": "https://api.github.com/users/civilman628/events{/privacy}", "received_events_url": "https://api.github.com/users/civilman628/received_events", "type": "User", "site_admin": false}, "created_at": "2017-02-02T23:19:25Z", "updated_at": "2017-02-02T23:19:25Z", "author_association": "NONE", "body_html": "<pre><code>import tensorflow as tf\nimport tensorflow.contrib.slim as slim\nfrom nets.inception_v4 import inception_v4, inception_v4_arg_scope\nimport numpy as np\n\nheight = 299\nwidth = 299\nchannels = 3\n\n# Create graph\nX = tf.placeholder(tf.float32, shape=[None, height, width, channels])\nwith slim.arg_scope(inception_v4_arg_scope()):\n    logits, end_points = inception_v4(X, num_classes=1001,\n                                      is_training=False)\npredictions = end_points[\"Predictions\"]\nsaver = tf.train.Saver()\n\nX_test = np.ones((1,299,299,3))  # your images, shape [batch_size, 299, 299, 3]\n\n# Execute graph\nwith tf.Session() as sess:\n    saver.restore(sess, \"./inception_v4.ckpt\")\n    predictions_val = predictions.eval(feed_dict={X: X_test})\n</code></pre>", "body_text": "import tensorflow as tf\nimport tensorflow.contrib.slim as slim\nfrom nets.inception_v4 import inception_v4, inception_v4_arg_scope\nimport numpy as np\n\nheight = 299\nwidth = 299\nchannels = 3\n\n# Create graph\nX = tf.placeholder(tf.float32, shape=[None, height, width, channels])\nwith slim.arg_scope(inception_v4_arg_scope()):\n    logits, end_points = inception_v4(X, num_classes=1001,\n                                      is_training=False)\npredictions = end_points[\"Predictions\"]\nsaver = tf.train.Saver()\n\nX_test = np.ones((1,299,299,3))  # your images, shape [batch_size, 299, 299, 3]\n\n# Execute graph\nwith tf.Session() as sess:\n    saver.restore(sess, \"./inception_v4.ckpt\")\n    predictions_val = predictions.eval(feed_dict={X: X_test})", "body": "```\r\nimport tensorflow as tf\r\nimport tensorflow.contrib.slim as slim\r\nfrom nets.inception_v4 import inception_v4, inception_v4_arg_scope\r\nimport numpy as np\r\n\r\nheight = 299\r\nwidth = 299\r\nchannels = 3\r\n\r\n# Create graph\r\nX = tf.placeholder(tf.float32, shape=[None, height, width, channels])\r\nwith slim.arg_scope(inception_v4_arg_scope()):\r\n    logits, end_points = inception_v4(X, num_classes=1001,\r\n                                      is_training=False)\r\npredictions = end_points[\"Predictions\"]\r\nsaver = tf.train.Saver()\r\n\r\nX_test = np.ones((1,299,299,3))  # your images, shape [batch_size, 299, 299, 3]\r\n\r\n# Execute graph\r\nwith tf.Session() as sess:\r\n    saver.restore(sess, \"./inception_v4.ckpt\")\r\n    predictions_val = predictions.eval(feed_dict={X: X_test})\r\n```\r\n    "}