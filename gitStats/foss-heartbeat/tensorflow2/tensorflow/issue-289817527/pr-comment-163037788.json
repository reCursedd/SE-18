{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/163037788", "pull_request_review_id": 90578124, "id": 163037788, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MzAzNzc4OA==", "diff_hunk": "@@ -130,6 +130,8 @@ TEST_F(S3FileSystemTest, NewReadOnlyMemoryRegionFromFile) {\n \n TEST_F(S3FileSystemTest, FileExists) {\n   const string fname = TmpDir(\"FileExists\");\n+  // Ensure the file doesn't yet exist.\n+  TF_ASSERT_OK(s3fs.DeleteFile(fname));", "path": "tensorflow/core/platform/s3/s3_file_system_test.cc", "position": 5, "original_position": 5, "commit_id": "2b3ecbc3a7374082487a38dcf81f9c329a52e414", "original_commit_id": "4cab2db90661e5f4b472ace55c45ba4befa6b27c", "user": {"login": "jkinkead", "id": 1548392, "node_id": "MDQ6VXNlcjE1NDgzOTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1548392?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jkinkead", "html_url": "https://github.com/jkinkead", "followers_url": "https://api.github.com/users/jkinkead/followers", "following_url": "https://api.github.com/users/jkinkead/following{/other_user}", "gists_url": "https://api.github.com/users/jkinkead/gists{/gist_id}", "starred_url": "https://api.github.com/users/jkinkead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jkinkead/subscriptions", "organizations_url": "https://api.github.com/users/jkinkead/orgs", "repos_url": "https://api.github.com/users/jkinkead/repos", "events_url": "https://api.github.com/users/jkinkead/events{/privacy}", "received_events_url": "https://api.github.com/users/jkinkead/received_events", "type": "User", "site_admin": false}, "body": "Good question! [The API docs](https://github.com/tensorflow/tensorflow/blob/04b5c75aae4bdbdac7c713714a369f9b360daf70/tensorflow/core/platform/file_system.h#L150-L151) don't specify.\r\n\r\nThe posix filesystem looks like it will return ENOENT if the file doesn't exist, but the S3 filesystem currently treats this as success. I'd rather not change the S3 behavior, but I could future-proof this by removing the `TF_ASSERT_OK` - what do you think?", "created_at": "2018-01-22T19:10:09Z", "updated_at": "2018-01-23T20:11:22Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/16232#discussion_r163037788", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/16232", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/163037788"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/16232#discussion_r163037788"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/16232"}}, "body_html": "<p>Good question! <a href=\"https://github.com/tensorflow/tensorflow/blob/04b5c75aae4bdbdac7c713714a369f9b360daf70/tensorflow/core/platform/file_system.h#L150-L151\">The API docs</a> don't specify.</p>\n<p>The posix filesystem looks like it will return ENOENT if the file doesn't exist, but the S3 filesystem currently treats this as success. I'd rather not change the S3 behavior, but I could future-proof this by removing the <code>TF_ASSERT_OK</code> - what do you think?</p>", "body_text": "Good question! The API docs don't specify.\nThe posix filesystem looks like it will return ENOENT if the file doesn't exist, but the S3 filesystem currently treats this as success. I'd rather not change the S3 behavior, but I could future-proof this by removing the TF_ASSERT_OK - what do you think?", "in_reply_to_id": 162790143}