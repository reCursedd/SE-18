{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/309261563", "html_url": "https://github.com/tensorflow/tensorflow/issues/10737#issuecomment-309261563", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10737", "id": 309261563, "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTI2MTU2Mw==", "user": {"login": "ringw", "id": 1391644, "node_id": "MDQ6VXNlcjEzOTE2NDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1391644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ringw", "html_url": "https://github.com/ringw", "followers_url": "https://api.github.com/users/ringw/followers", "following_url": "https://api.github.com/users/ringw/following{/other_user}", "gists_url": "https://api.github.com/users/ringw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ringw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ringw/subscriptions", "organizations_url": "https://api.github.com/users/ringw/orgs", "repos_url": "https://api.github.com/users/ringw/repos", "events_url": "https://api.github.com/users/ringw/events{/privacy}", "received_events_url": "https://api.github.com/users/ringw/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-18T07:23:13Z", "updated_at": "2017-06-18T07:23:13Z", "author_association": "MEMBER", "body_html": "<div class=\"email-fragment\">I'd argue against adding an `inverse` argument for rotation and translation\nwhere the arguments can just be negated, but if it's useful to have a\n`shear` function, we might want an inverse argument there. (Any function\nlike `rotate` should have a corresponding function that creates the\ntransform, and then the user can compose the transforms in whatever order\nthey want.)\n\nOn Jun 18, 2017 12:01 AM, \"3rd3\" &lt;notifications@github.com&gt; wrote:\n\nI've run into numerical instabilities inverting transformation matrices\nbefore, though for data augmentation it should suffice. Usually one can\nconstruct the same matrices again using their inverse primitive affine\ntransformations (shear, rotation etc.). Perhaps a function would be helpful\nthat either constructs the mapping or the inverse like this\ntf.image.affine_transform(shear_x, shear_y, rotation, scale, inverse=False).\nNot entirely sure how useful that is. Just an idea.\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\n&lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"236256626\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/10737\" href=\"https://github.com/tensorflow/tensorflow/issues/10737#issuecomment-309242360\">#10737 (comment)</a>&gt;,\nor mute the thread\n&lt;<a href=\"https://github.com/notifications/unsubscribe-auth/ABU8HNQgeVT67blgpRMEgdEcCXgJRpCuks5sFEpOgaJpZM4N7fsW\">https://github.com/notifications/unsubscribe-auth/ABU8HNQgeVT67blgpRMEgdEcCXgJRpCuks5sFEpOgaJpZM4N7fsW</a>&gt;\n.</div>", "body_text": "I'd argue against adding an `inverse` argument for rotation and translation\nwhere the arguments can just be negated, but if it's useful to have a\n`shear` function, we might want an inverse argument there. (Any function\nlike `rotate` should have a corresponding function that creates the\ntransform, and then the user can compose the transforms in whatever order\nthey want.)\n\nOn Jun 18, 2017 12:01 AM, \"3rd3\" <notifications@github.com> wrote:\n\nI've run into numerical instabilities inverting transformation matrices\nbefore, though for data augmentation it should suffice. Usually one can\nconstruct the same matrices again using their inverse primitive affine\ntransformations (shear, rotation etc.). Perhaps a function would be helpful\nthat either constructs the mapping or the inverse like this\ntf.image.affine_transform(shear_x, shear_y, rotation, scale, inverse=False).\nNot entirely sure how useful that is. Just an idea.\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\n<#10737 (comment)>,\nor mute the thread\n<https://github.com/notifications/unsubscribe-auth/ABU8HNQgeVT67blgpRMEgdEcCXgJRpCuks5sFEpOgaJpZM4N7fsW>\n.", "body": "I'd argue against adding an `inverse` argument for rotation and translation\nwhere the arguments can just be negated, but if it's useful to have a\n`shear` function, we might want an inverse argument there. (Any function\nlike `rotate` should have a corresponding function that creates the\ntransform, and then the user can compose the transforms in whatever order\nthey want.)\n\nOn Jun 18, 2017 12:01 AM, \"3rd3\" <notifications@github.com> wrote:\n\nI've run into numerical instabilities inverting transformation matrices\nbefore, though for data augmentation it should suffice. Usually one can\nconstruct the same matrices again using their inverse primitive affine\ntransformations (shear, rotation etc.). Perhaps a function would be helpful\nthat either constructs the mapping or the inverse like this\ntf.image.affine_transform(shear_x, shear_y, rotation, scale, inverse=False).\nNot entirely sure how useful that is. Just an idea.\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\n<https://github.com/tensorflow/tensorflow/issues/10737#issuecomment-309242360>,\nor mute the thread\n<https://github.com/notifications/unsubscribe-auth/ABU8HNQgeVT67blgpRMEgdEcCXgJRpCuks5sFEpOgaJpZM4N7fsW>\n.\n"}