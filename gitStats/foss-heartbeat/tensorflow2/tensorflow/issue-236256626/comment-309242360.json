{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/309242360", "html_url": "https://github.com/tensorflow/tensorflow/issues/10737#issuecomment-309242360", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10737", "id": 309242360, "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTI0MjM2MA==", "user": {"login": "3rd3", "id": 2372391, "node_id": "MDQ6VXNlcjIzNzIzOTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/2372391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/3rd3", "html_url": "https://github.com/3rd3", "followers_url": "https://api.github.com/users/3rd3/followers", "following_url": "https://api.github.com/users/3rd3/following{/other_user}", "gists_url": "https://api.github.com/users/3rd3/gists{/gist_id}", "starred_url": "https://api.github.com/users/3rd3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/3rd3/subscriptions", "organizations_url": "https://api.github.com/users/3rd3/orgs", "repos_url": "https://api.github.com/users/3rd3/repos", "events_url": "https://api.github.com/users/3rd3/events{/privacy}", "received_events_url": "https://api.github.com/users/3rd3/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-17T21:49:31Z", "updated_at": "2017-06-17T21:51:11Z", "author_association": "NONE", "body_html": "<p>I've run into numerical instabilities inverting transformation matrices before, though for data augmentation it should suffice. Usually, one can construct the inverses using the inverse primitive affine transformations (shear, rotation etc.) in reverse order to achieve better numerical stability. Perhaps a function would be helpful that either constructs the mapping or the inverse like this <code>tf.image.affine_transform(shear_x, shear_y, rotation, scale, translation_before, translation_after, inverse=False)</code>. Not entirely sure how useful that is. Just an idea.</p>", "body_text": "I've run into numerical instabilities inverting transformation matrices before, though for data augmentation it should suffice. Usually, one can construct the inverses using the inverse primitive affine transformations (shear, rotation etc.) in reverse order to achieve better numerical stability. Perhaps a function would be helpful that either constructs the mapping or the inverse like this tf.image.affine_transform(shear_x, shear_y, rotation, scale, translation_before, translation_after, inverse=False). Not entirely sure how useful that is. Just an idea.", "body": "I've run into numerical instabilities inverting transformation matrices before, though for data augmentation it should suffice. Usually, one can construct the inverses using the inverse primitive affine transformations (shear, rotation etc.) in reverse order to achieve better numerical stability. Perhaps a function would be helpful that either constructs the mapping or the inverse like this `tf.image.affine_transform(shear_x, shear_y, rotation, scale, translation_before, translation_after, inverse=False)`. Not entirely sure how useful that is. Just an idea."}