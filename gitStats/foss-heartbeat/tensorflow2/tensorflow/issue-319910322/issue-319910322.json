{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19058", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19058/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19058/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19058/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19058", "id": 319910322, "node_id": "MDU6SXNzdWUzMTk5MTAzMjI=", "number": 19058, "title": "CNN features feed to LSTM Tensorflow", "user": {"login": "prolaser", "id": 38209222, "node_id": "MDQ6VXNlcjM4MjA5MjIy", "avatar_url": "https://avatars1.githubusercontent.com/u/38209222?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prolaser", "html_url": "https://github.com/prolaser", "followers_url": "https://api.github.com/users/prolaser/followers", "following_url": "https://api.github.com/users/prolaser/following{/other_user}", "gists_url": "https://api.github.com/users/prolaser/gists{/gist_id}", "starred_url": "https://api.github.com/users/prolaser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prolaser/subscriptions", "organizations_url": "https://api.github.com/users/prolaser/orgs", "repos_url": "https://api.github.com/users/prolaser/repos", "events_url": "https://api.github.com/users/prolaser/events{/privacy}", "received_events_url": "https://api.github.com/users/prolaser/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "angersson", "id": 32465472, "node_id": "MDQ6VXNlcjMyNDY1NDcy", "avatar_url": "https://avatars2.githubusercontent.com/u/32465472?v=4", "gravatar_id": "", "url": "https://api.github.com/users/angersson", "html_url": "https://github.com/angersson", "followers_url": "https://api.github.com/users/angersson/followers", "following_url": "https://api.github.com/users/angersson/following{/other_user}", "gists_url": "https://api.github.com/users/angersson/gists{/gist_id}", "starred_url": "https://api.github.com/users/angersson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/angersson/subscriptions", "organizations_url": "https://api.github.com/users/angersson/orgs", "repos_url": "https://api.github.com/users/angersson/repos", "events_url": "https://api.github.com/users/angersson/events{/privacy}", "received_events_url": "https://api.github.com/users/angersson/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "angersson", "id": 32465472, "node_id": "MDQ6VXNlcjMyNDY1NDcy", "avatar_url": "https://avatars2.githubusercontent.com/u/32465472?v=4", "gravatar_id": "", "url": "https://api.github.com/users/angersson", "html_url": "https://github.com/angersson", "followers_url": "https://api.github.com/users/angersson/followers", "following_url": "https://api.github.com/users/angersson/following{/other_user}", "gists_url": "https://api.github.com/users/angersson/gists{/gist_id}", "starred_url": "https://api.github.com/users/angersson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/angersson/subscriptions", "organizations_url": "https://api.github.com/users/angersson/orgs", "repos_url": "https://api.github.com/users/angersson/repos", "events_url": "https://api.github.com/users/angersson/events{/privacy}", "received_events_url": "https://api.github.com/users/angersson/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-05-03T13:00:17Z", "updated_at": "2018-05-07T22:01:03Z", "closed_at": "2018-05-07T22:01:03Z", "author_association": "NONE", "body_html": "<p>Hello Guys<br>\nSo recently i am working on a project which i am supposed to take images as input to a CNN and extract the features and feed them to LSTM for training. I am using 2 Layer CNN for feature extraction and im taking the features form fully connected layer and trying to feed them to LSTM. Problem is when i want to feed the FC layer to LSTM as input i get error regarding to wrong dimension. my FC layer is a Tensor with (128,1024) dimension. I tried to reshape it like this tf.reshape(fc,[-1]) which gives me a tensor ok (131072, )<br>\ndimension and still wont work. Could anyone give me any ideas of how im suppose to feed the FC to LSTM?here i just write part of my code and teh error i get.</p>\n<h1>Convolution Layer with 32 filters and a kernel size of 5</h1>\n<pre><code>    conv1 = tf.layers.conv2d(x, 32, 5, activation=tf.nn.relu)\n    # Max Pooling (down-sampling) with strides of 2 and kernel size of 2\n    conv1 = tf.layers.max_pooling2d(conv1, 2, 2)\n\n    # Convolution Layer with 32 filters and a kernel size of 5\n    conv2 = tf.layers.conv2d(conv1, 64, 3, activation=tf.nn.relu)\n    # Max Pooling (down-sampling) with strides of 2 and kernel size of 2\n    conv2 = tf.layers.max_pooling2d(conv2, 2, 2)\n\n    # Flatten the data to a 1-D vector for the fully connected layer\n    fc1 = tf.contrib.layers.flatten(conv2)\n\n    # Fully connected layer (in contrib folder for now)\n    fc1 = tf.layers.dense(fc1, 1024)\n    # Apply Dropout (if is_training is False, dropout is not applied)\n    fc1 = tf.layers.dropout(fc1, rate=dropout, training=is_training)\n    s = tf.reshape(fc1, [1])\nrnn_cell = rnn.BasicLSTMCell(n_hidden, forget_bias=1.0)\noutputs, states = rnn.static_rnn(rnn_cell, s, dtype=tf.float32)\nreturn tf.matmul(outputs[-1], rnn_weights['out']) + rnn_biases['out']\nhere is the error:\n</code></pre>\n<p>ValueError: Cannot reshape a tensor with 131072 elements to shape [1] (1 elements) for 'ConvNet/Reshape' (op: 'Reshape') with input shapes: [128,1024], [1] and with input tensors computed as partial shapes: input[1] = [1].</p>", "body_text": "Hello Guys\nSo recently i am working on a project which i am supposed to take images as input to a CNN and extract the features and feed them to LSTM for training. I am using 2 Layer CNN for feature extraction and im taking the features form fully connected layer and trying to feed them to LSTM. Problem is when i want to feed the FC layer to LSTM as input i get error regarding to wrong dimension. my FC layer is a Tensor with (128,1024) dimension. I tried to reshape it like this tf.reshape(fc,[-1]) which gives me a tensor ok (131072, )\ndimension and still wont work. Could anyone give me any ideas of how im suppose to feed the FC to LSTM?here i just write part of my code and teh error i get.\nConvolution Layer with 32 filters and a kernel size of 5\n    conv1 = tf.layers.conv2d(x, 32, 5, activation=tf.nn.relu)\n    # Max Pooling (down-sampling) with strides of 2 and kernel size of 2\n    conv1 = tf.layers.max_pooling2d(conv1, 2, 2)\n\n    # Convolution Layer with 32 filters and a kernel size of 5\n    conv2 = tf.layers.conv2d(conv1, 64, 3, activation=tf.nn.relu)\n    # Max Pooling (down-sampling) with strides of 2 and kernel size of 2\n    conv2 = tf.layers.max_pooling2d(conv2, 2, 2)\n\n    # Flatten the data to a 1-D vector for the fully connected layer\n    fc1 = tf.contrib.layers.flatten(conv2)\n\n    # Fully connected layer (in contrib folder for now)\n    fc1 = tf.layers.dense(fc1, 1024)\n    # Apply Dropout (if is_training is False, dropout is not applied)\n    fc1 = tf.layers.dropout(fc1, rate=dropout, training=is_training)\n    s = tf.reshape(fc1, [1])\nrnn_cell = rnn.BasicLSTMCell(n_hidden, forget_bias=1.0)\noutputs, states = rnn.static_rnn(rnn_cell, s, dtype=tf.float32)\nreturn tf.matmul(outputs[-1], rnn_weights['out']) + rnn_biases['out']\nhere is the error:\n\nValueError: Cannot reshape a tensor with 131072 elements to shape [1] (1 elements) for 'ConvNet/Reshape' (op: 'Reshape') with input shapes: [128,1024], [1] and with input tensors computed as partial shapes: input[1] = [1].", "body": "Hello Guys\r\nSo recently i am working on a project which i am supposed to take images as input to a CNN and extract the features and feed them to LSTM for training. I am using 2 Layer CNN for feature extraction and im taking the features form fully connected layer and trying to feed them to LSTM. Problem is when i want to feed the FC layer to LSTM as input i get error regarding to wrong dimension. my FC layer is a Tensor with (128,1024) dimension. I tried to reshape it like this tf.reshape(fc,[-1]) which gives me a tensor ok (131072, )\r\ndimension and still wont work. Could anyone give me any ideas of how im suppose to feed the FC to LSTM?here i just write part of my code and teh error i get.\r\n# Convolution Layer with 32 filters and a kernel size of 5\r\n        conv1 = tf.layers.conv2d(x, 32, 5, activation=tf.nn.relu)\r\n        # Max Pooling (down-sampling) with strides of 2 and kernel size of 2\r\n        conv1 = tf.layers.max_pooling2d(conv1, 2, 2)\r\n\r\n        # Convolution Layer with 32 filters and a kernel size of 5\r\n        conv2 = tf.layers.conv2d(conv1, 64, 3, activation=tf.nn.relu)\r\n        # Max Pooling (down-sampling) with strides of 2 and kernel size of 2\r\n        conv2 = tf.layers.max_pooling2d(conv2, 2, 2)\r\n\r\n        # Flatten the data to a 1-D vector for the fully connected layer\r\n        fc1 = tf.contrib.layers.flatten(conv2)\r\n\r\n        # Fully connected layer (in contrib folder for now)\r\n        fc1 = tf.layers.dense(fc1, 1024)\r\n        # Apply Dropout (if is_training is False, dropout is not applied)\r\n        fc1 = tf.layers.dropout(fc1, rate=dropout, training=is_training)\r\n        s = tf.reshape(fc1, [1])\r\n\trnn_cell = rnn.BasicLSTMCell(n_hidden, forget_bias=1.0)\r\n\toutputs, states = rnn.static_rnn(rnn_cell, s, dtype=tf.float32)\r\n\treturn tf.matmul(outputs[-1], rnn_weights['out']) + rnn_biases['out']\r\n\there is the error:\r\nValueError: Cannot reshape a tensor with 131072 elements to shape [1] (1 elements) for 'ConvNet/Reshape' (op: 'Reshape') with input shapes: [128,1024], [1] and with input tensors computed as partial shapes: input[1] = [1].\r\n"}