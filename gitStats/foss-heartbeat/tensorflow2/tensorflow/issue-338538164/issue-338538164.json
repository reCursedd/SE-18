{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20565", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20565/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20565/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20565/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20565", "id": 338538164, "node_id": "MDU6SXNzdWUzMzg1MzgxNjQ=", "number": 20565, "title": "while_loop on GPU doesn't iterate", "user": {"login": "sjperkins", "id": 3530212, "node_id": "MDQ6VXNlcjM1MzAyMTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3530212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjperkins", "html_url": "https://github.com/sjperkins", "followers_url": "https://api.github.com/users/sjperkins/followers", "following_url": "https://api.github.com/users/sjperkins/following{/other_user}", "gists_url": "https://api.github.com/users/sjperkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjperkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjperkins/subscriptions", "organizations_url": "https://api.github.com/users/sjperkins/orgs", "repos_url": "https://api.github.com/users/sjperkins/repos", "events_url": "https://api.github.com/users/sjperkins/events{/privacy}", "received_events_url": "https://api.github.com/users/sjperkins/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "open", "locked": false, "assignee": {"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-07-05T11:38:41Z", "updated_at": "2018-11-20T13:28:55Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<p>Please go to Stack Overflow for help and support:</p>\n<p><a href=\"https://stackoverflow.com/questions/tagged/tensorflow\" rel=\"nofollow\">https://stackoverflow.com/questions/tagged/tensorflow</a></p>\n<p>If you open a GitHub issue, here is our policy:</p>\n<ol>\n<li>It must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).</li>\n<li>The form below must be filled out.</li>\n<li>It shouldn't be a TensorBoard issue. Those go <a href=\"https://github.com/tensorflow/tensorboard/issues\">here</a>.</li>\n</ol>\n<p><strong>Here's why we have that policy</strong>: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.</p>\n<hr>\n<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:</li>\n</ul>\n<p>no</p>\n<ul>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:</li>\n</ul>\n<p>\"16.04.4 LTS (Xenial Xerus)</p>\n<ul>\n<li><strong>TensorFlow installed from (source or binary)</strong>:</li>\n</ul>\n<p>binary</p>\n<ul>\n<li><strong>TensorFlow version (use command below)</strong>:</li>\n</ul>\n<p>tensorflow-gpu binary</p>\n<p>tf.VERSION = 1.9.0-rc2<br>\ntf.GIT_VERSION = v1.9.0-rc1-48-ge3f2b5903c<br>\ntf.COMPILER_VERSION = v1.9.0-rc1-48-ge3f2b5903c</p>\n<ul>\n<li><strong>Python version</strong>:</li>\n</ul>\n<p>Python 2.7.12</p>\n<ul>\n<li><strong>Bazel version (if compiling from source)</strong>:</li>\n</ul>\n<p>N/A</p>\n<ul>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:</li>\n</ul>\n<p>N/A</p>\n<ul>\n<li><strong>CUDA/cuDNN version</strong>:</li>\n</ul>\n<p>CUDA 8.0<br>\ncuDNN 6.0</p>\n<ul>\n<li><strong>GPU model and memory</strong>:</li>\n</ul>\n<p>GeForce GTX 960M 4GB RAM<br>\nNVIDIA Driver Version: 384.130</p>\n<ul>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">from</span> <span class=\"pl-c1\">__future__</span> <span class=\"pl-k\">import</span> print_function\n\n<span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\n<span class=\"pl-k\">with</span> tf.Graph().as_default() <span class=\"pl-k\">as</span> graph:\n    <span class=\"pl-k\">with</span> tf.device(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>/gpu:0<span class=\"pl-pds\">'</span></span>):\n        N <span class=\"pl-k\">=</span> tf.constant(<span class=\"pl-c1\">10</span>, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.int64)\n\n        <span class=\"pl-k\">def</span> <span class=\"pl-en\">cond</span>(<span class=\"pl-smi\">i</span>, <span class=\"pl-smi\">s</span>):\n            <span class=\"pl-k\">return</span> tf.less(i, N)\n\n        <span class=\"pl-k\">def</span> <span class=\"pl-en\">body</span>(<span class=\"pl-smi\">i</span>, <span class=\"pl-smi\">s</span>):\n            n <span class=\"pl-k\">=</span> (i<span class=\"pl-k\">+</span><span class=\"pl-c1\">1</span>)<span class=\"pl-k\">*</span><span class=\"pl-c1\">2</span>\n            <span class=\"pl-k\">return</span> i<span class=\"pl-k\">+</span><span class=\"pl-c1\">1</span>, n\n\n        loop_vars <span class=\"pl-k\">=</span> [tf.constant(<span class=\"pl-c1\">0</span>, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.int64)]<span class=\"pl-k\">*</span><span class=\"pl-c1\">2</span>\n        loop <span class=\"pl-k\">=</span> tf.while_loop(cond, body, loop_vars)\n\n    init <span class=\"pl-k\">=</span> tf.global_variables_initializer()\n\n    graph.finalize()\n\nconfig <span class=\"pl-k\">=</span> tf.ConfigProto(<span class=\"pl-v\">log_device_placement</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>)\n\n<span class=\"pl-k\">with</span> tf.Session(<span class=\"pl-v\">graph</span><span class=\"pl-k\">=</span>graph, <span class=\"pl-v\">config</span><span class=\"pl-k\">=</span>config) <span class=\"pl-k\">as</span> S:\n    S.run(init)\n\n    <span class=\"pl-c1\">print</span>(S.run(loop))\n</pre></div>\n<h3>Describe the problem</h3>\n<p>When the above script is run, it produces <code>(0,0)</code> instead of the expected <code>(10,20)</code>.</p>\n<p>If one changes the device to <code>/cpu:0</code> the expected result is produced.</p>\n<p>I've tested that the GPU works with the following code:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\n<span class=\"pl-k\">with</span> tf.device(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/gpu:0<span class=\"pl-pds\">\"</span></span>):\n    A <span class=\"pl-k\">=</span> tf.ones([<span class=\"pl-c1\">100</span>,<span class=\"pl-c1\">100</span>])\n    B <span class=\"pl-k\">=</span> A<span class=\"pl-k\">*</span><span class=\"pl-c1\">2</span>\n\ninit <span class=\"pl-k\">=</span> tf.global_variables_initializer()\n\n<span class=\"pl-k\">with</span> tf.Session(<span class=\"pl-v\">config</span><span class=\"pl-k\">=</span>tf.ConfigProto(<span class=\"pl-v\">log_device_placement</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>)) <span class=\"pl-k\">as</span> S:\n    S.run(init)\n\n    result <span class=\"pl-k\">=</span> S.run(B)\n    <span class=\"pl-c1\">print</span>(result.shape, result)</pre></div>\n<h3>Source code / logs</h3>\n<p>N/A</p>", "body_text": "Please go to Stack Overflow for help and support:\nhttps://stackoverflow.com/questions/tagged/tensorflow\nIf you open a GitHub issue, here is our policy:\n\nIt must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).\nThe form below must be filled out.\nIt shouldn't be a TensorBoard issue. Those go here.\n\nHere's why we have that policy: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\n\nSystem information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\n\nno\n\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\n\n\"16.04.4 LTS (Xenial Xerus)\n\nTensorFlow installed from (source or binary):\n\nbinary\n\nTensorFlow version (use command below):\n\ntensorflow-gpu binary\ntf.VERSION = 1.9.0-rc2\ntf.GIT_VERSION = v1.9.0-rc1-48-ge3f2b5903c\ntf.COMPILER_VERSION = v1.9.0-rc1-48-ge3f2b5903c\n\nPython version:\n\nPython 2.7.12\n\nBazel version (if compiling from source):\n\nN/A\n\nGCC/Compiler version (if compiling from source):\n\nN/A\n\nCUDA/cuDNN version:\n\nCUDA 8.0\ncuDNN 6.0\n\nGPU model and memory:\n\nGeForce GTX 960M 4GB RAM\nNVIDIA Driver Version: 384.130\n\nExact command to reproduce:\n\nfrom __future__ import print_function\n\nimport tensorflow as tf\n\nwith tf.Graph().as_default() as graph:\n    with tf.device('/gpu:0'):\n        N = tf.constant(10, dtype=tf.int64)\n\n        def cond(i, s):\n            return tf.less(i, N)\n\n        def body(i, s):\n            n = (i+1)*2\n            return i+1, n\n\n        loop_vars = [tf.constant(0, dtype=tf.int64)]*2\n        loop = tf.while_loop(cond, body, loop_vars)\n\n    init = tf.global_variables_initializer()\n\n    graph.finalize()\n\nconfig = tf.ConfigProto(log_device_placement=True)\n\nwith tf.Session(graph=graph, config=config) as S:\n    S.run(init)\n\n    print(S.run(loop))\n\nDescribe the problem\nWhen the above script is run, it produces (0,0) instead of the expected (10,20).\nIf one changes the device to /cpu:0 the expected result is produced.\nI've tested that the GPU works with the following code:\nimport tensorflow as tf\n\nwith tf.device(\"/gpu:0\"):\n    A = tf.ones([100,100])\n    B = A*2\n\ninit = tf.global_variables_initializer()\n\nwith tf.Session(config=tf.ConfigProto(log_device_placement=True)) as S:\n    S.run(init)\n\n    result = S.run(B)\n    print(result.shape, result)\nSource code / logs\nN/A", "body": "Please go to Stack Overflow for help and support:\r\n\r\nhttps://stackoverflow.com/questions/tagged/tensorflow\r\n\r\nIf you open a GitHub issue, here is our policy:\r\n\r\n1. It must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).\r\n2. The form below must be filled out.\r\n3. It shouldn't be a TensorBoard issue. Those go [here](https://github.com/tensorflow/tensorboard/issues).\r\n\r\n**Here's why we have that policy**: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\n\r\nno\r\n\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\n\r\n\"16.04.4 LTS (Xenial Xerus)\r\n\r\n- **TensorFlow installed from (source or binary)**:\r\n\r\nbinary\r\n\r\n- **TensorFlow version (use command below)**:\r\n\r\ntensorflow-gpu binary\r\n\r\ntf.VERSION = 1.9.0-rc2\r\ntf.GIT_VERSION = v1.9.0-rc1-48-ge3f2b5903c\r\ntf.COMPILER_VERSION = v1.9.0-rc1-48-ge3f2b5903c\r\n\r\n- **Python version**: \r\n\r\nPython 2.7.12\r\n\r\n\r\n- **Bazel version (if compiling from source)**:\r\n\r\nN/A\r\n\r\n- **GCC/Compiler version (if compiling from source)**:\r\n\r\nN/A\r\n\r\n- **CUDA/cuDNN version**:\r\n\r\nCUDA 8.0\r\ncuDNN 6.0\r\n\r\n- **GPU model and memory**:\r\n\r\nGeForce GTX 960M 4GB RAM\r\nNVIDIA Driver Version: 384.130\r\n\r\n- **Exact command to reproduce**:\r\n\r\n```python\r\nfrom __future__ import print_function\r\n\r\nimport tensorflow as tf\r\n\r\nwith tf.Graph().as_default() as graph:\r\n    with tf.device('/gpu:0'):\r\n        N = tf.constant(10, dtype=tf.int64)\r\n\r\n        def cond(i, s):\r\n            return tf.less(i, N)\r\n\r\n        def body(i, s):\r\n            n = (i+1)*2\r\n            return i+1, n\r\n\r\n        loop_vars = [tf.constant(0, dtype=tf.int64)]*2\r\n        loop = tf.while_loop(cond, body, loop_vars)\r\n\r\n    init = tf.global_variables_initializer()\r\n\r\n    graph.finalize()\r\n\r\nconfig = tf.ConfigProto(log_device_placement=True)\r\n\r\nwith tf.Session(graph=graph, config=config) as S:\r\n    S.run(init)\r\n\r\n    print(S.run(loop))\r\n\r\n```\r\n\r\n### Describe the problem\r\n\r\nWhen the above script is run, it produces `(0,0)` instead of the expected `(10,20)`.\r\n\r\nIf one changes the device to `/cpu:0` the expected result is produced.\r\n\r\nI've tested that the GPU works with the following code:\r\n\r\n```python\r\nimport tensorflow as tf\r\n\r\nwith tf.device(\"/gpu:0\"):\r\n    A = tf.ones([100,100])\r\n    B = A*2\r\n\r\ninit = tf.global_variables_initializer()\r\n\r\nwith tf.Session(config=tf.ConfigProto(log_device_placement=True)) as S:\r\n    S.run(init)\r\n\r\n    result = S.run(B)\r\n    print(result.shape, result)\r\n```\r\n\r\n### Source code / logs\r\n\r\nN/A"}