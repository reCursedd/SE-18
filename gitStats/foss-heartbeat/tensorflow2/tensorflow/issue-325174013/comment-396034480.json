{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/396034480", "html_url": "https://github.com/tensorflow/tensorflow/issues/19455#issuecomment-396034480", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19455", "id": 396034480, "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjAzNDQ4MA==", "user": {"login": "alenashilina", "id": 18195604, "node_id": "MDQ6VXNlcjE4MTk1NjA0", "avatar_url": "https://avatars1.githubusercontent.com/u/18195604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alenashilina", "html_url": "https://github.com/alenashilina", "followers_url": "https://api.github.com/users/alenashilina/followers", "following_url": "https://api.github.com/users/alenashilina/following{/other_user}", "gists_url": "https://api.github.com/users/alenashilina/gists{/gist_id}", "starred_url": "https://api.github.com/users/alenashilina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alenashilina/subscriptions", "organizations_url": "https://api.github.com/users/alenashilina/orgs", "repos_url": "https://api.github.com/users/alenashilina/repos", "events_url": "https://api.github.com/users/alenashilina/events{/privacy}", "received_events_url": "https://api.github.com/users/alenashilina/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-10T09:28:15Z", "updated_at": "2018-06-10T10:55:15Z", "author_association": "NONE", "body_html": "<p>Adding <code>os.environ['TF_ENABLE_WINOGRAD_NONFUSED'] = '1'</code> didn't help anyhow.</p>\n<p>OS Platform and Distribution: Windows 10 64bit<br>\nTensorFlow installed binary from <a href=\"https://pypi.org/project/tensorflow-gpu/#files\" rel=\"nofollow\">https://pypi.org/project/tensorflow-gpu/#files</a><br>\nTensorFlow version: 1.8.0  (I updated it and tried again. Still having a problem)<br>\nPython Version: 3.6.5<br>\nBazel version N/A<br>\nIDE : Spyder 3.2.8<br>\nCUDA version: v9.0<br>\nCuDNN version: v7.0.5 for CUDA 9.0<br>\nGPU model and memory: NVIDIA GeForce GTX 960M 4GB<br>\nRAM: 16GB<br>\nNVIDIA drivers: 398.11</p>\n<p>Basically the error appears when I am trying to fit the CNN into the dataset (sometimes it fits fine in different codes with CNN. Idk why. But in 95% cases it doesn't.).<br>\nThere are many different codes I am trying to run which are failing. This one is the shortest:<br>\n`<br>\n\"\"\"Importing libriaries\"\"\"<br>\nfrom future import print_function<br>\nimport keras<br>\nfrom keras.models import Sequential<br>\nfrom keras.layers import Dense, Dropout, Flatten<br>\nfrom keras.layers import Conv2D, MaxPooling2D<br>\nimport matplotlib.pyplot as plt<br>\nimport os</p>\n<p>from sklearn.datasets import fetch_olivetti_faces<br>\nfrom sklearn.cross_validation import train_test_split</p>\n<p>os.environ['TF_ENABLE_WINOGRAD_NONFUSED'] = '1'</p>\n<p>batch_size = 128<br>\nnum_classes = 40<br>\nepochs = 250</p>\n<p>\"\"\" input image dimensions\"\"\"<br>\nimg_rows, img_cols = 64, 64</p>\n<p>\"\"\"Importing Olivetti dataset and splitting it into train and test sets.\"\"\"<br>\ndata = fetch_olivetti_faces(shuffle=True)<br>\nX = data.images<br>\ny = data.target<br>\nx_train, x_test, y_train, y_test = train_test_split(X, y, test_size = 0.25, random_state = 0)</p>\n<p>x_train = x_train.reshape(x_train.shape[0], img_rows, img_cols, 1)<br>\nx_test = x_test.reshape(x_test.shape[0], img_rows, img_cols, 1)<br>\ninput_shape = (img_rows, img_cols, 1)</p>\n<p>\"\"\"Reshaping our data, so it would be possible to fit a CNN to it\"\"\"<br>\nprint('x_train shape:', x_train.shape)<br>\nprint(x_train.shape[0], 'train samples')<br>\nprint(x_test.shape[0], 'test samples')</p>\n<p>\"\"\"Converting class vectors to binary class matrices\"\"\"<br>\ny_train = keras.utils.to_categorical(y_train, num_classes)<br>\ny_test = keras.utils.to_categorical(y_test, num_classes)</p>\n<p>\"\"\"Network\"\"\"<br>\nmodel = Sequential()<br>\nmodel.add(Conv2D(32, kernel_size=(3, 3),<br>\nactivation='relu',<br>\ninput_shape=input_shape))<br>\nmodel.add(Conv2D(32, (3, 3), activation='relu'))<br>\nmodel.add(MaxPooling2D(pool_size=(2, 2)))<br>\nmodel.add(Dropout(0.25))<br>\nmodel.add(Flatten())<br>\nmodel.add(Dense(128, activation='relu'))<br>\nmodel.add(Dropout(0.5))<br>\nmodel.add(Dense(num_classes, activation='softmax'))</p>\n<p>model.compile(loss=keras.losses.categorical_crossentropy,<br>\noptimizer=keras.optimizers.Adadelta(),<br>\nmetrics=['accuracy'])</p>\n<p>\"\"\"Fitting CNN to our data and getting results\"\"\"<br>\nhistory = model.fit(x_train, y_train,<br>\nbatch_size=batch_size,<br>\nepochs=epochs,<br>\nverbose=1,<br>\nvalidation_data=(x_test, y_test))<br>\nscore = model.evaluate(x_test, y_test, batch_size=batch_size, verbose=1)<br>\n`</p>", "body_text": "Adding os.environ['TF_ENABLE_WINOGRAD_NONFUSED'] = '1' didn't help anyhow.\nOS Platform and Distribution: Windows 10 64bit\nTensorFlow installed binary from https://pypi.org/project/tensorflow-gpu/#files\nTensorFlow version: 1.8.0  (I updated it and tried again. Still having a problem)\nPython Version: 3.6.5\nBazel version N/A\nIDE : Spyder 3.2.8\nCUDA version: v9.0\nCuDNN version: v7.0.5 for CUDA 9.0\nGPU model and memory: NVIDIA GeForce GTX 960M 4GB\nRAM: 16GB\nNVIDIA drivers: 398.11\nBasically the error appears when I am trying to fit the CNN into the dataset (sometimes it fits fine in different codes with CNN. Idk why. But in 95% cases it doesn't.).\nThere are many different codes I am trying to run which are failing. This one is the shortest:\n`\n\"\"\"Importing libriaries\"\"\"\nfrom future import print_function\nimport keras\nfrom keras.models import Sequential\nfrom keras.layers import Dense, Dropout, Flatten\nfrom keras.layers import Conv2D, MaxPooling2D\nimport matplotlib.pyplot as plt\nimport os\nfrom sklearn.datasets import fetch_olivetti_faces\nfrom sklearn.cross_validation import train_test_split\nos.environ['TF_ENABLE_WINOGRAD_NONFUSED'] = '1'\nbatch_size = 128\nnum_classes = 40\nepochs = 250\n\"\"\" input image dimensions\"\"\"\nimg_rows, img_cols = 64, 64\n\"\"\"Importing Olivetti dataset and splitting it into train and test sets.\"\"\"\ndata = fetch_olivetti_faces(shuffle=True)\nX = data.images\ny = data.target\nx_train, x_test, y_train, y_test = train_test_split(X, y, test_size = 0.25, random_state = 0)\nx_train = x_train.reshape(x_train.shape[0], img_rows, img_cols, 1)\nx_test = x_test.reshape(x_test.shape[0], img_rows, img_cols, 1)\ninput_shape = (img_rows, img_cols, 1)\n\"\"\"Reshaping our data, so it would be possible to fit a CNN to it\"\"\"\nprint('x_train shape:', x_train.shape)\nprint(x_train.shape[0], 'train samples')\nprint(x_test.shape[0], 'test samples')\n\"\"\"Converting class vectors to binary class matrices\"\"\"\ny_train = keras.utils.to_categorical(y_train, num_classes)\ny_test = keras.utils.to_categorical(y_test, num_classes)\n\"\"\"Network\"\"\"\nmodel = Sequential()\nmodel.add(Conv2D(32, kernel_size=(3, 3),\nactivation='relu',\ninput_shape=input_shape))\nmodel.add(Conv2D(32, (3, 3), activation='relu'))\nmodel.add(MaxPooling2D(pool_size=(2, 2)))\nmodel.add(Dropout(0.25))\nmodel.add(Flatten())\nmodel.add(Dense(128, activation='relu'))\nmodel.add(Dropout(0.5))\nmodel.add(Dense(num_classes, activation='softmax'))\nmodel.compile(loss=keras.losses.categorical_crossentropy,\noptimizer=keras.optimizers.Adadelta(),\nmetrics=['accuracy'])\n\"\"\"Fitting CNN to our data and getting results\"\"\"\nhistory = model.fit(x_train, y_train,\nbatch_size=batch_size,\nepochs=epochs,\nverbose=1,\nvalidation_data=(x_test, y_test))\nscore = model.evaluate(x_test, y_test, batch_size=batch_size, verbose=1)\n`", "body": "Adding `os.environ['TF_ENABLE_WINOGRAD_NONFUSED'] = '1'` didn't help anyhow.\r\n\r\nOS Platform and Distribution: Windows 10 64bit\r\nTensorFlow installed binary from https://pypi.org/project/tensorflow-gpu/#files\r\nTensorFlow version: 1.8.0  (I updated it and tried again. Still having a problem)\r\nPython Version: 3.6.5\r\nBazel version N/A\r\nIDE : Spyder 3.2.8\r\nCUDA version: v9.0\r\nCuDNN version: v7.0.5 for CUDA 9.0\r\nGPU model and memory: NVIDIA GeForce GTX 960M 4GB\r\nRAM: 16GB\r\nNVIDIA drivers: 398.11\r\n\r\nBasically the error appears when I am trying to fit the CNN into the dataset (sometimes it fits fine in different codes with CNN. Idk why. But in 95% cases it doesn't.).\r\nThere are many different codes I am trying to run which are failing. This one is the shortest:\r\n`\r\n\"\"\"Importing libriaries\"\"\"\r\nfrom future import print_function\r\nimport keras\r\nfrom keras.models import Sequential\r\nfrom keras.layers import Dense, Dropout, Flatten\r\nfrom keras.layers import Conv2D, MaxPooling2D\r\nimport matplotlib.pyplot as plt\r\nimport os\r\n\r\nfrom sklearn.datasets import fetch_olivetti_faces\r\nfrom sklearn.cross_validation import train_test_split\r\n\r\nos.environ['TF_ENABLE_WINOGRAD_NONFUSED'] = '1'\r\n\r\nbatch_size = 128\r\nnum_classes = 40\r\nepochs = 250\r\n\r\n\"\"\" input image dimensions\"\"\"\r\nimg_rows, img_cols = 64, 64\r\n\r\n\"\"\"Importing Olivetti dataset and splitting it into train and test sets.\"\"\"\r\ndata = fetch_olivetti_faces(shuffle=True)\r\nX = data.images\r\ny = data.target\r\nx_train, x_test, y_train, y_test = train_test_split(X, y, test_size = 0.25, random_state = 0)\r\n\r\nx_train = x_train.reshape(x_train.shape[0], img_rows, img_cols, 1)\r\nx_test = x_test.reshape(x_test.shape[0], img_rows, img_cols, 1)\r\ninput_shape = (img_rows, img_cols, 1)\r\n\r\n\"\"\"Reshaping our data, so it would be possible to fit a CNN to it\"\"\"\r\nprint('x_train shape:', x_train.shape)\r\nprint(x_train.shape[0], 'train samples')\r\nprint(x_test.shape[0], 'test samples')\r\n\r\n\"\"\"Converting class vectors to binary class matrices\"\"\"\r\ny_train = keras.utils.to_categorical(y_train, num_classes)\r\ny_test = keras.utils.to_categorical(y_test, num_classes)\r\n\r\n\"\"\"Network\"\"\"\r\nmodel = Sequential()\r\nmodel.add(Conv2D(32, kernel_size=(3, 3),\r\nactivation='relu',\r\ninput_shape=input_shape))\r\nmodel.add(Conv2D(32, (3, 3), activation='relu'))\r\nmodel.add(MaxPooling2D(pool_size=(2, 2)))\r\nmodel.add(Dropout(0.25))\r\nmodel.add(Flatten())\r\nmodel.add(Dense(128, activation='relu'))\r\nmodel.add(Dropout(0.5))\r\nmodel.add(Dense(num_classes, activation='softmax'))\r\n\r\nmodel.compile(loss=keras.losses.categorical_crossentropy,\r\noptimizer=keras.optimizers.Adadelta(),\r\nmetrics=['accuracy'])\r\n\r\n\"\"\"Fitting CNN to our data and getting results\"\"\"\r\nhistory = model.fit(x_train, y_train,\r\nbatch_size=batch_size,\r\nepochs=epochs,\r\nverbose=1,\r\nvalidation_data=(x_test, y_test))\r\nscore = model.evaluate(x_test, y_test, batch_size=batch_size, verbose=1)\r\n`\r\n\r\n"}