{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13283", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13283/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13283/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13283/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/13283", "id": 260127580, "node_id": "MDU6SXNzdWUyNjAxMjc1ODA=", "number": 13283, "title": "'Cannot interpret feed_dict key as Tensor: Can not convert a int into a Tensor' when using probabilities.eval?", "user": {"login": "vishishttiwari", "id": 31442258, "node_id": "MDQ6VXNlcjMxNDQyMjU4", "avatar_url": "https://avatars0.githubusercontent.com/u/31442258?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vishishttiwari", "html_url": "https://github.com/vishishttiwari", "followers_url": "https://api.github.com/users/vishishttiwari/followers", "following_url": "https://api.github.com/users/vishishttiwari/following{/other_user}", "gists_url": "https://api.github.com/users/vishishttiwari/gists{/gist_id}", "starred_url": "https://api.github.com/users/vishishttiwari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vishishttiwari/subscriptions", "organizations_url": "https://api.github.com/users/vishishttiwari/orgs", "repos_url": "https://api.github.com/users/vishishttiwari/repos", "events_url": "https://api.github.com/users/vishishttiwari/events{/privacy}", "received_events_url": "https://api.github.com/users/vishishttiwari/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-25T00:26:07Z", "updated_at": "2017-09-27T03:39:26Z", "closed_at": "2017-09-27T03:39:26Z", "author_association": "NONE", "body_html": "<p>I want to use tensor-flow to print all the probabilities for my own image. The following code works well for any mnist image that i get from online but does not work with my own images. Here is the whole code.</p>\n<pre><code>from PIL import Image\nimport random\nfrom tensorflow.examples.tutorials.mnist import input_data\nimport tensorflow as tf\nimport numpy as np\nimport scipy.ndimage\nfrom PIL import Image\n\n\nnp.set_printoptions(threshold='nan')\n\nmnist = input_data.read_data_sets(\"MNIST_data/\", one_hot=True)\n\n\nx = tf.placeholder(tf.float32, [None, 784])\nW = tf.Variable(tf.zeros([784, 10]))\nb = tf.Variable(tf.zeros([10]))\n\ny = tf.nn.softmax(tf.matmul(x, W) + b)\ny_ = tf.placeholder(tf.float32, [None, 10])\n\ncross_entropy = tf.reduce_mean(-tf.reduce_sum(y_ * tf.log(y), reduction_indices=[1]))\n\ntrain_step = tf.train.GradientDescentOptimizer(0.5).minimize(cross_entropy)\n\ninit = tf.initialize_all_variables()\n\nsess = tf.Session()\nsess.run(init)\n\nfor i in range(1000):\n    batch_xs, batch_ys = mnist.train.next_batch(1000)\n    sess.run(train_step, feed_dict= {x: batch_xs, y_: batch_ys})\n\nprint (\"done with training\")\nprint (\"\\n\\n\\n\")\n\n#Weights = (W.eval())\n##print Weights\n#\n#Bias = (b.eval())\n##print Bias\n\nprobabilities  = y\n \n#digit = 80\n#batch_xs = np.reshape(mnist.test.images[digit], (1, 784))\n##print isinstance(mnist.test.images[digit], tuple)\n#print batch_xs\n\nimg = Image.open('mnist_7_367.jpg').convert('L')  # convert image to 8-bit grayscale\ndata = list(img.getdata()) # convert image data to a list of integers\nnewList = [float(x) / 255.0 for x in data]\nnewList1 = np.asarray(newList)\nbatch_xs = np.reshape(newList1, (1, 784))\nbatch_xs[batch_xs &lt; 0.1] = 0\n#print isinstance(newList1, list)\nprint batch_xs\n\n\ncounter = 0\nfor x in probabilities.eval(feed_dict={x: batch_xs}, session = sess):\n    print ('[')\n    for y in x:\n        print (counter, '{:f}'.format(float(y)))\n        counter += 1\n    print (']')\n\nhello = np.reshape(batch_xs, (28, 28))  \n\n\nMatrix = np.array([])\n\nfor x in hello:\n    for y in x:\n        Matrix = np.append(Matrix, int(255 * y))    \n\n\nimageReal = np.reshape(Matrix, (28, 28))\n\nimg = Image.fromarray(imageReal)\nimg.show()\n\nsess.close()\n</code></pre>\n<p>The problem I am having is that</p>\n<pre><code>for x in probabilities.eval(feed_dict={x: batch_xs}, session = sess): \n</code></pre>\n<p>is producing the following error:</p>\n<pre><code>Cannot interpret feed_dict key as Tensor: Can not convert a int into a Tensor.\n</code></pre>", "body_text": "I want to use tensor-flow to print all the probabilities for my own image. The following code works well for any mnist image that i get from online but does not work with my own images. Here is the whole code.\nfrom PIL import Image\nimport random\nfrom tensorflow.examples.tutorials.mnist import input_data\nimport tensorflow as tf\nimport numpy as np\nimport scipy.ndimage\nfrom PIL import Image\n\n\nnp.set_printoptions(threshold='nan')\n\nmnist = input_data.read_data_sets(\"MNIST_data/\", one_hot=True)\n\n\nx = tf.placeholder(tf.float32, [None, 784])\nW = tf.Variable(tf.zeros([784, 10]))\nb = tf.Variable(tf.zeros([10]))\n\ny = tf.nn.softmax(tf.matmul(x, W) + b)\ny_ = tf.placeholder(tf.float32, [None, 10])\n\ncross_entropy = tf.reduce_mean(-tf.reduce_sum(y_ * tf.log(y), reduction_indices=[1]))\n\ntrain_step = tf.train.GradientDescentOptimizer(0.5).minimize(cross_entropy)\n\ninit = tf.initialize_all_variables()\n\nsess = tf.Session()\nsess.run(init)\n\nfor i in range(1000):\n    batch_xs, batch_ys = mnist.train.next_batch(1000)\n    sess.run(train_step, feed_dict= {x: batch_xs, y_: batch_ys})\n\nprint (\"done with training\")\nprint (\"\\n\\n\\n\")\n\n#Weights = (W.eval())\n##print Weights\n#\n#Bias = (b.eval())\n##print Bias\n\nprobabilities  = y\n \n#digit = 80\n#batch_xs = np.reshape(mnist.test.images[digit], (1, 784))\n##print isinstance(mnist.test.images[digit], tuple)\n#print batch_xs\n\nimg = Image.open('mnist_7_367.jpg').convert('L')  # convert image to 8-bit grayscale\ndata = list(img.getdata()) # convert image data to a list of integers\nnewList = [float(x) / 255.0 for x in data]\nnewList1 = np.asarray(newList)\nbatch_xs = np.reshape(newList1, (1, 784))\nbatch_xs[batch_xs < 0.1] = 0\n#print isinstance(newList1, list)\nprint batch_xs\n\n\ncounter = 0\nfor x in probabilities.eval(feed_dict={x: batch_xs}, session = sess):\n    print ('[')\n    for y in x:\n        print (counter, '{:f}'.format(float(y)))\n        counter += 1\n    print (']')\n\nhello = np.reshape(batch_xs, (28, 28))  \n\n\nMatrix = np.array([])\n\nfor x in hello:\n    for y in x:\n        Matrix = np.append(Matrix, int(255 * y))    \n\n\nimageReal = np.reshape(Matrix, (28, 28))\n\nimg = Image.fromarray(imageReal)\nimg.show()\n\nsess.close()\n\nThe problem I am having is that\nfor x in probabilities.eval(feed_dict={x: batch_xs}, session = sess): \n\nis producing the following error:\nCannot interpret feed_dict key as Tensor: Can not convert a int into a Tensor.", "body": "I want to use tensor-flow to print all the probabilities for my own image. The following code works well for any mnist image that i get from online but does not work with my own images. Here is the whole code.\r\n\r\n    from PIL import Image\r\n    import random\r\n    from tensorflow.examples.tutorials.mnist import input_data\r\n    import tensorflow as tf\r\n    import numpy as np\r\n    import scipy.ndimage\r\n    from PIL import Image\r\n    \r\n    \r\n    np.set_printoptions(threshold='nan')\r\n    \r\n    mnist = input_data.read_data_sets(\"MNIST_data/\", one_hot=True)\r\n    \r\n    \r\n    x = tf.placeholder(tf.float32, [None, 784])\r\n    W = tf.Variable(tf.zeros([784, 10]))\r\n    b = tf.Variable(tf.zeros([10]))\r\n    \r\n    y = tf.nn.softmax(tf.matmul(x, W) + b)\r\n    y_ = tf.placeholder(tf.float32, [None, 10])\r\n    \r\n    cross_entropy = tf.reduce_mean(-tf.reduce_sum(y_ * tf.log(y), reduction_indices=[1]))\r\n    \r\n    train_step = tf.train.GradientDescentOptimizer(0.5).minimize(cross_entropy)\r\n    \r\n    init = tf.initialize_all_variables()\r\n    \r\n    sess = tf.Session()\r\n    sess.run(init)\r\n    \r\n    for i in range(1000):\r\n        batch_xs, batch_ys = mnist.train.next_batch(1000)\r\n        sess.run(train_step, feed_dict= {x: batch_xs, y_: batch_ys})\r\n    \r\n    print (\"done with training\")\r\n    print (\"\\n\\n\\n\")\r\n    \r\n    #Weights = (W.eval())\r\n    ##print Weights\r\n    #\r\n    #Bias = (b.eval())\r\n    ##print Bias\r\n    \r\n    probabilities  = y\r\n     \r\n    #digit = 80\r\n    #batch_xs = np.reshape(mnist.test.images[digit], (1, 784))\r\n    ##print isinstance(mnist.test.images[digit], tuple)\r\n    #print batch_xs\r\n    \r\n    img = Image.open('mnist_7_367.jpg').convert('L')  # convert image to 8-bit grayscale\r\n    data = list(img.getdata()) # convert image data to a list of integers\r\n    newList = [float(x) / 255.0 for x in data]\r\n    newList1 = np.asarray(newList)\r\n    batch_xs = np.reshape(newList1, (1, 784))\r\n    batch_xs[batch_xs < 0.1] = 0\r\n    #print isinstance(newList1, list)\r\n    print batch_xs\r\n    \r\n    \r\n    counter = 0\r\n    for x in probabilities.eval(feed_dict={x: batch_xs}, session = sess):\r\n        print ('[')\r\n        for y in x:\r\n            print (counter, '{:f}'.format(float(y)))\r\n            counter += 1\r\n        print (']')\r\n    \r\n    hello = np.reshape(batch_xs, (28, 28))  \r\n    \r\n    \r\n    Matrix = np.array([])\r\n    \r\n    for x in hello:\r\n        for y in x:\r\n            Matrix = np.append(Matrix, int(255 * y))    \r\n    \r\n    \r\n    imageReal = np.reshape(Matrix, (28, 28))\r\n    \r\n    img = Image.fromarray(imageReal)\r\n    img.show()\r\n    \r\n    sess.close()\r\n\r\nThe problem I am having is that\r\n\r\n    for x in probabilities.eval(feed_dict={x: batch_xs}, session = sess): \r\n\r\nis producing the following error:\r\n\r\n    Cannot interpret feed_dict key as Tensor: Can not convert a int into a Tensor."}