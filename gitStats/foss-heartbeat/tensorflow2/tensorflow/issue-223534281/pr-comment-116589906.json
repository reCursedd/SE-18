{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/116589906", "pull_request_review_id": 38214114, "id": 116589906, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNjU4OTkwNg==", "diff_hunk": "@@ -0,0 +1,216 @@\n+#ifndef TENSORFLOW_KERNELS_PERIODICINTERSPERSE_OP_H_\n+#define TENSORFLOW_KERNELS_PERIODICINTERSPERSE_OP_H_\n+\n+#include <cmath>\n+#include <type_traits>\n+#include <vector>\n+#include \"tensorflow/core/lib/core/status.h\"\n+#include \"tensorflow/core/framework/op.h\"\n+#include \"tensorflow/core/framework/op_kernel.h\"\n+#include \"tensorflow/core/framework/shape_inference.h\"\n+#include \"tensorflow/core/framework/tensor_shape.h\"\n+\n+using namespace tensorflow;\n+using std::vector;\n+using std::decay;\n+\n+\n+template<class IndexVec_t, class Index_t>\n+Index_t compute_input_index(IndexVec_t &Y, const Index_t &i,\n+                            const IndexVec_t &X, const int &q,\n+                            const vector<int64> &g, const vector<int64> &G,\n+                            Index_t &result, vector<Index_t> &output_indices,\n+                            const typename decay<decltype(Y.size())>::type &rank)\n+{\n+  result = 0;\n+  output_indices.clear();\n+\n+  // un-rasterize the output index\n+  {\n+    auto last_reduced_i = i;\n+    for (auto r = rank - 1;; --r) {\n+      output_indices[r] = last_reduced_i % Y[r];\n+      last_reduced_i = (last_reduced_i - output_indices[r]) / Y[r];\n+      if (r == 0) break;\n+    }\n+  }\n+\n+  // rasterize the input index\n+  {\n+    Index_t last_index_factor = 1;\n+    for (auto r = rank - 1;; --r) {\n+      Index_t index = 0;\n+      if (r != q)\n+        index = output_indices[r]/g[r];\n+      else {\n+        for (int qi = 0; qi < rank; ++qi) {\n+          // if (qi == r) continue;\n+          if (qi == q) continue;\n+          index += G[qi]*(output_indices[qi] % g[qi]);\n+        }\n+        index *= Y[q];\n+        // index *= Y[r];\n+        index += output_indices[r];\n+      }\n+      result += last_index_factor*index;\n+      last_index_factor *= X[r];\n+      if (r == 0) break;\n+    }\n+  }\n+\n+  return result;\n+}\n+\n+\n+template<class T, class Vec_t>\n+void main_logic (OpKernelContext *context,\n+                 const Vec_t &desired_shape,\n+                 const Tensor &input_tensor)\n+{\n+  // NOTE input is a strided array (last index is fastest, C-ordered)\n+  auto input = input_tensor.flat<T>();\n+  const int rank = input_tensor.dims();\n+  const auto original_size = input.size();\n+  // NOTE original and target dimensions\n+  vector<int64> X(rank), Y(rank);\n+  int64 total_size = 1, new_sliced_size = 1;\n+  // NOTE factor by which X increases/decreases w.r.t. Y\n+  vector<float> f(rank);\n+  // NOTE helper arrays related to f\n+  vector<int64> g(rank), G(rank);\n+  // NOTE index of adjustable dimension\n+  int q;\n+  TensorShape output_shape;\n+\n+  // NOTE requires that the rank of the input tensor and length of the desired shape are equal\n+  OP_REQUIRES(context, rank == desired_shape.size(),\n+              errors::InvalidArgument(\"periodic_intersperse expects the rank of the input tensor, \",\n+              rank, \", to be the same as the length of the desired shape, \", desired_shape.size(), \".\"));\n+\n+  // NOTE from here on, the logic parallels notebook", "path": "tensorflow/contrib/periodic_intersperse/core/kernels/periodic_intersperse_op.h", "position": null, "original_position": 90, "commit_id": "a692d209ab86d5f3b22fdb46cab992b8fe4bccbd", "original_commit_id": "9410d6fe5e66fb7da763f3d3e3d9070bcb6926e6", "user": {"login": "suharshs", "id": 1450614, "node_id": "MDQ6VXNlcjE0NTA2MTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1450614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suharshs", "html_url": "https://github.com/suharshs", "followers_url": "https://api.github.com/users/suharshs/followers", "following_url": "https://api.github.com/users/suharshs/following{/other_user}", "gists_url": "https://api.github.com/users/suharshs/gists{/gist_id}", "starred_url": "https://api.github.com/users/suharshs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suharshs/subscriptions", "organizations_url": "https://api.github.com/users/suharshs/orgs", "repos_url": "https://api.github.com/users/suharshs/repos", "events_url": "https://api.github.com/users/suharshs/events{/privacy}", "received_events_url": "https://api.github.com/users/suharshs/received_events", "type": "User", "site_admin": false}, "body": "What is notebook?", "created_at": "2017-05-15T20:15:56Z", "updated_at": "2017-11-07T22:09:13Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/9376#discussion_r116589906", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/9376", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/116589906"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/9376#discussion_r116589906"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/9376"}}, "body_html": "<p>What is notebook?</p>", "body_text": "What is notebook?"}