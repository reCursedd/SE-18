{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/144895125", "pull_request_review_id": 69616158, "id": 144895125, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDg5NTEyNQ==", "diff_hunk": "@@ -0,0 +1,30 @@\n+# =============================================================================\n+# Copyright 2016 The TensorFlow Authors. All Rights Reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# =============================================================================\n+\n+\"\"\"Custom op used by periodic_resample.\"\"\"\n+from __future__ import absolute_import\n+from __future__ import division\n+from __future__ import print_function\n+\n+from tensorflow.contrib.periodic_resample.python.ops.periodic_resample_op import _periodic_resample_op\n+from tensorflow.python.util.all_util import remove_undocumented\n+\n+periodic_resample =\\\n+    _periodic_resample_op.periodic_resample", "path": "tensorflow/contrib/periodic_resample/__init__.py", "position": null, "original_position": 26, "commit_id": "a692d209ab86d5f3b22fdb46cab992b8fe4bccbd", "original_commit_id": "bfa29c3a63e746e7f622d22ee0ef293c88c2bc13", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "body": "The best practices for custom ops are not well documented, sadly, but I think this is the problematic line. If you look at some code for `tf.contrib.tensor_forest`, you'll see that the `load_op_library()` call: https://github.com/tensorflow/tensorflow/blob/be79652c76a7cb82c4ea3afb8b9614233a22bbad/tensorflow/contrib/tensor_forest/python/ops/model_ops.py#L37 \r\n\r\n...is always paired with an import of statically generated op wrappers:\r\n\r\nhttps://github.com/tensorflow/tensorflow/blob/be79652c76a7cb82c4ea3afb8b9614233a22bbad/tensorflow/contrib/tensor_forest/python/ops/model_ops.py#L20\r\n\r\n...and the statically generated op wrappers are always used in preference to the ones that might or might not be imported by a call to `load_op_library()`:\r\n\r\nhttps://github.com/tensorflow/tensorflow/blob/be79652c76a7cb82c4ea3afb8b9614233a22bbad/tensorflow/contrib/tensor_forest/python/ops/model_ops.py#L63\r\n\r\nThe trick is to ensure that the statically generated model files are already created. You'll need a line like the following one:\r\n\r\nhttps://github.com/tensorflow/tensorflow/blob/be79652c76a7cb82c4ea3afb8b9614233a22bbad/tensorflow/contrib/cmake/tf_python.cmake#L803\r\n\r\n...and a matching `GENERATE_CONTRIB_OP_LIBRARY()` like the following:\r\n\r\nhttps://github.com/tensorflow/tensorflow/blob/be79652c76a7cb82c4ea3afb8b9614233a22bbad/tensorflow/contrib/cmake/tf_core_ops.cmake#L99", "created_at": "2017-10-16T16:17:48Z", "updated_at": "2017-11-07T22:09:13Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/9376#discussion_r144895125", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/9376", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/144895125"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/9376#discussion_r144895125"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/9376"}}, "body_html": "<p>The best practices for custom ops are not well documented, sadly, but I think this is the problematic line. If you look at some code for <code>tf.contrib.tensor_forest</code>, you'll see that the <code>load_op_library()</code> call: <div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/be79652c76a7cb82c4ea3afb8b9614233a22bbad/tensorflow/contrib/tensor_forest/python/ops/model_ops.py#L37\">tensorflow/tensorflow/contrib/tensor_forest/python/ops/model_ops.py</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n         Line 37\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/be79652c76a7cb82c4ea3afb8b9614233a22bbad\">be79652</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L37\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"37\"></td>\n          <td id=\"LC37\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> _model_ops <span class=\"pl-k\">=</span> loader.load_op_library( </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<p>...is always paired with an import of statically generated op wrappers:</p>\n<p><div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/be79652c76a7cb82c4ea3afb8b9614233a22bbad/tensorflow/contrib/tensor_forest/python/ops/model_ops.py#L20\">tensorflow/tensorflow/contrib/tensor_forest/python/ops/model_ops.py</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n         Line 20\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/be79652c76a7cb82c4ea3afb8b9614233a22bbad\">be79652</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L20\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"20\"></td>\n          <td id=\"LC20\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">from</span> tensorflow.contrib.tensor_forest.python.ops <span class=\"pl-k\">import</span> gen_model_ops </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<p>...and the statically generated op wrappers are always used in preference to the ones that might or might not be imported by a call to <code>load_op_library()</code>:</p>\n<p><div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/be79652c76a7cb82c4ea3afb8b9614233a22bbad/tensorflow/contrib/tensor_forest/python/ops/model_ops.py#L63\">tensorflow/tensorflow/contrib/tensor_forest/python/ops/model_ops.py</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n         Line 63\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/be79652c76a7cb82c4ea3afb8b9614233a22bbad\">be79652</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L63\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"63\"></td>\n          <td id=\"LC63\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> tensor <span class=\"pl-k\">=</span> gen_model_ops.tree_serialize(tree_handle) </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<p>The trick is to ensure that the statically generated model files are already created. You'll need a line like the following one:</p>\n<p><div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/be79652c76a7cb82c4ea3afb8b9614233a22bbad/tensorflow/contrib/cmake/tf_python.cmake#L803\">tensorflow/tensorflow/contrib/cmake/tf_python.cmake</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n         Line 803\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/be79652c76a7cb82c4ea3afb8b9614233a22bbad\">be79652</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L803\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"803\"></td>\n          <td id=\"LC803\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> GENERATE_PYTHON_OP_LIB(<span class=\"pl-s\">\"contrib_tensor_forest_model_ops\"</span> </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<p>...and a matching <code>GENERATE_CONTRIB_OP_LIBRARY()</code> like the following:</p>\n<p><div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/be79652c76a7cb82c4ea3afb8b9614233a22bbad/tensorflow/contrib/cmake/tf_core_ops.cmake#L99\">tensorflow/tensorflow/contrib/cmake/tf_core_ops.cmake</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n         Line 99\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/be79652c76a7cb82c4ea3afb8b9614233a22bbad\">be79652</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L99\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"99\"></td>\n          <td id=\"LC99\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> GENERATE_CONTRIB_OP_LIBRARY(tensor_forest_model <span class=\"pl-s\">\"<span class=\"pl-smi\">${tensorflow_source_dir}</span>/tensorflow/contrib/tensor_forest/ops/model_ops.cc\"</span>) </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>", "body_text": "The best practices for custom ops are not well documented, sadly, but I think this is the problematic line. If you look at some code for tf.contrib.tensor_forest, you'll see that the load_op_library() call: \n  \n    \n      tensorflow/tensorflow/contrib/tensor_forest/python/ops/model_ops.py\n    \n    \n         Line 37\n      in\n      be79652\n    \n    \n    \n    \n\n        \n          \n           _model_ops = loader.load_op_library( \n        \n    \n  \n\n\n...is always paired with an import of statically generated op wrappers:\n\n  \n    \n      tensorflow/tensorflow/contrib/tensor_forest/python/ops/model_ops.py\n    \n    \n         Line 20\n      in\n      be79652\n    \n    \n    \n    \n\n        \n          \n           from tensorflow.contrib.tensor_forest.python.ops import gen_model_ops \n        \n    \n  \n\n\n...and the statically generated op wrappers are always used in preference to the ones that might or might not be imported by a call to load_op_library():\n\n  \n    \n      tensorflow/tensorflow/contrib/tensor_forest/python/ops/model_ops.py\n    \n    \n         Line 63\n      in\n      be79652\n    \n    \n    \n    \n\n        \n          \n           tensor = gen_model_ops.tree_serialize(tree_handle) \n        \n    \n  \n\n\nThe trick is to ensure that the statically generated model files are already created. You'll need a line like the following one:\n\n  \n    \n      tensorflow/tensorflow/contrib/cmake/tf_python.cmake\n    \n    \n         Line 803\n      in\n      be79652\n    \n    \n    \n    \n\n        \n          \n           GENERATE_PYTHON_OP_LIB(\"contrib_tensor_forest_model_ops\" \n        \n    \n  \n\n\n...and a matching GENERATE_CONTRIB_OP_LIBRARY() like the following:\n\n  \n    \n      tensorflow/tensorflow/contrib/cmake/tf_core_ops.cmake\n    \n    \n         Line 99\n      in\n      be79652\n    \n    \n    \n    \n\n        \n          \n           GENERATE_CONTRIB_OP_LIBRARY(tensor_forest_model \"${tensorflow_source_dir}/tensorflow/contrib/tensor_forest/ops/model_ops.cc\")"}