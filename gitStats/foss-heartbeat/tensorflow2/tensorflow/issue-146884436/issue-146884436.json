{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1821", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1821/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1821/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1821/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/1821", "id": 146884436, "node_id": "MDU6SXNzdWUxNDY4ODQ0MzY=", "number": 1821, "title": "Basic Lstm cell giving NAN loss and 0 acuraccy.", "user": {"login": "ashwinnair14", "id": 7538331, "node_id": "MDQ6VXNlcjc1MzgzMzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/7538331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwinnair14", "html_url": "https://github.com/ashwinnair14", "followers_url": "https://api.github.com/users/ashwinnair14/followers", "following_url": "https://api.github.com/users/ashwinnair14/following{/other_user}", "gists_url": "https://api.github.com/users/ashwinnair14/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwinnair14/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwinnair14/subscriptions", "organizations_url": "https://api.github.com/users/ashwinnair14/orgs", "repos_url": "https://api.github.com/users/ashwinnair14/repos", "events_url": "https://api.github.com/users/ashwinnair14/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwinnair14/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-04-08T10:15:41Z", "updated_at": "2016-05-05T07:11:28Z", "closed_at": "2016-04-12T15:42:33Z", "author_association": "NONE", "body_html": "<h3>Environment info</h3>\n<p>Operating System: Ubuntu 14.04</p>\n<p>Installed version of CUDA and cuDNN:  7.5 cudnnv4.0<br>\n(please attach the output of <code>ls -l /path/to/cuda/lib/libcud*</code>):</p>\n<pre><code>-rw-r--r-- 1 root root 189170 M\u00e4r 29 12:20 /usr/local/cuda/lib/libcudadevrt.a\nlrwxrwxrwx 1 root root     16 M\u00e4r 29 12:20 /usr/local/cuda/lib/libcudart.so -&gt; libcudart.so.7.5\nlrwxrwxrwx 1 root root     19 M\u00e4r 29 12:20 /usr/local/cuda/lib/libcudart.so.7.5 -&gt; libcudart.so.7.5.18\n-rwxr-xr-x 1 root root 311596 M\u00e4r 29 12:20 /usr/local/cuda/lib/libcudart.so.7.5.18\n-rw-r--r-- 1 root root 558020 M\u00e4r 29 12:20 /usr/local/cuda/lib/libcudart_static.a\n</code></pre>\n<p>If installed from binary pip package, provide:</p>\n<ol>\n<li>Which pip package you installed. <code>sudo pip install --upgrade https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.7.1-cp27-none-linux_x86_64.whl</code></li>\n<li>The output from python -c \"import tensorflow; print(tensorflow.<strong>version</strong>)\".</li>\n</ol>\n<pre><code>I tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcurand.so locally\n0.7.1\n\n</code></pre>\n<p>Hi,</p>\n<p>I had modified <a href=\"https://github.com/aymericdamien/TensorFlow-Examples/blob/master/examples/3%20-%20Neural%20Networks/recurrent_network.py\">this</a> code to accept an input 4096 vector with 16 time steps.<br>\nand changed very little.<br>\nThe loss is always nan and acuraccy 0.<br>\nI have tried several combinations of Learningrate/batchsize/optimizers with no change.</p>\n<p><a href=\"http://pastebin.com/S1WcVNmk\" rel=\"nofollow\">Here Is my code.</a></p>\n<h1>Output</h1>\n<pre><code>Iter 640, Minibatch Loss= nan, Training Accuracy= 0.75000\nTesting Accuracy: 0.75\nIter 1280, Minibatch Loss= nan, Training Accuracy= 0.75000\nTesting Accuracy: 0.0\nIter 1920, Minibatch Loss= nan, Training Accuracy= 0.00000\nTesting Accuracy: 0.0\nIter 2560, Minibatch Loss= nan, Training Accuracy= 0.01562\nTesting Accuracy: 0.0\nIter 3200, Minibatch Loss= nan, Training Accuracy= 0.01562\nTesting Accuracy: 0.0\nIter 3840, Minibatch Loss= nan, Training Accuracy= 0.00000\nTesting Accuracy: 0.0\nIter 4480, Minibatch Loss= nan, Training Accuracy= 0.03125\nTesting Accuracy: 0.0\nI tensorflow/core/common_runtime/gpu/pool_allocator.cc:244] PoolAllocator: After 4696 get requests, put_count=4701 evicted_count=1000 eviction_rate=0.212721 and unsatisfied allocation rate=0.21678\nI tensorflow/core/common_runtime/gpu/pool_allocator.cc:256] Raising pool_size_limit_ from 256 to 281\nIter 5120, Minibatch Loss= nan, Training Accuracy= 0.00000\nTesting Accuracy: 0.0\nIter 5760, Minibatch Loss= nan, Training Accuracy= 0.00000\nTesting Accuracy: 0.0\nIter 6400, Minibatch Loss= nan, Training Accuracy= 0.00000\nTesting Accuracy: 0.015625\nIter 7040, Minibatch Loss= nan, Training Accuracy= 0.00000\nTesting Accuracy: 0.0\nIter 7680, Minibatch Loss= nan, Training Accuracy= 0.00000\nTesting Accuracy: 0.015625\nIter 8320, Minibatch Loss= nan, Training Accuracy= 0.00000\n</code></pre>\n<p>Any ideas on y this is happening?</p>", "body_text": "Environment info\nOperating System: Ubuntu 14.04\nInstalled version of CUDA and cuDNN:  7.5 cudnnv4.0\n(please attach the output of ls -l /path/to/cuda/lib/libcud*):\n-rw-r--r-- 1 root root 189170 M\u00e4r 29 12:20 /usr/local/cuda/lib/libcudadevrt.a\nlrwxrwxrwx 1 root root     16 M\u00e4r 29 12:20 /usr/local/cuda/lib/libcudart.so -> libcudart.so.7.5\nlrwxrwxrwx 1 root root     19 M\u00e4r 29 12:20 /usr/local/cuda/lib/libcudart.so.7.5 -> libcudart.so.7.5.18\n-rwxr-xr-x 1 root root 311596 M\u00e4r 29 12:20 /usr/local/cuda/lib/libcudart.so.7.5.18\n-rw-r--r-- 1 root root 558020 M\u00e4r 29 12:20 /usr/local/cuda/lib/libcudart_static.a\n\nIf installed from binary pip package, provide:\n\nWhich pip package you installed. sudo pip install --upgrade https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.7.1-cp27-none-linux_x86_64.whl\nThe output from python -c \"import tensorflow; print(tensorflow.version)\".\n\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcurand.so locally\n0.7.1\n\n\nHi,\nI had modified this code to accept an input 4096 vector with 16 time steps.\nand changed very little.\nThe loss is always nan and acuraccy 0.\nI have tried several combinations of Learningrate/batchsize/optimizers with no change.\nHere Is my code.\nOutput\nIter 640, Minibatch Loss= nan, Training Accuracy= 0.75000\nTesting Accuracy: 0.75\nIter 1280, Minibatch Loss= nan, Training Accuracy= 0.75000\nTesting Accuracy: 0.0\nIter 1920, Minibatch Loss= nan, Training Accuracy= 0.00000\nTesting Accuracy: 0.0\nIter 2560, Minibatch Loss= nan, Training Accuracy= 0.01562\nTesting Accuracy: 0.0\nIter 3200, Minibatch Loss= nan, Training Accuracy= 0.01562\nTesting Accuracy: 0.0\nIter 3840, Minibatch Loss= nan, Training Accuracy= 0.00000\nTesting Accuracy: 0.0\nIter 4480, Minibatch Loss= nan, Training Accuracy= 0.03125\nTesting Accuracy: 0.0\nI tensorflow/core/common_runtime/gpu/pool_allocator.cc:244] PoolAllocator: After 4696 get requests, put_count=4701 evicted_count=1000 eviction_rate=0.212721 and unsatisfied allocation rate=0.21678\nI tensorflow/core/common_runtime/gpu/pool_allocator.cc:256] Raising pool_size_limit_ from 256 to 281\nIter 5120, Minibatch Loss= nan, Training Accuracy= 0.00000\nTesting Accuracy: 0.0\nIter 5760, Minibatch Loss= nan, Training Accuracy= 0.00000\nTesting Accuracy: 0.0\nIter 6400, Minibatch Loss= nan, Training Accuracy= 0.00000\nTesting Accuracy: 0.015625\nIter 7040, Minibatch Loss= nan, Training Accuracy= 0.00000\nTesting Accuracy: 0.0\nIter 7680, Minibatch Loss= nan, Training Accuracy= 0.00000\nTesting Accuracy: 0.015625\nIter 8320, Minibatch Loss= nan, Training Accuracy= 0.00000\n\nAny ideas on y this is happening?", "body": "### Environment info\n\nOperating System: Ubuntu 14.04 \n\nInstalled version of CUDA and cuDNN:  7.5 cudnnv4.0\n(please attach the output of `ls -l /path/to/cuda/lib/libcud*`):\n\n```\n-rw-r--r-- 1 root root 189170 M\u00e4r 29 12:20 /usr/local/cuda/lib/libcudadevrt.a\nlrwxrwxrwx 1 root root     16 M\u00e4r 29 12:20 /usr/local/cuda/lib/libcudart.so -> libcudart.so.7.5\nlrwxrwxrwx 1 root root     19 M\u00e4r 29 12:20 /usr/local/cuda/lib/libcudart.so.7.5 -> libcudart.so.7.5.18\n-rwxr-xr-x 1 root root 311596 M\u00e4r 29 12:20 /usr/local/cuda/lib/libcudart.so.7.5.18\n-rw-r--r-- 1 root root 558020 M\u00e4r 29 12:20 /usr/local/cuda/lib/libcudart_static.a\n```\n\nIf installed from binary pip package, provide:\n1. Which pip package you installed. `sudo pip install --upgrade https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.7.1-cp27-none-linux_x86_64.whl`\n2. The output from python -c \"import tensorflow; print(tensorflow.**version**)\".\n\n```\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcurand.so locally\n0.7.1\n\n```\n\nHi,\n\nI had modified [this](https://github.com/aymericdamien/TensorFlow-Examples/blob/master/examples/3%20-%20Neural%20Networks/recurrent_network.py) code to accept an input 4096 vector with 16 time steps.\nand changed very little.\nThe loss is always nan and acuraccy 0.\nI have tried several combinations of Learningrate/batchsize/optimizers with no change.\n\n[Here Is my code.](http://pastebin.com/S1WcVNmk)\n# Output\n\n```\nIter 640, Minibatch Loss= nan, Training Accuracy= 0.75000\nTesting Accuracy: 0.75\nIter 1280, Minibatch Loss= nan, Training Accuracy= 0.75000\nTesting Accuracy: 0.0\nIter 1920, Minibatch Loss= nan, Training Accuracy= 0.00000\nTesting Accuracy: 0.0\nIter 2560, Minibatch Loss= nan, Training Accuracy= 0.01562\nTesting Accuracy: 0.0\nIter 3200, Minibatch Loss= nan, Training Accuracy= 0.01562\nTesting Accuracy: 0.0\nIter 3840, Minibatch Loss= nan, Training Accuracy= 0.00000\nTesting Accuracy: 0.0\nIter 4480, Minibatch Loss= nan, Training Accuracy= 0.03125\nTesting Accuracy: 0.0\nI tensorflow/core/common_runtime/gpu/pool_allocator.cc:244] PoolAllocator: After 4696 get requests, put_count=4701 evicted_count=1000 eviction_rate=0.212721 and unsatisfied allocation rate=0.21678\nI tensorflow/core/common_runtime/gpu/pool_allocator.cc:256] Raising pool_size_limit_ from 256 to 281\nIter 5120, Minibatch Loss= nan, Training Accuracy= 0.00000\nTesting Accuracy: 0.0\nIter 5760, Minibatch Loss= nan, Training Accuracy= 0.00000\nTesting Accuracy: 0.0\nIter 6400, Minibatch Loss= nan, Training Accuracy= 0.00000\nTesting Accuracy: 0.015625\nIter 7040, Minibatch Loss= nan, Training Accuracy= 0.00000\nTesting Accuracy: 0.0\nIter 7680, Minibatch Loss= nan, Training Accuracy= 0.00000\nTesting Accuracy: 0.015625\nIter 8320, Minibatch Loss= nan, Training Accuracy= 0.00000\n```\n\nAny ideas on y this is happening? \n"}