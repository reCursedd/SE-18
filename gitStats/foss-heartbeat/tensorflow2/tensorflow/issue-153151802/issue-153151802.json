{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2228", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2228/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2228/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2228/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/2228", "id": 153151802, "node_id": "MDU6SXNzdWUxNTMxNTE4MDI=", "number": 2228, "title": "Inconsistence output with resize_images() using different method ", "user": {"login": "24hours", "id": 650407, "node_id": "MDQ6VXNlcjY1MDQwNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/650407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/24hours", "html_url": "https://github.com/24hours", "followers_url": "https://api.github.com/users/24hours/followers", "following_url": "https://api.github.com/users/24hours/following{/other_user}", "gists_url": "https://api.github.com/users/24hours/gists{/gist_id}", "starred_url": "https://api.github.com/users/24hours/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/24hours/subscriptions", "organizations_url": "https://api.github.com/users/24hours/orgs", "repos_url": "https://api.github.com/users/24hours/repos", "events_url": "https://api.github.com/users/24hours/events{/privacy}", "received_events_url": "https://api.github.com/users/24hours/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-05-05T01:37:37Z", "updated_at": "2017-07-08T11:35:02Z", "closed_at": "2016-06-07T05:42:53Z", "author_association": "NONE", "body_html": "<p>Extended from <a href=\"http://stackoverflow.com/questions/37032251/tensorflow-image-resize-mess-up-image-on-unknown-image-size\" rel=\"nofollow\">Stackoverflow question</a></p>\n<h3>Environment info</h3>\n<p>Operating System: Ubuntu 14.04 / OS X Yosemite</p>\n<p>Installed version of CUDA and cuDNN:<br>\nCUDA Version : 7.5<br>\ncuDnn: 4</p>\n<p>Tensorflow version: 0.8.0</p>\n<p>When resizing image with variable dimension (output from <code>decode_jpeg</code>), image tend to get messed up. However, if <code>reshape()</code> is applied prior to <code>resize()</code>, image will get resized properly. This issue does not affect <code>ResizeMethod.Nearest_Neighbour</code>.</p>\n<h3>Steps to reproduce</h3>\n<pre><code>\nimport tensorflow as tf\nimport matplotlib.pyplot as plt\n\nfile_contents = tf.read_file('./2008_000002.jpg')\nim = tf.image.decode_jpeg(file_contents)\nim_bi = tf.image.resize_images(im, 256, 256, method=tf.image.ResizeMethod.BILINEAR)\nim_nn = tf.image.resize_images(im, 256, 256, method=tf.image.ResizeMethod.NEAREST_NEIGHBOR)\nim_bic = tf.image.resize_images(im, 256, 256, method=tf.image.ResizeMethod.BICUBIC)\nim_ar = tf.image.resize_images(im, 256, 256, method=tf.image.ResizeMethod.AREA)\n\n# im = tf.reshape(im, shape=[256, 256, 3])\n\nsess = tf.Session()\nsess.run(tf.initialize_all_variables())\n\nimg_bi, img_nn, img_bic, img_ar = sess.run([im_bi, im_nn, im_bic, im_ar])\n\nplt.imshow(img_bi)\nplt.title(\"BILINEAR\")\nplt.figure()\n\nplt.imshow(img_nn)\nplt.title(\"NEAREST_NEIGHBOR\")\nplt.figure()\n\nplt.imshow(img_bic)\nplt.title(\"BICUBIC\")\nplt.figure()\n\nplt.imshow(img_ar)\nplt.title('AREA')\nplt.show()\n</code></pre>\n<p><a href=\"http://imgur.com/MskVWIV\" rel=\"nofollow\">Original image</a></p>\n<p>Result<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://cloud.githubusercontent.com/assets/650407/15034074/7b973208-12a4-11e6-943e-ea04e1389c01.png\"><img src=\"https://cloud.githubusercontent.com/assets/650407/15034074/7b973208-12a4-11e6-943e-ea04e1389c01.png\" alt=\"nearest Neighbour\" style=\"max-width:100%;\"></a><br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://cloud.githubusercontent.com/assets/650407/15034080/88bfbc84-12a4-11e6-81be-b0fa632d7997.png\"><img src=\"https://cloud.githubusercontent.com/assets/650407/15034080/88bfbc84-12a4-11e6-81be-b0fa632d7997.png\" alt=\"bilinear\" style=\"max-width:100%;\"></a><br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://cloud.githubusercontent.com/assets/650407/15034081/88c2a41c-12a4-11e6-9681-f008ec36ff0f.png\"><img src=\"https://cloud.githubusercontent.com/assets/650407/15034081/88c2a41c-12a4-11e6-9681-f008ec36ff0f.png\" alt=\"bicubic\" style=\"max-width:100%;\"></a><br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://cloud.githubusercontent.com/assets/650407/15034079/88bb4604-12a4-11e6-9ff9-1a53c49a5ab3.png\"><img src=\"https://cloud.githubusercontent.com/assets/650407/15034079/88bb4604-12a4-11e6-9ff9-1a53c49a5ab3.png\" alt=\"area\" style=\"max-width:100%;\"></a></p>", "body_text": "Extended from Stackoverflow question\nEnvironment info\nOperating System: Ubuntu 14.04 / OS X Yosemite\nInstalled version of CUDA and cuDNN:\nCUDA Version : 7.5\ncuDnn: 4\nTensorflow version: 0.8.0\nWhen resizing image with variable dimension (output from decode_jpeg), image tend to get messed up. However, if reshape() is applied prior to resize(), image will get resized properly. This issue does not affect ResizeMethod.Nearest_Neighbour.\nSteps to reproduce\n\nimport tensorflow as tf\nimport matplotlib.pyplot as plt\n\nfile_contents = tf.read_file('./2008_000002.jpg')\nim = tf.image.decode_jpeg(file_contents)\nim_bi = tf.image.resize_images(im, 256, 256, method=tf.image.ResizeMethod.BILINEAR)\nim_nn = tf.image.resize_images(im, 256, 256, method=tf.image.ResizeMethod.NEAREST_NEIGHBOR)\nim_bic = tf.image.resize_images(im, 256, 256, method=tf.image.ResizeMethod.BICUBIC)\nim_ar = tf.image.resize_images(im, 256, 256, method=tf.image.ResizeMethod.AREA)\n\n# im = tf.reshape(im, shape=[256, 256, 3])\n\nsess = tf.Session()\nsess.run(tf.initialize_all_variables())\n\nimg_bi, img_nn, img_bic, img_ar = sess.run([im_bi, im_nn, im_bic, im_ar])\n\nplt.imshow(img_bi)\nplt.title(\"BILINEAR\")\nplt.figure()\n\nplt.imshow(img_nn)\nplt.title(\"NEAREST_NEIGHBOR\")\nplt.figure()\n\nplt.imshow(img_bic)\nplt.title(\"BICUBIC\")\nplt.figure()\n\nplt.imshow(img_ar)\nplt.title('AREA')\nplt.show()\n\nOriginal image\nResult", "body": "Extended from [Stackoverflow question](http://stackoverflow.com/questions/37032251/tensorflow-image-resize-mess-up-image-on-unknown-image-size)\n### Environment info\n\nOperating System: Ubuntu 14.04 / OS X Yosemite\n\nInstalled version of CUDA and cuDNN: \nCUDA Version : 7.5\ncuDnn: 4\n\nTensorflow version: 0.8.0\n\nWhen resizing image with variable dimension (output from `decode_jpeg`), image tend to get messed up. However, if `reshape()` is applied prior to `resize()`, image will get resized properly. This issue does not affect `ResizeMethod.Nearest_Neighbour`. \n### Steps to reproduce\n\n```\n\nimport tensorflow as tf\nimport matplotlib.pyplot as plt\n\nfile_contents = tf.read_file('./2008_000002.jpg')\nim = tf.image.decode_jpeg(file_contents)\nim_bi = tf.image.resize_images(im, 256, 256, method=tf.image.ResizeMethod.BILINEAR)\nim_nn = tf.image.resize_images(im, 256, 256, method=tf.image.ResizeMethod.NEAREST_NEIGHBOR)\nim_bic = tf.image.resize_images(im, 256, 256, method=tf.image.ResizeMethod.BICUBIC)\nim_ar = tf.image.resize_images(im, 256, 256, method=tf.image.ResizeMethod.AREA)\n\n# im = tf.reshape(im, shape=[256, 256, 3])\n\nsess = tf.Session()\nsess.run(tf.initialize_all_variables())\n\nimg_bi, img_nn, img_bic, img_ar = sess.run([im_bi, im_nn, im_bic, im_ar])\n\nplt.imshow(img_bi)\nplt.title(\"BILINEAR\")\nplt.figure()\n\nplt.imshow(img_nn)\nplt.title(\"NEAREST_NEIGHBOR\")\nplt.figure()\n\nplt.imshow(img_bic)\nplt.title(\"BICUBIC\")\nplt.figure()\n\nplt.imshow(img_ar)\nplt.title('AREA')\nplt.show()\n```\n\n[Original image](http://imgur.com/MskVWIV)\n\nResult\n![nearest Neighbour](https://cloud.githubusercontent.com/assets/650407/15034074/7b973208-12a4-11e6-943e-ea04e1389c01.png)\n![bilinear](https://cloud.githubusercontent.com/assets/650407/15034080/88bfbc84-12a4-11e6-81be-b0fa632d7997.png)\n![bicubic](https://cloud.githubusercontent.com/assets/650407/15034081/88c2a41c-12a4-11e6-9681-f008ec36ff0f.png)\n![area](https://cloud.githubusercontent.com/assets/650407/15034079/88bb4604-12a4-11e6-9ff9-1a53c49a5ab3.png)\n"}