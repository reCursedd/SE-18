{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/409276370", "html_url": "https://github.com/tensorflow/tensorflow/issues/21277#issuecomment-409276370", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21277", "id": 409276370, "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTI3NjM3MA==", "user": {"login": "nfergu", "id": 1291583, "node_id": "MDQ6VXNlcjEyOTE1ODM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1291583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nfergu", "html_url": "https://github.com/nfergu", "followers_url": "https://api.github.com/users/nfergu/followers", "following_url": "https://api.github.com/users/nfergu/following{/other_user}", "gists_url": "https://api.github.com/users/nfergu/gists{/gist_id}", "starred_url": "https://api.github.com/users/nfergu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nfergu/subscriptions", "organizations_url": "https://api.github.com/users/nfergu/orgs", "repos_url": "https://api.github.com/users/nfergu/repos", "events_url": "https://api.github.com/users/nfergu/events{/privacy}", "received_events_url": "https://api.github.com/users/nfergu/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-31T16:06:53Z", "updated_at": "2018-07-31T16:06:53Z", "author_association": "NONE", "body_html": "<p>Yes, I was also confused by the fact that none of the native threads appear to be waiting to acquire the GIL. I haven't tried <code>TF_CPP_MIN_VLOG_LEVEL=1</code> yet, but if I surround the GIL lock acquisition with a couple of log statements as follows:</p>\n<pre><code>neil-mac-2:tensorflow nferguson$ git diff\ndiff --git a/tensorflow/python/lib/core/py_func.cc b/tensorflow/python/lib/core/py_func.cc\nindex 22317a348c..d52b5e4a00 100644\n--- a/tensorflow/python/lib/core/py_func.cc\n+++ b/tensorflow/python/lib/core/py_func.cc\n@@ -469,7 +469,9 @@ class PyFuncOp : public OpKernel {\n     }\n\n     PyGILState_STATE py_threadstate;\n+    LOG(ERROR) &lt;&lt; \"About to ensure GIL\";\n     py_threadstate = PyGILState_Ensure();\n+    LOG(ERROR) &lt;&lt; \"Got GIL!\";\n     bool log_on_error;\n     Status s = DoCallPyFunc(&amp;call, &amp;log_on_error);\n</code></pre>\n<p>I can observe it printing:</p>\n<p><code>About to ensure GIL</code></p>\n<p>but not:</p>\n<p><code>Got GIL!</code></p>\n<p>Which is why I mentioned that it was getting to <code>PyGILState_Ensure()</code>, but no further.</p>\n<p>Anyway, I will try with <code>TF_CPP_MIN_VLOG_LEVEL=1</code>.</p>", "body_text": "Yes, I was also confused by the fact that none of the native threads appear to be waiting to acquire the GIL. I haven't tried TF_CPP_MIN_VLOG_LEVEL=1 yet, but if I surround the GIL lock acquisition with a couple of log statements as follows:\nneil-mac-2:tensorflow nferguson$ git diff\ndiff --git a/tensorflow/python/lib/core/py_func.cc b/tensorflow/python/lib/core/py_func.cc\nindex 22317a348c..d52b5e4a00 100644\n--- a/tensorflow/python/lib/core/py_func.cc\n+++ b/tensorflow/python/lib/core/py_func.cc\n@@ -469,7 +469,9 @@ class PyFuncOp : public OpKernel {\n     }\n\n     PyGILState_STATE py_threadstate;\n+    LOG(ERROR) << \"About to ensure GIL\";\n     py_threadstate = PyGILState_Ensure();\n+    LOG(ERROR) << \"Got GIL!\";\n     bool log_on_error;\n     Status s = DoCallPyFunc(&call, &log_on_error);\n\nI can observe it printing:\nAbout to ensure GIL\nbut not:\nGot GIL!\nWhich is why I mentioned that it was getting to PyGILState_Ensure(), but no further.\nAnyway, I will try with TF_CPP_MIN_VLOG_LEVEL=1.", "body": "Yes, I was also confused by the fact that none of the native threads appear to be waiting to acquire the GIL. I haven't tried `TF_CPP_MIN_VLOG_LEVEL=1` yet, but if I surround the GIL lock acquisition with a couple of log statements as follows:\r\n\r\n```\r\nneil-mac-2:tensorflow nferguson$ git diff\r\ndiff --git a/tensorflow/python/lib/core/py_func.cc b/tensorflow/python/lib/core/py_func.cc\r\nindex 22317a348c..d52b5e4a00 100644\r\n--- a/tensorflow/python/lib/core/py_func.cc\r\n+++ b/tensorflow/python/lib/core/py_func.cc\r\n@@ -469,7 +469,9 @@ class PyFuncOp : public OpKernel {\r\n     }\r\n\r\n     PyGILState_STATE py_threadstate;\r\n+    LOG(ERROR) << \"About to ensure GIL\";\r\n     py_threadstate = PyGILState_Ensure();\r\n+    LOG(ERROR) << \"Got GIL!\";\r\n     bool log_on_error;\r\n     Status s = DoCallPyFunc(&call, &log_on_error);\r\n```\r\n\r\nI can observe it printing:\r\n\r\n`About to ensure GIL`\r\n\r\nbut not:\r\n\r\n`Got GIL!`\r\n\r\nWhich is why I mentioned that it was getting to `PyGILState_Ensure()`, but no further.\r\n\r\nAnyway, I will try with `TF_CPP_MIN_VLOG_LEVEL=1`."}