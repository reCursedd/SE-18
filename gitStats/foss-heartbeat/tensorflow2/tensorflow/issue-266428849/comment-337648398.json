{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/337648398", "html_url": "https://github.com/tensorflow/tensorflow/issues/13802#issuecomment-337648398", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13802", "id": 337648398, "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzY0ODM5OA==", "user": {"login": "albertz", "id": 59132, "node_id": "MDQ6VXNlcjU5MTMy", "avatar_url": "https://avatars0.githubusercontent.com/u/59132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/albertz", "html_url": "https://github.com/albertz", "followers_url": "https://api.github.com/users/albertz/followers", "following_url": "https://api.github.com/users/albertz/following{/other_user}", "gists_url": "https://api.github.com/users/albertz/gists{/gist_id}", "starred_url": "https://api.github.com/users/albertz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/albertz/subscriptions", "organizations_url": "https://api.github.com/users/albertz/orgs", "repos_url": "https://api.github.com/users/albertz/repos", "events_url": "https://api.github.com/users/albertz/events{/privacy}", "received_events_url": "https://api.github.com/users/albertz/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-18T16:27:07Z", "updated_at": "2017-10-20T20:52:20Z", "author_association": "NONE", "body_html": "<p>Probably not, as the atfork handler registered by OpenBlas triggers this.<br>\nThis could also be fixed on the CPython side, by avoiding <code>fork()</code> in their <code>subprocess_fork_exec</code> implementation, and using e.g. <code>vfork()</code>, <code>posix_spawn()</code> or <code>syscall(SYS_clone, SIGCHLD, 0)</code> instead (<a href=\"https://stackoverflow.com/questions/46810597/forkexec-without-atfork-handlers\" rel=\"nofollow\">via</a>). I reported that for CPython <a href=\"https://bugs.python.org/issue31814\" rel=\"nofollow\">here</a>.</p>", "body_text": "Probably not, as the atfork handler registered by OpenBlas triggers this.\nThis could also be fixed on the CPython side, by avoiding fork() in their subprocess_fork_exec implementation, and using e.g. vfork(), posix_spawn() or syscall(SYS_clone, SIGCHLD, 0) instead (via). I reported that for CPython here.", "body": "Probably not, as the atfork handler registered by OpenBlas triggers this.\r\nThis could also be fixed on the CPython side, by avoiding `fork()` in their `subprocess_fork_exec` implementation, and using e.g. `vfork()`, `posix_spawn()` or `syscall(SYS_clone, SIGCHLD, 0)` instead ([via](https://stackoverflow.com/questions/46810597/forkexec-without-atfork-handlers)). I reported that for CPython [here](https://bugs.python.org/issue31814)."}