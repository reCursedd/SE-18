{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13254", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13254/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13254/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13254/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/13254", "id": 259967425, "node_id": "MDU6SXNzdWUyNTk5Njc0MjU=", "number": 13254, "title": "RNNParamsSavable breaks when there is more than one RNN", "user": {"login": "chrisc36", "id": 1463280, "node_id": "MDQ6VXNlcjE0NjMyODA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1463280?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisc36", "html_url": "https://github.com/chrisc36", "followers_url": "https://api.github.com/users/chrisc36/followers", "following_url": "https://api.github.com/users/chrisc36/following{/other_user}", "gists_url": "https://api.github.com/users/chrisc36/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisc36/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisc36/subscriptions", "organizations_url": "https://api.github.com/users/chrisc36/orgs", "repos_url": "https://api.github.com/users/chrisc36/repos", "events_url": "https://api.github.com/users/chrisc36/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisc36/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "protoget", "id": 5117188, "node_id": "MDQ6VXNlcjUxMTcxODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5117188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/protoget", "html_url": "https://github.com/protoget", "followers_url": "https://api.github.com/users/protoget/followers", "following_url": "https://api.github.com/users/protoget/following{/other_user}", "gists_url": "https://api.github.com/users/protoget/gists{/gist_id}", "starred_url": "https://api.github.com/users/protoget/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/protoget/subscriptions", "organizations_url": "https://api.github.com/users/protoget/orgs", "repos_url": "https://api.github.com/users/protoget/repos", "events_url": "https://api.github.com/users/protoget/events{/privacy}", "received_events_url": "https://api.github.com/users/protoget/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "protoget", "id": 5117188, "node_id": "MDQ6VXNlcjUxMTcxODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5117188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/protoget", "html_url": "https://github.com/protoget", "followers_url": "https://api.github.com/users/protoget/followers", "following_url": "https://api.github.com/users/protoget/following{/other_user}", "gists_url": "https://api.github.com/users/protoget/gists{/gist_id}", "starred_url": "https://api.github.com/users/protoget/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/protoget/subscriptions", "organizations_url": "https://api.github.com/users/protoget/orgs", "repos_url": "https://api.github.com/users/protoget/repos", "events_url": "https://api.github.com/users/protoget/events{/privacy}", "received_events_url": "https://api.github.com/users/protoget/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2017-09-23T00:24:10Z", "updated_at": "2017-11-03T06:54:44Z", "closed_at": "2017-11-03T06:54:44Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:  Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: source</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.3.0</li>\n<li><strong>Python version</strong>: 3.5</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 5.2</li>\n<li><strong>CUDA/cuDNN version</strong>: 6.0</li>\n<li><strong>GPU model and memory</strong>:  Tesla K80, 12gb</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<pre><code>    sess = tf.Session()\n    cell1 = cudnn_rnn_ops.CudnnGRU(1, 10, 10, input_mode=\"linear_input\")\n    sz = cell1.params_size()\n    params1 = tf.get_variable(\"rnn1/rnn\", sess.run(sz))\n    save1 = cudnn_rnn_ops.RNNParamsSaveable(\n        cell1, cell1.params_to_canonical, cell1.canonical_to_params,\n        [params1], name=\"rnn1/rnn\")\n    tf.add_to_collection(tf.GraphKeys.SAVEABLE_OBJECTS, save1)\n\n    params2 = tf.get_variable(\"rnn2/rnn\", sess.run(sz))\n    save2 = cudnn_rnn_ops.RNNParamsSaveable(\n        cell1, cell1.params_to_canonical, cell1.canonical_to_params,\n        [params2], name=\"rnn2/rnn\")\n    tf.add_to_collection(tf.GraphKeys.SAVEABLE_OBJECTS, save2)\n    sess.run(tf.global_variables_initializer())\n\n    saver = tf.train.Saver()\n    saver.save(sess, \"save\")\n</code></pre>\n<h3>Describe the problem</h3>\n<p>An exception is thrown:<br>\n\"ValueError: At least two variables have the same name: rnn1/rnn\"</p>\n<p>This works if there is only one RNN. If I remove the name parameters the model will save, however only one of the two RNNs will have their weights/biases saved to the checkpoint as individual tensors, so it will break if I try to restore two <code>CudnnCompatibleGRUCell</code> RNNs from this checkpoint.</p>\n<p>As far as I can tell there is some kind of name clobbering happening within tf.Saver, maybe because <code>RNNParamsSaveable</code> set <code>op</code> to none for the super class.</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):  Ubuntu 16.04\nTensorFlow installed from (source or binary): source\nTensorFlow version (use command below): 1.3.0\nPython version: 3.5\nBazel version (if compiling from source): 5.2\nCUDA/cuDNN version: 6.0\nGPU model and memory:  Tesla K80, 12gb\nExact command to reproduce:\n\n    sess = tf.Session()\n    cell1 = cudnn_rnn_ops.CudnnGRU(1, 10, 10, input_mode=\"linear_input\")\n    sz = cell1.params_size()\n    params1 = tf.get_variable(\"rnn1/rnn\", sess.run(sz))\n    save1 = cudnn_rnn_ops.RNNParamsSaveable(\n        cell1, cell1.params_to_canonical, cell1.canonical_to_params,\n        [params1], name=\"rnn1/rnn\")\n    tf.add_to_collection(tf.GraphKeys.SAVEABLE_OBJECTS, save1)\n\n    params2 = tf.get_variable(\"rnn2/rnn\", sess.run(sz))\n    save2 = cudnn_rnn_ops.RNNParamsSaveable(\n        cell1, cell1.params_to_canonical, cell1.canonical_to_params,\n        [params2], name=\"rnn2/rnn\")\n    tf.add_to_collection(tf.GraphKeys.SAVEABLE_OBJECTS, save2)\n    sess.run(tf.global_variables_initializer())\n\n    saver = tf.train.Saver()\n    saver.save(sess, \"save\")\n\nDescribe the problem\nAn exception is thrown:\n\"ValueError: At least two variables have the same name: rnn1/rnn\"\nThis works if there is only one RNN. If I remove the name parameters the model will save, however only one of the two RNNs will have their weights/biases saved to the checkpoint as individual tensors, so it will break if I try to restore two CudnnCompatibleGRUCell RNNs from this checkpoint.\nAs far as I can tell there is some kind of name clobbering happening within tf.Saver, maybe because RNNParamsSaveable set op to none for the super class.", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:  Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: 1.3.0\r\n- **Python version**: 3.5\r\n- **Bazel version (if compiling from source)**: 5.2\r\n- **CUDA/cuDNN version**: 6.0\r\n- **GPU model and memory**:  Tesla K80, 12gb\r\n- **Exact command to reproduce**:\r\n\r\n```\r\n    sess = tf.Session()\r\n    cell1 = cudnn_rnn_ops.CudnnGRU(1, 10, 10, input_mode=\"linear_input\")\r\n    sz = cell1.params_size()\r\n    params1 = tf.get_variable(\"rnn1/rnn\", sess.run(sz))\r\n    save1 = cudnn_rnn_ops.RNNParamsSaveable(\r\n        cell1, cell1.params_to_canonical, cell1.canonical_to_params,\r\n        [params1], name=\"rnn1/rnn\")\r\n    tf.add_to_collection(tf.GraphKeys.SAVEABLE_OBJECTS, save1)\r\n\r\n    params2 = tf.get_variable(\"rnn2/rnn\", sess.run(sz))\r\n    save2 = cudnn_rnn_ops.RNNParamsSaveable(\r\n        cell1, cell1.params_to_canonical, cell1.canonical_to_params,\r\n        [params2], name=\"rnn2/rnn\")\r\n    tf.add_to_collection(tf.GraphKeys.SAVEABLE_OBJECTS, save2)\r\n    sess.run(tf.global_variables_initializer())\r\n\r\n    saver = tf.train.Saver()\r\n    saver.save(sess, \"save\")\r\n```\r\n\r\n### Describe the problem\r\nAn exception is thrown: \r\n\"ValueError: At least two variables have the same name: rnn1/rnn\"\r\n\r\nThis works if there is only one RNN. If I remove the name parameters the model will save, however only one of the two RNNs will have their weights/biases saved to the checkpoint as individual tensors, so it will break if I try to restore two `CudnnCompatibleGRUCell` RNNs from this checkpoint.\r\n\r\nAs far as I can tell there is some kind of name clobbering happening within tf.Saver, maybe because `RNNParamsSaveable` set `op` to none for the super class."}