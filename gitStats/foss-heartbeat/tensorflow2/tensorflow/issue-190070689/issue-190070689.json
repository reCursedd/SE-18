{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5668", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5668/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5668/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5668/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/5668", "id": 190070689, "node_id": "MDExOlB1bGxSZXF1ZXN0OTQxODM1MjY=", "number": 5668, "title": "Fix building for iOS #4640", "user": {"login": "Gubarev", "id": 235517, "node_id": "MDQ6VXNlcjIzNTUxNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/235517?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gubarev", "html_url": "https://github.com/Gubarev", "followers_url": "https://api.github.com/users/Gubarev/followers", "following_url": "https://api.github.com/users/Gubarev/following{/other_user}", "gists_url": "https://api.github.com/users/Gubarev/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gubarev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gubarev/subscriptions", "organizations_url": "https://api.github.com/users/Gubarev/orgs", "repos_url": "https://api.github.com/users/Gubarev/repos", "events_url": "https://api.github.com/users/Gubarev/events{/privacy}", "received_events_url": "https://api.github.com/users/Gubarev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "petewarden", "id": 161459, "node_id": "MDQ6VXNlcjE2MTQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/161459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petewarden", "html_url": "https://github.com/petewarden", "followers_url": "https://api.github.com/users/petewarden/followers", "following_url": "https://api.github.com/users/petewarden/following{/other_user}", "gists_url": "https://api.github.com/users/petewarden/gists{/gist_id}", "starred_url": "https://api.github.com/users/petewarden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petewarden/subscriptions", "organizations_url": "https://api.github.com/users/petewarden/orgs", "repos_url": "https://api.github.com/users/petewarden/repos", "events_url": "https://api.github.com/users/petewarden/events{/privacy}", "received_events_url": "https://api.github.com/users/petewarden/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "petewarden", "id": 161459, "node_id": "MDQ6VXNlcjE2MTQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/161459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petewarden", "html_url": "https://github.com/petewarden", "followers_url": "https://api.github.com/users/petewarden/followers", "following_url": "https://api.github.com/users/petewarden/following{/other_user}", "gists_url": "https://api.github.com/users/petewarden/gists{/gist_id}", "starred_url": "https://api.github.com/users/petewarden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petewarden/subscriptions", "organizations_url": "https://api.github.com/users/petewarden/orgs", "repos_url": "https://api.github.com/users/petewarden/repos", "events_url": "https://api.github.com/users/petewarden/events{/privacy}", "received_events_url": "https://api.github.com/users/petewarden/received_events", "type": "User", "site_admin": false}, {"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2016-11-17T15:00:24Z", "updated_at": "2016-11-18T18:14:50Z", "closed_at": "2016-11-18T18:14:50Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/5668", "html_url": "https://github.com/tensorflow/tensorflow/pull/5668", "diff_url": "https://github.com/tensorflow/tensorflow/pull/5668.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/5668.patch"}, "body_html": "<p>Seems like the reason why compilation fails does not directly related to TensorFlow or even Protobuf:</p>\n<p>The <code>configure</code> script of Protobuf (generated by <code>autogen</code>) has non trivial logic for detecting cross-compilation (currently there checks can be found in lines 3918\u20133976 at <code>configure</code> file). It tries to compile some simple C programs into executable and run it during the configuration process. It works fine except the case when we build for x86_64 iOS simulator: one the one hand we get native code for build platform one the other hand we can not execute test program because it is based on iOS sdk. As result the <code>configure</code> script generates error.</p>\n<p>Frankly speaking I still do not fully understand the logic behind cross-compilation check, however I've found workaround for building Protobuf and TensorFlow for all platforms including x86_64 iOS simulator. The workaround is simple: just remove <code>--build=x86_64-apple-${OSX_VERSION} \\</code> string for x86_64 in <code>compile_ios_protobuf.sh</code> file. Note, for consistency I also removed same strings for all other platforms (x386, armv7, armv7s, arm64), however it doesn't seems necessary.</p>\n<p>My platform: macOS Sierra 10.12.1, Xcode 8.1, autoconf 2.69 (installed via homebrew).</p>", "body_text": "Seems like the reason why compilation fails does not directly related to TensorFlow or even Protobuf:\nThe configure script of Protobuf (generated by autogen) has non trivial logic for detecting cross-compilation (currently there checks can be found in lines 3918\u20133976 at configure file). It tries to compile some simple C programs into executable and run it during the configuration process. It works fine except the case when we build for x86_64 iOS simulator: one the one hand we get native code for build platform one the other hand we can not execute test program because it is based on iOS sdk. As result the configure script generates error.\nFrankly speaking I still do not fully understand the logic behind cross-compilation check, however I've found workaround for building Protobuf and TensorFlow for all platforms including x86_64 iOS simulator. The workaround is simple: just remove --build=x86_64-apple-${OSX_VERSION} \\ string for x86_64 in compile_ios_protobuf.sh file. Note, for consistency I also removed same strings for all other platforms (x386, armv7, armv7s, arm64), however it doesn't seems necessary.\nMy platform: macOS Sierra 10.12.1, Xcode 8.1, autoconf 2.69 (installed via homebrew).", "body": "Seems like the reason why compilation fails does not directly related to TensorFlow or even Protobuf:\r\n\r\nThe `configure` script of Protobuf (generated by `autogen`) has non trivial logic for detecting cross-compilation (currently there checks can be found in lines 3918\u20133976 at `configure` file). It tries to compile some simple C programs into executable and run it during the configuration process. It works fine except the case when we build for x86_64 iOS simulator: one the one hand we get native code for build platform one the other hand we can not execute test program because it is based on iOS sdk. As result the `configure` script generates error.\r\n\r\nFrankly speaking I still do not fully understand the logic behind cross-compilation check, however I've found workaround for building Protobuf and TensorFlow for all platforms including x86_64 iOS simulator. The workaround is simple: just remove `--build=x86_64-apple-${OSX_VERSION} \\` string for x86_64 in `compile_ios_protobuf.sh` file. Note, for consistency I also removed same strings for all other platforms (x386, armv7, armv7s, arm64), however it doesn't seems necessary.\r\n\r\nMy platform: macOS Sierra 10.12.1, Xcode 8.1, autoconf 2.69 (installed via homebrew)."}