{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20479", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20479/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20479/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20479/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/20479", "id": 337593517, "node_id": "MDExOlB1bGxSZXF1ZXN0MTk4NzM2Njc2", "number": 20479, "title": "bugfix: cleanup CondContext at exception", "user": {"login": "naurril", "id": 7512334, "node_id": "MDQ6VXNlcjc1MTIzMzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/7512334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/naurril", "html_url": "https://github.com/naurril", "followers_url": "https://api.github.com/users/naurril/followers", "following_url": "https://api.github.com/users/naurril/following{/other_user}", "gists_url": "https://api.github.com/users/naurril/gists{/gist_id}", "starred_url": "https://api.github.com/users/naurril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/naurril/subscriptions", "organizations_url": "https://api.github.com/users/naurril/orgs", "repos_url": "https://api.github.com/users/naurril/repos", "events_url": "https://api.github.com/users/naurril/events{/privacy}", "received_events_url": "https://api.github.com/users/naurril/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 419840263, "node_id": "MDU6TGFiZWw0MTk4NDAyNjM=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/awaiting%20testing%20(then%20merge)", "name": "awaiting testing (then merge)", "color": "c2e0c6", "default": false}, {"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}, {"id": 987666414, "node_id": "MDU6TGFiZWw5ODc2NjY0MTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/ready%20to%20pull", "name": "ready to pull", "color": "2cd643", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "martinwicke", "id": 577277, "node_id": "MDQ6VXNlcjU3NzI3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/577277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinwicke", "html_url": "https://github.com/martinwicke", "followers_url": "https://api.github.com/users/martinwicke/followers", "following_url": "https://api.github.com/users/martinwicke/following{/other_user}", "gists_url": "https://api.github.com/users/martinwicke/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinwicke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinwicke/subscriptions", "organizations_url": "https://api.github.com/users/martinwicke/orgs", "repos_url": "https://api.github.com/users/martinwicke/repos", "events_url": "https://api.github.com/users/martinwicke/events{/privacy}", "received_events_url": "https://api.github.com/users/martinwicke/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "martinwicke", "id": 577277, "node_id": "MDQ6VXNlcjU3NzI3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/577277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinwicke", "html_url": "https://github.com/martinwicke", "followers_url": "https://api.github.com/users/martinwicke/followers", "following_url": "https://api.github.com/users/martinwicke/following{/other_user}", "gists_url": "https://api.github.com/users/martinwicke/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinwicke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinwicke/subscriptions", "organizations_url": "https://api.github.com/users/martinwicke/orgs", "repos_url": "https://api.github.com/users/martinwicke/repos", "events_url": "https://api.github.com/users/martinwicke/events{/privacy}", "received_events_url": "https://api.github.com/users/martinwicke/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-07-02T16:56:30Z", "updated_at": "2018-08-13T15:26:00Z", "closed_at": "2018-08-11T01:29:01Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/20479", "html_url": "https://github.com/tensorflow/tensorflow/pull/20479", "diff_url": "https://github.com/tensorflow/tensorflow/pull/20479.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/20479.patch"}, "body_html": "<p>This fix is to solve a bug: if an exception occurred in tf.cond(),  the CondContext is left uncleaned. The bug causes unexpected problems, for instance, <code>tf.Variable(tf.zeros(20))</code> will not work!</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> \n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> a <span class=\"pl-k\">=</span> tf.constant(<span class=\"pl-c1\">20</span>)\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> c <span class=\"pl-k\">=</span> tf.cond(a<span class=\"pl-k\">&gt;</span><span class=\"pl-c1\">1</span>, <span class=\"pl-k\">lambda</span>: a, <span class=\"pl-k\">lambda</span>: b)\nTraceback (most recent call last):\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>&lt;stdin&gt;<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">1</span>, <span class=\"pl-k\">in</span> <span class=\"pl-k\">&lt;</span>module<span class=\"pl-k\">&gt;</span>\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/home/tf/.local/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">432</span>, <span class=\"pl-k\">in</span> new_func\n    <span class=\"pl-k\">return</span> func(<span class=\"pl-k\">*</span>args, <span class=\"pl-k\">**</span>kwargs)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/home/tf/.local/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">2072</span>, <span class=\"pl-k\">in</span> cond\n    orig_res_f, res_f <span class=\"pl-k\">=</span> context_f.BuildCondBranch(false_fn)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/home/tf/.local/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">1913</span>, <span class=\"pl-k\">in</span> BuildCondBranch\n    original_result <span class=\"pl-k\">=</span> fn()\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>&lt;stdin&gt;<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">1</span>, <span class=\"pl-k\">in</span> <span class=\"pl-k\">&lt;</span><span class=\"pl-k\">lambda</span>&gt;\n<span class=\"pl-c1\">NameError</span>: name <span class=\"pl-s\"><span class=\"pl-pds\">'</span>b<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">is</span> <span class=\"pl-k\">not</span> defined\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> tf.get_default_graph()._get_control_flow_context()\n<span class=\"pl-k\">&lt;</span>tensorflow.python.ops.control_flow_ops.CondContext <span class=\"pl-c1\">object</span> at <span class=\"pl-c1\"><span class=\"pl-k\">0x</span>7fefe2617630</span><span class=\"pl-k\">&gt;</span>\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> \n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> tf.Variable(tf.zeros(<span class=\"pl-c1\">20</span>))\nTraceback (most recent call last):\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>&lt;stdin&gt;<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">1</span>, <span class=\"pl-k\">in</span> <span class=\"pl-k\">&lt;</span>module<span class=\"pl-k\">&gt;</span>\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/home/tf/.local/lib/python3.6/site-packages/tensorflow/python/ops/variables.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">235</span>, <span class=\"pl-k\">in</span> <span class=\"pl-c1\">__init__</span>\n    constraint<span class=\"pl-k\">=</span>constraint)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/home/tf/.local/lib/python3.6/site-packages/tensorflow/python/ops/variables.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">362</span>, <span class=\"pl-k\">in</span> _init_from_args\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>initializer.<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%</span> name)\n<span class=\"pl-c1\">ValueError</span>: Initializer <span class=\"pl-k\">for</span> variable Variable<span class=\"pl-k\">/</span> <span class=\"pl-k\">is</span> <span class=\"pl-k\">from</span> inside a control<span class=\"pl-k\">-</span>flow construct, such <span class=\"pl-k\">as</span> a loop <span class=\"pl-k\">or</span> conditional. When creating a variable inside a loop <span class=\"pl-k\">or</span> conditional, use a <span class=\"pl-k\">lambda</span> <span class=\"pl-k\">as</span> the initializer.</pre></div>", "body_text": "This fix is to solve a bug: if an exception occurred in tf.cond(),  the CondContext is left uncleaned. The bug causes unexpected problems, for instance, tf.Variable(tf.zeros(20)) will not work!\n>>> import tensorflow as tf\n>>> \n>>> a = tf.constant(20)\n>>> c = tf.cond(a>1, lambda: a, lambda: b)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/home/tf/.local/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py\", line 432, in new_func\n    return func(*args, **kwargs)\n  File \"/home/tf/.local/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 2072, in cond\n    orig_res_f, res_f = context_f.BuildCondBranch(false_fn)\n  File \"/home/tf/.local/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 1913, in BuildCondBranch\n    original_result = fn()\n  File \"<stdin>\", line 1, in <lambda>\nNameError: name 'b' is not defined\n>>> tf.get_default_graph()._get_control_flow_context()\n<tensorflow.python.ops.control_flow_ops.CondContext object at 0x7fefe2617630>\n>>> \n>>> tf.Variable(tf.zeros(20))\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/home/tf/.local/lib/python3.6/site-packages/tensorflow/python/ops/variables.py\", line 235, in __init__\n    constraint=constraint)\n  File \"/home/tf/.local/lib/python3.6/site-packages/tensorflow/python/ops/variables.py\", line 362, in _init_from_args\n    \"initializer.\" % name)\nValueError: Initializer for variable Variable/ is from inside a control-flow construct, such as a loop or conditional. When creating a variable inside a loop or conditional, use a lambda as the initializer.", "body": "This fix is to solve a bug: if an exception occurred in tf.cond(),  the CondContext is left uncleaned. The bug causes unexpected problems, for instance, ```tf.Variable(tf.zeros(20))``` will not work!\r\n\r\n\r\n```python\r\n>>> import tensorflow as tf\r\n>>> \r\n>>> a = tf.constant(20)\r\n>>> c = tf.cond(a>1, lambda: a, lambda: b)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/tf/.local/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py\", line 432, in new_func\r\n    return func(*args, **kwargs)\r\n  File \"/home/tf/.local/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 2072, in cond\r\n    orig_res_f, res_f = context_f.BuildCondBranch(false_fn)\r\n  File \"/home/tf/.local/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 1913, in BuildCondBranch\r\n    original_result = fn()\r\n  File \"<stdin>\", line 1, in <lambda>\r\nNameError: name 'b' is not defined\r\n>>> tf.get_default_graph()._get_control_flow_context()\r\n<tensorflow.python.ops.control_flow_ops.CondContext object at 0x7fefe2617630>\r\n>>> \r\n>>> tf.Variable(tf.zeros(20))\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/tf/.local/lib/python3.6/site-packages/tensorflow/python/ops/variables.py\", line 235, in __init__\r\n    constraint=constraint)\r\n  File \"/home/tf/.local/lib/python3.6/site-packages/tensorflow/python/ops/variables.py\", line 362, in _init_from_args\r\n    \"initializer.\" % name)\r\nValueError: Initializer for variable Variable/ is from inside a control-flow construct, such as a loop or conditional. When creating a variable inside a loop or conditional, use a lambda as the initializer.\r\n```"}