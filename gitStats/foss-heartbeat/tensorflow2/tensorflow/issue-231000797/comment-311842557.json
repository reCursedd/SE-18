{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/311842557", "html_url": "https://github.com/tensorflow/tensorflow/issues/10157#issuecomment-311842557", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10157", "id": 311842557, "node_id": "MDEyOklzc3VlQ29tbWVudDMxMTg0MjU1Nw==", "user": {"login": "gogo40", "id": 1184266, "node_id": "MDQ6VXNlcjExODQyNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1184266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gogo40", "html_url": "https://github.com/gogo40", "followers_url": "https://api.github.com/users/gogo40/followers", "following_url": "https://api.github.com/users/gogo40/following{/other_user}", "gists_url": "https://api.github.com/users/gogo40/gists{/gist_id}", "starred_url": "https://api.github.com/users/gogo40/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gogo40/subscriptions", "organizations_url": "https://api.github.com/users/gogo40/orgs", "repos_url": "https://api.github.com/users/gogo40/repos", "events_url": "https://api.github.com/users/gogo40/events{/privacy}", "received_events_url": "https://api.github.com/users/gogo40/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-29T02:11:03Z", "updated_at": "2017-06-29T02:13:38Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=25232145\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/drormeir\">@drormeir</a> I fixed this problem editing the file  Eigen/src/Core/util/MKL_support.h</p>\n<p>I added the following code at line 116:</p>\n<pre><code>+#ifdef EIGEN_BLAS_INDEX\n+typedef EIGEN_BLAS_INDEX BlasIndex;\n+#elif defined(EIGEN_USE_MKL)\n typedef MKL_INT BlasIndex;\n #else\n typedef int BlasIndex;\n #endif\n</code></pre>\n<p>and in my CMakeLists I did:</p>\n<pre><code>if (USE_MKL)\n    find_package(MKL REQUIRED)\n    include_directories(${MKL_INCLUDE_DIRS})\n    set(EXTRA_LIBRARIES ${EXTRA_LIBRARIES} ${MKL_LIBRARIES})\n    add_definitions(-DENABLE_MKL)\n    add_definitions(-DMKL_LP64)\n    add_definitions(-DEIGEN_BLAS_INDEX=int)\nendif (USE_MKL)\n</code></pre>\n<p>This problem is a conflict between MKL_INT and BLAS index type.  In my case, the BLAS is using int as index and MKL_INT is a long long. I did this workaround and everything is working fine.</p>\n<p>Also, I did a pull request to eigen repository. I`m waiting to be accepted.</p>\n<p><a href=\"https://bitbucket.org/eigen/eigen/pull-requests/320/add-macro-to-define-blas-index-type/diff#comment-39775997\" rel=\"nofollow\">https://bitbucket.org/eigen/eigen/pull-requests/320/add-macro-to-define-blas-index-type/diff#comment-39775997</a></p>", "body_text": "@drormeir I fixed this problem editing the file  Eigen/src/Core/util/MKL_support.h\nI added the following code at line 116:\n+#ifdef EIGEN_BLAS_INDEX\n+typedef EIGEN_BLAS_INDEX BlasIndex;\n+#elif defined(EIGEN_USE_MKL)\n typedef MKL_INT BlasIndex;\n #else\n typedef int BlasIndex;\n #endif\n\nand in my CMakeLists I did:\nif (USE_MKL)\n    find_package(MKL REQUIRED)\n    include_directories(${MKL_INCLUDE_DIRS})\n    set(EXTRA_LIBRARIES ${EXTRA_LIBRARIES} ${MKL_LIBRARIES})\n    add_definitions(-DENABLE_MKL)\n    add_definitions(-DMKL_LP64)\n    add_definitions(-DEIGEN_BLAS_INDEX=int)\nendif (USE_MKL)\n\nThis problem is a conflict between MKL_INT and BLAS index type.  In my case, the BLAS is using int as index and MKL_INT is a long long. I did this workaround and everything is working fine.\nAlso, I did a pull request to eigen repository. I`m waiting to be accepted.\nhttps://bitbucket.org/eigen/eigen/pull-requests/320/add-macro-to-define-blas-index-type/diff#comment-39775997", "body": "@drormeir I fixed this problem editing the file  Eigen/src/Core/util/MKL_support.h\r\n\r\nI added the following code at line 116:\r\n\r\n```\r\n+#ifdef EIGEN_BLAS_INDEX\r\n+typedef EIGEN_BLAS_INDEX BlasIndex;\r\n+#elif defined(EIGEN_USE_MKL)\r\n typedef MKL_INT BlasIndex;\r\n #else\r\n typedef int BlasIndex;\r\n #endif\r\n```\r\n\r\nand in my CMakeLists I did:\r\n\r\n```\r\nif (USE_MKL)\r\n    find_package(MKL REQUIRED)\r\n    include_directories(${MKL_INCLUDE_DIRS})\r\n    set(EXTRA_LIBRARIES ${EXTRA_LIBRARIES} ${MKL_LIBRARIES})\r\n    add_definitions(-DENABLE_MKL)\r\n    add_definitions(-DMKL_LP64)\r\n    add_definitions(-DEIGEN_BLAS_INDEX=int)\r\nendif (USE_MKL)\r\n```\r\n\r\nThis problem is a conflict between MKL_INT and BLAS index type.  In my case, the BLAS is using int as index and MKL_INT is a long long. I did this workaround and everything is working fine.\r\n\r\nAlso, I did a pull request to eigen repository. I`m waiting to be accepted.\r\n\r\nhttps://bitbucket.org/eigen/eigen/pull-requests/320/add-macro-to-define-blas-index-type/diff#comment-39775997"}