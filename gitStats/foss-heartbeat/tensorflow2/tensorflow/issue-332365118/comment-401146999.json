{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/401146999", "html_url": "https://github.com/tensorflow/tensorflow/issues/20013#issuecomment-401146999", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20013", "id": 401146999, "node_id": "MDEyOklzc3VlQ29tbWVudDQwMTE0Njk5OQ==", "user": {"login": "wdirons", "id": 22967383, "node_id": "MDQ6VXNlcjIyOTY3Mzgz", "avatar_url": "https://avatars3.githubusercontent.com/u/22967383?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wdirons", "html_url": "https://github.com/wdirons", "followers_url": "https://api.github.com/users/wdirons/followers", "following_url": "https://api.github.com/users/wdirons/following{/other_user}", "gists_url": "https://api.github.com/users/wdirons/gists{/gist_id}", "starred_url": "https://api.github.com/users/wdirons/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wdirons/subscriptions", "organizations_url": "https://api.github.com/users/wdirons/orgs", "repos_url": "https://api.github.com/users/wdirons/repos", "events_url": "https://api.github.com/users/wdirons/events{/privacy}", "received_events_url": "https://api.github.com/users/wdirons/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-28T19:29:53Z", "updated_at": "2018-06-28T19:30:10Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I take the failing example, and run it thru numpy's linalg inverse method the inverse of 0 doesn't remain as 0 like on x86, it is populated with some non-logical value. This is breaking the method.</p>\n<p>Recreatable testcase:</p>\n<pre><code>docker run -idt --name $USER-temp ubuntu:18.04 bash\ndocker attach $USER-temp\n\napt update\napt install vim python python-pip\npip install numpy\nvi test.py\npython test.py\n\n\n\nwhere test.py is:\n\nimport numpy as np\n\n\nif __name__ == \"__main__\":\n    x_ = np.array([[[[1., 0.],\n                     [2., 3.]]],\n                   [[[4., 0.],\n                     [5., -6.]]]], dtype=np.float32)\n    print(x_)\n    x_inv_ = np.linalg.inv(x_)\n    print(x_inv_)\n\n\n\nx86:\n\nroot@08d7b342534c:/# python test.py\n[[[[ 1.  0.]\n   [ 2.  3.]]]\n\n\n [[[ 4.  0.]\n   [ 5. -6.]]]]\n[[[[ 1.          0.        ]\n   [-0.6666667   0.33333334]]]\n\n\n [[[ 0.25        0.        ]\n   [ 0.20833333 -0.16666667]]]]\n\n\n\n\nppc64le: \n\nroot@68c0b6023e55:/# python test.py\n[[[[ 1.  0.]\n   [ 2.  3.]]]\n\n\n [[[ 4.  0.]\n   [ 5. -6.]]]]\n[[[[ 1.0000000e+00  2.7755576e-17]\n   [-6.6666669e-01  3.3333334e-01]]]\n\n\n [[[ 2.5000000e-01  1.1102230e-17]\n   [ 2.0833333e-01 -1.6666667e-01]]]]\nroot@68c0b6023e55:/#\n\n\n</code></pre>", "body_text": "I take the failing example, and run it thru numpy's linalg inverse method the inverse of 0 doesn't remain as 0 like on x86, it is populated with some non-logical value. This is breaking the method.\nRecreatable testcase:\ndocker run -idt --name $USER-temp ubuntu:18.04 bash\ndocker attach $USER-temp\n\napt update\napt install vim python python-pip\npip install numpy\nvi test.py\npython test.py\n\n\n\nwhere test.py is:\n\nimport numpy as np\n\n\nif __name__ == \"__main__\":\n    x_ = np.array([[[[1., 0.],\n                     [2., 3.]]],\n                   [[[4., 0.],\n                     [5., -6.]]]], dtype=np.float32)\n    print(x_)\n    x_inv_ = np.linalg.inv(x_)\n    print(x_inv_)\n\n\n\nx86:\n\nroot@08d7b342534c:/# python test.py\n[[[[ 1.  0.]\n   [ 2.  3.]]]\n\n\n [[[ 4.  0.]\n   [ 5. -6.]]]]\n[[[[ 1.          0.        ]\n   [-0.6666667   0.33333334]]]\n\n\n [[[ 0.25        0.        ]\n   [ 0.20833333 -0.16666667]]]]\n\n\n\n\nppc64le: \n\nroot@68c0b6023e55:/# python test.py\n[[[[ 1.  0.]\n   [ 2.  3.]]]\n\n\n [[[ 4.  0.]\n   [ 5. -6.]]]]\n[[[[ 1.0000000e+00  2.7755576e-17]\n   [-6.6666669e-01  3.3333334e-01]]]\n\n\n [[[ 2.5000000e-01  1.1102230e-17]\n   [ 2.0833333e-01 -1.6666667e-01]]]]\nroot@68c0b6023e55:/#", "body": "I take the failing example, and run it thru numpy's linalg inverse method the inverse of 0 doesn't remain as 0 like on x86, it is populated with some non-logical value. This is breaking the method.\r\n\r\nRecreatable testcase:\r\n\r\n```\r\ndocker run -idt --name $USER-temp ubuntu:18.04 bash\r\ndocker attach $USER-temp\r\n\r\napt update\r\napt install vim python python-pip\r\npip install numpy\r\nvi test.py\r\npython test.py\r\n\r\n\r\n\r\nwhere test.py is:\r\n\r\nimport numpy as np\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    x_ = np.array([[[[1., 0.],\r\n                     [2., 3.]]],\r\n                   [[[4., 0.],\r\n                     [5., -6.]]]], dtype=np.float32)\r\n    print(x_)\r\n    x_inv_ = np.linalg.inv(x_)\r\n    print(x_inv_)\r\n\r\n\r\n\r\nx86:\r\n\r\nroot@08d7b342534c:/# python test.py\r\n[[[[ 1.  0.]\r\n   [ 2.  3.]]]\r\n\r\n\r\n [[[ 4.  0.]\r\n   [ 5. -6.]]]]\r\n[[[[ 1.          0.        ]\r\n   [-0.6666667   0.33333334]]]\r\n\r\n\r\n [[[ 0.25        0.        ]\r\n   [ 0.20833333 -0.16666667]]]]\r\n\r\n\r\n\r\n\r\nppc64le: \r\n\r\nroot@68c0b6023e55:/# python test.py\r\n[[[[ 1.  0.]\r\n   [ 2.  3.]]]\r\n\r\n\r\n [[[ 4.  0.]\r\n   [ 5. -6.]]]]\r\n[[[[ 1.0000000e+00  2.7755576e-17]\r\n   [-6.6666669e-01  3.3333334e-01]]]\r\n\r\n\r\n [[[ 2.5000000e-01  1.1102230e-17]\r\n   [ 2.0833333e-01 -1.6666667e-01]]]]\r\nroot@68c0b6023e55:/#\r\n\r\n\r\n```"}