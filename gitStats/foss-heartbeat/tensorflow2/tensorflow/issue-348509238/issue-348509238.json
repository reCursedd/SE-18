{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21461", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21461/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21461/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21461/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21461", "id": 348509238, "node_id": "MDU6SXNzdWUzNDg1MDkyMzg=", "number": 21461, "title": "Bazel: use Tensorflow as external dependency", "user": {"login": "nmerino", "id": 16552301, "node_id": "MDQ6VXNlcjE2NTUyMzAx", "avatar_url": "https://avatars3.githubusercontent.com/u/16552301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nmerino", "html_url": "https://github.com/nmerino", "followers_url": "https://api.github.com/users/nmerino/followers", "following_url": "https://api.github.com/users/nmerino/following{/other_user}", "gists_url": "https://api.github.com/users/nmerino/gists{/gist_id}", "starred_url": "https://api.github.com/users/nmerino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nmerino/subscriptions", "organizations_url": "https://api.github.com/users/nmerino/orgs", "repos_url": "https://api.github.com/users/nmerino/repos", "events_url": "https://api.github.com/users/nmerino/events{/privacy}", "received_events_url": "https://api.github.com/users/nmerino/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}, {"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "drpngx", "id": 20959853, "node_id": "MDQ6VXNlcjIwOTU5ODUz", "avatar_url": "https://avatars1.githubusercontent.com/u/20959853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drpngx", "html_url": "https://github.com/drpngx", "followers_url": "https://api.github.com/users/drpngx/followers", "following_url": "https://api.github.com/users/drpngx/following{/other_user}", "gists_url": "https://api.github.com/users/drpngx/gists{/gist_id}", "starred_url": "https://api.github.com/users/drpngx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drpngx/subscriptions", "organizations_url": "https://api.github.com/users/drpngx/orgs", "repos_url": "https://api.github.com/users/drpngx/repos", "events_url": "https://api.github.com/users/drpngx/events{/privacy}", "received_events_url": "https://api.github.com/users/drpngx/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "drpngx", "id": 20959853, "node_id": "MDQ6VXNlcjIwOTU5ODUz", "avatar_url": "https://avatars1.githubusercontent.com/u/20959853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drpngx", "html_url": "https://github.com/drpngx", "followers_url": "https://api.github.com/users/drpngx/followers", "following_url": "https://api.github.com/users/drpngx/following{/other_user}", "gists_url": "https://api.github.com/users/drpngx/gists{/gist_id}", "starred_url": "https://api.github.com/users/drpngx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drpngx/subscriptions", "organizations_url": "https://api.github.com/users/drpngx/orgs", "repos_url": "https://api.github.com/users/drpngx/repos", "events_url": "https://api.github.com/users/drpngx/events{/privacy}", "received_events_url": "https://api.github.com/users/drpngx/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2018-08-07T22:26:36Z", "updated_at": "2018-11-19T17:26:41Z", "closed_at": "2018-11-19T17:26:41Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Ubuntu 17.10</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>:</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>:  1.9.0</li>\n<li><strong>Python version</strong>: 2.7.14</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.14.1</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:</li>\n<li><strong>CUDA/cuDNN version</strong>:</li>\n<li><strong>GPU model and memory</strong>:</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<pre><code>$ bazel run :hello_world\nINFO: Build options have changed, discarding analysis cache.\nINFO: Analysed target //:hello_world (29 packages loaded).\nINFO: Found 1 target...\nTarget //:hello_world up-to-date:\n  bazel-bin/hello_world\nINFO: Elapsed time: 7.108s, Critical Path: 0.32s\nINFO: 1 process, local.\nINFO: Build completed successfully, 4 total actions\nINFO: Build completed successfully, 4 total actions\nTraceback (most recent call last):\n  File \"/home/nmerino/.cache/bazel/_bazel_nmerino/daaf1ed794b21b41620d835ce6042e7a/execroot/__main__/bazel-out/k8-fastbuild/bin/hello_world.runfiles/__main__/hello_world.py\", line 1, in &lt;module&gt;\n    import tensorflow as tf\nImportError: No module named tensorflow\n</code></pre>\n<h3>Describe the problem</h3>\n<p>Hey there! I'm trying to import Tensorflow in my current project, which use Bazel as its build tool. For some reason Bazel cannot find Tensorflow even though it is specified in the requirements file. As Bazel is the building tool for Tensorflow, and also gaining popularity in the community I would like if you could help me solving this issue.<br>\n<em>Just in case you are wondering I'm not trying to use Tensorflow to infer stuffs, rather to serialize data to TFRecords.</em></p>\n<h3>Source code / logs</h3>\n<p><code>hello_world.py</code></p>\n<pre><code>import tensorflow as tf\n\nmsg = tf.constant('Hello World!')\n\nwith tf.Session() as sess:\n\tprint sess.run(msg)\n</code></pre>\n<p><code>WORKSPACE</code></p>\n<pre><code>git_repository(\n  name = \"io_bazel_rules_python\",\n  remote = \"https://github.com/bazelbuild/rules_python.git\",\n  commit = \"44711d8ef543f6232aec8445fb5adce9a04767f9\")\n\nload(\n    \"@io_bazel_rules_python//python:pip.bzl\",\n    \"pip_repositories\",\n    \"pip_import\")\npip_repositories()\npip_import(\n    name = \"pip\",\n    requirements = \"//:requirements.txt\")\nload(\n    \"@pip//:requirements.bzl\",\n    pip_install = \"pip_install\")\npip_install()\n</code></pre>\n<p><code>BUILD.bazel</code></p>\n<pre><code>package(default_visibility = [\"//visibility:public\"])\nload(\n    \"@pip//:requirements.bzl\",\n    \"requirement\")\nload(\n    \"@io_bazel_rules_python//python:python.bzl\",\n    \"py_binary\",\n    \"py_library\")\n\npy_binary(\n    name = \"hello_world\",\n    srcs = [\n        \"hello_world.py\"\n    ],\n    deps = [\n        requirement(\"tensorflow\"),\n    ]\n)\n</code></pre>\n<p><code>requirements.txt</code></p>\n<pre><code>tensorflow==1.9.0\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 17.10\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below):  1.9.0\nPython version: 2.7.14\nBazel version (if compiling from source): 0.14.1\nGCC/Compiler version (if compiling from source):\nCUDA/cuDNN version:\nGPU model and memory:\nExact command to reproduce:\n\n$ bazel run :hello_world\nINFO: Build options have changed, discarding analysis cache.\nINFO: Analysed target //:hello_world (29 packages loaded).\nINFO: Found 1 target...\nTarget //:hello_world up-to-date:\n  bazel-bin/hello_world\nINFO: Elapsed time: 7.108s, Critical Path: 0.32s\nINFO: 1 process, local.\nINFO: Build completed successfully, 4 total actions\nINFO: Build completed successfully, 4 total actions\nTraceback (most recent call last):\n  File \"/home/nmerino/.cache/bazel/_bazel_nmerino/daaf1ed794b21b41620d835ce6042e7a/execroot/__main__/bazel-out/k8-fastbuild/bin/hello_world.runfiles/__main__/hello_world.py\", line 1, in <module>\n    import tensorflow as tf\nImportError: No module named tensorflow\n\nDescribe the problem\nHey there! I'm trying to import Tensorflow in my current project, which use Bazel as its build tool. For some reason Bazel cannot find Tensorflow even though it is specified in the requirements file. As Bazel is the building tool for Tensorflow, and also gaining popularity in the community I would like if you could help me solving this issue.\nJust in case you are wondering I'm not trying to use Tensorflow to infer stuffs, rather to serialize data to TFRecords.\nSource code / logs\nhello_world.py\nimport tensorflow as tf\n\nmsg = tf.constant('Hello World!')\n\nwith tf.Session() as sess:\n\tprint sess.run(msg)\n\nWORKSPACE\ngit_repository(\n  name = \"io_bazel_rules_python\",\n  remote = \"https://github.com/bazelbuild/rules_python.git\",\n  commit = \"44711d8ef543f6232aec8445fb5adce9a04767f9\")\n\nload(\n    \"@io_bazel_rules_python//python:pip.bzl\",\n    \"pip_repositories\",\n    \"pip_import\")\npip_repositories()\npip_import(\n    name = \"pip\",\n    requirements = \"//:requirements.txt\")\nload(\n    \"@pip//:requirements.bzl\",\n    pip_install = \"pip_install\")\npip_install()\n\nBUILD.bazel\npackage(default_visibility = [\"//visibility:public\"])\nload(\n    \"@pip//:requirements.bzl\",\n    \"requirement\")\nload(\n    \"@io_bazel_rules_python//python:python.bzl\",\n    \"py_binary\",\n    \"py_library\")\n\npy_binary(\n    name = \"hello_world\",\n    srcs = [\n        \"hello_world.py\"\n    ],\n    deps = [\n        requirement(\"tensorflow\"),\n    ]\n)\n\nrequirements.txt\ntensorflow==1.9.0", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 17.10\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**:\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**:  1.9.0\r\n- **Python version**: 2.7.14\r\n- **Bazel version (if compiling from source)**: 0.14.1\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**:\r\n- **GPU model and memory**:\r\n- **Exact command to reproduce**:\r\n\r\n```\r\n$ bazel run :hello_world\r\nINFO: Build options have changed, discarding analysis cache.\r\nINFO: Analysed target //:hello_world (29 packages loaded).\r\nINFO: Found 1 target...\r\nTarget //:hello_world up-to-date:\r\n  bazel-bin/hello_world\r\nINFO: Elapsed time: 7.108s, Critical Path: 0.32s\r\nINFO: 1 process, local.\r\nINFO: Build completed successfully, 4 total actions\r\nINFO: Build completed successfully, 4 total actions\r\nTraceback (most recent call last):\r\n  File \"/home/nmerino/.cache/bazel/_bazel_nmerino/daaf1ed794b21b41620d835ce6042e7a/execroot/__main__/bazel-out/k8-fastbuild/bin/hello_world.runfiles/__main__/hello_world.py\", line 1, in <module>\r\n    import tensorflow as tf\r\nImportError: No module named tensorflow\r\n```\r\n### Describe the problem\r\nHey there! I'm trying to import Tensorflow in my current project, which use Bazel as its build tool. For some reason Bazel cannot find Tensorflow even though it is specified in the requirements file. As Bazel is the building tool for Tensorflow, and also gaining popularity in the community I would like if you could help me solving this issue.\r\n_Just in case you are wondering I'm not trying to use Tensorflow to infer stuffs, rather to serialize data to TFRecords._\r\n\r\n### Source code / logs\r\n\r\n`hello_world.py`\r\n```\r\nimport tensorflow as tf\r\n\r\nmsg = tf.constant('Hello World!')\r\n\r\nwith tf.Session() as sess:\r\n\tprint sess.run(msg)\r\n```\r\n`WORKSPACE`\r\n```\r\ngit_repository(\r\n  name = \"io_bazel_rules_python\",\r\n  remote = \"https://github.com/bazelbuild/rules_python.git\",\r\n  commit = \"44711d8ef543f6232aec8445fb5adce9a04767f9\")\r\n\r\nload(\r\n    \"@io_bazel_rules_python//python:pip.bzl\",\r\n    \"pip_repositories\",\r\n    \"pip_import\")\r\npip_repositories()\r\npip_import(\r\n    name = \"pip\",\r\n    requirements = \"//:requirements.txt\")\r\nload(\r\n    \"@pip//:requirements.bzl\",\r\n    pip_install = \"pip_install\")\r\npip_install()\r\n```\r\n`BUILD.bazel`\r\n```\r\npackage(default_visibility = [\"//visibility:public\"])\r\nload(\r\n    \"@pip//:requirements.bzl\",\r\n    \"requirement\")\r\nload(\r\n    \"@io_bazel_rules_python//python:python.bzl\",\r\n    \"py_binary\",\r\n    \"py_library\")\r\n\r\npy_binary(\r\n    name = \"hello_world\",\r\n    srcs = [\r\n        \"hello_world.py\"\r\n    ],\r\n    deps = [\r\n        requirement(\"tensorflow\"),\r\n    ]\r\n)\r\n```\r\n`requirements.txt`\r\n```\r\ntensorflow==1.9.0\r\n```"}