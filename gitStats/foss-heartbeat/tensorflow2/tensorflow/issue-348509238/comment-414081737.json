{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/414081737", "html_url": "https://github.com/tensorflow/tensorflow/issues/21461#issuecomment-414081737", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21461", "id": 414081737, "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDA4MTczNw==", "user": {"login": "nmerino", "id": 16552301, "node_id": "MDQ6VXNlcjE2NTUyMzAx", "avatar_url": "https://avatars3.githubusercontent.com/u/16552301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nmerino", "html_url": "https://github.com/nmerino", "followers_url": "https://api.github.com/users/nmerino/followers", "following_url": "https://api.github.com/users/nmerino/following{/other_user}", "gists_url": "https://api.github.com/users/nmerino/gists{/gist_id}", "starred_url": "https://api.github.com/users/nmerino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nmerino/subscriptions", "organizations_url": "https://api.github.com/users/nmerino/orgs", "repos_url": "https://api.github.com/users/nmerino/repos", "events_url": "https://api.github.com/users/nmerino/events{/privacy}", "received_events_url": "https://api.github.com/users/nmerino/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-18T19:39:23Z", "updated_at": "2018-08-18T19:39:23Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=20959853\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/drpngx\">@drpngx</a> when the virtualenv is active, it does.<br>\nI came up with a solution to this issue based on how TF Serving manage TF as an external dependency.</p>\n<pre><code>$ bazel build --define=grpc_no_ares=true :hello_world\n$ bazel-bin/hello_world\n2018-08-18 13:58:37.648246: I external/org_tensorflow/tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.2 AVX\nHello World!\n</code></pre>\n<h3>Source code</h3>\n<p><code>hello_world.py</code></p>\n<pre><code>import tensorflow as tf\n\nmsg = tf.constant('Hello World!')\n\nwith tf.Session() as sess:\n\tprint sess.run(msg)\n</code></pre>\n<p><code>WORKSPACE</code></p>\n<pre><code>workspace(name=\"hello_world\")\n\nload(\":tf_repo.bzl\", \"tensorflow_http_archive\")\n\ntensorflow_http_archive(\n    name = \"org_tensorflow\",\n    sha256 = \"696c4906d6536ed8d9f8f13c4927d3ccf36dcf3e13bb352ab80cba6b1b9038d4\",\n    git_commit = \"25c197e02393bd44f50079945409009dd4d434f8\",\t# TF 1.9.0\n)\n\n# TensorFlow depends on \"io_bazel_rules_closure\" so we need this here.\n# Needs to be kept in sync with the same target in TensorFlow's WORKSPACE file.\nhttp_archive(\n    name = \"io_bazel_rules_closure\",\n    sha256 = \"a38539c5b5c358548e75b44141b4ab637bba7c4dc02b46b1f62a96d6433f56ae\",\n    strip_prefix = \"rules_closure-dbb96841cc0a5fb2664c37822803b06dab20c7d1\",\n    urls = [\n        \"https://mirror.bazel.build/github.com/bazelbuild/rules_closure/archive/dbb96841cc0a5fb2664c37822803b06dab20c7d1.tar.gz\",\n        \"https://github.com/bazelbuild/rules_closure/archive/dbb96841cc0a5fb2664c37822803b06dab20c7d1.tar.gz\",  # 2018-04-13\n    ],\n)\n\nload(\"@org_tensorflow//tensorflow:workspace.bzl\", \"tf_workspace\")\n\ntf_workspace(path_prefix = \"\", tf_repo_name = \"org_tensorflow\")\n</code></pre>\n<p><code>BUILD.bazel</code></p>\n<pre><code>package(default_visibility = [\"//visibility:public\"])\n\npy_binary(\n    name = \"hello_world\",\n    srcs = [\n        \"hello_world.py\"\n    ],\n    deps = [\n        \"@org_tensorflow//tensorflow:tensorflow_py\"\n    ],\n)\n</code></pre>\n<p><code>tf_repo.bzl</code></p>\n<pre><code>\"\"\" TensorFlow Http Archive\nModified http_arhive that allows us to override the TensorFlow commit that is\ndownloaded by setting an environment variable. This override is to be used for\ntesting purposes.\nAdd the following to your Bazel build command in order to override the\nTensorFlow revision.\nbuild: --action_env TF_REVISION=\"&lt;git commit hash&gt;\"\n  * `TF_REVISION`: tensorflow revision override (git commit hash)\n\"\"\"\n\n_TF_REVISION = \"TF_REVISION\"\n\ndef _tensorflow_http_archive(ctx):\n  git_commit = ctx.attr.git_commit\n  sha256 = ctx.attr.sha256\n\n  override_git_commit = ctx.os.environ.get(_TF_REVISION)\n  if override_git_commit:\n    sha256 = \"\"\n    git_commit = override_git_commit\n\n  strip_prefix = \"tensorflow-%s\" % git_commit\n  urls = [\n      \"https://mirror.bazel.build/github.com/tensorflow/tensorflow/archive/%s.tar.gz\" % git_commit,\n      \"https://github.com/tensorflow/tensorflow/archive/%s.tar.gz\" % git_commit,\n  ]\n  ctx.download_and_extract(\n      urls,\n      \"\",\n      sha256,\n      \"\",\n      strip_prefix)\n\ntensorflow_http_archive = repository_rule(\n    implementation=_tensorflow_http_archive,\n    attrs={\n        \"git_commit\": attr.string(mandatory=True),\n        \"sha256\": attr.string(mandatory=True),\n    })\n</code></pre>\n<p>This solution works, even though I think it would be great to perform the installation via pip, because building TF from source takes time.</p>\n<p>PS: If you try this with TF 1.10.0, it won't work with due to issue <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"349181771\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/21518\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/21518/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/21518\">#21518</a>.</p>", "body_text": "@drpngx when the virtualenv is active, it does.\nI came up with a solution to this issue based on how TF Serving manage TF as an external dependency.\n$ bazel build --define=grpc_no_ares=true :hello_world\n$ bazel-bin/hello_world\n2018-08-18 13:58:37.648246: I external/org_tensorflow/tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.2 AVX\nHello World!\n\nSource code\nhello_world.py\nimport tensorflow as tf\n\nmsg = tf.constant('Hello World!')\n\nwith tf.Session() as sess:\n\tprint sess.run(msg)\n\nWORKSPACE\nworkspace(name=\"hello_world\")\n\nload(\":tf_repo.bzl\", \"tensorflow_http_archive\")\n\ntensorflow_http_archive(\n    name = \"org_tensorflow\",\n    sha256 = \"696c4906d6536ed8d9f8f13c4927d3ccf36dcf3e13bb352ab80cba6b1b9038d4\",\n    git_commit = \"25c197e02393bd44f50079945409009dd4d434f8\",\t# TF 1.9.0\n)\n\n# TensorFlow depends on \"io_bazel_rules_closure\" so we need this here.\n# Needs to be kept in sync with the same target in TensorFlow's WORKSPACE file.\nhttp_archive(\n    name = \"io_bazel_rules_closure\",\n    sha256 = \"a38539c5b5c358548e75b44141b4ab637bba7c4dc02b46b1f62a96d6433f56ae\",\n    strip_prefix = \"rules_closure-dbb96841cc0a5fb2664c37822803b06dab20c7d1\",\n    urls = [\n        \"https://mirror.bazel.build/github.com/bazelbuild/rules_closure/archive/dbb96841cc0a5fb2664c37822803b06dab20c7d1.tar.gz\",\n        \"https://github.com/bazelbuild/rules_closure/archive/dbb96841cc0a5fb2664c37822803b06dab20c7d1.tar.gz\",  # 2018-04-13\n    ],\n)\n\nload(\"@org_tensorflow//tensorflow:workspace.bzl\", \"tf_workspace\")\n\ntf_workspace(path_prefix = \"\", tf_repo_name = \"org_tensorflow\")\n\nBUILD.bazel\npackage(default_visibility = [\"//visibility:public\"])\n\npy_binary(\n    name = \"hello_world\",\n    srcs = [\n        \"hello_world.py\"\n    ],\n    deps = [\n        \"@org_tensorflow//tensorflow:tensorflow_py\"\n    ],\n)\n\ntf_repo.bzl\n\"\"\" TensorFlow Http Archive\nModified http_arhive that allows us to override the TensorFlow commit that is\ndownloaded by setting an environment variable. This override is to be used for\ntesting purposes.\nAdd the following to your Bazel build command in order to override the\nTensorFlow revision.\nbuild: --action_env TF_REVISION=\"<git commit hash>\"\n  * `TF_REVISION`: tensorflow revision override (git commit hash)\n\"\"\"\n\n_TF_REVISION = \"TF_REVISION\"\n\ndef _tensorflow_http_archive(ctx):\n  git_commit = ctx.attr.git_commit\n  sha256 = ctx.attr.sha256\n\n  override_git_commit = ctx.os.environ.get(_TF_REVISION)\n  if override_git_commit:\n    sha256 = \"\"\n    git_commit = override_git_commit\n\n  strip_prefix = \"tensorflow-%s\" % git_commit\n  urls = [\n      \"https://mirror.bazel.build/github.com/tensorflow/tensorflow/archive/%s.tar.gz\" % git_commit,\n      \"https://github.com/tensorflow/tensorflow/archive/%s.tar.gz\" % git_commit,\n  ]\n  ctx.download_and_extract(\n      urls,\n      \"\",\n      sha256,\n      \"\",\n      strip_prefix)\n\ntensorflow_http_archive = repository_rule(\n    implementation=_tensorflow_http_archive,\n    attrs={\n        \"git_commit\": attr.string(mandatory=True),\n        \"sha256\": attr.string(mandatory=True),\n    })\n\nThis solution works, even though I think it would be great to perform the installation via pip, because building TF from source takes time.\nPS: If you try this with TF 1.10.0, it won't work with due to issue #21518.", "body": "@drpngx when the virtualenv is active, it does.\r\nI came up with a solution to this issue based on how TF Serving manage TF as an external dependency.\r\n\r\n```\r\n$ bazel build --define=grpc_no_ares=true :hello_world\r\n$ bazel-bin/hello_world\r\n2018-08-18 13:58:37.648246: I external/org_tensorflow/tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.2 AVX\r\nHello World!\r\n```\r\n### Source code\r\n`hello_world.py`\r\n```\r\nimport tensorflow as tf\r\n\r\nmsg = tf.constant('Hello World!')\r\n\r\nwith tf.Session() as sess:\r\n\tprint sess.run(msg)\r\n```\r\n`WORKSPACE`\r\n```\r\nworkspace(name=\"hello_world\")\r\n\r\nload(\":tf_repo.bzl\", \"tensorflow_http_archive\")\r\n\r\ntensorflow_http_archive(\r\n    name = \"org_tensorflow\",\r\n    sha256 = \"696c4906d6536ed8d9f8f13c4927d3ccf36dcf3e13bb352ab80cba6b1b9038d4\",\r\n    git_commit = \"25c197e02393bd44f50079945409009dd4d434f8\",\t# TF 1.9.0\r\n)\r\n\r\n# TensorFlow depends on \"io_bazel_rules_closure\" so we need this here.\r\n# Needs to be kept in sync with the same target in TensorFlow's WORKSPACE file.\r\nhttp_archive(\r\n    name = \"io_bazel_rules_closure\",\r\n    sha256 = \"a38539c5b5c358548e75b44141b4ab637bba7c4dc02b46b1f62a96d6433f56ae\",\r\n    strip_prefix = \"rules_closure-dbb96841cc0a5fb2664c37822803b06dab20c7d1\",\r\n    urls = [\r\n        \"https://mirror.bazel.build/github.com/bazelbuild/rules_closure/archive/dbb96841cc0a5fb2664c37822803b06dab20c7d1.tar.gz\",\r\n        \"https://github.com/bazelbuild/rules_closure/archive/dbb96841cc0a5fb2664c37822803b06dab20c7d1.tar.gz\",  # 2018-04-13\r\n    ],\r\n)\r\n\r\nload(\"@org_tensorflow//tensorflow:workspace.bzl\", \"tf_workspace\")\r\n\r\ntf_workspace(path_prefix = \"\", tf_repo_name = \"org_tensorflow\")\r\n```\r\n`BUILD.bazel`\r\n```\r\npackage(default_visibility = [\"//visibility:public\"])\r\n\r\npy_binary(\r\n    name = \"hello_world\",\r\n    srcs = [\r\n        \"hello_world.py\"\r\n    ],\r\n    deps = [\r\n        \"@org_tensorflow//tensorflow:tensorflow_py\"\r\n    ],\r\n)\r\n```\r\n`tf_repo.bzl`\r\n```\r\n\"\"\" TensorFlow Http Archive\r\nModified http_arhive that allows us to override the TensorFlow commit that is\r\ndownloaded by setting an environment variable. This override is to be used for\r\ntesting purposes.\r\nAdd the following to your Bazel build command in order to override the\r\nTensorFlow revision.\r\nbuild: --action_env TF_REVISION=\"<git commit hash>\"\r\n  * `TF_REVISION`: tensorflow revision override (git commit hash)\r\n\"\"\"\r\n\r\n_TF_REVISION = \"TF_REVISION\"\r\n\r\ndef _tensorflow_http_archive(ctx):\r\n  git_commit = ctx.attr.git_commit\r\n  sha256 = ctx.attr.sha256\r\n\r\n  override_git_commit = ctx.os.environ.get(_TF_REVISION)\r\n  if override_git_commit:\r\n    sha256 = \"\"\r\n    git_commit = override_git_commit\r\n\r\n  strip_prefix = \"tensorflow-%s\" % git_commit\r\n  urls = [\r\n      \"https://mirror.bazel.build/github.com/tensorflow/tensorflow/archive/%s.tar.gz\" % git_commit,\r\n      \"https://github.com/tensorflow/tensorflow/archive/%s.tar.gz\" % git_commit,\r\n  ]\r\n  ctx.download_and_extract(\r\n      urls,\r\n      \"\",\r\n      sha256,\r\n      \"\",\r\n      strip_prefix)\r\n\r\ntensorflow_http_archive = repository_rule(\r\n    implementation=_tensorflow_http_archive,\r\n    attrs={\r\n        \"git_commit\": attr.string(mandatory=True),\r\n        \"sha256\": attr.string(mandatory=True),\r\n    })\r\n```\r\nThis solution works, even though I think it would be great to perform the installation via pip, because building TF from source takes time.\r\n\r\nPS: If you try this with TF 1.10.0, it won't work with due to issue https://github.com/tensorflow/tensorflow/issues/21518. \r\n"}