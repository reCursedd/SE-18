{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7508", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7508/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7508/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7508/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/7508", "id": 207629988, "node_id": "MDU6SXNzdWUyMDc2Mjk5ODg=", "number": 7508, "title": "import_graph_def's input_map doesn't remap control inputs", "user": {"login": "malmaud", "id": 987837, "node_id": "MDQ6VXNlcjk4NzgzNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/987837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/malmaud", "html_url": "https://github.com/malmaud", "followers_url": "https://api.github.com/users/malmaud/followers", "following_url": "https://api.github.com/users/malmaud/following{/other_user}", "gists_url": "https://api.github.com/users/malmaud/gists{/gist_id}", "starred_url": "https://api.github.com/users/malmaud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/malmaud/subscriptions", "organizations_url": "https://api.github.com/users/malmaud/orgs", "repos_url": "https://api.github.com/users/malmaud/repos", "events_url": "https://api.github.com/users/malmaud/events{/privacy}", "received_events_url": "https://api.github.com/users/malmaud/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2017-02-14T20:39:01Z", "updated_at": "2018-02-08T00:47:59Z", "closed_at": "2018-02-08T00:47:59Z", "author_association": "CONTRIBUTOR", "body_html": "<p>If a graph <code>g</code> has a node <code>y</code> with a control input like <code>^x</code>, I would have thought that <code>tf.import_graph_def(g, input_map={\"x\": z})</code> would result in a graph having a node <code>y</code> with a control input<code>^z</code>.</p>\n<p>Instead I get an error: <code>ValueError: Attempted to map inputs that were not found in graph_def: [x:0]</code>.  This is on master.</p>\n<p>Complete example:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\ng1<span class=\"pl-k\">=</span>tf.Graph()\n<span class=\"pl-k\">with</span> g1.as_default():\n    x<span class=\"pl-k\">=</span>tf.constant(<span class=\"pl-c1\">0.0</span>, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>x<span class=\"pl-pds\">\"</span></span>)\n    <span class=\"pl-k\">with</span> tf.control_dependencies([x]):\n        y<span class=\"pl-k\">=</span>tf.constant(<span class=\"pl-c1\">1</span>, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>y<span class=\"pl-pds\">\"</span></span>)\ng2<span class=\"pl-k\">=</span>tf.Graph()\n<span class=\"pl-k\">with</span> g2.as_default():\n    z<span class=\"pl-k\">=</span>tf.constant(<span class=\"pl-c1\">1.0</span>, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>z<span class=\"pl-pds\">\"</span></span>)\n    tf.import_graph_def(g1.as_graph_def(), <span class=\"pl-v\">input_map</span><span class=\"pl-k\">=</span>{<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>x<span class=\"pl-pds\">\"</span></span>: z})\n</pre></div>", "body_text": "If a graph g has a node y with a control input like ^x, I would have thought that tf.import_graph_def(g, input_map={\"x\": z}) would result in a graph having a node y with a control input^z.\nInstead I get an error: ValueError: Attempted to map inputs that were not found in graph_def: [x:0].  This is on master.\nComplete example:\nimport tensorflow as tf\ng1=tf.Graph()\nwith g1.as_default():\n    x=tf.constant(0.0, name=\"x\")\n    with tf.control_dependencies([x]):\n        y=tf.constant(1, name=\"y\")\ng2=tf.Graph()\nwith g2.as_default():\n    z=tf.constant(1.0, name=\"z\")\n    tf.import_graph_def(g1.as_graph_def(), input_map={\"x\": z})", "body": "If a graph `g` has a node `y` with a control input like `^x`, I would have thought that `tf.import_graph_def(g, input_map={\"x\": z})` would result in a graph having a node `y` with a control input`^z`. \r\n\r\nInstead I get an error: `ValueError: Attempted to map inputs that were not found in graph_def: [x:0]`.  This is on master.\r\n\r\nComplete example: \r\n\r\n```python\r\nimport tensorflow as tf\r\ng1=tf.Graph()\r\nwith g1.as_default():\r\n    x=tf.constant(0.0, name=\"x\")\r\n    with tf.control_dependencies([x]):\r\n        y=tf.constant(1, name=\"y\")\r\ng2=tf.Graph()\r\nwith g2.as_default():\r\n    z=tf.constant(1.0, name=\"z\")\r\n    tf.import_graph_def(g1.as_graph_def(), input_map={\"x\": z})\r\n\r\n```"}