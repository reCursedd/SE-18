{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/228684217", "pull_request_review_id": 169023322, "id": 228684217, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyODY4NDIxNw==", "diff_hunk": "@@ -178,6 +179,108 @@ def model_fn():\n         self.assertEqual(z_val, 43.0)\n         self.assertEqual(f_val, 46.0)\n \n+  def _test_device_assignment_distributed_enable_partitioner(self,\n+                                                             task_type,\n+                                                             task_id,\n+                                                             num_gpus):\n+    worker_device = '/job:%s/replica:0/task:%d' % (task_type, task_id)\n+    d, _, sess_config = self._get_test_objects(task_type, task_id, num_gpus)\n+    num_shards = len(d.parameter_devices)\n+    partitioner = partitioned_variables.fixed_size_partitioner(num_shards)\n+    with ops.Graph().as_default(), \\\n+         self.cached_session(target=self._default_target,\n+                             config=sess_config) as sess, \\\n+         d.scope():\n+\n+      # Define a variable outside the call_for_each_tower scope. This is not\n+      # recommended.\n+      n = variable_scope.get_variable(\n+          'n',\n+          initializer=constant_op.constant([10.0, 20.0]),\n+          aggregation=variable_scope.VariableAggregation.SUM,\n+          partitioner=partitioner)\n+\n+      for part_id, var in enumerate(n):\n+        self.assertEqual(var.device, '/job:ps/task:%d' % part_id)\n+\n+      def model_fn():\n+        if num_gpus == 0:\n+          last_part_device = 'device:CPU:0'\n+        else:\n+          last_part_device = (\n+              'device:GPU:%d' %\n+              distribution_strategy_context.get_tower_context().tower_id)\n+\n+        a = constant_op.constant([1.0, 2.0])\n+        b = constant_op.constant([2.0, 3.0])\n+        c = a + b\n+        self.assertEqual(a.device, worker_device + '/' + last_part_device)", "path": "tensorflow/contrib/distribute/python/parameter_server_strategy_test.py", "position": null, "original_position": 47, "commit_id": "bdd60574d1b20f87c7ed60a0f04dd2dd2ecedc8e", "original_commit_id": "1f23c15b1b8f0122bfcd8b6a92c62c7c9ecfe65a", "user": {"login": "yuefengz", "id": 1647833, "node_id": "MDQ6VXNlcjE2NDc4MzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1647833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuefengz", "html_url": "https://github.com/yuefengz", "followers_url": "https://api.github.com/users/yuefengz/followers", "following_url": "https://api.github.com/users/yuefengz/following{/other_user}", "gists_url": "https://api.github.com/users/yuefengz/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuefengz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuefengz/subscriptions", "organizations_url": "https://api.github.com/users/yuefengz/orgs", "repos_url": "https://api.github.com/users/yuefengz/repos", "events_url": "https://api.github.com/users/yuefengz/events{/privacy}", "received_events_url": "https://api.github.com/users/yuefengz/received_events", "type": "User", "site_admin": false}, "body": "Is this part related to partitioned variable? Would you mind simplifying the test a little bit so that 1) there are no redundant testing logic and the result values of `y`, `z` and `f` are more obvious?", "created_at": "2018-10-26T22:49:41Z", "updated_at": "2018-10-30T03:59:57Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/23254#discussion_r228684217", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/23254", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/228684217"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/23254#discussion_r228684217"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/23254"}}, "body_html": "<p>Is this part related to partitioned variable? Would you mind simplifying the test a little bit so that 1) there are no redundant testing logic and the result values of <code>y</code>, <code>z</code> and <code>f</code> are more obvious?</p>", "body_text": "Is this part related to partitioned variable? Would you mind simplifying the test a little bit so that 1) there are no redundant testing logic and the result values of y, z and f are more obvious?"}