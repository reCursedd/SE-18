{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/152107014", "pull_request_review_id": 77918185, "id": 152107014, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MjEwNzAxNA==", "diff_hunk": "@@ -0,0 +1,127 @@\n+FROM ubuntu\n+\n+LABEL maintainer=\"Clayne Robison<clayne.b.robison@intel.com>\"\n+\n+# It is possible to override these for releases.\n+ARG TF_BRANCH=r1.4\n+ARG BAZEL_VERSION=0.7.0\n+ARG WHL_DIR=/whl\n+\n+RUN apt-get update && apt-get install -y --no-install-recommends \\\n+        build-essential \\\n+        curl \\\n+        git \\\n+        golang \\\n+        libcurl3-dev \\\n+        libfreetype6-dev \\\n+        libzmq3-dev \\\n+        pkg-config \\\n+        python-dev \\\n+        python-pip \\\n+        rsync \\\n+        software-properties-common \\\n+        unzip \\\n+        zip \\\n+        zlib1g-dev \\\n+        openjdk-8-jdk \\\n+        openjdk-8-jre-headless \\\n+        wget \\\n+\tlocate \\\n+\tvim \\\n+        && \\\n+    apt-get clean && \\\n+    rm -rf /var/lib/apt/lists/*\n+\n+RUN pip --no-cache-dir install --upgrade \\\n+        pip setuptools\n+\n+RUN pip --no-cache-dir install \\\n+        ipykernel \\\n+        matplotlib \\\n+        numpy \\\n+        scipy \\\n+        sklearn \\\n+        pandas \\\n+        wheel \\\n+        && \\\n+    python -m ipykernel.kernelspec\n+\n+# Set up Bazel.\n+\n+# Running bazel inside a `docker build` command causes trouble, cf:\n+#   https://github.com/bazelbuild/bazel/issues/134\n+# The easiest solution is to set up a bazelrc file forcing --batch.\n+RUN echo \"startup --batch\" >>/etc/bazel.bazelrc\n+# Similarly, we need to workaround sandboxing issues:\n+#   https://github.com/bazelbuild/bazel/issues/418\n+RUN echo \"build --spawn_strategy=standalone --genrule_strategy=standalone\" \\\n+    >>/etc/bazel.bazelrc\n+WORKDIR /\n+RUN mkdir /bazel && \\\n+    cd /bazel && \\\n+    wget --quiet https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh && \\\n+    wget --quiet https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE && \\\n+    chmod +x bazel-*.sh && \\\n+    ./bazel-$BAZEL_VERSION-installer-linux-x86_64.sh && \\\n+    rm -f /bazel/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh\n+\n+# Download and build TensorFlow.\n+WORKDIR /\n+RUN git clone https://github.com/tensorflow/tensorflow.git && \\\n+    cd tensorflow && \\\n+    git checkout ${TF_BRANCH}\n+WORKDIR /tensorflow\n+\n+# Configure the build for CPU with MKL by accepting default build options and\n+# setting library locations\n+ENV CI_BUILD_PYTHON=python \\\n+   LD_LIBRARY_PATH=${LD_LIBRARY_PATH} \\\n+    PYTHON_BIN_PATH=/usr/bin/python \\\n+    PYTHON_LIB_PATH=/usr/local/lib/python2.7/dist-packages \\\n+    CC_OPT_FLAGS='-march=native' \\\n+    TF_NEED_JEMALLOC=0 \\\n+    TF_NEED_GCP=0 \\\n+    TF_NEED_CUDA=0 \\\n+    TF_NEED_HDFS=0 \\\n+    TF_NEED_S3=0 \\\n+    TF_NEED_OPENCL=0 \\\n+    TF_NEED_GDR=0 \\\n+    TF_ENABLE_XLA=0 \\\n+    TF_NEED_VERBS=0 \\\n+    TF_NEED_MPI=0\n+RUN ./configure; exit 0 # ./configure whines unnecessarily\n+\n+# Build and Install TensorFlow.\n+RUN LD_LIBRARY_PATH=${LD_LIBRARY_PATH} \\\n+    bazel build --config=mkl \\\n+                --copt=\"-mfma\" \\\n+                --copt=\"-mavx2\" \\\n+\t\t--config=\"opt\" \\\n+               --copt=\"-march=native\" \\", "path": "tensorflow/tools/docker/Dockerfile.devel-cpu-mkl", "position": null, "original_position": 100, "commit_id": "526802e472b371c8e68f4fdf97bfe41b97c84801", "original_commit_id": "c17dba09a90771aaa5f3273e7c54c67aa0206579", "user": {"login": "claynerobison", "id": 23344461, "node_id": "MDQ6VXNlcjIzMzQ0NDYx", "avatar_url": "https://avatars1.githubusercontent.com/u/23344461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claynerobison", "html_url": "https://github.com/claynerobison", "followers_url": "https://api.github.com/users/claynerobison/followers", "following_url": "https://api.github.com/users/claynerobison/following{/other_user}", "gists_url": "https://api.github.com/users/claynerobison/gists{/gist_id}", "starred_url": "https://api.github.com/users/claynerobison/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claynerobison/subscriptions", "organizations_url": "https://api.github.com/users/claynerobison/orgs", "repos_url": "https://api.github.com/users/claynerobison/repos", "events_url": "https://api.github.com/users/claynerobison/events{/privacy}", "received_events_url": "https://api.github.com/users/claynerobison/received_events", "type": "User", "site_admin": false}, "body": "Now that you mention it, when building with MKL, the runtime detects the platform it runs on and adapts, meaning these switches only make a difference when the path is EIGEN. I'll remove the redundancy, but I'd prefer arch=native because the compiler will detect what optimizations it can use for EIGEN paths.", "created_at": "2017-11-20T20:49:42Z", "updated_at": "2017-11-21T17:26:52Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/14468#discussion_r152107014", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/14468", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/152107014"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/14468#discussion_r152107014"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/14468"}}, "body_html": "<p>Now that you mention it, when building with MKL, the runtime detects the platform it runs on and adapts, meaning these switches only make a difference when the path is EIGEN. I'll remove the redundancy, but I'd prefer arch=native because the compiler will detect what optimizations it can use for EIGEN paths.</p>", "body_text": "Now that you mention it, when building with MKL, the runtime detects the platform it runs on and adapts, meaning these switches only make a difference when the path is EIGEN. I'll remove the redundancy, but I'd prefer arch=native because the compiler will detect what optimizations it can use for EIGEN paths.", "in_reply_to_id": 151551701}