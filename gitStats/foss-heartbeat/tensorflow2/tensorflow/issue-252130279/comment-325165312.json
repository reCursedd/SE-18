{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/325165312", "html_url": "https://github.com/tensorflow/tensorflow/issues/12508#issuecomment-325165312", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12508", "id": 325165312, "node_id": "MDEyOklzc3VlQ29tbWVudDMyNTE2NTMxMg==", "user": {"login": "facaiy", "id": 1112263, "node_id": "MDQ6VXNlcjExMTIyNjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1112263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facaiy", "html_url": "https://github.com/facaiy", "followers_url": "https://api.github.com/users/facaiy/followers", "following_url": "https://api.github.com/users/facaiy/following{/other_user}", "gists_url": "https://api.github.com/users/facaiy/gists{/gist_id}", "starred_url": "https://api.github.com/users/facaiy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facaiy/subscriptions", "organizations_url": "https://api.github.com/users/facaiy/orgs", "repos_url": "https://api.github.com/users/facaiy/repos", "events_url": "https://api.github.com/users/facaiy/events{/privacy}", "received_events_url": "https://api.github.com/users/facaiy/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-26T22:28:00Z", "updated_at": "2017-08-26T22:31:33Z", "author_association": "MEMBER", "body_html": "<p>Thanks for your test case, <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=142074\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mvsusp\">@mvsusp</a> . It's really concise.</p>\n<p>If I understand correctly, <a href=\"https://www.tensorflow.org/versions/r1.2/api_docs/python/tf/contrib/learn/DNNClassifier#export_savedmodel\" rel=\"nofollow\">learn.DNNClassifier</a> expects an <code>InputFnOps</code>, not <code>ServingInputReceiver</code>.  Hence, perhaps you'd better to try build <code>InputFnOps</code> by youself or use <code>tf.contrib.learn.build_parsing_serving_input_fn</code> for tf.Example, more to see <a href=\"https://www.tensorflow.org/versions/r1.2/api_guides/python/contrib.learn#Input_processing\" rel=\"nofollow\">contrib.learn#Input_processing</a>.</p>\n<p>Correct me if I'm wrong, I believe that <code>ServingInputReceiver</code> is prepared for <a href=\"https://www.tensorflow.org/api_docs/python/tf/estimator/DNNClassifier#export_savedmodel\" rel=\"nofollow\">tf.Estimator.DNNClassifier</a>, which is introduced later in 1.3, not 1.2.1.  So, to upgrade your tensorflow is also a choice.</p>\n<p>By the way, <code>tf.Estimator</code> and <code>tf.contrib.learn</code> are different modules and might be incompatible.</p>", "body_text": "Thanks for your test case, @mvsusp . It's really concise.\nIf I understand correctly, learn.DNNClassifier expects an InputFnOps, not ServingInputReceiver.  Hence, perhaps you'd better to try build InputFnOps by youself or use tf.contrib.learn.build_parsing_serving_input_fn for tf.Example, more to see contrib.learn#Input_processing.\nCorrect me if I'm wrong, I believe that ServingInputReceiver is prepared for tf.Estimator.DNNClassifier, which is introduced later in 1.3, not 1.2.1.  So, to upgrade your tensorflow is also a choice.\nBy the way, tf.Estimator and tf.contrib.learn are different modules and might be incompatible.", "body": "Thanks for your test case, @mvsusp . It's really concise.\r\n\r\n If I understand correctly, [learn.DNNClassifier](https://www.tensorflow.org/versions/r1.2/api_docs/python/tf/contrib/learn/DNNClassifier#export_savedmodel) expects an `InputFnOps`, not `ServingInputReceiver`.  Hence, perhaps you'd better to try build `InputFnOps` by youself or use `tf.contrib.learn.build_parsing_serving_input_fn` for tf.Example, more to see [contrib.learn#Input_processing](https://www.tensorflow.org/versions/r1.2/api_guides/python/contrib.learn#Input_processing).\r\n\r\nCorrect me if I'm wrong, I believe that `ServingInputReceiver` is prepared for [tf.Estimator.DNNClassifier](https://www.tensorflow.org/api_docs/python/tf/estimator/DNNClassifier#export_savedmodel), which is introduced later in 1.3, not 1.2.1.  So, to upgrade your tensorflow is also a choice.\r\n\r\nBy the way, `tf.Estimator` and `tf.contrib.learn` are different modules and might be incompatible."}