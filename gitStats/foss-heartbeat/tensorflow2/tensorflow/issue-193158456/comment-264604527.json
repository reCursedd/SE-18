{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/264604527", "html_url": "https://github.com/tensorflow/tensorflow/issues/6045#issuecomment-264604527", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6045", "id": 264604527, "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDYwNDUyNw==", "user": {"login": "laosiaudi", "id": 3873971, "node_id": "MDQ6VXNlcjM4NzM5NzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/3873971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/laosiaudi", "html_url": "https://github.com/laosiaudi", "followers_url": "https://api.github.com/users/laosiaudi/followers", "following_url": "https://api.github.com/users/laosiaudi/following{/other_user}", "gists_url": "https://api.github.com/users/laosiaudi/gists{/gist_id}", "starred_url": "https://api.github.com/users/laosiaudi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/laosiaudi/subscriptions", "organizations_url": "https://api.github.com/users/laosiaudi/orgs", "repos_url": "https://api.github.com/users/laosiaudi/repos", "events_url": "https://api.github.com/users/laosiaudi/events{/privacy}", "received_events_url": "https://api.github.com/users/laosiaudi/received_events", "type": "User", "site_admin": false}, "created_at": "2016-12-03T01:24:19Z", "updated_at": "2016-12-03T01:24:43Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=15676913\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/poxvoculi\">@poxvoculi</a><br>\nThanks for the reply!<br>\nSorry for the misunderstanding. But yes, I also think it shouldn't be a runtime segfault and gdb may not give the correct information. And today I put my self-defined class into the step_stats_collector.cc file(because my class uses the mutex in the same way as step_stats_collector does) and tried to run the same python examples, it still failed, giving error like<br>\n<strong>\"terminate called after throwing an instance of 'std::system_error'<br>\nwhat():  Operation not permitted\"</strong>.</p>\n<p>And from the gdb, I check the backtrace for all the threads, most of them abort in the <strong>std::condition_variable::wait</strong>, so I think is it because my way of using mutex is not correct?<br>\n(my class's member function using mutex gets called in the ExecutorState::NodeDone)</p>\n<p>Thanks!</p>", "body_text": "@poxvoculi\nThanks for the reply!\nSorry for the misunderstanding. But yes, I also think it shouldn't be a runtime segfault and gdb may not give the correct information. And today I put my self-defined class into the step_stats_collector.cc file(because my class uses the mutex in the same way as step_stats_collector does) and tried to run the same python examples, it still failed, giving error like\n\"terminate called after throwing an instance of 'std::system_error'\nwhat():  Operation not permitted\".\nAnd from the gdb, I check the backtrace for all the threads, most of them abort in the std::condition_variable::wait, so I think is it because my way of using mutex is not correct?\n(my class's member function using mutex gets called in the ExecutorState::NodeDone)\nThanks!", "body": "@poxvoculi \r\nThanks for the reply!\r\nSorry for the misunderstanding. But yes, I also think it shouldn't be a runtime segfault and gdb may not give the correct information. And today I put my self-defined class into the step_stats_collector.cc file(because my class uses the mutex in the same way as step_stats_collector does) and tried to run the same python examples, it still failed, giving error like\r\n **\"terminate called after throwing an instance of 'std::system_error'\r\n  what():  Operation not permitted\"**.\r\n\r\nAnd from the gdb, I check the backtrace for all the threads, most of them abort in the **std::condition_variable::wait**, so I think is it because my way of using mutex is not correct?\r\n(my class's member function using mutex gets called in the ExecutorState::NodeDone)\r\n\r\nThanks!\r\n\r\n\r\n"}