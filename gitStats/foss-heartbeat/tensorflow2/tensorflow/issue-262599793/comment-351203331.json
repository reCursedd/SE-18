{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/351203331", "html_url": "https://github.com/tensorflow/tensorflow/issues/13477#issuecomment-351203331", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13477", "id": 351203331, "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTIwMzMzMQ==", "user": {"login": "jamieo-ms", "id": 19783657, "node_id": "MDQ6VXNlcjE5NzgzNjU3", "avatar_url": "https://avatars1.githubusercontent.com/u/19783657?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamieo-ms", "html_url": "https://github.com/jamieo-ms", "followers_url": "https://api.github.com/users/jamieo-ms/followers", "following_url": "https://api.github.com/users/jamieo-ms/following{/other_user}", "gists_url": "https://api.github.com/users/jamieo-ms/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamieo-ms/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamieo-ms/subscriptions", "organizations_url": "https://api.github.com/users/jamieo-ms/orgs", "repos_url": "https://api.github.com/users/jamieo-ms/repos", "events_url": "https://api.github.com/users/jamieo-ms/events{/privacy}", "received_events_url": "https://api.github.com/users/jamieo-ms/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-12T21:39:47Z", "updated_at": "2017-12-12T21:39:47Z", "author_association": "NONE", "body_html": "<p>I'm having a similar issue.  Are you suggesting that in this scenario, it needs to be:</p>\n<pre><code>input_dict ={\"inputs\": [features]}\n</code></pre>\n<p>Let's assume <code>feature_spec</code> and <code>features</code> is something like:</p>\n<pre><code>feature_spec = {\n'feature1': FixedLenFeature(shape=(1,), dtype=tf.float32, default_value=None)\n'feature2': FixedLenFeature(shape=(1,), dtype=tf.float32, default_value=None),\n'feature3': VarLenFeature(dtype=tf.string)}\n\n\nfeatures = {\n'feature1': &lt;tf.Tensor 'ParseExample_15/ParseExample:15' shape=(?, 1) dtype=float32&gt;,\n'feature2': &lt;tf.Tensor 'ParseExample_15/ParseExample:15' shape=(?, 1) dtype=float32&gt;,\n'feature3': &lt;tensorflow.python.framework.sparse_tensor.SparseTensor at 0x7f0ea4626a20&gt;}\n</code></pre>\n<p>For some arbitrary example:</p>\n<pre><code>example = {'feature1': 1, 'feature2': 2, 'feature3': \"val1\"}\n</code></pre>\n<p>What should be passed to the <code>predict_fn</code>?</p>", "body_text": "I'm having a similar issue.  Are you suggesting that in this scenario, it needs to be:\ninput_dict ={\"inputs\": [features]}\n\nLet's assume feature_spec and features is something like:\nfeature_spec = {\n'feature1': FixedLenFeature(shape=(1,), dtype=tf.float32, default_value=None)\n'feature2': FixedLenFeature(shape=(1,), dtype=tf.float32, default_value=None),\n'feature3': VarLenFeature(dtype=tf.string)}\n\n\nfeatures = {\n'feature1': <tf.Tensor 'ParseExample_15/ParseExample:15' shape=(?, 1) dtype=float32>,\n'feature2': <tf.Tensor 'ParseExample_15/ParseExample:15' shape=(?, 1) dtype=float32>,\n'feature3': <tensorflow.python.framework.sparse_tensor.SparseTensor at 0x7f0ea4626a20>}\n\nFor some arbitrary example:\nexample = {'feature1': 1, 'feature2': 2, 'feature3': \"val1\"}\n\nWhat should be passed to the predict_fn?", "body": "I'm having a similar issue.  Are you suggesting that in this scenario, it needs to be:\r\n\r\n```\r\ninput_dict ={\"inputs\": [features]}\r\n```\r\n Let's assume `feature_spec` and `features` is something like:\r\n\r\n```\r\nfeature_spec = {\r\n'feature1': FixedLenFeature(shape=(1,), dtype=tf.float32, default_value=None)\r\n'feature2': FixedLenFeature(shape=(1,), dtype=tf.float32, default_value=None),\r\n'feature3': VarLenFeature(dtype=tf.string)}\r\n\r\n\r\nfeatures = {\r\n'feature1': <tf.Tensor 'ParseExample_15/ParseExample:15' shape=(?, 1) dtype=float32>,\r\n'feature2': <tf.Tensor 'ParseExample_15/ParseExample:15' shape=(?, 1) dtype=float32>,\r\n'feature3': <tensorflow.python.framework.sparse_tensor.SparseTensor at 0x7f0ea4626a20>}\r\n```\r\n\r\nFor some arbitrary example:\r\n\r\n```\r\nexample = {'feature1': 1, 'feature2': 2, 'feature3': \"val1\"}\r\n```\r\n\r\nWhat should be passed to the `predict_fn`?"}