{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/389485972", "html_url": "https://github.com/tensorflow/tensorflow/issues/19145#issuecomment-389485972", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19145", "id": 389485972, "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTQ4NTk3Mg==", "user": {"login": "sanket-kamthe", "id": 15108821, "node_id": "MDQ6VXNlcjE1MTA4ODIx", "avatar_url": "https://avatars2.githubusercontent.com/u/15108821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanket-kamthe", "html_url": "https://github.com/sanket-kamthe", "followers_url": "https://api.github.com/users/sanket-kamthe/followers", "following_url": "https://api.github.com/users/sanket-kamthe/following{/other_user}", "gists_url": "https://api.github.com/users/sanket-kamthe/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanket-kamthe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanket-kamthe/subscriptions", "organizations_url": "https://api.github.com/users/sanket-kamthe/orgs", "repos_url": "https://api.github.com/users/sanket-kamthe/repos", "events_url": "https://api.github.com/users/sanket-kamthe/events{/privacy}", "received_events_url": "https://api.github.com/users/sanket-kamthe/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-16T11:28:08Z", "updated_at": "2018-05-16T11:28:08Z", "author_association": "NONE", "body_html": "<p>Thank for your reply. I can confirm that with your suggestions I do see the improvements.<br>\nUnfortunately, I have to do this over much lower dimensions and may the gain that case is very marginal.</p>\n<p>However, I do like this feature. I will close this issue with results confirming <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1048839\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/srvasude\">@srvasude</a>  suggestions.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">with</span> tf.Session(<span class=\"pl-v\">graph</span><span class=\"pl-k\">=</span>tf.get_default_graph()) <span class=\"pl-k\">as</span> sess:\n    msolve <span class=\"pl-k\">=</span> compute_matrix_solve(C, Z_tiled).op\n    opsolve <span class=\"pl-k\">=</span> compute_operator_solve(C_operator, Z_tiled)\n    diagsolve<span class=\"pl-k\">=</span>compute_operator_solve(C_diag_operator, Z_tiled)\n    <span class=\"pl-k\">def</span> <span class=\"pl-en\">sess_run_msolve</span>():\n        <span class=\"pl-k\">return</span> sess.run(msolve)\n    <span class=\"pl-k\">def</span> <span class=\"pl-en\">sess_run_opsolve</span>():\n        <span class=\"pl-k\">return</span> sess.run(opsolve)\n    <span class=\"pl-k\">def</span> <span class=\"pl-en\">sess_run_diagsolve</span>():\n        <span class=\"pl-k\">return</span> sess.run(diagsolve)\n    <span class=\"pl-k\">def</span> <span class=\"pl-en\">burn_in</span>(<span class=\"pl-smi\">msolve</span>, <span class=\"pl-smi\">opsolve</span>, <span class=\"pl-smi\">diagsolve</span>, <span class=\"pl-smi\">cycles</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">100</span>):\n        <span class=\"pl-k\">for</span> _ <span class=\"pl-k\">in</span> <span class=\"pl-c1\">range</span>(cycles):\n            sess.run([msolve, opsolve, diagsolve])\n            \n            \n    burn_in(msolve, opsolve, diagsolve)\n    <span class=\"pl-c1\">print</span>(timeit.timeit(sess_run_msolve, <span class=\"pl-v\">number</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">500</span>))\n    <span class=\"pl-c1\">print</span>(timeit.timeit(sess_run_opsolve, <span class=\"pl-v\">number</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">500</span>))\n    <span class=\"pl-c1\">print</span>(timeit.timeit(sess_run_diagsolve, <span class=\"pl-v\">number</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">500</span>))</pre></div>\n<div class=\"highlight highlight-source-shell\"><pre>28.759427453987882\n15.111607366998214\n10.926930371992057\n</pre></div>", "body_text": "Thank for your reply. I can confirm that with your suggestions I do see the improvements.\nUnfortunately, I have to do this over much lower dimensions and may the gain that case is very marginal.\nHowever, I do like this feature. I will close this issue with results confirming @srvasude  suggestions.\nwith tf.Session(graph=tf.get_default_graph()) as sess:\n    msolve = compute_matrix_solve(C, Z_tiled).op\n    opsolve = compute_operator_solve(C_operator, Z_tiled)\n    diagsolve=compute_operator_solve(C_diag_operator, Z_tiled)\n    def sess_run_msolve():\n        return sess.run(msolve)\n    def sess_run_opsolve():\n        return sess.run(opsolve)\n    def sess_run_diagsolve():\n        return sess.run(diagsolve)\n    def burn_in(msolve, opsolve, diagsolve, cycles=100):\n        for _ in range(cycles):\n            sess.run([msolve, opsolve, diagsolve])\n            \n            \n    burn_in(msolve, opsolve, diagsolve)\n    print(timeit.timeit(sess_run_msolve, number=500))\n    print(timeit.timeit(sess_run_opsolve, number=500))\n    print(timeit.timeit(sess_run_diagsolve, number=500))\n28.759427453987882\n15.111607366998214\n10.926930371992057", "body": "Thank for your reply. I can confirm that with your suggestions I do see the improvements.\r\nUnfortunately, I have to do this over much lower dimensions and may the gain that case is very marginal.\r\n\r\nHowever, I do like this feature. I will close this issue with results confirming @srvasude  suggestions. \r\n\r\n``` python\r\nwith tf.Session(graph=tf.get_default_graph()) as sess:\r\n    msolve = compute_matrix_solve(C, Z_tiled).op\r\n    opsolve = compute_operator_solve(C_operator, Z_tiled)\r\n    diagsolve=compute_operator_solve(C_diag_operator, Z_tiled)\r\n    def sess_run_msolve():\r\n        return sess.run(msolve)\r\n    def sess_run_opsolve():\r\n        return sess.run(opsolve)\r\n    def sess_run_diagsolve():\r\n        return sess.run(diagsolve)\r\n    def burn_in(msolve, opsolve, diagsolve, cycles=100):\r\n        for _ in range(cycles):\r\n            sess.run([msolve, opsolve, diagsolve])\r\n            \r\n            \r\n    burn_in(msolve, opsolve, diagsolve)\r\n    print(timeit.timeit(sess_run_msolve, number=500))\r\n    print(timeit.timeit(sess_run_opsolve, number=500))\r\n    print(timeit.timeit(sess_run_diagsolve, number=500))\r\n```\r\n\r\n``` shell\r\n28.759427453987882\r\n15.111607366998214\r\n10.926930371992057\r\n\r\n```"}