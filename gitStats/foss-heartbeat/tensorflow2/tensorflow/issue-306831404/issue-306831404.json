{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17859", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17859/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17859/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17859/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17859", "id": 306831404, "node_id": "MDU6SXNzdWUzMDY4MzE0MDQ=", "number": 17859, "title": "`Datasets` sometimes resamples stochastic Tensors during multiple transformations", "user": {"login": "joel-shor", "id": 6020988, "node_id": "MDQ6VXNlcjYwMjA5ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/6020988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joel-shor", "html_url": "https://github.com/joel-shor", "followers_url": "https://api.github.com/users/joel-shor/followers", "following_url": "https://api.github.com/users/joel-shor/following{/other_user}", "gists_url": "https://api.github.com/users/joel-shor/gists{/gist_id}", "starred_url": "https://api.github.com/users/joel-shor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joel-shor/subscriptions", "organizations_url": "https://api.github.com/users/joel-shor/orgs", "repos_url": "https://api.github.com/users/joel-shor/repos", "events_url": "https://api.github.com/users/joel-shor/events{/privacy}", "received_events_url": "https://api.github.com/users/joel-shor/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-03-20T11:45:19Z", "updated_at": "2018-07-29T00:44:10Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:<br>\nYes, to demonstrate the bug</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:<br>\nMac OS X 10.13.3</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:<br>\nBinary</li>\n<li><strong>TensorFlow version (use command below)</strong>:<br>\n1.5.0</li>\n<li><strong>Python version</strong>:<br>\n2.7</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>Datasets can involve stochastic transformations. Sometimes random Tensors are resampled, and sometimes they're not. It's not clear when one happens and when another happens. This is likely a subtle Datasets bug, but at a minimum is a documentation bug. This is the root cause of Issue <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"292960118\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/16606\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/16606/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/16606\">#16606</a>, which is fixed in the resampling code by PR <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"306824261\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/17858\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/tensorflow/tensorflow/pull/17858/hovercard\" href=\"https://github.com/tensorflow/tensorflow/pull/17858\">#17858</a>.</p>\n<h3>Source code / logs</h3>\n<p>The following short snippet demonstrates that <code>Dataset.zip</code> causes the random Tensors to be resampled, while a seemingly-equivalent <code>map</code> statement does not:</p>\n<pre><code>def _test_ds_consistency(tup_ds):\n  get_next = tup_ds.make_one_shot_iterator().get_next()\n\n  with tf.Session() as sess:\n    while True:\n      try:\n        tup = sess.run(get_next)\n        assert tup[0] == tup[1]\n      except tf.errors.OutOfRangeError:\n        break\n\ndef _get_random_0s_and_1s(num_elements):\n  const_ds = tf.data.Dataset.from_tensor_slices([0] * num_elements)\n  return const_ds.map(lambda _: tf.cast(tf.random_uniform([]) * 2, dtype=tf.int32))\n\ndef doesnt_work(num_elements=10):\n  rand_ds = _get_random_0s_and_1s(num_elements)\n  index_ds = rand_ds.map(lambda i: tf.gather([0, 1], i))\n  return tf.data.Dataset.zip((index_ds, rand_ds))\n\ndef works(num_elements=10):\n  rand_ds = _get_random_0s_and_1s(num_elements)\n  tup_ds = rand_ds.map(lambda i: (tf.gather([0, 1], i), i))\n  return tup_ds\n\n_test_ds_consistency(works())  # works\n_test_ds_consistency(doesnt_work())  # raises assert\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nYes, to demonstrate the bug\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nMac OS X 10.13.3\nTensorFlow installed from (source or binary):\nBinary\nTensorFlow version (use command below):\n1.5.0\nPython version:\n2.7\n\nDescribe the problem\nDatasets can involve stochastic transformations. Sometimes random Tensors are resampled, and sometimes they're not. It's not clear when one happens and when another happens. This is likely a subtle Datasets bug, but at a minimum is a documentation bug. This is the root cause of Issue #16606, which is fixed in the resampling code by PR #17858.\nSource code / logs\nThe following short snippet demonstrates that Dataset.zip causes the random Tensors to be resampled, while a seemingly-equivalent map statement does not:\ndef _test_ds_consistency(tup_ds):\n  get_next = tup_ds.make_one_shot_iterator().get_next()\n\n  with tf.Session() as sess:\n    while True:\n      try:\n        tup = sess.run(get_next)\n        assert tup[0] == tup[1]\n      except tf.errors.OutOfRangeError:\n        break\n\ndef _get_random_0s_and_1s(num_elements):\n  const_ds = tf.data.Dataset.from_tensor_slices([0] * num_elements)\n  return const_ds.map(lambda _: tf.cast(tf.random_uniform([]) * 2, dtype=tf.int32))\n\ndef doesnt_work(num_elements=10):\n  rand_ds = _get_random_0s_and_1s(num_elements)\n  index_ds = rand_ds.map(lambda i: tf.gather([0, 1], i))\n  return tf.data.Dataset.zip((index_ds, rand_ds))\n\ndef works(num_elements=10):\n  rand_ds = _get_random_0s_and_1s(num_elements)\n  tup_ds = rand_ds.map(lambda i: (tf.gather([0, 1], i), i))\n  return tup_ds\n\n_test_ds_consistency(works())  # works\n_test_ds_consistency(doesnt_work())  # raises assert", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nYes, to demonstrate the bug\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nMac OS X 10.13.3\r\n- **TensorFlow installed from (source or binary)**:\r\nBinary\r\n- **TensorFlow version (use command below)**:\r\n1.5.0\r\n- **Python version**: \r\n2.7\r\n\r\n### Describe the problem\r\nDatasets can involve stochastic transformations. Sometimes random Tensors are resampled, and sometimes they're not. It's not clear when one happens and when another happens. This is likely a subtle Datasets bug, but at a minimum is a documentation bug. This is the root cause of Issue #16606, which is fixed in the resampling code by PR #17858.\r\n\r\n### Source code / logs\r\nThe following short snippet demonstrates that `Dataset.zip` causes the random Tensors to be resampled, while a seemingly-equivalent `map` statement does not:\r\n\r\n```\r\ndef _test_ds_consistency(tup_ds):\r\n  get_next = tup_ds.make_one_shot_iterator().get_next()\r\n\r\n  with tf.Session() as sess:\r\n    while True:\r\n      try:\r\n        tup = sess.run(get_next)\r\n        assert tup[0] == tup[1]\r\n      except tf.errors.OutOfRangeError:\r\n        break\r\n\r\ndef _get_random_0s_and_1s(num_elements):\r\n  const_ds = tf.data.Dataset.from_tensor_slices([0] * num_elements)\r\n  return const_ds.map(lambda _: tf.cast(tf.random_uniform([]) * 2, dtype=tf.int32))\r\n\r\ndef doesnt_work(num_elements=10):\r\n  rand_ds = _get_random_0s_and_1s(num_elements)\r\n  index_ds = rand_ds.map(lambda i: tf.gather([0, 1], i))\r\n  return tf.data.Dataset.zip((index_ds, rand_ds))\r\n\r\ndef works(num_elements=10):\r\n  rand_ds = _get_random_0s_and_1s(num_elements)\r\n  tup_ds = rand_ds.map(lambda i: (tf.gather([0, 1], i), i))\r\n  return tup_ds\r\n\r\n_test_ds_consistency(works())  # works\r\n_test_ds_consistency(doesnt_work())  # raises assert\r\n```\r\n"}