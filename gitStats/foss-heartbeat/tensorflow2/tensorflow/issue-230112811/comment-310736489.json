{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/310736489", "html_url": "https://github.com/tensorflow/tensorflow/issues/10054#issuecomment-310736489", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10054", "id": 310736489, "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDczNjQ4OQ==", "user": {"login": "jolespin", "id": 9061708, "node_id": "MDQ6VXNlcjkwNjE3MDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/9061708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jolespin", "html_url": "https://github.com/jolespin", "followers_url": "https://api.github.com/users/jolespin/followers", "following_url": "https://api.github.com/users/jolespin/following{/other_user}", "gists_url": "https://api.github.com/users/jolespin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jolespin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jolespin/subscriptions", "organizations_url": "https://api.github.com/users/jolespin/orgs", "repos_url": "https://api.github.com/users/jolespin/repos", "events_url": "https://api.github.com/users/jolespin/events{/privacy}", "received_events_url": "https://api.github.com/users/jolespin/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-23T18:14:09Z", "updated_at": "2017-06-23T18:16:43Z", "author_association": "NONE", "body_html": "<p>Sorry for the delay, I've been out of the country not looking at my computer.  You can kind of see how different the starting values are from the figs. I guess my question is more theoretical instead of a bug in TensorFlow but it's difficult to know with a non-toy example if the model is good when the results vary using the same code on different instances. Shown below for 4 different runs using the same code block.  Note below is with demming loss instead of lasso:</p>\n<pre><code>    # Loss\n    numerator = tf.abs(pH_y_hat - model)\n    denominator = tf.sqrt(tf.add(tf.square(A), 1))\n    deming = tf.truediv(numerator, denominator)\n    loss_deming = tf.reduce_mean(deming)\n    \n    with tf.Session(graph=G_3_75, config=tf_max_threads) as sess:\n        sess.run(tf.global_variables_initializer())\n        # Optimizer\n        op = tf.train.GradientDescentOptimizer(0.1)\n        train_step = op.minimize(loss_deming)\n</code></pre>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/9061708/27494989-12cfa8ca-5805-11e7-9073-93efd721158b.png\"><img src=\"https://user-images.githubusercontent.com/9061708/27494989-12cfa8ca-5805-11e7-9073-93efd721158b.png\" alt=\"image\" style=\"max-width:100%;\"></a></p>", "body_text": "Sorry for the delay, I've been out of the country not looking at my computer.  You can kind of see how different the starting values are from the figs. I guess my question is more theoretical instead of a bug in TensorFlow but it's difficult to know with a non-toy example if the model is good when the results vary using the same code on different instances. Shown below for 4 different runs using the same code block.  Note below is with demming loss instead of lasso:\n    # Loss\n    numerator = tf.abs(pH_y_hat - model)\n    denominator = tf.sqrt(tf.add(tf.square(A), 1))\n    deming = tf.truediv(numerator, denominator)\n    loss_deming = tf.reduce_mean(deming)\n    \n    with tf.Session(graph=G_3_75, config=tf_max_threads) as sess:\n        sess.run(tf.global_variables_initializer())\n        # Optimizer\n        op = tf.train.GradientDescentOptimizer(0.1)\n        train_step = op.minimize(loss_deming)", "body": "Sorry for the delay, I've been out of the country not looking at my computer.  You can kind of see how different the starting values are from the figs. I guess my question is more theoretical instead of a bug in TensorFlow but it's difficult to know with a non-toy example if the model is good when the results vary using the same code on different instances. Shown below for 4 different runs using the same code block.  Note below is with demming loss instead of lasso: \r\n\r\n```\r\n    # Loss\r\n    numerator = tf.abs(pH_y_hat - model)\r\n    denominator = tf.sqrt(tf.add(tf.square(A), 1))\r\n    deming = tf.truediv(numerator, denominator)\r\n    loss_deming = tf.reduce_mean(deming)\r\n    \r\n    with tf.Session(graph=G_3_75, config=tf_max_threads) as sess:\r\n        sess.run(tf.global_variables_initializer())\r\n        # Optimizer\r\n        op = tf.train.GradientDescentOptimizer(0.1)\r\n        train_step = op.minimize(loss_deming)\r\n```\r\n![image](https://user-images.githubusercontent.com/9061708/27494989-12cfa8ca-5805-11e7-9073-93efd721158b.png)\r\n"}