{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/235367249", "html_url": "https://github.com/tensorflow/tensorflow/issues/3491#issuecomment-235367249", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3491", "id": 235367249, "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTM2NzI0OQ==", "user": {"login": "rohan100jain", "id": 144114, "node_id": "MDQ6VXNlcjE0NDExNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/144114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rohan100jain", "html_url": "https://github.com/rohan100jain", "followers_url": "https://api.github.com/users/rohan100jain/followers", "following_url": "https://api.github.com/users/rohan100jain/following{/other_user}", "gists_url": "https://api.github.com/users/rohan100jain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rohan100jain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rohan100jain/subscriptions", "organizations_url": "https://api.github.com/users/rohan100jain/orgs", "repos_url": "https://api.github.com/users/rohan100jain/repos", "events_url": "https://api.github.com/users/rohan100jain/events{/privacy}", "received_events_url": "https://api.github.com/users/rohan100jain/received_events", "type": "User", "site_admin": false}, "created_at": "2016-07-26T18:50:51Z", "updated_at": "2016-07-26T18:50:51Z", "author_association": "MEMBER", "body_html": "<p>I'm actively working on this right now. The idea is what you suggested - exposing a python file interface that wraps the internal C++ file system interface so that all new file systems can just be directly implemented on top of C++ and is available automatically.</p>", "body_text": "I'm actively working on this right now. The idea is what you suggested - exposing a python file interface that wraps the internal C++ file system interface so that all new file systems can just be directly implemented on top of C++ and is available automatically.", "body": "I'm actively working on this right now. The idea is what you suggested - exposing a python file interface that wraps the internal C++ file system interface so that all new file systems can just be directly implemented on top of C++ and is available automatically. \n"}