{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/251781951", "html_url": "https://github.com/tensorflow/tensorflow/issues/3491#issuecomment-251781951", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3491", "id": 251781951, "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTc4MTk1MQ==", "user": {"login": "rohan100jain", "id": 144114, "node_id": "MDQ6VXNlcjE0NDExNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/144114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rohan100jain", "html_url": "https://github.com/rohan100jain", "followers_url": "https://api.github.com/users/rohan100jain/followers", "following_url": "https://api.github.com/users/rohan100jain/following{/other_user}", "gists_url": "https://api.github.com/users/rohan100jain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rohan100jain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rohan100jain/subscriptions", "organizations_url": "https://api.github.com/users/rohan100jain/orgs", "repos_url": "https://api.github.com/users/rohan100jain/repos", "events_url": "https://api.github.com/users/rohan100jain/events{/privacy}", "received_events_url": "https://api.github.com/users/rohan100jain/received_events", "type": "User", "site_admin": false}, "created_at": "2016-10-05T19:58:49Z", "updated_at": "2016-10-05T19:58:49Z", "author_association": "MEMBER", "body_html": "<p>file_io.py is now live and gfile redirects to it now. This should unify the python and C++ implementations. Let me know if there are further feature requests.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=192829\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/llhe\">@llhe</a></p>\n<ol>\n<li>vrv@ just added support for read(n). This mirrors what we used to have and should help out with large files</li>\n<li>We have a BufferedInputStream that does buffering on top of the RandomAccessFile. The python read(n), tell(), seek() functions are using it now as well. Its not perfect read ahead (in which we should perhaps read the next chunk of the buffer via a second thread etc.) but it should help out a bit with performance. Please feel free to open more feature requests if needed.</li>\n</ol>\n<p>The plugin mechanism for file systems isn't documented but there is a separate issue tracking that (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"174221918\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/4120\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/4120/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/4120\">#4120</a>)</p>\n<p>Closing this bug now.</p>", "body_text": "file_io.py is now live and gfile redirects to it now. This should unify the python and C++ implementations. Let me know if there are further feature requests.\n@llhe\n\nvrv@ just added support for read(n). This mirrors what we used to have and should help out with large files\nWe have a BufferedInputStream that does buffering on top of the RandomAccessFile. The python read(n), tell(), seek() functions are using it now as well. Its not perfect read ahead (in which we should perhaps read the next chunk of the buffer via a second thread etc.) but it should help out a bit with performance. Please feel free to open more feature requests if needed.\n\nThe plugin mechanism for file systems isn't documented but there is a separate issue tracking that (#4120)\nClosing this bug now.", "body": "file_io.py is now live and gfile redirects to it now. This should unify the python and C++ implementations. Let me know if there are further feature requests.\n\n@llhe \n1. vrv@ just added support for read(n). This mirrors what we used to have and should help out with large files\n2. We have a BufferedInputStream that does buffering on top of the RandomAccessFile. The python read(n), tell(), seek() functions are using it now as well. Its not perfect read ahead (in which we should perhaps read the next chunk of the buffer via a second thread etc.) but it should help out a bit with performance. Please feel free to open more feature requests if needed.\n\nThe plugin mechanism for file systems isn't documented but there is a separate issue tracking that (https://github.com/tensorflow/tensorflow/issues/4120)\n\nClosing this bug now.\n"}