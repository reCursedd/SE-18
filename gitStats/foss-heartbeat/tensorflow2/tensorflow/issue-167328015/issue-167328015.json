{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3491", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3491/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3491/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3491/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/3491", "id": 167328015, "node_id": "MDU6SXNzdWUxNjczMjgwMTU=", "number": 3491, "title": "Unified file system support implementation for C++/Python", "user": {"login": "llhe", "id": 192829, "node_id": "MDQ6VXNlcjE5MjgyOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/192829?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llhe", "html_url": "https://github.com/llhe", "followers_url": "https://api.github.com/users/llhe/followers", "following_url": "https://api.github.com/users/llhe/following{/other_user}", "gists_url": "https://api.github.com/users/llhe/gists{/gist_id}", "starred_url": "https://api.github.com/users/llhe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llhe/subscriptions", "organizations_url": "https://api.github.com/users/llhe/orgs", "repos_url": "https://api.github.com/users/llhe/repos", "events_url": "https://api.github.com/users/llhe/events{/privacy}", "received_events_url": "https://api.github.com/users/llhe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "rohan100jain", "id": 144114, "node_id": "MDQ6VXNlcjE0NDExNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/144114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rohan100jain", "html_url": "https://github.com/rohan100jain", "followers_url": "https://api.github.com/users/rohan100jain/followers", "following_url": "https://api.github.com/users/rohan100jain/following{/other_user}", "gists_url": "https://api.github.com/users/rohan100jain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rohan100jain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rohan100jain/subscriptions", "organizations_url": "https://api.github.com/users/rohan100jain/orgs", "repos_url": "https://api.github.com/users/rohan100jain/repos", "events_url": "https://api.github.com/users/rohan100jain/events{/privacy}", "received_events_url": "https://api.github.com/users/rohan100jain/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rohan100jain", "id": 144114, "node_id": "MDQ6VXNlcjE0NDExNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/144114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rohan100jain", "html_url": "https://github.com/rohan100jain", "followers_url": "https://api.github.com/users/rohan100jain/followers", "following_url": "https://api.github.com/users/rohan100jain/following{/other_user}", "gists_url": "https://api.github.com/users/rohan100jain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rohan100jain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rohan100jain/subscriptions", "organizations_url": "https://api.github.com/users/rohan100jain/orgs", "repos_url": "https://api.github.com/users/rohan100jain/repos", "events_url": "https://api.github.com/users/rohan100jain/events{/privacy}", "received_events_url": "https://api.github.com/users/rohan100jain/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2016-07-25T09:51:57Z", "updated_at": "2016-10-05T19:58:49Z", "closed_at": "2016-10-05T19:58:49Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Currently the C++ code has file system interface and provides POSIX and GCS implementation. However, part of the Python code also using another file system abstraction (tensorflow/python/summary/impl/gcs.py). This is annoying and tedious to supporting new type of file systems. So what is the consideration here and whether this is plan to make the Python code depending on C++ IO abstraction only.</p>", "body_text": "Currently the C++ code has file system interface and provides POSIX and GCS implementation. However, part of the Python code also using another file system abstraction (tensorflow/python/summary/impl/gcs.py). This is annoying and tedious to supporting new type of file systems. So what is the consideration here and whether this is plan to make the Python code depending on C++ IO abstraction only.", "body": "Currently the C++ code has file system interface and provides POSIX and GCS implementation. However, part of the Python code also using another file system abstraction (tensorflow/python/summary/impl/gcs.py). This is annoying and tedious to supporting new type of file systems. So what is the consideration here and whether this is plan to make the Python code depending on C++ IO abstraction only.\n"}