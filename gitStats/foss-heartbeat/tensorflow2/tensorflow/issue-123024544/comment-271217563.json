{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/271217563", "html_url": "https://github.com/tensorflow/tensorflow/issues/550#issuecomment-271217563", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/550", "id": 271217563, "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTIxNzU2Mw==", "user": {"login": "julien888", "id": 24953569, "node_id": "MDQ6VXNlcjI0OTUzNTY5", "avatar_url": "https://avatars0.githubusercontent.com/u/24953569?v=4", "gravatar_id": "", "url": "https://api.github.com/users/julien888", "html_url": "https://github.com/julien888", "followers_url": "https://api.github.com/users/julien888/followers", "following_url": "https://api.github.com/users/julien888/following{/other_user}", "gists_url": "https://api.github.com/users/julien888/gists{/gist_id}", "starred_url": "https://api.github.com/users/julien888/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/julien888/subscriptions", "organizations_url": "https://api.github.com/users/julien888/orgs", "repos_url": "https://api.github.com/users/julien888/repos", "events_url": "https://api.github.com/users/julien888/events{/privacy}", "received_events_url": "https://api.github.com/users/julien888/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-09T06:22:28Z", "updated_at": "2017-01-09T06:22:28Z", "author_association": "NONE", "body_html": "<p>I think I may have found a bug in in data_utils.py:<br>\n`  if not normalize_digits:<br>\nreturn [vocabulary.get(w.decode(), UNK_ID) for w in words]</p>\n<p>return [vocabulary.get(_DIGIT_RE.sub(b\"0\", w).decode(), UNK_ID) for w in words]`</p>\n<p>Using python 3.5.2, vocabulary.get(w) does not work when w is a binary string. vocabulary.get(w.decode()) works. I am retraining, at least I do not get the dreaded UNK...</p>", "body_text": "I think I may have found a bug in in data_utils.py:\n`  if not normalize_digits:\nreturn [vocabulary.get(w.decode(), UNK_ID) for w in words]\nreturn [vocabulary.get(_DIGIT_RE.sub(b\"0\", w).decode(), UNK_ID) for w in words]`\nUsing python 3.5.2, vocabulary.get(w) does not work when w is a binary string. vocabulary.get(w.decode()) works. I am retraining, at least I do not get the dreaded UNK...", "body": "I think I may have found a bug in in data_utils.py:\r\n`  if not normalize_digits:\r\n    return [vocabulary.get(w.decode(), UNK_ID) for w in words]\r\n\r\n  return [vocabulary.get(_DIGIT_RE.sub(b\"0\", w).decode(), UNK_ID) for w in words]`\r\n\r\nUsing python 3.5.2, vocabulary.get(w) does not work when w is a binary string. vocabulary.get(w.decode()) works. I am retraining, at least I do not get the dreaded UNK...\r\n"}