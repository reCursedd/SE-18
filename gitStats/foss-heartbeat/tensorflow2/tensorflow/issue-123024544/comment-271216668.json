{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/271216668", "html_url": "https://github.com/tensorflow/tensorflow/issues/550#issuecomment-271216668", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/550", "id": 271216668, "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTIxNjY2OA==", "user": {"login": "julien888", "id": 24953569, "node_id": "MDQ6VXNlcjI0OTUzNTY5", "avatar_url": "https://avatars0.githubusercontent.com/u/24953569?v=4", "gravatar_id": "", "url": "https://api.github.com/users/julien888", "html_url": "https://github.com/julien888", "followers_url": "https://api.github.com/users/julien888/followers", "following_url": "https://api.github.com/users/julien888/following{/other_user}", "gists_url": "https://api.github.com/users/julien888/gists{/gist_id}", "starred_url": "https://api.github.com/users/julien888/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/julien888/subscriptions", "organizations_url": "https://api.github.com/users/julien888/orgs", "repos_url": "https://api.github.com/users/julien888/repos", "events_url": "https://api.github.com/users/julien888/events{/privacy}", "received_events_url": "https://api.github.com/users/julien888/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-09T06:13:19Z", "updated_at": "2017-01-09T06:14:28Z", "author_association": "NONE", "body_html": "<p>I think that I may have a bug in the data_utils.py:</p>\n<p>`  if not normalize_digits:<br>\nreturn [vocabulary.get(w.decode(), UNK_ID) for w in words]</p>\n<h1>Normalize digits by 0 before looking words up in the vocabulary.</h1>\n<p>return [vocabulary.get(_DIGIT_RE.sub(b\"0\", w).decode(), UNK_ID) for w in words]<br>\n`</p>\n<p>w is a binary string and the vocabulary.get() would ALWAYS fail and result in an UNK. Adding w.decode() to convert it to a string seems to work. I am retraining the model right now, I get some gibberish, but at least no UNK. I am only at step 1500 so it will take a while!</p>", "body_text": "I think that I may have a bug in the data_utils.py:\n`  if not normalize_digits:\nreturn [vocabulary.get(w.decode(), UNK_ID) for w in words]\nNormalize digits by 0 before looking words up in the vocabulary.\nreturn [vocabulary.get(_DIGIT_RE.sub(b\"0\", w).decode(), UNK_ID) for w in words]\n`\nw is a binary string and the vocabulary.get() would ALWAYS fail and result in an UNK. Adding w.decode() to convert it to a string seems to work. I am retraining the model right now, I get some gibberish, but at least no UNK. I am only at step 1500 so it will take a while!", "body": "I think that I may have a bug in the data_utils.py:\r\n\r\n`  if not normalize_digits:\r\n    return [vocabulary.get(w.decode(), UNK_ID) for w in words]\r\n  # Normalize digits by 0 before looking words up in the vocabulary.\r\n  return [vocabulary.get(_DIGIT_RE.sub(b\"0\", w).decode(), UNK_ID) for w in words]\r\n`\r\n\r\nw is a binary string and the vocabulary.get() would ALWAYS fail and result in an UNK. Adding w.decode() to convert it to a string seems to work. I am retraining the model right now, I get some gibberish, but at least no UNK. I am only at step 1500 so it will take a while!"}