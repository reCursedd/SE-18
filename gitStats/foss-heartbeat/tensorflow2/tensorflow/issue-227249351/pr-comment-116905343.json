{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/116905343", "pull_request_review_id": 38564566, "id": 116905343, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNjkwNTM0Mw==", "diff_hunk": "@@ -354,9 +354,15 @@ def _PreventGradientGrad(op, _):\n def _GatherGrad(op, grad):\n   \"\"\"Gradient for Gather op.\"\"\"\n   # params can be large, so colocate the shape calculation with it.\n+  #\n+  # params can be super-large for sparse model, array_ops.shape raises", "path": "tensorflow/python/ops/array_grad.py", "position": null, "original_position": 5, "commit_id": "b6b33e201e46570b6763fbec1777e8f9c9464db0", "original_commit_id": "803ffcb2e57e237149eb7e82cca2a864b4579c78", "user": {"login": "fesun", "id": 23738439, "node_id": "MDQ6VXNlcjIzNzM4NDM5", "avatar_url": "https://avatars3.githubusercontent.com/u/23738439?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fesun", "html_url": "https://github.com/fesun", "followers_url": "https://api.github.com/users/fesun/followers", "following_url": "https://api.github.com/users/fesun/following{/other_user}", "gists_url": "https://api.github.com/users/fesun/gists{/gist_id}", "starred_url": "https://api.github.com/users/fesun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fesun/subscriptions", "organizations_url": "https://api.github.com/users/fesun/orgs", "repos_url": "https://api.github.com/users/fesun/repos", "events_url": "https://api.github.com/users/fesun/events{/privacy}", "received_events_url": "https://api.github.com/users/fesun/received_events", "type": "User", "site_admin": false}, "body": "Here is the exception:\r\n```\r\n>>> import tensorflow as tf\r\n>>> a = tf.get_variable(\"W\", [3000000000], dtype=tf.bool)\r\n>>> b = tf.shape(a)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"D:\\tensorflow\\copyable\\python3.5\\lib\\site-packages\\tensorflow\\python\\ops\\array_ops.py\", line 245, in shape\r\n    return shape_internal(input, name, optimize=True, out_type=out_type)\r\n  File \"D:\\tensorflow\\copyable\\python3.5\\lib\\site-packages\\tensorflow\\python\\ops\\array_ops.py\", line 271, in shape_i\r\nnternal\r\n    return constant(input_shape.as_list(), out_type, name=name)\r\n  File \"D:\\tensorflow\\copyable\\python3.5\\lib\\site-packages\\tensorflow\\python\\framework\\constant_op.py\", line 102, in\r\n constant\r\n    tensor_util.make_tensor_proto(value, dtype=dtype, shape=shape, verify_shape=verify_shape))\r\n  File \"D:\\tensorflow\\copyable\\python3.5\\lib\\site-packages\\tensorflow\\python\\framework\\tensor_util.py\", line 377, in\r\n make_tensor_proto\r\n    nparray = np.array(values, dtype=np_dt)\r\nOverflowError: Python int too large to convert to C long\r\n```\r\nWindows numpy throws exception when converting large int to C long while linux will truncate it silently.\r\n```\r\nPython 3.4.3 (default, Nov 17 2016, 01:08:31)\r\n[GCC 4.8.4] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import numpy as np\r\n>>> a = np.array(3000000000, np.int32)\r\n>>> a\r\narray(-1294967296, dtype=int32)\r\n>>>\r\n``` \r\nDiscussed in #9781 , it's hard to change tf.shape default int32 to int64, also can't change make_tensor_proto, it will make hundreds of dtype inference. ", "created_at": "2017-05-17T03:51:41Z", "updated_at": "2017-05-17T06:57:55Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/9780#discussion_r116905343", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/9780", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/116905343"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/9780#discussion_r116905343"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/9780"}}, "body_html": "<p>Here is the exception:</p>\n<pre><code>&gt;&gt;&gt; import tensorflow as tf\n&gt;&gt;&gt; a = tf.get_variable(\"W\", [3000000000], dtype=tf.bool)\n&gt;&gt;&gt; b = tf.shape(a)\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\n  File \"D:\\tensorflow\\copyable\\python3.5\\lib\\site-packages\\tensorflow\\python\\ops\\array_ops.py\", line 245, in shape\n    return shape_internal(input, name, optimize=True, out_type=out_type)\n  File \"D:\\tensorflow\\copyable\\python3.5\\lib\\site-packages\\tensorflow\\python\\ops\\array_ops.py\", line 271, in shape_i\nnternal\n    return constant(input_shape.as_list(), out_type, name=name)\n  File \"D:\\tensorflow\\copyable\\python3.5\\lib\\site-packages\\tensorflow\\python\\framework\\constant_op.py\", line 102, in\n constant\n    tensor_util.make_tensor_proto(value, dtype=dtype, shape=shape, verify_shape=verify_shape))\n  File \"D:\\tensorflow\\copyable\\python3.5\\lib\\site-packages\\tensorflow\\python\\framework\\tensor_util.py\", line 377, in\n make_tensor_proto\n    nparray = np.array(values, dtype=np_dt)\nOverflowError: Python int too large to convert to C long\n</code></pre>\n<p>Windows numpy throws exception when converting large int to C long while linux will truncate it silently.</p>\n<pre><code>Python 3.4.3 (default, Nov 17 2016, 01:08:31)\n[GCC 4.8.4] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt; import numpy as np\n&gt;&gt;&gt; a = np.array(3000000000, np.int32)\n&gt;&gt;&gt; a\narray(-1294967296, dtype=int32)\n&gt;&gt;&gt;\n</code></pre>\n<p>Discussed in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"227263007\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/9781\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/9781/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/9781\">#9781</a> , it's hard to change tf.shape default int32 to int64, also can't change make_tensor_proto, it will make hundreds of dtype inference.</p>", "body_text": "Here is the exception:\n>>> import tensorflow as tf\n>>> a = tf.get_variable(\"W\", [3000000000], dtype=tf.bool)\n>>> b = tf.shape(a)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"D:\\tensorflow\\copyable\\python3.5\\lib\\site-packages\\tensorflow\\python\\ops\\array_ops.py\", line 245, in shape\n    return shape_internal(input, name, optimize=True, out_type=out_type)\n  File \"D:\\tensorflow\\copyable\\python3.5\\lib\\site-packages\\tensorflow\\python\\ops\\array_ops.py\", line 271, in shape_i\nnternal\n    return constant(input_shape.as_list(), out_type, name=name)\n  File \"D:\\tensorflow\\copyable\\python3.5\\lib\\site-packages\\tensorflow\\python\\framework\\constant_op.py\", line 102, in\n constant\n    tensor_util.make_tensor_proto(value, dtype=dtype, shape=shape, verify_shape=verify_shape))\n  File \"D:\\tensorflow\\copyable\\python3.5\\lib\\site-packages\\tensorflow\\python\\framework\\tensor_util.py\", line 377, in\n make_tensor_proto\n    nparray = np.array(values, dtype=np_dt)\nOverflowError: Python int too large to convert to C long\n\nWindows numpy throws exception when converting large int to C long while linux will truncate it silently.\nPython 3.4.3 (default, Nov 17 2016, 01:08:31)\n[GCC 4.8.4] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import numpy as np\n>>> a = np.array(3000000000, np.int32)\n>>> a\narray(-1294967296, dtype=int32)\n>>>\n\nDiscussed in #9781 , it's hard to change tf.shape default int32 to int64, also can't change make_tensor_proto, it will make hundreds of dtype inference.", "in_reply_to_id": 116783034}