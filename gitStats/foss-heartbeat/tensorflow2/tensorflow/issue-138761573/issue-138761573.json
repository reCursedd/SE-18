{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1397", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1397/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1397/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1397/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/1397", "id": 138761573, "node_id": "MDU6SXNzdWUxMzg3NjE1NzM=", "number": 1397, "title": "Strange Multi-GPU Performance", "user": {"login": "Daniel451", "id": 4680082, "node_id": "MDQ6VXNlcjQ2ODAwODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/4680082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Daniel451", "html_url": "https://github.com/Daniel451", "followers_url": "https://api.github.com/users/Daniel451/followers", "following_url": "https://api.github.com/users/Daniel451/following{/other_user}", "gists_url": "https://api.github.com/users/Daniel451/gists{/gist_id}", "starred_url": "https://api.github.com/users/Daniel451/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Daniel451/subscriptions", "organizations_url": "https://api.github.com/users/Daniel451/orgs", "repos_url": "https://api.github.com/users/Daniel451/repos", "events_url": "https://api.github.com/users/Daniel451/events{/privacy}", "received_events_url": "https://api.github.com/users/Daniel451/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "zffchen78", "id": 7943790, "node_id": "MDQ6VXNlcjc5NDM3OTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/7943790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zffchen78", "html_url": "https://github.com/zffchen78", "followers_url": "https://api.github.com/users/zffchen78/followers", "following_url": "https://api.github.com/users/zffchen78/following{/other_user}", "gists_url": "https://api.github.com/users/zffchen78/gists{/gist_id}", "starred_url": "https://api.github.com/users/zffchen78/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zffchen78/subscriptions", "organizations_url": "https://api.github.com/users/zffchen78/orgs", "repos_url": "https://api.github.com/users/zffchen78/repos", "events_url": "https://api.github.com/users/zffchen78/events{/privacy}", "received_events_url": "https://api.github.com/users/zffchen78/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "zffchen78", "id": 7943790, "node_id": "MDQ6VXNlcjc5NDM3OTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/7943790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zffchen78", "html_url": "https://github.com/zffchen78", "followers_url": "https://api.github.com/users/zffchen78/followers", "following_url": "https://api.github.com/users/zffchen78/following{/other_user}", "gists_url": "https://api.github.com/users/zffchen78/gists{/gist_id}", "starred_url": "https://api.github.com/users/zffchen78/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zffchen78/subscriptions", "organizations_url": "https://api.github.com/users/zffchen78/orgs", "repos_url": "https://api.github.com/users/zffchen78/repos", "events_url": "https://api.github.com/users/zffchen78/events{/privacy}", "received_events_url": "https://api.github.com/users/zffchen78/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2016-03-06T07:03:18Z", "updated_at": "2016-06-08T22:35:11Z", "closed_at": "2016-06-08T22:35:11Z", "author_association": "NONE", "body_html": "<p>I am encountering a strange Multi-GPU performance issue. To validate I've run the following script <a href=\"https://github.com/aymericdamien/TensorFlow-Examples/blob/master/multigpu_basics.py\">TensorFlow Examples: Multi-GPU basics</a>.</p>\n<p>The performance on a single GPU was 19 seconds while dual GPU computation took 28 seconds.</p>\n<p>The same effect was reproducible on my system when I used multi-GPU for computing my own networks. You can see a short description and an ASCII illustration of my architecture here: <a href=\"http://stackoverflow.com/questions/35822251/tensorflow-one-network-two-gpus\" rel=\"nofollow\">stackoverflow link</a>.</p>\n<p>The problem seems to get worse with bigger computations, since my own network is quite big and on a <strong>single</strong> GPU it is about <strong>10 times</strong> faster than on two GPUs :/</p>\n<h3>Environment info</h3>\n<h5>Operating System information:</h5>\n<p><code>uname -or</code>:</p>\n<blockquote>\n<p>3.10.0-327.10.1.el7.x86_64 GNU/Linux</p>\n</blockquote>\n<p><code>cat /etc/redhat-release</code>:</p>\n<blockquote>\n<p>CentOS Linux release 7.2.1511 (Core)</p>\n</blockquote>\n<h5>Hardware</h5>\n<p>Graphics card is a <a href=\"http://www.nvidia.com/object/tesla-k80.html\" rel=\"nofollow\">NVIDIA Dual K80 Tesla</a>.</p>\n<h5>Software environment:</h5>\n<p><code>pip2.7 freeze</code>:</p>\n<blockquote>\n<p>backports-abc==0.4<br>\nbackports.ssl-match-hostname==3.5.0.1<br>\ncertifi==2015.11.20.1<br>\ncycler==0.10.0<br>\nCython==0.23.4<br>\nenum34==1.1.2<br>\nh5py==2.5.0<br>\nlibxml2-python==2.9.3<br>\nMako==1.0.1<br>\nmatplotlib==1.5.1<br>\nmercurial==3.6.2<br>\nnose==1.3.7<br>\nnumpy==1.10.4<br>\npkgconfig==1.1.0<br>\nprotobuf==3.0.0b2<br>\npyparsing==2.1.0<br>\npython-dateutil==2.4.2<br>\npytz==2015.7<br>\nsingledispatch==3.4.0.3<br>\nsix==1.10.0<br>\ntensorflow==0.7.1<br>\ntornado==4.3<br>\nvirtualenv==13.1.2<br>\nwheel==0.29.0</p>\n</blockquote>\n<p><code>python -c \"import tensorflow; print(tensorflow.__version__)</code>:</p>\n<blockquote>\n<p>I tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcublas.so.7.0 locally<br>\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcudnn.so.4.0.7 locally<br>\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcufft.so.7.0 locally<br>\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcuda.so.1 locally<br>\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcurand.so.7.0 locally<br>\n0.7.1</p>\n</blockquote>\n<p>Built with <strong>bazel</strong> from sources, commit hash:</p>\n<blockquote>\n<p>commit <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/eda89e930cfcbd992ecacafd40267d733e2153dc/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/eda89e930cfcbd992ecacafd40267d733e2153dc\"><tt>eda89e9</tt></a></p>\n</blockquote>\n<h3>What have you tried?</h3>\n<ol>\n<li>different scripts and setups</li>\n</ol>\n<h3>Logs or other output that would be helpful</h3>\n<p>Complete output of <code>multigpu_basics.py</code> with <code>tf.ConfigProto(log_device_placement=log_device_placement)</code> is attached.<br>\n<a href=\"https://github.com/tensorflow/tensorflow/files/160210/out.txt\">out.txt</a></p>", "body_text": "I am encountering a strange Multi-GPU performance issue. To validate I've run the following script TensorFlow Examples: Multi-GPU basics.\nThe performance on a single GPU was 19 seconds while dual GPU computation took 28 seconds.\nThe same effect was reproducible on my system when I used multi-GPU for computing my own networks. You can see a short description and an ASCII illustration of my architecture here: stackoverflow link.\nThe problem seems to get worse with bigger computations, since my own network is quite big and on a single GPU it is about 10 times faster than on two GPUs :/\nEnvironment info\nOperating System information:\nuname -or:\n\n3.10.0-327.10.1.el7.x86_64 GNU/Linux\n\ncat /etc/redhat-release:\n\nCentOS Linux release 7.2.1511 (Core)\n\nHardware\nGraphics card is a NVIDIA Dual K80 Tesla.\nSoftware environment:\npip2.7 freeze:\n\nbackports-abc==0.4\nbackports.ssl-match-hostname==3.5.0.1\ncertifi==2015.11.20.1\ncycler==0.10.0\nCython==0.23.4\nenum34==1.1.2\nh5py==2.5.0\nlibxml2-python==2.9.3\nMako==1.0.1\nmatplotlib==1.5.1\nmercurial==3.6.2\nnose==1.3.7\nnumpy==1.10.4\npkgconfig==1.1.0\nprotobuf==3.0.0b2\npyparsing==2.1.0\npython-dateutil==2.4.2\npytz==2015.7\nsingledispatch==3.4.0.3\nsix==1.10.0\ntensorflow==0.7.1\ntornado==4.3\nvirtualenv==13.1.2\nwheel==0.29.0\n\npython -c \"import tensorflow; print(tensorflow.__version__):\n\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcublas.so.7.0 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcudnn.so.4.0.7 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcufft.so.7.0 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcurand.so.7.0 locally\n0.7.1\n\nBuilt with bazel from sources, commit hash:\n\ncommit eda89e9\n\nWhat have you tried?\n\ndifferent scripts and setups\n\nLogs or other output that would be helpful\nComplete output of multigpu_basics.py with tf.ConfigProto(log_device_placement=log_device_placement) is attached.\nout.txt", "body": "I am encountering a strange Multi-GPU performance issue. To validate I've run the following script [TensorFlow Examples: Multi-GPU basics](https://github.com/aymericdamien/TensorFlow-Examples/blob/master/multigpu_basics.py).\n\nThe performance on a single GPU was 19 seconds while dual GPU computation took 28 seconds.\n\nThe same effect was reproducible on my system when I used multi-GPU for computing my own networks. You can see a short description and an ASCII illustration of my architecture here: [stackoverflow link](http://stackoverflow.com/questions/35822251/tensorflow-one-network-two-gpus).\n\nThe problem seems to get worse with bigger computations, since my own network is quite big and on a **single** GPU it is about **10 times** faster than on two GPUs :/\n### Environment info\n##### Operating System information:\n\n`uname -or`:\n\n> 3.10.0-327.10.1.el7.x86_64 GNU/Linux\n\n`cat /etc/redhat-release`:\n\n> CentOS Linux release 7.2.1511 (Core)\n##### Hardware\n\nGraphics card is a [NVIDIA Dual K80 Tesla](http://www.nvidia.com/object/tesla-k80.html). \n##### Software environment:\n\n`pip2.7 freeze`:\n\n> backports-abc==0.4\n> backports.ssl-match-hostname==3.5.0.1\n> certifi==2015.11.20.1\n> cycler==0.10.0\n> Cython==0.23.4\n> enum34==1.1.2\n> h5py==2.5.0\n> libxml2-python==2.9.3\n> Mako==1.0.1\n> matplotlib==1.5.1\n> mercurial==3.6.2\n> nose==1.3.7\n> numpy==1.10.4\n> pkgconfig==1.1.0\n> protobuf==3.0.0b2\n> pyparsing==2.1.0\n> python-dateutil==2.4.2\n> pytz==2015.7\n> singledispatch==3.4.0.3\n> six==1.10.0\n> tensorflow==0.7.1\n> tornado==4.3\n> virtualenv==13.1.2\n> wheel==0.29.0\n\n`python -c \"import tensorflow; print(tensorflow.__version__)`:\n\n> I tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcublas.so.7.0 locally\n> I tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcudnn.so.4.0.7 locally\n> I tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcufft.so.7.0 locally\n> I tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcuda.so.1 locally\n> I tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcurand.so.7.0 locally\n> 0.7.1\n\nBuilt with **bazel** from sources, commit hash:\n\n> commit eda89e930cfcbd992ecacafd40267d733e2153dc\n### What have you tried?\n1. different scripts and setups\n### Logs or other output that would be helpful\n\nComplete output of `multigpu_basics.py` with `tf.ConfigProto(log_device_placement=log_device_placement)` is attached.\n[out.txt](https://github.com/tensorflow/tensorflow/files/160210/out.txt)\n"}