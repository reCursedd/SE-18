{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/432962172", "html_url": "https://github.com/tensorflow/tensorflow/issues/22145#issuecomment-432962172", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22145", "id": 432962172, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjk2MjE3Mg==", "user": {"login": "rodrigoberriel", "id": 7027770, "node_id": "MDQ6VXNlcjcwMjc3NzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/7027770?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rodrigoberriel", "html_url": "https://github.com/rodrigoberriel", "followers_url": "https://api.github.com/users/rodrigoberriel/followers", "following_url": "https://api.github.com/users/rodrigoberriel/following{/other_user}", "gists_url": "https://api.github.com/users/rodrigoberriel/gists{/gist_id}", "starred_url": "https://api.github.com/users/rodrigoberriel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rodrigoberriel/subscriptions", "organizations_url": "https://api.github.com/users/rodrigoberriel/orgs", "repos_url": "https://api.github.com/users/rodrigoberriel/repos", "events_url": "https://api.github.com/users/rodrigoberriel/events{/privacy}", "received_events_url": "https://api.github.com/users/rodrigoberriel/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-25T08:31:44Z", "updated_at": "2018-10-25T08:31:44Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=192142\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mrry\">@mrry</a> You're correct. Disabling the layout optimizer did the trick. Based on your second reply, I also tried using <code>with tf.device('/cpu:0'):</code> in the <code>apply_blur(...)</code> and it worked! Full code:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">apply_blur</span>(<span class=\"pl-smi\">img</span>):\n    <span class=\"pl-k\">with</span> tf.device(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>/cpu:0<span class=\"pl-pds\">'</span></span>):\n        blur <span class=\"pl-k\">=</span> tf.random_uniform((<span class=\"pl-c1\">3</span>,<span class=\"pl-c1\">3</span>,<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">1</span>))\n        img <span class=\"pl-k\">=</span> tf.nn.depthwise_conv2d(img[<span class=\"pl-c1\">None</span>], blur, [<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">1</span>], <span class=\"pl-s\"><span class=\"pl-pds\">'</span>VALID<span class=\"pl-pds\">'</span></span>)[<span class=\"pl-c1\">0</span>]\n        <span class=\"pl-k\">return</span> img\n\ntf.reset_default_graph()\ndataset <span class=\"pl-k\">=</span> tf.data.Dataset.from_tensor_slices(tf.ones((<span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">128</span>, <span class=\"pl-c1\">128</span>, <span class=\"pl-c1\">1</span>)))\ndataset <span class=\"pl-k\">=</span> dataset.map(apply_blur, <span class=\"pl-c1\">2</span>)\n\niterator <span class=\"pl-k\">=</span> dataset.make_one_shot_iterator()\nbatch <span class=\"pl-k\">=</span> iterator.get_next()\n\nconfig <span class=\"pl-k\">=</span> tf.ConfigProto()\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> this also works</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> from tensorflow.core.protobuf import rewriter_config_pb2</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> config.graph_options.rewrite_options.layout_optimizer = rewriter_config_pb2.RewriterConfig.OFF</span>\nconfig.gpu_options.allow_growth <span class=\"pl-k\">=</span> <span class=\"pl-c1\">True</span>\n<span class=\"pl-k\">with</span> tf.Session(<span class=\"pl-v\">config</span><span class=\"pl-k\">=</span>config) <span class=\"pl-k\">as</span> sess:\n    out <span class=\"pl-k\">=</span> sess.run(batch)</pre></div>\n<p>If you use the <code>with tf.device('/cpu:0'):</code> only on the <code>tf.nn.depthwise_conv2d(...)</code> it works too:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">apply_blur</span>(<span class=\"pl-smi\">img</span>):\n    blur <span class=\"pl-k\">=</span> tf.random_uniform((<span class=\"pl-c1\">3</span>,<span class=\"pl-c1\">3</span>,<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">1</span>))\n    <span class=\"pl-k\">with</span> tf.device(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>/cpu:0<span class=\"pl-pds\">'</span></span>):\n        img <span class=\"pl-k\">=</span> tf.nn.depthwise_conv2d(img[<span class=\"pl-c1\">None</span>], blur, [<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">1</span>], <span class=\"pl-s\"><span class=\"pl-pds\">'</span>VALID<span class=\"pl-pds\">'</span></span>)\n    <span class=\"pl-k\">return</span> img[<span class=\"pl-c1\">0</span>]</pre></div>", "body_text": "@mrry You're correct. Disabling the layout optimizer did the trick. Based on your second reply, I also tried using with tf.device('/cpu:0'): in the apply_blur(...) and it worked! Full code:\nimport tensorflow as tf\n\ndef apply_blur(img):\n    with tf.device('/cpu:0'):\n        blur = tf.random_uniform((3,3,1,1))\n        img = tf.nn.depthwise_conv2d(img[None], blur, [1,1,1,1], 'VALID')[0]\n        return img\n\ntf.reset_default_graph()\ndataset = tf.data.Dataset.from_tensor_slices(tf.ones((10, 128, 128, 1)))\ndataset = dataset.map(apply_blur, 2)\n\niterator = dataset.make_one_shot_iterator()\nbatch = iterator.get_next()\n\nconfig = tf.ConfigProto()\n# this also works\n# from tensorflow.core.protobuf import rewriter_config_pb2\n# config.graph_options.rewrite_options.layout_optimizer = rewriter_config_pb2.RewriterConfig.OFF\nconfig.gpu_options.allow_growth = True\nwith tf.Session(config=config) as sess:\n    out = sess.run(batch)\nIf you use the with tf.device('/cpu:0'): only on the tf.nn.depthwise_conv2d(...) it works too:\ndef apply_blur(img):\n    blur = tf.random_uniform((3,3,1,1))\n    with tf.device('/cpu:0'):\n        img = tf.nn.depthwise_conv2d(img[None], blur, [1,1,1,1], 'VALID')\n    return img[0]", "body": "@mrry You're correct. Disabling the layout optimizer did the trick. Based on your second reply, I also tried using `with tf.device('/cpu:0'):` in the `apply_blur(...)` and it worked! Full code:\r\n\r\n```python\r\nimport tensorflow as tf\r\n\r\ndef apply_blur(img):\r\n    with tf.device('/cpu:0'):\r\n        blur = tf.random_uniform((3,3,1,1))\r\n        img = tf.nn.depthwise_conv2d(img[None], blur, [1,1,1,1], 'VALID')[0]\r\n        return img\r\n\r\ntf.reset_default_graph()\r\ndataset = tf.data.Dataset.from_tensor_slices(tf.ones((10, 128, 128, 1)))\r\ndataset = dataset.map(apply_blur, 2)\r\n\r\niterator = dataset.make_one_shot_iterator()\r\nbatch = iterator.get_next()\r\n\r\nconfig = tf.ConfigProto()\r\n# this also works\r\n# from tensorflow.core.protobuf import rewriter_config_pb2\r\n# config.graph_options.rewrite_options.layout_optimizer = rewriter_config_pb2.RewriterConfig.OFF\r\nconfig.gpu_options.allow_growth = True\r\nwith tf.Session(config=config) as sess:\r\n    out = sess.run(batch)\r\n```\r\n\r\nIf you use the `with tf.device('/cpu:0'):` only on the `tf.nn.depthwise_conv2d(...)` it works too:\r\n\r\n```python\r\ndef apply_blur(img):\r\n    blur = tf.random_uniform((3,3,1,1))\r\n    with tf.device('/cpu:0'):\r\n        img = tf.nn.depthwise_conv2d(img[None], blur, [1,1,1,1], 'VALID')\r\n    return img[0]\r\n```"}