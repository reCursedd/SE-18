{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16541", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16541/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16541/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16541/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16541", "id": 292415280, "node_id": "MDU6SXNzdWUyOTI0MTUyODA=", "number": 16541, "title": "Looking for a way to compile TF without SSE.", "user": {"login": "daisylab", "id": 31073109, "node_id": "MDQ6VXNlcjMxMDczMTA5", "avatar_url": "https://avatars3.githubusercontent.com/u/31073109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daisylab", "html_url": "https://github.com/daisylab", "followers_url": "https://api.github.com/users/daisylab/followers", "following_url": "https://api.github.com/users/daisylab/following{/other_user}", "gists_url": "https://api.github.com/users/daisylab/gists{/gist_id}", "starred_url": "https://api.github.com/users/daisylab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daisylab/subscriptions", "organizations_url": "https://api.github.com/users/daisylab/orgs", "repos_url": "https://api.github.com/users/daisylab/repos", "events_url": "https://api.github.com/users/daisylab/events{/privacy}", "received_events_url": "https://api.github.com/users/daisylab/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586558, "node_id": "MDU6TGFiZWw0MDQ1ODY1NTg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:community%20support", "name": "stat:community support", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-01-29T13:55:50Z", "updated_at": "2018-10-24T21:17:06Z", "closed_at": "2018-10-24T21:17:06Z", "author_association": "NONE", "body_html": "<p>Please go to Stack Overflow for help and support:</p>\n<p><a href=\"https://stackoverflow.com/questions/tagged/tensorflow\" rel=\"nofollow\">https://stackoverflow.com/questions/tagged/tensorflow</a></p>\n<p>If you open a GitHub issue, here is our policy:</p>\n<ol>\n<li>It must be a bug or a feature request.</li>\n<li>The form below must be filled out.</li>\n<li>It shouldn't be a TensorBoard issue. Those go <a href=\"https://github.com/tensorflow/tensorboard/issues\">here</a>.</li>\n</ol>\n<p><strong>Here's why we have that policy</strong>: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.</p>\n<hr>\n<h3>System information</h3>\n<ul>\n<li>\n<p><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:<br>\nNO.</p>\n</li>\n<li>\n<p><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:<br>\nLinux Slackware 14.2 (32bit)</p>\n</li>\n<li>\n<p><strong>TensorFlow installed from (source or binary)</strong>:<br>\nsource</p>\n</li>\n<li>\n<p><strong>TensorFlow version (use command below)</strong>:<br>\n1.5.0</p>\n</li>\n<li>\n<p><strong>Python version</strong>:<br>\n3.6.4</p>\n</li>\n<li>\n<p><strong>Bazel version (if compiling from source)</strong>:<br>\n0.5.4</p>\n</li>\n<li>\n<p><strong>GCC/Compiler version (if compiling from source)</strong>:<br>\n5.3.0</p>\n</li>\n<li>\n<p><strong>CUDA/cuDNN version</strong>:<br>\nN/A</p>\n</li>\n<li>\n<p><strong>GPU model and memory</strong>:<br>\nN/A</p>\n</li>\n<li>\n<p><strong>Exact command to reproduce</strong>:<br>\nbazel build --config=opt //tensorflow/tools/pip_package:build_pip_package</p>\n</li>\n</ul>\n<p>You can collect some of this information using our environment capture script:</p>\n<p><a href=\"https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\">https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh</a></p>\n<p>You can obtain the TensorFlow version with</p>\n<p>python -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"</p>\n<h3>Describe the problem</h3>\n<p>Describe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.</p>\n<h4>Problem</h4>\n<p>Pardon me first to bother you. This is neither about a bug, nor a feature request. This is about the 32-bit architecture, and I know that TF do not officially support 32-bit machines.</p>\n<p>I also use decent NVIDIA workstations at my lab. Thank you for your work. However, sometimes, I open my old laptop to write some code, and it is a 32-bit machine.</p>\n<p>So far, (up to TF 1.4.1), I could somehow manage to compile the source code to get the things right. But, in TF 1.5, I receive next error messages here and there:</p>\n<p>\"The TensorFlow library was compiled to use \" &lt;&lt; SSE<br>\n\" instructions, but these aren't available on your machine.\"</p>\n<p>I think that if <code>__SSE__</code> flag is disabled, then TF 1.5 can be available to the 32-bit architecuture, so I append -march=i686 to the configure script and bazel argument, but it's no worth. I'm trying to figure out what turns on SSE flag, but still I got no effort.</p>\n<p>Currently I add to the bazel command this:</p>\n<p>bazel build --config=opt --copt=-march=\"i686\" //tensorflow/tools/pip_package:build_pip_package</p>\n<h3>Source code / logs</h3>\n<p>Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.</p>", "body_text": "Please go to Stack Overflow for help and support:\nhttps://stackoverflow.com/questions/tagged/tensorflow\nIf you open a GitHub issue, here is our policy:\n\nIt must be a bug or a feature request.\nThe form below must be filled out.\nIt shouldn't be a TensorBoard issue. Those go here.\n\nHere's why we have that policy: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\n\nSystem information\n\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nNO.\n\n\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nLinux Slackware 14.2 (32bit)\n\n\nTensorFlow installed from (source or binary):\nsource\n\n\nTensorFlow version (use command below):\n1.5.0\n\n\nPython version:\n3.6.4\n\n\nBazel version (if compiling from source):\n0.5.4\n\n\nGCC/Compiler version (if compiling from source):\n5.3.0\n\n\nCUDA/cuDNN version:\nN/A\n\n\nGPU model and memory:\nN/A\n\n\nExact command to reproduce:\nbazel build --config=opt //tensorflow/tools/pip_package:build_pip_package\n\n\nYou can collect some of this information using our environment capture script:\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\nYou can obtain the TensorFlow version with\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\nDescribe the problem\nDescribe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.\nProblem\nPardon me first to bother you. This is neither about a bug, nor a feature request. This is about the 32-bit architecture, and I know that TF do not officially support 32-bit machines.\nI also use decent NVIDIA workstations at my lab. Thank you for your work. However, sometimes, I open my old laptop to write some code, and it is a 32-bit machine.\nSo far, (up to TF 1.4.1), I could somehow manage to compile the source code to get the things right. But, in TF 1.5, I receive next error messages here and there:\n\"The TensorFlow library was compiled to use \" << SSE\n\" instructions, but these aren't available on your machine.\"\nI think that if __SSE__ flag is disabled, then TF 1.5 can be available to the 32-bit architecuture, so I append -march=i686 to the configure script and bazel argument, but it's no worth. I'm trying to figure out what turns on SSE flag, but still I got no effort.\nCurrently I add to the bazel command this:\nbazel build --config=opt --copt=-march=\"i686\" //tensorflow/tools/pip_package:build_pip_package\nSource code / logs\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.", "body": "Please go to Stack Overflow for help and support:\r\n\r\nhttps://stackoverflow.com/questions/tagged/tensorflow\r\n\r\nIf you open a GitHub issue, here is our policy:\r\n\r\n1. It must be a bug or a feature request.\r\n2. The form below must be filled out.\r\n3. It shouldn't be a TensorBoard issue. Those go [here](https://github.com/tensorflow/tensorboard/issues).\r\n\r\n**Here's why we have that policy**: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nNO.\r\n\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nLinux Slackware 14.2 (32bit)\r\n\r\n- **TensorFlow installed from (source or binary)**:\r\nsource\r\n\r\n- **TensorFlow version (use command below)**:\r\n1.5.0\r\n\r\n- **Python version**: \r\n3.6.4\r\n\r\n- **Bazel version (if compiling from source)**:\r\n0.5.4\r\n\r\n- **GCC/Compiler version (if compiling from source)**:\r\n5.3.0\r\n\r\n- **CUDA/cuDNN version**:\r\nN/A\r\n\r\n- **GPU model and memory**:\r\nN/A\r\n\r\n- **Exact command to reproduce**:\r\nbazel build --config=opt //tensorflow/tools/pip_package:build_pip_package\r\n\r\nYou can collect some of this information using our environment capture script:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\nYou can obtain the TensorFlow version with\r\n\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n\r\n### Describe the problem\r\nDescribe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.\r\n\r\n#### Problem\r\n Pardon me first to bother you. This is neither about a bug, nor a feature request. This is about the 32-bit architecture, and I know that TF do not officially support 32-bit machines.\r\n\r\nI also use decent NVIDIA workstations at my lab. Thank you for your work. However, sometimes, I open my old laptop to write some code, and it is a 32-bit machine.\r\n\r\nSo far, (up to TF 1.4.1), I could somehow manage to compile the source code to get the things right. But, in TF 1.5, I receive next error messages here and there:\r\n\r\n\"The TensorFlow library was compiled to use \" << SSE\r\n\" instructions, but these aren't available on your machine.\"\r\n\r\n\r\nI think that if `__SSE__` flag is disabled, then TF 1.5 can be available to the 32-bit architecuture, so I append -march=i686 to the configure script and bazel argument, but it's no worth. I'm trying to figure out what turns on SSE flag, but still I got no effort.\r\n\r\nCurrently I add to the bazel command this:\r\n\r\nbazel build --config=opt --copt=-march=\"i686\" //tensorflow/tools/pip_package:build_pip_package\r\n\r\n\r\n\r\n\r\n### Source code / logs\r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.\r\n"}