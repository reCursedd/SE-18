{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/417087863", "html_url": "https://github.com/tensorflow/tensorflow/issues/2399#issuecomment-417087863", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2399", "id": 417087863, "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzA4Nzg2Mw==", "user": {"login": "gzerveas", "id": 12188368, "node_id": "MDQ6VXNlcjEyMTg4MzY4", "avatar_url": "https://avatars0.githubusercontent.com/u/12188368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gzerveas", "html_url": "https://github.com/gzerveas", "followers_url": "https://api.github.com/users/gzerveas/followers", "following_url": "https://api.github.com/users/gzerveas/following{/other_user}", "gists_url": "https://api.github.com/users/gzerveas/gists{/gist_id}", "starred_url": "https://api.github.com/users/gzerveas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gzerveas/subscriptions", "organizations_url": "https://api.github.com/users/gzerveas/orgs", "repos_url": "https://api.github.com/users/gzerveas/repos", "events_url": "https://api.github.com/users/gzerveas/events{/privacy}", "received_events_url": "https://api.github.com/users/gzerveas/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-29T20:07:13Z", "updated_at": "2018-08-29T20:09:02Z", "author_association": "NONE", "body_html": "<p>Whenever you add summaries, you also include the <code>global_step</code>, like this: <code>summary_writer.add_summary(summary, global_step)</code>.<br>\nSo it's then just a matter of passing the right global_step values when you add your summaries. You can do this for example by keeping a non-trainable Tensorflow variable, which is going to be checkpointed and can be restored from the checkpoint together with all other savable variables. This 0D tensor is incremented at each training step if you pass it as part of the list of tensors to <code>sess.run</code>.<br>\nSome helpful operations:</p>\n<pre><code>global_step_tensor = tf.Variable(0, trainable=False, name='global_step')\noutput = self.sess.run(global_step_tensor + tensors_to_run, feed_dict=feed_dict)\nglobal_step = output[0]\n</code></pre>\n<p>The <strong>real</strong> problem is that Tensorboard doesn't let you pick your own colors for displaying curves corresponding to different event files, which means that if you restore a training session from a checkpoint, the different parts will be displayed with different colors. This can be very annoying, especially if you compare several models at the same time.</p>", "body_text": "Whenever you add summaries, you also include the global_step, like this: summary_writer.add_summary(summary, global_step).\nSo it's then just a matter of passing the right global_step values when you add your summaries. You can do this for example by keeping a non-trainable Tensorflow variable, which is going to be checkpointed and can be restored from the checkpoint together with all other savable variables. This 0D tensor is incremented at each training step if you pass it as part of the list of tensors to sess.run.\nSome helpful operations:\nglobal_step_tensor = tf.Variable(0, trainable=False, name='global_step')\noutput = self.sess.run(global_step_tensor + tensors_to_run, feed_dict=feed_dict)\nglobal_step = output[0]\n\nThe real problem is that Tensorboard doesn't let you pick your own colors for displaying curves corresponding to different event files, which means that if you restore a training session from a checkpoint, the different parts will be displayed with different colors. This can be very annoying, especially if you compare several models at the same time.", "body": "Whenever you add summaries, you also include the `global_step`, like this: `summary_writer.add_summary(summary, global_step)`.\r\nSo it's then just a matter of passing the right global_step values when you add your summaries. You can do this for example by keeping a non-trainable Tensorflow variable, which is going to be checkpointed and can be restored from the checkpoint together with all other savable variables. This 0D tensor is incremented at each training step if you pass it as part of the list of tensors to `sess.run`.\r\nSome helpful operations:\r\n```\r\nglobal_step_tensor = tf.Variable(0, trainable=False, name='global_step')\r\noutput = self.sess.run(global_step_tensor + tensors_to_run, feed_dict=feed_dict)\r\nglobal_step = output[0]\r\n```\r\nThe **real** problem is that Tensorboard doesn't let you pick your own colors for displaying curves corresponding to different event files, which means that if you restore a training session from a checkpoint, the different parts will be displayed with different colors. This can be very annoying, especially if you compare several models at the same time. "}