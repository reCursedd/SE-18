{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/268520631", "html_url": "https://github.com/tensorflow/tensorflow/issues/3628#issuecomment-268520631", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3628", "id": 268520631, "node_id": "MDEyOklzc3VlQ29tbWVudDI2ODUyMDYzMQ==", "user": {"login": "trsaunders", "id": 660377, "node_id": "MDQ6VXNlcjY2MDM3Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/660377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trsaunders", "html_url": "https://github.com/trsaunders", "followers_url": "https://api.github.com/users/trsaunders/followers", "following_url": "https://api.github.com/users/trsaunders/following{/other_user}", "gists_url": "https://api.github.com/users/trsaunders/gists{/gist_id}", "starred_url": "https://api.github.com/users/trsaunders/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trsaunders/subscriptions", "organizations_url": "https://api.github.com/users/trsaunders/orgs", "repos_url": "https://api.github.com/users/trsaunders/repos", "events_url": "https://api.github.com/users/trsaunders/events{/privacy}", "received_events_url": "https://api.github.com/users/trsaunders/received_events", "type": "User", "site_admin": false}, "created_at": "2016-12-21T13:17:07Z", "updated_at": "2016-12-21T13:17:07Z", "author_association": "NONE", "body_html": "<p>I'm also experiencing this. It seems that moving_averages._zero_debias() uses scopes in a peculiar way.</p>\n<p>For example, if you pass assign_moving_average a variable created within a variable scope, e.g with name \"scope1/var\", then _zero_debias() creates its variables \"biased\" and \"local_step\" within the variable scope \"scope1/var\", but because we're already within the scope \"scope1\" the variables end up with names \"scope1/scope1/var/biased\" etc.</p>\n<p>This may not be the problem, but it seems like something that needs tidying up!</p>", "body_text": "I'm also experiencing this. It seems that moving_averages._zero_debias() uses scopes in a peculiar way.\nFor example, if you pass assign_moving_average a variable created within a variable scope, e.g with name \"scope1/var\", then _zero_debias() creates its variables \"biased\" and \"local_step\" within the variable scope \"scope1/var\", but because we're already within the scope \"scope1\" the variables end up with names \"scope1/scope1/var/biased\" etc.\nThis may not be the problem, but it seems like something that needs tidying up!", "body": "I'm also experiencing this. It seems that moving_averages._zero_debias() uses scopes in a peculiar way.\r\n\r\nFor example, if you pass assign_moving_average a variable created within a variable scope, e.g with name \"scope1/var\", then _zero_debias() creates its variables \"biased\" and \"local_step\" within the variable scope \"scope1/var\", but because we're already within the scope \"scope1\" the variables end up with names \"scope1/scope1/var/biased\" etc.\r\n\r\nThis may not be the problem, but it seems like something that needs tidying up!\r\n"}