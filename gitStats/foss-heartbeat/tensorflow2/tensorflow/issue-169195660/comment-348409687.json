{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/348409687", "html_url": "https://github.com/tensorflow/tensorflow/issues/3628#issuecomment-348409687", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3628", "id": 348409687, "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODQwOTY4Nw==", "user": {"login": "eigen2017", "id": 33959526, "node_id": "MDQ6VXNlcjMzOTU5NTI2", "avatar_url": "https://avatars3.githubusercontent.com/u/33959526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eigen2017", "html_url": "https://github.com/eigen2017", "followers_url": "https://api.github.com/users/eigen2017/followers", "following_url": "https://api.github.com/users/eigen2017/following{/other_user}", "gists_url": "https://api.github.com/users/eigen2017/gists{/gist_id}", "starred_url": "https://api.github.com/users/eigen2017/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eigen2017/subscriptions", "organizations_url": "https://api.github.com/users/eigen2017/orgs", "repos_url": "https://api.github.com/users/eigen2017/repos", "events_url": "https://api.github.com/users/eigen2017/events{/privacy}", "received_events_url": "https://api.github.com/users/eigen2017/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-01T06:04:57Z", "updated_at": "2017-12-01T06:06:38Z", "author_association": "NONE", "body_html": "<p>hope this bug be solved in a shorter time , cause this bug is in c++ core .<br>\ni only use c++ core and cross compile tensor to various devices ,<br>\nany way , here's my c++ \"ugly\" version for this bug ..</p>\n<pre><code>void MyTensorflow::SolveIssue_MovingAverage(GraphDef &amp; graph_def)\n{\n\n    int i;\n    int j;\n    for (i = 0; i &lt; graph_def.node_size(); i++)\n    {\n        if (graph_def.mutable_node(i)-&gt;op() == \"RefSwitch\")\n        {\n            graph_def.mutable_node(i)-&gt;set_op(\"Switch\");\n            for (j = 0; j &lt; graph_def.mutable_node(i)-&gt;input_size(); j++)\n            {\n                if (string::npos != graph_def.mutable_node(i)-&gt;mutable_input(j)-&gt;find(\"moving_\"))\n                {\n                    graph_def.mutable_node(i)-&gt;set_input(j, graph_def.mutable_node(i)-&gt;input(j) + \"/read\");\n                }\n            }\n        }\n        else if (graph_def.mutable_node(i)-&gt;op() == \"AssignSub\")\n        {\n            graph_def.mutable_node(i)-&gt;set_op(\"Sub\");\n\n            auto it = graph_def.mutable_node(i)-&gt;mutable_attr()-&gt;end();\n\n            for (it = graph_def.mutable_node(i)-&gt;mutable_attr()-&gt;begin(); it != graph_def.mutable_node(i)-&gt;mutable_attr()-&gt;end(); it++)\n            {\n                if (it-&gt;first == \"use_locking\")\n                {\n                    break;\n                }\n            }\n\n            if (it != graph_def.mutable_node(i)-&gt;mutable_attr()-&gt;end())\n            {\n                graph_def.mutable_node(i)-&gt;mutable_attr()-&gt;erase(it);\n            }\n        }\n    }\n\n}\n</code></pre>", "body_text": "hope this bug be solved in a shorter time , cause this bug is in c++ core .\ni only use c++ core and cross compile tensor to various devices ,\nany way , here's my c++ \"ugly\" version for this bug ..\nvoid MyTensorflow::SolveIssue_MovingAverage(GraphDef & graph_def)\n{\n\n    int i;\n    int j;\n    for (i = 0; i < graph_def.node_size(); i++)\n    {\n        if (graph_def.mutable_node(i)->op() == \"RefSwitch\")\n        {\n            graph_def.mutable_node(i)->set_op(\"Switch\");\n            for (j = 0; j < graph_def.mutable_node(i)->input_size(); j++)\n            {\n                if (string::npos != graph_def.mutable_node(i)->mutable_input(j)->find(\"moving_\"))\n                {\n                    graph_def.mutable_node(i)->set_input(j, graph_def.mutable_node(i)->input(j) + \"/read\");\n                }\n            }\n        }\n        else if (graph_def.mutable_node(i)->op() == \"AssignSub\")\n        {\n            graph_def.mutable_node(i)->set_op(\"Sub\");\n\n            auto it = graph_def.mutable_node(i)->mutable_attr()->end();\n\n            for (it = graph_def.mutable_node(i)->mutable_attr()->begin(); it != graph_def.mutable_node(i)->mutable_attr()->end(); it++)\n            {\n                if (it->first == \"use_locking\")\n                {\n                    break;\n                }\n            }\n\n            if (it != graph_def.mutable_node(i)->mutable_attr()->end())\n            {\n                graph_def.mutable_node(i)->mutable_attr()->erase(it);\n            }\n        }\n    }\n\n}", "body": "hope this bug be solved in a shorter time , cause this bug is in c++ core . \r\ni only use c++ core and cross compile tensor to various devices , \r\nany way , here's my c++ \"ugly\" version for this bug ..\r\n\r\n```\r\nvoid MyTensorflow::SolveIssue_MovingAverage(GraphDef & graph_def)\r\n{\r\n\r\n    int i;\r\n    int j;\r\n    for (i = 0; i < graph_def.node_size(); i++)\r\n    {\r\n        if (graph_def.mutable_node(i)->op() == \"RefSwitch\")\r\n        {\r\n            graph_def.mutable_node(i)->set_op(\"Switch\");\r\n            for (j = 0; j < graph_def.mutable_node(i)->input_size(); j++)\r\n            {\r\n                if (string::npos != graph_def.mutable_node(i)->mutable_input(j)->find(\"moving_\"))\r\n                {\r\n                    graph_def.mutable_node(i)->set_input(j, graph_def.mutable_node(i)->input(j) + \"/read\");\r\n                }\r\n            }\r\n        }\r\n        else if (graph_def.mutable_node(i)->op() == \"AssignSub\")\r\n        {\r\n            graph_def.mutable_node(i)->set_op(\"Sub\");\r\n\r\n            auto it = graph_def.mutable_node(i)->mutable_attr()->end();\r\n\r\n            for (it = graph_def.mutable_node(i)->mutable_attr()->begin(); it != graph_def.mutable_node(i)->mutable_attr()->end(); it++)\r\n            {\r\n                if (it->first == \"use_locking\")\r\n                {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (it != graph_def.mutable_node(i)->mutable_attr()->end())\r\n            {\r\n                graph_def.mutable_node(i)->mutable_attr()->erase(it);\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n```"}