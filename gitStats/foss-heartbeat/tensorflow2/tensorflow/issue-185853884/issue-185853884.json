{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5257", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5257/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5257/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5257/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/5257", "id": 185853884, "node_id": "MDU6SXNzdWUxODU4NTM4ODQ=", "number": 5257, "title": "tf.while_loop seg faults upon setting parallel_iterations=0", "user": {"login": "cdjkim", "id": 7278571, "node_id": "MDQ6VXNlcjcyNzg1NzE=", "avatar_url": "https://avatars2.githubusercontent.com/u/7278571?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdjkim", "html_url": "https://github.com/cdjkim", "followers_url": "https://api.github.com/users/cdjkim/followers", "following_url": "https://api.github.com/users/cdjkim/following{/other_user}", "gists_url": "https://api.github.com/users/cdjkim/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdjkim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdjkim/subscriptions", "organizations_url": "https://api.github.com/users/cdjkim/orgs", "repos_url": "https://api.github.com/users/cdjkim/repos", "events_url": "https://api.github.com/users/cdjkim/events{/privacy}", "received_events_url": "https://api.github.com/users/cdjkim/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-10-28T07:11:46Z", "updated_at": "2016-11-08T21:13:56Z", "closed_at": "2016-11-08T21:13:56Z", "author_association": "NONE", "body_html": "<p>NOTE: Only file GitHub issues for bugs and feature requests.  All other topics will be closed.</p>\n<p>For general support from the community, see <a href=\"https://stackoverflow.com/questions/tagged/tensorflow\" rel=\"nofollow\">StackOverflow</a>.<br>\nTo make bugs and feature requests more easy to find and organize, we close issues that are deemed<br>\nout of scope for GitHub Issues and point people to StackOverflow.</p>\n<p>For bugs or installation issues, please provide the following information.<br>\nThe more information you provide, the more easily we will be able to offer<br>\nhelp and advice.</p>\n<h3>What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?</h3>\n<p>Haven't found segmentation error related issue with tf.while_loop yet.</p>\n<h3>Environment info</h3>\n<p>Operating System:</p>\n<p>Installed version of CUDA and cuDNN:<br>\n(please attach the output of <code>ls -l /path/to/cuda/lib/libcud*</code>):<br>\ncuda-7.5<br>\n-rw-r--r-- 1 root root 189170 Jun 14 14:21 libcudadevrt.a<br>\nlrwxrwxrwx 1 root root     16 Jun 14 14:21 libcudart.so -&gt; libcudart.so.7.5<br>\nlrwxrwxrwx 1 root root     19 Jun 14 14:21 libcudart.so.7.5 -&gt; libcudart.so.7.5.18<br>\n-rwxr-xr-x 1 root root 311596 Jun 14 14:21 libcudart.so.7.5.18<br>\n-rw-r--r-- 1 root root 558020 Jun 14 14:21 libcudart_static.a</p>\n<p>If installed from binary pip package, provide:</p>\n<ol>\n<li>A link to the pip package you installed:</li>\n<li>The output from <code>python -c \"import tensorflow; print(tensorflow.__version__)\"</code>.</li>\n</ol>\n<p>If installed from source, provide</p>\n<ol>\n<li>The commit hash (<code>git rev-parse HEAD</code>)</li>\n<li>The output of <code>bazel version</code></li>\n</ol>\n<h3>If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)</h3>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf                                                                                                                                                                        \n<span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np                                                                                                                                                                             \n\ni <span class=\"pl-k\">=</span> tf.constant(<span class=\"pl-c1\">0</span>)                                                                                                                                                                             \ns <span class=\"pl-k\">=</span> tf.constant(<span class=\"pl-c1\">0</span>)                                                                                                                                                                             \nx <span class=\"pl-k\">=</span> tf.random_uniform([], <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">761</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">64</span>, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.int32)                                                                                                                                           \np <span class=\"pl-k\">=</span> tf.Print(x, [x], <span class=\"pl-v\">message</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>This is random x: <span class=\"pl-pds\">\"</span></span>)                                                                                                                                             \nc <span class=\"pl-k\">=</span> <span class=\"pl-k\">lambda</span> <span class=\"pl-smi\">i</span>,<span class=\"pl-smi\">s</span>,<span class=\"pl-smi\">x</span>,<span class=\"pl-smi\">p</span>: tf.less(i, <span class=\"pl-c1\">50</span>)                                                                                                                                                             \nb <span class=\"pl-k\">=</span> <span class=\"pl-k\">lambda</span> <span class=\"pl-smi\">i</span>,<span class=\"pl-smi\">s</span>,<span class=\"pl-smi\">x</span>,<span class=\"pl-smi\">p</span>: (tf.add(i, <span class=\"pl-c1\">1</span>), tf.add(s, x),tf.random_uniform([], <span class=\"pl-c1\">0</span>,                                                                                                                       \n    <span class=\"pl-c1\">761</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">64</span>, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.int32),tf.Print(x, [x], <span class=\"pl-v\">message</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>This is random x: <span class=\"pl-pds\">\"</span></span>))                                                                                                                    \nr <span class=\"pl-k\">=</span> tf.while_loop(c, b, [i,s,x,p], <span class=\"pl-v\">parallel_iterations</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>)\n\nsess <span class=\"pl-k\">=</span> tf.Session()                                                                                                                                                                            \ninit <span class=\"pl-k\">=</span> tf.initialize_all_variables().run                                                                                                                                                       \n<span class=\"pl-c1\">print</span> sess.run(r)</pre></div>\n<h3>What other attempted solutions have you tried?</h3>\n<p>only ways which do not use the while loop.</p>\n<h3>Logs or other output that would be helpful</h3>\n<p>(If logs are large, please upload as attachment or provide link).</p>\n<p>error output:<br>\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcublas.so locally<br>\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcudnn.so.4 locally<br>\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcufft.so locally<br>\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcuda.so.1 locally<br>\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcurand.so locally<br>\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:102] Found device 0 with properties:<br>\nname: GeForce GTX TITAN X<br>\nmajor: 5 minor: 2 memoryClockRate (GHz) 1.076<br>\npciBusID 0000:04:00.0<br>\nTotal memory: 11.92GiB<br>\nFree memory: 11.81GiB<br>\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:126] DMA: 0<br>\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:136] 0:   Y<br>\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:806] Creating TensorFlow device (/gpu:0) -&gt; (device: 0, name: GeForce GTX TITAN X, pci bus id: 0000:04:00.0)<br>\nSegmentation fault (core dumped)</p>", "body_text": "NOTE: Only file GitHub issues for bugs and feature requests.  All other topics will be closed.\nFor general support from the community, see StackOverflow.\nTo make bugs and feature requests more easy to find and organize, we close issues that are deemed\nout of scope for GitHub Issues and point people to StackOverflow.\nFor bugs or installation issues, please provide the following information.\nThe more information you provide, the more easily we will be able to offer\nhelp and advice.\nWhat related GitHub issues or StackOverflow threads have you found by searching the web for your problem?\nHaven't found segmentation error related issue with tf.while_loop yet.\nEnvironment info\nOperating System:\nInstalled version of CUDA and cuDNN:\n(please attach the output of ls -l /path/to/cuda/lib/libcud*):\ncuda-7.5\n-rw-r--r-- 1 root root 189170 Jun 14 14:21 libcudadevrt.a\nlrwxrwxrwx 1 root root     16 Jun 14 14:21 libcudart.so -> libcudart.so.7.5\nlrwxrwxrwx 1 root root     19 Jun 14 14:21 libcudart.so.7.5 -> libcudart.so.7.5.18\n-rwxr-xr-x 1 root root 311596 Jun 14 14:21 libcudart.so.7.5.18\n-rw-r--r-- 1 root root 558020 Jun 14 14:21 libcudart_static.a\nIf installed from binary pip package, provide:\n\nA link to the pip package you installed:\nThe output from python -c \"import tensorflow; print(tensorflow.__version__)\".\n\nIf installed from source, provide\n\nThe commit hash (git rev-parse HEAD)\nThe output of bazel version\n\nIf possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\nimport tensorflow as tf                                                                                                                                                                        \nimport numpy as np                                                                                                                                                                             \n\ni = tf.constant(0)                                                                                                                                                                             \ns = tf.constant(0)                                                                                                                                                                             \nx = tf.random_uniform([], 0, 761-64, dtype=tf.int32)                                                                                                                                           \np = tf.Print(x, [x], message=\"This is random x: \")                                                                                                                                             \nc = lambda i,s,x,p: tf.less(i, 50)                                                                                                                                                             \nb = lambda i,s,x,p: (tf.add(i, 1), tf.add(s, x),tf.random_uniform([], 0,                                                                                                                       \n    761-64, dtype=tf.int32),tf.Print(x, [x], message=\"This is random x: \"))                                                                                                                    \nr = tf.while_loop(c, b, [i,s,x,p], parallel_iterations=1)\n\nsess = tf.Session()                                                                                                                                                                            \ninit = tf.initialize_all_variables().run                                                                                                                                                       \nprint sess.run(r)\nWhat other attempted solutions have you tried?\nonly ways which do not use the while loop.\nLogs or other output that would be helpful\n(If logs are large, please upload as attachment or provide link).\nerror output:\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcudnn.so.4 locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcurand.so locally\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:102] Found device 0 with properties:\nname: GeForce GTX TITAN X\nmajor: 5 minor: 2 memoryClockRate (GHz) 1.076\npciBusID 0000:04:00.0\nTotal memory: 11.92GiB\nFree memory: 11.81GiB\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:126] DMA: 0\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:136] 0:   Y\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:806] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX TITAN X, pci bus id: 0000:04:00.0)\nSegmentation fault (core dumped)", "body": "NOTE: Only file GitHub issues for bugs and feature requests.  All other topics will be closed.\n\nFor general support from the community, see [StackOverflow](https://stackoverflow.com/questions/tagged/tensorflow).\nTo make bugs and feature requests more easy to find and organize, we close issues that are deemed\nout of scope for GitHub Issues and point people to StackOverflow.\n\nFor bugs or installation issues, please provide the following information.\nThe more information you provide, the more easily we will be able to offer\nhelp and advice.\n### What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?\n\nHaven't found segmentation error related issue with tf.while_loop yet.\n### Environment info\n\nOperating System:\n\nInstalled version of CUDA and cuDNN: \n(please attach the output of `ls -l /path/to/cuda/lib/libcud*`):\ncuda-7.5\n-rw-r--r-- 1 root root 189170 Jun 14 14:21 libcudadevrt.a\nlrwxrwxrwx 1 root root     16 Jun 14 14:21 libcudart.so -> libcudart.so.7.5\nlrwxrwxrwx 1 root root     19 Jun 14 14:21 libcudart.so.7.5 -> libcudart.so.7.5.18\n-rwxr-xr-x 1 root root 311596 Jun 14 14:21 libcudart.so.7.5.18\n-rw-r--r-- 1 root root 558020 Jun 14 14:21 libcudart_static.a\n\nIf installed from binary pip package, provide:\n1. A link to the pip package you installed:\n2. The output from `python -c \"import tensorflow; print(tensorflow.__version__)\"`.\n\nIf installed from source, provide \n1. The commit hash (`git rev-parse HEAD`)\n2. The output of `bazel version`\n### If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\n\n``` python\nimport tensorflow as tf                                                                                                                                                                        \nimport numpy as np                                                                                                                                                                             \n\ni = tf.constant(0)                                                                                                                                                                             \ns = tf.constant(0)                                                                                                                                                                             \nx = tf.random_uniform([], 0, 761-64, dtype=tf.int32)                                                                                                                                           \np = tf.Print(x, [x], message=\"This is random x: \")                                                                                                                                             \nc = lambda i,s,x,p: tf.less(i, 50)                                                                                                                                                             \nb = lambda i,s,x,p: (tf.add(i, 1), tf.add(s, x),tf.random_uniform([], 0,                                                                                                                       \n    761-64, dtype=tf.int32),tf.Print(x, [x], message=\"This is random x: \"))                                                                                                                    \nr = tf.while_loop(c, b, [i,s,x,p], parallel_iterations=1)\n\nsess = tf.Session()                                                                                                                                                                            \ninit = tf.initialize_all_variables().run                                                                                                                                                       \nprint sess.run(r)\n```\n### What other attempted solutions have you tried?\n\nonly ways which do not use the while loop.\n### Logs or other output that would be helpful\n\n(If logs are large, please upload as attachment or provide link).\n\nerror output:\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcudnn.so.4 locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcurand.so locally\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:102] Found device 0 with properties:\nname: GeForce GTX TITAN X\nmajor: 5 minor: 2 memoryClockRate (GHz) 1.076\npciBusID 0000:04:00.0\nTotal memory: 11.92GiB\nFree memory: 11.81GiB\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:126] DMA: 0\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:136] 0:   Y\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:806] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX TITAN X, pci bus id: 0000:04:00.0)\nSegmentation fault (core dumped)\n"}