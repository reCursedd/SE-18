{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15606", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15606/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15606/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15606/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/15606", "id": 284332662, "node_id": "MDExOlB1bGxSZXF1ZXN0MTU5OTgzMjM1", "number": 15606, "title": "Fix issue #15588 by simplifying the code", "user": {"login": "fenrus75", "id": 1302037, "node_id": "MDQ6VXNlcjEzMDIwMzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1302037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fenrus75", "html_url": "https://github.com/fenrus75", "followers_url": "https://api.github.com/users/fenrus75/followers", "following_url": "https://api.github.com/users/fenrus75/following{/other_user}", "gists_url": "https://api.github.com/users/fenrus75/gists{/gist_id}", "starred_url": "https://api.github.com/users/fenrus75/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fenrus75/subscriptions", "organizations_url": "https://api.github.com/users/fenrus75/orgs", "repos_url": "https://api.github.com/users/fenrus75/repos", "events_url": "https://api.github.com/users/fenrus75/events{/privacy}", "received_events_url": "https://api.github.com/users/fenrus75/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 419840263, "node_id": "MDU6TGFiZWw0MTk4NDAyNjM=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/awaiting%20testing%20(then%20merge)", "name": "awaiting testing (then merge)", "color": "c2e0c6", "default": false}, {"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}, {"id": 474725938, "node_id": "MDU6TGFiZWw0NzQ3MjU5Mzg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stalled", "name": "stalled", "color": "d4c5f9", "default": false}, {"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 29, "created_at": "2017-12-23T23:37:14Z", "updated_at": "2018-05-07T16:15:46Z", "closed_at": "2018-05-07T16:15:45Z", "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/15606", "html_url": "https://github.com/tensorflow/tensorflow/pull/15606", "diff_url": "https://github.com/tensorflow/tensorflow/pull/15606.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/15606.patch"}, "body_html": "<p>The allocator.h code tried to be clever and use 32 byte alignment for SSE/AVX2/etc use,<br>\nand 64 byte alignment for AVX512.</p>\n<p>Unfortunately, the #ifdef in use (from EIGEN) is not useful; the bazel BUILD files do<br>\nnot propagate the tf_copts() compiler flags when the allocator.cc/allocator.h files get<br>\ncompiled, to EIGEN does not see the actual AVX512 using compiler flags...</p>\n<p>Rather than changing compiler flag propagation throughout a whole bunch of code,<br>\nthere's an opportunity to just simplify the code and always use 64 byte alignment.<br>\nYes it wastes a bit of space, but on the other hand now these allocations are<br>\ncache line aligned which isn't a bad thing... and an ifdef can be dropped</p>\n<p>Signed-off-by: Arjan van de Ven <a href=\"mailto:arjan@linux.intel.com\">arjan@linux.intel.com</a></p>", "body_text": "The allocator.h code tried to be clever and use 32 byte alignment for SSE/AVX2/etc use,\nand 64 byte alignment for AVX512.\nUnfortunately, the #ifdef in use (from EIGEN) is not useful; the bazel BUILD files do\nnot propagate the tf_copts() compiler flags when the allocator.cc/allocator.h files get\ncompiled, to EIGEN does not see the actual AVX512 using compiler flags...\nRather than changing compiler flag propagation throughout a whole bunch of code,\nthere's an opportunity to just simplify the code and always use 64 byte alignment.\nYes it wastes a bit of space, but on the other hand now these allocations are\ncache line aligned which isn't a bad thing... and an ifdef can be dropped\nSigned-off-by: Arjan van de Ven arjan@linux.intel.com", "body": "The allocator.h code tried to be clever and use 32 byte alignment for SSE/AVX2/etc use,\r\nand 64 byte alignment for AVX512.\r\n\r\nUnfortunately, the #ifdef in use (from EIGEN) is not useful; the bazel BUILD files do\r\nnot propagate the tf_copts() compiler flags when the allocator.cc/allocator.h files get\r\ncompiled, to EIGEN does not see the actual AVX512 using compiler flags...\r\n\r\nRather than changing compiler flag propagation throughout a whole bunch of code,\r\nthere's an opportunity to just simplify the code and always use 64 byte alignment.\r\nYes it wastes a bit of space, but on the other hand now these allocations are\r\ncache line aligned which isn't a bad thing... and an ifdef can be dropped\r\n\r\nSigned-off-by: Arjan van de Ven <arjan@linux.intel.com>"}