{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/225978270", "html_url": "https://github.com/tensorflow/tensorflow/issues/2648#issuecomment-225978270", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2648", "id": 225978270, "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTk3ODI3MA==", "user": {"login": "alexatknit", "id": 15474222, "node_id": "MDQ6VXNlcjE1NDc0MjIy", "avatar_url": "https://avatars2.githubusercontent.com/u/15474222?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexatknit", "html_url": "https://github.com/alexatknit", "followers_url": "https://api.github.com/users/alexatknit/followers", "following_url": "https://api.github.com/users/alexatknit/following{/other_user}", "gists_url": "https://api.github.com/users/alexatknit/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexatknit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexatknit/subscriptions", "organizations_url": "https://api.github.com/users/alexatknit/orgs", "repos_url": "https://api.github.com/users/alexatknit/repos", "events_url": "https://api.github.com/users/alexatknit/events{/privacy}", "received_events_url": "https://api.github.com/users/alexatknit/received_events", "type": "User", "site_admin": false}, "created_at": "2016-06-14T18:46:03Z", "updated_at": "2016-06-14T18:46:03Z", "author_association": "NONE", "body_html": "<p>I figured out a workaround. As long as I match the directory structure used by the session manager object, and sync it completely from the master worker to the parameter servers and there are no exception during loading, theres no segfault. The saver also has unexpected behavior when saving sharded models, as the sharded model is saved on the parameter servers rather than the master worker like the nonsharded model. The saver seems to be very fragile in distributed mode, it could use some polish.</p>", "body_text": "I figured out a workaround. As long as I match the directory structure used by the session manager object, and sync it completely from the master worker to the parameter servers and there are no exception during loading, theres no segfault. The saver also has unexpected behavior when saving sharded models, as the sharded model is saved on the parameter servers rather than the master worker like the nonsharded model. The saver seems to be very fragile in distributed mode, it could use some polish.", "body": "I figured out a workaround. As long as I match the directory structure used by the session manager object, and sync it completely from the master worker to the parameter servers and there are no exception during loading, theres no segfault. The saver also has unexpected behavior when saving sharded models, as the sharded model is saved on the parameter servers rather than the master worker like the nonsharded model. The saver seems to be very fragile in distributed mode, it could use some polish.\n"}