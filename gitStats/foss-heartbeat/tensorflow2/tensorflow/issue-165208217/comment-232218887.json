{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/232218887", "html_url": "https://github.com/tensorflow/tensorflow/issues/3287#issuecomment-232218887", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3287", "id": 232218887, "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjIxODg4Nw==", "user": {"login": "alexatknit", "id": 15474222, "node_id": "MDQ6VXNlcjE1NDc0MjIy", "avatar_url": "https://avatars2.githubusercontent.com/u/15474222?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexatknit", "html_url": "https://github.com/alexatknit", "followers_url": "https://api.github.com/users/alexatknit/followers", "following_url": "https://api.github.com/users/alexatknit/following{/other_user}", "gists_url": "https://api.github.com/users/alexatknit/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexatknit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexatknit/subscriptions", "organizations_url": "https://api.github.com/users/alexatknit/orgs", "repos_url": "https://api.github.com/users/alexatknit/repos", "events_url": "https://api.github.com/users/alexatknit/events{/privacy}", "received_events_url": "https://api.github.com/users/alexatknit/received_events", "type": "User", "site_admin": false}, "created_at": "2016-07-13T00:10:40Z", "updated_at": "2016-07-13T00:10:40Z", "author_association": "NONE", "body_html": "<p>the assigns need to be in the method as well:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\n\nX1 <span class=\"pl-k\">=</span> tf.Variable(<span class=\"pl-c1\">1</span>.)\nX2 <span class=\"pl-k\">=</span> tf.Variable(<span class=\"pl-c1\">1</span>.)\n\ncond_value <span class=\"pl-k\">=</span> tf.Variable(<span class=\"pl-c1\">True</span>)\n\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">result_1</span>():\n    assign_1 <span class=\"pl-k\">=</span> tf.assign(X1, <span class=\"pl-c1\">2</span>.)\n    <span class=\"pl-k\">with</span> tf.control_dependencies([assign_1]):\n        <span class=\"pl-k\">return</span> tf.identity(X1)\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">result_2</span>():\n    assign_2 <span class=\"pl-k\">=</span> tf.assign(X2, <span class=\"pl-c1\">2</span>.)\n    <span class=\"pl-k\">with</span> tf.control_dependencies([assign_2]):\n        <span class=\"pl-k\">return</span> tf.identity(X2)\n\ncond_result <span class=\"pl-k\">=</span> tf.cond(cond_value, result_1, result_2)\n\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sesh:\n    sesh.run(tf.initialize_all_variables())\n    sesh.run(cond_result)\n    <span class=\"pl-c1\">print</span>(sesh.run(X1), sesh.run(X2))</pre></div>", "body_text": "the assigns need to be in the method as well:\nimport tensorflow as tf\n\n\nX1 = tf.Variable(1.)\nX2 = tf.Variable(1.)\n\ncond_value = tf.Variable(True)\n\n\ndef result_1():\n    assign_1 = tf.assign(X1, 2.)\n    with tf.control_dependencies([assign_1]):\n        return tf.identity(X1)\ndef result_2():\n    assign_2 = tf.assign(X2, 2.)\n    with tf.control_dependencies([assign_2]):\n        return tf.identity(X2)\n\ncond_result = tf.cond(cond_value, result_1, result_2)\n\nwith tf.Session() as sesh:\n    sesh.run(tf.initialize_all_variables())\n    sesh.run(cond_result)\n    print(sesh.run(X1), sesh.run(X2))", "body": "the assigns need to be in the method as well:\n\n``` python\nimport tensorflow as tf\n\n\nX1 = tf.Variable(1.)\nX2 = tf.Variable(1.)\n\ncond_value = tf.Variable(True)\n\n\ndef result_1():\n    assign_1 = tf.assign(X1, 2.)\n    with tf.control_dependencies([assign_1]):\n        return tf.identity(X1)\ndef result_2():\n    assign_2 = tf.assign(X2, 2.)\n    with tf.control_dependencies([assign_2]):\n        return tf.identity(X2)\n\ncond_result = tf.cond(cond_value, result_1, result_2)\n\nwith tf.Session() as sesh:\n    sesh.run(tf.initialize_all_variables())\n    sesh.run(cond_result)\n    print(sesh.run(X1), sesh.run(X2))\n```\n"}