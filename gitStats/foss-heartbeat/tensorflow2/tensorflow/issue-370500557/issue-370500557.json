{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23012", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23012/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23012/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23012/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/23012", "id": 370500557, "node_id": "MDU6SXNzdWUzNzA1MDA1NTc=", "number": 23012, "title": "tf.make_tensor_proto doesn't work as expected", "user": {"login": "KineticCookie", "id": 2300703, "node_id": "MDQ6VXNlcjIzMDA3MDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/2300703?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KineticCookie", "html_url": "https://github.com/KineticCookie", "followers_url": "https://api.github.com/users/KineticCookie/followers", "following_url": "https://api.github.com/users/KineticCookie/following{/other_user}", "gists_url": "https://api.github.com/users/KineticCookie/gists{/gist_id}", "starred_url": "https://api.github.com/users/KineticCookie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KineticCookie/subscriptions", "organizations_url": "https://api.github.com/users/KineticCookie/orgs", "repos_url": "https://api.github.com/users/KineticCookie/repos", "events_url": "https://api.github.com/users/KineticCookie/events{/privacy}", "received_events_url": "https://api.github.com/users/KineticCookie/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097547147, "node_id": "MDU6TGFiZWwxMDk3NTQ3MTQ3", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:ops", "name": "comp:ops", "color": "0052cc", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "open", "locked": false, "assignee": {"login": "harshini-gadige", "id": 42781361, "node_id": "MDQ6VXNlcjQyNzgxMzYx", "avatar_url": "https://avatars1.githubusercontent.com/u/42781361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harshini-gadige", "html_url": "https://github.com/harshini-gadige", "followers_url": "https://api.github.com/users/harshini-gadige/followers", "following_url": "https://api.github.com/users/harshini-gadige/following{/other_user}", "gists_url": "https://api.github.com/users/harshini-gadige/gists{/gist_id}", "starred_url": "https://api.github.com/users/harshini-gadige/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harshini-gadige/subscriptions", "organizations_url": "https://api.github.com/users/harshini-gadige/orgs", "repos_url": "https://api.github.com/users/harshini-gadige/repos", "events_url": "https://api.github.com/users/harshini-gadige/events{/privacy}", "received_events_url": "https://api.github.com/users/harshini-gadige/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "harshini-gadige", "id": 42781361, "node_id": "MDQ6VXNlcjQyNzgxMzYx", "avatar_url": "https://avatars1.githubusercontent.com/u/42781361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harshini-gadige", "html_url": "https://github.com/harshini-gadige", "followers_url": "https://api.github.com/users/harshini-gadige/followers", "following_url": "https://api.github.com/users/harshini-gadige/following{/other_user}", "gists_url": "https://api.github.com/users/harshini-gadige/gists{/gist_id}", "starred_url": "https://api.github.com/users/harshini-gadige/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harshini-gadige/subscriptions", "organizations_url": "https://api.github.com/users/harshini-gadige/orgs", "repos_url": "https://api.github.com/users/harshini-gadige/repos", "events_url": "https://api.github.com/users/harshini-gadige/events{/privacy}", "received_events_url": "https://api.github.com/users/harshini-gadige/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-10-16T08:41:44Z", "updated_at": "2018-11-09T18:51:46Z", "closed_at": null, "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Mac OS X 10.13.6</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>: none</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: v1.11.0-rc2-4-gc19e29306c 1.11.0</li>\n<li><strong>Python version</strong>: Python 3.6.4</li>\n<li><strong>Bazel version (if compiling from source)</strong>: none</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: none</li>\n<li><strong>CUDA/cuDNN version</strong>: none</li>\n<li><strong>GPU model and memory</strong>: none</li>\n<li><strong>Exact command to reproduce</strong>:<br>\n<code>print(tf.make_tensor_proto([1,2,3,4], dtype=tf.uint32))</code></li>\n</ul>\n<h3>Describe the problem</h3>\n<p>According to TensorProto message definition there are specific fields for different DataType e.g. for DT_UINT32 (<div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/903a6399aab19b549fefd0ead836af644f3d00f8/tensorflow/core/framework/tensor.proto#L79-L80\">tensorflow/tensorflow/core/framework/tensor.proto</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 79 to 80\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/903a6399aab19b549fefd0ead836af644f3d00f8\">903a639</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L79\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"79\"></td>\n          <td id=\"LC79\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-c\">// DT_UINT32</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L80\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"80\"></td>\n          <td id=\"LC80\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">repeated</span> <span class=\"pl-k\">uint32</span> <span class=\"pl-smi\">uint32_val</span> = <span class=\"pl-c1\">16</span> [<span class=\"pl-e\">packed</span> = <span class=\"pl-c1\">true</span>]; </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n)<br>\nHowever, <code>make_tensor_proto</code> puts content for most numeric types into <code>tensor_content</code> field.</p>\n<p>In addition to that there is same inconsistency in <code>tf.make_ndarray</code> function: it tries to deserealize tensor_content and then it searches for correct fields with DataType. <div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/903a6399aab19b549fefd0ead836af644f3d00f8/tensorflow/python/framework/tensor_util.py#L548\">tensorflow/tensorflow/python/framework/tensor_util.py</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n         Line 548\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/903a6399aab19b549fefd0ead836af644f3d00f8\">903a639</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L548\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"548\"></td>\n          <td id=\"LC548\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">def</span> <span class=\"pl-en\">MakeNdarray</span>(<span class=\"pl-smi\">tensor</span>): </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<h3>Source code / logs</h3>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">from</span> tensorflow.core.framework <span class=\"pl-k\">import</span> tensor_pb2\n<span class=\"pl-k\">from</span> tensorflow.python.framework <span class=\"pl-k\">import</span> dtypes\n\ncurrent <span class=\"pl-k\">=</span> tf.make_tensor_proto([<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">3</span>,<span class=\"pl-c1\">4</span>], <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.uint32)\n<span class=\"pl-c1\">print</span>(current)\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>dtype: DT_UINT32</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>tensor_shape {</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>  dim {</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>    size: 4</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>  }</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>}</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>tensor_content: \"\\001\\000\\000\\000\\002\\000\\000\\000\\003\\000\\000\\000\\004\\000\\000\\000\"</span>\n\nexpected <span class=\"pl-k\">=</span> tensor_pb2.TensorProto(<span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>dtypes.uint32.as_datatype_enum, <span class=\"pl-v\">uint32_val</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">3</span>,<span class=\"pl-c1\">4</span>])\n<span class=\"pl-c1\">print</span>(expected)\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>dtype: DT_UINT32</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>uint32_val: 1</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>uint32_val: 2</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>uint32_val: 3</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>uint32_val: 4</span></pre></div>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Mac OS X 10.13.6\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: none\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): v1.11.0-rc2-4-gc19e29306c 1.11.0\nPython version: Python 3.6.4\nBazel version (if compiling from source): none\nGCC/Compiler version (if compiling from source): none\nCUDA/cuDNN version: none\nGPU model and memory: none\nExact command to reproduce:\nprint(tf.make_tensor_proto([1,2,3,4], dtype=tf.uint32))\n\nDescribe the problem\nAccording to TensorProto message definition there are specific fields for different DataType e.g. for DT_UINT32 (\n  \n    \n      tensorflow/tensorflow/core/framework/tensor.proto\n    \n    \n        Lines 79 to 80\n      in\n      903a639\n    \n    \n    \n    \n\n        \n          \n           // DT_UINT32 \n        \n\n        \n          \n           repeated uint32 uint32_val = 16 [packed = true]; \n        \n    \n  \n\n)\nHowever, make_tensor_proto puts content for most numeric types into tensor_content field.\nIn addition to that there is same inconsistency in tf.make_ndarray function: it tries to deserealize tensor_content and then it searches for correct fields with DataType. \n  \n    \n      tensorflow/tensorflow/python/framework/tensor_util.py\n    \n    \n         Line 548\n      in\n      903a639\n    \n    \n    \n    \n\n        \n          \n           def MakeNdarray(tensor): \n        \n    \n  \n\n\nSource code / logs\nimport tensorflow as tf\nfrom tensorflow.core.framework import tensor_pb2\nfrom tensorflow.python.framework import dtypes\n\ncurrent = tf.make_tensor_proto([1,2,3,4], dtype=tf.uint32)\nprint(current)\n#dtype: DT_UINT32\n#tensor_shape {\n#  dim {\n#    size: 4\n#  }\n#}\n#tensor_content: \"\\001\\000\\000\\000\\002\\000\\000\\000\\003\\000\\000\\000\\004\\000\\000\\000\"\n\nexpected = tensor_pb2.TensorProto(dtype=dtypes.uint32.as_datatype_enum, uint32_val=[1,2,3,4])\nprint(expected)\n#dtype: DT_UINT32\n#uint32_val: 1\n#uint32_val: 2\n#uint32_val: 3\n#uint32_val: 4", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Mac OS X 10.13.6\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**: none\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: v1.11.0-rc2-4-gc19e29306c 1.11.0\r\n- **Python version**: Python 3.6.4\r\n- **Bazel version (if compiling from source)**: none\r\n- **GCC/Compiler version (if compiling from source)**: none\r\n- **CUDA/cuDNN version**: none\r\n- **GPU model and memory**: none\r\n- **Exact command to reproduce**:\r\n`print(tf.make_tensor_proto([1,2,3,4], dtype=tf.uint32))`\r\n\r\n\r\n### Describe the problem\r\n\r\nAccording to TensorProto message definition there are specific fields for different DataType e.g. for DT_UINT32 (https://github.com/tensorflow/tensorflow/blob/903a6399aab19b549fefd0ead836af644f3d00f8/tensorflow/core/framework/tensor.proto#L79-L80) \r\nHowever, `make_tensor_proto` puts content for most numeric types into `tensor_content` field.\r\n\r\nIn addition to that there is same inconsistency in `tf.make_ndarray` function: it tries to deserealize tensor_content and then it searches for correct fields with DataType. https://github.com/tensorflow/tensorflow/blob/903a6399aab19b549fefd0ead836af644f3d00f8/tensorflow/python/framework/tensor_util.py#L548\r\n\r\n### Source code / logs\r\n\r\n```python\r\nimport tensorflow as tf\r\nfrom tensorflow.core.framework import tensor_pb2\r\nfrom tensorflow.python.framework import dtypes\r\n\r\ncurrent = tf.make_tensor_proto([1,2,3,4], dtype=tf.uint32)\r\nprint(current)\r\n#dtype: DT_UINT32\r\n#tensor_shape {\r\n#  dim {\r\n#    size: 4\r\n#  }\r\n#}\r\n#tensor_content: \"\\001\\000\\000\\000\\002\\000\\000\\000\\003\\000\\000\\000\\004\\000\\000\\000\"\r\n\r\nexpected = tensor_pb2.TensorProto(dtype=dtypes.uint32.as_datatype_enum, uint32_val=[1,2,3,4])\r\nprint(expected)\r\n#dtype: DT_UINT32\r\n#uint32_val: 1\r\n#uint32_val: 2\r\n#uint32_val: 3\r\n#uint32_val: 4\r\n```\r\n"}