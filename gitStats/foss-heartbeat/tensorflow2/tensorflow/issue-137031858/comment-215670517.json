{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/215670517", "html_url": "https://github.com/tensorflow/tensorflow/issues/1325#issuecomment-215670517", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1325", "id": 215670517, "node_id": "MDEyOklzc3VlQ29tbWVudDIxNTY3MDUxNw==", "user": {"login": "rlrs", "id": 7533072, "node_id": "MDQ6VXNlcjc1MzMwNzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/7533072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rlrs", "html_url": "https://github.com/rlrs", "followers_url": "https://api.github.com/users/rlrs/followers", "following_url": "https://api.github.com/users/rlrs/following{/other_user}", "gists_url": "https://api.github.com/users/rlrs/gists{/gist_id}", "starred_url": "https://api.github.com/users/rlrs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rlrs/subscriptions", "organizations_url": "https://api.github.com/users/rlrs/orgs", "repos_url": "https://api.github.com/users/rlrs/repos", "events_url": "https://api.github.com/users/rlrs/events{/privacy}", "received_events_url": "https://api.github.com/users/rlrs/received_events", "type": "User", "site_admin": false}, "created_at": "2016-04-29T09:41:33Z", "updated_at": "2016-04-29T09:41:33Z", "author_association": "NONE", "body_html": "<p>Some input on this issue, variable loaded by <code>tf.Saver.restore()</code> are also not recognized by <code>tf.get_variable()</code>. The cleanest method I could think of for accessing individual variables loaded as such was to create a dictionary with the variable names:</p>\n<pre><code>saved = tf.train.import_meta_graph('save.ckpt.meta')\nsaved.restore(self.sess, 'save.ckpt')\nsaved_dict = {}\nfor x in tf.trainable_variables():\n  saved_dict[x.name] = x\n# access e.g. saved_dict['some/scope/weight:0']\n</code></pre>", "body_text": "Some input on this issue, variable loaded by tf.Saver.restore() are also not recognized by tf.get_variable(). The cleanest method I could think of for accessing individual variables loaded as such was to create a dictionary with the variable names:\nsaved = tf.train.import_meta_graph('save.ckpt.meta')\nsaved.restore(self.sess, 'save.ckpt')\nsaved_dict = {}\nfor x in tf.trainable_variables():\n  saved_dict[x.name] = x\n# access e.g. saved_dict['some/scope/weight:0']", "body": "Some input on this issue, variable loaded by `tf.Saver.restore()` are also not recognized by `tf.get_variable()`. The cleanest method I could think of for accessing individual variables loaded as such was to create a dictionary with the variable names:\n\n```\nsaved = tf.train.import_meta_graph('save.ckpt.meta')\nsaved.restore(self.sess, 'save.ckpt')\nsaved_dict = {}\nfor x in tf.trainable_variables():\n  saved_dict[x.name] = x\n# access e.g. saved_dict['some/scope/weight:0']\n```\n"}