{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/249577613", "html_url": "https://github.com/tensorflow/tensorflow/issues/1325#issuecomment-249577613", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1325", "id": 249577613, "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTU3NzYxMw==", "user": {"login": "thatsvishalhere", "id": 3774430, "node_id": "MDQ6VXNlcjM3NzQ0MzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/3774430?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thatsvishalhere", "html_url": "https://github.com/thatsvishalhere", "followers_url": "https://api.github.com/users/thatsvishalhere/followers", "following_url": "https://api.github.com/users/thatsvishalhere/following{/other_user}", "gists_url": "https://api.github.com/users/thatsvishalhere/gists{/gist_id}", "starred_url": "https://api.github.com/users/thatsvishalhere/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thatsvishalhere/subscriptions", "organizations_url": "https://api.github.com/users/thatsvishalhere/orgs", "repos_url": "https://api.github.com/users/thatsvishalhere/repos", "events_url": "https://api.github.com/users/thatsvishalhere/events{/privacy}", "received_events_url": "https://api.github.com/users/thatsvishalhere/received_events", "type": "User", "site_admin": false}, "created_at": "2016-09-26T14:01:06Z", "updated_at": "2016-09-26T14:01:06Z", "author_association": "NONE", "body_html": "<p>I'm facing the same issue. I was wondering if somebody has found a way around it. I can't really use the trainable variables hack that <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=7533072\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/rlrs\">@rlrs</a> suggested as I'm also using the default RNN code of tensorflow and don't really want to hack into the rnn definitions for reusing the variables. It would be great if somebody can suggest a way around this without having the need to hack into the rnn code definition in tensorflow. Thanks!</p>", "body_text": "I'm facing the same issue. I was wondering if somebody has found a way around it. I can't really use the trainable variables hack that @rlrs suggested as I'm also using the default RNN code of tensorflow and don't really want to hack into the rnn definitions for reusing the variables. It would be great if somebody can suggest a way around this without having the need to hack into the rnn code definition in tensorflow. Thanks!", "body": "I'm facing the same issue. I was wondering if somebody has found a way around it. I can't really use the trainable variables hack that @rlrs suggested as I'm also using the default RNN code of tensorflow and don't really want to hack into the rnn definitions for reusing the variables. It would be great if somebody can suggest a way around this without having the need to hack into the rnn code definition in tensorflow. Thanks!\n"}