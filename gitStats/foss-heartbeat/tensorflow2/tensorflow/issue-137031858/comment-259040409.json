{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/259040409", "html_url": "https://github.com/tensorflow/tensorflow/issues/1325#issuecomment-259040409", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1325", "id": 259040409, "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTA0MDQwOQ==", "user": {"login": "lukaszkaiser", "id": 684901, "node_id": "MDQ6VXNlcjY4NDkwMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/684901?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukaszkaiser", "html_url": "https://github.com/lukaszkaiser", "followers_url": "https://api.github.com/users/lukaszkaiser/followers", "following_url": "https://api.github.com/users/lukaszkaiser/following{/other_user}", "gists_url": "https://api.github.com/users/lukaszkaiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukaszkaiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukaszkaiser/subscriptions", "organizations_url": "https://api.github.com/users/lukaszkaiser/orgs", "repos_url": "https://api.github.com/users/lukaszkaiser/repos", "events_url": "https://api.github.com/users/lukaszkaiser/events{/privacy}", "received_events_url": "https://api.github.com/users/lukaszkaiser/received_events", "type": "User", "site_admin": false}, "created_at": "2016-11-08T04:05:46Z", "updated_at": "2016-11-08T04:05:46Z", "author_association": "MEMBER", "body_html": "<p>(1) Yes: tf.Variable is a low-level function that will always create a variable node. It is used inside tf.get_variable. The variables can be local and global -- the only difference is that it's low-level. I'd recommend to never use it.</p>\n<p>(2) It's not about local and global, tf.Variable is just lower-level. It's used inside tf.get_variable, so in principle you can do everything just with it, yes. But it will not respect variable scope, not use the initializer you defined there, not do partitioning, and not do bookkeeping. It's just low-level. Use tf.get_variable to avoid problems.</p>", "body_text": "(1) Yes: tf.Variable is a low-level function that will always create a variable node. It is used inside tf.get_variable. The variables can be local and global -- the only difference is that it's low-level. I'd recommend to never use it.\n(2) It's not about local and global, tf.Variable is just lower-level. It's used inside tf.get_variable, so in principle you can do everything just with it, yes. But it will not respect variable scope, not use the initializer you defined there, not do partitioning, and not do bookkeeping. It's just low-level. Use tf.get_variable to avoid problems.", "body": "(1) Yes: tf.Variable is a low-level function that will always create a variable node. It is used inside tf.get_variable. The variables can be local and global -- the only difference is that it's low-level. I'd recommend to never use it.\n\n(2) It's not about local and global, tf.Variable is just lower-level. It's used inside tf.get_variable, so in principle you can do everything just with it, yes. But it will not respect variable scope, not use the initializer you defined there, not do partitioning, and not do bookkeeping. It's just low-level. Use tf.get_variable to avoid problems.\n"}