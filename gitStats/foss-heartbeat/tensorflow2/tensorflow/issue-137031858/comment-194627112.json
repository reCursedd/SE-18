{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/194627112", "html_url": "https://github.com/tensorflow/tensorflow/issues/1325#issuecomment-194627112", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1325", "id": 194627112, "node_id": "MDEyOklzc3VlQ29tbWVudDE5NDYyNzExMg==", "user": {"login": "gear", "id": 2770389, "node_id": "MDQ6VXNlcjI3NzAzODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/2770389?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gear", "html_url": "https://github.com/gear", "followers_url": "https://api.github.com/users/gear/followers", "following_url": "https://api.github.com/users/gear/following{/other_user}", "gists_url": "https://api.github.com/users/gear/gists{/gist_id}", "starred_url": "https://api.github.com/users/gear/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gear/subscriptions", "organizations_url": "https://api.github.com/users/gear/orgs", "repos_url": "https://api.github.com/users/gear/repos", "events_url": "https://api.github.com/users/gear/events{/privacy}", "received_events_url": "https://api.github.com/users/gear/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-10T02:29:01Z", "updated_at": "2016-03-10T02:29:01Z", "author_association": "NONE", "body_html": "<p>Thank you for the answer. I had the same problem.<br>\nOn the other hand, I would like to add a note that if <code>tf.get_variable_scope().reuse_variable()</code> is (accidentally)  used without a context manager <code>with tf.variable_scope(...):</code>, it will set any variable scope's <code>reuse</code> to True.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">with</span> tf.variable_scope(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>foo<span class=\"pl-pds\">'</span></span>):\n  <span class=\"pl-c1\">print</span> (tf.get_variable_scope().reuse)\n  <span class=\"pl-c1\">print</span> (tf.get_variable_scope().name)\n  <span class=\"pl-c\"><span class=\"pl-c\">#</span> &gt;&gt;&gt; False</span>\n  <span class=\"pl-c\"><span class=\"pl-c\">#</span> &gt;&gt;&gt; foo</span>\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Set reuse without a context manager</span>\ntf.get_variable_scope().reuse_variables()\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Any variable scope's reuse is changed to True</span>\n<span class=\"pl-k\">with</span> tf.variable_scope(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>foo<span class=\"pl-pds\">'</span></span>):\n  <span class=\"pl-c1\">print</span> (tf.get_variable_scope().reuse)\n  <span class=\"pl-c\"><span class=\"pl-c\">#</span> &gt;&gt;&gt; True</span>\n\n<span class=\"pl-k\">with</span> tf.variable_scope(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>other_name<span class=\"pl-pds\">'</span></span>):\n  <span class=\"pl-c1\">print</span>(tf.get_variable_scope().reuse)\n  <span class=\"pl-c\"><span class=\"pl-c\">#</span> &gt;&gt;&gt; True</span></pre></div>", "body_text": "Thank you for the answer. I had the same problem.\nOn the other hand, I would like to add a note that if tf.get_variable_scope().reuse_variable() is (accidentally)  used without a context manager with tf.variable_scope(...):, it will set any variable scope's reuse to True.\nwith tf.variable_scope('foo'):\n  print (tf.get_variable_scope().reuse)\n  print (tf.get_variable_scope().name)\n  # >>> False\n  # >>> foo\n\n# Set reuse without a context manager\ntf.get_variable_scope().reuse_variables()\n\n# Any variable scope's reuse is changed to True\nwith tf.variable_scope('foo'):\n  print (tf.get_variable_scope().reuse)\n  # >>> True\n\nwith tf.variable_scope('other_name'):\n  print(tf.get_variable_scope().reuse)\n  # >>> True", "body": "Thank you for the answer. I had the same problem. \nOn the other hand, I would like to add a note that if `tf.get_variable_scope().reuse_variable()` is (accidentally)  used without a context manager `with tf.variable_scope(...):`, it will set any variable scope's `reuse` to True.\n\n``` python\nwith tf.variable_scope('foo'):\n  print (tf.get_variable_scope().reuse)\n  print (tf.get_variable_scope().name)\n  # >>> False\n  # >>> foo\n\n# Set reuse without a context manager\ntf.get_variable_scope().reuse_variables()\n\n# Any variable scope's reuse is changed to True\nwith tf.variable_scope('foo'):\n  print (tf.get_variable_scope().reuse)\n  # >>> True\n\nwith tf.variable_scope('other_name'):\n  print(tf.get_variable_scope().reuse)\n  # >>> True\n```\n"}