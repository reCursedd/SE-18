{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/257430384", "html_url": "https://github.com/tensorflow/tensorflow/issues/1325#issuecomment-257430384", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1325", "id": 257430384, "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzQzMDM4NA==", "user": {"login": "thatsvishalhere", "id": 3774430, "node_id": "MDQ6VXNlcjM3NzQ0MzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/3774430?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thatsvishalhere", "html_url": "https://github.com/thatsvishalhere", "followers_url": "https://api.github.com/users/thatsvishalhere/followers", "following_url": "https://api.github.com/users/thatsvishalhere/following{/other_user}", "gists_url": "https://api.github.com/users/thatsvishalhere/gists{/gist_id}", "starred_url": "https://api.github.com/users/thatsvishalhere/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thatsvishalhere/subscriptions", "organizations_url": "https://api.github.com/users/thatsvishalhere/orgs", "repos_url": "https://api.github.com/users/thatsvishalhere/repos", "events_url": "https://api.github.com/users/thatsvishalhere/events{/privacy}", "received_events_url": "https://api.github.com/users/thatsvishalhere/received_events", "type": "User", "site_admin": false}, "created_at": "2016-10-31T21:47:03Z", "updated_at": "2016-10-31T21:47:03Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=175486\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ilblackdragon\">@ilblackdragon</a> While following the directions as given on <a href=\"https://www.tensorflow.org/versions/master/api_docs/python/state_ops.html#exporting-and-importing-meta-graphs\" rel=\"nofollow\">https://www.tensorflow.org/versions/master/api_docs/python/state_ops.html#exporting-and-importing-meta-graphs</a>, when I use the code:</p>\n<p><code>new_saver = tf.train.import_meta_graph('my-save-dir/my-model-10000.meta')</code><br>\n<code>new_saver.restore(sess, 'my-save-dir/my-model-10000')</code></p>\n<p>and then try to reuse the variables, it says the variables aren't defined. I can see the variable names in <code>tf.trainable_variables()</code> but still it's giving the error about variables being undefined. On the other hand, when I don't use the metagraph and just use <code>tf.train.Saver()</code> instead of <code>tf.train.import_meta_graph()</code>, the variables seem to have loaded. I've recreated the graph for both the above cases before restoring the model. Sorry if I'm really wrong, I initially felt that by loading the metagraph, I can directly reuse the variables without having to recreate the graph. I felt the metagraph functionality was initially created in order to remove the requirement of recreating the graph.  I'm currently just using the <code>tf.train.Saver()</code> in order to load my variables. Let me know if I can be of any help by providing any more details.</p>\n<p>Thanks!</p>", "body_text": "@ilblackdragon While following the directions as given on https://www.tensorflow.org/versions/master/api_docs/python/state_ops.html#exporting-and-importing-meta-graphs, when I use the code:\nnew_saver = tf.train.import_meta_graph('my-save-dir/my-model-10000.meta')\nnew_saver.restore(sess, 'my-save-dir/my-model-10000')\nand then try to reuse the variables, it says the variables aren't defined. I can see the variable names in tf.trainable_variables() but still it's giving the error about variables being undefined. On the other hand, when I don't use the metagraph and just use tf.train.Saver() instead of tf.train.import_meta_graph(), the variables seem to have loaded. I've recreated the graph for both the above cases before restoring the model. Sorry if I'm really wrong, I initially felt that by loading the metagraph, I can directly reuse the variables without having to recreate the graph. I felt the metagraph functionality was initially created in order to remove the requirement of recreating the graph.  I'm currently just using the tf.train.Saver() in order to load my variables. Let me know if I can be of any help by providing any more details.\nThanks!", "body": "@ilblackdragon While following the directions as given on https://www.tensorflow.org/versions/master/api_docs/python/state_ops.html#exporting-and-importing-meta-graphs, when I use the code:\n\n`new_saver = tf.train.import_meta_graph('my-save-dir/my-model-10000.meta')`\n`new_saver.restore(sess, 'my-save-dir/my-model-10000')`\n\nand then try to reuse the variables, it says the variables aren't defined. I can see the variable names in `tf.trainable_variables()` but still it's giving the error about variables being undefined. On the other hand, when I don't use the metagraph and just use `tf.train.Saver()` instead of `tf.train.import_meta_graph()`, the variables seem to have loaded. I've recreated the graph for both the above cases before restoring the model. Sorry if I'm really wrong, I initially felt that by loading the metagraph, I can directly reuse the variables without having to recreate the graph. I felt the metagraph functionality was initially created in order to remove the requirement of recreating the graph.  I'm currently just using the `tf.train.Saver()` in order to load my variables. Let me know if I can be of any help by providing any more details.\n\nThanks!\n"}