{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5068", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5068/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5068/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5068/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/5068", "id": 183937489, "node_id": "MDU6SXNzdWUxODM5Mzc0ODk=", "number": 5068, "title": "Restoring a tensorflow model for finetuning, with \u201cslim.learning.train\u201d", "user": {"login": "yuvval", "id": 5911675, "node_id": "MDQ6VXNlcjU5MTE2NzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/5911675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuvval", "html_url": "https://github.com/yuvval", "followers_url": "https://api.github.com/users/yuvval/followers", "following_url": "https://api.github.com/users/yuvval/following{/other_user}", "gists_url": "https://api.github.com/users/yuvval/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuvval/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuvval/subscriptions", "organizations_url": "https://api.github.com/users/yuvval/orgs", "repos_url": "https://api.github.com/users/yuvval/repos", "events_url": "https://api.github.com/users/yuvval/events{/privacy}", "received_events_url": "https://api.github.com/users/yuvval/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-10-19T11:37:34Z", "updated_at": "2017-09-28T15:01:48Z", "closed_at": "2016-10-19T22:45:13Z", "author_association": "NONE", "body_html": "<p>with slim.learning.train (TF 0.11), I would like to restore a model from a checkpoint and continue the training. The model had a successful training session, and I would like to fine tune it. However, when I do that, TF crash with an error<br>\n<code>Init operations did not make model ready.</code></p>\n<p>I do the training with:</p>\n<pre><code>tf.contrib.slim.learning.train(\n    train_op,\n    train_dir,\n    log_every_n_steps=FLAGS.log_every_n_steps,\n    graph=g,\n    global_step=model.global_step,\n    number_of_steps=FLAGS.number_of_steps,\n    init_fn=model.init_fn,\n    saver=model.saver,\n    session_config=session_config)\n</code></pre>\n<p>I tried 3 alternatives:</p>\n<h3>1</h3>\n<p>Following <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/training/session_manager.py#L183\">this doc</a></p>\n<pre><code>model.init_fn = None\n</code></pre>\n<h3>2</h3>\n<pre><code>with g.as_default():\n    model_path = tf.train.latest_checkpoint(train_dir)\n    if model_path:\n        def restore_fn(sess):\n            tf.logging.info(\n                \"Restoring SA&amp;T variables from checkpoint file %s\",\n                restore_fn.model_path)\n            model.saver.restore(sess, restore_fn.model_path)\n        restore_fn.model_path = model_path\n        model.init_fn = restore_fn\n    else:\n        model.init_fn = None\n</code></pre>\n<h3>3</h3>\n<p>Following <a href=\"https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/slim\">slim doc</a></p>\n<pre><code>with g.as_default():\n    model_path = tf.train.latest_checkpoint(train_dir)\n    if model_path:\n        variables_to_restore = tf.contrib.slim.get_variables_to_restore()\n        model.init_fn = tensorflow.contrib.framework.assign_from_checkpoint_fn(\n            model_path, variables_to_restore)\n    else:\n        model.init_fn = None\n</code></pre>\n<h3>What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?</h3>\n<p><a href=\"http://stackoverflow.com/questions/38499136/tensorflow-learn-initialize-variables\" rel=\"nofollow\">http://stackoverflow.com/questions/38499136/tensorflow-learn-initialize-variables</a></p>\n<h3>Environment info</h3>\n<p>Operating System:<br>\nLinux</p>\n<p>Installed version of CUDA and cuDNN:<br>\n(please attach the output of <code>ls -l /path/to/cuda/lib/libcud*</code>):</p>\n<p>If installed from binary pip package, provide:</p>\n<ol>\n<li>A link to the pip package you installed:<br>\n<a href=\"https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.11.0rc0-cp27-none-linux_x86_64.whl\" rel=\"nofollow\">https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.11.0rc0-cp27-none-linux_x86_64.whl</a></li>\n<li>The output from <code>python -c \"import tensorflow; print(tensorflow.__version__)\"</code>.<br>\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcublas.so locally<br>\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcudnn.so locally<br>\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcufft.so locally<br>\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcuda.so.1 locally<br>\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcurand.so locally<br>\n0.11.0rc0</li>\n</ol>\n<h3>Logs or other output that would be helpful</h3>\n<p>(If logs are large, please upload as attachment or provide link).</p>\n<p><a href=\"https://github.com/tensorflow/tensorflow/files/538795/alternative1.txt\">alternative1.txt</a><br>\n<a href=\"https://github.com/tensorflow/tensorflow/files/538797/alternative2.txt\">alternative2.txt</a><br>\n<a href=\"https://github.com/tensorflow/tensorflow/files/538796/alternative3.txt\">alternative3.txt</a></p>", "body_text": "with slim.learning.train (TF 0.11), I would like to restore a model from a checkpoint and continue the training. The model had a successful training session, and I would like to fine tune it. However, when I do that, TF crash with an error\nInit operations did not make model ready.\nI do the training with:\ntf.contrib.slim.learning.train(\n    train_op,\n    train_dir,\n    log_every_n_steps=FLAGS.log_every_n_steps,\n    graph=g,\n    global_step=model.global_step,\n    number_of_steps=FLAGS.number_of_steps,\n    init_fn=model.init_fn,\n    saver=model.saver,\n    session_config=session_config)\n\nI tried 3 alternatives:\n1\nFollowing this doc\nmodel.init_fn = None\n\n2\nwith g.as_default():\n    model_path = tf.train.latest_checkpoint(train_dir)\n    if model_path:\n        def restore_fn(sess):\n            tf.logging.info(\n                \"Restoring SA&T variables from checkpoint file %s\",\n                restore_fn.model_path)\n            model.saver.restore(sess, restore_fn.model_path)\n        restore_fn.model_path = model_path\n        model.init_fn = restore_fn\n    else:\n        model.init_fn = None\n\n3\nFollowing slim doc\nwith g.as_default():\n    model_path = tf.train.latest_checkpoint(train_dir)\n    if model_path:\n        variables_to_restore = tf.contrib.slim.get_variables_to_restore()\n        model.init_fn = tensorflow.contrib.framework.assign_from_checkpoint_fn(\n            model_path, variables_to_restore)\n    else:\n        model.init_fn = None\n\nWhat related GitHub issues or StackOverflow threads have you found by searching the web for your problem?\nhttp://stackoverflow.com/questions/38499136/tensorflow-learn-initialize-variables\nEnvironment info\nOperating System:\nLinux\nInstalled version of CUDA and cuDNN:\n(please attach the output of ls -l /path/to/cuda/lib/libcud*):\nIf installed from binary pip package, provide:\n\nA link to the pip package you installed:\nhttps://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.11.0rc0-cp27-none-linux_x86_64.whl\nThe output from python -c \"import tensorflow; print(tensorflow.__version__)\".\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcurand.so locally\n0.11.0rc0\n\nLogs or other output that would be helpful\n(If logs are large, please upload as attachment or provide link).\nalternative1.txt\nalternative2.txt\nalternative3.txt", "body": "with slim.learning.train (TF 0.11), I would like to restore a model from a checkpoint and continue the training. The model had a successful training session, and I would like to fine tune it. However, when I do that, TF crash with an error \n`Init operations did not make model ready.`\n\nI do the training with:\n\n```\ntf.contrib.slim.learning.train(\n    train_op,\n    train_dir,\n    log_every_n_steps=FLAGS.log_every_n_steps,\n    graph=g,\n    global_step=model.global_step,\n    number_of_steps=FLAGS.number_of_steps,\n    init_fn=model.init_fn,\n    saver=model.saver,\n    session_config=session_config)\n```\n\nI tried 3 alternatives:\n### 1\n\nFollowing [this doc](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/training/session_manager.py#L183)\n\n```\nmodel.init_fn = None\n```\n### 2\n\n```\nwith g.as_default():\n    model_path = tf.train.latest_checkpoint(train_dir)\n    if model_path:\n        def restore_fn(sess):\n            tf.logging.info(\n                \"Restoring SA&T variables from checkpoint file %s\",\n                restore_fn.model_path)\n            model.saver.restore(sess, restore_fn.model_path)\n        restore_fn.model_path = model_path\n        model.init_fn = restore_fn\n    else:\n        model.init_fn = None\n```\n### 3\n\nFollowing [slim doc](https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/slim)\n\n```\nwith g.as_default():\n    model_path = tf.train.latest_checkpoint(train_dir)\n    if model_path:\n        variables_to_restore = tf.contrib.slim.get_variables_to_restore()\n        model.init_fn = tensorflow.contrib.framework.assign_from_checkpoint_fn(\n            model_path, variables_to_restore)\n    else:\n        model.init_fn = None\n```\n### What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?\n\nhttp://stackoverflow.com/questions/38499136/tensorflow-learn-initialize-variables\n### Environment info\n\nOperating System:\nLinux\n\nInstalled version of CUDA and cuDNN: \n(please attach the output of `ls -l /path/to/cuda/lib/libcud*`):\n\nIf installed from binary pip package, provide:\n1. A link to the pip package you installed:\n   https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.11.0rc0-cp27-none-linux_x86_64.whl\n2. The output from `python -c \"import tensorflow; print(tensorflow.__version__)\"`.\n   I tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcublas.so locally\n   I tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcudnn.so locally\n   I tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcufft.so locally\n   I tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcuda.so.1 locally\n   I tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcurand.so locally\n   0.11.0rc0\n### Logs or other output that would be helpful\n\n(If logs are large, please upload as attachment or provide link).\n\n[alternative1.txt](https://github.com/tensorflow/tensorflow/files/538795/alternative1.txt)\n[alternative2.txt](https://github.com/tensorflow/tensorflow/files/538797/alternative2.txt)\n[alternative3.txt](https://github.com/tensorflow/tensorflow/files/538796/alternative3.txt)\n"}