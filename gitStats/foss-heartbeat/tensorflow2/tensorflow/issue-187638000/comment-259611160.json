{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/259611160", "html_url": "https://github.com/tensorflow/tensorflow/issues/5438#issuecomment-259611160", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5438", "id": 259611160, "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTYxMTE2MA==", "user": {"login": "renchunde", "id": 23373677, "node_id": "MDQ6VXNlcjIzMzczNjc3", "avatar_url": "https://avatars1.githubusercontent.com/u/23373677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/renchunde", "html_url": "https://github.com/renchunde", "followers_url": "https://api.github.com/users/renchunde/followers", "following_url": "https://api.github.com/users/renchunde/following{/other_user}", "gists_url": "https://api.github.com/users/renchunde/gists{/gist_id}", "starred_url": "https://api.github.com/users/renchunde/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/renchunde/subscriptions", "organizations_url": "https://api.github.com/users/renchunde/orgs", "repos_url": "https://api.github.com/users/renchunde/repos", "events_url": "https://api.github.com/users/renchunde/events{/privacy}", "received_events_url": "https://api.github.com/users/renchunde/received_events", "type": "User", "site_admin": false}, "created_at": "2016-11-10T06:23:46Z", "updated_at": "2016-11-15T02:59:13Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=326106\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/aselle\">@aselle</a>, <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=170179\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jhseu\">@jhseu</a>, <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=38796651\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/danmane\">@danmane</a>, I think the reason is that when a HDFS file writing, its length got by listStatus/getFileStatus from Namenode will not be updated until the block completed or the file created with SyncFlag.UPDATE_LENGTH. But the new data flushed from OutputStream will be available to read for new InputStream. A workaround is to reopen the inputstream repeatedly, like the implementation of HBase replication.</p>", "body_text": "@aselle, @jhseu, @danmane, I think the reason is that when a HDFS file writing, its length got by listStatus/getFileStatus from Namenode will not be updated until the block completed or the file created with SyncFlag.UPDATE_LENGTH. But the new data flushed from OutputStream will be available to read for new InputStream. A workaround is to reopen the inputstream repeatedly, like the implementation of HBase replication.", "body": "@aselle, @jhseu, @danmane, I think the reason is that when a HDFS file writing, its length got by listStatus/getFileStatus from Namenode will not be updated until the block completed or the file created with SyncFlag.UPDATE_LENGTH. But the new data flushed from OutputStream will be available to read for new InputStream. A workaround is to reopen the inputstream repeatedly, like the implementation of HBase replication.\n"}