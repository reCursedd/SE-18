{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/249326579", "html_url": "https://github.com/tensorflow/tensorflow/issues/4425#issuecomment-249326579", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4425", "id": 249326579, "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTMyNjU3OQ==", "user": {"login": "yosinski", "id": 501890, "node_id": "MDQ6VXNlcjUwMTg5MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/501890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yosinski", "html_url": "https://github.com/yosinski", "followers_url": "https://api.github.com/users/yosinski/followers", "following_url": "https://api.github.com/users/yosinski/following{/other_user}", "gists_url": "https://api.github.com/users/yosinski/gists{/gist_id}", "starred_url": "https://api.github.com/users/yosinski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yosinski/subscriptions", "organizations_url": "https://api.github.com/users/yosinski/orgs", "repos_url": "https://api.github.com/users/yosinski/repos", "events_url": "https://api.github.com/users/yosinski/events{/privacy}", "received_events_url": "https://api.github.com/users/yosinski/received_events", "type": "User", "site_admin": false}, "created_at": "2016-09-23T23:39:45Z", "updated_at": "2016-09-23T23:39:45Z", "author_association": "NONE", "body_html": "<p>Reproduced on new Titan X (Pascal) and GTX 1080. Casting suggested by <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=8551989\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/alexgkendall\">@alexgkendall</a> works:</p>\n<pre><code>import numpy as np\nimport tensorflow as tf\n\nx = np.ones((256, 256), dtype=np.float32)\ns = tf.Session()\nX = tf.placeholder(tf.float32)\n#y = tf.nn.softmax(X)                                                 # fails\ny = tf.cast(tf.nn.softmax(tf.cast(X, tf.float64)), tf.float32)        # works\n\nout = s.run(y, feed_dict={X: x})\n</code></pre>", "body_text": "Reproduced on new Titan X (Pascal) and GTX 1080. Casting suggested by @alexgkendall works:\nimport numpy as np\nimport tensorflow as tf\n\nx = np.ones((256, 256), dtype=np.float32)\ns = tf.Session()\nX = tf.placeholder(tf.float32)\n#y = tf.nn.softmax(X)                                                 # fails\ny = tf.cast(tf.nn.softmax(tf.cast(X, tf.float64)), tf.float32)        # works\n\nout = s.run(y, feed_dict={X: x})", "body": "Reproduced on new Titan X (Pascal) and GTX 1080. Casting suggested by @alexgkendall works:\n\n```\nimport numpy as np\nimport tensorflow as tf\n\nx = np.ones((256, 256), dtype=np.float32)\ns = tf.Session()\nX = tf.placeholder(tf.float32)\n#y = tf.nn.softmax(X)                                                 # fails\ny = tf.cast(tf.nn.softmax(tf.cast(X, tf.float64)), tf.float32)        # works\n\nout = s.run(y, feed_dict={X: x})\n```\n"}