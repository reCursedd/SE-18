{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/247968436", "html_url": "https://github.com/tensorflow/tensorflow/issues/4425#issuecomment-247968436", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4425", "id": 247968436, "node_id": "MDEyOklzc3VlQ29tbWVudDI0Nzk2ODQzNg==", "user": {"login": "ibab", "id": 890531, "node_id": "MDQ6VXNlcjg5MDUzMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/890531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibab", "html_url": "https://github.com/ibab", "followers_url": "https://api.github.com/users/ibab/followers", "following_url": "https://api.github.com/users/ibab/following{/other_user}", "gists_url": "https://api.github.com/users/ibab/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibab/subscriptions", "organizations_url": "https://api.github.com/users/ibab/orgs", "repos_url": "https://api.github.com/users/ibab/repos", "events_url": "https://api.github.com/users/ibab/events{/privacy}", "received_events_url": "https://api.github.com/users/ibab/received_events", "type": "User", "site_admin": false}, "created_at": "2016-09-19T11:26:29Z", "updated_at": "2016-09-19T11:26:29Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I've also encountered this problem using v0.10.0 in the following issue: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"177243511\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/ibab/tensorflow-wavenet/issues/13\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ibab/tensorflow-wavenet/issues/13/hovercard\" href=\"https://github.com/ibab/tensorflow-wavenet/issues/13\">ibab/tensorflow-wavenet#13</a></p>\n<p>Here is another example of crashing code:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n<span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\nx <span class=\"pl-k\">=</span> np.ones((<span class=\"pl-c1\">256</span>, <span class=\"pl-c1\">256</span>), <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>np.float32)\ns <span class=\"pl-k\">=</span> tf.Session()\nX <span class=\"pl-k\">=</span> tf.placeholder(tf.float32)\ny <span class=\"pl-k\">=</span> tf.nn.softmax(X)\n\ns.run(y, <span class=\"pl-v\">feed_dict</span><span class=\"pl-k\">=</span>{X: x})</pre></div>\n<p>The size of 256 seems to be significant, as it starts failing when the input dimensions go above that.</p>\n<p>This might be a problem with the efficient reduction code in Eigen, as <code>cuda-memcheck</code> points to that part of the code, and the problem doesn't happen when using <code>tf.float64</code>.</p>", "body_text": "I've also encountered this problem using v0.10.0 in the following issue: ibab/tensorflow-wavenet#13\nHere is another example of crashing code:\nimport numpy as np\nimport tensorflow as tf\n\nx = np.ones((256, 256), dtype=np.float32)\ns = tf.Session()\nX = tf.placeholder(tf.float32)\ny = tf.nn.softmax(X)\n\ns.run(y, feed_dict={X: x})\nThe size of 256 seems to be significant, as it starts failing when the input dimensions go above that.\nThis might be a problem with the efficient reduction code in Eigen, as cuda-memcheck points to that part of the code, and the problem doesn't happen when using tf.float64.", "body": "I've also encountered this problem using v0.10.0 in the following issue: https://github.com/ibab/tensorflow-wavenet/issues/13\n\nHere is another example of crashing code:\n\n``` python\nimport numpy as np\nimport tensorflow as tf\n\nx = np.ones((256, 256), dtype=np.float32)\ns = tf.Session()\nX = tf.placeholder(tf.float32)\ny = tf.nn.softmax(X)\n\ns.run(y, feed_dict={X: x})\n```\n\nThe size of 256 seems to be significant, as it starts failing when the input dimensions go above that.\n\nThis might be a problem with the efficient reduction code in Eigen, as `cuda-memcheck` points to that part of the code, and the problem doesn't happen when using `tf.float64`.\n"}