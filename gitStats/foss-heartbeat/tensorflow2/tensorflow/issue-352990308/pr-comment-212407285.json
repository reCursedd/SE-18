{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/212407285", "pull_request_review_id": 149008816, "id": 212407285, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjQwNzI4NQ==", "diff_hunk": "@@ -0,0 +1,78 @@\n+/* Copyright 2018 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+\n+#ifndef TENSORFLOW_CORE_KERNELS_TENSOR_FOREST_RESOURCES_H_\n+#define TENSORFLOW_CORE_KERNELS_TENSOR_FOREST_RESOURCES_H_\n+\n+#include \"tensorflow/core/framework/resource_mgr.h\"\n+#include \"tensorflow/core/framework/tensor.h\"\n+#include \"tensorflow/core/kernels/tensor_forest/evaluator.h\"\n+#include \"tensorflow/core/kernels/tensor_forest/leaf_model.h\"\n+#include \"tensorflow/core/kernels/tensor_forest/tensor_forest.pb.h\"\n+#include \"tensorflow/core/lib/strings/strcat.h\"\n+#include \"tensorflow/core/platform/mutex.h\"\n+#include \"tensorflow/core/platform/protobuf.h\"\n+\n+namespace tensorflow {\n+\n+// Keep a tree ensemble in memory for efficient evaluation and mutation.\n+class DecisionTreeResource : public ResourceBase {\n+ public:\n+  DecisionTreeResource(const int32& leaf_model_type, const int32& num_output)\n+      : leaf_model_type_(leaf_model_type),\n+        decision_tree_(new tensorforest::Model()) {\n+    model_op_ =\n+        LeafModelFactory::CreateLeafModelOperator(leaf_model_type_, num_output);\n+  };\n+  string DebugString() override {\n+    return strings::StrCat(\"DecisionTree[size=\",\n+                           decision_tree_->decision_tree().nodes_size(), \"]\");\n+  }\n+\n+  mutex* get_mutex() { return &mu_; }\n+\n+  const tensorforest::Model& decision_tree() const { return *decision_tree_; }\n+\n+  tensorforest::Model* mutable_decision_tree() { return decision_tree_.get(); }\n+\n+  const tensorforest::Leaf& get_leaf(int32 id) const {\n+    return decision_tree_->decision_tree().nodes(id).leaf();\n+  }\n+\n+  tensorforest::TreeNode* get_mutable_tree_node(int32 id) {\n+    return decision_tree_->mutable_decision_tree()->mutable_nodes(id);\n+  }\n+\n+  // Resets the resource and frees the proto.\n+  // Caller needs to hold the mutex lock while calling this.\n+  void Reset() { decision_tree_.reset(new tensorforest::Model()); }\n+\n+  void MaybeInitialize();\n+  int32 TraverseTree(const std::unique_ptr<DenseTensorType>& input_data,\n+                     int example, tensorforest::TreePath* path) const;\n+\n+  // void SplitNode(int32 node_id, tensorforest::SplitCandidate* best,\n+  //                std::vector<int32>* new_children);\n+\n+ private:\n+  mutex mu_;", "path": "tensorflow/core/kernels/tensor_forest/resources.h", "position": 57, "original_position": 70, "commit_id": "8e85fe418aa40e5e4d4d4700dd491f4cbef4b30e", "original_commit_id": "53a8c626c2fd8898be5cf74fa3b5afe14c443641", "user": {"login": "nataliaponomareva", "id": 4313109, "node_id": "MDQ6VXNlcjQzMTMxMDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/4313109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nataliaponomareva", "html_url": "https://github.com/nataliaponomareva", "followers_url": "https://api.github.com/users/nataliaponomareva/followers", "following_url": "https://api.github.com/users/nataliaponomareva/following{/other_user}", "gists_url": "https://api.github.com/users/nataliaponomareva/gists{/gist_id}", "starred_url": "https://api.github.com/users/nataliaponomareva/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nataliaponomareva/subscriptions", "organizations_url": "https://api.github.com/users/nataliaponomareva/orgs", "repos_url": "https://api.github.com/users/nataliaponomareva/repos", "events_url": "https://api.github.com/users/nataliaponomareva/events{/privacy}", "received_events_url": "https://api.github.com/users/nataliaponomareva/received_events", "type": "User", "site_admin": false}, "body": "mutable mutex?", "created_at": "2018-08-23T18:13:07Z", "updated_at": "2018-11-13T17:25:40Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/21803#discussion_r212407285", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21803", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/212407285"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/21803#discussion_r212407285"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21803"}}, "body_html": "<p>mutable mutex?</p>", "body_text": "mutable mutex?"}