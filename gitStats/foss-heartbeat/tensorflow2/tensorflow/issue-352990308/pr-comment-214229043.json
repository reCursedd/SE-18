{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/214229043", "pull_request_review_id": 151234463, "id": 214229043, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDIyOTA0Mw==", "diff_hunk": "@@ -0,0 +1,62 @@\n+/* Copyright 2018 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+\n+#ifndef TENSORFLOW_CORE_KERNELS_TENSOR_FOREST_RESOURCES_H_\n+#define TENSORFLOW_CORE_KERNELS_TENSOR_FOREST_RESOURCES_H_\n+\n+#include \"tensorflow/core/framework/resource_mgr.h\"\n+#include \"tensorflow/core/framework/tensor.h\"\n+#include \"tensorflow/core/kernels/boosted_trees/boosted_trees.pb.h\"\n+#include \"tensorflow/core/lib/strings/strcat.h\"\n+#include \"tensorflow/core/platform/mutex.h\"\n+#include \"tensorflow/core/platform/protobuf.h\"\n+\n+namespace tensorflow {\n+\n+typedef TTypes<const float, 2>::ConstTensor DenseTensorType;\n+\n+// Keep a tree ensemble in memory for efficient evaluation and mutation.\n+class TensorForestTreeResource : public ResourceBase {\n+ public:\n+  TensorForestTreeResource() : decision_tree_(new boosted_trees::Tree()){};\n+\n+  string DebugString() override {\n+    return strings::StrCat(\"TensorForestTree[size=\", get_size(), \"]\");\n+  }\n+\n+  mutex* get_mutex() { return &mu_; }\n+\n+  bool InitFromSerialized(const string& serialized);\n+\n+  // Resets the resource and frees the proto.\n+  // Caller needs to hold the mutex lock while calling this.\n+  void Reset() { decision_tree_.reset(new boosted_trees::Tree()); }\n+\n+  const boosted_trees::Tree& decision_tree() const { return *decision_tree_; }\n+\n+  const int32 get_size() const { return decision_tree_->nodes_size(); }\n+\n+  const float get_prediction(const int32 id, const int32 dimension) const;\n+\n+  const int32 TraverseTree(const std::unique_ptr<DenseTensorType>& input_data,\n+                           const int example) const;\n+\n+ private:\n+  mutex mu_;\n+  std::unique_ptr<boosted_trees::Tree> decision_tree_;", "path": "tensorflow/core/kernels/tensor_forest/resources.h", "position": null, "original_position": 58, "commit_id": "8e85fe418aa40e5e4d4d4700dd491f4cbef4b30e", "original_commit_id": "cdef0717509b3605505000ed878301fe9f1b49d6", "user": {"login": "nataliaponomareva", "id": 4313109, "node_id": "MDQ6VXNlcjQzMTMxMDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/4313109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nataliaponomareva", "html_url": "https://github.com/nataliaponomareva", "followers_url": "https://api.github.com/users/nataliaponomareva/followers", "following_url": "https://api.github.com/users/nataliaponomareva/following{/other_user}", "gists_url": "https://api.github.com/users/nataliaponomareva/gists{/gist_id}", "starred_url": "https://api.github.com/users/nataliaponomareva/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nataliaponomareva/subscriptions", "organizations_url": "https://api.github.com/users/nataliaponomareva/orgs", "repos_url": "https://api.github.com/users/nataliaponomareva/repos", "events_url": "https://api.github.com/users/nataliaponomareva/events{/privacy}", "received_events_url": "https://api.github.com/users/nataliaponomareva/received_events", "type": "User", "site_admin": false}, "body": "can u use arena instead, like in boosted_trees. This gives a better allocation strategy", "created_at": "2018-08-31T02:12:42Z", "updated_at": "2018-11-13T17:25:40Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/21803#discussion_r214229043", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21803", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/214229043"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/21803#discussion_r214229043"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21803"}}, "body_html": "<p>can u use arena instead, like in boosted_trees. This gives a better allocation strategy</p>", "body_text": "can u use arena instead, like in boosted_trees. This gives a better allocation strategy"}