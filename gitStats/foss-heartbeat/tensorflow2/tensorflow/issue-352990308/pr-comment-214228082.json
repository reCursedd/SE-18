{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/214228082", "pull_request_review_id": 151234463, "id": 214228082, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDIyODA4Mg==", "diff_hunk": "@@ -0,0 +1,138 @@\n+/* Copyright 2018 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+#include \"tensorflow/core/framework/op_kernel.h\"\n+#include \"tensorflow/core/framework/resource_mgr.h\"\n+#include \"tensorflow/core/framework/tensor.h\"\n+#include \"tensorflow/core/framework/tensor_shape.h\"\n+#include \"tensorflow/core/framework/tensor_types.h\"\n+#include \"tensorflow/core/kernels/tensor_forest/resources.h\"\n+\n+namespace tensorflow {\n+\n+class TensorForestCreateTreeVariableOp : public OpKernel {\n+ public:\n+  explicit TensorForestCreateTreeVariableOp(OpKernelConstruction* context)\n+      : OpKernel(context){};\n+\n+  void Compute(OpKernelContext* context) override {\n+    const Tensor* tree_config_t;\n+    OP_REQUIRES_OK(context, context->input(\"tree_config\", &tree_config_t));\n+    OP_REQUIRES(context, TensorShapeUtils::IsScalar(tree_config_t->shape()),", "path": "tensorflow/core/kernels/tensor_forest/resource_ops.cc", "position": null, "original_position": 32, "commit_id": "8e85fe418aa40e5e4d4d4700dd491f4cbef4b30e", "original_commit_id": "cdef0717509b3605505000ed878301fe9f1b49d6", "user": {"login": "nataliaponomareva", "id": 4313109, "node_id": "MDQ6VXNlcjQzMTMxMDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/4313109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nataliaponomareva", "html_url": "https://github.com/nataliaponomareva", "followers_url": "https://api.github.com/users/nataliaponomareva/followers", "following_url": "https://api.github.com/users/nataliaponomareva/following{/other_user}", "gists_url": "https://api.github.com/users/nataliaponomareva/gists{/gist_id}", "starred_url": "https://api.github.com/users/nataliaponomareva/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nataliaponomareva/subscriptions", "organizations_url": "https://api.github.com/users/nataliaponomareva/orgs", "repos_url": "https://api.github.com/users/nataliaponomareva/repos", "events_url": "https://api.github.com/users/nataliaponomareva/events{/privacy}", "received_events_url": "https://api.github.com/users/nataliaponomareva/received_events", "type": "User", "site_admin": false}, "body": "this in general should be checked in ops definitions resources_ops.cc. an example from boosted trees\r\n\r\nREGISTER_OP(\"IsBoostedTreesEnsembleInitialized\")\r\n    .Input(\"tree_ensemble_handle: resource\")\r\n    .Output(\"is_initialized: bool\")\r\n    .SetShapeFn([](shape_inference::InferenceContext* c) {\r\n      shape_inference::ShapeHandle unused_input;\r\n      TF_RETURN_IF_ERROR(c->WithRank(c->input(0), 0, &unused_input));\r\n      c->set_output(0, c->Scalar());\r\n      return Status::OK();\r\n    });", "created_at": "2018-08-31T02:02:57Z", "updated_at": "2018-11-13T17:25:40Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/21803#discussion_r214228082", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21803", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/214228082"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/21803#discussion_r214228082"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21803"}}, "body_html": "<p>this in general should be checked in ops definitions resources_ops.cc. an example from boosted trees</p>\n<p>REGISTER_OP(\"IsBoostedTreesEnsembleInitialized\")<br>\n.Input(\"tree_ensemble_handle: resource\")<br>\n.Output(\"is_initialized: bool\")<br>\n.SetShapeFn([](shape_inference::InferenceContext* c) {<br>\nshape_inference::ShapeHandle unused_input;<br>\nTF_RETURN_IF_ERROR(c-&gt;WithRank(c-&gt;input(0), 0, &amp;unused_input));<br>\nc-&gt;set_output(0, c-&gt;Scalar());<br>\nreturn Status::OK();<br>\n});</p>", "body_text": "this in general should be checked in ops definitions resources_ops.cc. an example from boosted trees\nREGISTER_OP(\"IsBoostedTreesEnsembleInitialized\")\n.Input(\"tree_ensemble_handle: resource\")\n.Output(\"is_initialized: bool\")\n.SetShapeFn([](shape_inference::InferenceContext* c) {\nshape_inference::ShapeHandle unused_input;\nTF_RETURN_IF_ERROR(c->WithRank(c->input(0), 0, &unused_input));\nc->set_output(0, c->Scalar());\nreturn Status::OK();\n});"}