{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23931", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23931/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23931/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23931/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/23931", "id": 383659126, "node_id": "MDU6SXNzdWUzODM2NTkxMjY=", "number": 23931, "title": "Flatten Op is nil when accessed via exported graph", "user": {"login": "sdeoras", "id": 16372009, "node_id": "MDQ6VXNlcjE2MzcyMDA5", "avatar_url": "https://avatars2.githubusercontent.com/u/16372009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sdeoras", "html_url": "https://github.com/sdeoras", "followers_url": "https://api.github.com/users/sdeoras/followers", "following_url": "https://api.github.com/users/sdeoras/following{/other_user}", "gists_url": "https://api.github.com/users/sdeoras/gists{/gist_id}", "starred_url": "https://api.github.com/users/sdeoras/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sdeoras/subscriptions", "organizations_url": "https://api.github.com/users/sdeoras/orgs", "repos_url": "https://api.github.com/users/sdeoras/repos", "events_url": "https://api.github.com/users/sdeoras/events{/privacy}", "received_events_url": "https://api.github.com/users/sdeoras/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-11-22T21:33:40Z", "updated_at": "2018-11-22T21:33:40Z", "closed_at": null, "author_association": "NONE", "body_html": "<p><strong>System information</strong></p>\n<ul>\n<li>Have I written custom code (as opposed to using a stock example script provided in TensorFlow):<br>\nYes</li>\n<li>OS Platform and Distribution (e.g., Linux Ubuntu 16.04):<br>\nMac</li>\n<li>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:</li>\n<li>TensorFlow installed from (source or binary):<br>\nbinary</li>\n<li>TensorFlow version (use command below):<br>\n1.12.0</li>\n<li>Python version:<br>\nPython 3.6.5 :: Anaconda, Inc.</li>\n<li>Bazel version (if compiling from source):</li>\n<li>GCC/Compiler version (if compiling from source):</li>\n<li>CUDA/cuDNN version:<br>\nN/A</li>\n<li>GPU model and memory:<br>\nN/A</li>\n</ul>\n<p>You can collect some of this information using our environment capture <a href=\"https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\">script</a><br>\nYou can also obtain the TensorFlow version with<br>\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"<br>\nv1.12.0-rc2-3-ga6d8ffae09 1.12.0</p>\n<p><strong>Describe the current behavior</strong><br>\nMy use case is the build the graph using Python interface for TF and export that graph as a pb file. This graph is then imported in Go environment using Go interface for TF. It seems tf.layers.flatten is inaccessible using the name, when name is provided as part of tf.layers.flatten's argument.</p>\n<p>However, assigning name to it using tf.identity works. Pl. see code below.<br>\n<strong>Describe the expected behavior</strong><br>\n<code>tf.layers.flatten(my_input, name=\"flatten\")</code> should allow access to flatten operation<br>\nfrom the exported graph using name <code>flatten</code> and should not require naming it separately.</p>\n<p><strong>Code to reproduce the issue</strong><br>\nProvide a reproducible test case that is the bare minimum necessary to generate the problem.<br>\nBelow is python code to export the graph:</p>\n<pre><code>import tensorflow as tf\n\nprint(tf.__version__)\n\nmy_input = tf.placeholder(dtype=tf.uint8, shape=[1, None, None, 3], name=\"myInput\")\n\ntf.layers.flatten(my_input, name=\"flatten1\")\n\nf = tf.layers.flatten(my_input)\ntf.identity(f, name=\"flatten2\")\n\n# finally save the graph to be used in Go code\ngraph = tf.Session().graph_def\ntf.io.write_graph(graph, \"./\", \"flatten.pb\", as_text=False)\n</code></pre>\n<p>Below is Go code to access flatten operation:</p>\n<pre><code>package main\n\nimport (\n\t\"fmt\"\n\t\"io/ioutil\"\n\t\"log\"\n\n\ttf \"github.com/tensorflow/tensorflow/tensorflow/go\"\n)\n\nfunc main() {\n\tdef, err := ioutil.ReadFile(\"flatten.pb\")\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\n\tgraph := tf.NewGraph()\n\tif err := graph.Import(def, \"\"); err != nil {\n\t\tlog.Fatal(err)\n\t}\n\n\tfmt.Println(\"Access via name=flatten1 fetched a nil?:\", graph.Operation(\"flatten1\") == nil)\n\tfmt.Println(\"Access via name=flatten2 fetched a nil?:\", graph.Operation(\"flatten2\") == nil)\n}\n</code></pre>\n<p>Executing above produces following output:</p>\n<pre><code>$ go run flatten.go\nAccess via name=flatten1 fetched a nil?: true\nAccess via name=flatten2 fetched a nil?: false\n</code></pre>\n<p><strong>Other info / logs</strong><br>\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nYes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nMac\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:\nTensorFlow installed from (source or binary):\nbinary\nTensorFlow version (use command below):\n1.12.0\nPython version:\nPython 3.6.5 :: Anaconda, Inc.\nBazel version (if compiling from source):\nGCC/Compiler version (if compiling from source):\nCUDA/cuDNN version:\nN/A\nGPU model and memory:\nN/A\n\nYou can collect some of this information using our environment capture script\nYou can also obtain the TensorFlow version with\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\nv1.12.0-rc2-3-ga6d8ffae09 1.12.0\nDescribe the current behavior\nMy use case is the build the graph using Python interface for TF and export that graph as a pb file. This graph is then imported in Go environment using Go interface for TF. It seems tf.layers.flatten is inaccessible using the name, when name is provided as part of tf.layers.flatten's argument.\nHowever, assigning name to it using tf.identity works. Pl. see code below.\nDescribe the expected behavior\ntf.layers.flatten(my_input, name=\"flatten\") should allow access to flatten operation\nfrom the exported graph using name flatten and should not require naming it separately.\nCode to reproduce the issue\nProvide a reproducible test case that is the bare minimum necessary to generate the problem.\nBelow is python code to export the graph:\nimport tensorflow as tf\n\nprint(tf.__version__)\n\nmy_input = tf.placeholder(dtype=tf.uint8, shape=[1, None, None, 3], name=\"myInput\")\n\ntf.layers.flatten(my_input, name=\"flatten1\")\n\nf = tf.layers.flatten(my_input)\ntf.identity(f, name=\"flatten2\")\n\n# finally save the graph to be used in Go code\ngraph = tf.Session().graph_def\ntf.io.write_graph(graph, \"./\", \"flatten.pb\", as_text=False)\n\nBelow is Go code to access flatten operation:\npackage main\n\nimport (\n\t\"fmt\"\n\t\"io/ioutil\"\n\t\"log\"\n\n\ttf \"github.com/tensorflow/tensorflow/tensorflow/go\"\n)\n\nfunc main() {\n\tdef, err := ioutil.ReadFile(\"flatten.pb\")\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\n\tgraph := tf.NewGraph()\n\tif err := graph.Import(def, \"\"); err != nil {\n\t\tlog.Fatal(err)\n\t}\n\n\tfmt.Println(\"Access via name=flatten1 fetched a nil?:\", graph.Operation(\"flatten1\") == nil)\n\tfmt.Println(\"Access via name=flatten2 fetched a nil?:\", graph.Operation(\"flatten2\") == nil)\n}\n\nExecuting above produces following output:\n$ go run flatten.go\nAccess via name=flatten1 fetched a nil?: true\nAccess via name=flatten2 fetched a nil?: false\n\nOther info / logs\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.", "body": "**System information**\r\n- Have I written custom code (as opposed to using a stock example script provided in TensorFlow):\r\nYes\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04):\r\nMac\r\n- Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:\r\n- TensorFlow installed from (source or binary):\r\nbinary\r\n- TensorFlow version (use command below):\r\n1.12.0\r\n- Python version:\r\nPython 3.6.5 :: Anaconda, Inc.\r\n- Bazel version (if compiling from source):\r\n- GCC/Compiler version (if compiling from source):\r\n- CUDA/cuDNN version:\r\nN/A\r\n- GPU model and memory:\r\nN/A\r\n\r\n\r\nYou can collect some of this information using our environment capture [script](https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh)\r\nYou can also obtain the TensorFlow version with\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\nv1.12.0-rc2-3-ga6d8ffae09 1.12.0\r\n\r\n**Describe the current behavior**\r\nMy use case is the build the graph using Python interface for TF and export that graph as a pb file. This graph is then imported in Go environment using Go interface for TF. It seems tf.layers.flatten is inaccessible using the name, when name is provided as part of tf.layers.flatten's argument.\r\n\r\nHowever, assigning name to it using tf.identity works. Pl. see code below.\r\n**Describe the expected behavior**\r\n`tf.layers.flatten(my_input, name=\"flatten\")` should allow access to flatten operation\r\nfrom the exported graph using name `flatten` and should not require naming it separately.\r\n\r\n**Code to reproduce the issue**\r\nProvide a reproducible test case that is the bare minimum necessary to generate the problem.\r\nBelow is python code to export the graph:\r\n```\r\nimport tensorflow as tf\r\n\r\nprint(tf.__version__)\r\n\r\nmy_input = tf.placeholder(dtype=tf.uint8, shape=[1, None, None, 3], name=\"myInput\")\r\n\r\ntf.layers.flatten(my_input, name=\"flatten1\")\r\n\r\nf = tf.layers.flatten(my_input)\r\ntf.identity(f, name=\"flatten2\")\r\n\r\n# finally save the graph to be used in Go code\r\ngraph = tf.Session().graph_def\r\ntf.io.write_graph(graph, \"./\", \"flatten.pb\", as_text=False)\r\n```\r\nBelow is Go code to access flatten operation:\r\n```\r\npackage main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"io/ioutil\"\r\n\t\"log\"\r\n\r\n\ttf \"github.com/tensorflow/tensorflow/tensorflow/go\"\r\n)\r\n\r\nfunc main() {\r\n\tdef, err := ioutil.ReadFile(\"flatten.pb\")\r\n\tif err != nil {\r\n\t\tlog.Fatal(err)\r\n\t}\r\n\r\n\tgraph := tf.NewGraph()\r\n\tif err := graph.Import(def, \"\"); err != nil {\r\n\t\tlog.Fatal(err)\r\n\t}\r\n\r\n\tfmt.Println(\"Access via name=flatten1 fetched a nil?:\", graph.Operation(\"flatten1\") == nil)\r\n\tfmt.Println(\"Access via name=flatten2 fetched a nil?:\", graph.Operation(\"flatten2\") == nil)\r\n}\r\n```\r\nExecuting above produces following output:\r\n```\r\n$ go run flatten.go\r\nAccess via name=flatten1 fetched a nil?: true\r\nAccess via name=flatten2 fetched a nil?: false\r\n```\r\n**Other info / logs**\r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.\r\n"}