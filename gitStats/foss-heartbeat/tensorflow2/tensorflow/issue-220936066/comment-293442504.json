{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/293442504", "html_url": "https://github.com/tensorflow/tensorflow/issues/9135#issuecomment-293442504", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9135", "id": 293442504, "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzQ0MjUwNA==", "user": {"login": "andrewharp", "id": 3376817, "node_id": "MDQ6VXNlcjMzNzY4MTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/3376817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewharp", "html_url": "https://github.com/andrewharp", "followers_url": "https://api.github.com/users/andrewharp/followers", "following_url": "https://api.github.com/users/andrewharp/following{/other_user}", "gists_url": "https://api.github.com/users/andrewharp/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewharp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewharp/subscriptions", "organizations_url": "https://api.github.com/users/andrewharp/orgs", "repos_url": "https://api.github.com/users/andrewharp/repos", "events_url": "https://api.github.com/users/andrewharp/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewharp/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-12T01:00:58Z", "updated_at": "2017-04-12T08:33:28Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=49262\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jart\">@jart</a> Actually, it just tries to call allocate() to see if the native methods are loaded. The following log messages indicate that they were, so the previous error can be ignored (I'm unaware of any means to suppress it or otherwise test for native method existence).</p>\n<p>Regarding testing: even though <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=563086\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/junit\">@junit</a> may be available for Java tests I don't believe Bazel supports android_test rules yet (we actually have a few Android tests internally that are not exposed yet due to this).</p>", "body_text": "@jart Actually, it just tries to call allocate() to see if the native methods are loaded. The following log messages indicate that they were, so the previous error can be ignored (I'm unaware of any means to suppress it or otherwise test for native method existence).\nRegarding testing: even though @junit may be available for Java tests I don't believe Bazel supports android_test rules yet (we actually have a few Android tests internally that are not exposed yet due to this).", "body": "@jart Actually, it just tries to call allocate() to see if the native methods are loaded. The following log messages indicate that they were, so the previous error can be ignored (I'm unaware of any means to suppress it or otherwise test for native method existence).\r\n\r\nRegarding testing: even though @junit may be available for Java tests I don't believe Bazel supports android_test rules yet (we actually have a few Android tests internally that are not exposed yet due to this)."}