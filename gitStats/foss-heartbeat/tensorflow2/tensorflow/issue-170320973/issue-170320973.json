{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3721", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3721/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3721/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3721/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/3721", "id": 170320973, "node_id": "MDU6SXNzdWUxNzAzMjA5NzM=", "number": 3721, "title": "contrib outputs_collections bug", "user": {"login": "kchen92", "id": 6062347, "node_id": "MDQ6VXNlcjYwNjIzNDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/6062347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kchen92", "html_url": "https://github.com/kchen92", "followers_url": "https://api.github.com/users/kchen92/followers", "following_url": "https://api.github.com/users/kchen92/following{/other_user}", "gists_url": "https://api.github.com/users/kchen92/gists{/gist_id}", "starred_url": "https://api.github.com/users/kchen92/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kchen92/subscriptions", "organizations_url": "https://api.github.com/users/kchen92/orgs", "repos_url": "https://api.github.com/users/kchen92/repos", "events_url": "https://api.github.com/users/kchen92/events{/privacy}", "received_events_url": "https://api.github.com/users/kchen92/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "sguada", "id": 1766524, "node_id": "MDQ6VXNlcjE3NjY1MjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1766524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sguada", "html_url": "https://github.com/sguada", "followers_url": "https://api.github.com/users/sguada/followers", "following_url": "https://api.github.com/users/sguada/following{/other_user}", "gists_url": "https://api.github.com/users/sguada/gists{/gist_id}", "starred_url": "https://api.github.com/users/sguada/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sguada/subscriptions", "organizations_url": "https://api.github.com/users/sguada/orgs", "repos_url": "https://api.github.com/users/sguada/repos", "events_url": "https://api.github.com/users/sguada/events{/privacy}", "received_events_url": "https://api.github.com/users/sguada/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sguada", "id": 1766524, "node_id": "MDQ6VXNlcjE3NjY1MjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1766524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sguada", "html_url": "https://github.com/sguada", "followers_url": "https://api.github.com/users/sguada/followers", "following_url": "https://api.github.com/users/sguada/following{/other_user}", "gists_url": "https://api.github.com/users/sguada/gists{/gist_id}", "starred_url": "https://api.github.com/users/sguada/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sguada/subscriptions", "organizations_url": "https://api.github.com/users/sguada/orgs", "repos_url": "https://api.github.com/users/sguada/repos", "events_url": "https://api.github.com/users/sguada/events{/privacy}", "received_events_url": "https://api.github.com/users/sguada/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2016-08-10T03:38:06Z", "updated_at": "2016-09-13T20:29:01Z", "closed_at": "2016-09-13T20:29:01Z", "author_association": "CONTRIBUTOR", "body_html": "<h1>Problem description</h1>\n<p>TensorFlow version r0.10</p>\n<p>It seems to me that there is a bug with the outputs_collections in tensorflow/tensorflow/contrib/layers. When trying to add the outputs of the layers (say, conv2d) to the tf.GraphKeys.ACTIVATIONS collection, I run into errors with NamedOutputs such as the following:</p>\n<pre><code>...\nRun summarize_activations() from tensorflow/tensorflow/contrib/layers/python/layers/summaries.py\n...\n/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/layers/python/layers/summaries.pyc in summarize_collection(collection, name_filter, summarizer)\n    160     if name_filter is None or re.match(name_filter, op.op.name):\n    161       tensors.append(op)\n--&gt; 162   return summarize_tensors(tensors, summarizer)\n    163\n    164\n\n/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/layers/python/layers/summaries.pyc in summarize_tensors(tensors, summarizer)\n    150 def summarize_tensors(tensors, summarizer=summarize_tensor):\n    151   \"\"\"Summarize a set of tensors.\"\"\"\n--&gt; 152   return [summarizer(tensor) for tensor in tensors]\n    153\n    154\n\n/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/layers/python/layers/summaries.pyc in summarize_tensor(tensor, tag)\n    135   \"\"\"\n    136   # Skips string tensors and boolean tensors (not handled by the summaries).\n--&gt; 137   if (tensor.dtype.is_compatible_with(dtypes.string) or\n    138       tensor.dtype.base_dtype == dtypes.bool):\n    139     return None\n\nAttributeError: 'NamedOutputs' object has no attribute 'dtype'\n</code></pre>\n<h1>Root of problem</h1>\n<h2>README and code are not consistent</h2>\n<p>The readme (located at tensorflow/tensorflow/contrib/layers/README.md) indicates that \"weights, biases, and activations (i.e., outputs) are, by default, added to the specified collections.\" They even show a piece of code such as <code>output_collections=(tf.GraphKeys.ACTIVATIONS,)</code>. However, looking into the code in tensorflow/tensorflow/contrib/layers/python/layers/layers.py it seems to me that there is nothing adding activations to the tf.GraphKeys.ACTIVATIONS collection. I believe one solution to this problem is to use the <code>_apply_activation</code> function already written in the file:</p>\n<pre><code>def _apply_activation(y, activation_fn, output_collections):\n  if activation_fn:\n    y = activation_fn(y)\n  ops.add_to_collections(list(output_collections or []) +\n                         [ops.GraphKeys.ACTIVATIONS], y)\n  return y\n</code></pre>\n<p>instead of using only</p>\n<pre><code>if activation_fn:\n      outputs = activation_fn(outputs)\nreturn utils.collect_named_outputs(outputs_collections, sc.name, outputs)\n</code></pre>\n<h2>Code walkthrough</h2>\n<p>tensorflow/tensorflow/contrib/layers/python/layers/layers.py uses this line several times (such as in conv2d):<br>\n<code>utils.collect_named_outputs(outputs_collections, sc, outputs)</code></p>\n<p>Opening tensorflow/tensorflow/contrib/layers/python/layers/utils.py we see that this ultimately calls:<br>\n<code>ops.add_to_collections(collections, NamedOutputs(name, outputs))</code></p>\n<p>However, it seems to me that when using the summarize_activations function in <a href=\"https://github.com/tensorflow/tensorflow/blob/r0.10/tensorflow/contrib/layers/python/layers/summaries.py\">https://github.com/tensorflow/tensorflow/blob/r0.10/tensorflow/contrib/layers/python/layers/summaries.py</a>, it expects the value to be <code>outputs</code> rather than <code>NamedOutputs(name, outputs)</code>. In other words, the summarize_activations function seems to expect something along the lines of:<br>\n<code>ops.add_to_collections(collections, outputs)</code><br>\nrather than<br>\n<code>ops.add_to_collections(collections, NamedOutputs(name, outputs))</code></p>\n<h3>Further description (not particularly informative if you are already familiar with the tensorflow repo)</h3>\n<p>If we look into what <code>ops.add_to_collections</code> is doing, we see that in tensorflow/tensorflow/python/framework/ops.py this ultimately calls:<br>\n<code>self.add_to_collection(name, value)</code></p>\n<p><code>add_to_collection(...)</code> is described in the same file as:</p>\n<pre><code>  def add_to_collection(self, name, value):\n    \"\"\"Stores `value` in the collection with the given `name`.\n    Note that collections are not sets, so it is possible to add a value to\n    a collection several times.\n    Args:\n      name: The key for the collection. The `GraphKeys` class\n        contains many standard names for collections.\n      value: The value to add to the collection.\n</code></pre>\n<p>So, our <code>value</code> here is <code>value = NamedOutputs(name, outputs)</code> from earlier.</p>\n<p>However, if we look at the summarize_activations in tensorflow/tensorflow/contrib/layers/python/layers/summaries.py, we see that:</p>\n<pre><code>def summarize_activations(name_filter=None, summarizer=summarize_activation):\n  \"\"\"Summarize activations, using `summarize_activation` to summarize.\"\"\"\n  return summarize_collection(ops.GraphKeys.ACTIVATIONS, name_filter,\n                              summarizer)\n\ndef summarize_collection(collection, name_filter=None,\n                         summarizer=summarize_tensor):\n  \"\"\"Summarize a graph collection of tensors, possibly filtered by name.\"\"\"\n  tensors = []\n  for op in ops.get_collection(collection):\n    if name_filter is None or re.match(name_filter, op.op.name):\n      tensors.append(op)\n  return summarize_tensors(tensors, summarizer)\n</code></pre>\n<p>In other words, <code>summarize_collection(...)</code> expects the collection to contain tensors instead of NamedOutputs(name, outputs).</p>", "body_text": "Problem description\nTensorFlow version r0.10\nIt seems to me that there is a bug with the outputs_collections in tensorflow/tensorflow/contrib/layers. When trying to add the outputs of the layers (say, conv2d) to the tf.GraphKeys.ACTIVATIONS collection, I run into errors with NamedOutputs such as the following:\n...\nRun summarize_activations() from tensorflow/tensorflow/contrib/layers/python/layers/summaries.py\n...\n/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/layers/python/layers/summaries.pyc in summarize_collection(collection, name_filter, summarizer)\n    160     if name_filter is None or re.match(name_filter, op.op.name):\n    161       tensors.append(op)\n--> 162   return summarize_tensors(tensors, summarizer)\n    163\n    164\n\n/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/layers/python/layers/summaries.pyc in summarize_tensors(tensors, summarizer)\n    150 def summarize_tensors(tensors, summarizer=summarize_tensor):\n    151   \"\"\"Summarize a set of tensors.\"\"\"\n--> 152   return [summarizer(tensor) for tensor in tensors]\n    153\n    154\n\n/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/layers/python/layers/summaries.pyc in summarize_tensor(tensor, tag)\n    135   \"\"\"\n    136   # Skips string tensors and boolean tensors (not handled by the summaries).\n--> 137   if (tensor.dtype.is_compatible_with(dtypes.string) or\n    138       tensor.dtype.base_dtype == dtypes.bool):\n    139     return None\n\nAttributeError: 'NamedOutputs' object has no attribute 'dtype'\n\nRoot of problem\nREADME and code are not consistent\nThe readme (located at tensorflow/tensorflow/contrib/layers/README.md) indicates that \"weights, biases, and activations (i.e., outputs) are, by default, added to the specified collections.\" They even show a piece of code such as output_collections=(tf.GraphKeys.ACTIVATIONS,). However, looking into the code in tensorflow/tensorflow/contrib/layers/python/layers/layers.py it seems to me that there is nothing adding activations to the tf.GraphKeys.ACTIVATIONS collection. I believe one solution to this problem is to use the _apply_activation function already written in the file:\ndef _apply_activation(y, activation_fn, output_collections):\n  if activation_fn:\n    y = activation_fn(y)\n  ops.add_to_collections(list(output_collections or []) +\n                         [ops.GraphKeys.ACTIVATIONS], y)\n  return y\n\ninstead of using only\nif activation_fn:\n      outputs = activation_fn(outputs)\nreturn utils.collect_named_outputs(outputs_collections, sc.name, outputs)\n\nCode walkthrough\ntensorflow/tensorflow/contrib/layers/python/layers/layers.py uses this line several times (such as in conv2d):\nutils.collect_named_outputs(outputs_collections, sc, outputs)\nOpening tensorflow/tensorflow/contrib/layers/python/layers/utils.py we see that this ultimately calls:\nops.add_to_collections(collections, NamedOutputs(name, outputs))\nHowever, it seems to me that when using the summarize_activations function in https://github.com/tensorflow/tensorflow/blob/r0.10/tensorflow/contrib/layers/python/layers/summaries.py, it expects the value to be outputs rather than NamedOutputs(name, outputs). In other words, the summarize_activations function seems to expect something along the lines of:\nops.add_to_collections(collections, outputs)\nrather than\nops.add_to_collections(collections, NamedOutputs(name, outputs))\nFurther description (not particularly informative if you are already familiar with the tensorflow repo)\nIf we look into what ops.add_to_collections is doing, we see that in tensorflow/tensorflow/python/framework/ops.py this ultimately calls:\nself.add_to_collection(name, value)\nadd_to_collection(...) is described in the same file as:\n  def add_to_collection(self, name, value):\n    \"\"\"Stores `value` in the collection with the given `name`.\n    Note that collections are not sets, so it is possible to add a value to\n    a collection several times.\n    Args:\n      name: The key for the collection. The `GraphKeys` class\n        contains many standard names for collections.\n      value: The value to add to the collection.\n\nSo, our value here is value = NamedOutputs(name, outputs) from earlier.\nHowever, if we look at the summarize_activations in tensorflow/tensorflow/contrib/layers/python/layers/summaries.py, we see that:\ndef summarize_activations(name_filter=None, summarizer=summarize_activation):\n  \"\"\"Summarize activations, using `summarize_activation` to summarize.\"\"\"\n  return summarize_collection(ops.GraphKeys.ACTIVATIONS, name_filter,\n                              summarizer)\n\ndef summarize_collection(collection, name_filter=None,\n                         summarizer=summarize_tensor):\n  \"\"\"Summarize a graph collection of tensors, possibly filtered by name.\"\"\"\n  tensors = []\n  for op in ops.get_collection(collection):\n    if name_filter is None or re.match(name_filter, op.op.name):\n      tensors.append(op)\n  return summarize_tensors(tensors, summarizer)\n\nIn other words, summarize_collection(...) expects the collection to contain tensors instead of NamedOutputs(name, outputs).", "body": "# Problem description\n\nTensorFlow version r0.10\n\nIt seems to me that there is a bug with the outputs_collections in tensorflow/tensorflow/contrib/layers. When trying to add the outputs of the layers (say, conv2d) to the tf.GraphKeys.ACTIVATIONS collection, I run into errors with NamedOutputs such as the following:\n\n```\n...\nRun summarize_activations() from tensorflow/tensorflow/contrib/layers/python/layers/summaries.py\n...\n/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/layers/python/layers/summaries.pyc in summarize_collection(collection, name_filter, summarizer)\n    160     if name_filter is None or re.match(name_filter, op.op.name):\n    161       tensors.append(op)\n--> 162   return summarize_tensors(tensors, summarizer)\n    163\n    164\n\n/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/layers/python/layers/summaries.pyc in summarize_tensors(tensors, summarizer)\n    150 def summarize_tensors(tensors, summarizer=summarize_tensor):\n    151   \"\"\"Summarize a set of tensors.\"\"\"\n--> 152   return [summarizer(tensor) for tensor in tensors]\n    153\n    154\n\n/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/layers/python/layers/summaries.pyc in summarize_tensor(tensor, tag)\n    135   \"\"\"\n    136   # Skips string tensors and boolean tensors (not handled by the summaries).\n--> 137   if (tensor.dtype.is_compatible_with(dtypes.string) or\n    138       tensor.dtype.base_dtype == dtypes.bool):\n    139     return None\n\nAttributeError: 'NamedOutputs' object has no attribute 'dtype'\n```\n# Root of problem\n## README and code are not consistent\n\nThe readme (located at tensorflow/tensorflow/contrib/layers/README.md) indicates that \"weights, biases, and activations (i.e., outputs) are, by default, added to the specified collections.\" They even show a piece of code such as `output_collections=(tf.GraphKeys.ACTIVATIONS,)`. However, looking into the code in tensorflow/tensorflow/contrib/layers/python/layers/layers.py it seems to me that there is nothing adding activations to the tf.GraphKeys.ACTIVATIONS collection. I believe one solution to this problem is to use the `_apply_activation` function already written in the file:\n\n```\ndef _apply_activation(y, activation_fn, output_collections):\n  if activation_fn:\n    y = activation_fn(y)\n  ops.add_to_collections(list(output_collections or []) +\n                         [ops.GraphKeys.ACTIVATIONS], y)\n  return y\n```\n\ninstead of using only\n\n```\nif activation_fn:\n      outputs = activation_fn(outputs)\nreturn utils.collect_named_outputs(outputs_collections, sc.name, outputs)\n```\n## Code walkthrough\n\ntensorflow/tensorflow/contrib/layers/python/layers/layers.py uses this line several times (such as in conv2d):\n`utils.collect_named_outputs(outputs_collections, sc, outputs)`\n\nOpening tensorflow/tensorflow/contrib/layers/python/layers/utils.py we see that this ultimately calls:\n`ops.add_to_collections(collections, NamedOutputs(name, outputs))`\n\nHowever, it seems to me that when using the summarize_activations function in https://github.com/tensorflow/tensorflow/blob/r0.10/tensorflow/contrib/layers/python/layers/summaries.py, it expects the value to be `outputs` rather than `NamedOutputs(name, outputs)`. In other words, the summarize_activations function seems to expect something along the lines of:\n`ops.add_to_collections(collections, outputs)`\nrather than\n`ops.add_to_collections(collections, NamedOutputs(name, outputs))`\n### Further description (not particularly informative if you are already familiar with the tensorflow repo)\n\nIf we look into what `ops.add_to_collections` is doing, we see that in tensorflow/tensorflow/python/framework/ops.py this ultimately calls:\n`self.add_to_collection(name, value)`\n\n`add_to_collection(...)` is described in the same file as:\n\n```\n  def add_to_collection(self, name, value):\n    \"\"\"Stores `value` in the collection with the given `name`.\n    Note that collections are not sets, so it is possible to add a value to\n    a collection several times.\n    Args:\n      name: The key for the collection. The `GraphKeys` class\n        contains many standard names for collections.\n      value: The value to add to the collection.\n```\n\nSo, our `value` here is `value = NamedOutputs(name, outputs)` from earlier.\n\nHowever, if we look at the summarize_activations in tensorflow/tensorflow/contrib/layers/python/layers/summaries.py, we see that:\n\n```\ndef summarize_activations(name_filter=None, summarizer=summarize_activation):\n  \"\"\"Summarize activations, using `summarize_activation` to summarize.\"\"\"\n  return summarize_collection(ops.GraphKeys.ACTIVATIONS, name_filter,\n                              summarizer)\n\ndef summarize_collection(collection, name_filter=None,\n                         summarizer=summarize_tensor):\n  \"\"\"Summarize a graph collection of tensors, possibly filtered by name.\"\"\"\n  tensors = []\n  for op in ops.get_collection(collection):\n    if name_filter is None or re.match(name_filter, op.op.name):\n      tensors.append(op)\n  return summarize_tensors(tensors, summarizer)\n```\n\nIn other words, `summarize_collection(...)` expects the collection to contain tensors instead of NamedOutputs(name, outputs).\n"}