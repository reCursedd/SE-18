{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/97372902", "pull_request_review_id": 17980025, "id": 97372902, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk3MzcyOTAy", "diff_hunk": "@@ -0,0 +1,217 @@\n+/* Copyright 2015 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+\n+// An optimization pass that performs node merging and rewrite on graph nodes\n+\n+#ifndef TENSORFLOW_CORE_GRAPH_MKL_OPTIMIZER_MERGE_H_\n+#define TENSORFLOW_CORE_GRAPH_MKL_OPTIMIZER_MERGE_H_\n+\n+#ifdef INTEL_MKL\n+\n+#include <sys/types.h>\n+#include <vector>\n+#include <string>\n+#include <memory>\n+#include \"tensorflow/core/graph/graph.h\"\n+#include \"tensorflow/core/lib/core/status.h\"\n+#include \"tensorflow/core/common_runtime/optimization_registry.h\"\n+\n+namespace tensorflow {\n+\n+// How many hops do we search for matching node in the backward dataflow graph?\n+// We use maxhop of 10 based on empirical observations. Also, these are\n+// maxhops in backward data-flow graph. Since input of forward nodes (Conv2D)\n+// directly goes to backward nodes, we do not expect the hop-distance\n+// would be more than few nodes.\n+#define NODEMERGE_CONTEXT_MAXDEPTH 10\n+\n+// This optimization pass performs two tasks: merge\n+// nodes in the forward pass, and rewrite the gradient ops\n+// corresponding to merged forward ops.\n+//\n+// Merging nodes in the graph: Currently, it merges Conv2D+AddBias\n+// and MatMul+AddBias nodes together.\n+//\n+// Rewriting nodes in the graph:\n+// This is neded in order to optimize gradient ops of\n+// Conv2D+AddBias and MatMul+AddBias. Gradient op of\n+// both the Conv2D and MatMul is BiasAddGrad, and we\n+// need to rewrite BiasAddGrad into Conv2D-specific BiasAddGrad,\n+// and MatMul-specific BiasAddGrad. This is context-specific\n+// optimization, where the context is the forward operator\n+// that the BiasAddGrad corresponds to.\n+//\n+class NodeMergeRewritePass : public GraphOptimizationPass {", "path": "tensorflow/core/graph/mkl_optimizer_merge.h", "position": null, "original_position": 56, "commit_id": "59ce7353e2e69a03eb65c7953b0c1e970b1a465b", "original_commit_id": "267b6ce6aab30dac150e88a76e220bd6db24522a", "user": {"login": "andydavis1", "id": 15696327, "node_id": "MDQ6VXNlcjE1Njk2MzI3", "avatar_url": "https://avatars0.githubusercontent.com/u/15696327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andydavis1", "html_url": "https://github.com/andydavis1", "followers_url": "https://api.github.com/users/andydavis1/followers", "following_url": "https://api.github.com/users/andydavis1/following{/other_user}", "gists_url": "https://api.github.com/users/andydavis1/gists{/gist_id}", "starred_url": "https://api.github.com/users/andydavis1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andydavis1/subscriptions", "organizations_url": "https://api.github.com/users/andydavis1/orgs", "repos_url": "https://api.github.com/users/andydavis1/repos", "events_url": "https://api.github.com/users/andydavis1/events{/privacy}", "received_events_url": "https://api.github.com/users/andydavis1/received_events", "type": "User", "site_admin": false}, "body": "At a high-level, its not clear to me that all of the code in this header file is needed elsewhere?  If that is not the case, could you move all of this code to the .cc file, and just make a thin wrapper class here in the .h file that inherits from GraphOptimizationPass?  In the .cc file, the thin wrapper classes Run method could create an instance of NodeMergeRewriter and invoke it (so all NodeMergeRewrite class definition could be in .cc file).", "created_at": "2017-01-23T17:36:58Z", "updated_at": "2017-02-03T22:04:44Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/6921#discussion_r97372902", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/6921", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/97372902"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/6921#discussion_r97372902"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/6921"}}, "body_html": "<p>At a high-level, its not clear to me that all of the code in this header file is needed elsewhere?  If that is not the case, could you move all of this code to the .cc file, and just make a thin wrapper class here in the .h file that inherits from GraphOptimizationPass?  In the .cc file, the thin wrapper classes Run method could create an instance of NodeMergeRewriter and invoke it (so all NodeMergeRewrite class definition could be in .cc file).</p>", "body_text": "At a high-level, its not clear to me that all of the code in this header file is needed elsewhere?  If that is not the case, could you move all of this code to the .cc file, and just make a thin wrapper class here in the .h file that inherits from GraphOptimizationPass?  In the .cc file, the thin wrapper classes Run method could create an instance of NodeMergeRewriter and invoke it (so all NodeMergeRewrite class definition could be in .cc file)."}