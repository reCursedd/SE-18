{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19691", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19691/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19691/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19691/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19691", "id": 328537247, "node_id": "MDU6SXNzdWUzMjg1MzcyNDc=", "number": 19691, "title": "tf.image.convert_image_dtype(image, tf.float32) does not normalize output properly", "user": {"login": "Luonic", "id": 13236173, "node_id": "MDQ6VXNlcjEzMjM2MTcz", "avatar_url": "https://avatars1.githubusercontent.com/u/13236173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Luonic", "html_url": "https://github.com/Luonic", "followers_url": "https://api.github.com/users/Luonic/followers", "following_url": "https://api.github.com/users/Luonic/following{/other_user}", "gists_url": "https://api.github.com/users/Luonic/gists{/gist_id}", "starred_url": "https://api.github.com/users/Luonic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Luonic/subscriptions", "organizations_url": "https://api.github.com/users/Luonic/orgs", "repos_url": "https://api.github.com/users/Luonic/repos", "events_url": "https://api.github.com/users/Luonic/events{/privacy}", "received_events_url": "https://api.github.com/users/Luonic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "drpngx", "id": 20959853, "node_id": "MDQ6VXNlcjIwOTU5ODUz", "avatar_url": "https://avatars1.githubusercontent.com/u/20959853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drpngx", "html_url": "https://github.com/drpngx", "followers_url": "https://api.github.com/users/drpngx/followers", "following_url": "https://api.github.com/users/drpngx/following{/other_user}", "gists_url": "https://api.github.com/users/drpngx/gists{/gist_id}", "starred_url": "https://api.github.com/users/drpngx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drpngx/subscriptions", "organizations_url": "https://api.github.com/users/drpngx/orgs", "repos_url": "https://api.github.com/users/drpngx/repos", "events_url": "https://api.github.com/users/drpngx/events{/privacy}", "received_events_url": "https://api.github.com/users/drpngx/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "drpngx", "id": 20959853, "node_id": "MDQ6VXNlcjIwOTU5ODUz", "avatar_url": "https://avatars1.githubusercontent.com/u/20959853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drpngx", "html_url": "https://github.com/drpngx", "followers_url": "https://api.github.com/users/drpngx/followers", "following_url": "https://api.github.com/users/drpngx/following{/other_user}", "gists_url": "https://api.github.com/users/drpngx/gists{/gist_id}", "starred_url": "https://api.github.com/users/drpngx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drpngx/subscriptions", "organizations_url": "https://api.github.com/users/drpngx/orgs", "repos_url": "https://api.github.com/users/drpngx/repos", "events_url": "https://api.github.com/users/drpngx/events{/privacy}", "received_events_url": "https://api.github.com/users/drpngx/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2018-06-01T14:16:37Z", "updated_at": "2018-11-09T18:52:43Z", "closed_at": null, "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary via pip</li>\n<li><strong>TensorFlow version (use command below)</strong>: v1.8.0-0-g93bc2e2072 1.8.0</li>\n<li><strong>Python version</strong>: 3.5.2</li>\n<li><strong>Bazel version (if compiling from source)</strong>: N/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: N/A</li>\n<li><strong>CUDA/cuDNN version</strong>: N/A</li>\n<li><strong>GPU model and memory</strong>: N/A</li>\n<li><strong>Exact command to reproduce</strong>: N/A</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>In docs: <code>This op converts between data types, scaling the values appropriately before casting.</code><br>\nYes, we can not scale uint8 and then cast, we will loose all the information<br>\nBut this function is counterintuitive in a way that we can convert from float to uint and get ready-to-display result (e.g. in Tensorboard) but we can't do same to covert when reading images as input to our model<br>\nIs that a correct behaviour?</p>\n<h3>Source code / logs</h3>\n<pre><code>image_gt = tf.image.decode_image(image_parsed[\"image\"], channels=3)\nimage_gt = tf.image.convert_image_dtype(image_gt, tf.float32, saturate=False)\nimage_gt = tf.Print(image_gt, [tf.reduce_max(image_gt)], \"image_gt_cast\")\n</code></pre>\n<p>Result of execution:</p>\n<pre><code>image_gt_cast[250.892319]\nimage_gt_cast[244.243454]\nimage_gt_cast[245.468872]\nimage_gt_cast[258.527466]\nimage_gt_cast[270.992615]\nimage_gt_cast[227.410767]\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 16.04\nTensorFlow installed from (source or binary): binary via pip\nTensorFlow version (use command below): v1.8.0-0-g93bc2e2072 1.8.0\nPython version: 3.5.2\nBazel version (if compiling from source): N/A\nGCC/Compiler version (if compiling from source): N/A\nCUDA/cuDNN version: N/A\nGPU model and memory: N/A\nExact command to reproduce: N/A\n\nDescribe the problem\nIn docs: This op converts between data types, scaling the values appropriately before casting.\nYes, we can not scale uint8 and then cast, we will loose all the information\nBut this function is counterintuitive in a way that we can convert from float to uint and get ready-to-display result (e.g. in Tensorboard) but we can't do same to covert when reading images as input to our model\nIs that a correct behaviour?\nSource code / logs\nimage_gt = tf.image.decode_image(image_parsed[\"image\"], channels=3)\nimage_gt = tf.image.convert_image_dtype(image_gt, tf.float32, saturate=False)\nimage_gt = tf.Print(image_gt, [tf.reduce_max(image_gt)], \"image_gt_cast\")\n\nResult of execution:\nimage_gt_cast[250.892319]\nimage_gt_cast[244.243454]\nimage_gt_cast[245.468872]\nimage_gt_cast[258.527466]\nimage_gt_cast[270.992615]\nimage_gt_cast[227.410767]", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: binary via pip\r\n- **TensorFlow version (use command below)**: v1.8.0-0-g93bc2e2072 1.8.0\r\n- **Python version**: 3.5.2\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: N/A\r\n\r\n### Describe the problem\r\nIn docs: `This op converts between data types, scaling the values appropriately before casting.`\r\nYes, we can not scale uint8 and then cast, we will loose all the information\r\nBut this function is counterintuitive in a way that we can convert from float to uint and get ready-to-display result (e.g. in Tensorboard) but we can't do same to covert when reading images as input to our model\r\nIs that a correct behaviour?\r\n\r\n### Source code / logs\r\n```\r\nimage_gt = tf.image.decode_image(image_parsed[\"image\"], channels=3)\r\nimage_gt = tf.image.convert_image_dtype(image_gt, tf.float32, saturate=False)\r\nimage_gt = tf.Print(image_gt, [tf.reduce_max(image_gt)], \"image_gt_cast\")\r\n```\r\n\r\nResult of execution:\r\n```\r\nimage_gt_cast[250.892319]\r\nimage_gt_cast[244.243454]\r\nimage_gt_cast[245.468872]\r\nimage_gt_cast[258.527466]\r\nimage_gt_cast[270.992615]\r\nimage_gt_cast[227.410767]\r\n```\r\n"}