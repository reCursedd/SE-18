{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12612", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12612/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12612/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12612/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/12612", "id": 253062719, "node_id": "MDU6SXNzdWUyNTMwNjI3MTk=", "number": 12612, "title": "Eager execution with string tensors.", "user": {"login": "eaplatanios", "id": 1294940, "node_id": "MDQ6VXNlcjEyOTQ5NDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1294940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eaplatanios", "html_url": "https://github.com/eaplatanios", "followers_url": "https://api.github.com/users/eaplatanios/followers", "following_url": "https://api.github.com/users/eaplatanios/following{/other_user}", "gists_url": "https://api.github.com/users/eaplatanios/gists{/gist_id}", "starred_url": "https://api.github.com/users/eaplatanios/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eaplatanios/subscriptions", "organizations_url": "https://api.github.com/users/eaplatanios/orgs", "repos_url": "https://api.github.com/users/eaplatanios/repos", "events_url": "https://api.github.com/users/eaplatanios/events{/privacy}", "received_events_url": "https://api.github.com/users/eaplatanios/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2017-08-26T04:58:35Z", "updated_at": "2017-09-09T16:24:31Z", "closed_at": "2017-09-08T21:12:48Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5061\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/alextp\">@alextp</a> String tensors seem to cause lots of errors for me, when using the eager execution API, that do not occur when using normal ops and executing them using a session.</p>\n<p>The way I'm creating string tensors is by allocating a <code>TF_Tensor</code> with the right data type, shape, and size (where I use <code>TF_StringEncodedSize</code> to get the byte sizes of each element). Then, I encode the strings using <code>TF_StringEncode</code> and write them in the tensor buffer along with the offset table, as described <a href=\"https://github.com/tensorflow/tensorflow/blob/752dcb61ef7a8fd6555909dc37c1f2a2e5792227/tensorflow/c/c_api.h#L211\">here</a>. Afterwards, I call <code>TFE_NewTensorHandle</code> to get an eager tensor handle and I delete the <code>TF_Tensor</code> object. This works fine for normal op construction and execution using sessions, but it fails for eager execution. Often I get a <code>check failed: IsAligned()</code> error from <code>tensor.cc</code>, but other times the whole application crashes, such as in the example that follows:</p>\n<div class=\"highlight highlight-source-scala\"><pre><span class=\"pl-k\">val</span> <span class=\"pl-smi\">t</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">Tensor</span>.fill(<span class=\"pl-en\">STRING</span>, <span class=\"pl-en\">Shape</span>())(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>test<span class=\"pl-pds\">\"</span></span>)  <span class=\"pl-c\"><span class=\"pl-c\">//</span> The generated tensor is good. </span>\n                                              <span class=\"pl-c\"><span class=\"pl-c\">//</span> I can access its elements and use it </span>\n                                              <span class=\"pl-c\"><span class=\"pl-c\">//</span> with session execution.</span>\n<span class=\"pl-k\">val</span> <span class=\"pl-smi\">tt</span> <span class=\"pl-k\">=</span> tfe.stack(<span class=\"pl-en\">Seq</span>(t, t))  <span class=\"pl-c\"><span class=\"pl-c\">//</span> I can no longer access the tensor elements correctly </span>\n                               <span class=\"pl-c\"><span class=\"pl-c\">//</span> and when I try to slice it I get either errors (crashing) </span>\n                               <span class=\"pl-c\"><span class=\"pl-c\">//</span> or empty strings.</span>\ntt.unstack(<span class=\"pl-c1\">2</span>)                  <span class=\"pl-c\"><span class=\"pl-c\">//</span> Crashes with the error shown below.</span></pre></div>\n<p>This is run using my Scala API but I hope that the error I get may help resolve it. In the error stacktrace I get this:</p>\n<pre><code>Stack: [0x0000700011571000,0x0000700011671000],  sp=0x000070001166cbf0,  free space=1006k\nNative frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)\nC  [libsystem_platform.dylib+0x15da]  _platform_memmove$VARIANT$Nehalem+0x1da\nC  [libc++.1.dylib+0x3af29]  _ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_+0x8d\nC  [libtensorflow.so+0x502fdb]  _ZNSt3__110__function6__funcIZN5Eigen8internal14TensorExecutorIKNS2_14TensorAssignOpINS2_9TensorMapINS2_6TensorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEELi1ELi1ElEELi16ENS2_11MakePointerEEEKNS2_15TensorSlicingOpIKNS2_6DSizesIlLi1EEESK_KNS6_INS7_IKSD_Li1ELi1ElEELi16ESF_EEEEEENS2_16ThreadPoolDeviceELb0EE3runERSS_RKST_EUlllE_NSB_ISY_EEFvllEEclEOlS12_+0x5b\nC  [libtensorflow.so+0x1aa30d]  _ZNK5Eigen16ThreadPoolDevice11parallelForElRKNS_12TensorOpCostENSt3__18functionIFllEEENS5_IFvllEEE+0xbd\nC  [libtensorflow.so+0x502ebf]  _ZN5Eigen8internal14TensorExecutorIKNS_14TensorAssignOpINS_9TensorMapINS_6TensorINSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEELi1ELi1ElEELi16ENS_11MakePointerEEEKNS_15TensorSlicingOpIKNS_6DSizesIlLi1EEESI_KNS3_INS4_IKSB_Li1ELi1ElEELi16ESD_EEEEEENS_16ThreadPoolDeviceELb0EE3runERSQ_RKSR_+0x11f\nC  [libtensorflow.so+0x5a06f6]  _ZN10tensorflow22HandleStridedSliceCaseIN5Eigen16ThreadPoolDeviceENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEELi1EEEvPNS_15OpKernelContextERKNS_3gtl10ArraySliceIxEESG_SG_RKNS_11TensorShapeEbPNS_6TensorE+0x136\nC  [libtensorflow.so+0x58b082]  _ZN10tensorflow14StridedSliceOpIN5Eigen16ThreadPoolDeviceENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEE7ComputeEPNS_15OpKernelContextE+0x5f2\nC  [libtensorflow.so+0x1c60b9b]  _ZN10tensorflow16ThreadPoolDevice7ComputeEPNS_8OpKernelEPNS_15OpKernelContextE+0x13b\nC  [libtensorflow.so+0x8585]  _ZN10tensorflow15KernelAndDevice3RunEPNSt3__16vectorINS_6TensorENS1_9allocatorIS3_EEEES7_+0x285\nC  [libtensorflow.so+0x47ce]  TFE_Execute+0x36e\n</code></pre>\n<p><strong>EDIT:</strong> The following error seems to actually come up with all tensor data types, for various ops (such as the <code>\"Unpack\"</code> op).</p>\n<p>Another time I also got this error:</p>\n<pre><code>C  [libtensorflow.so+0x20f0]  TFE_TensorHandleDeviceName+0x0\n</code></pre>", "body_text": "@alextp String tensors seem to cause lots of errors for me, when using the eager execution API, that do not occur when using normal ops and executing them using a session.\nThe way I'm creating string tensors is by allocating a TF_Tensor with the right data type, shape, and size (where I use TF_StringEncodedSize to get the byte sizes of each element). Then, I encode the strings using TF_StringEncode and write them in the tensor buffer along with the offset table, as described here. Afterwards, I call TFE_NewTensorHandle to get an eager tensor handle and I delete the TF_Tensor object. This works fine for normal op construction and execution using sessions, but it fails for eager execution. Often I get a check failed: IsAligned() error from tensor.cc, but other times the whole application crashes, such as in the example that follows:\nval t = Tensor.fill(STRING, Shape())(\"test\")  // The generated tensor is good. \n                                              // I can access its elements and use it \n                                              // with session execution.\nval tt = tfe.stack(Seq(t, t))  // I can no longer access the tensor elements correctly \n                               // and when I try to slice it I get either errors (crashing) \n                               // or empty strings.\ntt.unstack(2)                  // Crashes with the error shown below.\nThis is run using my Scala API but I hope that the error I get may help resolve it. In the error stacktrace I get this:\nStack: [0x0000700011571000,0x0000700011671000],  sp=0x000070001166cbf0,  free space=1006k\nNative frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)\nC  [libsystem_platform.dylib+0x15da]  _platform_memmove$VARIANT$Nehalem+0x1da\nC  [libc++.1.dylib+0x3af29]  _ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_+0x8d\nC  [libtensorflow.so+0x502fdb]  _ZNSt3__110__function6__funcIZN5Eigen8internal14TensorExecutorIKNS2_14TensorAssignOpINS2_9TensorMapINS2_6TensorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEELi1ELi1ElEELi16ENS2_11MakePointerEEEKNS2_15TensorSlicingOpIKNS2_6DSizesIlLi1EEESK_KNS6_INS7_IKSD_Li1ELi1ElEELi16ESF_EEEEEENS2_16ThreadPoolDeviceELb0EE3runERSS_RKST_EUlllE_NSB_ISY_EEFvllEEclEOlS12_+0x5b\nC  [libtensorflow.so+0x1aa30d]  _ZNK5Eigen16ThreadPoolDevice11parallelForElRKNS_12TensorOpCostENSt3__18functionIFllEEENS5_IFvllEEE+0xbd\nC  [libtensorflow.so+0x502ebf]  _ZN5Eigen8internal14TensorExecutorIKNS_14TensorAssignOpINS_9TensorMapINS_6TensorINSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEELi1ELi1ElEELi16ENS_11MakePointerEEEKNS_15TensorSlicingOpIKNS_6DSizesIlLi1EEESI_KNS3_INS4_IKSB_Li1ELi1ElEELi16ESD_EEEEEENS_16ThreadPoolDeviceELb0EE3runERSQ_RKSR_+0x11f\nC  [libtensorflow.so+0x5a06f6]  _ZN10tensorflow22HandleStridedSliceCaseIN5Eigen16ThreadPoolDeviceENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEELi1EEEvPNS_15OpKernelContextERKNS_3gtl10ArraySliceIxEESG_SG_RKNS_11TensorShapeEbPNS_6TensorE+0x136\nC  [libtensorflow.so+0x58b082]  _ZN10tensorflow14StridedSliceOpIN5Eigen16ThreadPoolDeviceENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEE7ComputeEPNS_15OpKernelContextE+0x5f2\nC  [libtensorflow.so+0x1c60b9b]  _ZN10tensorflow16ThreadPoolDevice7ComputeEPNS_8OpKernelEPNS_15OpKernelContextE+0x13b\nC  [libtensorflow.so+0x8585]  _ZN10tensorflow15KernelAndDevice3RunEPNSt3__16vectorINS_6TensorENS1_9allocatorIS3_EEEES7_+0x285\nC  [libtensorflow.so+0x47ce]  TFE_Execute+0x36e\n\nEDIT: The following error seems to actually come up with all tensor data types, for various ops (such as the \"Unpack\" op).\nAnother time I also got this error:\nC  [libtensorflow.so+0x20f0]  TFE_TensorHandleDeviceName+0x0", "body": "@alextp String tensors seem to cause lots of errors for me, when using the eager execution API, that do not occur when using normal ops and executing them using a session.\r\n\r\nThe way I'm creating string tensors is by allocating a `TF_Tensor` with the right data type, shape, and size (where I use `TF_StringEncodedSize` to get the byte sizes of each element). Then, I encode the strings using `TF_StringEncode` and write them in the tensor buffer along with the offset table, as described [here](https://github.com/tensorflow/tensorflow/blob/752dcb61ef7a8fd6555909dc37c1f2a2e5792227/tensorflow/c/c_api.h#L211). Afterwards, I call `TFE_NewTensorHandle` to get an eager tensor handle and I delete the `TF_Tensor` object. This works fine for normal op construction and execution using sessions, but it fails for eager execution. Often I get a `check failed: IsAligned()` error from `tensor.cc`, but other times the whole application crashes, such as in the example that follows:\r\n\r\n```scala\r\nval t = Tensor.fill(STRING, Shape())(\"test\")  // The generated tensor is good. \r\n                                              // I can access its elements and use it \r\n                                              // with session execution.\r\nval tt = tfe.stack(Seq(t, t))  // I can no longer access the tensor elements correctly \r\n                               // and when I try to slice it I get either errors (crashing) \r\n                               // or empty strings.\r\ntt.unstack(2)                  // Crashes with the error shown below.\r\n```\r\n\r\nThis is run using my Scala API but I hope that the error I get may help resolve it. In the error stacktrace I get this:\r\n\r\n```\r\nStack: [0x0000700011571000,0x0000700011671000],  sp=0x000070001166cbf0,  free space=1006k\r\nNative frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)\r\nC  [libsystem_platform.dylib+0x15da]  _platform_memmove$VARIANT$Nehalem+0x1da\r\nC  [libc++.1.dylib+0x3af29]  _ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_+0x8d\r\nC  [libtensorflow.so+0x502fdb]  _ZNSt3__110__function6__funcIZN5Eigen8internal14TensorExecutorIKNS2_14TensorAssignOpINS2_9TensorMapINS2_6TensorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEELi1ELi1ElEELi16ENS2_11MakePointerEEEKNS2_15TensorSlicingOpIKNS2_6DSizesIlLi1EEESK_KNS6_INS7_IKSD_Li1ELi1ElEELi16ESF_EEEEEENS2_16ThreadPoolDeviceELb0EE3runERSS_RKST_EUlllE_NSB_ISY_EEFvllEEclEOlS12_+0x5b\r\nC  [libtensorflow.so+0x1aa30d]  _ZNK5Eigen16ThreadPoolDevice11parallelForElRKNS_12TensorOpCostENSt3__18functionIFllEEENS5_IFvllEEE+0xbd\r\nC  [libtensorflow.so+0x502ebf]  _ZN5Eigen8internal14TensorExecutorIKNS_14TensorAssignOpINS_9TensorMapINS_6TensorINSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEELi1ELi1ElEELi16ENS_11MakePointerEEEKNS_15TensorSlicingOpIKNS_6DSizesIlLi1EEESI_KNS3_INS4_IKSB_Li1ELi1ElEELi16ESD_EEEEEENS_16ThreadPoolDeviceELb0EE3runERSQ_RKSR_+0x11f\r\nC  [libtensorflow.so+0x5a06f6]  _ZN10tensorflow22HandleStridedSliceCaseIN5Eigen16ThreadPoolDeviceENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEELi1EEEvPNS_15OpKernelContextERKNS_3gtl10ArraySliceIxEESG_SG_RKNS_11TensorShapeEbPNS_6TensorE+0x136\r\nC  [libtensorflow.so+0x58b082]  _ZN10tensorflow14StridedSliceOpIN5Eigen16ThreadPoolDeviceENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEE7ComputeEPNS_15OpKernelContextE+0x5f2\r\nC  [libtensorflow.so+0x1c60b9b]  _ZN10tensorflow16ThreadPoolDevice7ComputeEPNS_8OpKernelEPNS_15OpKernelContextE+0x13b\r\nC  [libtensorflow.so+0x8585]  _ZN10tensorflow15KernelAndDevice3RunEPNSt3__16vectorINS_6TensorENS1_9allocatorIS3_EEEES7_+0x285\r\nC  [libtensorflow.so+0x47ce]  TFE_Execute+0x36e\r\n```\r\n\r\n**EDIT:** The following error seems to actually come up with all tensor data types, for various ops (such as the `\"Unpack\"` op).\r\n\r\nAnother time I also got this error:\r\n\r\n```\r\nC  [libtensorflow.so+0x20f0]  TFE_TensorHandleDeviceName+0x0\r\n```"}