{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/325139422", "html_url": "https://github.com/tensorflow/tensorflow/issues/12612#issuecomment-325139422", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12612", "id": 325139422, "node_id": "MDEyOklzc3VlQ29tbWVudDMyNTEzOTQyMg==", "user": {"login": "eaplatanios", "id": 1294940, "node_id": "MDQ6VXNlcjEyOTQ5NDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1294940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eaplatanios", "html_url": "https://github.com/eaplatanios", "followers_url": "https://api.github.com/users/eaplatanios/followers", "following_url": "https://api.github.com/users/eaplatanios/following{/other_user}", "gists_url": "https://api.github.com/users/eaplatanios/gists{/gist_id}", "starred_url": "https://api.github.com/users/eaplatanios/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eaplatanios/subscriptions", "organizations_url": "https://api.github.com/users/eaplatanios/orgs", "repos_url": "https://api.github.com/users/eaplatanios/repos", "events_url": "https://api.github.com/users/eaplatanios/events{/privacy}", "received_events_url": "https://api.github.com/users/eaplatanios/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-26T15:41:21Z", "updated_at": "2017-08-26T15:41:21Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I think I've traced it down to the eager API not using the <code>TF_TensorToTensor</code> function to convert from the <code>TF_Tensor</code> representation for string tensors, to that used internally. I guess my question is, why are the two formats different? And, if I want to avoid the copying done by <code>TF_TensorToTensor</code>, what is the underlying format being used so I replicate it?</p>\n<p>In either case, not using <code>TF_TensorToTensor</code> introduces an inconsistency in the way <code>TF_Tensor</code> and eager tensors interact.</p>\n<p>All that is assuming that I am correct about where the problem lies.</p>", "body_text": "I think I've traced it down to the eager API not using the TF_TensorToTensor function to convert from the TF_Tensor representation for string tensors, to that used internally. I guess my question is, why are the two formats different? And, if I want to avoid the copying done by TF_TensorToTensor, what is the underlying format being used so I replicate it?\nIn either case, not using TF_TensorToTensor introduces an inconsistency in the way TF_Tensor and eager tensors interact.\nAll that is assuming that I am correct about where the problem lies.", "body": "I think I've traced it down to the eager API not using the `TF_TensorToTensor` function to convert from the `TF_Tensor` representation for string tensors, to that used internally. I guess my question is, why are the two formats different? And, if I want to avoid the copying done by `TF_TensorToTensor`, what is the underlying format being used so I replicate it?\r\n\r\nIn either case, not using `TF_TensorToTensor` introduces an inconsistency in the way `TF_Tensor` and eager tensors interact.\r\n\r\nAll that is assuming that I am correct about where the problem lies."}