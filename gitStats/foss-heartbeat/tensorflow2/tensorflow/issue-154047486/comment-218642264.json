{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/218642264", "html_url": "https://github.com/tensorflow/tensorflow/issues/2307#issuecomment-218642264", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2307", "id": 218642264, "node_id": "MDEyOklzc3VlQ29tbWVudDIxODY0MjI2NA==", "user": {"login": "petewarden", "id": 161459, "node_id": "MDQ6VXNlcjE2MTQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/161459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petewarden", "html_url": "https://github.com/petewarden", "followers_url": "https://api.github.com/users/petewarden/followers", "following_url": "https://api.github.com/users/petewarden/following{/other_user}", "gists_url": "https://api.github.com/users/petewarden/gists{/gist_id}", "starred_url": "https://api.github.com/users/petewarden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petewarden/subscriptions", "organizations_url": "https://api.github.com/users/petewarden/orgs", "repos_url": "https://api.github.com/users/petewarden/repos", "events_url": "https://api.github.com/users/petewarden/events{/privacy}", "received_events_url": "https://api.github.com/users/petewarden/received_events", "type": "User", "site_admin": false}, "created_at": "2016-05-12T02:17:56Z", "updated_at": "2016-05-12T02:17:56Z", "author_association": "MEMBER", "body_html": "<p>In theory it should be possible to reuse the TensorFlow Serving tutorial and just change the name of the output layer to \"final_result\", as shown in the label_image example:<br>\n<a href=\"https://www.tensorflow.org/versions/master/how_tos/image_retraining/index.html#using-the-retrained-model\" rel=\"nofollow\">https://www.tensorflow.org/versions/master/how_tos/image_retraining/index.html#using-the-retrained-model</a></p>\n<p>Unfortunately the TensorFlow Serving code creates its own model from scratch, and then loads in the checkpoints to fill in the variables. This means that it's not obvious how to convert a plain GraphDef with the weights as constant ops into their format. I'm passing this over to <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=17084375\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jharmsen\">@jharmsen</a> to see if he can offer any advice?</p>", "body_text": "In theory it should be possible to reuse the TensorFlow Serving tutorial and just change the name of the output layer to \"final_result\", as shown in the label_image example:\nhttps://www.tensorflow.org/versions/master/how_tos/image_retraining/index.html#using-the-retrained-model\nUnfortunately the TensorFlow Serving code creates its own model from scratch, and then loads in the checkpoints to fill in the variables. This means that it's not obvious how to convert a plain GraphDef with the weights as constant ops into their format. I'm passing this over to @jharmsen to see if he can offer any advice?", "body": "In theory it should be possible to reuse the TensorFlow Serving tutorial and just change the name of the output layer to \"final_result\", as shown in the label_image example:\nhttps://www.tensorflow.org/versions/master/how_tos/image_retraining/index.html#using-the-retrained-model\n\nUnfortunately the TensorFlow Serving code creates its own model from scratch, and then loads in the checkpoints to fill in the variables. This means that it's not obvious how to convert a plain GraphDef with the weights as constant ops into their format. I'm passing this over to @jharmsen to see if he can offer any advice?\n"}