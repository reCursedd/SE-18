{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14593", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14593/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14593/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14593/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14593", "id": 274259798, "node_id": "MDU6SXNzdWUyNzQyNTk3OTg=", "number": 14593, "title": "TextLineReader is missing compression option (see TFRecordReader)", "user": {"login": "atomantic", "id": 70015, "node_id": "MDQ6VXNlcjcwMDE1", "avatar_url": "https://avatars2.githubusercontent.com/u/70015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atomantic", "html_url": "https://github.com/atomantic", "followers_url": "https://api.github.com/users/atomantic/followers", "following_url": "https://api.github.com/users/atomantic/following{/other_user}", "gists_url": "https://api.github.com/users/atomantic/gists{/gist_id}", "starred_url": "https://api.github.com/users/atomantic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atomantic/subscriptions", "organizations_url": "https://api.github.com/users/atomantic/orgs", "repos_url": "https://api.github.com/users/atomantic/repos", "events_url": "https://api.github.com/users/atomantic/events{/privacy}", "received_events_url": "https://api.github.com/users/atomantic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "yongtang", "id": 6932348, "node_id": "MDQ6VXNlcjY5MzIzNDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/6932348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yongtang", "html_url": "https://github.com/yongtang", "followers_url": "https://api.github.com/users/yongtang/followers", "following_url": "https://api.github.com/users/yongtang/following{/other_user}", "gists_url": "https://api.github.com/users/yongtang/gists{/gist_id}", "starred_url": "https://api.github.com/users/yongtang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yongtang/subscriptions", "organizations_url": "https://api.github.com/users/yongtang/orgs", "repos_url": "https://api.github.com/users/yongtang/repos", "events_url": "https://api.github.com/users/yongtang/events{/privacy}", "received_events_url": "https://api.github.com/users/yongtang/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "yongtang", "id": 6932348, "node_id": "MDQ6VXNlcjY5MzIzNDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/6932348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yongtang", "html_url": "https://github.com/yongtang", "followers_url": "https://api.github.com/users/yongtang/followers", "following_url": "https://api.github.com/users/yongtang/following{/other_user}", "gists_url": "https://api.github.com/users/yongtang/gists{/gist_id}", "starred_url": "https://api.github.com/users/yongtang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yongtang/subscriptions", "organizations_url": "https://api.github.com/users/yongtang/orgs", "repos_url": "https://api.github.com/users/yongtang/repos", "events_url": "https://api.github.com/users/yongtang/events{/privacy}", "received_events_url": "https://api.github.com/users/yongtang/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2017-11-15T18:33:39Z", "updated_at": "2017-12-20T01:40:01Z", "closed_at": "2017-12-20T01:40:01Z", "author_association": "NONE", "body_html": "<p><code>tf.TextLineReader</code> does not currently provide a way to read GZIP encoded files</p>\n<p>This option exists in <code>TFRecordReader</code>:</p>\n<pre><code>options = tf_record.TFRecordOptions(TFRecordCompressionType.GZIP)\nreader = io_ops.TFRecordReader(name=\"test_reader\", options=options)\n</code></pre>\n<p>It would be great to be able to ingest gzipped files into the TextLineReader as well:</p>\n<pre><code>reader = tf.TextLineReader(compression_type=\"gzip\")\n</code></pre>\n<p>This <code>compression_type</code> argument could pass down to</p>\n<pre><code>rr = gen_io_ops._text_line_reader_v2(skip_header_lines=skip_header_lines, name=name, compression_type=compression_type)\n</code></pre>\n<p>in the same way the TFRecordReader passes down to <code>_tf_record_reader_v2</code>:<br>\n<code>rr = gen_io_ops._tf_record_reader_v2(name=name, compression_type=compression_type)</code></p>\n<p>Which would seem to require implementing compression here: <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/text_line_reader_op.cc\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/text_line_reader_op.cc</a></p>", "body_text": "tf.TextLineReader does not currently provide a way to read GZIP encoded files\nThis option exists in TFRecordReader:\noptions = tf_record.TFRecordOptions(TFRecordCompressionType.GZIP)\nreader = io_ops.TFRecordReader(name=\"test_reader\", options=options)\n\nIt would be great to be able to ingest gzipped files into the TextLineReader as well:\nreader = tf.TextLineReader(compression_type=\"gzip\")\n\nThis compression_type argument could pass down to\nrr = gen_io_ops._text_line_reader_v2(skip_header_lines=skip_header_lines, name=name, compression_type=compression_type)\n\nin the same way the TFRecordReader passes down to _tf_record_reader_v2:\nrr = gen_io_ops._tf_record_reader_v2(name=name, compression_type=compression_type)\nWhich would seem to require implementing compression here: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/text_line_reader_op.cc", "body": "`tf.TextLineReader` does not currently provide a way to read GZIP encoded files\r\n\r\nThis option exists in `TFRecordReader`:\r\n```\r\noptions = tf_record.TFRecordOptions(TFRecordCompressionType.GZIP)\r\nreader = io_ops.TFRecordReader(name=\"test_reader\", options=options)\r\n```\r\n\r\nIt would be great to be able to ingest gzipped files into the TextLineReader as well:\r\n```\r\nreader = tf.TextLineReader(compression_type=\"gzip\")\r\n```\r\n\r\nThis `compression_type` argument could pass down to\r\n\r\n```\r\nrr = gen_io_ops._text_line_reader_v2(skip_header_lines=skip_header_lines, name=name, compression_type=compression_type)\r\n```\r\n in the same way the TFRecordReader passes down to `_tf_record_reader_v2`: \r\n```rr = gen_io_ops._tf_record_reader_v2(name=name, compression_type=compression_type)```\r\n\r\nWhich would seem to require implementing compression here: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/text_line_reader_op.cc"}