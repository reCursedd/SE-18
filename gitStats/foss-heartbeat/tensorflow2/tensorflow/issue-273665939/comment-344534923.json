{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/344534923", "html_url": "https://github.com/tensorflow/tensorflow/issues/14528#issuecomment-344534923", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14528", "id": 344534923, "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDUzNDkyMw==", "user": {"login": "FduJyy", "id": 16150809, "node_id": "MDQ6VXNlcjE2MTUwODA5", "avatar_url": "https://avatars3.githubusercontent.com/u/16150809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FduJyy", "html_url": "https://github.com/FduJyy", "followers_url": "https://api.github.com/users/FduJyy/followers", "following_url": "https://api.github.com/users/FduJyy/following{/other_user}", "gists_url": "https://api.github.com/users/FduJyy/gists{/gist_id}", "starred_url": "https://api.github.com/users/FduJyy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FduJyy/subscriptions", "organizations_url": "https://api.github.com/users/FduJyy/orgs", "repos_url": "https://api.github.com/users/FduJyy/repos", "events_url": "https://api.github.com/users/FduJyy/events{/privacy}", "received_events_url": "https://api.github.com/users/FduJyy/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-15T09:27:33Z", "updated_at": "2017-11-15T09:27:33Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=144114\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/rohan100jain\">@rohan100jain</a> The model I run is Inception_v1 provided here <a href=\"url\">https://github.com/tensorflow/models/blob/master/research/slim/nets/inception_v1.py</a><br>\nThe code is like:</p>\n<pre><code>        with tf.name_scope('input'):\n\t\ttra_image_batch, tra_label_batch = input_data3.getbatch(BATCH_SIZE, 'inception_v1',\n\t\t\t224, True, 0)\n\t\tval_image_batch, val_label_batch = input_data3.getbatch(test_batchsize, 'inception_v1',\n\t\t\t224, False, 0)\n\tx = tf.placeholder(tf.float32, shape=[None, IMG_W, IMG_H, 3])\n\ty_ = tf.placeholder(tf.int32, shape=[None])\n\tis_training = tf.placeholder(tf.bool, shape=[])\n\twith slim.arg_scope(inception_v1.inception_v1_arg_scope()):\n\t\tlogits, end_points = inception_v1.inception_v1(x, 1001, is_training=is_training)\n\tloss = tools.loss(logits, y_)\n\taccuracy = tools.accuracy(logits, y_)\n\ttop5_accuracy = tools.top5_accuracy(logits, y_)\n        train_op = tools.optimize_m(loss, learning_rate1, learning_rate2, my_global_step)\n\ttry:\n                for step in np.arange(MAX_STEP):\n\t\t\tif coord.should_stop():\n\t\t\t\t\tbreak\n\t\t\ttra_images,tra_labels = sess.run([tra_image_batch, tra_label_batch])\n\t\t\t_, tra_loss, tra_acc = sess.run([train_op, loss, accuracy], feed_dict={x:tra_images, y_:tra_labels, is_training:True})\n\t\t\tif step % 100 == 0 or step == MAX_STEP:\n\t\t\t\tnowtime = time.strftime(\"%Y-%m-%d %H:%M:%S\", time.localtime())\n\t\t\t\tprint (nowtime+'  Step: %d, loss: %.4f, accuracy: %.4f%%' %(step+global_step, tra_loss, tra_acc))\n\n</code></pre>", "body_text": "@rohan100jain The model I run is Inception_v1 provided here https://github.com/tensorflow/models/blob/master/research/slim/nets/inception_v1.py\nThe code is like:\n        with tf.name_scope('input'):\n\t\ttra_image_batch, tra_label_batch = input_data3.getbatch(BATCH_SIZE, 'inception_v1',\n\t\t\t224, True, 0)\n\t\tval_image_batch, val_label_batch = input_data3.getbatch(test_batchsize, 'inception_v1',\n\t\t\t224, False, 0)\n\tx = tf.placeholder(tf.float32, shape=[None, IMG_W, IMG_H, 3])\n\ty_ = tf.placeholder(tf.int32, shape=[None])\n\tis_training = tf.placeholder(tf.bool, shape=[])\n\twith slim.arg_scope(inception_v1.inception_v1_arg_scope()):\n\t\tlogits, end_points = inception_v1.inception_v1(x, 1001, is_training=is_training)\n\tloss = tools.loss(logits, y_)\n\taccuracy = tools.accuracy(logits, y_)\n\ttop5_accuracy = tools.top5_accuracy(logits, y_)\n        train_op = tools.optimize_m(loss, learning_rate1, learning_rate2, my_global_step)\n\ttry:\n                for step in np.arange(MAX_STEP):\n\t\t\tif coord.should_stop():\n\t\t\t\t\tbreak\n\t\t\ttra_images,tra_labels = sess.run([tra_image_batch, tra_label_batch])\n\t\t\t_, tra_loss, tra_acc = sess.run([train_op, loss, accuracy], feed_dict={x:tra_images, y_:tra_labels, is_training:True})\n\t\t\tif step % 100 == 0 or step == MAX_STEP:\n\t\t\t\tnowtime = time.strftime(\"%Y-%m-%d %H:%M:%S\", time.localtime())\n\t\t\t\tprint (nowtime+'  Step: %d, loss: %.4f, accuracy: %.4f%%' %(step+global_step, tra_loss, tra_acc))", "body": "@rohan100jain The model I run is Inception_v1 provided here [https://github.com/tensorflow/models/blob/master/research/slim/nets/inception_v1.py](url)\r\nThe code is like:\r\n\t\r\n\r\n```\r\n        with tf.name_scope('input'):\r\n\t\ttra_image_batch, tra_label_batch = input_data3.getbatch(BATCH_SIZE, 'inception_v1',\r\n\t\t\t224, True, 0)\r\n\t\tval_image_batch, val_label_batch = input_data3.getbatch(test_batchsize, 'inception_v1',\r\n\t\t\t224, False, 0)\r\n\tx = tf.placeholder(tf.float32, shape=[None, IMG_W, IMG_H, 3])\r\n\ty_ = tf.placeholder(tf.int32, shape=[None])\r\n\tis_training = tf.placeholder(tf.bool, shape=[])\r\n\twith slim.arg_scope(inception_v1.inception_v1_arg_scope()):\r\n\t\tlogits, end_points = inception_v1.inception_v1(x, 1001, is_training=is_training)\r\n\tloss = tools.loss(logits, y_)\r\n\taccuracy = tools.accuracy(logits, y_)\r\n\ttop5_accuracy = tools.top5_accuracy(logits, y_)\r\n        train_op = tools.optimize_m(loss, learning_rate1, learning_rate2, my_global_step)\r\n\ttry:\r\n                for step in np.arange(MAX_STEP):\r\n\t\t\tif coord.should_stop():\r\n\t\t\t\t\tbreak\r\n\t\t\ttra_images,tra_labels = sess.run([tra_image_batch, tra_label_batch])\r\n\t\t\t_, tra_loss, tra_acc = sess.run([train_op, loss, accuracy], feed_dict={x:tra_images, y_:tra_labels, is_training:True})\r\n\t\t\tif step % 100 == 0 or step == MAX_STEP:\r\n\t\t\t\tnowtime = time.strftime(\"%Y-%m-%d %H:%M:%S\", time.localtime())\r\n\t\t\t\tprint (nowtime+'  Step: %d, loss: %.4f, accuracy: %.4f%%' %(step+global_step, tra_loss, tra_acc))\r\n\r\n```\r\n"}