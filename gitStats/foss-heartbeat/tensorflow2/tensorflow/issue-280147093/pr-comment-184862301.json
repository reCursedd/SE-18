{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/184862301", "pull_request_review_id": 116145985, "id": 184862301, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NDg2MjMwMQ==", "diff_hunk": "@@ -0,0 +1,91 @@\n+// Copyright 2017 The TensorFlow Authors. All Rights Reserved.\n+//\n+// Licensed under the Apache License, Version 2.0 (the \"License\");\n+// you may not use this file except in compliance with the License.\n+// You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+// =============================================================================\n+\n+#include \"tensorflow/core/framework/common_shape_fns.h\"\n+#include \"tensorflow/core/framework/op.h\"\n+#include \"tensorflow/core/framework/shape_inference.h\"\n+\n+namespace tensorflow {\n+\n+REGISTER_OP(\"SparseTileLike\")\n+    .Input(\"a_input_indices: int64\")\n+    .Input(\"a_input_values: T\")\n+    .Input(\"a_input_shape: int64\")\n+    .Input(\"b_input_indices: int64\")\n+    .Input(\"b_input_values: T\")\n+    .Input(\"b_input_shape: int64\")\n+    .Input(\"axes: int32\")\n+    .Output(\"output_indices: int64\")\n+    .Output(\"output_values: T\")\n+    .Output(\"output_shape: int64\")\n+    .Attr(\"T: realnumbertype\")\n+    .SetShapeFn(shape_inference::UnknownShape)\n+    .Doc(R\"doc(\n+Tile a `SparseTensor` `a` to a new SparseTensor with the same as `SparseTensor` `b` on the axes `axes`.\n+\n+The Operator takes two `SparseTensor` as inputs. `axes` means the dimensions to tile.\n+Here your `SparseTensor`s must have the equation `dim_a = dim_b - 1` and the shape of `b`\n+should have the same shape of `a` except the dimension to be tiled.\n+\n+a_input_indices: 2-D.  `N x R` matrix with the indices of non-empty values in a\n+  SparseTensor, possibly not in canonical ordering.\n+a_input_values: 1-D.  `N` non-empty values corresponding to `input_indices`.\n+a_input_shape: 1-D.  Shape of the input SparseTensor.\n+b_input_indices: 2-D.  `N x R` matrix with the indices of non-empty values in a\n+  SparseTensor, possibly not in canonical ordering.\n+b_input_values: 1-D.  `N` non-empty values corresponding to `input_indices`.\n+b_input_shape: 1-D.  Shape of the input SparseTensor.\n+axes: 1-D. Length-`K` vector containing the tile axes.\n+\n+For example. If `a` is a `SparseTensor` like:\n+\n+```\n+    index = [0]\n+            [4]\n+            [6]\n+    values = [1, 2, 3]\n+    shape = [10]\n+```\n+\n+while `b` is the template `SparseTensor` like:\n+\n+```\n+    index = [0, 3]\n+            [4, 1]\n+            [4, 3]\n+            [6, 0]\n+            [6, 3]\n+    values = [0, 0, 9, 9, 9]\n+    shape = [10, 10]\n+```\n+\n+with `axes=1`, then the final `SparseTensor` will be:\n+\n+```\n+    index = [0, 3]\n+            [4, 1]\n+            [4, 3]\n+            [6, 0]\n+            [6, 3]\n+    values = [1, 2, 2, 3, 3]\n+    shape = [10, 10]\n+```\n+\n+As you might see, the `op` will forget all the", "path": "tensorflow/contrib/layers/ops/sparse_tile_like_op.cc", "position": null, "original_position": 86, "commit_id": "65961683050079b9bb8d2c6a66120dd9d476cc07", "original_commit_id": "d3dbb9cc1c68e6c1c16a2a038ea91fad4cadd4f2", "user": {"login": "drpngx", "id": 20959853, "node_id": "MDQ6VXNlcjIwOTU5ODUz", "avatar_url": "https://avatars1.githubusercontent.com/u/20959853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drpngx", "html_url": "https://github.com/drpngx", "followers_url": "https://api.github.com/users/drpngx/followers", "following_url": "https://api.github.com/users/drpngx/following{/other_user}", "gists_url": "https://api.github.com/users/drpngx/gists{/gist_id}", "starred_url": "https://api.github.com/users/drpngx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drpngx/subscriptions", "organizations_url": "https://api.github.com/users/drpngx/orgs", "repos_url": "https://api.github.com/users/drpngx/repos", "events_url": "https://api.github.com/users/drpngx/events{/privacy}", "received_events_url": "https://api.github.com/users/drpngx/received_events", "type": "User", "site_admin": false}, "body": "please finish the writing", "created_at": "2018-04-28T18:54:20Z", "updated_at": "2018-06-12T08:59:52Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/15184#discussion_r184862301", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/15184", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/184862301"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/15184#discussion_r184862301"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/15184"}}, "body_html": "<p>please finish the writing</p>", "body_text": "please finish the writing"}