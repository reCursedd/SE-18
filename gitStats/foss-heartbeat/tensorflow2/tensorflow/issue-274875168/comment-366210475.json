{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/366210475", "html_url": "https://github.com/tensorflow/tensorflow/issues/14655#issuecomment-366210475", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14655", "id": 366210475, "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjIxMDQ3NQ==", "user": {"login": "ashimb9", "id": 22569641, "node_id": "MDQ6VXNlcjIyNTY5NjQx", "avatar_url": "https://avatars3.githubusercontent.com/u/22569641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashimb9", "html_url": "https://github.com/ashimb9", "followers_url": "https://api.github.com/users/ashimb9/followers", "following_url": "https://api.github.com/users/ashimb9/following{/other_user}", "gists_url": "https://api.github.com/users/ashimb9/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashimb9/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashimb9/subscriptions", "organizations_url": "https://api.github.com/users/ashimb9/orgs", "repos_url": "https://api.github.com/users/ashimb9/repos", "events_url": "https://api.github.com/users/ashimb9/events{/privacy}", "received_events_url": "https://api.github.com/users/ashimb9/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-16T11:22:52Z", "updated_at": "2018-02-16T11:22:52Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=10423052\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jfpuget\">@jfpuget</a> I tried using the corrected version of your pair_loss function above on a GRU model. It works fine for about 2 seconds after which I keep getting <code>loss: nan</code> during the remainder of the training. Curiously enough, the accuracy keeps increasing. Would you happen to know why it might be returning <code>nan</code>?</p>", "body_text": "@jfpuget I tried using the corrected version of your pair_loss function above on a GRU model. It works fine for about 2 seconds after which I keep getting loss: nan during the remainder of the training. Curiously enough, the accuracy keeps increasing. Would you happen to know why it might be returning nan?", "body": "@jfpuget I tried using the corrected version of your pair_loss function above on a GRU model. It works fine for about 2 seconds after which I keep getting `loss: nan` during the remainder of the training. Curiously enough, the accuracy keeps increasing. Would you happen to know why it might be returning `nan`?"}