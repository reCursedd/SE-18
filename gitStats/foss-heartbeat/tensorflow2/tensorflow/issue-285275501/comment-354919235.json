{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/354919235", "html_url": "https://github.com/tensorflow/tensorflow/issues/15760#issuecomment-354919235", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15760", "id": 354919235, "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDkxOTIzNQ==", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-03T01:25:01Z", "updated_at": "2018-01-03T01:25:49Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Aggregation over batch dimension happens at each backprop step. The <code>_AggregatedGrads</code> method inside <code>grad_impl</code> refer to aggregation over multiple output tensors rather than over examples.</p>\n<p>I have a detailed example of backprop derived in <a href=\"https://medium.com/@yaroslavvb/backprop-and-systolic-arrays-24e925d2050\" rel=\"nofollow\">Backprop and systolic arrays</a> -- even though the loss in that example is the sum of squared losses, gradients with respect to individual squared losses are never formed, you only have gradient from summed-over loss at any point in time.</p>\n<p>If you care about computing some property of per-example gradients rather than full batch of per-example gradients, there are tricks you can do such as <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=387866\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/goodfeli\">@goodfeli</a> 's <a href=\"https://arxiv.org/pdf/1510.01799.pdf\" rel=\"nofollow\">https://arxiv.org/pdf/1510.01799.pdf</a></p>", "body_text": "Aggregation over batch dimension happens at each backprop step. The _AggregatedGrads method inside grad_impl refer to aggregation over multiple output tensors rather than over examples.\nI have a detailed example of backprop derived in Backprop and systolic arrays -- even though the loss in that example is the sum of squared losses, gradients with respect to individual squared losses are never formed, you only have gradient from summed-over loss at any point in time.\nIf you care about computing some property of per-example gradients rather than full batch of per-example gradients, there are tricks you can do such as @goodfeli 's https://arxiv.org/pdf/1510.01799.pdf", "body": "Aggregation over batch dimension happens at each backprop step. The `_AggregatedGrads` method inside `grad_impl` refer to aggregation over multiple output tensors rather than over examples.\r\n\r\nI have a detailed example of backprop derived in [Backprop and systolic arrays](https://medium.com/@yaroslavvb/backprop-and-systolic-arrays-24e925d2050) -- even though the loss in that example is the sum of squared losses, gradients with respect to individual squared losses are never formed, you only have gradient from summed-over loss at any point in time.\r\n\r\nIf you care about computing some property of per-example gradients rather than full batch of per-example gradients, there are tricks you can do such as @goodfeli 's https://arxiv.org/pdf/1510.01799.pdf\r\n  "}