{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/172", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/172/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/172/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/172/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/172", "id": 116521907, "node_id": "MDU6SXNzdWUxMTY1MjE5MDc=", "number": 172, "title": "Wrong Logistic Loss", "user": {"login": "yk", "id": 858040, "node_id": "MDQ6VXNlcjg1ODA0MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/858040?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yk", "html_url": "https://github.com/yk", "followers_url": "https://api.github.com/users/yk/followers", "following_url": "https://api.github.com/users/yk/following{/other_user}", "gists_url": "https://api.github.com/users/yk/gists{/gist_id}", "starred_url": "https://api.github.com/users/yk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yk/subscriptions", "organizations_url": "https://api.github.com/users/yk/orgs", "repos_url": "https://api.github.com/users/yk/repos", "events_url": "https://api.github.com/users/yk/events{/privacy}", "received_events_url": "https://api.github.com/users/yk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-11-12T10:32:01Z", "updated_at": "2016-09-21T19:01:07Z", "closed_at": "2015-11-13T07:41:26Z", "author_association": "NONE", "body_html": "<p>In tensorflow/python/ops/nn.py, the logistic loss is described as</p>\n<p>x - x * z + log(1 + exp(-x))</p>\n<p>but this is not what's commonly known as the logistic loss.<br>\nI see that you're trying to apply a trick here to avoid overflow, but it should be</p>\n<p>x - x * z + log(exp(0 - (x - x * z)) + exp(-x))</p>\n<p>instead of what you have.</p>\n<p>Of course, the correct version is now prone to underflow, so it would make most sense to add a native robust log-sum-exp function to tensorflow and then rely on that to avoid over- and underflow.</p>", "body_text": "In tensorflow/python/ops/nn.py, the logistic loss is described as\nx - x * z + log(1 + exp(-x))\nbut this is not what's commonly known as the logistic loss.\nI see that you're trying to apply a trick here to avoid overflow, but it should be\nx - x * z + log(exp(0 - (x - x * z)) + exp(-x))\ninstead of what you have.\nOf course, the correct version is now prone to underflow, so it would make most sense to add a native robust log-sum-exp function to tensorflow and then rely on that to avoid over- and underflow.", "body": "In tensorflow/python/ops/nn.py, the logistic loss is described as\n\nx - x \\* z + log(1 + exp(-x))\n\nbut this is not what's commonly known as the logistic loss.\nI see that you're trying to apply a trick here to avoid overflow, but it should be \n\nx - x \\* z + log(exp(0 - (x - x \\* z)) + exp(-x))\n\ninstead of what you have.\n\nOf course, the correct version is now prone to underflow, so it would make most sense to add a native robust log-sum-exp function to tensorflow and then rely on that to avoid over- and underflow.\n"}