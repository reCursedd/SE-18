{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/350221447", "html_url": "https://github.com/tensorflow/tensorflow/issues/15198#issuecomment-350221447", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15198", "id": 350221447, "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDIyMTQ0Nw==", "user": {"login": "stecklin", "id": 6171989, "node_id": "MDQ6VXNlcjYxNzE5ODk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6171989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stecklin", "html_url": "https://github.com/stecklin", "followers_url": "https://api.github.com/users/stecklin/followers", "following_url": "https://api.github.com/users/stecklin/following{/other_user}", "gists_url": "https://api.github.com/users/stecklin/gists{/gist_id}", "starred_url": "https://api.github.com/users/stecklin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stecklin/subscriptions", "organizations_url": "https://api.github.com/users/stecklin/orgs", "repos_url": "https://api.github.com/users/stecklin/repos", "events_url": "https://api.github.com/users/stecklin/events{/privacy}", "received_events_url": "https://api.github.com/users/stecklin/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-08T09:51:38Z", "updated_at": "2017-12-08T09:51:38Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4450528\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/marcoadurno\">@marcoadurno</a> That's true, but it comes with a drawback. Assume the training loop looks like this:</p>\n<div class=\"highlight highlight-source-python\"><pre>image_batch, label_batch <span class=\"pl-k\">=</span> sess.run(t_example)\n_, summary <span class=\"pl-k\">=</span> sess.run([train_op, summary_op], \n                      <span class=\"pl-v\">feed_dict</span><span class=\"pl-k\">=</span>{image: image_batch, label: label_batch})</pre></div>\n<p>This will invoke the iterator's <code>get_next</code> twice, once you run <code>t_example</code> and once you request the summary since you introduced a dependency.</p>", "body_text": "@marcoadurno That's true, but it comes with a drawback. Assume the training loop looks like this:\nimage_batch, label_batch = sess.run(t_example)\n_, summary = sess.run([train_op, summary_op], \n                      feed_dict={image: image_batch, label: label_batch})\nThis will invoke the iterator's get_next twice, once you run t_example and once you request the summary since you introduced a dependency.", "body": "@marcoadurno That's true, but it comes with a drawback. Assume the training loop looks like this:\r\n\r\n```python\r\nimage_batch, label_batch = sess.run(t_example)\r\n_, summary = sess.run([train_op, summary_op], \r\n                      feed_dict={image: image_batch, label: label_batch})\r\n```\r\n\r\nThis will invoke the iterator's `get_next` twice, once you run `t_example` and once you request the summary since you introduced a dependency. "}