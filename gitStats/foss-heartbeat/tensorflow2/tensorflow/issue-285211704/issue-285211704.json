{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15736", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15736/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15736/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15736/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15736", "id": 285211704, "node_id": "MDU6SXNzdWUyODUyMTE3MDQ=", "number": 15736, "title": "Importing submodules from tensorflow.keras fails with No module named 'tensorflow.keras'", "user": {"login": "rragundez", "id": 16643700, "node_id": "MDQ6VXNlcjE2NjQzNzAw", "avatar_url": "https://avatars2.githubusercontent.com/u/16643700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rragundez", "html_url": "https://github.com/rragundez", "followers_url": "https://api.github.com/users/rragundez/followers", "following_url": "https://api.github.com/users/rragundez/following{/other_user}", "gists_url": "https://api.github.com/users/rragundez/gists{/gist_id}", "starred_url": "https://api.github.com/users/rragundez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rragundez/subscriptions", "organizations_url": "https://api.github.com/users/rragundez/orgs", "repos_url": "https://api.github.com/users/rragundez/repos", "events_url": "https://api.github.com/users/rragundez/events{/privacy}", "received_events_url": "https://api.github.com/users/rragundez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2017-12-30T16:44:49Z", "updated_at": "2018-07-21T19:46:35Z", "closed_at": "2017-12-31T22:36:00Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: No</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary (pip)</li>\n<li><strong>TensorFlow version (use command below)</strong>: v1.4.0-19-ga52c8d9 1.4.1</li>\n<li><strong>Python version</strong>: 3.6</li>\n<li><strong>Exact command to reproduce</strong>:<br>\nfrom tensorflow.keras import datasets # fails but should work<br>\nimport tensorflow as tf #succeeds<br>\ntf.keras.datasets #succeeds<br>\nfrom tensorflow.python.keras import datasetst # succeeds</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>Importing submodules from tensorflow.keras fails with error: <code>ModuleNotFoundError: No module named 'tensorflow.keras'</code>. but <code>import tensorflow as tf</code> and then doing <code>tf.keras.datasets</code> works. This is a big inconsistency, also it means that every time an element from within the <code>tensforlow.keras</code> module you need to write the complete path (which is very annoying) this removes the simplicity and readability of the <code>keras</code> API. A work around is to import submodules from <code>tensorflow.python.keras</code>, which again is inconsistent.</p>\n<p>In my opinion, since the documentation states that <code>keras</code> is availabe at <code>tf.keras</code> that should be the access path to the submodules and not <code>tensorflow.python.keras</code>. I'll try to  make a pull request for this.</p>\n<h3>Source code / logs</h3>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c\"><span class=\"pl-c\">#</span> fails but should work</span>\n<span class=\"pl-k\">from</span> tensorflow.keras <span class=\"pl-k\">import</span> datasets</pre></div>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c\"><span class=\"pl-c\">#</span> succeeds</span>\n<span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\ntf.keras.datasets</pre></div>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c\"><span class=\"pl-c\">#</span> succeeds</span>\n<span class=\"pl-k\">from</span> tensorflow.python.keras <span class=\"pl-k\">import</span> datasetst</pre></div>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): No\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 16.04\nTensorFlow installed from (source or binary): binary (pip)\nTensorFlow version (use command below): v1.4.0-19-ga52c8d9 1.4.1\nPython version: 3.6\nExact command to reproduce:\nfrom tensorflow.keras import datasets # fails but should work\nimport tensorflow as tf #succeeds\ntf.keras.datasets #succeeds\nfrom tensorflow.python.keras import datasetst # succeeds\n\nDescribe the problem\nImporting submodules from tensorflow.keras fails with error: ModuleNotFoundError: No module named 'tensorflow.keras'. but import tensorflow as tf and then doing tf.keras.datasets works. This is a big inconsistency, also it means that every time an element from within the tensforlow.keras module you need to write the complete path (which is very annoying) this removes the simplicity and readability of the keras API. A work around is to import submodules from tensorflow.python.keras, which again is inconsistent.\nIn my opinion, since the documentation states that keras is availabe at tf.keras that should be the access path to the submodules and not tensorflow.python.keras. I'll try to  make a pull request for this.\nSource code / logs\n# fails but should work\nfrom tensorflow.keras import datasets\n# succeeds\nimport tensorflow as tf\ntf.keras.datasets\n# succeeds\nfrom tensorflow.python.keras import datasetst", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: binary (pip)\r\n- **TensorFlow version (use command below)**: v1.4.0-19-ga52c8d9 1.4.1\r\n- **Python version**: 3.6\r\n- **Exact command to reproduce**:\r\nfrom tensorflow.keras import datasets # fails but should work\r\nimport tensorflow as tf #succeeds\r\ntf.keras.datasets #succeeds\r\nfrom tensorflow.python.keras import datasetst # succeeds\r\n\r\n### Describe the problem\r\nImporting submodules from tensorflow.keras fails with error: `ModuleNotFoundError: No module named 'tensorflow.keras'`. but `import tensorflow as tf` and then doing `tf.keras.datasets` works. This is a big inconsistency, also it means that every time an element from within the `tensforlow.keras` module you need to write the complete path (which is very annoying) this removes the simplicity and readability of the `keras` API. A work around is to import submodules from `tensorflow.python.keras`, which again is inconsistent. \r\n\r\nIn my opinion, since the documentation states that `keras` is availabe at `tf.keras` that should be the access path to the submodules and not `tensorflow.python.keras`. I'll try to  make a pull request for this.\r\n\r\n### Source code / logs\r\n\r\n```python\r\n# fails but should work\r\nfrom tensorflow.keras import datasets\r\n```\r\n```python\r\n# succeeds\r\nimport tensorflow as tf\r\ntf.keras.datasets\r\n```\r\n```python\r\n# succeeds\r\nfrom tensorflow.python.keras import datasetst\r\n```"}