{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/354673767", "html_url": "https://github.com/tensorflow/tensorflow/issues/15736#issuecomment-354673767", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15736", "id": 354673767, "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDY3Mzc2Nw==", "user": {"login": "rragundez", "id": 16643700, "node_id": "MDQ6VXNlcjE2NjQzNzAw", "avatar_url": "https://avatars2.githubusercontent.com/u/16643700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rragundez", "html_url": "https://github.com/rragundez", "followers_url": "https://api.github.com/users/rragundez/followers", "following_url": "https://api.github.com/users/rragundez/following{/other_user}", "gists_url": "https://api.github.com/users/rragundez/gists{/gist_id}", "starred_url": "https://api.github.com/users/rragundez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rragundez/subscriptions", "organizations_url": "https://api.github.com/users/rragundez/orgs", "repos_url": "https://api.github.com/users/rragundez/repos", "events_url": "https://api.github.com/users/rragundez/events{/privacy}", "received_events_url": "https://api.github.com/users/rragundez/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-01T20:13:55Z", "updated_at": "2018-01-01T20:16:36Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13588114\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Hvass-Labs\">@Hvass-Labs</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=20959853\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/drpngx\">@drpngx</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=710255\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/fchollet\">@fchollet</a> Adding to: if it is a bad style in Python? it is, the bad style comes from the fact that you can access submodules from <code>tf</code> (<code>tf.keras.layers.Dense</code> for example) but you cannot import <code>Dense</code>  as <code>from tensorflow.keras.layers import Dense</code>. When deep functionality wants to be exposed in a higher module is a direct exposure of objects (functions or classes) then you never have the problem at hand. In this case the functionality being exposed to the user is a module itself which causes this confusion.</p>\n<p>You can easily look at <code>pyspark</code> or <code>sklearn</code> for example, where the functionality taken to a higher level in the package are objects (a type of estimator for example) but not modules themselves (as they will create the problem at hand).</p>\n<p>So indeed the current approach is not pythonic and specially I would argue that adds complexity to the simplistic Keras API.</p>", "body_text": "@Hvass-Labs @drpngx @fchollet Adding to: if it is a bad style in Python? it is, the bad style comes from the fact that you can access submodules from tf (tf.keras.layers.Dense for example) but you cannot import Dense  as from tensorflow.keras.layers import Dense. When deep functionality wants to be exposed in a higher module is a direct exposure of objects (functions or classes) then you never have the problem at hand. In this case the functionality being exposed to the user is a module itself which causes this confusion.\nYou can easily look at pyspark or sklearn for example, where the functionality taken to a higher level in the package are objects (a type of estimator for example) but not modules themselves (as they will create the problem at hand).\nSo indeed the current approach is not pythonic and specially I would argue that adds complexity to the simplistic Keras API.", "body": "@Hvass-Labs @drpngx @fchollet Adding to: if it is a bad style in Python? it is, the bad style comes from the fact that you can access submodules from `tf` (`tf.keras.layers.Dense` for example) but you cannot import `Dense`  as `from tensorflow.keras.layers import Dense`. When deep functionality wants to be exposed in a higher module is a direct exposure of objects (functions or classes) then you never have the problem at hand. In this case the functionality being exposed to the user is a module itself which causes this confusion. \r\n\r\nYou can easily look at `pyspark` or `sklearn` for example, where the functionality taken to a higher level in the package are objects (a type of estimator for example) but not modules themselves (as they will create the problem at hand).\r\n\r\nSo indeed the current approach is not pythonic and specially I would argue that adds complexity to the simplistic Keras API. "}