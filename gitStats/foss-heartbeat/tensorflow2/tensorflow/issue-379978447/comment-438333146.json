{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/438333146", "html_url": "https://github.com/tensorflow/tensorflow/issues/23695#issuecomment-438333146", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23695", "id": 438333146, "node_id": "MDEyOklzc3VlQ29tbWVudDQzODMzMzE0Ng==", "user": {"login": "coreyjadams", "id": 6619961, "node_id": "MDQ6VXNlcjY2MTk5NjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/6619961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/coreyjadams", "html_url": "https://github.com/coreyjadams", "followers_url": "https://api.github.com/users/coreyjadams/followers", "following_url": "https://api.github.com/users/coreyjadams/following{/other_user}", "gists_url": "https://api.github.com/users/coreyjadams/gists{/gist_id}", "starred_url": "https://api.github.com/users/coreyjadams/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/coreyjadams/subscriptions", "organizations_url": "https://api.github.com/users/coreyjadams/orgs", "repos_url": "https://api.github.com/users/coreyjadams/repos", "events_url": "https://api.github.com/users/coreyjadams/events{/privacy}", "received_events_url": "https://api.github.com/users/coreyjadams/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-13T16:23:52Z", "updated_at": "2018-11-13T16:24:32Z", "author_association": "NONE", "body_html": "<p>Ok, I started from scratch to carefully test this, and my build still failed.  Below I've got a lot of the output so you can see if I configured tensorflow correctly, which I think I did.</p>\n<ol>\n<li>I downloaded tensorflow fresh, bazel fresh, installed the necessary python packages fresh:</li>\n</ol>\n<div class=\"highlight highlight-source-shell\"><pre>$ mkdir tf_second_install\n$ <span class=\"pl-c1\">cd</span> tf_second_install/\n$ git clone https://github.com/tensorflow/tensorflow.git\n$ wget https://github.com/bazelbuild/bazel/releases/download/0.18.1/bazel-0.18.1-dist.zip\n$ <span class=\"pl-k\">export</span> TF_INSTALL=<span class=\"pl-smi\">$PWD</span>/tf_install\n$ <span class=\"pl-k\">export</span> PYTHONPATH=<span class=\"pl-smi\">$TF_INSTALL</span>\n$ pip install --target=<span class=\"pl-smi\">$TF_INSTALL</span> --upgrade --no-deps keras-applications keras-preprocessing h5py</pre></div>\n<ol start=\"2\">\n<li>I built bazel with the following commands, which succeeded:</li>\n</ol>\n<div class=\"highlight highlight-source-shell\"><pre>$ <span class=\"pl-c1\">cd</span> bazel-0.18.1\n$ mv ../bazel-0.18.1-dist.zip ./\n$ unzip bazel-0.18.1-dist.zip\n$ bash ./compile.sh\n$ <span class=\"pl-c1\">cd</span> ../\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Much output removed</span>\nBuild successful<span class=\"pl-k\">!</span> Binary is here: /projects/datascience/cadams/software/tf_second_install/bazel-0.18.1/output/bazel\n$ <span class=\"pl-k\">export</span> PATH=/projects/datascience/cadams/software/tf_second_install/bazel-0.18.1/output/:<span class=\"pl-smi\">$PATH</span></pre></div>\n<ol start=\"3\">\n<li>Configuration of tensorflow:</li>\n</ol>\n<div class=\"highlight highlight-source-shell\"><pre>Configuration of tensorflow:\n$ ./configure\u00a0\nWARNING: Processed legacy workspace file /lus/theta-fs0/projects/datascience/cadams/software/tf_second_install/tensorflow/tools/bazel.rc. This file will not be processed <span class=\"pl-k\">in</span> the next release of Bazel. Please <span class=\"pl-c1\">read</span> https://github.com/bazelbuild/bazel/issues/6319 <span class=\"pl-k\">for</span> further information, including how to upgrade.\nExtracting Bazel installation...\nWARNING: ignoring LD_PRELOAD <span class=\"pl-k\">in</span> environment.\nWARNING: --batch mode is deprecated. Please instead explicitly shut down your Bazel server using the <span class=\"pl-c1\">command</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>bazel shutdown<span class=\"pl-pds\">\"</span></span>.\nYou have bazel 0.18.1- (@non-git) installed.\nPlease specify the location of python. [Default is /opt/python/3.6.5.3/bin/python]:\u00a0\n\n\nFound possible Python library paths:\n\u00a0 /projects/datascience/cadams/software/tf_second_install/tf_install\n\u00a0 /opt/python/3.6.5.3/lib/python3.6/site-packages\nPlease input the desired Python library path to use.\u00a0 Default is [/projects/datascience/cadams/software/tf_second_install/tf_install]\n\nDo you wish to build TensorFlow with XLA JIT support<span class=\"pl-k\">?</span> [Y/n]: y\nXLA JIT support will be enabled <span class=\"pl-k\">for</span> TensorFlow.\n\nDo you wish to build TensorFlow with OpenCL SYCL support<span class=\"pl-k\">?</span> [y/N]: n\nNo OpenCL SYCL support will be enabled <span class=\"pl-k\">for</span> TensorFlow.\n\nDo you wish to build TensorFlow with ROCm support<span class=\"pl-k\">?</span> [y/N]: n\nNo ROCm support will be enabled <span class=\"pl-k\">for</span> TensorFlow.\n\nDo you wish to build TensorFlow with CUDA support<span class=\"pl-k\">?</span> [y/N]: n\nNo CUDA support will be enabled <span class=\"pl-k\">for</span> TensorFlow.\n\nDo you wish to download a fresh release of clang<span class=\"pl-k\">?</span> (Experimental) [y/N]: n\nClang will not be downloaded.\n\nDo you wish to build TensorFlow with MPI support<span class=\"pl-k\">?</span> [y/N]:\u00a0\nNo MPI support will be enabled <span class=\"pl-k\">for</span> TensorFlow.\n\nPlease specify optimization flags to use during compilation when bazel option <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>--config=opt<span class=\"pl-pds\">\"</span></span> is specified [Default is -march<span class=\"pl-k\">=</span>native -Wno-sign-compare]:\u00a0\n\n\nWould you like to interactively configure ./WORKSPACE <span class=\"pl-k\">for</span> Android builds<span class=\"pl-k\">?</span> [y/N]: n\nNot configuring the WORKSPACE <span class=\"pl-k\">for</span> Android builds.\n\nPreconfigured Bazel build configs. You can use any of the below by adding <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>--config=&lt;&gt;<span class=\"pl-pds\">\"</span></span> to your build command. See .bazelrc <span class=\"pl-k\">for</span> more details.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 --config=mkl\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"pl-c\"><span class=\"pl-c\">#</span> Build with MKL support.</span>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 --config=monolithic\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"pl-c\"><span class=\"pl-c\">#</span> Config for mostly static monolithic build.</span>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 --config=gdr\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"pl-c\"><span class=\"pl-c\">#</span> Build with GDR support.</span>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 --config=verbs\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"pl-c\"><span class=\"pl-c\">#</span> Build with libverbs support.</span>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 --config=ngraph\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"pl-c\"><span class=\"pl-c\">#</span> Build with Intel nGraph support.</span>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 --config=dynamic_kernels\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"pl-c\"><span class=\"pl-c\">#</span> (Experimental) Build kernels into separate shared objects.</span>\nPreconfigured Bazel build configs to DISABLE default on features:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 --config=noaws\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"pl-c\"><span class=\"pl-c\">#</span> Disable AWS S3 filesystem support.</span>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 --config=nogcp\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"pl-c\"><span class=\"pl-c\">#</span> Disable GCP support.</span>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 --config=nohdfs\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"pl-c\"><span class=\"pl-c\">#</span> Disable HDFS support.</span>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 --config=noignite\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"pl-c\"><span class=\"pl-c\">#</span> Disable Apacha Ignite support.</span>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 --config=nokafka\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"pl-c\"><span class=\"pl-c\">#</span> Disable Apache Kafka support.</span>\nConfiguration finished</pre></div>\n<p>I used the defaults for both the location of python and for python library paths, which I think is recorded correctly in the <code>.tf_configure.bazelrc</code> file:</p>\n<div class=\"highlight highlight-source-shell\"><pre>$ cat .tf_configure.bazelrc\nimport %workspace%/tools/bazel.rc\nbuild --action_env PYTHON_BIN_PATH=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/opt/python/3.6.5.3/bin/python<span class=\"pl-pds\">\"</span></span>\nbuild --action_env PYTHON_LIB_PATH=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/projects/datascience/cadams/software/tf_second_install/tf_install<span class=\"pl-pds\">\"</span></span>\nbuild --python_path=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/opt/python/3.6.5.3/bin/python<span class=\"pl-pds\">\"</span></span>\nbuild:xla --define with_xla_support=true\nbuild --config=xla\nbuild --action_env TF_NEED_OPENCL_SYCL=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>0<span class=\"pl-pds\">\"</span></span>\nbuild --action_env TF_NEED_ROCM=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>0<span class=\"pl-pds\">\"</span></span>\nbuild --action_env TF_NEED_CUDA=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>0<span class=\"pl-pds\">\"</span></span>\nbuild --action_env TF_DOWNLOAD_CLANG=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>0<span class=\"pl-pds\">\"</span></span>\nbuild:opt --copt=-march=native\nbuild:opt --copt=-Wno-sign-compare\nbuild:opt --host_copt=-march=native\nbuild:opt --define with_default_optimizations=true\nbuild:v2 --define=tf_api_version=2</pre></div>\n<p>Looking at this, the PYTHON_LIB_PATH appears to be set correctly, and the packages are installed there:</p>\n<div class=\"highlight highlight-source-shell\"><pre>$ ls /projects/datascience/cadams/software/tf_second_install/tf_install\nh5py                  Keras_Applications-1.0.6.dist-info\nh5py-2.8.0.dist-info  keras_preprocessing\nkeras_applications    Keras_Preprocessing-1.0.5.dist-info</pre></div>\n<ol start=\"4\">\n<li>Still, the build fails at the same spot when it can not import keras_preprocessing:</li>\n</ol>\n<pre><code>ERROR: /lus/theta-fs0/projects/datascience/cadams/software/tf_second_install/tensorflow/tensorflow/BUILD:562:1: Executing genrule //tensorflow:tf_python_api_gen_v1 failed (Exit 1)\nTraceback (most recent call last):\n  File \"/gpfs/mira-home/cadams/.cache/bazel/_bazel_cadams/5d2ab57ebd6673dd9517877558fa4b10/execroot/org_tensorflow/bazel-out/host/bin/tensorflow/create_tensorflow.python_api_1.runfiles/org_tensorflow/tensorflow/python/tools/api/generator/create_python_api.py\", line 27, in &lt;module&gt;\n    from tensorflow.python.tools.api.generator import doc_srcs\n  File \"/gpfs/mira-home/cadams/.cache/bazel/_bazel_cadams/5d2ab57ebd6673dd9517877558fa4b10/execroot/org_tensorflow/bazel-out/host/bin/tensorflow/create_tensorflow.python_api_1.runfiles/org_tensorflow/tensorflow/python/__init__.py\", line 81, in &lt;module&gt;\n    from tensorflow.python import keras\n  File \"/gpfs/mira-home/cadams/.cache/bazel/_bazel_cadams/5d2ab57ebd6673dd9517877558fa4b10/execroot/org_tensorflow/bazel-out/host/bin/tensorflow/create_tensorflow.python_api_1.runfiles/org_tensorflow/tensorflow/python/keras/__init__.py\", line 29, in &lt;module&gt;\n    from tensorflow.python.keras import datasets\n  File \"/gpfs/mira-home/cadams/.cache/bazel/_bazel_cadams/5d2ab57ebd6673dd9517877558fa4b10/execroot/org_tensorflow/bazel-out/host/bin/tensorflow/create_tensorflow.python_api_1.runfiles/org_tensorflow/tensorflow/python/keras/datasets/__init__.py\", line 25, in &lt;module&gt;\n    from tensorflow.python.keras.datasets import imdb\n  File \"/gpfs/mira-home/cadams/.cache/bazel/_bazel_cadams/5d2ab57ebd6673dd9517877558fa4b10/execroot/org_tensorflow/bazel-out/host/bin/tensorflow/create_tensorflow.python_api_1.runfiles/org_tensorflow/tensorflow/python/keras/datasets/imdb.py\", line 25, in &lt;module&gt;\n    from tensorflow.python.keras.preprocessing.sequence import _remove_long_seq\n  File \"/gpfs/mira-home/cadams/.cache/bazel/_bazel_cadams/5d2ab57ebd6673dd9517877558fa4b10/execroot/org_tensorflow/bazel-out/host/bin/tensorflow/create_tensorflow.python_api_1.runfiles/org_tensorflow/tensorflow/python/keras/preprocessing/__init__.py\", line 21, in &lt;module&gt;\n    import keras_preprocessing\nModuleNotFoundError: No module named 'keras_preprocessing'\nTarget //tensorflow/tools/pip_package:build_pip_package failed to build\nUse --verbose_failures to see the command lines of failed build steps.\nINFO: Elapsed time: 1770.461s, Critical Path: 236.77s\nINFO: 11483 processes: 11483 local.\nFAILED: Build did NOT complete successfully\n</code></pre>\n<p>Do you spot something I am not doing right?  I can only get this section of the build to succeed by manually editing the <code>__init__.py</code> file to add to the sys.path variable, as mentioned.</p>", "body_text": "Ok, I started from scratch to carefully test this, and my build still failed.  Below I've got a lot of the output so you can see if I configured tensorflow correctly, which I think I did.\n\nI downloaded tensorflow fresh, bazel fresh, installed the necessary python packages fresh:\n\n$ mkdir tf_second_install\n$ cd tf_second_install/\n$ git clone https://github.com/tensorflow/tensorflow.git\n$ wget https://github.com/bazelbuild/bazel/releases/download/0.18.1/bazel-0.18.1-dist.zip\n$ export TF_INSTALL=$PWD/tf_install\n$ export PYTHONPATH=$TF_INSTALL\n$ pip install --target=$TF_INSTALL --upgrade --no-deps keras-applications keras-preprocessing h5py\n\nI built bazel with the following commands, which succeeded:\n\n$ cd bazel-0.18.1\n$ mv ../bazel-0.18.1-dist.zip ./\n$ unzip bazel-0.18.1-dist.zip\n$ bash ./compile.sh\n$ cd ../\n# Much output removed\nBuild successful! Binary is here: /projects/datascience/cadams/software/tf_second_install/bazel-0.18.1/output/bazel\n$ export PATH=/projects/datascience/cadams/software/tf_second_install/bazel-0.18.1/output/:$PATH\n\nConfiguration of tensorflow:\n\nConfiguration of tensorflow:\n$ ./configure\u00a0\nWARNING: Processed legacy workspace file /lus/theta-fs0/projects/datascience/cadams/software/tf_second_install/tensorflow/tools/bazel.rc. This file will not be processed in the next release of Bazel. Please read https://github.com/bazelbuild/bazel/issues/6319 for further information, including how to upgrade.\nExtracting Bazel installation...\nWARNING: ignoring LD_PRELOAD in environment.\nWARNING: --batch mode is deprecated. Please instead explicitly shut down your Bazel server using the command \"bazel shutdown\".\nYou have bazel 0.18.1- (@non-git) installed.\nPlease specify the location of python. [Default is /opt/python/3.6.5.3/bin/python]:\u00a0\n\n\nFound possible Python library paths:\n\u00a0 /projects/datascience/cadams/software/tf_second_install/tf_install\n\u00a0 /opt/python/3.6.5.3/lib/python3.6/site-packages\nPlease input the desired Python library path to use.\u00a0 Default is [/projects/datascience/cadams/software/tf_second_install/tf_install]\n\nDo you wish to build TensorFlow with XLA JIT support? [Y/n]: y\nXLA JIT support will be enabled for TensorFlow.\n\nDo you wish to build TensorFlow with OpenCL SYCL support? [y/N]: n\nNo OpenCL SYCL support will be enabled for TensorFlow.\n\nDo you wish to build TensorFlow with ROCm support? [y/N]: n\nNo ROCm support will be enabled for TensorFlow.\n\nDo you wish to build TensorFlow with CUDA support? [y/N]: n\nNo CUDA support will be enabled for TensorFlow.\n\nDo you wish to download a fresh release of clang? (Experimental) [y/N]: n\nClang will not be downloaded.\n\nDo you wish to build TensorFlow with MPI support? [y/N]:\u00a0\nNo MPI support will be enabled for TensorFlow.\n\nPlease specify optimization flags to use during compilation when bazel option \"--config=opt\" is specified [Default is -march=native -Wno-sign-compare]:\u00a0\n\n\nWould you like to interactively configure ./WORKSPACE for Android builds? [y/N]: n\nNot configuring the WORKSPACE for Android builds.\n\nPreconfigured Bazel build configs. You can use any of the below by adding \"--config=<>\" to your build command. See .bazelrc for more details.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 --config=mkl\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 # Build with MKL support.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 --config=monolithic\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 # Config for mostly static monolithic build.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 --config=gdr\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 # Build with GDR support.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 --config=verbs\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 # Build with libverbs support.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 --config=ngraph\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 # Build with Intel nGraph support.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 --config=dynamic_kernels\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 # (Experimental) Build kernels into separate shared objects.\nPreconfigured Bazel build configs to DISABLE default on features:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 --config=noaws\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 # Disable AWS S3 filesystem support.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 --config=nogcp\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 # Disable GCP support.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 --config=nohdfs\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 # Disable HDFS support.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 --config=noignite\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 # Disable Apacha Ignite support.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 --config=nokafka\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 # Disable Apache Kafka support.\nConfiguration finished\nI used the defaults for both the location of python and for python library paths, which I think is recorded correctly in the .tf_configure.bazelrc file:\n$ cat .tf_configure.bazelrc\nimport %workspace%/tools/bazel.rc\nbuild --action_env PYTHON_BIN_PATH=\"/opt/python/3.6.5.3/bin/python\"\nbuild --action_env PYTHON_LIB_PATH=\"/projects/datascience/cadams/software/tf_second_install/tf_install\"\nbuild --python_path=\"/opt/python/3.6.5.3/bin/python\"\nbuild:xla --define with_xla_support=true\nbuild --config=xla\nbuild --action_env TF_NEED_OPENCL_SYCL=\"0\"\nbuild --action_env TF_NEED_ROCM=\"0\"\nbuild --action_env TF_NEED_CUDA=\"0\"\nbuild --action_env TF_DOWNLOAD_CLANG=\"0\"\nbuild:opt --copt=-march=native\nbuild:opt --copt=-Wno-sign-compare\nbuild:opt --host_copt=-march=native\nbuild:opt --define with_default_optimizations=true\nbuild:v2 --define=tf_api_version=2\nLooking at this, the PYTHON_LIB_PATH appears to be set correctly, and the packages are installed there:\n$ ls /projects/datascience/cadams/software/tf_second_install/tf_install\nh5py                  Keras_Applications-1.0.6.dist-info\nh5py-2.8.0.dist-info  keras_preprocessing\nkeras_applications    Keras_Preprocessing-1.0.5.dist-info\n\nStill, the build fails at the same spot when it can not import keras_preprocessing:\n\nERROR: /lus/theta-fs0/projects/datascience/cadams/software/tf_second_install/tensorflow/tensorflow/BUILD:562:1: Executing genrule //tensorflow:tf_python_api_gen_v1 failed (Exit 1)\nTraceback (most recent call last):\n  File \"/gpfs/mira-home/cadams/.cache/bazel/_bazel_cadams/5d2ab57ebd6673dd9517877558fa4b10/execroot/org_tensorflow/bazel-out/host/bin/tensorflow/create_tensorflow.python_api_1.runfiles/org_tensorflow/tensorflow/python/tools/api/generator/create_python_api.py\", line 27, in <module>\n    from tensorflow.python.tools.api.generator import doc_srcs\n  File \"/gpfs/mira-home/cadams/.cache/bazel/_bazel_cadams/5d2ab57ebd6673dd9517877558fa4b10/execroot/org_tensorflow/bazel-out/host/bin/tensorflow/create_tensorflow.python_api_1.runfiles/org_tensorflow/tensorflow/python/__init__.py\", line 81, in <module>\n    from tensorflow.python import keras\n  File \"/gpfs/mira-home/cadams/.cache/bazel/_bazel_cadams/5d2ab57ebd6673dd9517877558fa4b10/execroot/org_tensorflow/bazel-out/host/bin/tensorflow/create_tensorflow.python_api_1.runfiles/org_tensorflow/tensorflow/python/keras/__init__.py\", line 29, in <module>\n    from tensorflow.python.keras import datasets\n  File \"/gpfs/mira-home/cadams/.cache/bazel/_bazel_cadams/5d2ab57ebd6673dd9517877558fa4b10/execroot/org_tensorflow/bazel-out/host/bin/tensorflow/create_tensorflow.python_api_1.runfiles/org_tensorflow/tensorflow/python/keras/datasets/__init__.py\", line 25, in <module>\n    from tensorflow.python.keras.datasets import imdb\n  File \"/gpfs/mira-home/cadams/.cache/bazel/_bazel_cadams/5d2ab57ebd6673dd9517877558fa4b10/execroot/org_tensorflow/bazel-out/host/bin/tensorflow/create_tensorflow.python_api_1.runfiles/org_tensorflow/tensorflow/python/keras/datasets/imdb.py\", line 25, in <module>\n    from tensorflow.python.keras.preprocessing.sequence import _remove_long_seq\n  File \"/gpfs/mira-home/cadams/.cache/bazel/_bazel_cadams/5d2ab57ebd6673dd9517877558fa4b10/execroot/org_tensorflow/bazel-out/host/bin/tensorflow/create_tensorflow.python_api_1.runfiles/org_tensorflow/tensorflow/python/keras/preprocessing/__init__.py\", line 21, in <module>\n    import keras_preprocessing\nModuleNotFoundError: No module named 'keras_preprocessing'\nTarget //tensorflow/tools/pip_package:build_pip_package failed to build\nUse --verbose_failures to see the command lines of failed build steps.\nINFO: Elapsed time: 1770.461s, Critical Path: 236.77s\nINFO: 11483 processes: 11483 local.\nFAILED: Build did NOT complete successfully\n\nDo you spot something I am not doing right?  I can only get this section of the build to succeed by manually editing the __init__.py file to add to the sys.path variable, as mentioned.", "body": "Ok, I started from scratch to carefully test this, and my build still failed.  Below I've got a lot of the output so you can see if I configured tensorflow correctly, which I think I did.\r\n\r\n1. I downloaded tensorflow fresh, bazel fresh, installed the necessary python packages fresh:\r\n```bash\r\n$ mkdir tf_second_install\r\n$ cd tf_second_install/\r\n$ git clone https://github.com/tensorflow/tensorflow.git\r\n$ wget https://github.com/bazelbuild/bazel/releases/download/0.18.1/bazel-0.18.1-dist.zip\r\n$ export TF_INSTALL=$PWD/tf_install\r\n$ export PYTHONPATH=$TF_INSTALL\r\n$ pip install --target=$TF_INSTALL --upgrade --no-deps keras-applications keras-preprocessing h5py\r\n```\r\n\r\n2. I built bazel with the following commands, which succeeded:\r\n```bash\r\n$ cd bazel-0.18.1\r\n$ mv ../bazel-0.18.1-dist.zip ./\r\n$ unzip bazel-0.18.1-dist.zip\r\n$ bash ./compile.sh\r\n$ cd ../\r\n# Much output removed\r\nBuild successful! Binary is here: /projects/datascience/cadams/software/tf_second_install/bazel-0.18.1/output/bazel\r\n$ export PATH=/projects/datascience/cadams/software/tf_second_install/bazel-0.18.1/output/:$PATH\r\n```\r\n\r\n3. Configuration of tensorflow:\r\n```bash\r\nConfiguration of tensorflow:\r\n$ ./configure\u00a0\r\nWARNING: Processed legacy workspace file /lus/theta-fs0/projects/datascience/cadams/software/tf_second_install/tensorflow/tools/bazel.rc. This file will not be processed in the next release of Bazel. Please read https://github.com/bazelbuild/bazel/issues/6319 for further information, including how to upgrade.\r\nExtracting Bazel installation...\r\nWARNING: ignoring LD_PRELOAD in environment.\r\nWARNING: --batch mode is deprecated. Please instead explicitly shut down your Bazel server using the command \"bazel shutdown\".\r\nYou have bazel 0.18.1- (@non-git) installed.\r\nPlease specify the location of python. [Default is /opt/python/3.6.5.3/bin/python]:\u00a0\r\n\r\n\r\nFound possible Python library paths:\r\n\u00a0 /projects/datascience/cadams/software/tf_second_install/tf_install\r\n\u00a0 /opt/python/3.6.5.3/lib/python3.6/site-packages\r\nPlease input the desired Python library path to use.\u00a0 Default is [/projects/datascience/cadams/software/tf_second_install/tf_install]\r\n\r\nDo you wish to build TensorFlow with XLA JIT support? [Y/n]: y\r\nXLA JIT support will be enabled for TensorFlow.\r\n\r\nDo you wish to build TensorFlow with OpenCL SYCL support? [y/N]: n\r\nNo OpenCL SYCL support will be enabled for TensorFlow.\r\n\r\nDo you wish to build TensorFlow with ROCm support? [y/N]: n\r\nNo ROCm support will be enabled for TensorFlow.\r\n\r\nDo you wish to build TensorFlow with CUDA support? [y/N]: n\r\nNo CUDA support will be enabled for TensorFlow.\r\n\r\nDo you wish to download a fresh release of clang? (Experimental) [y/N]: n\r\nClang will not be downloaded.\r\n\r\nDo you wish to build TensorFlow with MPI support? [y/N]:\u00a0\r\nNo MPI support will be enabled for TensorFlow.\r\n\r\nPlease specify optimization flags to use during compilation when bazel option \"--config=opt\" is specified [Default is -march=native -Wno-sign-compare]:\u00a0\r\n\r\n\r\nWould you like to interactively configure ./WORKSPACE for Android builds? [y/N]: n\r\nNot configuring the WORKSPACE for Android builds.\r\n\r\nPreconfigured Bazel build configs. You can use any of the below by adding \"--config=<>\" to your build command. See .bazelrc for more details.\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 --config=mkl\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 # Build with MKL support.\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 --config=monolithic\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 # Config for mostly static monolithic build.\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 --config=gdr\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 # Build with GDR support.\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 --config=verbs\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 # Build with libverbs support.\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 --config=ngraph\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 # Build with Intel nGraph support.\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 --config=dynamic_kernels\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 # (Experimental) Build kernels into separate shared objects.\r\nPreconfigured Bazel build configs to DISABLE default on features:\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 --config=noaws\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 # Disable AWS S3 filesystem support.\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 --config=nogcp\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 # Disable GCP support.\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 --config=nohdfs\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 # Disable HDFS support.\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 --config=noignite\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 # Disable Apacha Ignite support.\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 --config=nokafka\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 # Disable Apache Kafka support.\r\nConfiguration finished\r\n```\r\n\r\nI used the defaults for both the location of python and for python library paths, which I think is recorded correctly in the `.tf_configure.bazelrc` file:\r\n```bash\r\n$ cat .tf_configure.bazelrc\r\nimport %workspace%/tools/bazel.rc\r\nbuild --action_env PYTHON_BIN_PATH=\"/opt/python/3.6.5.3/bin/python\"\r\nbuild --action_env PYTHON_LIB_PATH=\"/projects/datascience/cadams/software/tf_second_install/tf_install\"\r\nbuild --python_path=\"/opt/python/3.6.5.3/bin/python\"\r\nbuild:xla --define with_xla_support=true\r\nbuild --config=xla\r\nbuild --action_env TF_NEED_OPENCL_SYCL=\"0\"\r\nbuild --action_env TF_NEED_ROCM=\"0\"\r\nbuild --action_env TF_NEED_CUDA=\"0\"\r\nbuild --action_env TF_DOWNLOAD_CLANG=\"0\"\r\nbuild:opt --copt=-march=native\r\nbuild:opt --copt=-Wno-sign-compare\r\nbuild:opt --host_copt=-march=native\r\nbuild:opt --define with_default_optimizations=true\r\nbuild:v2 --define=tf_api_version=2\r\n```\r\n\r\nLooking at this, the PYTHON_LIB_PATH appears to be set correctly, and the packages are installed there:\r\n```bash \r\n$ ls /projects/datascience/cadams/software/tf_second_install/tf_install\r\nh5py                  Keras_Applications-1.0.6.dist-info\r\nh5py-2.8.0.dist-info  keras_preprocessing\r\nkeras_applications    Keras_Preprocessing-1.0.5.dist-info\r\n```\r\n\r\n4. Still, the build fails at the same spot when it can not import keras_preprocessing:\r\n```\r\nERROR: /lus/theta-fs0/projects/datascience/cadams/software/tf_second_install/tensorflow/tensorflow/BUILD:562:1: Executing genrule //tensorflow:tf_python_api_gen_v1 failed (Exit 1)\r\nTraceback (most recent call last):\r\n  File \"/gpfs/mira-home/cadams/.cache/bazel/_bazel_cadams/5d2ab57ebd6673dd9517877558fa4b10/execroot/org_tensorflow/bazel-out/host/bin/tensorflow/create_tensorflow.python_api_1.runfiles/org_tensorflow/tensorflow/python/tools/api/generator/create_python_api.py\", line 27, in <module>\r\n    from tensorflow.python.tools.api.generator import doc_srcs\r\n  File \"/gpfs/mira-home/cadams/.cache/bazel/_bazel_cadams/5d2ab57ebd6673dd9517877558fa4b10/execroot/org_tensorflow/bazel-out/host/bin/tensorflow/create_tensorflow.python_api_1.runfiles/org_tensorflow/tensorflow/python/__init__.py\", line 81, in <module>\r\n    from tensorflow.python import keras\r\n  File \"/gpfs/mira-home/cadams/.cache/bazel/_bazel_cadams/5d2ab57ebd6673dd9517877558fa4b10/execroot/org_tensorflow/bazel-out/host/bin/tensorflow/create_tensorflow.python_api_1.runfiles/org_tensorflow/tensorflow/python/keras/__init__.py\", line 29, in <module>\r\n    from tensorflow.python.keras import datasets\r\n  File \"/gpfs/mira-home/cadams/.cache/bazel/_bazel_cadams/5d2ab57ebd6673dd9517877558fa4b10/execroot/org_tensorflow/bazel-out/host/bin/tensorflow/create_tensorflow.python_api_1.runfiles/org_tensorflow/tensorflow/python/keras/datasets/__init__.py\", line 25, in <module>\r\n    from tensorflow.python.keras.datasets import imdb\r\n  File \"/gpfs/mira-home/cadams/.cache/bazel/_bazel_cadams/5d2ab57ebd6673dd9517877558fa4b10/execroot/org_tensorflow/bazel-out/host/bin/tensorflow/create_tensorflow.python_api_1.runfiles/org_tensorflow/tensorflow/python/keras/datasets/imdb.py\", line 25, in <module>\r\n    from tensorflow.python.keras.preprocessing.sequence import _remove_long_seq\r\n  File \"/gpfs/mira-home/cadams/.cache/bazel/_bazel_cadams/5d2ab57ebd6673dd9517877558fa4b10/execroot/org_tensorflow/bazel-out/host/bin/tensorflow/create_tensorflow.python_api_1.runfiles/org_tensorflow/tensorflow/python/keras/preprocessing/__init__.py\", line 21, in <module>\r\n    import keras_preprocessing\r\nModuleNotFoundError: No module named 'keras_preprocessing'\r\nTarget //tensorflow/tools/pip_package:build_pip_package failed to build\r\nUse --verbose_failures to see the command lines of failed build steps.\r\nINFO: Elapsed time: 1770.461s, Critical Path: 236.77s\r\nINFO: 11483 processes: 11483 local.\r\nFAILED: Build did NOT complete successfully\r\n```\r\n\r\nDo you spot something I am not doing right?  I can only get this section of the build to succeed by manually editing the `__init__.py` file to add to the sys.path variable, as mentioned."}