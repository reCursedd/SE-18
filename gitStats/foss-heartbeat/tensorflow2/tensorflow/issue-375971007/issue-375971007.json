{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23403", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23403/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23403/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23403/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/23403", "id": 375971007, "node_id": "MDU6SXNzdWUzNzU5NzEwMDc=", "number": 23403, "title": "tf.MonitoredSession accessing raw session raw_session like in SingularMonitoredSession", "user": {"login": "ricvo", "id": 9975354, "node_id": "MDQ6VXNlcjk5NzUzNTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/9975354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricvo", "html_url": "https://github.com/ricvo", "followers_url": "https://api.github.com/users/ricvo/followers", "following_url": "https://api.github.com/users/ricvo/following{/other_user}", "gists_url": "https://api.github.com/users/ricvo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricvo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricvo/subscriptions", "organizations_url": "https://api.github.com/users/ricvo/orgs", "repos_url": "https://api.github.com/users/ricvo/repos", "events_url": "https://api.github.com/users/ricvo/events{/privacy}", "received_events_url": "https://api.github.com/users/ricvo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "karmel", "id": 667809, "node_id": "MDQ6VXNlcjY2NzgwOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/667809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karmel", "html_url": "https://github.com/karmel", "followers_url": "https://api.github.com/users/karmel/followers", "following_url": "https://api.github.com/users/karmel/following{/other_user}", "gists_url": "https://api.github.com/users/karmel/gists{/gist_id}", "starred_url": "https://api.github.com/users/karmel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karmel/subscriptions", "organizations_url": "https://api.github.com/users/karmel/orgs", "repos_url": "https://api.github.com/users/karmel/repos", "events_url": "https://api.github.com/users/karmel/events{/privacy}", "received_events_url": "https://api.github.com/users/karmel/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "karmel", "id": 667809, "node_id": "MDQ6VXNlcjY2NzgwOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/667809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karmel", "html_url": "https://github.com/karmel", "followers_url": "https://api.github.com/users/karmel/followers", "following_url": "https://api.github.com/users/karmel/following{/other_user}", "gists_url": "https://api.github.com/users/karmel/gists{/gist_id}", "starred_url": "https://api.github.com/users/karmel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karmel/subscriptions", "organizations_url": "https://api.github.com/users/karmel/orgs", "repos_url": "https://api.github.com/users/karmel/repos", "events_url": "https://api.github.com/users/karmel/events{/privacy}", "received_events_url": "https://api.github.com/users/karmel/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-10-31T13:48:26Z", "updated_at": "2018-11-22T18:50:53Z", "closed_at": null, "author_association": "NONE", "body_html": "<p><strong>System information</strong></p>\n<ul>\n<li>TensorFlow version (you are using): 1.11.0</li>\n<li>Are you willing to contribute it (Yes/No): yes</li>\n</ul>\n<p><strong>Will this change the current api? How?</strong><br>\nnot substantially</p>\n<p><strong>Who will benefit with this feature?</strong><br>\nPotentially everybody using a MonitoredTrainingSession</p>\n<p><strong>Any Other info.</strong><br>\nNone</p>\n<p><strong>Describe the feature and the current behavior/state.</strong></p>\n<p>I am using tf.MonitoredSession, it happens sometimes that you want to evaluate some nodes but you don't want to proceed in the training step, so you do not want to use the Hooks to log stuffs. It seems that the session is wrapped several times and the raw session is stored in a nested way: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"214321189\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/8425\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/8425/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/8425\">#8425</a> but it can also be retrieved with method _tf_sess() <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"247439661\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/11971\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/11971/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/11971\">#11971</a></p>\n<p>To recap I think there are two possible ways to run without hooks (to the best of my knowledge):</p>\n<ol>\n<li>use step_fn <a href=\"https://www.tensorflow.org/api_docs/python/tf/train/MonitoredSession#run_step_fn\" rel=\"nofollow\">https://www.tensorflow.org/api_docs/python/tf/train/MonitoredSession#run_step_fn</a></li>\n<li>access the raw session with raw_session = sess._tf_sess()</li>\n</ol>\n<p>I think way 2. is the more intuitive for me if I want to be free from the hooks, but is it proper practice are there some problems in doing this? I wonder why is it private and it is not contemplated to have a method to access the raw session like in SingularMonitoredSession.raw_session()? <a href=\"https://www.tensorflow.org/api_docs/python/tf/train/SingularMonitoredSession\" rel=\"nofollow\">https://www.tensorflow.org/api_docs/python/tf/train/SingularMonitoredSession</a></p>\n<p>At line 1010 in <a href=\"https://github.com/tensorflow/tensorflow/blob/r1.11/tensorflow/python/training/monitored_session.py\">https://github.com/tensorflow/tensorflow/blob/r1.11/tensorflow/python/training/monitored_session.py</a> I can see that raw_session is defined exactly returning self._tf_sess(), so I wonder why the explicit choice to not have the user the possibility to access the raw session in MonitoredSession, is it possible to incur in some problems using sess._tf_sess()? I wonder if it has something to do with some problems in the distributed setting..</p>\n<p>Summarizing: Would it be possible to have a method to access the raw session in MonitoredSession, are there some counter-indications with this kind of procedure?<br>\n(accessing the raw session with sess._tf_sess() )</p>", "body_text": "System information\n\nTensorFlow version (you are using): 1.11.0\nAre you willing to contribute it (Yes/No): yes\n\nWill this change the current api? How?\nnot substantially\nWho will benefit with this feature?\nPotentially everybody using a MonitoredTrainingSession\nAny Other info.\nNone\nDescribe the feature and the current behavior/state.\nI am using tf.MonitoredSession, it happens sometimes that you want to evaluate some nodes but you don't want to proceed in the training step, so you do not want to use the Hooks to log stuffs. It seems that the session is wrapped several times and the raw session is stored in a nested way: #8425 but it can also be retrieved with method _tf_sess() #11971\nTo recap I think there are two possible ways to run without hooks (to the best of my knowledge):\n\nuse step_fn https://www.tensorflow.org/api_docs/python/tf/train/MonitoredSession#run_step_fn\naccess the raw session with raw_session = sess._tf_sess()\n\nI think way 2. is the more intuitive for me if I want to be free from the hooks, but is it proper practice are there some problems in doing this? I wonder why is it private and it is not contemplated to have a method to access the raw session like in SingularMonitoredSession.raw_session()? https://www.tensorflow.org/api_docs/python/tf/train/SingularMonitoredSession\nAt line 1010 in https://github.com/tensorflow/tensorflow/blob/r1.11/tensorflow/python/training/monitored_session.py I can see that raw_session is defined exactly returning self._tf_sess(), so I wonder why the explicit choice to not have the user the possibility to access the raw session in MonitoredSession, is it possible to incur in some problems using sess._tf_sess()? I wonder if it has something to do with some problems in the distributed setting..\nSummarizing: Would it be possible to have a method to access the raw session in MonitoredSession, are there some counter-indications with this kind of procedure?\n(accessing the raw session with sess._tf_sess() )", "body": "**System information**\r\n- TensorFlow version (you are using): 1.11.0\r\n- Are you willing to contribute it (Yes/No): yes\r\n\r\n**Will this change the current api? How?**\r\nnot substantially\r\n\r\n**Who will benefit with this feature?**\r\nPotentially everybody using a MonitoredTrainingSession\r\n\r\n**Any Other info.**\r\nNone\r\n\r\n**Describe the feature and the current behavior/state.**\r\n\r\nI am using tf.MonitoredSession, it happens sometimes that you want to evaluate some nodes but you don't want to proceed in the training step, so you do not want to use the Hooks to log stuffs. It seems that the session is wrapped several times and the raw session is stored in a nested way: https://github.com/tensorflow/tensorflow/issues/8425 but it can also be retrieved with method _tf_sess() https://github.com/tensorflow/tensorflow/issues/11971\r\n\r\nTo recap I think there are two possible ways to run without hooks (to the best of my knowledge):\r\n\r\n1. use step_fn https://www.tensorflow.org/api_docs/python/tf/train/MonitoredSession#run_step_fn\r\n2. access the raw session with raw_session = sess._tf_sess()\r\n\r\nI think way 2. is the more intuitive for me if I want to be free from the hooks, but is it proper practice are there some problems in doing this? I wonder why is it private and it is not contemplated to have a method to access the raw session like in SingularMonitoredSession.raw_session()? https://www.tensorflow.org/api_docs/python/tf/train/SingularMonitoredSession \r\n\r\nAt line 1010 in https://github.com/tensorflow/tensorflow/blob/r1.11/tensorflow/python/training/monitored_session.py I can see that raw_session is defined exactly returning self._tf_sess(), so I wonder why the explicit choice to not have the user the possibility to access the raw session in MonitoredSession, is it possible to incur in some problems using sess._tf_sess()? I wonder if it has something to do with some problems in the distributed setting..\r\n\r\nSummarizing: Would it be possible to have a method to access the raw session in MonitoredSession, are there some counter-indications with this kind of procedure?\r\n(accessing the raw session with sess._tf_sess() )\r\n\r\n"}