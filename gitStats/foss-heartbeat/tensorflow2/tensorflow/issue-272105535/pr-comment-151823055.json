{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/151823055", "pull_request_review_id": 77601372, "id": 151823055, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MTgyMzA1NQ==", "diff_hunk": "@@ -50,6 +56,117 @@\n   private static final String TAG = \"TensorFlowInferenceInterface\";\n   private static final String ASSET_FILE_PREFIX = \"file:///android_asset/\";\n \n+  /**\n+   * Copies resource to a cache file.\n+   * @param  context context The context that contains the files\n+   * @param  String filename  Filename--take note that it checks for .pb in asset case\n+   * @param  boolean res Is it from res/raw\n+   *\n+   * @return File reference to cache file.\n+   */\n+  private File createCacheFile(Context context, String filename, boolean res)\n+      throws IOException {\n+    InputStream inputStream = null;\n+    if (res) {\n+      int resourceId = context.getResources().getIdentifier(filename, \"raw\", context.getPackageName());\n+      if (resourceId == 0) {\n+        return null;\n+      }\n+      inputStream = context.getResources().openRawResource(resourceId);\n+    } else {\n+      if (!filename.endsWith(\".pb\")) {\n+        filename += \".pb\";", "path": "tensorflow/contrib/android/java/org/tensorflow/contrib/android/TensorFlowInferenceInterface.java", "position": null, "original_position": 50, "commit_id": "620d8a139c870f06efc100f32d2369c618f050db", "original_commit_id": "4ebc68050fdde62f54047bb1974dd6e00fe24ded", "user": {"login": "cloudbank", "id": 2288294, "node_id": "MDQ6VXNlcjIyODgyOTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/2288294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cloudbank", "html_url": "https://github.com/cloudbank", "followers_url": "https://api.github.com/users/cloudbank/followers", "following_url": "https://api.github.com/users/cloudbank/following{/other_user}", "gists_url": "https://api.github.com/users/cloudbank/gists{/gist_id}", "starred_url": "https://api.github.com/users/cloudbank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cloudbank/subscriptions", "organizations_url": "https://api.github.com/users/cloudbank/orgs", "repos_url": "https://api.github.com/users/cloudbank/repos", "events_url": "https://api.github.com/users/cloudbank/events{/privacy}", "received_events_url": "https://api.github.com/users/cloudbank/received_events", "type": "User", "site_admin": false}, "body": "Res/raw file are accessible by resource id or filename without the extension.  I did not consider that files outside of .pb would be involved.  Protobufs used by tensorflow are usually binary and hold that extension.  I would have to do more research to find out if there is a use case for that; I tend to agree it is a bit brittle and can move that check outside of the interface.", "created_at": "2017-11-18T01:25:29Z", "updated_at": "2017-12-03T01:37:04Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/14351#discussion_r151823055", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/14351", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/151823055"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/14351#discussion_r151823055"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/14351"}}, "body_html": "<p>Res/raw file are accessible by resource id or filename without the extension.  I did not consider that files outside of .pb would be involved.  Protobufs used by tensorflow are usually binary and hold that extension.  I would have to do more research to find out if there is a use case for that; I tend to agree it is a bit brittle and can move that check outside of the interface.</p>", "body_text": "Res/raw file are accessible by resource id or filename without the extension.  I did not consider that files outside of .pb would be involved.  Protobufs used by tensorflow are usually binary and hold that extension.  I would have to do more research to find out if there is a use case for that; I tend to agree it is a bit brittle and can move that check outside of the interface.", "in_reply_to_id": 151796965}