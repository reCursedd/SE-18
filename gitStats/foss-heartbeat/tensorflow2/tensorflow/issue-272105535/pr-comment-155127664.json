{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/155127664", "pull_request_review_id": 81394399, "id": 155127664, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NTEyNzY2NA==", "diff_hunk": "@@ -50,6 +56,112 @@\n   private static final String TAG = \"TensorFlowInferenceInterface\";\n   private static final String ASSET_FILE_PREFIX = \"file:///android_asset/\";\n \n+  /**\n+   * Copies resource to internal storage .\n+   * @param  context context The context that contains the files\n+   * @param  String filename\n+   * @param  boolean res Is it from res/raw\n+   *\n+   * @return File reference to cache file.\n+   */\n+  private File copyFile(Context context, String filename, boolean res)\n+      throws IOException {\n+    InputStream inputStream = null;\n+    if (res) {\n+      int resourceId = context.getResources().getIdentifier(filename, \"raw\", context.getPackageName());\n+      if (resourceId == 0) {\n+        return null;\n+      }\n+      inputStream = context.getResources().openRawResource(resourceId);\n+    } else {\n+      inputStream = context.getAssets().open(filename);\n+    }\n+    File copy = new File(context.getFilesDir(), filename);\n+    if (copy.createNewFile() == false) {\n+      copy.delete();\n+      copy.createNewFile();\n+    }\n+\n+    FileOutputStream fileOutputStream = new FileOutputStream(copy);\n+\n+    byte[] buffer = new byte[1024];\n+    int count;\n+    while ((count = inputStream.read(buffer)) != -1) {\n+      fileOutputStream.write(buffer, 0, count);\n+    }\n+    fileOutputStream.close();\n+    inputStream.close();\n+    return copy;\n+  }\n+\n+  /*\n+  * Load a TensorFlow model via FileChannel mmap\n+  * This requires that assets files are copied to internal storage already\n+  * getFileStreamPath() points to that directory; context used must be passed in here\n+  *\n+  * @param ctx The context to use to load the model file; same as one used to copy files\n+  * @param model The filepath to the GraphDef proto representing the model.\n+  */\n+  public TensorFlowInferenceInterface(Context ctx, String modelName) {\n+    prepareNativeRuntime();\n+    File modelFile = null;\n+    this.g = new Graph();\n+    this.sess = new Session(g);\n+    this.runner = sess.runner();\n+    this.modelName = modelName;\n+    MappedByteBuffer buffer = null;\n+    FileChannel fileChannel = null;\n+    RandomAccessFile raf = null;\n+    File copy = null;\n+    try {\n+      copy = copyFile(ctx, modelName, true);\n+      if (copy != null) {\n+        raf = new RandomAccessFile(copy, \"r\");\n+        fileChannel = raf.getChannel();\n+      } else {\n+        //try assets\n+        copy = copyFile(ctx, modelName, false);\n+        raf = new RandomAccessFile(copy, \"r\");\n+        fileChannel = raf.getChannel();\n+      }\n+    } catch (IOException e) {\n+      throw new RuntimeException(\"Failed to open graph file: \" + modelFile, e);\n+    }\n+    try {\n+      buffer = fileChannel.map(FileChannel.MapMode.READ_ONLY, 0, fileChannel.size());\n+      if (!buffer.isLoaded()) {\n+        buffer.load();\n+      }\n+      byte[] graphDef = new byte[buffer.limit()];\n+      buffer.get(graphDef);\n+      loadGraph(graphDef, g);\n+      Log.i(TAG, \"Successfully loaded model from map\" + modelName);\n+    } catch (IOException ioe) {\n+      throw new RuntimeException(\"Failed to map  model from\" + modelName, ioe);\n+    } finally {\n+      try {\n+        if (raf != null) {\n+          raf.close();\n+        }\n+        if (copy != null) {", "path": "tensorflow/contrib/android/java/org/tensorflow/contrib/android/TensorFlowInferenceInterface.java", "position": 118, "original_position": 118, "commit_id": "620d8a139c870f06efc100f32d2369c618f050db", "original_commit_id": "620d8a139c870f06efc100f32d2369c618f050db", "user": {"login": "andrewharp", "id": 3376817, "node_id": "MDQ6VXNlcjMzNzY4MTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/3376817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewharp", "html_url": "https://github.com/andrewharp", "followers_url": "https://api.github.com/users/andrewharp/followers", "following_url": "https://api.github.com/users/andrewharp/following{/other_user}", "gists_url": "https://api.github.com/users/andrewharp/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewharp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewharp/subscriptions", "organizations_url": "https://api.github.com/users/andrewharp/orgs", "repos_url": "https://api.github.com/users/andrewharp/repos", "events_url": "https://api.github.com/users/andrewharp/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewharp/received_events", "type": "User", "site_admin": false}, "body": "Do we want to delete this? What is the copy time -- maybe it would be better to keep it cached if possible for faster loading the next time?", "created_at": "2017-12-06T01:44:31Z", "updated_at": "2017-12-06T02:01:00Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/14351#discussion_r155127664", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/14351", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/155127664"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/14351#discussion_r155127664"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/14351"}}, "body_html": "<p>Do we want to delete this? What is the copy time -- maybe it would be better to keep it cached if possible for faster loading the next time?</p>", "body_text": "Do we want to delete this? What is the copy time -- maybe it would be better to keep it cached if possible for faster loading the next time?"}