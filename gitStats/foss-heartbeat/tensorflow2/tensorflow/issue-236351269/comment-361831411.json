{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/361831411", "html_url": "https://github.com/tensorflow/tensorflow/issues/10749#issuecomment-361831411", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10749", "id": 361831411, "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTgzMTQxMQ==", "user": {"login": "Rassibassi", "id": 2855550, "node_id": "MDQ6VXNlcjI4NTU1NTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/2855550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rassibassi", "html_url": "https://github.com/Rassibassi", "followers_url": "https://api.github.com/users/Rassibassi/followers", "following_url": "https://api.github.com/users/Rassibassi/following{/other_user}", "gists_url": "https://api.github.com/users/Rassibassi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rassibassi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rassibassi/subscriptions", "organizations_url": "https://api.github.com/users/Rassibassi/orgs", "repos_url": "https://api.github.com/users/Rassibassi/repos", "events_url": "https://api.github.com/users/Rassibassi/events{/privacy}", "received_events_url": "https://api.github.com/users/Rassibassi/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-31T05:51:31Z", "updated_at": "2018-01-31T05:55:55Z", "author_association": "NONE", "body_html": "<p>Hej!<br>\nThanks for fixing the issue. It seems like there is still an issue with the CPU FFT. It's more subtle, but after calling <code>ifft(fft(signal))</code> several times the error becomes apparent. Take a look at the following script.<br>\nI updated <a href=\"https://github.com/rassibassi/fftTensorflow\">https://github.com/rassibassi/fftTensorflow</a> with the new script in <code>run2.py</code>:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">import</span> scipy.io\n<span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n\n<span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>tf<span class=\"pl-pds\">'</span></span>,tf.<span class=\"pl-c1\">__version__</span>)\n<span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>scipy<span class=\"pl-pds\">'</span></span>,scipy.<span class=\"pl-c1\">__version__</span>)\n<span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>numpy<span class=\"pl-pds\">'</span></span>,np.<span class=\"pl-c1\">__version__</span>)\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">error</span>(<span class=\"pl-smi\">matlab</span>,<span class=\"pl-smi\">tf</span>):\n    error <span class=\"pl-k\">=</span> np.mean(np.square(np.abs(matlab<span class=\"pl-k\">-</span>np.array(tf))))\n    <span class=\"pl-k\">return</span> error\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">relError</span>(<span class=\"pl-smi\">matlab</span>,<span class=\"pl-smi\">tf</span>):\n    error <span class=\"pl-k\">=</span> np.mean(np.square(np.abs(matlab<span class=\"pl-k\">-</span>np.array(tf)))<span class=\"pl-k\">/</span>np.square(np.abs(matlab)))\n    <span class=\"pl-k\">return</span> error\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">tf_i_fft</span>(<span class=\"pl-smi\">var</span>,<span class=\"pl-smi\">i</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>):\n    <span class=\"pl-k\">for</span> _ <span class=\"pl-k\">in</span> <span class=\"pl-c1\">range</span>(i):\n        var <span class=\"pl-k\">=</span> tf.ifft(tf.fft(var))\n    <span class=\"pl-k\">return</span> var\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">np_i_fft</span>(<span class=\"pl-smi\">var</span>,<span class=\"pl-smi\">i</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>):\n    <span class=\"pl-k\">for</span> _ <span class=\"pl-k\">in</span> <span class=\"pl-c1\">range</span>(i):\n        var <span class=\"pl-k\">=</span> np.fft.ifft(np.fft.fft(var))\n    <span class=\"pl-k\">return</span> var    \n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">runTF</span>(<span class=\"pl-smi\">signal</span>):\n    x <span class=\"pl-k\">=</span> tf.placeholder(<span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.complex64,<span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>signal.shape)\n    out1 <span class=\"pl-k\">=</span> tf_i_fft(x,<span class=\"pl-c1\">1</span>)\n    out20 <span class=\"pl-k\">=</span> tf_i_fft(x,<span class=\"pl-c1\">20</span>)\n    out200 <span class=\"pl-k\">=</span> tf_i_fft(x,<span class=\"pl-c1\">200</span>)\n    <span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n        o1,o20,o200 <span class=\"pl-k\">=</span> sess.run([out1,out20,out200],<span class=\"pl-v\">feed_dict</span><span class=\"pl-k\">=</span>{x:signal})\n        <span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>relError():<span class=\"pl-pds\">\"</span></span>)\n        <span class=\"pl-k\">for</span> x <span class=\"pl-k\">in</span> [o1,o20,o200]:\n            <span class=\"pl-c1\">print</span>(relError(signal, x))\n        <span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>error():<span class=\"pl-pds\">\"</span></span>)\n        <span class=\"pl-k\">for</span> x <span class=\"pl-k\">in</span> [o1,o20,o200]:\n            <span class=\"pl-c1\">print</span>(error(signal, x))\n        \n<span class=\"pl-k\">def</span> <span class=\"pl-en\">runNP</span>(<span class=\"pl-smi\">signal</span>):\n    <span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>relError():<span class=\"pl-pds\">\"</span></span>)\n    <span class=\"pl-k\">for</span> i <span class=\"pl-k\">in</span> [<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">20</span>,<span class=\"pl-c1\">200</span>]:\n        <span class=\"pl-c1\">print</span>(relError(signal, np_i_fft(signal,i)))\n    <span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>error():<span class=\"pl-pds\">\"</span></span>)\n    <span class=\"pl-k\">for</span> i <span class=\"pl-k\">in</span> [<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">20</span>,<span class=\"pl-c1\">200</span>]:\n        <span class=\"pl-c1\">print</span>(relError(signal, np_i_fft(signal,i)))\n\nsignal <span class=\"pl-k\">=</span> np.random.normal(<span class=\"pl-v\">size</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">2</span><span class=\"pl-k\">**</span><span class=\"pl-c1\">14</span>)<span class=\"pl-k\">+</span><span class=\"pl-c1\">1<span class=\"pl-k\">j</span></span><span class=\"pl-k\">*</span>np.random.normal(<span class=\"pl-v\">size</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">2</span><span class=\"pl-k\">**</span><span class=\"pl-c1\">14</span>)\n<span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>TF error:<span class=\"pl-pds\">\"</span></span>)\nrunTF(signal)\n<span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>NP error:<span class=\"pl-pds\">\"</span></span>)\nrunNP(signal)\n\nsignal <span class=\"pl-k\">=</span> np.random.normal(<span class=\"pl-v\">size</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">2</span><span class=\"pl-k\">**</span><span class=\"pl-c1\">16</span>)<span class=\"pl-k\">+</span><span class=\"pl-c1\">1<span class=\"pl-k\">j</span></span><span class=\"pl-k\">*</span>np.random.normal(<span class=\"pl-v\">size</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">2</span><span class=\"pl-k\">**</span><span class=\"pl-c1\">16</span>)\n<span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>TF error:<span class=\"pl-pds\">\"</span></span>)\nrunTF(signal)\n<span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>NP error:<span class=\"pl-pds\">\"</span></span>)\nrunNP(signal)</pre></div>\n<p>Output CPU:</p>\n<pre><code>tf 1.4.0\nscipy 0.19.1\nnumpy 1.13.1\n\nTF error:\nrelError():\n5.59392525962e-08\n2.2448001263e-05\n0.00232261390227\nerror():\n2.67353836243e-08\n1.07318864944e-05\n0.00110999929123\nNP error:\nrelError():\n3.1608419451e-30\n4.11521670168e-28\n3.64023186949e-26\nerror():\n3.1608419451e-30\n4.11521670168e-28\n3.64023186949e-26\n\nTF error:\nrelError():\n1.07720386138e-06\n0.000440561647239\n0.0554315680362\nerror():\n6.64006775289e-07\n0.000269907188294\n0.0315664672648\nNP error:\nrelError():\n6.42319902792e-30\n7.48332641966e-28\n4.85939408462e-26\nerror():\n6.42319902792e-30\n7.48332641966e-28\n4.85939408462e-26\n</code></pre>\n<p>Output GPU:</p>\n<pre><code>tf 1.4.0\nscipy 0.19.1\nnumpy 1.13.1\n\nTF error:\nrelError():\n2.51723807688e-11\n2.20787161855e-09\n1.39922980127e-07\nerror():\n1.26221058554e-13\n2.72995514739e-11\n2.5727280163e-09\nNP error:\nrelError():\n4.08902237726e-29\n6.82474569015e-27\n8.05050948207e-25\nerror():\n4.08902237726e-29\n6.82474569015e-27\n8.05050948207e-25\n\nTF error:\nrelError():\n1.00672471898e-11\n1.62742361807e-10\n2.14752586388e-08\nerror():\n1.2714050306e-13\n2.48766311645e-11\n2.29909628833e-09\nNP error:\nrelError():\n9.99902717965e-29\n1.10272520665e-26\n2.09878555167e-24\nerror():\n9.99902717965e-29\n1.10272520665e-26\n2.09878555167e-24\n</code></pre>", "body_text": "Hej!\nThanks for fixing the issue. It seems like there is still an issue with the CPU FFT. It's more subtle, but after calling ifft(fft(signal)) several times the error becomes apparent. Take a look at the following script.\nI updated https://github.com/rassibassi/fftTensorflow with the new script in run2.py:\nimport tensorflow as tf\nimport scipy.io\nimport numpy as np\n\nprint('tf',tf.__version__)\nprint('scipy',scipy.__version__)\nprint('numpy',np.__version__)\n\ndef error(matlab,tf):\n    error = np.mean(np.square(np.abs(matlab-np.array(tf))))\n    return error\ndef relError(matlab,tf):\n    error = np.mean(np.square(np.abs(matlab-np.array(tf)))/np.square(np.abs(matlab)))\n    return error\ndef tf_i_fft(var,i=1):\n    for _ in range(i):\n        var = tf.ifft(tf.fft(var))\n    return var\ndef np_i_fft(var,i=1):\n    for _ in range(i):\n        var = np.fft.ifft(np.fft.fft(var))\n    return var    \n\ndef runTF(signal):\n    x = tf.placeholder(dtype=tf.complex64,shape=signal.shape)\n    out1 = tf_i_fft(x,1)\n    out20 = tf_i_fft(x,20)\n    out200 = tf_i_fft(x,200)\n    with tf.Session() as sess:\n        o1,o20,o200 = sess.run([out1,out20,out200],feed_dict={x:signal})\n        print(\"relError():\")\n        for x in [o1,o20,o200]:\n            print(relError(signal, x))\n        print(\"error():\")\n        for x in [o1,o20,o200]:\n            print(error(signal, x))\n        \ndef runNP(signal):\n    print(\"relError():\")\n    for i in [1,20,200]:\n        print(relError(signal, np_i_fft(signal,i)))\n    print(\"error():\")\n    for i in [1,20,200]:\n        print(relError(signal, np_i_fft(signal,i)))\n\nsignal = np.random.normal(size=2**14)+1j*np.random.normal(size=2**14)\nprint(\"TF error:\")\nrunTF(signal)\nprint(\"NP error:\")\nrunNP(signal)\n\nsignal = np.random.normal(size=2**16)+1j*np.random.normal(size=2**16)\nprint(\"TF error:\")\nrunTF(signal)\nprint(\"NP error:\")\nrunNP(signal)\nOutput CPU:\ntf 1.4.0\nscipy 0.19.1\nnumpy 1.13.1\n\nTF error:\nrelError():\n5.59392525962e-08\n2.2448001263e-05\n0.00232261390227\nerror():\n2.67353836243e-08\n1.07318864944e-05\n0.00110999929123\nNP error:\nrelError():\n3.1608419451e-30\n4.11521670168e-28\n3.64023186949e-26\nerror():\n3.1608419451e-30\n4.11521670168e-28\n3.64023186949e-26\n\nTF error:\nrelError():\n1.07720386138e-06\n0.000440561647239\n0.0554315680362\nerror():\n6.64006775289e-07\n0.000269907188294\n0.0315664672648\nNP error:\nrelError():\n6.42319902792e-30\n7.48332641966e-28\n4.85939408462e-26\nerror():\n6.42319902792e-30\n7.48332641966e-28\n4.85939408462e-26\n\nOutput GPU:\ntf 1.4.0\nscipy 0.19.1\nnumpy 1.13.1\n\nTF error:\nrelError():\n2.51723807688e-11\n2.20787161855e-09\n1.39922980127e-07\nerror():\n1.26221058554e-13\n2.72995514739e-11\n2.5727280163e-09\nNP error:\nrelError():\n4.08902237726e-29\n6.82474569015e-27\n8.05050948207e-25\nerror():\n4.08902237726e-29\n6.82474569015e-27\n8.05050948207e-25\n\nTF error:\nrelError():\n1.00672471898e-11\n1.62742361807e-10\n2.14752586388e-08\nerror():\n1.2714050306e-13\n2.48766311645e-11\n2.29909628833e-09\nNP error:\nrelError():\n9.99902717965e-29\n1.10272520665e-26\n2.09878555167e-24\nerror():\n9.99902717965e-29\n1.10272520665e-26\n2.09878555167e-24", "body": "Hej!\r\nThanks for fixing the issue. It seems like there is still an issue with the CPU FFT. It's more subtle, but after calling `ifft(fft(signal))` several times the error becomes apparent. Take a look at the following script. \r\nI updated https://github.com/rassibassi/fftTensorflow with the new script in `run2.py`:\r\n\r\n```python\r\nimport tensorflow as tf\r\nimport scipy.io\r\nimport numpy as np\r\n\r\nprint('tf',tf.__version__)\r\nprint('scipy',scipy.__version__)\r\nprint('numpy',np.__version__)\r\n\r\ndef error(matlab,tf):\r\n    error = np.mean(np.square(np.abs(matlab-np.array(tf))))\r\n    return error\r\ndef relError(matlab,tf):\r\n    error = np.mean(np.square(np.abs(matlab-np.array(tf)))/np.square(np.abs(matlab)))\r\n    return error\r\ndef tf_i_fft(var,i=1):\r\n    for _ in range(i):\r\n        var = tf.ifft(tf.fft(var))\r\n    return var\r\ndef np_i_fft(var,i=1):\r\n    for _ in range(i):\r\n        var = np.fft.ifft(np.fft.fft(var))\r\n    return var    \r\n\r\ndef runTF(signal):\r\n    x = tf.placeholder(dtype=tf.complex64,shape=signal.shape)\r\n    out1 = tf_i_fft(x,1)\r\n    out20 = tf_i_fft(x,20)\r\n    out200 = tf_i_fft(x,200)\r\n    with tf.Session() as sess:\r\n        o1,o20,o200 = sess.run([out1,out20,out200],feed_dict={x:signal})\r\n        print(\"relError():\")\r\n        for x in [o1,o20,o200]:\r\n            print(relError(signal, x))\r\n        print(\"error():\")\r\n        for x in [o1,o20,o200]:\r\n            print(error(signal, x))\r\n        \r\ndef runNP(signal):\r\n    print(\"relError():\")\r\n    for i in [1,20,200]:\r\n        print(relError(signal, np_i_fft(signal,i)))\r\n    print(\"error():\")\r\n    for i in [1,20,200]:\r\n        print(relError(signal, np_i_fft(signal,i)))\r\n\r\nsignal = np.random.normal(size=2**14)+1j*np.random.normal(size=2**14)\r\nprint(\"TF error:\")\r\nrunTF(signal)\r\nprint(\"NP error:\")\r\nrunNP(signal)\r\n\r\nsignal = np.random.normal(size=2**16)+1j*np.random.normal(size=2**16)\r\nprint(\"TF error:\")\r\nrunTF(signal)\r\nprint(\"NP error:\")\r\nrunNP(signal)\r\n```\r\nOutput CPU:\r\n```\r\ntf 1.4.0\r\nscipy 0.19.1\r\nnumpy 1.13.1\r\n\r\nTF error:\r\nrelError():\r\n5.59392525962e-08\r\n2.2448001263e-05\r\n0.00232261390227\r\nerror():\r\n2.67353836243e-08\r\n1.07318864944e-05\r\n0.00110999929123\r\nNP error:\r\nrelError():\r\n3.1608419451e-30\r\n4.11521670168e-28\r\n3.64023186949e-26\r\nerror():\r\n3.1608419451e-30\r\n4.11521670168e-28\r\n3.64023186949e-26\r\n\r\nTF error:\r\nrelError():\r\n1.07720386138e-06\r\n0.000440561647239\r\n0.0554315680362\r\nerror():\r\n6.64006775289e-07\r\n0.000269907188294\r\n0.0315664672648\r\nNP error:\r\nrelError():\r\n6.42319902792e-30\r\n7.48332641966e-28\r\n4.85939408462e-26\r\nerror():\r\n6.42319902792e-30\r\n7.48332641966e-28\r\n4.85939408462e-26\r\n```\r\nOutput GPU:\r\n```\r\ntf 1.4.0\r\nscipy 0.19.1\r\nnumpy 1.13.1\r\n\r\nTF error:\r\nrelError():\r\n2.51723807688e-11\r\n2.20787161855e-09\r\n1.39922980127e-07\r\nerror():\r\n1.26221058554e-13\r\n2.72995514739e-11\r\n2.5727280163e-09\r\nNP error:\r\nrelError():\r\n4.08902237726e-29\r\n6.82474569015e-27\r\n8.05050948207e-25\r\nerror():\r\n4.08902237726e-29\r\n6.82474569015e-27\r\n8.05050948207e-25\r\n\r\nTF error:\r\nrelError():\r\n1.00672471898e-11\r\n1.62742361807e-10\r\n2.14752586388e-08\r\nerror():\r\n1.2714050306e-13\r\n2.48766311645e-11\r\n2.29909628833e-09\r\nNP error:\r\nrelError():\r\n9.99902717965e-29\r\n1.10272520665e-26\r\n2.09878555167e-24\r\nerror():\r\n9.99902717965e-29\r\n1.10272520665e-26\r\n2.09878555167e-24\r\n```"}