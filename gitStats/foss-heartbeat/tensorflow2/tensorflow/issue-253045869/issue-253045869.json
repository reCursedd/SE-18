{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12608", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12608/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12608/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12608/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/12608", "id": 253045869, "node_id": "MDU6SXNzdWUyNTMwNDU4Njk=", "number": 12608, "title": "gather_nd bounds checking not working", "user": {"login": "Timeroot", "id": 568733, "node_id": "MDQ6VXNlcjU2ODczMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/568733?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Timeroot", "html_url": "https://github.com/Timeroot", "followers_url": "https://api.github.com/users/Timeroot/followers", "following_url": "https://api.github.com/users/Timeroot/following{/other_user}", "gists_url": "https://api.github.com/users/Timeroot/gists{/gist_id}", "starred_url": "https://api.github.com/users/Timeroot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Timeroot/subscriptions", "organizations_url": "https://api.github.com/users/Timeroot/orgs", "repos_url": "https://api.github.com/users/Timeroot/repos", "events_url": "https://api.github.com/users/Timeroot/events{/privacy}", "received_events_url": "https://api.github.com/users/Timeroot/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-08-26T00:19:52Z", "updated_at": "2018-01-05T20:53:31Z", "closed_at": "2018-01-05T20:53:31Z", "author_association": "NONE", "body_html": "<p>When using <code>gather_nd</code>, sometimes out-of-bounds <code>indices</code> lead to errors (bounds checking -- the expected behavior) and sometimes it seems to just read zeros. I expect it reading just other memory from the GPU, but I've never observed anything <em>other</em> than zeros so I'm not sure. When I run on the CPU the bounds seem to be appropriately checked i.e. I get the errors desired. Here's some example code:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\nsess <span class=\"pl-k\">=</span> tf.Session()\n<span class=\"pl-c1\">print</span>(sess.run(tf.gather_nd(tf.zeros([<span class=\"pl-c1\">5</span>,<span class=\"pl-c1\">5</span>,<span class=\"pl-c1\">5</span>]) <span class=\"pl-k\">+</span> <span class=\"pl-c1\">1</span>, [[<span class=\"pl-c1\">6</span>,<span class=\"pl-c1\">6</span>,<span class=\"pl-c1\">6</span>]])))\n<span class=\"pl-c1\">print</span>(sess.run(tf.gather_nd(tf.zeros([<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">5</span>]) <span class=\"pl-k\">+</span> <span class=\"pl-c1\">1</span>, [<span class=\"pl-k\">-</span><span class=\"pl-c1\">50000000000000000</span>])))\n<span class=\"pl-c1\">print</span>(sess.run(tf.gather_nd(tf.reshape(tf.range(<span class=\"pl-c1\">5</span><span class=\"pl-k\">*</span><span class=\"pl-c1\">5</span><span class=\"pl-k\">*</span><span class=\"pl-c1\">5</span>), [<span class=\"pl-c1\">5</span>,<span class=\"pl-c1\">5</span>,<span class=\"pl-c1\">5</span>]), [[<span class=\"pl-c1\">6</span>,<span class=\"pl-c1\">6</span>,<span class=\"pl-c1\">6</span>]])))</pre></div>\n<p>The first two print statements execute successfully, which is a bug: the indices are clearly out of range, and the arrays are clearly all 1's; but instead it returns an appropriately shaped array of 0's. (The +1 is not necessary to trigger the bug, but highlights that it's drawing from incorrect memory). The third line, for some reason, has the bounds checking operate correctly, and says that -- yes -- the index [6,6,6] is not in the bounds. It appears to something based on what the previous op is, <em>maybe</em>? Where some ops, such as <code>stack</code>, allow me to go outside the bounds, while others such as <code>reshape</code> don't. Here's an example interactive session to show the output I get.</p>\n<div class=\"highlight highlight-source-python\"><pre>Python <span class=\"pl-c1\">3.5</span>.2 (default, Nov <span class=\"pl-c1\">17</span> <span class=\"pl-c1\">2016</span>, <span class=\"pl-c1\">17</span>:<span class=\"pl-c1\">0<span class=\"pl-ii\">5</span></span>:<span class=\"pl-c1\">23</span>) \n[<span class=\"pl-c1\">GCC</span> <span class=\"pl-c1\">5.4</span>.0 <span class=\"pl-c1\">20160609</span>] on linux\nType <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>help<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>copyright<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>credits<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">or</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>license<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">for</span> more information.\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> sess <span class=\"pl-k\">=</span> tf.Session()\n<span class=\"pl-c1\">2017</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">0<span class=\"pl-ii\">8</span></span><span class=\"pl-k\">-</span><span class=\"pl-c1\">25</span> <span class=\"pl-c1\">17</span>:<span class=\"pl-c1\">10</span>:<span class=\"pl-c1\">43.788433</span>: W tensorflow<span class=\"pl-k\">/</span>core<span class=\"pl-k\">/</span>platform<span class=\"pl-k\">/</span>cpu_feature_guard.cc:<span class=\"pl-c1\">45</span>] The TensorFlow library wasn<span class=\"pl-s\"><span class=\"pl-pds\">'</span>t compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.<span class=\"pl-ii\"></span></span>\n<span class=\"pl-c1\">2017</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">0<span class=\"pl-ii\">8</span></span><span class=\"pl-k\">-</span><span class=\"pl-c1\">25</span> <span class=\"pl-c1\">17</span>:<span class=\"pl-c1\">10</span>:<span class=\"pl-c1\">43.788455</span>: W tensorflow<span class=\"pl-k\">/</span>core<span class=\"pl-k\">/</span>platform<span class=\"pl-k\">/</span>cpu_feature_guard.cc:<span class=\"pl-c1\">45</span>] The TensorFlow library wasn<span class=\"pl-s\"><span class=\"pl-pds\">'</span>t compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.<span class=\"pl-ii\"></span></span>\n<span class=\"pl-c1\">2017</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">0<span class=\"pl-ii\">8</span></span><span class=\"pl-k\">-</span><span class=\"pl-c1\">25</span> <span class=\"pl-c1\">17</span>:<span class=\"pl-c1\">10</span>:<span class=\"pl-c1\">43.788463</span>: W tensorflow<span class=\"pl-k\">/</span>core<span class=\"pl-k\">/</span>platform<span class=\"pl-k\">/</span>cpu_feature_guard.cc:<span class=\"pl-c1\">45</span>] The TensorFlow library wasn<span class=\"pl-s\"><span class=\"pl-pds\">'</span>t compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.<span class=\"pl-ii\"></span></span>\n<span class=\"pl-c1\">2017</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">0<span class=\"pl-ii\">8</span></span><span class=\"pl-k\">-</span><span class=\"pl-c1\">25</span> <span class=\"pl-c1\">17</span>:<span class=\"pl-c1\">10</span>:<span class=\"pl-c1\">43.788466</span>: W tensorflow<span class=\"pl-k\">/</span>core<span class=\"pl-k\">/</span>platform<span class=\"pl-k\">/</span>cpu_feature_guard.cc:<span class=\"pl-c1\">45</span>] The TensorFlow library wasn<span class=\"pl-s\"><span class=\"pl-pds\">'</span>t compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.<span class=\"pl-ii\"></span></span>\n<span class=\"pl-c1\">2017</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">0<span class=\"pl-ii\">8</span></span><span class=\"pl-k\">-</span><span class=\"pl-c1\">25</span> <span class=\"pl-c1\">17</span>:<span class=\"pl-c1\">10</span>:<span class=\"pl-c1\">43.788470</span>: W tensorflow<span class=\"pl-k\">/</span>core<span class=\"pl-k\">/</span>platform<span class=\"pl-k\">/</span>cpu_feature_guard.cc:<span class=\"pl-c1\">45</span>] The TensorFlow library wasn<span class=\"pl-s\"><span class=\"pl-pds\">'</span>t compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.<span class=\"pl-ii\"></span></span>\n<span class=\"pl-c1\">2017</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">0<span class=\"pl-ii\">8</span></span><span class=\"pl-k\">-</span><span class=\"pl-c1\">25</span> <span class=\"pl-c1\">17</span>:<span class=\"pl-c1\">10</span>:<span class=\"pl-c1\">43.919384</span>: I tensorflow<span class=\"pl-k\">/</span>stream_executor<span class=\"pl-k\">/</span>cuda<span class=\"pl-k\">/</span>cuda_gpu_executor.cc:<span class=\"pl-c1\">893</span>] successful <span class=\"pl-c1\">NUMA</span> node read <span class=\"pl-k\">from</span> SysFS had negative value (<span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>), but there must be at least one <span class=\"pl-c1\">NUMA</span> node, so returning <span class=\"pl-c1\">NUMA</span> node zero\n<span class=\"pl-c1\">2017</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">0<span class=\"pl-ii\">8</span></span><span class=\"pl-k\">-</span><span class=\"pl-c1\">25</span> <span class=\"pl-c1\">17</span>:<span class=\"pl-c1\">10</span>:<span class=\"pl-c1\">43.919779</span>: I tensorflow<span class=\"pl-k\">/</span>core<span class=\"pl-k\">/</span>common_runtime<span class=\"pl-k\">/</span>gpu<span class=\"pl-k\">/</span>gpu_device.cc:<span class=\"pl-c1\">955</span>] Found device <span class=\"pl-c1\">0</span> <span class=\"pl-k\">with</span> properties: \nname: GeForce <span class=\"pl-c1\">GTX</span> <span class=\"pl-c1\">1070</span>\nmajor: <span class=\"pl-c1\">6</span> minor: <span class=\"pl-c1\">1</span> memoryClockRate (GHz) <span class=\"pl-c1\">1.645</span>\npciBusID <span class=\"pl-c1\">0000</span>:<span class=\"pl-c1\">0<span class=\"pl-ii\">1</span></span>:<span class=\"pl-c1\">00.0</span>\nTotal memory: <span class=\"pl-c1\">7.</span><span class=\"pl-ii\">92GiB</span>\nFree memory: <span class=\"pl-c1\">7.</span><span class=\"pl-ii\">59GiB</span>\n<span class=\"pl-c1\">2017</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">0<span class=\"pl-ii\">8</span></span><span class=\"pl-k\">-</span><span class=\"pl-c1\">25</span> <span class=\"pl-c1\">17</span>:<span class=\"pl-c1\">10</span>:<span class=\"pl-c1\">43.919795</span>: I tensorflow<span class=\"pl-k\">/</span>core<span class=\"pl-k\">/</span>common_runtime<span class=\"pl-k\">/</span>gpu<span class=\"pl-k\">/</span>gpu_device.cc:<span class=\"pl-c1\">976</span>] <span class=\"pl-c1\">DMA</span>: <span class=\"pl-c1\">0</span> \n<span class=\"pl-c1\">2017</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">0<span class=\"pl-ii\">8</span></span><span class=\"pl-k\">-</span><span class=\"pl-c1\">25</span> <span class=\"pl-c1\">17</span>:<span class=\"pl-c1\">10</span>:<span class=\"pl-c1\">43.919801</span>: I tensorflow<span class=\"pl-k\">/</span>core<span class=\"pl-k\">/</span>common_runtime<span class=\"pl-k\">/</span>gpu<span class=\"pl-k\">/</span>gpu_device.cc:<span class=\"pl-c1\">986</span>] <span class=\"pl-c1\">0</span>:   Y \n<span class=\"pl-c1\">2017</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">0<span class=\"pl-ii\">8</span></span><span class=\"pl-k\">-</span><span class=\"pl-c1\">25</span> <span class=\"pl-c1\">17</span>:<span class=\"pl-c1\">10</span>:<span class=\"pl-c1\">43.919814</span>: I tensorflow<span class=\"pl-k\">/</span>core<span class=\"pl-k\">/</span>common_runtime<span class=\"pl-k\">/</span>gpu<span class=\"pl-k\">/</span>gpu_device.cc:<span class=\"pl-c1\">1045</span>] Creating TensorFlow device (<span class=\"pl-k\">/</span>gpu:<span class=\"pl-c1\">0</span>) <span class=\"pl-ii\">-&gt;</span> (device: <span class=\"pl-c1\">0</span>, name: GeForce <span class=\"pl-c1\">GTX</span> <span class=\"pl-c1\">1070</span>, pci bus <span class=\"pl-c1\">id</span>: <span class=\"pl-c1\">0000</span>:<span class=\"pl-c1\">0<span class=\"pl-ii\">1</span></span>:<span class=\"pl-c1\">00.0</span>)\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> sess.run(tf.gather_nd(tf.zeros([<span class=\"pl-c1\">5</span>,<span class=\"pl-c1\">5</span>,<span class=\"pl-c1\">5</span>]) <span class=\"pl-k\">+</span> <span class=\"pl-c1\">1</span>, [[<span class=\"pl-c1\">6</span>,<span class=\"pl-c1\">6</span>,<span class=\"pl-c1\">6</span>]]))\narray([ <span class=\"pl-c1\">0</span>.], <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>float32)\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> sess.run(tf.gather_nd(tf.zeros([<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">5</span>]) <span class=\"pl-k\">+</span> <span class=\"pl-c1\">1</span>, [<span class=\"pl-k\">-</span><span class=\"pl-c1\">50000000000000000</span>]))\narray([ <span class=\"pl-c1\">0</span>.,  <span class=\"pl-c1\">0</span>.,  <span class=\"pl-c1\">0</span>.,  <span class=\"pl-c1\">0</span>.,  <span class=\"pl-c1\">0</span>.], <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>float32)\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> sess.run(tf.gather_nd(tf.reshape(tf.range(<span class=\"pl-c1\">5</span><span class=\"pl-k\">*</span><span class=\"pl-c1\">5</span><span class=\"pl-k\">*</span><span class=\"pl-c1\">5</span>), [<span class=\"pl-c1\">5</span>,<span class=\"pl-c1\">5</span>,<span class=\"pl-c1\">5</span>]), [[<span class=\"pl-c1\">6</span>,<span class=\"pl-c1\">6</span>,<span class=\"pl-c1\">6</span>]]))\nTraceback (most recent call last):\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">1327</span>, <span class=\"pl-k\">in</span> _do_call\n    <span class=\"pl-k\">return</span> fn(<span class=\"pl-k\">*</span>args)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">1306</span>, <span class=\"pl-k\">in</span> _run_fn\n    status, run_metadata)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/lib/python3.5/contextlib.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">66</span>, <span class=\"pl-k\">in</span> <span class=\"pl-c1\">__exit__</span>\n    <span class=\"pl-c1\">next</span>(<span class=\"pl-c1\">self</span>.gen)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/errors_impl.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">466</span>, <span class=\"pl-k\">in</span> raise_exception_on_not_ok_status\n    pywrap_tensorflow.TF_GetCode(status))\ntensorflow.python.framework.errors_impl.InvalidArgumentError: flat indices[<span class=\"pl-c1\">0</span>, :] <span class=\"pl-k\">=</span> [<span class=\"pl-c1\">6</span>, <span class=\"pl-c1\">6</span>, <span class=\"pl-c1\">6</span>] does <span class=\"pl-k\">not</span> index into param (shape: [<span class=\"pl-c1\">5</span>,<span class=\"pl-c1\">5</span>,<span class=\"pl-c1\">5</span>]).\n\t [[Node: GatherNd_2 = GatherNd[Tindices=<span class=\"pl-c1\">DT_INT32</span>, Tparams=<span class=\"pl-c1\">DT_INT32</span>, _device=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/job:localhost/replica:0/task:0/cpu:0<span class=\"pl-pds\">\"</span></span>](Reshape<span class=\"pl-k\">/</span>_7, GatherNd_2<span class=\"pl-k\">/</span>indices)]]\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>&lt;stdin&gt;<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">1</span>, <span class=\"pl-k\">in</span> <span class=\"pl-k\">&lt;</span>module<span class=\"pl-k\">&gt;</span>\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">895</span>, <span class=\"pl-k\">in</span> run\n    run_metadata_ptr)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">1124</span>, <span class=\"pl-k\">in</span> _run\n    feed_dict_tensor, options, run_metadata)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">1321</span>, <span class=\"pl-k\">in</span> _do_run\n    options, run_metadata)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">1340</span>, <span class=\"pl-k\">in</span> _do_call\n    <span class=\"pl-k\">raise</span> <span class=\"pl-c1\">type</span>(e)(node_def, op, message)\ntensorflow.python.framework.errors_impl.InvalidArgumentError: flat indices[<span class=\"pl-c1\">0</span>, :] <span class=\"pl-k\">=</span> [<span class=\"pl-c1\">6</span>, <span class=\"pl-c1\">6</span>, <span class=\"pl-c1\">6</span>] does <span class=\"pl-k\">not</span> index into param (shape: [<span class=\"pl-c1\">5</span>,<span class=\"pl-c1\">5</span>,<span class=\"pl-c1\">5</span>]).\n\t [[Node: GatherNd_2 = GatherNd[Tindices=<span class=\"pl-c1\">DT_INT32</span>, Tparams=<span class=\"pl-c1\">DT_INT32</span>, _device=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/job:localhost/replica:0/task:0/cpu:0<span class=\"pl-pds\">\"</span></span>](Reshape<span class=\"pl-k\">/</span>_7, GatherNd_2<span class=\"pl-k\">/</span>indices)]]\n\nCaused by op <span class=\"pl-s\"><span class=\"pl-pds\">'</span>GatherNd_2<span class=\"pl-pds\">'</span></span>, defined at:\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>&lt;stdin&gt;<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">1</span>, <span class=\"pl-k\">in</span> <span class=\"pl-k\">&lt;</span>module<span class=\"pl-k\">&gt;</span>\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/gen_array_ops.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">1338</span>, <span class=\"pl-k\">in</span> gather_nd\n    name<span class=\"pl-k\">=</span>name)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/op_def_library.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">767</span>, <span class=\"pl-k\">in</span> apply_op\n    op_def<span class=\"pl-k\">=</span>op_def)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">2630</span>, <span class=\"pl-k\">in</span> create_op\n    original_op<span class=\"pl-k\">=</span><span class=\"pl-c1\">self</span>._default_original_op, op_def<span class=\"pl-k\">=</span>op_def)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">1204</span>, <span class=\"pl-k\">in</span> <span class=\"pl-c1\">__init__</span>\n    <span class=\"pl-c1\">self</span>._traceback <span class=\"pl-k\">=</span> <span class=\"pl-c1\">self</span>._graph._extract_stack()  <span class=\"pl-c\"><span class=\"pl-c\">#</span> pylint: disable=protected-access</span>\n\nInvalidArgumentError (see above <span class=\"pl-k\">for</span> traceback): flat indices[<span class=\"pl-c1\">0</span>, :] <span class=\"pl-k\">=</span> [<span class=\"pl-c1\">6</span>, <span class=\"pl-c1\">6</span>, <span class=\"pl-c1\">6</span>] does <span class=\"pl-k\">not</span> index into param (shape: [<span class=\"pl-c1\">5</span>,<span class=\"pl-c1\">5</span>,<span class=\"pl-c1\">5</span>]).\n\t [[Node: GatherNd_2 = GatherNd[Tindices=<span class=\"pl-c1\">DT_INT32</span>, Tparams=<span class=\"pl-c1\">DT_INT32</span>, _device=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/job:localhost/replica:0/task:0/cpu:0<span class=\"pl-pds\">\"</span></span>](Reshape<span class=\"pl-k\">/</span>_7, GatherNd_2<span class=\"pl-k\">/</span>indices)]]</pre></div>\n<p>Version info:<br>\nLinux Mint 4.4.0-53-generic x86_64<br>\nPython version 3.5.2<br>\nCUDA version release 8.0, V8.0.61<br>\ncuDNN version 6.0.21<br>\nTensorflow version v1.3.0-rc2-20-g0787eee 1.3.0<br>\nnvidia drivers version 375</p>", "body_text": "When using gather_nd, sometimes out-of-bounds indices lead to errors (bounds checking -- the expected behavior) and sometimes it seems to just read zeros. I expect it reading just other memory from the GPU, but I've never observed anything other than zeros so I'm not sure. When I run on the CPU the bounds seem to be appropriately checked i.e. I get the errors desired. Here's some example code:\nimport tensorflow as tf\nsess = tf.Session()\nprint(sess.run(tf.gather_nd(tf.zeros([5,5,5]) + 1, [[6,6,6]])))\nprint(sess.run(tf.gather_nd(tf.zeros([1,5]) + 1, [-50000000000000000])))\nprint(sess.run(tf.gather_nd(tf.reshape(tf.range(5*5*5), [5,5,5]), [[6,6,6]])))\nThe first two print statements execute successfully, which is a bug: the indices are clearly out of range, and the arrays are clearly all 1's; but instead it returns an appropriately shaped array of 0's. (The +1 is not necessary to trigger the bug, but highlights that it's drawing from incorrect memory). The third line, for some reason, has the bounds checking operate correctly, and says that -- yes -- the index [6,6,6] is not in the bounds. It appears to something based on what the previous op is, maybe? Where some ops, such as stack, allow me to go outside the bounds, while others such as reshape don't. Here's an example interactive session to show the output I get.\nPython 3.5.2 (default, Nov 17 2016, 17:05:23) \n[GCC 5.4.0 20160609] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import tensorflow as tf\n>>> sess = tf.Session()\n2017-08-25 17:10:43.788433: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.\n2017-08-25 17:10:43.788455: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\n2017-08-25 17:10:43.788463: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\n2017-08-25 17:10:43.788466: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.\n2017-08-25 17:10:43.788470: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.\n2017-08-25 17:10:43.919384: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:893] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n2017-08-25 17:10:43.919779: I tensorflow/core/common_runtime/gpu/gpu_device.cc:955] Found device 0 with properties: \nname: GeForce GTX 1070\nmajor: 6 minor: 1 memoryClockRate (GHz) 1.645\npciBusID 0000:01:00.0\nTotal memory: 7.92GiB\nFree memory: 7.59GiB\n2017-08-25 17:10:43.919795: I tensorflow/core/common_runtime/gpu/gpu_device.cc:976] DMA: 0 \n2017-08-25 17:10:43.919801: I tensorflow/core/common_runtime/gpu/gpu_device.cc:986] 0:   Y \n2017-08-25 17:10:43.919814: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1045] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1070, pci bus id: 0000:01:00.0)\n>>> sess.run(tf.gather_nd(tf.zeros([5,5,5]) + 1, [[6,6,6]]))\narray([ 0.], dtype=float32)\n>>> sess.run(tf.gather_nd(tf.zeros([1,5]) + 1, [-50000000000000000]))\narray([ 0.,  0.,  0.,  0.,  0.], dtype=float32)\n>>> sess.run(tf.gather_nd(tf.reshape(tf.range(5*5*5), [5,5,5]), [[6,6,6]]))\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1327, in _do_call\n    return fn(*args)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1306, in _run_fn\n    status, run_metadata)\n  File \"/usr/lib/python3.5/contextlib.py\", line 66, in __exit__\n    next(self.gen)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/errors_impl.py\", line 466, in raise_exception_on_not_ok_status\n    pywrap_tensorflow.TF_GetCode(status))\ntensorflow.python.framework.errors_impl.InvalidArgumentError: flat indices[0, :] = [6, 6, 6] does not index into param (shape: [5,5,5]).\n\t [[Node: GatherNd_2 = GatherNd[Tindices=DT_INT32, Tparams=DT_INT32, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](Reshape/_7, GatherNd_2/indices)]]\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 895, in run\n    run_metadata_ptr)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1124, in _run\n    feed_dict_tensor, options, run_metadata)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1321, in _do_run\n    options, run_metadata)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1340, in _do_call\n    raise type(e)(node_def, op, message)\ntensorflow.python.framework.errors_impl.InvalidArgumentError: flat indices[0, :] = [6, 6, 6] does not index into param (shape: [5,5,5]).\n\t [[Node: GatherNd_2 = GatherNd[Tindices=DT_INT32, Tparams=DT_INT32, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](Reshape/_7, GatherNd_2/indices)]]\n\nCaused by op 'GatherNd_2', defined at:\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/gen_array_ops.py\", line 1338, in gather_nd\n    name=name)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/op_def_library.py\", line 767, in apply_op\n    op_def=op_def)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 2630, in create_op\n    original_op=self._default_original_op, op_def=op_def)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 1204, in __init__\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\n\nInvalidArgumentError (see above for traceback): flat indices[0, :] = [6, 6, 6] does not index into param (shape: [5,5,5]).\n\t [[Node: GatherNd_2 = GatherNd[Tindices=DT_INT32, Tparams=DT_INT32, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](Reshape/_7, GatherNd_2/indices)]]\nVersion info:\nLinux Mint 4.4.0-53-generic x86_64\nPython version 3.5.2\nCUDA version release 8.0, V8.0.61\ncuDNN version 6.0.21\nTensorflow version v1.3.0-rc2-20-g0787eee 1.3.0\nnvidia drivers version 375", "body": "When using `gather_nd`, sometimes out-of-bounds `indices` lead to errors (bounds checking -- the expected behavior) and sometimes it seems to just read zeros. I expect it reading just other memory from the GPU, but I've never observed anything _other_ than zeros so I'm not sure. When I run on the CPU the bounds seem to be appropriately checked i.e. I get the errors desired. Here's some example code:\r\n\r\n```python\r\nimport tensorflow as tf\r\nsess = tf.Session()\r\nprint(sess.run(tf.gather_nd(tf.zeros([5,5,5]) + 1, [[6,6,6]])))\r\nprint(sess.run(tf.gather_nd(tf.zeros([1,5]) + 1, [-50000000000000000])))\r\nprint(sess.run(tf.gather_nd(tf.reshape(tf.range(5*5*5), [5,5,5]), [[6,6,6]])))\r\n```\r\n\r\nThe first two print statements execute successfully, which is a bug: the indices are clearly out of range, and the arrays are clearly all 1's; but instead it returns an appropriately shaped array of 0's. (The +1 is not necessary to trigger the bug, but highlights that it's drawing from incorrect memory). The third line, for some reason, has the bounds checking operate correctly, and says that -- yes -- the index [6,6,6] is not in the bounds. It appears to something based on what the previous op is, _maybe_? Where some ops, such as `stack`, allow me to go outside the bounds, while others such as `reshape` don't. Here's an example interactive session to show the output I get.\r\n\r\n```python\r\nPython 3.5.2 (default, Nov 17 2016, 17:05:23) \r\n[GCC 5.4.0 20160609] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import tensorflow as tf\r\n>>> sess = tf.Session()\r\n2017-08-25 17:10:43.788433: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.\r\n2017-08-25 17:10:43.788455: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\r\n2017-08-25 17:10:43.788463: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\r\n2017-08-25 17:10:43.788466: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.\r\n2017-08-25 17:10:43.788470: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.\r\n2017-08-25 17:10:43.919384: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:893] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\r\n2017-08-25 17:10:43.919779: I tensorflow/core/common_runtime/gpu/gpu_device.cc:955] Found device 0 with properties: \r\nname: GeForce GTX 1070\r\nmajor: 6 minor: 1 memoryClockRate (GHz) 1.645\r\npciBusID 0000:01:00.0\r\nTotal memory: 7.92GiB\r\nFree memory: 7.59GiB\r\n2017-08-25 17:10:43.919795: I tensorflow/core/common_runtime/gpu/gpu_device.cc:976] DMA: 0 \r\n2017-08-25 17:10:43.919801: I tensorflow/core/common_runtime/gpu/gpu_device.cc:986] 0:   Y \r\n2017-08-25 17:10:43.919814: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1045] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1070, pci bus id: 0000:01:00.0)\r\n>>> sess.run(tf.gather_nd(tf.zeros([5,5,5]) + 1, [[6,6,6]]))\r\narray([ 0.], dtype=float32)\r\n>>> sess.run(tf.gather_nd(tf.zeros([1,5]) + 1, [-50000000000000000]))\r\narray([ 0.,  0.,  0.,  0.,  0.], dtype=float32)\r\n>>> sess.run(tf.gather_nd(tf.reshape(tf.range(5*5*5), [5,5,5]), [[6,6,6]]))\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1327, in _do_call\r\n    return fn(*args)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1306, in _run_fn\r\n    status, run_metadata)\r\n  File \"/usr/lib/python3.5/contextlib.py\", line 66, in __exit__\r\n    next(self.gen)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/errors_impl.py\", line 466, in raise_exception_on_not_ok_status\r\n    pywrap_tensorflow.TF_GetCode(status))\r\ntensorflow.python.framework.errors_impl.InvalidArgumentError: flat indices[0, :] = [6, 6, 6] does not index into param (shape: [5,5,5]).\r\n\t [[Node: GatherNd_2 = GatherNd[Tindices=DT_INT32, Tparams=DT_INT32, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](Reshape/_7, GatherNd_2/indices)]]\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 895, in run\r\n    run_metadata_ptr)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1124, in _run\r\n    feed_dict_tensor, options, run_metadata)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1321, in _do_run\r\n    options, run_metadata)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/client/session.py\", line 1340, in _do_call\r\n    raise type(e)(node_def, op, message)\r\ntensorflow.python.framework.errors_impl.InvalidArgumentError: flat indices[0, :] = [6, 6, 6] does not index into param (shape: [5,5,5]).\r\n\t [[Node: GatherNd_2 = GatherNd[Tindices=DT_INT32, Tparams=DT_INT32, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](Reshape/_7, GatherNd_2/indices)]]\r\n\r\nCaused by op 'GatherNd_2', defined at:\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/gen_array_ops.py\", line 1338, in gather_nd\r\n    name=name)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/op_def_library.py\", line 767, in apply_op\r\n    op_def=op_def)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 2630, in create_op\r\n    original_op=self._default_original_op, op_def=op_def)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 1204, in __init__\r\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\r\n\r\nInvalidArgumentError (see above for traceback): flat indices[0, :] = [6, 6, 6] does not index into param (shape: [5,5,5]).\r\n\t [[Node: GatherNd_2 = GatherNd[Tindices=DT_INT32, Tparams=DT_INT32, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](Reshape/_7, GatherNd_2/indices)]]\r\n```\r\n\r\nVersion info:\r\nLinux Mint 4.4.0-53-generic x86_64\r\nPython version 3.5.2\r\nCUDA version release 8.0, V8.0.61\r\ncuDNN version 6.0.21\r\nTensorflow version v1.3.0-rc2-20-g0787eee 1.3.0\r\nnvidia drivers version 375\r\n\r\n"}