{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/285574852", "html_url": "https://github.com/tensorflow/tensorflow/issues/8244#issuecomment-285574852", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8244", "id": 285574852, "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTU3NDg1Mg==", "user": {"login": "mdymczyk", "id": 1208615, "node_id": "MDQ6VXNlcjEyMDg2MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1208615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdymczyk", "html_url": "https://github.com/mdymczyk", "followers_url": "https://api.github.com/users/mdymczyk/followers", "following_url": "https://api.github.com/users/mdymczyk/following{/other_user}", "gists_url": "https://api.github.com/users/mdymczyk/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdymczyk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdymczyk/subscriptions", "organizations_url": "https://api.github.com/users/mdymczyk/orgs", "repos_url": "https://api.github.com/users/mdymczyk/repos", "events_url": "https://api.github.com/users/mdymczyk/events{/privacy}", "received_events_url": "https://api.github.com/users/mdymczyk/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-10T04:28:17Z", "updated_at": "2017-03-10T04:29:22Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=16018\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/asimshankar\">@asimshankar</a> this is really great stuff, the timings improved exactly by an order of magnitude as you said, thanks! A batch of 128 takes around 0.2s and the batch of 32 takes around 0.04s. Still I think a bit slower than what Python does but definitely I can work with that, thanks!</p>\n<p>Maybe you could add a note in the Java doc about this? I was suspecting the reflection to take a long time in <code>Tensorflow.create(Object)</code> but wasn't sure if that was the main cause.</p>", "body_text": "@asimshankar this is really great stuff, the timings improved exactly by an order of magnitude as you said, thanks! A batch of 128 takes around 0.2s and the batch of 32 takes around 0.04s. Still I think a bit slower than what Python does but definitely I can work with that, thanks!\nMaybe you could add a note in the Java doc about this? I was suspecting the reflection to take a long time in Tensorflow.create(Object) but wasn't sure if that was the main cause.", "body": "@asimshankar this is really great stuff, the timings improved exactly by an order of magnitude as you said, thanks! A batch of 128 takes around 0.2s and the batch of 32 takes around 0.04s. Still I think a bit slower than what Python does but definitely I can work with that, thanks!\r\n\r\nMaybe you could add a note in the Java doc about this? I was suspecting the reflection to take a long time in `Tensorflow.create(Object)` but wasn't sure if that was the main cause."}