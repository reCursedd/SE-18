{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5852", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5852/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5852/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5852/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/5852", "id": 191657140, "node_id": "MDU6SXNzdWUxOTE2NTcxNDA=", "number": 5852, "title": "tf.contrib.metrics.accuracy doesn't have expected weights behavior", "user": {"login": "cbockman", "id": 4667922, "node_id": "MDQ6VXNlcjQ2Njc5MjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/4667922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cbockman", "html_url": "https://github.com/cbockman", "followers_url": "https://api.github.com/users/cbockman/followers", "following_url": "https://api.github.com/users/cbockman/following{/other_user}", "gists_url": "https://api.github.com/users/cbockman/gists{/gist_id}", "starred_url": "https://api.github.com/users/cbockman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cbockman/subscriptions", "organizations_url": "https://api.github.com/users/cbockman/orgs", "repos_url": "https://api.github.com/users/cbockman/repos", "events_url": "https://api.github.com/users/cbockman/events{/privacy}", "received_events_url": "https://api.github.com/users/cbockman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-25T09:22:24Z", "updated_at": "2016-11-25T09:24:40Z", "closed_at": "2016-11-25T09:24:40Z", "author_association": "CONTRIBUTOR", "body_html": "<p>My assumption here is that 'weights' is intended to allow us to indicate that certain indices should be ignored entirely.</p>\n<p>Below code generates accuracy of .67, which seems wrong.  There are no weights-related unit tests for accuracy(), so I can't verify that this is unintended, but it seems inconsistent with the rest of the tf code base.</p>\n<pre><code>import tensorflow as tf\n\npreds=tf.Variable([1,1,1])\nlabels=tf.Variable([1,1,0])\nweights=tf.Variable([1,1,0])\n\nacc=tf.contrib.metrics.accuracy(preds, labels, tf.to_float(weights))\n\nwith tf.Session() as sess:\n    sess.run(tf.initialize_all_variables())\n\n    acc=sess.run(acc)\n    print(acc)\n</code></pre>", "body_text": "My assumption here is that 'weights' is intended to allow us to indicate that certain indices should be ignored entirely.\nBelow code generates accuracy of .67, which seems wrong.  There are no weights-related unit tests for accuracy(), so I can't verify that this is unintended, but it seems inconsistent with the rest of the tf code base.\nimport tensorflow as tf\n\npreds=tf.Variable([1,1,1])\nlabels=tf.Variable([1,1,0])\nweights=tf.Variable([1,1,0])\n\nacc=tf.contrib.metrics.accuracy(preds, labels, tf.to_float(weights))\n\nwith tf.Session() as sess:\n    sess.run(tf.initialize_all_variables())\n\n    acc=sess.run(acc)\n    print(acc)", "body": "My assumption here is that 'weights' is intended to allow us to indicate that certain indices should be ignored entirely.\r\n\r\nBelow code generates accuracy of .67, which seems wrong.  There are no weights-related unit tests for accuracy(), so I can't verify that this is unintended, but it seems inconsistent with the rest of the tf code base.\r\n\r\n```\r\nimport tensorflow as tf\r\n\r\npreds=tf.Variable([1,1,1])\r\nlabels=tf.Variable([1,1,0])\r\nweights=tf.Variable([1,1,0])\r\n\r\nacc=tf.contrib.metrics.accuracy(preds, labels, tf.to_float(weights))\r\n\r\nwith tf.Session() as sess:\r\n    sess.run(tf.initialize_all_variables())\r\n\r\n    acc=sess.run(acc)\r\n    print(acc)\r\n```"}