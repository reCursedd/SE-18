{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/243910984", "html_url": "https://github.com/tensorflow/tensorflow/issues/3239#issuecomment-243910984", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3239", "id": 243910984, "node_id": "MDEyOklzc3VlQ29tbWVudDI0MzkxMDk4NA==", "user": {"login": "rryan", "id": 26527, "node_id": "MDQ6VXNlcjI2NTI3", "avatar_url": "https://avatars3.githubusercontent.com/u/26527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rryan", "html_url": "https://github.com/rryan", "followers_url": "https://api.github.com/users/rryan/followers", "following_url": "https://api.github.com/users/rryan/following{/other_user}", "gists_url": "https://api.github.com/users/rryan/gists{/gist_id}", "starred_url": "https://api.github.com/users/rryan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rryan/subscriptions", "organizations_url": "https://api.github.com/users/rryan/orgs", "repos_url": "https://api.github.com/users/rryan/repos", "events_url": "https://api.github.com/users/rryan/events{/privacy}", "received_events_url": "https://api.github.com/users/rryan/received_events", "type": "User", "site_admin": false}, "created_at": "2016-08-31T21:39:14Z", "updated_at": "2016-08-31T21:39:14Z", "author_association": "MEMBER", "body_html": "<p>Hm, I think I misread this bug initially -- it's intended behavior that for <code>tf.complex(x, y)</code>, x and y must have the same shape. Instead of <code>w * 0.0</code> you could do <code>tf.zeros_like(w)</code> to get a zero tensor of the same shape/dtype as w.</p>", "body_text": "Hm, I think I misread this bug initially -- it's intended behavior that for tf.complex(x, y), x and y must have the same shape. Instead of w * 0.0 you could do tf.zeros_like(w) to get a zero tensor of the same shape/dtype as w.", "body": "Hm, I think I misread this bug initially -- it's intended behavior that for `tf.complex(x, y)`, x and y must have the same shape. Instead of `w * 0.0` you could do `tf.zeros_like(w)` to get a zero tensor of the same shape/dtype as w.\n"}