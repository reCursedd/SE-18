{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21215", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21215/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21215/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21215/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/21215", "id": 345503936, "node_id": "MDExOlB1bGxSZXF1ZXN0MjA0NjI1ODcw", "number": 21215, "title": "use np.array to avoid copy behavior of index tensor for extract_image_patches", "user": {"login": "facaiy", "id": 1112263, "node_id": "MDQ6VXNlcjExMTIyNjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1112263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facaiy", "html_url": "https://github.com/facaiy", "followers_url": "https://api.github.com/users/facaiy/followers", "following_url": "https://api.github.com/users/facaiy/following{/other_user}", "gists_url": "https://api.github.com/users/facaiy/gists{/gist_id}", "starred_url": "https://api.github.com/users/facaiy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facaiy/subscriptions", "organizations_url": "https://api.github.com/users/facaiy/orgs", "repos_url": "https://api.github.com/users/facaiy/repos", "events_url": "https://api.github.com/users/facaiy/events{/privacy}", "received_events_url": "https://api.github.com/users/facaiy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-29T05:43:26Z", "updated_at": "2018-07-29T09:14:30Z", "closed_at": "2018-07-29T09:14:06Z", "author_association": "MEMBER", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21215", "html_url": "https://github.com/tensorflow/tensorflow/pull/21215", "diff_url": "https://github.com/tensorflow/tensorflow/pull/21215.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/21215.patch"}, "body_html": "<p>Related to <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"334057793\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/20146\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/20146/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/20146\">#20146</a>.</p>\n<p>It's slow to construct gradient of tf.extract_image_patches: ~ 136s for <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3367974\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/dbbert\">@dbbert</a> 's example.<br>\nAnd I find the performance bottlenecks are:</p>\n<ol>\n<li>construct <code>idx</code> array: ~22s</li>\n<li>copy from list to tf.int64 index_tensor when constructing <code>sp_mat</code>: ~110s</li>\n</ol>\n<p>In the PR, we pre-allocate a np.int64 array for <code>idx</code>. I think the result gets better, although it's still time consuming: ~ 38s</p>\n<ol>\n<li>construct <code>idx</code> array: ~30s</li>\n<li>copy: ~6s</li>\n</ol>", "body_text": "Related to #20146.\nIt's slow to construct gradient of tf.extract_image_patches: ~ 136s for @dbbert 's example.\nAnd I find the performance bottlenecks are:\n\nconstruct idx array: ~22s\ncopy from list to tf.int64 index_tensor when constructing sp_mat: ~110s\n\nIn the PR, we pre-allocate a np.int64 array for idx. I think the result gets better, although it's still time consuming: ~ 38s\n\nconstruct idx array: ~30s\ncopy: ~6s", "body": "Related to #20146.\r\n\r\nIt's slow to construct gradient of tf.extract_image_patches: ~ 136s for @dbbert 's example. \r\nAnd I find the performance bottlenecks are:\r\n1. construct `idx` array: ~22s\r\n2. copy from list to tf.int64 index_tensor when constructing `sp_mat`: ~110s\r\n\r\nIn the PR, we pre-allocate a np.int64 array for `idx`. I think the result gets better, although it's still time consuming: ~ 38s\r\n1. construct `idx` array: ~30s\r\n2. copy: ~6s"}