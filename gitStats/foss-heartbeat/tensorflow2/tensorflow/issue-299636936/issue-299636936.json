{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17214", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17214/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17214/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17214/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17214", "id": 299636936, "node_id": "MDU6SXNzdWUyOTk2MzY5MzY=", "number": 17214, "title": "Unimplemented: TensorArray has size zero, but element shape [24,24,?] is not fully defined. Currently only static shapes are supported when packing zero-size TensorArrays.", "user": {"login": "mrlzla", "id": 11842247, "node_id": "MDQ6VXNlcjExODQyMjQ3", "avatar_url": "https://avatars1.githubusercontent.com/u/11842247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrlzla", "html_url": "https://github.com/mrlzla", "followers_url": "https://api.github.com/users/mrlzla/followers", "following_url": "https://api.github.com/users/mrlzla/following{/other_user}", "gists_url": "https://api.github.com/users/mrlzla/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrlzla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrlzla/subscriptions", "organizations_url": "https://api.github.com/users/mrlzla/orgs", "repos_url": "https://api.github.com/users/mrlzla/repos", "events_url": "https://api.github.com/users/mrlzla/events{/privacy}", "received_events_url": "https://api.github.com/users/mrlzla/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-23T08:43:57Z", "updated_at": "2018-02-24T16:15:39Z", "closed_at": "2018-02-24T16:15:39Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: no</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: python version - pip, c++ version - makefile</li>\n<li><strong>TensorFlow version (use command below)</strong>: r1.5</li>\n<li><strong>Python version</strong>: 3.5.2</li>\n<li><strong>Bazel version (if compiling from source)</strong>:</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: 5.4.0</li>\n<li><strong>CUDA/cuDNN version</strong>:</li>\n<li><strong>GPU model and memory</strong>:</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I have tensorflow frozen graph. When I read it using python api everything is good but if I do it via c++ api it fails with the error:</p>\n<pre><code>Unimplemented: TensorArray has size zero, but element shape [24,24,?] is not fully defined. Currently only static shapes are supported when packing zero-size TensorArrays.\n\t [[Node: TensorArrayStack/TensorArrayGatherV3 = TensorArrayGatherV3[_class=[\"loc:@TensorArray\"], dtype=DT_INT32, element_shape=[24,24,?], _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](TensorArray, TensorArrayStack/range, while/Exit_1)]]\n</code></pre>\n<h3>Source code / logs</h3>\n<p>I guess this is the problem related with while_loop op. This is some part of code that constructs tensorflow graph:</p>\n<pre><code>dets = convert_to_square(boxes_c)\nnum_box = tf.shape(dets)[0]\nh = tf.shape(x)[0]\nw = tf.shape(x)[1]\nx0, y0, dy, dx, ex, ey, edx, edy, tmpw, tmph = pad(dets, h, w, num_box)\nx_int = tf.cast(x, tf.int32)\nims_resized = tf.TensorArray(tf.int32, num_box)\ni = 0\n[i, ims_resized, x_int, tmph, tmpw, dy, edy, dx, edx, y0, ey, x0, ex] = tf.while_loop(cond, generate,\n                            [i, ims_resized, x_int, tmph, tmpw, dy, edy, dx, edx, y0, ey, x0, ex])\n\nims_resized_normal_tensor0 = ims_resized.stack()\nims_resized_normal_tensor = (tf.cast(ims_resized_normal_tensor0, tf.float32) - 127.5) / 128.0\nims_resized = ims_resized.close()\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): no\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04\nTensorFlow installed from (source or binary): python version - pip, c++ version - makefile\nTensorFlow version (use command below): r1.5\nPython version: 3.5.2\nBazel version (if compiling from source):\nGCC/Compiler version (if compiling from source): 5.4.0\nCUDA/cuDNN version:\nGPU model and memory:\nExact command to reproduce:\n\nDescribe the problem\nI have tensorflow frozen graph. When I read it using python api everything is good but if I do it via c++ api it fails with the error:\nUnimplemented: TensorArray has size zero, but element shape [24,24,?] is not fully defined. Currently only static shapes are supported when packing zero-size TensorArrays.\n\t [[Node: TensorArrayStack/TensorArrayGatherV3 = TensorArrayGatherV3[_class=[\"loc:@TensorArray\"], dtype=DT_INT32, element_shape=[24,24,?], _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](TensorArray, TensorArrayStack/range, while/Exit_1)]]\n\nSource code / logs\nI guess this is the problem related with while_loop op. This is some part of code that constructs tensorflow graph:\ndets = convert_to_square(boxes_c)\nnum_box = tf.shape(dets)[0]\nh = tf.shape(x)[0]\nw = tf.shape(x)[1]\nx0, y0, dy, dx, ex, ey, edx, edy, tmpw, tmph = pad(dets, h, w, num_box)\nx_int = tf.cast(x, tf.int32)\nims_resized = tf.TensorArray(tf.int32, num_box)\ni = 0\n[i, ims_resized, x_int, tmph, tmpw, dy, edy, dx, edx, y0, ey, x0, ex] = tf.while_loop(cond, generate,\n                            [i, ims_resized, x_int, tmph, tmpw, dy, edy, dx, edx, y0, ey, x0, ex])\n\nims_resized_normal_tensor0 = ims_resized.stack()\nims_resized_normal_tensor = (tf.cast(ims_resized_normal_tensor0, tf.float32) - 127.5) / 128.0\nims_resized = ims_resized.close()", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: no\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: python version - pip, c++ version - makefile\r\n- **TensorFlow version (use command below)**: r1.5\r\n- **Python version**: 3.5.2\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**: 5.4.0\r\n- **CUDA/cuDNN version**: \r\n- **GPU model and memory**: \r\n- **Exact command to reproduce**:\r\n\r\n### Describe the problem\r\nI have tensorflow frozen graph. When I read it using python api everything is good but if I do it via c++ api it fails with the error:\r\n```\r\nUnimplemented: TensorArray has size zero, but element shape [24,24,?] is not fully defined. Currently only static shapes are supported when packing zero-size TensorArrays.\r\n\t [[Node: TensorArrayStack/TensorArrayGatherV3 = TensorArrayGatherV3[_class=[\"loc:@TensorArray\"], dtype=DT_INT32, element_shape=[24,24,?], _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](TensorArray, TensorArrayStack/range, while/Exit_1)]]\r\n```\r\n\r\n### Source code / logs\r\nI guess this is the problem related with while_loop op. This is some part of code that constructs tensorflow graph:\r\n```\r\ndets = convert_to_square(boxes_c)\r\nnum_box = tf.shape(dets)[0]\r\nh = tf.shape(x)[0]\r\nw = tf.shape(x)[1]\r\nx0, y0, dy, dx, ex, ey, edx, edy, tmpw, tmph = pad(dets, h, w, num_box)\r\nx_int = tf.cast(x, tf.int32)\r\nims_resized = tf.TensorArray(tf.int32, num_box)\r\ni = 0\r\n[i, ims_resized, x_int, tmph, tmpw, dy, edy, dx, edx, y0, ey, x0, ex] = tf.while_loop(cond, generate,\r\n                            [i, ims_resized, x_int, tmph, tmpw, dy, edy, dx, edx, y0, ey, x0, ex])\r\n\r\nims_resized_normal_tensor0 = ims_resized.stack()\r\nims_resized_normal_tensor = (tf.cast(ims_resized_normal_tensor0, tf.float32) - 127.5) / 128.0\r\nims_resized = ims_resized.close()\r\n```\r\n"}