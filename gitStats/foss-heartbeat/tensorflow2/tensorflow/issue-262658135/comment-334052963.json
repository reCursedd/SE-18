{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/334052963", "html_url": "https://github.com/tensorflow/tensorflow/issues/13482#issuecomment-334052963", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13482", "id": 334052963, "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDA1Mjk2Mw==", "user": {"login": "MartinZZZ", "id": 12166108, "node_id": "MDQ6VXNlcjEyMTY2MTA4", "avatar_url": "https://avatars0.githubusercontent.com/u/12166108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MartinZZZ", "html_url": "https://github.com/MartinZZZ", "followers_url": "https://api.github.com/users/MartinZZZ/followers", "following_url": "https://api.github.com/users/MartinZZZ/following{/other_user}", "gists_url": "https://api.github.com/users/MartinZZZ/gists{/gist_id}", "starred_url": "https://api.github.com/users/MartinZZZ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MartinZZZ/subscriptions", "organizations_url": "https://api.github.com/users/MartinZZZ/orgs", "repos_url": "https://api.github.com/users/MartinZZZ/repos", "events_url": "https://api.github.com/users/MartinZZZ/events{/privacy}", "received_events_url": "https://api.github.com/users/MartinZZZ/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-04T05:23:33Z", "updated_at": "2017-10-04T07:00:59Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=16018\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/asimshankar\">@asimshankar</a> Sorry for the misleading. The error message should be:<br>\n<code>ERROR: /home/tensorFlow_src/tensorflow/tensorflow/compiler/aot/tests/BUILD:128:1: undeclared inclusion(s) in rule '//tensorflow/compiler/aot/tests:my_binary': this rule is missing dependency declarations for the following files included by 'tensorflow/compiler/aot/tests/my_code.cc': '/home/tensorFlow_src/tensorflow/tensorflow/compiler/aot/tests/test_graph_tfmatmul.h' Target //tensorflow/compiler/aot/tests:my_binary failed to build Use --verbose_failures to see the command lines of failed build steps. INFO: Elapsed time: 1.467s, Critical Path: 1.14s FAILED: Build did NOT complete successfully </code></p>\n<p>The complete <code>BUILD</code> file:</p>\n<pre><code>licenses([\"notice\"])  # Apache 2.0\n\npackage(\n    default_visibility = [\"//visibility:private\"],\n)\n\nload(\"//tensorflow/compiler/aot:tfcompile.bzl\", \"tf_library\")\nload(\"//tensorflow:tensorflow.bzl\", \"tf_cc_test\")\n\ntest_suite(\n    name = \"all_tests\",\n    tags = [\"manual\"],\n    tests = [\n        \":test_graph_tfadd_test\",\n        \":test_graph_tfadd_with_ckpt_saver_test\",\n        \":test_graph_tfadd_with_ckpt_test\",\n        \":test_graph_tffunction_test\",\n        \":test_graph_tfgather_test\",\n        \":test_graph_tfmatmul_test\",\n        \":test_graph_tfmatmulandadd_test\",\n        \":test_graph_tfsplits_test\",\n        \":tfcompile_test\",\n    ],\n)\n\npy_binary(\n    name = \"make_test_graphs\",\n    testonly = 1,\n    srcs = [\"make_test_graphs.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/python\",  # TODO(b/34059704): remove when fixed\n        \"//tensorflow/python:array_ops\",\n        \"//tensorflow/python:client\",\n        \"//tensorflow/python:framework_for_generated_wrappers\",\n        \"//tensorflow/python:math_ops\",\n        \"//tensorflow/python:platform\",\n        \"//tensorflow/python:session\",\n        \"//tensorflow/python:training\",\n        \"//tensorflow/python:variables\",\n    ],\n)\n\ngenrule(\n    name = \"gen_test_graphs\",\n    testonly = 1,\n    outs = [\n        \"test_graph_tfadd.pb\",\n        \"test_graph_tfadd_with_ckpt.ckpt\",\n        \"test_graph_tfadd_with_ckpt.pb\",\n        \"test_graph_tfadd_with_ckpt_saver.ckpt\",\n        \"test_graph_tfadd_with_ckpt_saver.pb\",\n        \"test_graph_tfadd_with_ckpt_saver.saver\",\n        \"test_graph_tffunction.pb\",\n        \"test_graph_tfgather.pb\",\n        \"test_graph_tfmatmul.pb\",\n        \"test_graph_tfmatmulandadd.pb\",\n        \"test_graph_tfsplits.pb\",\n    ],\n    cmd = \"$(location :make_test_graphs) --out_dir $(@D)\",\n    tags = [\"manual\"],\n    tools = [\":make_test_graphs\"],\n)\n\ntf_library(\n    name = \"test_graph_tfadd\",\n    testonly = 1,\n    config = \"test_graph_tfadd.config.pbtxt\",\n    cpp_class = \"AddComp\",\n    graph = \"test_graph_tfadd.pb\",\n    # This serves as a test for the list of minimal deps included even when\n    # include_standard_runtime_deps is False.  If this target fails to\n    # compile but the others in this directory succeed, you may need to\n    # expand the \"required by all tf_library targets\" list in tfcompile.bzl.\n    include_standard_runtime_deps = False,\n    tags = [\"manual\"],\n)\n\ntf_library(\n    name = \"test_graph_tfadd_with_ckpt\",\n    testonly = 1,\n    config = \"test_graph_tfadd_with_ckpt.config.pbtxt\",\n    cpp_class = \"AddWithCkptComp\",\n    freeze_checkpoint = \"test_graph_tfadd_with_ckpt.ckpt\",\n    graph = \"test_graph_tfadd_with_ckpt.pb\",\n    tags = [\"manual\"],\n)\n\ntf_library(\n    name = \"test_graph_tfadd_with_ckpt_saver\",\n    testonly = 1,\n    config = \"test_graph_tfadd_with_ckpt.config.pbtxt\",\n    cpp_class = \"AddWithCkptSaverComp\",\n    freeze_checkpoint = \"test_graph_tfadd_with_ckpt_saver.ckpt\",\n    freeze_saver = \"test_graph_tfadd_with_ckpt_saver.saver\",\n    graph = \"test_graph_tfadd_with_ckpt_saver.pb\",\n    tags = [\"manual\"],\n)\n\ntf_library(\n    name = \"test_graph_tffunction\",\n    testonly = 1,\n    config = \"test_graph_tffunction.config.pbtxt\",\n    cpp_class = \"FunctionComp\",\n    graph = \"test_graph_tffunction.pb\",\n    tags = [\"manual\"],\n)\n\ntf_library(\n    name = \"test_graph_tfgather\",\n    testonly = 1,\n    config = \"test_graph_tfgather.config.pbtxt\",\n    cpp_class = \"GatherComp\",\n    graph = \"test_graph_tfgather.pb\",\n    tags = [\"manual\"],\n)\n\ntf_library(\n    name = \"test_graph_tfmatmul\",\n    #testonly = 1,\n    config = \"test_graph_tfmatmul.config.pbtxt\",\n    cpp_class = \"foo::bar::MatMulComp\",\n    graph = \"test_graph_tfmatmul.pb\",\n    #tags = [\"manual\"],\n)\n\ncc_binary(\n    name = \"my_binary\",\n    srcs = [\"my_code.cc\"],  # include test_graph_tfmatmul.h to access the generated header\n    deps = [\n        \"//tensorflow/compiler/aot/tests:test_graph_tfmatmul\",  # link in the generated object file\n        \"//third_party/eigen3\",\n    ],\n    linkopts = [\n        \"-lpthread\",\n    ]\n)\n\ntf_library(\n    name = \"test_graph_tfmatmulandadd\",\n    testonly = 1,\n    config = \"test_graph_tfmatmulandadd.config.pbtxt\",\n    cpp_class = \"MatMulAndAddComp\",\n    graph = \"test_graph_tfmatmulandadd.pb\",\n    tags = [\"manual\"],\n)\n\ntf_library(\n    name = \"test_graph_tfsplits\",\n    testonly = 1,\n    config = \"test_graph_tfsplits.config.pbtxt\",\n    cpp_class = \"SplitsComp\",\n    graph = \"test_graph_tfsplits.pb\",\n    tags = [\"manual\"],\n)\n\ntf_cc_test(\n    name = \"tfcompile_test\",\n    srcs = [\"tfcompile_test.cc\"],\n    tags = [\"manual\"],\n    deps = [\n        \":test_graph_tfadd\",\n        \":test_graph_tfadd_with_ckpt\",\n        \":test_graph_tfadd_with_ckpt_saver\",\n        \":test_graph_tffunction\",\n        \":test_graph_tfgather\",\n        \":test_graph_tfmatmul\",\n        \":test_graph_tfmatmulandadd\",\n        \":test_graph_tfsplits\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//third_party/eigen3\",\n    ],\n)\n\n#-----------------------------------------------------------------------------\n\nfilegroup(\n    name = \"all_files\",\n    srcs = glob(\n        [\"**/*\"],\n        exclude = [\n            \"**/METADATA\",\n            \"**/OWNERS\",\n        ],\n    ),\n    visibility = [\"//tensorflow:__subpackages__\"],\n)\n</code></pre>\n<p>The exact source version:<br>\nv1.3.0-rc1-2665-g242b0f1</p>", "body_text": "@asimshankar Sorry for the misleading. The error message should be:\nERROR: /home/tensorFlow_src/tensorflow/tensorflow/compiler/aot/tests/BUILD:128:1: undeclared inclusion(s) in rule '//tensorflow/compiler/aot/tests:my_binary': this rule is missing dependency declarations for the following files included by 'tensorflow/compiler/aot/tests/my_code.cc': '/home/tensorFlow_src/tensorflow/tensorflow/compiler/aot/tests/test_graph_tfmatmul.h' Target //tensorflow/compiler/aot/tests:my_binary failed to build Use --verbose_failures to see the command lines of failed build steps. INFO: Elapsed time: 1.467s, Critical Path: 1.14s FAILED: Build did NOT complete successfully \nThe complete BUILD file:\nlicenses([\"notice\"])  # Apache 2.0\n\npackage(\n    default_visibility = [\"//visibility:private\"],\n)\n\nload(\"//tensorflow/compiler/aot:tfcompile.bzl\", \"tf_library\")\nload(\"//tensorflow:tensorflow.bzl\", \"tf_cc_test\")\n\ntest_suite(\n    name = \"all_tests\",\n    tags = [\"manual\"],\n    tests = [\n        \":test_graph_tfadd_test\",\n        \":test_graph_tfadd_with_ckpt_saver_test\",\n        \":test_graph_tfadd_with_ckpt_test\",\n        \":test_graph_tffunction_test\",\n        \":test_graph_tfgather_test\",\n        \":test_graph_tfmatmul_test\",\n        \":test_graph_tfmatmulandadd_test\",\n        \":test_graph_tfsplits_test\",\n        \":tfcompile_test\",\n    ],\n)\n\npy_binary(\n    name = \"make_test_graphs\",\n    testonly = 1,\n    srcs = [\"make_test_graphs.py\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \"//tensorflow/core:protos_all_py\",\n        \"//tensorflow/python\",  # TODO(b/34059704): remove when fixed\n        \"//tensorflow/python:array_ops\",\n        \"//tensorflow/python:client\",\n        \"//tensorflow/python:framework_for_generated_wrappers\",\n        \"//tensorflow/python:math_ops\",\n        \"//tensorflow/python:platform\",\n        \"//tensorflow/python:session\",\n        \"//tensorflow/python:training\",\n        \"//tensorflow/python:variables\",\n    ],\n)\n\ngenrule(\n    name = \"gen_test_graphs\",\n    testonly = 1,\n    outs = [\n        \"test_graph_tfadd.pb\",\n        \"test_graph_tfadd_with_ckpt.ckpt\",\n        \"test_graph_tfadd_with_ckpt.pb\",\n        \"test_graph_tfadd_with_ckpt_saver.ckpt\",\n        \"test_graph_tfadd_with_ckpt_saver.pb\",\n        \"test_graph_tfadd_with_ckpt_saver.saver\",\n        \"test_graph_tffunction.pb\",\n        \"test_graph_tfgather.pb\",\n        \"test_graph_tfmatmul.pb\",\n        \"test_graph_tfmatmulandadd.pb\",\n        \"test_graph_tfsplits.pb\",\n    ],\n    cmd = \"$(location :make_test_graphs) --out_dir $(@D)\",\n    tags = [\"manual\"],\n    tools = [\":make_test_graphs\"],\n)\n\ntf_library(\n    name = \"test_graph_tfadd\",\n    testonly = 1,\n    config = \"test_graph_tfadd.config.pbtxt\",\n    cpp_class = \"AddComp\",\n    graph = \"test_graph_tfadd.pb\",\n    # This serves as a test for the list of minimal deps included even when\n    # include_standard_runtime_deps is False.  If this target fails to\n    # compile but the others in this directory succeed, you may need to\n    # expand the \"required by all tf_library targets\" list in tfcompile.bzl.\n    include_standard_runtime_deps = False,\n    tags = [\"manual\"],\n)\n\ntf_library(\n    name = \"test_graph_tfadd_with_ckpt\",\n    testonly = 1,\n    config = \"test_graph_tfadd_with_ckpt.config.pbtxt\",\n    cpp_class = \"AddWithCkptComp\",\n    freeze_checkpoint = \"test_graph_tfadd_with_ckpt.ckpt\",\n    graph = \"test_graph_tfadd_with_ckpt.pb\",\n    tags = [\"manual\"],\n)\n\ntf_library(\n    name = \"test_graph_tfadd_with_ckpt_saver\",\n    testonly = 1,\n    config = \"test_graph_tfadd_with_ckpt.config.pbtxt\",\n    cpp_class = \"AddWithCkptSaverComp\",\n    freeze_checkpoint = \"test_graph_tfadd_with_ckpt_saver.ckpt\",\n    freeze_saver = \"test_graph_tfadd_with_ckpt_saver.saver\",\n    graph = \"test_graph_tfadd_with_ckpt_saver.pb\",\n    tags = [\"manual\"],\n)\n\ntf_library(\n    name = \"test_graph_tffunction\",\n    testonly = 1,\n    config = \"test_graph_tffunction.config.pbtxt\",\n    cpp_class = \"FunctionComp\",\n    graph = \"test_graph_tffunction.pb\",\n    tags = [\"manual\"],\n)\n\ntf_library(\n    name = \"test_graph_tfgather\",\n    testonly = 1,\n    config = \"test_graph_tfgather.config.pbtxt\",\n    cpp_class = \"GatherComp\",\n    graph = \"test_graph_tfgather.pb\",\n    tags = [\"manual\"],\n)\n\ntf_library(\n    name = \"test_graph_tfmatmul\",\n    #testonly = 1,\n    config = \"test_graph_tfmatmul.config.pbtxt\",\n    cpp_class = \"foo::bar::MatMulComp\",\n    graph = \"test_graph_tfmatmul.pb\",\n    #tags = [\"manual\"],\n)\n\ncc_binary(\n    name = \"my_binary\",\n    srcs = [\"my_code.cc\"],  # include test_graph_tfmatmul.h to access the generated header\n    deps = [\n        \"//tensorflow/compiler/aot/tests:test_graph_tfmatmul\",  # link in the generated object file\n        \"//third_party/eigen3\",\n    ],\n    linkopts = [\n        \"-lpthread\",\n    ]\n)\n\ntf_library(\n    name = \"test_graph_tfmatmulandadd\",\n    testonly = 1,\n    config = \"test_graph_tfmatmulandadd.config.pbtxt\",\n    cpp_class = \"MatMulAndAddComp\",\n    graph = \"test_graph_tfmatmulandadd.pb\",\n    tags = [\"manual\"],\n)\n\ntf_library(\n    name = \"test_graph_tfsplits\",\n    testonly = 1,\n    config = \"test_graph_tfsplits.config.pbtxt\",\n    cpp_class = \"SplitsComp\",\n    graph = \"test_graph_tfsplits.pb\",\n    tags = [\"manual\"],\n)\n\ntf_cc_test(\n    name = \"tfcompile_test\",\n    srcs = [\"tfcompile_test.cc\"],\n    tags = [\"manual\"],\n    deps = [\n        \":test_graph_tfadd\",\n        \":test_graph_tfadd_with_ckpt\",\n        \":test_graph_tfadd_with_ckpt_saver\",\n        \":test_graph_tffunction\",\n        \":test_graph_tfgather\",\n        \":test_graph_tfmatmul\",\n        \":test_graph_tfmatmulandadd\",\n        \":test_graph_tfsplits\",\n        \"//tensorflow/core:test\",\n        \"//tensorflow/core:test_main\",\n        \"//third_party/eigen3\",\n    ],\n)\n\n#-----------------------------------------------------------------------------\n\nfilegroup(\n    name = \"all_files\",\n    srcs = glob(\n        [\"**/*\"],\n        exclude = [\n            \"**/METADATA\",\n            \"**/OWNERS\",\n        ],\n    ),\n    visibility = [\"//tensorflow:__subpackages__\"],\n)\n\nThe exact source version:\nv1.3.0-rc1-2665-g242b0f1", "body": "@asimshankar Sorry for the misleading. The error message should be: \r\n`ERROR: /home/tensorFlow_src/tensorflow/tensorflow/compiler/aot/tests/BUILD:128:1: undeclared inclusion(s) in rule '//tensorflow/compiler/aot/tests:my_binary':\r\nthis rule is missing dependency declarations for the following files included by 'tensorflow/compiler/aot/tests/my_code.cc':\r\n  '/home/tensorFlow_src/tensorflow/tensorflow/compiler/aot/tests/test_graph_tfmatmul.h'\r\nTarget //tensorflow/compiler/aot/tests:my_binary failed to build\r\nUse --verbose_failures to see the command lines of failed build steps.\r\nINFO: Elapsed time: 1.467s, Critical Path: 1.14s\r\nFAILED: Build did NOT complete successfully\r\n`\r\n\r\nThe complete `BUILD` file:\r\n```\r\nlicenses([\"notice\"])  # Apache 2.0\r\n\r\npackage(\r\n    default_visibility = [\"//visibility:private\"],\r\n)\r\n\r\nload(\"//tensorflow/compiler/aot:tfcompile.bzl\", \"tf_library\")\r\nload(\"//tensorflow:tensorflow.bzl\", \"tf_cc_test\")\r\n\r\ntest_suite(\r\n    name = \"all_tests\",\r\n    tags = [\"manual\"],\r\n    tests = [\r\n        \":test_graph_tfadd_test\",\r\n        \":test_graph_tfadd_with_ckpt_saver_test\",\r\n        \":test_graph_tfadd_with_ckpt_test\",\r\n        \":test_graph_tffunction_test\",\r\n        \":test_graph_tfgather_test\",\r\n        \":test_graph_tfmatmul_test\",\r\n        \":test_graph_tfmatmulandadd_test\",\r\n        \":test_graph_tfsplits_test\",\r\n        \":tfcompile_test\",\r\n    ],\r\n)\r\n\r\npy_binary(\r\n    name = \"make_test_graphs\",\r\n    testonly = 1,\r\n    srcs = [\"make_test_graphs.py\"],\r\n    srcs_version = \"PY2AND3\",\r\n    deps = [\r\n        \"//tensorflow/core:protos_all_py\",\r\n        \"//tensorflow/python\",  # TODO(b/34059704): remove when fixed\r\n        \"//tensorflow/python:array_ops\",\r\n        \"//tensorflow/python:client\",\r\n        \"//tensorflow/python:framework_for_generated_wrappers\",\r\n        \"//tensorflow/python:math_ops\",\r\n        \"//tensorflow/python:platform\",\r\n        \"//tensorflow/python:session\",\r\n        \"//tensorflow/python:training\",\r\n        \"//tensorflow/python:variables\",\r\n    ],\r\n)\r\n\r\ngenrule(\r\n    name = \"gen_test_graphs\",\r\n    testonly = 1,\r\n    outs = [\r\n        \"test_graph_tfadd.pb\",\r\n        \"test_graph_tfadd_with_ckpt.ckpt\",\r\n        \"test_graph_tfadd_with_ckpt.pb\",\r\n        \"test_graph_tfadd_with_ckpt_saver.ckpt\",\r\n        \"test_graph_tfadd_with_ckpt_saver.pb\",\r\n        \"test_graph_tfadd_with_ckpt_saver.saver\",\r\n        \"test_graph_tffunction.pb\",\r\n        \"test_graph_tfgather.pb\",\r\n        \"test_graph_tfmatmul.pb\",\r\n        \"test_graph_tfmatmulandadd.pb\",\r\n        \"test_graph_tfsplits.pb\",\r\n    ],\r\n    cmd = \"$(location :make_test_graphs) --out_dir $(@D)\",\r\n    tags = [\"manual\"],\r\n    tools = [\":make_test_graphs\"],\r\n)\r\n\r\ntf_library(\r\n    name = \"test_graph_tfadd\",\r\n    testonly = 1,\r\n    config = \"test_graph_tfadd.config.pbtxt\",\r\n    cpp_class = \"AddComp\",\r\n    graph = \"test_graph_tfadd.pb\",\r\n    # This serves as a test for the list of minimal deps included even when\r\n    # include_standard_runtime_deps is False.  If this target fails to\r\n    # compile but the others in this directory succeed, you may need to\r\n    # expand the \"required by all tf_library targets\" list in tfcompile.bzl.\r\n    include_standard_runtime_deps = False,\r\n    tags = [\"manual\"],\r\n)\r\n\r\ntf_library(\r\n    name = \"test_graph_tfadd_with_ckpt\",\r\n    testonly = 1,\r\n    config = \"test_graph_tfadd_with_ckpt.config.pbtxt\",\r\n    cpp_class = \"AddWithCkptComp\",\r\n    freeze_checkpoint = \"test_graph_tfadd_with_ckpt.ckpt\",\r\n    graph = \"test_graph_tfadd_with_ckpt.pb\",\r\n    tags = [\"manual\"],\r\n)\r\n\r\ntf_library(\r\n    name = \"test_graph_tfadd_with_ckpt_saver\",\r\n    testonly = 1,\r\n    config = \"test_graph_tfadd_with_ckpt.config.pbtxt\",\r\n    cpp_class = \"AddWithCkptSaverComp\",\r\n    freeze_checkpoint = \"test_graph_tfadd_with_ckpt_saver.ckpt\",\r\n    freeze_saver = \"test_graph_tfadd_with_ckpt_saver.saver\",\r\n    graph = \"test_graph_tfadd_with_ckpt_saver.pb\",\r\n    tags = [\"manual\"],\r\n)\r\n\r\ntf_library(\r\n    name = \"test_graph_tffunction\",\r\n    testonly = 1,\r\n    config = \"test_graph_tffunction.config.pbtxt\",\r\n    cpp_class = \"FunctionComp\",\r\n    graph = \"test_graph_tffunction.pb\",\r\n    tags = [\"manual\"],\r\n)\r\n\r\ntf_library(\r\n    name = \"test_graph_tfgather\",\r\n    testonly = 1,\r\n    config = \"test_graph_tfgather.config.pbtxt\",\r\n    cpp_class = \"GatherComp\",\r\n    graph = \"test_graph_tfgather.pb\",\r\n    tags = [\"manual\"],\r\n)\r\n\r\ntf_library(\r\n    name = \"test_graph_tfmatmul\",\r\n    #testonly = 1,\r\n    config = \"test_graph_tfmatmul.config.pbtxt\",\r\n    cpp_class = \"foo::bar::MatMulComp\",\r\n    graph = \"test_graph_tfmatmul.pb\",\r\n    #tags = [\"manual\"],\r\n)\r\n\r\ncc_binary(\r\n    name = \"my_binary\",\r\n    srcs = [\"my_code.cc\"],  # include test_graph_tfmatmul.h to access the generated header\r\n    deps = [\r\n        \"//tensorflow/compiler/aot/tests:test_graph_tfmatmul\",  # link in the generated object file\r\n        \"//third_party/eigen3\",\r\n    ],\r\n    linkopts = [\r\n        \"-lpthread\",\r\n    ]\r\n)\r\n\r\ntf_library(\r\n    name = \"test_graph_tfmatmulandadd\",\r\n    testonly = 1,\r\n    config = \"test_graph_tfmatmulandadd.config.pbtxt\",\r\n    cpp_class = \"MatMulAndAddComp\",\r\n    graph = \"test_graph_tfmatmulandadd.pb\",\r\n    tags = [\"manual\"],\r\n)\r\n\r\ntf_library(\r\n    name = \"test_graph_tfsplits\",\r\n    testonly = 1,\r\n    config = \"test_graph_tfsplits.config.pbtxt\",\r\n    cpp_class = \"SplitsComp\",\r\n    graph = \"test_graph_tfsplits.pb\",\r\n    tags = [\"manual\"],\r\n)\r\n\r\ntf_cc_test(\r\n    name = \"tfcompile_test\",\r\n    srcs = [\"tfcompile_test.cc\"],\r\n    tags = [\"manual\"],\r\n    deps = [\r\n        \":test_graph_tfadd\",\r\n        \":test_graph_tfadd_with_ckpt\",\r\n        \":test_graph_tfadd_with_ckpt_saver\",\r\n        \":test_graph_tffunction\",\r\n        \":test_graph_tfgather\",\r\n        \":test_graph_tfmatmul\",\r\n        \":test_graph_tfmatmulandadd\",\r\n        \":test_graph_tfsplits\",\r\n        \"//tensorflow/core:test\",\r\n        \"//tensorflow/core:test_main\",\r\n        \"//third_party/eigen3\",\r\n    ],\r\n)\r\n\r\n#-----------------------------------------------------------------------------\r\n\r\nfilegroup(\r\n    name = \"all_files\",\r\n    srcs = glob(\r\n        [\"**/*\"],\r\n        exclude = [\r\n            \"**/METADATA\",\r\n            \"**/OWNERS\",\r\n        ],\r\n    ),\r\n    visibility = [\"//tensorflow:__subpackages__\"],\r\n)\r\n```\r\n\r\nThe exact source version:\r\nv1.3.0-rc1-2665-g242b0f1"}