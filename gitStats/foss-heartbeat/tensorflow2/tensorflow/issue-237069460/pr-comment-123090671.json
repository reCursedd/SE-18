{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/123090671", "pull_request_review_id": 45262290, "id": 123090671, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMzA5MDY3MQ==", "diff_hunk": "@@ -275,6 +277,22 @@ class SampleDistortedBoundingBoxOp : public OpKernel {\n                     \"bounding boxes must have shape [4] or [*, 4], got \",\n                     input_boxes.shape().DebugString()));\n \n+    if (context->num_inputs() == 3) {\n+      const Tensor& min_object_covered = context->input(2);\n+\n+      OP_REQUIRES(\n+          context, TensorShapeUtils::IsScalar(min_object_covered.shape()),\n+          errors::InvalidArgument(\"min_object_covered must be 0-D, got shape \",\n+                                  min_object_covered.shape().DebugString()));\n+\n+      min_object_covered_ = min_object_covered.scalar<float>()();", "path": "tensorflow/core/kernels/sample_distorted_bounding_box_op.cc", "position": null, "original_position": 41, "commit_id": "c1dfc0b0f6f7a89035fa19c67f4b58216539fffe", "original_commit_id": "5976afe626a0bbf5dee4c7413706da887f8493d0", "user": {"login": "vrv", "id": 463737, "node_id": "MDQ6VXNlcjQ2MzczNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/463737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vrv", "html_url": "https://github.com/vrv", "followers_url": "https://api.github.com/users/vrv/followers", "following_url": "https://api.github.com/users/vrv/following{/other_user}", "gists_url": "https://api.github.com/users/vrv/gists{/gist_id}", "starred_url": "https://api.github.com/users/vrv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vrv/subscriptions", "organizations_url": "https://api.github.com/users/vrv/orgs", "repos_url": "https://api.github.com/users/vrv/repos", "events_url": "https://api.github.com/users/vrv/events{/privacy}", "received_events_url": "https://api.github.com/users/vrv/received_events", "type": "User", "site_admin": false}, "body": "Compute() can be run by multiple threads, so this is going to result in a potential memory race.  I would suggest doing something like:\r\n\r\nfloat min_object_recovered_val = 0.0;\r\nif (context->num_inputs() == 3) {\r\n  ...\r\n  min_object_recovered_val = min_object_recovered.scalar<float>()();\r\n} else {\r\n  min_object_recovered_val = min_object_recovered_;\r\n}\r\n\r\nand then use that float below.", "created_at": "2017-06-20T20:46:49Z", "updated_at": "2017-06-28T10:36:01Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/10840#discussion_r123090671", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/10840", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/123090671"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/10840#discussion_r123090671"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/10840"}}, "body_html": "<p>Compute() can be run by multiple threads, so this is going to result in a potential memory race.  I would suggest doing something like:</p>\n<p>float min_object_recovered_val = 0.0;<br>\nif (context-&gt;num_inputs() == 3) {<br>\n...<br>\nmin_object_recovered_val = min_object_recovered.scalar()();<br>\n} else {<br>\nmin_object_recovered_val = min_object_recovered_;<br>\n}</p>\n<p>and then use that float below.</p>", "body_text": "Compute() can be run by multiple threads, so this is going to result in a potential memory race.  I would suggest doing something like:\nfloat min_object_recovered_val = 0.0;\nif (context->num_inputs() == 3) {\n...\nmin_object_recovered_val = min_object_recovered.scalar()();\n} else {\nmin_object_recovered_val = min_object_recovered_;\n}\nand then use that float below."}