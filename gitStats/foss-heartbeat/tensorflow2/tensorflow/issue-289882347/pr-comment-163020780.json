{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/163020780", "pull_request_review_id": 90568440, "id": 163020780, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MzAyMDc4MA==", "diff_hunk": "@@ -47,22 +47,27 @@ def test_conjugate_gradient(self):\n     a_np = np.dot(a_np.T, a_np)\n     rhs_np = np.random.uniform(\n         low=-1.0, high=1.0, size=shape_[0]).astype(dtype_)\n+    x_np = np.zeros_like(rhs_np)\n     tol = 1e-6 if dtype_ == np.float64 else 1e-3\n     max_iter = 20\n     with self.test_session() as sess:\n       if use_static_shape_:\n         a = constant_op.constant(a_np)\n         rhs = constant_op.constant(rhs_np)\n+        x = constant_op.constant(x_np)\n       else:\n         a = array_ops.placeholder(dtype_)\n         rhs = array_ops.placeholder(dtype_)\n+        x = array_ops.placeholder(dtype_)\n       operator = util.create_operator(a)\n+      preconditioner = util.identity_operator(a)", "path": "tensorflow/contrib/solvers/python/kernel_tests/linear_equations_test.py", "position": null, "original_position": 17, "commit_id": "c2908c2e74530edaba6f95c4b86f184c77a1afcf", "original_commit_id": "8616e904a01a5e691d2f39f8fa5b0fc01f42f750", "user": {"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}, "body": "As a minimum, I would prefer if you also added a test with a non-trivial preconditioner (e.g. a diagonal matrix with random positive diagonal entries in [1:2], say.).\r\n\r\nAlso add a test where the preconditioner is None.", "created_at": "2018-01-22T18:11:09Z", "updated_at": "2018-01-24T12:29:16Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/16237#discussion_r163020780", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/16237", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/163020780"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/16237#discussion_r163020780"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/16237"}}, "body_html": "<p>As a minimum, I would prefer if you also added a test with a non-trivial preconditioner (e.g. a diagonal matrix with random positive diagonal entries in [1:2], say.).</p>\n<p>Also add a test where the preconditioner is None.</p>", "body_text": "As a minimum, I would prefer if you also added a test with a non-trivial preconditioner (e.g. a diagonal matrix with random positive diagonal entries in [1:2], say.).\nAlso add a test where the preconditioner is None."}