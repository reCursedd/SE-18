{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/54829756", "pull_request_review_id": null, "id": 54829756, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODI5NzU2", "diff_hunk": "@@ -0,0 +1,297 @@\n+#!/usr/bin/env bash\n+# Copyright 2016 Google Inc. All Rights Reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ==============================================================================\n+#\n+# Build the Python PIP installation package for TensorFlow\n+# and run the Python unit tests from the source code on the installation\n+#\n+# Usage:\n+#   pip_test.sh [--virtualenv]\n+#\n+# If the flag --virtualenv is set, the script will use \"python\" as the Python\n+# binary path. Otherwise, it will use tools/python_bin_path.sh to determine\n+# the Python binary path.\n+#\n+# When executing the Python unit tests, the script obeys the shell\n+# variables: PY_TEST_WHITELIST, PY_TEST_BLACKLIST, PY_TEST_GPU_BLACKLIST,\n+#\n+# To select only a subset of the Python tests to run, set the environment\n+# variable PY_TEST_WHITELIST, e.g.,\n+#   PY_TEST_WHITELIST=\"tensorflow/python/kernel_tests/shape_ops_test.py\"\n+# Separate the tests with a colon (:). Leave this environment variable empty\n+# to disable the whitelist.\n+#\n+# You can also ignore a set of the tests by using the environment variable\n+# PY_TEST_BLACKLIST. For example, you can include in PY_TEST_BLACKLIST the\n+# tests that depend on Python modules in TensorFlow source that are not\n+# exported publicly.\n+#\n+# In addition, you can put blacklist for only GPU build inthe environment\n+# variable PY_TEST_GPU_BLACKLIST.\n+#\n+# TF_BUILD_BAZEL_CLEAN, if set to any non-empty and non-0 value, directs the\n+# script to perform bazel clean prior to main build and test steps.\n+#\n+# If the environmental variable NO_TEST_ON_INSTALL is set to any non-empty\n+# value, the script will exit after the pip install step.\n+\n+# =============================================================================\n+# Test blacklist: General\n+#\n+# tensorflow/python/framework/ops_test.py\n+#   depends on depends on \"test_ops\", which is defined in a C++ file wrapped as\n+#   a .py file through the Bazel rule \u201ctf_gen_ops_wrapper_py\u201d.\n+# tensorflow/util/protobuf/compare_test.py:\n+#   depends on compare_test_pb2 defined outside Python\n+# tensorflow/python/framework/device_test.py:\n+#   depends on CheckValid() and ToString(), both defined externally\n+#\n+PY_TEST_BLACKLIST=\"${PY_TEST_BLACKLIST}:\"\\\n+\"tensorflow/python/framework/ops_test.py:\"\\\n+\"tensorflow/python/util/protobuf/compare_test.py:\"\\\n+\"tensorflow/python/framework/device_test.py\"\n+\n+# Test blacklist: GPU-only\n+PY_TEST_GPU_BLACKLIST=\"${PY_TEST_GPU_BLACKLIST}:\"\\\n+\"tensorflow/python/framework/function_test.py\"\n+\n+# =============================================================================\n+\n+\n+# Helper functions\n+# Get the absolute path from a path\n+abs_path() {\n+  [[ $1 = /* ]] && echo \"$1\" || echo \"$PWD/${1#./}\"\n+}\n+\n+\n+die() {\n+  echo $@\n+  exit 1\n+}\n+\n+\n+# Obtain the path to Python binary\n+# source tools/python_bin_path.sh\n+if [[ \"$1\" == \"--virtualenv\" ]]; then\n+  PYTHON_BIN_PATH=\"$(which python)\"\n+else\n+  source tools/python_bin_path.sh\n+  # Assume: PYTHON_BIN_PATH is exported by the script above\n+fi\n+\n+if [[ -z \"${PYTHON_BIN_PATH}\" ]]; then\n+  die \"PYTHON_BIN_PATH was not provided. If this is not virtualenv, \"\\\n+\"did you run configure?\"\n+fi\n+\n+# Determine the major and minor versions of Python being used (e.g., 2.7)\n+# This info will be useful for determining the directory of the local pip\n+# installation of Python\n+PY_MAJOR_MINOR_VER=$(${PYTHON_BIN_PATH} -V 2>&1 | awk '{print $NF}' | cut -d. -f-2)\n+\n+echo \"Python binary path to be used in PIP install-test: ${PYTHON_BIN_PATH} \"\\\n+\"(Major.Minor version: ${PY_MAJOR_MINOR_VER})\"\n+\n+# Avoid permission issues outside container\n+umask 000", "path": "tensorflow/tools/ci_build/builds/pip_test.sh", "position": null, "original_position": 109, "commit_id": "774944088a103fdcb7d86430a4f46e454b24c6b5", "original_commit_id": "579cb72c34802d18739f1ac9d83259ba5beef8cc", "user": {"login": "caisq", "id": 16824702, "node_id": "MDQ6VXNlcjE2ODI0NzAy", "avatar_url": "https://avatars2.githubusercontent.com/u/16824702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caisq", "html_url": "https://github.com/caisq", "followers_url": "https://api.github.com/users/caisq/followers", "following_url": "https://api.github.com/users/caisq/following{/other_user}", "gists_url": "https://api.github.com/users/caisq/gists{/gist_id}", "starred_url": "https://api.github.com/users/caisq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caisq/subscriptions", "organizations_url": "https://api.github.com/users/caisq/orgs", "repos_url": "https://api.github.com/users/caisq/repos", "events_url": "https://api.github.com/users/caisq/events{/privacy}", "received_events_url": "https://api.github.com/users/caisq/received_events", "type": "User", "site_admin": false}, "body": "When the docker container runs, the user is root. It turns out that directories created inside the container will retain root owner ship even outside the container. \n", "created_at": "2016-03-03T02:49:22Z", "updated_at": "2016-03-04T02:38:34Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/1294#discussion_r54829756", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/1294", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/54829756"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/1294#discussion_r54829756"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/1294"}}, "body_html": "<p>When the docker container runs, the user is root. It turns out that directories created inside the container will retain root owner ship even outside the container.</p>", "body_text": "When the docker container runs, the user is root. It turns out that directories created inside the container will retain root owner ship even outside the container."}