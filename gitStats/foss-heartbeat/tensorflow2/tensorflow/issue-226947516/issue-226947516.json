{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9747", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9747/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9747/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9747/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9747", "id": 226947516, "node_id": "MDU6SXNzdWUyMjY5NDc1MTY=", "number": 9747, "title": "'Tensor' object has no attribute 'initializer' after import from meta graph", "user": {"login": "austinzh", "id": 8947557, "node_id": "MDQ6VXNlcjg5NDc1NTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/8947557?v=4", "gravatar_id": "", "url": "https://api.github.com/users/austinzh", "html_url": "https://github.com/austinzh", "followers_url": "https://api.github.com/users/austinzh/followers", "following_url": "https://api.github.com/users/austinzh/following{/other_user}", "gists_url": "https://api.github.com/users/austinzh/gists{/gist_id}", "starred_url": "https://api.github.com/users/austinzh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/austinzh/subscriptions", "organizations_url": "https://api.github.com/users/austinzh/orgs", "repos_url": "https://api.github.com/users/austinzh/repos", "events_url": "https://api.github.com/users/austinzh/events{/privacy}", "received_events_url": "https://api.github.com/users/austinzh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "poxvoculi", "id": 15676913, "node_id": "MDQ6VXNlcjE1Njc2OTEz", "avatar_url": "https://avatars2.githubusercontent.com/u/15676913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poxvoculi", "html_url": "https://github.com/poxvoculi", "followers_url": "https://api.github.com/users/poxvoculi/followers", "following_url": "https://api.github.com/users/poxvoculi/following{/other_user}", "gists_url": "https://api.github.com/users/poxvoculi/gists{/gist_id}", "starred_url": "https://api.github.com/users/poxvoculi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poxvoculi/subscriptions", "organizations_url": "https://api.github.com/users/poxvoculi/orgs", "repos_url": "https://api.github.com/users/poxvoculi/repos", "events_url": "https://api.github.com/users/poxvoculi/events{/privacy}", "received_events_url": "https://api.github.com/users/poxvoculi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "poxvoculi", "id": 15676913, "node_id": "MDQ6VXNlcjE1Njc2OTEz", "avatar_url": "https://avatars2.githubusercontent.com/u/15676913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poxvoculi", "html_url": "https://github.com/poxvoculi", "followers_url": "https://api.github.com/users/poxvoculi/followers", "following_url": "https://api.github.com/users/poxvoculi/following{/other_user}", "gists_url": "https://api.github.com/users/poxvoculi/gists{/gist_id}", "starred_url": "https://api.github.com/users/poxvoculi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poxvoculi/subscriptions", "organizations_url": "https://api.github.com/users/poxvoculi/orgs", "repos_url": "https://api.github.com/users/poxvoculi/repos", "events_url": "https://api.github.com/users/poxvoculi/events{/privacy}", "received_events_url": "https://api.github.com/users/poxvoculi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 21, "created_at": "2017-05-08T06:10:31Z", "updated_at": "2018-03-27T23:02:14Z", "closed_at": "2018-03-27T23:02:14Z", "author_association": "NONE", "body_html": "<hr>\n<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: No</li>\n<li><strong>OS Platform and Distribution</strong>: Darwin Austins-MBP 16.5.0 Darwin Kernel Version 16.5.0: Fri Mar  3 16:52:33 PST 2017; root:xnu-3789.51.2~3/RELEASE_X86_64 x86_64<br>\nMac OS X 10.12.4</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:binary</li>\n<li><strong>TensorFlow version (use command below)</strong>:v1.1.0-rc0-61-g1ec6ed5 1.1.0</li>\n<li><strong>Bazel version (if compiling from source)</strong>:0.4.5</li>\n<li><strong>CUDA/cuDNN version</strong>:None</li>\n<li><strong>GPU model and memory</strong>:None</li>\n<li><strong>Exact command to reproduce</strong>: Ref to Codes</li>\n</ul>\n<h3>tensorflow import</h3>\n<pre><code>tf.VERSION = 1.1.0\ntf.GIT_VERSION = v1.1.0-rc0-61-g1ec6ed5\ntf.COMPILER_VERSION = v1.1.0-rc0-61-g1ec6ed5\nSanity check: array([1], dtype=int32)\n</code></pre>\n<h3>Describe the problem</h3>\n<p>After export and import a meta graph with uninitialized local variables,<br>\nYou can not inittialize them with sess.run(tf. local_variables_initializer()), cause<br>\nTF do not register variable's proto function with key 'LOCAL_VARIABLES' and when<br>\nexport meta graph to protobuf, source code can not find to_proto function from repository.</p>\n<h3>Source code / logs</h3>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\ngraph <span class=\"pl-k\">=</span> tf.Graph()\n<span class=\"pl-k\">with</span> graph.as_default():\n    x <span class=\"pl-k\">=</span> tf.Variable(<span class=\"pl-c1\">1</span>, <span class=\"pl-v\">collections</span><span class=\"pl-k\">=</span>[tf.GraphKeys.<span class=\"pl-c1\">LOCAL_VARIABLES</span>])\n    y <span class=\"pl-k\">=</span> tf.Variable(<span class=\"pl-c1\">1</span>)\n    z <span class=\"pl-k\">=</span> x <span class=\"pl-k\">+</span> y\norigin_meta_graph <span class=\"pl-k\">=</span> tf.train.export_meta_graph(<span class=\"pl-v\">graph</span><span class=\"pl-k\">=</span>graph)\nnew_graph <span class=\"pl-k\">=</span> tf.Graph()\n<span class=\"pl-k\">with</span> new_graph.as_default():\n    tf.train.import_meta_graph(origin_meta_graph)\n    init <span class=\"pl-k\">=</span> tf.local_variables_initializer()\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n    sess.run(init)</pre></div>\n<div class=\"highlight highlight-source-shell\"><pre>Traceback (most recent call last):\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/Users/austin/workspace/aip/3rd/tensorflow/tensorflow/test.py<span class=\"pl-pds\">\"</span></span>, line 12, <span class=\"pl-k\">in</span> <span class=\"pl-k\">&lt;</span>module<span class=\"pl-k\">&gt;</span>\n    init = <span class=\"pl-en\">tf.local_variables_initializer</span>()\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/Users/austin/workspace/aip/3rd/tensorflow/venv/lib/python3.6/site-packages/tensorflow/python/ops/variables.py<span class=\"pl-pds\">\"</span></span>, line 1184, <span class=\"pl-k\">in</span> local_variables_initializer\n    <span class=\"pl-k\">return</span> <span class=\"pl-en\">variables_initializer(local_variables</span>())\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/Users/austin/workspace/aip/3rd/tensorflow/venv/lib/python3.6/site-packages/tensorflow/python/ops/variables.py<span class=\"pl-pds\">\"</span></span>, line 1149, <span class=\"pl-k\">in</span> variables_initializer\n    <span class=\"pl-k\">return</span> control_flow_ops.group(<span class=\"pl-k\">*</span>[v.initializer <span class=\"pl-k\">for</span> <span class=\"pl-smi\">v</span> <span class=\"pl-k\">in</span> var_list], name=name)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/Users/austin/workspace/aip/3rd/tensorflow/venv/lib/python3.6/site-packages/tensorflow/python/ops/variables.py<span class=\"pl-pds\">\"</span></span>, line 1149, <span class=\"pl-k\">in</span> <span class=\"pl-k\">&lt;</span>listcomp<span class=\"pl-k\">&gt;</span>\n    <span class=\"pl-k\">return</span> control_flow_ops.group(<span class=\"pl-k\">*</span>[v.initializer <span class=\"pl-k\">for</span> <span class=\"pl-smi\">v</span> <span class=\"pl-k\">in</span> var_list], name=name)\nAttributeError: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>Tensor<span class=\"pl-pds\">'</span></span> object has no attribute <span class=\"pl-s\"><span class=\"pl-pds\">'</span>initializer<span class=\"pl-pds\">'</span></span></pre></div>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\ngraph <span class=\"pl-k\">=</span> tf.Graph()\n<span class=\"pl-k\">with</span> graph.as_default():\n    x <span class=\"pl-k\">=</span> tf.Variable(<span class=\"pl-c1\">1</span>, <span class=\"pl-v\">collections</span><span class=\"pl-k\">=</span>[tf.GraphKeys.<span class=\"pl-c1\">LOCAL_VARIABLES</span>])\n    y <span class=\"pl-k\">=</span> tf.Variable(<span class=\"pl-c1\">1</span>)\n    z <span class=\"pl-k\">=</span> x <span class=\"pl-k\">+</span> y\norigin_meta_graph <span class=\"pl-k\">=</span> tf.train.export_meta_graph(<span class=\"pl-v\">graph</span><span class=\"pl-k\">=</span>graph)\nnew_graph <span class=\"pl-k\">=</span> tf.Graph()\n<span class=\"pl-k\">with</span> new_graph.as_default():\n    tf.train.import_meta_graph(origin_meta_graph)\n<span class=\"pl-c1\">print</span>(graph.get_collection(tf.GraphKeys.<span class=\"pl-c1\">LOCAL_VARIABLES</span>))\n<span class=\"pl-c1\">print</span>(new_graph.get_collection(tf.GraphKeys.<span class=\"pl-c1\">LOCAL_VARIABLES</span>))</pre></div>\n<div class=\"highlight highlight-source-shell\"><pre>[<span class=\"pl-k\">&lt;</span>tf.Variable <span class=\"pl-s\"><span class=\"pl-pds\">'</span>Variable:0<span class=\"pl-pds\">'</span></span> shape<span class=\"pl-k\">=</span>() dtype<span class=\"pl-k\">=</span>int32_ref<span class=\"pl-k\">&gt;</span>]\n[<span class=\"pl-k\">&lt;</span>tf.Tensor <span class=\"pl-s\"><span class=\"pl-pds\">'</span>Variable:0<span class=\"pl-pds\">'</span></span> shape<span class=\"pl-k\">=</span>() dtype<span class=\"pl-k\">=</span>int32_ref<span class=\"pl-k\">&gt;</span>]</pre></div>\n<p>As it show above, in origin graph local_variable collection is a list of <strong>tf.Variable</strong><br>\nbut in the new graph, is a list of <strong>tf.Tensor</strong></p>\n<h3>Work around</h3>\n<p>Add following registration in your model core<br>\nOR Ref to this <a href=\"https://github.com/tensorflow/tensorflow/pull/9674\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/tensorflow/tensorflow/pull/9674/hovercard\">PR</a></p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">from</span> tensorflow.core.framework <span class=\"pl-k\">import</span> variable_pb2\n<span class=\"pl-k\">from</span> tensorflow.python.framework <span class=\"pl-k\">import</span> ops\n<span class=\"pl-k\">from</span> tensorflow.python.ops <span class=\"pl-k\">import</span> variables\n<span class=\"pl-k\">from</span> tensorflow.python.framework.ops <span class=\"pl-k\">import</span> register_proto_function\n\nregister_proto_function(\n    ops.GraphKeys.<span class=\"pl-c1\">LOCAL_VARIABLES</span>,\n    <span class=\"pl-v\">proto_type</span><span class=\"pl-k\">=</span>variable_pb2.VariableDef,\n    <span class=\"pl-v\">to_proto</span><span class=\"pl-k\">=</span>variables.Variable.to_proto,\n    <span class=\"pl-v\">from_proto</span><span class=\"pl-k\">=</span>variables.Variable.from_proto)</pre></div>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): No\nOS Platform and Distribution: Darwin Austins-MBP 16.5.0 Darwin Kernel Version 16.5.0: Fri Mar  3 16:52:33 PST 2017; root:xnu-3789.51.2~3/RELEASE_X86_64 x86_64\nMac OS X 10.12.4\nTensorFlow installed from (source or binary):binary\nTensorFlow version (use command below):v1.1.0-rc0-61-g1ec6ed5 1.1.0\nBazel version (if compiling from source):0.4.5\nCUDA/cuDNN version:None\nGPU model and memory:None\nExact command to reproduce: Ref to Codes\n\ntensorflow import\ntf.VERSION = 1.1.0\ntf.GIT_VERSION = v1.1.0-rc0-61-g1ec6ed5\ntf.COMPILER_VERSION = v1.1.0-rc0-61-g1ec6ed5\nSanity check: array([1], dtype=int32)\n\nDescribe the problem\nAfter export and import a meta graph with uninitialized local variables,\nYou can not inittialize them with sess.run(tf. local_variables_initializer()), cause\nTF do not register variable's proto function with key 'LOCAL_VARIABLES' and when\nexport meta graph to protobuf, source code can not find to_proto function from repository.\nSource code / logs\nimport tensorflow as tf\n\ngraph = tf.Graph()\nwith graph.as_default():\n    x = tf.Variable(1, collections=[tf.GraphKeys.LOCAL_VARIABLES])\n    y = tf.Variable(1)\n    z = x + y\norigin_meta_graph = tf.train.export_meta_graph(graph=graph)\nnew_graph = tf.Graph()\nwith new_graph.as_default():\n    tf.train.import_meta_graph(origin_meta_graph)\n    init = tf.local_variables_initializer()\nwith tf.Session() as sess:\n    sess.run(init)\nTraceback (most recent call last):\n  File \"/Users/austin/workspace/aip/3rd/tensorflow/tensorflow/test.py\", line 12, in <module>\n    init = tf.local_variables_initializer()\n  File \"/Users/austin/workspace/aip/3rd/tensorflow/venv/lib/python3.6/site-packages/tensorflow/python/ops/variables.py\", line 1184, in local_variables_initializer\n    return variables_initializer(local_variables())\n  File \"/Users/austin/workspace/aip/3rd/tensorflow/venv/lib/python3.6/site-packages/tensorflow/python/ops/variables.py\", line 1149, in variables_initializer\n    return control_flow_ops.group(*[v.initializer for v in var_list], name=name)\n  File \"/Users/austin/workspace/aip/3rd/tensorflow/venv/lib/python3.6/site-packages/tensorflow/python/ops/variables.py\", line 1149, in <listcomp>\n    return control_flow_ops.group(*[v.initializer for v in var_list], name=name)\nAttributeError: 'Tensor' object has no attribute 'initializer'\nimport tensorflow as tf\n\ngraph = tf.Graph()\nwith graph.as_default():\n    x = tf.Variable(1, collections=[tf.GraphKeys.LOCAL_VARIABLES])\n    y = tf.Variable(1)\n    z = x + y\norigin_meta_graph = tf.train.export_meta_graph(graph=graph)\nnew_graph = tf.Graph()\nwith new_graph.as_default():\n    tf.train.import_meta_graph(origin_meta_graph)\nprint(graph.get_collection(tf.GraphKeys.LOCAL_VARIABLES))\nprint(new_graph.get_collection(tf.GraphKeys.LOCAL_VARIABLES))\n[<tf.Variable 'Variable:0' shape=() dtype=int32_ref>]\n[<tf.Tensor 'Variable:0' shape=() dtype=int32_ref>]\nAs it show above, in origin graph local_variable collection is a list of tf.Variable\nbut in the new graph, is a list of tf.Tensor\nWork around\nAdd following registration in your model core\nOR Ref to this PR\nfrom tensorflow.core.framework import variable_pb2\nfrom tensorflow.python.framework import ops\nfrom tensorflow.python.ops import variables\nfrom tensorflow.python.framework.ops import register_proto_function\n\nregister_proto_function(\n    ops.GraphKeys.LOCAL_VARIABLES,\n    proto_type=variable_pb2.VariableDef,\n    to_proto=variables.Variable.to_proto,\n    from_proto=variables.Variable.from_proto)", "body": "------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution**: Darwin Austins-MBP 16.5.0 Darwin Kernel Version 16.5.0: Fri Mar  3 16:52:33 PST 2017; root:xnu-3789.51.2~3/RELEASE_X86_64 x86_64\r\nMac OS X 10.12.4\r\n- **TensorFlow installed from (source or binary)**:binary\r\n- **TensorFlow version (use command below)**:v1.1.0-rc0-61-g1ec6ed5 1.1.0\r\n- **Bazel version (if compiling from source)**:0.4.5\r\n- **CUDA/cuDNN version**:None\r\n- **GPU model and memory**:None\r\n- **Exact command to reproduce**: Ref to Codes\r\n\r\n### tensorflow import \r\n    tf.VERSION = 1.1.0\r\n    tf.GIT_VERSION = v1.1.0-rc0-61-g1ec6ed5\r\n    tf.COMPILER_VERSION = v1.1.0-rc0-61-g1ec6ed5\r\n    Sanity check: array([1], dtype=int32)\r\n\r\n\r\n\r\n### Describe the problem\r\nAfter export and import a meta graph with uninitialized local variables,\r\nYou can not inittialize them with sess.run(tf. local_variables_initializer()), cause\r\nTF do not register variable's proto function with key 'LOCAL_VARIABLES' and when \r\nexport meta graph to protobuf, source code can not find to_proto function from repository.\r\n\r\n\r\n### Source code / logs\r\n```python\r\nimport tensorflow as tf\r\n\r\ngraph = tf.Graph()\r\nwith graph.as_default():\r\n    x = tf.Variable(1, collections=[tf.GraphKeys.LOCAL_VARIABLES])\r\n    y = tf.Variable(1)\r\n    z = x + y\r\norigin_meta_graph = tf.train.export_meta_graph(graph=graph)\r\nnew_graph = tf.Graph()\r\nwith new_graph.as_default():\r\n    tf.train.import_meta_graph(origin_meta_graph)\r\n    init = tf.local_variables_initializer()\r\nwith tf.Session() as sess:\r\n    sess.run(init)\r\n```\r\n\r\n```bash\r\nTraceback (most recent call last):\r\n  File \"/Users/austin/workspace/aip/3rd/tensorflow/tensorflow/test.py\", line 12, in <module>\r\n    init = tf.local_variables_initializer()\r\n  File \"/Users/austin/workspace/aip/3rd/tensorflow/venv/lib/python3.6/site-packages/tensorflow/python/ops/variables.py\", line 1184, in local_variables_initializer\r\n    return variables_initializer(local_variables())\r\n  File \"/Users/austin/workspace/aip/3rd/tensorflow/venv/lib/python3.6/site-packages/tensorflow/python/ops/variables.py\", line 1149, in variables_initializer\r\n    return control_flow_ops.group(*[v.initializer for v in var_list], name=name)\r\n  File \"/Users/austin/workspace/aip/3rd/tensorflow/venv/lib/python3.6/site-packages/tensorflow/python/ops/variables.py\", line 1149, in <listcomp>\r\n    return control_flow_ops.group(*[v.initializer for v in var_list], name=name)\r\nAttributeError: 'Tensor' object has no attribute 'initializer'\r\n```\r\n\r\n```python\r\nimport tensorflow as tf\r\n\r\ngraph = tf.Graph()\r\nwith graph.as_default():\r\n    x = tf.Variable(1, collections=[tf.GraphKeys.LOCAL_VARIABLES])\r\n    y = tf.Variable(1)\r\n    z = x + y\r\norigin_meta_graph = tf.train.export_meta_graph(graph=graph)\r\nnew_graph = tf.Graph()\r\nwith new_graph.as_default():\r\n    tf.train.import_meta_graph(origin_meta_graph)\r\nprint(graph.get_collection(tf.GraphKeys.LOCAL_VARIABLES))\r\nprint(new_graph.get_collection(tf.GraphKeys.LOCAL_VARIABLES))\r\n```\r\n\r\n```bash\r\n[<tf.Variable 'Variable:0' shape=() dtype=int32_ref>]\r\n[<tf.Tensor 'Variable:0' shape=() dtype=int32_ref>]\r\n```\r\nAs it show above, in origin graph local_variable collection is a list of **tf.Variable**\r\nbut in the new graph, is a list of **tf.Tensor**\r\n\r\n### Work around\r\nAdd following registration in your model core\r\nOR Ref to this [PR](https://github.com/tensorflow/tensorflow/pull/9674)\r\n\r\n```python\r\nfrom tensorflow.core.framework import variable_pb2\r\nfrom tensorflow.python.framework import ops\r\nfrom tensorflow.python.ops import variables\r\nfrom tensorflow.python.framework.ops import register_proto_function\r\n\r\nregister_proto_function(\r\n    ops.GraphKeys.LOCAL_VARIABLES,\r\n    proto_type=variable_pb2.VariableDef,\r\n    to_proto=variables.Variable.to_proto,\r\n    from_proto=variables.Variable.from_proto)\r\n```"}