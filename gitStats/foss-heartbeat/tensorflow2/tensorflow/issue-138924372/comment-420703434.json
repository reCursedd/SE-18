{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/420703434", "html_url": "https://github.com/tensorflow/tensorflow/issues/1415#issuecomment-420703434", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1415", "id": 420703434, "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDcwMzQzNA==", "user": {"login": "theacodes", "id": 250995, "node_id": "MDQ6VXNlcjI1MDk5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theacodes", "html_url": "https://github.com/theacodes", "followers_url": "https://api.github.com/users/theacodes/followers", "following_url": "https://api.github.com/users/theacodes/following{/other_user}", "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions", "organizations_url": "https://api.github.com/users/theacodes/orgs", "repos_url": "https://api.github.com/users/theacodes/repos", "events_url": "https://api.github.com/users/theacodes/events{/privacy}", "received_events_url": "https://api.github.com/users/theacodes/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-12T16:01:28Z", "updated_at": "2018-09-12T16:01:28Z", "author_association": "NONE", "body_html": "<p>Hi there, I'm the author of <a href=\"https://packaging.python.org/guides/packaging-namespace-packages/\" rel=\"nofollow\">https://packaging.python.org/guides/packaging-namespace-packages/</a> and the \"gatekeeper\" as such of the <code>google</code> and <code>google.cloud</code> package namespaces.</p>\n<blockquote>\n<p>This is because some Python module pretend to support Python 2.x but rely on features introduced in Python 3.3, such as implicit namespace packages (PEP 420).</p>\n</blockquote>\n<p>This isn't true. We use pkg-resources namespaces for <code>google</code> and <code>google.cloud</code> for the broadest compatibility. This works fine on Python 2.7. We can't switch to any other without a coordinated release of several hundred packages.</p>\n<blockquote>\n<p>This has apparently been discussed numerous times, fixed in some versions, just to be re-introduced later, so at that point, after several years and countless bug reports, \u00af_(\u30c4)_/\u00af</p>\n</blockquote>\n<p>This isn't necessarily protobuf's fault. As far as I can tell, they've always had the proper incantations in <code>google/__init__.py</code> and <code>setup.py</code> to activate the namespace package logic and play nicely across all of the other Google packages.</p>\n<p>What <em>could</em> be happening is various bugs in pip, setuptools, and fun issues introduced by downstream re-packaging (such as debian) where the right combination of things produces this error.</p>\n<p>This is why we always recommend to <em>use a virtualenv</em> and <em>use only an up-to-date pip</em> for installing Python packages for development.</p>", "body_text": "Hi there, I'm the author of https://packaging.python.org/guides/packaging-namespace-packages/ and the \"gatekeeper\" as such of the google and google.cloud package namespaces.\n\nThis is because some Python module pretend to support Python 2.x but rely on features introduced in Python 3.3, such as implicit namespace packages (PEP 420).\n\nThis isn't true. We use pkg-resources namespaces for google and google.cloud for the broadest compatibility. This works fine on Python 2.7. We can't switch to any other without a coordinated release of several hundred packages.\n\nThis has apparently been discussed numerous times, fixed in some versions, just to be re-introduced later, so at that point, after several years and countless bug reports, \u00af_(\u30c4)_/\u00af\n\nThis isn't necessarily protobuf's fault. As far as I can tell, they've always had the proper incantations in google/__init__.py and setup.py to activate the namespace package logic and play nicely across all of the other Google packages.\nWhat could be happening is various bugs in pip, setuptools, and fun issues introduced by downstream re-packaging (such as debian) where the right combination of things produces this error.\nThis is why we always recommend to use a virtualenv and use only an up-to-date pip for installing Python packages for development.", "body": "Hi there, I'm the author of https://packaging.python.org/guides/packaging-namespace-packages/ and the \"gatekeeper\" as such of the `google` and `google.cloud` package namespaces.\r\n\r\n> This is because some Python module pretend to support Python 2.x but rely on features introduced in Python 3.3, such as implicit namespace packages (PEP 420).\r\n\r\nThis isn't true. We use pkg-resources namespaces for `google` and `google.cloud` for the broadest compatibility. This works fine on Python 2.7. We can't switch to any other without a coordinated release of several hundred packages.\r\n\r\n> This has apparently been discussed numerous times, fixed in some versions, just to be re-introduced later, so at that point, after several years and countless bug reports, \u00af_(\u30c4)_/\u00af\r\n\r\nThis isn't necessarily protobuf's fault. As far as I can tell, they've always had the proper incantations in `google/__init__.py` and `setup.py` to activate the namespace package logic and play nicely across all of the other Google packages.\r\n\r\nWhat *could* be happening is various bugs in pip, setuptools, and fun issues introduced by downstream re-packaging (such as debian) where the right combination of things produces this error.\r\n\r\nThis is why we always recommend to *use a virtualenv* and *use only an up-to-date pip* for installing Python packages for development."}