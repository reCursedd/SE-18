{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/203127906", "pull_request_review_id": 137953289, "id": 203127906, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzEyNzkwNg==", "diff_hunk": "@@ -51,6 +65,14 @@ TRTDeviceAllocator::TRTDeviceAllocator(tensorflow::Allocator* allocator)\n \n void TRTDeviceAllocator::free(void* memory) {\n   VLOG(2) << \"Deallocating @ \" << memory;\n+  // allocated memory adjusted for alignment, restore the original pointer\n+  if (mem_map.count(memory) != 0) {", "path": "tensorflow/contrib/tensorrt/resources/trt_allocator.cc", "position": null, "original_position": 29, "commit_id": "fbfc8db63ca6bbabcede9dcb8b2bd8989ebebcd9", "original_commit_id": "ccfc6845916e24635ba1600cae222041c14c14fe", "user": {"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}, "body": "It would be more efficient to implement this as:\r\n```\r\nauto alloc_mem_it = mem_map.find(memory);\r\nif (alloc_mem_it != mem_map.end()) {\r\n  memory = *alloc_mem_it;\r\n  mem_map.erase(alloc_mem_it);   // O(1) complexity.\r\n}\r\nCHECK(mem_pool.erase(memory) != 0);\r\n```", "created_at": "2018-07-17T18:15:46Z", "updated_at": "2018-07-18T18:22:43Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/20862#discussion_r203127906", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/20862", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/203127906"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/20862#discussion_r203127906"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/20862"}}, "body_html": "<p>It would be more efficient to implement this as:</p>\n<pre><code>auto alloc_mem_it = mem_map.find(memory);\nif (alloc_mem_it != mem_map.end()) {\n  memory = *alloc_mem_it;\n  mem_map.erase(alloc_mem_it);   // O(1) complexity.\n}\nCHECK(mem_pool.erase(memory) != 0);\n</code></pre>", "body_text": "It would be more efficient to implement this as:\nauto alloc_mem_it = mem_map.find(memory);\nif (alloc_mem_it != mem_map.end()) {\n  memory = *alloc_mem_it;\n  mem_map.erase(alloc_mem_it);   // O(1) complexity.\n}\nCHECK(mem_pool.erase(memory) != 0);"}