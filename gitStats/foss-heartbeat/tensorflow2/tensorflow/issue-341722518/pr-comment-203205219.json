{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/203205219", "pull_request_review_id": 138049407, "id": 203205219, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzIwNTIxOQ==", "diff_hunk": "@@ -37,8 +37,20 @@ void TRTCudaAllocator::free(void* memory) { cudaFree(memory); }\n \n void* TRTDeviceAllocator::allocate(uint64_t size, uint64_t alignment,\n                                    uint32_t flags) {\n+  // WAR for allocator alignment requirement\n+  alignment = 512;\n   assert((alignment & (alignment - 1)) == 0);  // zero or a power of 2.\n-  void* mem = allocator_->AllocateRaw(alignment, size);\n+  void* mem = allocator_->AllocateRaw(alignment, size + alignment);\n+  CHECK(mem);\n+\n+  CHECK(mem_pool_.insert(mem).second);\n+  void* alloc_mem = mem;\n+  uint64_t total_size = size + alignment;\n+  std::align(alignment, size, mem, total_size);", "path": "tensorflow/contrib/tensorrt/resources/trt_allocator.cc", "position": null, "original_position": 14, "commit_id": "fbfc8db63ca6bbabcede9dcb8b2bd8989ebebcd9", "original_commit_id": "6d0c3acc5a728652b77914a38482f9592578e0df", "user": {"login": "jjsjann123", "id": 3709243, "node_id": "MDQ6VXNlcjM3MDkyNDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3709243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jjsjann123", "html_url": "https://github.com/jjsjann123", "followers_url": "https://api.github.com/users/jjsjann123/followers", "following_url": "https://api.github.com/users/jjsjann123/following{/other_user}", "gists_url": "https://api.github.com/users/jjsjann123/gists{/gist_id}", "starred_url": "https://api.github.com/users/jjsjann123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jjsjann123/subscriptions", "organizations_url": "https://api.github.com/users/jjsjann123/orgs", "repos_url": "https://api.github.com/users/jjsjann123/repos", "events_url": "https://api.github.com/users/jjsjann123/events{/privacy}", "received_events_url": "https://api.github.com/users/jjsjann123/received_events", "type": "User", "site_admin": false}, "body": "Good catch, I missed this line: \"The function modifies the pointer only if it would be possible to fit the wanted number of bytes aligned by the given alignment into the buffer. If the buffer is too small, the function does nothing and returns nullptr.\"\r\nWould update the later CHECK(mem) into checking the return of this function instead.", "created_at": "2018-07-17T22:46:58Z", "updated_at": "2018-07-18T18:22:43Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/20862#discussion_r203205219", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/20862", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/203205219"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/20862#discussion_r203205219"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/20862"}}, "body_html": "<p>Good catch, I missed this line: \"The function modifies the pointer only if it would be possible to fit the wanted number of bytes aligned by the given alignment into the buffer. If the buffer is too small, the function does nothing and returns nullptr.\"<br>\nWould update the later CHECK(mem) into checking the return of this function instead.</p>", "body_text": "Good catch, I missed this line: \"The function modifies the pointer only if it would be possible to fit the wanted number of bytes aligned by the given alignment into the buffer. If the buffer is too small, the function does nothing and returns nullptr.\"\nWould update the later CHECK(mem) into checking the return of this function instead.", "in_reply_to_id": 203202825}