{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/379809258", "html_url": "https://github.com/tensorflow/tensorflow/issues/9243#issuecomment-379809258", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9243", "id": 379809258, "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTgwOTI1OA==", "user": {"login": "kirk86", "id": 2902390, "node_id": "MDQ6VXNlcjI5MDIzOTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/2902390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirk86", "html_url": "https://github.com/kirk86", "followers_url": "https://api.github.com/users/kirk86/followers", "following_url": "https://api.github.com/users/kirk86/following{/other_user}", "gists_url": "https://api.github.com/users/kirk86/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirk86/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirk86/subscriptions", "organizations_url": "https://api.github.com/users/kirk86/orgs", "repos_url": "https://api.github.com/users/kirk86/repos", "events_url": "https://api.github.com/users/kirk86/events{/privacy}", "received_events_url": "https://api.github.com/users/kirk86/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-09T16:19:17Z", "updated_at": "2018-04-09T16:20:04Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=26311384\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Spandyie\">@Spandyie</a> try the following:</p>\n<pre><code>filter_size = 4\ninput_channels = 3\noutput_filters = 64\nx = tf.placeholder(tf.float32, shape=[None, 512, 512, 3])\ny = tf.nn.conv2d(x, filter=tf.Variable(tf.truncated_normal([filter_size, filter_size, input_channels, output_filters], stddev=0.5)), strides=[1,1,1,1] , padding='SAME')\n</code></pre>\n<p>I guess this is the way to use <code>tf.nn.conv2d</code>.</p>", "body_text": "@Spandyie try the following:\nfilter_size = 4\ninput_channels = 3\noutput_filters = 64\nx = tf.placeholder(tf.float32, shape=[None, 512, 512, 3])\ny = tf.nn.conv2d(x, filter=tf.Variable(tf.truncated_normal([filter_size, filter_size, input_channels, output_filters], stddev=0.5)), strides=[1,1,1,1] , padding='SAME')\n\nI guess this is the way to use tf.nn.conv2d.", "body": "@Spandyie try the following:\r\n```\r\nfilter_size = 4\r\ninput_channels = 3\r\noutput_filters = 64\r\nx = tf.placeholder(tf.float32, shape=[None, 512, 512, 3])\r\ny = tf.nn.conv2d(x, filter=tf.Variable(tf.truncated_normal([filter_size, filter_size, input_channels, output_filters], stddev=0.5)), strides=[1,1,1,1] , padding='SAME')\r\n```\r\n\r\nI guess this is the way to use `tf.nn.conv2d`."}