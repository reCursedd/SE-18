{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/414197292", "html_url": "https://github.com/tensorflow/tensorflow/issues/21655#issuecomment-414197292", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21655", "id": 414197292, "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDE5NzI5Mg==", "user": {"login": "lei6315", "id": 17965302, "node_id": "MDQ6VXNlcjE3OTY1MzAy", "avatar_url": "https://avatars1.githubusercontent.com/u/17965302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lei6315", "html_url": "https://github.com/lei6315", "followers_url": "https://api.github.com/users/lei6315/followers", "following_url": "https://api.github.com/users/lei6315/following{/other_user}", "gists_url": "https://api.github.com/users/lei6315/gists{/gist_id}", "starred_url": "https://api.github.com/users/lei6315/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lei6315/subscriptions", "organizations_url": "https://api.github.com/users/lei6315/orgs", "repos_url": "https://api.github.com/users/lei6315/repos", "events_url": "https://api.github.com/users/lei6315/events{/privacy}", "received_events_url": "https://api.github.com/users/lei6315/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-20T04:56:40Z", "updated_at": "2018-08-20T04:56:40Z", "author_association": "NONE", "body_html": "<p>This is part of my code below. When I do some complicated excise , I need transform tensor to PIL.Image object or numpy array,then transform to a tensor, this is not convenient, also has some information loss in the transformation. So I think tf.image should provide more function to handle image.Sorry,my English is poor,Thank you~~~</p>\n<pre><code>   ```\ndef openImage(image):\n     # return Image.open(image, mode=\"r\")\n     img_data = tf.gfile.FastGFile(image, 'rb').read()\n     img_data = tf.image.decode_image(img_data)\n     with tf.Session() as sess:\n         return Image.fromarray(sess.run(img_data))\n\ndef randomGaussian(image, mean=0.2, sigma=0.3):\n    \"\"\"\n     \u5bf9\u56fe\u50cf\u8fdb\u884c\u9ad8\u65af\u566a\u58f0\u5904\u7406\n    :param image:\n    :return:\n    \"\"\"\n\n    def gaussianNoisy(im, mean=0.2, sigma=0.3):\n        \"\"\"\n        \u5bf9\u56fe\u50cf\u505a\u9ad8\u65af\u566a\u97f3\u5904\u7406\n        :param im: \u5355\u901a\u9053\u56fe\u50cf\n        :param mean: \u504f\u79fb\u91cf\n        :param sigma: \u6807\u51c6\u5dee\n        :return:\n        \"\"\"\n        for _i in range(len(im)):\n            im[_i] += random.gauss(mean, sigma)\n        return im\n\n    # \u5c06\u56fe\u50cf\u8f6c\u5316\u6210\u6570\u7ec4\n\n    img = np.asarray(image)\n    img.flags.writeable = True  # \u5c06\u6570\u7ec4\u6539\u4e3a\u8bfb\u5199\u6a21\u5f0f\n    width, height = img.shape[:2]\n    img_r = gaussianNoisy(img[:, :, 0].flatten(), mean, sigma)\n    img_g = gaussianNoisy(img[:, :, 1].flatten(), mean, sigma)\n    img_b = gaussianNoisy(img[:, :, 2].flatten(), mean, sigma)\n    img[:, :, 0] = img_r.reshape([width, height])\n    img[:, :, 1] = img_g.reshape([width, height])\n    img[:, :, 2] = img_b.reshape([width, height])\n    return Image.fromarray(np.uint8(img))\n\ndef saveImage(image, path):\n    # image.save(path)\n    with tf.Session() as sess:\n        img_data = tf.image.convert_image_dtype(tf.convert_to_tensor(np.array(image)), dtype=tf.uint8)\n        with tf.gfile.FastGFile(path, 'w') as f:\n            img_type = os.path.splitext(path)[1]\n            if img_type.lower() == '.png':\n                f.write(sess.run(tf.image.encode_png(img_data)))\n            elif img_type.lower() == '.jpeg' or img_type == '.jpg':\n                f.write(sess.run(tf.image.encode_jpeg(img_data)))\n</code></pre>\n<pre><code>Information\nHave I written custom code:yes\nOS Platform and Distribution:OS Platform\nTensorFlow installed from:none\nTensorFlow version:1.6\nBazel version: 0.11.1\nCUDA/cuDNN version9.0.176\nGPU model and memory:12GB\nExact command to reproduce:none\nMobile device:none\n</code></pre>", "body_text": "This is part of my code below. When I do some complicated excise , I need transform tensor to PIL.Image object or numpy array,then transform to a tensor, this is not convenient, also has some information loss in the transformation. So I think tf.image should provide more function to handle image.Sorry,my English is poor,Thank you~~~\n   ```\ndef openImage(image):\n     # return Image.open(image, mode=\"r\")\n     img_data = tf.gfile.FastGFile(image, 'rb').read()\n     img_data = tf.image.decode_image(img_data)\n     with tf.Session() as sess:\n         return Image.fromarray(sess.run(img_data))\n\ndef randomGaussian(image, mean=0.2, sigma=0.3):\n    \"\"\"\n     \u5bf9\u56fe\u50cf\u8fdb\u884c\u9ad8\u65af\u566a\u58f0\u5904\u7406\n    :param image:\n    :return:\n    \"\"\"\n\n    def gaussianNoisy(im, mean=0.2, sigma=0.3):\n        \"\"\"\n        \u5bf9\u56fe\u50cf\u505a\u9ad8\u65af\u566a\u97f3\u5904\u7406\n        :param im: \u5355\u901a\u9053\u56fe\u50cf\n        :param mean: \u504f\u79fb\u91cf\n        :param sigma: \u6807\u51c6\u5dee\n        :return:\n        \"\"\"\n        for _i in range(len(im)):\n            im[_i] += random.gauss(mean, sigma)\n        return im\n\n    # \u5c06\u56fe\u50cf\u8f6c\u5316\u6210\u6570\u7ec4\n\n    img = np.asarray(image)\n    img.flags.writeable = True  # \u5c06\u6570\u7ec4\u6539\u4e3a\u8bfb\u5199\u6a21\u5f0f\n    width, height = img.shape[:2]\n    img_r = gaussianNoisy(img[:, :, 0].flatten(), mean, sigma)\n    img_g = gaussianNoisy(img[:, :, 1].flatten(), mean, sigma)\n    img_b = gaussianNoisy(img[:, :, 2].flatten(), mean, sigma)\n    img[:, :, 0] = img_r.reshape([width, height])\n    img[:, :, 1] = img_g.reshape([width, height])\n    img[:, :, 2] = img_b.reshape([width, height])\n    return Image.fromarray(np.uint8(img))\n\ndef saveImage(image, path):\n    # image.save(path)\n    with tf.Session() as sess:\n        img_data = tf.image.convert_image_dtype(tf.convert_to_tensor(np.array(image)), dtype=tf.uint8)\n        with tf.gfile.FastGFile(path, 'w') as f:\n            img_type = os.path.splitext(path)[1]\n            if img_type.lower() == '.png':\n                f.write(sess.run(tf.image.encode_png(img_data)))\n            elif img_type.lower() == '.jpeg' or img_type == '.jpg':\n                f.write(sess.run(tf.image.encode_jpeg(img_data)))\n\nInformation\nHave I written custom code:yes\nOS Platform and Distribution:OS Platform\nTensorFlow installed from:none\nTensorFlow version:1.6\nBazel version: 0.11.1\nCUDA/cuDNN version9.0.176\nGPU model and memory:12GB\nExact command to reproduce:none\nMobile device:none", "body": "This is part of my code below. When I do some complicated excise , I need transform tensor to PIL.Image object or numpy array,then transform to a tensor, this is not convenient, also has some information loss in the transformation. So I think tf.image should provide more function to handle image.Sorry,my English is poor,Thank you~~~\r\n\r\n       ```\r\n    def openImage(image):\r\n         # return Image.open(image, mode=\"r\")\r\n         img_data = tf.gfile.FastGFile(image, 'rb').read()\r\n         img_data = tf.image.decode_image(img_data)\r\n         with tf.Session() as sess:\r\n             return Image.fromarray(sess.run(img_data))\r\n\r\n    def randomGaussian(image, mean=0.2, sigma=0.3):\r\n        \"\"\"\r\n         \u5bf9\u56fe\u50cf\u8fdb\u884c\u9ad8\u65af\u566a\u58f0\u5904\u7406\r\n        :param image:\r\n        :return:\r\n        \"\"\"\r\n\r\n        def gaussianNoisy(im, mean=0.2, sigma=0.3):\r\n            \"\"\"\r\n            \u5bf9\u56fe\u50cf\u505a\u9ad8\u65af\u566a\u97f3\u5904\u7406\r\n            :param im: \u5355\u901a\u9053\u56fe\u50cf\r\n            :param mean: \u504f\u79fb\u91cf\r\n            :param sigma: \u6807\u51c6\u5dee\r\n            :return:\r\n            \"\"\"\r\n            for _i in range(len(im)):\r\n                im[_i] += random.gauss(mean, sigma)\r\n            return im\r\n\r\n        # \u5c06\u56fe\u50cf\u8f6c\u5316\u6210\u6570\u7ec4\r\n\r\n        img = np.asarray(image)\r\n        img.flags.writeable = True  # \u5c06\u6570\u7ec4\u6539\u4e3a\u8bfb\u5199\u6a21\u5f0f\r\n        width, height = img.shape[:2]\r\n        img_r = gaussianNoisy(img[:, :, 0].flatten(), mean, sigma)\r\n        img_g = gaussianNoisy(img[:, :, 1].flatten(), mean, sigma)\r\n        img_b = gaussianNoisy(img[:, :, 2].flatten(), mean, sigma)\r\n        img[:, :, 0] = img_r.reshape([width, height])\r\n        img[:, :, 1] = img_g.reshape([width, height])\r\n        img[:, :, 2] = img_b.reshape([width, height])\r\n        return Image.fromarray(np.uint8(img))\r\n\r\n    def saveImage(image, path):\r\n        # image.save(path)\r\n        with tf.Session() as sess:\r\n            img_data = tf.image.convert_image_dtype(tf.convert_to_tensor(np.array(image)), dtype=tf.uint8)\r\n            with tf.gfile.FastGFile(path, 'w') as f:\r\n                img_type = os.path.splitext(path)[1]\r\n                if img_type.lower() == '.png':\r\n                    f.write(sess.run(tf.image.encode_png(img_data)))\r\n                elif img_type.lower() == '.jpeg' or img_type == '.jpg':\r\n                    f.write(sess.run(tf.image.encode_jpeg(img_data)))\r\n\r\n```\r\nInformation\r\nHave I written custom code:yes\r\nOS Platform and Distribution:OS Platform\r\nTensorFlow installed from:none\r\nTensorFlow version:1.6\r\nBazel version: 0.11.1\r\nCUDA/cuDNN version9.0.176\r\nGPU model and memory:12GB\r\nExact command to reproduce:none\r\nMobile device:none"}