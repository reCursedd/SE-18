{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/303870375", "html_url": "https://github.com/tensorflow/tensorflow/issues/10071#issuecomment-303870375", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10071", "id": 303870375, "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzg3MDM3NQ==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-24T22:30:44Z", "updated_at": "2017-05-24T22:30:44Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Apparently it's a bug in the CMake build for jemalloc, which we include:</p>\n<p><a href=\"https://github.com/jemalloc/jemalloc-cmake/blob/88c2dc8be23f85694bc3a3f015e0f9fb8f8ab942/CMakeLists.txt#L1\">https://github.com/jemalloc/jemalloc-cmake/blob/88c2dc8be23f85694bc3a3f015e0f9fb8f8ab942/CMakeLists.txt#L1</a></p>\n<pre><code># This make file supports Windows build of Jemalloc\n#\n# Prerequisites:\n#     You must have Visual Studio 2013 Update 4 installed or Visual Studio 2015 Update 1.\n#      Start the Developer Command Prompt window that is a part of Visual Studio installation.\n#      This will provide you with the accessible toolchain commands.\n#      You must have a path git.exe in your %PATH%.\n#\n# 1. Create a build directory\n#\n# 2. Run cmake to generate project files for Windows\n#        sample command: cmake -G \"Visual Studio 12 Win64\"  ..\n#        OR for VS Studio 15 cmake -G \"Visual Studio 14 Win64\"  [optional switches described below] ..\n#\n# 3. Then build the project in debug mode (you may want to add /m[:&lt;N&gt;] flag to run msbuild in &lt;N&gt; parallel threads\n#                                          or simply /m ot use all avail cores)\n#        msbuild jemalloc.sln\n#\n# 4. And release mode (/m[:&lt;N&gt;] is also supported)\n#        msbuild jemalloc.sln /p:Configuration=Release\n#\n</code></pre>\n<p>In particular, that build generates a file that includes the <code>#include &lt;Windows.h&gt;</code> and unconditionally compiles it, leading to the mysterious error that you're seeing.</p>\n<p>It might be possible to rig the CMake build on Linux to include the non-CMake build for jemalloc. Since we're prioritizing the Bazel build on Linux, I'm going to mark this as contributions welcome.</p>", "body_text": "Apparently it's a bug in the CMake build for jemalloc, which we include:\nhttps://github.com/jemalloc/jemalloc-cmake/blob/88c2dc8be23f85694bc3a3f015e0f9fb8f8ab942/CMakeLists.txt#L1\n# This make file supports Windows build of Jemalloc\n#\n# Prerequisites:\n#     You must have Visual Studio 2013 Update 4 installed or Visual Studio 2015 Update 1.\n#      Start the Developer Command Prompt window that is a part of Visual Studio installation.\n#      This will provide you with the accessible toolchain commands.\n#      You must have a path git.exe in your %PATH%.\n#\n# 1. Create a build directory\n#\n# 2. Run cmake to generate project files for Windows\n#        sample command: cmake -G \"Visual Studio 12 Win64\"  ..\n#        OR for VS Studio 15 cmake -G \"Visual Studio 14 Win64\"  [optional switches described below] ..\n#\n# 3. Then build the project in debug mode (you may want to add /m[:<N>] flag to run msbuild in <N> parallel threads\n#                                          or simply /m ot use all avail cores)\n#        msbuild jemalloc.sln\n#\n# 4. And release mode (/m[:<N>] is also supported)\n#        msbuild jemalloc.sln /p:Configuration=Release\n#\n\nIn particular, that build generates a file that includes the #include <Windows.h> and unconditionally compiles it, leading to the mysterious error that you're seeing.\nIt might be possible to rig the CMake build on Linux to include the non-CMake build for jemalloc. Since we're prioritizing the Bazel build on Linux, I'm going to mark this as contributions welcome.", "body": "Apparently it's a bug in the CMake build for jemalloc, which we include:\r\n\r\nhttps://github.com/jemalloc/jemalloc-cmake/blob/88c2dc8be23f85694bc3a3f015e0f9fb8f8ab942/CMakeLists.txt#L1\r\n\r\n```\r\n# This make file supports Windows build of Jemalloc\r\n#\r\n# Prerequisites:\r\n#     You must have Visual Studio 2013 Update 4 installed or Visual Studio 2015 Update 1.\r\n#      Start the Developer Command Prompt window that is a part of Visual Studio installation.\r\n#      This will provide you with the accessible toolchain commands.\r\n#      You must have a path git.exe in your %PATH%.\r\n#\r\n# 1. Create a build directory\r\n#\r\n# 2. Run cmake to generate project files for Windows\r\n#        sample command: cmake -G \"Visual Studio 12 Win64\"  ..\r\n#        OR for VS Studio 15 cmake -G \"Visual Studio 14 Win64\"  [optional switches described below] ..\r\n#\r\n# 3. Then build the project in debug mode (you may want to add /m[:<N>] flag to run msbuild in <N> parallel threads\r\n#                                          or simply /m ot use all avail cores)\r\n#        msbuild jemalloc.sln\r\n#\r\n# 4. And release mode (/m[:<N>] is also supported)\r\n#        msbuild jemalloc.sln /p:Configuration=Release\r\n#\r\n```\r\n\r\nIn particular, that build generates a file that includes the `#include <Windows.h>` and unconditionally compiles it, leading to the mysterious error that you're seeing.\r\n\r\nIt might be possible to rig the CMake build on Linux to include the non-CMake build for jemalloc. Since we're prioritizing the Bazel build on Linux, I'm going to mark this as contributions welcome."}