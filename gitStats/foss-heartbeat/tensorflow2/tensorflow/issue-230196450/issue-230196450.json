{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10071", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10071/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10071/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10071/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/10071", "id": 230196450, "node_id": "MDU6SXNzdWUyMzAxOTY0NTA=", "number": 10071, "title": "Cannot build jemalloc support using CMake on Linux (fails trying to include <windows.h>)", "user": {"login": "HFTrader", "id": 11621271, "node_id": "MDQ6VXNlcjExNjIxMjcx", "avatar_url": "https://avatars1.githubusercontent.com/u/11621271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HFTrader", "html_url": "https://github.com/HFTrader", "followers_url": "https://api.github.com/users/HFTrader/followers", "following_url": "https://api.github.com/users/HFTrader/following{/other_user}", "gists_url": "https://api.github.com/users/HFTrader/gists{/gist_id}", "starred_url": "https://api.github.com/users/HFTrader/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HFTrader/subscriptions", "organizations_url": "https://api.github.com/users/HFTrader/orgs", "repos_url": "https://api.github.com/users/HFTrader/repos", "events_url": "https://api.github.com/users/HFTrader/events{/privacy}", "received_events_url": "https://api.github.com/users/HFTrader/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}, {"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-05-21T04:38:28Z", "updated_at": "2017-06-10T08:00:48Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>I am using the provided cmake build project files to compile tensorflow because I have a custom clang binary built with additional optimization passes of my own.</p>\n<p>The build works fine without Jemalloc</p>\n<pre><code>cmake -DCMAKE_BUILD_TYPE=Release ../tensorflow/contrib/cmake/  \nmake -j4   # compiles O.K.\n</code></pre>\n<p>but when I add the jemalloc option it fails.</p>\n<pre><code>cmake -Dtensorflow_ENABLE_JEMALLOC_SUPPORT=ON -DCMAKE_BUILD_TYPE=Release ../tensorflow/contrib/cmake/  \nmake \n\n[  5%] Performing configure step for 'jemalloc'\n-- CMAKE_C_COMPILER_ID: Clang\n-- void* size is 8\n-- int size is 4\n-- long size is 8\n-- long long size is 8\n-- intmax_t size is 8\n-- CMAKE_SYSTEM_NAME: Linux\n-- whether pause instruction is compilable ... yes\nCMake Error at Utilities.cmake:755 (message):\n  GetSystemPageSize failed compilation see\n  cmake/jemalloc/src/jemalloc/GetPageSize/getpagesize.log\nCall Stack (most recent call first):\n  CMakeLists.txt:464 (GetSystemPageSize)\n</code></pre>\n<p>Looking at cmake/jemalloc/src/jemalloc/GetPageSize/getpagesize.log there is</p>\n<pre><code>Building C object CMakeFiles/cmTC_129ba.dir/getpagesize.c.o\nclang     -o CMakeFiles/cmTC_129ba.dir/getpagesize.c.o   -c  tensorflow-github/build-cmake/jemalloc/src/jemalloc/GetPageSize/getpagesize.c\ntensorflow-github/build-cmake/jemalloc/src/jemalloc/GetPageSize/getpagesize.c:1:10: fatal error: 'windows.h' file not found\n#include &lt;windows.h&gt;\n             ^~~~~~~~~~~\n1 error generated.\n</code></pre>\n<p>By looking at getpagesize.c it is clear it is a windows-only source file that should not have been compiled on Linux.</p>\n<p>I went further investigating why jemalloc is trying to compile a windows source under Linux but I got nowhere after an hour or so. I lack understanding of the jemalloc build and I will continue to look into this but if you have someone on your side with a more prompt answer, that would save me time, thank you.</p>", "body_text": "I am using the provided cmake build project files to compile tensorflow because I have a custom clang binary built with additional optimization passes of my own.\nThe build works fine without Jemalloc\ncmake -DCMAKE_BUILD_TYPE=Release ../tensorflow/contrib/cmake/  \nmake -j4   # compiles O.K.\n\nbut when I add the jemalloc option it fails.\ncmake -Dtensorflow_ENABLE_JEMALLOC_SUPPORT=ON -DCMAKE_BUILD_TYPE=Release ../tensorflow/contrib/cmake/  \nmake \n\n[  5%] Performing configure step for 'jemalloc'\n-- CMAKE_C_COMPILER_ID: Clang\n-- void* size is 8\n-- int size is 4\n-- long size is 8\n-- long long size is 8\n-- intmax_t size is 8\n-- CMAKE_SYSTEM_NAME: Linux\n-- whether pause instruction is compilable ... yes\nCMake Error at Utilities.cmake:755 (message):\n  GetSystemPageSize failed compilation see\n  cmake/jemalloc/src/jemalloc/GetPageSize/getpagesize.log\nCall Stack (most recent call first):\n  CMakeLists.txt:464 (GetSystemPageSize)\n\nLooking at cmake/jemalloc/src/jemalloc/GetPageSize/getpagesize.log there is\nBuilding C object CMakeFiles/cmTC_129ba.dir/getpagesize.c.o\nclang     -o CMakeFiles/cmTC_129ba.dir/getpagesize.c.o   -c  tensorflow-github/build-cmake/jemalloc/src/jemalloc/GetPageSize/getpagesize.c\ntensorflow-github/build-cmake/jemalloc/src/jemalloc/GetPageSize/getpagesize.c:1:10: fatal error: 'windows.h' file not found\n#include <windows.h>\n             ^~~~~~~~~~~\n1 error generated.\n\nBy looking at getpagesize.c it is clear it is a windows-only source file that should not have been compiled on Linux.\nI went further investigating why jemalloc is trying to compile a windows source under Linux but I got nowhere after an hour or so. I lack understanding of the jemalloc build and I will continue to look into this but if you have someone on your side with a more prompt answer, that would save me time, thank you.", "body": "I am using the provided cmake build project files to compile tensorflow because I have a custom clang binary built with additional optimization passes of my own.\r\n\r\nThe build works fine without Jemalloc\r\n\r\n    cmake -DCMAKE_BUILD_TYPE=Release ../tensorflow/contrib/cmake/  \r\n    make -j4   # compiles O.K.\r\n\r\nbut when I add the jemalloc option it fails. \r\n\r\n    cmake -Dtensorflow_ENABLE_JEMALLOC_SUPPORT=ON -DCMAKE_BUILD_TYPE=Release ../tensorflow/contrib/cmake/  \r\n    make \r\n\r\n    [  5%] Performing configure step for 'jemalloc'\r\n    -- CMAKE_C_COMPILER_ID: Clang\r\n    -- void* size is 8\r\n    -- int size is 4\r\n    -- long size is 8\r\n    -- long long size is 8\r\n    -- intmax_t size is 8\r\n    -- CMAKE_SYSTEM_NAME: Linux\r\n    -- whether pause instruction is compilable ... yes\r\n    CMake Error at Utilities.cmake:755 (message):\r\n      GetSystemPageSize failed compilation see\r\n      cmake/jemalloc/src/jemalloc/GetPageSize/getpagesize.log\r\n    Call Stack (most recent call first):\r\n      CMakeLists.txt:464 (GetSystemPageSize)\r\n\r\n\r\nLooking at cmake/jemalloc/src/jemalloc/GetPageSize/getpagesize.log there is\r\n\r\n    Building C object CMakeFiles/cmTC_129ba.dir/getpagesize.c.o\r\n    clang     -o CMakeFiles/cmTC_129ba.dir/getpagesize.c.o   -c  tensorflow-github/build-cmake/jemalloc/src/jemalloc/GetPageSize/getpagesize.c\r\n    tensorflow-github/build-cmake/jemalloc/src/jemalloc/GetPageSize/getpagesize.c:1:10: fatal error: 'windows.h' file not found\r\n    #include <windows.h>\r\n                 ^~~~~~~~~~~\r\n    1 error generated.\r\n\r\nBy looking at getpagesize.c it is clear it is a windows-only source file that should not have been compiled on Linux.\r\n\r\nI went further investigating why jemalloc is trying to compile a windows source under Linux but I got nowhere after an hour or so. I lack understanding of the jemalloc build and I will continue to look into this but if you have someone on your side with a more prompt answer, that would save me time, thank you. \r\n"}