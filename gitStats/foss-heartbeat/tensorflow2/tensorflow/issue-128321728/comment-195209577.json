{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/195209577", "html_url": "https://github.com/tensorflow/tensorflow/issues/851#issuecomment-195209577", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/851", "id": 195209577, "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTIwOTU3Nw==", "user": {"login": "jmtatsch", "id": 3080674, "node_id": "MDQ6VXNlcjMwODA2NzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/3080674?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmtatsch", "html_url": "https://github.com/jmtatsch", "followers_url": "https://api.github.com/users/jmtatsch/followers", "following_url": "https://api.github.com/users/jmtatsch/following{/other_user}", "gists_url": "https://api.github.com/users/jmtatsch/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmtatsch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmtatsch/subscriptions", "organizations_url": "https://api.github.com/users/jmtatsch/orgs", "repos_url": "https://api.github.com/users/jmtatsch/repos", "events_url": "https://api.github.com/users/jmtatsch/events{/privacy}", "received_events_url": "https://api.github.com/users/jmtatsch/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-11T06:03:44Z", "updated_at": "2016-03-11T06:03:44Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6969686\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/benoitsteiner\">@benoitsteiner</a><br>\nany suggestions how this could be rewritten in a nvcc compatible manner?</p>\n<pre><code>// Support 5 or more arguments\ntemplate &lt;typename... AV&gt;\ninline void StrAppend(string *dest, const AlphaNum &amp;a, const AlphaNum &amp;b,\n                      const AlphaNum &amp;c, const AlphaNum &amp;d, const AlphaNum &amp;e,\n                      const AV &amp;... args) {\n  internal::AppendPieces(dest,\n                         {a.Piece(), b.Piece(), c.Piece(), d.Piece(), e.Piece(),\n                          static_cast&lt;const AlphaNum &amp;&gt;(args).Piece()...});\n}\n</code></pre>", "body_text": "@benoitsteiner\nany suggestions how this could be rewritten in a nvcc compatible manner?\n// Support 5 or more arguments\ntemplate <typename... AV>\ninline void StrAppend(string *dest, const AlphaNum &a, const AlphaNum &b,\n                      const AlphaNum &c, const AlphaNum &d, const AlphaNum &e,\n                      const AV &... args) {\n  internal::AppendPieces(dest,\n                         {a.Piece(), b.Piece(), c.Piece(), d.Piece(), e.Piece(),\n                          static_cast<const AlphaNum &>(args).Piece()...});\n}", "body": "@benoitsteiner \nany suggestions how this could be rewritten in a nvcc compatible manner?\n\n```\n// Support 5 or more arguments\ntemplate <typename... AV>\ninline void StrAppend(string *dest, const AlphaNum &a, const AlphaNum &b,\n                      const AlphaNum &c, const AlphaNum &d, const AlphaNum &e,\n                      const AV &... args) {\n  internal::AppendPieces(dest,\n                         {a.Piece(), b.Piece(), c.Piece(), d.Piece(), e.Piece(),\n                          static_cast<const AlphaNum &>(args).Piece()...});\n}\n```\n"}