{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/86216677", "pull_request_review_id": 6885428, "id": 86216677, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2MjE2Njc3", "diff_hunk": "@@ -65,10 +65,10 @@ void IntraProcessRendezvous::SameWorkerRecvDone(\n     StatusCallback done) {\n   // Do a quick copy (sharing the underlying buffer) if both tensors\n   // are on host memory.\n-  const bool src_host =\n-      (send_args.alloc_attrs.on_host() || parsed.src.type == \"CPU\");\n-  const bool dst_host =\n-      (recv_args.alloc_attrs.on_host() || parsed.dst.type == \"CPU\");\n+  const bool src_host = (send_args.alloc_attrs.on_host() ||\n+                         parsed.src.type == \"CPU\" || parsed.src.type == \"SYCL\");", "path": "tensorflow/core/common_runtime/rendezvous_mgr.cc", "position": null, "original_position": 9, "commit_id": "1f094bccdb1a607fcf8f67cacb4b614c7fc618f1", "original_commit_id": "174c6edb7dd5f99b4e9b0f45a0eaf978b578e85c", "user": {"login": "lukeiwanski", "id": 8373795, "node_id": "MDQ6VXNlcjgzNzM3OTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/8373795?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukeiwanski", "html_url": "https://github.com/lukeiwanski", "followers_url": "https://api.github.com/users/lukeiwanski/followers", "following_url": "https://api.github.com/users/lukeiwanski/following{/other_user}", "gists_url": "https://api.github.com/users/lukeiwanski/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukeiwanski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukeiwanski/subscriptions", "organizations_url": "https://api.github.com/users/lukeiwanski/orgs", "repos_url": "https://api.github.com/users/lukeiwanski/repos", "events_url": "https://api.github.com/users/lukeiwanski/events{/privacy}", "received_events_url": "https://api.github.com/users/lukeiwanski/received_events", "type": "User", "site_admin": false}, "body": "My understanding was that the SYCL part of Eigen will take care of data management and TensorFlow will deal only with the host memory.\nUnfortunately, I was proven wrong  by very simple python test that I created. \nTo this end I am studying the codebase in order to implement missing functionality in the SYCL TensorFlow code. Which seems to be pointing to device specific allocator.\nAnd yes you are right, SYCL has different address space for the data. SYCL manages data copies and dependencies internally via buffers and accessors and will maintain a CPU copy of the data when the buffer was initialised with a pointer.\n\n> the tensor being used as input to the sycl device must remain in CPU memory.\n\nCould you clarify exactly what you mean by that? Does that mean CUDA is deallocating memory once pushed to the Device memory?\n", "created_at": "2016-11-02T18:51:28Z", "updated_at": "2016-11-03T23:52:34Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/5267#discussion_r86216677", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/5267", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/86216677"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/5267#discussion_r86216677"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/5267"}}, "body_html": "<p>My understanding was that the SYCL part of Eigen will take care of data management and TensorFlow will deal only with the host memory.<br>\nUnfortunately, I was proven wrong  by very simple python test that I created.<br>\nTo this end I am studying the codebase in order to implement missing functionality in the SYCL TensorFlow code. Which seems to be pointing to device specific allocator.<br>\nAnd yes you are right, SYCL has different address space for the data. SYCL manages data copies and dependencies internally via buffers and accessors and will maintain a CPU copy of the data when the buffer was initialised with a pointer.</p>\n<blockquote>\n<p>the tensor being used as input to the sycl device must remain in CPU memory.</p>\n</blockquote>\n<p>Could you clarify exactly what you mean by that? Does that mean CUDA is deallocating memory once pushed to the Device memory?</p>", "body_text": "My understanding was that the SYCL part of Eigen will take care of data management and TensorFlow will deal only with the host memory.\nUnfortunately, I was proven wrong  by very simple python test that I created.\nTo this end I am studying the codebase in order to implement missing functionality in the SYCL TensorFlow code. Which seems to be pointing to device specific allocator.\nAnd yes you are right, SYCL has different address space for the data. SYCL manages data copies and dependencies internally via buffers and accessors and will maintain a CPU copy of the data when the buffer was initialised with a pointer.\n\nthe tensor being used as input to the sycl device must remain in CPU memory.\n\nCould you clarify exactly what you mean by that? Does that mean CUDA is deallocating memory once pushed to the Device memory?", "in_reply_to_id": 85631669}