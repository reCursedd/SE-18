{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12592", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12592/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12592/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12592/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/12592", "id": 252854126, "node_id": "MDU6SXNzdWUyNTI4NTQxMjY=", "number": 12592, "title": "Tensorflow internally creates operators", "user": {"login": "sj6077", "id": 2465713, "node_id": "MDQ6VXNlcjI0NjU3MTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/2465713?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sj6077", "html_url": "https://github.com/sj6077", "followers_url": "https://api.github.com/users/sj6077/followers", "following_url": "https://api.github.com/users/sj6077/following{/other_user}", "gists_url": "https://api.github.com/users/sj6077/gists{/gist_id}", "starred_url": "https://api.github.com/users/sj6077/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sj6077/subscriptions", "organizations_url": "https://api.github.com/users/sj6077/orgs", "repos_url": "https://api.github.com/users/sj6077/repos", "events_url": "https://api.github.com/users/sj6077/events{/privacy}", "received_events_url": "https://api.github.com/users/sj6077/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-25T10:03:46Z", "updated_at": "2017-08-28T04:27:45Z", "closed_at": "2017-08-28T04:27:45Z", "author_association": "CONTRIBUTOR", "body_html": "<p>System information</p>\n<p>Have I written custom code (as opposed to using a stock example script provided in TensorFlow):<br>\nYes, I made custom distributed inception code<br>\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 14.04<br>\nTensorFlow installed from (source or binary): Unmodified source with RDMA Verbs enabled<br>\nTensorFlow version (use command below): 1.3.0-rc1<br>\nPython version: 2.7.12<br>\nBazel version (if compiling from source): 0.5.1<br>\nCUDA/cuDNN version: 8.0/5.1.5<br>\nGPU model and memory: NVIDIA TITAN Xp PCIe 12GB (4 per node)</p>\n<p>I tried to run distributed inception, and I removed some nodes by breaking control dependencies in the graph.  However, tensorflow creates operators such as \"inception_v3/mixed_17x17x1280a/branch7x7x3/Conv_2/BatchNorm/AssignMovingAvg_1_S21149\" internally and called it. Why this kind of operators are created and is there any way to prevent it?</p>", "body_text": "System information\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nYes, I made custom distributed inception code\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 14.04\nTensorFlow installed from (source or binary): Unmodified source with RDMA Verbs enabled\nTensorFlow version (use command below): 1.3.0-rc1\nPython version: 2.7.12\nBazel version (if compiling from source): 0.5.1\nCUDA/cuDNN version: 8.0/5.1.5\nGPU model and memory: NVIDIA TITAN Xp PCIe 12GB (4 per node)\nI tried to run distributed inception, and I removed some nodes by breaking control dependencies in the graph.  However, tensorflow creates operators such as \"inception_v3/mixed_17x17x1280a/branch7x7x3/Conv_2/BatchNorm/AssignMovingAvg_1_S21149\" internally and called it. Why this kind of operators are created and is there any way to prevent it?", "body": "System information\r\n\r\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\r\nYes, I made custom distributed inception code\r\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 14.04\r\nTensorFlow installed from (source or binary): Unmodified source with RDMA Verbs enabled\r\nTensorFlow version (use command below): 1.3.0-rc1\r\nPython version: 2.7.12\r\nBazel version (if compiling from source): 0.5.1\r\nCUDA/cuDNN version: 8.0/5.1.5\r\nGPU model and memory: NVIDIA TITAN Xp PCIe 12GB (4 per node)\r\n\r\nI tried to run distributed inception, and I removed some nodes by breaking control dependencies in the graph.  However, tensorflow creates operators such as \"inception_v3/mixed_17x17x1280a/branch7x7x3/Conv_2/BatchNorm/AssignMovingAvg_1_S21149\" internally and called it. Why this kind of operators are created and is there any way to prevent it? "}