{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22479", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22479/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22479/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22479/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/22479", "id": 363093207, "node_id": "MDU6SXNzdWUzNjMwOTMyMDc=", "number": 22479, "title": "Keras: removing layers with model.layers.pop() doesn't work", "user": {"login": "nairouz", "id": 10966954, "node_id": "MDQ6VXNlcjEwOTY2OTU0", "avatar_url": "https://avatars0.githubusercontent.com/u/10966954?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nairouz", "html_url": "https://github.com/nairouz", "followers_url": "https://api.github.com/users/nairouz/followers", "following_url": "https://api.github.com/users/nairouz/following{/other_user}", "gists_url": "https://api.github.com/users/nairouz/gists{/gist_id}", "starred_url": "https://api.github.com/users/nairouz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nairouz/subscriptions", "organizations_url": "https://api.github.com/users/nairouz/orgs", "repos_url": "https://api.github.com/users/nairouz/repos", "events_url": "https://api.github.com/users/nairouz/events{/privacy}", "received_events_url": "https://api.github.com/users/nairouz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ymodak", "id": 42785357, "node_id": "MDQ6VXNlcjQyNzg1MzU3", "avatar_url": "https://avatars1.githubusercontent.com/u/42785357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ymodak", "html_url": "https://github.com/ymodak", "followers_url": "https://api.github.com/users/ymodak/followers", "following_url": "https://api.github.com/users/ymodak/following{/other_user}", "gists_url": "https://api.github.com/users/ymodak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ymodak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ymodak/subscriptions", "organizations_url": "https://api.github.com/users/ymodak/orgs", "repos_url": "https://api.github.com/users/ymodak/repos", "events_url": "https://api.github.com/users/ymodak/events{/privacy}", "received_events_url": "https://api.github.com/users/ymodak/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ymodak", "id": 42785357, "node_id": "MDQ6VXNlcjQyNzg1MzU3", "avatar_url": "https://avatars1.githubusercontent.com/u/42785357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ymodak", "html_url": "https://github.com/ymodak", "followers_url": "https://api.github.com/users/ymodak/followers", "following_url": "https://api.github.com/users/ymodak/following{/other_user}", "gists_url": "https://api.github.com/users/ymodak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ymodak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ymodak/subscriptions", "organizations_url": "https://api.github.com/users/ymodak/orgs", "repos_url": "https://api.github.com/users/ymodak/repos", "events_url": "https://api.github.com/users/ymodak/events{/privacy}", "received_events_url": "https://api.github.com/users/ymodak/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-09-24T10:43:21Z", "updated_at": "2018-09-26T19:18:00Z", "closed_at": "2018-09-26T19:18:00Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Colab</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>:</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: Colab</li>\n<li><strong>TensorFlow version (use command below)</strong>:  1.10.1</li>\n<li><strong>Python version</strong>: 3.6</li>\n<li><strong>Bazel version (if compiling from source)</strong>: Colab</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: Colab</li>\n<li><strong>CUDA/cuDNN version</strong>: Colab</li>\n<li><strong>GPU model and memory</strong>: Colab</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>When we delete a layer with model.layers.pop(), the deleted layer reappears.</p>\n<h3>Source code / logs</h3>\n<pre><code>import tensorflow as tf\nimport tensorflow.keras as keras\nimport tensorflow.keras.backend as K\nfrom tensorflow.keras.layers import Dense, Input, Layer\nfrom tensorflow.keras.models import Model\ninput_tensor = Input(shape=(10,))\nhidden = Dense(100, activation='relu')(input_tensor)\nout = Dense(10, activation='relu')(hidden)\nmodel = Model(input_tensor, out)\nmodel.compile(loss=\"mse\", optimizer=tf.train.AdamOptimizer(learning_rate=0.001))\nmodel.summary()\nmodel.layers.pop()\nmodel.layers.pop()\nmodel.summary()\nhidden = Dense(120, activation='relu')(model.layers[-1].output)\nout = Dense(5, activation='softmax')(hidden)\nmodel = Model(input_tensor, out)\nmodel.summary()\n</code></pre>\n<pre><code>_________________________________________________________________\nLayer (type)                 Output Shape              Param #   \n=================================================================\ninput_1 (InputLayer)         (None, 10)                0         \n_________________________________________________________________\ndense (Dense)                (None, 100)               1100      \n_________________________________________________________________\ndense_1 (Dense)              (None, 10)                1010      \n=================================================================\nTotal params: 2,110\nTrainable params: 2,110\nNon-trainable params: 0\n</code></pre>\n<pre><code>_________________________________________________________________\n_________________________________________________________________\nLayer (type)                 Output Shape              Param #   \n=================================================================\ninput_1 (InputLayer)         (None, 10)                0         \n_________________________________________________________________\ndense (Dense)                (None, 100)               1100      \n_________________________________________________________________\ndense_1 (Dense)              (None, 10)                1010      \n=================================================================\nTotal params: 2,110\nTrainable params: 2,110\nNon-trainable params: 0\n\n</code></pre>\n<pre><code>_________________________________________________________________\n_________________________________________________________________\nLayer (type)                 Output Shape              Param #   \n=================================================================\ninput_1 (InputLayer)         (None, 10)                0         \n_________________________________________________________________\ndense (Dense)                (None, 100)               1100      \n_________________________________________________________________\ndense_1 (Dense)              (None, 10)                1010      \n_________________________________________________________________\ndense_2 (Dense)              (None, 120)               1320      \n_________________________________________________________________\ndense_3 (Dense)              (None, 5)                 605       \n=================================================================\nTotal params: 4,035\nTrainable params: 4,035\nNon-trainable params: 0\n_________________________________________________________________\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Colab\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:\nTensorFlow installed from (source or binary): Colab\nTensorFlow version (use command below):  1.10.1\nPython version: 3.6\nBazel version (if compiling from source): Colab\nGCC/Compiler version (if compiling from source): Colab\nCUDA/cuDNN version: Colab\nGPU model and memory: Colab\nExact command to reproduce:\n\nDescribe the problem\nWhen we delete a layer with model.layers.pop(), the deleted layer reappears.\nSource code / logs\nimport tensorflow as tf\nimport tensorflow.keras as keras\nimport tensorflow.keras.backend as K\nfrom tensorflow.keras.layers import Dense, Input, Layer\nfrom tensorflow.keras.models import Model\ninput_tensor = Input(shape=(10,))\nhidden = Dense(100, activation='relu')(input_tensor)\nout = Dense(10, activation='relu')(hidden)\nmodel = Model(input_tensor, out)\nmodel.compile(loss=\"mse\", optimizer=tf.train.AdamOptimizer(learning_rate=0.001))\nmodel.summary()\nmodel.layers.pop()\nmodel.layers.pop()\nmodel.summary()\nhidden = Dense(120, activation='relu')(model.layers[-1].output)\nout = Dense(5, activation='softmax')(hidden)\nmodel = Model(input_tensor, out)\nmodel.summary()\n\n_________________________________________________________________\nLayer (type)                 Output Shape              Param #   \n=================================================================\ninput_1 (InputLayer)         (None, 10)                0         \n_________________________________________________________________\ndense (Dense)                (None, 100)               1100      \n_________________________________________________________________\ndense_1 (Dense)              (None, 10)                1010      \n=================================================================\nTotal params: 2,110\nTrainable params: 2,110\nNon-trainable params: 0\n\n_________________________________________________________________\n_________________________________________________________________\nLayer (type)                 Output Shape              Param #   \n=================================================================\ninput_1 (InputLayer)         (None, 10)                0         \n_________________________________________________________________\ndense (Dense)                (None, 100)               1100      \n_________________________________________________________________\ndense_1 (Dense)              (None, 10)                1010      \n=================================================================\nTotal params: 2,110\nTrainable params: 2,110\nNon-trainable params: 0\n\n\n_________________________________________________________________\n_________________________________________________________________\nLayer (type)                 Output Shape              Param #   \n=================================================================\ninput_1 (InputLayer)         (None, 10)                0         \n_________________________________________________________________\ndense (Dense)                (None, 100)               1100      \n_________________________________________________________________\ndense_1 (Dense)              (None, 10)                1010      \n_________________________________________________________________\ndense_2 (Dense)              (None, 120)               1320      \n_________________________________________________________________\ndense_3 (Dense)              (None, 5)                 605       \n=================================================================\nTotal params: 4,035\nTrainable params: 4,035\nNon-trainable params: 0\n_________________________________________________________________", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Colab\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**:\r\n- **TensorFlow installed from (source or binary)**: Colab\r\n- **TensorFlow version (use command below)**:  1.10.1\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**: Colab\r\n- **GCC/Compiler version (if compiling from source)**: Colab\r\n- **CUDA/cuDNN version**: Colab\r\n- **GPU model and memory**: Colab\r\n- **Exact command to reproduce**:\r\n\r\n### Describe the problem\r\nWhen we delete a layer with model.layers.pop(), the deleted layer reappears. \r\n\r\n### Source code / logs\r\n\r\n    import tensorflow as tf\r\n    import tensorflow.keras as keras\r\n    import tensorflow.keras.backend as K\r\n    from tensorflow.keras.layers import Dense, Input, Layer\r\n    from tensorflow.keras.models import Model\r\n    input_tensor = Input(shape=(10,))\r\n    hidden = Dense(100, activation='relu')(input_tensor)\r\n    out = Dense(10, activation='relu')(hidden)\r\n    model = Model(input_tensor, out)\r\n    model.compile(loss=\"mse\", optimizer=tf.train.AdamOptimizer(learning_rate=0.001))\r\n    model.summary()\r\n    model.layers.pop()\r\n    model.layers.pop()\r\n    model.summary()\r\n    hidden = Dense(120, activation='relu')(model.layers[-1].output)\r\n    out = Dense(5, activation='softmax')(hidden)\r\n    model = Model(input_tensor, out)\r\n    model.summary()\r\n\r\n```\r\n_________________________________________________________________\r\nLayer (type)                 Output Shape              Param #   \r\n=================================================================\r\ninput_1 (InputLayer)         (None, 10)                0         \r\n_________________________________________________________________\r\ndense (Dense)                (None, 100)               1100      \r\n_________________________________________________________________\r\ndense_1 (Dense)              (None, 10)                1010      \r\n=================================================================\r\nTotal params: 2,110\r\nTrainable params: 2,110\r\nNon-trainable params: 0\r\n```\r\n```\r\n_________________________________________________________________\r\n_________________________________________________________________\r\nLayer (type)                 Output Shape              Param #   \r\n=================================================================\r\ninput_1 (InputLayer)         (None, 10)                0         \r\n_________________________________________________________________\r\ndense (Dense)                (None, 100)               1100      \r\n_________________________________________________________________\r\ndense_1 (Dense)              (None, 10)                1010      \r\n=================================================================\r\nTotal params: 2,110\r\nTrainable params: 2,110\r\nNon-trainable params: 0\r\n\r\n```\r\n\r\n```\r\n_________________________________________________________________\r\n_________________________________________________________________\r\nLayer (type)                 Output Shape              Param #   \r\n=================================================================\r\ninput_1 (InputLayer)         (None, 10)                0         \r\n_________________________________________________________________\r\ndense (Dense)                (None, 100)               1100      \r\n_________________________________________________________________\r\ndense_1 (Dense)              (None, 10)                1010      \r\n_________________________________________________________________\r\ndense_2 (Dense)              (None, 120)               1320      \r\n_________________________________________________________________\r\ndense_3 (Dense)              (None, 5)                 605       \r\n=================================================================\r\nTotal params: 4,035\r\nTrainable params: 4,035\r\nNon-trainable params: 0\r\n_________________________________________________________________\r\n```"}