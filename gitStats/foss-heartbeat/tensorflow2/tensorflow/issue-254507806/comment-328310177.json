{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/328310177", "html_url": "https://github.com/tensorflow/tensorflow/issues/12735#issuecomment-328310177", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12735", "id": 328310177, "node_id": "MDEyOklzc3VlQ29tbWVudDMyODMxMDE3Nw==", "user": {"login": "Mistobaan", "id": 112599, "node_id": "MDQ6VXNlcjExMjU5OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/112599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mistobaan", "html_url": "https://github.com/Mistobaan", "followers_url": "https://api.github.com/users/Mistobaan/followers", "following_url": "https://api.github.com/users/Mistobaan/following{/other_user}", "gists_url": "https://api.github.com/users/Mistobaan/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mistobaan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mistobaan/subscriptions", "organizations_url": "https://api.github.com/users/Mistobaan/orgs", "repos_url": "https://api.github.com/users/Mistobaan/repos", "events_url": "https://api.github.com/users/Mistobaan/events{/privacy}", "received_events_url": "https://api.github.com/users/Mistobaan/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-09T23:45:57Z", "updated_at": "2017-09-09T23:46:12Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=7946809\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/gunan\">@gunan</a> I think is <a href=\"https://github.com/tensorflow/tensorflow/search?utf8=%E2%9C%93&amp;q=k8\">based on the cpu</a>.<br>\nI did build also with xenial. What env configuration did you use?</p>\n<p>these are mines:</p>\n<pre><code>export TF_NEED_CUDA=1\nexport TF_CUDA_VERSION=8.0\nexport TF_CUDA_COMPUTE_CAPABILITIES=6.1\nexport TF_CUDNN_VERSION=6\nexport CUDNN_INSTALL_PATH=/usr/lib/x86_64-linux-gnu\nexport PYTHON_BIN_PATH=`which python2`\nexport TF_NEED_GCP=1\nexport TF_NEED_HDFS=0\nexport TF_ENABLE_XLA=1\nexport TF_NEED_VERBS=1\nexport CC_OPT_FLAGS=\"-mavx -msse4.2 -mfpmath=both -DEIGEN_USE_VML\"\nexport TF_NEED_MKL=1\nexport TF_DOWNLOAD_MKL=1\nexport N_JOBS=$($PYTHON_BIN_PATH -c 'import multiprocessing;print(multiprocessing.cpu_count()*2)')\n\nexport HAS_AVX2=$(grep avx2 /proc/cpuinfo)\n\nif [ -z $HAS_AVX2 ]; then\n  echo \"no avx2 instructions found\";\nelse\n  export CC_OPT_FLAGS=\"-mavx2 -mfma ${CC_OPT_FLAGS}\"\nfi\n\nyes \"\" | ./configure\n</code></pre>", "body_text": "@gunan I think is based on the cpu.\nI did build also with xenial. What env configuration did you use?\nthese are mines:\nexport TF_NEED_CUDA=1\nexport TF_CUDA_VERSION=8.0\nexport TF_CUDA_COMPUTE_CAPABILITIES=6.1\nexport TF_CUDNN_VERSION=6\nexport CUDNN_INSTALL_PATH=/usr/lib/x86_64-linux-gnu\nexport PYTHON_BIN_PATH=`which python2`\nexport TF_NEED_GCP=1\nexport TF_NEED_HDFS=0\nexport TF_ENABLE_XLA=1\nexport TF_NEED_VERBS=1\nexport CC_OPT_FLAGS=\"-mavx -msse4.2 -mfpmath=both -DEIGEN_USE_VML\"\nexport TF_NEED_MKL=1\nexport TF_DOWNLOAD_MKL=1\nexport N_JOBS=$($PYTHON_BIN_PATH -c 'import multiprocessing;print(multiprocessing.cpu_count()*2)')\n\nexport HAS_AVX2=$(grep avx2 /proc/cpuinfo)\n\nif [ -z $HAS_AVX2 ]; then\n  echo \"no avx2 instructions found\";\nelse\n  export CC_OPT_FLAGS=\"-mavx2 -mfma ${CC_OPT_FLAGS}\"\nfi\n\nyes \"\" | ./configure", "body": "@gunan I think is [based on the cpu](https://github.com/tensorflow/tensorflow/search?utf8=%E2%9C%93&q=k8). \r\nI did build also with xenial. What env configuration did you use? \r\n\r\nthese are mines:\r\n```\r\nexport TF_NEED_CUDA=1\r\nexport TF_CUDA_VERSION=8.0\r\nexport TF_CUDA_COMPUTE_CAPABILITIES=6.1\r\nexport TF_CUDNN_VERSION=6\r\nexport CUDNN_INSTALL_PATH=/usr/lib/x86_64-linux-gnu\r\nexport PYTHON_BIN_PATH=`which python2`\r\nexport TF_NEED_GCP=1\r\nexport TF_NEED_HDFS=0\r\nexport TF_ENABLE_XLA=1\r\nexport TF_NEED_VERBS=1\r\nexport CC_OPT_FLAGS=\"-mavx -msse4.2 -mfpmath=both -DEIGEN_USE_VML\"\r\nexport TF_NEED_MKL=1\r\nexport TF_DOWNLOAD_MKL=1\r\nexport N_JOBS=$($PYTHON_BIN_PATH -c 'import multiprocessing;print(multiprocessing.cpu_count()*2)')\r\n\r\nexport HAS_AVX2=$(grep avx2 /proc/cpuinfo)\r\n\r\nif [ -z $HAS_AVX2 ]; then\r\n  echo \"no avx2 instructions found\";\r\nelse\r\n  export CC_OPT_FLAGS=\"-mavx2 -mfma ${CC_OPT_FLAGS}\"\r\nfi\r\n\r\nyes \"\" | ./configure\r\n```\r\n\r\n\r\n\r\n\r\n"}