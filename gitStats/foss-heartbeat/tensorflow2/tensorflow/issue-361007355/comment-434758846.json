{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/434758846", "html_url": "https://github.com/tensorflow/tensorflow/issues/22322#issuecomment-434758846", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22322", "id": 434758846, "node_id": "MDEyOklzc3VlQ29tbWVudDQzNDc1ODg0Ng==", "user": {"login": "Sergio0694", "id": 10199417, "node_id": "MDQ6VXNlcjEwMTk5NDE3", "avatar_url": "https://avatars3.githubusercontent.com/u/10199417?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sergio0694", "html_url": "https://github.com/Sergio0694", "followers_url": "https://api.github.com/users/Sergio0694/followers", "following_url": "https://api.github.com/users/Sergio0694/following{/other_user}", "gists_url": "https://api.github.com/users/Sergio0694/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sergio0694/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sergio0694/subscriptions", "organizations_url": "https://api.github.com/users/Sergio0694/orgs", "repos_url": "https://api.github.com/users/Sergio0694/repos", "events_url": "https://api.github.com/users/Sergio0694/events{/privacy}", "received_events_url": "https://api.github.com/users/Sergio0694/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-31T16:38:22Z", "updated_at": "2018-10-31T16:38:22Z", "author_association": "NONE", "body_html": "<p>Yeah, I did have the environment variables setup as you showed in the screens, but I hadn't tried to use the <code>-L</code> option, thanks for pointing it out. I wonder if the incorrect path on Windows is the same reason why the call to generate the <code>TF_LFLAGS</code> variable, which is <code>\" \".join(tf.sysconfig.get_link_flags())</code> returns an empty string.</p>\n<p>I tried to use the <code>-L</code> option to compile the first .cu.cc file, calling nvcc from the VS native tools window (otherwise nvcc doesn't fine the cl.exe compiler), but it failed saying that VS2017 is not supported with that version of nvcc (I'm using CUDA 9.0 as suggested by the TF install guide for r1.11).</p>\n<p>I have to point out though: I feel like every time I manage to make a tiny step, something else causes an error here, and I'm not even sure that even if I managed to build a .dll file with the op, TF would manage to load it correctly on Windows.</p>\n<p>Would it be possible to get a reply from anyone from the TF team to confirm whether or not this is actually supported/possible at all and if not, if there are plans to enable this feature natively (as in, with updated docs and with tf automatically loading the right import/link paths on Windows, just like on Linux/MacOS) in a future release?</p>\n<p>Thanks again! <g-emoji class=\"g-emoji\" alias=\"smile\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f604.png\">\ud83d\ude04</g-emoji></p>", "body_text": "Yeah, I did have the environment variables setup as you showed in the screens, but I hadn't tried to use the -L option, thanks for pointing it out. I wonder if the incorrect path on Windows is the same reason why the call to generate the TF_LFLAGS variable, which is \" \".join(tf.sysconfig.get_link_flags()) returns an empty string.\nI tried to use the -L option to compile the first .cu.cc file, calling nvcc from the VS native tools window (otherwise nvcc doesn't fine the cl.exe compiler), but it failed saying that VS2017 is not supported with that version of nvcc (I'm using CUDA 9.0 as suggested by the TF install guide for r1.11).\nI have to point out though: I feel like every time I manage to make a tiny step, something else causes an error here, and I'm not even sure that even if I managed to build a .dll file with the op, TF would manage to load it correctly on Windows.\nWould it be possible to get a reply from anyone from the TF team to confirm whether or not this is actually supported/possible at all and if not, if there are plans to enable this feature natively (as in, with updated docs and with tf automatically loading the right import/link paths on Windows, just like on Linux/MacOS) in a future release?\nThanks again! \ud83d\ude04", "body": "Yeah, I did have the environment variables setup as you showed in the screens, but I hadn't tried to use the `-L` option, thanks for pointing it out. I wonder if the incorrect path on Windows is the same reason why the call to generate the `TF_LFLAGS` variable, which is `\" \".join(tf.sysconfig.get_link_flags())` returns an empty string.\r\n\r\nI tried to use the `-L` option to compile the first .cu.cc file, calling nvcc from the VS native tools window (otherwise nvcc doesn't fine the cl.exe compiler), but it failed saying that VS2017 is not supported with that version of nvcc (I'm using CUDA 9.0 as suggested by the TF install guide for r1.11).\r\n\r\nI have to point out though: I feel like every time I manage to make a tiny step, something else causes an error here, and I'm not even sure that even if I managed to build a .dll file with the op, TF would manage to load it correctly on Windows.\r\n\r\nWould it be possible to get a reply from anyone from the TF team to confirm whether or not this is actually supported/possible at all and if not, if there are plans to enable this feature natively (as in, with updated docs and with tf automatically loading the right import/link paths on Windows, just like on Linux/MacOS) in a future release?\r\n\r\nThanks again! \ud83d\ude04"}