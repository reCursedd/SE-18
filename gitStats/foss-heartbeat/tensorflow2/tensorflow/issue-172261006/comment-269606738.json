{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/269606738", "html_url": "https://github.com/tensorflow/tensorflow/issues/3937#issuecomment-269606738", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3937", "id": 269606738, "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTYwNjczOA==", "user": {"login": "rasmusbergpalm", "id": 206013, "node_id": "MDQ6VXNlcjIwNjAxMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/206013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rasmusbergpalm", "html_url": "https://github.com/rasmusbergpalm", "followers_url": "https://api.github.com/users/rasmusbergpalm/followers", "following_url": "https://api.github.com/users/rasmusbergpalm/following{/other_user}", "gists_url": "https://api.github.com/users/rasmusbergpalm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rasmusbergpalm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rasmusbergpalm/subscriptions", "organizations_url": "https://api.github.com/users/rasmusbergpalm/orgs", "repos_url": "https://api.github.com/users/rasmusbergpalm/repos", "events_url": "https://api.github.com/users/rasmusbergpalm/events{/privacy}", "received_events_url": "https://api.github.com/users/rasmusbergpalm/received_events", "type": "User", "site_admin": false}, "created_at": "2016-12-29T09:55:53Z", "updated_at": "2016-12-29T10:12:30Z", "author_association": "NONE", "body_html": "<p>I strongly disagree with the sentiment here.</p>\n<p>This is how I've spent ~6 hours before I found this issue</p>\n<ul>\n<li>Run big hairy model for a couple of hours, everything is fine.</li>\n<li>Suddenly, NaNs everywhere.</li>\n<li>Google tensorflow debug nan. Tells me to insert <code>add_check_numerics_ops</code>. Great! Then I can at least know which tensor first get's the NaNs.</li>\n<li>Run model again. Immediately get NaN warning <code>gradients/pow_grad/Log:0</code>. Spend hours debugging where that tensor comes from.</li>\n<li>Track it down to a MSE calculation.</li>\n<li>Check all inputs for NaNs.</li>\n<li>Find this issue :/</li>\n</ul>\n<p>I don't see the point of <code>add_check_numerics_ops</code> as long as this issue is not resolved. Which brings me back to my original issue: how do i debug NaNs in the code?</p>\n<p>Do i have to add individual check_numeric_ops to every single operation (except pows ofc.). That cannot be the best answer.</p>\n<p>For now I've replaced all x**2 with x*x...</p>", "body_text": "I strongly disagree with the sentiment here.\nThis is how I've spent ~6 hours before I found this issue\n\nRun big hairy model for a couple of hours, everything is fine.\nSuddenly, NaNs everywhere.\nGoogle tensorflow debug nan. Tells me to insert add_check_numerics_ops. Great! Then I can at least know which tensor first get's the NaNs.\nRun model again. Immediately get NaN warning gradients/pow_grad/Log:0. Spend hours debugging where that tensor comes from.\nTrack it down to a MSE calculation.\nCheck all inputs for NaNs.\nFind this issue :/\n\nI don't see the point of add_check_numerics_ops as long as this issue is not resolved. Which brings me back to my original issue: how do i debug NaNs in the code?\nDo i have to add individual check_numeric_ops to every single operation (except pows ofc.). That cannot be the best answer.\nFor now I've replaced all x**2 with x*x...", "body": "I strongly disagree with the sentiment here. \r\n\r\nThis is how I've spent ~6 hours before I found this issue\r\n\r\n* Run big hairy model for a couple of hours, everything is fine. \r\n* Suddenly, NaNs everywhere.\r\n* Google tensorflow debug nan. Tells me to insert `add_check_numerics_ops`. Great! Then I can at least know which tensor first get's the NaNs.\r\n* Run model again. Immediately get NaN warning `gradients/pow_grad/Log:0`. Spend hours debugging where that tensor comes from.\r\n* Track it down to a MSE calculation. \r\n* Check all inputs for NaNs.\r\n* Find this issue :/\r\n\r\nI don't see the point of `add_check_numerics_ops` as long as this issue is not resolved. Which brings me back to my original issue: how do i debug NaNs in the code?\r\n\r\nDo i have to add individual check_numeric_ops to every single operation (except pows ofc.). That cannot be the best answer.\r\n\r\nFor now I've replaced all x**2 with x*x..."}