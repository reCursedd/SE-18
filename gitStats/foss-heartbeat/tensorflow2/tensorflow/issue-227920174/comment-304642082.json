{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/304642082", "html_url": "https://github.com/tensorflow/tensorflow/issues/9832#issuecomment-304642082", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9832", "id": 304642082, "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDY0MjA4Mg==", "user": {"login": "xueyouluo", "id": 5196100, "node_id": "MDQ6VXNlcjUxOTYxMDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/5196100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xueyouluo", "html_url": "https://github.com/xueyouluo", "followers_url": "https://api.github.com/users/xueyouluo/followers", "following_url": "https://api.github.com/users/xueyouluo/following{/other_user}", "gists_url": "https://api.github.com/users/xueyouluo/gists{/gist_id}", "starred_url": "https://api.github.com/users/xueyouluo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xueyouluo/subscriptions", "organizations_url": "https://api.github.com/users/xueyouluo/orgs", "repos_url": "https://api.github.com/users/xueyouluo/repos", "events_url": "https://api.github.com/users/xueyouluo/events{/privacy}", "received_events_url": "https://api.github.com/users/xueyouluo/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-29T11:47:09Z", "updated_at": "2017-05-29T11:47:09Z", "author_association": "NONE", "body_html": "<p>I meet the same problem with <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=9311545\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/classicCoder16\">@classicCoder16</a>. I used a bi-direction rnn as encode,  right now I use following code to get the initial state.</p>\n<div class=\"highlight highlight-source-python\"><pre>initial_state <span class=\"pl-k\">=</span> <span class=\"pl-c1\">self</span>.dec_cell.zero_state(<span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.float32, <span class=\"pl-v\">batch_size</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">self</span>.batch_size <span class=\"pl-k\">*</span> <span class=\"pl-c1\">self</span>.beam_size)\nfw,bw <span class=\"pl-k\">=</span> <span class=\"pl-c1\">self</span>.encode_state\nfw <span class=\"pl-k\">=</span> tf.contrib.seq2seq.tile_batch(fw,<span class=\"pl-v\">multiplier</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">self</span>.beam_size)\nbw <span class=\"pl-k\">=</span> tf.contrib.seq2seq.tile_batch(bw,<span class=\"pl-v\">multiplier</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">self</span>.beam_size)\n<span class=\"pl-c1\">self</span>.initial_state <span class=\"pl-k\">=</span> initial_state.clone(<span class=\"pl-v\">cell_state</span><span class=\"pl-k\">=</span>(fw,bw))</pre></div>\n<p>But when I ran the dynamic decode, I can't get correct beam search result. Maybe my code is not right. Has anyone tried the BeamSearchDecoder and got the correct result? Would you please share the code with me? My tensorFlow version is 1.2.0-rc0. Thanks!</p>", "body_text": "I meet the same problem with @classicCoder16. I used a bi-direction rnn as encode,  right now I use following code to get the initial state.\ninitial_state = self.dec_cell.zero_state(dtype=tf.float32, batch_size = self.batch_size * self.beam_size)\nfw,bw = self.encode_state\nfw = tf.contrib.seq2seq.tile_batch(fw,multiplier=self.beam_size)\nbw = tf.contrib.seq2seq.tile_batch(bw,multiplier=self.beam_size)\nself.initial_state = initial_state.clone(cell_state=(fw,bw))\nBut when I ran the dynamic decode, I can't get correct beam search result. Maybe my code is not right. Has anyone tried the BeamSearchDecoder and got the correct result? Would you please share the code with me? My tensorFlow version is 1.2.0-rc0. Thanks!", "body": "I meet the same problem with @classicCoder16. I used a bi-direction rnn as encode,  right now I use following code to get the initial state.\r\n```python\r\ninitial_state = self.dec_cell.zero_state(dtype=tf.float32, batch_size = self.batch_size * self.beam_size)\r\nfw,bw = self.encode_state\r\nfw = tf.contrib.seq2seq.tile_batch(fw,multiplier=self.beam_size)\r\nbw = tf.contrib.seq2seq.tile_batch(bw,multiplier=self.beam_size)\r\nself.initial_state = initial_state.clone(cell_state=(fw,bw))\r\n```\r\n But when I ran the dynamic decode, I can't get correct beam search result. Maybe my code is not right. Has anyone tried the BeamSearchDecoder and got the correct result? Would you please share the code with me? My tensorFlow version is 1.2.0-rc0. Thanks!"}