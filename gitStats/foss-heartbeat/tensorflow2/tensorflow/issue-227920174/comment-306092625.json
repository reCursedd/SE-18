{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/306092625", "html_url": "https://github.com/tensorflow/tensorflow/issues/9832#issuecomment-306092625", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9832", "id": 306092625, "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjA5MjYyNQ==", "user": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-05T03:04:09Z", "updated_at": "2017-06-05T03:04:09Z", "author_association": "CONTRIBUTOR", "body_html": "<div class=\"email-fragment\">classicCoder: the BeamSearchDecoder uses tf.nn.top_k to update the beams at\neach iteration (top_k by default returns sorted values).  The final\ncomputation uses GatherTree to identify the true indices at each time\nstep.  This means that the 0th beam is the one with the highest score; and\nyou should be able to use predicted_ids[:, :, 0] to access it.</div>\n<span class=\"email-hidden-toggle\"><a href=\"#\">\u2026</a></span><div class=\"email-hidden-reply\">\n<div class=\"email-quoted-reply\">On Sun, Jun 4, 2017 at 2:49 PM, classicCoder16 ***@***.***&gt; wrote:\n <a class=\"user-mention\" href=\"https://github.com/ebrevdo\">@ebrevdo</a> &lt;<a href=\"https://github.com/ebrevdo\">https://github.com/ebrevdo</a>&gt; Thanks for your help thus far! I've\n been looking over the implementation of the tests in\n beam_search_decoder_test.py and they are quite helpful. However, I have a\n bit of a fundamental question: when using dynamic_decode with the\n BeamSearchDecoder, it seems that the final_outputs that is returned has\n an attribute predicted_ids whose shape is (batch_size, T, beam_width),\n which are the final sequences found by beam search.\n\n How then do we go from final_outputs.predicted_ids to the actual most\n probable sequence for each example in the batch, to therefore obtain\n something of size (batch_size, T)?\n\n Thanks in advance!\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n &lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"227920174\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/9832\" href=\"https://github.com/tensorflow/tensorflow/issues/9832#issuecomment-306069454\">#9832 (comment)</a>&gt;,\n or mute the thread\n &lt;<a href=\"https://github.com/notifications/unsubscribe-auth/ABtim8viN2KW4FrFKMd1WHS9PJPfU9Gcks5sAyZagaJpZM4NXsUR\">https://github.com/notifications/unsubscribe-auth/ABtim8viN2KW4FrFKMd1WHS9PJPfU9Gcks5sAyZagaJpZM4NXsUR</a>&gt;\n .\n</div>\n<div class=\"email-fragment\"></div>\n</div>", "body_text": "classicCoder: the BeamSearchDecoder uses tf.nn.top_k to update the beams at\neach iteration (top_k by default returns sorted values).  The final\ncomputation uses GatherTree to identify the true indices at each time\nstep.  This means that the 0th beam is the one with the highest score; and\nyou should be able to use predicted_ids[:, :, 0] to access it.\n\u2026\nOn Sun, Jun 4, 2017 at 2:49 PM, classicCoder16 ***@***.***> wrote:\n @ebrevdo <https://github.com/ebrevdo> Thanks for your help thus far! I've\n been looking over the implementation of the tests in\n beam_search_decoder_test.py and they are quite helpful. However, I have a\n bit of a fundamental question: when using dynamic_decode with the\n BeamSearchDecoder, it seems that the final_outputs that is returned has\n an attribute predicted_ids whose shape is (batch_size, T, beam_width),\n which are the final sequences found by beam search.\n\n How then do we go from final_outputs.predicted_ids to the actual most\n probable sequence for each example in the batch, to therefore obtain\n something of size (batch_size, T)?\n\n Thanks in advance!\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#9832 (comment)>,\n or mute the thread\n <https://github.com/notifications/unsubscribe-auth/ABtim8viN2KW4FrFKMd1WHS9PJPfU9Gcks5sAyZagaJpZM4NXsUR>\n .", "body": "classicCoder: the BeamSearchDecoder uses tf.nn.top_k to update the beams at\neach iteration (top_k by default returns sorted values).  The final\ncomputation uses GatherTree to identify the true indices at each time\nstep.  This means that the 0th beam is the one with the highest score; and\nyou should be able to use predicted_ids[:, :, 0] to access it.\n\nOn Sun, Jun 4, 2017 at 2:49 PM, classicCoder16 <notifications@github.com>\nwrote:\n\n> @ebrevdo <https://github.com/ebrevdo> Thanks for your help thus far! I've\n> been looking over the implementation of the tests in\n> beam_search_decoder_test.py and they are quite helpful. However, I have a\n> bit of a fundamental question: when using dynamic_decode with the\n> BeamSearchDecoder, it seems that the final_outputs that is returned has\n> an attribute predicted_ids whose shape is (batch_size, T, beam_width),\n> which are the final sequences found by beam search.\n>\n> How then do we go from final_outputs.predicted_ids to the actual most\n> probable sequence for each example in the batch, to therefore obtain\n> something of size (batch_size, T)?\n>\n> Thanks in advance!\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/tensorflow/issues/9832#issuecomment-306069454>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABtim8viN2KW4FrFKMd1WHS9PJPfU9Gcks5sAyZagaJpZM4NXsUR>\n> .\n>\n"}