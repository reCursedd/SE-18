{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/333232331", "html_url": "https://github.com/tensorflow/tensorflow/issues/9832#issuecomment-333232331", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9832", "id": 333232331, "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzIzMjMzMQ==", "user": {"login": "untrix", "id": 1545368, "node_id": "MDQ6VXNlcjE1NDUzNjg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1545368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/untrix", "html_url": "https://github.com/untrix", "followers_url": "https://api.github.com/users/untrix/followers", "following_url": "https://api.github.com/users/untrix/following{/other_user}", "gists_url": "https://api.github.com/users/untrix/gists{/gist_id}", "starred_url": "https://api.github.com/users/untrix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/untrix/subscriptions", "organizations_url": "https://api.github.com/users/untrix/orgs", "repos_url": "https://api.github.com/users/untrix/repos", "events_url": "https://api.github.com/users/untrix/events{/privacy}", "received_events_url": "https://api.github.com/users/untrix/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-29T20:34:36Z", "updated_at": "2017-09-29T21:18:47Z", "author_association": "NONE", "body_html": "<p>This is pretty poor documentation on part of BeamSearchDecoder(as of Tensorflow v1.3).</p>\n<p>It is very important to use tf.contrib.seq2seq.tile_batch and not tf.tile - but one wouldn't know that unless one stumbled upon this page. I used tf.tile about 2 months back in response to a cryptic error about not having created a initial-state of size = batch_size*beam_width. And I had been struggling to get my model accuracy to a reasonable value. Turns out it was because I was using tf.tile to tile my init-state-model. In my case the init-state is itself a neural-network that is conditioned by a sample-specific context. Therefore the initial-state is different for each input-sequence - not a straight zero-state. Hence it is very important in my case to line-up the init-state with the samples.</p>\n<p>BeamSearchDecoder folks - please document this.</p>", "body_text": "This is pretty poor documentation on part of BeamSearchDecoder(as of Tensorflow v1.3).\nIt is very important to use tf.contrib.seq2seq.tile_batch and not tf.tile - but one wouldn't know that unless one stumbled upon this page. I used tf.tile about 2 months back in response to a cryptic error about not having created a initial-state of size = batch_size*beam_width. And I had been struggling to get my model accuracy to a reasonable value. Turns out it was because I was using tf.tile to tile my init-state-model. In my case the init-state is itself a neural-network that is conditioned by a sample-specific context. Therefore the initial-state is different for each input-sequence - not a straight zero-state. Hence it is very important in my case to line-up the init-state with the samples.\nBeamSearchDecoder folks - please document this.", "body": "This is pretty poor documentation on part of BeamSearchDecoder(as of Tensorflow v1.3).\r\n\r\nIt is very important to use tf.contrib.seq2seq.tile_batch and not tf.tile - but one wouldn't know that unless one stumbled upon this page. I used tf.tile about 2 months back in response to a cryptic error about not having created a initial-state of size = batch_size*beam_width. And I had been struggling to get my model accuracy to a reasonable value. Turns out it was because I was using tf.tile to tile my init-state-model. In my case the init-state is itself a neural-network that is conditioned by a sample-specific context. Therefore the initial-state is different for each input-sequence - not a straight zero-state. Hence it is very important in my case to line-up the init-state with the samples.\r\n\r\nBeamSearchDecoder folks - please document this."}