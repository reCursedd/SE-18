{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/283563381", "html_url": "https://github.com/tensorflow/tensorflow/issues/7908#issuecomment-283563381", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7908", "id": 283563381, "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzU2MzM4MQ==", "user": {"login": "AnlanSun", "id": 24425689, "node_id": "MDQ6VXNlcjI0NDI1Njg5", "avatar_url": "https://avatars3.githubusercontent.com/u/24425689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AnlanSun", "html_url": "https://github.com/AnlanSun", "followers_url": "https://api.github.com/users/AnlanSun/followers", "following_url": "https://api.github.com/users/AnlanSun/following{/other_user}", "gists_url": "https://api.github.com/users/AnlanSun/gists{/gist_id}", "starred_url": "https://api.github.com/users/AnlanSun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AnlanSun/subscriptions", "organizations_url": "https://api.github.com/users/AnlanSun/orgs", "repos_url": "https://api.github.com/users/AnlanSun/repos", "events_url": "https://api.github.com/users/AnlanSun/events{/privacy}", "received_events_url": "https://api.github.com/users/AnlanSun/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-02T05:51:48Z", "updated_at": "2017-03-02T06:13:01Z", "author_association": "NONE", "body_html": "<p>Thanks for response! I am using the latest version of TF(just installed  4 days ago). On Ubuntu 14.04.<br>\nWith 4 GTX1080 .Using vgg16 and a InceptionV1 with just 4 conv layers. Both of them show this problem.<br>\nThe part of Saving and reloading is shown bellow<br>\n`    init_op = tf.initialize_all_variables()</p>\n<pre><code>saver = tf.train.Saver()\nwith tf.Session() as sess:\n    #sess.run(init_op)\n    #new_saver = tf.train.import_meta_graph('/mnt/data2/sunanlan/sunanlan/DGD/check25_rota_guiyi/lr_0.031_step_39.ckpt.meta')\n\n    #print( tf.train.latest_checkpoint('./'))\n\n    #what=new_saver.restore(sess,'/mnt/data2/sunanlan/sunanlan/DGD/check25_rota_guiyi/lr_0.031_step_39.ckpt')\n    saver.restore(sess, \"/mnt/data2/sunanlan/sunanlan/DGD/from_2/step_66.ckpt\")\n    tf.train.start_queue_runners(sess=sess)\n    for epoch in range(100):\n        widgets = [\"train D epoch #%d|\" % epoch, Percentage(), Bar(), ETA()]\n        pbar = ProgressBar(maxval=1000, widgets=widgets)\n        pbar.start()\n        loss_avg = 0\n\n        for step in range(1001):\n            pbar.update(step)\n            imgs_n,labels_n = readdatas.read(lengbat,160,70,image_paths,labels_in,classes)\n            global is_train\n            is_train = True\n\n\n            _, loss_value,lrt,img_all = sess.run([train_tensor,total_loss,lr,img_new],{imgs:imgs_n,labels:labels_n})\n            loss_avg += loss_value\n            if step % 50 == 0:\n                avg = loss_avg / 50\n                print(\"loss: %f \" % (avg))\n                print(\"lr: %f\" %(lrt))\n                loss_avg = 0\n            if step == 1000:\n                 saver_path = saver.save(sess, \"./from_2/step_\"+str(epoch)+\".ckpt\")\n</code></pre>\n<p>`</p>", "body_text": "Thanks for response! I am using the latest version of TF(just installed  4 days ago). On Ubuntu 14.04.\nWith 4 GTX1080 .Using vgg16 and a InceptionV1 with just 4 conv layers. Both of them show this problem.\nThe part of Saving and reloading is shown bellow\n`    init_op = tf.initialize_all_variables()\nsaver = tf.train.Saver()\nwith tf.Session() as sess:\n    #sess.run(init_op)\n    #new_saver = tf.train.import_meta_graph('/mnt/data2/sunanlan/sunanlan/DGD/check25_rota_guiyi/lr_0.031_step_39.ckpt.meta')\n\n    #print( tf.train.latest_checkpoint('./'))\n\n    #what=new_saver.restore(sess,'/mnt/data2/sunanlan/sunanlan/DGD/check25_rota_guiyi/lr_0.031_step_39.ckpt')\n    saver.restore(sess, \"/mnt/data2/sunanlan/sunanlan/DGD/from_2/step_66.ckpt\")\n    tf.train.start_queue_runners(sess=sess)\n    for epoch in range(100):\n        widgets = [\"train D epoch #%d|\" % epoch, Percentage(), Bar(), ETA()]\n        pbar = ProgressBar(maxval=1000, widgets=widgets)\n        pbar.start()\n        loss_avg = 0\n\n        for step in range(1001):\n            pbar.update(step)\n            imgs_n,labels_n = readdatas.read(lengbat,160,70,image_paths,labels_in,classes)\n            global is_train\n            is_train = True\n\n\n            _, loss_value,lrt,img_all = sess.run([train_tensor,total_loss,lr,img_new],{imgs:imgs_n,labels:labels_n})\n            loss_avg += loss_value\n            if step % 50 == 0:\n                avg = loss_avg / 50\n                print(\"loss: %f \" % (avg))\n                print(\"lr: %f\" %(lrt))\n                loss_avg = 0\n            if step == 1000:\n                 saver_path = saver.save(sess, \"./from_2/step_\"+str(epoch)+\".ckpt\")\n\n`", "body": "Thanks for response! I am using the latest version of TF(just installed  4 days ago). On Ubuntu 14.04. \r\nWith 4 GTX1080 .Using vgg16 and a InceptionV1 with just 4 conv layers. Both of them show this problem.\r\nThe part of Saving and reloading is shown bellow\r\n`    init_op = tf.initialize_all_variables()\r\n\r\n    saver = tf.train.Saver()\r\n    with tf.Session() as sess:\r\n        #sess.run(init_op)\r\n        #new_saver = tf.train.import_meta_graph('/mnt/data2/sunanlan/sunanlan/DGD/check25_rota_guiyi/lr_0.031_step_39.ckpt.meta')\r\n\r\n        #print( tf.train.latest_checkpoint('./'))\r\n\r\n        #what=new_saver.restore(sess,'/mnt/data2/sunanlan/sunanlan/DGD/check25_rota_guiyi/lr_0.031_step_39.ckpt')\r\n        saver.restore(sess, \"/mnt/data2/sunanlan/sunanlan/DGD/from_2/step_66.ckpt\")\r\n        tf.train.start_queue_runners(sess=sess)\r\n        for epoch in range(100):\r\n            widgets = [\"train D epoch #%d|\" % epoch, Percentage(), Bar(), ETA()]\r\n            pbar = ProgressBar(maxval=1000, widgets=widgets)\r\n            pbar.start()\r\n            loss_avg = 0\r\n\r\n            for step in range(1001):\r\n                pbar.update(step)\r\n                imgs_n,labels_n = readdatas.read(lengbat,160,70,image_paths,labels_in,classes)\r\n                global is_train\r\n                is_train = True\r\n\r\n\r\n                _, loss_value,lrt,img_all = sess.run([train_tensor,total_loss,lr,img_new],{imgs:imgs_n,labels:labels_n})\r\n                loss_avg += loss_value\r\n                if step % 50 == 0:\r\n                    avg = loss_avg / 50\r\n                    print(\"loss: %f \" % (avg))\r\n                    print(\"lr: %f\" %(lrt))\r\n                    loss_avg = 0\r\n                if step == 1000:\r\n                     saver_path = saver.save(sess, \"./from_2/step_\"+str(epoch)+\".ckpt\")\r\n`\r\n\r\n"}