{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/97368538", "pull_request_review_id": 17975393, "id": 97368538, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk3MzY4NTM4", "diff_hunk": "@@ -288,27 +317,67 @@ class UnsortedSegmentSumOp : public OpKernel {\n     auto output_flat = output->flat_outer_dims<T>();\n \n     auto data_ptr = data.template flat<T>().data();\n-    functor::UnsortedSegmentSumFunctor<Device, T, Index>()(\n-        context, context->template eigen_device<Device>(), output_rows,\n-        segment_ids.shape(), segment_flat, data.NumElements(), data_ptr,\n-        output_flat);\n+    reductionFunctor(context, context->template eigen_device<Device>(),\n+                     output_rows, segment_ids.shape(), segment_flat,\n+                     data.NumElements(), data_ptr, output_flat);\n   }\n+  functor::UnsortedSegmentBaseFunctor<Device, T, Index>& reductionFunctor;\n+};\n+\n+template <typename Device, class T, class Index>\n+class UnsortedSegmentSumOp : public UnsortedSegmentBaseOp<Device, T, Index> {\n+ public:\n+  explicit UnsortedSegmentSumOp(OpKernelConstruction* context)\n+      : UnsortedSegmentBaseOp<Device, T, Index>(\n+            context,\n+            sumFunctor) {}\n+    functor::UnsortedSegmentSumFunctor<Device, T, Index> sumFunctor;\n+};\n+\n+template <typename Device, class T, class Index>\n+class UnsortedSegmentMaxOp : public UnsortedSegmentBaseOp<Device, T, Index> {\n+ public:\n+  explicit UnsortedSegmentMaxOp(OpKernelConstruction* context)\n+      : UnsortedSegmentBaseOp<Device, T, Index>(\n+            context,\n+            maxFunctor) {}\n+    functor::UnsortedSegmentMaxFunctor<Device, T, Index> maxFunctor;", "path": "tensorflow/core/kernels/segment_reduction_ops.cc", "position": null, "original_position": 99, "commit_id": "e03e7ed1ed520f6f70d92614c7f91d7d9bedb761", "original_commit_id": "341e263f30dcb95d4b336c16b3ea8efa7acc9a6d", "user": {"login": "andydavis1", "id": 15696327, "node_id": "MDQ6VXNlcjE1Njk2MzI3", "avatar_url": "https://avatars0.githubusercontent.com/u/15696327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andydavis1", "html_url": "https://github.com/andydavis1", "followers_url": "https://api.github.com/users/andydavis1/followers", "following_url": "https://api.github.com/users/andydavis1/following{/other_user}", "gists_url": "https://api.github.com/users/andydavis1/gists{/gist_id}", "starred_url": "https://api.github.com/users/andydavis1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andydavis1/subscriptions", "organizations_url": "https://api.github.com/users/andydavis1/orgs", "repos_url": "https://api.github.com/users/andydavis1/repos", "events_url": "https://api.github.com/users/andydavis1/events{/privacy}", "received_events_url": "https://api.github.com/users/andydavis1/received_events", "type": "User", "site_admin": false}, "body": "Can you make these private members and following the naming convention: 'max_functor_'.  Same for 'sumFunctor' and 'reductionFunctor' above?", "created_at": "2017-01-23T17:16:05Z", "updated_at": "2017-02-02T22:06:57Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/6975#discussion_r97368538", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/6975", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/97368538"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/6975#discussion_r97368538"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/6975"}}, "body_html": "<p>Can you make these private members and following the naming convention: 'max_functor_'.  Same for 'sumFunctor' and 'reductionFunctor' above?</p>", "body_text": "Can you make these private members and following the naming convention: 'max_functor_'.  Same for 'sumFunctor' and 'reductionFunctor' above?"}