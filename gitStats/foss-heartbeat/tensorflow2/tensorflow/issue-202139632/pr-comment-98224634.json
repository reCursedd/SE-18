{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/98224634", "pull_request_review_id": 18861574, "id": 98224634, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk4MjI0NjM0", "diff_hunk": "@@ -243,16 +244,44 @@ struct UnsortedSegmentSumFunctor<CPUDevice, T, Index> {\n     }\n   }\n };\n-\n+// UnsortedSegmentMaxFunctor implementation for CPUDevice.\n+template <typename T, typename Index>\n+struct UnsortedSegmentMaxFunctor<CPUDevice, T, Index>\n+    : UnsortedSegmentBaseFunctor<CPUDevice, T, Index> {\n+  void operator()(OpKernelContext* ctx, const CPUDevice& d,\n+                  const Index output_rows, const TensorShape& segment_ids_shape,\n+                  typename TTypes<Index>::ConstFlat segment_ids,\n+                  const Index data_size, const T* data,\n+                  typename TTypes<T, 2>::Tensor output) override {\n+    output.setConstant(std::numeric_limits<T>::min());", "path": "tensorflow/core/kernels/segment_reduction_ops.cc", "position": 32, "original_position": 30, "commit_id": "e03e7ed1ed520f6f70d92614c7f91d7d9bedb761", "original_commit_id": "341e263f30dcb95d4b336c16b3ea8efa7acc9a6d", "user": {"login": "nikste", "id": 11996097, "node_id": "MDQ6VXNlcjExOTk2MDk3", "avatar_url": "https://avatars1.githubusercontent.com/u/11996097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikste", "html_url": "https://github.com/nikste", "followers_url": "https://api.github.com/users/nikste/followers", "following_url": "https://api.github.com/users/nikste/following{/other_user}", "gists_url": "https://api.github.com/users/nikste/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikste/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikste/subscriptions", "organizations_url": "https://api.github.com/users/nikste/orgs", "repos_url": "https://api.github.com/users/nikste/repos", "events_url": "https://api.github.com/users/nikste/events{/privacy}", "received_events_url": "https://api.github.com/users/nikste/received_events", "type": "User", "site_admin": false}, "body": "So I've been looking at this problem for a while now and I don't really see any straight forward solution to this.\r\nOne thing that makes it tricky is the GPU implementation of UnsortedSegmentSum, which does not share the code of the CPU implementation.\r\nSo that would be different from baseFunctor, but would need the same signature, since its used as well in BaseOp.\r\nThus would contain the init functors and reduction functors but would not use them.\r\n\r\nSecond I can't seem to initialize a functor as a member in e.g. UnsortedSegmentSumOp with member init functors and reduction functors as arguments.\r\nIf you see another way I'd be happy if you let me know.", "created_at": "2017-01-27T15:28:50Z", "updated_at": "2017-02-02T22:06:57Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/6975#discussion_r98224634", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/6975", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/98224634"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/6975#discussion_r98224634"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/6975"}}, "body_html": "<p>So I've been looking at this problem for a while now and I don't really see any straight forward solution to this.<br>\nOne thing that makes it tricky is the GPU implementation of UnsortedSegmentSum, which does not share the code of the CPU implementation.<br>\nSo that would be different from baseFunctor, but would need the same signature, since its used as well in BaseOp.<br>\nThus would contain the init functors and reduction functors but would not use them.</p>\n<p>Second I can't seem to initialize a functor as a member in e.g. UnsortedSegmentSumOp with member init functors and reduction functors as arguments.<br>\nIf you see another way I'd be happy if you let me know.</p>", "body_text": "So I've been looking at this problem for a while now and I don't really see any straight forward solution to this.\nOne thing that makes it tricky is the GPU implementation of UnsortedSegmentSum, which does not share the code of the CPU implementation.\nSo that would be different from baseFunctor, but would need the same signature, since its used as well in BaseOp.\nThus would contain the init functors and reduction functors but would not use them.\nSecond I can't seem to initialize a functor as a member in e.g. UnsortedSegmentSumOp with member init functors and reduction functors as arguments.\nIf you see another way I'd be happy if you let me know.", "in_reply_to_id": 97379074}