{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/141867045", "pull_request_review_id": 66150360, "id": 141867045, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MTg2NzA0NQ==", "diff_hunk": "@@ -251,6 +251,46 @@ def testDenseToSparseBatchDataset(self):\n       with self.assertRaises(errors.OutOfRangeError):\n         sess.run(get_next)\n \n+  def testDenseToSparseBatchDatasetWithUnknownShape(self):\n+    components = np.random.randint(5, size=(40,)).astype(np.int32)\n+    iterator = (dataset_ops.Dataset.from_tensor_slices(components)\n+                .map(lambda x: array_ops.fill([x, x], x)).dense_to_sparse_batch(\n+                    4, [5, -1]).make_initializable_iterator())\n+    init_op = iterator.initializer\n+    get_next = sparse_tensor.SparseTensor(*iterator.get_next())\n+\n+    with self.test_session() as sess:\n+      sess.run(init_op)\n+\n+      for start in range(0, len(components), 4):\n+        results = sess.run(get_next)\n+        self.assertAllEqual(\n+            [[i, j, z] for i, c in enumerate(components[start:start+4])\n+             for j in range(c) for z in range(c)], results.indices)\n+        self.assertAllEqual(\n+            [c for c in components[start:start+4]\n+             for _ in range(c) for _ in range(c)],\n+            results.values)\n+        self.assertAllEqual(\n+            [min(4, len(components) - start),\n+             5,\n+             np.max(components[start:start+4])],\n+            results.dense_shape)\n+\n+      with self.assertRaises(errors.OutOfRangeError):\n+        sess.run(get_next)\n+\n+  def testDenseToSparseBatchDatasetWithInvaildShape(self):", "path": "tensorflow/contrib/data/python/kernel_tests/batch_dataset_op_test.py", "position": null, "original_position": 33, "commit_id": "1278ba1a51fcb8bb4dc4ac956815cd7a46361248", "original_commit_id": "dfa5a47d87b8aa25bff0e815ba9fc27e2a6989c0", "user": {"login": "facaiy", "id": 1112263, "node_id": "MDQ6VXNlcjExMTIyNjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1112263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facaiy", "html_url": "https://github.com/facaiy", "followers_url": "https://api.github.com/users/facaiy/followers", "following_url": "https://api.github.com/users/facaiy/following{/other_user}", "gists_url": "https://api.github.com/users/facaiy/gists{/gist_id}", "starred_url": "https://api.github.com/users/facaiy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facaiy/subscriptions", "organizations_url": "https://api.github.com/users/facaiy/orgs", "repos_url": "https://api.github.com/users/facaiy/repos", "events_url": "https://api.github.com/users/facaiy/events{/privacy}", "received_events_url": "https://api.github.com/users/facaiy/received_events", "type": "User", "site_admin": false}, "body": "fixed, thank you.", "created_at": "2017-09-29T13:25:51Z", "updated_at": "2017-09-29T13:25:51Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/13266#discussion_r141867045", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/13266", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/141867045"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/13266#discussion_r141867045"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/13266"}}, "body_html": "<p>fixed, thank you.</p>", "body_text": "fixed, thank you.", "in_reply_to_id": 141781467}