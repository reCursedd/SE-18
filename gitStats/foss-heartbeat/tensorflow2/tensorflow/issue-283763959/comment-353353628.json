{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/353353628", "html_url": "https://github.com/tensorflow/tensorflow/issues/15538#issuecomment-353353628", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15538", "id": 353353628, "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzM1MzYyOA==", "user": {"login": "eigen2017", "id": 33959526, "node_id": "MDQ6VXNlcjMzOTU5NTI2", "avatar_url": "https://avatars3.githubusercontent.com/u/33959526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eigen2017", "html_url": "https://github.com/eigen2017", "followers_url": "https://api.github.com/users/eigen2017/followers", "following_url": "https://api.github.com/users/eigen2017/following{/other_user}", "gists_url": "https://api.github.com/users/eigen2017/gists{/gist_id}", "starred_url": "https://api.github.com/users/eigen2017/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eigen2017/subscriptions", "organizations_url": "https://api.github.com/users/eigen2017/orgs", "repos_url": "https://api.github.com/users/eigen2017/repos", "events_url": "https://api.github.com/users/eigen2017/events{/privacy}", "received_events_url": "https://api.github.com/users/eigen2017/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-21T13:42:37Z", "updated_at": "2017-12-21T13:44:36Z", "author_association": "NONE", "body_html": "<p>i solved this issue by<br>\n<a href=\"https://dato.ml/drop-dropout-from-frozen-model/\" rel=\"nofollow\">https://dato.ml/drop-dropout-from-frozen-model/</a><br>\nmy code to delete RandomUniform of pb file:</p>\n<blockquote>\n<h1>coding=utf-8</h1>\n<p>import tensorflow as tf<br>\nfrom tensorflow.core.framework import graph_pb2</p>\n<p>def display_nodes(nodes):<br>\nfor i, node in enumerate(nodes):<br>\nprint('%d %s %s' % (i, node.name, node.op))<br>\nfor j, n in enumerate(node.input):<br>\nprint(u'\u2514\u2500\u2500\u2500 %d \u2500 %s' % (j, n))</p>\n<p>graph = tf.GraphDef()<br>\nwith tf.gfile.Open('/data/run/daniel/project/06_deepID/deconv/RNN/top_pb/cnn_rnn2s.acc0.640000.pb', 'r') as f:<br>\ndata = f.read()<br>\ngraph.ParseFromString(data)</p>\n<h1>display_nodes(graph.node)</h1>\n<p>graph.node[2354].input[0] = 'rnn_net/rnn/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell_63/mul_2'</p>\n<p>nodes = graph.node[:2339] + graph.node[2350:]</p>\n<p>output_graph = graph_pb2.GraphDef()<br>\noutput_graph.node.extend(nodes)<br>\nwith tf.gfile.GFile('./frozen_model_without_dropout.pb', 'w') as f:<br>\nf.write(output_graph.SerializeToString())</p>\n<p>graph = tf.GraphDef()<br>\nwith tf.gfile.Open('./frozen_model_without_dropout.pb', 'r') as f:<br>\ndata = f.read()<br>\ngraph.ParseFromString(data)</p>\n<p>display_nodes(graph.node)</p>\n</blockquote>", "body_text": "i solved this issue by\nhttps://dato.ml/drop-dropout-from-frozen-model/\nmy code to delete RandomUniform of pb file:\n\ncoding=utf-8\nimport tensorflow as tf\nfrom tensorflow.core.framework import graph_pb2\ndef display_nodes(nodes):\nfor i, node in enumerate(nodes):\nprint('%d %s %s' % (i, node.name, node.op))\nfor j, n in enumerate(node.input):\nprint(u'\u2514\u2500\u2500\u2500 %d \u2500 %s' % (j, n))\ngraph = tf.GraphDef()\nwith tf.gfile.Open('/data/run/daniel/project/06_deepID/deconv/RNN/top_pb/cnn_rnn2s.acc0.640000.pb', 'r') as f:\ndata = f.read()\ngraph.ParseFromString(data)\ndisplay_nodes(graph.node)\ngraph.node[2354].input[0] = 'rnn_net/rnn/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell_63/mul_2'\nnodes = graph.node[:2339] + graph.node[2350:]\noutput_graph = graph_pb2.GraphDef()\noutput_graph.node.extend(nodes)\nwith tf.gfile.GFile('./frozen_model_without_dropout.pb', 'w') as f:\nf.write(output_graph.SerializeToString())\ngraph = tf.GraphDef()\nwith tf.gfile.Open('./frozen_model_without_dropout.pb', 'r') as f:\ndata = f.read()\ngraph.ParseFromString(data)\ndisplay_nodes(graph.node)", "body": "i solved this issue by \r\nhttps://dato.ml/drop-dropout-from-frozen-model/\r\nmy code to delete RandomUniform of pb file:\r\n\r\n> # coding=utf-8\r\n> import tensorflow as tf\r\n> from tensorflow.core.framework import graph_pb2\r\n> \r\n> def display_nodes(nodes):\r\n>     for i, node in enumerate(nodes):\r\n>         print('%d %s %s' % (i, node.name, node.op))\r\n>         for j, n in enumerate(node.input):\r\n>             print(u'\u2514\u2500\u2500\u2500 %d \u2500 %s' % (j, n))\r\n> \r\n> \r\n> graph = tf.GraphDef()\r\n> with tf.gfile.Open('/data/run/daniel/project/06_deepID/deconv/RNN/top_pb/cnn_rnn2s.acc0.640000.pb', 'r') as f:\r\n>     data = f.read()\r\n>     graph.ParseFromString(data)\r\n> \r\n> # display_nodes(graph.node)\r\n> \r\n> graph.node[2354].input[0] = 'rnn_net/rnn/rnn/multi_rnn_cell/cell_1/cell_1/lstm_cell/lstm_cell_63/mul_2'\r\n> \r\n> nodes = graph.node[:2339] + graph.node[2350:]\r\n> \r\n> \r\n> output_graph = graph_pb2.GraphDef()\r\n> output_graph.node.extend(nodes)\r\n> with tf.gfile.GFile('./frozen_model_without_dropout.pb', 'w') as f:\r\n>     f.write(output_graph.SerializeToString())\r\n> \r\n> \r\n> graph = tf.GraphDef()\r\n> with tf.gfile.Open('./frozen_model_without_dropout.pb', 'r') as f:\r\n>     data = f.read()\r\n>     graph.ParseFromString(data)\r\n> \r\n> display_nodes(graph.node)"}