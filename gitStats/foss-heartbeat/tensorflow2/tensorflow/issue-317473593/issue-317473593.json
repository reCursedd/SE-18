{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18849", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18849/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18849/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18849/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18849", "id": 317473593, "node_id": "MDU6SXNzdWUzMTc0NzM1OTM=", "number": 18849, "title": "CUPTI events are missing from tf.train.Server", "user": {"login": "xldrx", "id": 1114830, "node_id": "MDQ6VXNlcjExMTQ4MzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1114830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xldrx", "html_url": "https://github.com/xldrx", "followers_url": "https://api.github.com/users/xldrx/followers", "following_url": "https://api.github.com/users/xldrx/following{/other_user}", "gists_url": "https://api.github.com/users/xldrx/gists{/gist_id}", "starred_url": "https://api.github.com/users/xldrx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xldrx/subscriptions", "organizations_url": "https://api.github.com/users/xldrx/orgs", "repos_url": "https://api.github.com/users/xldrx/repos", "events_url": "https://api.github.com/users/xldrx/events{/privacy}", "received_events_url": "https://api.github.com/users/xldrx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "prb12", "id": 11547801, "node_id": "MDQ6VXNlcjExNTQ3ODAx", "avatar_url": "https://avatars1.githubusercontent.com/u/11547801?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prb12", "html_url": "https://github.com/prb12", "followers_url": "https://api.github.com/users/prb12/followers", "following_url": "https://api.github.com/users/prb12/following{/other_user}", "gists_url": "https://api.github.com/users/prb12/gists{/gist_id}", "starred_url": "https://api.github.com/users/prb12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prb12/subscriptions", "organizations_url": "https://api.github.com/users/prb12/orgs", "repos_url": "https://api.github.com/users/prb12/repos", "events_url": "https://api.github.com/users/prb12/events{/privacy}", "received_events_url": "https://api.github.com/users/prb12/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "prb12", "id": 11547801, "node_id": "MDQ6VXNlcjExNTQ3ODAx", "avatar_url": "https://avatars1.githubusercontent.com/u/11547801?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prb12", "html_url": "https://github.com/prb12", "followers_url": "https://api.github.com/users/prb12/followers", "following_url": "https://api.github.com/users/prb12/following{/other_user}", "gists_url": "https://api.github.com/users/prb12/gists{/gist_id}", "starred_url": "https://api.github.com/users/prb12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prb12/subscriptions", "organizations_url": "https://api.github.com/users/prb12/orgs", "repos_url": "https://api.github.com/users/prb12/repos", "events_url": "https://api.github.com/users/prb12/events{/privacy}", "received_events_url": "https://api.github.com/users/prb12/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-04-25T04:17:19Z", "updated_at": "2018-11-22T18:56:00Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: Source</li>\n<li><strong>TensorFlow version (use command below)</strong>: r1.7, r1.6, r1.5</li>\n<li><strong>Python version</strong>: 3.6</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.11.0</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:</li>\n<li><strong>CUDA/cuDNN version</strong>: 9.1/7.1.3, 9.0/7.0.5</li>\n<li><strong>GPU model and memory</strong>: K80/V100/GTX TITAN</li>\n<li><strong>Exact command to reproduce</strong>: See the description</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I am collecting runtime tracing using <code>tf.RunOptions.FULL_TRACE</code>. When a direct session is used (<code>master=None</code>), CUPTI events (<code>/stream:*</code> devices) are included in <code>tf.RunMetadata</code>. However, a remote (grpc) session does not have any. Is there a particular reason behind it?</p>\n<p>For example the following script has the CUPTI:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">import</span> tensorflow.contrib.slim.nets <span class=\"pl-k\">as</span> nets\n\nmodel, _ <span class=\"pl-k\">=</span> nets.resnet_v2.resnet_v2_50(tf.random_uniform([<span class=\"pl-c1\">16</span>,<span class=\"pl-c1\">299</span>,<span class=\"pl-c1\">299</span>,<span class=\"pl-c1\">3</span>]))\n\n<span class=\"pl-k\">with</span> tf.train.MonitoredTrainingSession() <span class=\"pl-k\">as</span> sess:\n     run_metadata <span class=\"pl-k\">=</span> tf.RunMetadata()\n     sess.run(model.op, <span class=\"pl-v\">run_metadata</span><span class=\"pl-k\">=</span>run_metadata, <span class=\"pl-v\">options</span><span class=\"pl-k\">=</span>tf.RunOptions(<span class=\"pl-v\">trace_level</span><span class=\"pl-k\">=</span>tf.RunOptions.<span class=\"pl-c1\">FULL_TRACE</span>))\n\n<span class=\"pl-c1\">print</span>([d.device <span class=\"pl-k\">for</span> d <span class=\"pl-k\">in</span> run_metadata.step_stats.dev_stats])\n<span class=\"pl-k\">assert</span> <span class=\"pl-c1\">any</span>([<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>stream:all<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">in</span> d.device <span class=\"pl-k\">for</span> d <span class=\"pl-k\">in</span> run_metadata.step_stats.dev_stats])</pre></div>\n<p>The example output on my device is:</p>\n<pre><code>['/device:GPU:0/stream:7', '/device:GPU:0/memcpy', '/device:GPU:0/stream:25', '/device:GPU:0/stream:24', '/device:GPU:0/stream:13', '/job:localhost/replica:0/task:0/device:GPU:0', '/device:GPU:0/stream:18', '/device:GPU:0/stream:all', '/device:GPU:0/stream:23', '/device:GPU:0/stream:31', '/device:GPU:0/stream:20', '/device:GPU:0/stream:22', '/device:GPU:0/stream:19', '/device:GPU:0/stream:21']\n</code></pre>\n<p>However, the following example does not have any CUPTI events:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">import</span> tensorflow.contrib.slim.nets <span class=\"pl-k\">as</span> nets\n\nserver <span class=\"pl-k\">=</span> tf.train.Server(tf.train.ClusterSpec({<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>worker<span class=\"pl-pds\">\"</span></span>:[<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>localhost:2222<span class=\"pl-pds\">\"</span></span>]}), <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>worker<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-c1\">0</span>)\nmodel, _ <span class=\"pl-k\">=</span> nets.resnet_v2.resnet_v2_50(tf.random_uniform([<span class=\"pl-c1\">16</span>,<span class=\"pl-c1\">299</span>,<span class=\"pl-c1\">299</span>,<span class=\"pl-c1\">3</span>]))\n\n<span class=\"pl-k\">with</span> tf.train.MonitoredTrainingSession(<span class=\"pl-v\">master</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>grpc://localhost:2222<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">as</span> sess:\n     run_metadata <span class=\"pl-k\">=</span> tf.RunMetadata()\n     sess.run(model.op, <span class=\"pl-v\">run_metadata</span><span class=\"pl-k\">=</span>run_metadata, <span class=\"pl-v\">options</span><span class=\"pl-k\">=</span>tf.RunOptions(<span class=\"pl-v\">trace_level</span><span class=\"pl-k\">=</span>tf.RunOptions.<span class=\"pl-c1\">FULL_TRACE</span>))\n\n<span class=\"pl-c1\">print</span>([d.device <span class=\"pl-k\">for</span> d <span class=\"pl-k\">in</span> run_metadata.step_stats.dev_stats])\n<span class=\"pl-k\">assert</span> <span class=\"pl-c1\">any</span>([<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>stream:all<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">in</span> d.device <span class=\"pl-k\">for</span> d <span class=\"pl-k\">in</span> run_metadata.step_stats.dev_stats])</pre></div>\n<p>The following is the output on my device:</p>\n<pre><code>['/job:worker/replica:0/task:0/device:GPU:0']\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nAssertionError\n</code></pre>\n<p>I have tried this with multiple version of TensorFlow (r1.7, r1.6, r1.5) and both <code>grpc_tensorflow_server</code> and <code>tf.train.Server</code>.</p>", "body_text": "System information\n\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04\nTensorFlow installed from (source or binary): Source\nTensorFlow version (use command below): r1.7, r1.6, r1.5\nPython version: 3.6\nBazel version (if compiling from source): 0.11.0\nGCC/Compiler version (if compiling from source):\nCUDA/cuDNN version: 9.1/7.1.3, 9.0/7.0.5\nGPU model and memory: K80/V100/GTX TITAN\nExact command to reproduce: See the description\n\nDescribe the problem\nI am collecting runtime tracing using tf.RunOptions.FULL_TRACE. When a direct session is used (master=None), CUPTI events (/stream:* devices) are included in tf.RunMetadata. However, a remote (grpc) session does not have any. Is there a particular reason behind it?\nFor example the following script has the CUPTI:\nimport tensorflow as tf\nimport tensorflow.contrib.slim.nets as nets\n\nmodel, _ = nets.resnet_v2.resnet_v2_50(tf.random_uniform([16,299,299,3]))\n\nwith tf.train.MonitoredTrainingSession() as sess:\n     run_metadata = tf.RunMetadata()\n     sess.run(model.op, run_metadata=run_metadata, options=tf.RunOptions(trace_level=tf.RunOptions.FULL_TRACE))\n\nprint([d.device for d in run_metadata.step_stats.dev_stats])\nassert any([\"stream:all\" in d.device for d in run_metadata.step_stats.dev_stats])\nThe example output on my device is:\n['/device:GPU:0/stream:7', '/device:GPU:0/memcpy', '/device:GPU:0/stream:25', '/device:GPU:0/stream:24', '/device:GPU:0/stream:13', '/job:localhost/replica:0/task:0/device:GPU:0', '/device:GPU:0/stream:18', '/device:GPU:0/stream:all', '/device:GPU:0/stream:23', '/device:GPU:0/stream:31', '/device:GPU:0/stream:20', '/device:GPU:0/stream:22', '/device:GPU:0/stream:19', '/device:GPU:0/stream:21']\n\nHowever, the following example does not have any CUPTI events:\nimport tensorflow as tf\nimport tensorflow.contrib.slim.nets as nets\n\nserver = tf.train.Server(tf.train.ClusterSpec({\"worker\":[\"localhost:2222\"]}), \"worker\", 0)\nmodel, _ = nets.resnet_v2.resnet_v2_50(tf.random_uniform([16,299,299,3]))\n\nwith tf.train.MonitoredTrainingSession(master=\"grpc://localhost:2222\") as sess:\n     run_metadata = tf.RunMetadata()\n     sess.run(model.op, run_metadata=run_metadata, options=tf.RunOptions(trace_level=tf.RunOptions.FULL_TRACE))\n\nprint([d.device for d in run_metadata.step_stats.dev_stats])\nassert any([\"stream:all\" in d.device for d in run_metadata.step_stats.dev_stats])\nThe following is the output on my device:\n['/job:worker/replica:0/task:0/device:GPU:0']\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nAssertionError\n\nI have tried this with multiple version of TensorFlow (r1.7, r1.6, r1.5) and both grpc_tensorflow_server and tf.train.Server.", "body": "### System information\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: Source\r\n- **TensorFlow version (use command below)**: r1.7, r1.6, r1.5\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**: 0.11.0\r\n- **GCC/Compiler version (if compiling from source)**: \r\n- **CUDA/cuDNN version**: 9.1/7.1.3, 9.0/7.0.5\r\n- **GPU model and memory**: K80/V100/GTX TITAN\r\n- **Exact command to reproduce**: See the description\r\n\r\n### Describe the problem\r\nI am collecting runtime tracing using `tf.RunOptions.FULL_TRACE`. When a direct session is used (`master=None`), CUPTI events (`/stream:*` devices) are included in `tf.RunMetadata`. However, a remote (grpc) session does not have any. Is there a particular reason behind it?\r\n\r\nFor example the following script has the CUPTI:\r\n```python\r\nimport tensorflow as tf\r\nimport tensorflow.contrib.slim.nets as nets\r\n\r\nmodel, _ = nets.resnet_v2.resnet_v2_50(tf.random_uniform([16,299,299,3]))\r\n\r\nwith tf.train.MonitoredTrainingSession() as sess:\r\n     run_metadata = tf.RunMetadata()\r\n     sess.run(model.op, run_metadata=run_metadata, options=tf.RunOptions(trace_level=tf.RunOptions.FULL_TRACE))\r\n\r\nprint([d.device for d in run_metadata.step_stats.dev_stats])\r\nassert any([\"stream:all\" in d.device for d in run_metadata.step_stats.dev_stats])\r\n```\r\nThe example output on my device is:\r\n```\r\n['/device:GPU:0/stream:7', '/device:GPU:0/memcpy', '/device:GPU:0/stream:25', '/device:GPU:0/stream:24', '/device:GPU:0/stream:13', '/job:localhost/replica:0/task:0/device:GPU:0', '/device:GPU:0/stream:18', '/device:GPU:0/stream:all', '/device:GPU:0/stream:23', '/device:GPU:0/stream:31', '/device:GPU:0/stream:20', '/device:GPU:0/stream:22', '/device:GPU:0/stream:19', '/device:GPU:0/stream:21']\r\n```\r\n\r\nHowever, the following example does not have any CUPTI events:\r\n```python\r\nimport tensorflow as tf\r\nimport tensorflow.contrib.slim.nets as nets\r\n\r\nserver = tf.train.Server(tf.train.ClusterSpec({\"worker\":[\"localhost:2222\"]}), \"worker\", 0)\r\nmodel, _ = nets.resnet_v2.resnet_v2_50(tf.random_uniform([16,299,299,3]))\r\n\r\nwith tf.train.MonitoredTrainingSession(master=\"grpc://localhost:2222\") as sess:\r\n     run_metadata = tf.RunMetadata()\r\n     sess.run(model.op, run_metadata=run_metadata, options=tf.RunOptions(trace_level=tf.RunOptions.FULL_TRACE))\r\n\r\nprint([d.device for d in run_metadata.step_stats.dev_stats])\r\nassert any([\"stream:all\" in d.device for d in run_metadata.step_stats.dev_stats])\r\n```\r\n\r\nThe following is the output on my device:\r\n```\r\n['/job:worker/replica:0/task:0/device:GPU:0']\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nAssertionError\r\n```\r\n\r\nI have tried this with multiple version of TensorFlow (r1.7, r1.6, r1.5) and both `grpc_tensorflow_server` and `tf.train.Server`.\r\n"}