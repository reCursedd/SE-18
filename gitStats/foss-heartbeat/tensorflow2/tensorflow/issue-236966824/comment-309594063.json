{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/309594063", "html_url": "https://github.com/tensorflow/tensorflow/issues/10829#issuecomment-309594063", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10829", "id": 309594063, "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTU5NDA2Mw==", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-19T22:43:34Z", "updated_at": "2017-06-19T22:43:34Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=9267365\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/andreas-eberle\">@andreas-eberle</a> : The <code>QuantizeV2</code> op should be linked in with the Java JNI distribution. Is it possible that you're somehow using an older version of the TensorFlow Java native library?</p>\n<p>To validate and simulate the environment you're in, I tried the following:</p>\n<ol>\n<li>Construct a graph in Python</li>\n</ol>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\nx <span class=\"pl-k\">=</span> tf.placeholder(tf.float32, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>input<span class=\"pl-pds\">'</span></span>)\nq, mn, mx <span class=\"pl-k\">=</span> tf.quantize_v2(x, <span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">100</span>., tf.quint8)\ny <span class=\"pl-k\">=</span> tf.dequantize(q, mn, mx, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>output<span class=\"pl-pds\">'</span></span>)\n<span class=\"pl-k\">with</span> <span class=\"pl-c1\">open</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>/tmp/graph.pb<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>w<span class=\"pl-pds\">'</span></span>) <span class=\"pl-k\">as</span> f:\n  f.write(tf.get_default_graph().as_graph_def().SerializeToString())</pre></div>\n<ol start=\"2\">\n<li>Load and execute this graph in a Java program:</li>\n</ol>\n<div class=\"highlight highlight-source-java\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-smi\">org.tensorflow.*</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-smi\">java.nio.file.Files</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-smi\">java.nio.file.Paths</span>;\n\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-en\">HelloTF</span> {\n  <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">void</span> <span class=\"pl-en\">main</span>(<span class=\"pl-k\">String</span>[] <span class=\"pl-v\">args</span>) <span class=\"pl-k\">throws</span> <span class=\"pl-smi\">Exception</span> {\n    <span class=\"pl-k\">try</span> (<span class=\"pl-smi\">Graph</span> g <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Graph</span>()) {\n      g<span class=\"pl-k\">.</span>importGraphDef(<span class=\"pl-smi\">Files</span><span class=\"pl-k\">.</span>readAllBytes(<span class=\"pl-smi\">Paths</span><span class=\"pl-k\">.</span>get(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/tmp/graph.pb<span class=\"pl-pds\">\"</span></span>)), <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>);\n      <span class=\"pl-k\">try</span> (<span class=\"pl-smi\">Session</span> s <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Session</span>(g);\n          <span class=\"pl-smi\">Tensor</span> input <span class=\"pl-k\">=</span> <span class=\"pl-smi\">Tensor</span><span class=\"pl-k\">.</span>create(<span class=\"pl-c1\">50.0f</span>);\n          <span class=\"pl-smi\">Tensor</span> output <span class=\"pl-k\">=</span> s<span class=\"pl-k\">.</span>runner()<span class=\"pl-k\">.</span>feed(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>input<span class=\"pl-pds\">\"</span></span>, input)<span class=\"pl-k\">.</span>fetch(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>output<span class=\"pl-pds\">\"</span></span>)<span class=\"pl-k\">.</span>run()<span class=\"pl-k\">.</span>get(<span class=\"pl-c1\">0</span>)) {\n        <span class=\"pl-smi\">System</span><span class=\"pl-k\">.</span>out<span class=\"pl-k\">.</span>println(output<span class=\"pl-k\">.</span>floatValue());\n        <span class=\"pl-smi\">System</span><span class=\"pl-k\">.</span>out<span class=\"pl-k\">.</span>println(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>TensorFlow Version: <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> <span class=\"pl-smi\">TensorFlow</span><span class=\"pl-k\">.</span>version());\n      }\n    }\n  }\n}</pre></div>\n<p>Executing the Java program seemed to work out fine, executing the quantize and dequantize operations and printing:</p>\n<pre><code>50.19608\nTensorFlow Version: 1.2.0\n</code></pre>\n<p>Could you try the same in your setup? If you get the same error as you do now, is there some instructions to reproduce that you can share?</p>\n<p>Thanks!</p>", "body_text": "@andreas-eberle : The QuantizeV2 op should be linked in with the Java JNI distribution. Is it possible that you're somehow using an older version of the TensorFlow Java native library?\nTo validate and simulate the environment you're in, I tried the following:\n\nConstruct a graph in Python\n\nimport tensorflow as tf\n\nx = tf.placeholder(tf.float32, name='input')\nq, mn, mx = tf.quantize_v2(x, 0., 100., tf.quint8)\ny = tf.dequantize(q, mn, mx, name='output')\nwith open('/tmp/graph.pb', 'w') as f:\n  f.write(tf.get_default_graph().as_graph_def().SerializeToString())\n\nLoad and execute this graph in a Java program:\n\nimport org.tensorflow.*;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class HelloTF {\n  public static void main(String[] args) throws Exception {\n    try (Graph g = new Graph()) {\n      g.importGraphDef(Files.readAllBytes(Paths.get(\"/tmp/graph.pb\")), \"\");\n      try (Session s = new Session(g);\n          Tensor input = Tensor.create(50.0f);\n          Tensor output = s.runner().feed(\"input\", input).fetch(\"output\").run().get(0)) {\n        System.out.println(output.floatValue());\n        System.out.println(\"TensorFlow Version: \" + TensorFlow.version());\n      }\n    }\n  }\n}\nExecuting the Java program seemed to work out fine, executing the quantize and dequantize operations and printing:\n50.19608\nTensorFlow Version: 1.2.0\n\nCould you try the same in your setup? If you get the same error as you do now, is there some instructions to reproduce that you can share?\nThanks!", "body": "@andreas-eberle : The `QuantizeV2` op should be linked in with the Java JNI distribution. Is it possible that you're somehow using an older version of the TensorFlow Java native library?\r\n\r\nTo validate and simulate the environment you're in, I tried the following:\r\n\r\n1. Construct a graph in Python\r\n\r\n```python\r\nimport tensorflow as tf\r\n\r\nx = tf.placeholder(tf.float32, name='input')\r\nq, mn, mx = tf.quantize_v2(x, 0., 100., tf.quint8)\r\ny = tf.dequantize(q, mn, mx, name='output')\r\nwith open('/tmp/graph.pb', 'w') as f:\r\n  f.write(tf.get_default_graph().as_graph_def().SerializeToString())\r\n```\r\n\r\n2. Load and execute this graph in a Java program:\r\n\r\n```java\r\nimport org.tensorflow.*;\r\nimport java.nio.file.Files;\r\nimport java.nio.file.Paths;\r\n\r\npublic class HelloTF {\r\n  public static void main(String[] args) throws Exception {\r\n    try (Graph g = new Graph()) {\r\n      g.importGraphDef(Files.readAllBytes(Paths.get(\"/tmp/graph.pb\")), \"\");\r\n      try (Session s = new Session(g);\r\n          Tensor input = Tensor.create(50.0f);\r\n          Tensor output = s.runner().feed(\"input\", input).fetch(\"output\").run().get(0)) {\r\n        System.out.println(output.floatValue());\r\n        System.out.println(\"TensorFlow Version: \" + TensorFlow.version());\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nExecuting the Java program seemed to work out fine, executing the quantize and dequantize operations and printing:\r\n\r\n```\r\n50.19608\r\nTensorFlow Version: 1.2.0\r\n```\r\n\r\nCould you try the same in your setup? If you get the same error as you do now, is there some instructions to reproduce that you can share?\r\n\r\nThanks!"}