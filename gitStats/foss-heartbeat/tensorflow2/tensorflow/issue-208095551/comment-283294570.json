{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/283294570", "html_url": "https://github.com/tensorflow/tensorflow/issues/7570#issuecomment-283294570", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7570", "id": 283294570, "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzI5NDU3MA==", "user": {"login": "CharlesShang", "id": 2253266, "node_id": "MDQ6VXNlcjIyNTMyNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/2253266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CharlesShang", "html_url": "https://github.com/CharlesShang", "followers_url": "https://api.github.com/users/CharlesShang/followers", "following_url": "https://api.github.com/users/CharlesShang/following{/other_user}", "gists_url": "https://api.github.com/users/CharlesShang/gists{/gist_id}", "starred_url": "https://api.github.com/users/CharlesShang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CharlesShang/subscriptions", "organizations_url": "https://api.github.com/users/CharlesShang/orgs", "repos_url": "https://api.github.com/users/CharlesShang/repos", "events_url": "https://api.github.com/users/CharlesShang/events{/privacy}", "received_events_url": "https://api.github.com/users/CharlesShang/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-01T09:51:25Z", "updated_at": "2017-03-01T09:51:25Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=463737\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vrv\">@vrv</a> Thank you for your code.<br>\nI've made some modification and tested it.<br>\nWrite it down in case someone may need it.</p>\n<pre><code>SetShapeFn([](::tensorflow::shape_inference::InferenceContext* c) {\n      ::tensorflow::shape_inference::ShapeHandle dims;\n      TF_RETURN_IF_ERROR(c-&gt;WithRank(c-&gt;input(0), 4, &amp;dims));\n      ::tensorflow::shape_inference::DimensionHandle channels;\n      channels = c-&gt;Dim(dims, 3);\n\n      ::tensorflow::shape_inference::ShapeHandle dims_rois;\n      TF_RETURN_IF_ERROR(c-&gt;WithRankAtLeast(c-&gt;input(1), 1, &amp;dims_rois));\n      ::tensorflow::shape_inference::DimensionHandle num_rois;\n      num_rois = c-&gt;Dim(dims_rois, 0);\n\n      int64 pooled_height;\n      int64 pooled_width;\n      TF_RETURN_IF_ERROR(c-&gt;GetAttr(\"pooled_height\", &amp;pooled_height));\n      TF_RETURN_IF_ERROR(c-&gt;GetAttr(\"pooled_width\", &amp;pooled_width));\n      ::tensorflow::shape_inference::ShapeHandle output_shape =\\\n         c-&gt;MakeShape({num_rois, pooled_height, pooled_width, channels});\n      c-&gt;set_output(0, output_shape);\n      c-&gt;set_output(1, output_shape);\n      return ::tensorflow::Status::OK();\n    });\n</code></pre>", "body_text": "@vrv Thank you for your code.\nI've made some modification and tested it.\nWrite it down in case someone may need it.\nSetShapeFn([](::tensorflow::shape_inference::InferenceContext* c) {\n      ::tensorflow::shape_inference::ShapeHandle dims;\n      TF_RETURN_IF_ERROR(c->WithRank(c->input(0), 4, &dims));\n      ::tensorflow::shape_inference::DimensionHandle channels;\n      channels = c->Dim(dims, 3);\n\n      ::tensorflow::shape_inference::ShapeHandle dims_rois;\n      TF_RETURN_IF_ERROR(c->WithRankAtLeast(c->input(1), 1, &dims_rois));\n      ::tensorflow::shape_inference::DimensionHandle num_rois;\n      num_rois = c->Dim(dims_rois, 0);\n\n      int64 pooled_height;\n      int64 pooled_width;\n      TF_RETURN_IF_ERROR(c->GetAttr(\"pooled_height\", &pooled_height));\n      TF_RETURN_IF_ERROR(c->GetAttr(\"pooled_width\", &pooled_width));\n      ::tensorflow::shape_inference::ShapeHandle output_shape =\\\n         c->MakeShape({num_rois, pooled_height, pooled_width, channels});\n      c->set_output(0, output_shape);\n      c->set_output(1, output_shape);\n      return ::tensorflow::Status::OK();\n    });", "body": "@vrv Thank you for your code.\r\nI've made some modification and tested it. \r\nWrite it down in case someone may need it. \r\n```\r\nSetShapeFn([](::tensorflow::shape_inference::InferenceContext* c) {\r\n      ::tensorflow::shape_inference::ShapeHandle dims;\r\n      TF_RETURN_IF_ERROR(c->WithRank(c->input(0), 4, &dims));\r\n      ::tensorflow::shape_inference::DimensionHandle channels;\r\n      channels = c->Dim(dims, 3);\r\n\r\n      ::tensorflow::shape_inference::ShapeHandle dims_rois;\r\n      TF_RETURN_IF_ERROR(c->WithRankAtLeast(c->input(1), 1, &dims_rois));\r\n      ::tensorflow::shape_inference::DimensionHandle num_rois;\r\n      num_rois = c->Dim(dims_rois, 0);\r\n\r\n      int64 pooled_height;\r\n      int64 pooled_width;\r\n      TF_RETURN_IF_ERROR(c->GetAttr(\"pooled_height\", &pooled_height));\r\n      TF_RETURN_IF_ERROR(c->GetAttr(\"pooled_width\", &pooled_width));\r\n      ::tensorflow::shape_inference::ShapeHandle output_shape =\\\r\n         c->MakeShape({num_rois, pooled_height, pooled_width, channels});\r\n      c->set_output(0, output_shape);\r\n      c->set_output(1, output_shape);\r\n      return ::tensorflow::Status::OK();\r\n    });\r\n```"}