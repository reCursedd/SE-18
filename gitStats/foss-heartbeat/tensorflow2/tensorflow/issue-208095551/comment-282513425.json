{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/282513425", "html_url": "https://github.com/tensorflow/tensorflow/issues/7570#issuecomment-282513425", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7570", "id": 282513425, "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjUxMzQyNQ==", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "created_at": "2017-02-25T21:23:59Z", "updated_at": "2017-02-25T21:34:02Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5112840\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/harpone\">@harpone</a> This is a side-effect of moving shape inference into C++ which I guess was needed to enable XLA and non-Python users of TensorFlow. But I wonder if you could just avoid specifying shape inference functions.</p>\n<p>I have a trick for speeding up large graphs which makes graph construction 3x faster with no adverse side-effects, change the line in <a href=\"https://github.com/tensorflow/tensorflow/blob/f821ce046df71f5784ed4ce7fb6b87f77d96b031/tensorflow/python/framework/ops.py#L1707\">ops.py</a> to read this</p>\n<pre><code>def set_shapes_for_outputs(op):\n  \"\"\"Uses the registered shape functions to set the shapes for op's outputs.\"\"\"\n  return\n</code></pre>\n<p>PS: as Vijay pointed out, you'll need C++ anyway to define the body of custom op, even without shape inference function</p>", "body_text": "@harpone This is a side-effect of moving shape inference into C++ which I guess was needed to enable XLA and non-Python users of TensorFlow. But I wonder if you could just avoid specifying shape inference functions.\nI have a trick for speeding up large graphs which makes graph construction 3x faster with no adverse side-effects, change the line in ops.py to read this\ndef set_shapes_for_outputs(op):\n  \"\"\"Uses the registered shape functions to set the shapes for op's outputs.\"\"\"\n  return\n\nPS: as Vijay pointed out, you'll need C++ anyway to define the body of custom op, even without shape inference function", "body": "@harpone This is a side-effect of moving shape inference into C++ which I guess was needed to enable XLA and non-Python users of TensorFlow. But I wonder if you could just avoid specifying shape inference functions.\r\n\r\nI have a trick for speeding up large graphs which makes graph construction 3x faster with no adverse side-effects, change the line in [ops.py](https://github.com/tensorflow/tensorflow/blob/f821ce046df71f5784ed4ce7fb6b87f77d96b031/tensorflow/python/framework/ops.py#L1707) to read this\r\n\r\n```\r\ndef set_shapes_for_outputs(op):\r\n  \"\"\"Uses the registered shape functions to set the shapes for op's outputs.\"\"\"\r\n  return\r\n```\r\n\r\nPS: as Vijay pointed out, you'll need C++ anyway to define the body of custom op, even without shape inference function\r\n"}