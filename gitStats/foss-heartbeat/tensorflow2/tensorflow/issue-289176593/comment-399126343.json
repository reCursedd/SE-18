{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/399126343", "html_url": "https://github.com/tensorflow/tensorflow/issues/16184#issuecomment-399126343", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16184", "id": 399126343, "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTEyNjM0Mw==", "user": {"login": "r4nt", "id": 1835471, "node_id": "MDQ6VXNlcjE4MzU0NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1835471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/r4nt", "html_url": "https://github.com/r4nt", "followers_url": "https://api.github.com/users/r4nt/followers", "following_url": "https://api.github.com/users/r4nt/following{/other_user}", "gists_url": "https://api.github.com/users/r4nt/gists{/gist_id}", "starred_url": "https://api.github.com/users/r4nt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/r4nt/subscriptions", "organizations_url": "https://api.github.com/users/r4nt/orgs", "repos_url": "https://api.github.com/users/r4nt/repos", "events_url": "https://api.github.com/users/r4nt/events{/privacy}", "received_events_url": "https://api.github.com/users/r4nt/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-21T14:36:59Z", "updated_at": "2018-06-21T14:36:59Z", "author_association": "NONE", "body_html": "<p>Assuming you don't want to run the cuda binaries on the non-GPU server, would it be ok for you if the build didn't require libcuda.so.1? I think this is currently the case because we don't pass -lcuda to builds that depend on .so libraries that have been built with -lcuda, in which case the linker falls back to trying to find the library via the SONAME in the original linked libcuda.so, which is libcuda.so.1.</p>", "body_text": "Assuming you don't want to run the cuda binaries on the non-GPU server, would it be ok for you if the build didn't require libcuda.so.1? I think this is currently the case because we don't pass -lcuda to builds that depend on .so libraries that have been built with -lcuda, in which case the linker falls back to trying to find the library via the SONAME in the original linked libcuda.so, which is libcuda.so.1.", "body": "Assuming you don't want to run the cuda binaries on the non-GPU server, would it be ok for you if the build didn't require libcuda.so.1? I think this is currently the case because we don't pass -lcuda to builds that depend on .so libraries that have been built with -lcuda, in which case the linker falls back to trying to find the library via the SONAME in the original linked libcuda.so, which is libcuda.so.1."}