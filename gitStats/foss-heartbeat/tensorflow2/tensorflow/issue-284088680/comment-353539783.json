{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/353539783", "html_url": "https://github.com/tensorflow/tensorflow/issues/15575#issuecomment-353539783", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15575", "id": 353539783, "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzUzOTc4Mw==", "user": {"login": "facaiy", "id": 1112263, "node_id": "MDQ6VXNlcjExMTIyNjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1112263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facaiy", "html_url": "https://github.com/facaiy", "followers_url": "https://api.github.com/users/facaiy/followers", "following_url": "https://api.github.com/users/facaiy/following{/other_user}", "gists_url": "https://api.github.com/users/facaiy/gists{/gist_id}", "starred_url": "https://api.github.com/users/facaiy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facaiy/subscriptions", "organizations_url": "https://api.github.com/users/facaiy/orgs", "repos_url": "https://api.github.com/users/facaiy/repos", "events_url": "https://api.github.com/users/facaiy/events{/privacy}", "received_events_url": "https://api.github.com/users/facaiy/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-22T07:31:38Z", "updated_at": "2017-12-22T07:35:38Z", "author_association": "MEMBER", "body_html": "<p>The behavior is what we expect, not a bug. To understand it, you have to figure out two conceptions: <code>tf.name_scoep</code> and <code>tf.variable_scope</code>.</p>\n<p>These posts below perhaps are useful for you:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/35919020/whats-the-difference-of-name-scope-and-a-variable-scope-in-tensorflow\" rel=\"nofollow\">What's the difference of name scope and a variable scope in tensorflow?</a></li>\n<li><a href=\"https://www.tensorflow.org/versions/r0.12/how_tos/variable_scope/\" rel=\"nofollow\"> Sharing Variables </a></li>\n<li><a href=\"https://www.tensorflow.org/get_started/graph_viz\" rel=\"nofollow\"> TensorBoard: Graph Visualization </a></li>\n</ul>\n<p>If you want to reenter a variable scope, use</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">with</span> tf.variable_scope(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>test<span class=\"pl-pds\">'</span></span>) <span class=\"pl-k\">as</span> scope:\n    v1 <span class=\"pl-k\">=</span> tf.placeholder(tf.float32, <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">10</span>,<span class=\"pl-c1\">10</span>), <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>v1<span class=\"pl-pds\">'</span></span>)\n    w1 <span class=\"pl-k\">=</span> tf.get_variable(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>w1<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">2</span>))\n\n<span class=\"pl-k\">with</span> tf.variable_scope(scope) <span class=\"pl-k\">as</span> scope2:\n    <span class=\"pl-k\">with</span> tf.name_scope(scope2.original_name_scope):\n         v2 <span class=\"pl-k\">=</span> tf.placeholder(tf.float32, <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">5</span>, <span class=\"pl-c1\">5</span>), <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>v2<span class=\"pl-pds\">'</span></span>)\n         w2 <span class=\"pl-k\">=</span> tf.get_variable(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>w2<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">3</span>))</pre></div>", "body_text": "The behavior is what we expect, not a bug. To understand it, you have to figure out two conceptions: tf.name_scoep and tf.variable_scope.\nThese posts below perhaps are useful for you:\n\nWhat's the difference of name scope and a variable scope in tensorflow?\n Sharing Variables \n TensorBoard: Graph Visualization \n\nIf you want to reenter a variable scope, use\nwith tf.variable_scope('test') as scope:\n    v1 = tf.placeholder(tf.float32, shape=(10,10), name='v1')\n    w1 = tf.get_variable('w1', shape=(2,2))\n\nwith tf.variable_scope(scope) as scope2:\n    with tf.name_scope(scope2.original_name_scope):\n         v2 = tf.placeholder(tf.float32, shape=(5, 5), name='v2')\n         w2 = tf.get_variable('w2', shape=(3, 3))", "body": "The behavior is what we expect, not a bug. To understand it, you have to figure out two conceptions: `tf.name_scoep` and `tf.variable_scope`.\r\n\r\nThese posts below perhaps are useful for you:\r\n+ [What's the difference of name scope and a variable scope in tensorflow?](https://stackoverflow.com/questions/35919020/whats-the-difference-of-name-scope-and-a-variable-scope-in-tensorflow)\r\n+ [ Sharing Variables ](https://www.tensorflow.org/versions/r0.12/how_tos/variable_scope/)\r\n+ [ TensorBoard: Graph Visualization ](https://www.tensorflow.org/get_started/graph_viz)\r\n\r\nIf you want to reenter a variable scope, use \r\n```python\r\nwith tf.variable_scope('test') as scope:\r\n    v1 = tf.placeholder(tf.float32, shape=(10,10), name='v1')\r\n    w1 = tf.get_variable('w1', shape=(2,2))\r\n\r\nwith tf.variable_scope(scope) as scope2:\r\n    with tf.name_scope(scope2.original_name_scope):\r\n         v2 = tf.placeholder(tf.float32, shape=(5, 5), name='v2')\r\n         w2 = tf.get_variable('w2', shape=(3, 3))\r\n```"}