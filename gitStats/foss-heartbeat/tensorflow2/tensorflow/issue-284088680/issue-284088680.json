{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15575", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15575/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15575/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15575/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15575", "id": 284088680, "node_id": "MDU6SXNzdWUyODQwODg2ODA=", "number": 15575, "title": "TensorFlow automatically modify variable scope name", "user": {"login": "FesianXu", "id": 12878858, "node_id": "MDQ6VXNlcjEyODc4ODU4", "avatar_url": "https://avatars3.githubusercontent.com/u/12878858?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FesianXu", "html_url": "https://github.com/FesianXu", "followers_url": "https://api.github.com/users/FesianXu/followers", "following_url": "https://api.github.com/users/FesianXu/following{/other_user}", "gists_url": "https://api.github.com/users/FesianXu/gists{/gist_id}", "starred_url": "https://api.github.com/users/FesianXu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FesianXu/subscriptions", "organizations_url": "https://api.github.com/users/FesianXu/orgs", "repos_url": "https://api.github.com/users/FesianXu/repos", "events_url": "https://api.github.com/users/FesianXu/events{/privacy}", "received_events_url": "https://api.github.com/users/FesianXu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-22T07:08:33Z", "updated_at": "2018-07-03T23:03:50Z", "closed_at": "2017-12-22T07:39:35Z", "author_association": "NONE", "body_html": "<p>check the following code:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">with</span> tf.variable_scope(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>test<span class=\"pl-pds\">'</span></span>):\n      v1 <span class=\"pl-k\">=</span> tf.placeholder(tf.float32, <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">10</span>,<span class=\"pl-c1\">10</span>), <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>v1<span class=\"pl-pds\">'</span></span>)\n\n<span class=\"pl-k\">with</span> tf.variable_scope(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>test<span class=\"pl-pds\">'</span></span>):\n      v2 <span class=\"pl-k\">=</span> tf.placeholder(tf.float32, <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">5</span>, <span class=\"pl-c1\">5</span>), <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>v2<span class=\"pl-pds\">'</span></span>)\n\n<span class=\"pl-c1\">print</span>(v1)\n<span class=\"pl-c1\">print</span>(v2)</pre></div>\n<p>the code output:</p>\n<div class=\"highlight highlight-source-python\"><pre>Tensor(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>test/v1:0<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">10</span>), <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>float32)\nTensor(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>test_1/v2:0<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">5</span>, <span class=\"pl-c1\">5</span>), <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>float32)</pre></div>\n<p>It looks ridiculous for TF modfiy variable scope name 'test' into 'test_1' while my new placeholder named 'v2' is different from 'v1'. However, if i add variables, everything is going to be normal. code like:</p>\n<div class=\"highlight highlight-source-python\"><pre>    <span class=\"pl-k\">with</span> tf.variable_scope(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>test<span class=\"pl-pds\">'</span></span>):\n        v1 <span class=\"pl-k\">=</span> tf.placeholder(tf.float32, <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">10</span>,<span class=\"pl-c1\">10</span>), <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>v1<span class=\"pl-pds\">'</span></span>)\n        w1 <span class=\"pl-k\">=</span> tf.get_variable(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>w1<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">2</span>))\n\n    <span class=\"pl-k\">with</span> tf.variable_scope(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>test<span class=\"pl-pds\">'</span></span>):\n        v2 <span class=\"pl-k\">=</span> tf.placeholder(tf.float32, <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">5</span>, <span class=\"pl-c1\">5</span>), <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>v2<span class=\"pl-pds\">'</span></span>)\n        w2 <span class=\"pl-k\">=</span> tf.get_variable(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>w2<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">3</span>))\n    <span class=\"pl-c1\">print</span>(v1)\n    <span class=\"pl-c1\">print</span>(v2)\n    <span class=\"pl-c1\">print</span>(w1)\n    <span class=\"pl-c1\">print</span>(w2)</pre></div>\n<p>outputs:</p>\n<div class=\"highlight highlight-source-python\"><pre>Tensor(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>test/v1:0<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">10</span>), <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>float32)\nTensor(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>test_1/v2:0<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">5</span>, <span class=\"pl-c1\">5</span>), <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>float32)\n<span class=\"pl-k\">&lt;</span>tf.Variable <span class=\"pl-s\"><span class=\"pl-pds\">'</span>test/w1:0<span class=\"pl-pds\">'</span></span> shape<span class=\"pl-k\">=</span>(<span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">2</span>) dtype<span class=\"pl-k\">=</span>float32_ref<span class=\"pl-k\">&gt;</span>\n<span class=\"pl-k\">&lt;</span>tf.Variable <span class=\"pl-s\"><span class=\"pl-pds\">'</span>test/w2:0<span class=\"pl-pds\">'</span></span> shape<span class=\"pl-k\">=</span>(<span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">3</span>) dtype<span class=\"pl-k\">=</span>float32_ref<span class=\"pl-k\">&gt;</span></pre></div>\n<p>I dont know why TF <strong>just modify the variable scope name</strong> while i try to add a new placeholder into the existed scope.Is it a BUG?</p>", "body_text": "check the following code:\nwith tf.variable_scope('test'):\n      v1 = tf.placeholder(tf.float32, shape=(10,10), name='v1')\n\nwith tf.variable_scope('test'):\n      v2 = tf.placeholder(tf.float32, shape=(5, 5), name='v2')\n\nprint(v1)\nprint(v2)\nthe code output:\nTensor(\"test/v1:0\", shape=(10, 10), dtype=float32)\nTensor(\"test_1/v2:0\", shape=(5, 5), dtype=float32)\nIt looks ridiculous for TF modfiy variable scope name 'test' into 'test_1' while my new placeholder named 'v2' is different from 'v1'. However, if i add variables, everything is going to be normal. code like:\n    with tf.variable_scope('test'):\n        v1 = tf.placeholder(tf.float32, shape=(10,10), name='v1')\n        w1 = tf.get_variable('w1', shape=(2,2))\n\n    with tf.variable_scope('test'):\n        v2 = tf.placeholder(tf.float32, shape=(5, 5), name='v2')\n        w2 = tf.get_variable('w2', shape=(3, 3))\n    print(v1)\n    print(v2)\n    print(w1)\n    print(w2)\noutputs:\nTensor(\"test/v1:0\", shape=(10, 10), dtype=float32)\nTensor(\"test_1/v2:0\", shape=(5, 5), dtype=float32)\n<tf.Variable 'test/w1:0' shape=(2, 2) dtype=float32_ref>\n<tf.Variable 'test/w2:0' shape=(3, 3) dtype=float32_ref>\nI dont know why TF just modify the variable scope name while i try to add a new placeholder into the existed scope.Is it a BUG?", "body": "check the following code:\r\n\r\n```python\r\nwith tf.variable_scope('test'):\r\n      v1 = tf.placeholder(tf.float32, shape=(10,10), name='v1')\r\n\r\nwith tf.variable_scope('test'):\r\n      v2 = tf.placeholder(tf.float32, shape=(5, 5), name='v2')\r\n\r\nprint(v1)\r\nprint(v2)\r\n```\r\n\r\n\r\nthe code output:\r\n\r\n ```python\r\nTensor(\"test/v1:0\", shape=(10, 10), dtype=float32)\r\nTensor(\"test_1/v2:0\", shape=(5, 5), dtype=float32)\r\n```\r\n\r\nIt looks ridiculous for TF modfiy variable scope name 'test' into 'test_1' while my new placeholder named 'v2' is different from 'v1'. However, if i add variables, everything is going to be normal. code like:\r\n\r\n```python\r\n    with tf.variable_scope('test'):\r\n        v1 = tf.placeholder(tf.float32, shape=(10,10), name='v1')\r\n        w1 = tf.get_variable('w1', shape=(2,2))\r\n\r\n    with tf.variable_scope('test'):\r\n        v2 = tf.placeholder(tf.float32, shape=(5, 5), name='v2')\r\n        w2 = tf.get_variable('w2', shape=(3, 3))\r\n    print(v1)\r\n    print(v2)\r\n    print(w1)\r\n    print(w2)\r\n```\r\noutputs:\r\n```python\r\nTensor(\"test/v1:0\", shape=(10, 10), dtype=float32)\r\nTensor(\"test_1/v2:0\", shape=(5, 5), dtype=float32)\r\n<tf.Variable 'test/w1:0' shape=(2, 2) dtype=float32_ref>\r\n<tf.Variable 'test/w2:0' shape=(3, 3) dtype=float32_ref>\r\n```\r\n\r\nI dont know why TF **just modify the variable scope name** while i try to add a new placeholder into the existed scope.Is it a BUG?\r\n"}