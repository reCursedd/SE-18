{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13741", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13741/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13741/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13741/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/13741", "id": 265666783, "node_id": "MDU6SXNzdWUyNjU2NjY3ODM=", "number": 13741, "title": "Decoding and resizing image is giving unknown tensor shape", "user": {"login": "amareshteja", "id": 14922423, "node_id": "MDQ6VXNlcjE0OTIyNDIz", "avatar_url": "https://avatars0.githubusercontent.com/u/14922423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amareshteja", "html_url": "https://github.com/amareshteja", "followers_url": "https://api.github.com/users/amareshteja/followers", "following_url": "https://api.github.com/users/amareshteja/following{/other_user}", "gists_url": "https://api.github.com/users/amareshteja/gists{/gist_id}", "starred_url": "https://api.github.com/users/amareshteja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amareshteja/subscriptions", "organizations_url": "https://api.github.com/users/amareshteja/orgs", "repos_url": "https://api.github.com/users/amareshteja/repos", "events_url": "https://api.github.com/users/amareshteja/events{/privacy}", "received_events_url": "https://api.github.com/users/amareshteja/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-16T07:09:35Z", "updated_at": "2017-10-16T18:55:02Z", "closed_at": "2017-10-16T18:55:01Z", "author_association": "NONE", "body_html": "<p>I'm trying to load two images, one is .png and another is .jpg, to tensorflow and resize them to 100x100 pixel size using <code>tf.image.pad_to_bounding_box</code>, so that they will be of same size and can be used for training. Here's my code:</p>\n<pre><code>import os\nimport tensorflow as tf\n\ndef decode(image_data):\n    return tf.image.decode_image(image_data, channels=3)\n\ndef adjust_paddig(image_tensor):\n    return tf.image.pad_to_bounding_box(image_tensor, offset_height=0, offset_width=0, target_height=100, target_width=100)\n\ndef load(images_paths):\n    filename_queue = tf.train.string_input_producer(images_paths)\n    reader = tf.WholeFileReader()\n    _, image_file = reader.read(filename_queue)\n    image_tensor = decode(image_file)\n    padded_image_tensor = adjust_paddig(image_tensor)\n    return padded_image_tensor\n\nif __name__ == '__main__':\n    IMAGES_PATH = [\"images/1.png\",\"images/2.jpg\"] # Both image are of different shape\n    class_images_tensor = load(IMAGES_PATH)\n    print(class_images_tensor.shape)\n</code></pre>\n<p>But some how the resized image size is not proper. It's displaying height and width but not depth(I mean channels).</p>\n<p><code>Output: (100,100,?) #height, width are 100, but depth is '?'</code></p>\n<p>and Surprisingly, It's giving same output for invalid paths also.</p>\n<p><code>Eg: IMAGES_PATH = ['images/']  </code></p>\n<p>What Am I doing wrong? Please help.</p>", "body_text": "I'm trying to load two images, one is .png and another is .jpg, to tensorflow and resize them to 100x100 pixel size using tf.image.pad_to_bounding_box, so that they will be of same size and can be used for training. Here's my code:\nimport os\nimport tensorflow as tf\n\ndef decode(image_data):\n    return tf.image.decode_image(image_data, channels=3)\n\ndef adjust_paddig(image_tensor):\n    return tf.image.pad_to_bounding_box(image_tensor, offset_height=0, offset_width=0, target_height=100, target_width=100)\n\ndef load(images_paths):\n    filename_queue = tf.train.string_input_producer(images_paths)\n    reader = tf.WholeFileReader()\n    _, image_file = reader.read(filename_queue)\n    image_tensor = decode(image_file)\n    padded_image_tensor = adjust_paddig(image_tensor)\n    return padded_image_tensor\n\nif __name__ == '__main__':\n    IMAGES_PATH = [\"images/1.png\",\"images/2.jpg\"] # Both image are of different shape\n    class_images_tensor = load(IMAGES_PATH)\n    print(class_images_tensor.shape)\n\nBut some how the resized image size is not proper. It's displaying height and width but not depth(I mean channels).\nOutput: (100,100,?) #height, width are 100, but depth is '?'\nand Surprisingly, It's giving same output for invalid paths also.\nEg: IMAGES_PATH = ['images/']  \nWhat Am I doing wrong? Please help.", "body": "I'm trying to load two images, one is .png and another is .jpg, to tensorflow and resize them to 100x100 pixel size using `tf.image.pad_to_bounding_box`, so that they will be of same size and can be used for training. Here's my code:\r\n\r\n```\r\nimport os\r\nimport tensorflow as tf\r\n\r\ndef decode(image_data):\r\n    return tf.image.decode_image(image_data, channels=3)\r\n\r\ndef adjust_paddig(image_tensor):\r\n    return tf.image.pad_to_bounding_box(image_tensor, offset_height=0, offset_width=0, target_height=100, target_width=100)\r\n\r\ndef load(images_paths):\r\n    filename_queue = tf.train.string_input_producer(images_paths)\r\n    reader = tf.WholeFileReader()\r\n    _, image_file = reader.read(filename_queue)\r\n    image_tensor = decode(image_file)\r\n    padded_image_tensor = adjust_paddig(image_tensor)\r\n    return padded_image_tensor\r\n\r\nif __name__ == '__main__':\r\n    IMAGES_PATH = [\"images/1.png\",\"images/2.jpg\"] # Both image are of different shape\r\n    class_images_tensor = load(IMAGES_PATH)\r\n    print(class_images_tensor.shape)\r\n```\r\n\r\nBut some how the resized image size is not proper. It's displaying height and width but not depth(I mean channels).\r\n\r\n`Output: (100,100,?) #height, width are 100, but depth is '?'`\r\n\r\nand Surprisingly, It's giving same output for invalid paths also.\r\n\r\n`Eg: IMAGES_PATH = ['images/']  `\r\n\r\nWhat Am I doing wrong? Please help."}