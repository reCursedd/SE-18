{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/366532323", "html_url": "https://github.com/tensorflow/tensorflow/issues/17002#issuecomment-366532323", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17002", "id": 366532323, "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjUzMjMyMw==", "user": {"login": "ccolby", "id": 15960281, "node_id": "MDQ6VXNlcjE1OTYwMjgx", "avatar_url": "https://avatars1.githubusercontent.com/u/15960281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ccolby", "html_url": "https://github.com/ccolby", "followers_url": "https://api.github.com/users/ccolby/followers", "following_url": "https://api.github.com/users/ccolby/following{/other_user}", "gists_url": "https://api.github.com/users/ccolby/gists{/gist_id}", "starred_url": "https://api.github.com/users/ccolby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ccolby/subscriptions", "organizations_url": "https://api.github.com/users/ccolby/orgs", "repos_url": "https://api.github.com/users/ccolby/repos", "events_url": "https://api.github.com/users/ccolby/events{/privacy}", "received_events_url": "https://api.github.com/users/ccolby/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-18T17:32:55Z", "updated_at": "2018-02-18T17:32:55Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13407698\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/sandeepkumar8713\">@sandeepkumar8713</a> That is correct, but you don't need to do anything special to save the checkpoints. The <code>KMeansClustering.train</code> method will save the checkpoint for you. For example, the first code snippet that I posted above will work identically if you replace:</p>\n<pre><code>centers = kmeans.cluster_centers()\n</code></pre>\n<p>with</p>\n<pre><code>centers = tf.train.load_variable(kmeans.model_dir, 'clusters')\n</code></pre>\n<p>Please note that the variable name <code>'clusters'</code> should be considered an internal implementation detail that could change in future releases. Ideally, <code>tf.contrib.factorization</code> would include a public interface that hides that detail. But for now, this should work.</p>\n<p>I'll clean up the working example in this thread and add it to the <code>KMeansClustering</code> documentation.</p>\n<p>I believe exposing the cluster centers in the SavedModel would require a minor redesign of the <code>KMeansClustering</code> Estimator.</p>", "body_text": "@sandeepkumar8713 That is correct, but you don't need to do anything special to save the checkpoints. The KMeansClustering.train method will save the checkpoint for you. For example, the first code snippet that I posted above will work identically if you replace:\ncenters = kmeans.cluster_centers()\n\nwith\ncenters = tf.train.load_variable(kmeans.model_dir, 'clusters')\n\nPlease note that the variable name 'clusters' should be considered an internal implementation detail that could change in future releases. Ideally, tf.contrib.factorization would include a public interface that hides that detail. But for now, this should work.\nI'll clean up the working example in this thread and add it to the KMeansClustering documentation.\nI believe exposing the cluster centers in the SavedModel would require a minor redesign of the KMeansClustering Estimator.", "body": "@sandeepkumar8713 That is correct, but you don't need to do anything special to save the checkpoints. The `KMeansClustering.train` method will save the checkpoint for you. For example, the first code snippet that I posted above will work identically if you replace:\r\n```\r\ncenters = kmeans.cluster_centers()\r\n```\r\nwith\r\n```\r\ncenters = tf.train.load_variable(kmeans.model_dir, 'clusters')\r\n```\r\nPlease note that the variable name `'clusters'` should be considered an internal implementation detail that could change in future releases. Ideally, `tf.contrib.factorization` would include a public interface that hides that detail. But for now, this should work.\r\n\r\nI'll clean up the working example in this thread and add it to the `KMeansClustering` documentation.\r\n\r\nI believe exposing the cluster centers in the SavedModel would require a minor redesign of the `KMeansClustering` Estimator."}