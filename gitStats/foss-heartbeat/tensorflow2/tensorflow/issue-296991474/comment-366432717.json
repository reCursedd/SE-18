{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/366432717", "html_url": "https://github.com/tensorflow/tensorflow/issues/17002#issuecomment-366432717", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17002", "id": 366432717, "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjQzMjcxNw==", "user": {"login": "sandeepkumar8713", "id": 13407698, "node_id": "MDQ6VXNlcjEzNDA3Njk4", "avatar_url": "https://avatars2.githubusercontent.com/u/13407698?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sandeepkumar8713", "html_url": "https://github.com/sandeepkumar8713", "followers_url": "https://api.github.com/users/sandeepkumar8713/followers", "following_url": "https://api.github.com/users/sandeepkumar8713/following{/other_user}", "gists_url": "https://api.github.com/users/sandeepkumar8713/gists{/gist_id}", "starred_url": "https://api.github.com/users/sandeepkumar8713/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sandeepkumar8713/subscriptions", "organizations_url": "https://api.github.com/users/sandeepkumar8713/orgs", "repos_url": "https://api.github.com/users/sandeepkumar8713/repos", "events_url": "https://api.github.com/users/sandeepkumar8713/events{/privacy}", "received_events_url": "https://api.github.com/users/sandeepkumar8713/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-17T10:42:55Z", "updated_at": "2018-02-17T10:42:55Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=15960281\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ccolby\">@ccolby</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=29663194\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/cy89\">@cy89</a> Thank you for the suggestion. I upgraded my tensorflow to r1.6 version and the above code is working now.</p>\n<p>Can you please suggest a way to import <code>cluster_centers()</code> of <code>tf.contrib.factorization.KMeansClustering</code> from the above saved model.</p>\n<h3>Source Code</h3>\n<pre><code>def restore(export_dir):\n    sess = tf.Session()\n    tf.saved_model.loader.load(sess, [tf.saved_model.tag_constants.SERVING], export_dir)\n    from tensorflow.contrib import predictor\n\n    predict_fn = predictor.from_saved_model(export_dir)\n    dataList = np.random.uniform(0, 1, [10, 2])\n\n    inputList=[]\n    for test_data in dataList:\n        predictor_input_feature = {\n            'x': tf.train.Feature(\n                float_list=tf.train.FloatList(\n                    value=test_data\n                )\n            )\n        }\n\n        input_for_predictor = tf.train.Example(\n            features=tf.train.Features(\n                feature=predictor_input_feature\n            )\n        )\n\n        serialized_input = input_for_predictor.SerializeToString()\n        inputList.append(serialized_input)\n\n    results = predict_fn({\"model_inputs\": inputList})\n    clusterIndices = results['output']\n\n    for i, point in enumerate(dataList):\n       clusterIndex = clusterIndices[i]\n       print 'point:', point, 'is in cluster', clusterIndex\n       #print 'point:', point, 'is in cluster', clusterIndex, 'centered at', centers[clusterIndex]\n\n</code></pre>\n<p>I would like to execute the last commented line.</p>", "body_text": "@ccolby @cy89 Thank you for the suggestion. I upgraded my tensorflow to r1.6 version and the above code is working now.\nCan you please suggest a way to import cluster_centers() of tf.contrib.factorization.KMeansClustering from the above saved model.\nSource Code\ndef restore(export_dir):\n    sess = tf.Session()\n    tf.saved_model.loader.load(sess, [tf.saved_model.tag_constants.SERVING], export_dir)\n    from tensorflow.contrib import predictor\n\n    predict_fn = predictor.from_saved_model(export_dir)\n    dataList = np.random.uniform(0, 1, [10, 2])\n\n    inputList=[]\n    for test_data in dataList:\n        predictor_input_feature = {\n            'x': tf.train.Feature(\n                float_list=tf.train.FloatList(\n                    value=test_data\n                )\n            )\n        }\n\n        input_for_predictor = tf.train.Example(\n            features=tf.train.Features(\n                feature=predictor_input_feature\n            )\n        )\n\n        serialized_input = input_for_predictor.SerializeToString()\n        inputList.append(serialized_input)\n\n    results = predict_fn({\"model_inputs\": inputList})\n    clusterIndices = results['output']\n\n    for i, point in enumerate(dataList):\n       clusterIndex = clusterIndices[i]\n       print 'point:', point, 'is in cluster', clusterIndex\n       #print 'point:', point, 'is in cluster', clusterIndex, 'centered at', centers[clusterIndex]\n\n\nI would like to execute the last commented line.", "body": "@ccolby @cy89 Thank you for the suggestion. I upgraded my tensorflow to r1.6 version and the above code is working now.\r\n\r\nCan you please suggest a way to import `cluster_centers()` of `tf.contrib.factorization.KMeansClustering` from the above saved model.\r\n \r\n### Source Code\r\n\r\n```\r\ndef restore(export_dir):\r\n    sess = tf.Session()\r\n    tf.saved_model.loader.load(sess, [tf.saved_model.tag_constants.SERVING], export_dir)\r\n    from tensorflow.contrib import predictor\r\n\r\n    predict_fn = predictor.from_saved_model(export_dir)\r\n    dataList = np.random.uniform(0, 1, [10, 2])\r\n\r\n    inputList=[]\r\n    for test_data in dataList:\r\n        predictor_input_feature = {\r\n            'x': tf.train.Feature(\r\n                float_list=tf.train.FloatList(\r\n                    value=test_data\r\n                )\r\n            )\r\n        }\r\n\r\n        input_for_predictor = tf.train.Example(\r\n            features=tf.train.Features(\r\n                feature=predictor_input_feature\r\n            )\r\n        )\r\n\r\n        serialized_input = input_for_predictor.SerializeToString()\r\n        inputList.append(serialized_input)\r\n\r\n    results = predict_fn({\"model_inputs\": inputList})\r\n    clusterIndices = results['output']\r\n\r\n    for i, point in enumerate(dataList):\r\n       clusterIndex = clusterIndices[i]\r\n       print 'point:', point, 'is in cluster', clusterIndex\r\n       #print 'point:', point, 'is in cluster', clusterIndex, 'centered at', centers[clusterIndex]\r\n\r\n```\r\nI would like to execute the last commented line."}