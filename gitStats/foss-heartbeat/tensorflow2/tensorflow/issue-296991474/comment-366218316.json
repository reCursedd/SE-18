{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/366218316", "html_url": "https://github.com/tensorflow/tensorflow/issues/17002#issuecomment-366218316", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17002", "id": 366218316, "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjIxODMxNg==", "user": {"login": "sandeepkumar8713", "id": 13407698, "node_id": "MDQ6VXNlcjEzNDA3Njk4", "avatar_url": "https://avatars2.githubusercontent.com/u/13407698?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sandeepkumar8713", "html_url": "https://github.com/sandeepkumar8713", "followers_url": "https://api.github.com/users/sandeepkumar8713/followers", "following_url": "https://api.github.com/users/sandeepkumar8713/following{/other_user}", "gists_url": "https://api.github.com/users/sandeepkumar8713/gists{/gist_id}", "starred_url": "https://api.github.com/users/sandeepkumar8713/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sandeepkumar8713/subscriptions", "organizations_url": "https://api.github.com/users/sandeepkumar8713/orgs", "repos_url": "https://api.github.com/users/sandeepkumar8713/repos", "events_url": "https://api.github.com/users/sandeepkumar8713/events{/privacy}", "received_events_url": "https://api.github.com/users/sandeepkumar8713/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-16T12:03:11Z", "updated_at": "2018-02-16T18:39:53Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>OS Platform and Distribution</strong>: Open SUSE Leap 42.3</li>\n<li><strong>TensorFlow installed from</strong>: python pip</li>\n<li><strong>TensorFlow version</strong>: 1.5.0</li>\n<li><strong>Python version</strong>: 2.7</li>\n</ul>\n<h3>Problem Description</h3>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=15960281\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ccolby\">@ccolby</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=29663194\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/cy89\">@cy89</a> Thank you very for explaining with code. Now I am facing a different problem while trying to save the above trained model. Can you please help me with that.</p>\n<h3>Source code</h3>\n<pre><code>def serving_input_receiver_fn():\n    feature_spec = {\"x\": tf.FixedLenFeature(dtype=tf.float32, shape=[2])}\n    model_placeholder = tf.placeholder(dtype=tf.string,shape=[None],name='input')\n    receiver_tensors = {\"model_inputs\": model_placeholder}\n    features = tf.parse_example(model_placeholder, feature_spec)\n    return tf.estimator.export.ServingInputReceiver(features, receiver_tensors)\n\ndef trainAndSaveModel():\n    k = 5\n    n = 1000\n    variables = 2\n\n    points = np.random.uniform(0, 1, [n, variables])\n    input_fn = lambda: tf.train.limit_epochs(tf.convert_to_tensor(points, dtype=tf.float32), num_epochs=1)\n    kmeans = tf.contrib.factorization.KMeansClustering(num_clusters=k, use_mini_batch=False)\n    previous_centers = None\n    for _ in xrange(10):\n        kmeans.train(input_fn)\n        centers = kmeans.cluster_centers()\n        if previous_centers is not None:\n          print 'delta:', centers - previous_centers\n        previous_centers = centers\n        print 'score:', kmeans.score(input_fn)\n\n    modelPath = kmeans.export_savedmodel(export_dir_base=\"/path/\",serving_input_receiver_fn=serving_input_receiver_fn)\n    return modelPath\n</code></pre>\n<h3>Logs</h3>\n<p><code>ValueError: export_outputs must be a dict and not&lt;type 'NoneType'&gt;</code></p>\n<p>I am getting this error while calling <strong>serving_input_receiver_fn()</strong> function. Same function is working for <strong>tf.estimator.DNNClassifier</strong> but not for <strong>tf.contrib.factorization.KMeansClustering</strong>.</p>", "body_text": "System information\n\nOS Platform and Distribution: Open SUSE Leap 42.3\nTensorFlow installed from: python pip\nTensorFlow version: 1.5.0\nPython version: 2.7\n\nProblem Description\n@ccolby @cy89 Thank you very for explaining with code. Now I am facing a different problem while trying to save the above trained model. Can you please help me with that.\nSource code\ndef serving_input_receiver_fn():\n    feature_spec = {\"x\": tf.FixedLenFeature(dtype=tf.float32, shape=[2])}\n    model_placeholder = tf.placeholder(dtype=tf.string,shape=[None],name='input')\n    receiver_tensors = {\"model_inputs\": model_placeholder}\n    features = tf.parse_example(model_placeholder, feature_spec)\n    return tf.estimator.export.ServingInputReceiver(features, receiver_tensors)\n\ndef trainAndSaveModel():\n    k = 5\n    n = 1000\n    variables = 2\n\n    points = np.random.uniform(0, 1, [n, variables])\n    input_fn = lambda: tf.train.limit_epochs(tf.convert_to_tensor(points, dtype=tf.float32), num_epochs=1)\n    kmeans = tf.contrib.factorization.KMeansClustering(num_clusters=k, use_mini_batch=False)\n    previous_centers = None\n    for _ in xrange(10):\n        kmeans.train(input_fn)\n        centers = kmeans.cluster_centers()\n        if previous_centers is not None:\n          print 'delta:', centers - previous_centers\n        previous_centers = centers\n        print 'score:', kmeans.score(input_fn)\n\n    modelPath = kmeans.export_savedmodel(export_dir_base=\"/path/\",serving_input_receiver_fn=serving_input_receiver_fn)\n    return modelPath\n\nLogs\nValueError: export_outputs must be a dict and not<type 'NoneType'>\nI am getting this error while calling serving_input_receiver_fn() function. Same function is working for tf.estimator.DNNClassifier but not for tf.contrib.factorization.KMeansClustering.", "body": "### System information\r\n- **OS Platform and Distribution**: Open SUSE Leap 42.3\r\n- **TensorFlow installed from**: python pip\r\n- **TensorFlow version**: 1.5.0\r\n- **Python version**: 2.7\r\n\r\n### Problem Description\r\n@ccolby @cy89 Thank you very for explaining with code. Now I am facing a different problem while trying to save the above trained model. Can you please help me with that.\r\n\r\n### Source code \r\n```\r\ndef serving_input_receiver_fn():\r\n    feature_spec = {\"x\": tf.FixedLenFeature(dtype=tf.float32, shape=[2])}\r\n    model_placeholder = tf.placeholder(dtype=tf.string,shape=[None],name='input')\r\n    receiver_tensors = {\"model_inputs\": model_placeholder}\r\n    features = tf.parse_example(model_placeholder, feature_spec)\r\n    return tf.estimator.export.ServingInputReceiver(features, receiver_tensors)\r\n\r\ndef trainAndSaveModel():\r\n    k = 5\r\n    n = 1000\r\n    variables = 2\r\n\r\n    points = np.random.uniform(0, 1, [n, variables])\r\n    input_fn = lambda: tf.train.limit_epochs(tf.convert_to_tensor(points, dtype=tf.float32), num_epochs=1)\r\n    kmeans = tf.contrib.factorization.KMeansClustering(num_clusters=k, use_mini_batch=False)\r\n    previous_centers = None\r\n    for _ in xrange(10):\r\n        kmeans.train(input_fn)\r\n        centers = kmeans.cluster_centers()\r\n        if previous_centers is not None:\r\n          print 'delta:', centers - previous_centers\r\n        previous_centers = centers\r\n        print 'score:', kmeans.score(input_fn)\r\n\r\n    modelPath = kmeans.export_savedmodel(export_dir_base=\"/path/\",serving_input_receiver_fn=serving_input_receiver_fn)\r\n    return modelPath\r\n```\r\n### Logs\r\n`ValueError: export_outputs must be a dict and not<type 'NoneType'>`\r\n\r\nI am getting this error while calling **serving_input_receiver_fn()** function. Same function is working for **tf.estimator.DNNClassifier** but not for **tf.contrib.factorization.KMeansClustering**.\r\n"}