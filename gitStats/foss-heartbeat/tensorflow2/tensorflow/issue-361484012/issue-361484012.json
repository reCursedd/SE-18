{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22359", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22359/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22359/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22359/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/22359", "id": 361484012, "node_id": "MDU6SXNzdWUzNjE0ODQwMTI=", "number": 22359, "title": "Bazel Build all_protos proto_library Support", "user": {"login": "zanes2016", "id": 22779446, "node_id": "MDQ6VXNlcjIyNzc5NDQ2", "avatar_url": "https://avatars0.githubusercontent.com/u/22779446?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zanes2016", "html_url": "https://github.com/zanes2016", "followers_url": "https://api.github.com/users/zanes2016/followers", "following_url": "https://api.github.com/users/zanes2016/following{/other_user}", "gists_url": "https://api.github.com/users/zanes2016/gists{/gist_id}", "starred_url": "https://api.github.com/users/zanes2016/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zanes2016/subscriptions", "organizations_url": "https://api.github.com/users/zanes2016/orgs", "repos_url": "https://api.github.com/users/zanes2016/repos", "events_url": "https://api.github.com/users/zanes2016/events{/privacy}", "received_events_url": "https://api.github.com/users/zanes2016/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "yongtang", "id": 6932348, "node_id": "MDQ6VXNlcjY5MzIzNDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/6932348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yongtang", "html_url": "https://github.com/yongtang", "followers_url": "https://api.github.com/users/yongtang/followers", "following_url": "https://api.github.com/users/yongtang/following{/other_user}", "gists_url": "https://api.github.com/users/yongtang/gists{/gist_id}", "starred_url": "https://api.github.com/users/yongtang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yongtang/subscriptions", "organizations_url": "https://api.github.com/users/yongtang/orgs", "repos_url": "https://api.github.com/users/yongtang/repos", "events_url": "https://api.github.com/users/yongtang/events{/privacy}", "received_events_url": "https://api.github.com/users/yongtang/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "yongtang", "id": 6932348, "node_id": "MDQ6VXNlcjY5MzIzNDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/6932348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yongtang", "html_url": "https://github.com/yongtang", "followers_url": "https://api.github.com/users/yongtang/followers", "following_url": "https://api.github.com/users/yongtang/following{/other_user}", "gists_url": "https://api.github.com/users/yongtang/gists{/gist_id}", "starred_url": "https://api.github.com/users/yongtang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yongtang/subscriptions", "organizations_url": "https://api.github.com/users/yongtang/orgs", "repos_url": "https://api.github.com/users/yongtang/repos", "events_url": "https://api.github.com/users/yongtang/events{/privacy}", "received_events_url": "https://api.github.com/users/yongtang/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-09-18T21:06:12Z", "updated_at": "2018-11-23T18:39:55Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>I would like to build a <code>proto_library</code> for all the protobuf files in (core) tensorflow.</p>\n<p>Specifically, I need to build the GraphDef protobuf message (and later target it for Golang) and include it in a custom proto definition. However, it seems only cc and py are visible/supported. It does not seem like the general <code>proto_library</code> is exposed by the tensorflow repo. Is there a simple way to do this? Ideally there would be a <code>proto_library</code> definition that is available in the <a href=\"https://github.com/tensorflow/tensorflow/blob/89e172f6ae5a52f8ceca6b4690331e1dce89d456/tensorflow/core/BUILD\">core/BUILD file</a>.</p>\n<p>When I try to execute \"tf_additional_all_protos\" after successfully loading it from build_config.bzl, I get an error saying <code>no such package 'tensorflow/core'</code>.</p>\n<p>Any suggestions?</p>\n<p>Have I written custom code</p>\n<h3>Bazel Build</h3>\n<pre><code># bazel build :my_tf_proto\nERROR: /Users/zane/dev0/piran/test/BUILD:4:1: no such package 'tensorflow/core': BUILD file not found on package path and referenced by '//:_tensorflow_all_protos'\nERROR: Analysis of target '//:my_tf_proto' failed; build aborted: Analysis failed\nINFO: Elapsed time: 0.346s\nINFO: 0 processes.\nFAILED: Build did NOT complete successfully (1 packages loaded)\n</code></pre>\n<h3>Environment</h3>\n<p>OS Platform and Distribution</p>\n<pre><code># bazel version\nBuild label: 0.15.2\nBuild target: bazel-out/k8-opt/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar\nBuild time: Tue Jul 17 12:22:40 2018 (1531830160)\nBuild timestamp: 1531830160\nBuild timestamp as int: 1531830160\n#\n# lsb_release -a\nNo LSB modules are available.\nDistributor ID:\tUbuntu\nDescription:\tUbuntu 16.04.5 LTS\nRelease:\t16.04\nCodename:\txenial\n</code></pre>\n<p>tf.proto</p>\n<pre><code>syntax = \"proto3\";\n\npackage mytf;\n\nimport \"tensorflow/core/framework/graph.proto\";\n\nmessage MyMessage {\n  tensorflow.GraphDef myGraph = 1;\n}\n</code></pre>\n<p>WORKSPACE</p>\n<pre><code>\ngit_repository(\n    name = \"io_bazel_rules_closure\",\n    remote = \"https://github.com/bazelbuild/rules_closure.git\",\n    tag = \"0.8.0\",\n)\n\ngit_repository(\n    name = \"com_github_tensorflow_tensorflow\",\n    remote = \"https://github.com/tensorflow/tensorflow.git\",\n    commit = \"0c8a8289da120ee353c4fba5decb0bea9014e0a7\"  # Sep 18, 2018\n)\nload(\"@com_github_tensorflow_tensorflow//tensorflow:workspace.bzl\", \"tf_workspace\")\ntf_workspace()\n\n</code></pre>\n<p>BUILD</p>\n<pre><code>package(default_visibility = [\"//visibility:public\"])\nload(\"@com_github_tensorflow_tensorflow//tensorflow/core:platform/default/build_config.bzl\", \"tf_additional_all_protos\")\n\nproto_library(\n  name = '_tensorflow_all_protos',\n  srcs = tf_additional_all_protos(),\n)\n\nproto_library(\n\tname = 'my_tf_proto',\n\tsrcs = ['tf.proto'],\n\tdeps = [':_tensorflow_all_protos'],\n)\n</code></pre>\n<p>TensorFlow installed from: N/A<br>\nTensorFlow version: N/A<br>\nCUDA/cuDNN version: N/A<br>\nGPU model and memory: N/A<br>\nExact command to reproduce: <code>bazel build :my_tf_proto</code><br>\nMobile device: N/A</p>", "body_text": "I would like to build a proto_library for all the protobuf files in (core) tensorflow.\nSpecifically, I need to build the GraphDef protobuf message (and later target it for Golang) and include it in a custom proto definition. However, it seems only cc and py are visible/supported. It does not seem like the general proto_library is exposed by the tensorflow repo. Is there a simple way to do this? Ideally there would be a proto_library definition that is available in the core/BUILD file.\nWhen I try to execute \"tf_additional_all_protos\" after successfully loading it from build_config.bzl, I get an error saying no such package 'tensorflow/core'.\nAny suggestions?\nHave I written custom code\nBazel Build\n# bazel build :my_tf_proto\nERROR: /Users/zane/dev0/piran/test/BUILD:4:1: no such package 'tensorflow/core': BUILD file not found on package path and referenced by '//:_tensorflow_all_protos'\nERROR: Analysis of target '//:my_tf_proto' failed; build aborted: Analysis failed\nINFO: Elapsed time: 0.346s\nINFO: 0 processes.\nFAILED: Build did NOT complete successfully (1 packages loaded)\n\nEnvironment\nOS Platform and Distribution\n# bazel version\nBuild label: 0.15.2\nBuild target: bazel-out/k8-opt/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar\nBuild time: Tue Jul 17 12:22:40 2018 (1531830160)\nBuild timestamp: 1531830160\nBuild timestamp as int: 1531830160\n#\n# lsb_release -a\nNo LSB modules are available.\nDistributor ID:\tUbuntu\nDescription:\tUbuntu 16.04.5 LTS\nRelease:\t16.04\nCodename:\txenial\n\ntf.proto\nsyntax = \"proto3\";\n\npackage mytf;\n\nimport \"tensorflow/core/framework/graph.proto\";\n\nmessage MyMessage {\n  tensorflow.GraphDef myGraph = 1;\n}\n\nWORKSPACE\n\ngit_repository(\n    name = \"io_bazel_rules_closure\",\n    remote = \"https://github.com/bazelbuild/rules_closure.git\",\n    tag = \"0.8.0\",\n)\n\ngit_repository(\n    name = \"com_github_tensorflow_tensorflow\",\n    remote = \"https://github.com/tensorflow/tensorflow.git\",\n    commit = \"0c8a8289da120ee353c4fba5decb0bea9014e0a7\"  # Sep 18, 2018\n)\nload(\"@com_github_tensorflow_tensorflow//tensorflow:workspace.bzl\", \"tf_workspace\")\ntf_workspace()\n\n\nBUILD\npackage(default_visibility = [\"//visibility:public\"])\nload(\"@com_github_tensorflow_tensorflow//tensorflow/core:platform/default/build_config.bzl\", \"tf_additional_all_protos\")\n\nproto_library(\n  name = '_tensorflow_all_protos',\n  srcs = tf_additional_all_protos(),\n)\n\nproto_library(\n\tname = 'my_tf_proto',\n\tsrcs = ['tf.proto'],\n\tdeps = [':_tensorflow_all_protos'],\n)\n\nTensorFlow installed from: N/A\nTensorFlow version: N/A\nCUDA/cuDNN version: N/A\nGPU model and memory: N/A\nExact command to reproduce: bazel build :my_tf_proto\nMobile device: N/A", "body": "I would like to build a `proto_library` for all the protobuf files in (core) tensorflow.\r\n\r\nSpecifically, I need to build the GraphDef protobuf message (and later target it for Golang) and include it in a custom proto definition. However, it seems only cc and py are visible/supported. It does not seem like the general `proto_library` is exposed by the tensorflow repo. Is there a simple way to do this? Ideally there would be a `proto_library` definition that is available in the [core/BUILD file](https://github.com/tensorflow/tensorflow/blob/89e172f6ae5a52f8ceca6b4690331e1dce89d456/tensorflow/core/BUILD).\r\n\r\nWhen I try to execute \"tf_additional_all_protos\" after successfully loading it from build_config.bzl, I get an error saying `no such package 'tensorflow/core'`. \r\n\r\nAny suggestions?\r\n\r\nHave I written custom code\r\n### Bazel Build\r\n```\r\n# bazel build :my_tf_proto\r\nERROR: /Users/zane/dev0/piran/test/BUILD:4:1: no such package 'tensorflow/core': BUILD file not found on package path and referenced by '//:_tensorflow_all_protos'\r\nERROR: Analysis of target '//:my_tf_proto' failed; build aborted: Analysis failed\r\nINFO: Elapsed time: 0.346s\r\nINFO: 0 processes.\r\nFAILED: Build did NOT complete successfully (1 packages loaded)\r\n```\r\n\r\n### Environment\r\nOS Platform and Distribution\r\n```\r\n# bazel version\r\nBuild label: 0.15.2\r\nBuild target: bazel-out/k8-opt/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar\r\nBuild time: Tue Jul 17 12:22:40 2018 (1531830160)\r\nBuild timestamp: 1531830160\r\nBuild timestamp as int: 1531830160\r\n#\r\n# lsb_release -a\r\nNo LSB modules are available.\r\nDistributor ID:\tUbuntu\r\nDescription:\tUbuntu 16.04.5 LTS\r\nRelease:\t16.04\r\nCodename:\txenial\r\n```\r\n\r\ntf.proto\r\n```\r\nsyntax = \"proto3\";\r\n\r\npackage mytf;\r\n\r\nimport \"tensorflow/core/framework/graph.proto\";\r\n\r\nmessage MyMessage {\r\n  tensorflow.GraphDef myGraph = 1;\r\n}\r\n```\r\n\r\nWORKSPACE\r\n```\r\n\r\ngit_repository(\r\n    name = \"io_bazel_rules_closure\",\r\n    remote = \"https://github.com/bazelbuild/rules_closure.git\",\r\n    tag = \"0.8.0\",\r\n)\r\n\r\ngit_repository(\r\n    name = \"com_github_tensorflow_tensorflow\",\r\n    remote = \"https://github.com/tensorflow/tensorflow.git\",\r\n    commit = \"0c8a8289da120ee353c4fba5decb0bea9014e0a7\"  # Sep 18, 2018\r\n)\r\nload(\"@com_github_tensorflow_tensorflow//tensorflow:workspace.bzl\", \"tf_workspace\")\r\ntf_workspace()\r\n\r\n```\r\n\r\nBUILD\r\n```\r\npackage(default_visibility = [\"//visibility:public\"])\r\nload(\"@com_github_tensorflow_tensorflow//tensorflow/core:platform/default/build_config.bzl\", \"tf_additional_all_protos\")\r\n\r\nproto_library(\r\n  name = '_tensorflow_all_protos',\r\n  srcs = tf_additional_all_protos(),\r\n)\r\n\r\nproto_library(\r\n\tname = 'my_tf_proto',\r\n\tsrcs = ['tf.proto'],\r\n\tdeps = [':_tensorflow_all_protos'],\r\n)\r\n```\r\n\r\nTensorFlow installed from: N/A\r\nTensorFlow version: N/A\r\nCUDA/cuDNN version: N/A\r\nGPU model and memory: N/A\r\nExact command to reproduce: `bazel build :my_tf_proto`\r\nMobile device: N/A"}