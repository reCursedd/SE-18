{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/288577876", "html_url": "https://github.com/tensorflow/tensorflow/issues/8486#issuecomment-288577876", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8486", "id": 288577876, "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODU3Nzg3Ng==", "user": {"login": "cwhipkey", "id": 17578177, "node_id": "MDQ6VXNlcjE3NTc4MTc3", "avatar_url": "https://avatars0.githubusercontent.com/u/17578177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cwhipkey", "html_url": "https://github.com/cwhipkey", "followers_url": "https://api.github.com/users/cwhipkey/followers", "following_url": "https://api.github.com/users/cwhipkey/following{/other_user}", "gists_url": "https://api.github.com/users/cwhipkey/gists{/gist_id}", "starred_url": "https://api.github.com/users/cwhipkey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cwhipkey/subscriptions", "organizations_url": "https://api.github.com/users/cwhipkey/orgs", "repos_url": "https://api.github.com/users/cwhipkey/repos", "events_url": "https://api.github.com/users/cwhipkey/events{/privacy}", "received_events_url": "https://api.github.com/users/cwhipkey/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-23T00:08:58Z", "updated_at": "2017-03-23T00:08:58Z", "author_association": "MEMBER", "body_html": "<p>One cause of this we've seen before is when the host compiler, that made ops_to_register.h, differs from the compiler used for the device.  The difference we saw was in handling of whitespace in kernel names.</p>\n<p>In your case, you could try changing the ops_to_register.h to remove the space before CPUDevice where it occurs, e.g.:<br>\n<code>  BinaryOp&lt; CPUDevice, functor::add&lt;float&gt;&gt;</code><br>\nbecomes<br>\n<code>  BinaryOp&lt;CPUDevice, functor::add&lt;float&gt;&gt;</code></p>\n<p>and see if that helps.</p>\n<p>This problem is fixed in the master branch - the generated ops_to_register.h uses functions that compare the kernel names ignoring whitespace differences.</p>", "body_text": "One cause of this we've seen before is when the host compiler, that made ops_to_register.h, differs from the compiler used for the device.  The difference we saw was in handling of whitespace in kernel names.\nIn your case, you could try changing the ops_to_register.h to remove the space before CPUDevice where it occurs, e.g.:\n  BinaryOp< CPUDevice, functor::add<float>>\nbecomes\n  BinaryOp<CPUDevice, functor::add<float>>\nand see if that helps.\nThis problem is fixed in the master branch - the generated ops_to_register.h uses functions that compare the kernel names ignoring whitespace differences.", "body": "One cause of this we've seen before is when the host compiler, that made ops_to_register.h, differs from the compiler used for the device.  The difference we saw was in handling of whitespace in kernel names.\r\n\r\nIn your case, you could try changing the ops_to_register.h to remove the space before CPUDevice where it occurs, e.g.:\r\n`  BinaryOp< CPUDevice, functor::add<float>>`\r\nbecomes\r\n`  BinaryOp<CPUDevice, functor::add<float>>`\r\n\r\nand see if that helps.\r\n\r\nThis problem is fixed in the master branch - the generated ops_to_register.h uses functions that compare the kernel names ignoring whitespace differences."}