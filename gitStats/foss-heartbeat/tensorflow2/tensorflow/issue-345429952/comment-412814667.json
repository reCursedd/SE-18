{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/412814667", "html_url": "https://github.com/tensorflow/tensorflow/pull/21202#issuecomment-412814667", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21202", "id": 412814667, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjgxNDY2Nw==", "user": {"login": "bstriner", "id": 12462956, "node_id": "MDQ6VXNlcjEyNDYyOTU2", "avatar_url": "https://avatars3.githubusercontent.com/u/12462956?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bstriner", "html_url": "https://github.com/bstriner", "followers_url": "https://api.github.com/users/bstriner/followers", "following_url": "https://api.github.com/users/bstriner/following{/other_user}", "gists_url": "https://api.github.com/users/bstriner/gists{/gist_id}", "starred_url": "https://api.github.com/users/bstriner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bstriner/subscriptions", "organizations_url": "https://api.github.com/users/bstriner/orgs", "repos_url": "https://api.github.com/users/bstriner/repos", "events_url": "https://api.github.com/users/bstriner/events{/privacy}", "received_events_url": "https://api.github.com/users/bstriner/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-14T09:39:32Z", "updated_at": "2018-08-14T09:39:32Z", "author_association": "CONTRIBUTOR", "body_html": "<p>This includes the protobuf bump as well just so I could get it to build, but let me know what you want to do about that. Moved the protobuf data into defines so it is just one place instead of 3 places.</p>\n<p>I don't have a good way to get rid of the <code>const_cast</code>ing in <code>pywrap_tfe.i</code>. <code>TFE_GetPythonString</code> is now returning a <code>const char*</code>, which makes sense.</p>\n<p>SWIG is currently generating</p>\n<div class=\"highlight highlight-source-c\"><pre><span class=\"pl-k\">char</span> *arg2 = (<span class=\"pl-k\">char</span> *) <span class=\"pl-c1\">0</span> ;\narg2 = const_cast&lt;<span class=\"pl-k\">char</span>*&gt;(TFE_GetPythonString(obj1));\n<span class=\"pl-en\">TFE_ContextAddFunctionDef</span>(arg1,(<span class=\"pl-k\">char</span> <span class=\"pl-k\">const</span> *)arg2,arg3,arg4);</pre></div>\n<p>I want it to generate this but I can't figure out how to make <code>arg2</code> a <code>const</code></p>\n<div class=\"highlight highlight-source-c\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-k\">char</span> *arg2 = (<span class=\"pl-k\">const</span> <span class=\"pl-k\">char</span> *) <span class=\"pl-c1\">0</span> ;\narg2 = TFE_GetPythonString(obj1);\n<span class=\"pl-en\">TFE_ContextAddFunctionDef</span>(arg1,arg2,arg3,arg4);</pre></div>\n<p>Does anyone know a way to get that <code>const</code> the way I want it? Something like <code>typemap(arginit)</code> but for declarations? I tried things like <code>%typemap(in) const char* device_name (const char*)</code> but can't figure out any syntax that will work.</p>", "body_text": "This includes the protobuf bump as well just so I could get it to build, but let me know what you want to do about that. Moved the protobuf data into defines so it is just one place instead of 3 places.\nI don't have a good way to get rid of the const_casting in pywrap_tfe.i. TFE_GetPythonString is now returning a const char*, which makes sense.\nSWIG is currently generating\nchar *arg2 = (char *) 0 ;\narg2 = const_cast<char*>(TFE_GetPythonString(obj1));\nTFE_ContextAddFunctionDef(arg1,(char const *)arg2,arg3,arg4);\nI want it to generate this but I can't figure out how to make arg2 a const\nconst char *arg2 = (const char *) 0 ;\narg2 = TFE_GetPythonString(obj1);\nTFE_ContextAddFunctionDef(arg1,arg2,arg3,arg4);\nDoes anyone know a way to get that const the way I want it? Something like typemap(arginit) but for declarations? I tried things like %typemap(in) const char* device_name (const char*) but can't figure out any syntax that will work.", "body": "This includes the protobuf bump as well just so I could get it to build, but let me know what you want to do about that. Moved the protobuf data into defines so it is just one place instead of 3 places.\r\n\r\nI don't have a good way to get rid of the `const_cast`ing in `pywrap_tfe.i`. `TFE_GetPythonString` is now returning a `const char*`, which makes sense.\r\n\r\nSWIG is currently generating\r\n```c\r\nchar *arg2 = (char *) 0 ;\r\narg2 = const_cast<char*>(TFE_GetPythonString(obj1));\r\nTFE_ContextAddFunctionDef(arg1,(char const *)arg2,arg3,arg4);\r\n```\r\n\r\nI want it to generate this but I can't figure out how to make `arg2` a `const`\r\n```c\r\nconst char *arg2 = (const char *) 0 ;\r\narg2 = TFE_GetPythonString(obj1);\r\nTFE_ContextAddFunctionDef(arg1,arg2,arg3,arg4);\r\n```\r\n\r\nDoes anyone know a way to get that `const` the way I want it? Something like `typemap(arginit)` but for declarations? I tried things like `%typemap(in) const char* device_name (const char*)` but can't figure out any syntax that will work."}