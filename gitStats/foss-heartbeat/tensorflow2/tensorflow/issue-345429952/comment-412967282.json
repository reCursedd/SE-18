{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/412967282", "html_url": "https://github.com/tensorflow/tensorflow/pull/21202#issuecomment-412967282", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21202", "id": 412967282, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjk2NzI4Mg==", "user": {"login": "bstriner", "id": 12462956, "node_id": "MDQ6VXNlcjEyNDYyOTU2", "avatar_url": "https://avatars3.githubusercontent.com/u/12462956?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bstriner", "html_url": "https://github.com/bstriner", "followers_url": "https://api.github.com/users/bstriner/followers", "following_url": "https://api.github.com/users/bstriner/following{/other_user}", "gists_url": "https://api.github.com/users/bstriner/gists{/gist_id}", "starred_url": "https://api.github.com/users/bstriner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bstriner/subscriptions", "organizations_url": "https://api.github.com/users/bstriner/orgs", "repos_url": "https://api.github.com/users/bstriner/repos", "events_url": "https://api.github.com/users/bstriner/events{/privacy}", "received_events_url": "https://api.github.com/users/bstriner/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-14T18:16:50Z", "updated_at": "2018-08-14T18:16:50Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=16018\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/asimshankar\">@asimshankar</a> the thing responsible for like 50% of the <code>const_cast</code> (just eyeballing it) is <code>tensor_data</code>. There is no way around using a bunch of <code>const_cast</code>. Tensors have a <code>void*</code> to the data, but the only getter (<code>tensor_data</code>) gets you a <code>const char*</code> even if you want to mutate the data. A getter like <code>T* tensor::data_ptr&lt;T&gt;()</code> would eliminate that mess and the casting.</p>", "body_text": "@asimshankar the thing responsible for like 50% of the const_cast (just eyeballing it) is tensor_data. There is no way around using a bunch of const_cast. Tensors have a void* to the data, but the only getter (tensor_data) gets you a const char* even if you want to mutate the data. A getter like T* tensor::data_ptr<T>() would eliminate that mess and the casting.", "body": "@asimshankar the thing responsible for like 50% of the `const_cast` (just eyeballing it) is `tensor_data`. There is no way around using a bunch of `const_cast`. Tensors have a `void*` to the data, but the only getter (`tensor_data`) gets you a `const char*` even if you want to mutate the data. A getter like `T* tensor::data_ptr<T>()` would eliminate that mess and the casting."}