{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/72510087", "pull_request_review_id": null, "id": 72510087, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcyNTEwMDg3", "diff_hunk": "@@ -239,26 +239,39 @@ class TestConfig(object):\n   vocab_size = 10000\n \n \n-def run_epoch(session, m, data, eval_op, verbose=False):\n+def run_epoch(session, model, data, eval_op, verbose=False):\n   \"\"\"Runs the model on the given data.\"\"\"\n-  epoch_size = ((len(data) // m.batch_size) - 1) // m.num_steps\n+  epoch_size = ((len(data) // model.batch_size) - 1) // model.num_steps\n   start_time = time.time()\n   costs = 0.0\n   iters = 0\n-  state = m.initial_state.eval()\n-  for step, (x, y) in enumerate(reader.ptb_iterator(data, m.batch_size,\n-                                                    m.num_steps)):\n-    cost, state, _ = session.run([m.cost, m.final_state, eval_op],\n-                                 {m.input_data: x,\n-                                  m.targets: y,\n-                                  m.initial_state: state})\n+  state = []\n+  for c, m in model.initial_state: # initial_state: ((c1, m1), (c2, m2))\n+    state.append((c.eval(), m.eval()))\n+  for step, (x, y) in enumerate(reader.ptb_iterator(data, model.batch_size,\n+                                                    model.num_steps)):\n+    fetches = []\n+    fetches.append(model.cost)", "path": "tensorflow/models/rnn/ptb/ptb_word_lm.py", "position": null, "original_position": 39, "commit_id": "766584d4ec59bef1a915bf14e927716a2b6a3a76", "original_commit_id": "2819a680c951220d30b47b2212535412a66bbe7a", "user": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "body": "i think you can do:\n\nfetches = [model.cost, model.final_state, eval_op]\n\nthen\n\ncost, state, _ = session.run(fetches, feed_dict)\n\nthough i wouldn't use state since it conflicts with the variable state above.\n", "created_at": "2016-07-27T19:49:56Z", "updated_at": "2016-08-10T04:35:57Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/2580#discussion_r72510087", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/2580", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/72510087"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/2580#discussion_r72510087"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/2580"}}, "body_html": "<p>i think you can do:</p>\n<p>fetches = [model.cost, model.final_state, eval_op]</p>\n<p>then</p>\n<p>cost, state, _ = session.run(fetches, feed_dict)</p>\n<p>though i wouldn't use state since it conflicts with the variable state above.</p>", "body_text": "i think you can do:\nfetches = [model.cost, model.final_state, eval_op]\nthen\ncost, state, _ = session.run(fetches, feed_dict)\nthough i wouldn't use state since it conflicts with the variable state above."}