{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/72601158", "pull_request_review_id": null, "id": 72601158, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcyNjAxMTU4", "diff_hunk": "@@ -239,26 +239,39 @@ class TestConfig(object):\n   vocab_size = 10000\n \n \n-def run_epoch(session, m, data, eval_op, verbose=False):\n+def run_epoch(session, model, data, eval_op, verbose=False):\n   \"\"\"Runs the model on the given data.\"\"\"\n-  epoch_size = ((len(data) // m.batch_size) - 1) // m.num_steps\n+  epoch_size = ((len(data) // model.batch_size) - 1) // model.num_steps\n   start_time = time.time()\n   costs = 0.0\n   iters = 0\n-  state = m.initial_state.eval()\n-  for step, (x, y) in enumerate(reader.ptb_iterator(data, m.batch_size,\n-                                                    m.num_steps)):\n-    cost, state, _ = session.run([m.cost, m.final_state, eval_op],\n-                                 {m.input_data: x,\n-                                  m.targets: y,\n-                                  m.initial_state: state})\n+  state = []\n+  for c, m in model.initial_state: # initial_state: ((c1, m1), (c2, m2))\n+    state.append((c.eval(), m.eval()))\n+  for step, (x, y) in enumerate(reader.ptb_iterator(data, model.batch_size,\n+                                                    model.num_steps)):\n+    fetches = []\n+    fetches.append(model.cost)", "path": "tensorflow/models/rnn/ptb/ptb_word_lm.py", "position": null, "original_position": 39, "commit_id": "766584d4ec59bef1a915bf14e927716a2b6a3a76", "original_commit_id": "2819a680c951220d30b47b2212535412a66bbe7a", "user": {"login": "dipanjanS", "id": 3448263, "node_id": "MDQ6VXNlcjM0NDgyNjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3448263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dipanjanS", "html_url": "https://github.com/dipanjanS", "followers_url": "https://api.github.com/users/dipanjanS/followers", "following_url": "https://api.github.com/users/dipanjanS/following{/other_user}", "gists_url": "https://api.github.com/users/dipanjanS/gists{/gist_id}", "starred_url": "https://api.github.com/users/dipanjanS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dipanjanS/subscriptions", "organizations_url": "https://api.github.com/users/dipanjanS/orgs", "repos_url": "https://api.github.com/users/dipanjanS/repos", "events_url": "https://api.github.com/users/dipanjanS/events{/privacy}", "received_events_url": "https://api.github.com/users/dipanjanS/received_events", "type": "User", "site_admin": false}, "body": "Hi @ebrevdo ,\n\nThanks for the suggestion, this works till the point where I was having some issues with the `state`, since we have `m.initial_state: state` in `feed_dict` but now our initial state is no longer a concatenated tensor (because of `state_is_tuple`) but two different ones for the `c` and `h` states so how can we pass it to the `feed_dict`? \n\nShould I follow the code snippet below? It seems to work but was just wondering if there was a cleaner way of doing it based on the current version of this module?\n\nI just started with TensorFlow recently so I might be missing something obvious.\n", "created_at": "2016-07-28T10:47:03Z", "updated_at": "2016-08-10T04:35:57Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/2580#discussion_r72601158", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/2580", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/72601158"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/2580#discussion_r72601158"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/2580"}}, "body_html": "<p>Hi <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1794715\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ebrevdo\">@ebrevdo</a> ,</p>\n<p>Thanks for the suggestion, this works till the point where I was having some issues with the <code>state</code>, since we have <code>m.initial_state: state</code> in <code>feed_dict</code> but now our initial state is no longer a concatenated tensor (because of <code>state_is_tuple</code>) but two different ones for the <code>c</code> and <code>h</code> states so how can we pass it to the <code>feed_dict</code>?</p>\n<p>Should I follow the code snippet below? It seems to work but was just wondering if there was a cleaner way of doing it based on the current version of this module?</p>\n<p>I just started with TensorFlow recently so I might be missing something obvious.</p>", "body_text": "Hi @ebrevdo ,\nThanks for the suggestion, this works till the point where I was having some issues with the state, since we have m.initial_state: state in feed_dict but now our initial state is no longer a concatenated tensor (because of state_is_tuple) but two different ones for the c and h states so how can we pass it to the feed_dict?\nShould I follow the code snippet below? It seems to work but was just wondering if there was a cleaner way of doing it based on the current version of this module?\nI just started with TensorFlow recently so I might be missing something obvious."}