{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/347274989", "html_url": "https://github.com/tensorflow/tensorflow/pull/14877#issuecomment-347274989", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14877", "id": 347274989, "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzI3NDk4OQ==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-27T18:18:28Z", "updated_at": "2017-11-27T18:18:28Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=16437156\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Androbin\">@Androbin</a> That would be nice! If there's a reliable automatic way to get CMake to infer the set of Python modules that matches the Bazel behavior (and doesn't introduce a dependency on Bazel), I'd be in favor of that. In the meantime, once this change is submitted, adding a Bazel presubmit test that keeps the two in sync still seems like an improvement.</p>", "body_text": "@Androbin That would be nice! If there's a reliable automatic way to get CMake to infer the set of Python modules that matches the Bazel behavior (and doesn't introduce a dependency on Bazel), I'd be in favor of that. In the meantime, once this change is submitted, adding a Bazel presubmit test that keeps the two in sync still seems like an improvement.", "body": "@Androbin That would be nice! If there's a reliable automatic way to get CMake to infer the set of Python modules that matches the Bazel behavior (and doesn't introduce a dependency on Bazel), I'd be in favor of that. In the meantime, once this change is submitted, adding a Bazel presubmit test that keeps the two in sync still seems like an improvement."}