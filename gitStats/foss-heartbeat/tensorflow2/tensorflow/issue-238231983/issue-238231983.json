{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11020", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11020/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11020/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11020/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/11020", "id": 238231983, "node_id": "MDU6SXNzdWUyMzgyMzE5ODM=", "number": 11020, "title": "TensorArray `name` using a Tensor", "user": {"login": "aidangomez", "id": 9597721, "node_id": "MDQ6VXNlcjk1OTc3MjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/9597721?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aidangomez", "html_url": "https://github.com/aidangomez", "followers_url": "https://api.github.com/users/aidangomez/followers", "following_url": "https://api.github.com/users/aidangomez/following{/other_user}", "gists_url": "https://api.github.com/users/aidangomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/aidangomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aidangomez/subscriptions", "organizations_url": "https://api.github.com/users/aidangomez/orgs", "repos_url": "https://api.github.com/users/aidangomez/repos", "events_url": "https://api.github.com/users/aidangomez/events{/privacy}", "received_events_url": "https://api.github.com/users/aidangomez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-23T19:23:50Z", "updated_at": "2018-05-31T01:13:21Z", "closed_at": "2017-06-23T19:28:18Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<p>python-version: ('v1.2.0-rc1-24-gce1d6ec', '1.2.0-rc2')</p>\n<h3>Describe the problem</h3>\n<p>Looks like the name of the TensorArray is a Tensor and that Tensor is being treated as a boolean in a call to <code>name_scope</code>.</p>\n<h3>Source code / logs</h3>\n<pre><code>ta = tf.TensorArray(\n          dtype=tf.float32,\n          size=100,\n          dynamic_size=False,\n          colocate_with_first_write_call=False,\n          clear_after_read=True,\n          infer_shape=False)\n# write a bunch of stuff\nout = ta.gather(0, 12)\n</code></pre>\n<p>Trace:</p>\n<pre><code>    out = ta.gather(0, 12)\n  File \"/usr/local/lib/python2.7/site-packages/tensorflow/python/ops/tensor_array_ops.py\", line 360, in gather\n    element_shape=element_shape)\n  File \"/usr/local/lib/python2.7/site-packages/tensorflow/python/ops/gen_data_flow_ops.py\", line 1814, in _tensor_array_gather_v3\n    element_shape=element_shape, name=name)\n  File \"/usr/local/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py\", line 374, in apply_op\n    with g.as_default(), ops.name_scope(name) as scope:\n  File \"/usr/local/Cellar/python/2.7.12/Frameworks/Python.framework/Versions/2.7/lib/python2.7/contextlib.py\", line 17, in __enter__\n    return self.gen.next()\n  File \"/usr/local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 4359, in name_scope\n    with g.as_default(), g.name_scope(n) as scope:\n  File \"/usr/local/Cellar/python/2.7.12/Frameworks/Python.framework/Versions/2.7/lib/python2.7/contextlib.py\", line 17, in __enter__\n    return self.gen.next()\n  File \"/usr/local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 3009, in name_scope\n    if name:\n  File \"/usr/local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 578, in __nonzero__\n    raise TypeError(\"Using a `tf.Tensor` as a Python `bool` is not allowed. \"\nTypeError: Using a `tf.Tensor` as a Python `bool` is not allowed. Use `if t is not None:` instead of `if t:` to test if a tensor is defined, and use TensorFlow ops such as tf.cond to execute subgraphs conditioned on the value of a tensor.\n</code></pre>", "body_text": "System information\npython-version: ('v1.2.0-rc1-24-gce1d6ec', '1.2.0-rc2')\nDescribe the problem\nLooks like the name of the TensorArray is a Tensor and that Tensor is being treated as a boolean in a call to name_scope.\nSource code / logs\nta = tf.TensorArray(\n          dtype=tf.float32,\n          size=100,\n          dynamic_size=False,\n          colocate_with_first_write_call=False,\n          clear_after_read=True,\n          infer_shape=False)\n# write a bunch of stuff\nout = ta.gather(0, 12)\n\nTrace:\n    out = ta.gather(0, 12)\n  File \"/usr/local/lib/python2.7/site-packages/tensorflow/python/ops/tensor_array_ops.py\", line 360, in gather\n    element_shape=element_shape)\n  File \"/usr/local/lib/python2.7/site-packages/tensorflow/python/ops/gen_data_flow_ops.py\", line 1814, in _tensor_array_gather_v3\n    element_shape=element_shape, name=name)\n  File \"/usr/local/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py\", line 374, in apply_op\n    with g.as_default(), ops.name_scope(name) as scope:\n  File \"/usr/local/Cellar/python/2.7.12/Frameworks/Python.framework/Versions/2.7/lib/python2.7/contextlib.py\", line 17, in __enter__\n    return self.gen.next()\n  File \"/usr/local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 4359, in name_scope\n    with g.as_default(), g.name_scope(n) as scope:\n  File \"/usr/local/Cellar/python/2.7.12/Frameworks/Python.framework/Versions/2.7/lib/python2.7/contextlib.py\", line 17, in __enter__\n    return self.gen.next()\n  File \"/usr/local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 3009, in name_scope\n    if name:\n  File \"/usr/local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 578, in __nonzero__\n    raise TypeError(\"Using a `tf.Tensor` as a Python `bool` is not allowed. \"\nTypeError: Using a `tf.Tensor` as a Python `bool` is not allowed. Use `if t is not None:` instead of `if t:` to test if a tensor is defined, and use TensorFlow ops such as tf.cond to execute subgraphs conditioned on the value of a tensor.", "body": "### System information\r\npython-version: ('v1.2.0-rc1-24-gce1d6ec', '1.2.0-rc2')\r\n\r\n### Describe the problem\r\nLooks like the name of the TensorArray is a Tensor and that Tensor is being treated as a boolean in a call to `name_scope`. \r\n\r\n### Source code / logs\r\n```\r\nta = tf.TensorArray(\r\n          dtype=tf.float32,\r\n          size=100,\r\n          dynamic_size=False,\r\n          colocate_with_first_write_call=False,\r\n          clear_after_read=True,\r\n          infer_shape=False)\r\n# write a bunch of stuff\r\nout = ta.gather(0, 12)\r\n```\r\n\r\nTrace:\r\n```\r\n    out = ta.gather(0, 12)\r\n  File \"/usr/local/lib/python2.7/site-packages/tensorflow/python/ops/tensor_array_ops.py\", line 360, in gather\r\n    element_shape=element_shape)\r\n  File \"/usr/local/lib/python2.7/site-packages/tensorflow/python/ops/gen_data_flow_ops.py\", line 1814, in _tensor_array_gather_v3\r\n    element_shape=element_shape, name=name)\r\n  File \"/usr/local/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py\", line 374, in apply_op\r\n    with g.as_default(), ops.name_scope(name) as scope:\r\n  File \"/usr/local/Cellar/python/2.7.12/Frameworks/Python.framework/Versions/2.7/lib/python2.7/contextlib.py\", line 17, in __enter__\r\n    return self.gen.next()\r\n  File \"/usr/local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 4359, in name_scope\r\n    with g.as_default(), g.name_scope(n) as scope:\r\n  File \"/usr/local/Cellar/python/2.7.12/Frameworks/Python.framework/Versions/2.7/lib/python2.7/contextlib.py\", line 17, in __enter__\r\n    return self.gen.next()\r\n  File \"/usr/local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 3009, in name_scope\r\n    if name:\r\n  File \"/usr/local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 578, in __nonzero__\r\n    raise TypeError(\"Using a `tf.Tensor` as a Python `bool` is not allowed. \"\r\nTypeError: Using a `tf.Tensor` as a Python `bool` is not allowed. Use `if t is not None:` instead of `if t:` to test if a tensor is defined, and use TensorFlow ops such as tf.cond to execute subgraphs conditioned on the value of a tensor.\r\n```"}