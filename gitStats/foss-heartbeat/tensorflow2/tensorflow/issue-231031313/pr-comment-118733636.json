{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/118733636", "pull_request_review_id": 40556924, "id": 118733636, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExODczMzYzNg==", "diff_hunk": "@@ -769,14 +773,44 @@ def _create_dummy_repository(repository_ctx):\n   repository_ctx.file(\"crosstool/BUILD\", _DUMMY_CROSSTOOL_BUILD_FILE)\n \n \n+def _execute(repository_ctx, cmdline, error_msg=None, error_details=None,\n+             empty_stdout_fine=False):\n+  \"\"\"Executes an arbitrary shell command.\n+\n+  Args:\n+    repository_ctx: the repository_ctx object\n+    cmdline: list of strings, the command to execute\n+    error_msg: string, a summary of the error if the command fails\n+    error_details: string, details about the error or steps to fix it\n+    empty_stdout_fine: bool, if True, an empty stdout result is fine, otherwise\n+      it's an error\n+  Return:\n+    the result of repository_ctx.execute(cmdline)\n+  \"\"\"\n+  result = repository_ctx.execute(cmdline)\n+  if result.stderr or not (empty_stdout_fine or result.stdout):\n+    auto_configure_fail(\n+        \"\\n\".join([\n+            error_msg.strip() if error_msg else \"Repository command failed\",\n+            result.stderr.strip(),\n+            error_details if error_details else \"\"]))\n+  return result\n+\n+\n def _symlink_genrule_for_dir(repository_ctx, src_dir, dest_dir, genrule_name,\n     src_files = [], dest_files = []):\n-  \"\"\"Returns a genrule to symlink a set of files.\n+  \"\"\"Returns a genrule to symlink(or copy if on Windows) a set of files.\n \n   If src_dir is passed, files will be read from the given directory; otherwise\n   we assume files are in src_files and dest_files\n   \"\"\"\n   if src_dir != None:\n+    src_dir = src_dir.replace(\"\\\\\", \"/\")\n+    dest_dir = dest_dir.replace(\"\\\\\", \"/\")", "path": "third_party/gpus/cuda_configure.bzl", "position": null, "original_position": 73, "commit_id": "18cdb0a3b374f3c85f388c1561589f0b1be42a69", "original_commit_id": "3e551d903fa482ed0434efab9b170843fb22209c", "user": {"login": "maciekcc", "id": 15237924, "node_id": "MDQ6VXNlcjE1MjM3OTI0", "avatar_url": "https://avatars0.githubusercontent.com/u/15237924?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maciekcc", "html_url": "https://github.com/maciekcc", "followers_url": "https://api.github.com/users/maciekcc/followers", "following_url": "https://api.github.com/users/maciekcc/following{/other_user}", "gists_url": "https://api.github.com/users/maciekcc/gists{/gist_id}", "starred_url": "https://api.github.com/users/maciekcc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maciekcc/subscriptions", "organizations_url": "https://api.github.com/users/maciekcc/orgs", "repos_url": "https://api.github.com/users/maciekcc/repos", "events_url": "https://api.github.com/users/maciekcc/events{/privacy}", "received_events_url": "https://api.github.com/users/maciekcc/received_events", "type": "User", "site_admin": false}, "body": "One more nit: can you please extract a method to perform this path slash replacement and trimming, and then use it in both the files.", "created_at": "2017-05-26T15:55:00Z", "updated_at": "2017-05-26T18:06:51Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/10158#discussion_r118733636", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/10158", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/118733636"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/10158#discussion_r118733636"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/10158"}}, "body_html": "<p>One more nit: can you please extract a method to perform this path slash replacement and trimming, and then use it in both the files.</p>", "body_text": "One more nit: can you please extract a method to perform this path slash replacement and trimming, and then use it in both the files."}