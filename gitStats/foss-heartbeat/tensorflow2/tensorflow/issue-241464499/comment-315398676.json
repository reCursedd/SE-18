{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/315398676", "html_url": "https://github.com/tensorflow/tensorflow/issues/11383#issuecomment-315398676", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11383", "id": 315398676, "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTM5ODY3Ng==", "user": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-14T16:05:41Z", "updated_at": "2017-07-14T16:06:29Z", "author_association": "CONTRIBUTOR", "body_html": "<p>You can get something similar by creating some N write operations, like so:</p>\n<div class=\"highlight highlight-source-python\"><pre>ta <span class=\"pl-k\">=</span> tf.TensorArray(<span class=\"pl-v\">size</span><span class=\"pl-k\">=</span>placeholder_size)\nta_arr <span class=\"pl-k\">=</span> []\nta_arr.append(tf.cond(placeholder_size <span class=\"pl-k\">&gt;=</span> <span class=\"pl-c1\">1</span>, <span class=\"pl-k\">lambda</span>: ta.write(<span class=\"pl-c1\">0</span>, placeholders[<span class=\"pl-c1\">0</span>]), <span class=\"pl-k\">lambda</span>: ta))\nta_arr.append(tf.cond(palceholder_size <span class=\"pl-k\">&gt;=</span> <span class=\"pl-c1\">2</span>, <span class=\"pl-k\">lambda</span>: ta.write(<span class=\"pl-c1\">1</span>, placeholders[<span class=\"pl-c1\">1</span>]), <span class=\"pl-k\">lambda</span>: ta_arr[<span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>])\n<span class=\"pl-c1\">...</span>\nta_arr.append(tf.cond(placeholder_size <span class=\"pl-k\">&gt;=</span> n, <span class=\"pl-k\">lambda</span>: ta.write(n <span class=\"pl-k\">-</span> <span class=\"pl-c1\">1</span>, placeholders[n<span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>], <span class=\"pl-k\">lambda</span>: ta_arr[<span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>]))\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> do computations on ta_arr[-1]</span></pre></div>\n<p>and then feed in placeholder_size and as many placeholders[i] as you want.</p>\n<p>can even wrap this in a helper function call, probably.</p>", "body_text": "You can get something similar by creating some N write operations, like so:\nta = tf.TensorArray(size=placeholder_size)\nta_arr = []\nta_arr.append(tf.cond(placeholder_size >= 1, lambda: ta.write(0, placeholders[0]), lambda: ta))\nta_arr.append(tf.cond(palceholder_size >= 2, lambda: ta.write(1, placeholders[1]), lambda: ta_arr[-1])\n...\nta_arr.append(tf.cond(placeholder_size >= n, lambda: ta.write(n - 1, placeholders[n-1], lambda: ta_arr[-1]))\n\n# do computations on ta_arr[-1]\nand then feed in placeholder_size and as many placeholders[i] as you want.\ncan even wrap this in a helper function call, probably.", "body": "You can get something similar by creating some N write operations, like so:\r\n\r\n``` python\r\nta = tf.TensorArray(size=placeholder_size)\r\nta_arr = []\r\nta_arr.append(tf.cond(placeholder_size >= 1, lambda: ta.write(0, placeholders[0]), lambda: ta))\r\nta_arr.append(tf.cond(palceholder_size >= 2, lambda: ta.write(1, placeholders[1]), lambda: ta_arr[-1])\r\n...\r\nta_arr.append(tf.cond(placeholder_size >= n, lambda: ta.write(n - 1, placeholders[n-1], lambda: ta_arr[-1]))\r\n\r\n# do computations on ta_arr[-1]\r\n```\r\n\r\nand then feed in placeholder_size and as many placeholders[i] as you want.\r\n\r\ncan even wrap this in a helper function call, probably."}