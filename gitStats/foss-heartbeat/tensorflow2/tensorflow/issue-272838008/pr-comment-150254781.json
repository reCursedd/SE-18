{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/150254781", "pull_request_review_id": 75779214, "id": 150254781, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MDI1NDc4MQ==", "diff_hunk": "@@ -498,7 +501,10 @@ def data_generator():\n       values = []\n       with open(fp) as f:\n         for x in csv.reader(f):\n-          values.append(x)\n+          # In windows, due to \\n\\r line ends we may end up reading empty lines", "path": "tensorflow/python/keras/_impl/keras/callbacks_test.py", "position": null, "original_position": 26, "commit_id": "09e5e21cf632602527cad7f700438a9d9618968e", "original_commit_id": "8a8787d95017153366a8d6426285de7db22c2938", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "body": "Nit: s/\\n\\r/\\r\\n/?\r\n\r\n...also I'm surprised that `csv.reader()` isn't robust to this. Perhaps [this Stack Overflow answer](https://stackoverflow.com/a/18899548/3574081), which suggests using `with open(fp, 'rU') as f:`, would avoid the need for this workaround?", "created_at": "2017-11-10T14:56:27Z", "updated_at": "2017-11-19T08:05:32Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/14439#discussion_r150254781", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/14439", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/150254781"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/14439#discussion_r150254781"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/14439"}}, "body_html": "<p>Nit: s/\\n\\r/\\r\\n/?</p>\n<p>...also I'm surprised that <code>csv.reader()</code> isn't robust to this. Perhaps <a href=\"https://stackoverflow.com/a/18899548/3574081\" rel=\"nofollow\">this Stack Overflow answer</a>, which suggests using <code>with open(fp, 'rU') as f:</code>, would avoid the need for this workaround?</p>", "body_text": "Nit: s/\\n\\r/\\r\\n/?\n...also I'm surprised that csv.reader() isn't robust to this. Perhaps this Stack Overflow answer, which suggests using with open(fp, 'rU') as f:, would avoid the need for this workaround?"}