{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/249989238", "html_url": "https://github.com/tensorflow/tensorflow/pull/4501#issuecomment-249989238", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4501", "id": 249989238, "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTk4OTIzOA==", "user": {"login": "rinugun", "id": 1694130, "node_id": "MDQ6VXNlcjE2OTQxMzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1694130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rinugun", "html_url": "https://github.com/rinugun", "followers_url": "https://api.github.com/users/rinugun/followers", "following_url": "https://api.github.com/users/rinugun/following{/other_user}", "gists_url": "https://api.github.com/users/rinugun/gists{/gist_id}", "starred_url": "https://api.github.com/users/rinugun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rinugun/subscriptions", "organizations_url": "https://api.github.com/users/rinugun/orgs", "repos_url": "https://api.github.com/users/rinugun/repos", "events_url": "https://api.github.com/users/rinugun/events{/privacy}", "received_events_url": "https://api.github.com/users/rinugun/received_events", "type": "User", "site_admin": false}, "created_at": "2016-09-27T20:31:52Z", "updated_at": "2016-09-27T20:31:52Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4388831\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/moontails\">@moontails</a>, I just realized that sleep() might not be the canonical way of making a delay, e.g it might not be supported on Windows. I was wondering if you could replace it with<br>\nEnv::Default()-&gt;SleepForMilliseconds, e.g see this example:<br>\n<a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/platform/cloud/gcs_file_system.cc#L379\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/platform/cloud/gcs_file_system.cc#L379</a></p>\n<p>This also prepares the code for the subsequent implementation of random millisecond part, that we discussed in another thread with <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=20399899\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/davidj-github\">@davidj-github</a>.</p>\n<p>Also I had another comment related to this, even though this contradicts to what I suggested before. Instead of making 'initial_delay' a ctor parameter, you could have 'Env* env' a ctor parameter instead, which would default to Env::Default(). This way you could provide a fake implementation of SleepForMilliseconds from the test code. The fake implementation would return immediately, but would record how it was called.<br>\nThe benefit of the latter is that the test code can still work fast, but also check the sleep intervals that were passed to SleepForMilliseconds from the main code and make sure they all look as expected.</p>", "body_text": "@moontails, I just realized that sleep() might not be the canonical way of making a delay, e.g it might not be supported on Windows. I was wondering if you could replace it with\nEnv::Default()->SleepForMilliseconds, e.g see this example:\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/platform/cloud/gcs_file_system.cc#L379\nThis also prepares the code for the subsequent implementation of random millisecond part, that we discussed in another thread with @davidj-github.\nAlso I had another comment related to this, even though this contradicts to what I suggested before. Instead of making 'initial_delay' a ctor parameter, you could have 'Env* env' a ctor parameter instead, which would default to Env::Default(). This way you could provide a fake implementation of SleepForMilliseconds from the test code. The fake implementation would return immediately, but would record how it was called.\nThe benefit of the latter is that the test code can still work fast, but also check the sleep intervals that were passed to SleepForMilliseconds from the main code and make sure they all look as expected.", "body": "@moontails, I just realized that sleep() might not be the canonical way of making a delay, e.g it might not be supported on Windows. I was wondering if you could replace it with \nEnv::Default()->SleepForMilliseconds, e.g see this example:\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/platform/cloud/gcs_file_system.cc#L379\n\nThis also prepares the code for the subsequent implementation of random millisecond part, that we discussed in another thread with @davidj-github.\n\nAlso I had another comment related to this, even though this contradicts to what I suggested before. Instead of making 'initial_delay' a ctor parameter, you could have 'Env\\* env' a ctor parameter instead, which would default to Env::Default(). This way you could provide a fake implementation of SleepForMilliseconds from the test code. The fake implementation would return immediately, but would record how it was called.\nThe benefit of the latter is that the test code can still work fast, but also check the sleep intervals that were passed to SleepForMilliseconds from the main code and make sure they all look as expected.\n"}