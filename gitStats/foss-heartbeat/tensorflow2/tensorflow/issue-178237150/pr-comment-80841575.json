{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/80841575", "pull_request_review_id": 1866604, "id": 80841575, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgwODQxNTc1", "diff_hunk": "@@ -37,55 +42,81 @@ bool IsRetriable(Status status) {\n   }\n }\n \n-Status CallWithRetries(const std::function<Status()>& f) {\n-  int attempts = 0;\n+void WaitBeforeRetry(const int delay_seconds) {\n+  std::random_device rd;\n+  std::mt19937 gen(rd());\n+  std::uniform_int_distribution<> dist(0, 999);\n+\n+  const int delay_milliseconds = delay_seconds * 1000;\n+  const int random_milliseconds = dist(gen);\n+  const int delay = std::min(delay_milliseconds + random_milliseconds,\n+                             kMaximumBackoffMilliSeconds);\n+\n+  std::this_thread::sleep_for(std::chrono::milliseconds(delay));\n+}\n+\n+Status CallWithRetries(const std::function<Status()>& f,\n+                       const int initial_delay_seconds) {\n+  int retries = 0;\n   while (true) {\n-    attempts++;\n     auto status = f();\n-    if (!IsRetriable(status) || attempts >= kMaxAttempts) {\n+    if (!IsRetriable(status) || retries >= kMaxRetries) {\n       return status;\n     }\n     LOG(ERROR) << \"The operation resulted in an error and will be retried: \"", "path": "tensorflow/core/platform/cloud/retrying_file_system.cc", "position": null, "original_position": 53, "commit_id": "f6b6a9d38da07753541c47487fbe7ce3361a4ed1", "original_commit_id": "e0916764561c8da3bc0424afc9bb7a97b6c64a5d", "user": {"login": "rinugun", "id": 1694130, "node_id": "MDQ6VXNlcjE2OTQxMzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1694130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rinugun", "html_url": "https://github.com/rinugun", "followers_url": "https://api.github.com/users/rinugun/followers", "following_url": "https://api.github.com/users/rinugun/following{/other_user}", "gists_url": "https://api.github.com/users/rinugun/gists{/gist_id}", "starred_url": "https://api.github.com/users/rinugun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rinugun/subscriptions", "organizations_url": "https://api.github.com/users/rinugun/orgs", "repos_url": "https://api.github.com/users/rinugun/repos", "events_url": "https://api.github.com/users/rinugun/events{/privacy}", "received_events_url": "https://api.github.com/users/rinugun/received_events", "type": "User", "site_admin": false}, "body": "I wonder if you could also print the delay in seconds in the LOG message, e.g \nconst int delay_seconds = initial_delay_seconds << retries;\n... will be retried after \" << delay_seconds << \" sec:\"\n", "created_at": "2016-09-28T04:29:56Z", "updated_at": "2016-09-30T07:04:19Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/4501#discussion_r80841575", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/4501", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/80841575"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/4501#discussion_r80841575"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/4501"}}, "body_html": "<p>I wonder if you could also print the delay in seconds in the LOG message, e.g<br>\nconst int delay_seconds = initial_delay_seconds &lt;&lt; retries;<br>\n... will be retried after \" &lt;&lt; delay_seconds &lt;&lt; \" sec:\"</p>", "body_text": "I wonder if you could also print the delay in seconds in the LOG message, e.g\nconst int delay_seconds = initial_delay_seconds << retries;\n... will be retried after \" << delay_seconds << \" sec:\""}