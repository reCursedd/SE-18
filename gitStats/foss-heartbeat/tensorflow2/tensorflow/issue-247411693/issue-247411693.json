{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11968", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11968/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11968/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11968/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/11968", "id": 247411693, "node_id": "MDExOlB1bGxSZXF1ZXN0MTMzNzI1NTYw", "number": 11968, "title": "[OpenCL] Fix allocator destruction race condition (#136)", "user": {"login": "lukeiwanski", "id": 8373795, "node_id": "MDQ6VXNlcjgzNzM3OTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/8373795?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukeiwanski", "html_url": "https://github.com/lukeiwanski", "followers_url": "https://api.github.com/users/lukeiwanski/followers", "following_url": "https://api.github.com/users/lukeiwanski/following{/other_user}", "gists_url": "https://api.github.com/users/lukeiwanski/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukeiwanski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukeiwanski/subscriptions", "organizations_url": "https://api.github.com/users/lukeiwanski/orgs", "repos_url": "https://api.github.com/users/lukeiwanski/repos", "events_url": "https://api.github.com/users/lukeiwanski/events{/privacy}", "received_events_url": "https://api.github.com/users/lukeiwanski/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2017-08-02T14:36:39Z", "updated_at": "2017-08-09T18:18:32Z", "closed_at": "2017-08-09T17:07:59Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11968", "html_url": "https://github.com/tensorflow/tensorflow/pull/11968", "diff_url": "https://github.com/tensorflow/tensorflow/pull/11968.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/11968.patch"}, "body_html": "<ul>\n<li>[OpenCL] Changes SYCL Interface construction</li>\n</ul>\n<p>Uses C++11 static initialisation to provide singleton instance, rather<br>\nthan a mutex and pointer.</p>\n<ul>\n<li>\n<p>[OpenCL] Adds const to SYCL Interface methods</p>\n</li>\n<li>\n<p>[OpenCL] Fix allocator destruction race condition</p>\n</li>\n</ul>\n<p>A Tensor's allocator must outlive it, however there is no easy way to<br>\ndetermine whether an Allocator has any Tensors still alive, and so we<br>\ncannot know when it is safe to destroy an allocator. The CPU allocator<br>\ngets round this by being deleted, so we adopt this convention here.</p>\n<ul>\n<li>\n<p>[OpenCL] Reformats SYCL code</p>\n</li>\n<li>\n<p>[OpenCL] Fixes SYCL comments</p>\n</li>\n<li>\n<p>[OpenCL] Tidies SYCL device description</p>\n</li>\n</ul>\n<p>Adds check for whether the QueueInterface pointer is valid, as this<br>\nmay not always be the case.</p>\n<ul>\n<li>\n<p>[OpenCL] Adds nullptr checking to SYCL allocator</p>\n</li>\n<li>\n<p>[OpenCL] Adds const specifier to SYCL Interface</p>\n</li>\n</ul>", "body_text": "[OpenCL] Changes SYCL Interface construction\n\nUses C++11 static initialisation to provide singleton instance, rather\nthan a mutex and pointer.\n\n\n[OpenCL] Adds const to SYCL Interface methods\n\n\n[OpenCL] Fix allocator destruction race condition\n\n\nA Tensor's allocator must outlive it, however there is no easy way to\ndetermine whether an Allocator has any Tensors still alive, and so we\ncannot know when it is safe to destroy an allocator. The CPU allocator\ngets round this by being deleted, so we adopt this convention here.\n\n\n[OpenCL] Reformats SYCL code\n\n\n[OpenCL] Fixes SYCL comments\n\n\n[OpenCL] Tidies SYCL device description\n\n\nAdds check for whether the QueueInterface pointer is valid, as this\nmay not always be the case.\n\n\n[OpenCL] Adds nullptr checking to SYCL allocator\n\n\n[OpenCL] Adds const specifier to SYCL Interface", "body": "* [OpenCL] Changes SYCL Interface construction\r\n\r\nUses C++11 static initialisation to provide singleton instance, rather\r\nthan a mutex and pointer.\r\n\r\n* [OpenCL] Adds const to SYCL Interface methods\r\n\r\n* [OpenCL] Fix allocator destruction race condition\r\n\r\nA Tensor's allocator must outlive it, however there is no easy way to\r\ndetermine whether an Allocator has any Tensors still alive, and so we\r\ncannot know when it is safe to destroy an allocator. The CPU allocator\r\ngets round this by being deleted, so we adopt this convention here.\r\n\r\n* [OpenCL] Reformats SYCL code\r\n\r\n* [OpenCL] Fixes SYCL comments\r\n\r\n* [OpenCL] Tidies SYCL device description\r\n\r\nAdds check for whether the QueueInterface pointer is valid, as this\r\nmay not always be the case.\r\n\r\n* [OpenCL] Adds nullptr checking to SYCL allocator\r\n\r\n* [OpenCL] Adds const specifier to SYCL Interface"}