{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/75356784", "pull_request_review_id": null, "id": 75356784, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc1MzU2Nzg0", "diff_hunk": "@@ -71,7 +71,7 @@ module VZ {\n       this.xScale = xComponents.scale;\n       this.xAxis = xComponents.axis;\n       this.xAxis.margin(0).tickLabelPadding(3);\n-      this.yScale = new Plottable.Scales.Linear();\n+      this.yScale = yScale === 'log' ? new Plottable.Scales.ModifiedLog() : new Plottable.Scales.Linear();", "path": "tensorflow/tensorboard/components/vz-line-chart/vz-line-chart.ts", "position": null, "original_position": 27, "commit_id": "e76a0a0a99b1ca630545404c81e758a9007fe1ae", "original_commit_id": "05e712ca22fb9c592b168a274ed4ba62573a403a", "user": {"login": "decentralion", "id": 1400023, "node_id": "MDQ6VXNlcjE0MDAwMjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1400023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/decentralion", "html_url": "https://github.com/decentralion", "followers_url": "https://api.github.com/users/decentralion/followers", "following_url": "https://api.github.com/users/decentralion/following{/other_user}", "gists_url": "https://api.github.com/users/decentralion/gists{/gist_id}", "starred_url": "https://api.github.com/users/decentralion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/decentralion/subscriptions", "organizations_url": "https://api.github.com/users/decentralion/orgs", "repos_url": "https://api.github.com/users/decentralion/repos", "events_url": "https://api.github.com/users/decentralion/events{/privacy}", "received_events_url": "https://api.github.com/users/decentralion/received_events", "type": "User", "site_admin": false}, "body": "Since \"log\" and \"linear\" are the accepted options, I think it would be better to do:\n\nfunction getYScaleFromType(yScaleType: string): Plottable.QuantitativeScale {\n  if (yScaleType === \"log\") {\n    return new Plottable.Scales.ModifiedLog();\n  } else if (yScaleType === \"linear\") {\n    return new Plottable.Scales.Linear();\n  } else {\n    throw new Error(\"Unrecognized yScale type \" + yScaleType);\n  }\n", "created_at": "2016-08-18T17:57:59Z", "updated_at": "2016-08-24T22:27:29Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/3876#discussion_r75356784", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/3876", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/75356784"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/3876#discussion_r75356784"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/3876"}}, "body_html": "<p>Since \"log\" and \"linear\" are the accepted options, I think it would be better to do:</p>\n<p>function getYScaleFromType(yScaleType: string): Plottable.QuantitativeScale {<br>\nif (yScaleType === \"log\") {<br>\nreturn new Plottable.Scales.ModifiedLog();<br>\n} else if (yScaleType === \"linear\") {<br>\nreturn new Plottable.Scales.Linear();<br>\n} else {<br>\nthrow new Error(\"Unrecognized yScale type \" + yScaleType);<br>\n}</p>", "body_text": "Since \"log\" and \"linear\" are the accepted options, I think it would be better to do:\nfunction getYScaleFromType(yScaleType: string): Plottable.QuantitativeScale {\nif (yScaleType === \"log\") {\nreturn new Plottable.Scales.ModifiedLog();\n} else if (yScaleType === \"linear\") {\nreturn new Plottable.Scales.Linear();\n} else {\nthrow new Error(\"Unrecognized yScale type \" + yScaleType);\n}"}