{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15784", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15784/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15784/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15784/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15784", "id": 285419268, "node_id": "MDU6SXNzdWUyODU0MTkyNjg=", "number": 15784, "title": "[FeatureRequest] Support PathLike objects for directory arguments", "user": {"login": "damienpontifex", "id": 1321276, "node_id": "MDQ6VXNlcjEzMjEyNzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1321276?v=4", "gravatar_id": "", "url": "https://api.github.com/users/damienpontifex", "html_url": "https://github.com/damienpontifex", "followers_url": "https://api.github.com/users/damienpontifex/followers", "following_url": "https://api.github.com/users/damienpontifex/following{/other_user}", "gists_url": "https://api.github.com/users/damienpontifex/gists{/gist_id}", "starred_url": "https://api.github.com/users/damienpontifex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/damienpontifex/subscriptions", "organizations_url": "https://api.github.com/users/damienpontifex/orgs", "repos_url": "https://api.github.com/users/damienpontifex/repos", "events_url": "https://api.github.com/users/damienpontifex/events{/privacy}", "received_events_url": "https://api.github.com/users/damienpontifex/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-01-02T12:33:09Z", "updated_at": "2018-01-20T23:36:15Z", "closed_at": "2018-01-20T23:36:15Z", "author_association": "NONE", "body_html": "<p>With python 3.6, <a href=\"https://www.python.org/dev/peps/pep-0519/\" rel=\"nofollow\">PEP 519</a> and the <a href=\"https://docs.python.org/3/library/pathlib.html\" rel=\"nofollow\">pathlib</a> module, it would be great if TensorFlow directory parameters accepted PathLike objects.</p>\n<p>From the <a href=\"https://www.python.org/dev/peps/pep-0519/#backwards-compatibility\" rel=\"nofollow\">Backwards Compatibility</a> part of the documentation, a suggested implementation is:</p>\n<div class=\"highlight highlight-source-python\"><pre>path.<span class=\"pl-c1\">__fspath__</span>() <span class=\"pl-k\">if</span> <span class=\"pl-c1\">hasattr</span>(path, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>__fspath__<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">else</span> path</pre></div>\n<p>With such an implementation, it seems <code>path</code> in the code above can be any file system representation of <code>str</code>, <code>bytes</code> or <code>pathlib.Path</code>. For my case, I was using/looking at the <a href=\"https://github.com/tensorflow/tensorflow/blob/r1.4/tensorflow/python/estimator/estimator.py#L122-L126\"><code>tf.estimator.model_dir</code></a> parameter, but for consistency I assume it would also need applying in all cases where a path is accepted such as <code>tf.gfile</code></p>\n<hr>\n<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: No</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: macOS</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: pip</li>\n<li><strong>TensorFlow version (use command below)</strong>: v1.4.0-8-gbca50da6eb 1.4.0</li>\n<li><strong>Python version</strong>: 3.6.3</li>\n<li><strong>Bazel version (if compiling from source)</strong>: N/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: N/A</li>\n<li><strong>CUDA/cuDNN version</strong>: N/A</li>\n<li><strong>GPU model and memory</strong>: N/A</li>\n<li><strong>Exact command to reproduce</strong>: N/A</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>Problem is the <code>pathlib</code> module represents filesystem paths although is not accepted in parameters that refer to a directory or file in the TensorFlow API. The proposed feature would enable accepting these objects while still maintaining compatibility with existing <code>str</code> type paths.</p>", "body_text": "With python 3.6, PEP 519 and the pathlib module, it would be great if TensorFlow directory parameters accepted PathLike objects.\nFrom the Backwards Compatibility part of the documentation, a suggested implementation is:\npath.__fspath__() if hasattr(path, \"__fspath__\") else path\nWith such an implementation, it seems path in the code above can be any file system representation of str, bytes or pathlib.Path. For my case, I was using/looking at the tf.estimator.model_dir parameter, but for consistency I assume it would also need applying in all cases where a path is accepted such as tf.gfile\n\nSystem information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): No\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): macOS\nTensorFlow installed from (source or binary): pip\nTensorFlow version (use command below): v1.4.0-8-gbca50da6eb 1.4.0\nPython version: 3.6.3\nBazel version (if compiling from source): N/A\nGCC/Compiler version (if compiling from source): N/A\nCUDA/cuDNN version: N/A\nGPU model and memory: N/A\nExact command to reproduce: N/A\n\nDescribe the problem\nProblem is the pathlib module represents filesystem paths although is not accepted in parameters that refer to a directory or file in the TensorFlow API. The proposed feature would enable accepting these objects while still maintaining compatibility with existing str type paths.", "body": "With python 3.6, [PEP 519](https://www.python.org/dev/peps/pep-0519/) and the [pathlib](https://docs.python.org/3/library/pathlib.html) module, it would be great if TensorFlow directory parameters accepted PathLike objects.\r\n\r\nFrom the [Backwards Compatibility](https://www.python.org/dev/peps/pep-0519/#backwards-compatibility) part of the documentation, a suggested implementation is:\r\n```python\r\npath.__fspath__() if hasattr(path, \"__fspath__\") else path\r\n```\r\n\r\nWith such an implementation, it seems `path` in the code above can be any file system representation of `str`, `bytes` or `pathlib.Path`. For my case, I was using/looking at the [`tf.estimator.model_dir`](https://github.com/tensorflow/tensorflow/blob/r1.4/tensorflow/python/estimator/estimator.py#L122-L126) parameter, but for consistency I assume it would also need applying in all cases where a path is accepted such as `tf.gfile`\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: macOS\r\n- **TensorFlow installed from (source or binary)**: pip\r\n- **TensorFlow version (use command below)**: v1.4.0-8-gbca50da6eb 1.4.0\r\n- **Python version**: 3.6.3\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: N/A\r\n\r\n### Describe the problem\r\nProblem is the `pathlib` module represents filesystem paths although is not accepted in parameters that refer to a directory or file in the TensorFlow API. The proposed feature would enable accepting these objects while still maintaining compatibility with existing `str` type paths.\r\n"}