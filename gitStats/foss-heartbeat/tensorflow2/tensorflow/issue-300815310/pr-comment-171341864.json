{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/171341864", "pull_request_review_id": 99897985, "id": 171341864, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MTM0MTg2NA==", "diff_hunk": "@@ -0,0 +1,47 @@\n+/* Copyright 2018 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+\n+#ifndef TENSORFLOW_CONTRIB_TENSORRT_RESOURCES_TRTRESOURCEMANAGER_H_\n+\n+#define TENSORFLOW_CONTRIB_TENSORRT_RESOURCE_TRTRESOURCEMANAGER_H_\n+#include <memory>\n+\n+#include <string>\n+#include <unordered_map>\n+#include \"tensorflow/core/framework/resource_mgr.h\"\n+#include \"tensorflow/core/platform/mutex.h\"\n+\n+namespace tensorflow {\n+namespace trt {\n+class TRTResourceManager {\n+  TRTResourceManager() = default;\n+\n+ public:\n+  static std::shared_ptr<TRTResourceManager> instance() {", "path": "tensorflow/contrib/tensorrt/resources/TRTResourceManager.h", "position": null, "original_position": 32, "commit_id": "5e5671e692db0533dfec66d63b8e7c8d06bc4942", "original_commit_id": "811c5ebd9510d723217363fffcb258126bec3ea2", "user": {"login": "aaroey", "id": 31743510, "node_id": "MDQ6VXNlcjMxNzQzNTEw", "avatar_url": "https://avatars0.githubusercontent.com/u/31743510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaroey", "html_url": "https://github.com/aaroey", "followers_url": "https://api.github.com/users/aaroey/followers", "following_url": "https://api.github.com/users/aaroey/following{/other_user}", "gists_url": "https://api.github.com/users/aaroey/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaroey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaroey/subscriptions", "organizations_url": "https://api.github.com/users/aaroey/orgs", "repos_url": "https://api.github.com/users/aaroey/repos", "events_url": "https://api.github.com/users/aaroey/events{/privacy}", "received_events_url": "https://api.github.com/users/aaroey/received_events", "type": "User", "site_admin": false}, "body": "Since this is a static variable which never gets freed, a normal pointer is enough (instead of a shared_ptr)?\r\n\r\nAlso I believe having static/global variables with non-trivial destructor is forbidden by the style guide and will cause test to fail, see https://google.github.io/styleguide/cppguide.html#Static_and_Global_Variables.", "created_at": "2018-02-28T18:34:58Z", "updated_at": "2018-03-01T22:59:18Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/17309#discussion_r171341864", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/17309", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/171341864"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/17309#discussion_r171341864"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/17309"}}, "body_html": "<p>Since this is a static variable which never gets freed, a normal pointer is enough (instead of a shared_ptr)?</p>\n<p>Also I believe having static/global variables with non-trivial destructor is forbidden by the style guide and will cause test to fail, see <a href=\"https://google.github.io/styleguide/cppguide.html#Static_and_Global_Variables\" rel=\"nofollow\">https://google.github.io/styleguide/cppguide.html#Static_and_Global_Variables</a>.</p>", "body_text": "Since this is a static variable which never gets freed, a normal pointer is enough (instead of a shared_ptr)?\nAlso I believe having static/global variables with non-trivial destructor is forbidden by the style guide and will cause test to fail, see https://google.github.io/styleguide/cppguide.html#Static_and_Global_Variables."}