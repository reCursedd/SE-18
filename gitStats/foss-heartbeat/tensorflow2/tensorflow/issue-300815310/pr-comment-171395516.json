{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/171395516", "pull_request_review_id": 100241360, "id": 171395516, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MTM5NTUxNg==", "diff_hunk": "@@ -0,0 +1,134 @@\n+/* Copyright 2018 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+\n+#include \"tensorflow/contrib/tensorrt/kernels/trt_calib_op.h\"\n+#include \"tensorflow/contrib/tensorrt/resources/TRTInt8Calibrator.h\"\n+#include \"tensorflow/contrib/tensorrt/resources/TRTResourceManager.h\"\n+#include \"tensorflow/contrib/tensorrt/resources/TRTResources.h\"\n+#include \"tensorflow/core/framework/node_def.pb.h\"\n+#include \"tensorflow/core/framework/tensor.h\"\n+#include \"tensorflow/core/framework/tensor_shape.h\"\n+#include \"tensorflow/core/framework/tensor_types.h\"\n+#include \"tensorflow/core/framework/types.h\"\n+\n+#if GOOGLE_CUDA\n+#if GOOGLE_TENSORRT\n+#include \"cuda_runtime_api.h\"\n+#include \"tensorrt/include/NvInfer.h\"\n+\n+namespace tensorflow {\n+namespace trt {\n+TRTCalibOp::TRTCalibOp(OpKernelConstruction* context) : OpKernel(context) {\n+  OP_REQUIRES_OK(context, context->GetAttr(\"segment_nodes\", &segment_nodes_));\n+  OP_REQUIRES_OK(context, context->GetAttr(\"input_names\", &input_names_));\n+  OP_REQUIRES_OK(context, context->GetAttr(\"resource_name\", &resource_name_));\n+};\n+\n+//  case statement for type\n+#define TYPECASE(dt, X, Y)                                             \\\n+  case dt: {                                                           \\\n+    Y = (void*)X->flat<tensorflow::EnumToDataType<dt>::Type>().data(); \\\n+    break;                                                             \\\n+  }\n+\n+// macro to get tensor data address pointed by tensor_ptr into\n+// void* dest_ptr\n+#define GET_TENSOR_ADDRESS(tensor_ptr, dest_ptr)               \\\n+  {                                                            \\\n+    auto TENSOR_TYPE = tensor_ptr->dtype();                    \\\n+    switch (TENSOR_TYPE) {                                     \\\n+      TYPECASE(tensorflow::DT_FLOAT, tensor_ptr, dest_ptr);    \\\n+      TYPECASE(tensorflow::DT_HALF, tensor_ptr, dest_ptr);     \\\n+      TYPECASE(tensorflow::DT_INT8, tensor_ptr, dest_ptr);     \\\n+      default: {                                               \\\n+        LOG(FATAL) << \"Unsupported Data type \"                 \\\n+                   << tensorflow::DataTypeString(TENSOR_TYPE); \\\n+        break;                                                 \\\n+      }                                                        \\\n+    }                                                          \\\n+  }\n+\n+void TRTCalibOp::Compute(tensorflow::OpKernelContext* ctx) {\n+  auto trt_rm = tensorflow::trt::TRTResourceManager::instance();\n+  auto resmgr = trt_rm->getManager(\"TRTCalibOps\");", "path": "tensorflow/contrib/tensorrt/kernels/trt_calib_op.cc", "position": null, "original_position": 65, "commit_id": "5e5671e692db0533dfec66d63b8e7c8d06bc4942", "original_commit_id": "811c5ebd9510d723217363fffcb258126bec3ea2", "user": {"login": "samikama", "id": 10539540, "node_id": "MDQ6VXNlcjEwNTM5NTQw", "avatar_url": "https://avatars0.githubusercontent.com/u/10539540?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samikama", "html_url": "https://github.com/samikama", "followers_url": "https://api.github.com/users/samikama/followers", "following_url": "https://api.github.com/users/samikama/following{/other_user}", "gists_url": "https://api.github.com/users/samikama/gists{/gist_id}", "starred_url": "https://api.github.com/users/samikama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samikama/subscriptions", "organizations_url": "https://api.github.com/users/samikama/orgs", "repos_url": "https://api.github.com/users/samikama/repos", "events_url": "https://api.github.com/users/samikama/events{/privacy}", "received_events_url": "https://api.github.com/users/samikama/received_events", "type": "User", "site_admin": false}, "body": "I will test this with our next PR. I am not sure if we have access to device at the conversion time. This manager is populated at the calibration conversion and consumed at the inference conversion. Please let it stay as it is right now. We will change as you propose if we can make it work with the conversion in the next PR.", "created_at": "2018-02-28T21:46:12Z", "updated_at": "2018-03-01T22:59:18Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/17309#discussion_r171395516", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/17309", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/171395516"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/17309#discussion_r171395516"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/17309"}}, "body_html": "<p>I will test this with our next PR. I am not sure if we have access to device at the conversion time. This manager is populated at the calibration conversion and consumed at the inference conversion. Please let it stay as it is right now. We will change as you propose if we can make it work with the conversion in the next PR.</p>", "body_text": "I will test this with our next PR. I am not sure if we have access to device at the conversion time. This manager is populated at the calibration conversion and consumed at the inference conversion. Please let it stay as it is right now. We will change as you propose if we can make it work with the conversion in the next PR.", "in_reply_to_id": 171344108}