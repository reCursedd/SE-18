{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/171332731", "pull_request_review_id": 99897985, "id": 171332731, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MTMzMjczMQ==", "diff_hunk": "@@ -0,0 +1,104 @@\n+/* Copyright 2018 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+\n+#include \"tensorflow/contrib/tensorrt/resources/TRTInt8Calibrator.h\"\n+\n+#include <atomic>\n+#include <chrono>\n+#include <unordered_map>\n+#include \"cuda_runtime_api.h\"\n+\n+#include \"tensorflow/core/platform/logging.h\"\n+\n+namespace tensorflow {\n+namespace trt {\n+// set the batch size before constructing the thread to execute engine\n+int TRTInt8Calibrator::getBatchSize() const { return batch_size_; }\n+\n+TRTInt8Calibrator::TRTInt8Calibrator(\n+    const std::unordered_map<string, std::pair<void*, size_t>>& dev_buffers,\n+    int batch_size, string engineName)\n+    : batch_size_(batch_size),\n+      done_(false),\n+      dev_buffers_(dev_buffers),\n+      calib_running_(false),\n+      engine_name_(engineName) {}\n+\n+bool TRTInt8Calibrator::setBatch(\n+    const std::unordered_map<string, void*>& data) {\n+  if (done_) return false;\n+  while (calib_running_.load(\n+      std::memory_order_acquire)) {  // wait while calibration is running\n+    tensorflow::mutex_lock l(cond_mtx_);", "path": "tensorflow/contrib/tensorrt/resources/TRTInt8Calibrator.cc", "position": null, "original_position": 44, "commit_id": "5e5671e692db0533dfec66d63b8e7c8d06bc4942", "original_commit_id": "811c5ebd9510d723217363fffcb258126bec3ea2", "user": {"login": "aaroey", "id": 31743510, "node_id": "MDQ6VXNlcjMxNzQzNTEw", "avatar_url": "https://avatars0.githubusercontent.com/u/31743510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaroey", "html_url": "https://github.com/aaroey", "followers_url": "https://api.github.com/users/aaroey/followers", "following_url": "https://api.github.com/users/aaroey/following{/other_user}", "gists_url": "https://api.github.com/users/aaroey/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaroey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaroey/subscriptions", "organizations_url": "https://api.github.com/users/aaroey/orgs", "repos_url": "https://api.github.com/users/aaroey/repos", "events_url": "https://api.github.com/users/aaroey/events{/privacy}", "received_events_url": "https://api.github.com/users/aaroey/received_events", "type": "User", "site_admin": false}, "body": "I think it'll make more sense to put the mutex_lock definition outside (before) the loop, otherwise these two lines is identical (as safe as) to just sleep(50ms)?\r\n\r\n(If moving the lock out we need to do the notification after releasing the lock)", "created_at": "2018-02-28T18:03:24Z", "updated_at": "2018-03-01T22:59:18Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/17309#discussion_r171332731", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/17309", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/171332731"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/17309#discussion_r171332731"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/17309"}}, "body_html": "<p>I think it'll make more sense to put the mutex_lock definition outside (before) the loop, otherwise these two lines is identical (as safe as) to just sleep(50ms)?</p>\n<p>(If moving the lock out we need to do the notification after releasing the lock)</p>", "body_text": "I think it'll make more sense to put the mutex_lock definition outside (before) the loop, otherwise these two lines is identical (as safe as) to just sleep(50ms)?\n(If moving the lock out we need to do the notification after releasing the lock)"}