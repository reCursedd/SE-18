{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/363804356", "html_url": "https://github.com/tensorflow/tensorflow/issues/14380#issuecomment-363804356", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14380", "id": 363804356, "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzgwNDM1Ng==", "user": {"login": "albenoit", "id": 2619976, "node_id": "MDQ6VXNlcjI2MTk5NzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2619976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/albenoit", "html_url": "https://github.com/albenoit", "followers_url": "https://api.github.com/users/albenoit/followers", "following_url": "https://api.github.com/users/albenoit/following{/other_user}", "gists_url": "https://api.github.com/users/albenoit/gists{/gist_id}", "starred_url": "https://api.github.com/users/albenoit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/albenoit/subscriptions", "organizations_url": "https://api.github.com/users/albenoit/orgs", "repos_url": "https://api.github.com/users/albenoit/repos", "events_url": "https://api.github.com/users/albenoit/events{/privacy}", "received_events_url": "https://api.github.com/users/albenoit/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-07T15:27:31Z", "updated_at": "2018-02-09T06:42:31Z", "author_association": "NONE", "body_html": "<p>Hi all,<br>\nI am facing the same issues on undeclared inclusions on REHL Scientific Linux 6 ONLY when compiling with cuda (CPU mode works), according to the discussion above and other threads such as <a href=\"https://github.com/bazelbuild/bazel/issues/4365\" data-hovercard-type=\"issue\" data-hovercard-url=\"/bazelbuild/bazel/issues/4365/hovercard\">#4365</a>, I did the following additional changes to my previous issue on an older Tensorflow version <a href=\"https://github.com/tensorflow/tensorflow/issues/8529\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/8529/hovercard\">#8529</a>. It finally worked and actually the main solution comes from removing the \"-no-canonical-prefixes\" option. Proposals of adding --cxxopts such as --cxxopt=\"-I/opt/rh/devtoolset-4/root/usr/include/c++/5.3.1/include/\" --cxxopt=\"-I/opt/rh/devtoolset-4/root/usr/lib/gcc/x86_64-redhat-linux/5.3.1/include\" are in the end not required.</p>\n<p>Here is an overview of my config:<br>\nREHL SL6, bazel 0.8.0, tensorflow r1.5, CUDA 8.0, cudnn7.0.4, using gcc and compilation stuff from the devtoolset-4 module</p>\n<p>Build process:</p>\n<ol start=\"0\">\n<li>delete the bazel cache folder</li>\n<li>setup the crosstool files following but updating paths to the devtoolset-<strong>4</strong> version <a href=\"https://github.com/tensorflow/tensorflow/issues/8529\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/8529/hovercard\">#8529</a>.</li>\n<li>apply the fix proposed by ilya-biryukov removing the \"-no-canonical-prefixes\" option in third_party/gpus/cuda_configure.bzl file</li>\n</ol>\n<pre><code>-  result = repository_ctx.execute([cc, \"-no-canonical-prefixes\",\n-                                   \"-E\", \"-x\" + lang, \"-\", \"-v\"])\n\n+  result = repository_ctx.execute([cc, \"-E\", \"-x\" + lang, \"-\", \"-v\"])\n  index1 = result.stderr.find(_INC_DIR_MARKER_BEGIN)\n  if index1 == -1:\n\n</code></pre>\n<ol start=\"3\">\n<li>use the build command:<br>\nbazel build --linkopt='-lrt' -c opt --copt=-mavx --copt=-mavx2 --copt=-msse4.2 --copt=-msse4.1 --copt=-mfma --copt=-msse3 --config=cuda --genrule_strategy=standalone --spawn_strategy=standalone //tensorflow/tools/pip_package:build_pip_package</li>\n</ol>\n<p>It finally worked... waiting for this for sooooo long, thanks to all with your hints and discussions !</p>", "body_text": "Hi all,\nI am facing the same issues on undeclared inclusions on REHL Scientific Linux 6 ONLY when compiling with cuda (CPU mode works), according to the discussion above and other threads such as #4365, I did the following additional changes to my previous issue on an older Tensorflow version #8529. It finally worked and actually the main solution comes from removing the \"-no-canonical-prefixes\" option. Proposals of adding --cxxopts such as --cxxopt=\"-I/opt/rh/devtoolset-4/root/usr/include/c++/5.3.1/include/\" --cxxopt=\"-I/opt/rh/devtoolset-4/root/usr/lib/gcc/x86_64-redhat-linux/5.3.1/include\" are in the end not required.\nHere is an overview of my config:\nREHL SL6, bazel 0.8.0, tensorflow r1.5, CUDA 8.0, cudnn7.0.4, using gcc and compilation stuff from the devtoolset-4 module\nBuild process:\n\ndelete the bazel cache folder\nsetup the crosstool files following but updating paths to the devtoolset-4 version #8529.\napply the fix proposed by ilya-biryukov removing the \"-no-canonical-prefixes\" option in third_party/gpus/cuda_configure.bzl file\n\n-  result = repository_ctx.execute([cc, \"-no-canonical-prefixes\",\n-                                   \"-E\", \"-x\" + lang, \"-\", \"-v\"])\n\n+  result = repository_ctx.execute([cc, \"-E\", \"-x\" + lang, \"-\", \"-v\"])\n  index1 = result.stderr.find(_INC_DIR_MARKER_BEGIN)\n  if index1 == -1:\n\n\n\nuse the build command:\nbazel build --linkopt='-lrt' -c opt --copt=-mavx --copt=-mavx2 --copt=-msse4.2 --copt=-msse4.1 --copt=-mfma --copt=-msse3 --config=cuda --genrule_strategy=standalone --spawn_strategy=standalone //tensorflow/tools/pip_package:build_pip_package\n\nIt finally worked... waiting for this for sooooo long, thanks to all with your hints and discussions !", "body": "Hi all,\r\nI am facing the same issues on undeclared inclusions on REHL Scientific Linux 6 ONLY when compiling with cuda (CPU mode works), according to the discussion above and other threads such as [#4365](https://github.com/bazelbuild/bazel/issues/4365), I did the following additional changes to my previous issue on an older Tensorflow version [#8529](https://github.com/tensorflow/tensorflow/issues/8529). It finally worked and actually the main solution comes from removing the \"-no-canonical-prefixes\" option. Proposals of adding --cxxopts such as --cxxopt=\"-I/opt/rh/devtoolset-4/root/usr/include/c++/5.3.1/include/\" --cxxopt=\"-I/opt/rh/devtoolset-4/root/usr/lib/gcc/x86_64-redhat-linux/5.3.1/include\" are in the end not required.\r\n\r\nHere is an overview of my config:\r\nREHL SL6, bazel 0.8.0, tensorflow r1.5, CUDA 8.0, cudnn7.0.4, using gcc and compilation stuff from the devtoolset-4 module\r\n\r\nBuild process:\r\n\r\n0. delete the bazel cache folder\r\n1. setup the crosstool files following but updating paths to the devtoolset-**4** version [#8529](https://github.com/tensorflow/tensorflow/issues/8529).\r\n2. apply the fix proposed by ilya-biryukov removing the \"-no-canonical-prefixes\" option in third_party/gpus/cuda_configure.bzl file\r\n ```\r\n-  result = repository_ctx.execute([cc, \"-no-canonical-prefixes\",\r\n-                                   \"-E\", \"-x\" + lang, \"-\", \"-v\"])\r\n\r\n+  result = repository_ctx.execute([cc, \"-E\", \"-x\" + lang, \"-\", \"-v\"])\r\n   index1 = result.stderr.find(_INC_DIR_MARKER_BEGIN)\r\n   if index1 == -1:\r\n \r\n```\r\n3. use the build command:\r\nbazel build --linkopt='-lrt' -c opt --copt=-mavx --copt=-mavx2 --copt=-msse4.2 --copt=-msse4.1 --copt=-mfma --copt=-msse3 --config=cuda --genrule_strategy=standalone --spawn_strategy=standalone //tensorflow/tools/pip_package:build_pip_package\r\n\r\nIt finally worked... waiting for this for sooooo long, thanks to all with your hints and discussions !\r\n"}