{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/161075260", "pull_request_review_id": 88305935, "id": 161075260, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MTA3NTI2MA==", "diff_hunk": "@@ -2515,13 +2539,24 @@ def where(condition, x=None, y=None, name=None):\n   has the same shape as `x` and `y`, then it chooses which element to copy from\n   `x` and `y`.\n \n+  If `broadcast` is True, then values of `x`, `y` and `condition` are", "path": "tensorflow/python/ops/array_ops.py", "position": null, "original_position": 53, "commit_id": "fec417da16cae270528fdf895c8b9e11fd72934a", "original_commit_id": "758804d9700509372ed4b001598b1a84f15fe45a", "user": {"login": "yongtang", "id": 6932348, "node_id": "MDQ6VXNlcjY5MzIzNDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/6932348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yongtang", "html_url": "https://github.com/yongtang", "followers_url": "https://api.github.com/users/yongtang/followers", "following_url": "https://api.github.com/users/yongtang/following{/other_user}", "gists_url": "https://api.github.com/users/yongtang/gists{/gist_id}", "starred_url": "https://api.github.com/users/yongtang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yongtang/subscriptions", "organizations_url": "https://api.github.com/users/yongtang/orgs", "repos_url": "https://api.github.com/users/yongtang/repos", "events_url": "https://api.github.com/users/yongtang/events{/privacy}", "received_events_url": "https://api.github.com/users/yongtang/received_events", "type": "User", "site_admin": false}, "body": "Thanks @ebrevdo. Initially I though the behaviors were different with respect to `broadcast`. Now think again it might be possible to not break the old behavior, while at the same time extend the `broadcast` \ud83d\udc4d . Let me take a look and update the PR.", "created_at": "2018-01-11T21:06:08Z", "updated_at": "2018-11-06T18:25:08Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/15982#discussion_r161075260", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/15982", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/161075260"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/15982#discussion_r161075260"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/15982"}}, "body_html": "<p>Thanks <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1794715\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ebrevdo\">@ebrevdo</a>. Initially I though the behaviors were different with respect to <code>broadcast</code>. Now think again it might be possible to not break the old behavior, while at the same time extend the <code>broadcast</code> <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f44d.png\">\ud83d\udc4d</g-emoji> . Let me take a look and update the PR.</p>", "body_text": "Thanks @ebrevdo. Initially I though the behaviors were different with respect to broadcast. Now think again it might be possible to not break the old behavior, while at the same time extend the broadcast \ud83d\udc4d . Let me take a look and update the PR.", "in_reply_to_id": 160868787}