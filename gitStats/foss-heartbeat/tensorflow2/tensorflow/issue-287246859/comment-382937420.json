{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/382937420", "html_url": "https://github.com/tensorflow/tensorflow/pull/15982#issuecomment-382937420", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15982", "id": 382937420, "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjkzNzQyMA==", "user": {"login": "shoyer", "id": 1217238, "node_id": "MDQ6VXNlcjEyMTcyMzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shoyer", "html_url": "https://github.com/shoyer", "followers_url": "https://api.github.com/users/shoyer/followers", "following_url": "https://api.github.com/users/shoyer/following{/other_user}", "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}", "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions", "organizations_url": "https://api.github.com/users/shoyer/orgs", "repos_url": "https://api.github.com/users/shoyer/repos", "events_url": "https://api.github.com/users/shoyer/events{/privacy}", "received_events_url": "https://api.github.com/users/shoyer/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-20T01:40:26Z", "updated_at": "2018-04-20T01:41:34Z", "author_association": "MEMBER", "body_html": "<p>\"If x and y are vectors of higher rank, then condition must be either a vector with size matching the first dimension of x, or must have the same shape as x.\"</p>\n<p>Could we deprecate this behavior from <code>tf.where</code> (start issuing <code>FutureWarning</code>) and change it in some future API breaking release?</p>\n<p>To ease the transition, we could safely add broadcasting support when the total number of dimensions match between all arguments, or add a function to contrib (temporarily) with the appropriate behavior.</p>\n<p>Deviating from NumPy's broadcasting rules feels like a design mistake to me, and I suspect this will be a repeated source of confusion in the future.</p>", "body_text": "\"If x and y are vectors of higher rank, then condition must be either a vector with size matching the first dimension of x, or must have the same shape as x.\"\nCould we deprecate this behavior from tf.where (start issuing FutureWarning) and change it in some future API breaking release?\nTo ease the transition, we could safely add broadcasting support when the total number of dimensions match between all arguments, or add a function to contrib (temporarily) with the appropriate behavior.\nDeviating from NumPy's broadcasting rules feels like a design mistake to me, and I suspect this will be a repeated source of confusion in the future.", "body": "\"If x and y are vectors of higher rank, then condition must be either a vector with size matching the first dimension of x, or must have the same shape as x.\"\r\n\r\nCould we deprecate this behavior from `tf.where` (start issuing `FutureWarning`) and change it in some future API breaking release?\r\n\r\nTo ease the transition, we could safely add broadcasting support when the total number of dimensions match between all arguments, or add a function to contrib (temporarily) with the appropriate behavior.\r\n\r\nDeviating from NumPy's broadcasting rules feels like a design mistake to me, and I suspect this will be a repeated source of confusion in the future."}