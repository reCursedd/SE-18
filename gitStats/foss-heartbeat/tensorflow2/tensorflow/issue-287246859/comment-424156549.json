{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/424156549", "html_url": "https://github.com/tensorflow/tensorflow/pull/15982#issuecomment-424156549", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15982", "id": 424156549, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDE1NjU0OQ==", "user": {"login": "josh11b", "id": 15258583, "node_id": "MDQ6VXNlcjE1MjU4NTgz", "avatar_url": "https://avatars0.githubusercontent.com/u/15258583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josh11b", "html_url": "https://github.com/josh11b", "followers_url": "https://api.github.com/users/josh11b/followers", "following_url": "https://api.github.com/users/josh11b/following{/other_user}", "gists_url": "https://api.github.com/users/josh11b/gists{/gist_id}", "starred_url": "https://api.github.com/users/josh11b/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josh11b/subscriptions", "organizations_url": "https://api.github.com/users/josh11b/orgs", "repos_url": "https://api.github.com/users/josh11b/repos", "events_url": "https://api.github.com/users/josh11b/events{/privacy}", "received_events_url": "https://api.github.com/users/josh11b/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-24T23:18:10Z", "updated_at": "2018-09-24T23:18:10Z", "author_association": "MEMBER", "body_html": "<p>Sorry for the delay!</p>\n<p>For API review:</p>\n<p>Changes to contrib do not require API review. That being said, we'd like to understand what is going on here. Are TF's broadcasting rules in general different than numpy or just for <code>where</code>? Did <code>where</code> have some custom broadcasting logic instead of using the same broadcasting library that other TF ops use? If so why is <code>where</code> special (e.g. is the difference that <code>where</code> takes three arguments and most of our ops that support broadcasting take two)?</p>\n<p>Thanks!</p>", "body_text": "Sorry for the delay!\nFor API review:\nChanges to contrib do not require API review. That being said, we'd like to understand what is going on here. Are TF's broadcasting rules in general different than numpy or just for where? Did where have some custom broadcasting logic instead of using the same broadcasting library that other TF ops use? If so why is where special (e.g. is the difference that where takes three arguments and most of our ops that support broadcasting take two)?\nThanks!", "body": "Sorry for the delay!\r\n\r\nFor API review:\r\n\r\nChanges to contrib do not require API review. That being said, we'd like to understand what is going on here. Are TF's broadcasting rules in general different than numpy or just for `where`? Did `where` have some custom broadcasting logic instead of using the same broadcasting library that other TF ops use? If so why is `where` special (e.g. is the difference that `where` takes three arguments and most of our ops that support broadcasting take two)?\r\n\r\nThanks!"}