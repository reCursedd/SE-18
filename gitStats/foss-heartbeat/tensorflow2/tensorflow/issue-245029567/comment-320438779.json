{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/320438779", "html_url": "https://github.com/tensorflow/tensorflow/issues/11713#issuecomment-320438779", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11713", "id": 320438779, "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDQzODc3OQ==", "user": {"login": "akindyakov", "id": 2223470, "node_id": "MDQ6VXNlcjIyMjM0NzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/2223470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akindyakov", "html_url": "https://github.com/akindyakov", "followers_url": "https://api.github.com/users/akindyakov/followers", "following_url": "https://api.github.com/users/akindyakov/following{/other_user}", "gists_url": "https://api.github.com/users/akindyakov/gists{/gist_id}", "starred_url": "https://api.github.com/users/akindyakov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akindyakov/subscriptions", "organizations_url": "https://api.github.com/users/akindyakov/orgs", "repos_url": "https://api.github.com/users/akindyakov/repos", "events_url": "https://api.github.com/users/akindyakov/events{/privacy}", "received_events_url": "https://api.github.com/users/akindyakov/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-05T11:35:49Z", "updated_at": "2017-08-05T11:35:49Z", "author_association": "CONTRIBUTOR", "body_html": "<p>If what Valgrind has said me is true, the biggest problem is a slow string to float conversion in <a href=\"https://github.com/tensorflow/tensorflow/blame/master/tensorflow/core/lib/strings/numbers.cc\">core/lib/strings/numbers.cc</a>.<br>\nIt seems to be true. There are two string copying, unordered_map using and so on. I can adjust the <a href=\"https://github.com/google/double-conversion\">double-conversion</a> library here. It essential faster.</p>\n<p>There are some inconsistencies with TF str-to-double functions. Double-conversion library has case sensitive way to specify special values <code>NaN</code> and <code>INF</code>. I can create a simple patch to fix case sensibility. Another problem is a length of <code>infinity</code> word. In TF you can write <code>inf</code> and <code>infinity</code>, but double-conversion supports only one. Numpy support only one too (<code>inf</code>). And may be TF can do the same.</p>\n<p>What do you think about it? Can I use this lib here?</p>", "body_text": "If what Valgrind has said me is true, the biggest problem is a slow string to float conversion in core/lib/strings/numbers.cc.\nIt seems to be true. There are two string copying, unordered_map using and so on. I can adjust the double-conversion library here. It essential faster.\nThere are some inconsistencies with TF str-to-double functions. Double-conversion library has case sensitive way to specify special values NaN and INF. I can create a simple patch to fix case sensibility. Another problem is a length of infinity word. In TF you can write inf and infinity, but double-conversion supports only one. Numpy support only one too (inf). And may be TF can do the same.\nWhat do you think about it? Can I use this lib here?", "body": "If what Valgrind has said me is true, the biggest problem is a slow string to float conversion in [core/lib/strings/numbers.cc](https://github.com/tensorflow/tensorflow/blame/master/tensorflow/core/lib/strings/numbers.cc). \r\nIt seems to be true. There are two string copying, unordered_map using and so on. I can adjust the [double-conversion](https://github.com/google/double-conversion) library here. It essential faster.\r\n\r\nThere are some inconsistencies with TF str-to-double functions. Double-conversion library has case sensitive way to specify special values ```NaN``` and ```INF```. I can create a simple patch to fix case sensibility. Another problem is a length of ```infinity``` word. In TF you can write ```inf``` and ```infinity```, but double-conversion supports only one. Numpy support only one too (```inf```). And may be TF can do the same.\r\n\r\nWhat do you think about it? Can I use this lib here?"}