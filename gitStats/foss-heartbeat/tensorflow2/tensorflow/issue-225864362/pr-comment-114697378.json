{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/114697378", "pull_request_review_id": 36184614, "id": 114697378, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNDY5NzM3OA==", "diff_hunk": "@@ -2050,30 +2068,34 @@ def __call__(self, inputs, state):\n         f_parts.append(f_k)\n         o_parts.append(o_k)\n \n-      #it is more efficient to have per total gate biases compared to per gate, per group biases\n-      bi = vs.get_variable(name=\"biases_i\",\n+      bi = vs.get_variable(name=\"bias_i\",\n                            shape=[self._num_units],\n                            dtype=dtype,\n-                           initializer=init_ops.constant_initializer(0.0, dtype=dtype))\n-      bj = vs.get_variable(name=\"biases_j\",\n+                           initializer=\n+                           init_ops.constant_initializer(0.0, dtype=dtype))\n+      bj = vs.get_variable(name=\"bias_j\",\n                            shape=[self._num_units],\n                            dtype=dtype,\n-                           initializer=init_ops.constant_initializer(0.0, dtype=dtype))\n-      bf = vs.get_variable(name=\"biases_f\",\n+                           initializer=\n+                           init_ops.constant_initializer(0.0, dtype=dtype))\n+      bf = vs.get_variable(name=\"bias_f\",\n                            shape=[self._num_units],\n                            dtype=dtype,\n-                           initializer=init_ops.constant_initializer(0.0, dtype=dtype))\n-      bo = vs.get_variable(name=\"biases_o\",\n+                           initializer=\n+                           init_ops.constant_initializer(0.0, dtype=dtype))\n+      bo = vs.get_variable(name=\"bias_o\",\n                            shape=[self._num_units],\n                            dtype=dtype,\n-                           initializer=init_ops.constant_initializer(0.0, dtype=dtype))\n+                           initializer=\n+                           init_ops.constant_initializer(0.0, dtype=dtype))\n \n       i = nn_ops.bias_add(array_ops.concat(i_parts, axis=1), bi)\n       j = nn_ops.bias_add(array_ops.concat(j_parts, axis=1), bj)\n       f = nn_ops.bias_add(array_ops.concat(f_parts, axis=1), bf)\n       o = nn_ops.bias_add(array_ops.concat(o_parts, axis=1), bo)\n \n-    c = math_ops.sigmoid(f + self._forget_bias) * c_prev + math_ops.sigmoid(i) * math_ops.tanh(j)\n+    c = math_ops.sigmoid(f + self._forget_bias) * c_prev + \\", "path": "tensorflow/contrib/rnn/python/ops/rnn_cell.py", "position": null, "original_position": 194, "commit_id": "103a31c06570b93905c6e9aa118c1efd5463f773", "original_commit_id": "000b1c7b93ea669ff187d5b4cca22afa8169500e", "user": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "body": "we don't allow backslash continuations in python code; but you could do:\r\n\r\n```\r\nc = (math_ops.sigmoid(...) * c_prev +\r\n     math_ops.sigmoid(i) * ...)", "created_at": "2017-05-04T04:08:34Z", "updated_at": "2017-05-04T04:29:30Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/9606#discussion_r114697378", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/9606", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/114697378"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/9606#discussion_r114697378"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/9606"}}, "body_html": "<p>we don't allow backslash continuations in python code; but you could do:</p>\n<pre><code>c = (math_ops.sigmoid(...) * c_prev +\n     math_ops.sigmoid(i) * ...)\n</code></pre>", "body_text": "we don't allow backslash continuations in python code; but you could do:\nc = (math_ops.sigmoid(...) * c_prev +\n     math_ops.sigmoid(i) * ...)"}