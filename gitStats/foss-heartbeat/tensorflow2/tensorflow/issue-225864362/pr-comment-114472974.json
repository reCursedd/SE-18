{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/114472974", "pull_request_review_id": 35940332, "id": 114472974, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNDQ3Mjk3NA==", "diff_hunk": "@@ -906,6 +906,56 @@ def testHighwayWrapper(self):\n       # States are left untouched\n       self.assertAllClose(res[2], res[3])\n \n+  def testGLSTMCell(self):\n+    #First test that GLSTM matches LSTM when number_of_groups = 1\n+    batch_size = 2\n+    num_units = 4\n+    number_of_groups = 1\n+\n+    with self.test_session() as sess:\n+      with variable_scope.variable_scope(\n+          \"root1\", initializer=init_ops.constant_initializer(0.5)):\n+        x = array_ops.ones([batch_size, num_units])\n+        gcell = rnn_cell.GLSTMCell(num_units=num_units, number_of_groups=number_of_groups)\n+        cell = core_rnn_cell_impl.LSTMCell(num_units=num_units)\n+        self.assertTrue(isinstance(gcell.state_size, tuple))\n+        zero_state = gcell.zero_state(batch_size=batch_size, dtype=dtypes.float32)\n+        gh, gs = gcell(x, zero_state)\n+        h, g = cell(x, zero_state)\n+\n+        sess.run([variables.global_variables_initializer()])\n+        resG = sess.run([gh, gs])\n+        res = sess.run([h, g])\n+\n+        self.assertAllEqual(resG[0], res[0])", "path": "tensorflow/contrib/rnn/python/kernel_tests/rnn_cell_test.py", "position": null, "original_position": 25, "commit_id": "103a31c06570b93905c6e9aa118c1efd5463f773", "original_commit_id": "58bfb9af36da88b5e141680a01abd124eaf717fd", "user": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "body": "can you use assertAllClose?  floating equality is not guaranteed in general.", "created_at": "2017-05-03T05:06:17Z", "updated_at": "2017-05-04T04:29:30Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/9606#discussion_r114472974", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/9606", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/114472974"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/9606#discussion_r114472974"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/9606"}}, "body_html": "<p>can you use assertAllClose?  floating equality is not guaranteed in general.</p>", "body_text": "can you use assertAllClose?  floating equality is not guaranteed in general."}