{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/320093539", "html_url": "https://github.com/tensorflow/tensorflow/pull/12010#issuecomment-320093539", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12010", "id": 320093539, "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDA5MzUzOQ==", "user": {"login": "benoitsteiner", "id": 6969686, "node_id": "MDQ6VXNlcjY5Njk2ODY=", "avatar_url": "https://avatars0.githubusercontent.com/u/6969686?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benoitsteiner", "html_url": "https://github.com/benoitsteiner", "followers_url": "https://api.github.com/users/benoitsteiner/followers", "following_url": "https://api.github.com/users/benoitsteiner/following{/other_user}", "gists_url": "https://api.github.com/users/benoitsteiner/gists{/gist_id}", "starred_url": "https://api.github.com/users/benoitsteiner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benoitsteiner/subscriptions", "organizations_url": "https://api.github.com/users/benoitsteiner/orgs", "repos_url": "https://api.github.com/users/benoitsteiner/repos", "events_url": "https://api.github.com/users/benoitsteiner/events{/privacy}", "received_events_url": "https://api.github.com/users/benoitsteiner/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-03T21:21:23Z", "updated_at": "2017-08-03T21:21:23Z", "author_association": "CONTRIBUTOR", "body_html": "<p>The code fails to compile with the following error:<br>\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/limits:546:64: error: no member named 'max_digits10' in 'std::__1::numeric_limitsEigen::half'<br>\nstatic _LIBCPP_CONSTEXPR const int  max_digits10 = <em><em>base::max_digits10;<br>\n~~~~~~~~^<br>\nexternal/eigen_archive/unsupported/Eigen/CXX11/../../../Eigen/src/Core/NumTraits.h:91:22: note: in instantiation of template class 'std::<em><em>1::numeric_limits' requested here<br>\nIsInteger = std::numeric_limits::is_integer,<br>\n^<br>\nexternal/eigen_archive/unsupported/Eigen/CXX11/../../../Eigen/src/Core/NumTraits.h:150:41: note: in instantiation of template class 'Eigen::GenericNumTraits' requested here<br>\ntemplate struct NumTraits : GenericNumTraits<br>\n^<br>\nexternal/eigen_archive/unsupported/Eigen/CXX11/../../../Eigen/src/Core/functors/UnaryFunctors.h:787:38: note: in instantiation of template class 'Eigen::NumTraits' requested here<br>\ntemplate&lt;typename Scalar,bool iscpx=(NumTraits::IsComplex!=0) &gt; struct scalar_sign_op;<br>\n^<br>\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h:89:60: note: in instantiation of default argument for 'scalar_sign_op' required here<br>\nEIGEN_STRONG_INLINE const TensorCwiseUnaryOp&lt;internal::scalar_sign_op, const Derived&gt;<br>\n^~~~~~~~~~~~~~~~~~~~~~<br>\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h:27:112: note: in instantiation of template class 'Eigen::TensorBase&lt;Eigen::TensorMap&lt;Eigen::Tensor&lt;const Eigen::half, 1, 1, long&gt;, 16, MakePointer&gt;, 0&gt;' requested here<br>\ntemplate&lt;typename PlainObjectType, int Options</em>, template  class MakePointer</em>&gt; class TensorMap : public TensorBase&lt;TensorMap&lt;PlainObjectType, Options</em>, MakePointer</em>&gt; &gt;<br>\n^<br>\ntensorflow/examples/adding_an_op/zero_out_op_kernel_2.cc:66:31: note: in instantiation of template class 'Eigen::TensorMap&lt;Eigen::Tensor&lt;const Eigen::half, 1, 1, long&gt;, 16, MakePointer&gt;' requested here<br>\nauto input = input_tensor.flat();<br>\n^<br>\ntensorflow/examples/adding_an_op/zero_out_op_kernel_2.cc:61:12: note: in instantiation of member function 'ZeroOutOpEigen::half::Compute' requested here<br>\nexplicit ZeroOutOp(OpKernelConstruction* context) : OpKernel(context) {}<br>\n^<br>\ntensorflow/examples/adding_an_op/zero_out_op_kernel_2.cc:114:27: note: in instantiation of member function 'ZeroOutOpEigen::half::ZeroOutOp' requested here<br>\nTF_CALL_REAL_NUMBER_TYPES(REGISTER_KERNEL);</p>", "body_text": "The code fails to compile with the following error:\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/limits:546:64: error: no member named 'max_digits10' in 'std::__1::numeric_limitsEigen::half'\nstatic _LIBCPP_CONSTEXPR const int  max_digits10 = base::max_digits10;\n~~~~~~~~^\nexternal/eigen_archive/unsupported/Eigen/CXX11/../../../Eigen/src/Core/NumTraits.h:91:22: note: in instantiation of template class 'std::1::numeric_limits' requested here\nIsInteger = std::numeric_limits::is_integer,\n^\nexternal/eigen_archive/unsupported/Eigen/CXX11/../../../Eigen/src/Core/NumTraits.h:150:41: note: in instantiation of template class 'Eigen::GenericNumTraits' requested here\ntemplate struct NumTraits : GenericNumTraits\n^\nexternal/eigen_archive/unsupported/Eigen/CXX11/../../../Eigen/src/Core/functors/UnaryFunctors.h:787:38: note: in instantiation of template class 'Eigen::NumTraits' requested here\ntemplate<typename Scalar,bool iscpx=(NumTraits::IsComplex!=0) > struct scalar_sign_op;\n^\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h:89:60: note: in instantiation of default argument for 'scalar_sign_op' required here\nEIGEN_STRONG_INLINE const TensorCwiseUnaryOp<internal::scalar_sign_op, const Derived>\n^~~~~~~~~~~~~~~~~~~~~~\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h:27:112: note: in instantiation of template class 'Eigen::TensorBase<Eigen::TensorMap<Eigen::Tensor<const Eigen::half, 1, 1, long>, 16, MakePointer>, 0>' requested here\ntemplate<typename PlainObjectType, int Options, template  class MakePointer> class TensorMap : public TensorBase<TensorMap<PlainObjectType, Options, MakePointer> >\n^\ntensorflow/examples/adding_an_op/zero_out_op_kernel_2.cc:66:31: note: in instantiation of template class 'Eigen::TensorMap<Eigen::Tensor<const Eigen::half, 1, 1, long>, 16, MakePointer>' requested here\nauto input = input_tensor.flat();\n^\ntensorflow/examples/adding_an_op/zero_out_op_kernel_2.cc:61:12: note: in instantiation of member function 'ZeroOutOpEigen::half::Compute' requested here\nexplicit ZeroOutOp(OpKernelConstruction* context) : OpKernel(context) {}\n^\ntensorflow/examples/adding_an_op/zero_out_op_kernel_2.cc:114:27: note: in instantiation of member function 'ZeroOutOpEigen::half::ZeroOutOp' requested here\nTF_CALL_REAL_NUMBER_TYPES(REGISTER_KERNEL);", "body": "The code fails to compile with the following error:\r\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/limits:546:64: error: no member named 'max_digits10' in 'std::__1::numeric_limits<Eigen::half>'\r\n    static _LIBCPP_CONSTEXPR const int  max_digits10 = __base::max_digits10;\r\n                                                       ~~~~~~~~^\r\nexternal/eigen_archive/unsupported/Eigen/CXX11/../../../Eigen/src/Core/NumTraits.h:91:22: note: in instantiation of template class 'std::__1::numeric_limits<const Eigen::half>' requested here\r\n    IsInteger = std::numeric_limits<T>::is_integer,\r\n                     ^\r\nexternal/eigen_archive/unsupported/Eigen/CXX11/../../../Eigen/src/Core/NumTraits.h:150:41: note: in instantiation of template class 'Eigen::GenericNumTraits<const Eigen::half>' requested here\r\ntemplate<typename T> struct NumTraits : GenericNumTraits<T>\r\n                                        ^\r\nexternal/eigen_archive/unsupported/Eigen/CXX11/../../../Eigen/src/Core/functors/UnaryFunctors.h:787:38: note: in instantiation of template class 'Eigen::NumTraits<const Eigen::half>' requested here\r\ntemplate<typename Scalar,bool iscpx=(NumTraits<Scalar>::IsComplex!=0) > struct scalar_sign_op;\r\n                                     ^\r\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorBase.h:89:60: note: in instantiation of default argument for 'scalar_sign_op<const Eigen::half>' required here\r\n    EIGEN_STRONG_INLINE const TensorCwiseUnaryOp<internal::scalar_sign_op<Scalar>, const Derived>\r\n                                                           ^~~~~~~~~~~~~~~~~~~~~~\r\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h:27:112: note: in instantiation of template class 'Eigen::TensorBase<Eigen::TensorMap<Eigen::Tensor<const Eigen::half, 1, 1, long>, 16, MakePointer>, 0>' requested here\r\ntemplate<typename PlainObjectType, int Options_, template <class> class MakePointer_> class TensorMap : public TensorBase<TensorMap<PlainObjectType, Options_, MakePointer_> >\r\n                                                                                                               ^\r\ntensorflow/examples/adding_an_op/zero_out_op_kernel_2.cc:66:31: note: in instantiation of template class 'Eigen::TensorMap<Eigen::Tensor<const Eigen::half, 1, 1, long>, 16, MakePointer>' requested here\r\n    auto input = input_tensor.flat<T>();\r\n                              ^\r\ntensorflow/examples/adding_an_op/zero_out_op_kernel_2.cc:61:12: note: in instantiation of member function 'ZeroOutOp<Eigen::half>::Compute' requested here\r\n  explicit ZeroOutOp(OpKernelConstruction* context) : OpKernel(context) {}\r\n           ^\r\ntensorflow/examples/adding_an_op/zero_out_op_kernel_2.cc:114:27: note: in instantiation of member function 'ZeroOutOp<Eigen::half>::ZeroOutOp' requested here\r\nTF_CALL_REAL_NUMBER_TYPES(REGISTER_KERNEL);"}