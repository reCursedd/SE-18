{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/219744404", "html_url": "https://github.com/tensorflow/tensorflow/pull/2374#issuecomment-219744404", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2374", "id": 219744404, "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTc0NDQwNA==", "user": {"login": "girving", "id": 70511, "node_id": "MDQ6VXNlcjcwNTEx", "avatar_url": "https://avatars1.githubusercontent.com/u/70511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/girving", "html_url": "https://github.com/girving", "followers_url": "https://api.github.com/users/girving/followers", "following_url": "https://api.github.com/users/girving/following{/other_user}", "gists_url": "https://api.github.com/users/girving/gists{/gist_id}", "starred_url": "https://api.github.com/users/girving/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/girving/subscriptions", "organizations_url": "https://api.github.com/users/girving/orgs", "repos_url": "https://api.github.com/users/girving/repos", "events_url": "https://api.github.com/users/girving/events{/privacy}", "received_events_url": "https://api.github.com/users/girving/received_events", "type": "User", "site_admin": false}, "created_at": "2016-05-17T14:56:59Z", "updated_at": "2016-05-17T14:56:59Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=15737127\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vincentvanhoucke\">@vincentvanhoucke</a>: To make sure I understand: you mean a convolutional layer but using separate filters for each output point?  You could do it with batch matmul and a bunch of reshaping / tiling logic, but it would be quite slow.  I think we'd need a custom op to it fast.  And actually even the reshaping / tiling logic may be out of reach in a performant way.</p>", "body_text": "@vincentvanhoucke: To make sure I understand: you mean a convolutional layer but using separate filters for each output point?  You could do it with batch matmul and a bunch of reshaping / tiling logic, but it would be quite slow.  I think we'd need a custom op to it fast.  And actually even the reshaping / tiling logic may be out of reach in a performant way.", "body": "@vincentvanhoucke: To make sure I understand: you mean a convolutional layer but using separate filters for each output point?  You could do it with batch matmul and a bunch of reshaping / tiling logic, but it would be quite slow.  I think we'd need a custom op to it fast.  And actually even the reshaping / tiling logic may be out of reach in a performant way.\n"}