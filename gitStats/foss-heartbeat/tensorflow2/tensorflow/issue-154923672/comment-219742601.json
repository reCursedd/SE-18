{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/219742601", "html_url": "https://github.com/tensorflow/tensorflow/pull/2374#issuecomment-219742601", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2374", "id": 219742601, "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTc0MjYwMQ==", "user": {"login": "vincentvanhoucke", "id": 15737127, "node_id": "MDQ6VXNlcjE1NzM3MTI3", "avatar_url": "https://avatars3.githubusercontent.com/u/15737127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vincentvanhoucke", "html_url": "https://github.com/vincentvanhoucke", "followers_url": "https://api.github.com/users/vincentvanhoucke/followers", "following_url": "https://api.github.com/users/vincentvanhoucke/following{/other_user}", "gists_url": "https://api.github.com/users/vincentvanhoucke/gists{/gist_id}", "starred_url": "https://api.github.com/users/vincentvanhoucke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vincentvanhoucke/subscriptions", "organizations_url": "https://api.github.com/users/vincentvanhoucke/orgs", "repos_url": "https://api.github.com/users/vincentvanhoucke/repos", "events_url": "https://api.github.com/users/vincentvanhoucke/events{/privacy}", "received_events_url": "https://api.github.com/users/vincentvanhoucke/received_events", "type": "User", "site_admin": false}, "created_at": "2016-05-17T14:51:35Z", "updated_at": "2016-05-17T14:51:35Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=932136\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/keiji\">@keiji</a> your solution doesn't exactly replicate Alex's model. You use convolutional layers for local3 and local4, whereas Alex used locally-connected layers that do not share their parameters across patches. My guess is that's possibly one reason why you see such a strong effect of initialization.<br>\nCome to think of it, I don't know how one would do that in TensorFlow. <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=70511\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/girving\">@girving</a> do you know who wrote the tutorial and whether they had a specific trick in mind for locally connected, non-convolutional layers?</p>", "body_text": "@keiji your solution doesn't exactly replicate Alex's model. You use convolutional layers for local3 and local4, whereas Alex used locally-connected layers that do not share their parameters across patches. My guess is that's possibly one reason why you see such a strong effect of initialization.\nCome to think of it, I don't know how one would do that in TensorFlow. @girving do you know who wrote the tutorial and whether they had a specific trick in mind for locally connected, non-convolutional layers?", "body": "@keiji your solution doesn't exactly replicate Alex's model. You use convolutional layers for local3 and local4, whereas Alex used locally-connected layers that do not share their parameters across patches. My guess is that's possibly one reason why you see such a strong effect of initialization.\nCome to think of it, I don't know how one would do that in TensorFlow. @girving do you know who wrote the tutorial and whether they had a specific trick in mind for locally connected, non-convolutional layers?\n"}