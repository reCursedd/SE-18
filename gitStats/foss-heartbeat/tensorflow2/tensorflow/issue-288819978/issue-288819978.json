{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16148", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16148/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16148/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16148/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16148", "id": 288819978, "node_id": "MDU6SXNzdWUyODg4MTk5Nzg=", "number": 16148, "title": "non_max_suppression is on CPU?", "user": {"login": "MaskVulcan", "id": 9528071, "node_id": "MDQ6VXNlcjk1MjgwNzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/9528071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaskVulcan", "html_url": "https://github.com/MaskVulcan", "followers_url": "https://api.github.com/users/MaskVulcan/followers", "following_url": "https://api.github.com/users/MaskVulcan/following{/other_user}", "gists_url": "https://api.github.com/users/MaskVulcan/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaskVulcan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaskVulcan/subscriptions", "organizations_url": "https://api.github.com/users/MaskVulcan/orgs", "repos_url": "https://api.github.com/users/MaskVulcan/repos", "events_url": "https://api.github.com/users/MaskVulcan/events{/privacy}", "received_events_url": "https://api.github.com/users/MaskVulcan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-16T08:21:02Z", "updated_at": "2018-01-16T19:33:58Z", "closed_at": "2018-01-16T19:33:57Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:<br>\nYes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:<br>\nUbuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:<br>\nbinary(By pip)</li>\n<li><strong>TensorFlow version (use command below)</strong>:<br>\n1.4.1</li>\n<li><strong>Python version</strong>:<br>\n3.5.2</li>\n<li><strong>Bazel version (if compiling from source)</strong>:</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:</li>\n<li><strong>CUDA/cuDNN version</strong>:<br>\n8.0.61/6.0.21</li>\n<li><strong>GPU model and memory</strong>:<br>\nGTX 1080 Ti, 11172MiB</li>\n<li><strong>Exact command to reproduce</strong>:<br>\npython main.py</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I train my RFCN by tensorflow. My project need very high speed. So I use the profile and I find that non_max_suppression is on CPU? Is there a GPU version?I think if you calculate all pairs of boxes IOU first, then just for-loop once will ultimately boost speed, there have some trick in it, just see the source code in <a href=\"https://github.com/rbgirshick/py-faster-rcnn/tree/master/lib/nms\">https://github.com/rbgirshick/py-faster-rcnn/tree/master/lib/nms</a>. I think cuda version of NMS is faster than CPU version.</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nYes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nUbuntu 16.04\nTensorFlow installed from (source or binary):\nbinary(By pip)\nTensorFlow version (use command below):\n1.4.1\nPython version:\n3.5.2\nBazel version (if compiling from source):\nGCC/Compiler version (if compiling from source):\nCUDA/cuDNN version:\n8.0.61/6.0.21\nGPU model and memory:\nGTX 1080 Ti, 11172MiB\nExact command to reproduce:\npython main.py\n\nDescribe the problem\nI train my RFCN by tensorflow. My project need very high speed. So I use the profile and I find that non_max_suppression is on CPU? Is there a GPU version?I think if you calculate all pairs of boxes IOU first, then just for-loop once will ultimately boost speed, there have some trick in it, just see the source code in https://github.com/rbgirshick/py-faster-rcnn/tree/master/lib/nms. I think cuda version of NMS is faster than CPU version.", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\n     Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\n      Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**:\r\n      binary(By pip)\r\n- **TensorFlow version (use command below)**:\r\n      1.4.1\r\n- **Python version**: \r\n      3.5.2\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**:\r\n    8.0.61/6.0.21\r\n- **GPU model and memory**:\r\n    GTX 1080 Ti, 11172MiB\r\n- **Exact command to reproduce**:\r\n     python main.py\r\n\r\n### Describe the problem\r\n    \r\nI train my RFCN by tensorflow. My project need very high speed. So I use the profile and I find that non_max_suppression is on CPU? Is there a GPU version?I think if you calculate all pairs of boxes IOU first, then just for-loop once will ultimately boost speed, there have some trick in it, just see the source code in [https://github.com/rbgirshick/py-faster-rcnn/tree/master/lib/nms](https://github.com/rbgirshick/py-faster-rcnn/tree/master/lib/nms). I think cuda version of NMS is faster than CPU version.\r\n"}