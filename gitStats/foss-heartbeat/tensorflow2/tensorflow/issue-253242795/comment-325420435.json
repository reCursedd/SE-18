{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/325420435", "html_url": "https://github.com/tensorflow/tensorflow/issues/12644#issuecomment-325420435", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12644", "id": 325420435, "node_id": "MDEyOklzc3VlQ29tbWVudDMyNTQyMDQzNQ==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-28T17:30:09Z", "updated_at": "2017-08-28T17:30:09Z", "author_association": "CONTRIBUTOR", "body_html": "<p>The TensorFlow codebase is not compatible with the <code>/clr</code> flag when building with Visual C++. The MSDN documentation outlines <a href=\"https://msdn.microsoft.com/en-us/library/ffkc918h(v=vs.90).aspx\" rel=\"nofollow\">some of the restrictions</a> when you compile using that flag.</p>\n<p>If there is a compelling reason to build TensorFlow with this flag, and the code changes to make this possible are not too invasive, we might consider accepting a contribution to do so.  Therefore I'll mark this as \"Contributions Welcome\" for now, and we'll keep the issue open if you can give us some more details about why you want to do this.</p>\n<p>(For accessing the TensorFlow API from a managed language, check out <a href=\"https://github.com/migueldeicaza/TensorFlowSharp\">TensorFlowSharp</a> by <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=36863\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/migueldeicaza\">@migueldeicaza</a>. As far as I can tell, it uses P/Invoke to invoke TensorFlow API methods that are implemented in an unmanaged DLL.)</p>", "body_text": "The TensorFlow codebase is not compatible with the /clr flag when building with Visual C++. The MSDN documentation outlines some of the restrictions when you compile using that flag.\nIf there is a compelling reason to build TensorFlow with this flag, and the code changes to make this possible are not too invasive, we might consider accepting a contribution to do so.  Therefore I'll mark this as \"Contributions Welcome\" for now, and we'll keep the issue open if you can give us some more details about why you want to do this.\n(For accessing the TensorFlow API from a managed language, check out TensorFlowSharp by @migueldeicaza. As far as I can tell, it uses P/Invoke to invoke TensorFlow API methods that are implemented in an unmanaged DLL.)", "body": "The TensorFlow codebase is not compatible with the `/clr` flag when building with Visual C++. The MSDN documentation outlines [some of the restrictions](https://msdn.microsoft.com/en-us/library/ffkc918h(v=vs.90).aspx) when you compile using that flag.\r\n\r\nIf there is a compelling reason to build TensorFlow with this flag, and the code changes to make this possible are not too invasive, we might consider accepting a contribution to do so.  Therefore I'll mark this as \"Contributions Welcome\" for now, and we'll keep the issue open if you can give us some more details about why you want to do this.\r\n\r\n(For accessing the TensorFlow API from a managed language, check out [TensorFlowSharp](https://github.com/migueldeicaza/TensorFlowSharp) by @migueldeicaza. As far as I can tell, it uses P/Invoke to invoke TensorFlow API methods that are implemented in an unmanaged DLL.)"}