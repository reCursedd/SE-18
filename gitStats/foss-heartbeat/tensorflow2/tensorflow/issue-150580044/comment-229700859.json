{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/229700859", "html_url": "https://github.com/tensorflow/tensorflow/issues/2075#issuecomment-229700859", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2075", "id": 229700859, "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTcwMDg1OQ==", "user": {"login": "ibab", "id": 890531, "node_id": "MDQ6VXNlcjg5MDUzMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/890531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibab", "html_url": "https://github.com/ibab", "followers_url": "https://api.github.com/users/ibab/followers", "following_url": "https://api.github.com/users/ibab/following{/other_user}", "gists_url": "https://api.github.com/users/ibab/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibab/subscriptions", "organizations_url": "https://api.github.com/users/ibab/orgs", "repos_url": "https://api.github.com/users/ibab/repos", "events_url": "https://api.github.com/users/ibab/events{/privacy}", "received_events_url": "https://api.github.com/users/ibab/received_events", "type": "User", "site_admin": false}, "created_at": "2016-06-30T15:47:30Z", "updated_at": "2016-06-30T15:47:30Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Here's a sketch of a possible Python implementation using <code>cumprod</code>:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">unravel_index</span>(<span class=\"pl-smi\">indices</span>, <span class=\"pl-smi\">shape</span>):\n  <span class=\"pl-k\">with</span> tf.name_scope(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>unravel_index<span class=\"pl-pds\">'</span></span>):\n    indices <span class=\"pl-k\">=</span> tf.expand_dims(indices, <span class=\"pl-c1\">0</span>)\n    shape <span class=\"pl-k\">=</span> tf.expand_dims(shape, <span class=\"pl-c1\">1</span>)\n    strides <span class=\"pl-k\">=</span> tf.cumprod(shape, <span class=\"pl-v\">reverse</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>)\n    strides_shifted <span class=\"pl-k\">=</span> tf.cumprod(shape, <span class=\"pl-v\">exclusive</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>, <span class=\"pl-v\">reverse</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>)\n    <span class=\"pl-k\">return</span> (indices <span class=\"pl-k\">//</span> strides_shifted) <span class=\"pl-k\">%</span> strides\n\ns <span class=\"pl-k\">=</span> tf.Session()\nout <span class=\"pl-k\">=</span> unravel_index([<span class=\"pl-c1\">22</span>, <span class=\"pl-c1\">41</span>, <span class=\"pl-c1\">37</span>], (<span class=\"pl-c1\">7</span>, <span class=\"pl-c1\">6</span>))\n<span class=\"pl-c1\">print</span>(s.run(out))\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> ==&gt; [[3 6 6]</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>      [4 5 1]]</span></pre></div>", "body_text": "Here's a sketch of a possible Python implementation using cumprod:\nimport tensorflow as tf\n\ndef unravel_index(indices, shape):\n  with tf.name_scope('unravel_index'):\n    indices = tf.expand_dims(indices, 0)\n    shape = tf.expand_dims(shape, 1)\n    strides = tf.cumprod(shape, reverse=True)\n    strides_shifted = tf.cumprod(shape, exclusive=True, reverse=True)\n    return (indices // strides_shifted) % strides\n\ns = tf.Session()\nout = unravel_index([22, 41, 37], (7, 6))\nprint(s.run(out))\n# ==> [[3 6 6]\n#      [4 5 1]]", "body": "Here's a sketch of a possible Python implementation using `cumprod`:\n\n``` python\nimport tensorflow as tf\n\ndef unravel_index(indices, shape):\n  with tf.name_scope('unravel_index'):\n    indices = tf.expand_dims(indices, 0)\n    shape = tf.expand_dims(shape, 1)\n    strides = tf.cumprod(shape, reverse=True)\n    strides_shifted = tf.cumprod(shape, exclusive=True, reverse=True)\n    return (indices // strides_shifted) % strides\n\ns = tf.Session()\nout = unravel_index([22, 41, 37], (7, 6))\nprint(s.run(out))\n# ==> [[3 6 6]\n#      [4 5 1]]\n```\n"}