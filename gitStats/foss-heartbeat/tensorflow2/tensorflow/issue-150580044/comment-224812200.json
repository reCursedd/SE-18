{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/224812200", "html_url": "https://github.com/tensorflow/tensorflow/issues/2075#issuecomment-224812200", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2075", "id": 224812200, "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDgxMjIwMA==", "user": {"login": "karlTUM", "id": 15608199, "node_id": "MDQ6VXNlcjE1NjA4MTk5", "avatar_url": "https://avatars2.githubusercontent.com/u/15608199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karlTUM", "html_url": "https://github.com/karlTUM", "followers_url": "https://api.github.com/users/karlTUM/followers", "following_url": "https://api.github.com/users/karlTUM/following{/other_user}", "gists_url": "https://api.github.com/users/karlTUM/gists{/gist_id}", "starred_url": "https://api.github.com/users/karlTUM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karlTUM/subscriptions", "organizations_url": "https://api.github.com/users/karlTUM/orgs", "repos_url": "https://api.github.com/users/karlTUM/repos", "events_url": "https://api.github.com/users/karlTUM/events{/privacy}", "received_events_url": "https://api.github.com/users/karlTUM/received_events", "type": "User", "site_admin": false}, "created_at": "2016-06-09T06:38:14Z", "updated_at": "2016-06-09T06:38:14Z", "author_association": "NONE", "body_html": "<p>Yeah. I know np.unravel_index. but can np.unravel_index be used to build the graph?<br>\nI write a simple example. How to achieve that using Tensorflow?<br>\nThank you.</p>\n<pre><code>ksize = 3\nstride = 1\n\ninput_image = tf.placeholder(tf.float32, name='input_image')\n\n#conv1\nkernel = tf.Variable(tf.truncated_normal([ksize, ksize, 3, 16],stddev=0.1),\n                    name='kernel')\nconv = tf.nn.conv2d(input_image, kernel, [1,stride,stride,1], padding='SAME')\nbiases = tf.Variable(tf.constant(0.0, shape = [16]), name = 'biases')\nbias = tf.nn.bias_add(conv, biases)\nconv1 = tf.nn.relu(bias, name='conv1')\n\n#pool1\npool1, pool1_indices = tf.nn.max_pool_with_argmax(conv1, ksize=[1, 2, 2, 1], \n                                                  strides=[1, 2, 2, 1], \n                                                  padding='SAME', name='pool1')\n\n#upsample by assigning the values of pool1 to the position in unpooling Tensor according to pool1_indices                                                \nindices = pool1_indices\nunravel_pool1_indices = np.unravel_index(indices,[4,32,32,16])\nunravel_pool1_coordinates = np.array(unravel_pool1_indices)\ncoor_shape = np.shape(unravel_pool1_coordinates)\nunravel_pool1_coordinates = np.reshape(unravel_pool1_coordinates,(coor_shape[0],coor_shape[1]*coor_shape[2]*coor_shape[3]*coor_shape[4]))\nunravel_pool1_coordinates = unravel_pool1_coordinates.T\n\nvalues = pool1\nvalues = np.reshape(values,(np.size(values)))\n\nup1 = tf.constant(0.0, shape = [4,32,32,16])\ndelta = tf.SparseTensor(unravel_pool1_coordinates, values, shape = [4,32,32,16])\n\nresult = up1 + tf.sparse_tensor_to_dense(delta)\n\n\nwith tf.Session() as session:\n    session.run(tf.initialize_all_variables())\n    test_image = np.random.rand(4,32,32,3)\n    sess_outputs = session.run([pool1, pool1_indices],\n                               {input_image.name: test_image})\n</code></pre>", "body_text": "Yeah. I know np.unravel_index. but can np.unravel_index be used to build the graph?\nI write a simple example. How to achieve that using Tensorflow?\nThank you.\nksize = 3\nstride = 1\n\ninput_image = tf.placeholder(tf.float32, name='input_image')\n\n#conv1\nkernel = tf.Variable(tf.truncated_normal([ksize, ksize, 3, 16],stddev=0.1),\n                    name='kernel')\nconv = tf.nn.conv2d(input_image, kernel, [1,stride,stride,1], padding='SAME')\nbiases = tf.Variable(tf.constant(0.0, shape = [16]), name = 'biases')\nbias = tf.nn.bias_add(conv, biases)\nconv1 = tf.nn.relu(bias, name='conv1')\n\n#pool1\npool1, pool1_indices = tf.nn.max_pool_with_argmax(conv1, ksize=[1, 2, 2, 1], \n                                                  strides=[1, 2, 2, 1], \n                                                  padding='SAME', name='pool1')\n\n#upsample by assigning the values of pool1 to the position in unpooling Tensor according to pool1_indices                                                \nindices = pool1_indices\nunravel_pool1_indices = np.unravel_index(indices,[4,32,32,16])\nunravel_pool1_coordinates = np.array(unravel_pool1_indices)\ncoor_shape = np.shape(unravel_pool1_coordinates)\nunravel_pool1_coordinates = np.reshape(unravel_pool1_coordinates,(coor_shape[0],coor_shape[1]*coor_shape[2]*coor_shape[3]*coor_shape[4]))\nunravel_pool1_coordinates = unravel_pool1_coordinates.T\n\nvalues = pool1\nvalues = np.reshape(values,(np.size(values)))\n\nup1 = tf.constant(0.0, shape = [4,32,32,16])\ndelta = tf.SparseTensor(unravel_pool1_coordinates, values, shape = [4,32,32,16])\n\nresult = up1 + tf.sparse_tensor_to_dense(delta)\n\n\nwith tf.Session() as session:\n    session.run(tf.initialize_all_variables())\n    test_image = np.random.rand(4,32,32,3)\n    sess_outputs = session.run([pool1, pool1_indices],\n                               {input_image.name: test_image})", "body": "Yeah. I know np.unravel_index. but can np.unravel_index be used to build the graph?\nI write a simple example. How to achieve that using Tensorflow?\nThank you.\n\n```\nksize = 3\nstride = 1\n\ninput_image = tf.placeholder(tf.float32, name='input_image')\n\n#conv1\nkernel = tf.Variable(tf.truncated_normal([ksize, ksize, 3, 16],stddev=0.1),\n                    name='kernel')\nconv = tf.nn.conv2d(input_image, kernel, [1,stride,stride,1], padding='SAME')\nbiases = tf.Variable(tf.constant(0.0, shape = [16]), name = 'biases')\nbias = tf.nn.bias_add(conv, biases)\nconv1 = tf.nn.relu(bias, name='conv1')\n\n#pool1\npool1, pool1_indices = tf.nn.max_pool_with_argmax(conv1, ksize=[1, 2, 2, 1], \n                                                  strides=[1, 2, 2, 1], \n                                                  padding='SAME', name='pool1')\n\n#upsample by assigning the values of pool1 to the position in unpooling Tensor according to pool1_indices                                                \nindices = pool1_indices\nunravel_pool1_indices = np.unravel_index(indices,[4,32,32,16])\nunravel_pool1_coordinates = np.array(unravel_pool1_indices)\ncoor_shape = np.shape(unravel_pool1_coordinates)\nunravel_pool1_coordinates = np.reshape(unravel_pool1_coordinates,(coor_shape[0],coor_shape[1]*coor_shape[2]*coor_shape[3]*coor_shape[4]))\nunravel_pool1_coordinates = unravel_pool1_coordinates.T\n\nvalues = pool1\nvalues = np.reshape(values,(np.size(values)))\n\nup1 = tf.constant(0.0, shape = [4,32,32,16])\ndelta = tf.SparseTensor(unravel_pool1_coordinates, values, shape = [4,32,32,16])\n\nresult = up1 + tf.sparse_tensor_to_dense(delta)\n\n\nwith tf.Session() as session:\n    session.run(tf.initialize_all_variables())\n    test_image = np.random.rand(4,32,32,3)\n    sess_outputs = session.run([pool1, pool1_indices],\n                               {input_image.name: test_image})\n```\n"}