{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/224175829", "html_url": "https://github.com/tensorflow/tensorflow/issues/2075#issuecomment-224175829", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2075", "id": 224175829, "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDE3NTgyOQ==", "user": {"login": "girving", "id": 70511, "node_id": "MDQ6VXNlcjcwNTEx", "avatar_url": "https://avatars1.githubusercontent.com/u/70511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/girving", "html_url": "https://github.com/girving", "followers_url": "https://api.github.com/users/girving/followers", "following_url": "https://api.github.com/users/girving/following{/other_user}", "gists_url": "https://api.github.com/users/girving/gists{/gist_id}", "starred_url": "https://api.github.com/users/girving/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/girving/subscriptions", "organizations_url": "https://api.github.com/users/girving/orgs", "repos_url": "https://api.github.com/users/girving/repos", "events_url": "https://api.github.com/users/girving/events{/privacy}", "received_events_url": "https://api.github.com/users/girving/received_events", "type": "User", "site_admin": false}, "created_at": "2016-06-07T04:52:03Z", "updated_at": "2016-06-07T04:52:03Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I think it'd be better to handle this the way numpy does it, with <code>np.unravel_index</code>: <a href=\"https://bytes.com/topic/python/answers/509074-numpy-argmin-multidimensional-arrays\" rel=\"nofollow\">https://bytes.com/topic/python/answers/509074-numpy-argmin-multidimensional-arrays</a>.  Making <code>tf.argmin</code> do this directly would either require a new op or an unpleasant boolean flag that indexes over everything, and it still wouldn't be what you want since most of time you want to minimize over some but not all of the dimensions (e.g., the last three dims of a 4D batched image tensor).</p>\n<p>Cc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=326106\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/aselle\">@aselle</a> since <code>unravel_index</code> sounds vaguely index related, but I'll mark this contributions welcome for now.</p>", "body_text": "I think it'd be better to handle this the way numpy does it, with np.unravel_index: https://bytes.com/topic/python/answers/509074-numpy-argmin-multidimensional-arrays.  Making tf.argmin do this directly would either require a new op or an unpleasant boolean flag that indexes over everything, and it still wouldn't be what you want since most of time you want to minimize over some but not all of the dimensions (e.g., the last three dims of a 4D batched image tensor).\nCc @aselle since unravel_index sounds vaguely index related, but I'll mark this contributions welcome for now.", "body": "I think it'd be better to handle this the way numpy does it, with `np.unravel_index`: https://bytes.com/topic/python/answers/509074-numpy-argmin-multidimensional-arrays.  Making `tf.argmin` do this directly would either require a new op or an unpleasant boolean flag that indexes over everything, and it still wouldn't be what you want since most of time you want to minimize over some but not all of the dimensions (e.g., the last three dims of a 4D batched image tensor).\n\nCc @aselle since `unravel_index` sounds vaguely index related, but I'll mark this contributions welcome for now.\n"}