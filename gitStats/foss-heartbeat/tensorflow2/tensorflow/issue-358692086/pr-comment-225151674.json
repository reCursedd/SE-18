{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/225151674", "pull_request_review_id": 164687202, "id": 225151674, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNTE1MTY3NA==", "diff_hunk": "@@ -0,0 +1,344 @@\n+/* Copyright 2018 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+\n+#include \"tensorflow/contrib/igfs/kernels/igfs_messages.h\"\n+\n+namespace tensorflow {\n+\n+Status IGFSPath::Read(ExtendedTCPClient *client) {\n+  return client->ReadNullableString(&path);\n+}\n+\n+Status IGFSFile::Read(ExtendedTCPClient *client) {\n+  int32_t block_size;\n+  int64_t group_block_size;\n+  std::map<string, string> properties = {};\n+  int64_t access_time;\n+\n+  bool has_path;\n+  TF_RETURN_IF_ERROR(client->ReadBool(&has_path));\n+  if (has_path) {\n+    IGFSPath path = {};\n+    TF_RETURN_IF_ERROR(path.Read(client));\n+  }\n+\n+  TF_RETURN_IF_ERROR(client->ReadInt(&block_size));\n+  TF_RETURN_IF_ERROR(client->ReadLong(&group_block_size));\n+  TF_RETURN_IF_ERROR(client->ReadLong(&length));\n+  TF_RETURN_IF_ERROR(client->ReadStringMap(&properties));\n+  TF_RETURN_IF_ERROR(client->ReadLong(&access_time));\n+  TF_RETURN_IF_ERROR(client->ReadLong(&modification_time));\n+  TF_RETURN_IF_ERROR(client->ReadByte(&flags));\n+\n+  return Status::OK();\n+}\n+\n+Request::Request(int32_t command_id) : command_id_(command_id) {}\n+\n+Status Request::Write(ExtendedTCPClient *client) const {\n+  TF_RETURN_IF_ERROR(client->WriteByte(0));\n+  TF_RETURN_IF_ERROR(client->FillWithZerosUntil(8));\n+  TF_RETURN_IF_ERROR(client->WriteInt(command_id_));\n+  TF_RETURN_IF_ERROR(client->FillWithZerosUntil(24));\n+\n+  return Status::OK();\n+}\n+\n+Status Response::Read(ExtendedTCPClient *client) {\n+  TF_RETURN_IF_ERROR(client->Ignore(1));\n+  TF_RETURN_IF_ERROR(client->SkipToPos(8));\n+  TF_RETURN_IF_ERROR(client->ReadInt(&req_id));\n+  TF_RETURN_IF_ERROR(client->SkipToPos(24));\n+  TF_RETURN_IF_ERROR(client->ReadInt(&res_type));\n+\n+  bool has_error;\n+  TF_RETURN_IF_ERROR(client->ReadBool(&has_error));\n+\n+  if (has_error) {\n+    int32_t error_code;\n+    string error_msg;\n+    TF_RETURN_IF_ERROR(client->ReadString(&error_msg));\n+    TF_RETURN_IF_ERROR(client->ReadInt(&error_code));\n+\n+    return errors::Unknown(\"Error [code=\", error_code, \", message=\\\"\",\n+                           error_msg, \"\\\"]\");\n+  }\n+\n+  TF_RETURN_IF_ERROR(client->SkipToPos(header_size_ + 5));\n+  TF_RETURN_IF_ERROR(client->ReadInt(&length));\n+  TF_RETURN_IF_ERROR(client->SkipToPos(header_size_ + response_header_size_));\n+\n+  return Status::OK();\n+}\n+\n+PathCtrlRequest::PathCtrlRequest(int32_t command_id_, const string &user_name,\n+                                 const string &path,\n+                                 const string &destination_path, bool flag,\n+                                 bool collocate,\n+                                 const std::map<string, string> &properties)\n+    : Request(command_id_),\n+      user_name_(std::move(user_name)),\n+      path_(std::move(path)),", "path": "tensorflow/contrib/igfs/kernels/igfs_messages.cc", "position": null, "original_position": 93, "commit_id": "24579bc55c379ea1d43b3d3b9d319038aa12f091", "original_commit_id": "273abe3bd46ce505b610b0bcf88d9c6afc472fce", "user": {"login": "dmitrievanthony", "id": 1028969, "node_id": "MDQ6VXNlcjEwMjg5Njk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1028969?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmitrievanthony", "html_url": "https://github.com/dmitrievanthony", "followers_url": "https://api.github.com/users/dmitrievanthony/followers", "following_url": "https://api.github.com/users/dmitrievanthony/following{/other_user}", "gists_url": "https://api.github.com/users/dmitrievanthony/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmitrievanthony/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmitrievanthony/subscriptions", "organizations_url": "https://api.github.com/users/dmitrievanthony/orgs", "repos_url": "https://api.github.com/users/dmitrievanthony/repos", "events_url": "https://api.github.com/users/dmitrievanthony/events{/privacy}", "received_events_url": "https://api.github.com/users/dmitrievanthony/received_events", "type": "User", "site_admin": false}, "body": "Okay, just removed `copy()`.", "created_at": "2018-10-15T12:46:49Z", "updated_at": "2018-11-07T11:35:25Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/22194#discussion_r225151674", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/22194", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/225151674"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/22194#discussion_r225151674"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/22194"}}, "body_html": "<p>Okay, just removed <code>copy()</code>.</p>", "body_text": "Okay, just removed copy().", "in_reply_to_id": 224859797}