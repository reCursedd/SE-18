{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/195074032", "html_url": "https://github.com/tensorflow/tensorflow/issues/1444#issuecomment-195074032", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1444", "id": 195074032, "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTA3NDAzMg==", "user": {"login": "vgatto", "id": 32080, "node_id": "MDQ6VXNlcjMyMDgw", "avatar_url": "https://avatars3.githubusercontent.com/u/32080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vgatto", "html_url": "https://github.com/vgatto", "followers_url": "https://api.github.com/users/vgatto/followers", "following_url": "https://api.github.com/users/vgatto/following{/other_user}", "gists_url": "https://api.github.com/users/vgatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/vgatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vgatto/subscriptions", "organizations_url": "https://api.github.com/users/vgatto/orgs", "repos_url": "https://api.github.com/users/vgatto/repos", "events_url": "https://api.github.com/users/vgatto/events{/privacy}", "received_events_url": "https://api.github.com/users/vgatto/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-10T22:10:22Z", "updated_at": "2016-03-10T22:10:22Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=192142\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mrry\">@mrry</a>'s suggestion works perfectly as a work-around for my large numpy array (I'm responsible for the stackoverflow question as well) and I'm able to use Tensorboard's graph visualization again.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=161459\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/petewarden\">@petewarden</a> - FWIW, I never use the Saver to persist the entire session. I'm always cherrypicking variables so that I can deploy just the model to other machines for inference or train on a different dataset. So any help with managing training state vs. learned model state would be great.</p>", "body_text": "@mrry's suggestion works perfectly as a work-around for my large numpy array (I'm responsible for the stackoverflow question as well) and I'm able to use Tensorboard's graph visualization again.\n@petewarden - FWIW, I never use the Saver to persist the entire session. I'm always cherrypicking variables so that I can deploy just the model to other machines for inference or train on a different dataset. So any help with managing training state vs. learned model state would be great.", "body": "@mrry's suggestion works perfectly as a work-around for my large numpy array (I'm responsible for the stackoverflow question as well) and I'm able to use Tensorboard's graph visualization again.\n\n@petewarden - FWIW, I never use the Saver to persist the entire session. I'm always cherrypicking variables so that I can deploy just the model to other machines for inference or train on a different dataset. So any help with managing training state vs. learned model state would be great.\n"}