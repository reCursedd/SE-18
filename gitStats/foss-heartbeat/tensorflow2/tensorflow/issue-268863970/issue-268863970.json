{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14007", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14007/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14007/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14007/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14007", "id": 268863970, "node_id": "MDU6SXNzdWUyNjg4NjM5NzA=", "number": 14007, "title": "BatchNorm not working in a _FuncGraph", "user": {"login": "tongda", "id": 653425, "node_id": "MDQ6VXNlcjY1MzQyNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/653425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tongda", "html_url": "https://github.com/tongda", "followers_url": "https://api.github.com/users/tongda/followers", "following_url": "https://api.github.com/users/tongda/following{/other_user}", "gists_url": "https://api.github.com/users/tongda/gists{/gist_id}", "starred_url": "https://api.github.com/users/tongda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tongda/subscriptions", "organizations_url": "https://api.github.com/users/tongda/orgs", "repos_url": "https://api.github.com/users/tongda/repos", "events_url": "https://api.github.com/users/tongda/events{/privacy}", "received_events_url": "https://api.github.com/users/tongda/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "akshayka", "id": 1994308, "node_id": "MDQ6VXNlcjE5OTQzMDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1994308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akshayka", "html_url": "https://github.com/akshayka", "followers_url": "https://api.github.com/users/akshayka/followers", "following_url": "https://api.github.com/users/akshayka/following{/other_user}", "gists_url": "https://api.github.com/users/akshayka/gists{/gist_id}", "starred_url": "https://api.github.com/users/akshayka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akshayka/subscriptions", "organizations_url": "https://api.github.com/users/akshayka/orgs", "repos_url": "https://api.github.com/users/akshayka/repos", "events_url": "https://api.github.com/users/akshayka/events{/privacy}", "received_events_url": "https://api.github.com/users/akshayka/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "akshayka", "id": 1994308, "node_id": "MDQ6VXNlcjE5OTQzMDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1994308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akshayka", "html_url": "https://github.com/akshayka", "followers_url": "https://api.github.com/users/akshayka/followers", "following_url": "https://api.github.com/users/akshayka/following{/other_user}", "gists_url": "https://api.github.com/users/akshayka/gists{/gist_id}", "starred_url": "https://api.github.com/users/akshayka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akshayka/subscriptions", "organizations_url": "https://api.github.com/users/akshayka/orgs", "repos_url": "https://api.github.com/users/akshayka/repos", "events_url": "https://api.github.com/users/akshayka/events{/privacy}", "received_events_url": "https://api.github.com/users/akshayka/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2017-10-26T18:29:28Z", "updated_at": "2018-09-13T17:17:02Z", "closed_at": "2018-09-13T17:17:01Z", "author_association": "NONE", "body_html": "<p>I am working on macOS 10.12.6 with TensorFlow 1.3.0, Python version: 3.6.2. CPU only.</p>\n<p>I found that if <code>tf.contrib.layers.batch_norm</code> is called inside a <code>Defun</code>, a <code>TypeError</code> will be thrown. To clarify, the function here is a <code>map_func</code> that will be used in <code>Dataset.map</code> invoke, instead of a normal python function.</p>\n<p>To regenerate the scenario, try this piece of code:</p>\n<pre><code>Dataset.range(27).batch(27) \\\n  .map(lambda x: tf.cast(tf.reshape(x, (3, 3, 3)), tf.float32) / 32.0) \\\n  .map(lambda img: tf.contrib.layers.batch_norm(img)) \\\n  .make_one_shot_iterator().get_next().eval()\n</code></pre>\n<p>You will get an error like this:</p>\n<pre><code>TypeError: In op 'BatchNorm/AssignMovingAvg', input types ([tf.float32, tf.float32]) are not compatible with expected types ([tf.float32_ref, tf.float32])\n</code></pre>\n<p>I did some investigation. One thing that I found is that inside the <code>batch_norm</code>, we will assign a new value to the <code>mean</code> variable by calling <code>assign_sub</code>, which accept a variable with <strong>ref</strong> type and a value with a <strong>basic type</strong>. But the variable has been created some where in the <code>_FuncGraph</code> with a <strong>basic type</strong>, instead of a <strong>ref</strong> type, which make the compatibility check failed.</p>\n<p>I will keep digging into this issue, but I think this seems a bug.</p>", "body_text": "I am working on macOS 10.12.6 with TensorFlow 1.3.0, Python version: 3.6.2. CPU only.\nI found that if tf.contrib.layers.batch_norm is called inside a Defun, a TypeError will be thrown. To clarify, the function here is a map_func that will be used in Dataset.map invoke, instead of a normal python function.\nTo regenerate the scenario, try this piece of code:\nDataset.range(27).batch(27) \\\n  .map(lambda x: tf.cast(tf.reshape(x, (3, 3, 3)), tf.float32) / 32.0) \\\n  .map(lambda img: tf.contrib.layers.batch_norm(img)) \\\n  .make_one_shot_iterator().get_next().eval()\n\nYou will get an error like this:\nTypeError: In op 'BatchNorm/AssignMovingAvg', input types ([tf.float32, tf.float32]) are not compatible with expected types ([tf.float32_ref, tf.float32])\n\nI did some investigation. One thing that I found is that inside the batch_norm, we will assign a new value to the mean variable by calling assign_sub, which accept a variable with ref type and a value with a basic type. But the variable has been created some where in the _FuncGraph with a basic type, instead of a ref type, which make the compatibility check failed.\nI will keep digging into this issue, but I think this seems a bug.", "body": "I am working on macOS 10.12.6 with TensorFlow 1.3.0, Python version: 3.6.2. CPU only.\r\n\r\nI found that if `tf.contrib.layers.batch_norm` is called inside a `Defun`, a `TypeError` will be thrown. To clarify, the function here is a `map_func` that will be used in `Dataset.map` invoke, instead of a normal python function.\r\n\r\nTo regenerate the scenario, try this piece of code:\r\n\r\n```\r\nDataset.range(27).batch(27) \\\r\n  .map(lambda x: tf.cast(tf.reshape(x, (3, 3, 3)), tf.float32) / 32.0) \\\r\n  .map(lambda img: tf.contrib.layers.batch_norm(img)) \\\r\n  .make_one_shot_iterator().get_next().eval()\r\n```\r\n\r\nYou will get an error like this:\r\n\r\n```\r\nTypeError: In op 'BatchNorm/AssignMovingAvg', input types ([tf.float32, tf.float32]) are not compatible with expected types ([tf.float32_ref, tf.float32])\r\n```\r\n\r\nI did some investigation. One thing that I found is that inside the `batch_norm`, we will assign a new value to the `mean` variable by calling `assign_sub`, which accept a variable with **ref** type and a value with a **basic type**. But the variable has been created some where in the `_FuncGraph` with a **basic type**, instead of a **ref** type, which make the compatibility check failed.\r\n\r\nI will keep digging into this issue, but I think this seems a bug."}