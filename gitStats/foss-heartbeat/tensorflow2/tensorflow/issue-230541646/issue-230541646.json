{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10119", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10119/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10119/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10119/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/10119", "id": 230541646, "node_id": "MDU6SXNzdWUyMzA1NDE2NDY=", "number": 10119, "title": "Memory leak in Java API due to missing TF_DeleteStatus", "user": {"login": "jpangburn", "id": 4357286, "node_id": "MDQ6VXNlcjQzNTcyODY=", "avatar_url": "https://avatars0.githubusercontent.com/u/4357286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jpangburn", "html_url": "https://github.com/jpangburn", "followers_url": "https://api.github.com/users/jpangburn/followers", "following_url": "https://api.github.com/users/jpangburn/following{/other_user}", "gists_url": "https://api.github.com/users/jpangburn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jpangburn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jpangburn/subscriptions", "organizations_url": "https://api.github.com/users/jpangburn/orgs", "repos_url": "https://api.github.com/users/jpangburn/repos", "events_url": "https://api.github.com/users/jpangburn/events{/privacy}", "received_events_url": "https://api.github.com/users/jpangburn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2017-05-22T22:56:09Z", "updated_at": "2017-08-01T18:53:45Z", "closed_at": "2017-05-23T00:02:18Z", "author_association": "CONTRIBUTOR", "body_html": "<p>This is a leak confirmed on <a href=\"https://stackoverflow.com/questions/44082297/memory-leak-using-tensorflow-for-java\" rel=\"nofollow\">StackOverflow</a> by <a href=\"https://stackoverflow.com/users/6708503/ash\" rel=\"nofollow\">ash</a>.</p>\n<h3>System information</h3>\n<ul>\n<li>\n<p><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes.  There's a short example in the above StackOverflow link and a <a href=\"https://github.com/jpangburn/tensorflowmemorytest\">working JUNIT test written in a maven project on github</a> that demonstrates the problem.</p>\n</li>\n<li>\n<p><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Mac OS Sierra using TF 1.1, and CentOS7 using both TF 1.1 and TF 1.2_rc0.</p>\n</li>\n<li>\n<p><strong>TensorFlow installed from (source or binary)</strong>: binary from Maven</p>\n</li>\n<li>\n<p><strong>TensorFlow version (use command below)</strong>: On Mac uses Maven <code>&lt;version&gt;1.1.0&lt;/version&gt;</code>, on CentOS7 <code>&lt;version&gt;1.2.0-rc0&lt;/version&gt;</code></p>\n</li>\n<li>\n<p><strong>Bazel version (if compiling from source)</strong>: N/A</p>\n</li>\n<li>\n<p><strong>CUDA/cuDNN version</strong>: N/A</p>\n</li>\n<li>\n<p><strong>GPU model and memory</strong>: N/A</p>\n</li>\n<li>\n<p><strong>Exact command to reproduce</strong>: See above for the short example on the StackOverflow link or the full Java file at the github example project.</p>\n</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>Running the example code given causes the process memory (outside the JDK, not heap space) to grow until the process exits.  Leaked was agreed to be in TensorFlow by ash at StackOverflow:</p>\n<blockquote>\n<p>I believe there is indeed a leak (in particular a missing TF_DeleteStatus corresponding to the <a href=\"https://github.com/tensorflow/tensorflow/blob/r1.1/tensorflow/java/src/main/native/session_jni.cc#L191\">allocation in JNI code</a>)</p>\n</blockquote>\n<h3>Source code / logs</h3>\n<p>The test file is <a href=\"https://github.com/jpangburn/tensorflowmemorytest/blob/master/src/test/java/com/jessepangburn/tftest/tensorflowtest/AppTest.java\">here</a> within the above reference github project.</p>\n<p>Thank you for providing this amazing tool!</p>", "body_text": "This is a leak confirmed on StackOverflow by ash.\nSystem information\n\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes.  There's a short example in the above StackOverflow link and a working JUNIT test written in a maven project on github that demonstrates the problem.\n\n\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Mac OS Sierra using TF 1.1, and CentOS7 using both TF 1.1 and TF 1.2_rc0.\n\n\nTensorFlow installed from (source or binary): binary from Maven\n\n\nTensorFlow version (use command below): On Mac uses Maven <version>1.1.0</version>, on CentOS7 <version>1.2.0-rc0</version>\n\n\nBazel version (if compiling from source): N/A\n\n\nCUDA/cuDNN version: N/A\n\n\nGPU model and memory: N/A\n\n\nExact command to reproduce: See above for the short example on the StackOverflow link or the full Java file at the github example project.\n\n\nDescribe the problem\nRunning the example code given causes the process memory (outside the JDK, not heap space) to grow until the process exits.  Leaked was agreed to be in TensorFlow by ash at StackOverflow:\n\nI believe there is indeed a leak (in particular a missing TF_DeleteStatus corresponding to the allocation in JNI code)\n\nSource code / logs\nThe test file is here within the above reference github project.\nThank you for providing this amazing tool!", "body": "This is a leak confirmed on [StackOverflow](https://stackoverflow.com/questions/44082297/memory-leak-using-tensorflow-for-java) by [ash](https://stackoverflow.com/users/6708503/ash).\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes.  There's a short example in the above StackOverflow link and a [working JUNIT test written in a maven project on github](https://github.com/jpangburn/tensorflowmemorytest) that demonstrates the problem.\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Mac OS Sierra using TF 1.1, and CentOS7 using both TF 1.1 and TF 1.2_rc0.\r\n- **TensorFlow installed from (source or binary)**: binary from Maven\r\n- **TensorFlow version (use command below)**: On Mac uses Maven `<version>1.1.0</version>`, on CentOS7 `<version>1.2.0-rc0</version>`\r\n\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: See above for the short example on the StackOverflow link or the full Java file at the github example project.\r\n\r\n### Describe the problem\r\nRunning the example code given causes the process memory (outside the JDK, not heap space) to grow until the process exits.  Leaked was agreed to be in TensorFlow by ash at StackOverflow:\r\n\r\n> I believe there is indeed a leak (in particular a missing TF_DeleteStatus corresponding to the [allocation in JNI code](https://github.com/tensorflow/tensorflow/blob/r1.1/tensorflow/java/src/main/native/session_jni.cc#L191)) \r\n\r\n### Source code / logs\r\nThe test file is [here](https://github.com/jpangburn/tensorflowmemorytest/blob/master/src/test/java/com/jessepangburn/tftest/tensorflowtest/AppTest.java) within the above reference github project.\r\n\r\nThank you for providing this amazing tool!\r\n"}