{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19168", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19168/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19168/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19168/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19168", "id": 321423838, "node_id": "MDU6SXNzdWUzMjE0MjM4Mzg=", "number": 19168, "title": "tf.control_dependencies() not work in a custom_gradient function", "user": {"login": "YantianZha", "id": 9017839, "node_id": "MDQ6VXNlcjkwMTc4Mzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9017839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YantianZha", "html_url": "https://github.com/YantianZha", "followers_url": "https://api.github.com/users/YantianZha/followers", "following_url": "https://api.github.com/users/YantianZha/following{/other_user}", "gists_url": "https://api.github.com/users/YantianZha/gists{/gist_id}", "starred_url": "https://api.github.com/users/YantianZha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YantianZha/subscriptions", "organizations_url": "https://api.github.com/users/YantianZha/orgs", "repos_url": "https://api.github.com/users/YantianZha/repos", "events_url": "https://api.github.com/users/YantianZha/events{/privacy}", "received_events_url": "https://api.github.com/users/YantianZha/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "open", "locked": false, "assignee": {"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-05-09T04:08:16Z", "updated_at": "2018-11-14T19:18:06Z", "closed_at": null, "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Y</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: r1.8</li>\n<li><strong>Python version</strong>: 2.7.14</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: 5.4</li>\n<li><strong>CUDA/cuDNN version</strong>: 8.0/7.0</li>\n<li><strong>GPU model and memory</strong>: GTX1080, 8G</li>\n<li><strong>Bazel version</strong>: N/A</li>\n<li><strong>Exact command to reproduce</strong>: python test_script.py</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>The output for the code below, is not correct. The first value of variable \"assign_var\" is not assigned with 2. The expected output for the 2nd line is: [2 0]. Thus, the approach [here][1] cannot work with \"@tf.custom_gradient\". I don't know if this is a bug or there is a solution for this. Thanks in advance!</p>\n<h3>Source code / logs</h3>\n<p>@tf.custom_gradient<br>\ndef test_func(x):<br>\ni = tf.constant(0)<br>\nid_refs = tf.Variable(tf.zeros((1), tf.int32))<br>\nassign_var = tf.Variable(tf.zeros((2), tf.int32))<br>\ncond = lambda i, id_refs: tf.less(i, 8)</p>\n<pre><code>def _body(i, id_refs):\n  a = tf.assign(assign_var[0], 2)\n  id_refs = tf.concat([id_refs, [i]], 0)\n  with tf.control_dependencies([a]):\n    return i+1, id_refs\n\n_, gradRefs = tf.while_loop(cond, _body, [i, id_refs], shape_invariants= \\\n  [i.get_shape(), tf.TensorShape([None])])\ndef grad(dy):\n    return tf.constant(0)\nreturn assign_var, grad\n</code></pre>\n<p>x = tf.constant(100.)<br>\ny = test_func(x)<br>\ndy = tf.gradients(y, x)</p>\n<p>init_op = tf.global_variables_initializer()<br>\nwith tf.Session() as sess:<br>\nsess.run(init_op)<br>\nprint(sess.run(dy))<br>\nprint(sess.run(y))</p>\n<p>Output:<br>\n[0]<br>\n[0 0]</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Y\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 16.04\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): r1.8\nPython version: 2.7.14\nGCC/Compiler version (if compiling from source): 5.4\nCUDA/cuDNN version: 8.0/7.0\nGPU model and memory: GTX1080, 8G\nBazel version: N/A\nExact command to reproduce: python test_script.py\n\nDescribe the problem\nThe output for the code below, is not correct. The first value of variable \"assign_var\" is not assigned with 2. The expected output for the 2nd line is: [2 0]. Thus, the approach [here][1] cannot work with \"@tf.custom_gradient\". I don't know if this is a bug or there is a solution for this. Thanks in advance!\nSource code / logs\n@tf.custom_gradient\ndef test_func(x):\ni = tf.constant(0)\nid_refs = tf.Variable(tf.zeros((1), tf.int32))\nassign_var = tf.Variable(tf.zeros((2), tf.int32))\ncond = lambda i, id_refs: tf.less(i, 8)\ndef _body(i, id_refs):\n  a = tf.assign(assign_var[0], 2)\n  id_refs = tf.concat([id_refs, [i]], 0)\n  with tf.control_dependencies([a]):\n    return i+1, id_refs\n\n_, gradRefs = tf.while_loop(cond, _body, [i, id_refs], shape_invariants= \\\n  [i.get_shape(), tf.TensorShape([None])])\ndef grad(dy):\n    return tf.constant(0)\nreturn assign_var, grad\n\nx = tf.constant(100.)\ny = test_func(x)\ndy = tf.gradients(y, x)\ninit_op = tf.global_variables_initializer()\nwith tf.Session() as sess:\nsess.run(init_op)\nprint(sess.run(dy))\nprint(sess.run(y))\nOutput:\n[0]\n[0 0]", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Y\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: r1.8\r\n- **Python version**: 2.7.14\r\n- **GCC/Compiler version (if compiling from source)**: 5.4\r\n- **CUDA/cuDNN version**: 8.0/7.0\r\n- **GPU model and memory**: GTX1080, 8G\r\n- **Bazel version**: N/A\r\n- **Exact command to reproduce**: python test_script.py\r\n\r\n### Describe the problem\r\nThe output for the code below, is not correct. The first value of variable \"assign_var\" is not assigned with 2. The expected output for the 2nd line is: [2 0]. Thus, the approach [here][1] cannot work with \"@tf.custom_gradient\". I don't know if this is a bug or there is a solution for this. Thanks in advance!\r\n\r\n### Source code / logs\r\n@tf.custom_gradient\r\ndef test_func(x):\r\n    i = tf.constant(0)\r\n    id_refs = tf.Variable(tf.zeros((1), tf.int32))\r\n    assign_var = tf.Variable(tf.zeros((2), tf.int32))\r\n    cond = lambda i, id_refs: tf.less(i, 8)\r\n\r\n    def _body(i, id_refs):\r\n      a = tf.assign(assign_var[0], 2)\r\n      id_refs = tf.concat([id_refs, [i]], 0)\r\n      with tf.control_dependencies([a]):\r\n        return i+1, id_refs\r\n\r\n    _, gradRefs = tf.while_loop(cond, _body, [i, id_refs], shape_invariants= \\\r\n      [i.get_shape(), tf.TensorShape([None])])\r\n    def grad(dy):\r\n        return tf.constant(0)\r\n    return assign_var, grad\r\n\r\nx = tf.constant(100.)\r\ny = test_func(x)\r\ndy = tf.gradients(y, x)\r\n\r\ninit_op = tf.global_variables_initializer()\r\nwith tf.Session() as sess:\r\n    sess.run(init_op)\r\n    print(sess.run(dy))\r\n    print(sess.run(y))\r\n\r\nOutput:\r\n[0]\r\n[0 0]\r\n"}