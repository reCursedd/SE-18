{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/264675958", "html_url": "https://github.com/tensorflow/tensorflow/issues/616#issuecomment-264675958", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/616", "id": 264675958, "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDY3NTk1OA==", "user": {"login": "arcticmatt", "id": 4356178, "node_id": "MDQ6VXNlcjQzNTYxNzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/4356178?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arcticmatt", "html_url": "https://github.com/arcticmatt", "followers_url": "https://api.github.com/users/arcticmatt/followers", "following_url": "https://api.github.com/users/arcticmatt/following{/other_user}", "gists_url": "https://api.github.com/users/arcticmatt/gists{/gist_id}", "starred_url": "https://api.github.com/users/arcticmatt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arcticmatt/subscriptions", "organizations_url": "https://api.github.com/users/arcticmatt/orgs", "repos_url": "https://api.github.com/users/arcticmatt/repos", "events_url": "https://api.github.com/users/arcticmatt/events{/privacy}", "received_events_url": "https://api.github.com/users/arcticmatt/received_events", "type": "User", "site_admin": false}, "created_at": "2016-12-04T00:42:10Z", "updated_at": "2016-12-04T00:42:10Z", "author_association": "NONE", "body_html": "<p>I'm having an issue using <code>freeze_graph.py</code> on a modified version of the cifar10 example. In short, I get all the root nodes of the graph using <code>[n.name for n in sess.graph_def.node if '/' not in n.name and n.name != 'init']</code>, and use that as the <code>output_node_names</code> parameter of <code>freeze_graph</code>. The freezing appears to work; 30 variables are converted to const ops, with ~100k ops in the final graph. However, upon examining the final protobuf final, there are a bunch of assign ops in the graph. This then leads to a similar problem as <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1000100\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/po0ya\">@po0ya</a>, where I get</p>\n<pre><code>ValueError: graph_def is invalid at node u'conv_1/W/Assign': Input tensor 'conv_1/W:0' Cannot convert a tensor of type float32 to an input of type float32_ref.\n</code></pre>\n<p>upon attempting to import the frozen graph (with no input_map). It seems to me like there are some issues in <code>convert_variables_to_constants</code>, specifically the call to <code>extract_sub_graph</code>. Going by the comments, these functions should be stripping the graph of assignment nodes; however, judging by my protobuf file and the import call, this is not the case. <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=192142\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mrry\">@mrry</a>, any thoughts?</p>", "body_text": "I'm having an issue using freeze_graph.py on a modified version of the cifar10 example. In short, I get all the root nodes of the graph using [n.name for n in sess.graph_def.node if '/' not in n.name and n.name != 'init'], and use that as the output_node_names parameter of freeze_graph. The freezing appears to work; 30 variables are converted to const ops, with ~100k ops in the final graph. However, upon examining the final protobuf final, there are a bunch of assign ops in the graph. This then leads to a similar problem as @po0ya, where I get\nValueError: graph_def is invalid at node u'conv_1/W/Assign': Input tensor 'conv_1/W:0' Cannot convert a tensor of type float32 to an input of type float32_ref.\n\nupon attempting to import the frozen graph (with no input_map). It seems to me like there are some issues in convert_variables_to_constants, specifically the call to extract_sub_graph. Going by the comments, these functions should be stripping the graph of assignment nodes; however, judging by my protobuf file and the import call, this is not the case. @mrry, any thoughts?", "body": "I'm having an issue using `freeze_graph.py` on a modified version of the cifar10 example. In short, I get all the root nodes of the graph using `[n.name for n in sess.graph_def.node if '/' not in n.name and n.name != 'init']`, and use that as the `output_node_names` parameter of `freeze_graph`. The freezing appears to work; 30 variables are converted to const ops, with ~100k ops in the final graph. However, upon examining the final protobuf final, there are a bunch of assign ops in the graph. This then leads to a similar problem as @po0ya, where I get\r\n\r\n    ValueError: graph_def is invalid at node u'conv_1/W/Assign': Input tensor 'conv_1/W:0' Cannot convert a tensor of type float32 to an input of type float32_ref.\r\n\r\nupon attempting to import the frozen graph (with no input_map). It seems to me like there are some issues in `convert_variables_to_constants`, specifically the call to `extract_sub_graph`. Going by the comments, these functions should be stripping the graph of assignment nodes; however, judging by my protobuf file and the import call, this is not the case. @mrry, any thoughts?\r\n"}