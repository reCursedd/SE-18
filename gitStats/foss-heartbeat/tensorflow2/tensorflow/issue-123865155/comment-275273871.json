{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/275273871", "html_url": "https://github.com/tensorflow/tensorflow/issues/616#issuecomment-275273871", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/616", "id": 275273871, "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTI3Mzg3MQ==", "user": {"login": "codeisnotcode", "id": 658553, "node_id": "MDQ6VXNlcjY1ODU1Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/658553?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codeisnotcode", "html_url": "https://github.com/codeisnotcode", "followers_url": "https://api.github.com/users/codeisnotcode/followers", "following_url": "https://api.github.com/users/codeisnotcode/following{/other_user}", "gists_url": "https://api.github.com/users/codeisnotcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/codeisnotcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codeisnotcode/subscriptions", "organizations_url": "https://api.github.com/users/codeisnotcode/orgs", "repos_url": "https://api.github.com/users/codeisnotcode/repos", "events_url": "https://api.github.com/users/codeisnotcode/events{/privacy}", "received_events_url": "https://api.github.com/users/codeisnotcode/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-26T00:15:24Z", "updated_at": "2017-01-26T00:15:24Z", "author_association": "NONE", "body_html": "<p>Why is something that should be so simple, so incredibly complex and failure prone? These are supposed to be checkpoints to protect against failures, not to provoke failures. There should be a simple call to checkpoint everything and another to restore it. The restore should wipe out whatever was in memory before. I've spent hours trying to untangle this mess because I was hoping it would save me re-running a model that crashed. Now I see it is just easier to rerun the model and go see a movie than to make checkpoints work. If it is good, I'll post a movie review - that way you have a backup plan ready when checkpoint recovery fails. :)</p>", "body_text": "Why is something that should be so simple, so incredibly complex and failure prone? These are supposed to be checkpoints to protect against failures, not to provoke failures. There should be a simple call to checkpoint everything and another to restore it. The restore should wipe out whatever was in memory before. I've spent hours trying to untangle this mess because I was hoping it would save me re-running a model that crashed. Now I see it is just easier to rerun the model and go see a movie than to make checkpoints work. If it is good, I'll post a movie review - that way you have a backup plan ready when checkpoint recovery fails. :)", "body": "Why is something that should be so simple, so incredibly complex and failure prone? These are supposed to be checkpoints to protect against failures, not to provoke failures. There should be a simple call to checkpoint everything and another to restore it. The restore should wipe out whatever was in memory before. I've spent hours trying to untangle this mess because I was hoping it would save me re-running a model that crashed. Now I see it is just easier to rerun the model and go see a movie than to make checkpoints work. If it is good, I'll post a movie review - that way you have a backup plan ready when checkpoint recovery fails. :)\r\n"}