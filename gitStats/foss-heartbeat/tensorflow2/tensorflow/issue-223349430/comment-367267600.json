{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/367267600", "html_url": "https://github.com/tensorflow/tensorflow/issues/9359#issuecomment-367267600", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9359", "id": 367267600, "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzI2NzYwMA==", "user": {"login": "carlthome", "id": 1595907, "node_id": "MDQ6VXNlcjE1OTU5MDc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1595907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlthome", "html_url": "https://github.com/carlthome", "followers_url": "https://api.github.com/users/carlthome/followers", "following_url": "https://api.github.com/users/carlthome/following{/other_user}", "gists_url": "https://api.github.com/users/carlthome/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlthome/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlthome/subscriptions", "organizations_url": "https://api.github.com/users/carlthome/orgs", "repos_url": "https://api.github.com/users/carlthome/repos", "events_url": "https://api.github.com/users/carlthome/events{/privacy}", "received_events_url": "https://api.github.com/users/carlthome/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-21T09:41:09Z", "updated_at": "2018-02-21T09:41:09Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I've seen several bugs caused by this inconsistency. I even managed to be tripped up by this myself just last week, and I would not be surprised if these bugs are very common across people's experiments,  where the Python expression always evaluates to <code>False</code> and an implicit <code>tf.convert_to_tensor</code> on the expression just becomes a runtime constant.</p>", "body_text": "I've seen several bugs caused by this inconsistency. I even managed to be tripped up by this myself just last week, and I would not be surprised if these bugs are very common across people's experiments,  where the Python expression always evaluates to False and an implicit tf.convert_to_tensor on the expression just becomes a runtime constant.", "body": "I've seen several bugs caused by this inconsistency. I even managed to be tripped up by this myself just last week, and I would not be surprised if these bugs are very common across people's experiments,  where the Python expression always evaluates to `False` and an implicit `tf.convert_to_tensor` on the expression just becomes a runtime constant."}