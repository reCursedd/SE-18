{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/378915927", "html_url": "https://github.com/tensorflow/tensorflow/issues/9359#issuecomment-378915927", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9359", "id": 378915927, "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODkxNTkyNw==", "user": {"login": "carlthome", "id": 1595907, "node_id": "MDQ6VXNlcjE1OTU5MDc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1595907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlthome", "html_url": "https://github.com/carlthome", "followers_url": "https://api.github.com/users/carlthome/followers", "following_url": "https://api.github.com/users/carlthome/following{/other_user}", "gists_url": "https://api.github.com/users/carlthome/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlthome/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlthome/subscriptions", "organizations_url": "https://api.github.com/users/carlthome/orgs", "repos_url": "https://api.github.com/users/carlthome/repos", "events_url": "https://api.github.com/users/carlthome/events{/privacy}", "received_events_url": "https://api.github.com/users/carlthome/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-05T12:16:08Z", "updated_at": "2018-04-05T12:17:40Z", "author_association": "CONTRIBUTOR", "body_html": "<p>This is an <em>extremely</em> tricky wart.</p>\n<p>For TensorFlow 2.0 maybe tensors could stop being hashable and instead users would have to explicitly call e.g. <code>tf.constant(9).hashable()</code>? That would free up <code>==</code> and <code>!=</code> for the expected use as overloaded operators for graph construction.</p>\n<p>That's unfortunately the best I could come up with.</p>\n<div class=\"highlight highlight-source-python\"><pre>x <span class=\"pl-k\">=</span> tf.placeholder(<span class=\"pl-c1\">...</span>)\nfeed_dict <span class=\"pl-k\">=</span> {x.hashable(): np.array(<span class=\"pl-c1\">...</span>)}</pre></div>", "body_text": "This is an extremely tricky wart.\nFor TensorFlow 2.0 maybe tensors could stop being hashable and instead users would have to explicitly call e.g. tf.constant(9).hashable()? That would free up == and != for the expected use as overloaded operators for graph construction.\nThat's unfortunately the best I could come up with.\nx = tf.placeholder(...)\nfeed_dict = {x.hashable(): np.array(...)}", "body": "This is an _extremely_ tricky wart.\r\n\r\nFor TensorFlow 2.0 maybe tensors could stop being hashable and instead users would have to explicitly call e.g. `tf.constant(9).hashable()`? That would free up `==` and `!=` for the expected use as overloaded operators for graph construction.\r\n\r\nThat's unfortunately the best I could come up with.\r\n\r\n```py\r\nx = tf.placeholder(...)\r\nfeed_dict = {x.hashable(): np.array(...)}\r\n```"}