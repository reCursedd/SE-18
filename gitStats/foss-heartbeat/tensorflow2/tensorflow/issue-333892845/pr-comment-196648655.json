{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/196648655", "pull_request_review_id": 130238253, "id": 196648655, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NjY0ODY1NQ==", "diff_hunk": "@@ -143,6 +143,68 @@ public void importGraphDef(byte[] graphDef, String prefix) throws IllegalArgumen\n     }\n   }\n \n+  /**\n+   * Adds operations to compute the partial derivatives of sum of {@code y}s w.r.t {@code x}s,\n+   * i.e., {@code d(y_1 + y_2 + ...)/dx_1, d(y_1 + y_2 + ...)/dx_2...}\n+   * <p> \n+   * {@code dx} are used as initial gradients (which represent the symbolic partial\n+   * derivatives of some loss function {@code L} w.r.t. {@code y}).\n+   * {@code dx} must be null or have size of {@code y}.\n+   * <p>\n+   * If {@code dx} is null, the implementation will use dx of {@code OnesLike} for all\n+   * shapes in {@code y}.\n+   * \n+   * @param y\n+   * @param x\n+   * @param dx\n+   * @return the partial derivatives {@code dy} with the size of {@code x}\n+   */\n+  public Output<?>[] addGradients(Output<?>[] y, Output<?>[] x, Output<?>[] dx) {\n+    final long[] yHandles = new long[y.length];\n+    final int[] yIndices = new int[y.length];\n+    final long[] xHandles = new long[x.length];\n+    final int[] xIndices = new int[x.length];\n+    long[] dxHandles = null;\n+    int[] dxIndices = null;\n+\n+    for (int i = 0; i < y.length; ++i) {", "path": "tensorflow/java/src/main/java/org/tensorflow/Graph.java", "position": null, "original_position": 28, "commit_id": "b7baff70bbdc2c785bda47c9eb06584ae46fd3b3", "original_commit_id": "2e14dbb32358c59af7fe23405210a319e96ae94c", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "body": "Should the body of this function be enclosed in a:\r\n\r\n```java\r\nReference ref = ref();\r\ntry {\r\n  // The main body of this method\r\n} finally {\r\n  ref.close();\r\n}\r\n```\r\n\r\nso that it remains thread-safe (i.e., a concurrent call to `Graph.close()` won't mess things up by rendering the elements of `?Handles` invalid)", "created_at": "2018-06-20T04:58:45Z", "updated_at": "2018-06-28T03:08:41Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/20133#discussion_r196648655", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/20133", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/196648655"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/20133#discussion_r196648655"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/20133"}}, "body_html": "<p>Should the body of this function be enclosed in a:</p>\n<div class=\"highlight highlight-source-java\"><pre><span class=\"pl-smi\">Reference</span> ref <span class=\"pl-k\">=</span> ref();\n<span class=\"pl-k\">try</span> {\n  <span class=\"pl-c\"><span class=\"pl-c\">//</span> The main body of this method</span>\n} <span class=\"pl-k\">finally</span> {\n  ref<span class=\"pl-k\">.</span>close();\n}</pre></div>\n<p>so that it remains thread-safe (i.e., a concurrent call to <code>Graph.close()</code> won't mess things up by rendering the elements of <code>?Handles</code> invalid)</p>", "body_text": "Should the body of this function be enclosed in a:\nReference ref = ref();\ntry {\n  // The main body of this method\n} finally {\n  ref.close();\n}\nso that it remains thread-safe (i.e., a concurrent call to Graph.close() won't mess things up by rendering the elements of ?Handles invalid)"}