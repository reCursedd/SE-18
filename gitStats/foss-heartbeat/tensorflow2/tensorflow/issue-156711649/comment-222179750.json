{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/222179750", "html_url": "https://github.com/tensorflow/tensorflow/issues/2502#issuecomment-222179750", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2502", "id": 222179750, "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjE3OTc1MA==", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "created_at": "2016-05-27T15:38:20Z", "updated_at": "2016-05-27T15:38:50Z", "author_association": "CONTRIBUTOR", "body_html": "<p>BTW, when tracking capabilities through code, one thing to keep in mind is<br>\nthat there are logical devices and \"physical\" devices that don't<br>\nnecessarily coincide. For instance, the following<br>\nfrom core/kernels/cwise_op_add.cc shows that \"Add\" for int32 is registered<br>\nfor GPU logical device, but the actual implementation will run on CPU.<br>\n(This was done to avoid crossing logical device boundary for efficiency<br>\nreasons)</p>\n<p>REGISTER_KERNEL_BUILDER(Name(\"Add\")<br>\n.Device(DEVICE_GPU)<br>\n.HostMemory(\"x\")<br>\n.HostMemory(\"y\")<br>\n.HostMemory(\"z\")<br>\n.TypeConstraint(\"T\"),<br>\nBinaryOp&lt;CPUDevice, functor::add&gt;);</p>", "body_text": "BTW, when tracking capabilities through code, one thing to keep in mind is\nthat there are logical devices and \"physical\" devices that don't\nnecessarily coincide. For instance, the following\nfrom core/kernels/cwise_op_add.cc shows that \"Add\" for int32 is registered\nfor GPU logical device, but the actual implementation will run on CPU.\n(This was done to avoid crossing logical device boundary for efficiency\nreasons)\nREGISTER_KERNEL_BUILDER(Name(\"Add\")\n.Device(DEVICE_GPU)\n.HostMemory(\"x\")\n.HostMemory(\"y\")\n.HostMemory(\"z\")\n.TypeConstraint(\"T\"),\nBinaryOp<CPUDevice, functor::add>);", "body": "BTW, when tracking capabilities through code, one thing to keep in mind is\nthat there are logical devices and \"physical\" devices that don't\nnecessarily coincide. For instance, the following\nfrom core/kernels/cwise_op_add.cc shows that \"Add\" for int32 is registered\nfor GPU logical device, but the actual implementation will run on CPU.\n(This was done to avoid crossing logical device boundary for efficiency\nreasons)\n\nREGISTER_KERNEL_BUILDER(Name(\"Add\")\n                            .Device(DEVICE_GPU)\n                            .HostMemory(\"x\")\n                            .HostMemory(\"y\")\n                            .HostMemory(\"z\")\n                            .TypeConstraint<int32>(\"T\"),\n                        BinaryOp<CPUDevice, functor::add<int32>>);\n"}