{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/230239634", "html_url": "https://github.com/tensorflow/tensorflow/issues/2773#issuecomment-230239634", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2773", "id": 230239634, "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDIzOTYzNA==", "user": {"login": "peterswang", "id": 10738534, "node_id": "MDQ6VXNlcjEwNzM4NTM0", "avatar_url": "https://avatars3.githubusercontent.com/u/10738534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peterswang", "html_url": "https://github.com/peterswang", "followers_url": "https://api.github.com/users/peterswang/followers", "following_url": "https://api.github.com/users/peterswang/following{/other_user}", "gists_url": "https://api.github.com/users/peterswang/gists{/gist_id}", "starred_url": "https://api.github.com/users/peterswang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peterswang/subscriptions", "organizations_url": "https://api.github.com/users/peterswang/orgs", "repos_url": "https://api.github.com/users/peterswang/repos", "events_url": "https://api.github.com/users/peterswang/events{/privacy}", "received_events_url": "https://api.github.com/users/peterswang/received_events", "type": "User", "site_admin": false}, "created_at": "2016-07-04T08:53:52Z", "updated_at": "2016-07-04T08:53:52Z", "author_association": "NONE", "body_html": "<p>Hi,</p>\n<p>I just ran into the same issue and adding /Developer/NVIDIA/CUDA-7.5/lib in DYLD_LIBRARY_PATH as suggested didn't help.</p>\n<p>$ python<br>\nPython 2.7.11 (default, Jan 22 2016, 08:29:18)<br>\n[GCC 4.2.1 Compatible Apple LLVM 7.0.2 (clang-700.1.81)] on darwin<br>\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>import tensorflow as tf<br>\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcublas.7.5.dylib locally<br>\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcudnn.5.dylib locally<br>\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcufft.7.5.dylib locally<br>\nSegmentation fault: 11</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<p>Trying to run imagenet_train produced the following:</p>\n<p>$ bazel-bin/inception/imagenet_train --num_gpus=1 --batch_size=32 --train_dir=/tmp/imagenet_train --data_dir=$HOME/ImageNet<br>\nTraceback (most recent call last):<br>\nFile \"/Users/peter_wang/TF/models/inception/bazel-bin/inception/imagenet_train.runfiles/<strong>main</strong>/inception/imagenet_train.py\", line 23, in <br>\nimport tensorflow as tf<br>\nFile \"/usr/local/lib/python2.7/site-packages/tensorflow/<strong>init</strong>.py\", line 23, in <br>\nfrom tensorflow.python import *<br>\nFile \"/usr/local/lib/python2.7/site-packages/tensorflow/python/<strong>init</strong>.py\", line 48, in <br>\nfrom tensorflow.python import pywrap_tensorflow<br>\nFile \"/usr/local/lib/python2.7/site-packages/tensorflow/python/pywrap_tensorflow.py\", line 28, in <br>\n_pywrap_tensorflow = swig_import_helper()<br>\nFile \"/usr/local/lib/python2.7/site-packages/tensorflow/python/pywrap_tensorflow.py\", line 24, in swig_import_helper<br>\n_mod = imp.load_module('_pywrap_tensorflow', fp, pathname, description)<br>\nImportError: dlopen(/usr/local/lib/python2.7/site-packages/tensorflow/python/_pywrap_tensorflow.so, 10): Library not loaded: @rpath/libcudart.7.5.dylib<br>\nReferenced from: /usr/local/lib/python2.7/site-packages/tensorflow/python/_pywrap_tensorflow.so<br>\nReason: image not found</p>\n<p>On OS X 10.11.5, brew'ed Python 2.7.11. Followed the <a href=\"https://www.tensorflow.org/versions/r0.9/get_started/os_setup.html#create-the-pip-package-and-install\" rel=\"nofollow\">install instruction</a> and built from cloned source on 7/3.</p>\n<p>$ ./bin/x86_64/darwin/release/deviceQuery<br>\n./bin/x86_64/darwin/release/deviceQuery Starting...</p>\n<p>CUDA Device Query (Runtime API) version (CUDART static linking)</p>\n<p>Detected 1 CUDA Capable device(s)</p>\n<p>Device 0: \"GeForce GT 650M\"<br>\nCUDA Driver Version / Runtime Version          7.5 / 7.5<br>\nCUDA Capability Major/Minor version number:    3.0<br>\nTotal amount of global memory:                 512 MBytes (536543232 bytes)<br>\n( 2) Multiprocessors, (192) CUDA Cores/MP:     384 CUDA Cores<br>\nGPU Max Clock rate:                            405 MHz (0.41 GHz)<br>\nMemory Clock rate:                             2000 Mhz<br>\nMemory Bus Width:                              128-bit<br>\nL2 Cache Size:                                 262144 bytes<br>\nMaximum Texture Dimension Size (x,y,z)         1D=(65536), 2D=(65536, 65536), 3D=(4096, 4096, 4096)<br>\nMaximum Layered 1D Texture Size, (num) layers  1D=(16384), 2048 layers<br>\nMaximum Layered 2D Texture Size, (num) layers  2D=(16384, 16384), 2048 layers<br>\nTotal amount of constant memory:               65536 bytes<br>\nTotal amount of shared memory per block:       49152 bytes<br>\nTotal number of registers available per block: 65536<br>\nWarp size:                                     32<br>\nMaximum number of threads per multiprocessor:  2048<br>\nMaximum number of threads per block:           1024<br>\nMax dimension size of a thread block (x,y,z): (1024, 1024, 64)<br>\nMax dimension size of a grid size    (x,y,z): (2147483647, 65535, 65535)<br>\nMaximum memory pitch:                          2147483647 bytes<br>\nTexture alignment:                             512 bytes<br>\nConcurrent copy and kernel execution:          Yes with 1 copy engine(s)<br>\nRun time limit on kernels:                     Yes<br>\nIntegrated GPU sharing Host Memory:            No<br>\nSupport host page-locked memory mapping:       Yes<br>\nAlignment requirement for Surfaces:            Yes<br>\nDevice has ECC support:                        Disabled<br>\nDevice supports Unified Addressing (UVA):      Yes<br>\nDevice PCI Domain ID / Bus ID / location ID:   0 / 1 / 0<br>\nCompute Mode:<br>\n&lt; Default (multiple host threads can use ::cudaSetDevice() with device simultaneously) &gt;</p>\n<p>deviceQuery, CUDA Driver = CUDART, CUDA Driver Version = 7.5, CUDA Runtime Version = 7.5, NumDevs = 1, Device0 = GeForce GT 650M<br>\nResult = PASS</p>", "body_text": "Hi,\nI just ran into the same issue and adding /Developer/NVIDIA/CUDA-7.5/lib in DYLD_LIBRARY_PATH as suggested didn't help.\n$ python\nPython 2.7.11 (default, Jan 22 2016, 08:29:18)\n[GCC 4.2.1 Compatible Apple LLVM 7.0.2 (clang-700.1.81)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n\n\n\nimport tensorflow as tf\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcublas.7.5.dylib locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcudnn.5.dylib locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcufft.7.5.dylib locally\nSegmentation fault: 11\n\n\n\nTrying to run imagenet_train produced the following:\n$ bazel-bin/inception/imagenet_train --num_gpus=1 --batch_size=32 --train_dir=/tmp/imagenet_train --data_dir=$HOME/ImageNet\nTraceback (most recent call last):\nFile \"/Users/peter_wang/TF/models/inception/bazel-bin/inception/imagenet_train.runfiles/main/inception/imagenet_train.py\", line 23, in \nimport tensorflow as tf\nFile \"/usr/local/lib/python2.7/site-packages/tensorflow/init.py\", line 23, in \nfrom tensorflow.python import *\nFile \"/usr/local/lib/python2.7/site-packages/tensorflow/python/init.py\", line 48, in \nfrom tensorflow.python import pywrap_tensorflow\nFile \"/usr/local/lib/python2.7/site-packages/tensorflow/python/pywrap_tensorflow.py\", line 28, in \n_pywrap_tensorflow = swig_import_helper()\nFile \"/usr/local/lib/python2.7/site-packages/tensorflow/python/pywrap_tensorflow.py\", line 24, in swig_import_helper\n_mod = imp.load_module('_pywrap_tensorflow', fp, pathname, description)\nImportError: dlopen(/usr/local/lib/python2.7/site-packages/tensorflow/python/_pywrap_tensorflow.so, 10): Library not loaded: @rpath/libcudart.7.5.dylib\nReferenced from: /usr/local/lib/python2.7/site-packages/tensorflow/python/_pywrap_tensorflow.so\nReason: image not found\nOn OS X 10.11.5, brew'ed Python 2.7.11. Followed the install instruction and built from cloned source on 7/3.\n$ ./bin/x86_64/darwin/release/deviceQuery\n./bin/x86_64/darwin/release/deviceQuery Starting...\nCUDA Device Query (Runtime API) version (CUDART static linking)\nDetected 1 CUDA Capable device(s)\nDevice 0: \"GeForce GT 650M\"\nCUDA Driver Version / Runtime Version          7.5 / 7.5\nCUDA Capability Major/Minor version number:    3.0\nTotal amount of global memory:                 512 MBytes (536543232 bytes)\n( 2) Multiprocessors, (192) CUDA Cores/MP:     384 CUDA Cores\nGPU Max Clock rate:                            405 MHz (0.41 GHz)\nMemory Clock rate:                             2000 Mhz\nMemory Bus Width:                              128-bit\nL2 Cache Size:                                 262144 bytes\nMaximum Texture Dimension Size (x,y,z)         1D=(65536), 2D=(65536, 65536), 3D=(4096, 4096, 4096)\nMaximum Layered 1D Texture Size, (num) layers  1D=(16384), 2048 layers\nMaximum Layered 2D Texture Size, (num) layers  2D=(16384, 16384), 2048 layers\nTotal amount of constant memory:               65536 bytes\nTotal amount of shared memory per block:       49152 bytes\nTotal number of registers available per block: 65536\nWarp size:                                     32\nMaximum number of threads per multiprocessor:  2048\nMaximum number of threads per block:           1024\nMax dimension size of a thread block (x,y,z): (1024, 1024, 64)\nMax dimension size of a grid size    (x,y,z): (2147483647, 65535, 65535)\nMaximum memory pitch:                          2147483647 bytes\nTexture alignment:                             512 bytes\nConcurrent copy and kernel execution:          Yes with 1 copy engine(s)\nRun time limit on kernels:                     Yes\nIntegrated GPU sharing Host Memory:            No\nSupport host page-locked memory mapping:       Yes\nAlignment requirement for Surfaces:            Yes\nDevice has ECC support:                        Disabled\nDevice supports Unified Addressing (UVA):      Yes\nDevice PCI Domain ID / Bus ID / location ID:   0 / 1 / 0\nCompute Mode:\n< Default (multiple host threads can use ::cudaSetDevice() with device simultaneously) >\ndeviceQuery, CUDA Driver = CUDART, CUDA Driver Version = 7.5, CUDA Runtime Version = 7.5, NumDevs = 1, Device0 = GeForce GT 650M\nResult = PASS", "body": "Hi,\n\nI just ran into the same issue and adding /Developer/NVIDIA/CUDA-7.5/lib in DYLD_LIBRARY_PATH as suggested didn't help.\n\n$ python\nPython 2.7.11 (default, Jan 22 2016, 08:29:18) \n[GCC 4.2.1 Compatible Apple LLVM 7.0.2 (clang-700.1.81)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n\n> > > import tensorflow as tf\n> > > I tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcublas.7.5.dylib locally\n> > > I tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcudnn.5.dylib locally\n> > > I tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcufft.7.5.dylib locally\n> > > Segmentation fault: 11\n\nTrying to run imagenet_train produced the following:\n\n$ bazel-bin/inception/imagenet_train --num_gpus=1 --batch_size=32 --train_dir=/tmp/imagenet_train --data_dir=$HOME/ImageNet\nTraceback (most recent call last):\n  File \"/Users/peter_wang/TF/models/inception/bazel-bin/inception/imagenet_train.runfiles/**main**/inception/imagenet_train.py\", line 23, in <module>\n    import tensorflow as tf\n  File \"/usr/local/lib/python2.7/site-packages/tensorflow/**init**.py\", line 23, in <module>\n    from tensorflow.python import *\n  File \"/usr/local/lib/python2.7/site-packages/tensorflow/python/**init**.py\", line 48, in <module>\n    from tensorflow.python import pywrap_tensorflow\n  File \"/usr/local/lib/python2.7/site-packages/tensorflow/python/pywrap_tensorflow.py\", line 28, in <module>\n    _pywrap_tensorflow = swig_import_helper()\n  File \"/usr/local/lib/python2.7/site-packages/tensorflow/python/pywrap_tensorflow.py\", line 24, in swig_import_helper\n    _mod = imp.load_module('_pywrap_tensorflow', fp, pathname, description)\nImportError: dlopen(/usr/local/lib/python2.7/site-packages/tensorflow/python/_pywrap_tensorflow.so, 10): Library not loaded: @rpath/libcudart.7.5.dylib\n  Referenced from: /usr/local/lib/python2.7/site-packages/tensorflow/python/_pywrap_tensorflow.so\n  Reason: image not found\n\nOn OS X 10.11.5, brew'ed Python 2.7.11. Followed the [install instruction](https://www.tensorflow.org/versions/r0.9/get_started/os_setup.html#create-the-pip-package-and-install) and built from cloned source on 7/3. \n\n$ ./bin/x86_64/darwin/release/deviceQuery\n./bin/x86_64/darwin/release/deviceQuery Starting...\n\n CUDA Device Query (Runtime API) version (CUDART static linking)\n\nDetected 1 CUDA Capable device(s)\n\nDevice 0: \"GeForce GT 650M\"\n  CUDA Driver Version / Runtime Version          7.5 / 7.5\n  CUDA Capability Major/Minor version number:    3.0\n  Total amount of global memory:                 512 MBytes (536543232 bytes)\n  ( 2) Multiprocessors, (192) CUDA Cores/MP:     384 CUDA Cores\n  GPU Max Clock rate:                            405 MHz (0.41 GHz)\n  Memory Clock rate:                             2000 Mhz\n  Memory Bus Width:                              128-bit\n  L2 Cache Size:                                 262144 bytes\n  Maximum Texture Dimension Size (x,y,z)         1D=(65536), 2D=(65536, 65536), 3D=(4096, 4096, 4096)\n  Maximum Layered 1D Texture Size, (num) layers  1D=(16384), 2048 layers\n  Maximum Layered 2D Texture Size, (num) layers  2D=(16384, 16384), 2048 layers\n  Total amount of constant memory:               65536 bytes\n  Total amount of shared memory per block:       49152 bytes\n  Total number of registers available per block: 65536\n  Warp size:                                     32\n  Maximum number of threads per multiprocessor:  2048\n  Maximum number of threads per block:           1024\n  Max dimension size of a thread block (x,y,z): (1024, 1024, 64)\n  Max dimension size of a grid size    (x,y,z): (2147483647, 65535, 65535)\n  Maximum memory pitch:                          2147483647 bytes\n  Texture alignment:                             512 bytes\n  Concurrent copy and kernel execution:          Yes with 1 copy engine(s)\n  Run time limit on kernels:                     Yes\n  Integrated GPU sharing Host Memory:            No\n  Support host page-locked memory mapping:       Yes\n  Alignment requirement for Surfaces:            Yes\n  Device has ECC support:                        Disabled\n  Device supports Unified Addressing (UVA):      Yes\n  Device PCI Domain ID / Bus ID / location ID:   0 / 1 / 0\n  Compute Mode:\n     < Default (multiple host threads can use ::cudaSetDevice() with device simultaneously) >\n\ndeviceQuery, CUDA Driver = CUDART, CUDA Driver Version = 7.5, CUDA Runtime Version = 7.5, NumDevs = 1, Device0 = GeForce GT 650M\nResult = PASS\n"}