{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/245290885", "html_url": "https://github.com/tensorflow/tensorflow/issues/4025#issuecomment-245290885", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4025", "id": 245290885, "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTI5MDg4NQ==", "user": {"login": "craymichael", "id": 20629897, "node_id": "MDQ6VXNlcjIwNjI5ODk3", "avatar_url": "https://avatars2.githubusercontent.com/u/20629897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craymichael", "html_url": "https://github.com/craymichael", "followers_url": "https://api.github.com/users/craymichael/followers", "following_url": "https://api.github.com/users/craymichael/following{/other_user}", "gists_url": "https://api.github.com/users/craymichael/gists{/gist_id}", "starred_url": "https://api.github.com/users/craymichael/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craymichael/subscriptions", "organizations_url": "https://api.github.com/users/craymichael/orgs", "repos_url": "https://api.github.com/users/craymichael/repos", "events_url": "https://api.github.com/users/craymichael/events{/privacy}", "received_events_url": "https://api.github.com/users/craymichael/received_events", "type": "User", "site_admin": false}, "created_at": "2016-09-07T14:05:07Z", "updated_at": "2016-09-07T14:05:07Z", "author_association": "NONE", "body_html": "<p>Oh thanks for clarifying <code>candidate_split_sums</code>, I should've figured that one out. As to <code>candidate_split_features</code>, I made the assumption that the parameter I set would be used as the max features; counting the degrees of freedom (embeddings) for each categorical feature gave me 87 inputs, which is correct.</p>\n<p>Follow up question, how do I decipher which feature is which? I input the features in the form of a dictionary via <code>input_fn</code>, so there's no fixed order going in. Additionally, is there a straightforward way of knowing when a node is growing and the class counts/feature being split? If I have the right understanding now, I should be able to calculate the gini impurity index using the candidate class counts for each candidate feature whenever a node is growing, given I know when that node grows and which feature is which.</p>\n<p>What does <code>accumulator_sums</code> track? From what I've found, forests accumulate the decreases is Gini impurity from the optimal splits found.</p>", "body_text": "Oh thanks for clarifying candidate_split_sums, I should've figured that one out. As to candidate_split_features, I made the assumption that the parameter I set would be used as the max features; counting the degrees of freedom (embeddings) for each categorical feature gave me 87 inputs, which is correct.\nFollow up question, how do I decipher which feature is which? I input the features in the form of a dictionary via input_fn, so there's no fixed order going in. Additionally, is there a straightforward way of knowing when a node is growing and the class counts/feature being split? If I have the right understanding now, I should be able to calculate the gini impurity index using the candidate class counts for each candidate feature whenever a node is growing, given I know when that node grows and which feature is which.\nWhat does accumulator_sums track? From what I've found, forests accumulate the decreases is Gini impurity from the optimal splits found.", "body": "Oh thanks for clarifying `candidate_split_sums`, I should've figured that one out. As to `candidate_split_features`, I made the assumption that the parameter I set would be used as the max features; counting the degrees of freedom (embeddings) for each categorical feature gave me 87 inputs, which is correct.\n\nFollow up question, how do I decipher which feature is which? I input the features in the form of a dictionary via `input_fn`, so there's no fixed order going in. Additionally, is there a straightforward way of knowing when a node is growing and the class counts/feature being split? If I have the right understanding now, I should be able to calculate the gini impurity index using the candidate class counts for each candidate feature whenever a node is growing, given I know when that node grows and which feature is which. \n\nWhat does `accumulator_sums` track? From what I've found, forests accumulate the decreases is Gini impurity from the optimal splits found.\n"}