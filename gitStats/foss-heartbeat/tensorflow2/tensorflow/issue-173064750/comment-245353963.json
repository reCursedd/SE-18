{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/245353963", "html_url": "https://github.com/tensorflow/tensorflow/issues/4025#issuecomment-245353963", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4025", "id": 245353963, "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTM1Mzk2Mw==", "user": {"login": "gilberthendry", "id": 18124217, "node_id": "MDQ6VXNlcjE4MTI0MjE3", "avatar_url": "https://avatars0.githubusercontent.com/u/18124217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gilberthendry", "html_url": "https://github.com/gilberthendry", "followers_url": "https://api.github.com/users/gilberthendry/followers", "following_url": "https://api.github.com/users/gilberthendry/following{/other_user}", "gists_url": "https://api.github.com/users/gilberthendry/gists{/gist_id}", "starred_url": "https://api.github.com/users/gilberthendry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gilberthendry/subscriptions", "organizations_url": "https://api.github.com/users/gilberthendry/orgs", "repos_url": "https://api.github.com/users/gilberthendry/repos", "events_url": "https://api.github.com/users/gilberthendry/events{/privacy}", "received_events_url": "https://api.github.com/users/gilberthendry/received_events", "type": "User", "site_admin": false}, "created_at": "2016-09-07T17:20:49Z", "updated_at": "2016-09-07T17:20:49Z", "author_association": "NONE", "body_html": "<p>_ParseDense does a sorted(data.keys()) when concatenating dense inputs, so you'll get a consistent ordering according to python sort.</p>\n<p>There are two maps - node_to_accumulator_map and accumulator_to_node_map that let you translate between node id and accumulator id (a node assigned to an accumulator is growing).  The accumulator id is then used to index into e.g. candidate_split_features, candidate_split_sums, etc.</p>\n<p>accumulator_sums track the total class counts that arrive to an accumulator, and candidate_split_sums track the class counts that take the LEFT branch.  We can then infer the right-branch-taken class counts.</p>", "body_text": "_ParseDense does a sorted(data.keys()) when concatenating dense inputs, so you'll get a consistent ordering according to python sort.\nThere are two maps - node_to_accumulator_map and accumulator_to_node_map that let you translate between node id and accumulator id (a node assigned to an accumulator is growing).  The accumulator id is then used to index into e.g. candidate_split_features, candidate_split_sums, etc.\naccumulator_sums track the total class counts that arrive to an accumulator, and candidate_split_sums track the class counts that take the LEFT branch.  We can then infer the right-branch-taken class counts.", "body": "_ParseDense does a sorted(data.keys()) when concatenating dense inputs, so you'll get a consistent ordering according to python sort.  \n\nThere are two maps - node_to_accumulator_map and accumulator_to_node_map that let you translate between node id and accumulator id (a node assigned to an accumulator is growing).  The accumulator id is then used to index into e.g. candidate_split_features, candidate_split_sums, etc.  \n\naccumulator_sums track the total class counts that arrive to an accumulator, and candidate_split_sums track the class counts that take the LEFT branch.  We can then infer the right-branch-taken class counts.  \n"}