{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/242826086", "html_url": "https://github.com/tensorflow/tensorflow/issues/4025#issuecomment-242826086", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4025", "id": 242826086, "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjgyNjA4Ng==", "user": {"login": "gilberthendry", "id": 18124217, "node_id": "MDQ6VXNlcjE4MTI0MjE3", "avatar_url": "https://avatars0.githubusercontent.com/u/18124217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gilberthendry", "html_url": "https://github.com/gilberthendry", "followers_url": "https://api.github.com/users/gilberthendry/followers", "following_url": "https://api.github.com/users/gilberthendry/following{/other_user}", "gists_url": "https://api.github.com/users/gilberthendry/gists{/gist_id}", "starred_url": "https://api.github.com/users/gilberthendry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gilberthendry/subscriptions", "organizations_url": "https://api.github.com/users/gilberthendry/orgs", "repos_url": "https://api.github.com/users/gilberthendry/repos", "events_url": "https://api.github.com/users/gilberthendry/events{/privacy}", "received_events_url": "https://api.github.com/users/gilberthendry/received_events", "type": "User", "site_admin": false}, "created_at": "2016-08-26T19:14:12Z", "updated_at": "2016-08-26T19:14:12Z", "author_association": "NONE", "body_html": "<p>I will certainly look into improving the interface and making it more compatible with other Estimators, though I can't promise a timeline right now.</p>\n<p>The two-forest method would work.  Another thing that might work is translating the categorical features into dense Tensors (if they're strings, try to hash and reinterpret the bits as floats.  If they're already numbers and the index space is large but the value space is small, treat the index space as the feature value. If the value space is large but the index space is small, see if tf.sparse_to_dense won't blow up).  Another thing that would work is train an embedding on your sparse features and concat that onto your dense ones.</p>", "body_text": "I will certainly look into improving the interface and making it more compatible with other Estimators, though I can't promise a timeline right now.\nThe two-forest method would work.  Another thing that might work is translating the categorical features into dense Tensors (if they're strings, try to hash and reinterpret the bits as floats.  If they're already numbers and the index space is large but the value space is small, treat the index space as the feature value. If the value space is large but the index space is small, see if tf.sparse_to_dense won't blow up).  Another thing that would work is train an embedding on your sparse features and concat that onto your dense ones.", "body": "I will certainly look into improving the interface and making it more compatible with other Estimators, though I can't promise a timeline right now.\n\nThe two-forest method would work.  Another thing that might work is translating the categorical features into dense Tensors (if they're strings, try to hash and reinterpret the bits as floats.  If they're already numbers and the index space is large but the value space is small, treat the index space as the feature value. If the value space is large but the index space is small, see if tf.sparse_to_dense won't blow up).  Another thing that would work is train an embedding on your sparse features and concat that onto your dense ones.\n"}