{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/144678171", "pull_request_review_id": 69374938, "id": 144678171, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDY3ODE3MQ==", "diff_hunk": "@@ -77,4 +80,36 @@ public void nodesInAGraph() {\n       assertEquals(5, n.shape().size(1));\n     }\n   }\n+\n+  @Test\n+  public void equalsWorksCorrectly() {\n+    Shape s1 = Shape.make(-1, 2, 3);\n+    Shape s2 = s1;\n+    Shape s3 = Shape.make(-1, 2, 3);\n+    Shape s4 = Shape.make(-1, 2, 4);\n+    Shape s5 = Shape.make(-1, 2, 3, 4);\n+    Shape s6 = Shape.make(-1, 2);\n+    Object o = new Object();\n+\n+    assertEquals(s1, s2);\n+    assertEquals(s1, s3);\n+    assertNotEquals(s1, s4);\n+    assertNotEquals(s1, s5);\n+    assertNotEquals(s1, s6);\n+    assertNotEquals(s1, o);\n+    assertNotEquals(s1, null);\n+  }\n+\n+  @Test\n+  public void hashCodeIsAsExpected() {\n+    long[] d1 = new long[] {1, 2, 3, 4};\n+    long[] d2 = new long[] {};\n+\n+    Shape s1 = Shape.make(1, 2, 3, 4);\n+    Shape s2 = Shape.scalar();\n+\n+    assertEquals(Arrays.hashCode(d1), s1.hashCode());\n+    assertEquals(Arrays.hashCode(d2), s2.hashCode());", "path": "tensorflow/java/src/test/java/org/tensorflow/ShapeTest.java", "position": null, "original_position": 48, "commit_id": "381615ae502c9feaa61a35c1f7e4ec0b2c00ca28", "original_commit_id": "42a810658da6d074c47cbd7bdd83b4b0956ed263", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "body": "These assertions are testing the implementation rather than behavior. Let's modify them to do the latter, so something like:\r\n\r\n```java\r\nassertEquals(Shape.make(1, 2, 3, 4).hashCode(), Shape.make(1, 2, 3, 4).hashCode());\r\nassertNotEquals(Shape.make(1, 2).hashCode9), Shape.make(1, 3).hashCode());\r\n```", "created_at": "2017-10-14T00:01:01Z", "updated_at": "2017-10-24T09:38:40Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/13690#discussion_r144678171", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/13690", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/144678171"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/13690#discussion_r144678171"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/13690"}}, "body_html": "<p>These assertions are testing the implementation rather than behavior. Let's modify them to do the latter, so something like:</p>\n<div class=\"highlight highlight-source-java\"><pre>assertEquals(<span class=\"pl-smi\">Shape</span><span class=\"pl-k\">.</span>make(<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">4</span>)<span class=\"pl-k\">.</span>hashCode(), <span class=\"pl-smi\">Shape</span><span class=\"pl-k\">.</span>make(<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">4</span>)<span class=\"pl-k\">.</span>hashCode());\nassertNotEquals(<span class=\"pl-smi\">Shape</span><span class=\"pl-k\">.</span>make(<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>)<span class=\"pl-k\">.</span>hashCode9), <span class=\"pl-smi\">Shape</span><span class=\"pl-k\">.</span>make(<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">3</span>)<span class=\"pl-k\">.</span>hashCode());</pre></div>", "body_text": "These assertions are testing the implementation rather than behavior. Let's modify them to do the latter, so something like:\nassertEquals(Shape.make(1, 2, 3, 4).hashCode(), Shape.make(1, 2, 3, 4).hashCode());\nassertNotEquals(Shape.make(1, 2).hashCode9), Shape.make(1, 3).hashCode());"}