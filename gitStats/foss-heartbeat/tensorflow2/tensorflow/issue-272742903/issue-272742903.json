{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14423", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14423/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14423/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14423/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14423", "id": 272742903, "node_id": "MDU6SXNzdWUyNzI3NDI5MDM=", "number": 14423, "title": "Using newer NVIDIA drivers causes TF to freeze the entire system if terminated", "user": {"login": "momih", "id": 22825943, "node_id": "MDQ6VXNlcjIyODI1OTQz", "avatar_url": "https://avatars1.githubusercontent.com/u/22825943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/momih", "html_url": "https://github.com/momih", "followers_url": "https://api.github.com/users/momih/followers", "following_url": "https://api.github.com/users/momih/following{/other_user}", "gists_url": "https://api.github.com/users/momih/gists{/gist_id}", "starred_url": "https://api.github.com/users/momih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/momih/subscriptions", "organizations_url": "https://api.github.com/users/momih/orgs", "repos_url": "https://api.github.com/users/momih/repos", "events_url": "https://api.github.com/users/momih/events{/privacy}", "received_events_url": "https://api.github.com/users/momih/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "benbarsdell", "id": 3979096, "node_id": "MDQ6VXNlcjM5NzkwOTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/3979096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benbarsdell", "html_url": "https://github.com/benbarsdell", "followers_url": "https://api.github.com/users/benbarsdell/followers", "following_url": "https://api.github.com/users/benbarsdell/following{/other_user}", "gists_url": "https://api.github.com/users/benbarsdell/gists{/gist_id}", "starred_url": "https://api.github.com/users/benbarsdell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benbarsdell/subscriptions", "organizations_url": "https://api.github.com/users/benbarsdell/orgs", "repos_url": "https://api.github.com/users/benbarsdell/repos", "events_url": "https://api.github.com/users/benbarsdell/events{/privacy}", "received_events_url": "https://api.github.com/users/benbarsdell/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "benbarsdell", "id": 3979096, "node_id": "MDQ6VXNlcjM5NzkwOTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/3979096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benbarsdell", "html_url": "https://github.com/benbarsdell", "followers_url": "https://api.github.com/users/benbarsdell/followers", "following_url": "https://api.github.com/users/benbarsdell/following{/other_user}", "gists_url": "https://api.github.com/users/benbarsdell/gists{/gist_id}", "starred_url": "https://api.github.com/users/benbarsdell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benbarsdell/subscriptions", "organizations_url": "https://api.github.com/users/benbarsdell/orgs", "repos_url": "https://api.github.com/users/benbarsdell/repos", "events_url": "https://api.github.com/users/benbarsdell/events{/privacy}", "received_events_url": "https://api.github.com/users/benbarsdell/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2017-11-09T22:09:59Z", "updated_at": "2018-09-14T12:04:24Z", "closed_at": "2018-02-07T18:09:31Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu 16.04.3 LTS (Xenial Xerus)\"</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: Binary, through <code>pip install tensorflow-gpu</code></li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.3.0, Git Version - <code>v1.3.0-rc2-20-g0787eee</code></li>\n<li><strong>Python version</strong>: 2.7.13</li>\n<li><strong>CUDA/cuDNN version</strong>: CUDA - 8.0.61, cuDNN - 6</li>\n<li><strong>GPU model and memory</strong>: GeForce GTX 950M, 2GB</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I had changed my NVIDIA driver version to 387.12 some time ago. After that, sometimes when I'd terminate TF code (either with <code>^C</code> in terminal or closing IPython tab in Spyder) it would successfully terminate with <code>KeyBoardInterrupt</code>. However the other times when I'd terminate, my entire computer would freeze and become unresponsive. Couldn't use <code>Ctrl + Alt + F1</code> to login into a virtual console and kill the process as keyboard also became unresponsive. However, if I was playing music through Spotify, it would continue playing without any interruption.<br>\nThis would happen with different files, not one specific file. But I noticed it would usually happen during the run of <code>sess.run(tf.global_variables_initializer())</code> in any of the files. It also has happened some other times like -</p>\n<ul>\n<li>Training completed in Spyder console and Python was idle and I closed the console tab in Spyder</li>\n<li>Training completed in Spyder IPython tab and another file was run in terminal. I closed the IPython tab (which was idle) in Spyder when the new TF session in the terminal was initializing variables and then my computer froze completely.</li>\n</ul>\n<p>I don't think the contents of the code mattered. It would still freeze even if all my code did was define a variable and then initialize it.<br>\nSo I tried reverting back to NVIDIA 384.98 to see if anything changed but it was still freezing. Now I've reverted back to NVIDIA 381.22 and I've tried terminating TF when it is initializing variables and so far the freezing hasn't happened.</p>\n<p>Another thing I'd noticed after changing to NVIDIA 387 is that <code>tf.global_variables_initializer()</code> became very slow, always taking 10+ seconds. I found <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"209319588\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/7755\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/7755/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/7755\">#7755</a> where I saw it could be because of CUDA generating PTX. So I tried calling the init a second time in the same session and it would run in milliseconds. Same for calling init on CPU. I understand the init can be slow when run on GPU, however I never noticed it running slow prior to when I changed to a newer NVIDIA driver. Even after the revert to 381, it still runs slow.</p>\n<h3>Source code / logs</h3>\n<p>I'd really like to know what I can log and how to do that. I'm not sure if I can use gdb as my computer becomes unresponsive so I have no way of going into a terminal.<br>\nBelow is the sample code I would run and terminate during init to see if computer froze.</p>\n<pre><code>import tensorflow as tf\ninitial = tf.Variable(tf.truncated_normal([1,3], stddev=0.01, seed=1))\nsess = tf.Session()\nprint \"Starting initialization\"\nsess.run(tf.global_variables_initializer())\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04.3 LTS (Xenial Xerus)\"\nTensorFlow installed from (source or binary): Binary, through pip install tensorflow-gpu\nTensorFlow version (use command below): 1.3.0, Git Version - v1.3.0-rc2-20-g0787eee\nPython version: 2.7.13\nCUDA/cuDNN version: CUDA - 8.0.61, cuDNN - 6\nGPU model and memory: GeForce GTX 950M, 2GB\n\nDescribe the problem\nI had changed my NVIDIA driver version to 387.12 some time ago. After that, sometimes when I'd terminate TF code (either with ^C in terminal or closing IPython tab in Spyder) it would successfully terminate with KeyBoardInterrupt. However the other times when I'd terminate, my entire computer would freeze and become unresponsive. Couldn't use Ctrl + Alt + F1 to login into a virtual console and kill the process as keyboard also became unresponsive. However, if I was playing music through Spotify, it would continue playing without any interruption.\nThis would happen with different files, not one specific file. But I noticed it would usually happen during the run of sess.run(tf.global_variables_initializer()) in any of the files. It also has happened some other times like -\n\nTraining completed in Spyder console and Python was idle and I closed the console tab in Spyder\nTraining completed in Spyder IPython tab and another file was run in terminal. I closed the IPython tab (which was idle) in Spyder when the new TF session in the terminal was initializing variables and then my computer froze completely.\n\nI don't think the contents of the code mattered. It would still freeze even if all my code did was define a variable and then initialize it.\nSo I tried reverting back to NVIDIA 384.98 to see if anything changed but it was still freezing. Now I've reverted back to NVIDIA 381.22 and I've tried terminating TF when it is initializing variables and so far the freezing hasn't happened.\nAnother thing I'd noticed after changing to NVIDIA 387 is that tf.global_variables_initializer() became very slow, always taking 10+ seconds. I found #7755 where I saw it could be because of CUDA generating PTX. So I tried calling the init a second time in the same session and it would run in milliseconds. Same for calling init on CPU. I understand the init can be slow when run on GPU, however I never noticed it running slow prior to when I changed to a newer NVIDIA driver. Even after the revert to 381, it still runs slow.\nSource code / logs\nI'd really like to know what I can log and how to do that. I'm not sure if I can use gdb as my computer becomes unresponsive so I have no way of going into a terminal.\nBelow is the sample code I would run and terminate during init to see if computer froze.\nimport tensorflow as tf\ninitial = tf.Variable(tf.truncated_normal([1,3], stddev=0.01, seed=1))\nsess = tf.Session()\nprint \"Starting initialization\"\nsess.run(tf.global_variables_initializer())", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04.3 LTS (Xenial Xerus)\"\r\n- **TensorFlow installed from (source or binary)**: Binary, through `pip install tensorflow-gpu`\r\n- **TensorFlow version (use command below)**: 1.3.0, Git Version - `v1.3.0-rc2-20-g0787eee`\r\n- **Python version**: 2.7.13\r\n- **CUDA/cuDNN version**: CUDA - 8.0.61, cuDNN - 6\r\n- **GPU model and memory**: GeForce GTX 950M, 2GB\r\n\r\n### Describe the problem\r\nI had changed my NVIDIA driver version to 387.12 some time ago. After that, sometimes when I'd terminate TF code (either with `^C` in terminal or closing IPython tab in Spyder) it would successfully terminate with `KeyBoardInterrupt`. However the other times when I'd terminate, my entire computer would freeze and become unresponsive. Couldn't use `Ctrl + Alt + F1` to login into a virtual console and kill the process as keyboard also became unresponsive. However, if I was playing music through Spotify, it would continue playing without any interruption. \r\nThis would happen with different files, not one specific file. But I noticed it would usually happen during the run of `sess.run(tf.global_variables_initializer())` in any of the files. It also has happened some other times like - \r\n - Training completed in Spyder console and Python was idle and I closed the console tab in Spyder\r\n - Training completed in Spyder IPython tab and another file was run in terminal. I closed the IPython tab (which was idle) in Spyder when the new TF session in the terminal was initializing variables and then my computer froze completely. \r\n\r\nI don't think the contents of the code mattered. It would still freeze even if all my code did was define a variable and then initialize it.\r\nSo I tried reverting back to NVIDIA 384.98 to see if anything changed but it was still freezing. Now I've reverted back to NVIDIA 381.22 and I've tried terminating TF when it is initializing variables and so far the freezing hasn't happened. \r\n\r\nAnother thing I'd noticed after changing to NVIDIA 387 is that `tf.global_variables_initializer()` became very slow, always taking 10+ seconds. I found #7755 where I saw it could be because of CUDA generating PTX. So I tried calling the init a second time in the same session and it would run in milliseconds. Same for calling init on CPU. I understand the init can be slow when run on GPU, however I never noticed it running slow prior to when I changed to a newer NVIDIA driver. Even after the revert to 381, it still runs slow. \r\n\r\n\r\n### Source code / logs\r\nI'd really like to know what I can log and how to do that. I'm not sure if I can use gdb as my computer becomes unresponsive so I have no way of going into a terminal. \r\nBelow is the sample code I would run and terminate during init to see if computer froze.\r\n```\r\nimport tensorflow as tf\r\ninitial = tf.Variable(tf.truncated_normal([1,3], stddev=0.01, seed=1))\r\nsess = tf.Session()\r\nprint \"Starting initialization\"\r\nsess.run(tf.global_variables_initializer())\r\n```\r\n"}