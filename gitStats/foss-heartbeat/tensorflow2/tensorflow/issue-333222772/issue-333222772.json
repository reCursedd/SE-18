{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20091", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20091/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20091/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20091/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20091", "id": 333222772, "node_id": "MDU6SXNzdWUzMzMyMjI3NzI=", "number": 20091, "title": "NaN appearing on tf.gradients calculation with tf.where and division by zero on the false branch", "user": {"login": "mikefairbank", "id": 40356353, "node_id": "MDQ6VXNlcjQwMzU2MzUz", "avatar_url": "https://avatars2.githubusercontent.com/u/40356353?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikefairbank", "html_url": "https://github.com/mikefairbank", "followers_url": "https://api.github.com/users/mikefairbank/followers", "following_url": "https://api.github.com/users/mikefairbank/following{/other_user}", "gists_url": "https://api.github.com/users/mikefairbank/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikefairbank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikefairbank/subscriptions", "organizations_url": "https://api.github.com/users/mikefairbank/orgs", "repos_url": "https://api.github.com/users/mikefairbank/repos", "events_url": "https://api.github.com/users/mikefairbank/events{/privacy}", "received_events_url": "https://api.github.com/users/mikefairbank/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-06-18T10:59:47Z", "updated_at": "2018-08-22T16:35:37Z", "closed_at": "2018-08-22T16:35:37Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:<br>\nYes, script is below</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:<br>\nLinux 4.15.0-23-generic <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"115938248\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/25\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/25/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/25\">#25</a>-Ubuntu SMP Wed May 23 18:02:16 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux<br>\nVERSION=\"18.04 LTS (Bionic Beaver)\"</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:<br>\nbinary</li>\n<li><strong>TensorFlow version (use command below)</strong>:<br>\nv1.8.0-0-g93bc2e2072 1.8.0</li>\n<li><strong>Python version</strong>:<br>\nPython 3.6.5</li>\n<li><strong>Bazel version (if compiling from source)</strong>: n/a</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: n/a</li>\n<li><strong>CUDA/cuDNN version</strong>: n/a, using CPU version</li>\n<li><strong>GPU model and memory</strong>: n/a using CPU</li>\n<li><strong>Exact command to reproduce</strong>: just run \"python3 script.py\"</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>When using the tf.where function where a division by zero exists in one of the two where branches, you get a NaN gradient even if the division by zero was on the where branch which was not executed.</p>\n<p>This seems similar to <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"157280822\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/2540\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/2540/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/2540\">#2540</a> but the workarounds suggested there (e.g. using tf.boolean_mask) did not work.</p>\n<h3>Source code / logs</h3>\n<pre><code>import tensorflow as tf\nsess = tf.Session()\nW1 = tf.Variable([2.0])\nW2 = tf.Variable([0.0])\noutput=tf.where(W1&gt;4, W1/W2, tf.zeros_like(W1))  # gives correct answer (zero) since W1&gt;4 is false\ngradient=tf.gradients(output, W2)[0] # should be zero, but it gives NaN\nsess.run(tf.global_variables_initializer())\nprint(sess.run([output, gradient]))\n</code></pre>\n<h1>Program output:</h1>\n<p>#[array([0.], dtype=float32), array([nan], dtype=float32)]</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nYes, script is below\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nLinux 4.15.0-23-generic #25-Ubuntu SMP Wed May 23 18:02:16 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux\nVERSION=\"18.04 LTS (Bionic Beaver)\"\nTensorFlow installed from (source or binary):\nbinary\nTensorFlow version (use command below):\nv1.8.0-0-g93bc2e2072 1.8.0\nPython version:\nPython 3.6.5\nBazel version (if compiling from source): n/a\nGCC/Compiler version (if compiling from source): n/a\nCUDA/cuDNN version: n/a, using CPU version\nGPU model and memory: n/a using CPU\nExact command to reproduce: just run \"python3 script.py\"\n\nDescribe the problem\nWhen using the tf.where function where a division by zero exists in one of the two where branches, you get a NaN gradient even if the division by zero was on the where branch which was not executed.\nThis seems similar to #2540 but the workarounds suggested there (e.g. using tf.boolean_mask) did not work.\nSource code / logs\nimport tensorflow as tf\nsess = tf.Session()\nW1 = tf.Variable([2.0])\nW2 = tf.Variable([0.0])\noutput=tf.where(W1>4, W1/W2, tf.zeros_like(W1))  # gives correct answer (zero) since W1>4 is false\ngradient=tf.gradients(output, W2)[0] # should be zero, but it gives NaN\nsess.run(tf.global_variables_initializer())\nprint(sess.run([output, gradient]))\n\nProgram output:\n#[array([0.], dtype=float32), array([nan], dtype=float32)]", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nYes, script is below\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nLinux 4.15.0-23-generic #25-Ubuntu SMP Wed May 23 18:02:16 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux\r\nVERSION=\"18.04 LTS (Bionic Beaver)\"\r\n- **TensorFlow installed from (source or binary)**:\r\nbinary\r\n- **TensorFlow version (use command below)**:\r\nv1.8.0-0-g93bc2e2072 1.8.0\r\n- **Python version**: \r\nPython 3.6.5\r\n- **Bazel version (if compiling from source)**: n/a\r\n- **GCC/Compiler version (if compiling from source)**: n/a\r\n- **CUDA/cuDNN version**: n/a, using CPU version\r\n- **GPU model and memory**: n/a using CPU\r\n- **Exact command to reproduce**: just run \"python3 script.py\"\r\n\r\n### Describe the problem\r\nWhen using the tf.where function where a division by zero exists in one of the two where branches, you get a NaN gradient even if the division by zero was on the where branch which was not executed.\r\n\r\nThis seems similar to https://github.com/tensorflow/tensorflow/issues/2540 but the workarounds suggested there (e.g. using tf.boolean_mask) did not work.\r\n\r\n### Source code / logs\r\n\r\n```\r\nimport tensorflow as tf\r\nsess = tf.Session()\r\nW1 = tf.Variable([2.0])\r\nW2 = tf.Variable([0.0])\r\noutput=tf.where(W1>4, W1/W2, tf.zeros_like(W1))  # gives correct answer (zero) since W1>4 is false\r\ngradient=tf.gradients(output, W2)[0] # should be zero, but it gives NaN\r\nsess.run(tf.global_variables_initializer())\r\nprint(sess.run([output, gradient]))\r\n```\r\n\r\n# Program output:\r\n#[array([0.], dtype=float32), array([nan], dtype=float32)]\r\n"}