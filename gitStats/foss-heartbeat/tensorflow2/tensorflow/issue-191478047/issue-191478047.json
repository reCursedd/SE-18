{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5828", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5828/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5828/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5828/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/5828", "id": 191478047, "node_id": "MDU6SXNzdWUxOTE0NzgwNDc=", "number": 5828, "title": "tf.train.range_input_producer computes \"limit\" argument more than once", "user": {"login": "stilda", "id": 1690784, "node_id": "MDQ6VXNlcjE2OTA3ODQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1690784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stilda", "html_url": "https://github.com/stilda", "followers_url": "https://api.github.com/users/stilda/followers", "following_url": "https://api.github.com/users/stilda/following{/other_user}", "gists_url": "https://api.github.com/users/stilda/gists{/gist_id}", "starred_url": "https://api.github.com/users/stilda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stilda/subscriptions", "organizations_url": "https://api.github.com/users/stilda/orgs", "repos_url": "https://api.github.com/users/stilda/repos", "events_url": "https://api.github.com/users/stilda/events{/privacy}", "received_events_url": "https://api.github.com/users/stilda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-24T10:01:55Z", "updated_at": "2017-06-16T17:41:03Z", "closed_at": "2017-06-16T17:41:03Z", "author_association": "NONE", "body_html": "<p>Hello, I have an issue with unexpected behavior of range_input_producer. It recomputes its \"limit\" argument more times than needed.</p>\n<p>`<br>\nimport tensorflow as tf</p>\n<p>limit = tf.Print(tf.constant(5, dtype=tf.int32), [0], \"compute limit\")<br>\nrange = tf.train.range_input_producer(limit, shuffle=False, num_epochs=1)<br>\nidx = range.dequeue()</p>\n<p>with tf.Session() as ss:<br>\nss.run(tf.initialize_all_variables())<br>\nss.run(tf.initialize_local_variables())<br>\ncoord = tf.train.Coordinator()<br>\nthreads = tf.train.start_queue_runners(sess=ss, coord=coord)<br>\nwhile True:<br>\nprint(ss.run([idx]))<br>\n`</p>\n<p>When num_epoch=1, the output will have \"compute limit\" twice. I expect it to appear only once.<br>\nWhen num_epoch=None, the output will have infinitely many \"compute limit\" messages. But I am expecting, that it should read limit only once and then cycle through generated range infinitely.</p>\n<p>Things get important when \"limit\" is coming from previous queue, which after getting empty produces OutOfRange and for some reasons it is not handled by range_input_producer.</p>\n<h3>Environment info</h3>\n<p>Operating System: Fedora 24</p>\n<p>Installed version of CUDA and cuDNN:<br>\n(please attach the output of <code>ls -l /path/to/cuda/lib/libcud*</code>):<br>\n/usr/local/cuda/lib64/libcudadevrt.a       /usr/local/cuda/lib64/libcudnn.so<br>\n/usr/local/cuda/lib64/libcudart.so         /usr/local/cuda/lib64/libcudnn.so.5<br>\n/usr/local/cuda/lib64/libcudart.so.8.0     /usr/local/cuda/lib64/libcudnn.so.5.1.5<br>\n/usr/local/cuda/lib64/libcudart.so.8.0.44  /usr/local/cuda/lib64/libcudnn_static.a<br>\n/usr/local/cuda/lib64/libcudart_static.a</p>\n<p>If installed from binary pip package, provide:</p>\n<ol>\n<li>A link to the pip package you installed:<br>\n<a href=\"https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.11.0-cp35-cp35m-linux_x86_64.whl\" rel=\"nofollow\">https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.11.0-cp35-cp35m-linux_x86_64.whl</a></li>\n<li>The output from <code>python -c \"import tensorflow; print(tensorflow.__version__)\"</code>.<br>\n0.11.0</li>\n</ol>", "body_text": "Hello, I have an issue with unexpected behavior of range_input_producer. It recomputes its \"limit\" argument more times than needed.\n`\nimport tensorflow as tf\nlimit = tf.Print(tf.constant(5, dtype=tf.int32), [0], \"compute limit\")\nrange = tf.train.range_input_producer(limit, shuffle=False, num_epochs=1)\nidx = range.dequeue()\nwith tf.Session() as ss:\nss.run(tf.initialize_all_variables())\nss.run(tf.initialize_local_variables())\ncoord = tf.train.Coordinator()\nthreads = tf.train.start_queue_runners(sess=ss, coord=coord)\nwhile True:\nprint(ss.run([idx]))\n`\nWhen num_epoch=1, the output will have \"compute limit\" twice. I expect it to appear only once.\nWhen num_epoch=None, the output will have infinitely many \"compute limit\" messages. But I am expecting, that it should read limit only once and then cycle through generated range infinitely.\nThings get important when \"limit\" is coming from previous queue, which after getting empty produces OutOfRange and for some reasons it is not handled by range_input_producer.\nEnvironment info\nOperating System: Fedora 24\nInstalled version of CUDA and cuDNN:\n(please attach the output of ls -l /path/to/cuda/lib/libcud*):\n/usr/local/cuda/lib64/libcudadevrt.a       /usr/local/cuda/lib64/libcudnn.so\n/usr/local/cuda/lib64/libcudart.so         /usr/local/cuda/lib64/libcudnn.so.5\n/usr/local/cuda/lib64/libcudart.so.8.0     /usr/local/cuda/lib64/libcudnn.so.5.1.5\n/usr/local/cuda/lib64/libcudart.so.8.0.44  /usr/local/cuda/lib64/libcudnn_static.a\n/usr/local/cuda/lib64/libcudart_static.a\nIf installed from binary pip package, provide:\n\nA link to the pip package you installed:\nhttps://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.11.0-cp35-cp35m-linux_x86_64.whl\nThe output from python -c \"import tensorflow; print(tensorflow.__version__)\".\n0.11.0", "body": "Hello, I have an issue with unexpected behavior of range_input_producer. It recomputes its \"limit\" argument more times than needed.\r\n\r\n`\r\nimport tensorflow as tf\r\n\r\nlimit = tf.Print(tf.constant(5, dtype=tf.int32), [0], \"compute limit\")\r\nrange = tf.train.range_input_producer(limit, shuffle=False, num_epochs=1)\r\nidx = range.dequeue()\r\n\r\nwith tf.Session() as ss:\r\n    ss.run(tf.initialize_all_variables())\r\n    ss.run(tf.initialize_local_variables())\r\n    coord = tf.train.Coordinator()\r\n    threads = tf.train.start_queue_runners(sess=ss, coord=coord)\r\n    while True:\r\n        print(ss.run([idx]))\r\n`\r\n\r\nWhen num_epoch=1, the output will have \"compute limit\" twice. I expect it to appear only once.\r\nWhen num_epoch=None, the output will have infinitely many \"compute limit\" messages. But I am expecting, that it should read limit only once and then cycle through generated range infinitely.\r\n\r\nThings get important when \"limit\" is coming from previous queue, which after getting empty produces OutOfRange and for some reasons it is not handled by range_input_producer.\r\n\r\n\r\n\r\n### Environment info\r\nOperating System: Fedora 24\r\n\r\nInstalled version of CUDA and cuDNN: \r\n(please attach the output of `ls -l /path/to/cuda/lib/libcud*`):\r\n/usr/local/cuda/lib64/libcudadevrt.a       /usr/local/cuda/lib64/libcudnn.so\r\n/usr/local/cuda/lib64/libcudart.so         /usr/local/cuda/lib64/libcudnn.so.5\r\n/usr/local/cuda/lib64/libcudart.so.8.0     /usr/local/cuda/lib64/libcudnn.so.5.1.5\r\n/usr/local/cuda/lib64/libcudart.so.8.0.44  /usr/local/cuda/lib64/libcudnn_static.a\r\n/usr/local/cuda/lib64/libcudart_static.a\r\n\r\nIf installed from binary pip package, provide:\r\n1. A link to the pip package you installed:\r\n    https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.11.0-cp35-cp35m-linux_x86_64.whl\r\n2. The output from `python -c \"import tensorflow; print(tensorflow.__version__)\"`.\r\n    0.11.0"}