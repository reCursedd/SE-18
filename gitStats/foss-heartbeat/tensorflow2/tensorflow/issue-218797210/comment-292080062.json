{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/292080062", "html_url": "https://github.com/tensorflow/tensorflow/issues/8911#issuecomment-292080062", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8911", "id": 292080062, "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjA4MDA2Mg==", "user": {"login": "AshishBora", "id": 4586769, "node_id": "MDQ6VXNlcjQ1ODY3Njk=", "avatar_url": "https://avatars0.githubusercontent.com/u/4586769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AshishBora", "html_url": "https://github.com/AshishBora", "followers_url": "https://api.github.com/users/AshishBora/followers", "following_url": "https://api.github.com/users/AshishBora/following{/other_user}", "gists_url": "https://api.github.com/users/AshishBora/gists{/gist_id}", "starred_url": "https://api.github.com/users/AshishBora/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AshishBora/subscriptions", "organizations_url": "https://api.github.com/users/AshishBora/orgs", "repos_url": "https://api.github.com/users/AshishBora/repos", "events_url": "https://api.github.com/users/AshishBora/events{/privacy}", "received_events_url": "https://api.github.com/users/AshishBora/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-06T06:22:01Z", "updated_at": "2017-04-06T06:23:08Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=16481751\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/alisidd\">@alisidd</a>  Can you confirm that your implementation is same as:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">lp_path_regularizer</span>(<span class=\"pl-smi\">a</span>, <span class=\"pl-smi\">b</span>, <span class=\"pl-smi\">p</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">2</span>):\n    a_p <span class=\"pl-k\">=</span> <span class=\"pl-c1\">pow</span>(<span class=\"pl-c1\">abs</span>(a), p)\n    b_p <span class=\"pl-k\">=</span> <span class=\"pl-c1\">pow</span>(<span class=\"pl-c1\">abs</span>(b), p)\n    <span class=\"pl-k\">return</span> <span class=\"pl-c1\">pow</span>(reduce_sum(matmul(a_p, b_p)), <span class=\"pl-c1\">1.0</span><span class=\"pl-k\">/</span>p)</pre></div>\n<p>What I had in mind was that <code>a</code> and <code>b</code> are <em>activation</em> tensors (for example <code>a</code> can be inputs and <code>b</code> can be the outputs of a neural net). Are you thinking of <code>a</code>, <code>b</code> as weight matrices?</p>", "body_text": "@alisidd  Can you confirm that your implementation is same as:\ndef lp_path_regularizer(a, b, p=2):\n    a_p = pow(abs(a), p)\n    b_p = pow(abs(b), p)\n    return pow(reduce_sum(matmul(a_p, b_p)), 1.0/p)\nWhat I had in mind was that a and b are activation tensors (for example a can be inputs and b can be the outputs of a neural net). Are you thinking of a, b as weight matrices?", "body": "@alisidd  Can you confirm that your implementation is same as:\r\n\r\n```python\r\ndef lp_path_regularizer(a, b, p=2):\r\n    a_p = pow(abs(a), p)\r\n    b_p = pow(abs(b), p)\r\n    return pow(reduce_sum(matmul(a_p, b_p)), 1.0/p)\r\n```\r\n\r\nWhat I had in mind was that `a` and `b` are *activation* tensors (for example `a` can be inputs and `b` can be the outputs of a neural net). Are you thinking of `a`, `b` as weight matrices?"}