{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8042", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8042/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8042/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8042/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/8042", "id": 211595033, "node_id": "MDU6SXNzdWUyMTE1OTUwMzM=", "number": 8042, "title": "Estimator Tensor not from same graph for predict()", "user": {"login": "sleighsoft", "id": 9438971, "node_id": "MDQ6VXNlcjk0Mzg5NzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/9438971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sleighsoft", "html_url": "https://github.com/sleighsoft", "followers_url": "https://api.github.com/users/sleighsoft/followers", "following_url": "https://api.github.com/users/sleighsoft/following{/other_user}", "gists_url": "https://api.github.com/users/sleighsoft/gists{/gist_id}", "starred_url": "https://api.github.com/users/sleighsoft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sleighsoft/subscriptions", "organizations_url": "https://api.github.com/users/sleighsoft/orgs", "repos_url": "https://api.github.com/users/sleighsoft/repos", "events_url": "https://api.github.com/users/sleighsoft/events{/privacy}", "received_events_url": "https://api.github.com/users/sleighsoft/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-03-03T04:50:32Z", "updated_at": "2018-06-26T13:16:31Z", "closed_at": "2017-03-03T18:10:09Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I run Tensorflow 1.0.<br>\nI use Mac OSX Sierra.<br>\nI use the <code>Estimator</code> and <code>Layers</code> api.</p>\n<p>This is the first part of my <code>model_fn</code> which I pass to <code>.Estimator(model_fn=...)</code>.</p>\n<pre><code>class Model(object):\n\n  def __init__(self):\n    ...\n    self._estimator = learn.Estimator(\n        model_fn=self.model_fn,\n        model_dir=modeldir,\n        params={\n            'width': width,\n            'height': height,\n            'classes': classes\n        },\n        config=RunConfig(save_checkpoints_secs=30, gpu_memory_fraction=0.75)\n    )\n\n  def model_fn(self, features, labels, mode, params):\n    input_layer = tf.reshape(features, [-1, width, height, 1], name='fitinput')\n\n    conv1 = tf.layers.conv2d(\n        inputs=input_layer,\n        filters=32,\n        kernel_size=[5, 5],\n        padding=\"same\",\n        activation=tf.nn.relu,\n        name=\"conv1\"\n    )\n...\n</code></pre>\n<p>I only use <code>input_fn</code> to pass data to the individual steps (images, labels).<br>\nI train with <code>estimator.fit(...)</code> and evaluate with <code>estimator.evaluate(...)</code>. Both work fine and create summaries and checkpoints in my model directory.<br>\nAfter that I run <code>estimator.predict(...)</code> with the same data that I trained on (just to troubleshoot this problem). For <code>predict</code> I only pass images.<br>\nCalling <code>predict</code> results in the following error:</p>\n<pre><code>...\n    estimator.predict(input_fn=predict_data_fn)\n  File \"/users/anaconda/envs/ocnncr/lib/python3.5/site-packages/tensorflow/python/util/deprecation.py\", line 280, in new_func\n    return func(*args, **kwargs)\n  File \"/users/anaconda/envs/ocnncr/lib/python3.5/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 561, in predict\n    as_iterable=as_iterable)\n  File \"/users/anaconda/envs/ocnncr/lib/python3.5/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 865, in _infer_model\n    infer_ops = self._call_legacy_get_predict_ops(features)\n  File \"/users/anaconda/envs/ocnncr/lib/python3.5/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 996, in _call_legacy_get_predict_ops\n    infer_ops = self._get_predict_ops(features)\n  File \"/users/anaconda/envs/ocnncr/lib/python3.5/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 1217, in _get_predict_ops\n    return self._call_model_fn(features, labels, model_fn_lib.ModeKeys.INFER)\n  File \"/users/anaconda/envs/ocnncr/lib/python3.5/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 1133, in _call_model_fn\n    model_fn_results = self._model_fn(features, labels, **kwargs)\n  File \"ocrcnn.py\", line 197, in cnn_model_fn\n    name=\"conv1\"\n  File \"/users/anaconda/envs/ocnncr/lib/python3.5/site-packages/tensorflow/python/layers/convolutional.py\", line 509, in conv2d\n    return layer.apply(inputs)\n  File \"/users/anaconda/envs/ocnncr/lib/python3.5/site-packages/tensorflow/python/layers/base.py\", line 303, in apply\n    return self.__call__(inputs, **kwargs)\n  File \"/users/anaconda/envs/ocnncr/lib/python3.5/site-packages/tensorflow/python/layers/base.py\", line 273, in __call__\n    outputs = self.call(inputs, **kwargs)\n  File \"/users/anaconda/envs/ocnncr/lib/python3.5/site-packages/tensorflow/python/layers/convolutional.py\", line 156, in call\n    data_format=utils.convert_data_format(self.data_format, self.rank + 2))\n  File \"/users/anaconda/envs/ocnncr/lib/python3.5/site-packages/tensorflow/python/ops/nn_ops.py\", line 586, in convolution\n    with ops.name_scope(name, \"convolution\", [input, filter]) as name:\n  File \"/users/anaconda/envs/ocnncr/lib/python3.5/contextlib.py\", line 59, in __enter__\n    return next(self.gen)\n  File \"/users/anaconda/envs/ocnncr/lib/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 4219, in name_scope\n    g = _get_graph_from_inputs(values)\n  File \"/users/anaconda/envs/ocnncr/lib/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 3968, in _get_graph_from_inputs\n    _assert_same_graph(original_graph_element, graph_element)\n  File \"/users/anaconda/envs/ocnncr/lib/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 3907, in _assert_same_graph\n    \"%s must be from the same graph as %s.\" % (item, original_item))\nValueError: Tensor(\"conv1/kernel:0\", shape=(5, 5, 1, 32), dtype=float32_ref) must be from the same graph as Tensor(\"fitinput:0\", shape=(50, 28, 28, 1), dtype=float32).\n</code></pre>\n<p>I have no idea if this is a bug or I did something wrong. So I am sorry if this should have been a Stackoverflow issue instead.</p>", "body_text": "I run Tensorflow 1.0.\nI use Mac OSX Sierra.\nI use the Estimator and Layers api.\nThis is the first part of my model_fn which I pass to .Estimator(model_fn=...).\nclass Model(object):\n\n  def __init__(self):\n    ...\n    self._estimator = learn.Estimator(\n        model_fn=self.model_fn,\n        model_dir=modeldir,\n        params={\n            'width': width,\n            'height': height,\n            'classes': classes\n        },\n        config=RunConfig(save_checkpoints_secs=30, gpu_memory_fraction=0.75)\n    )\n\n  def model_fn(self, features, labels, mode, params):\n    input_layer = tf.reshape(features, [-1, width, height, 1], name='fitinput')\n\n    conv1 = tf.layers.conv2d(\n        inputs=input_layer,\n        filters=32,\n        kernel_size=[5, 5],\n        padding=\"same\",\n        activation=tf.nn.relu,\n        name=\"conv1\"\n    )\n...\n\nI only use input_fn to pass data to the individual steps (images, labels).\nI train with estimator.fit(...) and evaluate with estimator.evaluate(...). Both work fine and create summaries and checkpoints in my model directory.\nAfter that I run estimator.predict(...) with the same data that I trained on (just to troubleshoot this problem). For predict I only pass images.\nCalling predict results in the following error:\n...\n    estimator.predict(input_fn=predict_data_fn)\n  File \"/users/anaconda/envs/ocnncr/lib/python3.5/site-packages/tensorflow/python/util/deprecation.py\", line 280, in new_func\n    return func(*args, **kwargs)\n  File \"/users/anaconda/envs/ocnncr/lib/python3.5/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 561, in predict\n    as_iterable=as_iterable)\n  File \"/users/anaconda/envs/ocnncr/lib/python3.5/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 865, in _infer_model\n    infer_ops = self._call_legacy_get_predict_ops(features)\n  File \"/users/anaconda/envs/ocnncr/lib/python3.5/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 996, in _call_legacy_get_predict_ops\n    infer_ops = self._get_predict_ops(features)\n  File \"/users/anaconda/envs/ocnncr/lib/python3.5/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 1217, in _get_predict_ops\n    return self._call_model_fn(features, labels, model_fn_lib.ModeKeys.INFER)\n  File \"/users/anaconda/envs/ocnncr/lib/python3.5/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 1133, in _call_model_fn\n    model_fn_results = self._model_fn(features, labels, **kwargs)\n  File \"ocrcnn.py\", line 197, in cnn_model_fn\n    name=\"conv1\"\n  File \"/users/anaconda/envs/ocnncr/lib/python3.5/site-packages/tensorflow/python/layers/convolutional.py\", line 509, in conv2d\n    return layer.apply(inputs)\n  File \"/users/anaconda/envs/ocnncr/lib/python3.5/site-packages/tensorflow/python/layers/base.py\", line 303, in apply\n    return self.__call__(inputs, **kwargs)\n  File \"/users/anaconda/envs/ocnncr/lib/python3.5/site-packages/tensorflow/python/layers/base.py\", line 273, in __call__\n    outputs = self.call(inputs, **kwargs)\n  File \"/users/anaconda/envs/ocnncr/lib/python3.5/site-packages/tensorflow/python/layers/convolutional.py\", line 156, in call\n    data_format=utils.convert_data_format(self.data_format, self.rank + 2))\n  File \"/users/anaconda/envs/ocnncr/lib/python3.5/site-packages/tensorflow/python/ops/nn_ops.py\", line 586, in convolution\n    with ops.name_scope(name, \"convolution\", [input, filter]) as name:\n  File \"/users/anaconda/envs/ocnncr/lib/python3.5/contextlib.py\", line 59, in __enter__\n    return next(self.gen)\n  File \"/users/anaconda/envs/ocnncr/lib/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 4219, in name_scope\n    g = _get_graph_from_inputs(values)\n  File \"/users/anaconda/envs/ocnncr/lib/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 3968, in _get_graph_from_inputs\n    _assert_same_graph(original_graph_element, graph_element)\n  File \"/users/anaconda/envs/ocnncr/lib/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 3907, in _assert_same_graph\n    \"%s must be from the same graph as %s.\" % (item, original_item))\nValueError: Tensor(\"conv1/kernel:0\", shape=(5, 5, 1, 32), dtype=float32_ref) must be from the same graph as Tensor(\"fitinput:0\", shape=(50, 28, 28, 1), dtype=float32).\n\nI have no idea if this is a bug or I did something wrong. So I am sorry if this should have been a Stackoverflow issue instead.", "body": "I run Tensorflow 1.0.\r\nI use Mac OSX Sierra.\r\nI use the `Estimator` and `Layers` api.\r\n\r\nThis is the first part of my `model_fn` which I pass to `.Estimator(model_fn=...)`.\r\n```\r\nclass Model(object):\r\n\r\n  def __init__(self):\r\n    ...\r\n    self._estimator = learn.Estimator(\r\n        model_fn=self.model_fn,\r\n        model_dir=modeldir,\r\n        params={\r\n            'width': width,\r\n            'height': height,\r\n            'classes': classes\r\n        },\r\n        config=RunConfig(save_checkpoints_secs=30, gpu_memory_fraction=0.75)\r\n    )\r\n\r\n  def model_fn(self, features, labels, mode, params):\r\n    input_layer = tf.reshape(features, [-1, width, height, 1], name='fitinput')\r\n\r\n    conv1 = tf.layers.conv2d(\r\n        inputs=input_layer,\r\n        filters=32,\r\n        kernel_size=[5, 5],\r\n        padding=\"same\",\r\n        activation=tf.nn.relu,\r\n        name=\"conv1\"\r\n    )\r\n...\r\n```\r\nI only use `input_fn` to pass data to the individual steps (images, labels).\r\nI train with `estimator.fit(...)` and evaluate with `estimator.evaluate(...)`. Both work fine and create summaries and checkpoints in my model directory.\r\nAfter that I run `estimator.predict(...)` with the same data that I trained on (just to troubleshoot this problem). For `predict` I only pass images.\r\nCalling `predict` results in the following error:\r\n```\r\n...\r\n    estimator.predict(input_fn=predict_data_fn)\r\n  File \"/users/anaconda/envs/ocnncr/lib/python3.5/site-packages/tensorflow/python/util/deprecation.py\", line 280, in new_func\r\n    return func(*args, **kwargs)\r\n  File \"/users/anaconda/envs/ocnncr/lib/python3.5/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 561, in predict\r\n    as_iterable=as_iterable)\r\n  File \"/users/anaconda/envs/ocnncr/lib/python3.5/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 865, in _infer_model\r\n    infer_ops = self._call_legacy_get_predict_ops(features)\r\n  File \"/users/anaconda/envs/ocnncr/lib/python3.5/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 996, in _call_legacy_get_predict_ops\r\n    infer_ops = self._get_predict_ops(features)\r\n  File \"/users/anaconda/envs/ocnncr/lib/python3.5/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 1217, in _get_predict_ops\r\n    return self._call_model_fn(features, labels, model_fn_lib.ModeKeys.INFER)\r\n  File \"/users/anaconda/envs/ocnncr/lib/python3.5/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 1133, in _call_model_fn\r\n    model_fn_results = self._model_fn(features, labels, **kwargs)\r\n  File \"ocrcnn.py\", line 197, in cnn_model_fn\r\n    name=\"conv1\"\r\n  File \"/users/anaconda/envs/ocnncr/lib/python3.5/site-packages/tensorflow/python/layers/convolutional.py\", line 509, in conv2d\r\n    return layer.apply(inputs)\r\n  File \"/users/anaconda/envs/ocnncr/lib/python3.5/site-packages/tensorflow/python/layers/base.py\", line 303, in apply\r\n    return self.__call__(inputs, **kwargs)\r\n  File \"/users/anaconda/envs/ocnncr/lib/python3.5/site-packages/tensorflow/python/layers/base.py\", line 273, in __call__\r\n    outputs = self.call(inputs, **kwargs)\r\n  File \"/users/anaconda/envs/ocnncr/lib/python3.5/site-packages/tensorflow/python/layers/convolutional.py\", line 156, in call\r\n    data_format=utils.convert_data_format(self.data_format, self.rank + 2))\r\n  File \"/users/anaconda/envs/ocnncr/lib/python3.5/site-packages/tensorflow/python/ops/nn_ops.py\", line 586, in convolution\r\n    with ops.name_scope(name, \"convolution\", [input, filter]) as name:\r\n  File \"/users/anaconda/envs/ocnncr/lib/python3.5/contextlib.py\", line 59, in __enter__\r\n    return next(self.gen)\r\n  File \"/users/anaconda/envs/ocnncr/lib/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 4219, in name_scope\r\n    g = _get_graph_from_inputs(values)\r\n  File \"/users/anaconda/envs/ocnncr/lib/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 3968, in _get_graph_from_inputs\r\n    _assert_same_graph(original_graph_element, graph_element)\r\n  File \"/users/anaconda/envs/ocnncr/lib/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 3907, in _assert_same_graph\r\n    \"%s must be from the same graph as %s.\" % (item, original_item))\r\nValueError: Tensor(\"conv1/kernel:0\", shape=(5, 5, 1, 32), dtype=float32_ref) must be from the same graph as Tensor(\"fitinput:0\", shape=(50, 28, 28, 1), dtype=float32).\r\n```\r\n\r\nI have no idea if this is a bug or I did something wrong. So I am sorry if this should have been a Stackoverflow issue instead."}