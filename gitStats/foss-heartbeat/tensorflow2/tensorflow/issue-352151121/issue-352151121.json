{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21735", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21735/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21735/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21735/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21735", "id": 352151121, "node_id": "MDU6SXNzdWUzNTIxNTExMjE=", "number": 21735, "title": "sparse_categorical_crossentropy of keras is not available", "user": {"login": "raytroop", "id": 31182666, "node_id": "MDQ6VXNlcjMxMTgyNjY2", "avatar_url": "https://avatars0.githubusercontent.com/u/31182666?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raytroop", "html_url": "https://github.com/raytroop", "followers_url": "https://api.github.com/users/raytroop/followers", "following_url": "https://api.github.com/users/raytroop/following{/other_user}", "gists_url": "https://api.github.com/users/raytroop/gists{/gist_id}", "starred_url": "https://api.github.com/users/raytroop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raytroop/subscriptions", "organizations_url": "https://api.github.com/users/raytroop/orgs", "repos_url": "https://api.github.com/users/raytroop/repos", "events_url": "https://api.github.com/users/raytroop/events{/privacy}", "received_events_url": "https://api.github.com/users/raytroop/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "tatianashp", "id": 986732, "node_id": "MDQ6VXNlcjk4NjczMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/986732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatianashp", "html_url": "https://github.com/tatianashp", "followers_url": "https://api.github.com/users/tatianashp/followers", "following_url": "https://api.github.com/users/tatianashp/following{/other_user}", "gists_url": "https://api.github.com/users/tatianashp/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatianashp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatianashp/subscriptions", "organizations_url": "https://api.github.com/users/tatianashp/orgs", "repos_url": "https://api.github.com/users/tatianashp/repos", "events_url": "https://api.github.com/users/tatianashp/events{/privacy}", "received_events_url": "https://api.github.com/users/tatianashp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tatianashp", "id": 986732, "node_id": "MDQ6VXNlcjk4NjczMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/986732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatianashp", "html_url": "https://github.com/tatianashp", "followers_url": "https://api.github.com/users/tatianashp/followers", "following_url": "https://api.github.com/users/tatianashp/following{/other_user}", "gists_url": "https://api.github.com/users/tatianashp/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatianashp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatianashp/subscriptions", "organizations_url": "https://api.github.com/users/tatianashp/orgs", "repos_url": "https://api.github.com/users/tatianashp/repos", "events_url": "https://api.github.com/users/tatianashp/events{/privacy}", "received_events_url": "https://api.github.com/users/tatianashp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-08-20T14:06:30Z", "updated_at": "2018-09-14T17:32:27Z", "closed_at": "2018-09-14T17:32:27Z", "author_association": "NONE", "body_html": "<p><div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/05f8ea8e9522a3027d4f3f7a54d716bfafed427a/tensorflow/python/keras/metrics.py#L584-L591\">tensorflow/tensorflow/python/keras/metrics.py</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 584 to 591\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/05f8ea8e9522a3027d4f3f7a54d716bfafed427a\">05f8ea8</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L584\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"584\"></td>\n          <td id=\"LC584\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L585\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"585\"></td>\n          <td id=\"LC585\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">def</span> <span class=\"pl-en\">sparse_categorical_accuracy</span>(<span class=\"pl-smi\">y_true</span>, <span class=\"pl-smi\">y_pred</span>): </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L586\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"586\"></td>\n          <td id=\"LC586\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-k\">return</span> math_ops.cast( </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L587\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"587\"></td>\n          <td id=\"LC587\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">       math_ops.equal( </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L588\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"588\"></td>\n          <td id=\"LC588\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">           math_ops.reduce_max(y_true, <span class=\"pl-v\">axis</span><span class=\"pl-k\">=</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>), </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L589\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"589\"></td>\n          <td id=\"LC589\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">           math_ops.cast(math_ops.argmax(y_pred, <span class=\"pl-v\">axis</span><span class=\"pl-k\">=</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>), K.floatx())), </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L590\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"590\"></td>\n          <td id=\"LC590\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">       K.floatx()) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L591\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"591\"></td>\n          <td id=\"LC591\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">  </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<p>I don't know why <code>sparse_categorical_crossentropy</code> is NOT decorated by <code>tf_export</code> like <code>binary_accuracy</code>, <code>sparse_top_k_categorical_accuracy</code> and so on.<br>\nAs a result , we have to explicitly import <code>sparse_categorical_crossentropy</code><br>\ni.e. <code>from tensorflow.keras.metrics import sparse_categorical_crossentropy</code></p>\n<p><em>additional information</em>:<br>\nHave I written custom code: No<br>\nOS Platform and Distribution:  Ubuntu 16.04.5 LTS<br>\nTensorFlow installed from: pypi<br>\nTensorFlow version: tensorflow-gpu 1.10.0<br>\nBazel version: 0.15.0<br>\nCUDA/cuDNN version: CUDA 9.0, cuDNN v7.2.1<br>\nGPU model and memory: nvidia GTX 1080TI, 11GB GDDR5<br>\nExact command to reproduce: <code>from tensorflow import keras; metric_func =keras.metrics.sparse_categorical_crossentropy</code><br>\nMobile device: N/A<br>\nThanks</p>", "body_text": "tensorflow/tensorflow/python/keras/metrics.py\n    \n    \n        Lines 584 to 591\n      in\n      05f8ea8\n    \n    \n    \n    \n\n        \n          \n            \n        \n\n        \n          \n           def sparse_categorical_accuracy(y_true, y_pred): \n        \n\n        \n          \n             return math_ops.cast( \n        \n\n        \n          \n                 math_ops.equal( \n        \n\n        \n          \n                     math_ops.reduce_max(y_true, axis=-1), \n        \n\n        \n          \n                     math_ops.cast(math_ops.argmax(y_pred, axis=-1), K.floatx())), \n        \n\n        \n          \n                 K.floatx()) \n        \n\n        \n          \n            \n        \n    \n  \n\n\nI don't know why sparse_categorical_crossentropy is NOT decorated by tf_export like binary_accuracy, sparse_top_k_categorical_accuracy and so on.\nAs a result , we have to explicitly import sparse_categorical_crossentropy\ni.e. from tensorflow.keras.metrics import sparse_categorical_crossentropy\nadditional information:\nHave I written custom code: No\nOS Platform and Distribution:  Ubuntu 16.04.5 LTS\nTensorFlow installed from: pypi\nTensorFlow version: tensorflow-gpu 1.10.0\nBazel version: 0.15.0\nCUDA/cuDNN version: CUDA 9.0, cuDNN v7.2.1\nGPU model and memory: nvidia GTX 1080TI, 11GB GDDR5\nExact command to reproduce: from tensorflow import keras; metric_func =keras.metrics.sparse_categorical_crossentropy\nMobile device: N/A\nThanks", "body": "https://github.com/tensorflow/tensorflow/blob/05f8ea8e9522a3027d4f3f7a54d716bfafed427a/tensorflow/python/keras/metrics.py#L584-L591\r\n\r\nI don't know why `sparse_categorical_crossentropy` is NOT decorated by `tf_export` like `binary_accuracy`, `sparse_top_k_categorical_accuracy` and so on.\r\nAs a result , we have to explicitly import `sparse_categorical_crossentropy`\r\n i.e. `from tensorflow.keras.metrics import sparse_categorical_crossentropy`\r\n\r\n*additional information*:\r\nHave I written custom code: No\r\nOS Platform and Distribution:  Ubuntu 16.04.5 LTS\r\nTensorFlow installed from: pypi\r\nTensorFlow version: tensorflow-gpu 1.10.0\r\nBazel version: 0.15.0\r\nCUDA/cuDNN version: CUDA 9.0, cuDNN v7.2.1 \r\nGPU model and memory: nvidia GTX 1080TI, 11GB GDDR5\r\n Exact command to reproduce: `from tensorflow import keras; metric_func =keras.metrics.sparse_categorical_crossentropy`\r\nMobile device: N/A\r\nThanks "}