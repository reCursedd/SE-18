{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/291390869", "html_url": "https://github.com/tensorflow/tensorflow/issues/6926#issuecomment-291390869", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6926", "id": 291390869, "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTM5MDg2OQ==", "user": {"login": "EronWright", "id": 1775518, "node_id": "MDQ6VXNlcjE3NzU1MTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1775518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EronWright", "html_url": "https://github.com/EronWright", "followers_url": "https://api.github.com/users/EronWright/followers", "following_url": "https://api.github.com/users/EronWright/following{/other_user}", "gists_url": "https://api.github.com/users/EronWright/gists{/gist_id}", "starred_url": "https://api.github.com/users/EronWright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EronWright/subscriptions", "organizations_url": "https://api.github.com/users/EronWright/orgs", "repos_url": "https://api.github.com/users/EronWright/repos", "events_url": "https://api.github.com/users/EronWright/events{/privacy}", "received_events_url": "https://api.github.com/users/EronWright/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-04T04:33:34Z", "updated_at": "2017-04-04T04:33:34Z", "author_association": "CONTRIBUTOR", "body_html": "<p>One little nuance to be aware of going forward.   In hosted environments like Apache Flink where each 'job' runs in a separate classloader, numerous instances of the JNI library might simultaneously become loaded.  The fact that the extracted resource has a generated temp name makes this possible; otherwise the JVM would complain \"Library xyz already loaded in another classloader\".  I'm hopeful that side-by-side loading won't have a negative effect on TF.</p>", "body_text": "One little nuance to be aware of going forward.   In hosted environments like Apache Flink where each 'job' runs in a separate classloader, numerous instances of the JNI library might simultaneously become loaded.  The fact that the extracted resource has a generated temp name makes this possible; otherwise the JVM would complain \"Library xyz already loaded in another classloader\".  I'm hopeful that side-by-side loading won't have a negative effect on TF.", "body": "One little nuance to be aware of going forward.   In hosted environments like Apache Flink where each 'job' runs in a separate classloader, numerous instances of the JNI library might simultaneously become loaded.  The fact that the extracted resource has a generated temp name makes this possible; otherwise the JVM would complain \"Library xyz already loaded in another classloader\".  I'm hopeful that side-by-side loading won't have a negative effect on TF."}