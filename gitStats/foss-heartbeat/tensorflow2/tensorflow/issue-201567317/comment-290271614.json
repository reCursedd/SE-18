{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/290271614", "html_url": "https://github.com/tensorflow/tensorflow/issues/6926#issuecomment-290271614", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6926", "id": 290271614, "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDI3MTYxNA==", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-30T01:05:24Z", "updated_at": "2017-03-30T01:05:24Z", "author_association": "MEMBER", "body_html": "<p>Clearer, but pardon me, I'm not there just yet :)</p>\n<p>Ignoring GPU for a moment, the way the packaging currently works is that <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/java/src/main/java/org/tensorflow/NativeLibrary.java\"><code>NativeLibrary.java</code></a> finds the appropriate native lib from the classpath, unpacks it and loads it.</p>\n<p>In principle, the GPU-enabled JNI libraries could also be packaged the same way with a change to <code>NativeLibrary.java</code> so that it checks for GPU support and looks for the corresponding native library. Is that what you had in mind?</p>\n<p>And then presumably, the top level application can choose to use GPU or not by adding a dependency on the <code>libtensorflow_jni-gpu</code> artifact or something?</p>", "body_text": "Clearer, but pardon me, I'm not there just yet :)\nIgnoring GPU for a moment, the way the packaging currently works is that NativeLibrary.java finds the appropriate native lib from the classpath, unpacks it and loads it.\nIn principle, the GPU-enabled JNI libraries could also be packaged the same way with a change to NativeLibrary.java so that it checks for GPU support and looks for the corresponding native library. Is that what you had in mind?\nAnd then presumably, the top level application can choose to use GPU or not by adding a dependency on the libtensorflow_jni-gpu artifact or something?", "body": "Clearer, but pardon me, I'm not there just yet :)\r\n\r\nIgnoring GPU for a moment, the way the packaging currently works is that [`NativeLibrary.java`](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/java/src/main/java/org/tensorflow/NativeLibrary.java) finds the appropriate native lib from the classpath, unpacks it and loads it.\r\n\r\nIn principle, the GPU-enabled JNI libraries could also be packaged the same way with a change to `NativeLibrary.java` so that it checks for GPU support and looks for the corresponding native library. Is that what you had in mind?\r\n\r\nAnd then presumably, the top level application can choose to use GPU or not by adding a dependency on the `libtensorflow_jni-gpu` artifact or something?"}