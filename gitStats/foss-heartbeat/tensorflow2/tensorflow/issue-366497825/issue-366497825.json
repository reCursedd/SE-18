{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22701", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22701/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22701/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22701/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/22701", "id": 366497825, "node_id": "MDU6SXNzdWUzNjY0OTc4MjU=", "number": 22701, "title": "tf.while_loop ", "user": {"login": "nairouz", "id": 10966954, "node_id": "MDQ6VXNlcjEwOTY2OTU0", "avatar_url": "https://avatars0.githubusercontent.com/u/10966954?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nairouz", "html_url": "https://github.com/nairouz", "followers_url": "https://api.github.com/users/nairouz/followers", "following_url": "https://api.github.com/users/nairouz/following{/other_user}", "gists_url": "https://api.github.com/users/nairouz/gists{/gist_id}", "starred_url": "https://api.github.com/users/nairouz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nairouz/subscriptions", "organizations_url": "https://api.github.com/users/nairouz/orgs", "repos_url": "https://api.github.com/users/nairouz/repos", "events_url": "https://api.github.com/users/nairouz/events{/privacy}", "received_events_url": "https://api.github.com/users/nairouz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2018-10-03T19:44:56Z", "updated_at": "2018-10-03T22:29:06Z", "closed_at": "2018-10-03T22:28:21Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: No</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Colab</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>: Colab</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: Colab</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.11.0</li>\n<li><strong>Python version</strong>: 3.6</li>\n<li><strong>Bazel version (if compiling from source)</strong>: Colab</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: Colab</li>\n<li><strong>CUDA/cuDNN version</strong>: Colab</li>\n<li><strong>GPU model and memory</strong>: Colab</li>\n<li><strong>Exact command to reproduce</strong>: Colab</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>The <code>tf.while_loop</code> no longer works. I have also checked the code from the official <a href=\"https://www.tensorflow.org/api_docs/python/tf/while_loop\" rel=\"nofollow\">documentation</a>.<br>\nI ran away from the eager mode issues and I found myself writing nonsense code:<br>\n<code>tf.cond</code><br>\n<code>tf.while_loop</code><br>\n<code>tf.Print</code><br>\n<code>tf.gather</code><br>\n<code>tf.scatter_update</code></p>\n<p>At the end of the day, nothing works properly neither the graph mode nor the eager one.</p>\n<h3>Source code</h3>\n<pre><code>import tensorflow as tf\n\nn = 10000\nx = tf.constant(list(range(n)))\nc = lambda i, x: i &lt; n\nb = lambda i, x: (tf.Print(i + 1, [i]), tf.Print(x + 1, [i], \"x:\"))\ni, out = tf.while_loop(c, b, (0, x))\nwith tf.Session() as sess:\n    print(sess.run(i))  # prints [0] ... [9999]\n\n    # The following line may increment the counter and x in parallel.\n    # The counter thread may get ahead of the other thread, but not the\n    # other way around. So you may see things like\n    # [9996] x:[9987]\n    # meaning that the counter thread is on iteration 9996,\n    # while the other thread is on iteration 9987\n    print(sess.run(out).shape)\n</code></pre>\n<h3>logs</h3>\n<p>InvalidArgumentErrorTraceback (most recent call last)<br>\n in ()<br>\n7 i, out = tf.while_loop(c, b, (0, x))<br>\n8 with tf.Session() as sess:<br>\n----&gt; 9     print(sess.run(i))  # prints [0] ... [9999]<br>\n10<br>\n11     # The following line may increment the counter and x in parallel.</p>\n<p>/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.pyc in run(self, fetches, feed_dict, options, run_metadata)<br>\n885     try:<br>\n886       result = self._run(None, fetches, feed_dict, options_ptr,<br>\n--&gt; 887                          run_metadata_ptr)<br>\n888       if run_metadata:<br>\n889         proto_data = tf_session.TF_GetBuffer(run_metadata_ptr)</p>\n<p>/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.pyc in _run(self, handle, fetches, feed_dict, options, run_metadata)<br>\n1108     if final_fetches or final_targets or (handle and feed_dict_tensor):<br>\n1109       results = self._do_run(handle, final_targets, final_fetches,<br>\n-&gt; 1110                              feed_dict_tensor, options, run_metadata)<br>\n1111     else:<br>\n1112       results = []</p>\n<p>/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.pyc in _do_run(self, handle, target_list, fetch_list, feed_dict, options, run_metadata)<br>\n1284     if handle is None:<br>\n1285       return self._do_call(_run_fn, feeds, fetches, targets, options,<br>\n-&gt; 1286                            run_metadata)<br>\n1287     else:<br>\n1288       return self._do_call(_prun_fn, handle, feeds, fetches)</p>\n<p>/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.pyc in _do_call(self, fn, *args)<br>\n1306           self._config.experimental.client_handles_error_formatting):<br>\n1307         message = error_interpolation.interpolate(message, self._graph)<br>\n-&gt; 1308       raise type(e)(node_def, op, message)<br>\n1309<br>\n1310   def _extend_graph(self):</p>\n<p>InvalidArgumentError: Input 1 of node while/Merge_3 was passed float from while/NextIteration_3:0 incompatible with expected int32.</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): No\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Colab\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: Colab\nTensorFlow installed from (source or binary): Colab\nTensorFlow version (use command below): 1.11.0\nPython version: 3.6\nBazel version (if compiling from source): Colab\nGCC/Compiler version (if compiling from source): Colab\nCUDA/cuDNN version: Colab\nGPU model and memory: Colab\nExact command to reproduce: Colab\n\nDescribe the problem\nThe tf.while_loop no longer works. I have also checked the code from the official documentation.\nI ran away from the eager mode issues and I found myself writing nonsense code:\ntf.cond\ntf.while_loop\ntf.Print\ntf.gather\ntf.scatter_update\nAt the end of the day, nothing works properly neither the graph mode nor the eager one.\nSource code\nimport tensorflow as tf\n\nn = 10000\nx = tf.constant(list(range(n)))\nc = lambda i, x: i < n\nb = lambda i, x: (tf.Print(i + 1, [i]), tf.Print(x + 1, [i], \"x:\"))\ni, out = tf.while_loop(c, b, (0, x))\nwith tf.Session() as sess:\n    print(sess.run(i))  # prints [0] ... [9999]\n\n    # The following line may increment the counter and x in parallel.\n    # The counter thread may get ahead of the other thread, but not the\n    # other way around. So you may see things like\n    # [9996] x:[9987]\n    # meaning that the counter thread is on iteration 9996,\n    # while the other thread is on iteration 9987\n    print(sess.run(out).shape)\n\nlogs\nInvalidArgumentErrorTraceback (most recent call last)\n in ()\n7 i, out = tf.while_loop(c, b, (0, x))\n8 with tf.Session() as sess:\n----> 9     print(sess.run(i))  # prints [0] ... [9999]\n10\n11     # The following line may increment the counter and x in parallel.\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.pyc in run(self, fetches, feed_dict, options, run_metadata)\n885     try:\n886       result = self._run(None, fetches, feed_dict, options_ptr,\n--> 887                          run_metadata_ptr)\n888       if run_metadata:\n889         proto_data = tf_session.TF_GetBuffer(run_metadata_ptr)\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.pyc in _run(self, handle, fetches, feed_dict, options, run_metadata)\n1108     if final_fetches or final_targets or (handle and feed_dict_tensor):\n1109       results = self._do_run(handle, final_targets, final_fetches,\n-> 1110                              feed_dict_tensor, options, run_metadata)\n1111     else:\n1112       results = []\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.pyc in _do_run(self, handle, target_list, fetch_list, feed_dict, options, run_metadata)\n1284     if handle is None:\n1285       return self._do_call(_run_fn, feeds, fetches, targets, options,\n-> 1286                            run_metadata)\n1287     else:\n1288       return self._do_call(_prun_fn, handle, feeds, fetches)\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.pyc in _do_call(self, fn, *args)\n1306           self._config.experimental.client_handles_error_formatting):\n1307         message = error_interpolation.interpolate(message, self._graph)\n-> 1308       raise type(e)(node_def, op, message)\n1309\n1310   def _extend_graph(self):\nInvalidArgumentError: Input 1 of node while/Merge_3 was passed float from while/NextIteration_3:0 incompatible with expected int32.", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No \r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Colab\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**: Colab\r\n- **TensorFlow installed from (source or binary)**: Colab\r\n- **TensorFlow version (use command below)**: 1.11.0\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**: Colab\r\n- **GCC/Compiler version (if compiling from source)**: Colab\r\n- **CUDA/cuDNN version**: Colab\r\n- **GPU model and memory**: Colab\r\n- **Exact command to reproduce**: Colab\r\n\r\n### Describe the problem\r\nThe `tf.while_loop` no longer works. I have also checked the code from the official [documentation](https://www.tensorflow.org/api_docs/python/tf/while_loop).\r\nI ran away from the eager mode issues and I found myself writing nonsense code:\r\n`tf.cond`\r\n`tf.while_loop`\r\n`tf.Print`\r\n`tf.gather`\r\n`tf.scatter_update`\r\n\r\nAt the end of the day, nothing works properly neither the graph mode nor the eager one.\r\n\r\n\r\n### Source code\r\n```\r\nimport tensorflow as tf\r\n\r\nn = 10000\r\nx = tf.constant(list(range(n)))\r\nc = lambda i, x: i < n\r\nb = lambda i, x: (tf.Print(i + 1, [i]), tf.Print(x + 1, [i], \"x:\"))\r\ni, out = tf.while_loop(c, b, (0, x))\r\nwith tf.Session() as sess:\r\n    print(sess.run(i))  # prints [0] ... [9999]\r\n\r\n    # The following line may increment the counter and x in parallel.\r\n    # The counter thread may get ahead of the other thread, but not the\r\n    # other way around. So you may see things like\r\n    # [9996] x:[9987]\r\n    # meaning that the counter thread is on iteration 9996,\r\n    # while the other thread is on iteration 9987\r\n    print(sess.run(out).shape)\r\n```\r\n\r\n### logs\r\nInvalidArgumentErrorTraceback (most recent call last)\r\n<ipython-input-21-a546eb31055a> in <module>()\r\n      7 i, out = tf.while_loop(c, b, (0, x))\r\n      8 with tf.Session() as sess:\r\n----> 9     print(sess.run(i))  # prints [0] ... [9999]\r\n     10 \r\n     11     # The following line may increment the counter and x in parallel.\r\n\r\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.pyc in run(self, fetches, feed_dict, options, run_metadata)\r\n    885     try:\r\n    886       result = self._run(None, fetches, feed_dict, options_ptr,\r\n--> 887                          run_metadata_ptr)\r\n    888       if run_metadata:\r\n    889         proto_data = tf_session.TF_GetBuffer(run_metadata_ptr)\r\n\r\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.pyc in _run(self, handle, fetches, feed_dict, options, run_metadata)\r\n   1108     if final_fetches or final_targets or (handle and feed_dict_tensor):\r\n   1109       results = self._do_run(handle, final_targets, final_fetches,\r\n-> 1110                              feed_dict_tensor, options, run_metadata)\r\n   1111     else:\r\n   1112       results = []\r\n\r\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.pyc in _do_run(self, handle, target_list, fetch_list, feed_dict, options, run_metadata)\r\n   1284     if handle is None:\r\n   1285       return self._do_call(_run_fn, feeds, fetches, targets, options,\r\n-> 1286                            run_metadata)\r\n   1287     else:\r\n   1288       return self._do_call(_prun_fn, handle, feeds, fetches)\r\n\r\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.pyc in _do_call(self, fn, *args)\r\n   1306           self._config.experimental.client_handles_error_formatting):\r\n   1307         message = error_interpolation.interpolate(message, self._graph)\r\n-> 1308       raise type(e)(node_def, op, message)\r\n   1309 \r\n   1310   def _extend_graph(self):\r\n\r\nInvalidArgumentError: Input 1 of node while/Merge_3 was passed float from while/NextIteration_3:0 incompatible with expected int32.\r\n"}