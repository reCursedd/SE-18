{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/162584846", "html_url": "https://github.com/tensorflow/tensorflow/issues/428#issuecomment-162584846", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/428", "id": 162584846, "node_id": "MDEyOklzc3VlQ29tbWVudDE2MjU4NDg0Ng==", "user": {"login": "vade", "id": 65011, "node_id": "MDQ6VXNlcjY1MDEx", "avatar_url": "https://avatars1.githubusercontent.com/u/65011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vade", "html_url": "https://github.com/vade", "followers_url": "https://api.github.com/users/vade/followers", "following_url": "https://api.github.com/users/vade/following{/other_user}", "gists_url": "https://api.github.com/users/vade/gists{/gist_id}", "starred_url": "https://api.github.com/users/vade/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vade/subscriptions", "organizations_url": "https://api.github.com/users/vade/orgs", "repos_url": "https://api.github.com/users/vade/repos", "events_url": "https://api.github.com/users/vade/events{/privacy}", "received_events_url": "https://api.github.com/users/vade/received_events", "type": "User", "site_admin": false}, "created_at": "2015-12-07T16:39:30Z", "updated_at": "2015-12-07T16:39:30Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Thanks for the link and info - very glad this seems reasonable!</p>\n<p>I suppose my only additional 'concern' so to speak, is how many video codecs and engines bytesPerRow is aligned for memory access optimization and not tightly aligned on actual pixel data. If not taken into account in a tensor I imagine would <em>seriously</em> throw off any learned models.</p>\n<p>For example, I work with Apples Core Video which is quite fast, and their CPU pixel buffer may have padding - this would require either clients to strip the padding and do memory copies into TF, or for TF to have some sort of knowledge about this sort of format and handle it internally somehow.</p>\n<p>Totally get this is a vastly different prospect for a machine learning tool to inherit the prospect of images not being 'tightly packed' and convoluting what a tensor might be. Just throwing out a concern from a video nerd.</p>\n<p>Anyway, speaking aloud. I'm the kind of 'glue libraries together' programmer that prefers when API's are as simple as possible and I can just pass in my byte array and the right thing happens :)</p>\n<p>Thanks again for listening / considering.</p>", "body_text": "Thanks for the link and info - very glad this seems reasonable!\nI suppose my only additional 'concern' so to speak, is how many video codecs and engines bytesPerRow is aligned for memory access optimization and not tightly aligned on actual pixel data. If not taken into account in a tensor I imagine would seriously throw off any learned models.\nFor example, I work with Apples Core Video which is quite fast, and their CPU pixel buffer may have padding - this would require either clients to strip the padding and do memory copies into TF, or for TF to have some sort of knowledge about this sort of format and handle it internally somehow.\nTotally get this is a vastly different prospect for a machine learning tool to inherit the prospect of images not being 'tightly packed' and convoluting what a tensor might be. Just throwing out a concern from a video nerd.\nAnyway, speaking aloud. I'm the kind of 'glue libraries together' programmer that prefers when API's are as simple as possible and I can just pass in my byte array and the right thing happens :)\nThanks again for listening / considering.", "body": "Thanks for the link and info - very glad this seems reasonable!\n\nI suppose my only additional 'concern' so to speak, is how many video codecs and engines bytesPerRow is aligned for memory access optimization and not tightly aligned on actual pixel data. If not taken into account in a tensor I imagine would _seriously_ throw off any learned models.\n\nFor example, I work with Apples Core Video which is quite fast, and their CPU pixel buffer may have padding - this would require either clients to strip the padding and do memory copies into TF, or for TF to have some sort of knowledge about this sort of format and handle it internally somehow.\n\nTotally get this is a vastly different prospect for a machine learning tool to inherit the prospect of images not being 'tightly packed' and convoluting what a tensor might be. Just throwing out a concern from a video nerd.\n\nAnyway, speaking aloud. I'm the kind of 'glue libraries together' programmer that prefers when API's are as simple as possible and I can just pass in my byte array and the right thing happens :) \n\nThanks again for listening / considering.\n"}