{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/162589134", "html_url": "https://github.com/tensorflow/tensorflow/issues/428#issuecomment-162589134", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/428", "id": 162589134, "node_id": "MDEyOklzc3VlQ29tbWVudDE2MjU4OTEzNA==", "user": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "created_at": "2015-12-07T16:48:44Z", "updated_at": "2015-12-07T16:48:44Z", "author_association": "CONTRIBUTOR", "body_html": "<p>TensorFlow uses Eigen Tensor::Map to map memory internally.  Tensors are always assumed dense, row-major, and memory-aligned; for example, <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/framework/tensor_types.h#L80\">here</a> is the definition of a Matrix.  Working with external memory directly may be possible, but would require a lot of additional consideration; copying is really much easier.  And anyway for most image stuff you'd want to work on the GPU anyway, so you'll want to copy. Anyway, <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=229914\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/keveman\">@keveman</a> or <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=463737\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vrv\">@vrv</a> could say more about working with existing memory directly.  You'd have to create an op that's either similar to a <a href=\"https://github.com/tensorflow/tensorflow/blob/9c3043ff3bf31a6a81810b4ce9e87ef936f1f529/tensorflow/core/kernels/variable_ops.cc\">VariableOp</a> or that subclasses / is similar to <a href=\"https://github.com/tensorflow/tensorflow/blob/9c3043ff3bf31a6a81810b4ce9e87ef936f1f529/tensorflow/core/kernels/initializable_lookup_table.h#L25\">InitializableLookupTable</a> and returns the frames wrapped as Tensors.  Again, there'll be some memory management considerations.</p>", "body_text": "TensorFlow uses Eigen Tensor::Map to map memory internally.  Tensors are always assumed dense, row-major, and memory-aligned; for example, here is the definition of a Matrix.  Working with external memory directly may be possible, but would require a lot of additional consideration; copying is really much easier.  And anyway for most image stuff you'd want to work on the GPU anyway, so you'll want to copy. Anyway, @keveman or @vrv could say more about working with existing memory directly.  You'd have to create an op that's either similar to a VariableOp or that subclasses / is similar to InitializableLookupTable and returns the frames wrapped as Tensors.  Again, there'll be some memory management considerations.", "body": "TensorFlow uses Eigen Tensor::Map to map memory internally.  Tensors are always assumed dense, row-major, and memory-aligned; for example, [here](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/framework/tensor_types.h#L80) is the definition of a Matrix.  Working with external memory directly may be possible, but would require a lot of additional consideration; copying is really much easier.  And anyway for most image stuff you'd want to work on the GPU anyway, so you'll want to copy. Anyway, @keveman or @vrv could say more about working with existing memory directly.  You'd have to create an op that's either similar to a [VariableOp](https://github.com/tensorflow/tensorflow/blob/9c3043ff3bf31a6a81810b4ce9e87ef936f1f529/tensorflow/core/kernels/variable_ops.cc) or that subclasses / is similar to [InitializableLookupTable](https://github.com/tensorflow/tensorflow/blob/9c3043ff3bf31a6a81810b4ce9e87ef936f1f529/tensorflow/core/kernels/initializable_lookup_table.h#L25) and returns the frames wrapped as Tensors.  Again, there'll be some memory management considerations.\n"}