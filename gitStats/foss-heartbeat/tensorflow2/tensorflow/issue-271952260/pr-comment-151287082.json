{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/151287082", "pull_request_review_id": 76968383, "id": 151287082, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MTI4NzA4Mg==", "diff_hunk": "@@ -0,0 +1,50 @@\n+# Copyright 2017 The TensorFlow Authors. All Rights Reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ==============================================================================\n+\"\"\"Tests for DecodeLibsvm op.\"\"\"\n+\n+from __future__ import absolute_import\n+from __future__ import division\n+from __future__ import print_function\n+\n+import numpy as np\n+\n+from tensorflow.contrib.libsvm.python.ops import libsvm_ops\n+from tensorflow.python.ops import sparse_ops\n+from tensorflow.python.platform import test\n+\n+\n+class DecodeLibsvmOpTest(test.TestCase):\n+\n+  def testBasic(self):\n+    with self.test_session() as sess:\n+      content = [\"1 1:3.4 2:0.5 4:0.231\",\n+                 \"1 2:2.5 3:0.1 5:0.503\",\n+                 \"2 3:2.5 2:0.1 1:0.105\"]", "path": "tensorflow/contrib/libsvm/python/kernel_tests/decode_libsvm_op_test.py", "position": null, "original_position": 34, "commit_id": "2de6cfd86fe521fd63d48eea7f25ed32f1f55309", "original_commit_id": "9043c3c304035476f343f1eb801d8d57d85c3a24", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "body": "Can you add a test with `nan` and `inf` in floating-point data? This seems to be allowed:\r\n\r\nhttps://ece.uwaterloo.ca/~nnikvand/Coderep/libsvm-3.16/tools/checkdata.py", "created_at": "2017-11-15T23:52:08Z", "updated_at": "2017-12-15T18:46:40Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/14330#discussion_r151287082", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/14330", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/151287082"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/14330#discussion_r151287082"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/14330"}}, "body_html": "<p>Can you add a test with <code>nan</code> and <code>inf</code> in floating-point data? This seems to be allowed:</p>\n<p><a href=\"https://ece.uwaterloo.ca/~nnikvand/Coderep/libsvm-3.16/tools/checkdata.py\" rel=\"nofollow\">https://ece.uwaterloo.ca/~nnikvand/Coderep/libsvm-3.16/tools/checkdata.py</a></p>", "body_text": "Can you add a test with nan and inf in floating-point data? This seems to be allowed:\nhttps://ece.uwaterloo.ca/~nnikvand/Coderep/libsvm-3.16/tools/checkdata.py"}