{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/287970134", "html_url": "https://github.com/tensorflow/tensorflow/issues/1419#issuecomment-287970134", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1419", "id": 287970134, "node_id": "MDEyOklzc3VlQ29tbWVudDI4Nzk3MDEzNA==", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-21T03:55:36Z", "updated_at": "2017-03-21T03:56:05Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1057200\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jkiske\">@jkiske</a> you can modify it locally, right? Also, it seems from discussion above, <code>disallowed_deps</code> is just part of the issue, and there will be shared libs issues.</p>\n<p>The thing about formally supporting this use-case, is that it signals that core is part of official API, which means that it can't change quickly, and any change must go through review to avoid breaking too many people. This slows down development and benefits must outweigh the costs.</p>\n<p>I tried to make a case for opening up Allocator API in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"208157089\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/7581\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/7581/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/7581\">#7581</a> (just part of the things in core), but the case is not that strong because:</p>\n<ol>\n<li>I can build those ops by using g++ instead of bazel</li>\n<li>Two official TensorFlow ops have been added that reduce the need to have access to Allocator API</li>\n</ol>\n<p>It would make sense to open up some Reader APIs to be officially available to be used in user-ops through Bazel if there are some use-cases which would be made significantly better</p>", "body_text": "@jkiske you can modify it locally, right? Also, it seems from discussion above, disallowed_deps is just part of the issue, and there will be shared libs issues.\nThe thing about formally supporting this use-case, is that it signals that core is part of official API, which means that it can't change quickly, and any change must go through review to avoid breaking too many people. This slows down development and benefits must outweigh the costs.\nI tried to make a case for opening up Allocator API in #7581 (just part of the things in core), but the case is not that strong because:\n\nI can build those ops by using g++ instead of bazel\nTwo official TensorFlow ops have been added that reduce the need to have access to Allocator API\n\nIt would make sense to open up some Reader APIs to be officially available to be used in user-ops through Bazel if there are some use-cases which would be made significantly better", "body": "@jkiske you can modify it locally, right? Also, it seems from discussion above, `disallowed_deps` is just part of the issue, and there will be shared libs issues.\r\n\r\nThe thing about formally supporting this use-case, is that it signals that core is part of official API, which means that it can't change quickly, and any change must go through review to avoid breaking too many people. This slows down development and benefits must outweigh the costs.\r\n\r\nI tried to make a case for opening up Allocator API in https://github.com/tensorflow/tensorflow/issues/7581 (just part of the things in core), but the case is not that strong because:\r\n1. I can build those ops by using g++ instead of bazel\r\n2. Two official TensorFlow ops have been added that reduce the need to have access to Allocator API\r\n\r\nIt would make sense to open up some Reader APIs to be officially available to be used in user-ops through Bazel if there are some use-cases which would be made significantly better"}