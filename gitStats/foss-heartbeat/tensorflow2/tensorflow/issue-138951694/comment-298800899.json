{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/298800899", "html_url": "https://github.com/tensorflow/tensorflow/issues/1419#issuecomment-298800899", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1419", "id": 298800899, "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODgwMDg5OQ==", "user": {"login": "aleist", "id": 11223338, "node_id": "MDQ6VXNlcjExMjIzMzM4", "avatar_url": "https://avatars1.githubusercontent.com/u/11223338?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aleist", "html_url": "https://github.com/aleist", "followers_url": "https://api.github.com/users/aleist/followers", "following_url": "https://api.github.com/users/aleist/following{/other_user}", "gists_url": "https://api.github.com/users/aleist/gists{/gist_id}", "starred_url": "https://api.github.com/users/aleist/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aleist/subscriptions", "organizations_url": "https://api.github.com/users/aleist/orgs", "repos_url": "https://api.github.com/users/aleist/repos", "events_url": "https://api.github.com/users/aleist/events{/privacy}", "received_events_url": "https://api.github.com/users/aleist/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-03T00:55:15Z", "updated_at": "2017-05-03T00:55:15Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I had checked _pywrap_tensorflow.so, but the version included in the Docker image is missing this symbol for some reason. I don't know why, but would suggest that this is a bug that should be addressed, as the symbol is present when I build TF from source.</p>\n<p>I managed to get things to work as follows:</p>\n<p>First, I built TF locally in the same Docker image, following the instructions on the website, with CUDA enabled and all other optional features disabled. Unfortunately, the generated pip install is missing the following headers:</p>\n<pre><code>tensorflow/core/framework/reader_base.h\ntensorflow/core/framework/reader_base.pb.h\n</code></pre>\n<p>These headers <em>are</em> included in the original TF install that came with the Docker image under <code>/usr/local/lib/python2.7/dist-packages/tensorflow</code>, and I can build my library either by adding the original install folder as include search path, or by adding the TF source tree <code>/tensorflow</code> and <code>/tensorflow/bazel-genfiles</code> to the search path.  Does anyone know what I have to do to get these headers included in my own pip install?</p>\n<p>To load the library from Python, I have to ensure that it links to the shared libs of the locally built version of TF, which include all required symbols.</p>\n<p>Unfortunately, this means that I need two versions of TF installed to be able to both build and load a custom reader op, which isn't a particularly nice solution.</p>", "body_text": "I had checked _pywrap_tensorflow.so, but the version included in the Docker image is missing this symbol for some reason. I don't know why, but would suggest that this is a bug that should be addressed, as the symbol is present when I build TF from source.\nI managed to get things to work as follows:\nFirst, I built TF locally in the same Docker image, following the instructions on the website, with CUDA enabled and all other optional features disabled. Unfortunately, the generated pip install is missing the following headers:\ntensorflow/core/framework/reader_base.h\ntensorflow/core/framework/reader_base.pb.h\n\nThese headers are included in the original TF install that came with the Docker image under /usr/local/lib/python2.7/dist-packages/tensorflow, and I can build my library either by adding the original install folder as include search path, or by adding the TF source tree /tensorflow and /tensorflow/bazel-genfiles to the search path.  Does anyone know what I have to do to get these headers included in my own pip install?\nTo load the library from Python, I have to ensure that it links to the shared libs of the locally built version of TF, which include all required symbols.\nUnfortunately, this means that I need two versions of TF installed to be able to both build and load a custom reader op, which isn't a particularly nice solution.", "body": "I had checked _pywrap_tensorflow.so, but the version included in the Docker image is missing this symbol for some reason. I don't know why, but would suggest that this is a bug that should be addressed, as the symbol is present when I build TF from source.\r\n\r\nI managed to get things to work as follows:\r\n\r\nFirst, I built TF locally in the same Docker image, following the instructions on the website, with CUDA enabled and all other optional features disabled. Unfortunately, the generated pip install is missing the following headers:\r\n```\r\ntensorflow/core/framework/reader_base.h\r\ntensorflow/core/framework/reader_base.pb.h\r\n```\r\nThese headers *are* included in the original TF install that came with the Docker image under `/usr/local/lib/python2.7/dist-packages/tensorflow`, and I can build my library either by adding the original install folder as include search path, or by adding the TF source tree `/tensorflow` and `/tensorflow/bazel-genfiles` to the search path.  Does anyone know what I have to do to get these headers included in my own pip install?\r\n\r\nTo load the library from Python, I have to ensure that it links to the shared libs of the locally built version of TF, which include all required symbols.\r\n\r\nUnfortunately, this means that I need two versions of TF installed to be able to both build and load a custom reader op, which isn't a particularly nice solution."}