{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/288140461", "html_url": "https://github.com/tensorflow/tensorflow/issues/1419#issuecomment-288140461", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1419", "id": 288140461, "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODE0MDQ2MQ==", "user": {"login": "aidan-plenert-macdonald", "id": 6690599, "node_id": "MDQ6VXNlcjY2OTA1OTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6690599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aidan-plenert-macdonald", "html_url": "https://github.com/aidan-plenert-macdonald", "followers_url": "https://api.github.com/users/aidan-plenert-macdonald/followers", "following_url": "https://api.github.com/users/aidan-plenert-macdonald/following{/other_user}", "gists_url": "https://api.github.com/users/aidan-plenert-macdonald/gists{/gist_id}", "starred_url": "https://api.github.com/users/aidan-plenert-macdonald/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aidan-plenert-macdonald/subscriptions", "organizations_url": "https://api.github.com/users/aidan-plenert-macdonald/orgs", "repos_url": "https://api.github.com/users/aidan-plenert-macdonald/repos", "events_url": "https://api.github.com/users/aidan-plenert-macdonald/events{/privacy}", "received_events_url": "https://api.github.com/users/aidan-plenert-macdonald/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-21T16:43:02Z", "updated_at": "2017-03-21T16:43:02Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=23068\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/yaroslavvb\">@yaroslavvb</a> Currently, we (as in my coworkers) do pretty well with the hacks we did above. That's not to say we wouldn't appreciate official support, but we can work around it pretty easily.</p>\n<p>I would just note that this isn't <em>just</em> about Reader ops. The lack of headers and shared libs affects peoples ability to add custom hardware (ie. Allocators, Devices, DeviceContexts, etc.) and to add drop in support for many of the generic operations like Zeros, Ones, NoOp, Const, etc. and there are a lot of them that could with some clever macros be automatically supported on any hardware.</p>\n<p>I also believe that this affected our development of HLA, but I would have to check again.</p>\n<p>Now, as for your concern that any changes you make upstream might break downstream guys. Well, this already happens to us regardless of your headers being present, but happens very infrequently and is relatively easy to fix.</p>", "body_text": "@yaroslavvb Currently, we (as in my coworkers) do pretty well with the hacks we did above. That's not to say we wouldn't appreciate official support, but we can work around it pretty easily.\nI would just note that this isn't just about Reader ops. The lack of headers and shared libs affects peoples ability to add custom hardware (ie. Allocators, Devices, DeviceContexts, etc.) and to add drop in support for many of the generic operations like Zeros, Ones, NoOp, Const, etc. and there are a lot of them that could with some clever macros be automatically supported on any hardware.\nI also believe that this affected our development of HLA, but I would have to check again.\nNow, as for your concern that any changes you make upstream might break downstream guys. Well, this already happens to us regardless of your headers being present, but happens very infrequently and is relatively easy to fix.", "body": "@yaroslavvb Currently, we (as in my coworkers) do pretty well with the hacks we did above. That's not to say we wouldn't appreciate official support, but we can work around it pretty easily.\r\n\r\nI would just note that this isn't *just* about Reader ops. The lack of headers and shared libs affects peoples ability to add custom hardware (ie. Allocators, Devices, DeviceContexts, etc.) and to add drop in support for many of the generic operations like Zeros, Ones, NoOp, Const, etc. and there are a lot of them that could with some clever macros be automatically supported on any hardware.\r\n\r\nI also believe that this affected our development of HLA, but I would have to check again.\r\n\r\nNow, as for your concern that any changes you make upstream might break downstream guys. Well, this already happens to us regardless of your headers being present, but happens very infrequently and is relatively easy to fix."}