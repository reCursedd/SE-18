{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/235316111", "html_url": "https://github.com/tensorflow/tensorflow/issues/2703#issuecomment-235316111", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2703", "id": 235316111, "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTMxNjExMQ==", "user": {"login": "jplu", "id": 959590, "node_id": "MDQ6VXNlcjk1OTU5MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/959590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jplu", "html_url": "https://github.com/jplu", "followers_url": "https://api.github.com/users/jplu/followers", "following_url": "https://api.github.com/users/jplu/following{/other_user}", "gists_url": "https://api.github.com/users/jplu/gists{/gist_id}", "starred_url": "https://api.github.com/users/jplu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jplu/subscriptions", "organizations_url": "https://api.github.com/users/jplu/orgs", "repos_url": "https://api.github.com/users/jplu/repos", "events_url": "https://api.github.com/users/jplu/events{/privacy}", "received_events_url": "https://api.github.com/users/jplu/received_events", "type": "User", "site_admin": false}, "created_at": "2016-07-26T16:01:35Z", "updated_at": "2016-08-03T17:42:04Z", "author_association": "NONE", "body_html": "<p>Yes you have understood. If a Python lib is not in the standard location or in <code>$PYTHONPATH</code> then it is not possible to use it as Python will not know where are the files to import.</p>\n<p>For example for my case, my <code>$PYTHONPATH</code> looks like this:</p>\n<pre><code>echo $PYTHONPATH\n/home/plu/git/deepdetect/clients/python/:/usr/local/python/lib/python2.7/site-packages/:/home/plu/git/caffe/python\n</code></pre>\n<p>If I run the interactive python and do <code>import caffe</code> I can load all the files in my current environment. In the case I remove <code>/home/plu/git/caffe/python</code> from my <code>$PYTHONPATH</code> and redo an <code>import caffe</code> I will get an <code>ImportError: No module named caffe</code></p>\n<p>So I think, by just checking this environment variable we should be safe, but we never know. Nevertheless, checking the <code>site</code>  is not enough, as for me:</p>\n<pre><code>&gt;&gt;&gt; import site; site.getsitepackages()\n['/usr/local/lib/python2.7/dist-packages', '/usr/lib/python2.7/dist-packages']\n</code></pre>\n<p>I get only those two, and not the others contained in my <code>$PYTHONPATH</code> which mean that if someone prefer to compile every package itself and put them in a specific location, we will miss them. So for me the steps to do are the following:</p>\n<ol>\n<li>use <code>site</code> to get a first list</li>\n<li>merge the result with the content of <code>$PYTHONPATH</code></li>\n<li>be sure that all the paths exists otherwise remove it from the list</li>\n<li>ask the user if all the path are well known, otherwise ask them to add the wanted other paths</li>\n</ol>", "body_text": "Yes you have understood. If a Python lib is not in the standard location or in $PYTHONPATH then it is not possible to use it as Python will not know where are the files to import.\nFor example for my case, my $PYTHONPATH looks like this:\necho $PYTHONPATH\n/home/plu/git/deepdetect/clients/python/:/usr/local/python/lib/python2.7/site-packages/:/home/plu/git/caffe/python\n\nIf I run the interactive python and do import caffe I can load all the files in my current environment. In the case I remove /home/plu/git/caffe/python from my $PYTHONPATH and redo an import caffe I will get an ImportError: No module named caffe\nSo I think, by just checking this environment variable we should be safe, but we never know. Nevertheless, checking the site  is not enough, as for me:\n>>> import site; site.getsitepackages()\n['/usr/local/lib/python2.7/dist-packages', '/usr/lib/python2.7/dist-packages']\n\nI get only those two, and not the others contained in my $PYTHONPATH which mean that if someone prefer to compile every package itself and put them in a specific location, we will miss them. So for me the steps to do are the following:\n\nuse site to get a first list\nmerge the result with the content of $PYTHONPATH\nbe sure that all the paths exists otherwise remove it from the list\nask the user if all the path are well known, otherwise ask them to add the wanted other paths", "body": "Yes you have understood. If a Python lib is not in the standard location or in `$PYTHONPATH` then it is not possible to use it as Python will not know where are the files to import.\n\nFor example for my case, my `$PYTHONPATH` looks like this:\n\n```\necho $PYTHONPATH\n/home/plu/git/deepdetect/clients/python/:/usr/local/python/lib/python2.7/site-packages/:/home/plu/git/caffe/python\n```\n\nIf I run the interactive python and do `import caffe` I can load all the files in my current environment. In the case I remove `/home/plu/git/caffe/python` from my `$PYTHONPATH` and redo an `import caffe` I will get an `ImportError: No module named caffe`\n\nSo I think, by just checking this environment variable we should be safe, but we never know. Nevertheless, checking the `site`  is not enough, as for me:\n\n```\n>>> import site; site.getsitepackages()\n['/usr/local/lib/python2.7/dist-packages', '/usr/lib/python2.7/dist-packages']\n```\n\nI get only those two, and not the others contained in my `$PYTHONPATH` which mean that if someone prefer to compile every package itself and put them in a specific location, we will miss them. So for me the steps to do are the following:\n1. use `site` to get a first list\n2. merge the result with the content of `$PYTHONPATH`\n3. be sure that all the paths exists otherwise remove it from the list\n4. ask the user if all the path are well known, otherwise ask them to add the wanted other paths\n"}