{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3032", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3032/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3032/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3032/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/3032", "id": 162212776, "node_id": "MDU6SXNzdWUxNjIyMTI3NzY=", "number": 3032, "title": "Optimizer classes do not support complex variables", "user": {"login": "RafaelCosman", "id": 1255944, "node_id": "MDQ6VXNlcjEyNTU5NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1255944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RafaelCosman", "html_url": "https://github.com/RafaelCosman", "followers_url": "https://api.github.com/users/RafaelCosman/followers", "following_url": "https://api.github.com/users/RafaelCosman/following{/other_user}", "gists_url": "https://api.github.com/users/RafaelCosman/gists{/gist_id}", "starred_url": "https://api.github.com/users/RafaelCosman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RafaelCosman/subscriptions", "organizations_url": "https://api.github.com/users/RafaelCosman/orgs", "repos_url": "https://api.github.com/users/RafaelCosman/repos", "events_url": "https://api.github.com/users/RafaelCosman/events{/privacy}", "received_events_url": "https://api.github.com/users/RafaelCosman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2016-06-24T19:16:46Z", "updated_at": "2017-12-17T16:46:07Z", "closed_at": "2017-06-16T17:44:27Z", "author_association": "NONE", "body_html": "<p>Using TF 0.8.0.</p>\n<pre lang=\"---------------------------------------------------------------------------\"><code>ValueError                                Traceback (most recent call last)\n&lt;ipython-input-4-871aef3761c0&gt; in &lt;module&gt;()\n----&gt; 1 train_step = tf.train.GradientDescentOptimizer(0.01).minimize(cross_entropy)\n      2 init = tf.initialize_all_variables()\n\n/usr/local/lib/python2.7/site-packages/tensorflow/python/training/optimizer.pyc in minimize(self, loss, global_step, var_list, gate_gradients, aggregation_method, colocate_gradients_with_ops, name)\n    188         loss, var_list=var_list, gate_gradients=gate_gradients,\n    189         aggregation_method=aggregation_method,\n--&gt; 190         colocate_gradients_with_ops=colocate_gradients_with_ops)\n    191     return self.apply_gradients(grads_and_vars, global_step=global_step,\n    192                                 name=name)\n\n/usr/local/lib/python2.7/site-packages/tensorflow/python/training/optimizer.pyc in compute_gradients(self, loss, var_list, gate_gradients, aggregation_method, colocate_gradients_with_ops)\n    243       grads = control_flow_ops.tuple(grads)\n    244     grads_and_vars = list(zip(grads, var_list))\n--&gt; 245     self._assert_valid_dtypes([v for g, v in grads_and_vars if g is not None])\n    246     return grads_and_vars\n    247 \n\n/usr/local/lib/python2.7/site-packages/tensorflow/python/training/optimizer.pyc in _assert_valid_dtypes(self, tensors)\n    354         raise ValueError(\n    355             \"Invalid type %r for %s, expected: %s.\" % (\n--&gt; 356                 dtype, t.name, [v for v in valid_dtypes]))\n    357 \n    358   # --------------\n\nValueError: Invalid type tf.complex64 for complex_weight_variable:0, expected: [tf.float32].```\n</code></pre>", "body_text": "Using TF 0.8.0.\nValueError                                Traceback (most recent call last)\n<ipython-input-4-871aef3761c0> in <module>()\n----> 1 train_step = tf.train.GradientDescentOptimizer(0.01).minimize(cross_entropy)\n      2 init = tf.initialize_all_variables()\n\n/usr/local/lib/python2.7/site-packages/tensorflow/python/training/optimizer.pyc in minimize(self, loss, global_step, var_list, gate_gradients, aggregation_method, colocate_gradients_with_ops, name)\n    188         loss, var_list=var_list, gate_gradients=gate_gradients,\n    189         aggregation_method=aggregation_method,\n--> 190         colocate_gradients_with_ops=colocate_gradients_with_ops)\n    191     return self.apply_gradients(grads_and_vars, global_step=global_step,\n    192                                 name=name)\n\n/usr/local/lib/python2.7/site-packages/tensorflow/python/training/optimizer.pyc in compute_gradients(self, loss, var_list, gate_gradients, aggregation_method, colocate_gradients_with_ops)\n    243       grads = control_flow_ops.tuple(grads)\n    244     grads_and_vars = list(zip(grads, var_list))\n--> 245     self._assert_valid_dtypes([v for g, v in grads_and_vars if g is not None])\n    246     return grads_and_vars\n    247 \n\n/usr/local/lib/python2.7/site-packages/tensorflow/python/training/optimizer.pyc in _assert_valid_dtypes(self, tensors)\n    354         raise ValueError(\n    355             \"Invalid type %r for %s, expected: %s.\" % (\n--> 356                 dtype, t.name, [v for v in valid_dtypes]))\n    357 \n    358   # --------------\n\nValueError: Invalid type tf.complex64 for complex_weight_variable:0, expected: [tf.float32].```", "body": "Using TF 0.8.0.\n\n`````` ---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n<ipython-input-4-871aef3761c0> in <module>()\n----> 1 train_step = tf.train.GradientDescentOptimizer(0.01).minimize(cross_entropy)\n      2 init = tf.initialize_all_variables()\n\n/usr/local/lib/python2.7/site-packages/tensorflow/python/training/optimizer.pyc in minimize(self, loss, global_step, var_list, gate_gradients, aggregation_method, colocate_gradients_with_ops, name)\n    188         loss, var_list=var_list, gate_gradients=gate_gradients,\n    189         aggregation_method=aggregation_method,\n--> 190         colocate_gradients_with_ops=colocate_gradients_with_ops)\n    191     return self.apply_gradients(grads_and_vars, global_step=global_step,\n    192                                 name=name)\n\n/usr/local/lib/python2.7/site-packages/tensorflow/python/training/optimizer.pyc in compute_gradients(self, loss, var_list, gate_gradients, aggregation_method, colocate_gradients_with_ops)\n    243       grads = control_flow_ops.tuple(grads)\n    244     grads_and_vars = list(zip(grads, var_list))\n--> 245     self._assert_valid_dtypes([v for g, v in grads_and_vars if g is not None])\n    246     return grads_and_vars\n    247 \n\n/usr/local/lib/python2.7/site-packages/tensorflow/python/training/optimizer.pyc in _assert_valid_dtypes(self, tensors)\n    354         raise ValueError(\n    355             \"Invalid type %r for %s, expected: %s.\" % (\n--> 356                 dtype, t.name, [v for v in valid_dtypes]))\n    357 \n    358   # --------------\n\nValueError: Invalid type tf.complex64 for complex_weight_variable:0, expected: [tf.float32].```\n``````\n"}