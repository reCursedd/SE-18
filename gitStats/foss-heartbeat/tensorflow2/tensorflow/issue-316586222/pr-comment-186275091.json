{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/186275091", "pull_request_review_id": 117827795, "id": 186275091, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjI3NTA5MQ==", "diff_hunk": "@@ -467,6 +467,10 @@ if (tensorflow_ENABLE_GPU)\n   include_directories(${tensorflow_source_dir}/third_party/gpus)\n   # add cuda libraries to tensorflow_EXTERNAL_LIBRARIES\n   list(APPEND tensorflow_EXTERNAL_LIBRARIES ${CUDA_LIBRARIES})\n+  if(NOT WIN32)\n+    # add gomp to tensorflow_EXTERNAL_LIBRARIES, needed by libcusolver.so\n+    list(APPEND tensorflow_EXTERNAL_LIBRARIES gomp)", "path": "tensorflow/contrib/cmake/CMakeLists.txt", "position": 6, "original_position": 6, "commit_id": "b9766a574e0793d7aa2c970763535785be12abef", "original_commit_id": "b9766a574e0793d7aa2c970763535785be12abef", "user": {"login": "peci1", "id": 182533, "node_id": "MDQ6VXNlcjE4MjUzMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/182533?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peci1", "html_url": "https://github.com/peci1", "followers_url": "https://api.github.com/users/peci1/followers", "following_url": "https://api.github.com/users/peci1/following{/other_user}", "gists_url": "https://api.github.com/users/peci1/gists{/gist_id}", "starred_url": "https://api.github.com/users/peci1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peci1/subscriptions", "organizations_url": "https://api.github.com/users/peci1/orgs", "repos_url": "https://api.github.com/users/peci1/repos", "events_url": "https://api.github.com/users/peci1/events{/privacy}", "received_events_url": "https://api.github.com/users/peci1/received_events", "type": "User", "site_admin": false}, "body": "I'm not sure if this is the right way to do it.\r\n\r\nOn Ubuntu 16.04, I indeed had a file `/usr/lib/x86_64-linux-gnu/libgomp.so`, but on 14.04 and 18.04, I only have `/usr/lib/x86_64-linux-gnu/libgomp.so.1`, which is not found by the linker. There are several `libgomp.so`s in subdirectories for each installed gcc version, e.g. `/usr/lib/gcc/x86_64-linux-gnu/6/libgomp.so`. These subdirectories are not however on the linker path, so linking a dependent project fails.\r\n\r\nWhat works for me (and IMHO is the correct way) is `find_package(OpenMP)` and then exporting `OpenMP_CXX_FLAGS` to dependent projects (using an extras file?). With gcc, it adds `-fopenmp` to both compile and link steps. \r\n\r\nIn https://github.com/tensorflow/tensorflow/commit/9e197152c04ebb81f055067534bd93322d182f0e there was some alteration of the CXX flags done (just for the current project, not for dependent ones), but as stated in the discussion to https://github.com/tensorflow/tensorflow/pull/18973 , it'd be better to find the flags using the `find_package` call. This is just a reminder that the work should be coordinated.", "created_at": "2018-05-05T23:52:51Z", "updated_at": "2018-05-05T23:52:52Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/18775#discussion_r186275091", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/18775", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/186275091"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/18775#discussion_r186275091"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/18775"}}, "body_html": "<p>I'm not sure if this is the right way to do it.</p>\n<p>On Ubuntu 16.04, I indeed had a file <code>/usr/lib/x86_64-linux-gnu/libgomp.so</code>, but on 14.04 and 18.04, I only have <code>/usr/lib/x86_64-linux-gnu/libgomp.so.1</code>, which is not found by the linker. There are several <code>libgomp.so</code>s in subdirectories for each installed gcc version, e.g. <code>/usr/lib/gcc/x86_64-linux-gnu/6/libgomp.so</code>. These subdirectories are not however on the linker path, so linking a dependent project fails.</p>\n<p>What works for me (and IMHO is the correct way) is <code>find_package(OpenMP)</code> and then exporting <code>OpenMP_CXX_FLAGS</code> to dependent projects (using an extras file?). With gcc, it adds <code>-fopenmp</code> to both compile and link steps.</p>\n<p>In <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/9e197152c04ebb81f055067534bd93322d182f0e/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/9e197152c04ebb81f055067534bd93322d182f0e\"><tt>9e19715</tt></a> there was some alteration of the CXX flags done (just for the current project, not for dependent ones), but as stated in the discussion to <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"318796645\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/18973\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/tensorflow/tensorflow/pull/18973/hovercard\" href=\"https://github.com/tensorflow/tensorflow/pull/18973\">#18973</a> , it'd be better to find the flags using the <code>find_package</code> call. This is just a reminder that the work should be coordinated.</p>", "body_text": "I'm not sure if this is the right way to do it.\nOn Ubuntu 16.04, I indeed had a file /usr/lib/x86_64-linux-gnu/libgomp.so, but on 14.04 and 18.04, I only have /usr/lib/x86_64-linux-gnu/libgomp.so.1, which is not found by the linker. There are several libgomp.sos in subdirectories for each installed gcc version, e.g. /usr/lib/gcc/x86_64-linux-gnu/6/libgomp.so. These subdirectories are not however on the linker path, so linking a dependent project fails.\nWhat works for me (and IMHO is the correct way) is find_package(OpenMP) and then exporting OpenMP_CXX_FLAGS to dependent projects (using an extras file?). With gcc, it adds -fopenmp to both compile and link steps.\nIn 9e19715 there was some alteration of the CXX flags done (just for the current project, not for dependent ones), but as stated in the discussion to #18973 , it'd be better to find the flags using the find_package call. This is just a reminder that the work should be coordinated."}