{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9476", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9476/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9476/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9476/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9476", "id": 224674343, "node_id": "MDU6SXNzdWUyMjQ2NzQzNDM=", "number": 9476, "title": "iOS: No OpKernel was registered to support Op 'Less' with these attrs.  ", "user": {"login": "hansonboy", "id": 6794712, "node_id": "MDQ6VXNlcjY3OTQ3MTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/6794712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hansonboy", "html_url": "https://github.com/hansonboy", "followers_url": "https://api.github.com/users/hansonboy/followers", "following_url": "https://api.github.com/users/hansonboy/following{/other_user}", "gists_url": "https://api.github.com/users/hansonboy/gists{/gist_id}", "starred_url": "https://api.github.com/users/hansonboy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hansonboy/subscriptions", "organizations_url": "https://api.github.com/users/hansonboy/orgs", "repos_url": "https://api.github.com/users/hansonboy/repos", "events_url": "https://api.github.com/users/hansonboy/events{/privacy}", "received_events_url": "https://api.github.com/users/hansonboy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}, {"id": 284443156, "node_id": "MDU6TGFiZWwyODQ0NDMxNTY=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:docs", "name": "type:docs", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2017-04-27T05:32:31Z", "updated_at": "2018-07-18T09:50:44Z", "closed_at": "2017-04-27T18:20:31Z", "author_association": "NONE", "body_html": "<p>hi , all! I have tried to load the model inside iOS that I generated from python.<br>\nand right now, I have the following problem:</p>\n<pre><code>Error adding graph to session:\nNo OpKernel was registered to support Op 'Less' with these attrs.  \nRegistered devices: [CPU],     Registered kernels: device='CPU';\n T in [DT_FLOAT]  [[Node: rnn/while/Less = Less[T=DT_INT32](rnn/while/Merge, rnn/while/Less/Enter)]]\n</code></pre>\n<p>Here is the python script generating the model:</p>\n<pre><code>def add_dynamic_rnn_layer(inputs, out_size, batch_size, Xt_size, time_step, num_layer=1, keep_prob=0.5):\n    # Reshaping to (batch_size, time_step, Xt_size)\n    inputs = tf.reshape(inputs, [-1, time_step, Xt_size])\n    cell = tf.contrib.rnn.MultiRNNCell([tf.contrib.rnn.DropoutWrapper(tf.contrib.rnn.LSTMCell(out_size, state_is_tuple=True,forget_bias=1.0),\n                                                input_keep_prob=keep_prob)\n                             for _ in range(num_layer)])\n    cell =  tf.contrib.rnn.DropoutWrapper(cell,  input_keep_prob=keep_prob)\n    sequence_length = np.zeros([batch_size], dtype=int)\n    sequence_length += time_step\n    init_state = cell.zero_state(batch_size, tf.float32)\n    rnn_outputs, final_state = tf.nn.dynamic_rnn(cell, inputs, initial_state=init_state, dtype=tf.float32, time_major=False,sequence_length=sequence_length)\n    return tf.transpose(rnn_outputs, [1, 0, 2])[-1]\n\n\nwith tf.Session() as sess:\n  # ...... other model code....\n   add_dynamic_rnn_layer()\n   output_graph_def = convert_variables_to_constants(sess, sess.graph_def,\n                                                          output_node_names=['predictions', 'prediction_labels'])\n   with tf.gfile.FastGFile('inference'+str(time.time())+'.pb', mode='wb') as f:\n            f.write(output_graph_def.SerializeToString())\n</code></pre>\n<p>Here is the objective-C++ code loading the model and creating the session:</p>\n<pre><code>{\n    NSString *path = [[NSBundle mainBundle] pathForResource:pbname ofType:@\"pb\"];\n    if (!path) return false;\n    auto status = ReadBinaryProto(tensorflow::Env::Default(), path.fileSystemRepresentation, &amp;graph);\n    if (!status.ok()) {\n        NSLog(@\"Error reading graph: %s\", status.error_message().c_str());\n        return NO;\n    }\n    \n    // This prints out the names of the nodes in the graph.\n    auto nodeCount = graph.node_size();\n    NSLog(@\"Node count: %d\", nodeCount);\n    for (auto i = 0; i &lt; nodeCount; ++i) {\n        auto node = graph.node(i);\n        NSLog(@\"Node %d: %s '%s'\", i, node.op().c_str(), node.name().c_str());\n    }\n    \n    tensorflow::SessionOptions options;\n    auto status = tensorflow::NewSession(options, &amp;session);\n    if (!status.ok()) {\n        NSLog(@\"Error creating session: %s\", status.error_message().c_str());\n        return NO;\n    }\n    \n    status = session-&gt;Create(graph);\n    if (!status.ok()) {\n        NSLog(@\"Error adding graph to session: %s\", status.error_message().c_str());\n    }  \n}\n</code></pre>\n<p>the environment as follows:</p>\n<ul>\n<li>python 3.5 / xcode 8.3.2</li>\n<li>the iOS based on mac os x 10.12  / the tensorflow version: r1.1</li>\n<li>the model generated based on Ubuntu / tensorflow is r1.1 gpu version</li>\n</ul>\n<p>I have done things as follow:</p>\n<ul>\n<li>build_all_ios.sh\n<ul>\n<li>success,don't have any warning and error.</li>\n</ul>\n</li>\n<li>set the xcode build settings\n<ul>\n<li>header search path</li>\n</ul>\n<pre><code>/Users/jw/Desktop/tensorflow  non-recursive\n/Users/jw/Desktop/tensorflow/tensorflow/contrib/makefile/downloads non-recursive\n/Users/jw/Desktop/tensorflow/tensorflow/contrib/makefile/downloads/protobuf/src non-recursive\n/Users/jw/Desktop/tensorflow/tensorflow/contrib/makefile/downloads/eigen non-recursive\n/Users/jw/Desktop/tensorflow/tensorflow/contrib/makefile/gen/proto non-recursive\n</code></pre>\n<ul>\n<li>other linker flags:</li>\n</ul>\n<pre><code>/Users/jw/Desktop/tensorflow/tensorflow/contrib/makefile/gen/protobuf_ios/lib/libprotobuf.a\n/Users/jw/Desktop/tensorflow/tensorflow/contrib/makefile/gen/protobuf_ios/lib/libprotobuf-lite.a\n/Users/jw/Desktop/tensorflow/tensorflow/contrib/makefile/gen/lib/libtensorflow-core.a\n-force_load\n</code></pre>\n</li>\n<li>check the tf_op_files.txt\n<ul>\n<li>have the line <code> tensorflow/core/kernels/cwise_op_less.cc</code></li>\n</ul>\n</li>\n<li>using the tensorflow version v1.0\n<ul>\n<li>have the same error</li>\n</ul>\n</li>\n</ul>\n<p>I would be gratefull if anyone has an idea on why iOS seems to not be able to find the less Op ?<br>\nOr the solution to the question : No OpKernel was registered to support Op 'Less' with these attrs.</p>", "body_text": "hi , all! I have tried to load the model inside iOS that I generated from python.\nand right now, I have the following problem:\nError adding graph to session:\nNo OpKernel was registered to support Op 'Less' with these attrs.  \nRegistered devices: [CPU],     Registered kernels: device='CPU';\n T in [DT_FLOAT]  [[Node: rnn/while/Less = Less[T=DT_INT32](rnn/while/Merge, rnn/while/Less/Enter)]]\n\nHere is the python script generating the model:\ndef add_dynamic_rnn_layer(inputs, out_size, batch_size, Xt_size, time_step, num_layer=1, keep_prob=0.5):\n    # Reshaping to (batch_size, time_step, Xt_size)\n    inputs = tf.reshape(inputs, [-1, time_step, Xt_size])\n    cell = tf.contrib.rnn.MultiRNNCell([tf.contrib.rnn.DropoutWrapper(tf.contrib.rnn.LSTMCell(out_size, state_is_tuple=True,forget_bias=1.0),\n                                                input_keep_prob=keep_prob)\n                             for _ in range(num_layer)])\n    cell =  tf.contrib.rnn.DropoutWrapper(cell,  input_keep_prob=keep_prob)\n    sequence_length = np.zeros([batch_size], dtype=int)\n    sequence_length += time_step\n    init_state = cell.zero_state(batch_size, tf.float32)\n    rnn_outputs, final_state = tf.nn.dynamic_rnn(cell, inputs, initial_state=init_state, dtype=tf.float32, time_major=False,sequence_length=sequence_length)\n    return tf.transpose(rnn_outputs, [1, 0, 2])[-1]\n\n\nwith tf.Session() as sess:\n  # ...... other model code....\n   add_dynamic_rnn_layer()\n   output_graph_def = convert_variables_to_constants(sess, sess.graph_def,\n                                                          output_node_names=['predictions', 'prediction_labels'])\n   with tf.gfile.FastGFile('inference'+str(time.time())+'.pb', mode='wb') as f:\n            f.write(output_graph_def.SerializeToString())\n\nHere is the objective-C++ code loading the model and creating the session:\n{\n    NSString *path = [[NSBundle mainBundle] pathForResource:pbname ofType:@\"pb\"];\n    if (!path) return false;\n    auto status = ReadBinaryProto(tensorflow::Env::Default(), path.fileSystemRepresentation, &graph);\n    if (!status.ok()) {\n        NSLog(@\"Error reading graph: %s\", status.error_message().c_str());\n        return NO;\n    }\n    \n    // This prints out the names of the nodes in the graph.\n    auto nodeCount = graph.node_size();\n    NSLog(@\"Node count: %d\", nodeCount);\n    for (auto i = 0; i < nodeCount; ++i) {\n        auto node = graph.node(i);\n        NSLog(@\"Node %d: %s '%s'\", i, node.op().c_str(), node.name().c_str());\n    }\n    \n    tensorflow::SessionOptions options;\n    auto status = tensorflow::NewSession(options, &session);\n    if (!status.ok()) {\n        NSLog(@\"Error creating session: %s\", status.error_message().c_str());\n        return NO;\n    }\n    \n    status = session->Create(graph);\n    if (!status.ok()) {\n        NSLog(@\"Error adding graph to session: %s\", status.error_message().c_str());\n    }  \n}\n\nthe environment as follows:\n\npython 3.5 / xcode 8.3.2\nthe iOS based on mac os x 10.12  / the tensorflow version: r1.1\nthe model generated based on Ubuntu / tensorflow is r1.1 gpu version\n\nI have done things as follow:\n\nbuild_all_ios.sh\n\nsuccess,don't have any warning and error.\n\n\nset the xcode build settings\n\nheader search path\n\n/Users/jw/Desktop/tensorflow  non-recursive\n/Users/jw/Desktop/tensorflow/tensorflow/contrib/makefile/downloads non-recursive\n/Users/jw/Desktop/tensorflow/tensorflow/contrib/makefile/downloads/protobuf/src non-recursive\n/Users/jw/Desktop/tensorflow/tensorflow/contrib/makefile/downloads/eigen non-recursive\n/Users/jw/Desktop/tensorflow/tensorflow/contrib/makefile/gen/proto non-recursive\n\n\nother linker flags:\n\n/Users/jw/Desktop/tensorflow/tensorflow/contrib/makefile/gen/protobuf_ios/lib/libprotobuf.a\n/Users/jw/Desktop/tensorflow/tensorflow/contrib/makefile/gen/protobuf_ios/lib/libprotobuf-lite.a\n/Users/jw/Desktop/tensorflow/tensorflow/contrib/makefile/gen/lib/libtensorflow-core.a\n-force_load\n\n\ncheck the tf_op_files.txt\n\nhave the line  tensorflow/core/kernels/cwise_op_less.cc\n\n\nusing the tensorflow version v1.0\n\nhave the same error\n\n\n\nI would be gratefull if anyone has an idea on why iOS seems to not be able to find the less Op ?\nOr the solution to the question : No OpKernel was registered to support Op 'Less' with these attrs.", "body": "hi , all! I have tried to load the model inside iOS that I generated from python.\r\nand right now, I have the following problem:\r\n```\r\nError adding graph to session:\r\nNo OpKernel was registered to support Op 'Less' with these attrs.  \r\nRegistered devices: [CPU],     Registered kernels: device='CPU';\r\n T in [DT_FLOAT]  [[Node: rnn/while/Less = Less[T=DT_INT32](rnn/while/Merge, rnn/while/Less/Enter)]]\r\n```\r\n\r\nHere is the python script generating the model:\r\n```\r\ndef add_dynamic_rnn_layer(inputs, out_size, batch_size, Xt_size, time_step, num_layer=1, keep_prob=0.5):\r\n    # Reshaping to (batch_size, time_step, Xt_size)\r\n    inputs = tf.reshape(inputs, [-1, time_step, Xt_size])\r\n    cell = tf.contrib.rnn.MultiRNNCell([tf.contrib.rnn.DropoutWrapper(tf.contrib.rnn.LSTMCell(out_size, state_is_tuple=True,forget_bias=1.0),\r\n                                                input_keep_prob=keep_prob)\r\n                             for _ in range(num_layer)])\r\n    cell =  tf.contrib.rnn.DropoutWrapper(cell,  input_keep_prob=keep_prob)\r\n    sequence_length = np.zeros([batch_size], dtype=int)\r\n    sequence_length += time_step\r\n    init_state = cell.zero_state(batch_size, tf.float32)\r\n    rnn_outputs, final_state = tf.nn.dynamic_rnn(cell, inputs, initial_state=init_state, dtype=tf.float32, time_major=False,sequence_length=sequence_length)\r\n    return tf.transpose(rnn_outputs, [1, 0, 2])[-1]\r\n\r\n\r\nwith tf.Session() as sess:\r\n  # ...... other model code....\r\n   add_dynamic_rnn_layer()\r\n   output_graph_def = convert_variables_to_constants(sess, sess.graph_def,\r\n                                                          output_node_names=['predictions', 'prediction_labels'])\r\n   with tf.gfile.FastGFile('inference'+str(time.time())+'.pb', mode='wb') as f:\r\n            f.write(output_graph_def.SerializeToString())\r\n```\r\nHere is the objective-C++ code loading the model and creating the session:\r\n```\r\n{\r\n    NSString *path = [[NSBundle mainBundle] pathForResource:pbname ofType:@\"pb\"];\r\n    if (!path) return false;\r\n    auto status = ReadBinaryProto(tensorflow::Env::Default(), path.fileSystemRepresentation, &graph);\r\n    if (!status.ok()) {\r\n        NSLog(@\"Error reading graph: %s\", status.error_message().c_str());\r\n        return NO;\r\n    }\r\n    \r\n    // This prints out the names of the nodes in the graph.\r\n    auto nodeCount = graph.node_size();\r\n    NSLog(@\"Node count: %d\", nodeCount);\r\n    for (auto i = 0; i < nodeCount; ++i) {\r\n        auto node = graph.node(i);\r\n        NSLog(@\"Node %d: %s '%s'\", i, node.op().c_str(), node.name().c_str());\r\n    }\r\n    \r\n    tensorflow::SessionOptions options;\r\n    auto status = tensorflow::NewSession(options, &session);\r\n    if (!status.ok()) {\r\n        NSLog(@\"Error creating session: %s\", status.error_message().c_str());\r\n        return NO;\r\n    }\r\n    \r\n    status = session->Create(graph);\r\n    if (!status.ok()) {\r\n        NSLog(@\"Error adding graph to session: %s\", status.error_message().c_str());\r\n    }  \r\n}\r\n```\r\nthe environment as follows:\r\n - python 3.5 / xcode 8.3.2\r\n - the iOS based on mac os x 10.12  / the tensorflow version: r1.1\r\n - the model generated based on Ubuntu / tensorflow is r1.1 gpu version\r\n\r\nI have done things as follow:\r\n- build_all_ios.sh    \r\n  - success,don't have any warning and error.\r\n- set the xcode build settings \r\n  - header search path\r\n  ```\r\n  /Users/jw/Desktop/tensorflow  non-recursive\r\n  /Users/jw/Desktop/tensorflow/tensorflow/contrib/makefile/downloads non-recursive\r\n  /Users/jw/Desktop/tensorflow/tensorflow/contrib/makefile/downloads/protobuf/src non-recursive\r\n  /Users/jw/Desktop/tensorflow/tensorflow/contrib/makefile/downloads/eigen non-recursive\r\n  /Users/jw/Desktop/tensorflow/tensorflow/contrib/makefile/gen/proto non-recursive\r\n  ```\r\n  -  other linker flags:        \r\n  ```\r\n  /Users/jw/Desktop/tensorflow/tensorflow/contrib/makefile/gen/protobuf_ios/lib/libprotobuf.a\r\n  /Users/jw/Desktop/tensorflow/tensorflow/contrib/makefile/gen/protobuf_ios/lib/libprotobuf-lite.a\r\n  /Users/jw/Desktop/tensorflow/tensorflow/contrib/makefile/gen/lib/libtensorflow-core.a\r\n  -force_load\r\n  ```\r\n - check the tf_op_files.txt\r\n   - have the line ` tensorflow/core/kernels/cwise_op_less.cc`\r\n - using the tensorflow version v1.0 \r\n   - have the same error\r\n\r\nI would be gratefull if anyone has an idea on why iOS seems to not be able to find the less Op ?\r\nOr the solution to the question : No OpKernel was registered to support Op 'Less' with these attrs.  \r\n"}