{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9496", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9496/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9496/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9496/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9496", "id": 224877586, "node_id": "MDU6SXNzdWUyMjQ4Nzc1ODY=", "number": 9496, "title": "icc Compilation Errors in tf1.0: usage of \"typename\" on TTypes", "user": {"login": "danielmawhirter", "id": 5377688, "node_id": "MDQ6VXNlcjUzNzc2ODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/5377688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielmawhirter", "html_url": "https://github.com/danielmawhirter", "followers_url": "https://api.github.com/users/danielmawhirter/followers", "following_url": "https://api.github.com/users/danielmawhirter/following{/other_user}", "gists_url": "https://api.github.com/users/danielmawhirter/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielmawhirter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielmawhirter/subscriptions", "organizations_url": "https://api.github.com/users/danielmawhirter/orgs", "repos_url": "https://api.github.com/users/danielmawhirter/repos", "events_url": "https://api.github.com/users/danielmawhirter/events{/privacy}", "received_events_url": "https://api.github.com/users/danielmawhirter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}, {"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-04-27T18:46:29Z", "updated_at": "2017-06-16T21:45:19Z", "closed_at": "2017-06-16T21:45:19Z", "author_association": "NONE", "body_html": "<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Ubuntu 14.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: source</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.0</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.4.5</li>\n<li><strong>CUDA/cuDNN version</strong>: not configured</li>\n<li><strong>GPU model and memory</strong>: not configured</li>\n<li><strong>Exact command to reproduce</strong>: <code>CC=icc bazel build -c opt //tensorflow/tools/pip_package:build_pip_package</code></li>\n</ul>\n<p>When compiling tensorflow using icc (version 17.0.3 20170404) using the command above, errors appear concerning the usage of <code>typename</code> associated with <code>TTypes</code>. For instance:</p>\n<blockquote>\n<p>tensorflow/core/kernels/depthtospace_op.cc(88): error: type name is not allowed<br>\ntypename TTypes&lt;T, 4&gt;::ConstTensor Tinput = input.tensor&lt;T, 4&gt;();</p>\n</blockquote>\n<p>A more constrained example, however, makes the problem more apparent. Command:<br>\n<code>CC=icc bazel build -c opt //tensorflow/core/kernels:resize_nearest_neighbor_op</code><br>\nOutput (partial):</p>\n<blockquote>\n<p>tensorflow/core/kernels/resize_nearest_neighbor_op.cc(57): error: type name is not allowed<br>\ntypename TTypes&lt;T, 4&gt;::ConstTensor input_data = input.tensor&lt;T, 4&gt;();</p>\n</blockquote>\n<p>I can change line resize_nearest_neighbor_op.cc(57) to:<br>\n<code>TTypes&lt;T, 4&gt;::ConstTensor input_data = input.tensor&lt;T, 4&gt;();</code><br>\nand repeat the command to get Output (partial):</p>\n<blockquote>\n<p>tensorflow/core/kernels/resize_nearest_neighbor_op.cc(57): error: use the \"typename\" keyword to treat nontype \"tensorflow::TTypes&lt;T, NDIMS, IndexType&gt;::ConstTensor [with T=T, NDIMS=4, IndexType=Eigen::DenseIndex={std::ptrdiff_t={long}}]\" as a type in a dependent context<br>\nTTypes&lt;T, 4&gt;::ConstTensor input_data = input.tensor&lt;T, 4&gt;();</p>\n</blockquote>\n<p>I do not know if Intel Compiler compatibility is an intended feature of tensorflow, but I hoped this issue would still be of interest to the developers.<br>\nThank you!</p>", "body_text": "Have I written custom code (as opposed to using a stock example script provided in TensorFlow):\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 14.04\nTensorFlow installed from (source or binary): source\nTensorFlow version (use command below): 1.0\nBazel version (if compiling from source): 0.4.5\nCUDA/cuDNN version: not configured\nGPU model and memory: not configured\nExact command to reproduce: CC=icc bazel build -c opt //tensorflow/tools/pip_package:build_pip_package\n\nWhen compiling tensorflow using icc (version 17.0.3 20170404) using the command above, errors appear concerning the usage of typename associated with TTypes. For instance:\n\ntensorflow/core/kernels/depthtospace_op.cc(88): error: type name is not allowed\ntypename TTypes<T, 4>::ConstTensor Tinput = input.tensor<T, 4>();\n\nA more constrained example, however, makes the problem more apparent. Command:\nCC=icc bazel build -c opt //tensorflow/core/kernels:resize_nearest_neighbor_op\nOutput (partial):\n\ntensorflow/core/kernels/resize_nearest_neighbor_op.cc(57): error: type name is not allowed\ntypename TTypes<T, 4>::ConstTensor input_data = input.tensor<T, 4>();\n\nI can change line resize_nearest_neighbor_op.cc(57) to:\nTTypes<T, 4>::ConstTensor input_data = input.tensor<T, 4>();\nand repeat the command to get Output (partial):\n\ntensorflow/core/kernels/resize_nearest_neighbor_op.cc(57): error: use the \"typename\" keyword to treat nontype \"tensorflow::TTypes<T, NDIMS, IndexType>::ConstTensor [with T=T, NDIMS=4, IndexType=Eigen::DenseIndex={std::ptrdiff_t={long}}]\" as a type in a dependent context\nTTypes<T, 4>::ConstTensor input_data = input.tensor<T, 4>();\n\nI do not know if Intel Compiler compatibility is an intended feature of tensorflow, but I hoped this issue would still be of interest to the developers.\nThank you!", "body": "- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 14.04\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: 1.0\r\n- **Bazel version (if compiling from source)**: 0.4.5\r\n- **CUDA/cuDNN version**: not configured\r\n- **GPU model and memory**: not configured\r\n- **Exact command to reproduce**: `CC=icc bazel build -c opt //tensorflow/tools/pip_package:build_pip_package`\r\n\r\nWhen compiling tensorflow using icc (version 17.0.3 20170404) using the command above, errors appear concerning the usage of `typename` associated with `TTypes`. For instance: \r\n\r\n> tensorflow/core/kernels/depthtospace_op.cc(88): error: type name is not allowed\r\n      typename TTypes<T, 4>::ConstTensor Tinput = input.tensor<T, 4>();\r\n\r\nA more constrained example, however, makes the problem more apparent. Command:\r\n`CC=icc bazel build -c opt //tensorflow/core/kernels:resize_nearest_neighbor_op`\r\nOutput (partial):\r\n> tensorflow/core/kernels/resize_nearest_neighbor_op.cc(57): error: type name is not allowed\r\n      typename TTypes<T, 4>::ConstTensor input_data = input.tensor<T, 4>();\r\n\r\nI can change line resize_nearest_neighbor_op.cc(57) to:\r\n`TTypes<T, 4>::ConstTensor input_data = input.tensor<T, 4>();`\r\nand repeat the command to get Output (partial):\r\n> tensorflow/core/kernels/resize_nearest_neighbor_op.cc(57): error: use the \"typename\" keyword to treat nontype \"tensorflow::TTypes<T, NDIMS, IndexType>::ConstTensor [with T=T, NDIMS=4, IndexType=Eigen::DenseIndex={std::ptrdiff_t={long}}]\" as a type in a dependent context\r\n      TTypes<T, 4>::ConstTensor input_data = input.tensor<T, 4>();\r\n\r\nI do not know if Intel Compiler compatibility is an intended feature of tensorflow, but I hoped this issue would still be of interest to the developers.\r\nThank you!"}