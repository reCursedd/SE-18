{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2501", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2501/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2501/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2501/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/2501", "id": 156711290, "node_id": "MDU6SXNzdWUxNTY3MTEyOTA=", "number": 2501, "title": "nan values management in max_pool", "user": {"login": "DavidDoukhan", "id": 1461267, "node_id": "MDQ6VXNlcjE0NjEyNjc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1461267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DavidDoukhan", "html_url": "https://github.com/DavidDoukhan", "followers_url": "https://api.github.com/users/DavidDoukhan/followers", "following_url": "https://api.github.com/users/DavidDoukhan/following{/other_user}", "gists_url": "https://api.github.com/users/DavidDoukhan/gists{/gist_id}", "starred_url": "https://api.github.com/users/DavidDoukhan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DavidDoukhan/subscriptions", "organizations_url": "https://api.github.com/users/DavidDoukhan/orgs", "repos_url": "https://api.github.com/users/DavidDoukhan/repos", "events_url": "https://api.github.com/users/DavidDoukhan/events{/privacy}", "received_events_url": "https://api.github.com/users/DavidDoukhan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "benoitsteiner", "id": 6969686, "node_id": "MDQ6VXNlcjY5Njk2ODY=", "avatar_url": "https://avatars0.githubusercontent.com/u/6969686?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benoitsteiner", "html_url": "https://github.com/benoitsteiner", "followers_url": "https://api.github.com/users/benoitsteiner/followers", "following_url": "https://api.github.com/users/benoitsteiner/following{/other_user}", "gists_url": "https://api.github.com/users/benoitsteiner/gists{/gist_id}", "starred_url": "https://api.github.com/users/benoitsteiner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benoitsteiner/subscriptions", "organizations_url": "https://api.github.com/users/benoitsteiner/orgs", "repos_url": "https://api.github.com/users/benoitsteiner/repos", "events_url": "https://api.github.com/users/benoitsteiner/events{/privacy}", "received_events_url": "https://api.github.com/users/benoitsteiner/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "benoitsteiner", "id": 6969686, "node_id": "MDQ6VXNlcjY5Njk2ODY=", "avatar_url": "https://avatars0.githubusercontent.com/u/6969686?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benoitsteiner", "html_url": "https://github.com/benoitsteiner", "followers_url": "https://api.github.com/users/benoitsteiner/followers", "following_url": "https://api.github.com/users/benoitsteiner/following{/other_user}", "gists_url": "https://api.github.com/users/benoitsteiner/gists{/gist_id}", "starred_url": "https://api.github.com/users/benoitsteiner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benoitsteiner/subscriptions", "organizations_url": "https://api.github.com/users/benoitsteiner/orgs", "repos_url": "https://api.github.com/users/benoitsteiner/repos", "events_url": "https://api.github.com/users/benoitsteiner/events{/privacy}", "received_events_url": "https://api.github.com/users/benoitsteiner/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2016-05-25T10:05:19Z", "updated_at": "2017-02-09T22:02:15Z", "closed_at": "2017-01-24T01:41:23Z", "author_association": "NONE", "body_html": "<p>Hi,</p>\n<p>I faced a strange behavior using the max_pool op, returning -3.40282347e+38 when Nan are provided.<br>\nA simple example run on CPU is shown bellow:</p>\n<pre><code>\nimport tensorflow as tf\nimport numpy as np\nx = tf.placeholder(tf.float32, [None, 2, 1, 1])\npool = tf.nn.max_pool(x, ksize=[1, 2, 1, 1], strides=[1,2,1,1], padding='VALID')\nsess = tf.Session()\nsess.run(tf.initialize_all_variables())\ndata = np.empty((1, 2, 1, 1))\ndata[:] = np.NAN\nprint sess.run(pool, feed_dict={x: data})\n\n[[[[ -3.40282347e+38]]]]\n</code></pre>\n<p>Is there any reason for returning this arbitrary value? I feel much more comfortable with conv2D behavior which returns NaN in similar situations. I guess this behavior should be mentioned within the documentation.</p>\n<p>Regards,</p>", "body_text": "Hi,\nI faced a strange behavior using the max_pool op, returning -3.40282347e+38 when Nan are provided.\nA simple example run on CPU is shown bellow:\n\nimport tensorflow as tf\nimport numpy as np\nx = tf.placeholder(tf.float32, [None, 2, 1, 1])\npool = tf.nn.max_pool(x, ksize=[1, 2, 1, 1], strides=[1,2,1,1], padding='VALID')\nsess = tf.Session()\nsess.run(tf.initialize_all_variables())\ndata = np.empty((1, 2, 1, 1))\ndata[:] = np.NAN\nprint sess.run(pool, feed_dict={x: data})\n\n[[[[ -3.40282347e+38]]]]\n\nIs there any reason for returning this arbitrary value? I feel much more comfortable with conv2D behavior which returns NaN in similar situations. I guess this behavior should be mentioned within the documentation.\nRegards,", "body": "Hi,\n\nI faced a strange behavior using the max_pool op, returning -3.40282347e+38 when Nan are provided.\nA simple example run on CPU is shown bellow:\n\n```\n\nimport tensorflow as tf\nimport numpy as np\nx = tf.placeholder(tf.float32, [None, 2, 1, 1])\npool = tf.nn.max_pool(x, ksize=[1, 2, 1, 1], strides=[1,2,1,1], padding='VALID')\nsess = tf.Session()\nsess.run(tf.initialize_all_variables())\ndata = np.empty((1, 2, 1, 1))\ndata[:] = np.NAN\nprint sess.run(pool, feed_dict={x: data})\n\n[[[[ -3.40282347e+38]]]]\n```\n\nIs there any reason for returning this arbitrary value? I feel much more comfortable with conv2D behavior which returns NaN in similar situations. I guess this behavior should be mentioned within the documentation.\n\nRegards,\n"}