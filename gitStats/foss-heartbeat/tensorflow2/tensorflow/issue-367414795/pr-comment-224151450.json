{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/224151450", "pull_request_review_id": 163434341, "id": 224151450, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNDE1MTQ1MA==", "diff_hunk": "@@ -1577,6 +1712,104 @@ tensorflow::Status ConvertActivation(\n   return tensorflow::Status::OK();\n }\n \n+tensorflow::Status ConvertQuantize(\n+    Converter& ctx, const tensorflow::NodeDef& node_def,\n+    const std::vector<TRT_TensorOrWeights>& inputs,\n+    std::vector<TRT_TensorOrWeights>* outputs) {\n+  if (inputs.at(0).is_weights()) {\n+    outputs->push_back(inputs.at(0));\n+    return tensorflow::Status::OK();\n+  }\n+  // ***************************************************************************\n+  // Fake quantization nodes are replaced with no-ops and their min/max values\n+  // are applied as the quantization scale for the input and output\n+  // ***************************************************************************\n+  nvinfer1::ITensor* tensor = const_cast<nvinfer1::ITensor*>(inputs.at(0).tensor());\n+  // Min\n+  TRT_ShapedWeights weights_min = inputs.at(1).weights();\n+  auto weights_min_ptr = static_cast<float*>(const_cast<void*>(weights_min.GetValues()));\n+  float min_range = weights_min_ptr[0];\n+  // Max\n+  TRT_ShapedWeights weights_max = inputs.at(2).weights();\n+  auto weights_max_ptr = static_cast<float*>(const_cast<void*>(weights_max.GetValues()));\n+  float max_range = weights_max_ptr[0];\n+  \n+  // The default shuffle layer serves as a dummy layer which will be optimized\n+  // away. Identity layer does not get optimized away as of TRT 5.0, but\n+  // once we know that it does it would be nice to use that instead.\n+  nvinfer1::IShuffleLayer* layer;\n+  layer = ctx.network()->addShuffle(*tensor);\n+  TFTRT_RETURN_ERROR_IF_NULLPTR(layer, node_def.name());\n+  nvinfer1::ITensor* output_tensor = layer->getOutput(0);\n+\n+  // Store ranges for input and output of dummy op\n+  ctx.ProvideQuantizationRange(tensor, min_range, max_range);", "path": "tensorflow/contrib/tensorrt/convert/convert_nodes.cc", "position": null, "original_position": 233, "commit_id": "c9774910f1e24b964f0a31fdbf98df472d92501b", "original_commit_id": "57f6ba3434a9f47ffac4957555096c7cc0930f4a", "user": {"login": "aaroey", "id": 31743510, "node_id": "MDQ6VXNlcjMxNzQzNTEw", "avatar_url": "https://avatars0.githubusercontent.com/u/31743510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaroey", "html_url": "https://github.com/aaroey", "followers_url": "https://api.github.com/users/aaroey/followers", "following_url": "https://api.github.com/users/aaroey/following{/other_user}", "gists_url": "https://api.github.com/users/aaroey/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaroey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaroey/subscriptions", "organizations_url": "https://api.github.com/users/aaroey/orgs", "repos_url": "https://api.github.com/users/aaroey/repos", "events_url": "https://api.github.com/users/aaroey/events{/privacy}", "received_events_url": "https://api.github.com/users/aaroey/received_events", "type": "User", "site_admin": false}, "body": "Here we assume that `tensor` is not used elsewhere as input to other nodes. If user has a crazy graph where `tensor` is fed into different ops and some but not all of them are QDQV2, or the ranges of the QDQV2s are different, there will be problem. I don't see any easy way to detect this with the current implementation, so may be add comment and a `LOG(WARNING)`?\r\n\r\nDo you have a better idea? Also @wujingyue ", "created_at": "2018-10-10T16:30:05Z", "updated_at": "2018-11-21T23:48:52Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/22788#discussion_r224151450", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/22788", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/224151450"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/22788#discussion_r224151450"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/22788"}}, "body_html": "<p>Here we assume that <code>tensor</code> is not used elsewhere as input to other nodes. If user has a crazy graph where <code>tensor</code> is fed into different ops and some but not all of them are QDQV2, or the ranges of the QDQV2s are different, there will be problem. I don't see any easy way to detect this with the current implementation, so may be add comment and a <code>LOG(WARNING)</code>?</p>\n<p>Do you have a better idea? Also <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=2772612\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/wujingyue\">@wujingyue</a></p>", "body_text": "Here we assume that tensor is not used elsewhere as input to other nodes. If user has a crazy graph where tensor is fed into different ops and some but not all of them are QDQV2, or the ranges of the QDQV2s are different, there will be problem. I don't see any easy way to detect this with the current implementation, so may be add comment and a LOG(WARNING)?\nDo you have a better idea? Also @wujingyue"}