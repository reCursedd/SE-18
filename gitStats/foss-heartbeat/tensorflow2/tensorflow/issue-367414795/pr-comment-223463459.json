{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/223463459", "pull_request_review_id": 162596350, "id": 223463459, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMzQ2MzQ1OQ==", "diff_hunk": "@@ -1314,8 +1364,12 @@ tensorflow::Status ConvertConv2DHelper(\n   VLOG(2) << \"data_format: \" << data_format;\n   if (data_format == \"NHWC\") {\n     // TODO(jie): transpose it back!\n+    nvinfer1::ITensor* inp = output_tensor;\n     output_tensor = ctx.TransposeTensor(output_tensor, {0, 2, 3, 1});\n     TFTRT_RETURN_ERROR_IF_NULLPTR(output_tensor, node_def.name());\n+    // Store input and output tensors so that quantization ranges from output of shuffle\n+    // can be inferred backwards for input\n+    ctx.quantization_infer_backwards_[output_tensor] = inp;", "path": "tensorflow/contrib/tensorrt/convert/convert_nodes.cc", "position": null, "original_position": 94, "commit_id": "c9774910f1e24b964f0a31fdbf98df472d92501b", "original_commit_id": "09c215a9c134dcc52882b153973617e125ad300b", "user": {"login": "trevor-m", "id": 12981474, "node_id": "MDQ6VXNlcjEyOTgxNDc0", "avatar_url": "https://avatars1.githubusercontent.com/u/12981474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trevor-m", "html_url": "https://github.com/trevor-m", "followers_url": "https://api.github.com/users/trevor-m/followers", "following_url": "https://api.github.com/users/trevor-m/following{/other_user}", "gists_url": "https://api.github.com/users/trevor-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/trevor-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trevor-m/subscriptions", "organizations_url": "https://api.github.com/users/trevor-m/orgs", "repos_url": "https://api.github.com/users/trevor-m/repos", "events_url": "https://api.github.com/users/trevor-m/events{/privacy}", "received_events_url": "https://api.github.com/users/trevor-m/received_events", "type": "User", "site_admin": false}, "body": "Oh yes, it shouldve been CopyQuantizationRange.\r\n\r\nHmm I guess you can always do both. How about renaming CopyQuantizationRange function to something like `MarkQuantizationRangesAsInferrable(input_tensor, output_tensor)`\r\nwhich adds two edges to the quantization_infer table:\r\ninput -> output\r\noutput -> input\r\n\r\nThese edges are then used to propagate ranges across tensors using the algorithm you described here https://github.com/tensorflow/tensorflow/pull/22788#discussion_r223259796", "created_at": "2018-10-08T18:47:29Z", "updated_at": "2018-11-21T23:48:52Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/22788#discussion_r223463459", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/22788", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/223463459"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/22788#discussion_r223463459"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/22788"}}, "body_html": "<p>Oh yes, it shouldve been CopyQuantizationRange.</p>\n<p>Hmm I guess you can always do both. How about renaming CopyQuantizationRange function to something like <code>MarkQuantizationRangesAsInferrable(input_tensor, output_tensor)</code><br>\nwhich adds two edges to the quantization_infer table:<br>\ninput -&gt; output<br>\noutput -&gt; input</p>\n<p>These edges are then used to propagate ranges across tensors using the algorithm you described here <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"367414795\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/22788\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/tensorflow/tensorflow/pull/22788/hovercard?comment_id=223259796&amp;comment_type=review_comment\" href=\"https://github.com/tensorflow/tensorflow/pull/22788#discussion_r223259796\">#22788 (comment)</a></p>", "body_text": "Oh yes, it shouldve been CopyQuantizationRange.\nHmm I guess you can always do both. How about renaming CopyQuantizationRange function to something like MarkQuantizationRangesAsInferrable(input_tensor, output_tensor)\nwhich adds two edges to the quantization_infer table:\ninput -> output\noutput -> input\nThese edges are then used to propagate ranges across tensors using the algorithm you described here #22788 (comment)", "in_reply_to_id": 223255007}