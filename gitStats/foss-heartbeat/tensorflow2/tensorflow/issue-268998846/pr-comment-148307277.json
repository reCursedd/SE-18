{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/148307277", "pull_request_review_id": 73527030, "id": 148307277, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0ODMwNzI3Nw==", "diff_hunk": "@@ -219,64 +230,114 @@ if(UNIX)\n endif()\n \n if (tensorflow_ENABLE_GPU)\n+  if (NOT WIN32)\n+    # Default install paths for cuda libraries in Linux\n+    list(APPEND CMAKE_LIBRARY_PATH /usr/local/cuda/lib64)\n+    list(APPEND CMAKE_LIBRARY_PATH /usr/local/cuda/lib64/stubs)\n+  endif (NOT WIN32)\n+\n+  find_package(CUDA 8.0 REQUIRED)\n+\n+  # by default we assume compute cabability 3.5 and 5.2. If you change this change it in\n+  # CUDA_NVCC_FLAGS and cuda_config.h below\n+  set(CUDA_NVCC_FLAGS ${CUDA_NVCC_FLAGS};-gencode arch=compute_30,code=\\\"sm_30,compute_30\\\";-gencode arch=compute_35,code=\\\"sm_35,compute_35\\\";-gencode arch=compute_52,code=\\\"sm_52,compute_52\\\")\n+  set(CUDA_NVCC_FLAGS ${CUDA_NVCC_FLAGS};--include-path ${PROJECT_BINARY_DIR}/$\\{build_configuration\\};--expt-relaxed-constexpr)\n+  set(CUDA_NVCC_FLAGS ${CUDA_NVCC_FLAGS};-ftz=true)  # Flush denormals to zero\n+  set(CUDA_INCLUDE ${CUDA_TOOLKIT_TARGET_DIR} ${CUDA_TOOLKIT_TARGET_DIR}/extras/CUPTI/include)\n+  include_directories(${CUDA_INCLUDE})\n   if (WIN32)\n-    find_package(CUDA 8.0 REQUIRED)\n-\n-    # by default we assume compute cabability 3.5 and 5.2. If you change this change it in\n-    # CUDA_NVCC_FLAGS and cuda_config.h below\n-    set(CUDA_NVCC_FLAGS ${CUDA_NVCC_FLAGS};-gencode arch=compute_30,code=\\\"sm_30,compute_30\\\";-gencode arch=compute_35,code=\\\"sm_35,compute_35\\\";-gencode arch=compute_52,code=\\\"sm_52,compute_52\\\")\n-    set(CUDA_NVCC_FLAGS ${CUDA_NVCC_FLAGS};--include-path ${PROJECT_BINARY_DIR}/$\\{build_configuration\\};--expt-relaxed-constexpr)\n-    set(CUDA_NVCC_FLAGS ${CUDA_NVCC_FLAGS};-ftz=true)  # Flush denormals to zero\n-    set(CUDA_INCLUDE ${CUDA_TOOLKIT_TARGET_DIR} ${CUDA_TOOLKIT_TARGET_DIR}/extras/CUPTI/include)\n-    include_directories(${CUDA_INCLUDE})\n     add_definitions(-DGOOGLE_CUDA=1 -DTF_EXTRA_CUDA_CAPABILITIES=3.0,3.5,5.2)\n+  else (WIN32)\n+    # Without these double quotes, cmake in Linux makes it \"-DTF_EXTRA_CUDA_CAPABILITIES=3.0, -D3.5, -D5.2\" for cc, which incurs build breaks\n+    add_definitions(-DGOOGLE_CUDA=1 -D\"TF_EXTRA_CUDA_CAPABILITIES=3.0,3.5,5.2\")\n+  endif (WIN32)\n \n+  if (WIN32)\n     # add cudnn\n     if(NOT CUDNN_HOME)\n       set(CUDNN_HOME ${CUDA_TOOLKIT_TARGET_DIR})\n     endif(NOT CUDNN_HOME)\n     include_directories(${CUDNN_HOME})\n     set(CUDA_LIBRARIES ${CUDA_LIBRARIES} ${CUDA_CUDA_LIBRARY} ${CUDA_CUBLAS_LIBRARIES} ${CUDA_CUFFT_LIBRARIES}\n       ${CUDA_curand_LIBRARY} ${CUDA_cupti_LIBRARY} ${CUDA_cusolver_LIBRARY} ${CUDNN_HOME}/lib/x64/cudnn.lib)\n+  else (WIN32)\n+    set(CUDNN_INCLUDE \"${tensorflow_CUDNN_INCLUDE}\")\n \n-    # create cuda_config.h\n-    FILE(WRITE ${tensorflow_source_dir}/third_party/gpus/cuda/cuda_config.h\n-      \"#ifndef CUDA_CUDA_CONFIG_H_\\n\"\n-      \"#define CUDA_CUDA_CONFIG_H_\\n\"\n-      \"#define TF_CUDA_CAPABILITIES CudaVersion(\\\"3.0\\\"),CudaVersion(\\\"3.5\\\"),CudaVersion(\\\"5.2\\\")\\n\"\n-      \"#define TF_CUDA_VERSION \\\"64_80\\\"\\n\"\n-      \"#define TF_CUDNN_VERSION \\\"64_6\\\"\\n\"\n-      \"#define TF_CUDA_TOOLKIT_PATH \\\"${CUDA_TOOLKIT_ROOT_DIR}\\\"\\n\"\n-      \"#endif  // CUDA_CUDA_CONFIG_H_\\n\"\n-    )\n+    find_library(nccl_STATIC_LIBRARY NAMES libnccl_static.a PATHS tensorflow_PATH_STATIC_LIB ${CUDA_TOOLKIT_ROOT_DIR})\n+    if (NOT nccl_STATIC_LIBRARY)\n+      message(FATAL_ERROR \"NCCL is required for GPU-build\")\n+    else (NOT nccl_STATIC_LIBRARY)\n+      message(INFO \"nccl-static: ${nccl_STATIC_LIBRARY}\")\n+      # something like /usr/lib64/libnccl_static.a\n+    endif (NOT nccl_STATIC_LIBRARY)\n \n+    find_library(cudnn_STATIC_LIBRARY NAMES libcudnn_static.a PATHS tensorflow_PATH_STATIC_LIB ${CUDA_TOOLKIT_ROOT_DIR})\n+    if (NOT cudnn_STATIC_LIBRARY)\n+      message(FATAL_ERROR \"CUDNN is required for GPU-build\")\n+    else (NOT cudnn_STATIC_LIBRARY)\n+      message(INFO \"cudnn-static: ${cudnn_STATIC_LIBRARY}\")\n+    endif (NOT cudnn_STATIC_LIBRARY)\n+\n+    find_library(culibos_STATIC_LIBRARY NAMES libculibos.a PATHS tensorflow_PATH_STATIC_LIB ${CUDA_TOOLKIT_ROOT_DIR})\n+    if (NOT culibos_STATIC_LIBRARY)\n+      message(FATAL_ERROR \"CULIBOS is required for GPU-build\")\n+    else (NOT culibos_STATIC_LIBRARY)\n+      message(INFO \"culibos-static: ${culibos_STATIC_LIBRARY}\")\n+    endif (NOT culibos_STATIC_LIBRARY)\n+\n+    include_directories(${CUDNN_INCLUDE})\n+    set(CUDA_LIBRARIES ${CUDA_LIBRARIES} ${CUDA_CUDA_LIBRARY} ${CUDA_CUBLAS_LIBRARIES} ${CUDA_CUFFT_LIBRARIES}\n+      ${CUDA_curand_LIBRARY} ${CUDA_cupti_LIBRARY} ${CUDA_cusolver_LIBRARY} ${cudnn_STATIC_LIBRARY} ${culibos_STATIC_LIBRARY} ${nccl_STATIC_LIBRARY})\n+  endif (WIN32)\n+\n+  # create cuda_config.h\n+  FILE(WRITE ${tensorflow_source_dir}/third_party/gpus/cuda/cuda_config.h\n+    \"#ifndef CUDA_CUDA_CONFIG_H_\\n\"\n+    \"#define CUDA_CUDA_CONFIG_H_\\n\"\n+    \"#define TF_CUDA_CAPABILITIES CudaVersion(\\\"3.0\\\"),CudaVersion(\\\"3.5\\\"),CudaVersion(\\\"5.2\\\")\\n\"\n+    \"#define TF_CUDA_VERSION \\\"64_80\\\"\\n\"\n+    \"#define TF_CUDNN_VERSION \\\"64_6\\\"\\n\"\n+    \"#define TF_CUDA_TOOLKIT_PATH \\\"${CUDA_TOOLKIT_ROOT_DIR}\\\"\\n\"\n+    \"#endif  // CUDA_CUDA_CONFIG_H_\\n\"\n+  )\n+\n+  if (WIN32)\n     # tf assumes in various places header files to be in cuda/include. On windows the cuda sdk\n     # installs them under cuda/version/include and to avoid that we need to change tf we copy a\n     # few files to cuda/include\n     FILE(COPY\n       ${CUDA_TOOLKIT_TARGET_DIR}/include/cuda.h ${CUDA_TOOLKIT_TARGET_DIR}/include/cuComplex.h\n-      ${CUDA_TOOLKIT_TARGET_DIR}/include/cublas_v2.h ${CUDNN_HOME}/include/cudnn.h\n+      ${CUDA_TOOLKIT_TARGET_DIR}/include/cublas_v2.h ${CUDNN_HOME}/cudnn.h", "path": "tensorflow/contrib/cmake/CMakeLists.txt", "position": null, "original_position": 121, "commit_id": "486ad315f70d1a17769fdc4cf89634e7db9a4ebd", "original_commit_id": "bd593e0210cc88aca87ac589e04e9eb9a39c4b83", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "body": "This change to the source path for `cudnn.h` seems like it might break the Windows build. Can you revert it?", "created_at": "2017-11-01T16:17:48Z", "updated_at": "2017-11-07T11:14:14Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/14016#discussion_r148307277", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/14016", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/148307277"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/14016#discussion_r148307277"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/14016"}}, "body_html": "<p>This change to the source path for <code>cudnn.h</code> seems like it might break the Windows build. Can you revert it?</p>", "body_text": "This change to the source path for cudnn.h seems like it might break the Windows build. Can you revert it?"}