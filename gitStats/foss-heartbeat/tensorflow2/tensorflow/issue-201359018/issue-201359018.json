{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6907", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6907/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6907/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6907/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/6907", "id": 201359018, "node_id": "MDExOlB1bGxSZXF1ZXN0MTAxOTEzNzk3", "number": 6907, "title": "Fix the error of erase session variables (Android JNI)", "user": {"login": "elirex", "id": 2871834, "node_id": "MDQ6VXNlcjI4NzE4MzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2871834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elirex", "html_url": "https://github.com/elirex", "followers_url": "https://api.github.com/users/elirex/followers", "following_url": "https://api.github.com/users/elirex/following{/other_user}", "gists_url": "https://api.github.com/users/elirex/gists{/gist_id}", "starred_url": "https://api.github.com/users/elirex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elirex/subscriptions", "organizations_url": "https://api.github.com/users/elirex/orgs", "repos_url": "https://api.github.com/users/elirex/repos", "events_url": "https://api.github.com/users/elirex/events{/privacy}", "received_events_url": "https://api.github.com/users/elirex/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}, {"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "andrewharp", "id": 3376817, "node_id": "MDQ6VXNlcjMzNzY4MTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/3376817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewharp", "html_url": "https://github.com/andrewharp", "followers_url": "https://api.github.com/users/andrewharp/followers", "following_url": "https://api.github.com/users/andrewharp/following{/other_user}", "gists_url": "https://api.github.com/users/andrewharp/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewharp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewharp/subscriptions", "organizations_url": "https://api.github.com/users/andrewharp/orgs", "repos_url": "https://api.github.com/users/andrewharp/repos", "events_url": "https://api.github.com/users/andrewharp/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewharp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "andrewharp", "id": 3376817, "node_id": "MDQ6VXNlcjMzNzY4MTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/3376817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewharp", "html_url": "https://github.com/andrewharp", "followers_url": "https://api.github.com/users/andrewharp/followers", "following_url": "https://api.github.com/users/andrewharp/following{/other_user}", "gists_url": "https://api.github.com/users/andrewharp/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewharp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewharp/subscriptions", "organizations_url": "https://api.github.com/users/andrewharp/orgs", "repos_url": "https://api.github.com/users/andrewharp/repos", "events_url": "https://api.github.com/users/andrewharp/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewharp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2017-01-17T17:50:49Z", "updated_at": "2017-01-20T19:22:07Z", "closed_at": "2017-01-20T19:22:07Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/6907", "html_url": "https://github.com/tensorflow/tensorflow/pull/6907", "diff_url": "https://github.com/tensorflow/tensorflow/pull/6907.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/6907.patch"}, "body_html": "<p>When calling the tensorflow_inference_jni.cc of TENSORFLOW_METHOD(close) function, the session variables is not erased from the map of session variables according its id.(at tensorflow_inference_jni.cc line 217)<br>\nThis bug reason is assign large data type to the small data type (at tensorflow_inference_jni.cc line 84) that causes some bytes missing.</p>\n<h3>Illustrate</h3>\n<pre><code># tensorflow_inference_jni.cc file\n\n...\n 49 struct SessionVariables {\n 50   std::unique_ptr&lt;tensorflow::Session&gt; session; \n\n 52   long id = -1;\n       ...\n     };\n\n...\n 69 inline static SessionVariables* GetSessionVars(JNIEnv* env, jobject thiz) {\n       ...\n 72   jfieldID fid = env-&gt;GetFieldID(clazz, \"id\", \"J\");\n 73   assert(fid != nullptr);\n 74   const int64 id = env-&gt;GetLongField(thiz, fid);\n        ...\n 80   std::map&lt;int64, SessionVariables*&gt;&amp; sessions = *GetSessionsSingleton();\n 81   if (sessions.find(id) == sessions.end()) {\n 82     LOG(INFO) &lt;&lt; \"Creating new session variables for \" &lt;&lt; std::hex &lt;&lt; id;\n 83     SessionVariables* vars = new SessionVariables;\n 84     vars-&gt;id = id; // Bug assign int64 to long\n 85     sessions[id] = vars;\n         ...\n256 JNIEXPORT jint JNICALL TENSORFLOW_METHOD(close)(JNIEnv* env, jobject thiz) {\n       ...\n267   std::map&lt;int64, SessionVariables*&gt;&amp; sessions = *GetSessionsSingleton();\n268   sessions.erase(vars-&gt;id);\n       ...\n</code></pre>\n<p>The GetSessionVars function line 72~74 that get the long type id from java and assign to const int64 variable. At the line 84 that assigns int64 id variable to the id of SessionVariables, but the type of the id of SessionVariables struct is long. Assign large type to small type that causes some bytes missing.<br>\nAt the line 85, using the int64 type of id to set the key of the SessionVariables map, so  TENSORFLOW_METHOD(close) function erases the session variables according to vars-&gt;id that the vars-&gt;id will never be found and erased from map.</p>\n<h3>Fix</h3>\n<p>I change the type of the id of SessionVariables struct to int64.</p>\n<pre><code> struct SessionVariables {\n   std::unique_ptr&lt;tensorflow::Session&gt; session;\n\n   int64 id = -1;  // Change data type\n   int num_runs = 0;\n   int64 timing_total_us = 0;\n \n   InputMap input_tensors;\n   std::vector&lt;std::string&gt; output_tensor_names;\n   std::vector&lt;tensorflow::Tensor&gt; output_tensors;\n };\n</code></pre>", "body_text": "When calling the tensorflow_inference_jni.cc of TENSORFLOW_METHOD(close) function, the session variables is not erased from the map of session variables according its id.(at tensorflow_inference_jni.cc line 217)\nThis bug reason is assign large data type to the small data type (at tensorflow_inference_jni.cc line 84) that causes some bytes missing.\nIllustrate\n# tensorflow_inference_jni.cc file\n\n...\n 49 struct SessionVariables {\n 50   std::unique_ptr<tensorflow::Session> session; \n\n 52   long id = -1;\n       ...\n     };\n\n...\n 69 inline static SessionVariables* GetSessionVars(JNIEnv* env, jobject thiz) {\n       ...\n 72   jfieldID fid = env->GetFieldID(clazz, \"id\", \"J\");\n 73   assert(fid != nullptr);\n 74   const int64 id = env->GetLongField(thiz, fid);\n        ...\n 80   std::map<int64, SessionVariables*>& sessions = *GetSessionsSingleton();\n 81   if (sessions.find(id) == sessions.end()) {\n 82     LOG(INFO) << \"Creating new session variables for \" << std::hex << id;\n 83     SessionVariables* vars = new SessionVariables;\n 84     vars->id = id; // Bug assign int64 to long\n 85     sessions[id] = vars;\n         ...\n256 JNIEXPORT jint JNICALL TENSORFLOW_METHOD(close)(JNIEnv* env, jobject thiz) {\n       ...\n267   std::map<int64, SessionVariables*>& sessions = *GetSessionsSingleton();\n268   sessions.erase(vars->id);\n       ...\n\nThe GetSessionVars function line 72~74 that get the long type id from java and assign to const int64 variable. At the line 84 that assigns int64 id variable to the id of SessionVariables, but the type of the id of SessionVariables struct is long. Assign large type to small type that causes some bytes missing.\nAt the line 85, using the int64 type of id to set the key of the SessionVariables map, so  TENSORFLOW_METHOD(close) function erases the session variables according to vars->id that the vars->id will never be found and erased from map.\nFix\nI change the type of the id of SessionVariables struct to int64.\n struct SessionVariables {\n   std::unique_ptr<tensorflow::Session> session;\n\n   int64 id = -1;  // Change data type\n   int num_runs = 0;\n   int64 timing_total_us = 0;\n \n   InputMap input_tensors;\n   std::vector<std::string> output_tensor_names;\n   std::vector<tensorflow::Tensor> output_tensors;\n };", "body": "When calling the tensorflow_inference_jni.cc of TENSORFLOW_METHOD(close) function, the session variables is not erased from the map of session variables according its id.(at tensorflow_inference_jni.cc line 217)\r\nThis bug reason is assign large data type to the small data type (at tensorflow_inference_jni.cc line 84) that causes some bytes missing.\r\n\r\n### Illustrate \r\n```\r\n# tensorflow_inference_jni.cc file\r\n\r\n...\r\n 49 struct SessionVariables {\r\n 50   std::unique_ptr<tensorflow::Session> session; \r\n\r\n 52   long id = -1;\r\n       ...\r\n     };\r\n\r\n...\r\n 69 inline static SessionVariables* GetSessionVars(JNIEnv* env, jobject thiz) {\r\n       ...\r\n 72   jfieldID fid = env->GetFieldID(clazz, \"id\", \"J\");\r\n 73   assert(fid != nullptr);\r\n 74   const int64 id = env->GetLongField(thiz, fid);\r\n        ...\r\n 80   std::map<int64, SessionVariables*>& sessions = *GetSessionsSingleton();\r\n 81   if (sessions.find(id) == sessions.end()) {\r\n 82     LOG(INFO) << \"Creating new session variables for \" << std::hex << id;\r\n 83     SessionVariables* vars = new SessionVariables;\r\n 84     vars->id = id; // Bug assign int64 to long\r\n 85     sessions[id] = vars;\r\n         ...\r\n256 JNIEXPORT jint JNICALL TENSORFLOW_METHOD(close)(JNIEnv* env, jobject thiz) {\r\n       ...\r\n267   std::map<int64, SessionVariables*>& sessions = *GetSessionsSingleton();\r\n268   sessions.erase(vars->id);\r\n       ...\r\n```\r\nThe GetSessionVars function line 72~74 that get the long type id from java and assign to const int64 variable. At the line 84 that assigns int64 id variable to the id of SessionVariables, but the type of the id of SessionVariables struct is long. Assign large type to small type that causes some bytes missing. \r\nAt the line 85, using the int64 type of id to set the key of the SessionVariables map, so  TENSORFLOW_METHOD(close) function erases the session variables according to vars->id that the vars->id will never be found and erased from map.\r\n\r\n### Fix\r\nI change the type of the id of SessionVariables struct to int64.\r\n```\r\n struct SessionVariables {\r\n   std::unique_ptr<tensorflow::Session> session;\r\n\r\n   int64 id = -1;  // Change data type\r\n   int num_runs = 0;\r\n   int64 timing_total_us = 0;\r\n \r\n   InputMap input_tensors;\r\n   std::vector<std::string> output_tensor_names;\r\n   std::vector<tensorflow::Tensor> output_tensors;\r\n };\r\n```"}