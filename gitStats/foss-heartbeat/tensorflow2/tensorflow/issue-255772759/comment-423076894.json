{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/423076894", "html_url": "https://github.com/tensorflow/tensorflow/issues/12859#issuecomment-423076894", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12859", "id": 423076894, "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzA3Njg5NA==", "user": {"login": "jiawei6636", "id": 24591769, "node_id": "MDQ6VXNlcjI0NTkxNzY5", "avatar_url": "https://avatars2.githubusercontent.com/u/24591769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jiawei6636", "html_url": "https://github.com/jiawei6636", "followers_url": "https://api.github.com/users/jiawei6636/followers", "following_url": "https://api.github.com/users/jiawei6636/following{/other_user}", "gists_url": "https://api.github.com/users/jiawei6636/gists{/gist_id}", "starred_url": "https://api.github.com/users/jiawei6636/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jiawei6636/subscriptions", "organizations_url": "https://api.github.com/users/jiawei6636/orgs", "repos_url": "https://api.github.com/users/jiawei6636/repos", "events_url": "https://api.github.com/users/jiawei6636/events{/privacy}", "received_events_url": "https://api.github.com/users/jiawei6636/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-20T07:46:17Z", "updated_at": "2018-09-20T07:46:17Z", "author_association": "NONE", "body_html": "<blockquote>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1968539\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/dongjk\">@dongjk</a> you can use a hook to do all you need. Following is a code example.</p>\n<pre><code>initializer_hook = DatasetInitializerHook(dataset.make_initializable_iterator())\nwith MonitoredTrainingSession(hooks=[], ...\n\nclass _DatasetInitializerHook(tf.train.SessionRunHook):\n  def __init__(self, iterator):\n    self._iterator = iterator\n  def begin(self):\n    self._initializer = self._iterator.initializer\n  def after_create_session(self, session, coord):\n    del coord\n    session.run(self._initializer, your-feed-dict)\n</code></pre>\n</blockquote>\n<p>good!</p>", "body_text": "@dongjk you can use a hook to do all you need. Following is a code example.\ninitializer_hook = DatasetInitializerHook(dataset.make_initializable_iterator())\nwith MonitoredTrainingSession(hooks=[], ...\n\nclass _DatasetInitializerHook(tf.train.SessionRunHook):\n  def __init__(self, iterator):\n    self._iterator = iterator\n  def begin(self):\n    self._initializer = self._iterator.initializer\n  def after_create_session(self, session, coord):\n    del coord\n    session.run(self._initializer, your-feed-dict)\n\n\ngood!", "body": "> @dongjk you can use a hook to do all you need. Following is a code example.\r\n> \r\n> ```\r\n> initializer_hook = DatasetInitializerHook(dataset.make_initializable_iterator())\r\n> with MonitoredTrainingSession(hooks=[], ...\r\n> \r\n> class _DatasetInitializerHook(tf.train.SessionRunHook):\r\n>   def __init__(self, iterator):\r\n>     self._iterator = iterator\r\n>   def begin(self):\r\n>     self._initializer = self._iterator.initializer\r\n>   def after_create_session(self, session, coord):\r\n>     del coord\r\n>     session.run(self._initializer, your-feed-dict)\r\n> ```\r\n\r\ngood!"}