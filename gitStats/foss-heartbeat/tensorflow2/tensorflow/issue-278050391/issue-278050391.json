{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14996", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14996/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14996/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14996/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14996", "id": 278050391, "node_id": "MDU6SXNzdWUyNzgwNTAzOTE=", "number": 14996, "title": "How to read image_data and fill image_tensor by tensorflow c++ apis", "user": {"login": "luyuesheng", "id": 33076256, "node_id": "MDQ6VXNlcjMzMDc2MjU2", "avatar_url": "https://avatars1.githubusercontent.com/u/33076256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luyuesheng", "html_url": "https://github.com/luyuesheng", "followers_url": "https://api.github.com/users/luyuesheng/followers", "following_url": "https://api.github.com/users/luyuesheng/following{/other_user}", "gists_url": "https://api.github.com/users/luyuesheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/luyuesheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luyuesheng/subscriptions", "organizations_url": "https://api.github.com/users/luyuesheng/orgs", "repos_url": "https://api.github.com/users/luyuesheng/repos", "events_url": "https://api.github.com/users/luyuesheng/events{/privacy}", "received_events_url": "https://api.github.com/users/luyuesheng/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-11-30T09:25:56Z", "updated_at": "2018-01-05T02:18:52Z", "closed_at": "2018-01-05T02:18:52Z", "author_association": "NONE", "body_html": "<p>I want to infer a image by a trained model.first read a image as Mat by opencv,then fill plane_tensor with Mat.Does it work ? Is there any better way to the following code? waiting for some warming person ! thank you very much.</p>\n<p>Mat img = imread(file_name);<br>\nstd::vector bgr;<br>\nsplit(img, bgr);<br>\ntensorflow::Tensor four_dim_plane(DT_UINT8, tensorflow::TensorShape({ 1, img.rows, img.cols, 3 }));<br>\nauto plane_tensor = four_dim_plane.tensor&lt;unsigned char, 4&gt;();<br>\nfor (int  k = 0; k &lt; 3; ++k)<br>\n{<br>\nfor (int  i = 0; i &lt; img.rows; ++i)<br>\n{<br>\nfor (int j = 0; j &lt; img.cols; ++j)<br>\n{<br>\nplane_tensor(0, i, j, k) = bgr[k].at(i, j);<br>\n}<br>\n}<br>\n}<br>\ntensorflow::Status status3 = session-&gt;Run({ { \"image_tensor\", plane_tensor } },{ output_node },<br>\n{}, &amp;outputs);</p>\n<p>**System information</p>\n<p>Have I written custom code (as opposed to using a stock example script provided in TensorFlow):yes<br>\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): windows10<br>\nTensorFlow installed from (source or binary): source<br>\nTensorFlow version (use command below): TF1.4<br>\nPython version:python3.5.2<br>\nGCC/Compiler version (if compiling from source): vs2015<br>\nCUDA/cuDNN version:cuda8.0/cudnn6.0<br>\nGPU model and memory:TXT1080TI/11G<br>\nBazel version\uff1a<br>\nExact command to reproduce\uff1a**</p>", "body_text": "I want to infer a image by a trained model.first read a image as Mat by opencv,then fill plane_tensor with Mat.Does it work ? Is there any better way to the following code? waiting for some warming person ! thank you very much.\nMat img = imread(file_name);\nstd::vector bgr;\nsplit(img, bgr);\ntensorflow::Tensor four_dim_plane(DT_UINT8, tensorflow::TensorShape({ 1, img.rows, img.cols, 3 }));\nauto plane_tensor = four_dim_plane.tensor<unsigned char, 4>();\nfor (int  k = 0; k < 3; ++k)\n{\nfor (int  i = 0; i < img.rows; ++i)\n{\nfor (int j = 0; j < img.cols; ++j)\n{\nplane_tensor(0, i, j, k) = bgr[k].at(i, j);\n}\n}\n}\ntensorflow::Status status3 = session->Run({ { \"image_tensor\", plane_tensor } },{ output_node },\n{}, &outputs);\n**System information\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): windows10\nTensorFlow installed from (source or binary): source\nTensorFlow version (use command below): TF1.4\nPython version:python3.5.2\nGCC/Compiler version (if compiling from source): vs2015\nCUDA/cuDNN version:cuda8.0/cudnn6.0\nGPU model and memory:TXT1080TI/11G\nBazel version\uff1a\nExact command to reproduce\uff1a**", "body": "I want to infer a image by a trained model.first read a image as Mat by opencv,then fill plane_tensor with Mat.Does it work ? Is there any better way to the following code? waiting for some warming person ! thank you very much.\r\n\r\nMat img = imread(file_name);\r\nstd::vector<Mat> bgr;\r\nsplit(img, bgr);\r\ntensorflow::Tensor four_dim_plane(DT_UINT8, tensorflow::TensorShape({ 1, img.rows, img.cols, 3 }));\r\nauto plane_tensor = four_dim_plane.tensor<unsigned char, 4>();\r\nfor (int  k = 0; k < 3; ++k)\r\n{\r\n        for (int  i = 0; i < img.rows; ++i)\r\n\t{\r\n\t\tfor (int j = 0; j < img.cols; ++j)\r\n\t\t{\r\n\t\t   plane_tensor(0, i, j, k) = bgr[k].at<unsigned char>(i, j);\r\n\t\t}\r\n\t}\r\n}\r\ntensorflow::Status status3 = session->Run({ { \"image_tensor\", plane_tensor } },{ output_node },\r\n          {}, &outputs);\r\n\r\n**System information\r\n\r\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):yes\r\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): windows10 \r\nTensorFlow installed from (source or binary): source\r\nTensorFlow version (use command below): TF1.4\r\nPython version:python3.5.2\r\nGCC/Compiler version (if compiling from source): vs2015\r\nCUDA/cuDNN version:cuda8.0/cudnn6.0\r\nGPU model and memory:TXT1080TI/11G\r\nBazel version\uff1a\r\nExact command to reproduce\uff1a**"}