{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/249727438", "html_url": "https://github.com/tensorflow/tensorflow/pull/4563#issuecomment-249727438", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4563", "id": 249727438, "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTcyNzQzOA==", "user": {"login": "tyfkda", "id": 7347125, "node_id": "MDQ6VXNlcjczNDcxMjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/7347125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tyfkda", "html_url": "https://github.com/tyfkda", "followers_url": "https://api.github.com/users/tyfkda/followers", "following_url": "https://api.github.com/users/tyfkda/following{/other_user}", "gists_url": "https://api.github.com/users/tyfkda/gists{/gist_id}", "starred_url": "https://api.github.com/users/tyfkda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tyfkda/subscriptions", "organizations_url": "https://api.github.com/users/tyfkda/orgs", "repos_url": "https://api.github.com/users/tyfkda/repos", "events_url": "https://api.github.com/users/tyfkda/events{/privacy}", "received_events_url": "https://api.github.com/users/tyfkda/received_events", "type": "User", "site_admin": false}, "created_at": "2016-09-26T23:31:07Z", "updated_at": "2016-09-26T23:37:15Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=49262\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jart\">@jart</a><br>\nI'm not sure what is your expected way,</p>\n<ol>\n<li></li>\n</ol>\n<p>Unlike URL for other libraries in download_dependencies.sh (<code>GEMMLOWP_URL</code>, <code>GOOGLETEST_URL</code>, <code>PROTOBUF_URL</code>, <code>RE2_URL</code>), single <code>grep</code> cannot extract <code>EIGEN_URL</code>, because the URL is declared as</p>\n<div class=\"highlight highlight-source-python\"><pre>    url <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://bitbucket.org/eigen/eigen/get/<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> eigen_version <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>.tar.gz<span class=\"pl-pds\">\"</span></span>,</pre></div>\n<p>in <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/workspace.bzl#L22\">workspace.bzl</a>.</p>\n<ol start=\"2\">\n<li></li>\n</ol>\n<p>Unlike CMake, <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/cmake/external/eigen.cmake#L13\">string(REGEX MATCH ...)</a> cannot use in Makefile.</p>\n<ol start=\"3\">\n<li></li>\n</ol>\n<p>Do you mean it is preferable to modify the declaration for eigen library in same way in workspace.bzl, not to use variable</p>\n<div class=\"highlight highlight-source-python\"><pre>  native.new_http_archive(\n    <span class=\"pl-v\">name</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>eigen_archive<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-v\">url</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://bitbucket.org/eigen/eigen/get/46ee714e25d5.tar.gz<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-v\">sha256</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>d2ba02303c20d6ddc1a922f7e0e176ef841514545e053388845359aa62176912<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-v\">strip_prefix</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>eigen-eigen-46ee714e25d5<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-v\">build_file</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">str</span>(Label(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>//:eigen.BUILD<span class=\"pl-pds\">\"</span></span>)),\n  )</pre></div>\n<p>to enable extraction for eigen URL with single <code>grep</code>?</p>", "body_text": "@jart\nI'm not sure what is your expected way,\n\n\n\nUnlike URL for other libraries in download_dependencies.sh (GEMMLOWP_URL, GOOGLETEST_URL, PROTOBUF_URL, RE2_URL), single grep cannot extract EIGEN_URL, because the URL is declared as\n    url = \"http://bitbucket.org/eigen/eigen/get/\" + eigen_version + \".tar.gz\",\nin workspace.bzl.\n\n\n\nUnlike CMake, string(REGEX MATCH ...) cannot use in Makefile.\n\n\n\nDo you mean it is preferable to modify the declaration for eigen library in same way in workspace.bzl, not to use variable\n  native.new_http_archive(\n    name = \"eigen_archive\",\n    url = \"http://bitbucket.org/eigen/eigen/get/46ee714e25d5.tar.gz\",\n    sha256 = \"d2ba02303c20d6ddc1a922f7e0e176ef841514545e053388845359aa62176912\",\n    strip_prefix = \"eigen-eigen-46ee714e25d5\",\n    build_file = str(Label(\"//:eigen.BUILD\")),\n  )\nto enable extraction for eigen URL with single grep?", "body": "@jart \nI'm not sure what is your expected way,\n\n1.\nUnlike URL for other libraries in download_dependencies.sh (`GEMMLOWP_URL`, `GOOGLETEST_URL`, `PROTOBUF_URL`, `RE2_URL`), single `grep` cannot extract `EIGEN_URL`, because the URL is declared as\n\n``` py\n    url = \"http://bitbucket.org/eigen/eigen/get/\" + eigen_version + \".tar.gz\",\n```\n\nin [workspace.bzl](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/workspace.bzl#L22).\n\n2.\nUnlike CMake, [string(REGEX MATCH ...)](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/cmake/external/eigen.cmake#L13) cannot use in Makefile.\n\n3.\nDo you mean it is preferable to modify the declaration for eigen library in same way in workspace.bzl, not to use variable\n\n``` py\n  native.new_http_archive(\n    name = \"eigen_archive\",\n    url = \"http://bitbucket.org/eigen/eigen/get/46ee714e25d5.tar.gz\",\n    sha256 = \"d2ba02303c20d6ddc1a922f7e0e176ef841514545e053388845359aa62176912\",\n    strip_prefix = \"eigen-eigen-46ee714e25d5\",\n    build_file = str(Label(\"//:eigen.BUILD\")),\n  )\n```\n\nto enable extraction for eigen URL with single `grep`?\n"}