{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/233868681", "html_url": "https://github.com/tensorflow/tensorflow/issues/3340#issuecomment-233868681", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3340", "id": 233868681, "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzg2ODY4MQ==", "user": {"login": "llealgt", "id": 10162801, "node_id": "MDQ6VXNlcjEwMTYyODAx", "avatar_url": "https://avatars1.githubusercontent.com/u/10162801?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llealgt", "html_url": "https://github.com/llealgt", "followers_url": "https://api.github.com/users/llealgt/followers", "following_url": "https://api.github.com/users/llealgt/following{/other_user}", "gists_url": "https://api.github.com/users/llealgt/gists{/gist_id}", "starred_url": "https://api.github.com/users/llealgt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llealgt/subscriptions", "organizations_url": "https://api.github.com/users/llealgt/orgs", "repos_url": "https://api.github.com/users/llealgt/repos", "events_url": "https://api.github.com/users/llealgt/events{/privacy}", "received_events_url": "https://api.github.com/users/llealgt/received_events", "type": "User", "site_admin": false}, "created_at": "2016-07-20T07:44:02Z", "updated_at": "2016-07-20T07:44:02Z", "author_association": "NONE", "body_html": "<p>Thank you guys , i tested it and it seems as it works, my test was: created a DNNClassifier specifiyng model_dir on constructor, fit(), used get_variable_value to wet weights of the last layer , created another DNNClassifier using the same model_dir in constructor, used get_variable_value and the same weights were printed, so i worked as you said, but now i have some additional questions<br>\nin this case from what i saw, you can \"pause\" and \"resume\" training using the files generated, what happens if you are training and power goes off or something happens? does it stores multiple checkpoints and will use last one? Creating a model and traing with for example 100 steps, and then restoring it with this method and training another 100 steps is equivalent to training 200 steps from the beggining?</p>\n<p>Now my other question is, i trained using model_dir, then created another model with the same model_dir to restore it, but when tried predict with the restored model i got the eerror : ValueError: Either linear_feature_columns or dnn_feature_columns should be defined.<br>\nSo i had to train 5 steps and then predict, is there a way to restore and predict without having to do this \"dummy training\" ? Can you get the total count of training steps using .get_variable_value () ? And the last one: can you create a multi-output classifier? like sending a list or array of outputs when you train, and then get a list of the same size when you predict?</p>", "body_text": "Thank you guys , i tested it and it seems as it works, my test was: created a DNNClassifier specifiyng model_dir on constructor, fit(), used get_variable_value to wet weights of the last layer , created another DNNClassifier using the same model_dir in constructor, used get_variable_value and the same weights were printed, so i worked as you said, but now i have some additional questions\nin this case from what i saw, you can \"pause\" and \"resume\" training using the files generated, what happens if you are training and power goes off or something happens? does it stores multiple checkpoints and will use last one? Creating a model and traing with for example 100 steps, and then restoring it with this method and training another 100 steps is equivalent to training 200 steps from the beggining?\nNow my other question is, i trained using model_dir, then created another model with the same model_dir to restore it, but when tried predict with the restored model i got the eerror : ValueError: Either linear_feature_columns or dnn_feature_columns should be defined.\nSo i had to train 5 steps and then predict, is there a way to restore and predict without having to do this \"dummy training\" ? Can you get the total count of training steps using .get_variable_value () ? And the last one: can you create a multi-output classifier? like sending a list or array of outputs when you train, and then get a list of the same size when you predict?", "body": "Thank you guys , i tested it and it seems as it works, my test was: created a DNNClassifier specifiyng model_dir on constructor, fit(), used get_variable_value to wet weights of the last layer , created another DNNClassifier using the same model_dir in constructor, used get_variable_value and the same weights were printed, so i worked as you said, but now i have some additional questions\nin this case from what i saw, you can \"pause\" and \"resume\" training using the files generated, what happens if you are training and power goes off or something happens? does it stores multiple checkpoints and will use last one? Creating a model and traing with for example 100 steps, and then restoring it with this method and training another 100 steps is equivalent to training 200 steps from the beggining?\n\nNow my other question is, i trained using model_dir, then created another model with the same model_dir to restore it, but when tried predict with the restored model i got the eerror : ValueError: Either linear_feature_columns or dnn_feature_columns should be defined.\nSo i had to train 5 steps and then predict, is there a way to restore and predict without having to do this \"dummy training\" ? Can you get the total count of training steps using .get_variable_value () ? And the last one: can you create a multi-output classifier? like sending a list or array of outputs when you train, and then get a list of the same size when you predict?\n"}