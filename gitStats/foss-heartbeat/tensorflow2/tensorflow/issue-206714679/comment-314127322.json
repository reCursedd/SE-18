{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/314127322", "html_url": "https://github.com/tensorflow/tensorflow/issues/7407#issuecomment-314127322", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7407", "id": 314127322, "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDEyNzMyMg==", "user": {"login": "Styrke", "id": 1035167, "node_id": "MDQ6VXNlcjEwMzUxNjc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1035167?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Styrke", "html_url": "https://github.com/Styrke", "followers_url": "https://api.github.com/users/Styrke/followers", "following_url": "https://api.github.com/users/Styrke/following{/other_user}", "gists_url": "https://api.github.com/users/Styrke/gists{/gist_id}", "starred_url": "https://api.github.com/users/Styrke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Styrke/subscriptions", "organizations_url": "https://api.github.com/users/Styrke/orgs", "repos_url": "https://api.github.com/users/Styrke/repos", "events_url": "https://api.github.com/users/Styrke/events{/privacy}", "received_events_url": "https://api.github.com/users/Styrke/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-10T14:42:56Z", "updated_at": "2017-07-10T14:42:56Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4431772\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/pkubik\">@pkubik</a>'s suggestion fixed the problem for me.</p>\n<p>After replacing my homemade metric<br>\n<code>tf.reduce_mean(tf.cast(tf.equal(predicted_classes, labels), tf.float32))</code><br>\nwith<br>\n<code>tf.metrics.accuracy(labels, predicted_classes)</code><br>\nit runs smoothly.</p>\n<p>Maybe something could throw a more useful exception that indicates how to solve the problem, when people try to use improper metrics?</p>", "body_text": "@pkubik's suggestion fixed the problem for me.\nAfter replacing my homemade metric\ntf.reduce_mean(tf.cast(tf.equal(predicted_classes, labels), tf.float32))\nwith\ntf.metrics.accuracy(labels, predicted_classes)\nit runs smoothly.\nMaybe something could throw a more useful exception that indicates how to solve the problem, when people try to use improper metrics?", "body": "@pkubik's suggestion fixed the problem for me.\r\n\r\nAfter replacing my homemade metric\r\n```tf.reduce_mean(tf.cast(tf.equal(predicted_classes, labels), tf.float32))```\r\nwith\r\n```tf.metrics.accuracy(labels, predicted_classes)```\r\nit runs smoothly.\r\n\r\nMaybe something could throw a more useful exception that indicates how to solve the problem, when people try to use improper metrics?"}