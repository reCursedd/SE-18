{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/296192584", "html_url": "https://github.com/tensorflow/tensorflow/issues/7407#issuecomment-296192584", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7407", "id": 296192584, "node_id": "MDEyOklzc3VlQ29tbWVudDI5NjE5MjU4NA==", "user": {"login": "raviqqe", "id": 9584358, "node_id": "MDQ6VXNlcjk1ODQzNTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/9584358?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raviqqe", "html_url": "https://github.com/raviqqe", "followers_url": "https://api.github.com/users/raviqqe/followers", "following_url": "https://api.github.com/users/raviqqe/following{/other_user}", "gists_url": "https://api.github.com/users/raviqqe/gists{/gist_id}", "starred_url": "https://api.github.com/users/raviqqe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raviqqe/subscriptions", "organizations_url": "https://api.github.com/users/raviqqe/orgs", "repos_url": "https://api.github.com/users/raviqqe/repos", "events_url": "https://api.github.com/users/raviqqe/events{/privacy}", "received_events_url": "https://api.github.com/users/raviqqe/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-21T13:37:06Z", "updated_at": "2017-04-21T13:37:06Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Current workaround is setting <code>eval_steps</code> parameter to a concrete integer value but not <code>None</code>.<br>\nI think it should catch every <code>OutOfRangeError</code> because developers usually want to use whole validation/test dataset to get the best distribution.</p>", "body_text": "Current workaround is setting eval_steps parameter to a concrete integer value but not None.\nI think it should catch every OutOfRangeError because developers usually want to use whole validation/test dataset to get the best distribution.", "body": "Current workaround is setting `eval_steps` parameter to a concrete integer value but not `None`.\r\nI think it should catch every `OutOfRangeError` because developers usually want to use whole validation/test dataset to get the best distribution. "}