{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16794", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16794/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16794/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16794/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16794", "id": 294670870, "node_id": "MDU6SXNzdWUyOTQ2NzA4NzA=", "number": 16794, "title": "Feature Request: Modification of lstm2d.horizontal_lstm implementation", "user": {"login": "selcouthlyBlue", "id": 13268675, "node_id": "MDQ6VXNlcjEzMjY4Njc1", "avatar_url": "https://avatars2.githubusercontent.com/u/13268675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/selcouthlyBlue", "html_url": "https://github.com/selcouthlyBlue", "followers_url": "https://api.github.com/users/selcouthlyBlue/followers", "following_url": "https://api.github.com/users/selcouthlyBlue/following{/other_user}", "gists_url": "https://api.github.com/users/selcouthlyBlue/gists{/gist_id}", "starred_url": "https://api.github.com/users/selcouthlyBlue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/selcouthlyBlue/subscriptions", "organizations_url": "https://api.github.com/users/selcouthlyBlue/orgs", "repos_url": "https://api.github.com/users/selcouthlyBlue/repos", "events_url": "https://api.github.com/users/selcouthlyBlue/events{/privacy}", "received_events_url": "https://api.github.com/users/selcouthlyBlue/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-02-06T08:28:55Z", "updated_at": "2018-02-07T01:20:30Z", "closed_at": "2018-02-06T16:59:19Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I noticed something in the documentation of <code>lstm2d.horizontal_lstm</code>. It says:</p>\n<blockquote>\n<p>Run an LSTM bidirectionally over all the rows of each image.</p>\n</blockquote>\n<p>Kinda looks like a bidirectional_lstm to me. I propose to change the implentation such that it will use bidirectional_lstm within the function replacing this:</p>\n<pre><code>with variable_scope.variable_scope(\"lr\"):\n  hidden_sequence_lr = lstm1d.ndlstm_base(sequence, num_filters_out // 2)\nwith variable_scope.variable_scope(\"rl\"):\n  hidden_sequence_rl = (lstm1d.ndlstm_base(\n      sequence, num_filters_out - num_filters_out // 2, reverse=1))\noutput_sequence = array_ops.concat([hidden_sequence_lr, hidden_sequence_rl],\n                                       2)\n</code></pre>\n<p>With this:</p>\n<pre><code>cell_fw = rnn_cell.BasicLSTMCell(num_filters_out // 2)\ncell_bw = rnn_cell.BasicLSTMCell(num_filters_out // 2)\noutput_sequence = rnn.bidirectional_dynamic_rnn(cell_fw, cell_bw, sequence, time_major=True, \n                                                                                 dtype=sequence.dtype)\n</code></pre>", "body_text": "I noticed something in the documentation of lstm2d.horizontal_lstm. It says:\n\nRun an LSTM bidirectionally over all the rows of each image.\n\nKinda looks like a bidirectional_lstm to me. I propose to change the implentation such that it will use bidirectional_lstm within the function replacing this:\nwith variable_scope.variable_scope(\"lr\"):\n  hidden_sequence_lr = lstm1d.ndlstm_base(sequence, num_filters_out // 2)\nwith variable_scope.variable_scope(\"rl\"):\n  hidden_sequence_rl = (lstm1d.ndlstm_base(\n      sequence, num_filters_out - num_filters_out // 2, reverse=1))\noutput_sequence = array_ops.concat([hidden_sequence_lr, hidden_sequence_rl],\n                                       2)\n\nWith this:\ncell_fw = rnn_cell.BasicLSTMCell(num_filters_out // 2)\ncell_bw = rnn_cell.BasicLSTMCell(num_filters_out // 2)\noutput_sequence = rnn.bidirectional_dynamic_rnn(cell_fw, cell_bw, sequence, time_major=True, \n                                                                                 dtype=sequence.dtype)", "body": "I noticed something in the documentation of `lstm2d.horizontal_lstm`. It says:\r\n\r\n> Run an LSTM bidirectionally over all the rows of each image.\r\n\r\nKinda looks like a bidirectional_lstm to me. I propose to change the implentation such that it will use bidirectional_lstm within the function replacing this:\r\n\r\n```\r\nwith variable_scope.variable_scope(\"lr\"):\r\n  hidden_sequence_lr = lstm1d.ndlstm_base(sequence, num_filters_out // 2)\r\nwith variable_scope.variable_scope(\"rl\"):\r\n  hidden_sequence_rl = (lstm1d.ndlstm_base(\r\n      sequence, num_filters_out - num_filters_out // 2, reverse=1))\r\noutput_sequence = array_ops.concat([hidden_sequence_lr, hidden_sequence_rl],\r\n                                       2)\r\n```\r\n\r\nWith this:\r\n\r\n```\r\ncell_fw = rnn_cell.BasicLSTMCell(num_filters_out // 2)\r\ncell_bw = rnn_cell.BasicLSTMCell(num_filters_out // 2)\r\noutput_sequence = rnn.bidirectional_dynamic_rnn(cell_fw, cell_bw, sequence, time_major=True, \r\n                                                                                 dtype=sequence.dtype)\r\n```\r\n  "}