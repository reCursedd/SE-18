{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/425865589", "html_url": "https://github.com/tensorflow/tensorflow/issues/22092#issuecomment-425865589", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22092", "id": 425865589, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTg2NTU4OQ==", "user": {"login": "SumNeuron", "id": 22868585, "node_id": "MDQ6VXNlcjIyODY4NTg1", "avatar_url": "https://avatars3.githubusercontent.com/u/22868585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SumNeuron", "html_url": "https://github.com/SumNeuron", "followers_url": "https://api.github.com/users/SumNeuron/followers", "following_url": "https://api.github.com/users/SumNeuron/following{/other_user}", "gists_url": "https://api.github.com/users/SumNeuron/gists{/gist_id}", "starred_url": "https://api.github.com/users/SumNeuron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SumNeuron/subscriptions", "organizations_url": "https://api.github.com/users/SumNeuron/orgs", "repos_url": "https://api.github.com/users/SumNeuron/repos", "events_url": "https://api.github.com/users/SumNeuron/events{/privacy}", "received_events_url": "https://api.github.com/users/SumNeuron/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-01T10:50:10Z", "updated_at": "2018-10-01T10:50:10Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=577277\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/martinwicke\">@martinwicke</a> while I understand that TFRecords are sort of an advanced topic, how to use them should be transparent as their use alone can accelerate training ~30%</p>\n<p>Anyway, the main thing is partly dealing with the inconsistency / duplicate code needed for read/write  to TF Records.</p>\n<p>I find it currently incredibly infuriating the number of hoops that have to be jumped through to use TFRecords with a custom estimator because certain operations can not be done inside <code>dataset.map</code> (at least not in the traditional mode, perhaps with eager...) e.g. unwrapping the forced requirements of lists and decoding binary strings</p>\n<p>So I made this <a href=\"https://gitlab.com/SumNeuron/fio\" rel=\"nofollow\">concept</a> which if you clone,  run a jupyter notebook in <code>/jupyter</code> and open the file <code>Demo</code>  you can see an example that requires a single interface to write to and read from a TF Record. However to truly get the values back, one needs to wait until after sessions.run otherwise you get an error...</p>", "body_text": "@martinwicke while I understand that TFRecords are sort of an advanced topic, how to use them should be transparent as their use alone can accelerate training ~30%\nAnyway, the main thing is partly dealing with the inconsistency / duplicate code needed for read/write  to TF Records.\nI find it currently incredibly infuriating the number of hoops that have to be jumped through to use TFRecords with a custom estimator because certain operations can not be done inside dataset.map (at least not in the traditional mode, perhaps with eager...) e.g. unwrapping the forced requirements of lists and decoding binary strings\nSo I made this concept which if you clone,  run a jupyter notebook in /jupyter and open the file Demo  you can see an example that requires a single interface to write to and read from a TF Record. However to truly get the values back, one needs to wait until after sessions.run otherwise you get an error...", "body": "@martinwicke while I understand that TFRecords are sort of an advanced topic, how to use them should be transparent as their use alone can accelerate training ~30%\r\n\r\nAnyway, the main thing is partly dealing with the inconsistency / duplicate code needed for read/write  to TF Records. \r\n\r\nI find it currently incredibly infuriating the number of hoops that have to be jumped through to use TFRecords with a custom estimator because certain operations can not be done inside `dataset.map` (at least not in the traditional mode, perhaps with eager...) e.g. unwrapping the forced requirements of lists and decoding binary strings\r\n\r\nSo I made this [concept](https://gitlab.com/SumNeuron/fio) which if you clone,  run a jupyter notebook in `/jupyter` and open the file `Demo`  you can see an example that requires a single interface to write to and read from a TF Record. However to truly get the values back, one needs to wait until after sessions.run otherwise you get an error...\r\n\r\n\r\n"}