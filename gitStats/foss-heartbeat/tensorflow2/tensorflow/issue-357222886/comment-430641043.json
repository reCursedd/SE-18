{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/430641043", "html_url": "https://github.com/tensorflow/tensorflow/issues/22092#issuecomment-430641043", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22092", "id": 430641043, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDY0MTA0Mw==", "user": {"login": "SumNeuron", "id": 22868585, "node_id": "MDQ6VXNlcjIyODY4NTg1", "avatar_url": "https://avatars3.githubusercontent.com/u/22868585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SumNeuron", "html_url": "https://github.com/SumNeuron", "followers_url": "https://api.github.com/users/SumNeuron/followers", "following_url": "https://api.github.com/users/SumNeuron/following{/other_user}", "gists_url": "https://api.github.com/users/SumNeuron/gists{/gist_id}", "starred_url": "https://api.github.com/users/SumNeuron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SumNeuron/subscriptions", "organizations_url": "https://api.github.com/users/SumNeuron/orgs", "repos_url": "https://api.github.com/users/SumNeuron/repos", "events_url": "https://api.github.com/users/SumNeuron/events{/privacy}", "received_events_url": "https://api.github.com/users/SumNeuron/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-17T14:02:51Z", "updated_at": "2018-10-17T14:02:51Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=577277\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/martinwicke\">@martinwicke</a>, <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=192142\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mrry\">@mrry</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1072079\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jsimsa\">@jsimsa</a>  I provided a concept (see above), which involves defining a singular schema for the data. This works for both example and sequence example, because to convert to a sequence example, one must only specify what features are the sequence features.</p>\n<p>Nonetheless, it is clear that the interface to TF Records is clunky. Consider a <code>serving_input_receiver_fn</code> which requires, once again, use of the <code>tf.FixedLenFeature</code> / <code>tf.VarLenFeature</code>.  All of this could be circumvented with the singular data schema object that could serve to read / write to tf records as well as parse those read records.</p>\n<p>Then users, in addition to a config json, could have a schema json which makes it clear what the expected information is for a singular example.</p>", "body_text": "@martinwicke, @mrry @jsimsa  I provided a concept (see above), which involves defining a singular schema for the data. This works for both example and sequence example, because to convert to a sequence example, one must only specify what features are the sequence features.\nNonetheless, it is clear that the interface to TF Records is clunky. Consider a serving_input_receiver_fn which requires, once again, use of the tf.FixedLenFeature / tf.VarLenFeature.  All of this could be circumvented with the singular data schema object that could serve to read / write to tf records as well as parse those read records.\nThen users, in addition to a config json, could have a schema json which makes it clear what the expected information is for a singular example.", "body": "@martinwicke, @mrry @jsimsa  I provided a concept (see above), which involves defining a singular schema for the data. This works for both example and sequence example, because to convert to a sequence example, one must only specify what features are the sequence features.\r\n\r\nNonetheless, it is clear that the interface to TF Records is clunky. Consider a `serving_input_receiver_fn` which requires, once again, use of the `tf.FixedLenFeature` / `tf.VarLenFeature`.  All of this could be circumvented with the singular data schema object that could serve to read / write to tf records as well as parse those read records. \r\n\r\nThen users, in addition to a config json, could have a schema json which makes it clear what the expected information is for a singular example. "}