{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/64987953", "pull_request_review_id": null, "id": 64987953, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0OTg3OTUz", "diff_hunk": "@@ -0,0 +1,76 @@\n+#  Copyright 2015-present The Scikit Flow Authors. All Rights Reserved.\n+#\n+#  Licensed under the Apache License, Version 2.0 (the \"License\");\n+#  you may not use this file except in compliance with the License.\n+#  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+#  Unless required by applicable law or agreed to in writing, software\n+#  distributed under the License is distributed on an \"AS IS\" BASIS,\n+#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+#  See the License for the specific language governing permissions and\n+#  limitations under the License.\n+\n+\"\"\"\n+This example builds rnn network for mnist data.\n+Borrowed structure from here: https://github.com/aymericdamien/TensorFlow-Examples/blob/master/examples/3%20-%20Neural%20Networks/recurrent_network.py\n+\"\"\"\n+\n+from __future__ import absolute_import\n+from __future__ import division\n+from __future__ import print_function\n+\n+from sklearn import metrics, preprocessing\n+\n+import tensorflow as tf\n+from tensorflow.contrib import learn\n+from tensorflow.examples.tutorials.mnist import input_data\n+\n+# Parameters\n+learning_rate = 0.1\n+training_steps = 3000\n+batch_size = 128\n+\n+# Network Parameters\n+n_input = 28  # MNIST data input (img shape: 28*28)\n+n_steps = 28  # timesteps\n+n_hidden = 128  # hidden layer num of features\n+n_classes = 10  # MNIST total classes (0-9 digits)\n+\n+### Download and load MNIST data.\n+mnist = input_data.read_data_sets(\"/tmp/data/\")\n+X_train = mnist.train.images\n+y_train = mnist.train.labels\n+X_test = mnist.test.images\n+y_test = mnist.test.labels\n+\n+# It's useful to scale to ensure Stochastic Gradient Descent will do the right thing\n+scaler = preprocessing.StandardScaler()\n+X_train = scaler.fit_transform(X_train)\n+X_test = scaler.fit_transform(X_test)\n+\n+\n+def rnn_model(_X, y):", "path": "tensorflow/examples/skflow/mnist_rnn.py", "position": null, "original_position": 54, "commit_id": "f78e6b8755469ddca8166865db8b7ab86925aae9", "original_commit_id": "3e49c5bb41b97a92f6f7569a0ce5638656be0af9", "user": {"login": "ilblackdragon", "id": 175486, "node_id": "MDQ6VXNlcjE3NTQ4Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/175486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilblackdragon", "html_url": "https://github.com/ilblackdragon", "followers_url": "https://api.github.com/users/ilblackdragon/followers", "following_url": "https://api.github.com/users/ilblackdragon/following{/other_user}", "gists_url": "https://api.github.com/users/ilblackdragon/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilblackdragon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilblackdragon/subscriptions", "organizations_url": "https://api.github.com/users/ilblackdragon/orgs", "repos_url": "https://api.github.com/users/ilblackdragon/repos", "events_url": "https://api.github.com/users/ilblackdragon/events{/privacy}", "received_events_url": "https://api.github.com/users/ilblackdragon/received_events", "type": "User", "site_admin": false}, "body": "why _X? you can call it `x` if linter complains.\n", "created_at": "2016-05-28T11:42:01Z", "updated_at": "2016-06-01T22:40:52Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/2548#discussion_r64987953", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/2548", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/64987953"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/2548#discussion_r64987953"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/2548"}}, "body_html": "<p>why _X? you can call it <code>x</code> if linter complains.</p>", "body_text": "why _X? you can call it x if linter complains."}