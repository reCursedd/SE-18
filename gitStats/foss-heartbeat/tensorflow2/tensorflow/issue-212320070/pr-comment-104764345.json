{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/104764345", "pull_request_review_id": 25615491, "id": 104764345, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNDc2NDM0NQ==", "diff_hunk": "@@ -0,0 +1,77 @@\n+/* Copyright 2017 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+\n+// Classes to maintain a static registry of memory allocators\n+#ifndef TENSORFLOW_CORE_FRAMEWORK_ALLOCATOR_REGISTRY_H_\n+#define TENSORFLOW_CORE_FRAMEWORK_ALLOCATOR_REGISTRY_H_\n+\n+#include <vector>\n+\n+#include \"tensorflow/core/framework/allocator.h\"\n+\n+namespace tensorflow {\n+\n+// A global AllocatorRegistry is used to hold all allocators.\n+class AllocatorRegistry {\n+ public:\n+\n+  // Add an allocator to the registry.\n+  void Register(const string& name, uint8_t priority,", "path": "tensorflow/core/framework/allocator_registry.h", "position": null, "original_position": 31, "commit_id": "4812be7bb14cb4e72df3a8930cb2197ca271df75", "original_commit_id": "db6bcc7e8cd807ea292b01001748ba104c6206c1", "user": {"login": "jbobba", "id": 21375855, "node_id": "MDQ6VXNlcjIxMzc1ODU1", "avatar_url": "https://avatars1.githubusercontent.com/u/21375855?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbobba", "html_url": "https://github.com/jbobba", "followers_url": "https://api.github.com/users/jbobba/followers", "following_url": "https://api.github.com/users/jbobba/following{/other_user}", "gists_url": "https://api.github.com/users/jbobba/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbobba/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbobba/subscriptions", "organizations_url": "https://api.github.com/users/jbobba/orgs", "repos_url": "https://api.github.com/users/jbobba/repos", "events_url": "https://api.github.com/users/jbobba/events{/privacy}", "received_events_url": "https://api.github.com/users/jbobba/received_events", "type": "User", "site_admin": false}, "body": "Wanted to make sure we get non-negative priorities. But I can change it to int and insert a dynamic check.", "created_at": "2017-03-07T20:00:04Z", "updated_at": "2017-03-10T23:46:31Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/8153#discussion_r104764345", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/8153", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/104764345"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/8153#discussion_r104764345"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/8153"}}, "body_html": "<p>Wanted to make sure we get non-negative priorities. But I can change it to int and insert a dynamic check.</p>", "body_text": "Wanted to make sure we get non-negative priorities. But I can change it to int and insert a dynamic check.", "in_reply_to_id": 104750954}