{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/231168915", "html_url": "https://github.com/tensorflow/tensorflow/pull/3031#issuecomment-231168915", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3031", "id": 231168915, "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTE2ODkxNQ==", "user": {"login": "maniteja123", "id": 6291963, "node_id": "MDQ6VXNlcjYyOTE5NjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/6291963?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maniteja123", "html_url": "https://github.com/maniteja123", "followers_url": "https://api.github.com/users/maniteja123/followers", "following_url": "https://api.github.com/users/maniteja123/following{/other_user}", "gists_url": "https://api.github.com/users/maniteja123/gists{/gist_id}", "starred_url": "https://api.github.com/users/maniteja123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maniteja123/subscriptions", "organizations_url": "https://api.github.com/users/maniteja123/orgs", "repos_url": "https://api.github.com/users/maniteja123/repos", "events_url": "https://api.github.com/users/maniteja123/events{/privacy}", "received_events_url": "https://api.github.com/users/maniteja123/received_events", "type": "User", "site_admin": false}, "created_at": "2016-07-07T18:38:44Z", "updated_at": "2016-07-07T18:39:05Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Sorry if I am understanding it wrong, but <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=16907534\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/rmlarsen\">@rmlarsen</a> has mentioned that probably <code>tf.gather</code> can be used to reorder the columns in terms of <code>perm</code> but AFAIU it seemed that <code>tf.gather</code> can only reorder only along axis=0. That was the reason I asked for the help.</p>\n<p>Thanks for suggesting the approach. Sorry but I am unable to understand it correctly here.</p>\n<blockquote>\n<p>We first unpack/split indices into [NNZ, 1, ..., 1]</p>\n</blockquote>\n<p>Indices has shape <code>[NNZ, ndim]</code>. So how does it unpack into <code>[NNZ] + [1]*ndim</code> ? Unpack reduces the rank by at most 1 right. Could you clarify it here please ? Thanks a lot.</p>", "body_text": "Sorry if I am understanding it wrong, but @rmlarsen has mentioned that probably tf.gather can be used to reorder the columns in terms of perm but AFAIU it seemed that tf.gather can only reorder only along axis=0. That was the reason I asked for the help.\nThanks for suggesting the approach. Sorry but I am unable to understand it correctly here.\n\nWe first unpack/split indices into [NNZ, 1, ..., 1]\n\nIndices has shape [NNZ, ndim]. So how does it unpack into [NNZ] + [1]*ndim ? Unpack reduces the rank by at most 1 right. Could you clarify it here please ? Thanks a lot.", "body": "Sorry if I am understanding it wrong, but @rmlarsen has mentioned that probably `tf.gather` can be used to reorder the columns in terms of `perm` but AFAIU it seemed that `tf.gather` can only reorder only along axis=0. That was the reason I asked for the help.\n\nThanks for suggesting the approach. Sorry but I am unable to understand it correctly here.\n\n> We first unpack/split indices into [NNZ, 1, ..., 1]\n\nIndices has shape `[NNZ, ndim]`. So how does it unpack into `[NNZ] + [1]*ndim` ? Unpack reduces the rank by at most 1 right. Could you clarify it here please ? Thanks a lot.\n"}