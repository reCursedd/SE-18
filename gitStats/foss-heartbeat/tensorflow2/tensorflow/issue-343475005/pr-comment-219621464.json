{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/219621464", "pull_request_review_id": 157849794, "id": 219621464, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTYyMTQ2NA==", "diff_hunk": "@@ -3392,3 +3392,173 @@ def call(self, inputs, state):\n \n     new_state = rnn_cell_impl.LSTMStateTuple(new_c, new_h)\n     return new_h, new_state\n+\n+_BIAS_VARIABLE_NAME = \"bias\"\n+_WEIGHTS_VARIABLE_NAME = \"kernel\"\n+\n+class MLSTMCell(rnn_cell_impl.LayerRNNCell):\n+  \"\"\"Mulitiplicative LSTM Cell (MLSTM)\n+\n+  Implementation of a Mulitiplicative LSTM based on:\n+  https://arxiv.org/pdf/1609.07959.pdf.\n+  Ben Krause, Liang Lu, Iain Murray, Steve Renals.\n+  Multiplicative LSTM for sequence modelling\n+\n+  There is also an option to implement weight normalization within the cell\n+  based on:\n+  https://arxiv.org/abs/1602.07868\n+  Tim Salimans, Diederik P. Kingma.\n+  Weight Normalization: A Simple Reparameterization to Accelerate\n+  Training of Deep Neural Networks\n+  \"\"\"\n+\n+  def __init__(self,\n+               num_units,\n+               state_is_tuple=True,\n+               kernel_initializer=None,\n+               bias_initializer=None,\n+               weight_normalization=True,\n+               reuse=None,\n+               name=None):\n+\n+    \"\"\"Initialize the Mulitiplicative LSTM (MLSTM) cell.\n+\n+    Args:\n+      num_units: int, The number of units in the MLSTM cell.\n+      state_is_tuple: If True, accepted and returned states are 2-tuples of\n+        the `c_state` and `h_state`.  If False, they are concatenated\n+        along the column axis.  The latter behavior will soon be deprecated.\n+      reuse: (optional) Python boolean describing whether to reuse variables\n+        in an existing scope.  If not `True`, and the existing scope already has\n+        the given variables, an error is raised.\n+      name: String, the name of the layer. Layers with the same name will\n+        share weights, but to avoid mistakes we require reuse=True in such\n+        cases.\n+      kernel_initializer: (optional) The initializer to use for the weights\n+      bias_initializer: (optional) The initializer to use for the bias.\n+      weight_normalization: When set to True, weight normalization is applied to\n+      the model weights (but not the biases). Default: True\n+    \"\"\"\n+    super(MLSTMCell, self).__init__(_reuse=reuse, name=name)\n+    if not state_is_tuple:\n+      logging.warn(\"%s: Using a concatenated state is slower and will soon be \"\n+                   \"deprecated.  Use state_is_tuple=True.\", self)", "path": "tensorflow/contrib/rnn/python/ops/rnn_cell.py", "position": 63, "original_position": 54, "commit_id": "653f1c0db4e493c9f5b052a868fc30a1ac34aad6", "original_commit_id": "481508ddff3303412b1c2308992d1aa9f2cff7a4", "user": {"login": "qlzh727", "id": 5118881, "node_id": "MDQ6VXNlcjUxMTg4ODE=", "avatar_url": "https://avatars3.githubusercontent.com/u/5118881?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qlzh727", "html_url": "https://github.com/qlzh727", "followers_url": "https://api.github.com/users/qlzh727/followers", "following_url": "https://api.github.com/users/qlzh727/following{/other_user}", "gists_url": "https://api.github.com/users/qlzh727/gists{/gist_id}", "starred_url": "https://api.github.com/users/qlzh727/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qlzh727/subscriptions", "organizations_url": "https://api.github.com/users/qlzh727/orgs", "repos_url": "https://api.github.com/users/qlzh727/repos", "events_url": "https://api.github.com/users/qlzh727/events{/privacy}", "received_events_url": "https://api.github.com/users/qlzh727/received_events", "type": "User", "site_admin": false}, "body": "Since this is a newly added class, can we just force it to use tuple as state? @ebrevdo for comments.", "created_at": "2018-09-21T20:41:03Z", "updated_at": "2018-09-30T20:10:50Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/21039#discussion_r219621464", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21039", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/219621464"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/21039#discussion_r219621464"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21039"}}, "body_html": "<p>Since this is a newly added class, can we just force it to use tuple as state? <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1794715\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ebrevdo\">@ebrevdo</a> for comments.</p>", "body_text": "Since this is a newly added class, can we just force it to use tuple as state? @ebrevdo for comments."}