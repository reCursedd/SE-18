{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/82960020", "pull_request_review_id": 3829680, "id": 82960020, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgyOTYwMDIw", "diff_hunk": "@@ -138,21 +132,31 @@ def res_net(x, y, activation=tf.nn.relu):\n   net_shape = net.get_shape().as_list()\n   net = tf.reshape(net, [-1, net_shape[1] * net_shape[2] * net_shape[3]])\n \n-  return learn.models.logistic_regression(net, y)\n+  target = tf.one_hot(y, depth=10, dtype=tf.float32)\n+  return learn.models.logistic_regression(net, target)\n+\n+def res_net_model(x, y):\n+  prediction, loss = res_net(x, y)\n+  train_op = tf.contrib.layers.optimize_loss(\n+      loss, tf.contrib.framework.get_global_step(),\n+      optimizer='Adagrad', learning_rate=0.001)\n+  return {'class': tf.argmax(prediction, 1), 'prob': prediction}, loss, train_op\n \n # Download and load MNIST data.\n-mnist = input_data.read_data_sets('MNIST_data')\n+mnist = learn.datasets.load_dataset('mnist')\n+\n+# Create a new resnet classifier.\n+classifier = learn.Estimator(model_fn=res_net_model)\n \n-# Restore model if graph is saved into a folder.\n-if os.path.exists('models/resnet/graph.pbtxt'):\n-  classifier = learn.TensorFlowEstimator.restore('models/resnet/')\n+tf.logging.set_verbosity(tf.logging.INFO)  # Show training logs. (avoid sirence)\n \n-while True:\n-  # Train model and save summaries into logdir.\n-  classifier.fit(\n-      mnist.train.images, mnist.train.labels, logdir='models/resnet/')\n+# Train model and save summaries into logdir.\n+classifier.fit(\n+    mnist.train.images, mnist.train.labels, batch_size=100, steps=1000)\n \n-  # Calculate accuracy.\n-  score = metrics.accuracy_score(\n-      mnist.test.labels, classifier.predict(mnist.test.images, batch_size=64))\n-  print('Accuracy: {0:f}'.format(score))\n+# Calculate accuracy.", "path": "tensorflow/examples/learn/resnet.py", "position": null, "original_position": 130, "commit_id": "7f13c3072bc1b896d222e135456f62f9b1cf7da9", "original_commit_id": "c17bbfe3da5b56759be57c304ad8e146fa0a317c", "user": {"login": "tyfkda", "id": 7347125, "node_id": "MDQ6VXNlcjczNDcxMjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/7347125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tyfkda", "html_url": "https://github.com/tyfkda", "followers_url": "https://api.github.com/users/tyfkda/followers", "following_url": "https://api.github.com/users/tyfkda/following{/other_user}", "gists_url": "https://api.github.com/users/tyfkda/gists{/gist_id}", "starred_url": "https://api.github.com/users/tyfkda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tyfkda/subscriptions", "organizations_url": "https://api.github.com/users/tyfkda/orgs", "repos_url": "https://api.github.com/users/tyfkda/repos", "events_url": "https://api.github.com/users/tyfkda/events{/privacy}", "received_events_url": "https://api.github.com/users/tyfkda/received_events", "type": "User", "site_admin": false}, "body": "I have updated the code to use `classifer.evaluate`.\n", "created_at": "2016-10-12T08:44:09Z", "updated_at": "2016-10-12T08:44:09Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/4684#discussion_r82960020", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/4684", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/82960020"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/4684#discussion_r82960020"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/4684"}}, "body_html": "<p>I have updated the code to use <code>classifer.evaluate</code>.</p>", "body_text": "I have updated the code to use classifer.evaluate.", "in_reply_to_id": 82889955}