{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/386841037", "html_url": "https://github.com/tensorflow/tensorflow/issues/18660#issuecomment-386841037", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18660", "id": 386841037, "node_id": "MDEyOklzc3VlQ29tbWVudDM4Njg0MTAzNw==", "user": {"login": "facaiy", "id": 1112263, "node_id": "MDQ6VXNlcjExMTIyNjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1112263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facaiy", "html_url": "https://github.com/facaiy", "followers_url": "https://api.github.com/users/facaiy/followers", "following_url": "https://api.github.com/users/facaiy/following{/other_user}", "gists_url": "https://api.github.com/users/facaiy/gists{/gist_id}", "starred_url": "https://api.github.com/users/facaiy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facaiy/subscriptions", "organizations_url": "https://api.github.com/users/facaiy/orgs", "repos_url": "https://api.github.com/users/facaiy/repos", "events_url": "https://api.github.com/users/facaiy/events{/privacy}", "received_events_url": "https://api.github.com/users/facaiy/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-05T23:01:49Z", "updated_at": "2018-05-05T23:01:49Z", "author_association": "MEMBER", "body_html": "<p>I run the test on Mac (tf 1.8).  A similar exception is raised, which seems related with clone behavior of Lambda: the function copied jumps out the original code scope.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">from</span> tensorflow.python.keras <span class=\"pl-k\">import</span> Input, Model\n<span class=\"pl-k\">from</span> tensorflow.python.keras.layers <span class=\"pl-k\">import</span> Dense, Lambda\n\nx <span class=\"pl-k\">=</span> Input(<span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">32</span>,))\ny <span class=\"pl-k\">=</span> Dense(<span class=\"pl-c1\">10</span>)(x)\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">func</span>(<span class=\"pl-smi\">x</span>):\n    <span class=\"pl-k\">return</span> tf.exp(x)\n\ny <span class=\"pl-k\">=</span> Lambda(func)(y)\n\nvae <span class=\"pl-k\">=</span> Model(x, y)\nvae.compile(<span class=\"pl-v\">optimizer</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>adam<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">loss</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>categorical_crossentropy<span class=\"pl-pds\">'</span></span>)\nvae.summary()\n\nestimator_vae <span class=\"pl-k\">=</span> tf.keras.estimator.model_to_estimator(<span class=\"pl-v\">keras_model</span><span class=\"pl-k\">=</span>vae)</pre></div>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">~</span><span class=\"pl-k\">/</span>Downloads \u276f\u276f\u276f python test.py\n_________________________________________________________________\nLayer (<span class=\"pl-c1\">type</span>)                 Output Shape              Param <span class=\"pl-c\"><span class=\"pl-c\">#</span></span>\n<span class=\"pl-k\">================================================================</span><span class=\"pl-k\">=</span>\ninput_1 (InputLayer)         (<span class=\"pl-c1\">None</span>, <span class=\"pl-c1\">32</span>)                <span class=\"pl-c1\">0</span>\n_________________________________________________________________\ndense_1 (Dense)              (<span class=\"pl-c1\">None</span>, <span class=\"pl-c1\">10</span>)                <span class=\"pl-c1\">330</span>\n_________________________________________________________________\nlambda_1 (Lambda)            (<span class=\"pl-c1\">None</span>, <span class=\"pl-c1\">10</span>)                <span class=\"pl-c1\">0</span>\n<span class=\"pl-k\">================================================================</span><span class=\"pl-k\">=</span>\nTotal params: <span class=\"pl-c1\">330</span>\nTrainable params: <span class=\"pl-c1\">330</span>\nNon<span class=\"pl-k\">-</span>trainable params: <span class=\"pl-c1\">0</span>\n_________________________________________________________________\n<span class=\"pl-c1\">WARNING</span>:tensorflow:Using temporary folder <span class=\"pl-k\">as</span> model directory: <span class=\"pl-k\">/</span>var<span class=\"pl-k\">/</span>folders<span class=\"pl-k\">/</span><span class=\"pl-ii\">6n</span><span class=\"pl-k\">/</span><span class=\"pl-ii\">7463w47j649757l3cyct9qp00000gn</span><span class=\"pl-k\">/</span>T<span class=\"pl-k\">/</span>tmptdyvm5v3\n<span class=\"pl-c1\">2018</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">0<span class=\"pl-ii\">5</span></span><span class=\"pl-k\">-</span><span class=\"pl-c1\">0<span class=\"pl-ii\">6</span></span> <span class=\"pl-c1\">0<span class=\"pl-ii\">6</span></span>:<span class=\"pl-c1\">56</span>:<span class=\"pl-c1\">08.030004</span>: I tensorflow<span class=\"pl-k\">/</span>core<span class=\"pl-k\">/</span>platform<span class=\"pl-k\">/</span>cpu_feature_guard.cc:<span class=\"pl-c1\">140</span>] Your <span class=\"pl-c1\">CPU</span> supports instructions that this TensorFlow binary was <span class=\"pl-k\">not</span> compiled to use: <span class=\"pl-c1\">AVX2</span> <span class=\"pl-c1\">FMA</span>\nTraceback (most recent call last):\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>test.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">19</span>, <span class=\"pl-k\">in</span> <span class=\"pl-k\">&lt;</span>module<span class=\"pl-k\">&gt;</span>\n    estimator_vae <span class=\"pl-k\">=</span> tf.keras.estimator.model_to_estimator(<span class=\"pl-v\">keras_model</span><span class=\"pl-k\">=</span>vae)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/Users/facai/Library/anaconda3/lib/python3.5/site-packages/tensorflow/python/keras/_impl/keras/estimator.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">478</span>, <span class=\"pl-k\">in</span> model_to_estimator\n    keras_weights)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/Users/facai/Library/anaconda3/lib/python3.5/site-packages/tensorflow/python/keras/_impl/keras/estimator.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">395</span>, <span class=\"pl-k\">in</span> _save_first_checkpoint\n    custom_objects)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/Users/facai/Library/anaconda3/lib/python3.5/site-packages/tensorflow/python/keras/_impl/keras/estimator.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">272</span>, <span class=\"pl-k\">in</span> _clone_and_build_model\n    model <span class=\"pl-k\">=</span> models.clone_model(keras_model, <span class=\"pl-v\">input_tensors</span><span class=\"pl-k\">=</span>input_tensors)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/Users/facai/Library/anaconda3/lib/python3.5/site-packages/tensorflow/python/keras/_impl/keras/models.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">263</span>, <span class=\"pl-k\">in</span> clone_model\n    <span class=\"pl-k\">return</span> _clone_functional_model(model, <span class=\"pl-v\">input_tensors</span><span class=\"pl-k\">=</span>input_tensors)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/Users/facai/Library/anaconda3/lib/python3.5/site-packages/tensorflow/python/keras/_impl/keras/models.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">156</span>, <span class=\"pl-k\">in</span> _clone_functional_model\n    <span class=\"pl-k\">**</span>kwargs))\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/Users/facai/Library/anaconda3/lib/python3.5/site-packages/tensorflow/python/keras/_impl/keras/engine/base_layer.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">314</span>, <span class=\"pl-k\">in</span> <span class=\"pl-c1\">__call__</span>\n    output <span class=\"pl-k\">=</span> <span class=\"pl-c1\">super</span>(Layer, <span class=\"pl-c1\">self</span>).<span class=\"pl-c1\">__call__</span>(inputs, <span class=\"pl-k\">*</span>args, <span class=\"pl-k\">**</span>kwargs)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/Users/facai/Library/anaconda3/lib/python3.5/site-packages/tensorflow/python/layers/base.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">716</span>, <span class=\"pl-k\">in</span> <span class=\"pl-c1\">__call__</span>\n    outputs <span class=\"pl-k\">=</span> <span class=\"pl-c1\">self</span>.call(inputs, <span class=\"pl-k\">*</span>args, <span class=\"pl-k\">**</span>kwargs)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/Users/facai/Library/anaconda3/lib/python3.5/site-packages/tensorflow/python/keras/_impl/keras/layers/core.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">642</span>, <span class=\"pl-k\">in</span> call\n    <span class=\"pl-k\">return</span> <span class=\"pl-c1\">self</span>.function(inputs, <span class=\"pl-k\">**</span>arguments)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>test.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">11</span>, <span class=\"pl-k\">in</span> func\n    <span class=\"pl-k\">return</span> tf.exp(x)\n<span class=\"pl-c1\">NameError</span>: name <span class=\"pl-s\"><span class=\"pl-pds\">'</span>tf<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">is</span> <span class=\"pl-k\">not</span> defined</pre></div>", "body_text": "I run the test on Mac (tf 1.8).  A similar exception is raised, which seems related with clone behavior of Lambda: the function copied jumps out the original code scope.\nimport tensorflow as tf\nfrom tensorflow.python.keras import Input, Model\nfrom tensorflow.python.keras.layers import Dense, Lambda\n\nx = Input(shape=(32,))\ny = Dense(10)(x)\n\ndef func(x):\n    return tf.exp(x)\n\ny = Lambda(func)(y)\n\nvae = Model(x, y)\nvae.compile(optimizer='adam', loss='categorical_crossentropy')\nvae.summary()\n\nestimator_vae = tf.keras.estimator.model_to_estimator(keras_model=vae)\n~/Downloads \u276f\u276f\u276f python test.py\n_________________________________________________________________\nLayer (type)                 Output Shape              Param #\n=================================================================\ninput_1 (InputLayer)         (None, 32)                0\n_________________________________________________________________\ndense_1 (Dense)              (None, 10)                330\n_________________________________________________________________\nlambda_1 (Lambda)            (None, 10)                0\n=================================================================\nTotal params: 330\nTrainable params: 330\nNon-trainable params: 0\n_________________________________________________________________\nWARNING:tensorflow:Using temporary folder as model directory: /var/folders/6n/7463w47j649757l3cyct9qp00000gn/T/tmptdyvm5v3\n2018-05-06 06:56:08.030004: I tensorflow/core/platform/cpu_feature_guard.cc:140] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA\nTraceback (most recent call last):\n  File \"test.py\", line 19, in <module>\n    estimator_vae = tf.keras.estimator.model_to_estimator(keras_model=vae)\n  File \"/Users/facai/Library/anaconda3/lib/python3.5/site-packages/tensorflow/python/keras/_impl/keras/estimator.py\", line 478, in model_to_estimator\n    keras_weights)\n  File \"/Users/facai/Library/anaconda3/lib/python3.5/site-packages/tensorflow/python/keras/_impl/keras/estimator.py\", line 395, in _save_first_checkpoint\n    custom_objects)\n  File \"/Users/facai/Library/anaconda3/lib/python3.5/site-packages/tensorflow/python/keras/_impl/keras/estimator.py\", line 272, in _clone_and_build_model\n    model = models.clone_model(keras_model, input_tensors=input_tensors)\n  File \"/Users/facai/Library/anaconda3/lib/python3.5/site-packages/tensorflow/python/keras/_impl/keras/models.py\", line 263, in clone_model\n    return _clone_functional_model(model, input_tensors=input_tensors)\n  File \"/Users/facai/Library/anaconda3/lib/python3.5/site-packages/tensorflow/python/keras/_impl/keras/models.py\", line 156, in _clone_functional_model\n    **kwargs))\n  File \"/Users/facai/Library/anaconda3/lib/python3.5/site-packages/tensorflow/python/keras/_impl/keras/engine/base_layer.py\", line 314, in __call__\n    output = super(Layer, self).__call__(inputs, *args, **kwargs)\n  File \"/Users/facai/Library/anaconda3/lib/python3.5/site-packages/tensorflow/python/layers/base.py\", line 716, in __call__\n    outputs = self.call(inputs, *args, **kwargs)\n  File \"/Users/facai/Library/anaconda3/lib/python3.5/site-packages/tensorflow/python/keras/_impl/keras/layers/core.py\", line 642, in call\n    return self.function(inputs, **arguments)\n  File \"test.py\", line 11, in func\n    return tf.exp(x)\nNameError: name 'tf' is not defined", "body": "I run the test on Mac (tf 1.8).  A similar exception is raised, which seems related with clone behavior of Lambda: the function copied jumps out the original code scope.\r\n\r\n```python\r\nimport tensorflow as tf\r\nfrom tensorflow.python.keras import Input, Model\r\nfrom tensorflow.python.keras.layers import Dense, Lambda\r\n\r\nx = Input(shape=(32,))\r\ny = Dense(10)(x)\r\n\r\ndef func(x):\r\n    return tf.exp(x)\r\n\r\ny = Lambda(func)(y)\r\n\r\nvae = Model(x, y)\r\nvae.compile(optimizer='adam', loss='categorical_crossentropy')\r\nvae.summary()\r\n\r\nestimator_vae = tf.keras.estimator.model_to_estimator(keras_model=vae)\r\n```\r\n\r\n```python\r\n~/Downloads \u276f\u276f\u276f python test.py\r\n_________________________________________________________________\r\nLayer (type)                 Output Shape              Param #\r\n=================================================================\r\ninput_1 (InputLayer)         (None, 32)                0\r\n_________________________________________________________________\r\ndense_1 (Dense)              (None, 10)                330\r\n_________________________________________________________________\r\nlambda_1 (Lambda)            (None, 10)                0\r\n=================================================================\r\nTotal params: 330\r\nTrainable params: 330\r\nNon-trainable params: 0\r\n_________________________________________________________________\r\nWARNING:tensorflow:Using temporary folder as model directory: /var/folders/6n/7463w47j649757l3cyct9qp00000gn/T/tmptdyvm5v3\r\n2018-05-06 06:56:08.030004: I tensorflow/core/platform/cpu_feature_guard.cc:140] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 19, in <module>\r\n    estimator_vae = tf.keras.estimator.model_to_estimator(keras_model=vae)\r\n  File \"/Users/facai/Library/anaconda3/lib/python3.5/site-packages/tensorflow/python/keras/_impl/keras/estimator.py\", line 478, in model_to_estimator\r\n    keras_weights)\r\n  File \"/Users/facai/Library/anaconda3/lib/python3.5/site-packages/tensorflow/python/keras/_impl/keras/estimator.py\", line 395, in _save_first_checkpoint\r\n    custom_objects)\r\n  File \"/Users/facai/Library/anaconda3/lib/python3.5/site-packages/tensorflow/python/keras/_impl/keras/estimator.py\", line 272, in _clone_and_build_model\r\n    model = models.clone_model(keras_model, input_tensors=input_tensors)\r\n  File \"/Users/facai/Library/anaconda3/lib/python3.5/site-packages/tensorflow/python/keras/_impl/keras/models.py\", line 263, in clone_model\r\n    return _clone_functional_model(model, input_tensors=input_tensors)\r\n  File \"/Users/facai/Library/anaconda3/lib/python3.5/site-packages/tensorflow/python/keras/_impl/keras/models.py\", line 156, in _clone_functional_model\r\n    **kwargs))\r\n  File \"/Users/facai/Library/anaconda3/lib/python3.5/site-packages/tensorflow/python/keras/_impl/keras/engine/base_layer.py\", line 314, in __call__\r\n    output = super(Layer, self).__call__(inputs, *args, **kwargs)\r\n  File \"/Users/facai/Library/anaconda3/lib/python3.5/site-packages/tensorflow/python/layers/base.py\", line 716, in __call__\r\n    outputs = self.call(inputs, *args, **kwargs)\r\n  File \"/Users/facai/Library/anaconda3/lib/python3.5/site-packages/tensorflow/python/keras/_impl/keras/layers/core.py\", line 642, in call\r\n    return self.function(inputs, **arguments)\r\n  File \"test.py\", line 11, in func\r\n    return tf.exp(x)\r\nNameError: name 'tf' is not defined\r\n```"}