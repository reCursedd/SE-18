{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23552", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23552/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23552/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23552/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/23552", "id": 377831491, "node_id": "MDU6SXNzdWUzNzc4MzE0OTE=", "number": 23552, "title": "if i set the inputshape with (None, None, featdim),how can I split the input by second dimention(axis=1)?", "user": {"login": "wangyunxiaa", "id": 41035013, "node_id": "MDQ6VXNlcjQxMDM1MDEz", "avatar_url": "https://avatars3.githubusercontent.com/u/41035013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wangyunxiaa", "html_url": "https://github.com/wangyunxiaa", "followers_url": "https://api.github.com/users/wangyunxiaa/followers", "following_url": "https://api.github.com/users/wangyunxiaa/following{/other_user}", "gists_url": "https://api.github.com/users/wangyunxiaa/gists{/gist_id}", "starred_url": "https://api.github.com/users/wangyunxiaa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wangyunxiaa/subscriptions", "organizations_url": "https://api.github.com/users/wangyunxiaa/orgs", "repos_url": "https://api.github.com/users/wangyunxiaa/repos", "events_url": "https://api.github.com/users/wangyunxiaa/events{/privacy}", "received_events_url": "https://api.github.com/users/wangyunxiaa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097547147, "node_id": "MDU6TGFiZWwxMDk3NTQ3MTQ3", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:ops", "name": "comp:ops", "color": "0052cc", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-11-06T12:47:17Z", "updated_at": "2018-11-20T18:39:14Z", "closed_at": "2018-11-20T18:39:14Z", "author_association": "NONE", "body_html": "<p>I want to have a dynamic input in my net, so, I set the input with 2 unknown dim, (1:batch, 2:sequencelength, 3:feature dims),and I defined another variable to specify the real shape of input in forwarding.<br>\ni have a test as followings:</p>\n<pre><code>a = tf.placeholder(tf.float32, shape=[None, None, 40], name = \"tensor_a\") \nb = tf.placeholder(tf.int32, shape=[2], name = \"tensor_b\")  # b[0] indicate the sequence length\n\nsplit_tensor_a = split_a(a, b)\nsess = tf.Session()\n\narray_a = np.logspace(1.0, 2.0, num = 120).reshape(1,3,40)\narray_b = np.array([3, 40])\nfeed_dict = {a: array_a, b: array_b}\nsplit_b_value = sess.run(split_tensor_a, feed_dict = feed_dict)\n</code></pre>\n<p>and the py_func is:</p>\n<pre><code>def split_a(tensor_a, tensor_b):\n    sp_tensor =tf.py_func(_split_a, [tensor_a, tensor_b], tf.float32, \"split\")\n    return sp_tensor\n\ndef _split_a(a, b):\n    tensor_tup = ()\n    newsp_a = np.reshape(a, (-1, b[0], a.shape[-1]))\n    for n in range(b[0]):\n        tensor_tup = tensor_tup + (newsp_a[:, n, :],)\n    print(tensor_tup)\n    return tensor_tup\n</code></pre>\n<p>In _split_a I can get the value of tensor_tup, but when I run the sess, I got an error:<br>\n<code>InvalidArgumentError (see above for traceback): pyfunc_0 returns 3 values, but expects to see 1 values. [[Node: PyFunc = PyFunc[Tin=[DT_FLOAT, DT_INT32], Tout=[DT_FLOAT], token=\"pyfunc_0\", _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](_arg_tensor_a_0_0, _arg_tensor_b_0_1)]] </code><br>\nI want to know how to split the unknown dim of tensor?<br>\nIf the net has 2 unknown dim,how to deal with the input data by one timestep?<br>\nThe net has cnn layer and lstm layer, I donot want to change the input shape to (-1, featdim) in cnn layer, but it can only do forward by one time step,  the follwing lstm layer must have shape of (batch, numstep, featdim), so, what should I do ?<br>\nCan anyone help me?<br>\nThanks~</p>", "body_text": "I want to have a dynamic input in my net, so, I set the input with 2 unknown dim, (1:batch, 2:sequencelength, 3:feature dims),and I defined another variable to specify the real shape of input in forwarding.\ni have a test as followings:\na = tf.placeholder(tf.float32, shape=[None, None, 40], name = \"tensor_a\") \nb = tf.placeholder(tf.int32, shape=[2], name = \"tensor_b\")  # b[0] indicate the sequence length\n\nsplit_tensor_a = split_a(a, b)\nsess = tf.Session()\n\narray_a = np.logspace(1.0, 2.0, num = 120).reshape(1,3,40)\narray_b = np.array([3, 40])\nfeed_dict = {a: array_a, b: array_b}\nsplit_b_value = sess.run(split_tensor_a, feed_dict = feed_dict)\n\nand the py_func is:\ndef split_a(tensor_a, tensor_b):\n    sp_tensor =tf.py_func(_split_a, [tensor_a, tensor_b], tf.float32, \"split\")\n    return sp_tensor\n\ndef _split_a(a, b):\n    tensor_tup = ()\n    newsp_a = np.reshape(a, (-1, b[0], a.shape[-1]))\n    for n in range(b[0]):\n        tensor_tup = tensor_tup + (newsp_a[:, n, :],)\n    print(tensor_tup)\n    return tensor_tup\n\nIn _split_a I can get the value of tensor_tup, but when I run the sess, I got an error:\nInvalidArgumentError (see above for traceback): pyfunc_0 returns 3 values, but expects to see 1 values. [[Node: PyFunc = PyFunc[Tin=[DT_FLOAT, DT_INT32], Tout=[DT_FLOAT], token=\"pyfunc_0\", _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](_arg_tensor_a_0_0, _arg_tensor_b_0_1)]] \nI want to know how to split the unknown dim of tensor?\nIf the net has 2 unknown dim,how to deal with the input data by one timestep?\nThe net has cnn layer and lstm layer, I donot want to change the input shape to (-1, featdim) in cnn layer, but it can only do forward by one time step,  the follwing lstm layer must have shape of (batch, numstep, featdim), so, what should I do ?\nCan anyone help me?\nThanks~", "body": "I want to have a dynamic input in my net, so, I set the input with 2 unknown dim, (1:batch, 2:sequencelength, 3:feature dims),and I defined another variable to specify the real shape of input in forwarding.\r\ni have a test as followings:\r\n\r\n    a = tf.placeholder(tf.float32, shape=[None, None, 40], name = \"tensor_a\") \r\n    b = tf.placeholder(tf.int32, shape=[2], name = \"tensor_b\")  # b[0] indicate the sequence length\r\n\r\n    split_tensor_a = split_a(a, b)\r\n    sess = tf.Session()\r\n\r\n    array_a = np.logspace(1.0, 2.0, num = 120).reshape(1,3,40)\r\n    array_b = np.array([3, 40])\r\n    feed_dict = {a: array_a, b: array_b}\r\n    split_b_value = sess.run(split_tensor_a, feed_dict = feed_dict)\r\n\r\n\r\nand the py_func is:\r\n\r\n    def split_a(tensor_a, tensor_b):\r\n        sp_tensor =tf.py_func(_split_a, [tensor_a, tensor_b], tf.float32, \"split\")\r\n        return sp_tensor\r\n\r\n    def _split_a(a, b):\r\n        tensor_tup = ()\r\n        newsp_a = np.reshape(a, (-1, b[0], a.shape[-1]))\r\n        for n in range(b[0]):\r\n            tensor_tup = tensor_tup + (newsp_a[:, n, :],)\r\n        print(tensor_tup)\r\n        return tensor_tup\r\n\r\nIn _split_a I can get the value of tensor_tup, but when I run the sess, I got an error:\r\n`InvalidArgumentError (see above for traceback): pyfunc_0 returns 3 values, but expects to see 1 values.\r\n\t [[Node: PyFunc = PyFunc[Tin=[DT_FLOAT, DT_INT32], Tout=[DT_FLOAT], token=\"pyfunc_0\", _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](_arg_tensor_a_0_0, _arg_tensor_b_0_1)]]\r\n`\r\nI want to know how to split the unknown dim of tensor?\r\nIf the net has 2 unknown dim,how to deal with the input data by one timestep?\r\nThe net has cnn layer and lstm layer, I donot want to change the input shape to (-1, featdim) in cnn layer, but it can only do forward by one time step,  the follwing lstm layer must have shape of (batch, numstep, featdim), so, what should I do ?\r\nCan anyone help me?\r\nThanks~"}