{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/281922567", "html_url": "https://github.com/tensorflow/tensorflow/issues/7683#issuecomment-281922567", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7683", "id": 281922567, "node_id": "MDEyOklzc3VlQ29tbWVudDI4MTkyMjU2Nw==", "user": {"login": "htyspghtz", "id": 25974576, "node_id": "MDQ6VXNlcjI1OTc0NTc2", "avatar_url": "https://avatars3.githubusercontent.com/u/25974576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/htyspghtz", "html_url": "https://github.com/htyspghtz", "followers_url": "https://api.github.com/users/htyspghtz/followers", "following_url": "https://api.github.com/users/htyspghtz/following{/other_user}", "gists_url": "https://api.github.com/users/htyspghtz/gists{/gist_id}", "starred_url": "https://api.github.com/users/htyspghtz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/htyspghtz/subscriptions", "organizations_url": "https://api.github.com/users/htyspghtz/orgs", "repos_url": "https://api.github.com/users/htyspghtz/repos", "events_url": "https://api.github.com/users/htyspghtz/events{/privacy}", "received_events_url": "https://api.github.com/users/htyspghtz/received_events", "type": "User", "site_admin": false}, "created_at": "2017-02-23T08:05:14Z", "updated_at": "2017-02-23T08:06:56Z", "author_association": "NONE", "body_html": "<p>Is there anyway we could get an Android Studio release for the Image Classifier? For us folks that aren't able to get a Bazel build going? I've tried for about a week now trying to get this build to work (and I really mean for a week, full days and nights of research and hackjobs). I've had terrible luck with Bazel, and finding a work around to Bazel. This might be due to me being relatively unacknowledged of app development (as my only use, as of now, is to get an app deployed for a web project that I'm working on). I've found one resource, of something somewhat similar (<a href=\"https://github.com/miyosuda/TensorFlowAndroidDemo\">https://github.com/miyosuda/TensorFlowAndroidDemo</a>), but it appears to be outdated, as the changes in files: TensorFlowClassifier.java (iirc, now: TensorFlowImageClassifier), and TensorFlowImageListener.java (which to my understanding has been renamed to ClassifierActivity). I think maybe releasing a depository for Android Studio, that we're able to drop in libtensorflow_demo.so, .jar (from nightly), and our model (of course with input values changed in ClassifierActivity.java (2/23/2017)) might be helpful. Kindest regards, <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3376817\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/andrewharp\">@andrewharp</a>, as you appear to be the only person with updated pertinent documentation.</p>\n<p>This comment here, is probably the most useful thing I've read, but I'm not sure what to do with it:</p>\n<blockquote>\n<p>We definitely could use some centralized documentation about what lib is what. Essentially the libs are consecutive supersets of each other in the following order:</p>\n<p>libandroid_tensorflow_lib.lo:<br>\ncore TensorFlow runtime + ops for linking into other libraries (you would still need all the TF headers to really use it, but perhaps it can be useful in some situations)</p>\n<p>libtensorflow_inference.so:<br>\ncore TF runtime+ops with added JNI bindings that allow you to use TF for inference from Java. This + the associated jarfile are all you should need to integrate TF into your own Android app, unless you want custom ops or training.</p>\n<p>libtensorflow_demo.so:<br>\ncontains everything in libtensorflow_inference.so + demo-specific native code; if you want to run the official demo without building anything native this can be dropped into the APK</p>\n<p>edit: note that the libs currently found at nightly-android (build <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"115914813\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/11\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/11/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/11\">#11</a>) have been unfortunately built without NEON support, but the next set to be uploaded should be fixed.</p>\n</blockquote>", "body_text": "Is there anyway we could get an Android Studio release for the Image Classifier? For us folks that aren't able to get a Bazel build going? I've tried for about a week now trying to get this build to work (and I really mean for a week, full days and nights of research and hackjobs). I've had terrible luck with Bazel, and finding a work around to Bazel. This might be due to me being relatively unacknowledged of app development (as my only use, as of now, is to get an app deployed for a web project that I'm working on). I've found one resource, of something somewhat similar (https://github.com/miyosuda/TensorFlowAndroidDemo), but it appears to be outdated, as the changes in files: TensorFlowClassifier.java (iirc, now: TensorFlowImageClassifier), and TensorFlowImageListener.java (which to my understanding has been renamed to ClassifierActivity). I think maybe releasing a depository for Android Studio, that we're able to drop in libtensorflow_demo.so, .jar (from nightly), and our model (of course with input values changed in ClassifierActivity.java (2/23/2017)) might be helpful. Kindest regards, @andrewharp, as you appear to be the only person with updated pertinent documentation.\nThis comment here, is probably the most useful thing I've read, but I'm not sure what to do with it:\n\nWe definitely could use some centralized documentation about what lib is what. Essentially the libs are consecutive supersets of each other in the following order:\nlibandroid_tensorflow_lib.lo:\ncore TensorFlow runtime + ops for linking into other libraries (you would still need all the TF headers to really use it, but perhaps it can be useful in some situations)\nlibtensorflow_inference.so:\ncore TF runtime+ops with added JNI bindings that allow you to use TF for inference from Java. This + the associated jarfile are all you should need to integrate TF into your own Android app, unless you want custom ops or training.\nlibtensorflow_demo.so:\ncontains everything in libtensorflow_inference.so + demo-specific native code; if you want to run the official demo without building anything native this can be dropped into the APK\nedit: note that the libs currently found at nightly-android (build #11) have been unfortunately built without NEON support, but the next set to be uploaded should be fixed.", "body": "Is there anyway we could get an Android Studio release for the Image Classifier? For us folks that aren't able to get a Bazel build going? I've tried for about a week now trying to get this build to work (and I really mean for a week, full days and nights of research and hackjobs). I've had terrible luck with Bazel, and finding a work around to Bazel. This might be due to me being relatively unacknowledged of app development (as my only use, as of now, is to get an app deployed for a web project that I'm working on). I've found one resource, of something somewhat similar (https://github.com/miyosuda/TensorFlowAndroidDemo), but it appears to be outdated, as the changes in files: TensorFlowClassifier.java (iirc, now: TensorFlowImageClassifier), and TensorFlowImageListener.java (which to my understanding has been renamed to ClassifierActivity). I think maybe releasing a depository for Android Studio, that we're able to drop in libtensorflow_demo.so, .jar (from nightly), and our model (of course with input values changed in ClassifierActivity.java (2/23/2017)) might be helpful. Kindest regards, @andrewharp, as you appear to be the only person with updated pertinent documentation.\r\n\r\nThis comment here, is probably the most useful thing I've read, but I'm not sure what to do with it:\r\n\r\n\r\n> We definitely could use some centralized documentation about what lib is what. Essentially the libs are consecutive supersets of each other in the following order:\r\n> \r\n> libandroid_tensorflow_lib.lo:\r\n> core TensorFlow runtime + ops for linking into other libraries (you would still need all the TF headers to really use it, but perhaps it can be useful in some situations)\r\n> \r\n> libtensorflow_inference.so:\r\n> core TF runtime+ops with added JNI bindings that allow you to use TF for inference from Java. This + the associated jarfile are all you should need to integrate TF into your own Android app, unless you want custom ops or training.\r\n> \r\n> libtensorflow_demo.so:\r\n> contains everything in libtensorflow_inference.so + demo-specific native code; if you want to run the official demo without building anything native this can be dropped into the APK\r\n> \r\n> edit: note that the libs currently found at nightly-android (build #11) have been unfortunately built without NEON support, but the next set to be uploaded should be fixed.\r\n>"}