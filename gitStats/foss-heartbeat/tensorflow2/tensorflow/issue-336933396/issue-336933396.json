{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20408", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20408/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20408/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20408/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20408", "id": 336933396, "node_id": "MDU6SXNzdWUzMzY5MzMzOTY=", "number": 20408, "title": "LoadLibrary crashed at LoadLibraryExW when load custom ops dll on Windows", "user": {"login": "justmao945", "id": 619331, "node_id": "MDQ6VXNlcjYxOTMzMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/619331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/justmao945", "html_url": "https://github.com/justmao945", "followers_url": "https://api.github.com/users/justmao945/followers", "following_url": "https://api.github.com/users/justmao945/following{/other_user}", "gists_url": "https://api.github.com/users/justmao945/gists{/gist_id}", "starred_url": "https://api.github.com/users/justmao945/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/justmao945/subscriptions", "organizations_url": "https://api.github.com/users/justmao945/orgs", "repos_url": "https://api.github.com/users/justmao945/repos", "events_url": "https://api.github.com/users/justmao945/events{/privacy}", "received_events_url": "https://api.github.com/users/justmao945/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "poxvoculi", "id": 15676913, "node_id": "MDQ6VXNlcjE1Njc2OTEz", "avatar_url": "https://avatars2.githubusercontent.com/u/15676913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poxvoculi", "html_url": "https://github.com/poxvoculi", "followers_url": "https://api.github.com/users/poxvoculi/followers", "following_url": "https://api.github.com/users/poxvoculi/following{/other_user}", "gists_url": "https://api.github.com/users/poxvoculi/gists{/gist_id}", "starred_url": "https://api.github.com/users/poxvoculi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poxvoculi/subscriptions", "organizations_url": "https://api.github.com/users/poxvoculi/orgs", "repos_url": "https://api.github.com/users/poxvoculi/repos", "events_url": "https://api.github.com/users/poxvoculi/events{/privacy}", "received_events_url": "https://api.github.com/users/poxvoculi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "poxvoculi", "id": 15676913, "node_id": "MDQ6VXNlcjE1Njc2OTEz", "avatar_url": "https://avatars2.githubusercontent.com/u/15676913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poxvoculi", "html_url": "https://github.com/poxvoculi", "followers_url": "https://api.github.com/users/poxvoculi/followers", "following_url": "https://api.github.com/users/poxvoculi/following{/other_user}", "gists_url": "https://api.github.com/users/poxvoculi/gists{/gist_id}", "starred_url": "https://api.github.com/users/poxvoculi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poxvoculi/subscriptions", "organizations_url": "https://api.github.com/users/poxvoculi/orgs", "repos_url": "https://api.github.com/users/poxvoculi/repos", "events_url": "https://api.github.com/users/poxvoculi/events{/privacy}", "received_events_url": "https://api.github.com/users/poxvoculi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-06-29T09:43:23Z", "updated_at": "2018-07-01T08:42:09Z", "closed_at": "2018-07-01T08:42:09Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li>\n<p><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:</p>\n</li>\n<li>\n<p><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:<br>\nWindows 7</p>\n</li>\n<li>\n<p><strong>TensorFlow installed from (source or binary)</strong>:<br>\nsource</p>\n</li>\n<li>\n<p><strong>TensorFlow version (use command below)</strong>:<br>\n1.8.0</p>\n</li>\n<li>\n<p><strong>Python version</strong>:</p>\n</li>\n<li>\n<p><strong>Bazel version (if compiling from source)</strong>:</p>\n</li>\n<li>\n<p><strong>GCC/Compiler version (if compiling from source)</strong>:<br>\nVS 2017</p>\n</li>\n<li>\n<p><strong>CUDA/cuDNN version</strong>:</p>\n</li>\n<li>\n<p><strong>GPU model and memory</strong>:</p>\n</li>\n<li>\n<p><strong>Exact command to reproduce</strong>:</p>\n</li>\n</ul>\n<p>write op</p>\n<div class=\"highlight highlight-source-c++\"><pre>#<span class=\"pl-k\">if</span> defined(_MSC_VER) &amp;&amp; !defined(COMPILER_MSVC)\n#<span class=\"pl-k\">define</span> <span class=\"pl-en\">COMPILER_MSVC</span> <span class=\"pl-c\"><span class=\"pl-c\">//</span> Set MSVC visibility of exported symbols in the shared library.</span>\n#<span class=\"pl-k\">ifndef</span> NOMINMAX\n# <span class=\"pl-k\">define</span> <span class=\"pl-en\">NOMINMAX</span>\n#<span class=\"pl-k\">endif</span>\n#<span class=\"pl-k\">endif</span>\n\n#<span class=\"pl-k\">include</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>tensorflow/core/framework/types.h<span class=\"pl-pds\">\"</span></span>\n#<span class=\"pl-k\">include</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>tensorflow/core/framework/op.h<span class=\"pl-pds\">\"</span></span>\n#<span class=\"pl-k\">include</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>tensorflow/core/framework/shape_inference.h<span class=\"pl-pds\">\"</span></span>\n#<span class=\"pl-k\">include</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>tensorflow/core/framework/op_kernel.h<span class=\"pl-pds\">\"</span></span>\n\n<span class=\"pl-k\">using</span> <span class=\"pl-k\">namespace</span> <span class=\"pl-en\">tensorflow</span><span class=\"pl-k\">;</span>\n\n<span class=\"pl-en\">REGISTER_OP</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>ZeroOut<span class=\"pl-pds\">\"</span></span>)\n.Input(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>to_zero: int32<span class=\"pl-pds\">\"</span></span>)\n.Output(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>zeroed: int32<span class=\"pl-pds\">\"</span></span>)\n.SetShapeFn([](shape_inference::InferenceContext* c) {\n    c-&gt;<span class=\"pl-c1\">set_output</span>(<span class=\"pl-c1\">0</span>, c-&gt;<span class=\"pl-c1\">input</span>(<span class=\"pl-c1\">0</span>));\n    <span class=\"pl-k\">return</span> <span class=\"pl-c1\">Status::OK</span>();\n});\n\n<span class=\"pl-k\">class</span> <span class=\"pl-en\">ZeroOutOp</span> : <span class=\"pl-k\">public</span> <span class=\"pl-en\">OpKernel</span> {\n<span class=\"pl-k\">public:</span>\n    <span class=\"pl-k\">explicit</span> <span class=\"pl-en\">ZeroOutOp</span>(OpKernelConstruction* context) : OpKernel(context) {}\n\n    <span class=\"pl-k\">void</span> <span class=\"pl-en\">Compute</span>(OpKernelContext* context) <span class=\"pl-k\">override</span> {\n        <span class=\"pl-c\"><span class=\"pl-c\">//</span> Grab the input tensor</span>\n        <span class=\"pl-k\">const</span> Tensor&amp; input_tensor = context-&gt;<span class=\"pl-c1\">input</span>(<span class=\"pl-c1\">0</span>);\n        <span class=\"pl-k\">auto</span> input = input_tensor.<span class=\"pl-smi\">flat</span>&lt;int32&gt;();\n\n        <span class=\"pl-c\"><span class=\"pl-c\">//</span> Create an output tensor</span>\n        Tensor* output_tensor = <span class=\"pl-c1\">NULL</span>;\n        <span class=\"pl-c1\">OP_REQUIRES_OK</span>(context, context-&gt;<span class=\"pl-c1\">allocate_output</span>(<span class=\"pl-c1\">0</span>, input_tensor.<span class=\"pl-c1\">shape</span>(),\n            &amp;output_tensor));\n        <span class=\"pl-k\">auto</span> output_flat = output_tensor-&gt;<span class=\"pl-smi\">flat</span>&lt;int32&gt;();\n\n        <span class=\"pl-c\"><span class=\"pl-c\">//</span> Set all but the first element of the output tensor to 0.</span>\n        <span class=\"pl-k\">const</span> <span class=\"pl-k\">int</span> N = input.<span class=\"pl-c1\">size</span>();\n        <span class=\"pl-k\">for</span> (<span class=\"pl-k\">int</span> i = <span class=\"pl-c1\">1</span>; i &lt; N; i++) {\n            <span class=\"pl-c1\">output_flat</span>(i) = <span class=\"pl-c1\">0</span>;\n        }\n\n        <span class=\"pl-c\"><span class=\"pl-c\">//</span> Preserve the first input value if possible.</span>\n        <span class=\"pl-k\">if</span> (N &gt; <span class=\"pl-c1\">0</span>) <span class=\"pl-c1\">output_flat</span>(<span class=\"pl-c1\">0</span>) = <span class=\"pl-c1\">input</span>(<span class=\"pl-c1\">0</span>);\n    }\n};\n\n<span class=\"pl-en\">REGISTER_KERNEL_BUILDER</span>(Name(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>ZeroOut<span class=\"pl-pds\">\"</span></span>).Device(DEVICE_CPU), ZeroOutOp);</pre></div>\n<p>load ops in C++</p>\n<pre><code>Env* env = Env::Default();\nenv-&gt;LoadLibrary(library_filename, &amp;library.handle);\n</code></pre>\n<p>LoadLibraryExW crashed when load the op.dll</p>\n<h3>Describe the problem</h3>\n<p>LoadLibraryExW crashed when load the op.dll<br>\nThe above code works fine under Linux, but crashed under windows 7 compiled by VS 2017</p>\n<h3>Source code / logs</h3>", "body_text": "System information\n\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\n\n\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nWindows 7\n\n\nTensorFlow installed from (source or binary):\nsource\n\n\nTensorFlow version (use command below):\n1.8.0\n\n\nPython version:\n\n\nBazel version (if compiling from source):\n\n\nGCC/Compiler version (if compiling from source):\nVS 2017\n\n\nCUDA/cuDNN version:\n\n\nGPU model and memory:\n\n\nExact command to reproduce:\n\n\nwrite op\n#if defined(_MSC_VER) && !defined(COMPILER_MSVC)\n#define COMPILER_MSVC // Set MSVC visibility of exported symbols in the shared library.\n#ifndef NOMINMAX\n# define NOMINMAX\n#endif\n#endif\n\n#include \"tensorflow/core/framework/types.h\"\n#include \"tensorflow/core/framework/op.h\"\n#include \"tensorflow/core/framework/shape_inference.h\"\n#include \"tensorflow/core/framework/op_kernel.h\"\n\nusing namespace tensorflow;\n\nREGISTER_OP(\"ZeroOut\")\n.Input(\"to_zero: int32\")\n.Output(\"zeroed: int32\")\n.SetShapeFn([](shape_inference::InferenceContext* c) {\n    c->set_output(0, c->input(0));\n    return Status::OK();\n});\n\nclass ZeroOutOp : public OpKernel {\npublic:\n    explicit ZeroOutOp(OpKernelConstruction* context) : OpKernel(context) {}\n\n    void Compute(OpKernelContext* context) override {\n        // Grab the input tensor\n        const Tensor& input_tensor = context->input(0);\n        auto input = input_tensor.flat<int32>();\n\n        // Create an output tensor\n        Tensor* output_tensor = NULL;\n        OP_REQUIRES_OK(context, context->allocate_output(0, input_tensor.shape(),\n            &output_tensor));\n        auto output_flat = output_tensor->flat<int32>();\n\n        // Set all but the first element of the output tensor to 0.\n        const int N = input.size();\n        for (int i = 1; i < N; i++) {\n            output_flat(i) = 0;\n        }\n\n        // Preserve the first input value if possible.\n        if (N > 0) output_flat(0) = input(0);\n    }\n};\n\nREGISTER_KERNEL_BUILDER(Name(\"ZeroOut\").Device(DEVICE_CPU), ZeroOutOp);\nload ops in C++\nEnv* env = Env::Default();\nenv->LoadLibrary(library_filename, &library.handle);\n\nLoadLibraryExW crashed when load the op.dll\nDescribe the problem\nLoadLibraryExW crashed when load the op.dll\nThe above code works fine under Linux, but crashed under windows 7 compiled by VS 2017\nSource code / logs", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nWindows 7\r\n\r\n- **TensorFlow installed from (source or binary)**:\r\nsource\r\n\r\n- **TensorFlow version (use command below)**:\r\n1.8.0\r\n\r\n- **Python version**: \r\n\r\n- **Bazel version (if compiling from source)**:\r\n\r\n- **GCC/Compiler version (if compiling from source)**:\r\nVS 2017\r\n\r\n- **CUDA/cuDNN version**:\r\n\r\n- **GPU model and memory**:\r\n\r\n- **Exact command to reproduce**:\r\n\r\nwrite op \r\n```c++\r\n#if defined(_MSC_VER) && !defined(COMPILER_MSVC)\r\n#define COMPILER_MSVC // Set MSVC visibility of exported symbols in the shared library.\r\n#ifndef NOMINMAX\r\n# define NOMINMAX\r\n#endif\r\n#endif\r\n\r\n#include \"tensorflow/core/framework/types.h\"\r\n#include \"tensorflow/core/framework/op.h\"\r\n#include \"tensorflow/core/framework/shape_inference.h\"\r\n#include \"tensorflow/core/framework/op_kernel.h\"\r\n\r\nusing namespace tensorflow;\r\n\r\nREGISTER_OP(\"ZeroOut\")\r\n.Input(\"to_zero: int32\")\r\n.Output(\"zeroed: int32\")\r\n.SetShapeFn([](shape_inference::InferenceContext* c) {\r\n    c->set_output(0, c->input(0));\r\n    return Status::OK();\r\n});\r\n\r\nclass ZeroOutOp : public OpKernel {\r\npublic:\r\n    explicit ZeroOutOp(OpKernelConstruction* context) : OpKernel(context) {}\r\n\r\n    void Compute(OpKernelContext* context) override {\r\n        // Grab the input tensor\r\n        const Tensor& input_tensor = context->input(0);\r\n        auto input = input_tensor.flat<int32>();\r\n\r\n        // Create an output tensor\r\n        Tensor* output_tensor = NULL;\r\n        OP_REQUIRES_OK(context, context->allocate_output(0, input_tensor.shape(),\r\n            &output_tensor));\r\n        auto output_flat = output_tensor->flat<int32>();\r\n\r\n        // Set all but the first element of the output tensor to 0.\r\n        const int N = input.size();\r\n        for (int i = 1; i < N; i++) {\r\n            output_flat(i) = 0;\r\n        }\r\n\r\n        // Preserve the first input value if possible.\r\n        if (N > 0) output_flat(0) = input(0);\r\n    }\r\n};\r\n\r\nREGISTER_KERNEL_BUILDER(Name(\"ZeroOut\").Device(DEVICE_CPU), ZeroOutOp);\r\n```\r\n\r\nload ops in C++\r\n```\r\nEnv* env = Env::Default();\r\nenv->LoadLibrary(library_filename, &library.handle);\r\n```\r\nLoadLibraryExW crashed when load the op.dll\r\n\r\n### Describe the problem\r\nLoadLibraryExW crashed when load the op.dll\r\nThe above code works fine under Linux, but crashed under windows 7 compiled by VS 2017\r\n\r\n### Source code / logs\r\n"}