{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17821", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17821/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17821/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17821/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/17821", "id": 306418572, "node_id": "MDExOlB1bGxSZXF1ZXN0MTc1ODY3MTEy", "number": 17821, "title": "Add IndRNN implementation", "user": {"login": "batzner", "id": 10948237, "node_id": "MDQ6VXNlcjEwOTQ4MjM3", "avatar_url": "https://avatars3.githubusercontent.com/u/10948237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/batzner", "html_url": "https://github.com/batzner", "followers_url": "https://api.github.com/users/batzner/followers", "following_url": "https://api.github.com/users/batzner/following{/other_user}", "gists_url": "https://api.github.com/users/batzner/gists{/gist_id}", "starred_url": "https://api.github.com/users/batzner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/batzner/subscriptions", "organizations_url": "https://api.github.com/users/batzner/orgs", "repos_url": "https://api.github.com/users/batzner/repos", "events_url": "https://api.github.com/users/batzner/events{/privacy}", "received_events_url": "https://api.github.com/users/batzner/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}, {"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2018-03-19T11:08:41Z", "updated_at": "2018-08-30T02:14:46Z", "closed_at": "2018-08-30T02:14:46Z", "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/17821", "html_url": "https://github.com/tensorflow/tensorflow/pull/17821", "diff_url": "https://github.com/tensorflow/tensorflow/pull/17821.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/17821.patch"}, "body_html": "<p>This PR adds the cell implementation of Independently Recurrent Neural Networks<br>\nto contrib together with unit tests.</p>\n<p>The implementation is based on <a href=\"https://arxiv.org/abs/1803.04831\" rel=\"nofollow\">Independently Recurrent Neural Network (IndRNN): Building A Longer and Deeper RNN</a> (Shuai Li et al., 2018).</p>\n<p>The difference to the <code>BasicRNNCell</code> is that each unit only has one recurrent weight connected to its own last hidden state. This makes it independent from other units in the same layer. To prevent vanishing / exploding gradients over time steps, the paper recommends bounds on the absolute value of that recurrent weight. These can be specified via the <code>recurrent_min_abs</code> and <code>recurrent_max_abs</code> constructor arguments.</p>\n<p>Additional arguments of the <code>IndRNNCell</code> are <code>recurrent_kernel_initializer</code> and <code>input_kernel_initializer</code>. The paper does not recommend default values for the recurrent and input weights, so the default values for these were taken from <a href=\"https://arxiv.org/abs/1504.00941\" rel=\"nofollow\"><br>\nA Simple Way to Initialize Recurrent Networks of Rectified Linear Units</a> (Quoc V. Le et al., 2015):</p>\n<ul>\n<li>Recurrent weights are set to 1 initially</li>\n<li>Input weights are initialized using a Gaussian with <code>mean=0</code> and <code>stddev=0.001</code></li>\n</ul>\n<p>The code is originally from <a href=\"https://github.com/batzner/indrnn/\">batzner/indrnn</a>.</p>", "body_text": "This PR adds the cell implementation of Independently Recurrent Neural Networks\nto contrib together with unit tests.\nThe implementation is based on Independently Recurrent Neural Network (IndRNN): Building A Longer and Deeper RNN (Shuai Li et al., 2018).\nThe difference to the BasicRNNCell is that each unit only has one recurrent weight connected to its own last hidden state. This makes it independent from other units in the same layer. To prevent vanishing / exploding gradients over time steps, the paper recommends bounds on the absolute value of that recurrent weight. These can be specified via the recurrent_min_abs and recurrent_max_abs constructor arguments.\nAdditional arguments of the IndRNNCell are recurrent_kernel_initializer and input_kernel_initializer. The paper does not recommend default values for the recurrent and input weights, so the default values for these were taken from \nA Simple Way to Initialize Recurrent Networks of Rectified Linear Units (Quoc V. Le et al., 2015):\n\nRecurrent weights are set to 1 initially\nInput weights are initialized using a Gaussian with mean=0 and stddev=0.001\n\nThe code is originally from batzner/indrnn.", "body": "This PR adds the cell implementation of Independently Recurrent Neural Networks\r\nto contrib together with unit tests. \r\n\r\nThe implementation is based on [Independently Recurrent Neural Network (IndRNN): Building A Longer and Deeper RNN](https://arxiv.org/abs/1803.04831) (Shuai Li et al., 2018).\r\n\r\nThe difference to the `BasicRNNCell` is that each unit only has one recurrent weight connected to its own last hidden state. This makes it independent from other units in the same layer. To prevent vanishing / exploding gradients over time steps, the paper recommends bounds on the absolute value of that recurrent weight. These can be specified via the `recurrent_min_abs` and `recurrent_max_abs` constructor arguments.\r\n\r\nAdditional arguments of the `IndRNNCell` are `recurrent_kernel_initializer` and `input_kernel_initializer`. The paper does not recommend default values for the recurrent and input weights, so the default values for these were taken from [\r\nA Simple Way to Initialize Recurrent Networks of Rectified Linear Units](https://arxiv.org/abs/1504.00941) (Quoc V. Le et al., 2015):\r\n\r\n- Recurrent weights are set to 1 initially\r\n- Input weights are initialized using a Gaussian with `mean=0` and `stddev=0.001`\r\n\r\nThe code is originally from [batzner/indrnn](https://github.com/batzner/indrnn/)."}