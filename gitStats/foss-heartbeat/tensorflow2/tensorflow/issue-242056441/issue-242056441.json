{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11435", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11435/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11435/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11435/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/11435", "id": 242056441, "node_id": "MDU6SXNzdWUyNDIwNTY0NDE=", "number": 11435, "title": "Feature request / possible bug: cannot take second derivative of a MaxPool", "user": {"login": "asross", "id": 1022564, "node_id": "MDQ6VXNlcjEwMjI1NjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1022564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asross", "html_url": "https://github.com/asross", "followers_url": "https://api.github.com/users/asross/followers", "following_url": "https://api.github.com/users/asross/following{/other_user}", "gists_url": "https://api.github.com/users/asross/gists{/gist_id}", "starred_url": "https://api.github.com/users/asross/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asross/subscriptions", "organizations_url": "https://api.github.com/users/asross/orgs", "repos_url": "https://api.github.com/users/asross/repos", "events_url": "https://api.github.com/users/asross/events{/privacy}", "received_events_url": "https://api.github.com/users/asross/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-11T13:54:56Z", "updated_at": "2017-07-12T06:05:38Z", "closed_at": "2017-07-12T06:05:38Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Mac OSX El Capitan</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: Binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: v1.0.0-65-g4763edf-dirty 1.0.1, but I've tested it on later versions too, and looking at the source code in master it doesn't seem like it's available</li>\n<li><strong>Python version</strong>: 3.5.1, but I've reproduced it on 2.7</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>If I understand correctly, MaxPool operations should be many-times differentiable, but in Tensorflow you can only differentiate them once, which makes it impossible to inspect second derivatives for CNNs or do <a href=\"http://yann.lecun.com/exdb/publis/pdf/drucker-lecun-91.pdf\" rel=\"nofollow\">double backpropogation</a>.</p>\n<h3>Source code / logs</h3>\n<p>You can reproduce it very simply this way:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\nX <span class=\"pl-k\">=</span> tf.Variable(tf.random_normal([<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">1</span>]))\nP <span class=\"pl-k\">=</span> tf.nn.max_pool(X, [<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">1</span>], [<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">1</span>], <span class=\"pl-s\"><span class=\"pl-pds\">'</span>SAME<span class=\"pl-pds\">'</span></span>)\ng1 <span class=\"pl-k\">=</span> tf.gradients(P, X)[<span class=\"pl-c1\">0</span>]\ng2 <span class=\"pl-k\">=</span> tf.gradients(g1, X)[<span class=\"pl-c1\">0</span>] <span class=\"pl-c\"><span class=\"pl-c\">#</span> this line fails</span></pre></div>\n<p>raises</p>\n<pre><code>LookupError: No gradient defined for operation 'gradients_17/MaxPool_10_grad/MaxPoolGrad' (op type: MaxPoolGrad)\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Mac OSX El Capitan\nTensorFlow installed from (source or binary): Binary\nTensorFlow version (use command below): v1.0.0-65-g4763edf-dirty 1.0.1, but I've tested it on later versions too, and looking at the source code in master it doesn't seem like it's available\nPython version: 3.5.1, but I've reproduced it on 2.7\n\nDescribe the problem\nIf I understand correctly, MaxPool operations should be many-times differentiable, but in Tensorflow you can only differentiate them once, which makes it impossible to inspect second derivatives for CNNs or do double backpropogation.\nSource code / logs\nYou can reproduce it very simply this way:\nimport tensorflow as tf\nX = tf.Variable(tf.random_normal([1,1,1,1]))\nP = tf.nn.max_pool(X, [1,1,1,1], [1,1,1,1], 'SAME')\ng1 = tf.gradients(P, X)[0]\ng2 = tf.gradients(g1, X)[0] # this line fails\nraises\nLookupError: No gradient defined for operation 'gradients_17/MaxPool_10_grad/MaxPoolGrad' (op type: MaxPoolGrad)", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Mac OSX El Capitan\r\n- **TensorFlow installed from (source or binary)**: Binary\r\n- **TensorFlow version (use command below)**: v1.0.0-65-g4763edf-dirty 1.0.1, but I've tested it on later versions too, and looking at the source code in master it doesn't seem like it's available\r\n- **Python version**: 3.5.1, but I've reproduced it on 2.7\r\n\r\n### Describe the problem\r\n\r\nIf I understand correctly, MaxPool operations should be many-times differentiable, but in Tensorflow you can only differentiate them once, which makes it impossible to inspect second derivatives for CNNs or do [double backpropogation](http://yann.lecun.com/exdb/publis/pdf/drucker-lecun-91.pdf).\r\n\r\n### Source code / logs\r\n\r\nYou can reproduce it very simply this way:\r\n```python\r\nimport tensorflow as tf\r\nX = tf.Variable(tf.random_normal([1,1,1,1]))\r\nP = tf.nn.max_pool(X, [1,1,1,1], [1,1,1,1], 'SAME')\r\ng1 = tf.gradients(P, X)[0]\r\ng2 = tf.gradients(g1, X)[0] # this line fails\r\n```\r\nraises\r\n```\r\nLookupError: No gradient defined for operation 'gradients_17/MaxPool_10_grad/MaxPoolGrad' (op type: MaxPoolGrad)\r\n```"}