{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17605", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17605/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17605/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17605/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/17605", "id": 304011848, "node_id": "MDExOlB1bGxSZXF1ZXN0MTc0MTMyNzYx", "number": 17605, "title": "MKL DNN: fix the TF1.6 speed issue by fixing MKL DNN LRN taking the optimum path", "user": {"login": "ashraf-bhuiyan", "id": 8062406, "node_id": "MDQ6VXNlcjgwNjI0MDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/8062406?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashraf-bhuiyan", "html_url": "https://github.com/ashraf-bhuiyan", "followers_url": "https://api.github.com/users/ashraf-bhuiyan/followers", "following_url": "https://api.github.com/users/ashraf-bhuiyan/following{/other_user}", "gists_url": "https://api.github.com/users/ashraf-bhuiyan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashraf-bhuiyan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashraf-bhuiyan/subscriptions", "organizations_url": "https://api.github.com/users/ashraf-bhuiyan/orgs", "repos_url": "https://api.github.com/users/ashraf-bhuiyan/repos", "events_url": "https://api.github.com/users/ashraf-bhuiyan/events{/privacy}", "received_events_url": "https://api.github.com/users/ashraf-bhuiyan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 419840263, "node_id": "MDU6TGFiZWw0MTk4NDAyNjM=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/awaiting%20testing%20(then%20merge)", "name": "awaiting testing (then merge)", "color": "c2e0c6", "default": false}, {"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-09T23:24:31Z", "updated_at": "2018-03-13T05:05:37Z", "closed_at": "2018-03-13T05:05:37Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/17605", "html_url": "https://github.com/tensorflow/tensorflow/pull/17605", "diff_url": "https://github.com/tensorflow/tensorflow/pull/17605.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/17605.patch"}, "body_html": "<p>There is a performance regression for TF 1.6 comparing to TF 1.5 for cifar 10. The root cause it cifar 10 uses depth radius = 4, for which MKL DNN takes unoptimized path. Thus we fix this issue by using following strategy:<br>\nIf the depth_radius of LRN is not 2, then MKL DNN takes unoptimized path. The unoptimized path is slow. Thus we dont rewrite the node  and use default Eigen. But for depth_radius=2, MKL DNN optimized<br>\npath is taken, i.e., eigen LRN node is rewritten by MKl DNN LRN node.</p>", "body_text": "There is a performance regression for TF 1.6 comparing to TF 1.5 for cifar 10. The root cause it cifar 10 uses depth radius = 4, for which MKL DNN takes unoptimized path. Thus we fix this issue by using following strategy:\nIf the depth_radius of LRN is not 2, then MKL DNN takes unoptimized path. The unoptimized path is slow. Thus we dont rewrite the node  and use default Eigen. But for depth_radius=2, MKL DNN optimized\npath is taken, i.e., eigen LRN node is rewritten by MKl DNN LRN node.", "body": "There is a performance regression for TF 1.6 comparing to TF 1.5 for cifar 10. The root cause it cifar 10 uses depth radius = 4, for which MKL DNN takes unoptimized path. Thus we fix this issue by using following strategy:\r\n If the depth_radius of LRN is not 2, then MKL DNN takes unoptimized path. The unoptimized path is slow. Thus we dont rewrite the node  and use default Eigen. But for depth_radius=2, MKL DNN optimized \r\npath is taken, i.e., eigen LRN node is rewritten by MKl DNN LRN node."}