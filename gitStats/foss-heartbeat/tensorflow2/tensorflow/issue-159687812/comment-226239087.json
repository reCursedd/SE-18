{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/226239087", "html_url": "https://github.com/tensorflow/tensorflow/issues/2788#issuecomment-226239087", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2788", "id": 226239087, "node_id": "MDEyOklzc3VlQ29tbWVudDIyNjIzOTA4Nw==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2016-06-15T16:15:59Z", "updated_at": "2016-06-15T16:15:59Z", "author_association": "CONTRIBUTOR", "body_html": "<p>(Reassigning to Benoit as my best guess is that it's an Eigen threadpool issue.)</p>\n<p>It might be a red herring, but the \"busy\" thread has a stack that includes the new Eigen threadpool, and perhaps it could be livelocking? <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1095328\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/dvyukov\">@dvyukov</a>, <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=16907534\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/rmlarsen\">@rmlarsen</a>, or <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6969686\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/benoitsteiner\">@benoitsteiner</a> would be best placed to comment on whether this is possible.</p>\n<p>Just for clarification, when you say \"virtual cores\" do you mean hyperthreads, or are you running in a virtualized environment (and if so, which one)?</p>\n<p>One possible workaround would be to build with the old Eigen threadpool. I believe all you need to do is add</p>\n<div class=\"highlight highlight-source-c++\"><pre>#<span class=\"pl-k\">define</span> <span class=\"pl-en\">EIGEN_USE_SIMPLE_THREAD_POOL</span></pre></div>\n<p>...wherever the Eigen threadpool is used. At the very least this would include <a href=\"https://github.com/tensorflow/tensorflow/blob/7644b3dd001355bf5e3734e541d9955277447601/tensorflow/core/lib/core/threadpool.cc#L18\">this line in <code>threadpool.cc</code></a>, but I'm not sure what others would need to be modified.</p>", "body_text": "(Reassigning to Benoit as my best guess is that it's an Eigen threadpool issue.)\nIt might be a red herring, but the \"busy\" thread has a stack that includes the new Eigen threadpool, and perhaps it could be livelocking? @dvyukov, @rmlarsen, or @benoitsteiner would be best placed to comment on whether this is possible.\nJust for clarification, when you say \"virtual cores\" do you mean hyperthreads, or are you running in a virtualized environment (and if so, which one)?\nOne possible workaround would be to build with the old Eigen threadpool. I believe all you need to do is add\n#define EIGEN_USE_SIMPLE_THREAD_POOL\n...wherever the Eigen threadpool is used. At the very least this would include this line in threadpool.cc, but I'm not sure what others would need to be modified.", "body": "(Reassigning to Benoit as my best guess is that it's an Eigen threadpool issue.)\n\nIt might be a red herring, but the \"busy\" thread has a stack that includes the new Eigen threadpool, and perhaps it could be livelocking? @dvyukov, @rmlarsen, or @benoitsteiner would be best placed to comment on whether this is possible.\n\nJust for clarification, when you say \"virtual cores\" do you mean hyperthreads, or are you running in a virtualized environment (and if so, which one)?\n\nOne possible workaround would be to build with the old Eigen threadpool. I believe all you need to do is add\n\n``` c++\n#define EIGEN_USE_SIMPLE_THREAD_POOL\n```\n\n...wherever the Eigen threadpool is used. At the very least this would include [this line in `threadpool.cc`](https://github.com/tensorflow/tensorflow/blob/7644b3dd001355bf5e3734e541d9955277447601/tensorflow/core/lib/core/threadpool.cc#L18), but I'm not sure what others would need to be modified.\n"}