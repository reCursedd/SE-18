{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/162728600", "html_url": "https://github.com/tensorflow/tensorflow/issues/418#issuecomment-162728600", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/418", "id": 162728600, "node_id": "MDEyOklzc3VlQ29tbWVudDE2MjcyODYwMA==", "user": {"login": "girving", "id": 70511, "node_id": "MDQ6VXNlcjcwNTEx", "avatar_url": "https://avatars1.githubusercontent.com/u/70511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/girving", "html_url": "https://github.com/girving", "followers_url": "https://api.github.com/users/girving/followers", "following_url": "https://api.github.com/users/girving/following{/other_user}", "gists_url": "https://api.github.com/users/girving/gists{/gist_id}", "starred_url": "https://api.github.com/users/girving/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/girving/subscriptions", "organizations_url": "https://api.github.com/users/girving/orgs", "repos_url": "https://api.github.com/users/girving/repos", "events_url": "https://api.github.com/users/girving/events{/privacy}", "received_events_url": "https://api.github.com/users/girving/received_events", "type": "User", "site_admin": false}, "created_at": "2015-12-08T01:30:45Z", "updated_at": "2015-12-08T01:30:45Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Upon further investigation, fixing (2) in an efficient way seems tricky.  The problem is that an optimizer step for two nested calls to <code>tf.gather</code> can't be efficient unless <code>tf.scatter</code> handles multiple index arguments.  Specifically, we'd need to make <code>IndexedSlices</code> accept multiple index arguments so that the gradient of <code>tf.gather</code> could build one <code>IndexedSlices</code> and then build a deeper one for the next <code>tf.gather</code> call.</p>\n<p>I'm going to leave this open as a bug and reference it from <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"116827263\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/206\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/206/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/206\">#206</a>.  Apologies that I won't have a fix for you soon.</p>", "body_text": "Upon further investigation, fixing (2) in an efficient way seems tricky.  The problem is that an optimizer step for two nested calls to tf.gather can't be efficient unless tf.scatter handles multiple index arguments.  Specifically, we'd need to make IndexedSlices accept multiple index arguments so that the gradient of tf.gather could build one IndexedSlices and then build a deeper one for the next tf.gather call.\nI'm going to leave this open as a bug and reference it from #206.  Apologies that I won't have a fix for you soon.", "body": "Upon further investigation, fixing (2) in an efficient way seems tricky.  The problem is that an optimizer step for two nested calls to `tf.gather` can't be efficient unless `tf.scatter` handles multiple index arguments.  Specifically, we'd need to make `IndexedSlices` accept multiple index arguments so that the gradient of `tf.gather` could build one `IndexedSlices` and then build a deeper one for the next `tf.gather` call.\n\nI'm going to leave this open as a bug and reference it from #206.  Apologies that I won't have a fix for you soon.\n"}