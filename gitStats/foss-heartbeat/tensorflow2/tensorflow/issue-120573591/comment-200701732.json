{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/200701732", "html_url": "https://github.com/tensorflow/tensorflow/issues/418#issuecomment-200701732", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/418", "id": 200701732, "node_id": "MDEyOklzc3VlQ29tbWVudDIwMDcwMTczMg==", "user": {"login": "tejaskhot", "id": 6690052, "node_id": "MDQ6VXNlcjY2OTAwNTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/6690052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tejaskhot", "html_url": "https://github.com/tejaskhot", "followers_url": "https://api.github.com/users/tejaskhot/followers", "following_url": "https://api.github.com/users/tejaskhot/following{/other_user}", "gists_url": "https://api.github.com/users/tejaskhot/gists{/gist_id}", "starred_url": "https://api.github.com/users/tejaskhot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tejaskhot/subscriptions", "organizations_url": "https://api.github.com/users/tejaskhot/orgs", "repos_url": "https://api.github.com/users/tejaskhot/repos", "events_url": "https://api.github.com/users/tejaskhot/events{/privacy}", "received_events_url": "https://api.github.com/users/tejaskhot/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-24T07:14:19Z", "updated_at": "2016-03-24T07:14:19Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3530212\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/sjperkins\">@sjperkins</a><br>\nIt doesn't seem to work with <code>tf.placeholder</code>. An example to reproduce the issue:</p>\n<pre><code>def train():\n    mat1 = np.ones((75000,50)).astype(np.float32)\n    idx = np.arange(100).astype(np.int32)\n    wts = np.ones((50,50)).astype(np.float32)\n\n    mat_1 = tf.Variable(mat1, name=\"mat_1\")\n    indices = tf.Variable(idx, name=\"indices\")\n    dot_1 = tf.gather(mat_1, indices)\n\n    W = tf.Variable(wts, name=\"W\")\n    dot_2 = tf.matmul(dot_1, W)\n\n    activation = tf.nn.softmax(dot_2)\n    output = -tf.log(activation)\n\n    row_indices = tf.placeholder(\"int32\", name=\"row_indices\")\n    col_indices = tf.placeholder(\"int32\", name=\"col_indices\")\n    flat_index = ravel_multi_index(output, [row_indices, col_indices])\n    data = tf.gather(tf.reshape(output, [-1]), flat_index)\n    return data\n\n\nrow_idx = np.arange(10).astype(np.int32)\ncol_idx = np.arange(15).astype(np.int32)\n\nsess = tf.Session()\ndata = train()\nsess.run(tf.initialize_all_variables())\nresult = sess.run(data, feed_dict={row_indices:row_idx, col_indices:col_idx})\nprint type(result), result.shape\n\n</code></pre>\n<p>Any ideas on how to adapt this if the indices are placeholders and not variables?<br>\nIt gets stuck on the call to <code>ravel_multi_index</code></p>", "body_text": "@sjperkins\nIt doesn't seem to work with tf.placeholder. An example to reproduce the issue:\ndef train():\n    mat1 = np.ones((75000,50)).astype(np.float32)\n    idx = np.arange(100).astype(np.int32)\n    wts = np.ones((50,50)).astype(np.float32)\n\n    mat_1 = tf.Variable(mat1, name=\"mat_1\")\n    indices = tf.Variable(idx, name=\"indices\")\n    dot_1 = tf.gather(mat_1, indices)\n\n    W = tf.Variable(wts, name=\"W\")\n    dot_2 = tf.matmul(dot_1, W)\n\n    activation = tf.nn.softmax(dot_2)\n    output = -tf.log(activation)\n\n    row_indices = tf.placeholder(\"int32\", name=\"row_indices\")\n    col_indices = tf.placeholder(\"int32\", name=\"col_indices\")\n    flat_index = ravel_multi_index(output, [row_indices, col_indices])\n    data = tf.gather(tf.reshape(output, [-1]), flat_index)\n    return data\n\n\nrow_idx = np.arange(10).astype(np.int32)\ncol_idx = np.arange(15).astype(np.int32)\n\nsess = tf.Session()\ndata = train()\nsess.run(tf.initialize_all_variables())\nresult = sess.run(data, feed_dict={row_indices:row_idx, col_indices:col_idx})\nprint type(result), result.shape\n\n\nAny ideas on how to adapt this if the indices are placeholders and not variables?\nIt gets stuck on the call to ravel_multi_index", "body": "@sjperkins \nIt doesn't seem to work with `tf.placeholder`. An example to reproduce the issue:\n\n```\ndef train():\n    mat1 = np.ones((75000,50)).astype(np.float32)\n    idx = np.arange(100).astype(np.int32)\n    wts = np.ones((50,50)).astype(np.float32)\n\n    mat_1 = tf.Variable(mat1, name=\"mat_1\")\n    indices = tf.Variable(idx, name=\"indices\")\n    dot_1 = tf.gather(mat_1, indices)\n\n    W = tf.Variable(wts, name=\"W\")\n    dot_2 = tf.matmul(dot_1, W)\n\n    activation = tf.nn.softmax(dot_2)\n    output = -tf.log(activation)\n\n    row_indices = tf.placeholder(\"int32\", name=\"row_indices\")\n    col_indices = tf.placeholder(\"int32\", name=\"col_indices\")\n    flat_index = ravel_multi_index(output, [row_indices, col_indices])\n    data = tf.gather(tf.reshape(output, [-1]), flat_index)\n    return data\n\n\nrow_idx = np.arange(10).astype(np.int32)\ncol_idx = np.arange(15).astype(np.int32)\n\nsess = tf.Session()\ndata = train()\nsess.run(tf.initialize_all_variables())\nresult = sess.run(data, feed_dict={row_indices:row_idx, col_indices:col_idx})\nprint type(result), result.shape\n\n```\n\nAny ideas on how to adapt this if the indices are placeholders and not variables?\nIt gets stuck on the call to `ravel_multi_index`\n"}