{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/64094859", "pull_request_review_id": null, "id": 64094859, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MDk0ODU5", "diff_hunk": "@@ -84,3 +86,49 @@ def exponential_decay(learning_rate, global_step, decay_steps, decay_rate,\n     if staircase:\n       p = math_ops.floor(p)\n     return math_ops.mul(learning_rate, math_ops.pow(decay_rate, p), name=name)\n+\n+def piecewise_constant(x, boundaries, values, name=None):\n+  \"\"\" Piecewise constant from boundaries and interval values.\n+  \n+  Example: use a learning rate that's 1.0 for the first 100000 steps, 0.5\n+    for steps 100001 to 110000, and 0.1 for any additional steps.\n+  \n+  ```python\n+  global_step = tf.Variable(0, trainable=False)\n+  boundaries = [100000, 110000]\n+  values = [1.0, 0.5, 0.1]\n+  learning_rate = tf.train.piecewise_constant(global_step, boundaries, values)\n+  \n+  # Later, whenever we perform an optimization step, we increment global_step.\n+  ```\n+  \n+  Args:\n+    x: A 0-D scalar Tensor. Must be one of the following types: `float32`,\n+    `float64`, `uint8`, `int8`, `int16`, `int32`, `int64`.\n+    boundaries: A list of `float`s or `int`s with strictly increasing entries.\n+    values: A list of `float`s or `int`s that specifies the values for the\n+      intervals defined by `boundaries`. (It should therefore have one more\n+      element than `boundaries`.", "path": "tensorflow/python/training/learning_rate_decay.py", "position": null, "original_position": 35, "commit_id": "917f3a71e2fa81257423109480d4a419fdeb9ac4", "original_commit_id": "93503e197d55260f96b88465e37550650ddb3b6e", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "body": "How about accepting a list of scalar tensors for each element of `boundaries` and `values`? We can then use `ops.convert_n_to_tensor()` internally, to avoid converting the scalars so many times, and reduce the number of nodes this function adds to the graph.\n\nNote that I think the elements of `boundaries` have to have the same dtype as `x`, and all elements of `values` must have the same type.\n", "created_at": "2016-05-20T19:28:02Z", "updated_at": "2016-05-24T17:50:20Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/2442#discussion_r64094859", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/2442", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/64094859"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/2442#discussion_r64094859"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/2442"}}, "body_html": "<p>How about accepting a list of scalar tensors for each element of <code>boundaries</code> and <code>values</code>? We can then use <code>ops.convert_n_to_tensor()</code> internally, to avoid converting the scalars so many times, and reduce the number of nodes this function adds to the graph.</p>\n<p>Note that I think the elements of <code>boundaries</code> have to have the same dtype as <code>x</code>, and all elements of <code>values</code> must have the same type.</p>", "body_text": "How about accepting a list of scalar tensors for each element of boundaries and values? We can then use ops.convert_n_to_tensor() internally, to avoid converting the scalars so many times, and reduce the number of nodes this function adds to the graph.\nNote that I think the elements of boundaries have to have the same dtype as x, and all elements of values must have the same type."}