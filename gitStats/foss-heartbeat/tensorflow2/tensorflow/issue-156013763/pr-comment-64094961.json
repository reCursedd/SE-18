{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/64094961", "pull_request_review_id": null, "id": 64094961, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MDk0OTYx", "diff_hunk": "@@ -72,6 +72,30 @@ def testVariables(self):\n       expected = .1 * 0.96**(100 // 3)\n       self.assertAllClose(decayed_lr.eval(), expected, 1e-6)\n \n+  def testPiecewiseConstant(self):\n+    with self.test_session():\n+      x = variables.Variable(-999)\n+      assign_100 = x.assign(100)\n+      assign_105 = x.assign(105)\n+      assign_110 = x.assign(110)\n+      assign_120 = x.assign(120)\n+      assign_999 = x.assign(999)\n+      pc = learning_rate_decay.piecewise_constant(x, [100, 110, 120],\n+                                                  [1.0, 0.1, 0.01, 0.001])\n+      \n+      variables.initialize_all_variables().run()\n+      self.assertAllClose(pc.eval(), 1.0, 1e-6)\n+      assign_100.op.run()\n+      self.assertAllClose(pc.eval(), 1.0, 1e-6)\n+      assign_105.op.run()\n+      self.assertAllClose(pc.eval(), 0.1, 1e-6)\n+      assign_110.op.run()\n+      self.assertAllClose(pc.eval(), 0.1, 1e-6)\n+      assign_120.op.run()\n+      self.assertAllClose(pc.eval(), 0.01, 1e-6)\n+      assign_999.op.run()\n+      self.assertAllClose(pc.eval(), 0.001, 1e-6)\n+", "path": "tensorflow/python/training/learning_rate_decay_test.py", "position": null, "original_position": 27, "commit_id": "917f3a71e2fa81257423109480d4a419fdeb9ac4", "original_commit_id": "93503e197d55260f96b88465e37550650ddb3b6e", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "body": "Can you add some tests for error conditions (e.g. mismatched types in the list of boundaries, values)?\n", "created_at": "2016-05-20T19:28:37Z", "updated_at": "2016-05-24T17:50:20Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/2442#discussion_r64094961", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/2442", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/64094961"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/2442#discussion_r64094961"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/2442"}}, "body_html": "<p>Can you add some tests for error conditions (e.g. mismatched types in the list of boundaries, values)?</p>", "body_text": "Can you add some tests for error conditions (e.g. mismatched types in the list of boundaries, values)?"}