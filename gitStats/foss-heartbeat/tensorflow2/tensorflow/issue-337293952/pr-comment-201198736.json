{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/201198736", "pull_request_review_id": 135652472, "id": 201198736, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTE5ODczNg==", "diff_hunk": "@@ -3117,7 +3117,7 @@ def maxout(inputs, num_units, axis=-1, scope=None):\n       raise ValueError('number of features({}) is not '\n                        'a multiple of num_units({})'.format(\n                            num_channels, num_units))\n-    shape[axis] = -1\n+    shape[axis] = num_units", "path": "tensorflow/contrib/layers/python/layers/layers.py", "position": 5, "original_position": 5, "commit_id": "eb6c0cbe460e6deafbe4252abed7e57bf9c4d133", "original_commit_id": "eb6c0cbe460e6deafbe4252abed7e57bf9c4d133", "user": {"login": "lygztq", "id": 23189027, "node_id": "MDQ6VXNlcjIzMTg5MDI3", "avatar_url": "https://avatars0.githubusercontent.com/u/23189027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lygztq", "html_url": "https://github.com/lygztq", "followers_url": "https://api.github.com/users/lygztq/followers", "following_url": "https://api.github.com/users/lygztq/following{/other_user}", "gists_url": "https://api.github.com/users/lygztq/gists{/gist_id}", "starred_url": "https://api.github.com/users/lygztq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lygztq/subscriptions", "organizations_url": "https://api.github.com/users/lygztq/orgs", "repos_url": "https://api.github.com/users/lygztq/repos", "events_url": "https://api.github.com/users/lygztq/events{/privacy}", "received_events_url": "https://api.github.com/users/lygztq/received_events", "type": "User", "site_admin": false}, "body": "Like this? I am not sure.\r\n```python\r\ninput_tensor = tf.placeholder(tf.float32, [None, 32, 32, 3], name=\"input_data\")\r\nwith tf.variable_scope('conv_layer'):\r\n    conv_out = tf.layers.conv2d(input_tensor, 10, (5,5), padding='same', name=\"conv\")\r\n    maxout_out = tf.contrib.layers.maxout(conv_out, 5, axis=3)\r\n#... some test code.\r\nself.assertEqual(maxout_out.get_shape().as_list()[3], 5, \"shape in maxout function failed\")\r\n```\r\n", "created_at": "2018-07-10T02:05:33Z", "updated_at": "2018-07-10T02:53:23Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/20455#discussion_r201198736", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/20455", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/201198736"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/20455#discussion_r201198736"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/20455"}}, "body_html": "<p>Like this? I am not sure.</p>\n<div class=\"highlight highlight-source-python\"><pre>input_tensor <span class=\"pl-k\">=</span> tf.placeholder(tf.float32, [<span class=\"pl-c1\">None</span>, <span class=\"pl-c1\">32</span>, <span class=\"pl-c1\">32</span>, <span class=\"pl-c1\">3</span>], <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>input_data<span class=\"pl-pds\">\"</span></span>)\n<span class=\"pl-k\">with</span> tf.variable_scope(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>conv_layer<span class=\"pl-pds\">'</span></span>):\n    conv_out <span class=\"pl-k\">=</span> tf.layers.conv2d(input_tensor, <span class=\"pl-c1\">10</span>, (<span class=\"pl-c1\">5</span>,<span class=\"pl-c1\">5</span>), <span class=\"pl-v\">padding</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>same<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>conv<span class=\"pl-pds\">\"</span></span>)\n    maxout_out <span class=\"pl-k\">=</span> tf.contrib.layers.maxout(conv_out, <span class=\"pl-c1\">5</span>, <span class=\"pl-v\">axis</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">3</span>)\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>... some test code.</span>\n<span class=\"pl-c1\">self</span>.assertEqual(maxout_out.get_shape().as_list()[<span class=\"pl-c1\">3</span>], <span class=\"pl-c1\">5</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>shape in maxout function failed<span class=\"pl-pds\">\"</span></span>)</pre></div>", "body_text": "Like this? I am not sure.\ninput_tensor = tf.placeholder(tf.float32, [None, 32, 32, 3], name=\"input_data\")\nwith tf.variable_scope('conv_layer'):\n    conv_out = tf.layers.conv2d(input_tensor, 10, (5,5), padding='same', name=\"conv\")\n    maxout_out = tf.contrib.layers.maxout(conv_out, 5, axis=3)\n#... some test code.\nself.assertEqual(maxout_out.get_shape().as_list()[3], 5, \"shape in maxout function failed\")", "in_reply_to_id": 201075409}