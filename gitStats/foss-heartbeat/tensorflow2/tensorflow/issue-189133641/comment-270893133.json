{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/270893133", "html_url": "https://github.com/tensorflow/tensorflow/issues/5598#issuecomment-270893133", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5598", "id": 270893133, "node_id": "MDEyOklzc3VlQ29tbWVudDI3MDg5MzEzMw==", "user": {"login": "nubbel", "id": 118781, "node_id": "MDQ6VXNlcjExODc4MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/118781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nubbel", "html_url": "https://github.com/nubbel", "followers_url": "https://api.github.com/users/nubbel/followers", "following_url": "https://api.github.com/users/nubbel/following{/other_user}", "gists_url": "https://api.github.com/users/nubbel/gists{/gist_id}", "starred_url": "https://api.github.com/users/nubbel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nubbel/subscriptions", "organizations_url": "https://api.github.com/users/nubbel/orgs", "repos_url": "https://api.github.com/users/nubbel/repos", "events_url": "https://api.github.com/users/nubbel/events{/privacy}", "received_events_url": "https://api.github.com/users/nubbel/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-06T12:18:58Z", "updated_at": "2017-01-06T12:18:58Z", "author_association": "NONE", "body_html": "<p>I've build a <a href=\"https://github.com/nubbel/tensorflow_serving_client-ruby\">Ruby client library</a>, because I need to perform predictions from a Rails app.</p>\n<p>My client code looks like that:</p>\n<div class=\"highlight highlight-source-ruby\"><pre>req <span class=\"pl-k\">=</span> <span class=\"pl-c1\">Tensorflow</span>::<span class=\"pl-c1\">Serving</span>::<span class=\"pl-c1\">PredictRequest</span>.<span class=\"pl-k\">new</span>\nreq.model_spec <span class=\"pl-k\">=</span> <span class=\"pl-c1\">Tensorflow</span>::<span class=\"pl-c1\">Serving</span>::<span class=\"pl-c1\">ModelSpec</span>.<span class=\"pl-k\">new</span> <span class=\"pl-c1\">name:</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>targeting_deep<span class=\"pl-pds\">'</span></span>\n\nexample <span class=\"pl-k\">=</span> <span class=\"pl-c1\">Tensorflow</span>::<span class=\"pl-c1\">Example</span>.<span class=\"pl-k\">new</span> <span class=\"pl-c1\">features:</span> <span class=\"pl-c1\">Tensorflow</span>::<span class=\"pl-c1\">Features</span>.<span class=\"pl-k\">new</span>\nexample.features.feature[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>age<span class=\"pl-pds\">'</span></span>] <span class=\"pl-k\">=</span> <span class=\"pl-c1\">Tensorflow</span>::<span class=\"pl-c1\">Feature</span>.<span class=\"pl-k\">new</span> <span class=\"pl-c1\">float_list:</span> <span class=\"pl-c1\">Tensorflow</span>::<span class=\"pl-c1\">FloatList</span>.<span class=\"pl-k\">new</span>(<span class=\"pl-c1\">value:</span> [customer.age <span class=\"pl-k\">||</span> <span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>])\nexample.features.feature[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>gender<span class=\"pl-pds\">'</span></span>] <span class=\"pl-k\">=</span> <span class=\"pl-c1\">Tensorflow</span>::<span class=\"pl-c1\">Feature</span>.<span class=\"pl-k\">new</span> <span class=\"pl-c1\">bytes_list:</span> <span class=\"pl-c1\">Tensorflow</span>::<span class=\"pl-c1\">BytesList</span>.<span class=\"pl-k\">new</span>(<span class=\"pl-c1\">value:</span> [customer.gender <span class=\"pl-k\">||</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>n/a<span class=\"pl-pds\">'</span></span>])\nexample.features.feature[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>state<span class=\"pl-pds\">'</span></span>] <span class=\"pl-k\">=</span> <span class=\"pl-c1\">Tensorflow</span>::<span class=\"pl-c1\">Feature</span>.<span class=\"pl-k\">new</span> <span class=\"pl-c1\">bytes_list:</span> <span class=\"pl-c1\">Tensorflow</span>::<span class=\"pl-c1\">BytesList</span>.<span class=\"pl-k\">new</span>(<span class=\"pl-c1\">value:</span> [customer.gender <span class=\"pl-k\">||</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>n/a<span class=\"pl-pds\">'</span></span>])\nexample.features.feature[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>purchase_recency<span class=\"pl-pds\">'</span></span>] <span class=\"pl-k\">=</span> <span class=\"pl-c1\">Tensorflow</span>::<span class=\"pl-c1\">Feature</span>.<span class=\"pl-k\">new</span> <span class=\"pl-c1\">float_list:</span> <span class=\"pl-c1\">Tensorflow</span>::<span class=\"pl-c1\">FloatList</span>.<span class=\"pl-k\">new</span>(<span class=\"pl-c1\">value:</span> [customer.purchase_recency <span class=\"pl-k\">||</span> <span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>])\nexample.features.feature[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>purchase_frequency<span class=\"pl-pds\">'</span></span>] <span class=\"pl-k\">=</span> <span class=\"pl-c1\">Tensorflow</span>::<span class=\"pl-c1\">Feature</span>.<span class=\"pl-k\">new</span> <span class=\"pl-c1\">float_list:</span> <span class=\"pl-c1\">Tensorflow</span>::<span class=\"pl-c1\">FloatList</span>.<span class=\"pl-k\">new</span>(<span class=\"pl-c1\">value:</span> [customer.purchase_frequency <span class=\"pl-k\">||</span> <span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>])\nexample.features.feature[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>monetary_value<span class=\"pl-pds\">'</span></span>] <span class=\"pl-k\">=</span> <span class=\"pl-c1\">Tensorflow</span>::<span class=\"pl-c1\">Feature</span>.<span class=\"pl-k\">new</span> <span class=\"pl-c1\">float_list:</span> <span class=\"pl-c1\">Tensorflow</span>::<span class=\"pl-c1\">FloatList</span>.<span class=\"pl-k\">new</span>(<span class=\"pl-c1\">value:</span> [customer.monetary_value <span class=\"pl-k\">||</span> <span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>])\nexample.features.feature[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>interaction_recency<span class=\"pl-pds\">'</span></span>] <span class=\"pl-k\">=</span> <span class=\"pl-c1\">Tensorflow</span>::<span class=\"pl-c1\">Feature</span>.<span class=\"pl-k\">new</span> <span class=\"pl-c1\">float_list:</span> <span class=\"pl-c1\">Tensorflow</span>::<span class=\"pl-c1\">FloatList</span>.<span class=\"pl-k\">new</span>(<span class=\"pl-c1\">value:</span> [customer.interaction_recency <span class=\"pl-k\">||</span> <span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>])\nexample.features.feature[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>interaction_frequency<span class=\"pl-pds\">'</span></span>] <span class=\"pl-k\">=</span> <span class=\"pl-c1\">Tensorflow</span>::<span class=\"pl-c1\">Feature</span>.<span class=\"pl-k\">new</span> <span class=\"pl-c1\">float_list:</span> <span class=\"pl-c1\">Tensorflow</span>::<span class=\"pl-c1\">FloatList</span>.<span class=\"pl-k\">new</span>(<span class=\"pl-c1\">value:</span> [customer.interaction_frequency <span class=\"pl-k\">||</span> <span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>])\n\nserialized_example <span class=\"pl-k\">=</span> <span class=\"pl-c1\">Tensorflow</span>::<span class=\"pl-c1\">Example</span>.encode example\n\nreq.inputs[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>inputs<span class=\"pl-pds\">'</span></span>] <span class=\"pl-k\">=</span> <span class=\"pl-c1\">Tensorflow</span>::<span class=\"pl-c1\">TensorProto</span>.<span class=\"pl-k\">new</span>(\n  <span class=\"pl-c1\">string_val:</span> [serialized_example],\n  <span class=\"pl-c1\">tensor_shape:</span> <span class=\"pl-c1\">Tensorflow</span>::<span class=\"pl-c1\">TensorShapeProto</span>.<span class=\"pl-k\">new</span>(<span class=\"pl-c1\">dim:</span> [<span class=\"pl-c1\">Tensorflow</span>::<span class=\"pl-c1\">TensorShapeProto</span>::<span class=\"pl-c1\">Dim</span>.<span class=\"pl-k\">new</span>(<span class=\"pl-c1\">size:</span> <span class=\"pl-c1\">1</span>)]),\n  <span class=\"pl-c1\">dtype:</span> <span class=\"pl-c1\">Tensorflow</span>::<span class=\"pl-c1\">DataType</span>::<span class=\"pl-c1\">DT_STRING</span>\n)\n\nstub <span class=\"pl-k\">=</span> <span class=\"pl-c1\">Tensorflow</span>::<span class=\"pl-c1\">Serving</span>::<span class=\"pl-c1\">PredictionService</span>::<span class=\"pl-c1\">Stub</span>.<span class=\"pl-k\">new</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>model-server:8500<span class=\"pl-pds\">'</span></span>, <span class=\"pl-c1\">:this_channel_is_insecure</span>)\nres <span class=\"pl-k\">=</span> stub.predict req\nres.outputs</pre></div>\n<p>It should be straightforward to translate that to python.</p>", "body_text": "I've build a Ruby client library, because I need to perform predictions from a Rails app.\nMy client code looks like that:\nreq = Tensorflow::Serving::PredictRequest.new\nreq.model_spec = Tensorflow::Serving::ModelSpec.new name: 'targeting_deep'\n\nexample = Tensorflow::Example.new features: Tensorflow::Features.new\nexample.features.feature['age'] = Tensorflow::Feature.new float_list: Tensorflow::FloatList.new(value: [customer.age || -1])\nexample.features.feature['gender'] = Tensorflow::Feature.new bytes_list: Tensorflow::BytesList.new(value: [customer.gender || 'n/a'])\nexample.features.feature['state'] = Tensorflow::Feature.new bytes_list: Tensorflow::BytesList.new(value: [customer.gender || 'n/a'])\nexample.features.feature['purchase_recency'] = Tensorflow::Feature.new float_list: Tensorflow::FloatList.new(value: [customer.purchase_recency || -1])\nexample.features.feature['purchase_frequency'] = Tensorflow::Feature.new float_list: Tensorflow::FloatList.new(value: [customer.purchase_frequency || -1])\nexample.features.feature['monetary_value'] = Tensorflow::Feature.new float_list: Tensorflow::FloatList.new(value: [customer.monetary_value || -1])\nexample.features.feature['interaction_recency'] = Tensorflow::Feature.new float_list: Tensorflow::FloatList.new(value: [customer.interaction_recency || -1])\nexample.features.feature['interaction_frequency'] = Tensorflow::Feature.new float_list: Tensorflow::FloatList.new(value: [customer.interaction_frequency || -1])\n\nserialized_example = Tensorflow::Example.encode example\n\nreq.inputs['inputs'] = Tensorflow::TensorProto.new(\n  string_val: [serialized_example],\n  tensor_shape: Tensorflow::TensorShapeProto.new(dim: [Tensorflow::TensorShapeProto::Dim.new(size: 1)]),\n  dtype: Tensorflow::DataType::DT_STRING\n)\n\nstub = Tensorflow::Serving::PredictionService::Stub.new('model-server:8500', :this_channel_is_insecure)\nres = stub.predict req\nres.outputs\nIt should be straightforward to translate that to python.", "body": "I've build a [Ruby client library](https://github.com/nubbel/tensorflow_serving_client-ruby), because I need to perform predictions from a Rails app.\r\n\r\nMy client code looks like that:\r\n```ruby\r\nreq = Tensorflow::Serving::PredictRequest.new\r\nreq.model_spec = Tensorflow::Serving::ModelSpec.new name: 'targeting_deep'\r\n\r\nexample = Tensorflow::Example.new features: Tensorflow::Features.new\r\nexample.features.feature['age'] = Tensorflow::Feature.new float_list: Tensorflow::FloatList.new(value: [customer.age || -1])\r\nexample.features.feature['gender'] = Tensorflow::Feature.new bytes_list: Tensorflow::BytesList.new(value: [customer.gender || 'n/a'])\r\nexample.features.feature['state'] = Tensorflow::Feature.new bytes_list: Tensorflow::BytesList.new(value: [customer.gender || 'n/a'])\r\nexample.features.feature['purchase_recency'] = Tensorflow::Feature.new float_list: Tensorflow::FloatList.new(value: [customer.purchase_recency || -1])\r\nexample.features.feature['purchase_frequency'] = Tensorflow::Feature.new float_list: Tensorflow::FloatList.new(value: [customer.purchase_frequency || -1])\r\nexample.features.feature['monetary_value'] = Tensorflow::Feature.new float_list: Tensorflow::FloatList.new(value: [customer.monetary_value || -1])\r\nexample.features.feature['interaction_recency'] = Tensorflow::Feature.new float_list: Tensorflow::FloatList.new(value: [customer.interaction_recency || -1])\r\nexample.features.feature['interaction_frequency'] = Tensorflow::Feature.new float_list: Tensorflow::FloatList.new(value: [customer.interaction_frequency || -1])\r\n\r\nserialized_example = Tensorflow::Example.encode example\r\n\r\nreq.inputs['inputs'] = Tensorflow::TensorProto.new(\r\n  string_val: [serialized_example],\r\n  tensor_shape: Tensorflow::TensorShapeProto.new(dim: [Tensorflow::TensorShapeProto::Dim.new(size: 1)]),\r\n  dtype: Tensorflow::DataType::DT_STRING\r\n)\r\n\r\nstub = Tensorflow::Serving::PredictionService::Stub.new('model-server:8500', :this_channel_is_insecure)\r\nres = stub.predict req\r\nres.outputs\r\n```\r\n\r\nIt should be straightforward to translate that to python."}