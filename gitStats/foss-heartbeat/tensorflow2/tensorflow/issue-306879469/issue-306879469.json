{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17860", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17860/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17860/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17860/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17860", "id": 306879469, "node_id": "MDU6SXNzdWUzMDY4Nzk0Njk=", "number": 17860, "title": "Failed assert in the TF native code kills JVM", "user": {"login": "sabi0", "id": 11509875, "node_id": "MDQ6VXNlcjExNTA5ODc1", "avatar_url": "https://avatars3.githubusercontent.com/u/11509875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sabi0", "html_url": "https://github.com/sabi0", "followers_url": "https://api.github.com/users/sabi0/followers", "following_url": "https://api.github.com/users/sabi0/following{/other_user}", "gists_url": "https://api.github.com/users/sabi0/gists{/gist_id}", "starred_url": "https://api.github.com/users/sabi0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sabi0/subscriptions", "organizations_url": "https://api.github.com/users/sabi0/orgs", "repos_url": "https://api.github.com/users/sabi0/repos", "events_url": "https://api.github.com/users/sabi0/events{/privacy}", "received_events_url": "https://api.github.com/users/sabi0/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}], "state": "open", "locked": false, "assignee": {"login": "bignamehyp", "id": 3474655, "node_id": "MDQ6VXNlcjM0NzQ2NTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3474655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bignamehyp", "html_url": "https://github.com/bignamehyp", "followers_url": "https://api.github.com/users/bignamehyp/followers", "following_url": "https://api.github.com/users/bignamehyp/following{/other_user}", "gists_url": "https://api.github.com/users/bignamehyp/gists{/gist_id}", "starred_url": "https://api.github.com/users/bignamehyp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bignamehyp/subscriptions", "organizations_url": "https://api.github.com/users/bignamehyp/orgs", "repos_url": "https://api.github.com/users/bignamehyp/repos", "events_url": "https://api.github.com/users/bignamehyp/events{/privacy}", "received_events_url": "https://api.github.com/users/bignamehyp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bignamehyp", "id": 3474655, "node_id": "MDQ6VXNlcjM0NzQ2NTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3474655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bignamehyp", "html_url": "https://github.com/bignamehyp", "followers_url": "https://api.github.com/users/bignamehyp/followers", "following_url": "https://api.github.com/users/bignamehyp/following{/other_user}", "gists_url": "https://api.github.com/users/bignamehyp/gists{/gist_id}", "starred_url": "https://api.github.com/users/bignamehyp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bignamehyp/subscriptions", "organizations_url": "https://api.github.com/users/bignamehyp/orgs", "repos_url": "https://api.github.com/users/bignamehyp/repos", "events_url": "https://api.github.com/users/bignamehyp/events{/privacy}", "received_events_url": "https://api.github.com/users/bignamehyp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2018-03-20T14:04:14Z", "updated_at": "2018-11-22T18:54:51Z", "closed_at": null, "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Windows 7, Java 1.8.0_161 x64</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binaries downloaded from Maven repo</li>\n<li><strong>TensorFlow version (use command below)</strong>: both org.tensorflow:tensorflow:1.4.0 and org.tensorflow:tensorflow:1.5.0</li>\n<li><strong>Python version</strong>: N/A</li>\n<li><strong>Bazel version (if compiling from source)</strong>: N/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: N/A</li>\n<li><strong>CUDA/cuDNN version</strong>: N/A</li>\n<li><strong>GPU model and memory</strong>: N/A</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I am running some experiments calling TensorFlow from Java.<br>\nAnd in case my code hits some assertion in the TF native code the JVM terminates immediately.</p>\n<p>This I believe closes the door for running TensorFlow in any kind of Java server environment.</p>\n<p>Instead the internal assertions should be propagated to JNI layer and thrown as normal Java exceptions (<code>IllegalStateException</code>, <code>AssertionError</code> and the likes).</p>\n<h3>Source code / logs</h3>\n<p>Here are two cases of the assertions I ran into yesterday with TF 1.4.0</p>\n<pre><code>2018-03-19 17:56:00.364932: F .\\tensorflow/core/lib/core/refcount.h:82] Check failed: ref_.load() &gt;= 1 (0 vs. 1)\n\n2018-03-19 18:30:22.390146: F .\\tensorflow/core/framework/tensor_shape.h:130] Check failed: static_cast&lt;uint32&gt;(dt) &lt; 256u (374 vs. 256)\n</code></pre>\n<p>The errors above are reproducible more or less consistently when using the same input <code>Tensor&lt;Float&gt;</code> in three different <code>Graph</code>'s sequentially.<br>\nIt it probably not the right way to do that. But the issue in general still stands - assertions in the native code must not kill the hosting JVM.</p>\n<p>I've been trying to reproduce the problem in an isolated minimal test project. But hasn't been able to do that so far. I believe however that this is not strictly necessary to illustrate the core problem.<br>\nIt should be possible to reproduce the JVM death by adding some \"always fail\" assertion to the TF native code.</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 7, Java 1.8.0_161 x64\nTensorFlow installed from (source or binary): binaries downloaded from Maven repo\nTensorFlow version (use command below): both org.tensorflow:tensorflow:1.4.0 and org.tensorflow:tensorflow:1.5.0\nPython version: N/A\nBazel version (if compiling from source): N/A\nGCC/Compiler version (if compiling from source): N/A\nCUDA/cuDNN version: N/A\nGPU model and memory: N/A\nExact command to reproduce:\n\nDescribe the problem\nI am running some experiments calling TensorFlow from Java.\nAnd in case my code hits some assertion in the TF native code the JVM terminates immediately.\nThis I believe closes the door for running TensorFlow in any kind of Java server environment.\nInstead the internal assertions should be propagated to JNI layer and thrown as normal Java exceptions (IllegalStateException, AssertionError and the likes).\nSource code / logs\nHere are two cases of the assertions I ran into yesterday with TF 1.4.0\n2018-03-19 17:56:00.364932: F .\\tensorflow/core/lib/core/refcount.h:82] Check failed: ref_.load() >= 1 (0 vs. 1)\n\n2018-03-19 18:30:22.390146: F .\\tensorflow/core/framework/tensor_shape.h:130] Check failed: static_cast<uint32>(dt) < 256u (374 vs. 256)\n\nThe errors above are reproducible more or less consistently when using the same input Tensor<Float> in three different Graph's sequentially.\nIt it probably not the right way to do that. But the issue in general still stands - assertions in the native code must not kill the hosting JVM.\nI've been trying to reproduce the problem in an isolated minimal test project. But hasn't been able to do that so far. I believe however that this is not strictly necessary to illustrate the core problem.\nIt should be possible to reproduce the JVM death by adding some \"always fail\" assertion to the TF native code.", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 7, Java 1.8.0_161 x64\r\n- **TensorFlow installed from (source or binary)**: binaries downloaded from Maven repo\r\n- **TensorFlow version (use command below)**: both org.tensorflow:tensorflow:1.4.0 and org.tensorflow:tensorflow:1.5.0\r\n- **Python version**: N/A\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**:\r\n\r\n### Describe the problem\r\n\r\nI am running some experiments calling TensorFlow from Java.\r\nAnd in case my code hits some assertion in the TF native code the JVM terminates immediately.\r\n\r\nThis I believe closes the door for running TensorFlow in any kind of Java server environment.\r\n\r\nInstead the internal assertions should be propagated to JNI layer and thrown as normal Java exceptions (`IllegalStateException`, `AssertionError` and the likes).\r\n\r\n### Source code / logs\r\n\r\nHere are two cases of the assertions I ran into yesterday with TF 1.4.0\r\n\r\n```\r\n2018-03-19 17:56:00.364932: F .\\tensorflow/core/lib/core/refcount.h:82] Check failed: ref_.load() >= 1 (0 vs. 1)\r\n\r\n2018-03-19 18:30:22.390146: F .\\tensorflow/core/framework/tensor_shape.h:130] Check failed: static_cast<uint32>(dt) < 256u (374 vs. 256)\r\n```\r\n\r\nThe errors above are reproducible more or less consistently when using the same input `Tensor<Float>` in three different `Graph`'s sequentially.\r\nIt it probably not the right way to do that. But the issue in general still stands - assertions in the native code must not kill the hosting JVM.\r\n\r\nI've been trying to reproduce the problem in an isolated minimal test project. But hasn't been able to do that so far. I believe however that this is not strictly necessary to illustrate the core problem.\r\nIt should be possible to reproduce the JVM death by adding some \"always fail\" assertion to the TF native code."}