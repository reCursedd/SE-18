{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18242", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18242/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18242/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18242/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18242", "id": 311349641, "node_id": "MDU6SXNzdWUzMTEzNDk2NDE=", "number": 18242, "title": "Make tf.train.Scaffold._default_local_init_op() a public static method?", "user": {"login": "dthkao", "id": 11166458, "node_id": "MDQ6VXNlcjExMTY2NDU4", "avatar_url": "https://avatars1.githubusercontent.com/u/11166458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dthkao", "html_url": "https://github.com/dthkao", "followers_url": "https://api.github.com/users/dthkao/followers", "following_url": "https://api.github.com/users/dthkao/following{/other_user}", "gists_url": "https://api.github.com/users/dthkao/gists{/gist_id}", "starred_url": "https://api.github.com/users/dthkao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dthkao/subscriptions", "organizations_url": "https://api.github.com/users/dthkao/orgs", "repos_url": "https://api.github.com/users/dthkao/repos", "events_url": "https://api.github.com/users/dthkao/events{/privacy}", "received_events_url": "https://api.github.com/users/dthkao/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "martinwicke", "id": 577277, "node_id": "MDQ6VXNlcjU3NzI3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/577277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinwicke", "html_url": "https://github.com/martinwicke", "followers_url": "https://api.github.com/users/martinwicke/followers", "following_url": "https://api.github.com/users/martinwicke/following{/other_user}", "gists_url": "https://api.github.com/users/martinwicke/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinwicke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinwicke/subscriptions", "organizations_url": "https://api.github.com/users/martinwicke/orgs", "repos_url": "https://api.github.com/users/martinwicke/repos", "events_url": "https://api.github.com/users/martinwicke/events{/privacy}", "received_events_url": "https://api.github.com/users/martinwicke/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "martinwicke", "id": 577277, "node_id": "MDQ6VXNlcjU3NzI3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/577277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinwicke", "html_url": "https://github.com/martinwicke", "followers_url": "https://api.github.com/users/martinwicke/followers", "following_url": "https://api.github.com/users/martinwicke/following{/other_user}", "gists_url": "https://api.github.com/users/martinwicke/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinwicke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinwicke/subscriptions", "organizations_url": "https://api.github.com/users/martinwicke/orgs", "repos_url": "https://api.github.com/users/martinwicke/repos", "events_url": "https://api.github.com/users/martinwicke/events{/privacy}", "received_events_url": "https://api.github.com/users/martinwicke/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-04-04T18:54:30Z", "updated_at": "2018-04-16T02:11:26Z", "closed_at": "2018-04-16T02:11:26Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Please go to Stack Overflow for help and support:</p>\n<p><a href=\"https://stackoverflow.com/questions/tagged/tensorflow\" rel=\"nofollow\">https://stackoverflow.com/questions/tagged/tensorflow</a></p>\n<p>If you open a GitHub issue, here is our policy:</p>\n<ol>\n<li>It must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).</li>\n<li>The form below must be filled out.</li>\n<li>It shouldn't be a TensorBoard issue. Those go <a href=\"https://github.com/tensorflow/tensorboard/issues\">here</a>.</li>\n</ol>\n<p><strong>Here's why we have that policy</strong>: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.</p>\n<hr>\n<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yep</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Debian Rolling</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: source</li>\n<li><strong>TensorFlow version (use command below)</strong>:  N/A</li>\n<li><strong>Python version</strong>: 2.7.13</li>\n<li><strong>Bazel version (if compiling from source)</strong>:  N/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: N/A</li>\n<li><strong>CUDA/cuDNN version</strong>: N/A</li>\n<li><strong>GPU model and memory</strong>: N/A</li>\n<li><strong>Exact command to reproduce</strong>: N/A</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>This is a continuation in spirit of Issue <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"244643883\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/11665\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/11665/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/11665\">#11665</a>, but could we expose tf.train.Scaffold._default_local_init_op() as a <strong>public</strong> static method? This would make it easier in init_fn/init_op/local_init_op to add specific local op initializers to the existing defaults instead of reproducing the logic.</p>\n<p>For example:</p>\n<pre><code>    local_init_op = tf.group(\n        tf.train.Scaffold.default_local_init_op(),\n        tf.variables_initializer([some_local_var]))\n    scaffold = tf.train.Scaffold(\n        local_init_op=local_init_op,\n        ready_for_local_init_op=tf.report_uninitialized_variables(\n            vars_to_load),\n        saver=tf.train.Saver(vars_to_load))\n</code></pre>", "body_text": "Please go to Stack Overflow for help and support:\nhttps://stackoverflow.com/questions/tagged/tensorflow\nIf you open a GitHub issue, here is our policy:\n\nIt must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).\nThe form below must be filled out.\nIt shouldn't be a TensorBoard issue. Those go here.\n\nHere's why we have that policy: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\n\nSystem information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yep\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Debian Rolling\nTensorFlow installed from (source or binary): source\nTensorFlow version (use command below):  N/A\nPython version: 2.7.13\nBazel version (if compiling from source):  N/A\nGCC/Compiler version (if compiling from source): N/A\nCUDA/cuDNN version: N/A\nGPU model and memory: N/A\nExact command to reproduce: N/A\n\nDescribe the problem\nThis is a continuation in spirit of Issue #11665, but could we expose tf.train.Scaffold._default_local_init_op() as a public static method? This would make it easier in init_fn/init_op/local_init_op to add specific local op initializers to the existing defaults instead of reproducing the logic.\nFor example:\n    local_init_op = tf.group(\n        tf.train.Scaffold.default_local_init_op(),\n        tf.variables_initializer([some_local_var]))\n    scaffold = tf.train.Scaffold(\n        local_init_op=local_init_op,\n        ready_for_local_init_op=tf.report_uninitialized_variables(\n            vars_to_load),\n        saver=tf.train.Saver(vars_to_load))", "body": "Please go to Stack Overflow for help and support:\r\n\r\nhttps://stackoverflow.com/questions/tagged/tensorflow\r\n\r\nIf you open a GitHub issue, here is our policy:\r\n\r\n1. It must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).\r\n2. The form below must be filled out.\r\n3. It shouldn't be a TensorBoard issue. Those go [here](https://github.com/tensorflow/tensorboard/issues).\r\n\r\n**Here's why we have that policy**: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yep\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Debian Rolling\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**:  N/A\r\n- **Python version**: 2.7.13\r\n- **Bazel version (if compiling from source)**:  N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: N/A\r\n\r\n### Describe the problem\r\n\r\nThis is a continuation in spirit of Issue #11665, but could we expose tf.train.Scaffold._default_local_init_op() as a **public** static method? This would make it easier in init_fn/init_op/local_init_op to add specific local op initializers to the existing defaults instead of reproducing the logic.\r\n\r\nFor example:\r\n```\r\n    local_init_op = tf.group(\r\n        tf.train.Scaffold.default_local_init_op(),\r\n        tf.variables_initializer([some_local_var]))\r\n    scaffold = tf.train.Scaffold(\r\n        local_init_op=local_init_op,\r\n        ready_for_local_init_op=tf.report_uninitialized_variables(\r\n            vars_to_load),\r\n        saver=tf.train.Saver(vars_to_load))\r\n```"}