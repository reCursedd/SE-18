{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/161432211", "pull_request_review_id": 88719155, "id": 161432211, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MTQzMjIxMQ==", "diff_hunk": "@@ -68,7 +68,29 @@ bool ReadRawFloatFileToComplexVector(\n   std::vector<std::complex<double> > data_row;\n   int row_counter = 0;\n   int offset = 0;\n+  char arr[4];\n   const int end = data_string.size();\n+#if __BYTE_ORDER__ == __ORDER_BIG_ENDIAN__", "path": "tensorflow/core/kernels/spectrogram_test_utils.cc", "position": null, "original_position": 6, "commit_id": "b2adc77c578bc44a895dfdb5ca63be2a686ef0a7", "original_commit_id": "bbdd966581370316ee9bd5e2a2c7430e2e60ef9c", "user": {"login": "namrata-ibm", "id": 21953668, "node_id": "MDQ6VXNlcjIxOTUzNjY4", "avatar_url": "https://avatars3.githubusercontent.com/u/21953668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/namrata-ibm", "html_url": "https://github.com/namrata-ibm", "followers_url": "https://api.github.com/users/namrata-ibm/followers", "following_url": "https://api.github.com/users/namrata-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/namrata-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/namrata-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/namrata-ibm/subscriptions", "organizations_url": "https://api.github.com/users/namrata-ibm/orgs", "repos_url": "https://api.github.com/users/namrata-ibm/repos", "events_url": "https://api.github.com/users/namrata-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/namrata-ibm/received_events", "type": "User", "site_admin": false}, "body": "@jhseu, Thank you for your feedback. That would involve check for endianness inside [while loop](https://github.com/linux-on-ibm-z/tensorflow/blob/bbdd966581370316ee9bd5e2a2c7430e2e60ef9c/tensorflow/core/kernels/spectrogram_test_utils.cc#L94). To avoid this unnecessary check at every iteration, I moved it above the while loop(Also, this ensures LE code remains untouched). Do let me know, if you still feel I need to make the change.", "created_at": "2018-01-15T05:12:50Z", "updated_at": "2018-01-17T09:03:27Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/14569#discussion_r161432211", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/14569", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/161432211"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/14569#discussion_r161432211"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/14569"}}, "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=170179\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jhseu\">@jhseu</a>, Thank you for your feedback. That would involve check for endianness inside <a href=\"https://github.com/linux-on-ibm-z/tensorflow/blob/bbdd966581370316ee9bd5e2a2c7430e2e60ef9c/tensorflow/core/kernels/spectrogram_test_utils.cc#L94\">while loop</a>. To avoid this unnecessary check at every iteration, I moved it above the while loop(Also, this ensures LE code remains untouched). Do let me know, if you still feel I need to make the change.</p>", "body_text": "@jhseu, Thank you for your feedback. That would involve check for endianness inside while loop. To avoid this unnecessary check at every iteration, I moved it above the while loop(Also, this ensures LE code remains untouched). Do let me know, if you still feel I need to make the change.", "in_reply_to_id": 161298174}