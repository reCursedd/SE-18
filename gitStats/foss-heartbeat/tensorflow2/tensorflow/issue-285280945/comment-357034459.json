{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/357034459", "html_url": "https://github.com/tensorflow/tensorflow/pull/15762#issuecomment-357034459", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15762", "id": 357034459, "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzAzNDQ1OQ==", "user": {"login": "gunan", "id": 7946809, "node_id": "MDQ6VXNlcjc5NDY4MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7946809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gunan", "html_url": "https://github.com/gunan", "followers_url": "https://api.github.com/users/gunan/followers", "following_url": "https://api.github.com/users/gunan/following{/other_user}", "gists_url": "https://api.github.com/users/gunan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gunan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gunan/subscriptions", "organizations_url": "https://api.github.com/users/gunan/orgs", "repos_url": "https://api.github.com/users/gunan/repos", "events_url": "https://api.github.com/users/gunan/events{/privacy}", "received_events_url": "https://api.github.com/users/gunan/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-11T19:26:23Z", "updated_at": "2018-01-11T19:26:23Z", "author_association": "MEMBER", "body_html": "<p>I remember something like this, but we may need to set these in bzl files, or in crosstools?<br>\nI think we already had a similar situation and <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=814566\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mhlopko\">@mhlopko</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3524818\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/lberki\">@lberki</a> already provided us a solution.<br>\nIs there a way to globally set a compiler flag, but disable it for certain files? Note that we are still using the built-in c++ toolchain for our CPU C++ builds.</p>", "body_text": "I remember something like this, but we may need to set these in bzl files, or in crosstools?\nI think we already had a similar situation and @mhlopko @lberki already provided us a solution.\nIs there a way to globally set a compiler flag, but disable it for certain files? Note that we are still using the built-in c++ toolchain for our CPU C++ builds.", "body": "I remember something like this, but we may need to set these in bzl files, or in crosstools?\r\nI think we already had a similar situation and @mhlopko @lberki already provided us a solution.\r\nIs there a way to globally set a compiler flag, but disable it for certain files? Note that we are still using the built-in c++ toolchain for our CPU C++ builds."}