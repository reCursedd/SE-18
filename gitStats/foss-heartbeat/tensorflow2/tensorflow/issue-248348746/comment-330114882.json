{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/330114882", "html_url": "https://github.com/tensorflow/tensorflow/issues/12073#issuecomment-330114882", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12073", "id": 330114882, "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDExNDg4Mg==", "user": {"login": "rolai", "id": 9015121, "node_id": "MDQ6VXNlcjkwMTUxMjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9015121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rolai", "html_url": "https://github.com/rolai", "followers_url": "https://api.github.com/users/rolai/followers", "following_url": "https://api.github.com/users/rolai/following{/other_user}", "gists_url": "https://api.github.com/users/rolai/gists{/gist_id}", "starred_url": "https://api.github.com/users/rolai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rolai/subscriptions", "organizations_url": "https://api.github.com/users/rolai/orgs", "repos_url": "https://api.github.com/users/rolai/repos", "events_url": "https://api.github.com/users/rolai/events{/privacy}", "received_events_url": "https://api.github.com/users/rolai/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-18T02:36:38Z", "updated_at": "2017-09-18T02:37:21Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=12697915\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/huangwenwenlili\">@huangwenwenlili</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=20317690\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jacquelinewang\">@jacquelinewang</a><br>\nTake <code>faster-rcnn</code> for example,  <code>py_func</code> is used to count the anchors and rois. The graph is splited into two sub-graphs by the <code>py_func</code>:  <code>rpn</code> and <code>rcnn</code>.</p>\n<ol>\n<li>restore the faster-rcnn checkpoint model file into two checkpoint files (for <code>rpn</code> and <code>rcnn</code>)</li>\n<li>freeze each checkpoint files  into one pb file</li>\n<li>assemble the two pb files<br>\n3.1 run rpn network<br>\n3.2 run the py_func with the outputs of rpn network<br>\n3.3 run the rcnn network with the outputs of py_func</li>\n</ol>", "body_text": "@huangwenwenlili @jacquelinewang\nTake faster-rcnn for example,  py_func is used to count the anchors and rois. The graph is splited into two sub-graphs by the py_func:  rpn and rcnn.\n\nrestore the faster-rcnn checkpoint model file into two checkpoint files (for rpn and rcnn)\nfreeze each checkpoint files  into one pb file\nassemble the two pb files\n3.1 run rpn network\n3.2 run the py_func with the outputs of rpn network\n3.3 run the rcnn network with the outputs of py_func", "body": "@huangwenwenlili @JacquelineWang \r\nTake `faster-rcnn` for example,  `py_func` is used to count the anchors and rois. The graph is splited into two sub-graphs by the `py_func`:  `rpn` and `rcnn`. \r\n1. restore the faster-rcnn checkpoint model file into two checkpoint files (for `rpn` and `rcnn`)\r\n2. freeze each checkpoint files  into one pb file\r\n3. assemble the two pb files\r\n   3.1 run rpn network\r\n   3.2 run the py_func with the outputs of rpn network\r\n   3.3 run the rcnn network with the outputs of py_func\r\n"}