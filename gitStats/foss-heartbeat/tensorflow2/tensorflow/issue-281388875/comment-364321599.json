{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/364321599", "html_url": "https://github.com/tensorflow/tensorflow/issues/15314#issuecomment-364321599", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15314", "id": 364321599, "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDMyMTU5OQ==", "user": {"login": "zhangyinsheng", "id": 25282100, "node_id": "MDQ6VXNlcjI1MjgyMTAw", "avatar_url": "https://avatars1.githubusercontent.com/u/25282100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangyinsheng", "html_url": "https://github.com/zhangyinsheng", "followers_url": "https://api.github.com/users/zhangyinsheng/followers", "following_url": "https://api.github.com/users/zhangyinsheng/following{/other_user}", "gists_url": "https://api.github.com/users/zhangyinsheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangyinsheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangyinsheng/subscriptions", "organizations_url": "https://api.github.com/users/zhangyinsheng/orgs", "repos_url": "https://api.github.com/users/zhangyinsheng/repos", "events_url": "https://api.github.com/users/zhangyinsheng/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangyinsheng/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-09T03:03:36Z", "updated_at": "2018-02-09T03:03:36Z", "author_association": "NONE", "body_html": "<p>I've encountered the same problem. In my case, this is actually caused by a silly mispelling mistake:</p>\n<p>It SHOULD BE:<br>\npython train.py --logtostderr --train_dir=training/ --pipeline_config_path=training/ssd_mobilenet_v1_pets.config</p>\n<p>BUT I USED:<br>\npython train.py --logtostderr --train_dir=training/ --pipelie_config_path=training/ssd_mobilenet_v1_pets.config</p>\n<p>This makes \"train.py\" unable to parse the \"FLAGS.pipeline_config_path\", and activates the \"else\" branch:</p>\n<p>if FLAGS.pipeline_config_path:<br>\nconfigs = config_util.get_configs_from_pipeline_file(<br>\nFLAGS.pipeline_config_path)<br>\nif FLAGS.task == 0:<br>\ntf.gfile.Copy(FLAGS.pipeline_config_path,<br>\nos.path.join(FLAGS.train_dir, 'pipeline.config'),<br>\noverwrite=True)<br>\nelse:<br>\nconfigs = config_util.get_configs_from_multiple_files(<br>\nmodel_config_path=FLAGS.model_config_path,<br>\ntrain_config_path=FLAGS.train_config_path,<br>\ntrain_input_config_path=FLAGS.input_config_path)<br>\nif FLAGS.task == 0:<br>\nfor name, config in [('model.config', FLAGS.model_config_path),<br>\n('train.config', FLAGS.train_config_path),<br>\n('input.config', FLAGS.input_config_path)]:<br>\ntf.gfile.Copy(config, os.path.join(FLAGS.train_dir, name),<br>\noverwrite=True)</p>", "body_text": "I've encountered the same problem. In my case, this is actually caused by a silly mispelling mistake:\nIt SHOULD BE:\npython train.py --logtostderr --train_dir=training/ --pipeline_config_path=training/ssd_mobilenet_v1_pets.config\nBUT I USED:\npython train.py --logtostderr --train_dir=training/ --pipelie_config_path=training/ssd_mobilenet_v1_pets.config\nThis makes \"train.py\" unable to parse the \"FLAGS.pipeline_config_path\", and activates the \"else\" branch:\nif FLAGS.pipeline_config_path:\nconfigs = config_util.get_configs_from_pipeline_file(\nFLAGS.pipeline_config_path)\nif FLAGS.task == 0:\ntf.gfile.Copy(FLAGS.pipeline_config_path,\nos.path.join(FLAGS.train_dir, 'pipeline.config'),\noverwrite=True)\nelse:\nconfigs = config_util.get_configs_from_multiple_files(\nmodel_config_path=FLAGS.model_config_path,\ntrain_config_path=FLAGS.train_config_path,\ntrain_input_config_path=FLAGS.input_config_path)\nif FLAGS.task == 0:\nfor name, config in [('model.config', FLAGS.model_config_path),\n('train.config', FLAGS.train_config_path),\n('input.config', FLAGS.input_config_path)]:\ntf.gfile.Copy(config, os.path.join(FLAGS.train_dir, name),\noverwrite=True)", "body": "I've encountered the same problem. In my case, this is actually caused by a silly mispelling mistake: \r\n\r\nIt SHOULD BE:\r\npython train.py --logtostderr --train_dir=training/ --pipeline_config_path=training/ssd_mobilenet_v1_pets.config\r\n\r\nBUT I USED:\r\npython train.py --logtostderr --train_dir=training/ --pipelie_config_path=training/ssd_mobilenet_v1_pets.config\r\n\r\nThis makes \"train.py\" unable to parse the \"FLAGS.pipeline_config_path\", and activates the \"else\" branch: \r\n\r\n  if FLAGS.pipeline_config_path:\r\n    configs = config_util.get_configs_from_pipeline_file(\r\n        FLAGS.pipeline_config_path)\r\n    if FLAGS.task == 0:\r\n      tf.gfile.Copy(FLAGS.pipeline_config_path,\r\n                    os.path.join(FLAGS.train_dir, 'pipeline.config'),\r\n                    overwrite=True)\r\n  else:\r\n    configs = config_util.get_configs_from_multiple_files(\r\n        model_config_path=FLAGS.model_config_path,\r\n        train_config_path=FLAGS.train_config_path,\r\n        train_input_config_path=FLAGS.input_config_path)\r\n    if FLAGS.task == 0:\r\n      for name, config in [('model.config', FLAGS.model_config_path),\r\n                           ('train.config', FLAGS.train_config_path),\r\n                           ('input.config', FLAGS.input_config_path)]:\r\n        tf.gfile.Copy(config, os.path.join(FLAGS.train_dir, name),\r\n                      overwrite=True)\r\n"}