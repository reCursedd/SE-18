{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/217280384", "html_url": "https://github.com/tensorflow/tensorflow/pull/2227#issuecomment-217280384", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2227", "id": 217280384, "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzI4MDM4NA==", "user": {"login": "hunkim", "id": 901975, "node_id": "MDQ6VXNlcjkwMTk3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/901975?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hunkim", "html_url": "https://github.com/hunkim", "followers_url": "https://api.github.com/users/hunkim/followers", "following_url": "https://api.github.com/users/hunkim/following{/other_user}", "gists_url": "https://api.github.com/users/hunkim/gists{/gist_id}", "starred_url": "https://api.github.com/users/hunkim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hunkim/subscriptions", "organizations_url": "https://api.github.com/users/hunkim/orgs", "repos_url": "https://api.github.com/users/hunkim/repos", "events_url": "https://api.github.com/users/hunkim/events{/privacy}", "received_events_url": "https://api.github.com/users/hunkim/received_events", "type": "User", "site_admin": false}, "created_at": "2016-05-05T21:08:04Z", "updated_at": "2016-05-05T21:08:04Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=23068\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/yaroslavvb\">@yaroslavvb</a> Thanks for the comments. I'll squash the commits.</p>\n<p>I am not sure I understand this correctly:</p>\n<blockquote>\n<p>To deal with user-side crash, the more principled way might be automatic promotion of input arguments (int-&gt;float).</p>\n</blockquote>\n<p>Can you elaborate more? Do you have another fix suggestion?  I am not sure promoting int-&gt;float is a good idea. Their max values and precisions are different.</p>\n<p>BTW, this fix was inspired by other ops like pow:</p>\n<pre><code>REGISTER6(BinaryOp, CPU, \"Pow\", functor::pow, float, Eigen::half, double, int32,\n          int64, complex64);\n</code></pre>\n<p>Please let me know.</p>", "body_text": "@yaroslavvb Thanks for the comments. I'll squash the commits.\nI am not sure I understand this correctly:\n\nTo deal with user-side crash, the more principled way might be automatic promotion of input arguments (int->float).\n\nCan you elaborate more? Do you have another fix suggestion?  I am not sure promoting int->float is a good idea. Their max values and precisions are different.\nBTW, this fix was inspired by other ops like pow:\nREGISTER6(BinaryOp, CPU, \"Pow\", functor::pow, float, Eigen::half, double, int32,\n          int64, complex64);\n\nPlease let me know.", "body": "@yaroslavvb Thanks for the comments. I'll squash the commits.\n\nI am not sure I understand this correctly:\n\n> To deal with user-side crash, the more principled way might be automatic promotion of input arguments (int->float).\n\nCan you elaborate more? Do you have another fix suggestion?  I am not sure promoting int->float is a good idea. Their max values and precisions are different. \n\nBTW, this fix was inspired by other ops like pow:\n\n```\nREGISTER6(BinaryOp, CPU, \"Pow\", functor::pow, float, Eigen::half, double, int32,\n          int64, complex64);\n```\n\nPlease let me know.\n"}