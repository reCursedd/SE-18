{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21204", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21204/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21204/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21204/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21204", "id": 345437688, "node_id": "MDU6SXNzdWUzNDU0Mzc2ODg=", "number": 21204, "title": "Retrieve 'feature_importances` from canned BoostedTreesRegressor and BoostedTreesClassifier", "user": {"login": "dvdbisong", "id": 7509742, "node_id": "MDQ6VXNlcjc1MDk3NDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/7509742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dvdbisong", "html_url": "https://github.com/dvdbisong", "followers_url": "https://api.github.com/users/dvdbisong/followers", "following_url": "https://api.github.com/users/dvdbisong/following{/other_user}", "gists_url": "https://api.github.com/users/dvdbisong/gists{/gist_id}", "starred_url": "https://api.github.com/users/dvdbisong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dvdbisong/subscriptions", "organizations_url": "https://api.github.com/users/dvdbisong/orgs", "repos_url": "https://api.github.com/users/dvdbisong/repos", "events_url": "https://api.github.com/users/dvdbisong/events{/privacy}", "received_events_url": "https://api.github.com/users/dvdbisong/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nataliaponomareva", "id": 4313109, "node_id": "MDQ6VXNlcjQzMTMxMDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/4313109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nataliaponomareva", "html_url": "https://github.com/nataliaponomareva", "followers_url": "https://api.github.com/users/nataliaponomareva/followers", "following_url": "https://api.github.com/users/nataliaponomareva/following{/other_user}", "gists_url": "https://api.github.com/users/nataliaponomareva/gists{/gist_id}", "starred_url": "https://api.github.com/users/nataliaponomareva/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nataliaponomareva/subscriptions", "organizations_url": "https://api.github.com/users/nataliaponomareva/orgs", "repos_url": "https://api.github.com/users/nataliaponomareva/repos", "events_url": "https://api.github.com/users/nataliaponomareva/events{/privacy}", "received_events_url": "https://api.github.com/users/nataliaponomareva/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nataliaponomareva", "id": 4313109, "node_id": "MDQ6VXNlcjQzMTMxMDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/4313109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nataliaponomareva", "html_url": "https://github.com/nataliaponomareva", "followers_url": "https://api.github.com/users/nataliaponomareva/followers", "following_url": "https://api.github.com/users/nataliaponomareva/following{/other_user}", "gists_url": "https://api.github.com/users/nataliaponomareva/gists{/gist_id}", "starred_url": "https://api.github.com/users/nataliaponomareva/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nataliaponomareva/subscriptions", "organizations_url": "https://api.github.com/users/nataliaponomareva/orgs", "repos_url": "https://api.github.com/users/nataliaponomareva/repos", "events_url": "https://api.github.com/users/nataliaponomareva/events{/privacy}", "received_events_url": "https://api.github.com/users/nataliaponomareva/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2018-07-28T10:18:31Z", "updated_at": "2018-09-25T17:43:02Z", "closed_at": "2018-09-25T17:43:02Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: N/A</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: N/A</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>: N/A</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: N/A</li>\n<li><strong>TensorFlow version (use command below)</strong>: N/A</li>\n<li><strong>Python version</strong>: N/A</li>\n<li><strong>Bazel version (if compiling from source)</strong>: N/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: N/A</li>\n<li><strong>CUDA/cuDNN version</strong>: N/A</li>\n<li><strong>GPU model and memory</strong>: N/A</li>\n<li><strong>Exact command to reproduce</strong>: N/A</li>\n</ul>\n<h3>Feature request</h3>\n<p>When using the Premade BoostedTreesRegressor or Classifier in TensorFlow to train a model, it will be nice to have a way to retrieve the <code>feature_imporances</code> or feature ranking to know which variables have the most effect in the resulting model as seen in Scikit-learn's implementation.</p>\n<p>Perhaps it can be something like, <code>trees.get_variable_value('feature_imporances')</code> to retrieve the feature rank in the order of the inputs.</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): N/A\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): N/A\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A\nTensorFlow installed from (source or binary): N/A\nTensorFlow version (use command below): N/A\nPython version: N/A\nBazel version (if compiling from source): N/A\nGCC/Compiler version (if compiling from source): N/A\nCUDA/cuDNN version: N/A\nGPU model and memory: N/A\nExact command to reproduce: N/A\n\nFeature request\nWhen using the Premade BoostedTreesRegressor or Classifier in TensorFlow to train a model, it will be nice to have a way to retrieve the feature_imporances or feature ranking to know which variables have the most effect in the resulting model as seen in Scikit-learn's implementation.\nPerhaps it can be something like, trees.get_variable_value('feature_imporances') to retrieve the feature rank in the order of the inputs.", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: N/A\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: N/A\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**: N/A\r\n- **TensorFlow installed from (source or binary)**: N/A\r\n- **TensorFlow version (use command below)**: N/A\r\n- **Python version**: N/A\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: N/A\r\n\r\n### Feature request\r\n\r\nWhen using the Premade BoostedTreesRegressor or Classifier in TensorFlow to train a model, it will be nice to have a way to retrieve the `feature_imporances` or feature ranking to know which variables have the most effect in the resulting model as seen in Scikit-learn's implementation.\r\n\r\nPerhaps it can be something like, `trees.get_variable_value('feature_imporances')` to retrieve the feature rank in the order of the inputs."}