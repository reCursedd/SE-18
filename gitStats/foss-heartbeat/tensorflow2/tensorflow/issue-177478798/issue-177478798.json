{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4413", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4413/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4413/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4413/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/4413", "id": 177478798, "node_id": "MDU6SXNzdWUxNzc0Nzg3OTg=", "number": 4413, "title": "Unexpected behaviour for tf.InteractiveSession() in Jupyter Notebook", "user": {"login": "liviu-", "id": 9915183, "node_id": "MDQ6VXNlcjk5MTUxODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/9915183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liviu-", "html_url": "https://github.com/liviu-", "followers_url": "https://api.github.com/users/liviu-/followers", "following_url": "https://api.github.com/users/liviu-/following{/other_user}", "gists_url": "https://api.github.com/users/liviu-/gists{/gist_id}", "starred_url": "https://api.github.com/users/liviu-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liviu-/subscriptions", "organizations_url": "https://api.github.com/users/liviu-/orgs", "repos_url": "https://api.github.com/users/liviu-/repos", "events_url": "https://api.github.com/users/liviu-/events{/privacy}", "received_events_url": "https://api.github.com/users/liviu-/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-09-16T17:29:31Z", "updated_at": "2018-03-27T05:33:22Z", "closed_at": "2016-10-13T00:34:09Z", "author_association": "NONE", "body_html": "<p>I'm not convinced this is a bug, but if I run <code>tf.InteractiveSession()</code> in a cell with no assignment (e.g. <code>sess = tf.InteractiveSession()</code>), the interactive session will work only as long as the call is the last operation in the notebook cell and the output is not suppressed with <code>;</code>. This tripped me over a few times, so I'm reporting it just in case this is not the intended behaviour.</p>\n<p>FWIW I think this is because IPython/Jupyter stores the session automatically in the cases I highlighted, making the command alike <code>sess = tf.InteractiveSession()</code> which works as expected.</p>\n<h3>Environment info</h3>\n<p>Operating System: Linux</p>\n<p>Installed version of CUDA and cuDNN: Using CPU version</p>\n<p>If installed from binary pip package, provide:</p>\n<ol>\n<li>A link to the pip package you installed: <a href=\"https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.10.0-cp35-cp35m-linux_x86_64.whl\" rel=\"nofollow\">https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.10.0-cp35-cp35m-linux_x86_64.whl</a></li>\n<li>The output from <code>python -c \"import tensorflow; print(tensorflow.__version__)\"</code>. 0.10.0</li>\n</ol>\n<h3>If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)</h3>\n<p>I open a Jupyter notebook, and this works:</p>\n<div class=\"highlight highlight-source-python\"><pre>In [<span class=\"pl-c1\">1</span>]: <span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\nIn [<span class=\"pl-c1\">2</span>]: tf.InteractiveSession()\nIn [<span class=\"pl-c1\">3</span>]: tf.constant(<span class=\"pl-c1\">0</span>).eval()</pre></div>\n<p>This doesn't:</p>\n<div class=\"highlight highlight-source-python\"><pre>In [<span class=\"pl-c1\">1</span>]: <span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\nIn [<span class=\"pl-c1\">2</span>]: tf.InteractiveSession()<span class=\"pl-bu\">;</span>\nIn [<span class=\"pl-c1\">3</span>]: tf.constant(<span class=\"pl-c1\">0</span>).eval()</pre></div>\n<p>Neither does this one:</p>\n<div class=\"highlight highlight-source-python\"><pre>In [<span class=\"pl-c1\">1</span>]: <span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\nIn [<span class=\"pl-c1\">2</span>]: tf.InteractiveSession()\n        <span class=\"pl-c1\">print</span>()\nIn [<span class=\"pl-c1\">3</span>]: tf.constant(<span class=\"pl-c1\">0</span>).eval()</pre></div>\n<p>The both fail with:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c1\">ValueError</span>                                Traceback (most recent call last)\n<span class=\"pl-k\">&lt;</span>ipython<span class=\"pl-k\">-</span><span class=\"pl-c1\">input</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">3</span><span class=\"pl-k\">-</span>b43e5df4f2f7<span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">in</span> <span class=\"pl-k\">&lt;</span>module<span class=\"pl-k\">&gt;</span>()\n<span class=\"pl-ii\">----</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">1</span> tf.constant(<span class=\"pl-c1\">0</span>).eval()\n\n<span class=\"pl-k\">/</span>usr<span class=\"pl-k\">/</span>lib<span class=\"pl-k\">/</span>python3.5<span class=\"pl-k\">/</span>site<span class=\"pl-k\">-</span>packages<span class=\"pl-k\">/</span>tensorflow<span class=\"pl-k\">/</span>python<span class=\"pl-k\">/</span>framework<span class=\"pl-k\">/</span>ops.py <span class=\"pl-k\">in</span> <span class=\"pl-c1\">eval</span>(<span class=\"pl-c1\">self</span>, feed_dict, session)\n    <span class=\"pl-c1\">557</span> \n    <span class=\"pl-c1\">558</span>     <span class=\"pl-s\"><span class=\"pl-pds\">\"\"\"</span></span>\n<span class=\"pl-s\">--&gt; 559     return _eval_using_default_session(self, feed_dict, self.graph, session)</span>\n<span class=\"pl-s\">    560 </span>\n<span class=\"pl-s\">    561 </span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">/usr/lib/python3.5/site-packages/tensorflow/python/framework/ops.py in _eval_using_default_session(tensors, feed_dict, graph, session)</span>\n<span class=\"pl-s\">   3640     session = get_default_session()</span>\n<span class=\"pl-s\">   3641     if session is None:</span>\n<span class=\"pl-s\">-&gt; 3642       raise ValueError(\"Cannot evaluate tensor using `eval()`: No default \"</span>\n<span class=\"pl-s\">   3643                        \"session is registered. Use `with \"</span>\n<span class=\"pl-s\">   3644                        \"sess.as_default()` or pass an explicit session to \"</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">ValueError: Cannot evaluate tensor using `eval()`: No default session is registered. Use `with sess.as_default()` or pass an explicit session to `eval(session=sess)`</span></pre></div>", "body_text": "I'm not convinced this is a bug, but if I run tf.InteractiveSession() in a cell with no assignment (e.g. sess = tf.InteractiveSession()), the interactive session will work only as long as the call is the last operation in the notebook cell and the output is not suppressed with ;. This tripped me over a few times, so I'm reporting it just in case this is not the intended behaviour.\nFWIW I think this is because IPython/Jupyter stores the session automatically in the cases I highlighted, making the command alike sess = tf.InteractiveSession() which works as expected.\nEnvironment info\nOperating System: Linux\nInstalled version of CUDA and cuDNN: Using CPU version\nIf installed from binary pip package, provide:\n\nA link to the pip package you installed: https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.10.0-cp35-cp35m-linux_x86_64.whl\nThe output from python -c \"import tensorflow; print(tensorflow.__version__)\". 0.10.0\n\nIf possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\nI open a Jupyter notebook, and this works:\nIn [1]: import tensorflow as tf\nIn [2]: tf.InteractiveSession()\nIn [3]: tf.constant(0).eval()\nThis doesn't:\nIn [1]: import tensorflow as tf\nIn [2]: tf.InteractiveSession();\nIn [3]: tf.constant(0).eval()\nNeither does this one:\nIn [1]: import tensorflow as tf\nIn [2]: tf.InteractiveSession()\n        print()\nIn [3]: tf.constant(0).eval()\nThe both fail with:\nValueError                                Traceback (most recent call last)\n<ipython-input-3-b43e5df4f2f7> in <module>()\n----> 1 tf.constant(0).eval()\n\n/usr/lib/python3.5/site-packages/tensorflow/python/framework/ops.py in eval(self, feed_dict, session)\n    557 \n    558     \"\"\"\n--> 559     return _eval_using_default_session(self, feed_dict, self.graph, session)\n    560 \n    561 \n\n/usr/lib/python3.5/site-packages/tensorflow/python/framework/ops.py in _eval_using_default_session(tensors, feed_dict, graph, session)\n   3640     session = get_default_session()\n   3641     if session is None:\n-> 3642       raise ValueError(\"Cannot evaluate tensor using `eval()`: No default \"\n   3643                        \"session is registered. Use `with \"\n   3644                        \"sess.as_default()` or pass an explicit session to \"\n\nValueError: Cannot evaluate tensor using `eval()`: No default session is registered. Use `with sess.as_default()` or pass an explicit session to `eval(session=sess)`", "body": "I'm not convinced this is a bug, but if I run `tf.InteractiveSession()` in a cell with no assignment (e.g. `sess = tf.InteractiveSession()`), the interactive session will work only as long as the call is the last operation in the notebook cell and the output is not suppressed with `;`. This tripped me over a few times, so I'm reporting it just in case this is not the intended behaviour.\n\nFWIW I think this is because IPython/Jupyter stores the session automatically in the cases I highlighted, making the command alike `sess = tf.InteractiveSession()` which works as expected.\n### Environment info\n\nOperating System: Linux\n\nInstalled version of CUDA and cuDNN: Using CPU version\n\nIf installed from binary pip package, provide:\n1. A link to the pip package you installed: https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.10.0-cp35-cp35m-linux_x86_64.whl\n2. The output from `python -c \"import tensorflow; print(tensorflow.__version__)\"`. 0.10.0\n### If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\n\nI open a Jupyter notebook, and this works:\n\n``` python\nIn [1]: import tensorflow as tf\nIn [2]: tf.InteractiveSession()\nIn [3]: tf.constant(0).eval()\n```\n\nThis doesn't:\n\n``` python\nIn [1]: import tensorflow as tf\nIn [2]: tf.InteractiveSession();\nIn [3]: tf.constant(0).eval()\n```\n\nNeither does this one:\n\n``` python\nIn [1]: import tensorflow as tf\nIn [2]: tf.InteractiveSession()\n        print()\nIn [3]: tf.constant(0).eval()\n```\n\nThe both fail with:\n\n``` python\nValueError                                Traceback (most recent call last)\n<ipython-input-3-b43e5df4f2f7> in <module>()\n----> 1 tf.constant(0).eval()\n\n/usr/lib/python3.5/site-packages/tensorflow/python/framework/ops.py in eval(self, feed_dict, session)\n    557 \n    558     \"\"\"\n--> 559     return _eval_using_default_session(self, feed_dict, self.graph, session)\n    560 \n    561 \n\n/usr/lib/python3.5/site-packages/tensorflow/python/framework/ops.py in _eval_using_default_session(tensors, feed_dict, graph, session)\n   3640     session = get_default_session()\n   3641     if session is None:\n-> 3642       raise ValueError(\"Cannot evaluate tensor using `eval()`: No default \"\n   3643                        \"session is registered. Use `with \"\n   3644                        \"sess.as_default()` or pass an explicit session to \"\n\nValueError: Cannot evaluate tensor using `eval()`: No default session is registered. Use `with sess.as_default()` or pass an explicit session to `eval(session=sess)`\n```\n"}