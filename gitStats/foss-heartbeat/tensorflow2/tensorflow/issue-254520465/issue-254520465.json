{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12740", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12740/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12740/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12740/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/12740", "id": 254520465, "node_id": "MDU6SXNzdWUyNTQ1MjA0NjU=", "number": 12740, "title": "[Feature Request]: fold batch norm into convolution weights of graph transform tool ", "user": {"login": "ydzhang12345", "id": 16008176, "node_id": "MDQ6VXNlcjE2MDA4MTc2", "avatar_url": "https://avatars1.githubusercontent.com/u/16008176?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ydzhang12345", "html_url": "https://github.com/ydzhang12345", "followers_url": "https://api.github.com/users/ydzhang12345/followers", "following_url": "https://api.github.com/users/ydzhang12345/following{/other_user}", "gists_url": "https://api.github.com/users/ydzhang12345/gists{/gist_id}", "starred_url": "https://api.github.com/users/ydzhang12345/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ydzhang12345/subscriptions", "organizations_url": "https://api.github.com/users/ydzhang12345/orgs", "repos_url": "https://api.github.com/users/ydzhang12345/repos", "events_url": "https://api.github.com/users/ydzhang12345/events{/privacy}", "received_events_url": "https://api.github.com/users/ydzhang12345/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "petewarden", "id": 161459, "node_id": "MDQ6VXNlcjE2MTQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/161459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petewarden", "html_url": "https://github.com/petewarden", "followers_url": "https://api.github.com/users/petewarden/followers", "following_url": "https://api.github.com/users/petewarden/following{/other_user}", "gists_url": "https://api.github.com/users/petewarden/gists{/gist_id}", "starred_url": "https://api.github.com/users/petewarden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petewarden/subscriptions", "organizations_url": "https://api.github.com/users/petewarden/orgs", "repos_url": "https://api.github.com/users/petewarden/repos", "events_url": "https://api.github.com/users/petewarden/events{/privacy}", "received_events_url": "https://api.github.com/users/petewarden/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "petewarden", "id": 161459, "node_id": "MDQ6VXNlcjE2MTQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/161459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petewarden", "html_url": "https://github.com/petewarden", "followers_url": "https://api.github.com/users/petewarden/followers", "following_url": "https://api.github.com/users/petewarden/following{/other_user}", "gists_url": "https://api.github.com/users/petewarden/gists{/gist_id}", "starred_url": "https://api.github.com/users/petewarden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petewarden/subscriptions", "organizations_url": "https://api.github.com/users/petewarden/orgs", "repos_url": "https://api.github.com/users/petewarden/repos", "events_url": "https://api.github.com/users/petewarden/events{/privacy}", "received_events_url": "https://api.github.com/users/petewarden/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2017-09-01T02:40:31Z", "updated_at": "2018-06-03T21:51:11Z", "closed_at": "2017-12-20T05:38:30Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: No</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: source</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.3.0</li>\n<li><strong>Python version</strong>: 2.7</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.5.1</li>\n<li><strong>CUDA/cuDNN version</strong>: 8.0, 6.0</li>\n<li><strong>GPU model and memory</strong>: GTX1080</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<p>bazel build tensorflow/tools/graph_transforms:transform_graph<br>\nbazel-bin/tensorflow/tools/graph_transforms/transform_graph <br>\n--in_graph=tensorflow_inception_graph.pb <br>\n--out_graph=optimized_inception_graph.pb <br>\n--inputs='Mul' <br>\n--outputs='softmax' <br>\n--transforms='<br>\nstrip_unused_nodes(type=float, shape=\"1,299,299,3\")<br>\nremove_nodes(op=Identity, op=CheckNumerics)<br>\nfold_constants(ignore_errors=true)<br>\nfold_batch_norms<br>\nfold_old_batch_norms'</p>\n<p>After diving into the generated pb graph, I found that the current fold batch norm ops seems to only fold batch norm into two ops: mul and add, which is not exactly as the readme demonstrated: fold the batch norm into the weights of convolution. If this is the case, it would be better to further merge the mul and add into conv weights.</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): No\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04\nTensorFlow installed from (source or binary): source\nTensorFlow version (use command below): 1.3.0\nPython version: 2.7\nBazel version (if compiling from source): 0.5.1\nCUDA/cuDNN version: 8.0, 6.0\nGPU model and memory: GTX1080\nExact command to reproduce:\n\nbazel build tensorflow/tools/graph_transforms:transform_graph\nbazel-bin/tensorflow/tools/graph_transforms/transform_graph \n--in_graph=tensorflow_inception_graph.pb \n--out_graph=optimized_inception_graph.pb \n--inputs='Mul' \n--outputs='softmax' \n--transforms='\nstrip_unused_nodes(type=float, shape=\"1,299,299,3\")\nremove_nodes(op=Identity, op=CheckNumerics)\nfold_constants(ignore_errors=true)\nfold_batch_norms\nfold_old_batch_norms'\nAfter diving into the generated pb graph, I found that the current fold batch norm ops seems to only fold batch norm into two ops: mul and add, which is not exactly as the readme demonstrated: fold the batch norm into the weights of convolution. If this is the case, it would be better to further merge the mul and add into conv weights.", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: 1.3.0\r\n- **Python version**: 2.7\r\n- **Bazel version (if compiling from source)**: 0.5.1\r\n- **CUDA/cuDNN version**: 8.0, 6.0\r\n- **GPU model and memory**: GTX1080\r\n- **Exact command to reproduce**:\r\n\r\nbazel build tensorflow/tools/graph_transforms:transform_graph\r\nbazel-bin/tensorflow/tools/graph_transforms/transform_graph \\\r\n--in_graph=tensorflow_inception_graph.pb \\\r\n--out_graph=optimized_inception_graph.pb \\\r\n--inputs='Mul' \\\r\n--outputs='softmax' \\\r\n--transforms='\r\n  strip_unused_nodes(type=float, shape=\"1,299,299,3\")\r\n  remove_nodes(op=Identity, op=CheckNumerics)\r\n  fold_constants(ignore_errors=true)\r\n  fold_batch_norms\r\n  fold_old_batch_norms'\r\n\r\nAfter diving into the generated pb graph, I found that the current fold batch norm ops seems to only fold batch norm into two ops: mul and add, which is not exactly as the readme demonstrated: fold the batch norm into the weights of convolution. If this is the case, it would be better to further merge the mul and add into conv weights."}