{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11245", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11245/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11245/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11245/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/11245", "id": 240150320, "node_id": "MDU6SXNzdWUyNDAxNTAzMjA=", "number": 11245, "title": "The data type conversion between int32 and float32", "user": {"login": "yylonly", "id": 2776408, "node_id": "MDQ6VXNlcjI3NzY0MDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2776408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yylonly", "html_url": "https://github.com/yylonly", "followers_url": "https://api.github.com/users/yylonly/followers", "following_url": "https://api.github.com/users/yylonly/following{/other_user}", "gists_url": "https://api.github.com/users/yylonly/gists{/gist_id}", "starred_url": "https://api.github.com/users/yylonly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yylonly/subscriptions", "organizations_url": "https://api.github.com/users/yylonly/orgs", "repos_url": "https://api.github.com/users/yylonly/repos", "events_url": "https://api.github.com/users/yylonly/events{/privacy}", "received_events_url": "https://api.github.com/users/yylonly/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-07-03T11:53:36Z", "updated_at": "2017-10-28T06:42:09Z", "closed_at": "2017-07-05T20:30:41Z", "author_association": "NONE", "body_html": "<p>My project require convert the data type of tensor (dtype=float32) to int32, and then I need turn the dtype back (from int32 to float32) after some operations.<br>\nThe code is</p>\n<blockquote>\n<p>y = tf.to_int32(x)<br>\nbitwiseXor = tf.bitwise.bitwise_xor(y, key)<br>\nz = tf.to_float(bitwiseXor)</p>\n</blockquote>\n<p>But following errors appears, how to solve it?</p>\n<blockquote>\n<p>Traceback (most recent call last):<br>\nFile \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/op_def_library.py\", line 490, in apply_op<br>\npreferred_dtype=default_dtype)<br>\nFile \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/ops.py\", line 675, in internal_convert_to_tensor<br>\nret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)<br>\nFile \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/constant_op.py\", line 121, in _constant_tensor_conversion_function<br>\nreturn constant(v, dtype=dtype, name=name)<br>\nFile \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/constant_op.py\", line 102, in constant<br>\ntensor_util.make_tensor_proto(value, dtype=dtype, shape=shape, verify_shape=verify_shape))<br>\nFile \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/tensor_util.py\", line 364, in make_tensor_proto<br>\nraise ValueError(\"None values not supported.\")<br>\nValueError: None values not supported.</p>\n<p>During handling of the above exception, another exception occurred:</p>\n<p>Traceback (most recent call last):<br>\nFile \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/op_def_library.py\", line 504, in apply_op<br>\nvalues, as_ref=input_arg.is_ref).dtype.name<br>\nFile \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/ops.py\", line 675, in internal_convert_to_tensor<br>\nret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)<br>\nFile \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/constant_op.py\", line 121, in _constant_tensor_conversion_function<br>\nreturn constant(v, dtype=dtype, name=name)<br>\nFile \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/constant_op.py\", line 102, in constant<br>\ntensor_util.make_tensor_proto(value, dtype=dtype, shape=shape, verify_shape=verify_shape))<br>\nFile \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/tensor_util.py\", line 364, in make_tensor_proto<br>\nraise ValueError(\"None values not supported.\")<br>\nValueError: None values not supported.</p>\n<p>During handling of the above exception, another exception occurred:</p>\n<p>Traceback (most recent call last):<br>\nFile \"/win1/Ubuntu_App/RemotePython/EncNN/My_EncML.py\", line 134, in <br>\nmodel.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, verbose=1, validation_data=(x_test, y_test))<br>\nFile \"/usr/local/lib/python3.4/dist-packages/keras/engine/training.py\", line 1458, in fit<br>\nself._make_train_function()<br>\nFile \"/usr/local/lib/python3.4/dist-packages/keras/engine/training.py\", line 1002, in _make_train_function<br>\nself.total_loss)<br>\nFile \"/usr/local/lib/python3.4/dist-packages/keras/optimizers.py\", line 326, in get_updates<br>\nnew_a = self.rho * a + (1. - self.rho) * K.square(g)<br>\nFile \"/usr/local/lib/python3.4/dist-packages/keras/backend/tensorflow_backend.py\", line 1225, in square<br>\nreturn tf.square(x)<br>\nFile \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/ops/math_ops.py\", line 428, in square<br>\nreturn gen_math_ops.square(x, name=name)<br>\nFile \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/ops/gen_math_ops.py\", line 2544, in square<br>\nresult = _op_def_lib.apply_op(\"Square\", x=x, name=name)<br>\nFile \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/op_def_library.py\", line 508, in apply_op<br>\n(input_name, err))<br>\nValueError: Tried to convert 'x' to a tensor and failed. Error: None values not supported.</p>\n<p>Process finished with exit code 1</p>\n</blockquote>", "body_text": "My project require convert the data type of tensor (dtype=float32) to int32, and then I need turn the dtype back (from int32 to float32) after some operations.\nThe code is\n\ny = tf.to_int32(x)\nbitwiseXor = tf.bitwise.bitwise_xor(y, key)\nz = tf.to_float(bitwiseXor)\n\nBut following errors appears, how to solve it?\n\nTraceback (most recent call last):\nFile \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/op_def_library.py\", line 490, in apply_op\npreferred_dtype=default_dtype)\nFile \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/ops.py\", line 675, in internal_convert_to_tensor\nret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\nFile \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/constant_op.py\", line 121, in _constant_tensor_conversion_function\nreturn constant(v, dtype=dtype, name=name)\nFile \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/constant_op.py\", line 102, in constant\ntensor_util.make_tensor_proto(value, dtype=dtype, shape=shape, verify_shape=verify_shape))\nFile \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/tensor_util.py\", line 364, in make_tensor_proto\nraise ValueError(\"None values not supported.\")\nValueError: None values not supported.\nDuring handling of the above exception, another exception occurred:\nTraceback (most recent call last):\nFile \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/op_def_library.py\", line 504, in apply_op\nvalues, as_ref=input_arg.is_ref).dtype.name\nFile \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/ops.py\", line 675, in internal_convert_to_tensor\nret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\nFile \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/constant_op.py\", line 121, in _constant_tensor_conversion_function\nreturn constant(v, dtype=dtype, name=name)\nFile \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/constant_op.py\", line 102, in constant\ntensor_util.make_tensor_proto(value, dtype=dtype, shape=shape, verify_shape=verify_shape))\nFile \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/tensor_util.py\", line 364, in make_tensor_proto\nraise ValueError(\"None values not supported.\")\nValueError: None values not supported.\nDuring handling of the above exception, another exception occurred:\nTraceback (most recent call last):\nFile \"/win1/Ubuntu_App/RemotePython/EncNN/My_EncML.py\", line 134, in \nmodel.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, verbose=1, validation_data=(x_test, y_test))\nFile \"/usr/local/lib/python3.4/dist-packages/keras/engine/training.py\", line 1458, in fit\nself._make_train_function()\nFile \"/usr/local/lib/python3.4/dist-packages/keras/engine/training.py\", line 1002, in _make_train_function\nself.total_loss)\nFile \"/usr/local/lib/python3.4/dist-packages/keras/optimizers.py\", line 326, in get_updates\nnew_a = self.rho * a + (1. - self.rho) * K.square(g)\nFile \"/usr/local/lib/python3.4/dist-packages/keras/backend/tensorflow_backend.py\", line 1225, in square\nreturn tf.square(x)\nFile \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/ops/math_ops.py\", line 428, in square\nreturn gen_math_ops.square(x, name=name)\nFile \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/ops/gen_math_ops.py\", line 2544, in square\nresult = _op_def_lib.apply_op(\"Square\", x=x, name=name)\nFile \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/op_def_library.py\", line 508, in apply_op\n(input_name, err))\nValueError: Tried to convert 'x' to a tensor and failed. Error: None values not supported.\nProcess finished with exit code 1", "body": "My project require convert the data type of tensor (dtype=float32) to int32, and then I need turn the dtype back (from int32 to float32) after some operations.\r\n The code is\r\n\r\n>  y = tf.to_int32(x)\r\n>  bitwiseXor = tf.bitwise.bitwise_xor(y, key)\r\n>  z = tf.to_float(bitwiseXor)\r\n\r\nBut following errors appears, how to solve it?\r\n\r\n> Traceback (most recent call last):\r\n>   File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/op_def_library.py\", line 490, in apply_op\r\n>     preferred_dtype=default_dtype)\r\n>   File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/ops.py\", line 675, in internal_convert_to_tensor\r\n>     ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\r\n>   File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/constant_op.py\", line 121, in _constant_tensor_conversion_function\r\n>     return constant(v, dtype=dtype, name=name)\r\n>   File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/constant_op.py\", line 102, in constant\r\n>     tensor_util.make_tensor_proto(value, dtype=dtype, shape=shape, verify_shape=verify_shape))\r\n>   File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/tensor_util.py\", line 364, in make_tensor_proto\r\n>     raise ValueError(\"None values not supported.\")\r\n> ValueError: None values not supported.\r\n> \r\n> During handling of the above exception, another exception occurred:\r\n> \r\n> Traceback (most recent call last):\r\n>   File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/op_def_library.py\", line 504, in apply_op\r\n>     values, as_ref=input_arg.is_ref).dtype.name\r\n>   File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/ops.py\", line 675, in internal_convert_to_tensor\r\n>     ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\r\n>   File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/constant_op.py\", line 121, in _constant_tensor_conversion_function\r\n>     return constant(v, dtype=dtype, name=name)\r\n>   File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/constant_op.py\", line 102, in constant\r\n>     tensor_util.make_tensor_proto(value, dtype=dtype, shape=shape, verify_shape=verify_shape))\r\n>   File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/tensor_util.py\", line 364, in make_tensor_proto\r\n>     raise ValueError(\"None values not supported.\")\r\n> ValueError: None values not supported.\r\n> \r\n> During handling of the above exception, another exception occurred:\r\n> \r\n> Traceback (most recent call last):\r\n>   File \"/win1/Ubuntu_App/RemotePython/EncNN/My_EncML.py\", line 134, in <module>\r\n>     model.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, verbose=1, validation_data=(x_test, y_test))\r\n>   File \"/usr/local/lib/python3.4/dist-packages/keras/engine/training.py\", line 1458, in fit\r\n>     self._make_train_function()\r\n>   File \"/usr/local/lib/python3.4/dist-packages/keras/engine/training.py\", line 1002, in _make_train_function\r\n>     self.total_loss)\r\n>   File \"/usr/local/lib/python3.4/dist-packages/keras/optimizers.py\", line 326, in get_updates\r\n>     new_a = self.rho * a + (1. - self.rho) * K.square(g)\r\n>   File \"/usr/local/lib/python3.4/dist-packages/keras/backend/tensorflow_backend.py\", line 1225, in square\r\n>     return tf.square(x)\r\n>   File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/ops/math_ops.py\", line 428, in square\r\n>     return gen_math_ops.square(x, name=name)\r\n>   File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/ops/gen_math_ops.py\", line 2544, in square\r\n>     result = _op_def_lib.apply_op(\"Square\", x=x, name=name)\r\n>   File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/op_def_library.py\", line 508, in apply_op\r\n>     (input_name, err))\r\n> ValueError: Tried to convert 'x' to a tensor and failed. Error: None values not supported.\r\n> \r\n> Process finished with exit code 1"}