{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/295857875", "html_url": "https://github.com/tensorflow/tensorflow/issues/7089#issuecomment-295857875", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7089", "id": 295857875, "node_id": "MDEyOklzc3VlQ29tbWVudDI5NTg1Nzg3NQ==", "user": {"login": "BarzinM", "id": 5580724, "node_id": "MDQ6VXNlcjU1ODA3MjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/5580724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BarzinM", "html_url": "https://github.com/BarzinM", "followers_url": "https://api.github.com/users/BarzinM/followers", "following_url": "https://api.github.com/users/BarzinM/following{/other_user}", "gists_url": "https://api.github.com/users/BarzinM/gists{/gist_id}", "starred_url": "https://api.github.com/users/BarzinM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BarzinM/subscriptions", "organizations_url": "https://api.github.com/users/BarzinM/orgs", "repos_url": "https://api.github.com/users/BarzinM/repos", "events_url": "https://api.github.com/users/BarzinM/events{/privacy}", "received_events_url": "https://api.github.com/users/BarzinM/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-20T18:56:18Z", "updated_at": "2017-04-20T18:56:18Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1835958\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/abred\">@abred</a> and <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13444373\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/lemairecarl\">@lemairecarl</a> , Here is what worked for me. I used one variable with two writers:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">from</span> numpy <span class=\"pl-k\">import</span> random\n\nwriter_1 <span class=\"pl-k\">=</span> tf.summary.FileWriter(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>./logs/plot_1<span class=\"pl-pds\">\"</span></span>)\nwriter_2 <span class=\"pl-k\">=</span> tf.summary.FileWriter(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>./logs/plot_2<span class=\"pl-pds\">\"</span></span>)\n\nlog_var <span class=\"pl-k\">=</span> tf.Variable(<span class=\"pl-c1\">0.0</span>)\ntf.summary.scalar(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>loss<span class=\"pl-pds\">\"</span></span>, log_var)\n\nwrite_op <span class=\"pl-k\">=</span> tf.summary.merge_all()\n\nsession <span class=\"pl-k\">=</span> tf.InteractiveSession()\nsession.run(tf.global_variables_initializer())\n\n<span class=\"pl-k\">for</span> i <span class=\"pl-k\">in</span> <span class=\"pl-c1\">range</span>(<span class=\"pl-c1\">100</span>):\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> for writer 1</span>\n    summary <span class=\"pl-k\">=</span> session.run(write_op, {log_var: random.rand()})\n    writer_1.add_summary(summary, i)\n    writer_1.flush()\n\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> for writer 2</span>\n    summary <span class=\"pl-k\">=</span> session.run(write_op, {log_var: random.rand()})\n    writer_2.add_summary(summary, i)\n    writer_2.flush()\n</pre></div>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://cloud.githubusercontent.com/assets/5580724/25247459/d9c36764-25d8-11e7-90ba-3775a84ab079.png\"><img src=\"https://cloud.githubusercontent.com/assets/5580724/25247459/d9c36764-25d8-11e7-90ba-3775a84ab079.png\" alt=\"image\" style=\"max-width:100%;\"></a></p>", "body_text": "@abred and @lemairecarl , Here is what worked for me. I used one variable with two writers:\nimport tensorflow as tf\nfrom numpy import random\n\nwriter_1 = tf.summary.FileWriter(\"./logs/plot_1\")\nwriter_2 = tf.summary.FileWriter(\"./logs/plot_2\")\n\nlog_var = tf.Variable(0.0)\ntf.summary.scalar(\"loss\", log_var)\n\nwrite_op = tf.summary.merge_all()\n\nsession = tf.InteractiveSession()\nsession.run(tf.global_variables_initializer())\n\nfor i in range(100):\n    # for writer 1\n    summary = session.run(write_op, {log_var: random.rand()})\n    writer_1.add_summary(summary, i)\n    writer_1.flush()\n\n    # for writer 2\n    summary = session.run(write_op, {log_var: random.rand()})\n    writer_2.add_summary(summary, i)\n    writer_2.flush()", "body": "@abred and @lemairecarl , Here is what worked for me. I used one variable with two writers:\r\n```python\r\nimport tensorflow as tf\r\nfrom numpy import random\r\n\r\nwriter_1 = tf.summary.FileWriter(\"./logs/plot_1\")\r\nwriter_2 = tf.summary.FileWriter(\"./logs/plot_2\")\r\n\r\nlog_var = tf.Variable(0.0)\r\ntf.summary.scalar(\"loss\", log_var)\r\n\r\nwrite_op = tf.summary.merge_all()\r\n\r\nsession = tf.InteractiveSession()\r\nsession.run(tf.global_variables_initializer())\r\n\r\nfor i in range(100):\r\n    # for writer 1\r\n    summary = session.run(write_op, {log_var: random.rand()})\r\n    writer_1.add_summary(summary, i)\r\n    writer_1.flush()\r\n\r\n    # for writer 2\r\n    summary = session.run(write_op, {log_var: random.rand()})\r\n    writer_2.add_summary(summary, i)\r\n    writer_2.flush()\r\n\r\n```\r\n![image](https://cloud.githubusercontent.com/assets/5580724/25247459/d9c36764-25d8-11e7-90ba-3775a84ab079.png)\r\n"}