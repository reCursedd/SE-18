{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18248", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18248/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18248/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18248/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18248", "id": 311412718, "node_id": "MDU6SXNzdWUzMTE0MTI3MTg=", "number": 18248, "title": "ValueError: Initializer for variable cudnn_gru/opaque_kernel/ is from inside a control-flow construct, such as a loop or conditional. When creating a variable inside a loop or conditional, use a lambda as the initializer.", "user": {"login": "burglarhobbit", "id": 15987266, "node_id": "MDQ6VXNlcjE1OTg3MjY2", "avatar_url": "https://avatars2.githubusercontent.com/u/15987266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/burglarhobbit", "html_url": "https://github.com/burglarhobbit", "followers_url": "https://api.github.com/users/burglarhobbit/followers", "following_url": "https://api.github.com/users/burglarhobbit/following{/other_user}", "gists_url": "https://api.github.com/users/burglarhobbit/gists{/gist_id}", "starred_url": "https://api.github.com/users/burglarhobbit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/burglarhobbit/subscriptions", "organizations_url": "https://api.github.com/users/burglarhobbit/orgs", "repos_url": "https://api.github.com/users/burglarhobbit/repos", "events_url": "https://api.github.com/users/burglarhobbit/events{/privacy}", "received_events_url": "https://api.github.com/users/burglarhobbit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "angersson", "id": 32465472, "node_id": "MDQ6VXNlcjMyNDY1NDcy", "avatar_url": "https://avatars2.githubusercontent.com/u/32465472?v=4", "gravatar_id": "", "url": "https://api.github.com/users/angersson", "html_url": "https://github.com/angersson", "followers_url": "https://api.github.com/users/angersson/followers", "following_url": "https://api.github.com/users/angersson/following{/other_user}", "gists_url": "https://api.github.com/users/angersson/gists{/gist_id}", "starred_url": "https://api.github.com/users/angersson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/angersson/subscriptions", "organizations_url": "https://api.github.com/users/angersson/orgs", "repos_url": "https://api.github.com/users/angersson/repos", "events_url": "https://api.github.com/users/angersson/events{/privacy}", "received_events_url": "https://api.github.com/users/angersson/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "angersson", "id": 32465472, "node_id": "MDQ6VXNlcjMyNDY1NDcy", "avatar_url": "https://avatars2.githubusercontent.com/u/32465472?v=4", "gravatar_id": "", "url": "https://api.github.com/users/angersson", "html_url": "https://github.com/angersson", "followers_url": "https://api.github.com/users/angersson/followers", "following_url": "https://api.github.com/users/angersson/following{/other_user}", "gists_url": "https://api.github.com/users/angersson/gists{/gist_id}", "starred_url": "https://api.github.com/users/angersson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/angersson/subscriptions", "organizations_url": "https://api.github.com/users/angersson/orgs", "repos_url": "https://api.github.com/users/angersson/repos", "events_url": "https://api.github.com/users/angersson/events{/privacy}", "received_events_url": "https://api.github.com/users/angersson/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-04-04T22:28:20Z", "updated_at": "2018-04-12T17:51:01Z", "closed_at": "2018-04-11T20:26:26Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution</strong>: Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from</strong>: Binary</li>\n<li><strong>TensorFlow version</strong>: 1.5.0</li>\n<li><strong>Python version</strong>: 3.5.2</li>\n<li><strong>Bazel version</strong>: Not compiled from source</li>\n<li><strong>GCC/Compiler version</strong>: Not compiled from source</li>\n<li><strong>CUDA/cuDNN version</strong>: 9.0/7</li>\n<li><strong>GPU model and memory</strong>: NVIDIA GTX 1080 8GB x 4</li>\n<li><strong>Exact command to reproduce</strong>: Code as below</li>\n</ul>\n<p>I have been trying to use a for-loop with <code>tf.cond</code> applied on <code>cudnn_gru</code> to run multiple times on inputs, and the minimum error reproducible code is as below:</p>\n<pre><code>import tensorflow as tf\nmax_para = tf.placeholder(tf.int32)\nnum_units = 150\ninputs = tf.placeholder(tf.float32,shape=[15,8,num_units])\nclass cudnn_gru:\n\tdef __init__(self):\n\t\tself.gru_fw = tf.contrib.cudnn_rnn.CudnnGRU(1, num_units, \n\t\t\t\t\t\tkernel_initializer=tf.random_normal_initializer(stddev=0.1))\n\tdef __call__(self,inputs):\n\t\tout_fw, _ = self.gru_fw(inputs)\n\nclass cudnn_gru2:\n\tdef __init__(self):\n\t\tself.gru_fw = tf.contrib.cudnn_rnn.CudnnGRU(1, num_units-1, \n\t\t\t\t\t\tkernel_initializer=tf.random_normal_initializer(stddev=0.1))\n\tdef __call__(self,inputs):\n\t\tout_fw, _ = self.gru_fw(inputs)\n\ndef get_output():\n\tgru = cudnn_gru()\n\tout = gru(inputs)\n\treturn tf.constant(1)\n\ndef get_output2():\n\tgru = cudnn_gru2()\n\tout = gru(inputs)\n\treturn tf.constant(2)\n\nfor i in range(3):\n\ti_ = tf.constant(i)\n\tout = tf.cond(i_&lt;max_para,get_output,get_output2)\n</code></pre>\n<p>The error stacktrace is as follows:</p>\n<pre><code>Traceback (most recent call last):\n  File \"temp.py\", line 31, in &lt;module&gt;\n    out = tf.cond(i_&lt;max_para,get_output,get_output2)\n  File \"/home/search/snetP/virtual_bhavya/lib/python3.5/site-packages/tensorflow/python/util/deprecation.py\", line 316, in new_func\n    return func(*args, **kwargs)\n  File \"/home/search/snetP/virtual_bhavya/lib/python3.5/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 1894, in cond\n    orig_res_t, res_t = context_t.BuildCondBranch(true_fn)\n  File \"/home/search/snetP/virtual_bhavya/lib/python3.5/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 1752, in BuildCondBranch\n    original_result = fn()\n  File \"temp.py\", line 21, in get_output\n    out = gru(inputs)\n  File \"temp.py\", line 10, in __call__\n    out_fw, _ = self.gru_fw(inputs)\n  File \"/home/search/snetP/virtual_bhavya/lib/python3.5/site-packages/tensorflow/python/layers/base.py\", line 636, in __call__\n    self.build(input_shapes)\n  File \"/home/search/snetP/virtual_bhavya/lib/python3.5/site-packages/tensorflow/contrib/cudnn_rnn/python/layers/cudnn_rnn.py\", line 357, in build\n    \"opaque_kernel\", initializer=opaque_params_t, validate_shape=False)\n  File \"/home/search/snetP/virtual_bhavya/lib/python3.5/site-packages/tensorflow/python/ops/variable_scope.py\", line 1262, in get_variable\n    constraint=constraint)\n  File \"/home/search/snetP/virtual_bhavya/lib/python3.5/site-packages/tensorflow/python/ops/variable_scope.py\", line 1097, in get_variable\n    constraint=constraint)\n  File \"/home/search/snetP/virtual_bhavya/lib/python3.5/site-packages/tensorflow/python/ops/variable_scope.py\", line 427, in get_variable\n    return custom_getter(**custom_getter_kwargs)\n  File \"/home/search/snetP/virtual_bhavya/lib/python3.5/site-packages/tensorflow/contrib/cudnn_rnn/python/layers/cudnn_rnn.py\", line 290, in _update_trainable_weights\n    variable = getter(*args, **kwargs)\n  File \"/home/search/snetP/virtual_bhavya/lib/python3.5/site-packages/tensorflow/python/ops/variable_scope.py\", line 404, in _true_getter\n    use_resource=use_resource, constraint=constraint)\n  File \"/home/search/snetP/virtual_bhavya/lib/python3.5/site-packages/tensorflow/python/ops/variable_scope.py\", line 806, in _get_single_variable\n    constraint=constraint)\n  File \"/home/search/snetP/virtual_bhavya/lib/python3.5/site-packages/tensorflow/python/ops/variables.py\", line 229, in __init__\n    constraint=constraint)\n  File \"/home/search/snetP/virtual_bhavya/lib/python3.5/site-packages/tensorflow/python/ops/variables.py\", line 342, in _init_from_args\n    \"initializer.\" % name)\nValueError: Initializer for variable cudnn_gru/opaque_kernel/ is from inside a control-flow construct, such as a loop or conditional. When creating a variable inside a loop or conditional, use a lambda as the initializer.\n</code></pre>\n<p>How can I achieve this without causing compilation error during model building?</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution: Ubuntu 16.04\nTensorFlow installed from: Binary\nTensorFlow version: 1.5.0\nPython version: 3.5.2\nBazel version: Not compiled from source\nGCC/Compiler version: Not compiled from source\nCUDA/cuDNN version: 9.0/7\nGPU model and memory: NVIDIA GTX 1080 8GB x 4\nExact command to reproduce: Code as below\n\nI have been trying to use a for-loop with tf.cond applied on cudnn_gru to run multiple times on inputs, and the minimum error reproducible code is as below:\nimport tensorflow as tf\nmax_para = tf.placeholder(tf.int32)\nnum_units = 150\ninputs = tf.placeholder(tf.float32,shape=[15,8,num_units])\nclass cudnn_gru:\n\tdef __init__(self):\n\t\tself.gru_fw = tf.contrib.cudnn_rnn.CudnnGRU(1, num_units, \n\t\t\t\t\t\tkernel_initializer=tf.random_normal_initializer(stddev=0.1))\n\tdef __call__(self,inputs):\n\t\tout_fw, _ = self.gru_fw(inputs)\n\nclass cudnn_gru2:\n\tdef __init__(self):\n\t\tself.gru_fw = tf.contrib.cudnn_rnn.CudnnGRU(1, num_units-1, \n\t\t\t\t\t\tkernel_initializer=tf.random_normal_initializer(stddev=0.1))\n\tdef __call__(self,inputs):\n\t\tout_fw, _ = self.gru_fw(inputs)\n\ndef get_output():\n\tgru = cudnn_gru()\n\tout = gru(inputs)\n\treturn tf.constant(1)\n\ndef get_output2():\n\tgru = cudnn_gru2()\n\tout = gru(inputs)\n\treturn tf.constant(2)\n\nfor i in range(3):\n\ti_ = tf.constant(i)\n\tout = tf.cond(i_<max_para,get_output,get_output2)\n\nThe error stacktrace is as follows:\nTraceback (most recent call last):\n  File \"temp.py\", line 31, in <module>\n    out = tf.cond(i_<max_para,get_output,get_output2)\n  File \"/home/search/snetP/virtual_bhavya/lib/python3.5/site-packages/tensorflow/python/util/deprecation.py\", line 316, in new_func\n    return func(*args, **kwargs)\n  File \"/home/search/snetP/virtual_bhavya/lib/python3.5/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 1894, in cond\n    orig_res_t, res_t = context_t.BuildCondBranch(true_fn)\n  File \"/home/search/snetP/virtual_bhavya/lib/python3.5/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 1752, in BuildCondBranch\n    original_result = fn()\n  File \"temp.py\", line 21, in get_output\n    out = gru(inputs)\n  File \"temp.py\", line 10, in __call__\n    out_fw, _ = self.gru_fw(inputs)\n  File \"/home/search/snetP/virtual_bhavya/lib/python3.5/site-packages/tensorflow/python/layers/base.py\", line 636, in __call__\n    self.build(input_shapes)\n  File \"/home/search/snetP/virtual_bhavya/lib/python3.5/site-packages/tensorflow/contrib/cudnn_rnn/python/layers/cudnn_rnn.py\", line 357, in build\n    \"opaque_kernel\", initializer=opaque_params_t, validate_shape=False)\n  File \"/home/search/snetP/virtual_bhavya/lib/python3.5/site-packages/tensorflow/python/ops/variable_scope.py\", line 1262, in get_variable\n    constraint=constraint)\n  File \"/home/search/snetP/virtual_bhavya/lib/python3.5/site-packages/tensorflow/python/ops/variable_scope.py\", line 1097, in get_variable\n    constraint=constraint)\n  File \"/home/search/snetP/virtual_bhavya/lib/python3.5/site-packages/tensorflow/python/ops/variable_scope.py\", line 427, in get_variable\n    return custom_getter(**custom_getter_kwargs)\n  File \"/home/search/snetP/virtual_bhavya/lib/python3.5/site-packages/tensorflow/contrib/cudnn_rnn/python/layers/cudnn_rnn.py\", line 290, in _update_trainable_weights\n    variable = getter(*args, **kwargs)\n  File \"/home/search/snetP/virtual_bhavya/lib/python3.5/site-packages/tensorflow/python/ops/variable_scope.py\", line 404, in _true_getter\n    use_resource=use_resource, constraint=constraint)\n  File \"/home/search/snetP/virtual_bhavya/lib/python3.5/site-packages/tensorflow/python/ops/variable_scope.py\", line 806, in _get_single_variable\n    constraint=constraint)\n  File \"/home/search/snetP/virtual_bhavya/lib/python3.5/site-packages/tensorflow/python/ops/variables.py\", line 229, in __init__\n    constraint=constraint)\n  File \"/home/search/snetP/virtual_bhavya/lib/python3.5/site-packages/tensorflow/python/ops/variables.py\", line 342, in _init_from_args\n    \"initializer.\" % name)\nValueError: Initializer for variable cudnn_gru/opaque_kernel/ is from inside a control-flow construct, such as a loop or conditional. When creating a variable inside a loop or conditional, use a lambda as the initializer.\n\nHow can I achieve this without causing compilation error during model building?", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution**: Ubuntu 16.04\r\n- **TensorFlow installed from**: Binary\r\n- **TensorFlow version**: 1.5.0\r\n- **Python version**: 3.5.2\r\n- **Bazel version**: Not compiled from source\r\n- **GCC/Compiler version**: Not compiled from source\r\n- **CUDA/cuDNN version**: 9.0/7\r\n- **GPU model and memory**: NVIDIA GTX 1080 8GB x 4 \r\n- **Exact command to reproduce**: Code as below\r\n\r\nI have been trying to use a for-loop with `tf.cond` applied on `cudnn_gru` to run multiple times on inputs, and the minimum error reproducible code is as below:\r\n```\r\nimport tensorflow as tf\r\nmax_para = tf.placeholder(tf.int32)\r\nnum_units = 150\r\ninputs = tf.placeholder(tf.float32,shape=[15,8,num_units])\r\nclass cudnn_gru:\r\n\tdef __init__(self):\r\n\t\tself.gru_fw = tf.contrib.cudnn_rnn.CudnnGRU(1, num_units, \r\n\t\t\t\t\t\tkernel_initializer=tf.random_normal_initializer(stddev=0.1))\r\n\tdef __call__(self,inputs):\r\n\t\tout_fw, _ = self.gru_fw(inputs)\r\n\r\nclass cudnn_gru2:\r\n\tdef __init__(self):\r\n\t\tself.gru_fw = tf.contrib.cudnn_rnn.CudnnGRU(1, num_units-1, \r\n\t\t\t\t\t\tkernel_initializer=tf.random_normal_initializer(stddev=0.1))\r\n\tdef __call__(self,inputs):\r\n\t\tout_fw, _ = self.gru_fw(inputs)\r\n\r\ndef get_output():\r\n\tgru = cudnn_gru()\r\n\tout = gru(inputs)\r\n\treturn tf.constant(1)\r\n\r\ndef get_output2():\r\n\tgru = cudnn_gru2()\r\n\tout = gru(inputs)\r\n\treturn tf.constant(2)\r\n\r\nfor i in range(3):\r\n\ti_ = tf.constant(i)\r\n\tout = tf.cond(i_<max_para,get_output,get_output2)\r\n```\r\n\r\nThe error stacktrace is as follows:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"temp.py\", line 31, in <module>\r\n    out = tf.cond(i_<max_para,get_output,get_output2)\r\n  File \"/home/search/snetP/virtual_bhavya/lib/python3.5/site-packages/tensorflow/python/util/deprecation.py\", line 316, in new_func\r\n    return func(*args, **kwargs)\r\n  File \"/home/search/snetP/virtual_bhavya/lib/python3.5/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 1894, in cond\r\n    orig_res_t, res_t = context_t.BuildCondBranch(true_fn)\r\n  File \"/home/search/snetP/virtual_bhavya/lib/python3.5/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 1752, in BuildCondBranch\r\n    original_result = fn()\r\n  File \"temp.py\", line 21, in get_output\r\n    out = gru(inputs)\r\n  File \"temp.py\", line 10, in __call__\r\n    out_fw, _ = self.gru_fw(inputs)\r\n  File \"/home/search/snetP/virtual_bhavya/lib/python3.5/site-packages/tensorflow/python/layers/base.py\", line 636, in __call__\r\n    self.build(input_shapes)\r\n  File \"/home/search/snetP/virtual_bhavya/lib/python3.5/site-packages/tensorflow/contrib/cudnn_rnn/python/layers/cudnn_rnn.py\", line 357, in build\r\n    \"opaque_kernel\", initializer=opaque_params_t, validate_shape=False)\r\n  File \"/home/search/snetP/virtual_bhavya/lib/python3.5/site-packages/tensorflow/python/ops/variable_scope.py\", line 1262, in get_variable\r\n    constraint=constraint)\r\n  File \"/home/search/snetP/virtual_bhavya/lib/python3.5/site-packages/tensorflow/python/ops/variable_scope.py\", line 1097, in get_variable\r\n    constraint=constraint)\r\n  File \"/home/search/snetP/virtual_bhavya/lib/python3.5/site-packages/tensorflow/python/ops/variable_scope.py\", line 427, in get_variable\r\n    return custom_getter(**custom_getter_kwargs)\r\n  File \"/home/search/snetP/virtual_bhavya/lib/python3.5/site-packages/tensorflow/contrib/cudnn_rnn/python/layers/cudnn_rnn.py\", line 290, in _update_trainable_weights\r\n    variable = getter(*args, **kwargs)\r\n  File \"/home/search/snetP/virtual_bhavya/lib/python3.5/site-packages/tensorflow/python/ops/variable_scope.py\", line 404, in _true_getter\r\n    use_resource=use_resource, constraint=constraint)\r\n  File \"/home/search/snetP/virtual_bhavya/lib/python3.5/site-packages/tensorflow/python/ops/variable_scope.py\", line 806, in _get_single_variable\r\n    constraint=constraint)\r\n  File \"/home/search/snetP/virtual_bhavya/lib/python3.5/site-packages/tensorflow/python/ops/variables.py\", line 229, in __init__\r\n    constraint=constraint)\r\n  File \"/home/search/snetP/virtual_bhavya/lib/python3.5/site-packages/tensorflow/python/ops/variables.py\", line 342, in _init_from_args\r\n    \"initializer.\" % name)\r\nValueError: Initializer for variable cudnn_gru/opaque_kernel/ is from inside a control-flow construct, such as a loop or conditional. When creating a variable inside a loop or conditional, use a lambda as the initializer.\r\n```\r\n\r\nHow can I achieve this without causing compilation error during model building?"}