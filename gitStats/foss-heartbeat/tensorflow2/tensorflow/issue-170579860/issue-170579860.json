{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3746", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3746/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3746/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3746/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/3746", "id": 170579860, "node_id": "MDU6SXNzdWUxNzA1Nzk4NjA=", "number": 3746, "title": "underperformed test of inception-v3 retraining result", "user": {"login": "MingSun-Tse", "id": 16812048, "node_id": "MDQ6VXNlcjE2ODEyMDQ4", "avatar_url": "https://avatars1.githubusercontent.com/u/16812048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MingSun-Tse", "html_url": "https://github.com/MingSun-Tse", "followers_url": "https://api.github.com/users/MingSun-Tse/followers", "following_url": "https://api.github.com/users/MingSun-Tse/following{/other_user}", "gists_url": "https://api.github.com/users/MingSun-Tse/gists{/gist_id}", "starred_url": "https://api.github.com/users/MingSun-Tse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MingSun-Tse/subscriptions", "organizations_url": "https://api.github.com/users/MingSun-Tse/orgs", "repos_url": "https://api.github.com/users/MingSun-Tse/repos", "events_url": "https://api.github.com/users/MingSun-Tse/events{/privacy}", "received_events_url": "https://api.github.com/users/MingSun-Tse/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-11T06:42:43Z", "updated_at": "2016-08-11T18:15:26Z", "closed_at": "2016-08-11T18:15:26Z", "author_association": "NONE", "body_html": "<p>Hello, I'am do the retraining of inceptionv3 following tensorflow official <a href=\"https://www.tensorflow.org/versions/master/how_tos/image_retraining/index.html\" rel=\"nofollow\">tutorial</a>. Everything goes fine and it gives a <code>output_graph.pb</code> finally, but when I test the <code>output_graph.pb</code> with <code>label_image</code> module, it gives me quite odd result like below. Even when I test it with the flower images provided by the tutorial, it performs oddly as well.</p>\n<p>Did anyone meet with the same problem? or what did I miss? thanks a lot for any information.</p>\n<h3>Environment info</h3>\n<p>ubuntu 1404LST<br>\ntensorflow 0.9.0-GPU<br>\nCUDA: 7.5<br>\ncuDNN: 5.0<br>\nGPU: tesla K40</p>\n<h3>Logs or other output that would be helpful</h3>\n<pre><code>Ubuntu:~/tensorflow$ bazel-bin/tensorflow/examples/label_image/label_image  --graph=tensorflow/examples/label_image/data/v3_retrained.pb   --output_layer=final_result  \nW tensorflow/core/framework/op_def_util.cc:332] Op BatchNormWithGlobalNormalization is deprecated. It will cease to work in GraphDef version 9. Use tf.nn.batch_normalization().\nI tensorflow/examples/label_image/main.cc:207] dummy (0): 0.387557\nI tensorflow/examples/label_image/main.cc:207] Siberian husky (3): 0.255237\nI tensorflow/examples/label_image/main.cc:207] kit fox (1): 0.254475\nI tensorflow/examples/label_image/main.cc:207] Australian terrier (4): 0.059399\nI tensorflow/examples/label_image/main.cc:207] English setter (2): 0.0433322\n\nUbuntu:~/tensorflow$ bazel-bin/tensorflow/examples/label_image/label_image  --graph=tensorflow/examples/label_image/data/v3_retrained.pb   --output_layer=final_result  --image=rose.jpg\nW tensorflow/core/framework/op_def_util.cc:332] Op BatchNormWithGlobalNormalization is deprecated. It will cease to work in GraphDef version 9. Use tf.nn.batch_normalization().\nI tensorflow/examples/label_image/main.cc:207] kit fox (1): 0.97847\nI tensorflow/examples/label_image/main.cc:207] dummy (0): 0.0214963\nI tensorflow/examples/label_image/main.cc:207] English setter (2): 1.68903e-05\nI tensorflow/examples/label_image/main.cc:207] Siberian husky (3): 1.2378e-05\nI tensorflow/examples/label_image/main.cc:207] Australian terrier (4): 4.45126e-06\n\nUbuntu:~/tensorflow$ bazel-bin/tensorflow/examples/label_image/label_image  --graph=tensorflow/examples/label_image/data/v3_retrained.pb   --output_layer=final_result  --image=daisy.jpg\nW tensorflow/core/framework/op_def_util.cc:332] Op BatchNormWithGlobalNormalization is deprecated. It will cease to work in GraphDef version 9. Use tf.nn.batch_normalization().\nI tensorflow/examples/label_image/main.cc:207] English setter (2): 0.903881\nI tensorflow/examples/label_image/main.cc:207] Siberian husky (3): 0.0819594\nI tensorflow/examples/label_image/main.cc:207] dummy (0): 0.00714857\nI tensorflow/examples/label_image/main.cc:207] Australian terrier (4): 0.00495803\nI tensorflow/examples/label_image/main.cc:207] kit fox (1): 0.00205291\n</code></pre>\n<p>FYI: the <code>v3_retrained.pb</code> is the <code>output_graph.pb</code> produced by retraining. and <code>rose, daisy</code> are two images I picked from flower_photos provided by the tutorial.</p>", "body_text": "Hello, I'am do the retraining of inceptionv3 following tensorflow official tutorial. Everything goes fine and it gives a output_graph.pb finally, but when I test the output_graph.pb with label_image module, it gives me quite odd result like below. Even when I test it with the flower images provided by the tutorial, it performs oddly as well.\nDid anyone meet with the same problem? or what did I miss? thanks a lot for any information.\nEnvironment info\nubuntu 1404LST\ntensorflow 0.9.0-GPU\nCUDA: 7.5\ncuDNN: 5.0\nGPU: tesla K40\nLogs or other output that would be helpful\nUbuntu:~/tensorflow$ bazel-bin/tensorflow/examples/label_image/label_image  --graph=tensorflow/examples/label_image/data/v3_retrained.pb   --output_layer=final_result  \nW tensorflow/core/framework/op_def_util.cc:332] Op BatchNormWithGlobalNormalization is deprecated. It will cease to work in GraphDef version 9. Use tf.nn.batch_normalization().\nI tensorflow/examples/label_image/main.cc:207] dummy (0): 0.387557\nI tensorflow/examples/label_image/main.cc:207] Siberian husky (3): 0.255237\nI tensorflow/examples/label_image/main.cc:207] kit fox (1): 0.254475\nI tensorflow/examples/label_image/main.cc:207] Australian terrier (4): 0.059399\nI tensorflow/examples/label_image/main.cc:207] English setter (2): 0.0433322\n\nUbuntu:~/tensorflow$ bazel-bin/tensorflow/examples/label_image/label_image  --graph=tensorflow/examples/label_image/data/v3_retrained.pb   --output_layer=final_result  --image=rose.jpg\nW tensorflow/core/framework/op_def_util.cc:332] Op BatchNormWithGlobalNormalization is deprecated. It will cease to work in GraphDef version 9. Use tf.nn.batch_normalization().\nI tensorflow/examples/label_image/main.cc:207] kit fox (1): 0.97847\nI tensorflow/examples/label_image/main.cc:207] dummy (0): 0.0214963\nI tensorflow/examples/label_image/main.cc:207] English setter (2): 1.68903e-05\nI tensorflow/examples/label_image/main.cc:207] Siberian husky (3): 1.2378e-05\nI tensorflow/examples/label_image/main.cc:207] Australian terrier (4): 4.45126e-06\n\nUbuntu:~/tensorflow$ bazel-bin/tensorflow/examples/label_image/label_image  --graph=tensorflow/examples/label_image/data/v3_retrained.pb   --output_layer=final_result  --image=daisy.jpg\nW tensorflow/core/framework/op_def_util.cc:332] Op BatchNormWithGlobalNormalization is deprecated. It will cease to work in GraphDef version 9. Use tf.nn.batch_normalization().\nI tensorflow/examples/label_image/main.cc:207] English setter (2): 0.903881\nI tensorflow/examples/label_image/main.cc:207] Siberian husky (3): 0.0819594\nI tensorflow/examples/label_image/main.cc:207] dummy (0): 0.00714857\nI tensorflow/examples/label_image/main.cc:207] Australian terrier (4): 0.00495803\nI tensorflow/examples/label_image/main.cc:207] kit fox (1): 0.00205291\n\nFYI: the v3_retrained.pb is the output_graph.pb produced by retraining. and rose, daisy are two images I picked from flower_photos provided by the tutorial.", "body": "Hello, I'am do the retraining of inceptionv3 following tensorflow official [tutorial](https://www.tensorflow.org/versions/master/how_tos/image_retraining/index.html). Everything goes fine and it gives a `output_graph.pb` finally, but when I test the `output_graph.pb` with `label_image` module, it gives me quite odd result like below. Even when I test it with the flower images provided by the tutorial, it performs oddly as well.\n\nDid anyone meet with the same problem? or what did I miss? thanks a lot for any information.\n### Environment info\n\nubuntu 1404LST\ntensorflow 0.9.0-GPU\nCUDA: 7.5\ncuDNN: 5.0\nGPU: tesla K40\n### Logs or other output that would be helpful\n\n```\nUbuntu:~/tensorflow$ bazel-bin/tensorflow/examples/label_image/label_image  --graph=tensorflow/examples/label_image/data/v3_retrained.pb   --output_layer=final_result  \nW tensorflow/core/framework/op_def_util.cc:332] Op BatchNormWithGlobalNormalization is deprecated. It will cease to work in GraphDef version 9. Use tf.nn.batch_normalization().\nI tensorflow/examples/label_image/main.cc:207] dummy (0): 0.387557\nI tensorflow/examples/label_image/main.cc:207] Siberian husky (3): 0.255237\nI tensorflow/examples/label_image/main.cc:207] kit fox (1): 0.254475\nI tensorflow/examples/label_image/main.cc:207] Australian terrier (4): 0.059399\nI tensorflow/examples/label_image/main.cc:207] English setter (2): 0.0433322\n\nUbuntu:~/tensorflow$ bazel-bin/tensorflow/examples/label_image/label_image  --graph=tensorflow/examples/label_image/data/v3_retrained.pb   --output_layer=final_result  --image=rose.jpg\nW tensorflow/core/framework/op_def_util.cc:332] Op BatchNormWithGlobalNormalization is deprecated. It will cease to work in GraphDef version 9. Use tf.nn.batch_normalization().\nI tensorflow/examples/label_image/main.cc:207] kit fox (1): 0.97847\nI tensorflow/examples/label_image/main.cc:207] dummy (0): 0.0214963\nI tensorflow/examples/label_image/main.cc:207] English setter (2): 1.68903e-05\nI tensorflow/examples/label_image/main.cc:207] Siberian husky (3): 1.2378e-05\nI tensorflow/examples/label_image/main.cc:207] Australian terrier (4): 4.45126e-06\n\nUbuntu:~/tensorflow$ bazel-bin/tensorflow/examples/label_image/label_image  --graph=tensorflow/examples/label_image/data/v3_retrained.pb   --output_layer=final_result  --image=daisy.jpg\nW tensorflow/core/framework/op_def_util.cc:332] Op BatchNormWithGlobalNormalization is deprecated. It will cease to work in GraphDef version 9. Use tf.nn.batch_normalization().\nI tensorflow/examples/label_image/main.cc:207] English setter (2): 0.903881\nI tensorflow/examples/label_image/main.cc:207] Siberian husky (3): 0.0819594\nI tensorflow/examples/label_image/main.cc:207] dummy (0): 0.00714857\nI tensorflow/examples/label_image/main.cc:207] Australian terrier (4): 0.00495803\nI tensorflow/examples/label_image/main.cc:207] kit fox (1): 0.00205291\n```\n\nFYI: the `v3_retrained.pb` is the `output_graph.pb` produced by retraining. and `rose, daisy` are two images I picked from flower_photos provided by the tutorial.\n"}