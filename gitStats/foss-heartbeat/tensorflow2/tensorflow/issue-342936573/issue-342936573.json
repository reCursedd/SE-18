{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20983", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20983/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20983/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20983/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20983", "id": 342936573, "node_id": "MDU6SXNzdWUzNDI5MzY1NzM=", "number": 20983, "title": "[Bug] tf.py_func : Bad tensor -> np.array conversion in py_func (return [] with dtype=int64 is returned as dtype=float64) ", "user": {"login": "sabhiram", "id": 2693144, "node_id": "MDQ6VXNlcjI2OTMxNDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/2693144?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sabhiram", "html_url": "https://github.com/sabhiram", "followers_url": "https://api.github.com/users/sabhiram/followers", "following_url": "https://api.github.com/users/sabhiram/following{/other_user}", "gists_url": "https://api.github.com/users/sabhiram/gists{/gist_id}", "starred_url": "https://api.github.com/users/sabhiram/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sabhiram/subscriptions", "organizations_url": "https://api.github.com/users/sabhiram/orgs", "repos_url": "https://api.github.com/users/sabhiram/repos", "events_url": "https://api.github.com/users/sabhiram/events{/privacy}", "received_events_url": "https://api.github.com/users/sabhiram/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2018-07-20T00:52:20Z", "updated_at": "2018-08-10T17:47:15Z", "closed_at": "2018-08-10T17:47:15Z", "author_association": "CONTRIBUTOR", "body_html": "<h3>Issue template:</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes (minimal example attached inline)</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Mac OSX 10.12.6</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>: Probably</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: Binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: ('v1.5.0-0-g37aa430d84', '1.5.0')</li>\n<li><strong>Python version</strong>: 2.7</li>\n<li><strong>Bazel version (if compiling from source)</strong>: N/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: N/A</li>\n<li><strong>CUDA/cuDNN version</strong>: N/A</li>\n<li><strong>GPU model and memory</strong>: N/A</li>\n<li><strong>Exact command to reproduce</strong>: <code>python py_func_failure.py</code></li>\n</ul>\n<h3>Describe the problem</h3>\n<p>This bug occurs when a <code>tf.py_func</code> returns an empty python list <code>[]</code> which is intended to be a tensor of type <code>tf.int64</code> (as defined in the <code>Tout=</code> of the <code>py_func</code>).</p>\n<p>In the <code>ops.script_ops.py</code> the <code>_convert</code> static method is unable to tell the <code>numpy dtype</code> of the incoming tensor when it is an empty list.  This causes the <code>_convert</code> method to execute a <code>np.asarray([], dtype=None, order=\"C\")</code> which gives us a <code>array([], dtype=float64)</code> instead of a <code>array([], dtype=int64)</code> which then does not agree with the output tensor description in the py_func.</p>\n<h3>Source code / logs</h3>\n<p>See gist here for the example that reproduces this issue: <a href=\"https://gist.githubusercontent.com/sabhiram/3f5eaf7e566ef9aefb3ae6e5b8d2edb0/raw/182ab6bc72b5b7b13fd55964c72030cbc53f7cb3/py_func_failure.py\" rel=\"nofollow\">https://gist.githubusercontent.com/sabhiram/3f5eaf7e566ef9aefb3ae6e5b8d2edb0/raw/182ab6bc72b5b7b13fd55964c72030cbc53f7cb3/py_func_failure.py</a></p>\n<p>Inlined here:</p>\n<pre><code>import tensorflow as tf\n\ndef test_func(x):\n    \"\"\" Builds a list of ints with length `x`.\n    \"\"\"\n    return [i for i in range(x)],\n\n\ndef main():\n    t0 = tf.constant(0, dtype=tf.int64)\n    t0 = tf.py_func(test_func, [t0], tf.int64)\n\n    t1 = tf.constant(1, dtype=tf.int64)\n    t1 = tf.py_func(test_func, [t1], tf.int64)\n\n    with tf.Session() as sess:\n        sess.run(t1)            # OK\n        sess.run(t0)            # 0-th value is double, expects int64\n\nif __name__ == \"__main__\":\n    print(tf.GIT_VERSION, tf.VERSION)\n    main()\n</code></pre>", "body_text": "Issue template:\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes (minimal example attached inline)\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Mac OSX 10.12.6\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: Probably\nTensorFlow installed from (source or binary): Binary\nTensorFlow version (use command below): ('v1.5.0-0-g37aa430d84', '1.5.0')\nPython version: 2.7\nBazel version (if compiling from source): N/A\nGCC/Compiler version (if compiling from source): N/A\nCUDA/cuDNN version: N/A\nGPU model and memory: N/A\nExact command to reproduce: python py_func_failure.py\n\nDescribe the problem\nThis bug occurs when a tf.py_func returns an empty python list [] which is intended to be a tensor of type tf.int64 (as defined in the Tout= of the py_func).\nIn the ops.script_ops.py the _convert static method is unable to tell the numpy dtype of the incoming tensor when it is an empty list.  This causes the _convert method to execute a np.asarray([], dtype=None, order=\"C\") which gives us a array([], dtype=float64) instead of a array([], dtype=int64) which then does not agree with the output tensor description in the py_func.\nSource code / logs\nSee gist here for the example that reproduces this issue: https://gist.githubusercontent.com/sabhiram/3f5eaf7e566ef9aefb3ae6e5b8d2edb0/raw/182ab6bc72b5b7b13fd55964c72030cbc53f7cb3/py_func_failure.py\nInlined here:\nimport tensorflow as tf\n\ndef test_func(x):\n    \"\"\" Builds a list of ints with length `x`.\n    \"\"\"\n    return [i for i in range(x)],\n\n\ndef main():\n    t0 = tf.constant(0, dtype=tf.int64)\n    t0 = tf.py_func(test_func, [t0], tf.int64)\n\n    t1 = tf.constant(1, dtype=tf.int64)\n    t1 = tf.py_func(test_func, [t1], tf.int64)\n\n    with tf.Session() as sess:\n        sess.run(t1)            # OK\n        sess.run(t0)            # 0-th value is double, expects int64\n\nif __name__ == \"__main__\":\n    print(tf.GIT_VERSION, tf.VERSION)\n    main()", "body": "### Issue template:\r\n\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes (minimal example attached inline)\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Mac OSX 10.12.6\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**: Probably\r\n- **TensorFlow installed from (source or binary)**: Binary\r\n- **TensorFlow version (use command below)**: ('v1.5.0-0-g37aa430d84', '1.5.0')\r\n- **Python version**: 2.7\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: `python py_func_failure.py`\r\n\r\n### Describe the problem\r\n\r\nThis bug occurs when a `tf.py_func` returns an empty python list `[]` which is intended to be a tensor of type `tf.int64` (as defined in the `Tout=` of the `py_func`). \r\n\r\nIn the `ops.script_ops.py` the `_convert` static method is unable to tell the `numpy dtype` of the incoming tensor when it is an empty list.  This causes the `_convert` method to execute a `np.asarray([], dtype=None, order=\"C\")` which gives us a `array([], dtype=float64)` instead of a `array([], dtype=int64)` which then does not agree with the output tensor description in the py_func. \r\n\r\n### Source code / logs\r\n\r\nSee gist here for the example that reproduces this issue: https://gist.githubusercontent.com/sabhiram/3f5eaf7e566ef9aefb3ae6e5b8d2edb0/raw/182ab6bc72b5b7b13fd55964c72030cbc53f7cb3/py_func_failure.py\r\n\r\nInlined here:\r\n```\r\nimport tensorflow as tf\r\n\r\ndef test_func(x):\r\n    \"\"\" Builds a list of ints with length `x`.\r\n    \"\"\"\r\n    return [i for i in range(x)],\r\n\r\n\r\ndef main():\r\n    t0 = tf.constant(0, dtype=tf.int64)\r\n    t0 = tf.py_func(test_func, [t0], tf.int64)\r\n\r\n    t1 = tf.constant(1, dtype=tf.int64)\r\n    t1 = tf.py_func(test_func, [t1], tf.int64)\r\n\r\n    with tf.Session() as sess:\r\n        sess.run(t1)            # OK\r\n        sess.run(t0)            # 0-th value is double, expects int64\r\n\r\nif __name__ == \"__main__\":\r\n    print(tf.GIT_VERSION, tf.VERSION)\r\n    main()\r\n```"}