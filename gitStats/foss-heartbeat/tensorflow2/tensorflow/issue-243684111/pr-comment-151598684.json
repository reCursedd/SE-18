{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/151598684", "pull_request_review_id": 77334382, "id": 151598684, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MTU5ODY4NA==", "diff_hunk": "@@ -1556,5 +1557,94 @@ def benchmarkDynamicRNNWithMultiLSTMCell(self):\n                   benchmark_results[\"wall_time\"]]]))\n \n \n+class WeightNormLSTMCellTest(test.TestCase):\n+  \"\"\"Compared cell output with pre-calculated values.\"\"\"\n+\n+  def _cell_output(self, cell):\n+    \"\"\"Calculate cell output\"\"\"\n+\n+    with self.test_session() as sess:\n+      init = init_ops.constant_initializer(0.5)\n+      with variable_scope.variable_scope(\"root\",\n+                                         initializer=init):\n+        x = array_ops.zeros([1, 2])\n+        c0 = array_ops.zeros([1, 2])\n+        h0 = array_ops.zeros([1, 2])\n+\n+        state0 = rnn_cell.LSTMStateTuple(c0, h0)\n+\n+        xout, sout = cell()(x, state0)\n+\n+      sess.run([variables.global_variables_initializer()])\n+      res = sess.run([xout, sout], {\n+          x.name: np.array([[1., 1.]]),\n+          c0.name: 0.1 * np.asarray([[0, 1]]),\n+          h0.name: 0.1 * np.asarray([[2, 3]]),\n+      })\n+\n+    actual_state_c = res[1].c\n+    actual_state_h = res[1].h\n+\n+    return actual_state_c, actual_state_h\n+\n+  def testBasicCell(self):\n+    \"\"\"Tests cell w/o peepholes and w/o normalisation\"\"\"\n+\n+    cell = lambda: contrib_rnn_cell.WeightNormLSTMCell(2,\n+                                                       norm=False,\n+                                                       use_peepholes=False)\n+\n+    actual_c, actual_h = self._cell_output(cell)\n+\n+    expected_c = np.array([[0.65937078, 0.74983585]])\n+    expected_h = np.array([[0.44923624, 0.49362513]])\n+\n+    self.assertAllClose(expected_c, actual_c, 1e-5)\n+    self.assertAllClose(expected_h, actual_h, 1e-5)\n+\n+  def testNonbasicCell(self):\n+    \"\"\"Tests cell with peepholes and w/o normalisation\"\"\"\n+    cell = lambda: contrib_rnn_cell.WeightNormLSTMCell(2,\n+                                                       norm=False,\n+                                                       use_peepholes=True)\n+    actual_c, actual_h = self._cell_output(cell)\n+\n+    expected_c = np.array([[0.65937084, 0.7574988]])\n+    expected_h = np.array([[0.4792085, 0.53470564]])\n+\n+    self.assertAllClose(expected_c, actual_c, 1e-5)\n+    self.assertAllClose(expected_h, actual_h, 1e-5)\n+\n+\n+  def testBasicCellWithNorm(self):\n+    \"\"\"Tests cell w/o peepholes and with normalisation\"\"\"\n+\n+    cell = lambda: contrib_rnn_cell.WeightNormLSTMCell(2,", "path": "tensorflow/contrib/rnn/python/kernel_tests/rnn_cell_test.py", "position": null, "original_position": 74, "commit_id": "945a5ecb172122e3b34eb5bbaf50b7e76b5fa155", "original_commit_id": "dfee744a629911fd500c12bdba26c8f6ffe7fb58", "user": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "body": "Make this a def cell, multiline lambdas are discouraged", "created_at": "2017-11-17T03:54:46Z", "updated_at": "2018-01-03T04:43:42Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/11573#discussion_r151598684", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11573", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/151598684"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/11573#discussion_r151598684"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11573"}}, "body_html": "<p>Make this a def cell, multiline lambdas are discouraged</p>", "body_text": "Make this a def cell, multiline lambdas are discouraged"}