{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/356249750", "html_url": "https://github.com/tensorflow/tensorflow/issues/15876#issuecomment-356249750", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15876", "id": 356249750, "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjI0OTc1MA==", "user": {"login": "lissyx", "id": 1645737, "node_id": "MDQ6VXNlcjE2NDU3Mzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1645737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lissyx", "html_url": "https://github.com/lissyx", "followers_url": "https://api.github.com/users/lissyx/followers", "following_url": "https://api.github.com/users/lissyx/following{/other_user}", "gists_url": "https://api.github.com/users/lissyx/gists{/gist_id}", "starred_url": "https://api.github.com/users/lissyx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lissyx/subscriptions", "organizations_url": "https://api.github.com/users/lissyx/orgs", "repos_url": "https://api.github.com/users/lissyx/repos", "events_url": "https://api.github.com/users/lissyx/events{/privacy}", "received_events_url": "https://api.github.com/users/lissyx/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-09T10:51:22Z", "updated_at": "2018-01-09T10:51:22Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Thanks! <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=136291\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/sanjoy\">@sanjoy</a> About linking statically, I was not so sure this would be the best approach, this felt more hacky to me, but I'll give it another try if you recommend so.</p>\n<p>Regarding how we use <code>tfcompile</code>, that might be hacky to you but basically we have <code>deepspeech</code> binary, and <code>libdeepspeech.so</code>, and <code>libdeepspeech_model.so</code>. The last one is generated by <code>tfcompile</code> through <code>tf_library()</code>. We then link <code>deepspeech</code> binary with <code>-ldeepspeech</code> and <code>-ldeepspeech_model</code>. In <code>libdeepspeech</code>, we have codepath that depends on <code>libdeepspeech_model.so</code>.</p>\n<p>We naively compile the whole model using <code>tfcompile</code>, it used to work not too bad :)</p>", "body_text": "Thanks! @sanjoy About linking statically, I was not so sure this would be the best approach, this felt more hacky to me, but I'll give it another try if you recommend so.\nRegarding how we use tfcompile, that might be hacky to you but basically we have deepspeech binary, and libdeepspeech.so, and libdeepspeech_model.so. The last one is generated by tfcompile through tf_library(). We then link deepspeech binary with -ldeepspeech and -ldeepspeech_model. In libdeepspeech, we have codepath that depends on libdeepspeech_model.so.\nWe naively compile the whole model using tfcompile, it used to work not too bad :)", "body": "Thanks! @sanjoy About linking statically, I was not so sure this would be the best approach, this felt more hacky to me, but I'll give it another try if you recommend so.\r\n\r\nRegarding how we use `tfcompile`, that might be hacky to you but basically we have `deepspeech` binary, and `libdeepspeech.so`, and `libdeepspeech_model.so`. The last one is generated by `tfcompile` through `tf_library()`. We then link `deepspeech` binary with `-ldeepspeech` and `-ldeepspeech_model`. In `libdeepspeech`, we have codepath that depends on `libdeepspeech_model.so`.\r\n\r\nWe naively compile the whole model using `tfcompile`, it used to work not too bad :)"}