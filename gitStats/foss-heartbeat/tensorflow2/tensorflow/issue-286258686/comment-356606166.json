{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/356606166", "html_url": "https://github.com/tensorflow/tensorflow/issues/15876#issuecomment-356606166", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15876", "id": 356606166, "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjYwNjE2Ng==", "user": {"login": "lissyx", "id": 1645737, "node_id": "MDQ6VXNlcjE2NDU3Mzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1645737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lissyx", "html_url": "https://github.com/lissyx", "followers_url": "https://api.github.com/users/lissyx/followers", "following_url": "https://api.github.com/users/lissyx/following{/other_user}", "gists_url": "https://api.github.com/users/lissyx/gists{/gist_id}", "starred_url": "https://api.github.com/users/lissyx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lissyx/subscriptions", "organizations_url": "https://api.github.com/users/lissyx/orgs", "repos_url": "https://api.github.com/users/lissyx/repos", "events_url": "https://api.github.com/users/lissyx/events{/privacy}", "received_events_url": "https://api.github.com/users/lissyx/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-10T13:45:15Z", "updated_at": "2018-01-10T14:31:49Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=136291\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/sanjoy\">@sanjoy</a> Oh. I just saw that you mentionned statically linking with the <code>.o</code> from <code>tfcompile</code>. Well, it is my understanding that this is what <code>tf_library</code> is supposed to be doing, isn't it? It does have a dep against <code>\"@org_tensorflow//tensorflow/compiler/xla/service/cpu:runtime_matmul\"</code>. Which, as much as debugging the linkers' <code>.params</code> files, is properly passed. But since the symbol <code>__xla_cpu_runtime_EigenMatMulF32</code> is a callback and that it is hidden, I guess that's why it's not working.</p>", "body_text": "@sanjoy Oh. I just saw that you mentionned statically linking with the .o from tfcompile. Well, it is my understanding that this is what tf_library is supposed to be doing, isn't it? It does have a dep against \"@org_tensorflow//tensorflow/compiler/xla/service/cpu:runtime_matmul\". Which, as much as debugging the linkers' .params files, is properly passed. But since the symbol __xla_cpu_runtime_EigenMatMulF32 is a callback and that it is hidden, I guess that's why it's not working.", "body": "@sanjoy Oh. I just saw that you mentionned statically linking with the `.o` from `tfcompile`. Well, it is my understanding that this is what `tf_library` is supposed to be doing, isn't it? It does have a dep against `\"@org_tensorflow//tensorflow/compiler/xla/service/cpu:runtime_matmul\"`. Which, as much as debugging the linkers' `.params` files, is properly passed. But since the symbol `__xla_cpu_runtime_EigenMatMulF32` is a callback and that it is hidden, I guess that's why it's not working."}