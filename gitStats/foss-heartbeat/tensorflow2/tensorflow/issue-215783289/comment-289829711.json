{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/289829711", "html_url": "https://github.com/tensorflow/tensorflow/issues/8587#issuecomment-289829711", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8587", "id": 289829711, "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTgyOTcxMQ==", "user": {"login": "andrewharp", "id": 3376817, "node_id": "MDQ6VXNlcjMzNzY4MTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/3376817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewharp", "html_url": "https://github.com/andrewharp", "followers_url": "https://api.github.com/users/andrewharp/followers", "following_url": "https://api.github.com/users/andrewharp/following{/other_user}", "gists_url": "https://api.github.com/users/andrewharp/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewharp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewharp/subscriptions", "organizations_url": "https://api.github.com/users/andrewharp/orgs", "repos_url": "https://api.github.com/users/andrewharp/repos", "events_url": "https://api.github.com/users/andrewharp/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewharp/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-28T16:38:57Z", "updated_at": "2017-03-28T16:38:57Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=25011496\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jubjamie\">@jubjamie</a> Right, if building with Gradle you need to manually select the right ABI. If running in an emulator, for example, typically you'll want to select x86 or x86_64.</p>\n<p>It's possible to use bazel to build for multiple ABIs at a time with the --fat_apk_cpu flag. <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/ci_build/builds/android_full.sh\">android_full.sh</a> (which is how we build the nightly APK) passes <code>--fat_apk_cpu=armeabi-v7a,arm64-v8a,x86,x86_64</code></p>\n<p>Contributions welcome to replicate the multi-ABI functionality in build.gradle. It would probably require invoking bazel multiple times, once for each ABI being built, as I believe the --fat_apk_cpu only works when building android_binary targets.</p>", "body_text": "@jubjamie Right, if building with Gradle you need to manually select the right ABI. If running in an emulator, for example, typically you'll want to select x86 or x86_64.\nIt's possible to use bazel to build for multiple ABIs at a time with the --fat_apk_cpu flag. android_full.sh (which is how we build the nightly APK) passes --fat_apk_cpu=armeabi-v7a,arm64-v8a,x86,x86_64\nContributions welcome to replicate the multi-ABI functionality in build.gradle. It would probably require invoking bazel multiple times, once for each ABI being built, as I believe the --fat_apk_cpu only works when building android_binary targets.", "body": "@jubjamie Right, if building with Gradle you need to manually select the right ABI. If running in an emulator, for example, typically you'll want to select x86 or x86_64.\r\n\r\nIt's possible to use bazel to build for multiple ABIs at a time with the --fat_apk_cpu flag. [android_full.sh](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/ci_build/builds/android_full.sh) (which is how we build the nightly APK) passes `--fat_apk_cpu=armeabi-v7a,arm64-v8a,x86,x86_64`\r\n\r\nContributions welcome to replicate the multi-ABI functionality in build.gradle. It would probably require invoking bazel multiple times, once for each ABI being built, as I believe the --fat_apk_cpu only works when building android_binary targets."}