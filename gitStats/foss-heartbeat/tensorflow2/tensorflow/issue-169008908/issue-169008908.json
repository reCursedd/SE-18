{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3613", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3613/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3613/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3613/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/3613", "id": 169008908, "node_id": "MDU6SXNzdWUxNjkwMDg5MDg=", "number": 3613, "title": "Running LinearClassifier.fit with SparseTensor", "user": {"login": "rvanguri", "id": 20804254, "node_id": "MDQ6VXNlcjIwODA0MjU0", "avatar_url": "https://avatars3.githubusercontent.com/u/20804254?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rvanguri", "html_url": "https://github.com/rvanguri", "followers_url": "https://api.github.com/users/rvanguri/followers", "following_url": "https://api.github.com/users/rvanguri/following{/other_user}", "gists_url": "https://api.github.com/users/rvanguri/gists{/gist_id}", "starred_url": "https://api.github.com/users/rvanguri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rvanguri/subscriptions", "organizations_url": "https://api.github.com/users/rvanguri/orgs", "repos_url": "https://api.github.com/users/rvanguri/repos", "events_url": "https://api.github.com/users/rvanguri/events{/privacy}", "received_events_url": "https://api.github.com/users/rvanguri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-02T22:59:16Z", "updated_at": "2016-08-03T18:05:08Z", "closed_at": "2016-08-03T18:04:59Z", "author_association": "NONE", "body_html": "<p>I'm trying to create a LinearClassifer with a sparse binary numpy coo matrix (reports) using a SparseTensor.  This is with TensorFlow 0.9.0</p>\n<p>I do this as follows:</p>\n<pre><code>reports_indices = list()\nrows,cols = reports.nonzero()\nfor row,col in zip(rows,cols):\n   reports_indices.append([row,col])\n\nx_sparsetensor = tf.SparseTensor(\n  indices=reports_indices,\n  values=[1] * len(reports_indices),\n  shape=[reports.shape[0],reports.shape[1]])\n</code></pre>\n<p>The dimensions of reports is 10K by 1.5K.</p>\n<p>I then setup the LinearClassifier as follows:</p>\n<pre><code>m = tf.contrib.learn.LinearClassifier()\n\nm.fit(x=drug_cols,y=(1*y_vec).todense(),input_fn=None)\n</code></pre>\n<p>This results in the following error:<br>\n<code>TypeError: object of type 'Tensor' has no len() </code></p>\n<p>Is my construction incorrect for some reason?  Thanks in advance for any help.</p>", "body_text": "I'm trying to create a LinearClassifer with a sparse binary numpy coo matrix (reports) using a SparseTensor.  This is with TensorFlow 0.9.0\nI do this as follows:\nreports_indices = list()\nrows,cols = reports.nonzero()\nfor row,col in zip(rows,cols):\n   reports_indices.append([row,col])\n\nx_sparsetensor = tf.SparseTensor(\n  indices=reports_indices,\n  values=[1] * len(reports_indices),\n  shape=[reports.shape[0],reports.shape[1]])\n\nThe dimensions of reports is 10K by 1.5K.\nI then setup the LinearClassifier as follows:\nm = tf.contrib.learn.LinearClassifier()\n\nm.fit(x=drug_cols,y=(1*y_vec).todense(),input_fn=None)\n\nThis results in the following error:\nTypeError: object of type 'Tensor' has no len() \nIs my construction incorrect for some reason?  Thanks in advance for any help.", "body": "I'm trying to create a LinearClassifer with a sparse binary numpy coo matrix (reports) using a SparseTensor.  This is with TensorFlow 0.9.0\n\nI do this as follows:\n\n```\nreports_indices = list()\nrows,cols = reports.nonzero()\nfor row,col in zip(rows,cols):\n   reports_indices.append([row,col])\n\nx_sparsetensor = tf.SparseTensor(\n  indices=reports_indices,\n  values=[1] * len(reports_indices),\n  shape=[reports.shape[0],reports.shape[1]])\n```\n\nThe dimensions of reports is 10K by 1.5K.\n\nI then setup the LinearClassifier as follows:\n\n```\nm = tf.contrib.learn.LinearClassifier()\n\nm.fit(x=drug_cols,y=(1*y_vec).todense(),input_fn=None)\n```\n\nThis results in the following error:\n`TypeError: object of type 'Tensor' has no len()\n`\n\nIs my construction incorrect for some reason?  Thanks in advance for any help.\n"}