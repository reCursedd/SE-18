{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16749", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16749/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16749/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16749/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16749", "id": 294177813, "node_id": "MDU6SXNzdWUyOTQxNzc4MTM=", "number": 16749, "title": "Cross Compiled For Rpi Successfully on Gentoo. No Scope and Session support.", "user": {"login": "mndar", "id": 10995098, "node_id": "MDQ6VXNlcjEwOTk1MDk4", "avatar_url": "https://avatars3.githubusercontent.com/u/10995098?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mndar", "html_url": "https://github.com/mndar", "followers_url": "https://api.github.com/users/mndar/followers", "following_url": "https://api.github.com/users/mndar/following{/other_user}", "gists_url": "https://api.github.com/users/mndar/gists{/gist_id}", "starred_url": "https://api.github.com/users/mndar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mndar/subscriptions", "organizations_url": "https://api.github.com/users/mndar/orgs", "repos_url": "https://api.github.com/users/mndar/repos", "events_url": "https://api.github.com/users/mndar/events{/privacy}", "received_events_url": "https://api.github.com/users/mndar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-04T07:42:49Z", "updated_at": "2018-02-05T16:45:36Z", "closed_at": "2018-02-05T16:45:35Z", "author_association": "NONE", "body_html": "<p>Hello everyone.<br>\nI cross compiled from tensorflow master using armv7a-hardfloat-linux-gnueabi-gcc built using crossdev on Gentoo AMD64</p>\n<p><em><strong>make -j9 -f tensorflow/contrib/makefile/Makefile HOST_OS=LINUX TARGET=PI OPTFLAGS=\"-Os -mfpu=neon-vfpv4 -funsafe-math-optimizations -ftree-vectorize\" CXX=armv7a-hardfloat-linux-gnueabi-g++</strong></em></p>\n<p>I am able to execute on Rpi, the sample label_image.cc program by compiling it manually using</p>\n<p><strong><em>armv7a-hardfloat-linux-gnueabi-g++ -Wl,--whole-archive lib/libtensorflow-core.a -Wl,--whole-archive lib/libnsync.a -Wl,--no-whole-archive lib/libprotobuf.a -ldl -lm -lpthread -lz -I include/ -I include/public/ label_image.cc -std=c++11 <code>armv7a-hardfloat-linux-gnueabi-pkg-config --cflags --libs libjpeg</code> -o test</em></strong></p>\n<p>However, when trying to compile a program that uses tensorflow::Scope and tensorflow::ClientSession, i get undefined references to them</p>\n<p><em>$ armv7a-hardfloat-linux-gnueabi-g++ -Wl,--whole-archive lib/libtensorflow-core.a -Wl,--whole-archive lib/libnsync.a -Wl,--no-whole-archive lib/libprotobuf.a -ldl -lm -lpthread -lz -I include/ -I include/public/ test.cpp -std=c++11 -o test<br>\n/tmp/ccZyvm2X.o: In function <code>main': test.cpp:(.text+0x9c): undefined reference to </code>tensorflow::Scope::NewRootScope()'<br>\ntest.cpp:(.text+0x114): undefined reference to <code>tensorflow::Input::Initializer::Initializer(std::initializer_list&lt;tensorflow::Input::Initializer&gt; const&amp;)' test.cpp:(.text+0x128): undefined reference to </code>tensorflow::ops::Const(tensorflow::Scope const&amp;, tensorflow::Input::Initializer const&amp;)'<br>\ntest.cpp:(.text+0x1a4): undefined reference to <code>tensorflow::Input::Initializer::Initializer(std::initializer_list&lt;tensorflow::Input::Initializer&gt; const&amp;)' test.cpp:(.text+0x1b8): undefined reference to </code>tensorflow::ops::Const(tensorflow::Scope const&amp;, tensorflow::Input::Initializer const&amp;)'<br>\ntest.cpp:(.text+0x220): undefined reference to <code>tensorflow::Scope::WithOpName(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) const' test.cpp:(.text+0x280): undefined reference to </code>tensorflow::ops::MatMul::MatMul(tensorflow::Scope const&amp;, tensorflow::Input, tensorflow::Input, tensorflow::ops::MatMul::Attrs const&amp;)'<br>\ntest.cpp:(.text+0x2a4): undefined reference to <code>tensorflow::Scope::~Scope()' test.cpp:(.text+0x2dc): undefined reference to </code>tensorflow::ClientSession::ClientSession(tensorflow::Scope const&amp;)'<br>\ntest.cpp:(.text+0x334): undefined reference to <code>tensorflow::ClientSession::Run(std::vector&lt;tensorflow::Output, std::allocator&lt;tensorflow::Output&gt; &gt; const&amp;, std::vector&lt;tensorflow::Tensor, std::allocator&lt;tensorflow::Tensor&gt; &gt;*) const' test.cpp:(.text+0x448): undefined reference to </code>tensorflow::ClientSession::~ClientSession()'<br>\ntest.cpp:(.text+0x484): undefined reference to <code>tensorflow::Scope::~Scope()' test.cpp:(.text+0x53c): undefined reference to </code>tensorflow::Scope::~Scope()'<br>\ntest.cpp:(.text+0x5e4): undefined reference to <code>tensorflow::ClientSession::~ClientSession()' test.cpp:(.text+0x62c): undefined reference to </code>tensorflow::Scope::~Scope()'<br>\ncollect2: error: ld returned 1 exit status</em></p>\n<p>Has support for <strong>Scope</strong> and <strong>ClientSession</strong> intentionally been left out of the Makefile?<br>\nIs there a way to add support for it?</p>\n<p>Regards<br>\nMandar Joshi</p>", "body_text": "Hello everyone.\nI cross compiled from tensorflow master using armv7a-hardfloat-linux-gnueabi-gcc built using crossdev on Gentoo AMD64\nmake -j9 -f tensorflow/contrib/makefile/Makefile HOST_OS=LINUX TARGET=PI OPTFLAGS=\"-Os -mfpu=neon-vfpv4 -funsafe-math-optimizations -ftree-vectorize\" CXX=armv7a-hardfloat-linux-gnueabi-g++\nI am able to execute on Rpi, the sample label_image.cc program by compiling it manually using\narmv7a-hardfloat-linux-gnueabi-g++ -Wl,--whole-archive lib/libtensorflow-core.a -Wl,--whole-archive lib/libnsync.a -Wl,--no-whole-archive lib/libprotobuf.a -ldl -lm -lpthread -lz -I include/ -I include/public/ label_image.cc -std=c++11 armv7a-hardfloat-linux-gnueabi-pkg-config --cflags --libs libjpeg -o test\nHowever, when trying to compile a program that uses tensorflow::Scope and tensorflow::ClientSession, i get undefined references to them\n$ armv7a-hardfloat-linux-gnueabi-g++ -Wl,--whole-archive lib/libtensorflow-core.a -Wl,--whole-archive lib/libnsync.a -Wl,--no-whole-archive lib/libprotobuf.a -ldl -lm -lpthread -lz -I include/ -I include/public/ test.cpp -std=c++11 -o test\n/tmp/ccZyvm2X.o: In function main': test.cpp:(.text+0x9c): undefined reference to tensorflow::Scope::NewRootScope()'\ntest.cpp:(.text+0x114): undefined reference to tensorflow::Input::Initializer::Initializer(std::initializer_list<tensorflow::Input::Initializer> const&)' test.cpp:(.text+0x128): undefined reference to tensorflow::ops::Const(tensorflow::Scope const&, tensorflow::Input::Initializer const&)'\ntest.cpp:(.text+0x1a4): undefined reference to tensorflow::Input::Initializer::Initializer(std::initializer_list<tensorflow::Input::Initializer> const&)' test.cpp:(.text+0x1b8): undefined reference to tensorflow::ops::Const(tensorflow::Scope const&, tensorflow::Input::Initializer const&)'\ntest.cpp:(.text+0x220): undefined reference to tensorflow::Scope::WithOpName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const' test.cpp:(.text+0x280): undefined reference to tensorflow::ops::MatMul::MatMul(tensorflow::Scope const&, tensorflow::Input, tensorflow::Input, tensorflow::ops::MatMul::Attrs const&)'\ntest.cpp:(.text+0x2a4): undefined reference to tensorflow::Scope::~Scope()' test.cpp:(.text+0x2dc): undefined reference to tensorflow::ClientSession::ClientSession(tensorflow::Scope const&)'\ntest.cpp:(.text+0x334): undefined reference to tensorflow::ClientSession::Run(std::vector<tensorflow::Output, std::allocator<tensorflow::Output> > const&, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*) const' test.cpp:(.text+0x448): undefined reference to tensorflow::ClientSession::~ClientSession()'\ntest.cpp:(.text+0x484): undefined reference to tensorflow::Scope::~Scope()' test.cpp:(.text+0x53c): undefined reference to tensorflow::Scope::~Scope()'\ntest.cpp:(.text+0x5e4): undefined reference to tensorflow::ClientSession::~ClientSession()' test.cpp:(.text+0x62c): undefined reference to tensorflow::Scope::~Scope()'\ncollect2: error: ld returned 1 exit status\nHas support for Scope and ClientSession intentionally been left out of the Makefile?\nIs there a way to add support for it?\nRegards\nMandar Joshi", "body": "Hello everyone.\r\nI cross compiled from tensorflow master using armv7a-hardfloat-linux-gnueabi-gcc built using crossdev on Gentoo AMD64\r\n\r\n_**make -j9 -f tensorflow/contrib/makefile/Makefile HOST_OS=LINUX TARGET=PI OPTFLAGS=\"-Os -mfpu=neon-vfpv4 -funsafe-math-optimizations -ftree-vectorize\" CXX=armv7a-hardfloat-linux-gnueabi-g++**_\r\n\r\n I am able to execute on Rpi, the sample label_image.cc program by compiling it manually using\r\n\r\n**_armv7a-hardfloat-linux-gnueabi-g++ -Wl,--whole-archive lib/libtensorflow-core.a -Wl,--whole-archive lib/libnsync.a -Wl,--no-whole-archive lib/libprotobuf.a -ldl -lm -lpthread -lz -I include/ -I include/public/ label_image.cc -std=c++11 `armv7a-hardfloat-linux-gnueabi-pkg-config --cflags --libs libjpeg` -o test_**\r\n\r\nHowever, when trying to compile a program that uses tensorflow::Scope and tensorflow::ClientSession, i get undefined references to them\r\n\r\n\r\n _$ armv7a-hardfloat-linux-gnueabi-g++ -Wl,--whole-archive lib/libtensorflow-core.a -Wl,--whole-archive lib/libnsync.a -Wl,--no-whole-archive lib/libprotobuf.a -ldl -lm -lpthread -lz -I include/ -I include/public/ test.cpp -std=c++11 -o test\r\n/tmp/ccZyvm2X.o: In function `main':\r\ntest.cpp:(.text+0x9c): undefined reference to `tensorflow::Scope::NewRootScope()'\r\ntest.cpp:(.text+0x114): undefined reference to `tensorflow::Input::Initializer::Initializer(std::initializer_list<tensorflow::Input::Initializer> const&)'\r\ntest.cpp:(.text+0x128): undefined reference to `tensorflow::ops::Const(tensorflow::Scope const&, tensorflow::Input::Initializer const&)'\r\ntest.cpp:(.text+0x1a4): undefined reference to `tensorflow::Input::Initializer::Initializer(std::initializer_list<tensorflow::Input::Initializer> const&)'\r\ntest.cpp:(.text+0x1b8): undefined reference to `tensorflow::ops::Const(tensorflow::Scope const&, tensorflow::Input::Initializer const&)'\r\ntest.cpp:(.text+0x220): undefined reference to `tensorflow::Scope::WithOpName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'\r\ntest.cpp:(.text+0x280): undefined reference to `tensorflow::ops::MatMul::MatMul(tensorflow::Scope const&, tensorflow::Input, tensorflow::Input, tensorflow::ops::MatMul::Attrs const&)'\r\ntest.cpp:(.text+0x2a4): undefined reference to `tensorflow::Scope::~Scope()'\r\ntest.cpp:(.text+0x2dc): undefined reference to `tensorflow::ClientSession::ClientSession(tensorflow::Scope const&)'\r\ntest.cpp:(.text+0x334): undefined reference to `tensorflow::ClientSession::Run(std::vector<tensorflow::Output, std::allocator<tensorflow::Output> > const&, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*) const'\r\ntest.cpp:(.text+0x448): undefined reference to `tensorflow::ClientSession::~ClientSession()'\r\ntest.cpp:(.text+0x484): undefined reference to `tensorflow::Scope::~Scope()'\r\ntest.cpp:(.text+0x53c): undefined reference to `tensorflow::Scope::~Scope()'\r\ntest.cpp:(.text+0x5e4): undefined reference to `tensorflow::ClientSession::~ClientSession()'\r\ntest.cpp:(.text+0x62c): undefined reference to `tensorflow::Scope::~Scope()'\r\ncollect2: error: ld returned 1 exit status_\r\n\r\nHas support for **Scope** and **ClientSession** intentionally been left out of the Makefile?\r\nIs there a way to add support for it?\r\n\r\nRegards\r\nMandar Joshi"}