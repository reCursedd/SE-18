{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11638", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11638/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11638/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11638/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/11638", "id": 244300577, "node_id": "MDU6SXNzdWUyNDQzMDA1Nzc=", "number": 11638, "title": "Probably wrong implementation for tf.layers.max_pooling1d when data_format='channels_first'", "user": {"login": "ZekunZh", "id": 16140400, "node_id": "MDQ6VXNlcjE2MTQwNDAw", "avatar_url": "https://avatars1.githubusercontent.com/u/16140400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZekunZh", "html_url": "https://github.com/ZekunZh", "followers_url": "https://api.github.com/users/ZekunZh/followers", "following_url": "https://api.github.com/users/ZekunZh/following{/other_user}", "gists_url": "https://api.github.com/users/ZekunZh/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZekunZh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZekunZh/subscriptions", "organizations_url": "https://api.github.com/users/ZekunZh/orgs", "repos_url": "https://api.github.com/users/ZekunZh/repos", "events_url": "https://api.github.com/users/ZekunZh/events{/privacy}", "received_events_url": "https://api.github.com/users/ZekunZh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "ZekunZh", "id": 16140400, "node_id": "MDQ6VXNlcjE2MTQwNDAw", "avatar_url": "https://avatars1.githubusercontent.com/u/16140400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZekunZh", "html_url": "https://github.com/ZekunZh", "followers_url": "https://api.github.com/users/ZekunZh/followers", "following_url": "https://api.github.com/users/ZekunZh/following{/other_user}", "gists_url": "https://api.github.com/users/ZekunZh/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZekunZh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZekunZh/subscriptions", "organizations_url": "https://api.github.com/users/ZekunZh/orgs", "repos_url": "https://api.github.com/users/ZekunZh/repos", "events_url": "https://api.github.com/users/ZekunZh/events{/privacy}", "received_events_url": "https://api.github.com/users/ZekunZh/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ZekunZh", "id": 16140400, "node_id": "MDQ6VXNlcjE2MTQwNDAw", "avatar_url": "https://avatars1.githubusercontent.com/u/16140400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZekunZh", "html_url": "https://github.com/ZekunZh", "followers_url": "https://api.github.com/users/ZekunZh/followers", "following_url": "https://api.github.com/users/ZekunZh/following{/other_user}", "gists_url": "https://api.github.com/users/ZekunZh/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZekunZh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZekunZh/subscriptions", "organizations_url": "https://api.github.com/users/ZekunZh/orgs", "repos_url": "https://api.github.com/users/ZekunZh/repos", "events_url": "https://api.github.com/users/ZekunZh/events{/privacy}", "received_events_url": "https://api.github.com/users/ZekunZh/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2017-07-20T09:33:38Z", "updated_at": "2018-02-09T13:06:36Z", "closed_at": "2018-02-09T13:06:36Z", "author_association": "NONE", "body_html": "<p>In function <code>call</code> of class <code>_Pooling1D</code>,  when the input <code>data_format='channels_first'</code>, it should transform input tensor from '<strong>N,C,H</strong>' to '<strong>N,C,H,W</strong>' (batch_size, channels, height, width), meaning that we should expand dimension on the last dimension.</p>\n<p>However, in the code we use <code>inputs = array_ops.expand_dims(inputs, 1)</code>, expanding on the second dimension and transforming from '<strong>N,C,H</strong>' to '<strong>N,1,C,H</strong>'. Then the <code>pool_shape</code> and <code>strides</code> are looking at the third dimension, which is not consistant with our <code>expand_dims(inputs, 1)</code> used before.</p>\n<p>I think the code should be changed to <code>inputs = array_ops.expand_dims(inputs, -1)</code> and <code>return array_ops.squeeze(outputs, -1)</code>. Using <strong>-1</strong> will expand and squeeze on the last dimension, transforming from '<strong>N,C,H</strong>' to **'<strong>N,C,H,1</strong>', and then doing <code>pool_shape</code> and <code>strides</code> on the third dimension.</p>\n<h3>Source Code</h3>\n<hr>\n<pre><code>  def call(self, inputs):\n    # There is no TF op for 1D pooling, hence we make the inputs 4D.\n    if self.data_format == 'channels_last':\n      inputs = array_ops.expand_dims(inputs, 2)\n      pool_shape = (1,) + self.pool_size + (1, 1)\n      strides = (1,) + self.strides + (1, 1)\n      data_format = 'NHWC'\n    else:\n      inputs = array_ops.expand_dims(inputs, 1)\n      pool_shape = (1, 1) + self.pool_size + (1,)\n      strides = (1, 1) + self.strides + (1,)\n      data_format = 'NCHW'\n</code></pre>", "body_text": "In function call of class _Pooling1D,  when the input data_format='channels_first', it should transform input tensor from 'N,C,H' to 'N,C,H,W' (batch_size, channels, height, width), meaning that we should expand dimension on the last dimension.\nHowever, in the code we use inputs = array_ops.expand_dims(inputs, 1), expanding on the second dimension and transforming from 'N,C,H' to 'N,1,C,H'. Then the pool_shape and strides are looking at the third dimension, which is not consistant with our expand_dims(inputs, 1) used before.\nI think the code should be changed to inputs = array_ops.expand_dims(inputs, -1) and return array_ops.squeeze(outputs, -1). Using -1 will expand and squeeze on the last dimension, transforming from 'N,C,H' to **'N,C,H,1', and then doing pool_shape and strides on the third dimension.\nSource Code\n\n  def call(self, inputs):\n    # There is no TF op for 1D pooling, hence we make the inputs 4D.\n    if self.data_format == 'channels_last':\n      inputs = array_ops.expand_dims(inputs, 2)\n      pool_shape = (1,) + self.pool_size + (1, 1)\n      strides = (1,) + self.strides + (1, 1)\n      data_format = 'NHWC'\n    else:\n      inputs = array_ops.expand_dims(inputs, 1)\n      pool_shape = (1, 1) + self.pool_size + (1,)\n      strides = (1, 1) + self.strides + (1,)\n      data_format = 'NCHW'", "body": "In function ``call`` of class ``_Pooling1D``,  when the input ``data_format='channels_first'``, it should transform input tensor from '**N,C,H**' to '**N,C,H,W**' (batch_size, channels, height, width), meaning that we should expand dimension on the last dimension. \r\n\r\nHowever, in the code we use ``inputs = array_ops.expand_dims(inputs, 1)``, expanding on the second dimension and transforming from '**N,C,H**' to '**N,1,C,H**'. Then the ``pool_shape`` and ``strides`` are looking at the third dimension, which is not consistant with our ``expand_dims(inputs, 1)`` used before.\r\n\r\nI think the code should be changed to ``inputs = array_ops.expand_dims(inputs, -1)`` and ``return array_ops.squeeze(outputs, -1)``. Using **-1** will expand and squeeze on the last dimension, transforming from '**N,C,H**' to **'**N,C,H,1**', and then doing ``pool_shape`` and ``strides`` on the third dimension.\r\n\r\n### Source Code\r\n------------------------\r\n````\r\n  def call(self, inputs):\r\n    # There is no TF op for 1D pooling, hence we make the inputs 4D.\r\n    if self.data_format == 'channels_last':\r\n      inputs = array_ops.expand_dims(inputs, 2)\r\n      pool_shape = (1,) + self.pool_size + (1, 1)\r\n      strides = (1,) + self.strides + (1, 1)\r\n      data_format = 'NHWC'\r\n    else:\r\n      inputs = array_ops.expand_dims(inputs, 1)\r\n      pool_shape = (1, 1) + self.pool_size + (1,)\r\n      strides = (1, 1) + self.strides + (1,)\r\n      data_format = 'NCHW'\r\n````\r\n\r\n"}