{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/401222302", "html_url": "https://github.com/tensorflow/tensorflow/issues/20347#issuecomment-401222302", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20347", "id": 401222302, "node_id": "MDEyOklzc3VlQ29tbWVudDQwMTIyMjMwMg==", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-29T01:40:46Z", "updated_at": "2018-06-29T01:40:46Z", "author_association": "MEMBER", "body_html": "<p>Thanks for the report <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=10197711\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/marcelino-m\">@marcelino-m</a> - it surely shouldn't crash, so I'll look into that.</p>\n<p>In the mean time, a workaround would be to explicitly convert to tensors before creating the dataset, with something like this:</p>\n<pre><code>import tensorflow as tf\nimport pandas as pd\nimport numpy as np\ntf.enable_eager_execution()\n\ntrain = pd.DataFrame({'A': [1, 2, 3], 'B': [4, 5, 6]}, index=[2, 1, 4])\nlabel = pd.Series([7, 8, 9], index=[2, 1, 4])\n\nnp_train  = {k: np.array(v) for k, v in dict(train).items()}\nnp_label = np.array(label)\nds = tf.data.Dataset.from_tensor_slices((np_train, np_label))\n</code></pre>", "body_text": "Thanks for the report @marcelino-m - it surely shouldn't crash, so I'll look into that.\nIn the mean time, a workaround would be to explicitly convert to tensors before creating the dataset, with something like this:\nimport tensorflow as tf\nimport pandas as pd\nimport numpy as np\ntf.enable_eager_execution()\n\ntrain = pd.DataFrame({'A': [1, 2, 3], 'B': [4, 5, 6]}, index=[2, 1, 4])\nlabel = pd.Series([7, 8, 9], index=[2, 1, 4])\n\nnp_train  = {k: np.array(v) for k, v in dict(train).items()}\nnp_label = np.array(label)\nds = tf.data.Dataset.from_tensor_slices((np_train, np_label))", "body": "Thanks for the report @marcelino-m - it surely shouldn't crash, so I'll look into that.\r\n\r\nIn the mean time, a workaround would be to explicitly convert to tensors before creating the dataset, with something like this:\r\n\r\n```\r\nimport tensorflow as tf\r\nimport pandas as pd\r\nimport numpy as np\r\ntf.enable_eager_execution()\r\n\r\ntrain = pd.DataFrame({'A': [1, 2, 3], 'B': [4, 5, 6]}, index=[2, 1, 4])\r\nlabel = pd.Series([7, 8, 9], index=[2, 1, 4])\r\n\r\nnp_train  = {k: np.array(v) for k, v in dict(train).items()}\r\nnp_label = np.array(label)\r\nds = tf.data.Dataset.from_tensor_slices((np_train, np_label))\r\n```\r\n\r\n"}