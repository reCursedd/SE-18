{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/415819097", "html_url": "https://github.com/tensorflow/tensorflow/issues/21312#issuecomment-415819097", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21312", "id": 415819097, "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTgxOTA5Nw==", "user": {"login": "dhingratul", "id": 4759327, "node_id": "MDQ6VXNlcjQ3NTkzMjc=", "avatar_url": "https://avatars2.githubusercontent.com/u/4759327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhingratul", "html_url": "https://github.com/dhingratul", "followers_url": "https://api.github.com/users/dhingratul/followers", "following_url": "https://api.github.com/users/dhingratul/following{/other_user}", "gists_url": "https://api.github.com/users/dhingratul/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhingratul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhingratul/subscriptions", "organizations_url": "https://api.github.com/users/dhingratul/orgs", "repos_url": "https://api.github.com/users/dhingratul/repos", "events_url": "https://api.github.com/users/dhingratul/events{/privacy}", "received_events_url": "https://api.github.com/users/dhingratul/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-24T16:58:08Z", "updated_at": "2018-08-24T21:10:11Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=16018\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/asimshankar\">@asimshankar</a> Thanks for your help, for anyone's reference, this is a working version of code. You can add this snippet to a readme, wherever you find it relevant</p>\n<p>C++ snippet<br>\n<code>    std::string outfile = \"serialized\"; run_metadata.step_stats().SerializeToString(&amp;outfile); std::ofstream ofs(\"Timeline\"); ofs &lt;&lt; outfile;  ofs.close();</code></p>\n<p>Python snippet<br>\n<code>from tensorflow.core.framework.step_stats_pb2 import StepStats from tensorflow.python.client import timeline step_stats = StepStats() with open(\"Timeline\", \"rb\") as f: step_stats.ParseFromString(f.read()) x = timeline.Timeline(step_stats).generate_chrome_trace_format()  with open('data.json', 'w') as outfile: outfile.write(x)</code></p>\n<p>Also look at this if you just need to print the trace<br>\n<code>    tensorflow::StatSummarizer stat_summarizer(graph_def); stat_summarizer.ProcessStepStats(run_metadata.step_stats()); stat_summarizer.PrintStepStats(); }</code></p>", "body_text": "@asimshankar Thanks for your help, for anyone's reference, this is a working version of code. You can add this snippet to a readme, wherever you find it relevant\nC++ snippet\n    std::string outfile = \"serialized\"; run_metadata.step_stats().SerializeToString(&outfile); std::ofstream ofs(\"Timeline\"); ofs << outfile;  ofs.close();\nPython snippet\nfrom tensorflow.core.framework.step_stats_pb2 import StepStats from tensorflow.python.client import timeline step_stats = StepStats() with open(\"Timeline\", \"rb\") as f: step_stats.ParseFromString(f.read()) x = timeline.Timeline(step_stats).generate_chrome_trace_format()  with open('data.json', 'w') as outfile: outfile.write(x)\nAlso look at this if you just need to print the trace\n    tensorflow::StatSummarizer stat_summarizer(graph_def); stat_summarizer.ProcessStepStats(run_metadata.step_stats()); stat_summarizer.PrintStepStats(); }", "body": "@asimshankar Thanks for your help, for anyone's reference, this is a working version of code. You can add this snippet to a readme, wherever you find it relevant\r\n\r\nC++ snippet\r\n`    std::string outfile = \"serialized\";\r\n    run_metadata.step_stats().SerializeToString(&outfile);\r\n    std::ofstream ofs(\"Timeline\");\r\n    ofs << outfile; \r\n    ofs.close();`\r\n\r\nPython snippet\r\n`from tensorflow.core.framework.step_stats_pb2 import StepStats\r\nfrom tensorflow.python.client import timeline\r\nstep_stats = StepStats()\r\nwith open(\"Timeline\", \"rb\") as f:\r\n    step_stats.ParseFromString(f.read())\r\nx = timeline.Timeline(step_stats).generate_chrome_trace_format() \r\nwith open('data.json', 'w') as outfile:\r\n    outfile.write(x)`\r\n\r\nAlso look at this if you just need to print the trace\r\n`    tensorflow::StatSummarizer stat_summarizer(graph_def);\r\n    stat_summarizer.ProcessStepStats(run_metadata.step_stats());\r\n    stat_summarizer.PrintStepStats();\r\n    }`"}