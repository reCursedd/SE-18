{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/303744600", "html_url": "https://github.com/tensorflow/tensorflow/issues/7951#issuecomment-303744600", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7951", "id": 303744600, "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzc0NDYwMA==", "user": {"login": "EdeMeijer", "id": 5758565, "node_id": "MDQ6VXNlcjU3NTg1NjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/5758565?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdeMeijer", "html_url": "https://github.com/EdeMeijer", "followers_url": "https://api.github.com/users/EdeMeijer/followers", "following_url": "https://api.github.com/users/EdeMeijer/following{/other_user}", "gists_url": "https://api.github.com/users/EdeMeijer/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdeMeijer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdeMeijer/subscriptions", "organizations_url": "https://api.github.com/users/EdeMeijer/orgs", "repos_url": "https://api.github.com/users/EdeMeijer/repos", "events_url": "https://api.github.com/users/EdeMeijer/events{/privacy}", "received_events_url": "https://api.github.com/users/EdeMeijer/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-24T14:39:52Z", "updated_at": "2017-05-24T14:40:24Z", "author_association": "NONE", "body_html": "<p>Wanted to let you know I migrated from queues to Dataset and it's been great. Definitely going in the right direction. There's been a few things that are currently missing and I had to work around:</p>\n<ul>\n<li>Being able to use dictionaries for Tensor structs, in addition to tuples and lists (this would be very natural when parsing Examples, which have named features and give you dictionaries)</li>\n<li>Support for SparseTensors. <code>tf.batch</code> supports SparseTensor and automatic batching of SparseTensor would make my life a whole lot easier</li>\n</ul>\n<p>Additionally, I had this idea where you could maybe implement a random test/train split functionality right into Dataset. This could make things easier too. Something like</p>\n<div class=\"highlight highlight-source-python\"><pre>dataset_train, dataset_test <span class=\"pl-k\">=</span> dataset.split_train_test(<span class=\"pl-v\">test_ratio</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0.2</span>, <span class=\"pl-v\">seed</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1234</span>)</pre></div>\n<p>Keep up the good work!</p>", "body_text": "Wanted to let you know I migrated from queues to Dataset and it's been great. Definitely going in the right direction. There's been a few things that are currently missing and I had to work around:\n\nBeing able to use dictionaries for Tensor structs, in addition to tuples and lists (this would be very natural when parsing Examples, which have named features and give you dictionaries)\nSupport for SparseTensors. tf.batch supports SparseTensor and automatic batching of SparseTensor would make my life a whole lot easier\n\nAdditionally, I had this idea where you could maybe implement a random test/train split functionality right into Dataset. This could make things easier too. Something like\ndataset_train, dataset_test = dataset.split_train_test(test_ratio=0.2, seed=1234)\nKeep up the good work!", "body": "Wanted to let you know I migrated from queues to Dataset and it's been great. Definitely going in the right direction. There's been a few things that are currently missing and I had to work around:\r\n\r\n- Being able to use dictionaries for Tensor structs, in addition to tuples and lists (this would be very natural when parsing Examples, which have named features and give you dictionaries)\r\n- Support for SparseTensors. `tf.batch` supports SparseTensor and automatic batching of SparseTensor would make my life a whole lot easier\r\n\r\nAdditionally, I had this idea where you could maybe implement a random test/train split functionality right into Dataset. This could make things easier too. Something like\r\n\r\n```python\r\ndataset_train, dataset_test = dataset.split_train_test(test_ratio=0.2, seed=1234)\r\n```\r\n\r\nKeep up the good work!\r\n"}