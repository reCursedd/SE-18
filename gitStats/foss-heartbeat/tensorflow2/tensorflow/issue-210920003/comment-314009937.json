{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/314009937", "html_url": "https://github.com/tensorflow/tensorflow/issues/7951#issuecomment-314009937", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7951", "id": 314009937, "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDAwOTkzNw==", "user": {"login": "PatWie", "id": 6756603, "node_id": "MDQ6VXNlcjY3NTY2MDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/6756603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PatWie", "html_url": "https://github.com/PatWie", "followers_url": "https://api.github.com/users/PatWie/followers", "following_url": "https://api.github.com/users/PatWie/following{/other_user}", "gists_url": "https://api.github.com/users/PatWie/gists{/gist_id}", "starred_url": "https://api.github.com/users/PatWie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PatWie/subscriptions", "organizations_url": "https://api.github.com/users/PatWie/orgs", "repos_url": "https://api.github.com/users/PatWie/repos", "events_url": "https://api.github.com/users/PatWie/events{/privacy}", "received_events_url": "https://api.github.com/users/PatWie/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-10T05:34:03Z", "updated_at": "2017-07-10T05:39:57Z", "author_association": "NONE", "body_html": "<p>That was already done in <a href=\"https://github.com/ppwwyyxx/tensorpack\">TensorPack</a> for a while now by <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1381301\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ppwwyyxx\">@ppwwyyxx</a>. There you also get further speedup using ZMQ -- plus it has a nice interface using Python generators. For me, the way tensorpack handles input data, is the most elegant way. I hope to see something like this in a future TF.</p>", "body_text": "That was already done in TensorPack for a while now by @ppwwyyxx. There you also get further speedup using ZMQ -- plus it has a nice interface using Python generators. For me, the way tensorpack handles input data, is the most elegant way. I hope to see something like this in a future TF.", "body": "That was already done in [TensorPack](https://github.com/ppwwyyxx/tensorpack) for a while now by @ppwwyyxx. There you also get further speedup using ZMQ -- plus it has a nice interface using Python generators. For me, the way tensorpack handles input data, is the most elegant way. I hope to see something like this in a future TF."}