{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/305768735", "html_url": "https://github.com/tensorflow/tensorflow/issues/7951#issuecomment-305768735", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7951", "id": 305768735, "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTc2ODczNQ==", "user": {"login": "kmhofmann", "id": 7887138, "node_id": "MDQ6VXNlcjc4ODcxMzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7887138?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmhofmann", "html_url": "https://github.com/kmhofmann", "followers_url": "https://api.github.com/users/kmhofmann/followers", "following_url": "https://api.github.com/users/kmhofmann/following{/other_user}", "gists_url": "https://api.github.com/users/kmhofmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmhofmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmhofmann/subscriptions", "organizations_url": "https://api.github.com/users/kmhofmann/orgs", "repos_url": "https://api.github.com/users/kmhofmann/repos", "events_url": "https://api.github.com/users/kmhofmann/events{/privacy}", "received_events_url": "https://api.github.com/users/kmhofmann/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-02T12:10:51Z", "updated_at": "2017-06-02T12:10:51Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=192142\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mrry\">@mrry</a>  Thanks for the a preview of the new API; I think this is a good starting point!<br>\nOne function that still seems to be missing, but would be essential for one of our primary use cases (see comment above: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"210920003\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/7951\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/7951/hovercard?comment_id=283186552&amp;comment_type=issue_comment\" href=\"https://github.com/tensorflow/tensorflow/issues/7951#issuecomment-283186552\">#7951 (comment)</a>) is a</p>\n<p><code>Dataset.map_to_multiple()</code><br>\nused as in<br>\n<code>dataset2 = dataset1.map_to_multiple(func)</code></p>\n<p>function, where one element of <code>dataset1</code> is mapped to one <strong>or more</strong> elements for <code>dataset2</code>; i.e. #<code>dataset2</code> &gt;= #<code>dataset1</code>.<br>\nAs far as I understand it, <code>Dataset.map()</code> preserves a 1:1 mapping, which is not sufficient for our use case.</p>\n<p>One concrete example of why this would be useful:<br>\nAssume <code>dataset1</code> is a list of large images (e.g. 8192x8192 each) [with corresponding labels]. Then, <code>dataset2</code> is created by (randomly) iterating over each element <code>d1</code> of <code>dataset1</code>, and for each of these elements the function <code>func</code> samples a (variable) number of sub-images [and sub-labels] (e.g. 256x256 each) from <code>d1</code>, taken from various regions of <code>d1</code>. For example, in one instance, <code>func</code> might return 142 new {image, label} pairs that will be added to <code>dataset2</code>. In another instance, it might return 389 new pairs, etc. The number of elements generated each time is variable and conditional on the properties of element <code>d1</code>.</p>", "body_text": "@mrry  Thanks for the a preview of the new API; I think this is a good starting point!\nOne function that still seems to be missing, but would be essential for one of our primary use cases (see comment above: #7951 (comment)) is a\nDataset.map_to_multiple()\nused as in\ndataset2 = dataset1.map_to_multiple(func)\nfunction, where one element of dataset1 is mapped to one or more elements for dataset2; i.e. #dataset2 >= #dataset1.\nAs far as I understand it, Dataset.map() preserves a 1:1 mapping, which is not sufficient for our use case.\nOne concrete example of why this would be useful:\nAssume dataset1 is a list of large images (e.g. 8192x8192 each) [with corresponding labels]. Then, dataset2 is created by (randomly) iterating over each element d1 of dataset1, and for each of these elements the function func samples a (variable) number of sub-images [and sub-labels] (e.g. 256x256 each) from d1, taken from various regions of d1. For example, in one instance, func might return 142 new {image, label} pairs that will be added to dataset2. In another instance, it might return 389 new pairs, etc. The number of elements generated each time is variable and conditional on the properties of element d1.", "body": "@mrry  Thanks for the a preview of the new API; I think this is a good starting point!\r\nOne function that still seems to be missing, but would be essential for one of our primary use cases (see comment above: https://github.com/tensorflow/tensorflow/issues/7951#issuecomment-283186552) is a\r\n\r\n`Dataset.map_to_multiple()`\r\nused as in\r\n`dataset2 = dataset1.map_to_multiple(func)`\r\n\r\nfunction, where one element of `dataset1` is mapped to one **or more** elements for `dataset2`; i.e. #`dataset2` >= #`dataset1`.\r\nAs far as I understand it, `Dataset.map()` preserves a 1:1 mapping, which is not sufficient for our use case.\r\n\r\nOne concrete example of why this would be useful:\r\nAssume `dataset1` is a list of large images (e.g. 8192x8192 each) [with corresponding labels]. Then, `dataset2` is created by (randomly) iterating over each element `d1` of `dataset1`, and for each of these elements the function `func` samples a (variable) number of sub-images [and sub-labels] (e.g. 256x256 each) from `d1`, taken from various regions of `d1`. For example, in one instance, `func` might return 142 new {image, label} pairs that will be added to `dataset2`. In another instance, it might return 389 new pairs, etc. The number of elements generated each time is variable and conditional on the properties of element `d1`."}