{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/296599912", "html_url": "https://github.com/tensorflow/tensorflow/issues/7951#issuecomment-296599912", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7951", "id": 296599912, "node_id": "MDEyOklzc3VlQ29tbWVudDI5NjU5OTkxMg==", "user": {"login": "PatWie", "id": 6756603, "node_id": "MDQ6VXNlcjY3NTY2MDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/6756603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PatWie", "html_url": "https://github.com/PatWie", "followers_url": "https://api.github.com/users/PatWie/followers", "following_url": "https://api.github.com/users/PatWie/following{/other_user}", "gists_url": "https://api.github.com/users/PatWie/gists{/gist_id}", "starred_url": "https://api.github.com/users/PatWie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PatWie/subscriptions", "organizations_url": "https://api.github.com/users/PatWie/orgs", "repos_url": "https://api.github.com/users/PatWie/repos", "events_url": "https://api.github.com/users/PatWie/events{/privacy}", "received_events_url": "https://api.github.com/users/PatWie/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-24T09:52:40Z", "updated_at": "2017-04-24T09:56:52Z", "author_association": "NONE", "body_html": "<p>I think TF does not really require another attempt to unify the data pre-processing to put it directly <em>into</em> the graph. Things get worse if one need custom stuff and on-the-fly generation/modification of data. Typically these modifications are not part of the forward model for a good reason: these operations do not require any backpropagation. Hence, they should be only loosely coupled.</p>\n<p>So the ideal input pipeline (everything without backprop) should be quite simple and slim: It should consist of a queue operation which receives data (list of tensors) from <strong>some</strong> source (sockets). <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"217073429\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/8728\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/tensorflow/tensorflow/pull/8728/hovercard\" href=\"https://github.com/tensorflow/tensorflow/pull/8728\">#8728</a> is a good step in this direction with the pros:</p>\n<ul>\n<li>you can use any library for preprocessing (opencv, nltk, ...)</li>\n<li>prefetching is totally parallel and can be done at any/multiple machine</li>\n<li>the sender-code can be put into any place -- even directly in game-engines or render-engines</li>\n<li>data generation can be done in any programming language (without custom ops)</li>\n</ul>\n<p>I am not sure, if you really need something else and I do not understand why you really need <code>tf.image.random_*</code> <em>in</em> the graph.</p>", "body_text": "I think TF does not really require another attempt to unify the data pre-processing to put it directly into the graph. Things get worse if one need custom stuff and on-the-fly generation/modification of data. Typically these modifications are not part of the forward model for a good reason: these operations do not require any backpropagation. Hence, they should be only loosely coupled.\nSo the ideal input pipeline (everything without backprop) should be quite simple and slim: It should consist of a queue operation which receives data (list of tensors) from some source (sockets). #8728 is a good step in this direction with the pros:\n\nyou can use any library for preprocessing (opencv, nltk, ...)\nprefetching is totally parallel and can be done at any/multiple machine\nthe sender-code can be put into any place -- even directly in game-engines or render-engines\ndata generation can be done in any programming language (without custom ops)\n\nI am not sure, if you really need something else and I do not understand why you really need tf.image.random_* in the graph.", "body": "I think TF does not really require another attempt to unify the data pre-processing to put it directly *into* the graph. Things get worse if one need custom stuff and on-the-fly generation/modification of data. Typically these modifications are not part of the forward model for a good reason: these operations do not require any backpropagation. Hence, they should be only loosely coupled.\r\n\r\nSo the ideal input pipeline (everything without backprop) should be quite simple and slim: It should consist of a queue operation which receives data (list of tensors) from **some** source (sockets). #8728 is a good step in this direction with the pros:\r\n- you can use any library for preprocessing (opencv, nltk, ...)\r\n- prefetching is totally parallel and can be done at any/multiple machine\r\n- the sender-code can be put into any place -- even directly in game-engines or render-engines\r\n- data generation can be done in any programming language (without custom ops)\r\n\r\nI am not sure, if you really need something else and I do not understand why you really need `tf.image.random_*` *in* the graph.\r\n"}