{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/308845375", "html_url": "https://github.com/tensorflow/tensorflow/issues/7951#issuecomment-308845375", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7951", "id": 308845375, "node_id": "MDEyOklzc3VlQ29tbWVudDMwODg0NTM3NQ==", "user": {"login": "kratzert", "id": 13069767, "node_id": "MDQ6VXNlcjEzMDY5NzY3", "avatar_url": "https://avatars0.githubusercontent.com/u/13069767?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kratzert", "html_url": "https://github.com/kratzert", "followers_url": "https://api.github.com/users/kratzert/followers", "following_url": "https://api.github.com/users/kratzert/following{/other_user}", "gists_url": "https://api.github.com/users/kratzert/gists{/gist_id}", "starred_url": "https://api.github.com/users/kratzert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kratzert/subscriptions", "organizations_url": "https://api.github.com/users/kratzert/orgs", "repos_url": "https://api.github.com/users/kratzert/repos", "events_url": "https://api.github.com/users/kratzert/events{/privacy}", "received_events_url": "https://api.github.com/users/kratzert/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-15T19:39:35Z", "updated_at": "2017-06-15T19:39:35Z", "author_association": "NONE", "body_html": "<p>I would like to ask again (since there was no reply to my <a href=\"https://github.com/tensorflow/tensorflow/issues/7951#issuecomment-305435143\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/7951/hovercard\">comment</a> above: Am I right, that the new input pipeline isn't implemented using Queues? I did some tests using the new input pipeline to load an preprocess images, but it seems everything is done sequentially and their is only a negligible performance improvement over using e.g. OpenCV to load and preprocess images. I was hoping the new input pipeline would be build on top of queues, since they provide major performance boosts but make it quite hard to work with (e.g. having seperate input pipelines with queues to switch between training and validation datasets). This is quite easy with the new API but it seems there is no real performance boost. Anybody observed the same or opposite?</p>", "body_text": "I would like to ask again (since there was no reply to my comment above: Am I right, that the new input pipeline isn't implemented using Queues? I did some tests using the new input pipeline to load an preprocess images, but it seems everything is done sequentially and their is only a negligible performance improvement over using e.g. OpenCV to load and preprocess images. I was hoping the new input pipeline would be build on top of queues, since they provide major performance boosts but make it quite hard to work with (e.g. having seperate input pipelines with queues to switch between training and validation datasets). This is quite easy with the new API but it seems there is no real performance boost. Anybody observed the same or opposite?", "body": "I would like to ask again (since there was no reply to my [comment](https://github.com/tensorflow/tensorflow/issues/7951#issuecomment-305435143) above: Am I right, that the new input pipeline isn't implemented using Queues? I did some tests using the new input pipeline to load an preprocess images, but it seems everything is done sequentially and their is only a negligible performance improvement over using e.g. OpenCV to load and preprocess images. I was hoping the new input pipeline would be build on top of queues, since they provide major performance boosts but make it quite hard to work with (e.g. having seperate input pipelines with queues to switch between training and validation datasets). This is quite easy with the new API but it seems there is no real performance boost. Anybody observed the same or opposite?"}