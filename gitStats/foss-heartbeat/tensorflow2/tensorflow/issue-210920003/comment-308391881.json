{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/308391881", "html_url": "https://github.com/tensorflow/tensorflow/issues/7951#issuecomment-308391881", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7951", "id": 308391881, "node_id": "MDEyOklzc3VlQ29tbWVudDMwODM5MTg4MQ==", "user": {"login": "EdeMeijer", "id": 5758565, "node_id": "MDQ6VXNlcjU3NTg1NjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/5758565?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdeMeijer", "html_url": "https://github.com/EdeMeijer", "followers_url": "https://api.github.com/users/EdeMeijer/followers", "following_url": "https://api.github.com/users/EdeMeijer/following{/other_user}", "gists_url": "https://api.github.com/users/EdeMeijer/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdeMeijer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdeMeijer/subscriptions", "organizations_url": "https://api.github.com/users/EdeMeijer/orgs", "repos_url": "https://api.github.com/users/EdeMeijer/repos", "events_url": "https://api.github.com/users/EdeMeijer/events{/privacy}", "received_events_url": "https://api.github.com/users/EdeMeijer/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-14T10:32:30Z", "updated_at": "2017-06-14T10:32:30Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=10807796\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/winston-li\">@winston-li</a> I think you could just use <code>.filter()</code> for that. If you know your batch size is for example 32, then something like</p>\n<div class=\"highlight highlight-source-python\"><pre>dataset <span class=\"pl-k\">=</span> dataset.filter(<span class=\"pl-k\">lambda</span> <span class=\"pl-smi\">batch</span>: tf.shape(batch)[<span class=\"pl-c1\">0</span>] <span class=\"pl-k\">==</span> <span class=\"pl-c1\">32</span>)</pre></div>\n<p>should do the trick.</p>", "body_text": "@winston-li I think you could just use .filter() for that. If you know your batch size is for example 32, then something like\ndataset = dataset.filter(lambda batch: tf.shape(batch)[0] == 32)\nshould do the trick.", "body": "@winston-li I think you could just use `.filter()` for that. If you know your batch size is for example 32, then something like\r\n```python\r\ndataset = dataset.filter(lambda batch: tf.shape(batch)[0] == 32)\r\n```\r\nshould do the trick."}