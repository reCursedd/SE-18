{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/296589940", "html_url": "https://github.com/tensorflow/tensorflow/issues/7951#issuecomment-296589940", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7951", "id": 296589940, "node_id": "MDEyOklzc3VlQ29tbWVudDI5NjU4OTk0MA==", "user": {"login": "thejonan", "id": 2169351, "node_id": "MDQ6VXNlcjIxNjkzNTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/2169351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thejonan", "html_url": "https://github.com/thejonan", "followers_url": "https://api.github.com/users/thejonan/followers", "following_url": "https://api.github.com/users/thejonan/following{/other_user}", "gists_url": "https://api.github.com/users/thejonan/gists{/gist_id}", "starred_url": "https://api.github.com/users/thejonan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thejonan/subscriptions", "organizations_url": "https://api.github.com/users/thejonan/orgs", "repos_url": "https://api.github.com/users/thejonan/repos", "events_url": "https://api.github.com/users/thejonan/events{/privacy}", "received_events_url": "https://api.github.com/users/thejonan/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-24T09:15:13Z", "updated_at": "2017-04-24T09:15:13Z", "author_association": "NONE", "body_html": "<p>I would say that aside from the steep learning curve of input pipeline which can be overcome with documentation too, the key missing points are:</p>\n<ol>\n<li>A decent way to make custom preprocessing of the data, whether it be based on queue's or not, the idea of being able to foresee all possible data input needs is doomed.</li>\n<li>An easy and established way to change the input pipeline of a graph, after it has been created, because it is the most typical usage pattern. Current <code>input_map</code> provides such functionality, but it is rather hacky. And documented too (when it comes to <code>import_meta_graph</code>).</li>\n<li>A way to control and monitor the epochs - currently they are rather deeply hidden and unaccessible even simple checks.</li>\n</ol>\n<p>I'd support <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=614631\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/nicolasdespres\">@nicolasdespres</a> for \"no Dataset\" pledge, mainly because all-in-one bundle is not flexible, not future proof and also - not consistent with the TF's paradigm of providing small, stable, well-defined and assemble-able blocks for building custom models. Having some bundles, predefined \"easy-starter\" wrappers should be welcomed.</p>", "body_text": "I would say that aside from the steep learning curve of input pipeline which can be overcome with documentation too, the key missing points are:\n\nA decent way to make custom preprocessing of the data, whether it be based on queue's or not, the idea of being able to foresee all possible data input needs is doomed.\nAn easy and established way to change the input pipeline of a graph, after it has been created, because it is the most typical usage pattern. Current input_map provides such functionality, but it is rather hacky. And documented too (when it comes to import_meta_graph).\nA way to control and monitor the epochs - currently they are rather deeply hidden and unaccessible even simple checks.\n\nI'd support @nicolasdespres for \"no Dataset\" pledge, mainly because all-in-one bundle is not flexible, not future proof and also - not consistent with the TF's paradigm of providing small, stable, well-defined and assemble-able blocks for building custom models. Having some bundles, predefined \"easy-starter\" wrappers should be welcomed.", "body": "I would say that aside from the steep learning curve of input pipeline which can be overcome with documentation too, the key missing points are:\r\n\r\n1. A decent way to make custom preprocessing of the data, whether it be based on queue's or not, the idea of being able to foresee all possible data input needs is doomed.\r\n2. An easy and established way to change the input pipeline of a graph, after it has been created, because it is the most typical usage pattern. Current `input_map` provides such functionality, but it is rather hacky. And documented too (when it comes to `import_meta_graph`).\r\n3. A way to control and monitor the epochs - currently they are rather deeply hidden and unaccessible even simple checks.\r\n\r\nI'd support @nicolasdespres for \"no Dataset\" pledge, mainly because all-in-one bundle is not flexible, not future proof and also - not consistent with the TF's paradigm of providing small, stable, well-defined and assemble-able blocks for building custom models. Having some bundles, predefined \"easy-starter\" wrappers should be welcomed."}