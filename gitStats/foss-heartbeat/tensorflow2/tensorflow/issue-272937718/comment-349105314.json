{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/349105314", "html_url": "https://github.com/tensorflow/tensorflow/issues/14448#issuecomment-349105314", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14448", "id": 349105314, "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTEwNTMxNA==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-04T21:06:04Z", "updated_at": "2017-12-04T21:06:04Z", "author_association": "CONTRIBUTOR", "body_html": "<p>We'd welcome a PR with any improvements to <code>tf.py_func()</code>. Ideally those could be in-place and backwards compatible, rather than adding a new API.</p>\n<p>I'm less sure about <code>from_indexable()</code>, because I think it would amount to a one-line wrapper around <code>Dataset.map()</code> and <code>tf.py_func()</code> once the former changes go in. However, if it turns out to reduce the code complexity, perhaps we could find a place for it in <code>tf.contrib.data</code>.</p>", "body_text": "We'd welcome a PR with any improvements to tf.py_func(). Ideally those could be in-place and backwards compatible, rather than adding a new API.\nI'm less sure about from_indexable(), because I think it would amount to a one-line wrapper around Dataset.map() and tf.py_func() once the former changes go in. However, if it turns out to reduce the code complexity, perhaps we could find a place for it in tf.contrib.data.", "body": "We'd welcome a PR with any improvements to `tf.py_func()`. Ideally those could be in-place and backwards compatible, rather than adding a new API.\r\n\r\nI'm less sure about `from_indexable()`, because I think it would amount to a one-line wrapper around `Dataset.map()` and `tf.py_func()` once the former changes go in. However, if it turns out to reduce the code complexity, perhaps we could find a place for it in `tf.contrib.data`."}