{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/343686613", "html_url": "https://github.com/tensorflow/tensorflow/issues/14448#issuecomment-343686613", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14448", "id": 343686613, "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzY4NjYxMw==", "user": {"login": "boeddeker", "id": 13744128, "node_id": "MDQ6VXNlcjEzNzQ0MTI4", "avatar_url": "https://avatars3.githubusercontent.com/u/13744128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/boeddeker", "html_url": "https://github.com/boeddeker", "followers_url": "https://api.github.com/users/boeddeker/followers", "following_url": "https://api.github.com/users/boeddeker/following{/other_user}", "gists_url": "https://api.github.com/users/boeddeker/gists{/gist_id}", "starred_url": "https://api.github.com/users/boeddeker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/boeddeker/subscriptions", "organizations_url": "https://api.github.com/users/boeddeker/orgs", "repos_url": "https://api.github.com/users/boeddeker/repos", "events_url": "https://api.github.com/users/boeddeker/events{/privacy}", "received_events_url": "https://api.github.com/users/boeddeker/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-11T19:00:43Z", "updated_at": "2017-11-11T19:00:43Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Thanks for the suggestion to modify <code>py_func</code>. I looked in the code of <code>from_generator</code> and there is the generalization of my workaround with dicts.</p>\n<p>I try to extract the code from <code>from_generator</code> and write a wrapper around <code>py_func</code>.</p>\n<p>Current signature<br>\n<code>py_func(func, inp, Tout, stateful=True, name=None)</code><br>\nFuture signature<br>\n<code>py_func(func, inp, output_types, output_shapes=None, stateful=True, name=None)</code></p>\n<p>With that modification, I will be able to a <code>from_indexable</code> for my use cases.</p>\n<p>But first I will write a bugfix for <code>nest.assert_shallow_structure</code> for dicts with different keys.</p>", "body_text": "Thanks for the suggestion to modify py_func. I looked in the code of from_generator and there is the generalization of my workaround with dicts.\nI try to extract the code from from_generator and write a wrapper around py_func.\nCurrent signature\npy_func(func, inp, Tout, stateful=True, name=None)\nFuture signature\npy_func(func, inp, output_types, output_shapes=None, stateful=True, name=None)\nWith that modification, I will be able to a from_indexable for my use cases.\nBut first I will write a bugfix for nest.assert_shallow_structure for dicts with different keys.", "body": "Thanks for the suggestion to modify `py_func`. I looked in the code of `from_generator` and there is the generalization of my workaround with dicts.\r\n\r\nI try to extract the code from `from_generator` and write a wrapper around `py_func`.\r\n\r\nCurrent signature\r\n`py_func(func, inp, Tout, stateful=True, name=None)`\r\nFuture signature\r\n`py_func(func, inp, output_types, output_shapes=None, stateful=True, name=None)`\r\n\r\nWith that modification, I will be able to a `from_indexable` for my use cases.\r\n\r\nBut first I will write a bugfix for `nest.assert_shallow_structure` for dicts with different keys.\r\n\r\n"}