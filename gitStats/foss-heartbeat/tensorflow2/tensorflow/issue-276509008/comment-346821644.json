{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/346821644", "html_url": "https://github.com/tensorflow/tensorflow/issues/14851#issuecomment-346821644", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14851", "id": 346821644, "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjgyMTY0NA==", "user": {"login": "facaiy", "id": 1112263, "node_id": "MDQ6VXNlcjExMTIyNjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1112263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facaiy", "html_url": "https://github.com/facaiy", "followers_url": "https://api.github.com/users/facaiy/followers", "following_url": "https://api.github.com/users/facaiy/following{/other_user}", "gists_url": "https://api.github.com/users/facaiy/gists{/gist_id}", "starred_url": "https://api.github.com/users/facaiy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facaiy/subscriptions", "organizations_url": "https://api.github.com/users/facaiy/orgs", "repos_url": "https://api.github.com/users/facaiy/repos", "events_url": "https://api.github.com/users/facaiy/events{/privacy}", "received_events_url": "https://api.github.com/users/facaiy/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-24T12:48:28Z", "updated_at": "2017-11-24T12:48:28Z", "author_association": "MEMBER", "body_html": "<p><code>tf.where</code> can help you clean all <code>np.nan</code>:</p>\n<div class=\"highlight highlight-source-python\"><pre>a, ids, weights, partition_strategy<span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>mod<span class=\"pl-pds\">'</span></span>, combiner<span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>mean<span class=\"pl-pds\">'</span></span>)\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> clean np.nan</span>\nb <span class=\"pl-k\">=</span> tf.where(tf.is_nan(b), tf.zeros_like(b), b)\nc <span class=\"pl-k\">=</span> tf.pad(b, [[<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">16</span> <span class=\"pl-k\">-</span> tf.shape(b)[<span class=\"pl-c1\">0</span>]], [<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>]], <span class=\"pl-v\">mode</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>CONSTANT<span class=\"pl-pds\">'</span></span>)</pre></div>", "body_text": "tf.where can help you clean all np.nan:\na, ids, weights, partition_strategy='mod', combiner='mean')\n# clean np.nan\nb = tf.where(tf.is_nan(b), tf.zeros_like(b), b)\nc = tf.pad(b, [[0, 16 - tf.shape(b)[0]], [0, 0]], mode='CONSTANT')", "body": "`tf.where` can help you clean all `np.nan`:\r\n```python\r\na, ids, weights, partition_strategy='mod', combiner='mean')\r\n# clean np.nan\r\nb = tf.where(tf.is_nan(b), tf.zeros_like(b), b)\r\nc = tf.pad(b, [[0, 16 - tf.shape(b)[0]], [0, 0]], mode='CONSTANT')\r\n```"}