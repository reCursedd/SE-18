{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/322778720", "html_url": "https://github.com/tensorflow/tensorflow/issues/10638#issuecomment-322778720", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10638", "id": 322778720, "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjc3ODcyMA==", "user": {"login": "jcomfort4", "id": 8152811, "node_id": "MDQ6VXNlcjgxNTI4MTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/8152811?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcomfort4", "html_url": "https://github.com/jcomfort4", "followers_url": "https://api.github.com/users/jcomfort4/followers", "following_url": "https://api.github.com/users/jcomfort4/following{/other_user}", "gists_url": "https://api.github.com/users/jcomfort4/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcomfort4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcomfort4/subscriptions", "organizations_url": "https://api.github.com/users/jcomfort4/orgs", "repos_url": "https://api.github.com/users/jcomfort4/repos", "events_url": "https://api.github.com/users/jcomfort4/events{/privacy}", "received_events_url": "https://api.github.com/users/jcomfort4/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-16T13:55:20Z", "updated_at": "2017-08-16T13:55:20Z", "author_association": "NONE", "body_html": "<p>+1 I am observing this same behavior in embedding_rnn_decoder -- are there any updates or workarounds here? Is there a way to get the output_projection weights and multiple them?</p>\n<p>My current workaround is to create a dense later that takes in outputs and converts to the num_decoder_size, but this feels inaccurate.</p>", "body_text": "+1 I am observing this same behavior in embedding_rnn_decoder -- are there any updates or workarounds here? Is there a way to get the output_projection weights and multiple them?\nMy current workaround is to create a dense later that takes in outputs and converts to the num_decoder_size, but this feels inaccurate.", "body": "+1 I am observing this same behavior in embedding_rnn_decoder -- are there any updates or workarounds here? Is there a way to get the output_projection weights and multiple them?\r\n\r\nMy current workaround is to create a dense later that takes in outputs and converts to the num_decoder_size, but this feels inaccurate."}