{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12339", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12339/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12339/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12339/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/12339", "id": 250768833, "node_id": "MDU6SXNzdWUyNTA3Njg4MzM=", "number": 12339, "title": "Feature suggestion: Keep_dim for slicing and list-based slicing with __getitem__ in Tensors and Variables", "user": {"login": "3rd3", "id": 2372391, "node_id": "MDQ6VXNlcjIzNzIzOTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/2372391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/3rd3", "html_url": "https://github.com/3rd3", "followers_url": "https://api.github.com/users/3rd3/followers", "following_url": "https://api.github.com/users/3rd3/following{/other_user}", "gists_url": "https://api.github.com/users/3rd3/gists{/gist_id}", "starred_url": "https://api.github.com/users/3rd3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/3rd3/subscriptions", "organizations_url": "https://api.github.com/users/3rd3/orgs", "repos_url": "https://api.github.com/users/3rd3/repos", "events_url": "https://api.github.com/users/3rd3/events{/privacy}", "received_events_url": "https://api.github.com/users/3rd3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-16T21:41:48Z", "updated_at": "2017-08-17T01:29:31Z", "closed_at": "2017-08-17T01:29:31Z", "author_association": "NONE", "body_html": "<p>Sometimes it would be helpful to maintain the dimension when accessing a particular slice of a tensor or a variable. In NumPy this is possible by slicing with a list index like so:</p>\n<pre><code>ndarr = np.ones((5, 4, 3))\nndarr[: 1, :]  # Shape [5, 3]\nndarr[: [1], :]  # Shape [5, 1, 3]\n</code></pre>\n<p>It would be great to have similar list-based indexing which is essentially similar to what <code>tf.gather_nd</code>.</p>", "body_text": "Sometimes it would be helpful to maintain the dimension when accessing a particular slice of a tensor or a variable. In NumPy this is possible by slicing with a list index like so:\nndarr = np.ones((5, 4, 3))\nndarr[: 1, :]  # Shape [5, 3]\nndarr[: [1], :]  # Shape [5, 1, 3]\n\nIt would be great to have similar list-based indexing which is essentially similar to what tf.gather_nd.", "body": "Sometimes it would be helpful to maintain the dimension when accessing a particular slice of a tensor or a variable. In NumPy this is possible by slicing with a list index like so:\r\n\r\n    ndarr = np.ones((5, 4, 3))\r\n    ndarr[: 1, :]  # Shape [5, 3]\r\n    ndarr[: [1], :]  # Shape [5, 1, 3]\r\n\r\nIt would be great to have similar list-based indexing which is essentially similar to what `tf.gather_nd`."}