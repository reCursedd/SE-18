{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7630", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7630/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7630/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7630/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/7630", "id": 208531617, "node_id": "MDU6SXNzdWUyMDg1MzE2MTc=", "number": 7630, "title": "Poor Constant Propagation", "user": {"login": "cancan101", "id": 51059, "node_id": "MDQ6VXNlcjUxMDU5", "avatar_url": "https://avatars1.githubusercontent.com/u/51059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cancan101", "html_url": "https://github.com/cancan101", "followers_url": "https://api.github.com/users/cancan101/followers", "following_url": "https://api.github.com/users/cancan101/following{/other_user}", "gists_url": "https://api.github.com/users/cancan101/gists{/gist_id}", "starred_url": "https://api.github.com/users/cancan101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cancan101/subscriptions", "organizations_url": "https://api.github.com/users/cancan101/orgs", "repos_url": "https://api.github.com/users/cancan101/repos", "events_url": "https://api.github.com/users/cancan101/events{/privacy}", "received_events_url": "https://api.github.com/users/cancan101/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-02-17T19:19:31Z", "updated_at": "2017-06-16T19:02:59Z", "closed_at": "2017-06-16T19:02:59Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Running on the 1.0.0 Docker image.</p>\n<p>Compare this:</p>\n<pre><code>tensor_util.constant_value_as_shape(ops.convert_to_tensor((tf.constant(15),16)))\n&gt; TensorShape([Dimension(15), Dimension(16)])\n</code></pre>\n<p>to:</p>\n<pre><code>tensor_util.constant_value_as_shape(ops.convert_to_tensor((tf.constant(15) * 1,16)))\n&gt; TensorShape([Dimension(None), Dimension(16)])\n</code></pre>\n<p>It seems to me that constant propagation should happen in the latter. This leads to size information being lost in certain cases such as image upsampling / downsampling where constant size is multiplied and then fed to something like <code>resize_images</code>.</p>", "body_text": "Running on the 1.0.0 Docker image.\nCompare this:\ntensor_util.constant_value_as_shape(ops.convert_to_tensor((tf.constant(15),16)))\n> TensorShape([Dimension(15), Dimension(16)])\n\nto:\ntensor_util.constant_value_as_shape(ops.convert_to_tensor((tf.constant(15) * 1,16)))\n> TensorShape([Dimension(None), Dimension(16)])\n\nIt seems to me that constant propagation should happen in the latter. This leads to size information being lost in certain cases such as image upsampling / downsampling where constant size is multiplied and then fed to something like resize_images.", "body": "Running on the 1.0.0 Docker image.\r\n\r\nCompare this:\r\n```\r\ntensor_util.constant_value_as_shape(ops.convert_to_tensor((tf.constant(15),16)))\r\n> TensorShape([Dimension(15), Dimension(16)])\r\n```\r\nto:\r\n```\r\ntensor_util.constant_value_as_shape(ops.convert_to_tensor((tf.constant(15) * 1,16)))\r\n> TensorShape([Dimension(None), Dimension(16)])\r\n```\r\nIt seems to me that constant propagation should happen in the latter. This leads to size information being lost in certain cases such as image upsampling / downsampling where constant size is multiplied and then fed to something like `resize_images`."}