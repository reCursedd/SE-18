{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/280878329", "html_url": "https://github.com/tensorflow/tensorflow/issues/7630#issuecomment-280878329", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7630", "id": 280878329, "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDg3ODMyOQ==", "user": {"login": "cancan101", "id": 51059, "node_id": "MDQ6VXNlcjUxMDU5", "avatar_url": "https://avatars1.githubusercontent.com/u/51059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cancan101", "html_url": "https://github.com/cancan101", "followers_url": "https://api.github.com/users/cancan101/followers", "following_url": "https://api.github.com/users/cancan101/following{/other_user}", "gists_url": "https://api.github.com/users/cancan101/gists{/gist_id}", "starred_url": "https://api.github.com/users/cancan101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cancan101/subscriptions", "organizations_url": "https://api.github.com/users/cancan101/orgs", "repos_url": "https://api.github.com/users/cancan101/repos", "events_url": "https://api.github.com/users/cancan101/events{/privacy}", "received_events_url": "https://api.github.com/users/cancan101/received_events", "type": "User", "site_admin": false}, "created_at": "2017-02-18T22:00:44Z", "updated_at": "2017-02-18T22:00:44Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Should be solvable by adding a case to <a href=\"https://github.com/tensorflow/tensorflow/blob/a0d784bdd31b27e013a7eac58a86ba62e86db299/tensorflow/python/framework/tensor_util.py#L577\"><code>_ConstantValue</code></a> (this can be used for any binary operator). This is rough solution, might not handle various tensor types quite right:</p>\n<div class=\"highlight highlight-source-python\"><pre>  <span class=\"pl-k\">elif</span> tensor.op.type <span class=\"pl-k\">==</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Mul<span class=\"pl-pds\">\"</span></span>:\n    left <span class=\"pl-k\">=</span> constant_value(tensor.op.inputs[<span class=\"pl-c1\">0</span>])\n    <span class=\"pl-k\">if</span> left <span class=\"pl-k\">is</span> <span class=\"pl-c1\">None</span>:\n      <span class=\"pl-k\">return</span> <span class=\"pl-c1\">None</span>\n    right <span class=\"pl-k\">=</span> constant_value(tensor.op.inputs[<span class=\"pl-c1\">1</span>])\n    <span class=\"pl-k\">if</span> right <span class=\"pl-k\">is</span> <span class=\"pl-c1\">None</span>:\n      <span class=\"pl-k\">return</span> <span class=\"pl-c1\">None</span>\n    <span class=\"pl-k\">return</span> left <span class=\"pl-k\">*</span> right</pre></div>", "body_text": "Should be solvable by adding a case to _ConstantValue (this can be used for any binary operator). This is rough solution, might not handle various tensor types quite right:\n  elif tensor.op.type == \"Mul\":\n    left = constant_value(tensor.op.inputs[0])\n    if left is None:\n      return None\n    right = constant_value(tensor.op.inputs[1])\n    if right is None:\n      return None\n    return left * right", "body": "Should be solvable by adding a case to [`_ConstantValue`](https://github.com/tensorflow/tensorflow/blob/a0d784bdd31b27e013a7eac58a86ba62e86db299/tensorflow/python/framework/tensor_util.py#L577) (this can be used for any binary operator). This is rough solution, might not handle various tensor types quite right:\r\n```python\r\n  elif tensor.op.type == \"Mul\":\r\n    left = constant_value(tensor.op.inputs[0])\r\n    if left is None:\r\n      return None\r\n    right = constant_value(tensor.op.inputs[1])\r\n    if right is None:\r\n      return None\r\n    return left * right\r\n```\r\n"}