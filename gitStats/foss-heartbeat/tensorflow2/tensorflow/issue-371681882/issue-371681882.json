{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23079", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23079/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23079/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23079/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/23079", "id": 371681882, "node_id": "MDExOlB1bGxSZXF1ZXN0MjI0MDc1NTky", "number": 23079, "title": "Enhance CUDA detection.", "user": {"login": "cbalint13", "id": 3974360, "node_id": "MDQ6VXNlcjM5NzQzNjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/3974360?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cbalint13", "html_url": "https://github.com/cbalint13", "followers_url": "https://api.github.com/users/cbalint13/followers", "following_url": "https://api.github.com/users/cbalint13/following{/other_user}", "gists_url": "https://api.github.com/users/cbalint13/gists{/gist_id}", "starred_url": "https://api.github.com/users/cbalint13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cbalint13/subscriptions", "organizations_url": "https://api.github.com/users/cbalint13/orgs", "repos_url": "https://api.github.com/users/cbalint13/repos", "events_url": "https://api.github.com/users/cbalint13/events{/privacy}", "received_events_url": "https://api.github.com/users/cbalint13/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}, {"id": 987666414, "node_id": "MDU6TGFiZWw5ODc2NjY0MTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/ready%20to%20pull", "name": "ready to pull", "color": "2cd643", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "ymodak", "id": 42785357, "node_id": "MDQ6VXNlcjQyNzg1MzU3", "avatar_url": "https://avatars1.githubusercontent.com/u/42785357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ymodak", "html_url": "https://github.com/ymodak", "followers_url": "https://api.github.com/users/ymodak/followers", "following_url": "https://api.github.com/users/ymodak/following{/other_user}", "gists_url": "https://api.github.com/users/ymodak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ymodak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ymodak/subscriptions", "organizations_url": "https://api.github.com/users/ymodak/orgs", "repos_url": "https://api.github.com/users/ymodak/repos", "events_url": "https://api.github.com/users/ymodak/events{/privacy}", "received_events_url": "https://api.github.com/users/ymodak/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ymodak", "id": 42785357, "node_id": "MDQ6VXNlcjQyNzg1MzU3", "avatar_url": "https://avatars1.githubusercontent.com/u/42785357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ymodak", "html_url": "https://github.com/ymodak", "followers_url": "https://api.github.com/users/ymodak/followers", "following_url": "https://api.github.com/users/ymodak/following{/other_user}", "gists_url": "https://api.github.com/users/ymodak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ymodak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ymodak/subscriptions", "organizations_url": "https://api.github.com/users/ymodak/orgs", "repos_url": "https://api.github.com/users/ymodak/repos", "events_url": "https://api.github.com/users/ymodak/events{/privacy}", "received_events_url": "https://api.github.com/users/ymodak/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-10-18T19:41:54Z", "updated_at": "2018-11-12T22:57:40Z", "closed_at": "2018-11-12T22:57:40Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/23079", "html_url": "https://github.com/tensorflow/tensorflow/pull/23079", "diff_url": "https://github.com/tensorflow/tensorflow/pull/23079.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/23079.patch"}, "body_html": "<p>This proposal enhance cmake CUDA related dependency on all cmake compatible platforms.</p>\n<ol>\n<li>Use cmake internals (only) to <strong>find cuda libraries</strong> and <strong>detect cuda arch</strong></li>\n<li>Libraries are picked up as <strong>shared</strong> in case of tensorflow_BUILD_SHARED_LIB else <strong>static</strong></li>\n<li><strong>-DCUDA_ARCH_NAME</strong> can be selected as <strong>Auto</strong> or <strong>All</strong> or <strong>custom</strong> as per cmake docs</li>\n<li>Get rid of any hardcoded versions and strings, all details are automatically detected and generated</li>\n</ol>\n<p>The cmake's internal CUDA module is mature enough and well supported on all platforms, desired and preferable instead of hardcoded or custom local functions.</p>\n<p>Additionally <strong>contrib/data</strong> OPS is gone, so for updated compilation flow is removed from cmake too. OPS and library submodules as <strong>contrib</strong> will be addressed in separate PR hopefully with better way than is now.</p>\n<p>Added <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=363227\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/perfinion\">@perfinion</a> to this.</p>", "body_text": "This proposal enhance cmake CUDA related dependency on all cmake compatible platforms.\n\nUse cmake internals (only) to find cuda libraries and detect cuda arch\nLibraries are picked up as shared in case of tensorflow_BUILD_SHARED_LIB else static\n-DCUDA_ARCH_NAME can be selected as Auto or All or custom as per cmake docs\nGet rid of any hardcoded versions and strings, all details are automatically detected and generated\n\nThe cmake's internal CUDA module is mature enough and well supported on all platforms, desired and preferable instead of hardcoded or custom local functions.\nAdditionally contrib/data OPS is gone, so for updated compilation flow is removed from cmake too. OPS and library submodules as contrib will be addressed in separate PR hopefully with better way than is now.\nAdded @perfinion to this.", "body": "This proposal enhance cmake CUDA related dependency on all cmake compatible platforms.\r\n\r\n1. Use cmake internals (only) to **find cuda libraries** and **detect cuda arch**\r\n2. Libraries are picked up as **shared** in case of tensorflow_BUILD_SHARED_LIB else **static**\r\n3. **-DCUDA_ARCH_NAME** can be selected as **Auto** or **All** or **custom** as per cmake docs\r\n4. Get rid of any hardcoded versions and strings, all details are automatically detected and generated\r\n\r\nThe cmake's internal CUDA module is mature enough and well supported on all platforms, desired and preferable instead of hardcoded or custom local functions.\r\n\r\nAdditionally **contrib/data** OPS is gone, so for updated compilation flow is removed from cmake too. OPS and library submodules as **contrib** will be addressed in separate PR hopefully with better way than is now.\r\n\r\nAdded @perfinion to this.\r\n\r\n"}