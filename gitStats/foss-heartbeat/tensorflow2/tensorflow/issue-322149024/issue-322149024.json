{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19212", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19212/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19212/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19212/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/19212", "id": 322149024, "node_id": "MDExOlB1bGxSZXF1ZXN0MTg3MzU0MzIy", "number": 19212, "title": "Add `AppendFloat16ArrayToTensorProto` to acclerate `tf.constant` for float16", "user": {"login": "facaiy", "id": 1112263, "node_id": "MDQ6VXNlcjExMTIyNjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1112263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facaiy", "html_url": "https://github.com/facaiy", "followers_url": "https://api.github.com/users/facaiy/followers", "following_url": "https://api.github.com/users/facaiy/following{/other_user}", "gists_url": "https://api.github.com/users/facaiy/gists{/gist_id}", "starred_url": "https://api.github.com/users/facaiy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facaiy/subscriptions", "organizations_url": "https://api.github.com/users/facaiy/orgs", "repos_url": "https://api.github.com/users/facaiy/repos", "events_url": "https://api.github.com/users/facaiy/events{/privacy}", "received_events_url": "https://api.github.com/users/facaiy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 419840263, "node_id": "MDU6TGFiZWw0MTk4NDAyNjM=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/awaiting%20testing%20(then%20merge)", "name": "awaiting testing (then merge)", "color": "c2e0c6", "default": false}, {"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-05-11T02:45:51Z", "updated_at": "2018-05-15T21:50:29Z", "closed_at": "2018-05-15T18:34:50Z", "author_association": "MEMBER", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/19212", "html_url": "https://github.com/tensorflow/tensorflow/pull/19212", "diff_url": "https://github.com/tensorflow/tensorflow/pull/19212.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/19212.patch"}, "body_html": "<p>Related with <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"321559784\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/19180\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/19180/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/19180\">#19180</a>.<br>\nIt seems that cython doesn't support <code>np.float16_t</code> by now, we use <code>np.uint16</code> instead.</p>\n<p>The conversion still be time-consuming (25 times slower than float32), however it is better than original slow implementation (260 times slower than float32).</p>\n<p>Performance comparison:</p>\n<pre><code>before:\nfloat32: 0.0535 sec\nfloat16: 13.7567 sec\n\nafter:\nfloat32: 0.0496 sec\nfloat16: 1.0815 sec\n</code></pre>\n<p>script:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> time\nimages <span class=\"pl-k\">=</span> np.random.rand(<span class=\"pl-c1\">128</span>, <span class=\"pl-c1\">100</span>, <span class=\"pl-c1\">100</span>, <span class=\"pl-c1\">3</span>)\nimagesFloat16 <span class=\"pl-k\">=</span> images.astype(np.float16)\nimagesFloat32 <span class=\"pl-k\">=</span> images.astype(np.float32)\n\nstart <span class=\"pl-k\">=</span> time.time()\nconstant_op.constant(imagesFloat32)\nend <span class=\"pl-k\">=</span> time.time()\n<span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>float32: <span class=\"pl-c1\">{0<span class=\"pl-k\">:.4f</span>}</span> sec<span class=\"pl-pds\">\"</span></span>.format(end <span class=\"pl-k\">-</span> start))\n\nstart <span class=\"pl-k\">=</span> time.time()\nconstant_op.constant(imagesFloat16)\nend <span class=\"pl-k\">=</span> time.time()\n<span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>float16: <span class=\"pl-c1\">{0<span class=\"pl-k\">:.4f</span>}</span> sec<span class=\"pl-pds\">\"</span></span>.format(end <span class=\"pl-k\">-</span> start))</pre></div>", "body_text": "Related with #19180.\nIt seems that cython doesn't support np.float16_t by now, we use np.uint16 instead.\nThe conversion still be time-consuming (25 times slower than float32), however it is better than original slow implementation (260 times slower than float32).\nPerformance comparison:\nbefore:\nfloat32: 0.0535 sec\nfloat16: 13.7567 sec\n\nafter:\nfloat32: 0.0496 sec\nfloat16: 1.0815 sec\n\nscript:\nimport time\nimages = np.random.rand(128, 100, 100, 3)\nimagesFloat16 = images.astype(np.float16)\nimagesFloat32 = images.astype(np.float32)\n\nstart = time.time()\nconstant_op.constant(imagesFloat32)\nend = time.time()\nprint(\"float32: {0:.4f} sec\".format(end - start))\n\nstart = time.time()\nconstant_op.constant(imagesFloat16)\nend = time.time()\nprint(\"float16: {0:.4f} sec\".format(end - start))", "body": "Related with #19180.\r\nIt seems that cython doesn't support `np.float16_t` by now, we use `np.uint16` instead. \r\n\r\nThe conversion still be time-consuming (25 times slower than float32), however it is better than original slow implementation (260 times slower than float32).\r\n\r\nPerformance comparison:\r\n```\r\nbefore:\r\nfloat32: 0.0535 sec\r\nfloat16: 13.7567 sec\r\n\r\nafter:\r\nfloat32: 0.0496 sec\r\nfloat16: 1.0815 sec\r\n```\r\n\r\nscript:\r\n```python\r\nimport time\r\nimages = np.random.rand(128, 100, 100, 3)\r\nimagesFloat16 = images.astype(np.float16)\r\nimagesFloat32 = images.astype(np.float32)\r\n\r\nstart = time.time()\r\nconstant_op.constant(imagesFloat32)\r\nend = time.time()\r\nprint(\"float32: {0:.4f} sec\".format(end - start))\r\n\r\nstart = time.time()\r\nconstant_op.constant(imagesFloat16)\r\nend = time.time()\r\nprint(\"float16: {0:.4f} sec\".format(end - start))\r\n```"}