{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/382808277", "html_url": "https://github.com/tensorflow/tensorflow/pull/17607#issuecomment-382808277", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17607", "id": 382808277, "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjgwODI3Nw==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-19T16:59:25Z", "updated_at": "2018-04-19T16:59:25Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Sure. The original design was for <code>TensorShape</code> equality and inequality to be tri-valued, a bit like SQL <code>NULL</code>:</p>\n<ul>\n<li>Returning <code>True</code> means that the shapes are identical. (To me, that means that the current behavior is <em>not</em> a bug, because <code>t.shape == t.shape</code> should be <code>True</code>.)</li>\n<li>Returning <code>False</code> means that the shapes are definitely not the same.</li>\n<li>Returning <code>None</code> means that we don't know, because we're comparing two unknown dimensions that might or might not have the same value at runtime.</li>\n</ul>", "body_text": "Sure. The original design was for TensorShape equality and inequality to be tri-valued, a bit like SQL NULL:\n\nReturning True means that the shapes are identical. (To me, that means that the current behavior is not a bug, because t.shape == t.shape should be True.)\nReturning False means that the shapes are definitely not the same.\nReturning None means that we don't know, because we're comparing two unknown dimensions that might or might not have the same value at runtime.", "body": "Sure. The original design was for `TensorShape` equality and inequality to be tri-valued, a bit like SQL `NULL`:\r\n\r\n* Returning `True` means that the shapes are identical. (To me, that means that the current behavior is *not* a bug, because `t.shape == t.shape` should be `True`.)\r\n* Returning `False` means that the shapes are definitely not the same.\r\n* Returning `None` means that we don't know, because we're comparing two unknown dimensions that might or might not have the same value at runtime."}