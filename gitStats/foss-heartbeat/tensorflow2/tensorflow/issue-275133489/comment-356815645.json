{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/356815645", "html_url": "https://github.com/tensorflow/tensorflow/issues/14699#issuecomment-356815645", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14699", "id": 356815645, "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjgxNTY0NQ==", "user": {"login": "Multihuntr", "id": 10515040, "node_id": "MDQ6VXNlcjEwNTE1MDQw", "avatar_url": "https://avatars2.githubusercontent.com/u/10515040?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Multihuntr", "html_url": "https://github.com/Multihuntr", "followers_url": "https://api.github.com/users/Multihuntr/followers", "following_url": "https://api.github.com/users/Multihuntr/following{/other_user}", "gists_url": "https://api.github.com/users/Multihuntr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Multihuntr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Multihuntr/subscriptions", "organizations_url": "https://api.github.com/users/Multihuntr/orgs", "repos_url": "https://api.github.com/users/Multihuntr/repos", "events_url": "https://api.github.com/users/Multihuntr/events{/privacy}", "received_events_url": "https://api.github.com/users/Multihuntr/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-11T03:42:11Z", "updated_at": "2018-01-11T03:42:11Z", "author_association": "NONE", "body_html": "<p>A better solution for using batch norm inside a conditional: <a href=\"https://www.tensorflow.org/api_docs/python/tf/contrib/layers/batch_norm\" rel=\"nofollow\"><code>tf.contrib.layers.batch_normalization</code></a> allows you to set <code>updates_collections=None</code> to force the updates to happen before you get the batch norms output (and thus not adding them to UPDATE_OPS).</p>\n<p>However <a href=\"https://www.tensorflow.org/api_docs/python/tf/layers/batch_normalization\" rel=\"nofollow\"><code>tf.layers.batch_normalization</code></a> doesn't seem to have this option.</p>\n<p>If you use Sonnet, then when constructing the batch norm module, you can use <code>update_ops_collection=None</code> (<a href=\"https://github.com/deepmind/sonnet/blob/master/sonnet/python/modules/batch_norm.py#L172\">source</a>).</p>", "body_text": "A better solution for using batch norm inside a conditional: tf.contrib.layers.batch_normalization allows you to set updates_collections=None to force the updates to happen before you get the batch norms output (and thus not adding them to UPDATE_OPS).\nHowever tf.layers.batch_normalization doesn't seem to have this option.\nIf you use Sonnet, then when constructing the batch norm module, you can use update_ops_collection=None (source).", "body": "A better solution for using batch norm inside a conditional: [`tf.contrib.layers.batch_normalization`](https://www.tensorflow.org/api_docs/python/tf/contrib/layers/batch_norm) allows you to set `updates_collections=None` to force the updates to happen before you get the batch norms output (and thus not adding them to UPDATE_OPS).\r\n\r\nHowever [`tf.layers.batch_normalization`](https://www.tensorflow.org/api_docs/python/tf/layers/batch_normalization) doesn't seem to have this option.\r\n\r\nIf you use Sonnet, then when constructing the batch norm module, you can use `update_ops_collection=None` ([source](https://github.com/deepmind/sonnet/blob/master/sonnet/python/modules/batch_norm.py#L172))."}