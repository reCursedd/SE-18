{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6696", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6696/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6696/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6696/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/6696", "id": 199206957, "node_id": "MDU6SXNzdWUxOTkyMDY5NTc=", "number": 6696, "title": "conv2d / Kernel Size > Input does not raise ValueError anymore", "user": {"login": "krfricke", "id": 14904111, "node_id": "MDQ6VXNlcjE0OTA0MTEx", "avatar_url": "https://avatars0.githubusercontent.com/u/14904111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krfricke", "html_url": "https://github.com/krfricke", "followers_url": "https://api.github.com/users/krfricke/followers", "following_url": "https://api.github.com/users/krfricke/following{/other_user}", "gists_url": "https://api.github.com/users/krfricke/gists{/gist_id}", "starred_url": "https://api.github.com/users/krfricke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krfricke/subscriptions", "organizations_url": "https://api.github.com/users/krfricke/orgs", "repos_url": "https://api.github.com/users/krfricke/repos", "events_url": "https://api.github.com/users/krfricke/events{/privacy}", "received_events_url": "https://api.github.com/users/krfricke/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-01-06T14:28:59Z", "updated_at": "2017-12-21T18:08:33Z", "closed_at": "2017-12-21T18:08:33Z", "author_association": "NONE", "body_html": "<p>I noticed that tensorflow 0.10.0 raises a ValueError when I pass a kernel size that is larger than the first input dimensions. The error occurred when I tried to pass data in NCHW format, while the default data_format is NHWC.</p>\n<p>I used this code for replication of the problem:</p>\n<pre><code>import tensorflow as tf\n\n# NHWC\ninput_nhwc = tf.placeholder(tf.float32, [None, 84, 84, 4])\noutput_nhwc = tf.contrib.layers.conv2d(input_nhwc, 32, [8, 8], 4)\n\n# NCHW\ninput_nchw = tf.placeholder(tf.float32, [None, 4, 84, 84])\noutput_nchw = tf.contrib.layers.conv2d(input_nchw, 32, [8, 8], 4)\n</code></pre>\n<p>tensorflow 0.12.1 does not raise any error, whereas tensorflow 0.10.0 raises the following error:</p>\n<pre><code>Traceback (most recent call last):\n  File \"conv2d_error.py\", line 5, in &lt;module&gt;\n    output_nhwc = tf.contrib.layers.conv2d(input_nhwc, 32, [8, 8], 4)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/framework/python/ops/arg_scope.py\", line 171, in func_with_args\n    return func(*args, **current_args)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/layers/python/layers/layers.py\", line 411, in convolution2d\n    padding=padding)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gen_nn_ops.py\", line 394, in conv2d\n    data_format=data_format, name=name)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/op_def_library.py\", line 703, in apply_op\n    op_def=op_def)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 2319, in create_op\n    set_shapes_for_outputs(ret)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 1711, in set_shapes_for_outputs\n    shapes = shape_func(op)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/common_shapes.py\", line 246, in conv2d_shape\n    padding)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/common_shapes.py\", line 184, in get2d_conv_output_size\n    (row_stride, col_stride), padding_type)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/common_shapes.py\", line 149, in get_conv_output_size\n    \"Filter: %r Input: %r\" % (filter_size, input_size))\nValueError: Filter must not be larger than the input: Filter: (8, 8) Input: (4, 84)\n</code></pre>\n<p>I tried to track if there's any kind of automatic detection of data formats (there is not), and further why the issue persists. All I could find were the filter and input shapes in nn_ops.py, which seem to pass compability tests in tensorflow 0.12.0.</p>\n<pre><code>NHWC\nFilter shape: (8, 8, 4, 32) | input shape: (?, 84, 84, 4)\n----------------\nNCHW\nFilter shape: (8, 8, 84, 32) | input shape: (?, 4, 84, 84)\n</code></pre>\n<p>I'm not sure if this is expected behavior, or if an exception should have been raised in tensorflow 0.12.1 as well.</p>", "body_text": "I noticed that tensorflow 0.10.0 raises a ValueError when I pass a kernel size that is larger than the first input dimensions. The error occurred when I tried to pass data in NCHW format, while the default data_format is NHWC.\nI used this code for replication of the problem:\nimport tensorflow as tf\n\n# NHWC\ninput_nhwc = tf.placeholder(tf.float32, [None, 84, 84, 4])\noutput_nhwc = tf.contrib.layers.conv2d(input_nhwc, 32, [8, 8], 4)\n\n# NCHW\ninput_nchw = tf.placeholder(tf.float32, [None, 4, 84, 84])\noutput_nchw = tf.contrib.layers.conv2d(input_nchw, 32, [8, 8], 4)\n\ntensorflow 0.12.1 does not raise any error, whereas tensorflow 0.10.0 raises the following error:\nTraceback (most recent call last):\n  File \"conv2d_error.py\", line 5, in <module>\n    output_nhwc = tf.contrib.layers.conv2d(input_nhwc, 32, [8, 8], 4)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/framework/python/ops/arg_scope.py\", line 171, in func_with_args\n    return func(*args, **current_args)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/layers/python/layers/layers.py\", line 411, in convolution2d\n    padding=padding)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gen_nn_ops.py\", line 394, in conv2d\n    data_format=data_format, name=name)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/op_def_library.py\", line 703, in apply_op\n    op_def=op_def)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 2319, in create_op\n    set_shapes_for_outputs(ret)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 1711, in set_shapes_for_outputs\n    shapes = shape_func(op)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/common_shapes.py\", line 246, in conv2d_shape\n    padding)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/common_shapes.py\", line 184, in get2d_conv_output_size\n    (row_stride, col_stride), padding_type)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/common_shapes.py\", line 149, in get_conv_output_size\n    \"Filter: %r Input: %r\" % (filter_size, input_size))\nValueError: Filter must not be larger than the input: Filter: (8, 8) Input: (4, 84)\n\nI tried to track if there's any kind of automatic detection of data formats (there is not), and further why the issue persists. All I could find were the filter and input shapes in nn_ops.py, which seem to pass compability tests in tensorflow 0.12.0.\nNHWC\nFilter shape: (8, 8, 4, 32) | input shape: (?, 84, 84, 4)\n----------------\nNCHW\nFilter shape: (8, 8, 84, 32) | input shape: (?, 4, 84, 84)\n\nI'm not sure if this is expected behavior, or if an exception should have been raised in tensorflow 0.12.1 as well.", "body": "I noticed that tensorflow 0.10.0 raises a ValueError when I pass a kernel size that is larger than the first input dimensions. The error occurred when I tried to pass data in NCHW format, while the default data_format is NHWC.\r\n\r\nI used this code for replication of the problem:\r\n\r\n```\r\nimport tensorflow as tf\r\n\r\n# NHWC\r\ninput_nhwc = tf.placeholder(tf.float32, [None, 84, 84, 4])\r\noutput_nhwc = tf.contrib.layers.conv2d(input_nhwc, 32, [8, 8], 4)\r\n\r\n# NCHW\r\ninput_nchw = tf.placeholder(tf.float32, [None, 4, 84, 84])\r\noutput_nchw = tf.contrib.layers.conv2d(input_nchw, 32, [8, 8], 4)\r\n```\r\n\r\ntensorflow 0.12.1 does not raise any error, whereas tensorflow 0.10.0 raises the following error:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"conv2d_error.py\", line 5, in <module>\r\n    output_nhwc = tf.contrib.layers.conv2d(input_nhwc, 32, [8, 8], 4)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/framework/python/ops/arg_scope.py\", line 171, in func_with_args\r\n    return func(*args, **current_args)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/layers/python/layers/layers.py\", line 411, in convolution2d\r\n    padding=padding)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gen_nn_ops.py\", line 394, in conv2d\r\n    data_format=data_format, name=name)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/op_def_library.py\", line 703, in apply_op\r\n    op_def=op_def)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 2319, in create_op\r\n    set_shapes_for_outputs(ret)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 1711, in set_shapes_for_outputs\r\n    shapes = shape_func(op)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/common_shapes.py\", line 246, in conv2d_shape\r\n    padding)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/common_shapes.py\", line 184, in get2d_conv_output_size\r\n    (row_stride, col_stride), padding_type)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/common_shapes.py\", line 149, in get_conv_output_size\r\n    \"Filter: %r Input: %r\" % (filter_size, input_size))\r\nValueError: Filter must not be larger than the input: Filter: (8, 8) Input: (4, 84)\r\n```\r\n\r\nI tried to track if there's any kind of automatic detection of data formats (there is not), and further why the issue persists. All I could find were the filter and input shapes in nn_ops.py, which seem to pass compability tests in tensorflow 0.12.0.\r\n\r\n```\r\nNHWC\r\nFilter shape: (8, 8, 4, 32) | input shape: (?, 84, 84, 4)\r\n----------------\r\nNCHW\r\nFilter shape: (8, 8, 84, 32) | input shape: (?, 4, 84, 84)\r\n```\r\n\r\nI'm not sure if this is expected behavior, or if an exception should have been raised in tensorflow 0.12.1 as well.\r\n"}