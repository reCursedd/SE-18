{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/282939778", "html_url": "https://github.com/tensorflow/tensorflow/issues/5919#issuecomment-282939778", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5919", "id": 282939778, "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjkzOTc3OA==", "user": {"login": "cancan101", "id": 51059, "node_id": "MDQ6VXNlcjUxMDU5", "avatar_url": "https://avatars1.githubusercontent.com/u/51059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cancan101", "html_url": "https://github.com/cancan101", "followers_url": "https://api.github.com/users/cancan101/followers", "following_url": "https://api.github.com/users/cancan101/following{/other_user}", "gists_url": "https://api.github.com/users/cancan101/gists{/gist_id}", "starred_url": "https://api.github.com/users/cancan101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cancan101/subscriptions", "organizations_url": "https://api.github.com/users/cancan101/orgs", "repos_url": "https://api.github.com/users/cancan101/repos", "events_url": "https://api.github.com/users/cancan101/events{/privacy}", "received_events_url": "https://api.github.com/users/cancan101/received_events", "type": "User", "site_admin": false}, "created_at": "2017-02-28T04:35:13Z", "updated_at": "2017-02-28T04:35:13Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I am thinking the solution looks something like this:</p>\n<div class=\"highlight highlight-source-python\"><pre>nodes <span class=\"pl-k\">=</span> {}\n<span class=\"pl-k\">for</span> node <span class=\"pl-k\">in</span> temp_graph_def.node:\n    nodes[node.name] <span class=\"pl-k\">=</span> node\n\n<span class=\"pl-k\">for</span> node <span class=\"pl-k\">in</span> temp_graph_def.node:\n    <span class=\"pl-k\">if</span> node.op <span class=\"pl-k\">==</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>Switch<span class=\"pl-pds\">'</span></span>:\n        pred <span class=\"pl-k\">=</span> nodes[node.input[<span class=\"pl-c1\">1</span>]]\n        <span class=\"pl-k\">if</span> pred.op <span class=\"pl-k\">==</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>Const<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">and</span> pred.attr[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>value<span class=\"pl-pds\">'</span></span>].tensor.bool_val[<span class=\"pl-c1\">0</span>] <span class=\"pl-k\">is</span> <span class=\"pl-c1\">False</span>:\n            <span class=\"pl-k\">pass</span></pre></div>", "body_text": "I am thinking the solution looks something like this:\nnodes = {}\nfor node in temp_graph_def.node:\n    nodes[node.name] = node\n\nfor node in temp_graph_def.node:\n    if node.op == 'Switch':\n        pred = nodes[node.input[1]]\n        if pred.op == 'Const' and pred.attr['value'].tensor.bool_val[0] is False:\n            pass", "body": "I am thinking the solution looks something like this:\r\n```python\r\nnodes = {}\r\nfor node in temp_graph_def.node:\r\n    nodes[node.name] = node\r\n\r\nfor node in temp_graph_def.node:\r\n    if node.op == 'Switch':\r\n        pred = nodes[node.input[1]]\r\n        if pred.op == 'Const' and pred.attr['value'].tensor.bool_val[0] is False:\r\n            pass\r\n```"}