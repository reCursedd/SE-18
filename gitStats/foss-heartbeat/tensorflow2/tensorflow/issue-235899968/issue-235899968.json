{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10705", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10705/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10705/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10705/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/10705", "id": 235899968, "node_id": "MDU6SXNzdWUyMzU4OTk5Njg=", "number": 10705, "title": "undocumented change in variable scope from tf 1.0.1 to tf 1.1.0", "user": {"login": "hyunjik11", "id": 10605582, "node_id": "MDQ6VXNlcjEwNjA1NTgy", "avatar_url": "https://avatars2.githubusercontent.com/u/10605582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hyunjik11", "html_url": "https://github.com/hyunjik11", "followers_url": "https://api.github.com/users/hyunjik11/followers", "following_url": "https://api.github.com/users/hyunjik11/following{/other_user}", "gists_url": "https://api.github.com/users/hyunjik11/gists{/gist_id}", "starred_url": "https://api.github.com/users/hyunjik11/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hyunjik11/subscriptions", "organizations_url": "https://api.github.com/users/hyunjik11/orgs", "repos_url": "https://api.github.com/users/hyunjik11/repos", "events_url": "https://api.github.com/users/hyunjik11/events{/privacy}", "received_events_url": "https://api.github.com/users/hyunjik11/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-06-14T14:32:25Z", "updated_at": "2017-12-30T00:15:40Z", "closed_at": "2017-12-30T00:15:40Z", "author_association": "NONE", "body_html": "<p><strong>System Information</strong></p>\n<ul>\n<li><strong>Custom code, a minimal reproducible example provided below</strong></li>\n<li><strong>Linux Fedora 24 and Fedora 25</strong></li>\n<li><strong>TensorFlow installed from binary using pip</strong></li>\n<li><strong>TensorFlow version 1.0.1 and 1.1.0</strong></li>\n<li><strong>CUDA 8.0/cuDNN 5.1</strong></li>\n<li><strong>GeForce GTX 1080</strong></li>\n</ul>\n<p><strong>Problem</strong><br>\nI'm trying to run some code that I wrote for tensorflow 1.0.1 on tensorflow 1.1.0.<br>\nIt seems like tf.contrib.layers.fully_connected is showing different behaviour for 1.1.0 compared to 1.0.1. See below for a minimal reproducible example showing the difference.</p>\n<p><strong>Source code and logs</strong><br>\nTensorflow 1.0.1, Fedora 24:</p>\n<pre><code>Python 2.7.13 (default, May 10 2017, 20:04:36) \n[GCC 6.3.1 20161221 (Red Hat 6.3.1-1)] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt; import tensorflow as tf\n&gt;&gt;&gt; tf.contrib.layers.fully_connected(inputs=tf.placeholder(shape=[None,3],dtype=tf.float32),num_outputs=3,reuse=True,scope='DNN')\n&lt;tf.Tensor 'DNN/Relu:0' shape=(?, 3) dtype=float32&gt;\n&gt;&gt;&gt; tf.__version__\n'1.0.1'\n</code></pre>\n<p>Tensorflow 1.1.0, Fedora 25:</p>\n<pre><code>Python 2.7.13 (default, May 10 2017, 20:04:28) \n[GCC 6.3.1 20161221 (Red Hat 6.3.1-1)] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt; import tensorflow as tf\n&gt;&gt;&gt; tf.contrib.layers.fully_connected(inputs=tf.placeholder(shape=[None,3],dtype=tf.float32),num_outputs=3,reuse=True,scope='DNN')\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\n  File \"/usr/lib/python2.7/site-packages/tensorflow/contrib/framework/python/ops/arg_scope.py\", line 181, in func_with_args\n    return func(*args, **current_args)\n  File \"/usr/lib/python2.7/site-packages/tensorflow/contrib/layers/python/layers/layers.py\", line 1433, in fully_connected\n    outputs = layer.apply(inputs)\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/layers/base.py\", line 320, in apply\n    return self.__call__(inputs, **kwargs)\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/layers/base.py\", line 286, in __call__\n    self.build(input_shapes[0])\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/layers/core.py\", line 123, in build\n    trainable=True)\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py\", line 1049, in get_variable\n    use_resource=use_resource, custom_getter=custom_getter)\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py\", line 948, in get_variable\n    use_resource=use_resource, custom_getter=custom_getter)\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py\", line 349, in get_variable\n    validate_shape=validate_shape, use_resource=use_resource)\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py\", line 1389, in wrapped_custom_getter\n    *args, **kwargs)\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/layers/base.py\", line 275, in variable_getter\n    variable_getter=functools.partial(getter, **kwargs))\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/layers/base.py\", line 228, in _add_variable\n    trainable=trainable and self.trainable)\n  File \"/usr/lib/python2.7/site-packages/tensorflow/contrib/layers/python/layers/layers.py\", line 1334, in layer_variable_getter\n    return _model_variable_getter(getter, *args, **kwargs)\n  File \"/usr/lib/python2.7/site-packages/tensorflow/contrib/layers/python/layers/layers.py\", line 1326, in _model_variable_getter\n    custom_getter=getter, use_resource=use_resource)\n  File \"/usr/lib/python2.7/site-packages/tensorflow/contrib/framework/python/ops/arg_scope.py\", line 181, in func_with_args\n    return func(*args, **current_args)\n  File \"/usr/lib/python2.7/site-packages/tensorflow/contrib/framework/python/ops/variables.py\", line 262, in model_variable\n    use_resource=use_resource)\n  File \"/usr/lib/python2.7/site-packages/tensorflow/contrib/framework/python/ops/arg_scope.py\", line 181, in func_with_args\n    return func(*args, **current_args)\n  File \"/usr/lib/python2.7/site-packages/tensorflow/contrib/framework/python/ops/variables.py\", line 217, in variable\n    use_resource=use_resource)\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py\", line 341, in _true_getter\n    use_resource=use_resource)\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py\", line 671, in _get_single_variable\n    \"VarScope?\" % name)\nValueError: Variable DNN/weights does not exist, or was not created with tf.get_variable(). Did you mean to set reuse=None in VarScope?\n&gt;&gt;&gt; tf.__version__\n'1.1.0'\n</code></pre>\n<p>Looking at the release notes for Tensorflow 1.1, there is no mention of change in behaviour of variable scope for tf.contrib.layers.fully_connected. But it seems like in 1.1 we have to create variables manually using tf.get_variable() before using tf.contrib.layers.fully_connected. Am I missing something?</p>", "body_text": "System Information\n\nCustom code, a minimal reproducible example provided below\nLinux Fedora 24 and Fedora 25\nTensorFlow installed from binary using pip\nTensorFlow version 1.0.1 and 1.1.0\nCUDA 8.0/cuDNN 5.1\nGeForce GTX 1080\n\nProblem\nI'm trying to run some code that I wrote for tensorflow 1.0.1 on tensorflow 1.1.0.\nIt seems like tf.contrib.layers.fully_connected is showing different behaviour for 1.1.0 compared to 1.0.1. See below for a minimal reproducible example showing the difference.\nSource code and logs\nTensorflow 1.0.1, Fedora 24:\nPython 2.7.13 (default, May 10 2017, 20:04:36) \n[GCC 6.3.1 20161221 (Red Hat 6.3.1-1)] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import tensorflow as tf\n>>> tf.contrib.layers.fully_connected(inputs=tf.placeholder(shape=[None,3],dtype=tf.float32),num_outputs=3,reuse=True,scope='DNN')\n<tf.Tensor 'DNN/Relu:0' shape=(?, 3) dtype=float32>\n>>> tf.__version__\n'1.0.1'\n\nTensorflow 1.1.0, Fedora 25:\nPython 2.7.13 (default, May 10 2017, 20:04:28) \n[GCC 6.3.1 20161221 (Red Hat 6.3.1-1)] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import tensorflow as tf\n>>> tf.contrib.layers.fully_connected(inputs=tf.placeholder(shape=[None,3],dtype=tf.float32),num_outputs=3,reuse=True,scope='DNN')\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/lib/python2.7/site-packages/tensorflow/contrib/framework/python/ops/arg_scope.py\", line 181, in func_with_args\n    return func(*args, **current_args)\n  File \"/usr/lib/python2.7/site-packages/tensorflow/contrib/layers/python/layers/layers.py\", line 1433, in fully_connected\n    outputs = layer.apply(inputs)\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/layers/base.py\", line 320, in apply\n    return self.__call__(inputs, **kwargs)\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/layers/base.py\", line 286, in __call__\n    self.build(input_shapes[0])\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/layers/core.py\", line 123, in build\n    trainable=True)\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py\", line 1049, in get_variable\n    use_resource=use_resource, custom_getter=custom_getter)\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py\", line 948, in get_variable\n    use_resource=use_resource, custom_getter=custom_getter)\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py\", line 349, in get_variable\n    validate_shape=validate_shape, use_resource=use_resource)\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py\", line 1389, in wrapped_custom_getter\n    *args, **kwargs)\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/layers/base.py\", line 275, in variable_getter\n    variable_getter=functools.partial(getter, **kwargs))\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/layers/base.py\", line 228, in _add_variable\n    trainable=trainable and self.trainable)\n  File \"/usr/lib/python2.7/site-packages/tensorflow/contrib/layers/python/layers/layers.py\", line 1334, in layer_variable_getter\n    return _model_variable_getter(getter, *args, **kwargs)\n  File \"/usr/lib/python2.7/site-packages/tensorflow/contrib/layers/python/layers/layers.py\", line 1326, in _model_variable_getter\n    custom_getter=getter, use_resource=use_resource)\n  File \"/usr/lib/python2.7/site-packages/tensorflow/contrib/framework/python/ops/arg_scope.py\", line 181, in func_with_args\n    return func(*args, **current_args)\n  File \"/usr/lib/python2.7/site-packages/tensorflow/contrib/framework/python/ops/variables.py\", line 262, in model_variable\n    use_resource=use_resource)\n  File \"/usr/lib/python2.7/site-packages/tensorflow/contrib/framework/python/ops/arg_scope.py\", line 181, in func_with_args\n    return func(*args, **current_args)\n  File \"/usr/lib/python2.7/site-packages/tensorflow/contrib/framework/python/ops/variables.py\", line 217, in variable\n    use_resource=use_resource)\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py\", line 341, in _true_getter\n    use_resource=use_resource)\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py\", line 671, in _get_single_variable\n    \"VarScope?\" % name)\nValueError: Variable DNN/weights does not exist, or was not created with tf.get_variable(). Did you mean to set reuse=None in VarScope?\n>>> tf.__version__\n'1.1.0'\n\nLooking at the release notes for Tensorflow 1.1, there is no mention of change in behaviour of variable scope for tf.contrib.layers.fully_connected. But it seems like in 1.1 we have to create variables manually using tf.get_variable() before using tf.contrib.layers.fully_connected. Am I missing something?", "body": "**System Information**\r\n- **Custom code, a minimal reproducible example provided below**\r\n- **Linux Fedora 24 and Fedora 25**\r\n- **TensorFlow installed from binary using pip**\r\n- **TensorFlow version 1.0.1 and 1.1.0**\r\n- **CUDA 8.0/cuDNN 5.1**\r\n- **GeForce GTX 1080**\r\n\r\n**Problem**\r\nI'm trying to run some code that I wrote for tensorflow 1.0.1 on tensorflow 1.1.0.\r\nIt seems like tf.contrib.layers.fully_connected is showing different behaviour for 1.1.0 compared to 1.0.1. See below for a minimal reproducible example showing the difference.\r\n\r\n**Source code and logs**\r\nTensorflow 1.0.1, Fedora 24:\r\n```\r\nPython 2.7.13 (default, May 10 2017, 20:04:36) \r\n[GCC 6.3.1 20161221 (Red Hat 6.3.1-1)] on linux2\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import tensorflow as tf\r\n>>> tf.contrib.layers.fully_connected(inputs=tf.placeholder(shape=[None,3],dtype=tf.float32),num_outputs=3,reuse=True,scope='DNN')\r\n<tf.Tensor 'DNN/Relu:0' shape=(?, 3) dtype=float32>\r\n>>> tf.__version__\r\n'1.0.1'\r\n```\r\nTensorflow 1.1.0, Fedora 25:\r\n```\r\nPython 2.7.13 (default, May 10 2017, 20:04:28) \r\n[GCC 6.3.1 20161221 (Red Hat 6.3.1-1)] on linux2\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import tensorflow as tf\r\n>>> tf.contrib.layers.fully_connected(inputs=tf.placeholder(shape=[None,3],dtype=tf.float32),num_outputs=3,reuse=True,scope='DNN')\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/lib/python2.7/site-packages/tensorflow/contrib/framework/python/ops/arg_scope.py\", line 181, in func_with_args\r\n    return func(*args, **current_args)\r\n  File \"/usr/lib/python2.7/site-packages/tensorflow/contrib/layers/python/layers/layers.py\", line 1433, in fully_connected\r\n    outputs = layer.apply(inputs)\r\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/layers/base.py\", line 320, in apply\r\n    return self.__call__(inputs, **kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/layers/base.py\", line 286, in __call__\r\n    self.build(input_shapes[0])\r\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/layers/core.py\", line 123, in build\r\n    trainable=True)\r\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py\", line 1049, in get_variable\r\n    use_resource=use_resource, custom_getter=custom_getter)\r\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py\", line 948, in get_variable\r\n    use_resource=use_resource, custom_getter=custom_getter)\r\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py\", line 349, in get_variable\r\n    validate_shape=validate_shape, use_resource=use_resource)\r\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py\", line 1389, in wrapped_custom_getter\r\n    *args, **kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/layers/base.py\", line 275, in variable_getter\r\n    variable_getter=functools.partial(getter, **kwargs))\r\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/layers/base.py\", line 228, in _add_variable\r\n    trainable=trainable and self.trainable)\r\n  File \"/usr/lib/python2.7/site-packages/tensorflow/contrib/layers/python/layers/layers.py\", line 1334, in layer_variable_getter\r\n    return _model_variable_getter(getter, *args, **kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/tensorflow/contrib/layers/python/layers/layers.py\", line 1326, in _model_variable_getter\r\n    custom_getter=getter, use_resource=use_resource)\r\n  File \"/usr/lib/python2.7/site-packages/tensorflow/contrib/framework/python/ops/arg_scope.py\", line 181, in func_with_args\r\n    return func(*args, **current_args)\r\n  File \"/usr/lib/python2.7/site-packages/tensorflow/contrib/framework/python/ops/variables.py\", line 262, in model_variable\r\n    use_resource=use_resource)\r\n  File \"/usr/lib/python2.7/site-packages/tensorflow/contrib/framework/python/ops/arg_scope.py\", line 181, in func_with_args\r\n    return func(*args, **current_args)\r\n  File \"/usr/lib/python2.7/site-packages/tensorflow/contrib/framework/python/ops/variables.py\", line 217, in variable\r\n    use_resource=use_resource)\r\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py\", line 341, in _true_getter\r\n    use_resource=use_resource)\r\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py\", line 671, in _get_single_variable\r\n    \"VarScope?\" % name)\r\nValueError: Variable DNN/weights does not exist, or was not created with tf.get_variable(). Did you mean to set reuse=None in VarScope?\r\n>>> tf.__version__\r\n'1.1.0'\r\n```\r\nLooking at the release notes for Tensorflow 1.1, there is no mention of change in behaviour of variable scope for tf.contrib.layers.fully_connected. But it seems like in 1.1 we have to create variables manually using tf.get_variable() before using tf.contrib.layers.fully_connected. Am I missing something?\r\n"}