{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/213159218", "html_url": "https://github.com/tensorflow/tensorflow/pull/1999#issuecomment-213159218", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1999", "id": 213159218, "node_id": "MDEyOklzc3VlQ29tbWVudDIxMzE1OTIxOA==", "user": {"login": "girving", "id": 70511, "node_id": "MDQ6VXNlcjcwNTEx", "avatar_url": "https://avatars1.githubusercontent.com/u/70511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/girving", "html_url": "https://github.com/girving", "followers_url": "https://api.github.com/users/girving/followers", "following_url": "https://api.github.com/users/girving/following{/other_user}", "gists_url": "https://api.github.com/users/girving/gists{/gist_id}", "starred_url": "https://api.github.com/users/girving/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/girving/subscriptions", "organizations_url": "https://api.github.com/users/girving/orgs", "repos_url": "https://api.github.com/users/girving/repos", "events_url": "https://api.github.com/users/girving/events{/privacy}", "received_events_url": "https://api.github.com/users/girving/received_events", "type": "User", "site_admin": false}, "created_at": "2016-04-21T23:32:21Z", "updated_at": "2016-04-21T23:40:21Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Here's an alternative implementation (details such as name skipped):</p>\n<pre><code>def confusion_matrix(predictions, target, num_classes=None):\n  if num_classes is None:\n    num_classes = tf.max(tf.reduce_max(predictions), tf.reduce_max(target)) + 1\n  shape = tf.pack([num_classes, num_classes])\n  sparse = tf.SparseTensor(values=1, indices=tf.transpose(tf.pack([predictions, target])), shape=shape)\n  return tf.sparse_add(tf.zeros(shape, dtype=tf.int32), sparse)\n</code></pre>\n<p>It probably has a few bugs, but hopefully it's close and conveys the general idea.</p>", "body_text": "Here's an alternative implementation (details such as name skipped):\ndef confusion_matrix(predictions, target, num_classes=None):\n  if num_classes is None:\n    num_classes = tf.max(tf.reduce_max(predictions), tf.reduce_max(target)) + 1\n  shape = tf.pack([num_classes, num_classes])\n  sparse = tf.SparseTensor(values=1, indices=tf.transpose(tf.pack([predictions, target])), shape=shape)\n  return tf.sparse_add(tf.zeros(shape, dtype=tf.int32), sparse)\n\nIt probably has a few bugs, but hopefully it's close and conveys the general idea.", "body": "Here's an alternative implementation (details such as name skipped):\n\n```\ndef confusion_matrix(predictions, target, num_classes=None):\n  if num_classes is None:\n    num_classes = tf.max(tf.reduce_max(predictions), tf.reduce_max(target)) + 1\n  shape = tf.pack([num_classes, num_classes])\n  sparse = tf.SparseTensor(values=1, indices=tf.transpose(tf.pack([predictions, target])), shape=shape)\n  return tf.sparse_add(tf.zeros(shape, dtype=tf.int32), sparse)\n```\n\nIt probably has a few bugs, but hopefully it's close and conveys the general idea.\n"}