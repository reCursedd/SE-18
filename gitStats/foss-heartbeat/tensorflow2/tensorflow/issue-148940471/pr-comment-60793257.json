{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/60793257", "pull_request_review_id": null, "id": 60793257, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNzkzMjU3", "diff_hunk": "@@ -0,0 +1,127 @@\n+# Copyright 2016 Google Inc. All Rights Reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ==============================================================================\n+\"\"\"Tests for confusion_matrix_ops.\"\"\"\n+from __future__ import absolute_import\n+from __future__ import division\n+from __future__ import print_function\n+\n+import numpy as np\n+import tensorflow as tf\n+\n+\n+class ConfusionMatrixTest(tf.test.TestCase):\n+\n+  def _testConfMatrix(self, predictions, targets, truth):\n+    with self.test_session():\n+      ans = tf.contrib.metrics.confusion_matrix(predictions, targets)\n+      tf_ans = ans.eval()\n+      self.assertAllClose(tf_ans, truth, atol=1e-10)\n+\n+  def _testBasic(self, dtype):\n+    predictions = np.arange(5, dtype=dtype)\n+    targets = np.arange(5, dtype=dtype)\n+\n+    truth = np.asarray(\n+      [[1, 0, 0, 0, 0],\n+       [0, 1, 0, 0, 0],\n+       [0, 0, 1, 0, 0],\n+       [0, 0, 0, 1, 0],\n+       [0, 0, 0, 0, 1]],\n+      dtype=dtype)\n+\n+    self._testConfMatrix(\n+      predictions=predictions,\n+      targets=targets,\n+      truth=truth)\n+\n+  def testInt32Basic(self, dtype=np.int32):\n+    self._testBasic(dtype)\n+\n+  def testInt64Basic(self, dtype=np.int64):\n+    self._testBasic(dtype)\n+\n+  def _testDiffentLabelsInPredictionAndTarget(self, dtype):\n+    predictions = np.asarray([1, 2, 3], dtype=dtype)\n+    targets = np.asarray([4, 5, 6], dtype=dtype)\n+\n+    truth = np.asarray(\n+      [[0, 0, 0, 0, 0, 0, 0],\n+       [0, 0, 0, 0, 1, 0, 0],\n+       [0, 0, 0, 0, 0, 1, 0],\n+       [0, 0, 0, 0, 0, 0, 1],\n+       [0, 0, 0, 0, 0, 0, 0],\n+       [0, 0, 0, 0, 0, 0, 0],\n+       [0, 0, 0, 0, 0, 0, 0]],\n+      dtype=dtype)\n+\n+    self._testConfMatrix(\n+      predictions=predictions,\n+      targets=targets,\n+      truth=truth)\n+\n+  def testInt32DifferentLabels(self, dtype=np.int32):\n+    self._testDiffentLabelsInPredictionAndTarget(dtype)\n+\n+  def testInt64DifferentLabels(self, dtype=np.int64):\n+    self._testDiffentLabelsInPredictionAndTarget(dtype)\n+\n+  def _testMultipleLabels(self, dtype):\n+    predictions = np.asarray([1, 1, 2, 3, 5, 6, 1, 2, 3, 4], dtype=dtype)\n+    targets = np.asarray([1, 1, 2, 3, 5, 1, 3, 6, 3, 1], dtype=dtype)\n+\n+    truth = np.asarray(\n+      [[0, 0, 0, 0, 0, 0, 0],\n+       [0, 2, 0, 1, 0, 0, 0],\n+       [0, 0, 1, 0, 0, 0, 1],\n+       [0, 0, 0, 2, 0, 0, 0],\n+       [0, 1, 0, 0, 0, 0, 0],\n+       [0, 0, 0, 0, 0, 1, 0],\n+       [0, 1, 0, 0, 0, 0, 0]],\n+      dtype=dtype)\n+\n+    self._testConfMatrix(\n+      predictions=predictions,\n+      targets=targets,\n+      truth=truth)\n+\n+  def testInt32MultipleLabels(self, dtype=np.int32):\n+    self._testMultipleLabels(dtype)\n+\n+  def testInt64MultipleLabels(self, dtype=np.int64):\n+    self._testMultipleLabels(dtype)\n+\n+  def testInvalidRank(self):\n+    predictions = np.asarray([[1, 2, 3]])\n+    targets = np.asarray([1, 2, 3])\n+    self.assertRaisesRegexp(\n+        ValueError, \"are not compatible\",\n+        tf.contrib.metrics.confusion_matrix, predictions, targets)\n+\n+    predictions = np.asarray([1, 2, 3])\n+    targets = np.asarray([[1, 2, 3]])\n+    self.assertRaisesRegexp(\n+        ValueError, \"are not compatible\",\n+        tf.contrib.metrics.confusion_matrix, predictions, targets)\n+\n+  def testInputDifferentSize(self):\n+    predictions = np.asarray([1, 2, 3])\n+    targets = np.asarray([1, 2])\n+    self.assertRaisesRegexp(\n+          ValueError,\n+          \"are not compatible\",\n+          tf.contrib.metrics.confusion_matrix, predictions, targets)", "path": "tensorflow/contrib/metrics/python/kernel_tests/confusion_matrix_ops_test.py", "position": 124, "original_position": 124, "commit_id": "57536144e006ffe2bdbe805eb38ae00f946991d0", "original_commit_id": "0bc12a0c18a06fa4e47ef82b8f8b626361ab1f78", "user": {"login": "lucasmoura", "id": 2703696, "node_id": "MDQ6VXNlcjI3MDM2OTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2703696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lucasmoura", "html_url": "https://github.com/lucasmoura", "followers_url": "https://api.github.com/users/lucasmoura/followers", "following_url": "https://api.github.com/users/lucasmoura/following{/other_user}", "gists_url": "https://api.github.com/users/lucasmoura/gists{/gist_id}", "starred_url": "https://api.github.com/users/lucasmoura/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lucasmoura/subscriptions", "organizations_url": "https://api.github.com/users/lucasmoura/orgs", "repos_url": "https://api.github.com/users/lucasmoura/repos", "events_url": "https://api.github.com/users/lucasmoura/events{/privacy}", "received_events_url": "https://api.github.com/users/lucasmoura/received_events", "type": "User", "site_admin": false}, "body": "I have rerun both tests and both of them are passing. Maybe another operation is raising the exceptions. But if it is better, I can remove or rewrite them.\n", "created_at": "2016-04-22T19:46:07Z", "updated_at": "2016-04-23T03:40:12Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/1999#discussion_r60793257", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/1999", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/60793257"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/1999#discussion_r60793257"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/1999"}}, "body_html": "<p>I have rerun both tests and both of them are passing. Maybe another operation is raising the exceptions. But if it is better, I can remove or rewrite them.</p>", "body_text": "I have rerun both tests and both of them are passing. Maybe another operation is raising the exceptions. But if it is better, I can remove or rewrite them."}