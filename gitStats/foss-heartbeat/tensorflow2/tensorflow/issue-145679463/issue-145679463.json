{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1767", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1767/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1767/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1767/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/1767", "id": 145679463, "node_id": "MDU6SXNzdWUxNDU2Nzk0NjM=", "number": 1767, "title": "Adaptive neural network optimized for solving specific issue", "user": {"login": "mxrguspxrt", "id": 346566, "node_id": "MDQ6VXNlcjM0NjU2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/346566?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mxrguspxrt", "html_url": "https://github.com/mxrguspxrt", "followers_url": "https://api.github.com/users/mxrguspxrt/followers", "following_url": "https://api.github.com/users/mxrguspxrt/following{/other_user}", "gists_url": "https://api.github.com/users/mxrguspxrt/gists{/gist_id}", "starred_url": "https://api.github.com/users/mxrguspxrt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mxrguspxrt/subscriptions", "organizations_url": "https://api.github.com/users/mxrguspxrt/orgs", "repos_url": "https://api.github.com/users/mxrguspxrt/repos", "events_url": "https://api.github.com/users/mxrguspxrt/events{/privacy}", "received_events_url": "https://api.github.com/users/mxrguspxrt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-04-04T13:08:40Z", "updated_at": "2016-04-04T23:52:35Z", "closed_at": "2016-04-04T23:52:35Z", "author_association": "NONE", "body_html": "<p>Hey!</p>\n<p>From Kolmogorov theorem we can accept that neural network is able to represent any function, but it is unknown what should be the specific configuration of the network.</p>\n<p>TensorFlow has a lot of helpful parts (behind scenes back prop, learning rate decay, gradient optimizers etc), but the topology of the network (how many layers and neurons) is currently arbitrary and the best solution is found by manual testing.</p>\n<p>Would it make sense to have auto of the box some kind of  \"find the best solution for my classification problem\"? Just adding layers, neurons and autoencoders to find the best solution?</p>\n<p>Genetic programming of neural network. Plugin &amp; play black box would be awesome? :)</p>", "body_text": "Hey!\nFrom Kolmogorov theorem we can accept that neural network is able to represent any function, but it is unknown what should be the specific configuration of the network.\nTensorFlow has a lot of helpful parts (behind scenes back prop, learning rate decay, gradient optimizers etc), but the topology of the network (how many layers and neurons) is currently arbitrary and the best solution is found by manual testing.\nWould it make sense to have auto of the box some kind of  \"find the best solution for my classification problem\"? Just adding layers, neurons and autoencoders to find the best solution?\nGenetic programming of neural network. Plugin & play black box would be awesome? :)", "body": "Hey!\n\nFrom Kolmogorov theorem we can accept that neural network is able to represent any function, but it is unknown what should be the specific configuration of the network.\n\nTensorFlow has a lot of helpful parts (behind scenes back prop, learning rate decay, gradient optimizers etc), but the topology of the network (how many layers and neurons) is currently arbitrary and the best solution is found by manual testing.\n\nWould it make sense to have auto of the box some kind of  \"find the best solution for my classification problem\"? Just adding layers, neurons and autoencoders to find the best solution? \n\nGenetic programming of neural network. Plugin & play black box would be awesome? :)\n"}