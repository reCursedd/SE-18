{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/125167529", "pull_request_review_id": 47535487, "id": 125167529, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNTE2NzUyOQ==", "diff_hunk": "@@ -325,21 +325,24 @@ def testTensorArrayWriteWrongIndexOrDataTypeFails(self):\n         ta.write(-1, np.int32(7)).flow.eval()\n \n   def testTensorArrayReadWrongIndexOrDataTypeFails(self):\n-    with self.test_session(), self.test_scope():\n-      ta = tensor_array_ops.TensorArray(\n-          dtype=dtypes.float32, tensor_array_name=\"foo\", size=3)\n-\n-      w0 = ta.write(0, [[4.0, 5.0]])\n-\n-      # Test reading wrong datatype\n-      r0_bad = gen_data_flow_ops._tensor_array_read_v3(\n-          handle=w0.handle, index=0, dtype=dtypes.float64, flow_in=w0.flow)\n-      with self.assertRaisesOpError(\n-          \"TensorArray dtype is float but op has dtype double.\"):\n-        r0_bad.eval()\n-\n-      # Test reading from a different index than the one we wrote to\n-      w0.read(1)\n+    if len(self.float_types) > 1:\n+      dtype1 = self.float_types[0]", "path": "tensorflow/compiler/tests/tensor_array_ops_test.py", "position": null, "original_position": 20, "commit_id": "2e22dba87bf0ed49243b1d8fe02cc9a4c3b63dee", "original_commit_id": "86b7945ca179de5cac49bbe9978c6546c5e2e1b6", "user": {"login": "DavidNorman", "id": 606831, "node_id": "MDQ6VXNlcjYwNjgzMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/606831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DavidNorman", "html_url": "https://github.com/DavidNorman", "followers_url": "https://api.github.com/users/DavidNorman/followers", "following_url": "https://api.github.com/users/DavidNorman/following{/other_user}", "gists_url": "https://api.github.com/users/DavidNorman/gists{/gist_id}", "starred_url": "https://api.github.com/users/DavidNorman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DavidNorman/subscriptions", "organizations_url": "https://api.github.com/users/DavidNorman/orgs", "repos_url": "https://api.github.com/users/DavidNorman/repos", "events_url": "https://api.github.com/users/DavidNorman/events{/privacy}", "received_events_url": "https://api.github.com/users/DavidNorman/received_events", "type": "User", "site_admin": false}, "body": "I suppose the ideal thing to do is to use every pair of dissimilar floating point types (or maybe every pair of dissimilar types).  I could code that up if you would like. ", "created_at": "2017-07-01T19:22:14Z", "updated_at": "2017-07-08T08:03:46Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/11172#discussion_r125167529", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11172", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/125167529"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/11172#discussion_r125167529"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11172"}}, "body_html": "<p>I suppose the ideal thing to do is to use every pair of dissimilar floating point types (or maybe every pair of dissimilar types).  I could code that up if you would like.</p>", "body_text": "I suppose the ideal thing to do is to use every pair of dissimilar floating point types (or maybe every pair of dissimilar types).  I could code that up if you would like.", "in_reply_to_id": 125092817}