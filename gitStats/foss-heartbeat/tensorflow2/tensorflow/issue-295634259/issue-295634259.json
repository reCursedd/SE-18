{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16873", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16873/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16873/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16873/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16873", "id": 295634259, "node_id": "MDU6SXNzdWUyOTU2MzQyNTk=", "number": 16873, "title": "Undefined symbol when compiling a custom op", "user": {"login": "thomasquintana", "id": 1891840, "node_id": "MDQ6VXNlcjE4OTE4NDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1891840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomasquintana", "html_url": "https://github.com/thomasquintana", "followers_url": "https://api.github.com/users/thomasquintana/followers", "following_url": "https://api.github.com/users/thomasquintana/following{/other_user}", "gists_url": "https://api.github.com/users/thomasquintana/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomasquintana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomasquintana/subscriptions", "organizations_url": "https://api.github.com/users/thomasquintana/orgs", "repos_url": "https://api.github.com/users/thomasquintana/repos", "events_url": "https://api.github.com/users/thomasquintana/events{/privacy}", "received_events_url": "https://api.github.com/users/thomasquintana/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-02-08T19:21:08Z", "updated_at": "2018-09-21T03:01:21Z", "closed_at": "2018-02-08T19:48:08Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: <a href=\"https://github.com/mozilla/DeepSpeech/blob/master/native_client/beam_search.cc\">https://github.com/mozilla/DeepSpeech/blob/master/native_client/beam_search.cc</a></li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu 16.10</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: source</li>\n<li><strong>TensorFlow version (use command below)</strong>: v1.5.0-0-g37aa430 1.5.0</li>\n<li><strong>Python version</strong>: 3.5.2</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.9.0</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: g++ (Ubuntu 5.4.0-6ubuntu1~16.04.5) 5.4.0 20160609</li>\n<li><strong>CUDA/cuDNN version</strong>: 9.1/7</li>\n<li><strong>GPU model and memory</strong>: TitanX 12Gb x 2</li>\n<li><strong>Exact command to reproduce</strong>:<br>\nMakefile:</li>\n</ul>\n<pre><code>CXX := g++\nCFLAGS := -Wall -O3 -std=c++11\n\n# KenLM flags.\nSRC_DIR := kenlm\nOBJ_DIR := kenlm\n\nSRC_FILES := $(filter-out $(wildcard $(SRC_DIR)/util/*main*) $(wildcard $(SRC_DIR)/util/*test*), $(wildcard $(SRC_DIR)/util/*.cc))\nSRC_FILES := $(SRC_FILES) $(filter-out $(wildcard $(SRC_DIR)/lm/*main*) $(wildcard $(SRC_DIR)/lm/*test*), $(wildcard $(SRC_DIR)/lm/*.cc))\nSRC_FILES := $(SRC_FILES) $(filter-out $(wildcard $(SRC_DIR)/util/double-conversion/*main*) $(wildcard $(SRC_DIR)/util/double-conversion/*test*), $(wildcard $(SRC_DIR)/util/double-conversion/*.cc))\n\nOBJ_FILES := $(patsubst $(SRC_DIR)/%.cc,$(OBJ_DIR)/%.o,$(SRC_FILES))\n\nKENLM_CFLAGS := -I$(shell pwd)/kenlm -DNDEBUG -DKENLM_MAX_ORDER=6\nKENLM_LFLAGS := -L$(shell pwd)/kenlm/build/lib -lkenlm -lkenlm_builder -lkenlm_filter -lkenlm_interpolate -lkenlm_util -lz -lbz2 -llzma\n\n# TensorFlow flags.\nTF_CFLAGS := -I$(shell pwd)/tensorflow\n\nTF_CFLAGS := $(TF_CFLAGS) $(shell python3 -c 'import tensorflow as tf; print(\" \".join(tf.sysconfig.get_compile_flags()))')\nTF_LFLAGS := $(shell python3 -c 'import tensorflow as tf; print(\" \".join(tf.sysconfig.get_link_flags()))')\n\n.PHONY: clean ctc_decoder.so generate_trie\n\ndefault: clean ctc_decoder.so generate_trie\n\nclean:\n\trm -f $(OBJ_FILES)\n\trm -f ctc_decoder.so\n\trm -f generate_trie\n\nctc_decoder.so: $(OBJ_FILES)\n\t$(CXX) $(CFLAGS) $(KENLM_CFLAGS) $(TF_CFLAGS) -fPIC -shared -o $@ beam_search.cc $^ $(TF_LFLAGS)\n\n$(OBJ_DIR)/%.o: $(SRC_DIR)/%.cc\n\t$(CXX) $(CFLAGS) $(KENLM_CFLAGS) -fPIC -c -o $@ $&lt;\n\ngenerate_trie:\n\t$(CXX) $(CFLAGS) $(KENLM_CFLAGS) generate_trie.cc -o $@ $(KENLM_LFLAGS)\n\n</code></pre>\n<p>Python:</p>\n<pre><code>import tensorflow as tf\nctc_module = tf.load_op_library('/home/thomas/projects/deepspeech2/deepspeech2/ctc/ctc_decoder.so')\n</code></pre>\n<h3>Describe the problem</h3>\n<p>I compiled a custom op (mozilla's ctc decoder with lm) using the make file I pasted above and it compiles without a problem but when I try to load it I get an undefined symbol error.</p>\n<h3>Source code / logs</h3>\n<pre><code>Python 3.5.2 (default, Nov 23 2017, 16:37:01) \n[GCC 5.4.0 20160609] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt; import tensorflow as tf\n&gt;&gt;&gt; ctc_module = tf.load_op_library('/home/thomas/projects/deepspeech2/deepspeech2/ctc/ctc-decoder.so')\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/load_library.py\", line 56, in load_op_library\n    lib_handle = py_tf.TF_LoadLibrary(library_filename, status)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/errors_impl.py\", line 473, in __exit__\n    c_api.TF_GetCode(self.status.status))\ntensorflow.python.framework.errors_impl.NotFoundError: /home/thomas/projects/deepspeech2/deepspeech2/ctc/ctc-decoder.so: undefined symbol: _ZN10tensorflow15OpKernelContext10CtxFailureEPKciRKNS_6StatusE\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): https://github.com/mozilla/DeepSpeech/blob/master/native_client/beam_search.cc\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.10\nTensorFlow installed from (source or binary): source\nTensorFlow version (use command below): v1.5.0-0-g37aa430 1.5.0\nPython version: 3.5.2\nBazel version (if compiling from source): 0.9.0\nGCC/Compiler version (if compiling from source): g++ (Ubuntu 5.4.0-6ubuntu1~16.04.5) 5.4.0 20160609\nCUDA/cuDNN version: 9.1/7\nGPU model and memory: TitanX 12Gb x 2\nExact command to reproduce:\nMakefile:\n\nCXX := g++\nCFLAGS := -Wall -O3 -std=c++11\n\n# KenLM flags.\nSRC_DIR := kenlm\nOBJ_DIR := kenlm\n\nSRC_FILES := $(filter-out $(wildcard $(SRC_DIR)/util/*main*) $(wildcard $(SRC_DIR)/util/*test*), $(wildcard $(SRC_DIR)/util/*.cc))\nSRC_FILES := $(SRC_FILES) $(filter-out $(wildcard $(SRC_DIR)/lm/*main*) $(wildcard $(SRC_DIR)/lm/*test*), $(wildcard $(SRC_DIR)/lm/*.cc))\nSRC_FILES := $(SRC_FILES) $(filter-out $(wildcard $(SRC_DIR)/util/double-conversion/*main*) $(wildcard $(SRC_DIR)/util/double-conversion/*test*), $(wildcard $(SRC_DIR)/util/double-conversion/*.cc))\n\nOBJ_FILES := $(patsubst $(SRC_DIR)/%.cc,$(OBJ_DIR)/%.o,$(SRC_FILES))\n\nKENLM_CFLAGS := -I$(shell pwd)/kenlm -DNDEBUG -DKENLM_MAX_ORDER=6\nKENLM_LFLAGS := -L$(shell pwd)/kenlm/build/lib -lkenlm -lkenlm_builder -lkenlm_filter -lkenlm_interpolate -lkenlm_util -lz -lbz2 -llzma\n\n# TensorFlow flags.\nTF_CFLAGS := -I$(shell pwd)/tensorflow\n\nTF_CFLAGS := $(TF_CFLAGS) $(shell python3 -c 'import tensorflow as tf; print(\" \".join(tf.sysconfig.get_compile_flags()))')\nTF_LFLAGS := $(shell python3 -c 'import tensorflow as tf; print(\" \".join(tf.sysconfig.get_link_flags()))')\n\n.PHONY: clean ctc_decoder.so generate_trie\n\ndefault: clean ctc_decoder.so generate_trie\n\nclean:\n\trm -f $(OBJ_FILES)\n\trm -f ctc_decoder.so\n\trm -f generate_trie\n\nctc_decoder.so: $(OBJ_FILES)\n\t$(CXX) $(CFLAGS) $(KENLM_CFLAGS) $(TF_CFLAGS) -fPIC -shared -o $@ beam_search.cc $^ $(TF_LFLAGS)\n\n$(OBJ_DIR)/%.o: $(SRC_DIR)/%.cc\n\t$(CXX) $(CFLAGS) $(KENLM_CFLAGS) -fPIC -c -o $@ $<\n\ngenerate_trie:\n\t$(CXX) $(CFLAGS) $(KENLM_CFLAGS) generate_trie.cc -o $@ $(KENLM_LFLAGS)\n\n\nPython:\nimport tensorflow as tf\nctc_module = tf.load_op_library('/home/thomas/projects/deepspeech2/deepspeech2/ctc/ctc_decoder.so')\n\nDescribe the problem\nI compiled a custom op (mozilla's ctc decoder with lm) using the make file I pasted above and it compiles without a problem but when I try to load it I get an undefined symbol error.\nSource code / logs\nPython 3.5.2 (default, Nov 23 2017, 16:37:01) \n[GCC 5.4.0 20160609] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import tensorflow as tf\n>>> ctc_module = tf.load_op_library('/home/thomas/projects/deepspeech2/deepspeech2/ctc/ctc-decoder.so')\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/load_library.py\", line 56, in load_op_library\n    lib_handle = py_tf.TF_LoadLibrary(library_filename, status)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/errors_impl.py\", line 473, in __exit__\n    c_api.TF_GetCode(self.status.status))\ntensorflow.python.framework.errors_impl.NotFoundError: /home/thomas/projects/deepspeech2/deepspeech2/ctc/ctc-decoder.so: undefined symbol: _ZN10tensorflow15OpKernelContext10CtxFailureEPKciRKNS_6StatusE", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: https://github.com/mozilla/DeepSpeech/blob/master/native_client/beam_search.cc\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.10\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: v1.5.0-0-g37aa430 1.5.0\r\n- **Python version**: 3.5.2\r\n- **Bazel version (if compiling from source)**: 0.9.0\r\n- **GCC/Compiler version (if compiling from source)**: g++ (Ubuntu 5.4.0-6ubuntu1~16.04.5) 5.4.0 20160609\r\n- **CUDA/cuDNN version**: 9.1/7\r\n- **GPU model and memory**: TitanX 12Gb x 2\r\n- **Exact command to reproduce**:\r\nMakefile:\r\n```\r\nCXX := g++\r\nCFLAGS := -Wall -O3 -std=c++11\r\n\r\n# KenLM flags.\r\nSRC_DIR := kenlm\r\nOBJ_DIR := kenlm\r\n\r\nSRC_FILES := $(filter-out $(wildcard $(SRC_DIR)/util/*main*) $(wildcard $(SRC_DIR)/util/*test*), $(wildcard $(SRC_DIR)/util/*.cc))\r\nSRC_FILES := $(SRC_FILES) $(filter-out $(wildcard $(SRC_DIR)/lm/*main*) $(wildcard $(SRC_DIR)/lm/*test*), $(wildcard $(SRC_DIR)/lm/*.cc))\r\nSRC_FILES := $(SRC_FILES) $(filter-out $(wildcard $(SRC_DIR)/util/double-conversion/*main*) $(wildcard $(SRC_DIR)/util/double-conversion/*test*), $(wildcard $(SRC_DIR)/util/double-conversion/*.cc))\r\n\r\nOBJ_FILES := $(patsubst $(SRC_DIR)/%.cc,$(OBJ_DIR)/%.o,$(SRC_FILES))\r\n\r\nKENLM_CFLAGS := -I$(shell pwd)/kenlm -DNDEBUG -DKENLM_MAX_ORDER=6\r\nKENLM_LFLAGS := -L$(shell pwd)/kenlm/build/lib -lkenlm -lkenlm_builder -lkenlm_filter -lkenlm_interpolate -lkenlm_util -lz -lbz2 -llzma\r\n\r\n# TensorFlow flags.\r\nTF_CFLAGS := -I$(shell pwd)/tensorflow\r\n\r\nTF_CFLAGS := $(TF_CFLAGS) $(shell python3 -c 'import tensorflow as tf; print(\" \".join(tf.sysconfig.get_compile_flags()))')\r\nTF_LFLAGS := $(shell python3 -c 'import tensorflow as tf; print(\" \".join(tf.sysconfig.get_link_flags()))')\r\n\r\n.PHONY: clean ctc_decoder.so generate_trie\r\n\r\ndefault: clean ctc_decoder.so generate_trie\r\n\r\nclean:\r\n\trm -f $(OBJ_FILES)\r\n\trm -f ctc_decoder.so\r\n\trm -f generate_trie\r\n\r\nctc_decoder.so: $(OBJ_FILES)\r\n\t$(CXX) $(CFLAGS) $(KENLM_CFLAGS) $(TF_CFLAGS) -fPIC -shared -o $@ beam_search.cc $^ $(TF_LFLAGS)\r\n\r\n$(OBJ_DIR)/%.o: $(SRC_DIR)/%.cc\r\n\t$(CXX) $(CFLAGS) $(KENLM_CFLAGS) -fPIC -c -o $@ $<\r\n\r\ngenerate_trie:\r\n\t$(CXX) $(CFLAGS) $(KENLM_CFLAGS) generate_trie.cc -o $@ $(KENLM_LFLAGS)\r\n\r\n```\r\n\r\nPython:\r\n```\r\nimport tensorflow as tf\r\nctc_module = tf.load_op_library('/home/thomas/projects/deepspeech2/deepspeech2/ctc/ctc_decoder.so')\r\n```\r\n### Describe the problem\r\nI compiled a custom op (mozilla's ctc decoder with lm) using the make file I pasted above and it compiles without a problem but when I try to load it I get an undefined symbol error.\r\n\r\n### Source code / logs\r\n```\r\nPython 3.5.2 (default, Nov 23 2017, 16:37:01) \r\n[GCC 5.4.0 20160609] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import tensorflow as tf\r\n>>> ctc_module = tf.load_op_library('/home/thomas/projects/deepspeech2/deepspeech2/ctc/ctc-decoder.so')\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/load_library.py\", line 56, in load_op_library\r\n    lib_handle = py_tf.TF_LoadLibrary(library_filename, status)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/errors_impl.py\", line 473, in __exit__\r\n    c_api.TF_GetCode(self.status.status))\r\ntensorflow.python.framework.errors_impl.NotFoundError: /home/thomas/projects/deepspeech2/deepspeech2/ctc/ctc-decoder.so: undefined symbol: _ZN10tensorflow15OpKernelContext10CtxFailureEPKciRKNS_6StatusE\r\n```\r\n"}