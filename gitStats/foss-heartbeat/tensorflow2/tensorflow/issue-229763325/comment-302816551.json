{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/302816551", "html_url": "https://github.com/tensorflow/tensorflow/issues/10012#issuecomment-302816551", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10012", "id": 302816551, "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjgxNjU1MQ==", "user": {"login": "suharshs", "id": 1450614, "node_id": "MDQ6VXNlcjE0NTA2MTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1450614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suharshs", "html_url": "https://github.com/suharshs", "followers_url": "https://api.github.com/users/suharshs/followers", "following_url": "https://api.github.com/users/suharshs/following{/other_user}", "gists_url": "https://api.github.com/users/suharshs/gists{/gist_id}", "starred_url": "https://api.github.com/users/suharshs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suharshs/subscriptions", "organizations_url": "https://api.github.com/users/suharshs/orgs", "repos_url": "https://api.github.com/users/suharshs/repos", "events_url": "https://api.github.com/users/suharshs/events{/privacy}", "received_events_url": "https://api.github.com/users/suharshs/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-19T21:33:08Z", "updated_at": "2017-05-19T21:33:08Z", "author_association": "MEMBER", "body_html": "<p>TF_Reset's semantics are currently very confusing. We are looking into alternatives for resource container management that solve what TF_Reset was made for in a clearer way. So, I think its advisable to keep TF_Reset only in the deprecated session currently. Let me know if you need TF_Reset in the new session api and we can discuss your use case (I'd be very interested).</p>\n<p>The word 'handle' is a bit overused currently :)</p>\n<p>partial_run_handle: This handle corresponds to an sequence of partial run calls. So the user can call PartialRunSetup, which returns a new partial_run_handle. This is then passed by the user to PartialRun calls. (this is the 'handle' in the _do_run function in the python file you linked).</p>\n<p>feed_handle and fetch_handles: I am not an expert on these, but IIUC these correspond to persistent tensor handles. (<a href=\"https://www.tensorflow.org/versions/r0.11/api_docs/python/session_ops/tensor_handle_operations\" rel=\"nofollow\">https://www.tensorflow.org/versions/r0.11/api_docs/python/session_ops/tensor_handle_operations</a>_). These are experimental so it may not be a big deal if your client doesn't take care of them.</p>\n<p>Does that make sense?</p>", "body_text": "TF_Reset's semantics are currently very confusing. We are looking into alternatives for resource container management that solve what TF_Reset was made for in a clearer way. So, I think its advisable to keep TF_Reset only in the deprecated session currently. Let me know if you need TF_Reset in the new session api and we can discuss your use case (I'd be very interested).\nThe word 'handle' is a bit overused currently :)\npartial_run_handle: This handle corresponds to an sequence of partial run calls. So the user can call PartialRunSetup, which returns a new partial_run_handle. This is then passed by the user to PartialRun calls. (this is the 'handle' in the _do_run function in the python file you linked).\nfeed_handle and fetch_handles: I am not an expert on these, but IIUC these correspond to persistent tensor handles. (https://www.tensorflow.org/versions/r0.11/api_docs/python/session_ops/tensor_handle_operations_). These are experimental so it may not be a big deal if your client doesn't take care of them.\nDoes that make sense?", "body": "TF_Reset's semantics are currently very confusing. We are looking into alternatives for resource container management that solve what TF_Reset was made for in a clearer way. So, I think its advisable to keep TF_Reset only in the deprecated session currently. Let me know if you need TF_Reset in the new session api and we can discuss your use case (I'd be very interested).\r\n\r\nThe word 'handle' is a bit overused currently :)\r\n\r\npartial_run_handle: This handle corresponds to an sequence of partial run calls. So the user can call PartialRunSetup, which returns a new partial_run_handle. This is then passed by the user to PartialRun calls. (this is the 'handle' in the _do_run function in the python file you linked).\r\n\r\nfeed_handle and fetch_handles: I am not an expert on these, but IIUC these correspond to persistent tensor handles. (https://www.tensorflow.org/versions/r0.11/api_docs/python/session_ops/tensor_handle_operations_). These are experimental so it may not be a big deal if your client doesn't take care of them.\r\n\r\nDoes that make sense?"}