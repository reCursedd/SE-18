{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10012", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10012/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10012/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10012/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/10012", "id": 229763325, "node_id": "MDU6SXNzdWUyMjk3NjMzMjU=", "number": 10012, "title": "Session vs DeprecatedSession", "user": {"login": "eaplatanios", "id": 1294940, "node_id": "MDQ6VXNlcjEyOTQ5NDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1294940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eaplatanios", "html_url": "https://github.com/eaplatanios", "followers_url": "https://api.github.com/users/eaplatanios/followers", "following_url": "https://api.github.com/users/eaplatanios/following{/other_user}", "gists_url": "https://api.github.com/users/eaplatanios/gists{/gist_id}", "starred_url": "https://api.github.com/users/eaplatanios/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eaplatanios/subscriptions", "organizations_url": "https://api.github.com/users/eaplatanios/orgs", "repos_url": "https://api.github.com/users/eaplatanios/repos", "events_url": "https://api.github.com/users/eaplatanios/events{/privacy}", "received_events_url": "https://api.github.com/users/eaplatanios/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2017-05-18T18:25:01Z", "updated_at": "2018-02-27T06:27:48Z", "closed_at": "2018-02-27T06:27:48Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Hi,</p>\n<p>I'm wondering as to the main differences between the new sessions in the C API and the deprecated sessions. I noticed that <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/client/session.py#L562\">the Python API is using the deprecated sessions</a> and since I am using the new sessions, I want to make sure I understand the differences correctly. I list here the differences I believe exist and I hope that someone could verify and/or correct my thoughts:</p>\n<ul>\n<li><code>TF_ExtendGraph</code> is not necessary with the new sessions. The session will always be aware of changes in the underlying graph.</li>\n<li><code>TF_Reset</code> still makes sense with the new sessions and has the same functionality. If that is indeed the case, maybe it should be moved outside the deprecated session API region of the C API header file.</li>\n<li>Most of the <code>TF_SessionOptions</code> still apply, but some of them do not make sense anymore (e.g., the <code>ConfigProto.graph_options.infer_shapes</code> option). Could someone please provide a list of which options have been deprecated?</li>\n<li>I do not really understand the whole dealing with session handles. I believe it's not necessary to deal with them with the new session API as the partial run handle is not provided as a feed/fetch value, but as a separate argument. Is that true? If so, should I completely ignore them when dealing with the sessions? That would mean that I never need to use the ops defined in <code>session_ops</code>. Is that correct?</li>\n</ul>\n<p>Thank you,<br>\nAnthony</p>", "body_text": "Hi,\nI'm wondering as to the main differences between the new sessions in the C API and the deprecated sessions. I noticed that the Python API is using the deprecated sessions and since I am using the new sessions, I want to make sure I understand the differences correctly. I list here the differences I believe exist and I hope that someone could verify and/or correct my thoughts:\n\nTF_ExtendGraph is not necessary with the new sessions. The session will always be aware of changes in the underlying graph.\nTF_Reset still makes sense with the new sessions and has the same functionality. If that is indeed the case, maybe it should be moved outside the deprecated session API region of the C API header file.\nMost of the TF_SessionOptions still apply, but some of them do not make sense anymore (e.g., the ConfigProto.graph_options.infer_shapes option). Could someone please provide a list of which options have been deprecated?\nI do not really understand the whole dealing with session handles. I believe it's not necessary to deal with them with the new session API as the partial run handle is not provided as a feed/fetch value, but as a separate argument. Is that true? If so, should I completely ignore them when dealing with the sessions? That would mean that I never need to use the ops defined in session_ops. Is that correct?\n\nThank you,\nAnthony", "body": "Hi,\r\n\r\nI'm wondering as to the main differences between the new sessions in the C API and the deprecated sessions. I noticed that [the Python API is using the deprecated sessions](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/client/session.py#L562) and since I am using the new sessions, I want to make sure I understand the differences correctly. I list here the differences I believe exist and I hope that someone could verify and/or correct my thoughts:\r\n- `TF_ExtendGraph` is not necessary with the new sessions. The session will always be aware of changes in the underlying graph.\r\n- `TF_Reset` still makes sense with the new sessions and has the same functionality. If that is indeed the case, maybe it should be moved outside the deprecated session API region of the C API header file.\r\n- Most of the `TF_SessionOptions` still apply, but some of them do not make sense anymore (e.g., the `ConfigProto.graph_options.infer_shapes` option). Could someone please provide a list of which options have been deprecated?\r\n- I do not really understand the whole dealing with session handles. I believe it's not necessary to deal with them with the new session API as the partial run handle is not provided as a feed/fetch value, but as a separate argument. Is that true? If so, should I completely ignore them when dealing with the sessions? That would mean that I never need to use the ops defined in `session_ops`. Is that correct?\r\n\r\nThank you,\r\nAnthony"}