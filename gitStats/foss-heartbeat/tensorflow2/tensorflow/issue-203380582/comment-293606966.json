{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/293606966", "html_url": "https://github.com/tensorflow/tensorflow/issues/7091#issuecomment-293606966", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7091", "id": 293606966, "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzYwNjk2Ng==", "user": {"login": "carlthome", "id": 1595907, "node_id": "MDQ6VXNlcjE1OTU5MDc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1595907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlthome", "html_url": "https://github.com/carlthome", "followers_url": "https://api.github.com/users/carlthome/followers", "following_url": "https://api.github.com/users/carlthome/following{/other_user}", "gists_url": "https://api.github.com/users/carlthome/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlthome/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlthome/subscriptions", "organizations_url": "https://api.github.com/users/carlthome/orgs", "repos_url": "https://api.github.com/users/carlthome/repos", "events_url": "https://api.github.com/users/carlthome/events{/privacy}", "received_events_url": "https://api.github.com/users/carlthome/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-12T15:05:20Z", "updated_at": "2017-04-23T17:43:52Z", "author_association": "CONTRIBUTOR", "body_html": "<blockquote>\n<p>What does this mean?</p>\n</blockquote>\n<p>Say tensors are <code>[batch_size, frames, height, width, channels]</code> (video). Then <code>axis=None</code> could assume the user wants means/variances as <code>[batch_size, frames * height * width * channels]</code> and not <code>[batch_size, frames, height, width]</code> (<code>axis=-1</code>).</p>\n<blockquote>\n<p>I had not heard before that one would want to normalize on more than the features axis. But we can consider the API change if it seems worth it. By which I mean we can consider allowing a tuple of axes as the axis argument: the axes to normalize over, e.g. [-2, -1] or [1, 2].</p>\n</blockquote>\n<p>A common use case could be RNNs for audio and video, where you'd like to normalize whole sequences.</p>", "body_text": "What does this mean?\n\nSay tensors are [batch_size, frames, height, width, channels] (video). Then axis=None could assume the user wants means/variances as [batch_size, frames * height * width * channels] and not [batch_size, frames, height, width] (axis=-1).\n\nI had not heard before that one would want to normalize on more than the features axis. But we can consider the API change if it seems worth it. By which I mean we can consider allowing a tuple of axes as the axis argument: the axes to normalize over, e.g. [-2, -1] or [1, 2].\n\nA common use case could be RNNs for audio and video, where you'd like to normalize whole sequences.", "body": "> What does this mean?\r\n\r\nSay tensors are `[batch_size, frames, height, width, channels]` (video). Then `axis=None` could assume the user wants means/variances as `[batch_size, frames * height * width * channels]` and not `[batch_size, frames, height, width]` (`axis=-1`).\r\n\r\n> I had not heard before that one would want to normalize on more than the features axis. But we can consider the API change if it seems worth it. By which I mean we can consider allowing a tuple of axes as the axis argument: the axes to normalize over, e.g. [-2, -1] or [1, 2].\r\n\r\nA common use case could be RNNs for audio and video, where you'd like to normalize whole sequences."}