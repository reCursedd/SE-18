{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/287111744", "html_url": "https://github.com/tensorflow/tensorflow/issues/7091#issuecomment-287111744", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7091", "id": 287111744, "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzExMTc0NA==", "user": {"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-16T16:23:42Z", "updated_at": "2017-03-16T16:34:39Z", "author_association": "MEMBER", "body_html": "<blockquote>\n<p>For backwards compatibility (where all but the last dimension should be reduced) axis=None is necessary as the default argument because the shape of the input tensor is not known</p>\n</blockquote>\n<p>I don't understand this part? What does this mean?</p>\n<p>The default value for <code>axis</code> should be <code>-1</code>, which is the feature axis is essentially every situation except image features in <code>data_format</code> NCHW.</p>\n<p>I had not heard before that one would want to normalize on more than the features axis. But we can consider the API change if it seems worth it. By which I mean we can consider allowing a tuple of axes as the <code>axis</code> argument: the axes to normalize over, e.g. <code>[-2, -1]</code> or <code>[1, 2]</code>.</p>", "body_text": "For backwards compatibility (where all but the last dimension should be reduced) axis=None is necessary as the default argument because the shape of the input tensor is not known\n\nI don't understand this part? What does this mean?\nThe default value for axis should be -1, which is the feature axis is essentially every situation except image features in data_format NCHW.\nI had not heard before that one would want to normalize on more than the features axis. But we can consider the API change if it seems worth it. By which I mean we can consider allowing a tuple of axes as the axis argument: the axes to normalize over, e.g. [-2, -1] or [1, 2].", "body": "> For backwards compatibility (where all but the last dimension should be reduced) axis=None is necessary as the default argument because the shape of the input tensor is not known\r\n\r\nI don't understand this part? What does this mean?\r\n\r\nThe default value for `axis` should be `-1`, which is the feature axis is essentially every situation except image features in `data_format` NCHW.\r\n\r\nI had not heard before that one would want to normalize on more than the features axis. But we can consider the API change if it seems worth it. By which I mean we can consider allowing a tuple of axes as the `axis` argument: the axes to normalize over, e.g. `[-2, -1]` or `[1, 2]`."}