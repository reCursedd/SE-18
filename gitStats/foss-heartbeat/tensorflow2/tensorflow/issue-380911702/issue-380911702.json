{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23754", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23754/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23754/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23754/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/23754", "id": 380911702, "node_id": "MDU6SXNzdWUzODA5MTE3MDI=", "number": 23754, "title": "Sparsification of huge matrix", "user": {"login": "jonasrauber", "id": 5837385, "node_id": "MDQ6VXNlcjU4MzczODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/5837385?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonasrauber", "html_url": "https://github.com/jonasrauber", "followers_url": "https://api.github.com/users/jonasrauber/followers", "following_url": "https://api.github.com/users/jonasrauber/following{/other_user}", "gists_url": "https://api.github.com/users/jonasrauber/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonasrauber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonasrauber/subscriptions", "organizations_url": "https://api.github.com/users/jonasrauber/orgs", "repos_url": "https://api.github.com/users/jonasrauber/repos", "events_url": "https://api.github.com/users/jonasrauber/events{/privacy}", "received_events_url": "https://api.github.com/users/jonasrauber/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 522623856, "node_id": "MDU6TGFiZWw1MjI2MjM4NTY=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/API%20review", "name": "API review", "color": "d4c5f9", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "open", "locked": false, "assignee": {"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2018-11-14T22:17:56Z", "updated_at": "2018-11-21T16:27:49Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<p><strong>Describe the current behavior</strong><br>\nCurrently, the only way in TensorFlow to convert a dense matrix into a sparse one (assuming it has only few non-zero values) is to use <code>tf.where</code> (afaik). <code>tf.where</code> does however allocate a lot of memory (it seems like 4 times the size of the dense matrix). So for huge dense matrices, this approach fails.</p>\n<p><strong>Describe the expected behavior</strong><br>\nBy first counting the number of nonzero elements, then allocating the appropriate amount of memory, and then determining the non-zero values, this can be be done with very little memory (as much as there are non-zero elements).<br>\nThis is the approach that the <code>cusparse</code> library follows and it works great. Unfortunately, there is no way to use e.g. <code>dense2csr</code> or <code>dense2coo</code> in TensorFlow.</p>\n<p>In my opinion this is a bug, because <code>tf.where</code> requires far too much memory.</p>", "body_text": "Describe the current behavior\nCurrently, the only way in TensorFlow to convert a dense matrix into a sparse one (assuming it has only few non-zero values) is to use tf.where (afaik). tf.where does however allocate a lot of memory (it seems like 4 times the size of the dense matrix). So for huge dense matrices, this approach fails.\nDescribe the expected behavior\nBy first counting the number of nonzero elements, then allocating the appropriate amount of memory, and then determining the non-zero values, this can be be done with very little memory (as much as there are non-zero elements).\nThis is the approach that the cusparse library follows and it works great. Unfortunately, there is no way to use e.g. dense2csr or dense2coo in TensorFlow.\nIn my opinion this is a bug, because tf.where requires far too much memory.", "body": "**Describe the current behavior**\r\nCurrently, the only way in TensorFlow to convert a dense matrix into a sparse one (assuming it has only few non-zero values) is to use `tf.where` (afaik). `tf.where` does however allocate a lot of memory (it seems like 4 times the size of the dense matrix). So for huge dense matrices, this approach fails.\r\n\r\n**Describe the expected behavior**\r\nBy first counting the number of nonzero elements, then allocating the appropriate amount of memory, and then determining the non-zero values, this can be be done with very little memory (as much as there are non-zero elements).\r\nThis is the approach that the `cusparse` library follows and it works great. Unfortunately, there is no way to use e.g. `dense2csr` or `dense2coo` in TensorFlow.\r\n\r\nIn my opinion this is a bug, because `tf.where` requires far too much memory."}