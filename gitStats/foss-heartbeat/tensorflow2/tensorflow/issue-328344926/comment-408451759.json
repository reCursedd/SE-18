{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/408451759", "html_url": "https://github.com/tensorflow/tensorflow/issues/19679#issuecomment-408451759", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19679", "id": 408451759, "node_id": "MDEyOklzc3VlQ29tbWVudDQwODQ1MTc1OQ==", "user": {"login": "jimfcarroll", "id": 372696, "node_id": "MDQ6VXNlcjM3MjY5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/372696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jimfcarroll", "html_url": "https://github.com/jimfcarroll", "followers_url": "https://api.github.com/users/jimfcarroll/followers", "following_url": "https://api.github.com/users/jimfcarroll/following{/other_user}", "gists_url": "https://api.github.com/users/jimfcarroll/gists{/gist_id}", "starred_url": "https://api.github.com/users/jimfcarroll/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jimfcarroll/subscriptions", "organizations_url": "https://api.github.com/users/jimfcarroll/orgs", "repos_url": "https://api.github.com/users/jimfcarroll/repos", "events_url": "https://api.github.com/users/jimfcarroll/events{/privacy}", "received_events_url": "https://api.github.com/users/jimfcarroll/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-27T15:22:12Z", "updated_at": "2018-07-27T17:09:09Z", "author_association": "NONE", "body_html": "<p>In Tensorflow version 1.9.0, <code>set_tf_nccl_install_path</code> in <code>configure.py</code> isn't robust enough to handle NCCL installs under Cuda 9.2 standards. NCCL (version 2.x.x) is installed in standard system locations. That is, <code>nccl.h</code> is in <code>/usr/include</code> and the shared library is in <code>/usr/lib/x86_64-linux-gnu/</code>. However, the python configure code expects <code>NCCL</code> to have it's own install directory with <code>lib</code> and <code>include</code> subdirectories.</p>\n<p>My fix for this was to create a NCCL directory under the Cuda root install (in my case, <code>/usr/local/cuda-9.2</code>) and add symbolic links to <code>/usr/include</code> and <code>/usr/lib/x86_64-linux-gnu/</code> (called <code>lib</code> in this later case).</p>\n<p>EDIT: I should note I also STILL need to copy a copy of NCCL-SLA.txt into the <code>/usr/local/cuda-9.2/nccl</code> directory.</p>", "body_text": "In Tensorflow version 1.9.0, set_tf_nccl_install_path in configure.py isn't robust enough to handle NCCL installs under Cuda 9.2 standards. NCCL (version 2.x.x) is installed in standard system locations. That is, nccl.h is in /usr/include and the shared library is in /usr/lib/x86_64-linux-gnu/. However, the python configure code expects NCCL to have it's own install directory with lib and include subdirectories.\nMy fix for this was to create a NCCL directory under the Cuda root install (in my case, /usr/local/cuda-9.2) and add symbolic links to /usr/include and /usr/lib/x86_64-linux-gnu/ (called lib in this later case).\nEDIT: I should note I also STILL need to copy a copy of NCCL-SLA.txt into the /usr/local/cuda-9.2/nccl directory.", "body": "In Tensorflow version 1.9.0, `set_tf_nccl_install_path` in `configure.py` isn't robust enough to handle NCCL installs under Cuda 9.2 standards. NCCL (version 2.x.x) is installed in standard system locations. That is, `nccl.h` is in `/usr/include` and the shared library is in `/usr/lib/x86_64-linux-gnu/`. However, the python configure code expects `NCCL` to have it's own install directory with `lib` and `include` subdirectories. \r\n\r\nMy fix for this was to create a NCCL directory under the Cuda root install (in my case, `/usr/local/cuda-9.2`) and add symbolic links to `/usr/include` and `/usr/lib/x86_64-linux-gnu/` (called `lib` in this later case).\r\n\r\nEDIT: I should note I also STILL need to copy a copy of NCCL-SLA.txt into the `/usr/local/cuda-9.2/nccl` directory."}