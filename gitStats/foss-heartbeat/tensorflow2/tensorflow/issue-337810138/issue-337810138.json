{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20506", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20506/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20506/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20506/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20506", "id": 337810138, "node_id": "MDU6SXNzdWUzMzc4MTAxMzg=", "number": 20506, "title": "Pop from empty context_switches when take outputs of one estimator.predict as inputs of another", "user": {"login": "miacro", "id": 12489437, "node_id": "MDQ6VXNlcjEyNDg5NDM3", "avatar_url": "https://avatars2.githubusercontent.com/u/12489437?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miacro", "html_url": "https://github.com/miacro", "followers_url": "https://api.github.com/users/miacro/followers", "following_url": "https://api.github.com/users/miacro/following{/other_user}", "gists_url": "https://api.github.com/users/miacro/gists{/gist_id}", "starred_url": "https://api.github.com/users/miacro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miacro/subscriptions", "organizations_url": "https://api.github.com/users/miacro/orgs", "repos_url": "https://api.github.com/users/miacro/repos", "events_url": "https://api.github.com/users/miacro/events{/privacy}", "received_events_url": "https://api.github.com/users/miacro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ispirmustafa", "id": 19293677, "node_id": "MDQ6VXNlcjE5MjkzNjc3", "avatar_url": "https://avatars1.githubusercontent.com/u/19293677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ispirmustafa", "html_url": "https://github.com/ispirmustafa", "followers_url": "https://api.github.com/users/ispirmustafa/followers", "following_url": "https://api.github.com/users/ispirmustafa/following{/other_user}", "gists_url": "https://api.github.com/users/ispirmustafa/gists{/gist_id}", "starred_url": "https://api.github.com/users/ispirmustafa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ispirmustafa/subscriptions", "organizations_url": "https://api.github.com/users/ispirmustafa/orgs", "repos_url": "https://api.github.com/users/ispirmustafa/repos", "events_url": "https://api.github.com/users/ispirmustafa/events{/privacy}", "received_events_url": "https://api.github.com/users/ispirmustafa/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ispirmustafa", "id": 19293677, "node_id": "MDQ6VXNlcjE5MjkzNjc3", "avatar_url": "https://avatars1.githubusercontent.com/u/19293677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ispirmustafa", "html_url": "https://github.com/ispirmustafa", "followers_url": "https://api.github.com/users/ispirmustafa/followers", "following_url": "https://api.github.com/users/ispirmustafa/following{/other_user}", "gists_url": "https://api.github.com/users/ispirmustafa/gists{/gist_id}", "starred_url": "https://api.github.com/users/ispirmustafa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ispirmustafa/subscriptions", "organizations_url": "https://api.github.com/users/ispirmustafa/orgs", "repos_url": "https://api.github.com/users/ispirmustafa/repos", "events_url": "https://api.github.com/users/ispirmustafa/events{/privacy}", "received_events_url": "https://api.github.com/users/ispirmustafa/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2018-07-03T09:12:58Z", "updated_at": "2018-09-24T22:19:08Z", "closed_at": "2018-09-24T22:19:08Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: y</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux  4.14.8-gentoo-r1</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.8.0</li>\n<li><strong>Python version</strong>: 3.5.5</li>\n<li><strong>Bazel version (if compiling from source)</strong>: n</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: n</li>\n<li><strong>CUDA/cuDNN version</strong>: 7.1.4</li>\n<li><strong>GPU model and memory</strong>:  GeForce GTX 1080 Ti / 11171MiB</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>Currently I am working on making predictions of two models (outputs of model1 as inputs of model2) with large amount of inputs. I tried to use tf.data.Dataset.from_generator, while it seems there are some problems about context stack.</p>\n<h3>Source code / logs</h3>\n<p>Here is my example</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">model_fn</span>(<span class=\"pl-smi\">features</span>, <span class=\"pl-smi\">labels</span>, <span class=\"pl-smi\">mode</span>):\n    x <span class=\"pl-k\">=</span> features[<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>inputs<span class=\"pl-pds\">\"</span></span>]\n    W <span class=\"pl-k\">=</span> tf.get_variable(\n        <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>weight<span class=\"pl-pds\">\"</span></span>,\n        <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">1</span>],\n        <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.float32,\n        <span class=\"pl-v\">initializer</span><span class=\"pl-k\">=</span>tf.initializers.constant(<span class=\"pl-v\">value</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0.0</span>),\n        <span class=\"pl-v\">trainable</span><span class=\"pl-k\">=</span>(mode <span class=\"pl-k\">==</span> tf.estimator.ModeKeys.<span class=\"pl-c1\">TRAIN</span>),\n    )\n    b <span class=\"pl-k\">=</span> tf.get_variable(\n        <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>bias<span class=\"pl-pds\">\"</span></span>,\n        <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">1</span>],\n        <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.float32,\n        <span class=\"pl-v\">initializer</span><span class=\"pl-k\">=</span>tf.initializers.constant(<span class=\"pl-v\">value</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0.0</span>),\n        <span class=\"pl-v\">trainable</span><span class=\"pl-k\">=</span>(mode <span class=\"pl-k\">==</span> tf.estimator.ModeKeys.<span class=\"pl-c1\">TRAIN</span>),\n    )\n    hypothesis <span class=\"pl-k\">=</span> W <span class=\"pl-k\">*</span> x <span class=\"pl-k\">+</span> b\n    <span class=\"pl-k\">if</span> mode <span class=\"pl-k\">==</span> tf.estimator.ModeKeys.<span class=\"pl-c1\">TRAIN</span>:\n        y <span class=\"pl-k\">=</span> labels[<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>labels<span class=\"pl-pds\">\"</span></span>]\n        cost <span class=\"pl-k\">=</span> tf.square(hypothesis <span class=\"pl-k\">-</span> y)\n        optimizer <span class=\"pl-k\">=</span> tf.train.GradientDescentOptimizer(<span class=\"pl-v\">learning_rate</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0.01</span>)\n        train_op <span class=\"pl-k\">=</span> optimizer.minimize(\n            <span class=\"pl-v\">loss</span><span class=\"pl-k\">=</span>cost, <span class=\"pl-v\">global_step</span><span class=\"pl-k\">=</span>tf.train.get_global_step())\n    <span class=\"pl-k\">else</span>:\n        train_op <span class=\"pl-k\">=</span> <span class=\"pl-c1\">None</span>\n        cost <span class=\"pl-k\">=</span> <span class=\"pl-c1\">None</span>\n    <span class=\"pl-k\">return</span> tf.estimator.EstimatorSpec(\n        <span class=\"pl-v\">mode</span><span class=\"pl-k\">=</span>mode, <span class=\"pl-v\">predictions</span><span class=\"pl-k\">=</span>hypothesis, <span class=\"pl-v\">loss</span><span class=\"pl-k\">=</span>cost, <span class=\"pl-v\">train_op</span><span class=\"pl-k\">=</span>train_op)\n\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">get_input_fn</span>(<span class=\"pl-smi\">inputs</span>, <span class=\"pl-smi\">num_epochs</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>):\n    <span class=\"pl-k\">def</span> <span class=\"pl-en\">gen</span>():\n        <span class=\"pl-k\">for</span> item <span class=\"pl-k\">in</span> inputs:\n            <span class=\"pl-k\">if</span> <span class=\"pl-c1\">isinstance</span>(item, <span class=\"pl-c1\">tuple</span>) <span class=\"pl-k\">or</span> <span class=\"pl-c1\">isinstance</span>(item, <span class=\"pl-c1\">list</span>):\n                <span class=\"pl-k\">yield</span> item\n            <span class=\"pl-k\">else</span>:\n                <span class=\"pl-k\">yield</span> item, <span class=\"pl-c1\">0</span>\n\n    <span class=\"pl-k\">def</span> <span class=\"pl-en\">input_fn</span>():\n        dataset <span class=\"pl-k\">=</span> tf.data.Dataset.from_generator(\n            gen, (tf.float32, tf.float32),\n            (tf.TensorShape([]), tf.TensorShape([])))\n        dataset <span class=\"pl-k\">=</span> dataset.repeat(num_epochs)\n        dataset <span class=\"pl-k\">=</span> dataset.batch(<span class=\"pl-c1\">1</span>)\n        iterator <span class=\"pl-k\">=</span> dataset.make_one_shot_iterator()\n        inputs, labels <span class=\"pl-k\">=</span> iterator.get_next()\n        <span class=\"pl-k\">return</span> {<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>inputs<span class=\"pl-pds\">\"</span></span>: inputs}, {<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>labels<span class=\"pl-pds\">\"</span></span>: labels}\n\n    <span class=\"pl-k\">return</span> input_fn\n\n\nmodel1 <span class=\"pl-k\">=</span> tf.estimator.Estimator(<span class=\"pl-v\">model_fn</span><span class=\"pl-k\">=</span>model_fn, <span class=\"pl-v\">model_dir</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>model1<span class=\"pl-pds\">\"</span></span>)\nmodel2 <span class=\"pl-k\">=</span> tf.estimator.Estimator(<span class=\"pl-v\">model_fn</span><span class=\"pl-k\">=</span>model_fn, <span class=\"pl-v\">model_dir</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>model2<span class=\"pl-pds\">\"</span></span>)\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> model1.train(input_fn=get_input_fn([(1, 1), (2, 2), (3, 3)], num_epochs=100))</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> model2.train(input_fn=get_input_fn([(1, 2), (2, 4), (3, 6)], num_epochs=100))</span>\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> ok</span>\n<span class=\"pl-k\">for</span> item <span class=\"pl-k\">in</span> model1.predict(<span class=\"pl-v\">input_fn</span><span class=\"pl-k\">=</span>get_input_fn([<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">4</span>])):\n    <span class=\"pl-c1\">print</span>(item)\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> ok</span>\n<span class=\"pl-k\">for</span> item <span class=\"pl-k\">in</span> model2.predict(<span class=\"pl-v\">input_fn</span><span class=\"pl-k\">=</span>get_input_fn([<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">4</span>])):\n    <span class=\"pl-c1\">print</span>(item)\n\nmodel1_output <span class=\"pl-k\">=</span> model1.predict(<span class=\"pl-v\">input_fn</span><span class=\"pl-k\">=</span>get_input_fn([<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">4</span>]))\nmodel2_input_fn <span class=\"pl-k\">=</span> get_input_fn(model1_output)\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> IndexError: pop from empty list</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> tensorflow/python/framework/ops.py\", line 5267, in get_controller</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>    context.context().context_switches.pop()</span>\n<span class=\"pl-k\">for</span> item <span class=\"pl-k\">in</span> model2.predict(model2_input_fn):\n    <span class=\"pl-c1\">print</span>(item)</pre></div>\n<p>Error log</p>\n<pre><code>Traceback (most recent call last):\n\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/ops/script_ops.py\", line 157, in __call__\n    ret = func(*args)\n\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/data/ops/dataset_ops.py\", line 382, in generator_py_func\n    values = next(generator_state.get_iterator(iterator_id))\n\n  File \"test.py\", line 36, in gen\n    for item in inputs:\n\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/estimator/estimator.py\", line 519, in predict\n    for key, value in six.iteritems(preds_evaluated)\n\n  File \"/usr/lib64/python3.5/contextlib.py\", line 66, in __exit__\n    next(self.gen)\n\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 5267, in get_controller\n    context.context().context_switches.pop()\n\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/eager/context.py\", line 136, in pop\n    self.stack.pop()\n\nIndexError: pop from empty list\n\n\nTraceback (most recent call last):\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/client/session.py\", line 1322, in _do_call\n    return fn(*args)\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/client/session.py\", line 1307, in _run_fn\n    options, feed_dict, fetch_list, target_list, run_metadata)\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/client/session.py\", line 1409, in _call_tf_sessionrun\n    run_metadata)\ntensorflow.python.framework.errors_impl.UnknownError: IndexError: pop from empty list\nTraceback (most recent call last):\n\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/ops/script_ops.py\", line 157, in __call__\n    ret = func(*args)\n\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/data/ops/dataset_ops.py\", line 382, in generator_py_func\n    values = next(generator_state.get_iterator(iterator_id))\n\n  File \"test.py\", line 36, in gen\n    for item in inputs:\n\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/estimator/estimator.py\", line 519, in predict\n    for key, value in six.iteritems(preds_evaluated)\n\n  File \"/usr/lib64/python3.5/contextlib.py\", line 66, in __exit__\n    next(self.gen)\n\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 5267, in get_controller\n    context.context().context_switches.pop()\n\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/eager/context.py\", line 136, in pop\n    self.stack.pop()\n\nIndexError: pop from empty list\n\n\n         [[Node: PyFunc = PyFunc[Tin=[DT_INT64], Tout=[DT_FLOAT, DT_FLOAT], token=\"pyfunc_7\"](arg0)]]\n         [[Node: IteratorGetNext = IteratorGetNext[output_shapes=[[?], [?]], output_types=[DT_FLOAT, DT_FLOAT], _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](OneShotIterator)]]\n         [[Node: IteratorGetNext/_19 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:GPU:0\", send_device=\"/job:localhost/replica:0/task:0/device:CPU:0\", send_device_incarnation=1, tensor_name=\"edge_6_IteratorGetNext\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"]()]]\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"test.py\", line 72, in &lt;module&gt;\n    for item in model2.predict(model2_input_fn):\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/estimator/estimator.py\", line 509, in predict\n    preds_evaluated = mon_sess.run(predictions)\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/training/monitored_session.py\", line 567, in run\n    run_metadata=run_metadata)\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/training/monitored_session.py\", line 1043, in run\n    run_metadata=run_metadata)\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/training/monitored_session.py\", line 1134, in run\n    raise six.reraise(*original_exc_info)\n  File \"/usr/lib64/python3.5/site-packages/six.py\", line 693, in reraise\n    raise value\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/training/monitored_session.py\", line 1119, in run\n    return self._sess.run(*args, **kwargs)\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/training/monitored_session.py\", line 1191, in run\n    run_metadata=run_metadata)\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/training/monitored_session.py\", line 971, in run\n    return self._sess.run(*args, **kwargs)\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/client/session.py\", line 900, in run\n    run_metadata_ptr)\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/client/session.py\", line 1135, in _run\n    feed_dict_tensor, options, run_metadata)\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/client/session.py\", line 1316, in _do_run\n    run_metadata)\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/client/session.py\", line 1335, in _do_call\n    raise type(e)(node_def, op, message)\ntensorflow.python.framework.errors_impl.UnknownError: IndexError: pop from empty list\nTraceback (most recent call last):\n\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/ops/script_ops.py\", line 157, in __call__\n    ret = func(*args)\n\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/data/ops/dataset_ops.py\", line 382, in generator_py_func\n    values = next(generator_state.get_iterator(iterator_id))\n\n  File \"test.py\", line 36, in gen\n    for item in inputs:\n\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/estimator/estimator.py\", line 519, in predict\n    for key, value in six.iteritems(preds_evaluated)\n\n  File \"/usr/lib64/python3.5/contextlib.py\", line 66, in __exit__\n    next(self.gen)\n\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 5267, in get_controller\n    context.context().context_switches.pop()\n\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/eager/context.py\", line 136, in pop\n    self.stack.pop()\n\nIndexError: pop from empty list\n\n\n         [[Node: PyFunc = PyFunc[Tin=[DT_INT64], Tout=[DT_FLOAT, DT_FLOAT], token=\"pyfunc_7\"](arg0)]]\n         [[Node: IteratorGetNext = IteratorGetNext[output_shapes=[[?], [?]], output_types=[DT_FLOAT, DT_FLOAT], _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](OneShotIterator)]]\n         [[Node: IteratorGetNext/_19 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:GPU:0\", send_device=\"/job:localhost/replica:0/task:0/device:CPU:0\", send_device_incarnation=1, tensor_name=\"edge_6_IteratorGetNext\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"]()]]\n\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): y\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux  4.14.8-gentoo-r1\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): 1.8.0\nPython version: 3.5.5\nBazel version (if compiling from source): n\nGCC/Compiler version (if compiling from source): n\nCUDA/cuDNN version: 7.1.4\nGPU model and memory:  GeForce GTX 1080 Ti / 11171MiB\nExact command to reproduce:\n\nDescribe the problem\nCurrently I am working on making predictions of two models (outputs of model1 as inputs of model2) with large amount of inputs. I tried to use tf.data.Dataset.from_generator, while it seems there are some problems about context stack.\nSource code / logs\nHere is my example\nimport tensorflow as tf\n\ndef model_fn(features, labels, mode):\n    x = features[\"inputs\"]\n    W = tf.get_variable(\n        name=\"weight\",\n        shape=[1],\n        dtype=tf.float32,\n        initializer=tf.initializers.constant(value=0.0),\n        trainable=(mode == tf.estimator.ModeKeys.TRAIN),\n    )\n    b = tf.get_variable(\n        name=\"bias\",\n        shape=[1],\n        dtype=tf.float32,\n        initializer=tf.initializers.constant(value=0.0),\n        trainable=(mode == tf.estimator.ModeKeys.TRAIN),\n    )\n    hypothesis = W * x + b\n    if mode == tf.estimator.ModeKeys.TRAIN:\n        y = labels[\"labels\"]\n        cost = tf.square(hypothesis - y)\n        optimizer = tf.train.GradientDescentOptimizer(learning_rate=0.01)\n        train_op = optimizer.minimize(\n            loss=cost, global_step=tf.train.get_global_step())\n    else:\n        train_op = None\n        cost = None\n    return tf.estimator.EstimatorSpec(\n        mode=mode, predictions=hypothesis, loss=cost, train_op=train_op)\n\n\ndef get_input_fn(inputs, num_epochs=1):\n    def gen():\n        for item in inputs:\n            if isinstance(item, tuple) or isinstance(item, list):\n                yield item\n            else:\n                yield item, 0\n\n    def input_fn():\n        dataset = tf.data.Dataset.from_generator(\n            gen, (tf.float32, tf.float32),\n            (tf.TensorShape([]), tf.TensorShape([])))\n        dataset = dataset.repeat(num_epochs)\n        dataset = dataset.batch(1)\n        iterator = dataset.make_one_shot_iterator()\n        inputs, labels = iterator.get_next()\n        return {\"inputs\": inputs}, {\"labels\": labels}\n\n    return input_fn\n\n\nmodel1 = tf.estimator.Estimator(model_fn=model_fn, model_dir=\"model1\")\nmodel2 = tf.estimator.Estimator(model_fn=model_fn, model_dir=\"model2\")\n# model1.train(input_fn=get_input_fn([(1, 1), (2, 2), (3, 3)], num_epochs=100))\n# model2.train(input_fn=get_input_fn([(1, 2), (2, 4), (3, 6)], num_epochs=100))\n\n# ok\nfor item in model1.predict(input_fn=get_input_fn([1, 2, 3, 4])):\n    print(item)\n# ok\nfor item in model2.predict(input_fn=get_input_fn([1, 2, 3, 4])):\n    print(item)\n\nmodel1_output = model1.predict(input_fn=get_input_fn([1, 2, 3, 4]))\nmodel2_input_fn = get_input_fn(model1_output)\n# IndexError: pop from empty list\n# tensorflow/python/framework/ops.py\", line 5267, in get_controller\n#    context.context().context_switches.pop()\nfor item in model2.predict(model2_input_fn):\n    print(item)\nError log\nTraceback (most recent call last):\n\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/ops/script_ops.py\", line 157, in __call__\n    ret = func(*args)\n\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/data/ops/dataset_ops.py\", line 382, in generator_py_func\n    values = next(generator_state.get_iterator(iterator_id))\n\n  File \"test.py\", line 36, in gen\n    for item in inputs:\n\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/estimator/estimator.py\", line 519, in predict\n    for key, value in six.iteritems(preds_evaluated)\n\n  File \"/usr/lib64/python3.5/contextlib.py\", line 66, in __exit__\n    next(self.gen)\n\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 5267, in get_controller\n    context.context().context_switches.pop()\n\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/eager/context.py\", line 136, in pop\n    self.stack.pop()\n\nIndexError: pop from empty list\n\n\nTraceback (most recent call last):\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/client/session.py\", line 1322, in _do_call\n    return fn(*args)\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/client/session.py\", line 1307, in _run_fn\n    options, feed_dict, fetch_list, target_list, run_metadata)\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/client/session.py\", line 1409, in _call_tf_sessionrun\n    run_metadata)\ntensorflow.python.framework.errors_impl.UnknownError: IndexError: pop from empty list\nTraceback (most recent call last):\n\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/ops/script_ops.py\", line 157, in __call__\n    ret = func(*args)\n\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/data/ops/dataset_ops.py\", line 382, in generator_py_func\n    values = next(generator_state.get_iterator(iterator_id))\n\n  File \"test.py\", line 36, in gen\n    for item in inputs:\n\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/estimator/estimator.py\", line 519, in predict\n    for key, value in six.iteritems(preds_evaluated)\n\n  File \"/usr/lib64/python3.5/contextlib.py\", line 66, in __exit__\n    next(self.gen)\n\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 5267, in get_controller\n    context.context().context_switches.pop()\n\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/eager/context.py\", line 136, in pop\n    self.stack.pop()\n\nIndexError: pop from empty list\n\n\n         [[Node: PyFunc = PyFunc[Tin=[DT_INT64], Tout=[DT_FLOAT, DT_FLOAT], token=\"pyfunc_7\"](arg0)]]\n         [[Node: IteratorGetNext = IteratorGetNext[output_shapes=[[?], [?]], output_types=[DT_FLOAT, DT_FLOAT], _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](OneShotIterator)]]\n         [[Node: IteratorGetNext/_19 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:GPU:0\", send_device=\"/job:localhost/replica:0/task:0/device:CPU:0\", send_device_incarnation=1, tensor_name=\"edge_6_IteratorGetNext\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"]()]]\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"test.py\", line 72, in <module>\n    for item in model2.predict(model2_input_fn):\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/estimator/estimator.py\", line 509, in predict\n    preds_evaluated = mon_sess.run(predictions)\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/training/monitored_session.py\", line 567, in run\n    run_metadata=run_metadata)\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/training/monitored_session.py\", line 1043, in run\n    run_metadata=run_metadata)\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/training/monitored_session.py\", line 1134, in run\n    raise six.reraise(*original_exc_info)\n  File \"/usr/lib64/python3.5/site-packages/six.py\", line 693, in reraise\n    raise value\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/training/monitored_session.py\", line 1119, in run\n    return self._sess.run(*args, **kwargs)\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/training/monitored_session.py\", line 1191, in run\n    run_metadata=run_metadata)\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/training/monitored_session.py\", line 971, in run\n    return self._sess.run(*args, **kwargs)\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/client/session.py\", line 900, in run\n    run_metadata_ptr)\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/client/session.py\", line 1135, in _run\n    feed_dict_tensor, options, run_metadata)\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/client/session.py\", line 1316, in _do_run\n    run_metadata)\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/client/session.py\", line 1335, in _do_call\n    raise type(e)(node_def, op, message)\ntensorflow.python.framework.errors_impl.UnknownError: IndexError: pop from empty list\nTraceback (most recent call last):\n\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/ops/script_ops.py\", line 157, in __call__\n    ret = func(*args)\n\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/data/ops/dataset_ops.py\", line 382, in generator_py_func\n    values = next(generator_state.get_iterator(iterator_id))\n\n  File \"test.py\", line 36, in gen\n    for item in inputs:\n\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/estimator/estimator.py\", line 519, in predict\n    for key, value in six.iteritems(preds_evaluated)\n\n  File \"/usr/lib64/python3.5/contextlib.py\", line 66, in __exit__\n    next(self.gen)\n\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 5267, in get_controller\n    context.context().context_switches.pop()\n\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/eager/context.py\", line 136, in pop\n    self.stack.pop()\n\nIndexError: pop from empty list\n\n\n         [[Node: PyFunc = PyFunc[Tin=[DT_INT64], Tout=[DT_FLOAT, DT_FLOAT], token=\"pyfunc_7\"](arg0)]]\n         [[Node: IteratorGetNext = IteratorGetNext[output_shapes=[[?], [?]], output_types=[DT_FLOAT, DT_FLOAT], _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](OneShotIterator)]]\n         [[Node: IteratorGetNext/_19 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:GPU:0\", send_device=\"/job:localhost/replica:0/task:0/device:CPU:0\", send_device_incarnation=1, tensor_name=\"edge_6_IteratorGetNext\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"]()]]", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: y \r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux  4.14.8-gentoo-r1\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.8.0\r\n- **Python version**: 3.5.5\r\n- **Bazel version (if compiling from source)**: n\r\n- **GCC/Compiler version (if compiling from source)**: n\r\n- **CUDA/cuDNN version**: 7.1.4\r\n- **GPU model and memory**:  GeForce GTX 1080 Ti / 11171MiB\r\n- **Exact command to reproduce**:\r\n\r\n### Describe the problem\r\nCurrently I am working on making predictions of two models (outputs of model1 as inputs of model2) with large amount of inputs. I tried to use tf.data.Dataset.from_generator, while it seems there are some problems about context stack.\r\n\r\n### Source code / logs\r\nHere is my example\r\n``` python\r\nimport tensorflow as tf\r\n\r\ndef model_fn(features, labels, mode):\r\n    x = features[\"inputs\"]\r\n    W = tf.get_variable(\r\n        name=\"weight\",\r\n        shape=[1],\r\n        dtype=tf.float32,\r\n        initializer=tf.initializers.constant(value=0.0),\r\n        trainable=(mode == tf.estimator.ModeKeys.TRAIN),\r\n    )\r\n    b = tf.get_variable(\r\n        name=\"bias\",\r\n        shape=[1],\r\n        dtype=tf.float32,\r\n        initializer=tf.initializers.constant(value=0.0),\r\n        trainable=(mode == tf.estimator.ModeKeys.TRAIN),\r\n    )\r\n    hypothesis = W * x + b\r\n    if mode == tf.estimator.ModeKeys.TRAIN:\r\n        y = labels[\"labels\"]\r\n        cost = tf.square(hypothesis - y)\r\n        optimizer = tf.train.GradientDescentOptimizer(learning_rate=0.01)\r\n        train_op = optimizer.minimize(\r\n            loss=cost, global_step=tf.train.get_global_step())\r\n    else:\r\n        train_op = None\r\n        cost = None\r\n    return tf.estimator.EstimatorSpec(\r\n        mode=mode, predictions=hypothesis, loss=cost, train_op=train_op)\r\n\r\n\r\ndef get_input_fn(inputs, num_epochs=1):\r\n    def gen():\r\n        for item in inputs:\r\n            if isinstance(item, tuple) or isinstance(item, list):\r\n                yield item\r\n            else:\r\n                yield item, 0\r\n\r\n    def input_fn():\r\n        dataset = tf.data.Dataset.from_generator(\r\n            gen, (tf.float32, tf.float32),\r\n            (tf.TensorShape([]), tf.TensorShape([])))\r\n        dataset = dataset.repeat(num_epochs)\r\n        dataset = dataset.batch(1)\r\n        iterator = dataset.make_one_shot_iterator()\r\n        inputs, labels = iterator.get_next()\r\n        return {\"inputs\": inputs}, {\"labels\": labels}\r\n\r\n    return input_fn\r\n\r\n\r\nmodel1 = tf.estimator.Estimator(model_fn=model_fn, model_dir=\"model1\")\r\nmodel2 = tf.estimator.Estimator(model_fn=model_fn, model_dir=\"model2\")\r\n# model1.train(input_fn=get_input_fn([(1, 1), (2, 2), (3, 3)], num_epochs=100))\r\n# model2.train(input_fn=get_input_fn([(1, 2), (2, 4), (3, 6)], num_epochs=100))\r\n\r\n# ok\r\nfor item in model1.predict(input_fn=get_input_fn([1, 2, 3, 4])):\r\n    print(item)\r\n# ok\r\nfor item in model2.predict(input_fn=get_input_fn([1, 2, 3, 4])):\r\n    print(item)\r\n\r\nmodel1_output = model1.predict(input_fn=get_input_fn([1, 2, 3, 4]))\r\nmodel2_input_fn = get_input_fn(model1_output)\r\n# IndexError: pop from empty list\r\n# tensorflow/python/framework/ops.py\", line 5267, in get_controller\r\n#    context.context().context_switches.pop()\r\nfor item in model2.predict(model2_input_fn):\r\n    print(item)\r\n```\r\n\r\nError log\r\n```\r\nTraceback (most recent call last):\r\n\r\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/ops/script_ops.py\", line 157, in __call__\r\n    ret = func(*args)\r\n\r\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/data/ops/dataset_ops.py\", line 382, in generator_py_func\r\n    values = next(generator_state.get_iterator(iterator_id))\r\n\r\n  File \"test.py\", line 36, in gen\r\n    for item in inputs:\r\n\r\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/estimator/estimator.py\", line 519, in predict\r\n    for key, value in six.iteritems(preds_evaluated)\r\n\r\n  File \"/usr/lib64/python3.5/contextlib.py\", line 66, in __exit__\r\n    next(self.gen)\r\n\r\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 5267, in get_controller\r\n    context.context().context_switches.pop()\r\n\r\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/eager/context.py\", line 136, in pop\r\n    self.stack.pop()\r\n\r\nIndexError: pop from empty list\r\n\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/client/session.py\", line 1322, in _do_call\r\n    return fn(*args)\r\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/client/session.py\", line 1307, in _run_fn\r\n    options, feed_dict, fetch_list, target_list, run_metadata)\r\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/client/session.py\", line 1409, in _call_tf_sessionrun\r\n    run_metadata)\r\ntensorflow.python.framework.errors_impl.UnknownError: IndexError: pop from empty list\r\nTraceback (most recent call last):\r\n\r\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/ops/script_ops.py\", line 157, in __call__\r\n    ret = func(*args)\r\n\r\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/data/ops/dataset_ops.py\", line 382, in generator_py_func\r\n    values = next(generator_state.get_iterator(iterator_id))\r\n\r\n  File \"test.py\", line 36, in gen\r\n    for item in inputs:\r\n\r\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/estimator/estimator.py\", line 519, in predict\r\n    for key, value in six.iteritems(preds_evaluated)\r\n\r\n  File \"/usr/lib64/python3.5/contextlib.py\", line 66, in __exit__\r\n    next(self.gen)\r\n\r\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 5267, in get_controller\r\n    context.context().context_switches.pop()\r\n\r\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/eager/context.py\", line 136, in pop\r\n    self.stack.pop()\r\n\r\nIndexError: pop from empty list\r\n\r\n\r\n         [[Node: PyFunc = PyFunc[Tin=[DT_INT64], Tout=[DT_FLOAT, DT_FLOAT], token=\"pyfunc_7\"](arg0)]]\r\n         [[Node: IteratorGetNext = IteratorGetNext[output_shapes=[[?], [?]], output_types=[DT_FLOAT, DT_FLOAT], _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](OneShotIterator)]]\r\n         [[Node: IteratorGetNext/_19 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:GPU:0\", send_device=\"/job:localhost/replica:0/task:0/device:CPU:0\", send_device_incarnation=1, tensor_name=\"edge_6_IteratorGetNext\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"]()]]\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 72, in <module>\r\n    for item in model2.predict(model2_input_fn):\r\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/estimator/estimator.py\", line 509, in predict\r\n    preds_evaluated = mon_sess.run(predictions)\r\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/training/monitored_session.py\", line 567, in run\r\n    run_metadata=run_metadata)\r\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/training/monitored_session.py\", line 1043, in run\r\n    run_metadata=run_metadata)\r\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/training/monitored_session.py\", line 1134, in run\r\n    raise six.reraise(*original_exc_info)\r\n  File \"/usr/lib64/python3.5/site-packages/six.py\", line 693, in reraise\r\n    raise value\r\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/training/monitored_session.py\", line 1119, in run\r\n    return self._sess.run(*args, **kwargs)\r\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/training/monitored_session.py\", line 1191, in run\r\n    run_metadata=run_metadata)\r\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/training/monitored_session.py\", line 971, in run\r\n    return self._sess.run(*args, **kwargs)\r\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/client/session.py\", line 900, in run\r\n    run_metadata_ptr)\r\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/client/session.py\", line 1135, in _run\r\n    feed_dict_tensor, options, run_metadata)\r\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/client/session.py\", line 1316, in _do_run\r\n    run_metadata)\r\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/client/session.py\", line 1335, in _do_call\r\n    raise type(e)(node_def, op, message)\r\ntensorflow.python.framework.errors_impl.UnknownError: IndexError: pop from empty list\r\nTraceback (most recent call last):\r\n\r\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/ops/script_ops.py\", line 157, in __call__\r\n    ret = func(*args)\r\n\r\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/data/ops/dataset_ops.py\", line 382, in generator_py_func\r\n    values = next(generator_state.get_iterator(iterator_id))\r\n\r\n  File \"test.py\", line 36, in gen\r\n    for item in inputs:\r\n\r\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/estimator/estimator.py\", line 519, in predict\r\n    for key, value in six.iteritems(preds_evaluated)\r\n\r\n  File \"/usr/lib64/python3.5/contextlib.py\", line 66, in __exit__\r\n    next(self.gen)\r\n\r\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 5267, in get_controller\r\n    context.context().context_switches.pop()\r\n\r\n  File \"/home/miacro/.local/lib64/python3.5/site-packages/tensorflow/python/eager/context.py\", line 136, in pop\r\n    self.stack.pop()\r\n\r\nIndexError: pop from empty list\r\n\r\n\r\n         [[Node: PyFunc = PyFunc[Tin=[DT_INT64], Tout=[DT_FLOAT, DT_FLOAT], token=\"pyfunc_7\"](arg0)]]\r\n         [[Node: IteratorGetNext = IteratorGetNext[output_shapes=[[?], [?]], output_types=[DT_FLOAT, DT_FLOAT], _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](OneShotIterator)]]\r\n         [[Node: IteratorGetNext/_19 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:GPU:0\", send_device=\"/job:localhost/replica:0/task:0/device:CPU:0\", send_device_incarnation=1, tensor_name=\"edge_6_IteratorGetNext\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"]()]]\r\n\r\n```"}