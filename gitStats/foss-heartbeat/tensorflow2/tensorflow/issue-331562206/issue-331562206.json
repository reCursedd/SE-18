{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19939", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19939/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19939/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19939/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19939", "id": 331562206, "node_id": "MDU6SXNzdWUzMzE1NjIyMDY=", "number": 19939, "title": "Object_detection_api : Le fichier sp\\udce9cifi\\udce9 est introuvable.", "user": {"login": "ABNeqrouz", "id": 30436354, "node_id": "MDQ6VXNlcjMwNDM2MzU0", "avatar_url": "https://avatars2.githubusercontent.com/u/30436354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ABNeqrouz", "html_url": "https://github.com/ABNeqrouz", "followers_url": "https://api.github.com/users/ABNeqrouz/followers", "following_url": "https://api.github.com/users/ABNeqrouz/following{/other_user}", "gists_url": "https://api.github.com/users/ABNeqrouz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ABNeqrouz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ABNeqrouz/subscriptions", "organizations_url": "https://api.github.com/users/ABNeqrouz/orgs", "repos_url": "https://api.github.com/users/ABNeqrouz/repos", "events_url": "https://api.github.com/users/ABNeqrouz/events{/privacy}", "received_events_url": "https://api.github.com/users/ABNeqrouz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "rohan100jain", "id": 144114, "node_id": "MDQ6VXNlcjE0NDExNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/144114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rohan100jain", "html_url": "https://github.com/rohan100jain", "followers_url": "https://api.github.com/users/rohan100jain/followers", "following_url": "https://api.github.com/users/rohan100jain/following{/other_user}", "gists_url": "https://api.github.com/users/rohan100jain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rohan100jain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rohan100jain/subscriptions", "organizations_url": "https://api.github.com/users/rohan100jain/orgs", "repos_url": "https://api.github.com/users/rohan100jain/repos", "events_url": "https://api.github.com/users/rohan100jain/events{/privacy}", "received_events_url": "https://api.github.com/users/rohan100jain/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rohan100jain", "id": 144114, "node_id": "MDQ6VXNlcjE0NDExNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/144114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rohan100jain", "html_url": "https://github.com/rohan100jain", "followers_url": "https://api.github.com/users/rohan100jain/followers", "following_url": "https://api.github.com/users/rohan100jain/following{/other_user}", "gists_url": "https://api.github.com/users/rohan100jain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rohan100jain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rohan100jain/subscriptions", "organizations_url": "https://api.github.com/users/rohan100jain/orgs", "repos_url": "https://api.github.com/users/rohan100jain/repos", "events_url": "https://api.github.com/users/rohan100jain/events{/privacy}", "received_events_url": "https://api.github.com/users/rohan100jain/received_events", "type": "User", "site_admin": false}, {"login": "achowdhery", "id": 4723042, "node_id": "MDQ6VXNlcjQ3MjMwNDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/4723042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/achowdhery", "html_url": "https://github.com/achowdhery", "followers_url": "https://api.github.com/users/achowdhery/followers", "following_url": "https://api.github.com/users/achowdhery/following{/other_user}", "gists_url": "https://api.github.com/users/achowdhery/gists{/gist_id}", "starred_url": "https://api.github.com/users/achowdhery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/achowdhery/subscriptions", "organizations_url": "https://api.github.com/users/achowdhery/orgs", "repos_url": "https://api.github.com/users/achowdhery/repos", "events_url": "https://api.github.com/users/achowdhery/events{/privacy}", "received_events_url": "https://api.github.com/users/achowdhery/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2018-06-12T12:16:46Z", "updated_at": "2018-09-28T20:52:17Z", "closed_at": "2018-09-28T20:52:17Z", "author_association": "NONE", "body_html": "<p>Thisissue appear when i want to generate TFRecord file.</p>\n<p>models\\research\\object_detection\\images\\train\\image1 : Le fichier sp\\udce9cifi\\udce9 est introuvable. ; No such file or directory</p>\n<p>`def create_tf_example(group, path):<br>\nwith tf.gfile.GFile(os.path.join(path, '{}'.format(group.filename)), 'rb') as fid:<br>\nencoded_jpg = fid.read()<br>\nencoded_jpg_io = io.BytesIO(encoded_jpg)<br>\nimage = Image.open(encoded_jpg_io)<br>\nwidth, height = image.size</p>\n<pre><code>filename = group.filename.encode('utf-8')\nimage_format = b'png'\nxmins = []\nxmaxs = []\nymins = []\nymaxs = []\nclasses_text = []\nclasses = []\n\nfor index, row in group.object.iterrows():\n    xmins.append(row['xmin'] / width)\n    xmaxs.append(row['xmax'] / width)\n    ymins.append(row['ymin'] / height)\n    ymaxs.append(row['ymax'] / height)\n    classes_text.append(row['class'].encode('utf-8'))\n    classes.append(class_text_to_int(row['class']))\n\ntf_example = tf.train.Example(features=tf.train.Features(feature={\n    'image/height': dataset_util.int64_feature(height),\n    'image/width': dataset_util.int64_feature(width),\n    'image/filename': dataset_util.bytes_feature(filename),\n    'image/source_id': dataset_util.bytes_feature(filename),\n    'image/encoded': dataset_util.bytes_feature(encoded_jpg),\n    'image/format': dataset_util.bytes_feature(image_format),\n    'image/object/bbox/xmin': dataset_util.float_list_feature(xmins),\n    'image/object/bbox/xmax': dataset_util.float_list_feature(xmaxs),\n    'image/object/bbox/ymin': dataset_util.float_list_feature(ymins),\n    'image/object/bbox/ymax': dataset_util.float_list_feature(ymaxs),\n    'image/object/class/text': dataset_util.bytes_list_feature(classes_text),\n    'image/object/class/label': dataset_util.int64_list_feature(classes),\n}))\nreturn tf_example`\n</code></pre>\n<p>this is the stack-trace : File \"generate_tfrecord.py\", line 46, in create_tf_example encoded_jpg = fid.read()</p>", "body_text": "Thisissue appear when i want to generate TFRecord file.\nmodels\\research\\object_detection\\images\\train\\image1 : Le fichier sp\\udce9cifi\\udce9 est introuvable. ; No such file or directory\n`def create_tf_example(group, path):\nwith tf.gfile.GFile(os.path.join(path, '{}'.format(group.filename)), 'rb') as fid:\nencoded_jpg = fid.read()\nencoded_jpg_io = io.BytesIO(encoded_jpg)\nimage = Image.open(encoded_jpg_io)\nwidth, height = image.size\nfilename = group.filename.encode('utf-8')\nimage_format = b'png'\nxmins = []\nxmaxs = []\nymins = []\nymaxs = []\nclasses_text = []\nclasses = []\n\nfor index, row in group.object.iterrows():\n    xmins.append(row['xmin'] / width)\n    xmaxs.append(row['xmax'] / width)\n    ymins.append(row['ymin'] / height)\n    ymaxs.append(row['ymax'] / height)\n    classes_text.append(row['class'].encode('utf-8'))\n    classes.append(class_text_to_int(row['class']))\n\ntf_example = tf.train.Example(features=tf.train.Features(feature={\n    'image/height': dataset_util.int64_feature(height),\n    'image/width': dataset_util.int64_feature(width),\n    'image/filename': dataset_util.bytes_feature(filename),\n    'image/source_id': dataset_util.bytes_feature(filename),\n    'image/encoded': dataset_util.bytes_feature(encoded_jpg),\n    'image/format': dataset_util.bytes_feature(image_format),\n    'image/object/bbox/xmin': dataset_util.float_list_feature(xmins),\n    'image/object/bbox/xmax': dataset_util.float_list_feature(xmaxs),\n    'image/object/bbox/ymin': dataset_util.float_list_feature(ymins),\n    'image/object/bbox/ymax': dataset_util.float_list_feature(ymaxs),\n    'image/object/class/text': dataset_util.bytes_list_feature(classes_text),\n    'image/object/class/label': dataset_util.int64_list_feature(classes),\n}))\nreturn tf_example`\n\nthis is the stack-trace : File \"generate_tfrecord.py\", line 46, in create_tf_example encoded_jpg = fid.read()", "body": "Thisissue appear when i want to generate TFRecord file.\r\n\r\nmodels\\research\\object_detection\\images\\train\\image1 : Le fichier sp\\udce9cifi\\udce9 est introuvable. ; No such file or directory\r\n\r\n`def create_tf_example(group, path):\r\n    with tf.gfile.GFile(os.path.join(path, '{}'.format(group.filename)), 'rb') as fid:\r\n        encoded_jpg = fid.read()\r\n    encoded_jpg_io = io.BytesIO(encoded_jpg)\r\n    image = Image.open(encoded_jpg_io)\r\n    width, height = image.size\r\n\r\n    filename = group.filename.encode('utf-8')\r\n    image_format = b'png'\r\n    xmins = []\r\n    xmaxs = []\r\n    ymins = []\r\n    ymaxs = []\r\n    classes_text = []\r\n    classes = []\r\n\r\n    for index, row in group.object.iterrows():\r\n        xmins.append(row['xmin'] / width)\r\n        xmaxs.append(row['xmax'] / width)\r\n        ymins.append(row['ymin'] / height)\r\n        ymaxs.append(row['ymax'] / height)\r\n        classes_text.append(row['class'].encode('utf-8'))\r\n        classes.append(class_text_to_int(row['class']))\r\n\r\n    tf_example = tf.train.Example(features=tf.train.Features(feature={\r\n        'image/height': dataset_util.int64_feature(height),\r\n        'image/width': dataset_util.int64_feature(width),\r\n        'image/filename': dataset_util.bytes_feature(filename),\r\n        'image/source_id': dataset_util.bytes_feature(filename),\r\n        'image/encoded': dataset_util.bytes_feature(encoded_jpg),\r\n        'image/format': dataset_util.bytes_feature(image_format),\r\n        'image/object/bbox/xmin': dataset_util.float_list_feature(xmins),\r\n        'image/object/bbox/xmax': dataset_util.float_list_feature(xmaxs),\r\n        'image/object/bbox/ymin': dataset_util.float_list_feature(ymins),\r\n        'image/object/bbox/ymax': dataset_util.float_list_feature(ymaxs),\r\n        'image/object/class/text': dataset_util.bytes_list_feature(classes_text),\r\n        'image/object/class/label': dataset_util.int64_list_feature(classes),\r\n    }))\r\n    return tf_example`\r\nthis is the stack-trace : File \"generate_tfrecord.py\", line 46, in create_tf_example encoded_jpg = fid.read()"}