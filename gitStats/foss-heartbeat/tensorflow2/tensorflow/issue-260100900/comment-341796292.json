{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/341796292", "html_url": "https://github.com/tensorflow/tensorflow/pull/13274#issuecomment-341796292", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13274", "id": 341796292, "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTc5NjI5Mg==", "user": {"login": "caisq", "id": 16824702, "node_id": "MDQ6VXNlcjE2ODI0NzAy", "avatar_url": "https://avatars2.githubusercontent.com/u/16824702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caisq", "html_url": "https://github.com/caisq", "followers_url": "https://api.github.com/users/caisq/followers", "following_url": "https://api.github.com/users/caisq/following{/other_user}", "gists_url": "https://api.github.com/users/caisq/gists{/gist_id}", "starred_url": "https://api.github.com/users/caisq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caisq/subscriptions", "organizations_url": "https://api.github.com/users/caisq/orgs", "repos_url": "https://api.github.com/users/caisq/repos", "events_url": "https://api.github.com/users/caisq/events{/privacy}", "received_events_url": "https://api.github.com/users/caisq/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-03T18:56:57Z", "updated_at": "2017-11-03T18:56:57Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=7946809\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/gunan\">@gunan</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13562803\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ilya-edrenkin\">@ilya-edrenkin</a>  The <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/ci_build/ci_sanity.sh\">ci_sanity.sh script</a> runs both python2 and python3 pyint by default.</p>\n<p>See: <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/ci_build/ci_sanity.sh#L508\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/ci_build/ci_sanity.sh#L508</a></p>\n<p>I'm not sure why it didn't catch that error. Maybe that's an error that pylint isn't supposed to be able to catch?</p>\n<p>As for <code>tensorflow/tools/ci_build/ci_build.sh CPU bazel test //tensorflow/contrib/opt:multitask_optimizer_wrapper_test</code>, the <code>ci_build.sh</code> script doesn't know anything about python version, it simply uses the python version configured during <code>./configure</code>. So if you configure to python3 and rerun the test, it should be able to catch the rror.</p>", "body_text": "@gunan @ilya-edrenkin  The ci_sanity.sh script runs both python2 and python3 pyint by default.\nSee: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/ci_build/ci_sanity.sh#L508\nI'm not sure why it didn't catch that error. Maybe that's an error that pylint isn't supposed to be able to catch?\nAs for tensorflow/tools/ci_build/ci_build.sh CPU bazel test //tensorflow/contrib/opt:multitask_optimizer_wrapper_test, the ci_build.sh script doesn't know anything about python version, it simply uses the python version configured during ./configure. So if you configure to python3 and rerun the test, it should be able to catch the rror.", "body": "@gunan @ilya-edrenkin  The [ci_sanity.sh script](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/ci_build/ci_sanity.sh) runs both python2 and python3 pyint by default.\r\n\r\nSee: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/ci_build/ci_sanity.sh#L508\r\n\r\nI'm not sure why it didn't catch that error. Maybe that's an error that pylint isn't supposed to be able to catch? \r\n\r\nAs for `tensorflow/tools/ci_build/ci_build.sh CPU bazel test //tensorflow/contrib/opt:multitask_optimizer_wrapper_test`, the `ci_build.sh` script doesn't know anything about python version, it simply uses the python version configured during `./configure`. So if you configure to python3 and rerun the test, it should be able to catch the rror."}