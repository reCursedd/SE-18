{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/194012949", "html_url": "https://github.com/tensorflow/tensorflow/issues/1437#issuecomment-194012949", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1437", "id": 194012949, "node_id": "MDEyOklzc3VlQ29tbWVudDE5NDAxMjk0OQ==", "user": {"login": "daveh86", "id": 909151, "node_id": "MDQ6VXNlcjkwOTE1MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/909151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daveh86", "html_url": "https://github.com/daveh86", "followers_url": "https://api.github.com/users/daveh86/followers", "following_url": "https://api.github.com/users/daveh86/following{/other_user}", "gists_url": "https://api.github.com/users/daveh86/gists{/gist_id}", "starred_url": "https://api.github.com/users/daveh86/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daveh86/subscriptions", "organizations_url": "https://api.github.com/users/daveh86/orgs", "repos_url": "https://api.github.com/users/daveh86/repos", "events_url": "https://api.github.com/users/daveh86/events{/privacy}", "received_events_url": "https://api.github.com/users/daveh86/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-08T23:16:00Z", "updated_at": "2016-03-08T23:16:00Z", "author_association": "NONE", "body_html": "<p>Okay, got it compiled.</p>\n<p>For anyone following along from Arch Linux and wanting to compile this the following diff should help:</p>\n<pre><code>diff --git a/third_party/gpus/crosstool/CROSSTOOL b/third_party/gpus/crosstool/CROSSTOOL\nindex dfde7cd..f84955b 100644\n--- a/third_party/gpus/crosstool/CROSSTOOL\n+++ b/third_party/gpus/crosstool/CROSSTOOL\n@@ -45,6 +45,7 @@ toolchain {\n   tool_path { name: \"gcc\" path: \"clang/bin/crosstool_wrapper_driver_is_not_gcc\" }\n   # Use \"-std=c++11\" for nvcc. For consistency, force both the host compiler\n   # and the device compiler to use \"-std=c++11\".\n+  cxx_flag: \"-D_FORCE_INLINES\"\n   cxx_flag: \"-std=c++11\"\n   linker_flag: \"-lstdc++\"\n   linker_flag: \"-B/usr/bin/\"\ndiff --git a/third_party/gpus/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc b/third_party/gpus/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc\nindex a67b039..f284677 100755\n--- a/third_party/gpus/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc\n+++ b/third_party/gpus/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc\n@@ -44,10 +44,11 @@ import sys\n import pipes\n\n CURRENT_DIR = os.path.dirname(sys.argv[0])\n-CPU_COMPILER = ('/usr/bin/gcc')\n+CPU_COMPILER = ('/usr/bin/gcc-4.9')\n NVCC_PATH = CURRENT_DIR + '/../../../cuda/bin/nvcc'\n-GCC_HOST_COMPILER_PATH = ('/usr/bin/gcc')\n-LLVM_HOST_COMPILER_PATH = ('/usr/bin/gcc')\n+#GCC_HOST_COMPILER_PATH = ('/usr/bin/gcc')\n+GCC_HOST_COMPILER_PATH = ('/usr/bin/gcc-4.9')\n+LLVM_HOST_COMPILER_PATH = ('/usr/bin/gcc-4.9')\n PREFIX_DIR = os.path.dirname(GCC_HOST_COMPILER_PATH)\n</code></pre>", "body_text": "Okay, got it compiled.\nFor anyone following along from Arch Linux and wanting to compile this the following diff should help:\ndiff --git a/third_party/gpus/crosstool/CROSSTOOL b/third_party/gpus/crosstool/CROSSTOOL\nindex dfde7cd..f84955b 100644\n--- a/third_party/gpus/crosstool/CROSSTOOL\n+++ b/third_party/gpus/crosstool/CROSSTOOL\n@@ -45,6 +45,7 @@ toolchain {\n   tool_path { name: \"gcc\" path: \"clang/bin/crosstool_wrapper_driver_is_not_gcc\" }\n   # Use \"-std=c++11\" for nvcc. For consistency, force both the host compiler\n   # and the device compiler to use \"-std=c++11\".\n+  cxx_flag: \"-D_FORCE_INLINES\"\n   cxx_flag: \"-std=c++11\"\n   linker_flag: \"-lstdc++\"\n   linker_flag: \"-B/usr/bin/\"\ndiff --git a/third_party/gpus/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc b/third_party/gpus/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc\nindex a67b039..f284677 100755\n--- a/third_party/gpus/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc\n+++ b/third_party/gpus/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc\n@@ -44,10 +44,11 @@ import sys\n import pipes\n\n CURRENT_DIR = os.path.dirname(sys.argv[0])\n-CPU_COMPILER = ('/usr/bin/gcc')\n+CPU_COMPILER = ('/usr/bin/gcc-4.9')\n NVCC_PATH = CURRENT_DIR + '/../../../cuda/bin/nvcc'\n-GCC_HOST_COMPILER_PATH = ('/usr/bin/gcc')\n-LLVM_HOST_COMPILER_PATH = ('/usr/bin/gcc')\n+#GCC_HOST_COMPILER_PATH = ('/usr/bin/gcc')\n+GCC_HOST_COMPILER_PATH = ('/usr/bin/gcc-4.9')\n+LLVM_HOST_COMPILER_PATH = ('/usr/bin/gcc-4.9')\n PREFIX_DIR = os.path.dirname(GCC_HOST_COMPILER_PATH)", "body": "Okay, got it compiled.\n\nFor anyone following along from Arch Linux and wanting to compile this the following diff should help:\n\n```\ndiff --git a/third_party/gpus/crosstool/CROSSTOOL b/third_party/gpus/crosstool/CROSSTOOL\nindex dfde7cd..f84955b 100644\n--- a/third_party/gpus/crosstool/CROSSTOOL\n+++ b/third_party/gpus/crosstool/CROSSTOOL\n@@ -45,6 +45,7 @@ toolchain {\n   tool_path { name: \"gcc\" path: \"clang/bin/crosstool_wrapper_driver_is_not_gcc\" }\n   # Use \"-std=c++11\" for nvcc. For consistency, force both the host compiler\n   # and the device compiler to use \"-std=c++11\".\n+  cxx_flag: \"-D_FORCE_INLINES\"\n   cxx_flag: \"-std=c++11\"\n   linker_flag: \"-lstdc++\"\n   linker_flag: \"-B/usr/bin/\"\ndiff --git a/third_party/gpus/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc b/third_party/gpus/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc\nindex a67b039..f284677 100755\n--- a/third_party/gpus/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc\n+++ b/third_party/gpus/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc\n@@ -44,10 +44,11 @@ import sys\n import pipes\n\n CURRENT_DIR = os.path.dirname(sys.argv[0])\n-CPU_COMPILER = ('/usr/bin/gcc')\n+CPU_COMPILER = ('/usr/bin/gcc-4.9')\n NVCC_PATH = CURRENT_DIR + '/../../../cuda/bin/nvcc'\n-GCC_HOST_COMPILER_PATH = ('/usr/bin/gcc')\n-LLVM_HOST_COMPILER_PATH = ('/usr/bin/gcc')\n+#GCC_HOST_COMPILER_PATH = ('/usr/bin/gcc')\n+GCC_HOST_COMPILER_PATH = ('/usr/bin/gcc-4.9')\n+LLVM_HOST_COMPILER_PATH = ('/usr/bin/gcc-4.9')\n PREFIX_DIR = os.path.dirname(GCC_HOST_COMPILER_PATH)\n```\n"}