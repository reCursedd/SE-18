{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14444", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14444/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14444/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14444/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14444", "id": 272887992, "node_id": "MDU6SXNzdWUyNzI4ODc5OTI=", "number": 14444, "title": "Can not import graph after transform_graph with quantize_nodes", "user": {"login": "UndeadBlow", "id": 2891003, "node_id": "MDQ6VXNlcjI4OTEwMDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/2891003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/UndeadBlow", "html_url": "https://github.com/UndeadBlow", "followers_url": "https://api.github.com/users/UndeadBlow/followers", "following_url": "https://api.github.com/users/UndeadBlow/following{/other_user}", "gists_url": "https://api.github.com/users/UndeadBlow/gists{/gist_id}", "starred_url": "https://api.github.com/users/UndeadBlow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/UndeadBlow/subscriptions", "organizations_url": "https://api.github.com/users/UndeadBlow/orgs", "repos_url": "https://api.github.com/users/UndeadBlow/repos", "events_url": "https://api.github.com/users/UndeadBlow/events{/privacy}", "received_events_url": "https://api.github.com/users/UndeadBlow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-11-10T10:31:50Z", "updated_at": "2018-08-07T16:29:03Z", "closed_at": "2017-11-10T17:34:41Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>What is the top-level directory of the model you are using</strong>: models/object_detection</li>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: No</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: source</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.4.0-rc0</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.7.0</li>\n<li><strong>CUDA/cuDNN version</strong>: 375.82</li>\n<li><strong>GPU model and memory</strong>: GeForce GTX 770 4GB</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<pre><code>bazel-bin/tensorflow/tools/graph_transforms/transform_graph \\\n  --in_graph=\"/home/.../mobilenet_v2.pb\" \\\n  --out_graph=\"/home/.../mobilenet_v2_clean.pb\" \\\n  --inputs=image_tensor\\\n  --outputs=\"detection_boxes,detection_scores,detection_classes,num_detections\"\\\n  --transforms='add_default_attributes\n  strip_unused_nodes\n  remove_nodes(op=Identity, op=CheckNumerics)\n  fold_constants(ignore_errors=true)\n  fold_batch_norms\n  fold_old_batch_norms\n  quantize_weights\n  quantize_nodes\n  sort_by_execution_order'\n</code></pre>\n<h3>Problem</h3>\n<p>I'm trying to quantize default SSD Mobilenet from models rep.<br>\nAfter execution transformation as above, I can not import graph:</p>\n<pre><code>detection_graph = tf.Graph()\nwith detection_graph.as_default():\n  od_graph_def = tf.GraphDef()\n  with tf.gfile.GFile(PATH_TO_CKPT, 'rb') as fid:\n    serialized_graph = fid.read()\n    od_graph_def.ParseFromString(serialized_graph)\n    tf.import_graph_def(od_graph_def, name='')\n\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n&lt;ipython-input-5-0d8b8f2357e8&gt; in &lt;module&gt;()\n      5     serialized_graph = fid.read()\n      6     od_graph_def.ParseFromString(serialized_graph)\n----&gt; 7     tf.import_graph_def(od_graph_def, name='')\n\n/usr/local/lib/python3.5/dist-packages/tensorflow/python/util/deprecation.py in new_func(*args, **kwargs)\n    314                 'in a future version' if date is None else ('after %s' % date),\n    315                 instructions)\n--&gt; 316       return func(*args, **kwargs)\n    317     return tf_decorator.make_decorator(func, new_func, 'deprecated',\n    318                                        _add_deprecated_arg_notice_to_docstring(\n\n/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/importer.py in import_graph_def(graph_def, input_map, return_elements, name, op_dict, producer_op_list)\n    337                 raise ValueError('Specified colocation to an op that '\n    338                                  'does not exist during import: %s in %s' % (\n--&gt; 339                                      op_to_bind_to, node.name))\n    340               original_op = name_to_op[op_to_bind_to]\n    341               new_class_values.append(compat.as_bytes(\n\nValueError: Specified colocation to an op that does not exist during import: Postprocessor/BatchMultiClassNonMaxSuppression/map/while/strided_slice in Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayWrite_4/TensorArrayWriteV3/Enter\n</code></pre>", "body_text": "System information\n\nWhat is the top-level directory of the model you are using: models/object_detection\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): No\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04\nTensorFlow installed from (source or binary): source\nTensorFlow version (use command below): 1.4.0-rc0\nBazel version (if compiling from source): 0.7.0\nCUDA/cuDNN version: 375.82\nGPU model and memory: GeForce GTX 770 4GB\nExact command to reproduce:\n\nbazel-bin/tensorflow/tools/graph_transforms/transform_graph \\\n  --in_graph=\"/home/.../mobilenet_v2.pb\" \\\n  --out_graph=\"/home/.../mobilenet_v2_clean.pb\" \\\n  --inputs=image_tensor\\\n  --outputs=\"detection_boxes,detection_scores,detection_classes,num_detections\"\\\n  --transforms='add_default_attributes\n  strip_unused_nodes\n  remove_nodes(op=Identity, op=CheckNumerics)\n  fold_constants(ignore_errors=true)\n  fold_batch_norms\n  fold_old_batch_norms\n  quantize_weights\n  quantize_nodes\n  sort_by_execution_order'\n\nProblem\nI'm trying to quantize default SSD Mobilenet from models rep.\nAfter execution transformation as above, I can not import graph:\ndetection_graph = tf.Graph()\nwith detection_graph.as_default():\n  od_graph_def = tf.GraphDef()\n  with tf.gfile.GFile(PATH_TO_CKPT, 'rb') as fid:\n    serialized_graph = fid.read()\n    od_graph_def.ParseFromString(serialized_graph)\n    tf.import_graph_def(od_graph_def, name='')\n\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n<ipython-input-5-0d8b8f2357e8> in <module>()\n      5     serialized_graph = fid.read()\n      6     od_graph_def.ParseFromString(serialized_graph)\n----> 7     tf.import_graph_def(od_graph_def, name='')\n\n/usr/local/lib/python3.5/dist-packages/tensorflow/python/util/deprecation.py in new_func(*args, **kwargs)\n    314                 'in a future version' if date is None else ('after %s' % date),\n    315                 instructions)\n--> 316       return func(*args, **kwargs)\n    317     return tf_decorator.make_decorator(func, new_func, 'deprecated',\n    318                                        _add_deprecated_arg_notice_to_docstring(\n\n/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/importer.py in import_graph_def(graph_def, input_map, return_elements, name, op_dict, producer_op_list)\n    337                 raise ValueError('Specified colocation to an op that '\n    338                                  'does not exist during import: %s in %s' % (\n--> 339                                      op_to_bind_to, node.name))\n    340               original_op = name_to_op[op_to_bind_to]\n    341               new_class_values.append(compat.as_bytes(\n\nValueError: Specified colocation to an op that does not exist during import: Postprocessor/BatchMultiClassNonMaxSuppression/map/while/strided_slice in Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayWrite_4/TensorArrayWriteV3/Enter", "body": "### System information\r\n- **What is the top-level directory of the model you are using**: models/object_detection\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: 1.4.0-rc0\r\n- **Bazel version (if compiling from source)**: 0.7.0\r\n- **CUDA/cuDNN version**: 375.82\r\n- **GPU model and memory**: GeForce GTX 770 4GB\r\n- **Exact command to reproduce**:\r\n\r\n```\r\nbazel-bin/tensorflow/tools/graph_transforms/transform_graph \\\r\n  --in_graph=\"/home/.../mobilenet_v2.pb\" \\\r\n  --out_graph=\"/home/.../mobilenet_v2_clean.pb\" \\\r\n  --inputs=image_tensor\\\r\n  --outputs=\"detection_boxes,detection_scores,detection_classes,num_detections\"\\\r\n  --transforms='add_default_attributes\r\n  strip_unused_nodes\r\n  remove_nodes(op=Identity, op=CheckNumerics)\r\n  fold_constants(ignore_errors=true)\r\n  fold_batch_norms\r\n  fold_old_batch_norms\r\n  quantize_weights\r\n  quantize_nodes\r\n  sort_by_execution_order'\r\n```\r\n\r\n### Problem\r\nI'm trying to quantize default SSD Mobilenet from models rep.\r\nAfter execution transformation as above, I can not import graph:\r\n```\r\ndetection_graph = tf.Graph()\r\nwith detection_graph.as_default():\r\n  od_graph_def = tf.GraphDef()\r\n  with tf.gfile.GFile(PATH_TO_CKPT, 'rb') as fid:\r\n    serialized_graph = fid.read()\r\n    od_graph_def.ParseFromString(serialized_graph)\r\n    tf.import_graph_def(od_graph_def, name='')\r\n\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-5-0d8b8f2357e8> in <module>()\r\n      5     serialized_graph = fid.read()\r\n      6     od_graph_def.ParseFromString(serialized_graph)\r\n----> 7     tf.import_graph_def(od_graph_def, name='')\r\n\r\n/usr/local/lib/python3.5/dist-packages/tensorflow/python/util/deprecation.py in new_func(*args, **kwargs)\r\n    314                 'in a future version' if date is None else ('after %s' % date),\r\n    315                 instructions)\r\n--> 316       return func(*args, **kwargs)\r\n    317     return tf_decorator.make_decorator(func, new_func, 'deprecated',\r\n    318                                        _add_deprecated_arg_notice_to_docstring(\r\n\r\n/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/importer.py in import_graph_def(graph_def, input_map, return_elements, name, op_dict, producer_op_list)\r\n    337                 raise ValueError('Specified colocation to an op that '\r\n    338                                  'does not exist during import: %s in %s' % (\r\n--> 339                                      op_to_bind_to, node.name))\r\n    340               original_op = name_to_op[op_to_bind_to]\r\n    341               new_class_values.append(compat.as_bytes(\r\n\r\nValueError: Specified colocation to an op that does not exist during import: Postprocessor/BatchMultiClassNonMaxSuppression/map/while/strided_slice in Postprocessor/BatchMultiClassNonMaxSuppression/map/while/TensorArrayWrite_4/TensorArrayWriteV3/Enter\r\n```"}