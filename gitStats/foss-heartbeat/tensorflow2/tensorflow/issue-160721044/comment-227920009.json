{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/227920009", "html_url": "https://github.com/tensorflow/tensorflow/issues/2910#issuecomment-227920009", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2910", "id": 227920009, "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzkyMDAwOQ==", "user": {"login": "3XX0", "id": 3028125, "node_id": "MDQ6VXNlcjMwMjgxMjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3028125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/3XX0", "html_url": "https://github.com/3XX0", "followers_url": "https://api.github.com/users/3XX0/followers", "following_url": "https://api.github.com/users/3XX0/following{/other_user}", "gists_url": "https://api.github.com/users/3XX0/gists{/gist_id}", "starred_url": "https://api.github.com/users/3XX0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/3XX0/subscriptions", "organizations_url": "https://api.github.com/users/3XX0/orgs", "repos_url": "https://api.github.com/users/3XX0/repos", "events_url": "https://api.github.com/users/3XX0/events{/privacy}", "received_events_url": "https://api.github.com/users/3XX0/received_events", "type": "User", "site_admin": false}, "created_at": "2016-06-23T00:50:41Z", "updated_at": "2016-06-23T00:50:41Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6673605\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/rdadolf\">@rdadolf</a>  Yes this is totally our fault. I will try to escalate this issue internally to our OSX packaging team but in the meantime your patch is the only (clean) way to solve it.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=463737\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vrv\">@vrv</a> I guess this answers your question for libcuda.<br>\nFor libcudnn, I talked about it <a href=\"https://github.com/tensorflow/tensorflow/issues/2525#issuecomment-223523008\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/2525/hovercard\">here</a>. In short, it would be nice to detect the libcudnn soname and set it by default in the configure script.<br>\nOtherwise, if users try to run a precompiled version of Tensorflow where cudnn hasn't been configured with the script (e.g. the Tensorflow Docker runtime image), it will fail when it tries to look for <code>libcudnn.so</code>. Precompiled Tensorflow should be looking for <code>libcudnn.so.&lt;soname it has been compiled with&gt;</code></p>", "body_text": "@rdadolf  Yes this is totally our fault. I will try to escalate this issue internally to our OSX packaging team but in the meantime your patch is the only (clean) way to solve it.\n@vrv I guess this answers your question for libcuda.\nFor libcudnn, I talked about it here. In short, it would be nice to detect the libcudnn soname and set it by default in the configure script.\nOtherwise, if users try to run a precompiled version of Tensorflow where cudnn hasn't been configured with the script (e.g. the Tensorflow Docker runtime image), it will fail when it tries to look for libcudnn.so. Precompiled Tensorflow should be looking for libcudnn.so.<soname it has been compiled with>", "body": "@rdadolf  Yes this is totally our fault. I will try to escalate this issue internally to our OSX packaging team but in the meantime your patch is the only (clean) way to solve it.\n\n@vrv I guess this answers your question for libcuda.\nFor libcudnn, I talked about it [here](https://github.com/tensorflow/tensorflow/issues/2525#issuecomment-223523008). In short, it would be nice to detect the libcudnn soname and set it by default in the configure script.\nOtherwise, if users try to run a precompiled version of Tensorflow where cudnn hasn't been configured with the script (e.g. the Tensorflow Docker runtime image), it will fail when it tries to look for `libcudnn.so`. Precompiled Tensorflow should be looking for `libcudnn.so.<soname it has been compiled with>`\n"}