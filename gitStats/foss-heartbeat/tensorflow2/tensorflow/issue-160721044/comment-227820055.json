{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/227820055", "html_url": "https://github.com/tensorflow/tensorflow/issues/2910#issuecomment-227820055", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2910", "id": 227820055, "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzgyMDA1NQ==", "user": {"login": "rdadolf", "id": 6673605, "node_id": "MDQ6VXNlcjY2NzM2MDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/6673605?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rdadolf", "html_url": "https://github.com/rdadolf", "followers_url": "https://api.github.com/users/rdadolf/followers", "following_url": "https://api.github.com/users/rdadolf/following{/other_user}", "gists_url": "https://api.github.com/users/rdadolf/gists{/gist_id}", "starred_url": "https://api.github.com/users/rdadolf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rdadolf/subscriptions", "organizations_url": "https://api.github.com/users/rdadolf/orgs", "repos_url": "https://api.github.com/users/rdadolf/repos", "events_url": "https://api.github.com/users/rdadolf/events{/privacy}", "received_events_url": "https://api.github.com/users/rdadolf/received_events", "type": "User", "site_admin": false}, "created_at": "2016-06-22T17:38:06Z", "updated_at": "2016-06-22T17:38:06Z", "author_association": "CONTRIBUTOR", "body_html": "<p>So adding \".1\" isn't really a solution inside TensorFlow, it's a solution that nvidia or the user would have to do alongside TF. It basically means adding <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=23068\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/yaroslavvb\">@yaroslavvb</a>'s symlink workaround as part of the official install instructions. I.E., whenever a user installs a version of cuda on a Mac (including upgrading versions), they'd have to also add the symlink manually. I'm not sure this should really be part of the TF install scripts, since it's modifying previously-installed libraries. Adding it into <code>configure</code> is probably not a good idea, and it would probably require sudo-invoking the configure script (since the cuda libraries could be in system locations).</p>\n<p>The third solution I pitched is sort of a compromise. The dso loader now wouldn't care about the particulars of the system-dependent behavior of libcuda, and it's no less portable than before (because libcudnn and libcudart already require it). I wrote up a <a href=\"https://github.com/rdadolf/tensorflow/commit/9255c1e75f7c3f9185293c31d8ca655664055afb\">patch</a> which implements this. I can certainly submit it as a pull request if you like. (But until <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"160282761\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/2865\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/2865/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/2865\">#2865</a> is resolved, we'll have to check the CI tests manually to see if it works.)</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3028125\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/3XX0\">@3XX0</a> I guess my other question is why the nvidia cuda installer <em>doesn't</em> create a libcuda.1.dylib and symlink it. Every other file is done this way, and you believe that <a href=\"https://github.com/NVIDIA/nvidia-docker/blob/master/tools/src/nvidia/volumes.go#L263\">libcuda.dylib is not the correct name</a>. Is this a bug in the installer?</p>", "body_text": "So adding \".1\" isn't really a solution inside TensorFlow, it's a solution that nvidia or the user would have to do alongside TF. It basically means adding @yaroslavvb's symlink workaround as part of the official install instructions. I.E., whenever a user installs a version of cuda on a Mac (including upgrading versions), they'd have to also add the symlink manually. I'm not sure this should really be part of the TF install scripts, since it's modifying previously-installed libraries. Adding it into configure is probably not a good idea, and it would probably require sudo-invoking the configure script (since the cuda libraries could be in system locations).\nThe third solution I pitched is sort of a compromise. The dso loader now wouldn't care about the particulars of the system-dependent behavior of libcuda, and it's no less portable than before (because libcudnn and libcudart already require it). I wrote up a patch which implements this. I can certainly submit it as a pull request if you like. (But until #2865 is resolved, we'll have to check the CI tests manually to see if it works.)\n@3XX0 I guess my other question is why the nvidia cuda installer doesn't create a libcuda.1.dylib and symlink it. Every other file is done this way, and you believe that libcuda.dylib is not the correct name. Is this a bug in the installer?", "body": "So adding \".1\" isn't really a solution inside TensorFlow, it's a solution that nvidia or the user would have to do alongside TF. It basically means adding @yaroslavvb's symlink workaround as part of the official install instructions. I.E., whenever a user installs a version of cuda on a Mac (including upgrading versions), they'd have to also add the symlink manually. I'm not sure this should really be part of the TF install scripts, since it's modifying previously-installed libraries. Adding it into `configure` is probably not a good idea, and it would probably require sudo-invoking the configure script (since the cuda libraries could be in system locations).\n\nThe third solution I pitched is sort of a compromise. The dso loader now wouldn't care about the particulars of the system-dependent behavior of libcuda, and it's no less portable than before (because libcudnn and libcudart already require it). I wrote up a [patch](https://github.com/rdadolf/tensorflow/commit/9255c1e75f7c3f9185293c31d8ca655664055afb) which implements this. I can certainly submit it as a pull request if you like. (But until #2865 is resolved, we'll have to check the CI tests manually to see if it works.)\n\n@3XX0 I guess my other question is why the nvidia cuda installer _doesn't_ create a libcuda.1.dylib and symlink it. Every other file is done this way, and you believe that [libcuda.dylib is not the correct name](https://github.com/NVIDIA/nvidia-docker/blob/master/tools/src/nvidia/volumes.go#L263). Is this a bug in the installer?\n"}