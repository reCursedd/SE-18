{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/226583815", "html_url": "https://github.com/tensorflow/tensorflow/issues/2910#issuecomment-226583815", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2910", "id": 226583815, "node_id": "MDEyOklzc3VlQ29tbWVudDIyNjU4MzgxNQ==", "user": {"login": "rdadolf", "id": 6673605, "node_id": "MDQ6VXNlcjY2NzM2MDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/6673605?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rdadolf", "html_url": "https://github.com/rdadolf", "followers_url": "https://api.github.com/users/rdadolf/followers", "following_url": "https://api.github.com/users/rdadolf/following{/other_user}", "gists_url": "https://api.github.com/users/rdadolf/gists{/gist_id}", "starred_url": "https://api.github.com/users/rdadolf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rdadolf/subscriptions", "organizations_url": "https://api.github.com/users/rdadolf/orgs", "repos_url": "https://api.github.com/users/rdadolf/repos", "events_url": "https://api.github.com/users/rdadolf/events{/privacy}", "received_events_url": "https://api.github.com/users/rdadolf/received_events", "type": "User", "site_admin": false}, "created_at": "2016-06-16T19:09:54Z", "updated_at": "2016-06-17T01:19:51Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=463737\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vrv\">@vrv</a> What fun would life be without incompatible versioning?</p>\n<p>So it seems like this is coming from mutual incompatibility in nvidia's tools.</p>\n<p>On the OS X cuda 7.5 default install, most of the libraries exist in <code>/Developer/NVIDIA/CUDA-7.5/lib</code>, and these are symlinked into <code>/usr/local/cuda/lib</code>. There is actually only one non-symlinked file, which is <code>/usr/local/cuda/lib/libcuda.dylib</code>. There are no version numbers on it (as <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=23068\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/yaroslavvb\">@yaroslavvb</a> pointed out).</p>\n<p>In the <code>nvidia/cuda:7.5-cudnn4-devel</code> docker image (which TensorFlow's docker image is built from), the cuda libraries are in <code>/usr/local/nvidia/lib64</code>, and there are two files: <code>libcuda.so.1</code> and <code>libcuda.so.352.63</code>.</p>\n<p>So it looks like any solution will not be confined to <code>dso_loader.cc</code>.</p>\n<p>I see three solutions:</p>\n<ol>\n<li>Decide the canonical name of libcuda is \"libcuda\". Revert <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/f45874b4a969a60fa9ced86e6769012e4912b5ca/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/f45874b4a969a60fa9ced86e6769012e4912b5ca\"><tt>f45874b</tt></a>. Add a line to the tensorflow dockerfile which creates a symlink from <code>.1.so</code> to <code>.so</code>.</li>\n<li>Decide the canonical name of libcuda is \"libcuda.1\". Make users symlink on install or convince nvidia to add another symlink to their installer. The former seems unwieldy, and the latter seems unlikely to happen.</li>\n<li>Add a TF_LIBCUDA_VERSION configuration variable. Users wouldn't actually have to configure this, if <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3028125\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/3XX0\">@3XX0</a> is correct in that it won't change. There's already system-dependent checks in <a href=\"https://github.com/tensorflow/tensorflow/blob/05df7e3cea808f26931370f099b0c4352375afce/configure#L181\">configure</a>, so we could add another that simply generates a \".1\" for linux and a \"\" for OS X. Then we add a third function along with <a href=\"https://github.com/tensorflow/tensorflow/blob/d0a822fbcb04d95a643d8efe65699a8d1cdce98b/tensorflow/stream_executor/dso_loader.cc#L40\">GetCudaVersion</a> and GetCudnnVersion, which will end up getting text-substituted <a href=\"https://github.com/tensorflow/tensorflow/blob/14ac2235699509f512b44b71160239c153ab413d/configure#L238\">just like the other two</a>. This doesn't actually make it any more safe (because we're just moving the hardcoded number into the configure script instead of the <code>dso_loader.cc</code>), but it does give tensorflow more control over where to look for things instead of trying to rely solely on nvidia's tools.</li>\n</ol>\n<p>I think 3 sounds more reasonable than the other two. I can probably work up the pull request if this seems like a viable plan for everyone.</p>", "body_text": "@vrv What fun would life be without incompatible versioning?\nSo it seems like this is coming from mutual incompatibility in nvidia's tools.\nOn the OS X cuda 7.5 default install, most of the libraries exist in /Developer/NVIDIA/CUDA-7.5/lib, and these are symlinked into /usr/local/cuda/lib. There is actually only one non-symlinked file, which is /usr/local/cuda/lib/libcuda.dylib. There are no version numbers on it (as @yaroslavvb pointed out).\nIn the nvidia/cuda:7.5-cudnn4-devel docker image (which TensorFlow's docker image is built from), the cuda libraries are in /usr/local/nvidia/lib64, and there are two files: libcuda.so.1 and libcuda.so.352.63.\nSo it looks like any solution will not be confined to dso_loader.cc.\nI see three solutions:\n\nDecide the canonical name of libcuda is \"libcuda\". Revert f45874b. Add a line to the tensorflow dockerfile which creates a symlink from .1.so to .so.\nDecide the canonical name of libcuda is \"libcuda.1\". Make users symlink on install or convince nvidia to add another symlink to their installer. The former seems unwieldy, and the latter seems unlikely to happen.\nAdd a TF_LIBCUDA_VERSION configuration variable. Users wouldn't actually have to configure this, if @3XX0 is correct in that it won't change. There's already system-dependent checks in configure, so we could add another that simply generates a \".1\" for linux and a \"\" for OS X. Then we add a third function along with GetCudaVersion and GetCudnnVersion, which will end up getting text-substituted just like the other two. This doesn't actually make it any more safe (because we're just moving the hardcoded number into the configure script instead of the dso_loader.cc), but it does give tensorflow more control over where to look for things instead of trying to rely solely on nvidia's tools.\n\nI think 3 sounds more reasonable than the other two. I can probably work up the pull request if this seems like a viable plan for everyone.", "body": "@vrv What fun would life be without incompatible versioning?\n\nSo it seems like this is coming from mutual incompatibility in nvidia's tools.\n\nOn the OS X cuda 7.5 default install, most of the libraries exist in `/Developer/NVIDIA/CUDA-7.5/lib`, and these are symlinked into `/usr/local/cuda/lib`. There is actually only one non-symlinked file, which is `/usr/local/cuda/lib/libcuda.dylib`. There are no version numbers on it (as @yaroslavvb pointed out).\n\nIn the `nvidia/cuda:7.5-cudnn4-devel` docker image (which TensorFlow's docker image is built from), the cuda libraries are in `/usr/local/nvidia/lib64`, and there are two files: `libcuda.so.1` and `libcuda.so.352.63`.\n\nSo it looks like any solution will not be confined to `dso_loader.cc`.\n\nI see three solutions:\n1. Decide the canonical name of libcuda is \"libcuda\". Revert f45874b. Add a line to the tensorflow dockerfile which creates a symlink from `.1.so` to `.so`.\n2. Decide the canonical name of libcuda is \"libcuda.1\". Make users symlink on install or convince nvidia to add another symlink to their installer. The former seems unwieldy, and the latter seems unlikely to happen.\n3. Add a TF_LIBCUDA_VERSION configuration variable. Users wouldn't actually have to configure this, if @3XX0 is correct in that it won't change. There's already system-dependent checks in [configure](https://github.com/tensorflow/tensorflow/blob/05df7e3cea808f26931370f099b0c4352375afce/configure#L181), so we could add another that simply generates a \".1\" for linux and a \"\" for OS X. Then we add a third function along with [GetCudaVersion](https://github.com/tensorflow/tensorflow/blob/d0a822fbcb04d95a643d8efe65699a8d1cdce98b/tensorflow/stream_executor/dso_loader.cc#L40) and GetCudnnVersion, which will end up getting text-substituted [just like the other two](https://github.com/tensorflow/tensorflow/blob/14ac2235699509f512b44b71160239c153ab413d/configure#L238). This doesn't actually make it any more safe (because we're just moving the hardcoded number into the configure script instead of the `dso_loader.cc`), but it does give tensorflow more control over where to look for things instead of trying to rely solely on nvidia's tools.\n\nI think 3 sounds more reasonable than the other two. I can probably work up the pull request if this seems like a viable plan for everyone.\n"}