{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16682", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16682/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16682/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16682/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16682", "id": 293758917, "node_id": "MDU6SXNzdWUyOTM3NTg5MTc=", "number": 16682, "title": "[Recommendation] Expose tensorflow/core/kernels/dataset.h in wheel file", "user": {"login": "galv", "id": 4767568, "node_id": "MDQ6VXNlcjQ3Njc1Njg=", "avatar_url": "https://avatars0.githubusercontent.com/u/4767568?v=4", "gravatar_id": "", "url": "https://api.github.com/users/galv", "html_url": "https://github.com/galv", "followers_url": "https://api.github.com/users/galv/followers", "following_url": "https://api.github.com/users/galv/following{/other_user}", "gists_url": "https://api.github.com/users/galv/gists{/gist_id}", "starred_url": "https://api.github.com/users/galv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/galv/subscriptions", "organizations_url": "https://api.github.com/users/galv/orgs", "repos_url": "https://api.github.com/users/galv/repos", "events_url": "https://api.github.com/users/galv/events{/privacy}", "received_events_url": "https://api.github.com/users/galv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-02-02T03:08:50Z", "updated_at": "2018-02-03T17:39:22Z", "closed_at": "2018-02-03T17:39:22Z", "author_association": "NONE", "body_html": "<p>Hi,</p>\n<p>Right now, to build a new dataset op, you need to access to the header file <code>tensorflow/core/kernels/dataset.h</code>, but the tensorflow wheel does not expose this header.</p>\n<p>Use case: I built new Dataset Ops to read Kaldi's \"Table\" I/O format to enable others to be able to move from Kaldi-based automatic speech recognition recipes to tensorflow-based ones without having to do a bunch of extra data-munging. Right now, I require users to build tensorflow from source code and point my build to the tensorflow source code path, so I can guarantee that I have access to a header file compatible with their binary. I'd prefer to be able to build my package by depending only on pip-installed tensorflow to make things easier on users.</p>\n<p>I manually verified that adding</p>\n<pre><code>\"//tensorflow/core/kernels:dataset\",\n</code></pre>\n<p>to the deps of</p>\n<pre><code>transitive_hdrs(\n    name = \"included_headers\",\n    deps = [\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",  \n        \"//tensorflow/core:stream_executor\",\n        \"//third_party/eigen3\",\n    ],\n)\n</code></pre>\n<p>in <code>tensorflow/tools/pip_package/BUILD</code> will include the right header file.</p>\n<p>This is a pretty small change. Is there a particular reason why tensorflow does not already expose the header file? Is this an oversight or because you aren't ready to expose this interface publically?</p>", "body_text": "Hi,\nRight now, to build a new dataset op, you need to access to the header file tensorflow/core/kernels/dataset.h, but the tensorflow wheel does not expose this header.\nUse case: I built new Dataset Ops to read Kaldi's \"Table\" I/O format to enable others to be able to move from Kaldi-based automatic speech recognition recipes to tensorflow-based ones without having to do a bunch of extra data-munging. Right now, I require users to build tensorflow from source code and point my build to the tensorflow source code path, so I can guarantee that I have access to a header file compatible with their binary. I'd prefer to be able to build my package by depending only on pip-installed tensorflow to make things easier on users.\nI manually verified that adding\n\"//tensorflow/core/kernels:dataset\",\n\nto the deps of\ntransitive_hdrs(\n    name = \"included_headers\",\n    deps = [\n        \"//tensorflow/core:core_cpu\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:protos_all_cc\",  \n        \"//tensorflow/core:stream_executor\",\n        \"//third_party/eigen3\",\n    ],\n)\n\nin tensorflow/tools/pip_package/BUILD will include the right header file.\nThis is a pretty small change. Is there a particular reason why tensorflow does not already expose the header file? Is this an oversight or because you aren't ready to expose this interface publically?", "body": "Hi,\r\n\r\nRight now, to build a new dataset op, you need to access to the header file `tensorflow/core/kernels/dataset.h`, but the tensorflow wheel does not expose this header.\r\n\r\nUse case: I built new Dataset Ops to read Kaldi's \"Table\" I/O format to enable others to be able to move from Kaldi-based automatic speech recognition recipes to tensorflow-based ones without having to do a bunch of extra data-munging. Right now, I require users to build tensorflow from source code and point my build to the tensorflow source code path, so I can guarantee that I have access to a header file compatible with their binary. I'd prefer to be able to build my package by depending only on pip-installed tensorflow to make things easier on users.\r\n\r\nI manually verified that adding \r\n\r\n```\r\n\"//tensorflow/core/kernels:dataset\",\r\n```\r\n\r\nto the deps of\r\n\r\n```\r\ntransitive_hdrs(\r\n    name = \"included_headers\",\r\n    deps = [\r\n        \"//tensorflow/core:core_cpu\",\r\n        \"//tensorflow/core:framework\",\r\n        \"//tensorflow/core:lib\",\r\n        \"//tensorflow/core:protos_all_cc\",  \r\n        \"//tensorflow/core:stream_executor\",\r\n        \"//third_party/eigen3\",\r\n    ],\r\n)\r\n```\r\n\r\nin `tensorflow/tools/pip_package/BUILD` will include the right header file.\r\n\r\nThis is a pretty small change. Is there a particular reason why tensorflow does not already expose the header file? Is this an oversight or because you aren't ready to expose this interface publically?"}