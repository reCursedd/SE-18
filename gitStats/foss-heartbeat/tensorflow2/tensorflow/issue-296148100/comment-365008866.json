{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/365008866", "html_url": "https://github.com/tensorflow/tensorflow/issues/16926#issuecomment-365008866", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16926", "id": 365008866, "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTAwODg2Ng==", "user": {"login": "cgarciae", "id": 5862228, "node_id": "MDQ6VXNlcjU4NjIyMjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5862228?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cgarciae", "html_url": "https://github.com/cgarciae", "followers_url": "https://api.github.com/users/cgarciae/followers", "following_url": "https://api.github.com/users/cgarciae/following{/other_user}", "gists_url": "https://api.github.com/users/cgarciae/gists{/gist_id}", "starred_url": "https://api.github.com/users/cgarciae/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cgarciae/subscriptions", "organizations_url": "https://api.github.com/users/cgarciae/orgs", "repos_url": "https://api.github.com/users/cgarciae/repos", "events_url": "https://api.github.com/users/cgarciae/events{/privacy}", "received_events_url": "https://api.github.com/users/cgarciae/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-12T18:05:40Z", "updated_at": "2018-02-12T20:19:02Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=192142\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mrry\">@mrry</a> Very glad you are thinking about this!</p>\n<p>The signature could be <code>to_records(self, features, filepath, ...)</code> where:</p>\n<ol>\n<li>It follows the same API of <code>tf.parse_example</code> so you can reuse the same concepts/structures.</li>\n<li>Should only work on dict-based datasets so you can match the structure in the <code>features</code> dict to the structure on the dataset dict when creating the <code>tf.Example</code>. People who use the tuple-based datasets can just <code>map</code> to a dict beforehand.</li>\n<li>Create an <code>tf.ImageFeature</code> class that indicates you want to convert the ndarray of an image to bytes encoded in a certain format like jpeg or png.</li>\n</ol>\n<p>Btw: I find that tuple-based datasets are harder to maintain when you have many features/columns, the documentation should switch to dict-based approach, or you should even provide a <code>Row</code> class like pyspark does so we can access the columns as fields.</p>", "body_text": "@mrry Very glad you are thinking about this!\nThe signature could be to_records(self, features, filepath, ...) where:\n\nIt follows the same API of tf.parse_example so you can reuse the same concepts/structures.\nShould only work on dict-based datasets so you can match the structure in the features dict to the structure on the dataset dict when creating the tf.Example. People who use the tuple-based datasets can just map to a dict beforehand.\nCreate an tf.ImageFeature class that indicates you want to convert the ndarray of an image to bytes encoded in a certain format like jpeg or png.\n\nBtw: I find that tuple-based datasets are harder to maintain when you have many features/columns, the documentation should switch to dict-based approach, or you should even provide a Row class like pyspark does so we can access the columns as fields.", "body": "@mrry Very glad you are thinking about this!\r\n\r\nThe signature could be `to_records(self, features, filepath, ...)` where:\r\n\r\n1. It follows the same API of `tf.parse_example` so you can reuse the same concepts/structures. \r\n2. Should only work on dict-based datasets so you can match the structure in the `features` dict to the structure on the dataset dict when creating the `tf.Example`. People who use the tuple-based datasets can just `map` to a dict beforehand.\r\n3. Create an `tf.ImageFeature` class that indicates you want to convert the ndarray of an image to bytes encoded in a certain format like jpeg or png.\r\n\r\nBtw: I find that tuple-based datasets are harder to maintain when you have many features/columns, the documentation should switch to dict-based approach, or you should even provide a `Row` class like pyspark does so we can access the columns as fields."}