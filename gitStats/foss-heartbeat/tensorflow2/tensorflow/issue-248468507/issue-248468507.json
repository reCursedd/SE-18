{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12081", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12081/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12081/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12081/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/12081", "id": 248468507, "node_id": "MDU6SXNzdWUyNDg0Njg1MDc=", "number": 12081, "title": "Tensorflow bezel command line c options does not pass down to gcc if static object is compiled", "user": {"login": "shengfuintel", "id": 3935335, "node_id": "MDQ6VXNlcjM5MzUzMzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3935335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shengfuintel", "html_url": "https://github.com/shengfuintel", "followers_url": "https://api.github.com/users/shengfuintel/followers", "following_url": "https://api.github.com/users/shengfuintel/following{/other_user}", "gists_url": "https://api.github.com/users/shengfuintel/gists{/gist_id}", "starred_url": "https://api.github.com/users/shengfuintel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shengfuintel/subscriptions", "organizations_url": "https://api.github.com/users/shengfuintel/orgs", "repos_url": "https://api.github.com/users/shengfuintel/repos", "events_url": "https://api.github.com/users/shengfuintel/events{/privacy}", "received_events_url": "https://api.github.com/users/shengfuintel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-07T16:45:48Z", "updated_at": "2017-08-09T16:05:18Z", "closed_at": "2017-08-09T16:05:18Z", "author_association": "CONTRIBUTOR", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:<br>\nNo.</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:<br>\nCentOS 7.1</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:<br>\nSource</li>\n<li><strong>TensorFlow version (use command below)</strong>:<br>\n1.3 rc1</li>\n<li><strong>Python version</strong>:<br>\n2.7</li>\n<li><strong>Bazel version (if compiling from source)</strong>:<br>\n0.5.1</li>\n<li><strong>CUDA/cuDNN version</strong>:<br>\nn/a</li>\n<li><strong>GPU model and memory</strong>:<br>\nn/a</li>\n<li><strong>Exact command to reproduce</strong>:<br>\nbazel build --copt=\"-DEIGEN_USE_MKL_VML\" -c opt //tensorflow/tools/pip_package:build_pip_package -s</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>When I compile TensorFlow with bazel, I found the c option I put in the bazel command line only passed to the object file for a dynamic library (with -fPIC option), not the object file for a static library (without -fPIC).</p>\n<p>For example, I ran the following command:</p>\n<p>bazel build --copt=\"-DEIGEN_USE_MKL_VML\" -c opt //tensorflow/tools/pip_package:build_pip_package -s<br>\nI expect -DEIGEN_USE_MKL_VML passed down to gcc, but it does not for *.o. For example, the gcc command line for external/nasm/labels.c is the following:</p>\n<p>(cd /nfs/pdx/home/sfu2/.cache/bazel/<em>bazel_sfu2/fec016c4b4f3097e22950dbc1f4b848d/execroot/private-tensorflow &amp;&amp; <br>\nexec env - <br>\nLD_LIBRARY_PATH=/nfs/pdx/home/sfu2/gcc/install/lib64:/usr/lib64:/usr/local/lib <br>\nPATH=/nfs/pdx/home/sfu2/bin:/usr/bin:/usr/local/bin/:/usr/lib64/qt-3.3/bin:/nfs/pdx/home/sfu2/perl5/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin <br>\nPWD=/proc/self/cwd <br>\n/usr/bin/gcc -U_FORTIFY_SOURCE -fstack-protector -Wall -B/usr/bin -B/usr/bin -Wunused-but-set-parameter -Wno-free-nonheap-object -fno-omit-frame-pointer -g0 -O2 '-D_FORTIFY_SOURCE=1' -DNDEBUG -ffunction-sections -fdata-sections -g0 -MD -MF bazel-out/host/bin/external/nasm/<em>objs/nasm/external/nasm/labels.d -DHAVE_SNPRINTF -iquote external/nasm -iquote bazel-out/host/genfiles/external/nasm -iquote external/bazel_tools -iquote bazel-out/host/genfiles/external/bazel_tools -isystem external/bazel_tools/tools/cpp/gcc3 -w '-std=c99' -fno-canonical-system-headers -Wno-builtin-macro-redefined '-D__DATE</em></em>=\"redacted\"' '-D__TIMESTAMP__=\"redacted\"' '-D__TIME__=\"redacted\"' -c external/nasm/labels.c -o bazel-out/host/bin/external/nasm/_objs/nasm/external/nasm/labels.o)</p>\n<p>You can see the c option \"-DEIGEN_USE_MKL_VML\" is not on the command line.</p>\n<p>Is it a bug in TensorFlow build script?</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nNo.\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nCentOS 7.1\nTensorFlow installed from (source or binary):\nSource\nTensorFlow version (use command below):\n1.3 rc1\nPython version:\n2.7\nBazel version (if compiling from source):\n0.5.1\nCUDA/cuDNN version:\nn/a\nGPU model and memory:\nn/a\nExact command to reproduce:\nbazel build --copt=\"-DEIGEN_USE_MKL_VML\" -c opt //tensorflow/tools/pip_package:build_pip_package -s\n\nDescribe the problem\nWhen I compile TensorFlow with bazel, I found the c option I put in the bazel command line only passed to the object file for a dynamic library (with -fPIC option), not the object file for a static library (without -fPIC).\nFor example, I ran the following command:\nbazel build --copt=\"-DEIGEN_USE_MKL_VML\" -c opt //tensorflow/tools/pip_package:build_pip_package -s\nI expect -DEIGEN_USE_MKL_VML passed down to gcc, but it does not for *.o. For example, the gcc command line for external/nasm/labels.c is the following:\n(cd /nfs/pdx/home/sfu2/.cache/bazel/bazel_sfu2/fec016c4b4f3097e22950dbc1f4b848d/execroot/private-tensorflow && \nexec env - \nLD_LIBRARY_PATH=/nfs/pdx/home/sfu2/gcc/install/lib64:/usr/lib64:/usr/local/lib \nPATH=/nfs/pdx/home/sfu2/bin:/usr/bin:/usr/local/bin/:/usr/lib64/qt-3.3/bin:/nfs/pdx/home/sfu2/perl5/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin \nPWD=/proc/self/cwd \n/usr/bin/gcc -U_FORTIFY_SOURCE -fstack-protector -Wall -B/usr/bin -B/usr/bin -Wunused-but-set-parameter -Wno-free-nonheap-object -fno-omit-frame-pointer -g0 -O2 '-D_FORTIFY_SOURCE=1' -DNDEBUG -ffunction-sections -fdata-sections -g0 -MD -MF bazel-out/host/bin/external/nasm/objs/nasm/external/nasm/labels.d -DHAVE_SNPRINTF -iquote external/nasm -iquote bazel-out/host/genfiles/external/nasm -iquote external/bazel_tools -iquote bazel-out/host/genfiles/external/bazel_tools -isystem external/bazel_tools/tools/cpp/gcc3 -w '-std=c99' -fno-canonical-system-headers -Wno-builtin-macro-redefined '-D__DATE=\"redacted\"' '-D__TIMESTAMP__=\"redacted\"' '-D__TIME__=\"redacted\"' -c external/nasm/labels.c -o bazel-out/host/bin/external/nasm/_objs/nasm/external/nasm/labels.o)\nYou can see the c option \"-DEIGEN_USE_MKL_VML\" is not on the command line.\nIs it a bug in TensorFlow build script?", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nNo.\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nCentOS 7.1\r\n- **TensorFlow installed from (source or binary)**:\r\nSource\r\n- **TensorFlow version (use command below)**:\r\n1.3 rc1\r\n- **Python version**: \r\n2.7\r\n- **Bazel version (if compiling from source)**:\r\n0.5.1\r\n- **CUDA/cuDNN version**:\r\nn/a\r\n- **GPU model and memory**:\r\nn/a\r\n- **Exact command to reproduce**:\r\nbazel build --copt=\"-DEIGEN_USE_MKL_VML\" -c opt //tensorflow/tools/pip_package:build_pip_package -s\r\n\r\n### Describe the problem\r\n\r\n\r\nWhen I compile TensorFlow with bazel, I found the c option I put in the bazel command line only passed to the object file for a dynamic library (with -fPIC option), not the object file for a static library (without -fPIC).\r\n\r\nFor example, I ran the following command:\r\n\r\nbazel build --copt=\"-DEIGEN_USE_MKL_VML\" -c opt //tensorflow/tools/pip_package:build_pip_package -s\r\nI expect -DEIGEN_USE_MKL_VML passed down to gcc, but it does not for *.o. For example, the gcc command line for external/nasm/labels.c is the following:\r\n\r\n(cd /nfs/pdx/home/sfu2/.cache/bazel/_bazel_sfu2/fec016c4b4f3097e22950dbc1f4b848d/execroot/private-tensorflow && \\\r\n  exec env - \\\r\n    LD_LIBRARY_PATH=/nfs/pdx/home/sfu2/gcc/install/lib64:/usr/lib64:/usr/local/lib \\\r\n    PATH=/nfs/pdx/home/sfu2/bin:/usr/bin:/usr/local/bin/:/usr/lib64/qt-3.3/bin:/nfs/pdx/home/sfu2/perl5/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin \\\r\n    PWD=/proc/self/cwd \\\r\n  /usr/bin/gcc -U_FORTIFY_SOURCE -fstack-protector -Wall -B/usr/bin -B/usr/bin -Wunused-but-set-parameter -Wno-free-nonheap-object -fno-omit-frame-pointer -g0 -O2 '-D_FORTIFY_SOURCE=1' -DNDEBUG -ffunction-sections -fdata-sections -g0 -MD -MF bazel-out/host/bin/external/nasm/_objs/nasm/external/nasm/labels.d -DHAVE_SNPRINTF -iquote external/nasm -iquote bazel-out/host/genfiles/external/nasm -iquote external/bazel_tools -iquote bazel-out/host/genfiles/external/bazel_tools -isystem external/bazel_tools/tools/cpp/gcc3 -w '-std=c99' -fno-canonical-system-headers -Wno-builtin-macro-redefined '-D__DATE__=\"redacted\"' '-D__TIMESTAMP__=\"redacted\"' '-D__TIME__=\"redacted\"' -c external/nasm/labels.c -o bazel-out/host/bin/external/nasm/_objs/nasm/external/nasm/labels.o)\r\n\r\nYou can see the c option \"-DEIGEN_USE_MKL_VML\" is not on the command line.\r\n\r\nIs it a bug in TensorFlow build script?"}