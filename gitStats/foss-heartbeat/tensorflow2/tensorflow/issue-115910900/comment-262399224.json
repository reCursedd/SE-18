{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/262399224", "html_url": "https://github.com/tensorflow/tensorflow/issues/5#issuecomment-262399224", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5", "id": 262399224, "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjM5OTIyNA==", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "created_at": "2016-11-22T23:40:44Z", "updated_at": "2016-11-22T23:40:44Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1294940\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/eaplatanios\">@eaplatanios</a> : The C API is mostly stable (and will be officially so by 1.0) and usable though not complete (still missing the ability to automatically gradient computations to the graph). A doc describing how the C API can be used to build language bindings is at <a href=\"https://www.tensorflow.org/how_tos/language_bindings/index.html\" rel=\"nofollow\">https://www.tensorflow.org/how_tos/language_bindings/index.html</a></p>\n<p>The <a href=\"https://godoc.org/github.com/tensorflow/tensorflow/tensorflow/go\" rel=\"nofollow\">Go API</a> was implemented using the C API as a first example of following the above document.</p>\n<p>We hope to have the Java bindings be built on top of this as well (using JNI) and have started exploring that a bit. Any comments/learnings folks have based on using <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3328023\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/saudet\">@saudet</a> 's wonderful work with getting JavaCPP working would be nice to know about.</p>", "body_text": "@eaplatanios : The C API is mostly stable (and will be officially so by 1.0) and usable though not complete (still missing the ability to automatically gradient computations to the graph). A doc describing how the C API can be used to build language bindings is at https://www.tensorflow.org/how_tos/language_bindings/index.html\nThe Go API was implemented using the C API as a first example of following the above document.\nWe hope to have the Java bindings be built on top of this as well (using JNI) and have started exploring that a bit. Any comments/learnings folks have based on using @saudet 's wonderful work with getting JavaCPP working would be nice to know about.", "body": "@eaplatanios : The C API is mostly stable (and will be officially so by 1.0) and usable though not complete (still missing the ability to automatically gradient computations to the graph). A doc describing how the C API can be used to build language bindings is at https://www.tensorflow.org/how_tos/language_bindings/index.html\r\n\r\nThe [Go API](https://godoc.org/github.com/tensorflow/tensorflow/tensorflow/go) was implemented using the C API as a first example of following the above document.\r\n\r\nWe hope to have the Java bindings be built on top of this as well (using JNI) and have started exploring that a bit. Any comments/learnings folks have based on using @saudet 's wonderful work with getting JavaCPP working would be nice to know about."}