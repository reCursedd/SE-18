{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/159119049", "html_url": "https://github.com/tensorflow/tensorflow/issues/5#issuecomment-159119049", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5", "id": 159119049, "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTExOTA0OQ==", "user": {"login": "saudet", "id": 3328023, "node_id": "MDQ6VXNlcjMzMjgwMjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3328023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saudet", "html_url": "https://github.com/saudet", "followers_url": "https://api.github.com/users/saudet/followers", "following_url": "https://api.github.com/users/saudet/following{/other_user}", "gists_url": "https://api.github.com/users/saudet/gists{/gist_id}", "starred_url": "https://api.github.com/users/saudet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saudet/subscriptions", "organizations_url": "https://api.github.com/users/saudet/orgs", "repos_url": "https://api.github.com/users/saudet/repos", "events_url": "https://api.github.com/users/saudet/events{/privacy}", "received_events_url": "https://api.github.com/users/saudet/received_events", "type": "User", "site_admin": false}, "created_at": "2015-11-24T01:08:40Z", "updated_at": "2015-11-24T01:08:40Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6148088\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/kylevedder\">@kylevedder</a> I already have an <code>.so</code> build as part of the JavaCPP Presets: <a href=\"https://github.com/bytedeco/javacpp-presets/tree/master/tensorflow\">https://github.com/bytedeco/javacpp-presets/tree/master/tensorflow</a>. Thanks to Bazel, it's really simple. Just apply a patch like this:</p>\n<div class=\"highlight highlight-source-diff\"><pre><span class=\"pl-c1\">diff -ruN tensorflow/tensorflow/cc/BUILD tensorflow-patch/tensorflow/cc/BUILD</span>\n<span class=\"pl-md\">--- tensorflow/tensorflow/cc/BUILD  2015-11-22 00:00:02.441829192 +0900</span>\n<span class=\"pl-mi1\">+++ tensorflow-patch/tensorflow/cc/BUILD    2015-11-14 11:15:12.689330351 +0900</span>\n<span class=\"pl-mdr\">@@ -75,6 +75,17 @@</span>\n     ],\n )\n\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>cc_binary(</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>    name = \"libtensorflow.so\",</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>    copts = tf_copts(),</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>    linkshared = 1,</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>    deps = [</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>        \":cc_ops\",</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>        \"//tensorflow/core:kernels\",</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>        \"//tensorflow/core:tensorflow\",</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>    ],</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>)</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span></span>\n filegroup(\n     name = \"all_files\",\n     srcs = glob(</pre></div>\n<p>And run Bazel like this, for example:</p>\n<pre><code>bazel build -c opt //tensorflow/cc:libtensorflow.so\n</code></pre>\n<p>AFAIK, this should gobble up pretty much anything of interest for the C++ API.</p>", "body_text": "@kylevedder I already have an .so build as part of the JavaCPP Presets: https://github.com/bytedeco/javacpp-presets/tree/master/tensorflow. Thanks to Bazel, it's really simple. Just apply a patch like this:\ndiff -ruN tensorflow/tensorflow/cc/BUILD tensorflow-patch/tensorflow/cc/BUILD\n--- tensorflow/tensorflow/cc/BUILD  2015-11-22 00:00:02.441829192 +0900\n+++ tensorflow-patch/tensorflow/cc/BUILD    2015-11-14 11:15:12.689330351 +0900\n@@ -75,6 +75,17 @@\n     ],\n )\n\n+cc_binary(\n+    name = \"libtensorflow.so\",\n+    copts = tf_copts(),\n+    linkshared = 1,\n+    deps = [\n+        \":cc_ops\",\n+        \"//tensorflow/core:kernels\",\n+        \"//tensorflow/core:tensorflow\",\n+    ],\n+)\n+\n filegroup(\n     name = \"all_files\",\n     srcs = glob(\nAnd run Bazel like this, for example:\nbazel build -c opt //tensorflow/cc:libtensorflow.so\n\nAFAIK, this should gobble up pretty much anything of interest for the C++ API.", "body": "@kylevedder I already have an `.so` build as part of the JavaCPP Presets: https://github.com/bytedeco/javacpp-presets/tree/master/tensorflow. Thanks to Bazel, it's really simple. Just apply a patch like this:\n\n``` diff\ndiff -ruN tensorflow/tensorflow/cc/BUILD tensorflow-patch/tensorflow/cc/BUILD\n--- tensorflow/tensorflow/cc/BUILD  2015-11-22 00:00:02.441829192 +0900\n+++ tensorflow-patch/tensorflow/cc/BUILD    2015-11-14 11:15:12.689330351 +0900\n@@ -75,6 +75,17 @@\n     ],\n )\n\n+cc_binary(\n+    name = \"libtensorflow.so\",\n+    copts = tf_copts(),\n+    linkshared = 1,\n+    deps = [\n+        \":cc_ops\",\n+        \"//tensorflow/core:kernels\",\n+        \"//tensorflow/core:tensorflow\",\n+    ],\n+)\n+\n filegroup(\n     name = \"all_files\",\n     srcs = glob(\n```\n\nAnd run Bazel like this, for example:\n\n```\nbazel build -c opt //tensorflow/cc:libtensorflow.so\n```\n\nAFAIK, this should gobble up pretty much anything of interest for the C++ API.\n"}