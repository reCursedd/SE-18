{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/272575835", "html_url": "https://github.com/tensorflow/tensorflow/issues/5#issuecomment-272575835", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5", "id": 272575835, "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjU3NTgzNQ==", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-13T23:29:01Z", "updated_at": "2017-01-14T02:58:00Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=28169501\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/intropy\">@intropy</a> : Thanks for your comments and they definitely make sense. For now I can share some quick thoughts with you:</p>\n<p>RE: protobufs: At this point we're trying to keep the core API independent of protobufs for a number of reasons (including use on resource restricted systems where something like <a href=\"https://github.com/google/protobuf/tree/master/javanano#nano-version\">nanproto</a> may be more appropriate). So, that's the reason why we have been hesitant, but it's something we're thinking about and suggestions are appreciated. One possibility is to have all the protobuf related functionality in a separate package so that there is a clear separation.</p>\n<p>So, going back to your points:</p>\n<ol>\n<li>\n<p>See above. Though, I'd wager that there are many cases where the <code>byte[]</code> makes more sense (such as reading the graph from a file or network channel)</p>\n</li>\n<li>\n<p>Point taken</p>\n</li>\n<li>\n<p>See above.</p>\n</li>\n<li>\n<p><code>Session.runner.run</code> should <em>not</em> be swallowing status. If there is an error, an exception will be thrown (<a href=\"https://github.com/tensorflow/tensorflow/blob/f074dc8/tensorflow/java/src/main/native/session_jni.cc#L166\"><code>session_jni.cc:166</code></a>). If that is not happening, please do file a bug.</p>\n</li>\n</ol>\n<p>You are right, not all types are supported yet, but should be easy enough to add. If you have a pressing need for the missing types, please feel free to file an issue and/or send in a PR. Contributions are welcome :)</p>", "body_text": "@intropy : Thanks for your comments and they definitely make sense. For now I can share some quick thoughts with you:\nRE: protobufs: At this point we're trying to keep the core API independent of protobufs for a number of reasons (including use on resource restricted systems where something like nanproto may be more appropriate). So, that's the reason why we have been hesitant, but it's something we're thinking about and suggestions are appreciated. One possibility is to have all the protobuf related functionality in a separate package so that there is a clear separation.\nSo, going back to your points:\n\n\nSee above. Though, I'd wager that there are many cases where the byte[] makes more sense (such as reading the graph from a file or network channel)\n\n\nPoint taken\n\n\nSee above.\n\n\nSession.runner.run should not be swallowing status. If there is an error, an exception will be thrown (session_jni.cc:166). If that is not happening, please do file a bug.\n\n\nYou are right, not all types are supported yet, but should be easy enough to add. If you have a pressing need for the missing types, please feel free to file an issue and/or send in a PR. Contributions are welcome :)", "body": "@Intropy : Thanks for your comments and they definitely make sense. For now I can share some quick thoughts with you:\r\n\r\nRE: protobufs: At this point we're trying to keep the core API independent of protobufs for a number of reasons (including use on resource restricted systems where something like [nanproto](https://github.com/google/protobuf/tree/master/javanano#nano-version) may be more appropriate). So, that's the reason why we have been hesitant, but it's something we're thinking about and suggestions are appreciated. One possibility is to have all the protobuf related functionality in a separate package so that there is a clear separation.\r\n\r\nSo, going back to your points:\r\n\r\n1. See above. Though, I'd wager that there are many cases where the `byte[]` makes more sense (such as reading the graph from a file or network channel)\r\n\r\n2. Point taken\r\n\r\n3. See above.\r\n\r\n4. `Session.runner.run` should *not* be swallowing status. If there is an error, an exception will be thrown ([`session_jni.cc:166`](https://github.com/tensorflow/tensorflow/blob/f074dc8/tensorflow/java/src/main/native/session_jni.cc#L166)). If that is not happening, please do file a bug.\r\n\r\nYou are right, not all types are supported yet, but should be easy enough to add. If you have a pressing need for the missing types, please feel free to file an issue and/or send in a PR. Contributions are welcome :)\r\n"}