{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/302143410", "html_url": "https://github.com/tensorflow/tensorflow/pull/9765#issuecomment-302143410", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9765", "id": 302143410, "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjE0MzQxMA==", "user": {"login": "eliben", "id": 1130906, "node_id": "MDQ6VXNlcjExMzA5MDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1130906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eliben", "html_url": "https://github.com/eliben", "followers_url": "https://api.github.com/users/eliben/followers", "following_url": "https://api.github.com/users/eliben/following{/other_user}", "gists_url": "https://api.github.com/users/eliben/gists{/gist_id}", "starred_url": "https://api.github.com/users/eliben/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eliben/subscriptions", "organizations_url": "https://api.github.com/users/eliben/orgs", "repos_url": "https://api.github.com/users/eliben/repos", "events_url": "https://api.github.com/users/eliben/events{/privacy}", "received_events_url": "https://api.github.com/users/eliben/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-17T16:21:25Z", "updated_at": "2017-05-17T16:21:25Z", "author_association": "MEMBER", "body_html": "<p>Hi David - thanks for the contribution!</p>\n<p>Could you elaborate a little bit on the motivation for landing this? Is it much different from, say, the existing CPU backend? If we just want to make new backends easier to write, would it not be simpler to beef up the docs a bit for what it takes to write a new backend?</p>\n<p>All these backends naturally share quite a bit of boilerplate, as your PR demonstrates. Keeping this boilerplate working in the face of occasional API changes is burdensome, and any in-tree backend adds to the burden. This is why, although I'm not <em>opposed</em> to having such an example backend in-tree, I do want to hear some more about the motivation and potential advantages of having one.</p>", "body_text": "Hi David - thanks for the contribution!\nCould you elaborate a little bit on the motivation for landing this? Is it much different from, say, the existing CPU backend? If we just want to make new backends easier to write, would it not be simpler to beef up the docs a bit for what it takes to write a new backend?\nAll these backends naturally share quite a bit of boilerplate, as your PR demonstrates. Keeping this boilerplate working in the face of occasional API changes is burdensome, and any in-tree backend adds to the burden. This is why, although I'm not opposed to having such an example backend in-tree, I do want to hear some more about the motivation and potential advantages of having one.", "body": "Hi David - thanks for the contribution!\r\n\r\nCould you elaborate a little bit on the motivation for landing this? Is it much different from, say, the existing CPU backend? If we just want to make new backends easier to write, would it not be simpler to beef up the docs a bit for what it takes to write a new backend?\r\n\r\nAll these backends naturally share quite a bit of boilerplate, as your PR demonstrates. Keeping this boilerplate working in the face of occasional API changes is burdensome, and any in-tree backend adds to the burden. This is why, although I'm not *opposed* to having such an example backend in-tree, I do want to hear some more about the motivation and potential advantages of having one.\r\n\r\n\r\n"}