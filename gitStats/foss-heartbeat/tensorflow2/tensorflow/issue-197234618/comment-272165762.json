{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/272165762", "html_url": "https://github.com/tensorflow/tensorflow/issues/6460#issuecomment-272165762", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6460", "id": 272165762, "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjE2NTc2Mg==", "user": {"login": "Bobrosoft98", "id": 9952727, "node_id": "MDQ6VXNlcjk5NTI3Mjc=", "avatar_url": "https://avatars3.githubusercontent.com/u/9952727?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bobrosoft98", "html_url": "https://github.com/Bobrosoft98", "followers_url": "https://api.github.com/users/Bobrosoft98/followers", "following_url": "https://api.github.com/users/Bobrosoft98/following{/other_user}", "gists_url": "https://api.github.com/users/Bobrosoft98/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bobrosoft98/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bobrosoft98/subscriptions", "organizations_url": "https://api.github.com/users/Bobrosoft98/orgs", "repos_url": "https://api.github.com/users/Bobrosoft98/repos", "events_url": "https://api.github.com/users/Bobrosoft98/events{/privacy}", "received_events_url": "https://api.github.com/users/Bobrosoft98/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-12T13:42:13Z", "updated_at": "2017-01-12T13:50:06Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=192142\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mrry\">@mrry</a> I run everything on a single machine, the CPU load with one worker is the same as with 30 workers (about 50% on all cores).<br>\nStill, it's not clear for me why Adam has this problem, and other optimizers don't. What do mean these huge \"Mul\" and \"Assign\" blocks on the timeline? Why assigning something takes so much time?<br>\nDoes Adam in TF update the whole embedding matrix at every iteration? This seems unreasonable: only a small number of its rows can be used in a batch.</p>", "body_text": "@mrry I run everything on a single machine, the CPU load with one worker is the same as with 30 workers (about 50% on all cores).\nStill, it's not clear for me why Adam has this problem, and other optimizers don't. What do mean these huge \"Mul\" and \"Assign\" blocks on the timeline? Why assigning something takes so much time?\nDoes Adam in TF update the whole embedding matrix at every iteration? This seems unreasonable: only a small number of its rows can be used in a batch.", "body": "@mrry I run everything on a single machine, the CPU load with one worker is the same as with 30 workers (about 50% on all cores).\r\nStill, it's not clear for me why Adam has this problem, and other optimizers don't. What do mean these huge \"Mul\" and \"Assign\" blocks on the timeline? Why assigning something takes so much time?\r\nDoes Adam in TF update the whole embedding matrix at every iteration? This seems unreasonable: only a small number of its rows can be used in a batch."}