{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6460", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6460/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6460/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6460/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/6460", "id": 197234618, "node_id": "MDU6SXNzdWUxOTcyMzQ2MTg=", "number": 6460, "title": "Slow Adam sparse updates in distributed TF", "user": {"login": "Bobrosoft98", "id": 9952727, "node_id": "MDQ6VXNlcjk5NTI3Mjc=", "avatar_url": "https://avatars3.githubusercontent.com/u/9952727?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bobrosoft98", "html_url": "https://github.com/Bobrosoft98", "followers_url": "https://api.github.com/users/Bobrosoft98/followers", "following_url": "https://api.github.com/users/Bobrosoft98/following{/other_user}", "gists_url": "https://api.github.com/users/Bobrosoft98/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bobrosoft98/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bobrosoft98/subscriptions", "organizations_url": "https://api.github.com/users/Bobrosoft98/orgs", "repos_url": "https://api.github.com/users/Bobrosoft98/repos", "events_url": "https://api.github.com/users/Bobrosoft98/events{/privacy}", "received_events_url": "https://api.github.com/users/Bobrosoft98/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2016-12-22T18:14:13Z", "updated_at": "2018-11-20T04:00:20Z", "closed_at": "2017-03-16T04:18:00Z", "author_association": "NONE", "body_html": "<p>I am trying to train a model with the <strong>tf.nn.embedding_lookup_sparse</strong> operation. Small example: <a href=\"https://gist.github.com/Bobrosoft98/2d639d3924dfbc4ec7bc620fd5a4d480\">https://gist.github.com/Bobrosoft98/2d639d3924dfbc4ec7bc620fd5a4d480</a></p>\n<p>When I run this code with NUM_WORKERS = 1, the output is as follows</p>\n<pre><code>0 calc in 0.0176000595093\n0 apply in 0.184364080429\n0 calc in 0.0167639255524\n0 apply in 0.189659118652\n...\n</code></pre>\n<p>However, when I increase the number of workers to 30, every single process works more than 30 times slower:</p>\n<pre><code>6 calc in 0.432843923569\n11 calc in 0.787642002106\n3 calc in 0.440953016281\n14 calc in 0.377243995667\n20 calc in 0.569782018661\n...\n6 apply in 5.63959908485\n</code></pre>\n<p>The CPU load is only ~50%, so there is a lot of resources available for the computation. This makes me think that sparse updates use locking, even though the <strong>use_locking</strong> flag is set to False by default. There is no such problem with other optimizers (I tried GradientDescentOptimizer and AdadeltaOptimizer). Also if I exclude sparse operations from the graph (commented lines), the problem disappears.</p>\n<h3>What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?</h3>\n<p><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"121453300\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/464\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/464/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/464\">#464</a> - there was mentioned that Adam was slower on sparse updates in general</p>\n<h3>Environment info</h3>\n<p>Operating System: Ubuntu 16.04</p>\n<p>Installed version of CUDA and cuDNN: I used the CPU version</p>\n<p>If installed from binary pip package, provide:</p>\n<ol>\n<li>A link to the pip package you installed: <a href=\"https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.12.0-cp27-none-linux_x86_64.whl\" rel=\"nofollow\">https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.12.0-cp27-none-linux_x86_64.whl</a></li>\n<li>The output from <code>python -c \"import tensorflow; print(tensorflow.__version__)\"</code>.</li>\n</ol>\n<pre><code>$ python -c \"import tensorflow; print(tensorflow.__version__)\"\n0.12.0-rc1\n</code></pre>", "body_text": "I am trying to train a model with the tf.nn.embedding_lookup_sparse operation. Small example: https://gist.github.com/Bobrosoft98/2d639d3924dfbc4ec7bc620fd5a4d480\nWhen I run this code with NUM_WORKERS = 1, the output is as follows\n0 calc in 0.0176000595093\n0 apply in 0.184364080429\n0 calc in 0.0167639255524\n0 apply in 0.189659118652\n...\n\nHowever, when I increase the number of workers to 30, every single process works more than 30 times slower:\n6 calc in 0.432843923569\n11 calc in 0.787642002106\n3 calc in 0.440953016281\n14 calc in 0.377243995667\n20 calc in 0.569782018661\n...\n6 apply in 5.63959908485\n\nThe CPU load is only ~50%, so there is a lot of resources available for the computation. This makes me think that sparse updates use locking, even though the use_locking flag is set to False by default. There is no such problem with other optimizers (I tried GradientDescentOptimizer and AdadeltaOptimizer). Also if I exclude sparse operations from the graph (commented lines), the problem disappears.\nWhat related GitHub issues or StackOverflow threads have you found by searching the web for your problem?\n#464 - there was mentioned that Adam was slower on sparse updates in general\nEnvironment info\nOperating System: Ubuntu 16.04\nInstalled version of CUDA and cuDNN: I used the CPU version\nIf installed from binary pip package, provide:\n\nA link to the pip package you installed: https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.12.0-cp27-none-linux_x86_64.whl\nThe output from python -c \"import tensorflow; print(tensorflow.__version__)\".\n\n$ python -c \"import tensorflow; print(tensorflow.__version__)\"\n0.12.0-rc1", "body": "I am trying to train a model with the **tf.nn.embedding_lookup_sparse** operation. Small example: https://gist.github.com/Bobrosoft98/2d639d3924dfbc4ec7bc620fd5a4d480\r\n\r\nWhen I run this code with NUM_WORKERS = 1, the output is as follows\r\n\r\n```\r\n0 calc in 0.0176000595093\r\n0 apply in 0.184364080429\r\n0 calc in 0.0167639255524\r\n0 apply in 0.189659118652\r\n...\r\n```\r\n\r\nHowever, when I increase the number of workers to 30, every single process works more than 30 times slower:\r\n\r\n```\r\n6 calc in 0.432843923569\r\n11 calc in 0.787642002106\r\n3 calc in 0.440953016281\r\n14 calc in 0.377243995667\r\n20 calc in 0.569782018661\r\n...\r\n6 apply in 5.63959908485\r\n```\r\n\r\nThe CPU load is only ~50%, so there is a lot of resources available for the computation. This makes me think that sparse updates use locking, even though the **use_locking** flag is set to False by default. There is no such problem with other optimizers (I tried GradientDescentOptimizer and AdadeltaOptimizer). Also if I exclude sparse operations from the graph (commented lines), the problem disappears.\r\n\r\n### What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?\r\n\r\nhttps://github.com/tensorflow/tensorflow/issues/464 - there was mentioned that Adam was slower on sparse updates in general\r\n\r\n### Environment info\r\nOperating System: Ubuntu 16.04\r\n\r\nInstalled version of CUDA and cuDNN: I used the CPU version\r\n\r\nIf installed from binary pip package, provide:\r\n\r\n1. A link to the pip package you installed: https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.12.0-cp27-none-linux_x86_64.whl\r\n2. The output from `python -c \"import tensorflow; print(tensorflow.__version__)\"`.\r\n```\r\n$ python -c \"import tensorflow; print(tensorflow.__version__)\"\r\n0.12.0-rc1\r\n```"}