{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/379494093", "html_url": "https://github.com/tensorflow/tensorflow/issues/18275#issuecomment-379494093", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18275", "id": 379494093, "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTQ5NDA5Mw==", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-07T19:39:48Z", "updated_at": "2018-04-07T19:39:48Z", "author_association": "CONTRIBUTOR", "body_html": "<p>The real issue is that TensorFlow binary is pre-baked with a specific architecture instruction set. This makes sense for Google internal deployments -- there's a small number of supported configurations, so it makes sense to maintain a different binary for each configuration. But it makes less sense for python ecosystem where there's a large number of hardware configurations, and pypi doesn't even support architecture specific binaries.</p>\n<p>Other libraries like MKL and PyTorch provide a multi-instruction binary, which use dynamic dispatch to select the most efficient instructions for the architecture. cc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=986732\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/tatianashp\">@tatianashp</a></p>", "body_text": "The real issue is that TensorFlow binary is pre-baked with a specific architecture instruction set. This makes sense for Google internal deployments -- there's a small number of supported configurations, so it makes sense to maintain a different binary for each configuration. But it makes less sense for python ecosystem where there's a large number of hardware configurations, and pypi doesn't even support architecture specific binaries.\nOther libraries like MKL and PyTorch provide a multi-instruction binary, which use dynamic dispatch to select the most efficient instructions for the architecture. cc @tatianashp", "body": "The real issue is that TensorFlow binary is pre-baked with a specific architecture instruction set. This makes sense for Google internal deployments -- there's a small number of supported configurations, so it makes sense to maintain a different binary for each configuration. But it makes less sense for python ecosystem where there's a large number of hardware configurations, and pypi doesn't even support architecture specific binaries.\r\n\r\nOther libraries like MKL and PyTorch provide a multi-instruction binary, which use dynamic dispatch to select the most efficient instructions for the architecture. cc @tatianashp "}