{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/300865712", "html_url": "https://github.com/tensorflow/tensorflow/issues/9842#issuecomment-300865712", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9842", "id": 300865712, "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDg2NTcxMg==", "user": {"login": "alextp", "id": 5061, "node_id": "MDQ6VXNlcjUwNjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alextp", "html_url": "https://github.com/alextp", "followers_url": "https://api.github.com/users/alextp/followers", "following_url": "https://api.github.com/users/alextp/following{/other_user}", "gists_url": "https://api.github.com/users/alextp/gists{/gist_id}", "starred_url": "https://api.github.com/users/alextp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alextp/subscriptions", "organizations_url": "https://api.github.com/users/alextp/orgs", "repos_url": "https://api.github.com/users/alextp/repos", "events_url": "https://api.github.com/users/alextp/events{/privacy}", "received_events_url": "https://api.github.com/users/alextp/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-11T17:47:39Z", "updated_at": "2017-05-11T17:47:39Z", "author_association": "MEMBER", "body_html": "<div class=\"email-fragment\">This looks like something went wrong in the protocol buffer code somewhere.\nWhich is really weird because proto code should never trigger SIGILL. Are\nyou running on a machine which supports all instruction sets you're using\n(avx, avx2, fma, msse3, msse4.1, msse4.2)? M</div>\n<span class=\"email-hidden-toggle\"><a href=\"#\">\u2026</a></span><div class=\"email-hidden-reply\">\n<div class=\"email-quoted-reply\">On Thu, May 11, 2017 at 10:41 AM, Anthony Platanios &lt; ***@***.***&gt; wrote:\n Hi,\n\n When I compile the dynamic library without the optimization flag, using\n the command bazel build //tensorflow:libtensorflow.so, everything works\n well (i.e., I am able to compile it and load it in the Java API). However,\n if I compile with some optimization flags, using the command bazel build\n --config=opt --copt=-mavx --copt=-mavx2 --copt=-mfma --copt=-msse3\n --copt=-msse4.1 --copt=-msse4.2 //tensorflow:libtensorflow.so, the\n library compiles fine (i.e., no errors), but when I try to load it with the\n Java API, I get the following error:\n\n # A fatal error has been detected by the Java Runtime Environment:\n #\n #  SIGILL (0x4) at pc=0x000000012b7670a8, pid=62398, tid=7171\n #\n # JRE version: Java(TM) SE Runtime Environment (8.0_77-b03) (build 1.8.0_77-b03)\n # Java VM: Java HotSpot(TM) 64-Bit Server VM (25.77-b03 mixed mode bsd-amd64 compressed oops)\n # Problematic frame:\n # C  [libtensorflow.so+0x1bb80a8]  _ZN10tensorflow66protobuf_tensorflow_2fcore_2fframework_2fresource_5fhandle_2eproto11TableStruct16InitDefaultsImplEv+0x38\n #\n # Failed to write core dump. Core dumps have been disabled. To enable core dumping, try \"ulimit -c unlimited\" before starting Java again\n #\n # An error report file with more information is saved as:\n # /xxx/tensorflow_scala/hs_err_pid62398.log\n #\n # If you would like to submit a bug report, please visit:\n #   <a href=\"http://bugreport.java.com/bugreport/crash.jsp\">http://bugreport.java.com/bugreport/crash.jsp</a>\n # The crash happened outside the Java Virtual Machine in native code.\n # See problematic frame for where to report the bug.\n\n The relevant part of the error log stack trace is:\n\n Stack: [0x000070000606e000,0x000070000616e000],  sp=0x0000700006166ad0,  free space=994k\n Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)\n C  [libtensorflow.so+0x1bb80a8]  _ZN10tensorflow66protobuf_tensorflow_2fcore_2fframework_2fresource_5fhandle_2eproto11TableStruct16InitDefaultsImplEv+0x38\n C  [libtensorflow.so+0x1d50941]  _ZN6google8protobuf8internal16FunctionClosure03RunEv+0x11\n C  [libtensorflow.so+0x1d512eb]  _ZN6google8protobuf18GoogleOnceInitImplEPlPNS0_7ClosureE+0x3b\n C  [libtensorflow.so+0x1bb8124]  _ZN10tensorflow66protobuf_tensorflow_2fcore_2fframework_2fresource_5fhandle_2eproto12InitDefaultsEv+0x44\n C  [libtensorflow.so+0x1bc9614]  _ZN10tensorflow55protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto11TableStruct16InitDefaultsImplEv+0x24\n C  [libtensorflow.so+0x1d50941]  _ZN6google8protobuf8internal16FunctionClosure03RunEv+0x11\n C  [libtensorflow.so+0x1d512eb]  _ZN6google8protobuf18GoogleOnceInitImplEPlPNS0_7ClosureE+0x3b\n C  [libtensorflow.so+0x1bc9724]  _ZN10tensorflow55protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto12InitDefaultsEv+0x44\n C  [libtensorflow.so+0x1b79447]  _ZN10tensorflow61protobuf_tensorflow_2fcore_2fframework_2fattr_5fvalue_2eproto11TableStruct16InitDefaultsImplEv+0x27\n C  [libtensorflow.so+0x1d50941]  _ZN6google8protobuf8internal16FunctionClosure03RunEv+0x11\n C  [libtensorflow.so+0x1d512eb]  _ZN6google8protobuf18GoogleOnceInitImplEPlPNS0_7ClosureE+0x3b\n C  [libtensorflow.so+0x1b795e4]  _ZN10tensorflow61protobuf_tensorflow_2fcore_2fframework_2fattr_5fvalue_2eproto12InitDefaultsEv+0x44\n C  [libtensorflow.so+0x1ba0354]  _ZN10tensorflow61protobuf_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto11TableStruct16InitDefaultsImplEv+0x24\n C  [libtensorflow.so+0x1d50941]  _ZN6google8protobuf8internal16FunctionClosure03RunEv+0x11\n C  [libtensorflow.so+0x1d512eb]  _ZN6google8protobuf18GoogleOnceInitImplEPlPNS0_7ClosureE+0x3b\n C  [libtensorflow.so+0x1ba0454]  _ZN10tensorflow61protobuf_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto12InitDefaultsEv+0x44\n C  [libtensorflow.so+0x1ba16af]  _ZN10tensorflow9KernelDefC2Ev+0x5f\n C  [libtensorflow.so+0x19793c8]  _ZN10tensorflow16KernelDefBuilderC2EPKc+0x28\n C  [libtensorflow.so+0x10e58e]  _GLOBAL__sub_I_batchtospace_op.cc+0x1e\n C  0x0000000112b39a1b\n C  0x0000000112b39c1e\n C  0x0000000112b354aa\n C  0x0000000112b35441\n C  0x0000000112b34524\n C  0x0000000112b345b9\n C  0x0000000112b297cd\n C  0x0000000112b313ec\n C  [libdyld.dylib+0x2832]  dlopen+0x3b\n V  [libjvm.dylib+0x4820f6]\n V  [libjvm.dylib+0x3456a8]\n C  [libjava.dylib+0x28b0]  Java_java_lang_ClassLoader_00024NativeLibrary_load+0x77\n\n Why is this happening and how could it be fixed?\n\n <a class=\"user-mention\" href=\"https://github.com/alextp\">@alextp</a> &lt;<a href=\"https://github.com/alextp\">https://github.com/alextp</a>&gt; I think it may have to do with\n resources / resource-based variables given the error message, and I think\n you might be knowledgable with respect to that topic. I'm not sure if\n that's the issue though.\n\n Thank you!\n\n P.S. Let me know if the complete error log file would help and I'll post\n it here. :)\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n &lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"228068040\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/9842\" href=\"https://github.com/tensorflow/tensorflow/issues/9842\">#9842</a>&gt;, or mute the thread\n &lt;<a href=\"https://github.com/notifications/unsubscribe-auth/AAATxcGphbOXmBVsHadstEsYLyzbn8P7ks5r40gzgaJpZM4NYU4x\">https://github.com/notifications/unsubscribe-auth/AAATxcGphbOXmBVsHadstEsYLyzbn8P7ks5r40gzgaJpZM4NYU4x</a>&gt;\n .\n</div>\n<div class=\"email-fragment\"></div>\n<div class=\"email-signature-reply\">-- \n - Alex</div>\n</div>", "body_text": "This looks like something went wrong in the protocol buffer code somewhere.\nWhich is really weird because proto code should never trigger SIGILL. Are\nyou running on a machine which supports all instruction sets you're using\n(avx, avx2, fma, msse3, msse4.1, msse4.2)? M\n\u2026\nOn Thu, May 11, 2017 at 10:41 AM, Anthony Platanios < ***@***.***> wrote:\n Hi,\n\n When I compile the dynamic library without the optimization flag, using\n the command bazel build //tensorflow:libtensorflow.so, everything works\n well (i.e., I am able to compile it and load it in the Java API). However,\n if I compile with some optimization flags, using the command bazel build\n --config=opt --copt=-mavx --copt=-mavx2 --copt=-mfma --copt=-msse3\n --copt=-msse4.1 --copt=-msse4.2 //tensorflow:libtensorflow.so, the\n library compiles fine (i.e., no errors), but when I try to load it with the\n Java API, I get the following error:\n\n # A fatal error has been detected by the Java Runtime Environment:\n #\n #  SIGILL (0x4) at pc=0x000000012b7670a8, pid=62398, tid=7171\n #\n # JRE version: Java(TM) SE Runtime Environment (8.0_77-b03) (build 1.8.0_77-b03)\n # Java VM: Java HotSpot(TM) 64-Bit Server VM (25.77-b03 mixed mode bsd-amd64 compressed oops)\n # Problematic frame:\n # C  [libtensorflow.so+0x1bb80a8]  _ZN10tensorflow66protobuf_tensorflow_2fcore_2fframework_2fresource_5fhandle_2eproto11TableStruct16InitDefaultsImplEv+0x38\n #\n # Failed to write core dump. Core dumps have been disabled. To enable core dumping, try \"ulimit -c unlimited\" before starting Java again\n #\n # An error report file with more information is saved as:\n # /xxx/tensorflow_scala/hs_err_pid62398.log\n #\n # If you would like to submit a bug report, please visit:\n #   http://bugreport.java.com/bugreport/crash.jsp\n # The crash happened outside the Java Virtual Machine in native code.\n # See problematic frame for where to report the bug.\n\n The relevant part of the error log stack trace is:\n\n Stack: [0x000070000606e000,0x000070000616e000],  sp=0x0000700006166ad0,  free space=994k\n Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)\n C  [libtensorflow.so+0x1bb80a8]  _ZN10tensorflow66protobuf_tensorflow_2fcore_2fframework_2fresource_5fhandle_2eproto11TableStruct16InitDefaultsImplEv+0x38\n C  [libtensorflow.so+0x1d50941]  _ZN6google8protobuf8internal16FunctionClosure03RunEv+0x11\n C  [libtensorflow.so+0x1d512eb]  _ZN6google8protobuf18GoogleOnceInitImplEPlPNS0_7ClosureE+0x3b\n C  [libtensorflow.so+0x1bb8124]  _ZN10tensorflow66protobuf_tensorflow_2fcore_2fframework_2fresource_5fhandle_2eproto12InitDefaultsEv+0x44\n C  [libtensorflow.so+0x1bc9614]  _ZN10tensorflow55protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto11TableStruct16InitDefaultsImplEv+0x24\n C  [libtensorflow.so+0x1d50941]  _ZN6google8protobuf8internal16FunctionClosure03RunEv+0x11\n C  [libtensorflow.so+0x1d512eb]  _ZN6google8protobuf18GoogleOnceInitImplEPlPNS0_7ClosureE+0x3b\n C  [libtensorflow.so+0x1bc9724]  _ZN10tensorflow55protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto12InitDefaultsEv+0x44\n C  [libtensorflow.so+0x1b79447]  _ZN10tensorflow61protobuf_tensorflow_2fcore_2fframework_2fattr_5fvalue_2eproto11TableStruct16InitDefaultsImplEv+0x27\n C  [libtensorflow.so+0x1d50941]  _ZN6google8protobuf8internal16FunctionClosure03RunEv+0x11\n C  [libtensorflow.so+0x1d512eb]  _ZN6google8protobuf18GoogleOnceInitImplEPlPNS0_7ClosureE+0x3b\n C  [libtensorflow.so+0x1b795e4]  _ZN10tensorflow61protobuf_tensorflow_2fcore_2fframework_2fattr_5fvalue_2eproto12InitDefaultsEv+0x44\n C  [libtensorflow.so+0x1ba0354]  _ZN10tensorflow61protobuf_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto11TableStruct16InitDefaultsImplEv+0x24\n C  [libtensorflow.so+0x1d50941]  _ZN6google8protobuf8internal16FunctionClosure03RunEv+0x11\n C  [libtensorflow.so+0x1d512eb]  _ZN6google8protobuf18GoogleOnceInitImplEPlPNS0_7ClosureE+0x3b\n C  [libtensorflow.so+0x1ba0454]  _ZN10tensorflow61protobuf_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto12InitDefaultsEv+0x44\n C  [libtensorflow.so+0x1ba16af]  _ZN10tensorflow9KernelDefC2Ev+0x5f\n C  [libtensorflow.so+0x19793c8]  _ZN10tensorflow16KernelDefBuilderC2EPKc+0x28\n C  [libtensorflow.so+0x10e58e]  _GLOBAL__sub_I_batchtospace_op.cc+0x1e\n C  0x0000000112b39a1b\n C  0x0000000112b39c1e\n C  0x0000000112b354aa\n C  0x0000000112b35441\n C  0x0000000112b34524\n C  0x0000000112b345b9\n C  0x0000000112b297cd\n C  0x0000000112b313ec\n C  [libdyld.dylib+0x2832]  dlopen+0x3b\n V  [libjvm.dylib+0x4820f6]\n V  [libjvm.dylib+0x3456a8]\n C  [libjava.dylib+0x28b0]  Java_java_lang_ClassLoader_00024NativeLibrary_load+0x77\n\n Why is this happening and how could it be fixed?\n\n @alextp <https://github.com/alextp> I think it may have to do with\n resources / resource-based variables given the error message, and I think\n you might be knowledgable with respect to that topic. I'm not sure if\n that's the issue though.\n\n Thank you!\n\n P.S. Let me know if the complete error log file would help and I'll post\n it here. :)\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#9842>, or mute the thread\n <https://github.com/notifications/unsubscribe-auth/AAATxcGphbOXmBVsHadstEsYLyzbn8P7ks5r40gzgaJpZM4NYU4x>\n .\n\n\n-- \n - Alex", "body": "This looks like something went wrong in the protocol buffer code somewhere.\nWhich is really weird because proto code should never trigger SIGILL. Are\nyou running on a machine which supports all instruction sets you're using\n(avx, avx2, fma, msse3, msse4.1, msse4.2)? M\n\nOn Thu, May 11, 2017 at 10:41 AM, Anthony Platanios <\nnotifications@github.com> wrote:\n\n> Hi,\n>\n> When I compile the dynamic library without the optimization flag, using\n> the command bazel build //tensorflow:libtensorflow.so, everything works\n> well (i.e., I am able to compile it and load it in the Java API). However,\n> if I compile with some optimization flags, using the command bazel build\n> --config=opt --copt=-mavx --copt=-mavx2 --copt=-mfma --copt=-msse3\n> --copt=-msse4.1 --copt=-msse4.2 //tensorflow:libtensorflow.so, the\n> library compiles fine (i.e., no errors), but when I try to load it with the\n> Java API, I get the following error:\n>\n> # A fatal error has been detected by the Java Runtime Environment:\n> #\n> #  SIGILL (0x4) at pc=0x000000012b7670a8, pid=62398, tid=7171\n> #\n> # JRE version: Java(TM) SE Runtime Environment (8.0_77-b03) (build 1.8.0_77-b03)\n> # Java VM: Java HotSpot(TM) 64-Bit Server VM (25.77-b03 mixed mode bsd-amd64 compressed oops)\n> # Problematic frame:\n> # C  [libtensorflow.so+0x1bb80a8]  _ZN10tensorflow66protobuf_tensorflow_2fcore_2fframework_2fresource_5fhandle_2eproto11TableStruct16InitDefaultsImplEv+0x38\n> #\n> # Failed to write core dump. Core dumps have been disabled. To enable core dumping, try \"ulimit -c unlimited\" before starting Java again\n> #\n> # An error report file with more information is saved as:\n> # /xxx/tensorflow_scala/hs_err_pid62398.log\n> #\n> # If you would like to submit a bug report, please visit:\n> #   http://bugreport.java.com/bugreport/crash.jsp\n> # The crash happened outside the Java Virtual Machine in native code.\n> # See problematic frame for where to report the bug.\n>\n> The relevant part of the error log stack trace is:\n>\n> Stack: [0x000070000606e000,0x000070000616e000],  sp=0x0000700006166ad0,  free space=994k\n> Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)\n> C  [libtensorflow.so+0x1bb80a8]  _ZN10tensorflow66protobuf_tensorflow_2fcore_2fframework_2fresource_5fhandle_2eproto11TableStruct16InitDefaultsImplEv+0x38\n> C  [libtensorflow.so+0x1d50941]  _ZN6google8protobuf8internal16FunctionClosure03RunEv+0x11\n> C  [libtensorflow.so+0x1d512eb]  _ZN6google8protobuf18GoogleOnceInitImplEPlPNS0_7ClosureE+0x3b\n> C  [libtensorflow.so+0x1bb8124]  _ZN10tensorflow66protobuf_tensorflow_2fcore_2fframework_2fresource_5fhandle_2eproto12InitDefaultsEv+0x44\n> C  [libtensorflow.so+0x1bc9614]  _ZN10tensorflow55protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto11TableStruct16InitDefaultsImplEv+0x24\n> C  [libtensorflow.so+0x1d50941]  _ZN6google8protobuf8internal16FunctionClosure03RunEv+0x11\n> C  [libtensorflow.so+0x1d512eb]  _ZN6google8protobuf18GoogleOnceInitImplEPlPNS0_7ClosureE+0x3b\n> C  [libtensorflow.so+0x1bc9724]  _ZN10tensorflow55protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto12InitDefaultsEv+0x44\n> C  [libtensorflow.so+0x1b79447]  _ZN10tensorflow61protobuf_tensorflow_2fcore_2fframework_2fattr_5fvalue_2eproto11TableStruct16InitDefaultsImplEv+0x27\n> C  [libtensorflow.so+0x1d50941]  _ZN6google8protobuf8internal16FunctionClosure03RunEv+0x11\n> C  [libtensorflow.so+0x1d512eb]  _ZN6google8protobuf18GoogleOnceInitImplEPlPNS0_7ClosureE+0x3b\n> C  [libtensorflow.so+0x1b795e4]  _ZN10tensorflow61protobuf_tensorflow_2fcore_2fframework_2fattr_5fvalue_2eproto12InitDefaultsEv+0x44\n> C  [libtensorflow.so+0x1ba0354]  _ZN10tensorflow61protobuf_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto11TableStruct16InitDefaultsImplEv+0x24\n> C  [libtensorflow.so+0x1d50941]  _ZN6google8protobuf8internal16FunctionClosure03RunEv+0x11\n> C  [libtensorflow.so+0x1d512eb]  _ZN6google8protobuf18GoogleOnceInitImplEPlPNS0_7ClosureE+0x3b\n> C  [libtensorflow.so+0x1ba0454]  _ZN10tensorflow61protobuf_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto12InitDefaultsEv+0x44\n> C  [libtensorflow.so+0x1ba16af]  _ZN10tensorflow9KernelDefC2Ev+0x5f\n> C  [libtensorflow.so+0x19793c8]  _ZN10tensorflow16KernelDefBuilderC2EPKc+0x28\n> C  [libtensorflow.so+0x10e58e]  _GLOBAL__sub_I_batchtospace_op.cc+0x1e\n> C  0x0000000112b39a1b\n> C  0x0000000112b39c1e\n> C  0x0000000112b354aa\n> C  0x0000000112b35441\n> C  0x0000000112b34524\n> C  0x0000000112b345b9\n> C  0x0000000112b297cd\n> C  0x0000000112b313ec\n> C  [libdyld.dylib+0x2832]  dlopen+0x3b\n> V  [libjvm.dylib+0x4820f6]\n> V  [libjvm.dylib+0x3456a8]\n> C  [libjava.dylib+0x28b0]  Java_java_lang_ClassLoader_00024NativeLibrary_load+0x77\n>\n> Why is this happening and how could it be fixed?\n>\n> @alextp <https://github.com/alextp> I think it may have to do with\n> resources / resource-based variables given the error message, and I think\n> you might be knowledgable with respect to that topic. I'm not sure if\n> that's the issue though.\n>\n> Thank you!\n>\n> P.S. Let me know if the complete error log file would help and I'll post\n> it here. :)\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/tensorflow/issues/9842>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAATxcGphbOXmBVsHadstEsYLyzbn8P7ks5r40gzgaJpZM4NYU4x>\n> .\n>\n\n\n\n-- \n - Alex\n"}