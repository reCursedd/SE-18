{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/205989043", "pull_request_review_id": 141362117, "id": 205989043, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk4OTA0Mw==", "diff_hunk": "@@ -74,7 +74,41 @@ public int numDimensions() {\n    * @return The size of the requested dimension or -1 if it is unknown.\n    */\n   public long size(int i) {\n-    return shape[i];\n+    return shape == null ? -1 : shape[i];\n+  }\n+\n+  /**\n+   * The total number of elements found in a tensor of this shape.\n+   * \n+   * <p>If the size of some dimensions is unknown, the total number of elements cannot be calculated and -1 is returned.\n+   * \n+   * @return the number of elements or -1 if size of some dimension are unknown\n+   */\n+  public int numElements() {\n+    if (shape == null) {\n+       return -1;\n+    }\n+    int total = 1;\n+    for (int i = 0; i < shape.length; ++i) {\n+      // TODO (karllessard): There might be a lossy conversion here from 'long' sizes to 'int' total, but this issue\n+      // seems ubiquitous in the current Java client implementation. It should be adressed all at once.\n+      int size = (int) size(i);\n+      if (size < 0) {\n+        return -1;\n+      }\n+      total *= size;\n+    }\n+    return total;\n+  }\n+\n+  /**\n+   * Returns the shape as an array.\n+   * \n+   * <p>Each element represent the size of the dimension at the given index. For example,\n+   * {@code shape.asArray()[2]} is equal to the size of the third dimension of this shape.\n+   */\n+  public long[] asArray() {", "path": "tensorflow/java/src/main/java/org/tensorflow/Shape.java", "position": null, "original_position": 38, "commit_id": "e3bc2b0e764cacafb1156bc84299790fd9e60b89", "original_commit_id": "e5231a18a70064edc37aa12c7c7bbe9d0412cbd0", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "body": "`Tensor` accepts `long[]` and not `Shape` objects in the spirit of making it clear that `Tensor`s must be created with fully known shapes (and `Shape` objects can also represent partially known shapes). For the same reason, `Tensor.shape` returns a `long[]` and not a `Shape`.\r\n\r\nThus, I'm not a big fan of changing the signature of the `Tensor` factory methods to accept partially known shapes.", "created_at": "2018-07-29T22:12:33Z", "updated_at": "2018-08-03T19:04:27Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/21092#discussion_r205989043", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21092", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/205989043"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/21092#discussion_r205989043"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21092"}}, "body_html": "<p><code>Tensor</code> accepts <code>long[]</code> and not <code>Shape</code> objects in the spirit of making it clear that <code>Tensor</code>s must be created with fully known shapes (and <code>Shape</code> objects can also represent partially known shapes). For the same reason, <code>Tensor.shape</code> returns a <code>long[]</code> and not a <code>Shape</code>.</p>\n<p>Thus, I'm not a big fan of changing the signature of the <code>Tensor</code> factory methods to accept partially known shapes.</p>", "body_text": "Tensor accepts long[] and not Shape objects in the spirit of making it clear that Tensors must be created with fully known shapes (and Shape objects can also represent partially known shapes). For the same reason, Tensor.shape returns a long[] and not a Shape.\nThus, I'm not a big fan of changing the signature of the Tensor factory methods to accept partially known shapes.", "in_reply_to_id": 205208547}