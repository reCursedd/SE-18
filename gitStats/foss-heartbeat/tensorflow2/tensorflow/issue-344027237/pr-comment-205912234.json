{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/205912234", "pull_request_review_id": 141284381, "id": 205912234, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTkxMjIzNA==", "diff_hunk": "@@ -74,7 +74,41 @@ public int numDimensions() {\n    * @return The size of the requested dimension or -1 if it is unknown.\n    */\n   public long size(int i) {\n-    return shape[i];\n+    return shape == null ? -1 : shape[i];\n+  }\n+\n+  /**\n+   * The total number of elements found in a tensor of this shape.\n+   * \n+   * <p>If the size of some dimensions is unknown, the total number of elements cannot be calculated and -1 is returned.\n+   * \n+   * @return the number of elements or -1 if size of some dimension are unknown\n+   */\n+  public int numElements() {\n+    if (shape == null) {\n+       return -1;\n+    }\n+    int total = 1;\n+    for (int i = 0; i < shape.length; ++i) {\n+      // TODO (karllessard): There might be a lossy conversion here from 'long' sizes to 'int' total, but this issue", "path": "tensorflow/java/src/main/java/org/tensorflow/Shape.java", "position": null, "original_position": 21, "commit_id": "e3bc2b0e764cacafb1156bc84299790fd9e60b89", "original_commit_id": "e5231a18a70064edc37aa12c7c7bbe9d0412cbd0", "user": {"login": "karllessard", "id": 10109534, "node_id": "MDQ6VXNlcjEwMTA5NTM0", "avatar_url": "https://avatars3.githubusercontent.com/u/10109534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karllessard", "html_url": "https://github.com/karllessard", "followers_url": "https://api.github.com/users/karllessard/followers", "following_url": "https://api.github.com/users/karllessard/following{/other_user}", "gists_url": "https://api.github.com/users/karllessard/gists{/gist_id}", "starred_url": "https://api.github.com/users/karllessard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karllessard/subscriptions", "organizations_url": "https://api.github.com/users/karllessard/orgs", "repos_url": "https://api.github.com/users/karllessard/repos", "events_url": "https://api.github.com/users/karllessard/events{/privacy}", "received_events_url": "https://api.github.com/users/karllessard/received_events", "type": "User", "site_admin": false}, "body": "That's because we use Java nio buffers to transport the data, such as [`FloatBuffer`](https://docs.oracle.com/javase/7/docs/api/java/nio/FloatBuffer.html), and their `allocate` method takes an `int` as parameter. So I guess it is not possible to use such buffers for very large tensors. \r\n\r\nI've been hesitant too, I can convert the `long` to `int` at tensor creation instead, but I left a note there that the issue should be addressed overall the clients because many other places does that lossy conversion (e.g. `Tensor#numElements`). I'll move that note elsewhere I guess?", "created_at": "2018-07-27T22:16:08Z", "updated_at": "2018-08-03T19:04:27Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/21092#discussion_r205912234", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21092", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/205912234"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/21092#discussion_r205912234"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21092"}}, "body_html": "<p>That's because we use Java nio buffers to transport the data, such as <a href=\"https://docs.oracle.com/javase/7/docs/api/java/nio/FloatBuffer.html\" rel=\"nofollow\"><code>FloatBuffer</code></a>, and their <code>allocate</code> method takes an <code>int</code> as parameter. So I guess it is not possible to use such buffers for very large tensors.</p>\n<p>I've been hesitant too, I can convert the <code>long</code> to <code>int</code> at tensor creation instead, but I left a note there that the issue should be addressed overall the clients because many other places does that lossy conversion (e.g. <code>Tensor#numElements</code>). I'll move that note elsewhere I guess?</p>", "body_text": "That's because we use Java nio buffers to transport the data, such as FloatBuffer, and their allocate method takes an int as parameter. So I guess it is not possible to use such buffers for very large tensors.\nI've been hesitant too, I can convert the long to int at tensor creation instead, but I left a note there that the issue should be addressed overall the clients because many other places does that lossy conversion (e.g. Tensor#numElements). I'll move that note elsewhere I guess?", "in_reply_to_id": 204850828}