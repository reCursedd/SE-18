{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/206367945", "pull_request_review_id": 141769916, "id": 206367945, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjM2Nzk0NQ==", "diff_hunk": "@@ -64,10 +48,24 @@\n    * @param scope is a scope used to add the underlying operation.\n    * @param shape the tensor shape.\n    * @param data a buffer containing the tensor data.\n+   * @return an integer constant\n    * @throws IllegalArgumentException If the tensor shape is not compatible with the buffer\n    */\n-  public static Constant<Integer> create(Scope scope, long[] shape, IntBuffer data) {\n-    try (Tensor<Integer> value = Tensor.create(shape, data)) {\n+  public static Constant<Integer> create(Scope scope, Shape shape, IntBuffer data) {", "path": "tensorflow/java/src/main/java/org/tensorflow/op/core/Constant.java", "position": null, "original_position": 52, "commit_id": "e3bc2b0e764cacafb1156bc84299790fd9e60b89", "original_commit_id": "e5231a18a70064edc37aa12c7c7bbe9d0412cbd0", "user": {"login": "karllessard", "id": 10109534, "node_id": "MDQ6VXNlcjEwMTA5NTM0", "avatar_url": "https://avatars3.githubusercontent.com/u/10109534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karllessard", "html_url": "https://github.com/karllessard", "followers_url": "https://api.github.com/users/karllessard/followers", "following_url": "https://api.github.com/users/karllessard/following{/other_user}", "gists_url": "https://api.github.com/users/karllessard/gists{/gist_id}", "starred_url": "https://api.github.com/users/karllessard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karllessard/subscriptions", "organizations_url": "https://api.github.com/users/karllessard/orgs", "repos_url": "https://api.github.com/users/karllessard/repos", "events_url": "https://api.github.com/users/karllessard/events{/privacy}", "received_events_url": "https://api.github.com/users/karllessard/received_events", "type": "User", "site_admin": false}, "body": "Close yes, I had in mind something like that, hiding completely the arrays:\r\n```\r\npublic final class KnownShape implements Shape {\r\n    public static KnownShape make(long...) { ... }\r\n    ...\r\n    public long numElements() { ... }\r\n    ...\r\n}\r\n\r\npublic final class Tensor {\r\n    ...\r\n    public KnownShape shape() { ... }\r\n    ...\r\n}\r\n\r\npublic final class Zeros<T> implements Op, Operand<T> {\r\n   ...\r\n   public static <T> Zeros<T> create(Scope scope, Class<T> type, KnownShape shape) { ... }\r\n   ...\r\n}\r\n```\r\nand so on. I just find it more clear that we are dealing with the \"known\" constraint of the shape and easier to provide utilities around shapes in general.\r\n\r\nNot arguing here by the way, just find the discussion interesting :)", "created_at": "2018-07-31T01:04:30Z", "updated_at": "2018-08-03T19:04:27Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/21092#discussion_r206367945", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21092", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/206367945"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/21092#discussion_r206367945"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21092"}}, "body_html": "<p>Close yes, I had in mind something like that, hiding completely the arrays:</p>\n<pre><code>public final class KnownShape implements Shape {\n    public static KnownShape make(long...) { ... }\n    ...\n    public long numElements() { ... }\n    ...\n}\n\npublic final class Tensor {\n    ...\n    public KnownShape shape() { ... }\n    ...\n}\n\npublic final class Zeros&lt;T&gt; implements Op, Operand&lt;T&gt; {\n   ...\n   public static &lt;T&gt; Zeros&lt;T&gt; create(Scope scope, Class&lt;T&gt; type, KnownShape shape) { ... }\n   ...\n}\n</code></pre>\n<p>and so on. I just find it more clear that we are dealing with the \"known\" constraint of the shape and easier to provide utilities around shapes in general.</p>\n<p>Not arguing here by the way, just find the discussion interesting :)</p>", "body_text": "Close yes, I had in mind something like that, hiding completely the arrays:\npublic final class KnownShape implements Shape {\n    public static KnownShape make(long...) { ... }\n    ...\n    public long numElements() { ... }\n    ...\n}\n\npublic final class Tensor {\n    ...\n    public KnownShape shape() { ... }\n    ...\n}\n\npublic final class Zeros<T> implements Op, Operand<T> {\n   ...\n   public static <T> Zeros<T> create(Scope scope, Class<T> type, KnownShape shape) { ... }\n   ...\n}\n\nand so on. I just find it more clear that we are dealing with the \"known\" constraint of the shape and easier to provide utilities around shapes in general.\nNot arguing here by the way, just find the discussion interesting :)", "in_reply_to_id": 205212326}