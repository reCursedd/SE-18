{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/206287723", "pull_request_review_id": 141675229, "id": 206287723, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjI4NzcyMw==", "diff_hunk": "@@ -64,10 +48,24 @@\n    * @param scope is a scope used to add the underlying operation.\n    * @param shape the tensor shape.\n    * @param data a buffer containing the tensor data.\n+   * @return an integer constant\n    * @throws IllegalArgumentException If the tensor shape is not compatible with the buffer\n    */\n-  public static Constant<Integer> create(Scope scope, long[] shape, IntBuffer data) {\n-    try (Tensor<Integer> value = Tensor.create(shape, data)) {\n+  public static Constant<Integer> create(Scope scope, Shape shape, IntBuffer data) {", "path": "tensorflow/java/src/main/java/org/tensorflow/op/core/Constant.java", "position": null, "original_position": 52, "commit_id": "e3bc2b0e764cacafb1156bc84299790fd9e60b89", "original_commit_id": "e5231a18a70064edc37aa12c7c7bbe9d0412cbd0", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "body": "To make sure I understand your proposal, you're suggesting that we use `Shape` instead of `long[]` everywhere (e.g., `Tensor.shape()` should return a `Shape`, and the factory functions should accept `Shape` instead of `long[]`), right?\r\n\r\nYou mention that the current separate \"could lead to confusion since there are two ways to represent the same thing\" - but, at least the way I was thinking about it, we represent them differently because they are *different* things :). The shape of a `Tensor` is concrete like the `.length`s of an array. While a `Shape` object is used to represent a pattern - and these patterns are consumed in specific contexts (like attributes of an operation). Hence, you can easily convert one way (`Shape.make()`), but not the other. \r\n\r\nNot a perfect analogy, but something along the lines of a `String` vs. `java.util.regex.Pattern`, or an `int` vs. a `BigInteger`. \r\n\r\nThat said, perhaps I'm missing something. Some concrete examples of where this distinction is really hurtful will help. Or perhaps you can share some ideas on what kinds of flexibility are you thinking of for future usage?", "created_at": "2018-07-30T19:08:39Z", "updated_at": "2018-08-03T19:04:27Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/21092#discussion_r206287723", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21092", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/206287723"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/21092#discussion_r206287723"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21092"}}, "body_html": "<p>To make sure I understand your proposal, you're suggesting that we use <code>Shape</code> instead of <code>long[]</code> everywhere (e.g., <code>Tensor.shape()</code> should return a <code>Shape</code>, and the factory functions should accept <code>Shape</code> instead of <code>long[]</code>), right?</p>\n<p>You mention that the current separate \"could lead to confusion since there are two ways to represent the same thing\" - but, at least the way I was thinking about it, we represent them differently because they are <em>different</em> things :). The shape of a <code>Tensor</code> is concrete like the <code>.length</code>s of an array. While a <code>Shape</code> object is used to represent a pattern - and these patterns are consumed in specific contexts (like attributes of an operation). Hence, you can easily convert one way (<code>Shape.make()</code>), but not the other.</p>\n<p>Not a perfect analogy, but something along the lines of a <code>String</code> vs. <code>java.util.regex.Pattern</code>, or an <code>int</code> vs. a <code>BigInteger</code>.</p>\n<p>That said, perhaps I'm missing something. Some concrete examples of where this distinction is really hurtful will help. Or perhaps you can share some ideas on what kinds of flexibility are you thinking of for future usage?</p>", "body_text": "To make sure I understand your proposal, you're suggesting that we use Shape instead of long[] everywhere (e.g., Tensor.shape() should return a Shape, and the factory functions should accept Shape instead of long[]), right?\nYou mention that the current separate \"could lead to confusion since there are two ways to represent the same thing\" - but, at least the way I was thinking about it, we represent them differently because they are different things :). The shape of a Tensor is concrete like the .lengths of an array. While a Shape object is used to represent a pattern - and these patterns are consumed in specific contexts (like attributes of an operation). Hence, you can easily convert one way (Shape.make()), but not the other.\nNot a perfect analogy, but something along the lines of a String vs. java.util.regex.Pattern, or an int vs. a BigInteger.\nThat said, perhaps I'm missing something. Some concrete examples of where this distinction is really hurtful will help. Or perhaps you can share some ideas on what kinds of flexibility are you thinking of for future usage?", "in_reply_to_id": 205212326}