{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/205212326", "pull_request_review_id": 140004346, "id": 205212326, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTIxMjMyNg==", "diff_hunk": "@@ -64,10 +48,24 @@\n    * @param scope is a scope used to add the underlying operation.\n    * @param shape the tensor shape.\n    * @param data a buffer containing the tensor data.\n+   * @return an integer constant\n    * @throws IllegalArgumentException If the tensor shape is not compatible with the buffer\n    */\n-  public static Constant<Integer> create(Scope scope, long[] shape, IntBuffer data) {\n-    try (Tensor<Integer> value = Tensor.create(shape, data)) {\n+  public static Constant<Integer> create(Scope scope, Shape shape, IntBuffer data) {", "path": "tensorflow/java/src/main/java/org/tensorflow/op/core/Constant.java", "position": null, "original_position": 52, "commit_id": "e3bc2b0e764cacafb1156bc84299790fd9e60b89", "original_commit_id": "e5231a18a70064edc37aa12c7c7bbe9d0412cbd0", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "body": "I'm sure I'm missing something, but why is the change from `long[]` to `Shape` needed?\r\n`Shape` can represent partially known shapes (unknown rank, or some dimensions unknown). In the API so far we've been using `Shape` only in places where it is okay to have a partially known shape, while `long[]` where the shape is fully known (the assumption being that all elements of the array are >= 0).\r\n\r\nIn these `create()` functions, we want fully known shapes, right?", "created_at": "2018-07-25T18:15:33Z", "updated_at": "2018-08-03T19:04:27Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/21092#discussion_r205212326", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21092", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/205212326"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/21092#discussion_r205212326"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21092"}}, "body_html": "<p>I'm sure I'm missing something, but why is the change from <code>long[]</code> to <code>Shape</code> needed?<br>\n<code>Shape</code> can represent partially known shapes (unknown rank, or some dimensions unknown). In the API so far we've been using <code>Shape</code> only in places where it is okay to have a partially known shape, while <code>long[]</code> where the shape is fully known (the assumption being that all elements of the array are &gt;= 0).</p>\n<p>In these <code>create()</code> functions, we want fully known shapes, right?</p>", "body_text": "I'm sure I'm missing something, but why is the change from long[] to Shape needed?\nShape can represent partially known shapes (unknown rank, or some dimensions unknown). In the API so far we've been using Shape only in places where it is okay to have a partially known shape, while long[] where the shape is fully known (the assumption being that all elements of the array are >= 0).\nIn these create() functions, we want fully known shapes, right?"}