{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/206372745", "pull_request_review_id": 141774916, "id": 206372745, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjM3Mjc0NQ==", "diff_hunk": "@@ -64,10 +48,24 @@\n    * @param scope is a scope used to add the underlying operation.\n    * @param shape the tensor shape.\n    * @param data a buffer containing the tensor data.\n+   * @return an integer constant\n    * @throws IllegalArgumentException If the tensor shape is not compatible with the buffer\n    */\n-  public static Constant<Integer> create(Scope scope, long[] shape, IntBuffer data) {\n-    try (Tensor<Integer> value = Tensor.create(shape, data)) {\n+  public static Constant<Integer> create(Scope scope, Shape shape, IntBuffer data) {", "path": "tensorflow/java/src/main/java/org/tensorflow/op/core/Constant.java", "position": null, "original_position": 52, "commit_id": "e3bc2b0e764cacafb1156bc84299790fd9e60b89", "original_commit_id": "e5231a18a70064edc37aa12c7c7bbe9d0412cbd0", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "body": "The arrays (or at least the values of individual dimensions) will be useful since they have meaning (e..g, batch size, number of channels in an image, sequence length etc.). So, if we hide that, we'll want to add accessors for each dimension.\r\n\r\nI guess there are some utility functions (like `numElements`, or perhaps `rank`, or `equals` overrides or something) that may be nice to have. However, I feel that at this stage having a class for this is overkill. Let's see some more usage / pain with `long[]` before we go that route", "created_at": "2018-07-31T01:37:25Z", "updated_at": "2018-08-03T19:04:27Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/21092#discussion_r206372745", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21092", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/206372745"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/21092#discussion_r206372745"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21092"}}, "body_html": "<p>The arrays (or at least the values of individual dimensions) will be useful since they have meaning (e..g, batch size, number of channels in an image, sequence length etc.). So, if we hide that, we'll want to add accessors for each dimension.</p>\n<p>I guess there are some utility functions (like <code>numElements</code>, or perhaps <code>rank</code>, or <code>equals</code> overrides or something) that may be nice to have. However, I feel that at this stage having a class for this is overkill. Let's see some more usage / pain with <code>long[]</code> before we go that route</p>", "body_text": "The arrays (or at least the values of individual dimensions) will be useful since they have meaning (e..g, batch size, number of channels in an image, sequence length etc.). So, if we hide that, we'll want to add accessors for each dimension.\nI guess there are some utility functions (like numElements, or perhaps rank, or equals overrides or something) that may be nice to have. However, I feel that at this stage having a class for this is overkill. Let's see some more usage / pain with long[] before we go that route", "in_reply_to_id": 205212326}