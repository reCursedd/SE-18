{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/206754367", "pull_request_review_id": 142226919, "id": 206754367, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjc1NDM2Nw==", "diff_hunk": "@@ -0,0 +1,56 @@\n+package org.tensorflow.op.core;\n+\n+import java.nio.ByteBuffer;\n+\n+import org.tensorflow.DataType;\n+import org.tensorflow.Operand;\n+import org.tensorflow.Output;\n+import org.tensorflow.Shape;\n+import org.tensorflow.op.Op;\n+import org.tensorflow.op.Scope;\n+import org.tensorflow.op.annotation.Operator;\n+\n+/**\n+ * An operator creating a constant initialized with zeros w.r.t its type and shape.\n+ *\n+ * @param <T> constant type\n+ */\n+@Operator\n+public class Zeros<T> implements Op, Operand<T> {", "path": "tensorflow/java/src/main/java/org/tensorflow/op/core/Zeros.java", "position": 37, "original_position": 19, "commit_id": "e3bc2b0e764cacafb1156bc84299790fd9e60b89", "original_commit_id": "e5231a18a70064edc37aa12c7c7bbe9d0412cbd0", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "body": "Yes, `tf.zeros([2, 2])` creates a shape tensor out of the array parameter. In fact, _all_ Python APIs create tensors where appropriate out of the arguments. For example, `tf.matmul([[1]], [[2]])` will result in the exact same graph as `tf.matmul(tf.constant([[1]]), tf.constant([[2]]))`, since the Python APIs convert the arguments to `tf.Tensor` objects wherever possible. To do the same in Java would be something like using `Object` for all arguments :):\r\n\r\n```java\r\npublic Tensor<T> matmul(Object a, Object b) throws Exception {\r\n  Output<T> aTensor = convertToOutputOrRaiseException(a);\r\n  Output<T> bTensor = convertToOutputOrRaiseException(b);\r\n  ...\r\n}\r\n```\r\n\r\nSo, in that sense `Zeros` is no more special than any of the other existing ops - `Add`, `MatMul` etc. \r\n\r\nAdding overrides in the `Constant` operator that parallel the ones in [`Tensors.create`](https://www.tensorflow.org/api_docs/java/reference/org/tensorflow/Tensors) seems fine to me.\r\n\r\n", "created_at": "2018-08-01T04:49:42Z", "updated_at": "2018-08-03T19:04:27Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/21092#discussion_r206754367", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21092", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/206754367"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/21092#discussion_r206754367"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21092"}}, "body_html": "<p>Yes, <code>tf.zeros([2, 2])</code> creates a shape tensor out of the array parameter. In fact, <em>all</em> Python APIs create tensors where appropriate out of the arguments. For example, <code>tf.matmul([[1]], [[2]])</code> will result in the exact same graph as <code>tf.matmul(tf.constant([[1]]), tf.constant([[2]]))</code>, since the Python APIs convert the arguments to <code>tf.Tensor</code> objects wherever possible. To do the same in Java would be something like using <code>Object</code> for all arguments :):</p>\n<div class=\"highlight highlight-source-java\"><pre><span class=\"pl-k\">public</span> <span class=\"pl-k\">Tensor&lt;<span class=\"pl-smi\">T</span>&gt;</span> matmul(<span class=\"pl-smi\">Object</span> a, <span class=\"pl-smi\">Object</span> b) throws <span class=\"pl-smi\">Exception</span> {\n  <span class=\"pl-k\">Output&lt;<span class=\"pl-smi\">T</span>&gt;</span> aTensor <span class=\"pl-k\">=</span> convertToOutputOrRaiseException(a);\n  <span class=\"pl-k\">Output&lt;<span class=\"pl-smi\">T</span>&gt;</span> bTensor <span class=\"pl-k\">=</span> convertToOutputOrRaiseException(b);\n  <span class=\"pl-c1\">...</span>\n}</pre></div>\n<p>So, in that sense <code>Zeros</code> is no more special than any of the other existing ops - <code>Add</code>, <code>MatMul</code> etc.</p>\n<p>Adding overrides in the <code>Constant</code> operator that parallel the ones in <a href=\"https://www.tensorflow.org/api_docs/java/reference/org/tensorflow/Tensors\" rel=\"nofollow\"><code>Tensors.create</code></a> seems fine to me.</p>", "body_text": "Yes, tf.zeros([2, 2]) creates a shape tensor out of the array parameter. In fact, all Python APIs create tensors where appropriate out of the arguments. For example, tf.matmul([[1]], [[2]]) will result in the exact same graph as tf.matmul(tf.constant([[1]]), tf.constant([[2]])), since the Python APIs convert the arguments to tf.Tensor objects wherever possible. To do the same in Java would be something like using Object for all arguments :):\npublic Tensor<T> matmul(Object a, Object b) throws Exception {\n  Output<T> aTensor = convertToOutputOrRaiseException(a);\n  Output<T> bTensor = convertToOutputOrRaiseException(b);\n  ...\n}\nSo, in that sense Zeros is no more special than any of the other existing ops - Add, MatMul etc.\nAdding overrides in the Constant operator that parallel the ones in Tensors.create seems fine to me.", "in_reply_to_id": 205214147}