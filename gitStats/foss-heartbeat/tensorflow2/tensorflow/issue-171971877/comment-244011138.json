{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/244011138", "html_url": "https://github.com/tensorflow/tensorflow/issues/3907#issuecomment-244011138", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3907", "id": 244011138, "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDAxMTEzOA==", "user": {"login": "pfllo", "id": 5235521, "node_id": "MDQ6VXNlcjUyMzU1MjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/5235521?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pfllo", "html_url": "https://github.com/pfllo", "followers_url": "https://api.github.com/users/pfllo/followers", "following_url": "https://api.github.com/users/pfllo/following{/other_user}", "gists_url": "https://api.github.com/users/pfllo/gists{/gist_id}", "starred_url": "https://api.github.com/users/pfllo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pfllo/subscriptions", "organizations_url": "https://api.github.com/users/pfllo/orgs", "repos_url": "https://api.github.com/users/pfllo/repos", "events_url": "https://api.github.com/users/pfllo/events{/privacy}", "received_events_url": "https://api.github.com/users/pfllo/received_events", "type": "User", "site_admin": false}, "created_at": "2016-09-01T08:27:37Z", "updated_at": "2016-09-01T08:27:37Z", "author_association": "NONE", "body_html": "<p>I tried evaluating <code>IndexedSlices.indices</code> and <code>IndexedSlices.values</code> every iteration and accumulating them outside of the graph. This makes my program 2x faster. Although not elegant, this seems like a feasible workaround for now.</p>", "body_text": "I tried evaluating IndexedSlices.indices and IndexedSlices.values every iteration and accumulating them outside of the graph. This makes my program 2x faster. Although not elegant, this seems like a feasible workaround for now.", "body": "I tried evaluating `IndexedSlices.indices` and `IndexedSlices.values` every iteration and accumulating them outside of the graph. This makes my program 2x faster. Although not elegant, this seems like a feasible workaround for now.\n"}