{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3907", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3907/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3907/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3907/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/3907", "id": 171971877, "node_id": "MDU6SXNzdWUxNzE5NzE4Nzc=", "number": 3907, "title": "Feature Request: Sparse Variables", "user": {"login": "MohammadSamragh", "id": 17733504, "node_id": "MDQ6VXNlcjE3NzMzNTA0", "avatar_url": "https://avatars0.githubusercontent.com/u/17733504?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MohammadSamragh", "html_url": "https://github.com/MohammadSamragh", "followers_url": "https://api.github.com/users/MohammadSamragh/followers", "following_url": "https://api.github.com/users/MohammadSamragh/following{/other_user}", "gists_url": "https://api.github.com/users/MohammadSamragh/gists{/gist_id}", "starred_url": "https://api.github.com/users/MohammadSamragh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MohammadSamragh/subscriptions", "organizations_url": "https://api.github.com/users/MohammadSamragh/orgs", "repos_url": "https://api.github.com/users/MohammadSamragh/repos", "events_url": "https://api.github.com/users/MohammadSamragh/events{/privacy}", "received_events_url": "https://api.github.com/users/MohammadSamragh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "alextp", "id": 5061, "node_id": "MDQ6VXNlcjUwNjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alextp", "html_url": "https://github.com/alextp", "followers_url": "https://api.github.com/users/alextp/followers", "following_url": "https://api.github.com/users/alextp/following{/other_user}", "gists_url": "https://api.github.com/users/alextp/gists{/gist_id}", "starred_url": "https://api.github.com/users/alextp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alextp/subscriptions", "organizations_url": "https://api.github.com/users/alextp/orgs", "repos_url": "https://api.github.com/users/alextp/repos", "events_url": "https://api.github.com/users/alextp/events{/privacy}", "received_events_url": "https://api.github.com/users/alextp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "alextp", "id": 5061, "node_id": "MDQ6VXNlcjUwNjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alextp", "html_url": "https://github.com/alextp", "followers_url": "https://api.github.com/users/alextp/followers", "following_url": "https://api.github.com/users/alextp/following{/other_user}", "gists_url": "https://api.github.com/users/alextp/gists{/gist_id}", "starred_url": "https://api.github.com/users/alextp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alextp/subscriptions", "organizations_url": "https://api.github.com/users/alextp/orgs", "repos_url": "https://api.github.com/users/alextp/repos", "events_url": "https://api.github.com/users/alextp/events{/privacy}", "received_events_url": "https://api.github.com/users/alextp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 25, "created_at": "2016-08-18T18:44:07Z", "updated_at": "2018-05-15T20:37:25Z", "closed_at": "2017-01-27T18:10:26Z", "author_association": "NONE", "body_html": "<p>I want to train a sparse model like this:</p>\n<pre><code>Param=tf.Variable(tf.SparceTensor(indices,values,shape))\ncost=some_function_of_Params\n</code></pre>\n<p>tf.Variable(tf.SparseTensor) generates error:</p>\n<p><code>Expected binary or unicode string, got &lt;tensorflow.python.framework.ops.SparseTensor object at 0x7f994788a550&gt;</code></p>\n<p>My solution was to use dense matrices as variables, mask the gradients and then apply them (mask is a tensor containing zeros and ones):</p>\n<pre><code>init=a_dense_matrix\n\nparam=tf.variable(init)\n\ncost=some_function_of_param\n\nmask=a_dense_matrix_shaped_just_like_param\n\nmask=tf.constant(mask)\n\noptimizer=tf.GradientDescentOptimizer(learning_rate=0.01)\n\ngrad=optimizer.compute_gradients(cost)\n\nmasked_grad=tf.mul(grad,mask)\n\nupdate_rule=optimizer.apply_gradients(masked_grad)\n</code></pre>\n<p>This however includes lots of redundant gradient computations and zero_masking multiplications. Doing updates on sparse variables instead of dense variables can speedup the training. Is there a plan to make it possible that sparse tensors could be used as variables in the graph?</p>", "body_text": "I want to train a sparse model like this:\nParam=tf.Variable(tf.SparceTensor(indices,values,shape))\ncost=some_function_of_Params\n\ntf.Variable(tf.SparseTensor) generates error:\nExpected binary or unicode string, got <tensorflow.python.framework.ops.SparseTensor object at 0x7f994788a550>\nMy solution was to use dense matrices as variables, mask the gradients and then apply them (mask is a tensor containing zeros and ones):\ninit=a_dense_matrix\n\nparam=tf.variable(init)\n\ncost=some_function_of_param\n\nmask=a_dense_matrix_shaped_just_like_param\n\nmask=tf.constant(mask)\n\noptimizer=tf.GradientDescentOptimizer(learning_rate=0.01)\n\ngrad=optimizer.compute_gradients(cost)\n\nmasked_grad=tf.mul(grad,mask)\n\nupdate_rule=optimizer.apply_gradients(masked_grad)\n\nThis however includes lots of redundant gradient computations and zero_masking multiplications. Doing updates on sparse variables instead of dense variables can speedup the training. Is there a plan to make it possible that sparse tensors could be used as variables in the graph?", "body": "I want to train a sparse model like this:\n\n```\nParam=tf.Variable(tf.SparceTensor(indices,values,shape))\ncost=some_function_of_Params\n```\n\ntf.Variable(tf.SparseTensor) generates error:\n\n`Expected binary or unicode string, got <tensorflow.python.framework.ops.SparseTensor object at 0x7f994788a550>`\n\nMy solution was to use dense matrices as variables, mask the gradients and then apply them (mask is a tensor containing zeros and ones):\n\n```\ninit=a_dense_matrix\n\nparam=tf.variable(init)\n\ncost=some_function_of_param\n\nmask=a_dense_matrix_shaped_just_like_param\n\nmask=tf.constant(mask)\n\noptimizer=tf.GradientDescentOptimizer(learning_rate=0.01)\n\ngrad=optimizer.compute_gradients(cost)\n\nmasked_grad=tf.mul(grad,mask)\n\nupdate_rule=optimizer.apply_gradients(masked_grad)\n```\n\nThis however includes lots of redundant gradient computations and zero_masking multiplications. Doing updates on sparse variables instead of dense variables can speedup the training. Is there a plan to make it possible that sparse tensors could be used as variables in the graph? \n"}