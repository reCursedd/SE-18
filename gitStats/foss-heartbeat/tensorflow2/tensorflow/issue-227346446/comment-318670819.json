{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/318670819", "html_url": "https://github.com/tensorflow/tensorflow/pull/9792#issuecomment-318670819", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9792", "id": 318670819, "node_id": "MDEyOklzc3VlQ29tbWVudDMxODY3MDgxOQ==", "user": {"login": "lissyx", "id": 1645737, "node_id": "MDQ6VXNlcjE2NDU3Mzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1645737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lissyx", "html_url": "https://github.com/lissyx", "followers_url": "https://api.github.com/users/lissyx/followers", "following_url": "https://api.github.com/users/lissyx/following{/other_user}", "gists_url": "https://api.github.com/users/lissyx/gists{/gist_id}", "starred_url": "https://api.github.com/users/lissyx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lissyx/subscriptions", "organizations_url": "https://api.github.com/users/lissyx/orgs", "repos_url": "https://api.github.com/users/lissyx/repos", "events_url": "https://api.github.com/users/lissyx/events{/privacy}", "received_events_url": "https://api.github.com/users/lissyx/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-28T14:43:53Z", "updated_at": "2017-07-28T14:43:53Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=463737\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vrv\">@vrv</a> Well, it is not really that I am stating this PR is wrong, I'm not really in position to judge, and it does indeed fix the issue. However, this will add the node input for any case, not just the broken control flow ones. And experience proved that to come with a non neglicitble perf regression, not only documented by me but others on <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"204298904\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/7162\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/7162/hovercard?comment_id=307994191&amp;comment_type=issue_comment\" href=\"https://github.com/tensorflow/tensorflow/issues/7162#issuecomment-307994191\">#7162 (comment)</a>.</p>\n<p>Now, maybe it is wrong to add the input only on /some nodes/ and the correct fix is indeed the one in this PR, or maybe we just need the PR to be more specific to those nodes. I tried to do something nicer than what was suggested by the very same author of the PR: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"204298904\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/7162\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/7162/hovercard?comment_id=307994191&amp;comment_type=issue_comment\" href=\"https://github.com/tensorflow/tensorflow/issues/7162#issuecomment-307994191\">#7162 (comment)</a> but I could not find quickly a nicer way to change the <code>float_node.name().find(\"/while/\") != string::npos</code> to something more robust.</p>", "body_text": "@vrv Well, it is not really that I am stating this PR is wrong, I'm not really in position to judge, and it does indeed fix the issue. However, this will add the node input for any case, not just the broken control flow ones. And experience proved that to come with a non neglicitble perf regression, not only documented by me but others on #7162 (comment).\nNow, maybe it is wrong to add the input only on /some nodes/ and the correct fix is indeed the one in this PR, or maybe we just need the PR to be more specific to those nodes. I tried to do something nicer than what was suggested by the very same author of the PR: #7162 (comment) but I could not find quickly a nicer way to change the float_node.name().find(\"/while/\") != string::npos to something more robust.", "body": "@vrv Well, it is not really that I am stating this PR is wrong, I'm not really in position to judge, and it does indeed fix the issue. However, this will add the node input for any case, not just the broken control flow ones. And experience proved that to come with a non neglicitble perf regression, not only documented by me but others on https://github.com/tensorflow/tensorflow/issues/7162#issuecomment-307994191.\r\n\r\nNow, maybe it is wrong to add the input only on /some nodes/ and the correct fix is indeed the one in this PR, or maybe we just need the PR to be more specific to those nodes. I tried to do something nicer than what was suggested by the very same author of the PR: https://github.com/tensorflow/tensorflow/issues/7162#issuecomment-307994191 but I could not find quickly a nicer way to change the `float_node.name().find(\"/while/\") != string::npos` to something more robust."}