{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22012", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22012/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22012/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22012/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/22012", "id": 356254737, "node_id": "MDU6SXNzdWUzNTYyNTQ3Mzc=", "number": 22012, "title": "[Bug] Discrepancy in tf.keras and keras in setting model.trainable = False and then compiling", "user": {"login": "naoto0804", "id": 7067992, "node_id": "MDQ6VXNlcjcwNjc5OTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/7067992?v=4", "gravatar_id": "", "url": "https://api.github.com/users/naoto0804", "html_url": "https://github.com/naoto0804", "followers_url": "https://api.github.com/users/naoto0804/followers", "following_url": "https://api.github.com/users/naoto0804/following{/other_user}", "gists_url": "https://api.github.com/users/naoto0804/gists{/gist_id}", "starred_url": "https://api.github.com/users/naoto0804/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/naoto0804/subscriptions", "organizations_url": "https://api.github.com/users/naoto0804/orgs", "repos_url": "https://api.github.com/users/naoto0804/repos", "events_url": "https://api.github.com/users/naoto0804/events{/privacy}", "received_events_url": "https://api.github.com/users/naoto0804/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-09-02T05:37:17Z", "updated_at": "2018-09-25T15:14:35Z", "closed_at": "2018-09-17T01:35:07Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li>Have I written custom code: Yes</li>\n<li>OS Platform and Distribution: Linux Ubuntu 16.04</li>\n<li>TensorFlow installed from: binary</li>\n<li>TensorFlow version: v1.10.1-0-g4dcfddc5d1 1.10.1</li>\n<li>Bazel version: N/A</li>\n<li>CUDA/cuDNN version: CUDA9.1, cuDNN7.0</li>\n<li>GPU model and memory: TITAN V</li>\n<li>Exact command to reproduce: python3 compare.py</li>\n<li>Mobile device: N/A</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>This is a toy case for training GAN problem.<br>\nWhen I run the code shown below in keras2.2.2, I get</p>\n<pre><code>WARNING:tensorflow:Discrepancy between trainable weights and collected trainable weights, did you set `model.trainable` without calling `model.compile` after ?\n</code></pre>\n<p>only at the beginning of the training once.<br>\nHowever, I run this code in tensorflow1.10.1, the warning raises at every iteration.<br>\nAlthough it seems that the model is appropriately learned (I can make sure the weight is freezed by the result of <code>.summary()</code>), raising too many warning is not torelable.</p>\n<p>Here is the complete log.<br>\n<a href=\"https://github.com/tensorflow/tensorflow/files/2342979/tf_keras.log\">tf.keras ver</a><br>\n<a href=\"https://github.com/tensorflow/tensorflow/files/2342980/keras.log\">keras ver</a></p>\n<p>I see the same problem is posted in Stackoverflow<br>\n<a href=\"https://stackoverflow.com/questions/50468940/tensorflow-1-8-tf-keras-gives-different-result-in-dcgan-from-keras\" rel=\"nofollow\">https://stackoverflow.com/questions/50468940/tensorflow-1-8-tf-keras-gives-different-result-in-dcgan-from-keras</a></p>\n<pre><code>import numpy as np\n\n# use keras\nfrom keras.layers import Dense, Input\nfrom keras.models import Model\n\n# use tf.keras\n# from tensorflow.keras.layers import Dense, Input\n# from tensorflow.keras.models import Model\n\n# define input\nnoise = Input(shape=(10,))\nx = Input(shape=(100,))\n\n# define generator and discriminator\ngen = Dense(100)\ndis = Dense(1)\n\ny = dis(x)\ndis_model = Model(x, y)\ndis_model.compile(optimizer='rmsprop', loss='mse')\ndis_model.summary()\n\nz = dis_model(gen(noise))\ndis_model.trainable = False\ncombined_model = Model(noise, z)\ncombined_model.compile(optimizer='rmsprop', loss='mse')\ncombined_model.summary()\n\nfor i in range(3):\n    dis_model.train_on_batch(x=np.random.rand(10, 100),\n                             y=np.random.rand(10, 1))\n    combined_model.train_on_batch(x=np.random.rand(10, 10),\n                             y=np.random.rand(10, 1))\n\n</code></pre>", "body_text": "System information\n\nHave I written custom code: Yes\nOS Platform and Distribution: Linux Ubuntu 16.04\nTensorFlow installed from: binary\nTensorFlow version: v1.10.1-0-g4dcfddc5d1 1.10.1\nBazel version: N/A\nCUDA/cuDNN version: CUDA9.1, cuDNN7.0\nGPU model and memory: TITAN V\nExact command to reproduce: python3 compare.py\nMobile device: N/A\n\nDescribe the problem\nThis is a toy case for training GAN problem.\nWhen I run the code shown below in keras2.2.2, I get\nWARNING:tensorflow:Discrepancy between trainable weights and collected trainable weights, did you set `model.trainable` without calling `model.compile` after ?\n\nonly at the beginning of the training once.\nHowever, I run this code in tensorflow1.10.1, the warning raises at every iteration.\nAlthough it seems that the model is appropriately learned (I can make sure the weight is freezed by the result of .summary()), raising too many warning is not torelable.\nHere is the complete log.\ntf.keras ver\nkeras ver\nI see the same problem is posted in Stackoverflow\nhttps://stackoverflow.com/questions/50468940/tensorflow-1-8-tf-keras-gives-different-result-in-dcgan-from-keras\nimport numpy as np\n\n# use keras\nfrom keras.layers import Dense, Input\nfrom keras.models import Model\n\n# use tf.keras\n# from tensorflow.keras.layers import Dense, Input\n# from tensorflow.keras.models import Model\n\n# define input\nnoise = Input(shape=(10,))\nx = Input(shape=(100,))\n\n# define generator and discriminator\ngen = Dense(100)\ndis = Dense(1)\n\ny = dis(x)\ndis_model = Model(x, y)\ndis_model.compile(optimizer='rmsprop', loss='mse')\ndis_model.summary()\n\nz = dis_model(gen(noise))\ndis_model.trainable = False\ncombined_model = Model(noise, z)\ncombined_model.compile(optimizer='rmsprop', loss='mse')\ncombined_model.summary()\n\nfor i in range(3):\n    dis_model.train_on_batch(x=np.random.rand(10, 100),\n                             y=np.random.rand(10, 1))\n    combined_model.train_on_batch(x=np.random.rand(10, 10),\n                             y=np.random.rand(10, 1))", "body": "### System information\r\n- Have I written custom code: Yes\r\n- OS Platform and Distribution: Linux Ubuntu 16.04\r\n- TensorFlow installed from: binary\r\n- TensorFlow version: v1.10.1-0-g4dcfddc5d1 1.10.1\r\n- Bazel version: N/A\r\n- CUDA/cuDNN version: CUDA9.1, cuDNN7.0\r\n- GPU model and memory: TITAN V\r\n- Exact command to reproduce: python3 compare.py\r\n- Mobile device: N/A\r\n\r\n### Describe the problem\r\nThis is a toy case for training GAN problem.\r\nWhen I run the code shown below in keras2.2.2, I get\r\n```\r\nWARNING:tensorflow:Discrepancy between trainable weights and collected trainable weights, did you set `model.trainable` without calling `model.compile` after ?\r\n```\r\nonly at the beginning of the training once.\r\nHowever, I run this code in tensorflow1.10.1, the warning raises at every iteration.\r\nAlthough it seems that the model is appropriately learned (I can make sure the weight is freezed by the result of `.summary()`), raising too many warning is not torelable.\r\n\r\nHere is the complete log.\r\n[tf.keras ver](https://github.com/tensorflow/tensorflow/files/2342979/tf_keras.log)\r\n[keras ver](https://github.com/tensorflow/tensorflow/files/2342980/keras.log)\r\n\r\nI see the same problem is posted in Stackoverflow\r\nhttps://stackoverflow.com/questions/50468940/tensorflow-1-8-tf-keras-gives-different-result-in-dcgan-from-keras\r\n\r\n```\r\nimport numpy as np\r\n\r\n# use keras\r\nfrom keras.layers import Dense, Input\r\nfrom keras.models import Model\r\n\r\n# use tf.keras\r\n# from tensorflow.keras.layers import Dense, Input\r\n# from tensorflow.keras.models import Model\r\n\r\n# define input\r\nnoise = Input(shape=(10,))\r\nx = Input(shape=(100,))\r\n\r\n# define generator and discriminator\r\ngen = Dense(100)\r\ndis = Dense(1)\r\n\r\ny = dis(x)\r\ndis_model = Model(x, y)\r\ndis_model.compile(optimizer='rmsprop', loss='mse')\r\ndis_model.summary()\r\n\r\nz = dis_model(gen(noise))\r\ndis_model.trainable = False\r\ncombined_model = Model(noise, z)\r\ncombined_model.compile(optimizer='rmsprop', loss='mse')\r\ncombined_model.summary()\r\n\r\nfor i in range(3):\r\n    dis_model.train_on_batch(x=np.random.rand(10, 100),\r\n                             y=np.random.rand(10, 1))\r\n    combined_model.train_on_batch(x=np.random.rand(10, 10),\r\n                             y=np.random.rand(10, 1))\r\n\r\n```\r\n"}