{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/422088403", "html_url": "https://github.com/tensorflow/tensorflow/pull/21318#issuecomment-422088403", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21318", "id": 422088403, "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjA4ODQwMw==", "user": {"login": "ashraf-bhuiyan", "id": 8062406, "node_id": "MDQ6VXNlcjgwNjI0MDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/8062406?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashraf-bhuiyan", "html_url": "https://github.com/ashraf-bhuiyan", "followers_url": "https://api.github.com/users/ashraf-bhuiyan/followers", "following_url": "https://api.github.com/users/ashraf-bhuiyan/following{/other_user}", "gists_url": "https://api.github.com/users/ashraf-bhuiyan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashraf-bhuiyan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashraf-bhuiyan/subscriptions", "organizations_url": "https://api.github.com/users/ashraf-bhuiyan/orgs", "repos_url": "https://api.github.com/users/ashraf-bhuiyan/repos", "events_url": "https://api.github.com/users/ashraf-bhuiyan/events{/privacy}", "received_events_url": "https://api.github.com/users/ashraf-bhuiyan/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-17T16:47:15Z", "updated_at": "2018-09-17T16:47:15Z", "author_association": "CONTRIBUTOR", "body_html": "<blockquote>\n<blockquote>\n<blockquote>\n<p>For example, add a node X where X:control-&gt;Pad:control and X:control-&gt;Conv2D:control, and check for the output that we only have X:control-&gt;_MklConv2D:control appeared once. The same goes for outgoing control edges.</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<p>Sorry for the delay. There are some conflicts with master, which needed to resolve.</p>\n<p>I have added two unit tests as you have suggested above. One is to test if control edges are added as input to pad and conv2d from one common op, then control edges are not duplicated on the merged node (MklPadWithConv2d) from the common op. This test name is Input_ControlEdge_PadWithConv2D_Positive. The other test will be for output control edge from both pad and conv2d to a common op. That test name is : Output_ControlEdge_PadWithConv2D_Positive.<br>\nNeeded to do some smaller edit/add code in mkl_layout_pass.cc and mkl_layout_pass_test.cc file to support these two test.</p>\n<p>There are minor conflict in the (mkl_conv_ops.cc file) for the name of the signature of the kernel (mkl_conv_ops) between this branch and the master due to adding padding types and if pad+conv2d fusion is enabled. However, the conflict can be resolved easily when merging with master.</p>", "body_text": "For example, add a node X where X:control->Pad:control and X:control->Conv2D:control, and check for the output that we only have X:control->_MklConv2D:control appeared once. The same goes for outgoing control edges.\n\n\n\nSorry for the delay. There are some conflicts with master, which needed to resolve.\nI have added two unit tests as you have suggested above. One is to test if control edges are added as input to pad and conv2d from one common op, then control edges are not duplicated on the merged node (MklPadWithConv2d) from the common op. This test name is Input_ControlEdge_PadWithConv2D_Positive. The other test will be for output control edge from both pad and conv2d to a common op. That test name is : Output_ControlEdge_PadWithConv2D_Positive.\nNeeded to do some smaller edit/add code in mkl_layout_pass.cc and mkl_layout_pass_test.cc file to support these two test.\nThere are minor conflict in the (mkl_conv_ops.cc file) for the name of the signature of the kernel (mkl_conv_ops) between this branch and the master due to adding padding types and if pad+conv2d fusion is enabled. However, the conflict can be resolved easily when merging with master.", "body": ">>>For example, add a node X where X:control->Pad:control and X:control->Conv2D:control, and check for the output that we only have X:control->_MklConv2D:control appeared once. The same goes for outgoing control edges.\r\n\r\nSorry for the delay. There are some conflicts with master, which needed to resolve. \r\n\r\nI have added two unit tests as you have suggested above. One is to test if control edges are added as input to pad and conv2d from one common op, then control edges are not duplicated on the merged node (MklPadWithConv2d) from the common op. This test name is Input_ControlEdge_PadWithConv2D_Positive. The other test will be for output control edge from both pad and conv2d to a common op. That test name is : Output_ControlEdge_PadWithConv2D_Positive.\r\nNeeded to do some smaller edit/add code in mkl_layout_pass.cc and mkl_layout_pass_test.cc file to support these two test. \r\n\r\nThere are minor conflict in the (mkl_conv_ops.cc file) for the name of the signature of the kernel (mkl_conv_ops) between this branch and the master due to adding padding types and if pad+conv2d fusion is enabled. However, the conflict can be resolved easily when merging with master."}