{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/413008615", "html_url": "https://github.com/tensorflow/tensorflow/pull/21318#issuecomment-413008615", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21318", "id": 413008615, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzAwODYxNQ==", "user": {"login": "ashraf-bhuiyan", "id": 8062406, "node_id": "MDQ6VXNlcjgwNjI0MDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/8062406?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashraf-bhuiyan", "html_url": "https://github.com/ashraf-bhuiyan", "followers_url": "https://api.github.com/users/ashraf-bhuiyan/followers", "following_url": "https://api.github.com/users/ashraf-bhuiyan/following{/other_user}", "gists_url": "https://api.github.com/users/ashraf-bhuiyan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashraf-bhuiyan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashraf-bhuiyan/subscriptions", "organizations_url": "https://api.github.com/users/ashraf-bhuiyan/orgs", "repos_url": "https://api.github.com/users/ashraf-bhuiyan/repos", "events_url": "https://api.github.com/users/ashraf-bhuiyan/events{/privacy}", "received_events_url": "https://api.github.com/users/ashraf-bhuiyan/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-14T20:40:44Z", "updated_at": "2018-08-14T20:40:44Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Thank for the suggestion of removing the duplicate edge.<br>\nI took the 1st suggestion.<br>\nI think with small change we can achieve this. We can have the following :<br>\nfor (const Edge* e : pred-&gt;in_edges()) {<br>\nif (e-&gt;IsControlEdge()) {<br>\n//Don't allow duplicate edge<br>\n(*g)-&gt;AddControlEdge(e-&gt;src(), new_node, false);<br>\n}<br>\n}<br>\nHere, if duplicate edge is found, then it will return nullptr, otherwise it will add the edge.</p>\n<p>The addControlEdge is in :</p>\n<p>tensorflow/tensorflow/core/graph/graph.cc</p>\n<p>Line 454 in <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/01267485b63d440eb9f3b4061d8e8ceaad5bca79/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/01267485b63d440eb9f3b4061d8e8ceaad5bca79\"><tt>0126748</tt></a></p>\n<p>const Edge* Graph::AddControlEdge(Node* source, Node* dest,<br>\nAnd the AddEdge is in :</p>\n<p>tensorflow/tensorflow/core/graph/graph.cc</p>\n<p>Line 403 in <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/425b62a344f18c875f6f024b36ae37749cb00feb/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/425b62a344f18c875f6f024b36ae37749cb00feb\"><tt>425b62a</tt></a></p>\n<p>const Edge* Graph::AddEdge(Node* source, int x, Node* dest, int y) {<br>\nPlease let me know if this looks ok or not.</p>", "body_text": "Thank for the suggestion of removing the duplicate edge.\nI took the 1st suggestion.\nI think with small change we can achieve this. We can have the following :\nfor (const Edge* e : pred->in_edges()) {\nif (e->IsControlEdge()) {\n//Don't allow duplicate edge\n(*g)->AddControlEdge(e->src(), new_node, false);\n}\n}\nHere, if duplicate edge is found, then it will return nullptr, otherwise it will add the edge.\nThe addControlEdge is in :\ntensorflow/tensorflow/core/graph/graph.cc\nLine 454 in 0126748\nconst Edge* Graph::AddControlEdge(Node* source, Node* dest,\nAnd the AddEdge is in :\ntensorflow/tensorflow/core/graph/graph.cc\nLine 403 in 425b62a\nconst Edge* Graph::AddEdge(Node* source, int x, Node* dest, int y) {\nPlease let me know if this looks ok or not.", "body": "Thank for the suggestion of removing the duplicate edge.\r\nI took the 1st suggestion.\r\nI think with small change we can achieve this. We can have the following :\r\nfor (const Edge* e : pred->in_edges()) {\r\nif (e->IsControlEdge()) {\r\n//Don't allow duplicate edge\r\n(*g)->AddControlEdge(e->src(), new_node, false);\r\n}\r\n}\r\nHere, if duplicate edge is found, then it will return nullptr, otherwise it will add the edge.\r\n\r\nThe addControlEdge is in :\r\n\r\ntensorflow/tensorflow/core/graph/graph.cc\r\n\r\nLine 454 in 0126748\r\n\r\n const Edge* Graph::AddControlEdge(Node* source, Node* dest, \r\nAnd the AddEdge is in :\r\n\r\ntensorflow/tensorflow/core/graph/graph.cc\r\n\r\nLine 403 in 425b62a\r\n\r\n const Edge* Graph::AddEdge(Node* source, int x, Node* dest, int y) { \r\nPlease let me know if this looks ok or not."}