{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16151", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16151/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16151/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16151/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16151", "id": 288825061, "node_id": "MDU6SXNzdWUyODg4MjUwNjE=", "number": 16151, "title": "ValueError: Labels are incompatible with given information. ", "user": {"login": "selcouthlyBlue", "id": 13268675, "node_id": "MDQ6VXNlcjEzMjY4Njc1", "avatar_url": "https://avatars2.githubusercontent.com/u/13268675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/selcouthlyBlue", "html_url": "https://github.com/selcouthlyBlue", "followers_url": "https://api.github.com/users/selcouthlyBlue/followers", "following_url": "https://api.github.com/users/selcouthlyBlue/following{/other_user}", "gists_url": "https://api.github.com/users/selcouthlyBlue/gists{/gist_id}", "starred_url": "https://api.github.com/users/selcouthlyBlue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/selcouthlyBlue/subscriptions", "organizations_url": "https://api.github.com/users/selcouthlyBlue/orgs", "repos_url": "https://api.github.com/users/selcouthlyBlue/repos", "events_url": "https://api.github.com/users/selcouthlyBlue/events{/privacy}", "received_events_url": "https://api.github.com/users/selcouthlyBlue/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-16T08:43:19Z", "updated_at": "2018-01-16T09:31:30Z", "closed_at": "2018-01-16T09:31:29Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Have I written custom code: yes<br>\nOS: Windows 8.1<br>\nTensorflow installed from: conda<br>\nTensorflow version: 1.4</p>\n<p>I am having problems in adding validation monitors to <code>Estimator.fit</code>. With this code I have:</p>\n<pre><code>def main(_):\n    image_paths, labels = dataset_utils.read_dataset_list('../test/dummy_labels_file.txt')\n    data_dir = \"../test/dummy_data/\"\n    images = dataset_utils.read_images(data_dir=data_dir, image_paths=image_paths, image_extension='png')\n    print('Done reading images')\n    images = dataset_utils.resize(images, (1596, 48))\n    images = dataset_utils.transpose(images)\n    labels = dataset_utils.encode(labels)\n    x_train, x_test, y_train, y_test = dataset_utils.split(features=images, test_size=0.5, labels=labels)\n    print(x_test)\n    x_train_seq_lens = dataset_utils.get_seq_lens(x_train)\n    x_test_seq_lens = dataset_utils.get_seq_lens(x_test)\n\n    train_input_fn = tf.estimator.inputs.numpy_input_fn(\n        x={\"x\": np.array(x_train),\n           \"seq_lens\": np.array(x_train_seq_lens)},\n        y=np.array(y_train),\n        num_epochs=1,\n        shuffle=True,\n        batch_size=1\n    )\n\n    validation_input_fn = tf.estimator.inputs.numpy_input_fn(\n        x={\"x\": np.array(x_test),\n           \"seq_lens\": np.array(x_test_seq_lens)},\n        y=np.array(y_test),\n        shuffle=True\n    )\n\n    validation_monitor = learn.monitors.ValidationMonitor(\n        input_fn=validation_input_fn,\n        every_n_steps=1\n    )\n\n    model = GridRNNModelFn(num_time_steps=1596, num_features=48, num_hidden_units=128, num_classes=80,\n                           learning_rate=0.001, optimizer=Optimizers.MOMENTUM)\n\n    classifier = learn.Estimator(model_fn=model.model_fn, params=model.params, model_dir=\"/tmp/grid_rnn_ocr_model\")\n    classifier.fit(input_fn=train_input_fn, monitors=[validation_monitor])\n\n\nif __name__ == '__main__':\n    tf.app.run(main=main)\n</code></pre>\n<p>It throws this error:</p>\n<p><code>ValueError: Labels are incompatible with given information. Given labels: Tensor(\"random_shuffle_queue_DequeueUpTo:3\", shape=(?, 37), dtype=int32), required signatures: TensorSignature(dtype=tf.int32, shape=TensorShape([Dimension(None), Dimension(33)]), is_sparse=False).</code></p>\n<p>Which leads me to think that the dynamic label lengths are not accepted. To reproduce this, simply clone this <a href=\"https://github.com/selcouthlyBlue/simplified_bi_lstm_ocr\">repository</a> and run the script specified in the readme.</p>", "body_text": "Have I written custom code: yes\nOS: Windows 8.1\nTensorflow installed from: conda\nTensorflow version: 1.4\nI am having problems in adding validation monitors to Estimator.fit. With this code I have:\ndef main(_):\n    image_paths, labels = dataset_utils.read_dataset_list('../test/dummy_labels_file.txt')\n    data_dir = \"../test/dummy_data/\"\n    images = dataset_utils.read_images(data_dir=data_dir, image_paths=image_paths, image_extension='png')\n    print('Done reading images')\n    images = dataset_utils.resize(images, (1596, 48))\n    images = dataset_utils.transpose(images)\n    labels = dataset_utils.encode(labels)\n    x_train, x_test, y_train, y_test = dataset_utils.split(features=images, test_size=0.5, labels=labels)\n    print(x_test)\n    x_train_seq_lens = dataset_utils.get_seq_lens(x_train)\n    x_test_seq_lens = dataset_utils.get_seq_lens(x_test)\n\n    train_input_fn = tf.estimator.inputs.numpy_input_fn(\n        x={\"x\": np.array(x_train),\n           \"seq_lens\": np.array(x_train_seq_lens)},\n        y=np.array(y_train),\n        num_epochs=1,\n        shuffle=True,\n        batch_size=1\n    )\n\n    validation_input_fn = tf.estimator.inputs.numpy_input_fn(\n        x={\"x\": np.array(x_test),\n           \"seq_lens\": np.array(x_test_seq_lens)},\n        y=np.array(y_test),\n        shuffle=True\n    )\n\n    validation_monitor = learn.monitors.ValidationMonitor(\n        input_fn=validation_input_fn,\n        every_n_steps=1\n    )\n\n    model = GridRNNModelFn(num_time_steps=1596, num_features=48, num_hidden_units=128, num_classes=80,\n                           learning_rate=0.001, optimizer=Optimizers.MOMENTUM)\n\n    classifier = learn.Estimator(model_fn=model.model_fn, params=model.params, model_dir=\"/tmp/grid_rnn_ocr_model\")\n    classifier.fit(input_fn=train_input_fn, monitors=[validation_monitor])\n\n\nif __name__ == '__main__':\n    tf.app.run(main=main)\n\nIt throws this error:\nValueError: Labels are incompatible with given information. Given labels: Tensor(\"random_shuffle_queue_DequeueUpTo:3\", shape=(?, 37), dtype=int32), required signatures: TensorSignature(dtype=tf.int32, shape=TensorShape([Dimension(None), Dimension(33)]), is_sparse=False).\nWhich leads me to think that the dynamic label lengths are not accepted. To reproduce this, simply clone this repository and run the script specified in the readme.", "body": "Have I written custom code: yes\r\nOS: Windows 8.1\r\nTensorflow installed from: conda\r\nTensorflow version: 1.4\r\n\r\nI am having problems in adding validation monitors to `Estimator.fit`. With this code I have:\r\n\r\n```\r\ndef main(_):\r\n    image_paths, labels = dataset_utils.read_dataset_list('../test/dummy_labels_file.txt')\r\n    data_dir = \"../test/dummy_data/\"\r\n    images = dataset_utils.read_images(data_dir=data_dir, image_paths=image_paths, image_extension='png')\r\n    print('Done reading images')\r\n    images = dataset_utils.resize(images, (1596, 48))\r\n    images = dataset_utils.transpose(images)\r\n    labels = dataset_utils.encode(labels)\r\n    x_train, x_test, y_train, y_test = dataset_utils.split(features=images, test_size=0.5, labels=labels)\r\n    print(x_test)\r\n    x_train_seq_lens = dataset_utils.get_seq_lens(x_train)\r\n    x_test_seq_lens = dataset_utils.get_seq_lens(x_test)\r\n\r\n    train_input_fn = tf.estimator.inputs.numpy_input_fn(\r\n        x={\"x\": np.array(x_train),\r\n           \"seq_lens\": np.array(x_train_seq_lens)},\r\n        y=np.array(y_train),\r\n        num_epochs=1,\r\n        shuffle=True,\r\n        batch_size=1\r\n    )\r\n\r\n    validation_input_fn = tf.estimator.inputs.numpy_input_fn(\r\n        x={\"x\": np.array(x_test),\r\n           \"seq_lens\": np.array(x_test_seq_lens)},\r\n        y=np.array(y_test),\r\n        shuffle=True\r\n    )\r\n\r\n    validation_monitor = learn.monitors.ValidationMonitor(\r\n        input_fn=validation_input_fn,\r\n        every_n_steps=1\r\n    )\r\n\r\n    model = GridRNNModelFn(num_time_steps=1596, num_features=48, num_hidden_units=128, num_classes=80,\r\n                           learning_rate=0.001, optimizer=Optimizers.MOMENTUM)\r\n\r\n    classifier = learn.Estimator(model_fn=model.model_fn, params=model.params, model_dir=\"/tmp/grid_rnn_ocr_model\")\r\n    classifier.fit(input_fn=train_input_fn, monitors=[validation_monitor])\r\n\r\n\r\nif __name__ == '__main__':\r\n    tf.app.run(main=main)\r\n```\r\n\r\nIt throws this error:\r\n\r\n`ValueError: Labels are incompatible with given information. Given labels: Tensor(\"random_shuffle_queue_DequeueUpTo:3\", shape=(?, 37), dtype=int32), required signatures: TensorSignature(dtype=tf.int32, shape=TensorShape([Dimension(None), Dimension(33)]), is_sparse=False).`\r\n\r\nWhich leads me to think that the dynamic label lengths are not accepted. To reproduce this, simply clone this [repository](https://github.com/selcouthlyBlue/simplified_bi_lstm_ocr) and run the script specified in the readme."}