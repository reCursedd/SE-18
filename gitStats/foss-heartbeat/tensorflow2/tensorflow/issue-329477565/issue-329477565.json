{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19776", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19776/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19776/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19776/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19776", "id": 329477565, "node_id": "MDU6SXNzdWUzMjk0Nzc1NjU=", "number": 19776, "title": "einsum contraction order (is undocumented)", "user": {"login": "mrader1248", "id": 32457308, "node_id": "MDQ6VXNlcjMyNDU3MzA4", "avatar_url": "https://avatars1.githubusercontent.com/u/32457308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrader1248", "html_url": "https://github.com/mrader1248", "followers_url": "https://api.github.com/users/mrader1248/followers", "following_url": "https://api.github.com/users/mrader1248/following{/other_user}", "gists_url": "https://api.github.com/users/mrader1248/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrader1248/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrader1248/subscriptions", "organizations_url": "https://api.github.com/users/mrader1248/orgs", "repos_url": "https://api.github.com/users/mrader1248/repos", "events_url": "https://api.github.com/users/mrader1248/events{/privacy}", "received_events_url": "https://api.github.com/users/mrader1248/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-06-05T14:17:07Z", "updated_at": "2018-07-09T07:48:44Z", "closed_at": null, "author_association": "NONE", "body_html": "<h3>Describe the problem</h3>\n<p>The documentation for <code>tf.einsum</code> does not specify the order of the contraction. However, for contractions with three and more tensors, the contraction order is crucial as it determines the runtime complexity. The only thing one finds in the documentation is the following:</p>\n<blockquote>\n<p>This function behaves like <code>numpy.einsum</code> [...]</p>\n</blockquote>\n<p>The <code>numpy.einsum</code> function has an additional parameter <code>optimize</code> and is able to peform a greedy optimisation for the contraction order. As far as I understood the tensorflow code, <code>tf.einsum</code> simply contracts tensors from left to right.<br>\nWould it be possible to adopt the optimisation code from numpy for tensorflow? If not, at least the documentation should indicate the contraction order. Thank you!</p>", "body_text": "Describe the problem\nThe documentation for tf.einsum does not specify the order of the contraction. However, for contractions with three and more tensors, the contraction order is crucial as it determines the runtime complexity. The only thing one finds in the documentation is the following:\n\nThis function behaves like numpy.einsum [...]\n\nThe numpy.einsum function has an additional parameter optimize and is able to peform a greedy optimisation for the contraction order. As far as I understood the tensorflow code, tf.einsum simply contracts tensors from left to right.\nWould it be possible to adopt the optimisation code from numpy for tensorflow? If not, at least the documentation should indicate the contraction order. Thank you!", "body": "### Describe the problem\r\nThe documentation for `tf.einsum` does not specify the order of the contraction. However, for contractions with three and more tensors, the contraction order is crucial as it determines the runtime complexity. The only thing one finds in the documentation is the following:\r\n\r\n> This function behaves like `numpy.einsum` [...]\r\n\r\nThe `numpy.einsum` function has an additional parameter `optimize` and is able to peform a greedy optimisation for the contraction order. As far as I understood the tensorflow code, `tf.einsum` simply contracts tensors from left to right.\r\nWould it be possible to adopt the optimisation code from numpy for tensorflow? If not, at least the documentation should indicate the contraction order. Thank you!"}