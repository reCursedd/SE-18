{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/389722008", "html_url": "https://github.com/tensorflow/tensorflow/issues/9371#issuecomment-389722008", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9371", "id": 389722008, "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTcyMjAwOA==", "user": {"login": "JsFlo", "id": 3820069, "node_id": "MDQ6VXNlcjM4MjAwNjk=", "avatar_url": "https://avatars0.githubusercontent.com/u/3820069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JsFlo", "html_url": "https://github.com/JsFlo", "followers_url": "https://api.github.com/users/JsFlo/followers", "following_url": "https://api.github.com/users/JsFlo/following{/other_user}", "gists_url": "https://api.github.com/users/JsFlo/gists{/gist_id}", "starred_url": "https://api.github.com/users/JsFlo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JsFlo/subscriptions", "organizations_url": "https://api.github.com/users/JsFlo/orgs", "repos_url": "https://api.github.com/users/JsFlo/repos", "events_url": "https://api.github.com/users/JsFlo/events{/privacy}", "received_events_url": "https://api.github.com/users/JsFlo/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-17T02:10:54Z", "updated_at": "2018-05-17T02:10:54Z", "author_association": "NONE", "body_html": "<p>I think what he means by <code>Saver Api</code> is:</p>\n<pre><code>saver = tf.train.Saver()\n...\nsaver.save(sess, CHECKPOINT_PATH) \n</code></pre>\n<p>which saves out .chkpt, .pbtxt and variables files.</p>\n<p>Using the <code>SaverModel Api</code>:</p>\n<pre><code>builders = saved_model_builder.SavedModelBuilder(export_path)\nbuilders.add_meta_graph_and_variables(sess, [\"myTag\"], signature_def_map= {\n        \"predict\": tf.saved_model.signature_def_utils.predict_signature_def(\n            inputs= {\"images\": x_placeholder},\n            outputs= {\"scores\": output})\n        })\nbuilders.save()\n</code></pre>\n<p>Which outputs:</p>\n<pre><code>.\n\u251c\u2500\u2500 saved_model.pb\n\u2514\u2500\u2500 variables\n    \u251c\u2500\u2500 variables.data-00000-of-00001\n    \u2514\u2500\u2500 variables.index\n</code></pre>\n<p>which then can be loaded with:</p>\n<pre><code>tf.saved_model.loader.load(sess, [\"myTag\"], OUTPUT_DIR)\ngraph = tf.get_default_graph()\n</code></pre>", "body_text": "I think what he means by Saver Api is:\nsaver = tf.train.Saver()\n...\nsaver.save(sess, CHECKPOINT_PATH) \n\nwhich saves out .chkpt, .pbtxt and variables files.\nUsing the SaverModel Api:\nbuilders = saved_model_builder.SavedModelBuilder(export_path)\nbuilders.add_meta_graph_and_variables(sess, [\"myTag\"], signature_def_map= {\n        \"predict\": tf.saved_model.signature_def_utils.predict_signature_def(\n            inputs= {\"images\": x_placeholder},\n            outputs= {\"scores\": output})\n        })\nbuilders.save()\n\nWhich outputs:\n.\n\u251c\u2500\u2500 saved_model.pb\n\u2514\u2500\u2500 variables\n    \u251c\u2500\u2500 variables.data-00000-of-00001\n    \u2514\u2500\u2500 variables.index\n\nwhich then can be loaded with:\ntf.saved_model.loader.load(sess, [\"myTag\"], OUTPUT_DIR)\ngraph = tf.get_default_graph()", "body": "I think what he means by `Saver Api` is: \r\n```\r\nsaver = tf.train.Saver()\r\n...\r\nsaver.save(sess, CHECKPOINT_PATH) \r\n```\r\nwhich saves out .chkpt, .pbtxt and variables files.\r\n\r\nUsing the `SaverModel Api`:\r\n```\r\nbuilders = saved_model_builder.SavedModelBuilder(export_path)\r\nbuilders.add_meta_graph_and_variables(sess, [\"myTag\"], signature_def_map= {\r\n        \"predict\": tf.saved_model.signature_def_utils.predict_signature_def(\r\n            inputs= {\"images\": x_placeholder},\r\n            outputs= {\"scores\": output})\r\n        })\r\nbuilders.save()\r\n```\r\nWhich outputs:\r\n```\r\n.\r\n\u251c\u2500\u2500 saved_model.pb\r\n\u2514\u2500\u2500 variables\r\n    \u251c\u2500\u2500 variables.data-00000-of-00001\r\n    \u2514\u2500\u2500 variables.index\r\n```\r\nwhich then can be loaded with:\r\n```\r\ntf.saved_model.loader.load(sess, [\"myTag\"], OUTPUT_DIR)\r\ngraph = tf.get_default_graph()\r\n```"}