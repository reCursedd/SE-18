{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/243972079", "html_url": "https://github.com/tensorflow/tensorflow/issues/1996#issuecomment-243972079", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1996", "id": 243972079, "node_id": "MDEyOklzc3VlQ29tbWVudDI0Mzk3MjA3OQ==", "user": {"login": "windreamer", "id": 572167, "node_id": "MDQ6VXNlcjU3MjE2Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/572167?v=4", "gravatar_id": "", "url": "https://api.github.com/users/windreamer", "html_url": "https://github.com/windreamer", "followers_url": "https://api.github.com/users/windreamer/followers", "following_url": "https://api.github.com/users/windreamer/following{/other_user}", "gists_url": "https://api.github.com/users/windreamer/gists{/gist_id}", "starred_url": "https://api.github.com/users/windreamer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/windreamer/subscriptions", "organizations_url": "https://api.github.com/users/windreamer/orgs", "repos_url": "https://api.github.com/users/windreamer/repos", "events_url": "https://api.github.com/users/windreamer/events{/privacy}", "received_events_url": "https://api.github.com/users/windreamer/received_events", "type": "User", "site_admin": false}, "created_at": "2016-09-01T04:19:30Z", "updated_at": "2016-09-01T05:11:28Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=96419\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/klueska\">@klueska</a> for <code>Unified Containerization Support</code> I open an issue <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"174432508\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/douban/tfmesos/issues/12\" data-hovercard-type=\"issue\" data-hovercard-url=\"/douban/tfmesos/issues/12/hovercard\" href=\"https://github.com/douban/tfmesos/issues/12\">douban/tfmesos#12</a> , we can further discuss the detail there.</p>\n<p>And for proto3, if my understanding is right, protobuf is both a compiler and runtime library. For compiler, proto3 compiler is not backward-compatible with proto2. But as long as library is generated, proto3 runtime is backward-compatible with proto2, as least I believe so.</p>\n<p>So which compiler used to build mesos library is managed by mesos itself. Only driver developers (such as <a href=\"https://github.com/douban/pymesos\">pymesos</a> of our own) may need to pay attention to this problem. For end user, I believe both proto2 or proto3 are ok with them.</p>\n<p>this is why I don't think <a href=\"https://issues.apache.org/jira/browse/MESOS-5186\" rel=\"nofollow\">https://issues.apache.org/jira/browse/MESOS-5186</a> is a big issue to be resolved until Mesos 2.0</p>", "body_text": "@klueska for Unified Containerization Support I open an issue douban/tfmesos#12 , we can further discuss the detail there.\nAnd for proto3, if my understanding is right, protobuf is both a compiler and runtime library. For compiler, proto3 compiler is not backward-compatible with proto2. But as long as library is generated, proto3 runtime is backward-compatible with proto2, as least I believe so.\nSo which compiler used to build mesos library is managed by mesos itself. Only driver developers (such as pymesos of our own) may need to pay attention to this problem. For end user, I believe both proto2 or proto3 are ok with them.\nthis is why I don't think https://issues.apache.org/jira/browse/MESOS-5186 is a big issue to be resolved until Mesos 2.0", "body": "@klueska for `Unified Containerization Support` I open an issue https://github.com/douban/tfmesos/issues/12 , we can further discuss the detail there.\n\nAnd for proto3, if my understanding is right, protobuf is both a compiler and runtime library. For compiler, proto3 compiler is not backward-compatible with proto2. But as long as library is generated, proto3 runtime is backward-compatible with proto2, as least I believe so.\n\nSo which compiler used to build mesos library is managed by mesos itself. Only driver developers (such as [pymesos](https://github.com/douban/pymesos) of our own) may need to pay attention to this problem. For end user, I believe both proto2 or proto3 are ok with them.\n\nthis is why I don't think https://issues.apache.org/jira/browse/MESOS-5186 is a big issue to be resolved until Mesos 2.0\n"}