{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/260392397", "html_url": "https://github.com/tensorflow/tensorflow/issues/5588#issuecomment-260392397", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5588", "id": 260392397, "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDM5MjM5Nw==", "user": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "created_at": "2016-11-14T16:54:42Z", "updated_at": "2016-11-14T16:54:42Z", "author_association": "CONTRIBUTOR", "body_html": "<p>You don't need sequence_lengths to do dynamic RNN; the fact that your time dimension is one of the axes of the inputs, and can vary from step to step, is what makes it dynamic.  Providing sequence_lengths is necessary for correctness though: if you pass these in, your final state value will be the true final state at the end of the sequence.  Otherwise it'll just keep calculating to the end of your inputs (which may include padding inputs - and this will throw your state off).  That said, it does seem that if sequence_lengths is None, we should just use array_ops.reverse to do a blind reversal.  The way bidirectional_rnn does.  PRs welcome.</p>", "body_text": "You don't need sequence_lengths to do dynamic RNN; the fact that your time dimension is one of the axes of the inputs, and can vary from step to step, is what makes it dynamic.  Providing sequence_lengths is necessary for correctness though: if you pass these in, your final state value will be the true final state at the end of the sequence.  Otherwise it'll just keep calculating to the end of your inputs (which may include padding inputs - and this will throw your state off).  That said, it does seem that if sequence_lengths is None, we should just use array_ops.reverse to do a blind reversal.  The way bidirectional_rnn does.  PRs welcome.", "body": "You don't need sequence_lengths to do dynamic RNN; the fact that your time dimension is one of the axes of the inputs, and can vary from step to step, is what makes it dynamic.  Providing sequence_lengths is necessary for correctness though: if you pass these in, your final state value will be the true final state at the end of the sequence.  Otherwise it'll just keep calculating to the end of your inputs (which may include padding inputs - and this will throw your state off).  That said, it does seem that if sequence_lengths is None, we should just use array_ops.reverse to do a blind reversal.  The way bidirectional_rnn does.  PRs welcome.\n"}