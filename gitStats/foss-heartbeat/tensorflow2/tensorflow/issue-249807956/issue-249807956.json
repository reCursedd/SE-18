{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12235", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12235/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12235/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12235/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/12235", "id": 249807956, "node_id": "MDU6SXNzdWUyNDk4MDc5NTY=", "number": 12235, "title": "Feature: add safe mode for tf.cast", "user": {"login": "facaiy", "id": 1112263, "node_id": "MDQ6VXNlcjExMTIyNjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1112263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facaiy", "html_url": "https://github.com/facaiy", "followers_url": "https://api.github.com/users/facaiy/followers", "following_url": "https://api.github.com/users/facaiy/following{/other_user}", "gists_url": "https://api.github.com/users/facaiy/gists{/gist_id}", "starred_url": "https://api.github.com/users/facaiy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facaiy/subscriptions", "organizations_url": "https://api.github.com/users/facaiy/orgs", "repos_url": "https://api.github.com/users/facaiy/repos", "events_url": "https://api.github.com/users/facaiy/events{/privacy}", "received_events_url": "https://api.github.com/users/facaiy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-08-12T11:54:40Z", "updated_at": "2017-08-24T05:36:46Z", "closed_at": "2017-08-24T05:36:46Z", "author_association": "MEMBER", "body_html": "<p>tf.cast allows to cast float value to int without any warnning. It seems quite unsafe and data will be truncated.</p>\n<div class=\"highlight highlight-source-python\"><pre>In [<span class=\"pl-c1\">34</span>]: tf.<span class=\"pl-c1\">__version__</span>\nOut[<span class=\"pl-c1\">34</span>]: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>1.2.1<span class=\"pl-pds\">'</span></span>\n\nIn [<span class=\"pl-c1\">35</span>]: sess.run(tf.cast(tf.constant(<span class=\"pl-c1\">100000</span>, tf.float32), tf.int16\n))\nOut[<span class=\"pl-c1\">35</span>]: <span class=\"pl-k\">-</span><span class=\"pl-c1\">31072</span></pre></div>\n<p>Perhaps  it will be better, like <a href=\"https://docs.scipy.org/doc/numpy/reference/generated/numpy.ndarray.astype.html\" rel=\"nofollow\">astype</a> in numpy, to add a <code>casting</code> to support both safe and unsafe casting mode.</p>\n<p>I can work on it if possible.</p>", "body_text": "tf.cast allows to cast float value to int without any warnning. It seems quite unsafe and data will be truncated.\nIn [34]: tf.__version__\nOut[34]: '1.2.1'\n\nIn [35]: sess.run(tf.cast(tf.constant(100000, tf.float32), tf.int16\n))\nOut[35]: -31072\nPerhaps  it will be better, like astype in numpy, to add a casting to support both safe and unsafe casting mode.\nI can work on it if possible.", "body": "tf.cast allows to cast float value to int without any warnning. It seems quite unsafe and data will be truncated.\r\n\r\n```python\r\nIn [34]: tf.__version__\r\nOut[34]: '1.2.1'\r\n\r\nIn [35]: sess.run(tf.cast(tf.constant(100000, tf.float32), tf.int16\r\n))\r\nOut[35]: -31072\r\n```\r\n\r\nPerhaps  it will be better, like [astype](https://docs.scipy.org/doc/numpy/reference/generated/numpy.ndarray.astype.html) in numpy, to add a `casting` to support both safe and unsafe casting mode.\r\n\r\nI can work on it if possible.\r\n"}