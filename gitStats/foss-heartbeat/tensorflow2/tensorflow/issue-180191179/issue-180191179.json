{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4663", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4663/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4663/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4663/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/4663", "id": 180191179, "node_id": "MDU6SXNzdWUxODAxOTExNzk=", "number": 4663, "title": "Control dependency on identity containing assign not working", "user": {"login": "eamartin", "id": 287200, "node_id": "MDQ6VXNlcjI4NzIwMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/287200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eamartin", "html_url": "https://github.com/eamartin", "followers_url": "https://api.github.com/users/eamartin/followers", "following_url": "https://api.github.com/users/eamartin/following{/other_user}", "gists_url": "https://api.github.com/users/eamartin/gists{/gist_id}", "starred_url": "https://api.github.com/users/eamartin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eamartin/subscriptions", "organizations_url": "https://api.github.com/users/eamartin/orgs", "repos_url": "https://api.github.com/users/eamartin/repos", "events_url": "https://api.github.com/users/eamartin/events{/privacy}", "received_events_url": "https://api.github.com/users/eamartin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 23, "created_at": "2016-09-29T23:54:40Z", "updated_at": "2017-10-14T10:37:12Z", "closed_at": "2017-06-16T22:48:54Z", "author_association": "NONE", "body_html": "<p>I'm running Tensorflow 0.10.</p>\n<p>The following code</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\nx <span class=\"pl-k\">=</span> tf.Variable(<span class=\"pl-c1\">0</span>, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.int32)\n\nold_val <span class=\"pl-k\">=</span> tf.identity(x)\n<span class=\"pl-k\">with</span> tf.control_dependencies([old_val]):\n    new_val <span class=\"pl-k\">=</span> tf.assign(x, x <span class=\"pl-k\">+</span> <span class=\"pl-c1\">1</span>)\n\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n    sess.run(tf.initialize_all_variables())\n\n    <span class=\"pl-k\">for</span> i <span class=\"pl-k\">in</span> <span class=\"pl-v\">xrange</span>(<span class=\"pl-c1\">3</span>):\n        <span class=\"pl-c1\">print</span> sess.run([old_val, new_val, x])</pre></div>\n<p>outputs</p>\n<pre><code>[1, 1, 1]\n[2, 2, 2]\n[3, 3, 3]\n</code></pre>\n<p>From reading the docs on <code>control_dependencies</code> and <code>identity</code> as well as StackOverflow, I expected output</p>\n<pre><code>[0, 1, ?]\n[1, 2, ?]\n[2, 3, ?]\n</code></pre>\n<p>where <code>?</code> indicates that the variable value is unspecified.</p>\n<p>Is this a bug? If this is not a bug, what is the correct way to refer to the value of variable before and after assignment in a single graph?</p>", "body_text": "I'm running Tensorflow 0.10.\nThe following code\nimport tensorflow as tf\n\nx = tf.Variable(0, dtype=tf.int32)\n\nold_val = tf.identity(x)\nwith tf.control_dependencies([old_val]):\n    new_val = tf.assign(x, x + 1)\n\nwith tf.Session() as sess:\n    sess.run(tf.initialize_all_variables())\n\n    for i in xrange(3):\n        print sess.run([old_val, new_val, x])\noutputs\n[1, 1, 1]\n[2, 2, 2]\n[3, 3, 3]\n\nFrom reading the docs on control_dependencies and identity as well as StackOverflow, I expected output\n[0, 1, ?]\n[1, 2, ?]\n[2, 3, ?]\n\nwhere ? indicates that the variable value is unspecified.\nIs this a bug? If this is not a bug, what is the correct way to refer to the value of variable before and after assignment in a single graph?", "body": "I'm running Tensorflow 0.10.\n\nThe following code \n\n``` python\nimport tensorflow as tf\n\nx = tf.Variable(0, dtype=tf.int32)\n\nold_val = tf.identity(x)\nwith tf.control_dependencies([old_val]):\n    new_val = tf.assign(x, x + 1)\n\nwith tf.Session() as sess:\n    sess.run(tf.initialize_all_variables())\n\n    for i in xrange(3):\n        print sess.run([old_val, new_val, x])\n```\n\noutputs\n\n```\n[1, 1, 1]\n[2, 2, 2]\n[3, 3, 3]\n```\n\nFrom reading the docs on `control_dependencies` and `identity` as well as StackOverflow, I expected output\n\n```\n[0, 1, ?]\n[1, 2, ?]\n[2, 3, ?]\n```\n\nwhere `?` indicates that the variable value is unspecified.\n\nIs this a bug? If this is not a bug, what is the correct way to refer to the value of variable before and after assignment in a single graph?\n"}