{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/336600995", "html_url": "https://github.com/tensorflow/tensorflow/issues/4663#issuecomment-336600995", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4663", "id": 336600995, "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjYwMDk5NQ==", "user": {"login": "thjashin", "id": 5267554, "node_id": "MDQ6VXNlcjUyNjc1NTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5267554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thjashin", "html_url": "https://github.com/thjashin", "followers_url": "https://api.github.com/users/thjashin/followers", "following_url": "https://api.github.com/users/thjashin/following{/other_user}", "gists_url": "https://api.github.com/users/thjashin/gists{/gist_id}", "starred_url": "https://api.github.com/users/thjashin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thjashin/subscriptions", "organizations_url": "https://api.github.com/users/thjashin/orgs", "repos_url": "https://api.github.com/users/thjashin/repos", "events_url": "https://api.github.com/users/thjashin/events{/privacy}", "received_events_url": "https://api.github.com/users/thjashin/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-14T01:41:18Z", "updated_at": "2017-10-14T01:41:18Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=23068\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/yaroslavvb\">@yaroslavvb</a> I tried but your code works because you use <code>ResourceVariable</code>. When I changed the snippet to</p>\n<div class=\"highlight highlight-source-python\"><pre>a <span class=\"pl-k\">=</span> rr.ResourceVariable(<span class=\"pl-c1\">1</span>.)\nb <span class=\"pl-k\">=</span> rr.ResourceVariable(<span class=\"pl-c1\">0</span>.)\na_old <span class=\"pl-k\">=</span> a.read_value()\nb_old <span class=\"pl-k\">=</span> b.read_value()\n<span class=\"pl-k\">with</span> tf.control_dependencies([a_old]):\n    assign_a <span class=\"pl-k\">=</span> a.assign(b_old)\n<span class=\"pl-k\">with</span> tf.control_dependencies([b_old]):\n    assign_b <span class=\"pl-k\">=</span> b.assign(a_old)\nsess <span class=\"pl-k\">=</span> tf.Session()\nsess.run(tf.global_variables_initializer())\nsess.run([a_old, b_old, assign_a, assign_b])</pre></div>\n<p>It does work.</p>\n<p>When I changed your code to</p>\n<div class=\"highlight highlight-source-python\"><pre>x <span class=\"pl-k\">=</span> tf.Variable(<span class=\"pl-c1\">0</span>, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.int32)\n\nold_val <span class=\"pl-k\">=</span> x.read_value() <span class=\"pl-c\"><span class=\"pl-c\">#</span> workaround: old_val = x+0</span>\n<span class=\"pl-k\">with</span> tf.control_dependencies([old_val]):\n    new_val <span class=\"pl-k\">=</span> tf.assign(x, x.read_value() <span class=\"pl-k\">+</span> <span class=\"pl-c1\">1</span>)\n\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n    sess.run(tf.global_variables_initializer())\n\n    <span class=\"pl-k\">for</span> i <span class=\"pl-k\">in</span> <span class=\"pl-c1\">range</span>(<span class=\"pl-c1\">3</span>):\n        <span class=\"pl-c1\">print</span>(sess.run([old_val, new_val, x.read_value()]))</pre></div>\n<p>The result is</p>\n<pre><code>[1, 1, 1]\n[2, 2, 2]\n[3, 3, 3]\n</code></pre>\n<p>Pretty strange. Just wonder why <code>control_dependencies</code> only work when the variable is <code>ResourceVariable</code>.</p>", "body_text": "@yaroslavvb I tried but your code works because you use ResourceVariable. When I changed the snippet to\na = rr.ResourceVariable(1.)\nb = rr.ResourceVariable(0.)\na_old = a.read_value()\nb_old = b.read_value()\nwith tf.control_dependencies([a_old]):\n    assign_a = a.assign(b_old)\nwith tf.control_dependencies([b_old]):\n    assign_b = b.assign(a_old)\nsess = tf.Session()\nsess.run(tf.global_variables_initializer())\nsess.run([a_old, b_old, assign_a, assign_b])\nIt does work.\nWhen I changed your code to\nx = tf.Variable(0, dtype=tf.int32)\n\nold_val = x.read_value() # workaround: old_val = x+0\nwith tf.control_dependencies([old_val]):\n    new_val = tf.assign(x, x.read_value() + 1)\n\nwith tf.Session() as sess:\n    sess.run(tf.global_variables_initializer())\n\n    for i in range(3):\n        print(sess.run([old_val, new_val, x.read_value()]))\nThe result is\n[1, 1, 1]\n[2, 2, 2]\n[3, 3, 3]\n\nPretty strange. Just wonder why control_dependencies only work when the variable is ResourceVariable.", "body": "@yaroslavvb I tried but your code works because you use `ResourceVariable`. When I changed the snippet to\r\n```python\r\na = rr.ResourceVariable(1.)\r\nb = rr.ResourceVariable(0.)\r\na_old = a.read_value()\r\nb_old = b.read_value()\r\nwith tf.control_dependencies([a_old]):\r\n    assign_a = a.assign(b_old)\r\nwith tf.control_dependencies([b_old]):\r\n    assign_b = b.assign(a_old)\r\nsess = tf.Session()\r\nsess.run(tf.global_variables_initializer())\r\nsess.run([a_old, b_old, assign_a, assign_b])\r\n```\r\nIt does work.\r\n\r\nWhen I changed your code to\r\n```python\r\nx = tf.Variable(0, dtype=tf.int32)\r\n\r\nold_val = x.read_value() # workaround: old_val = x+0\r\nwith tf.control_dependencies([old_val]):\r\n    new_val = tf.assign(x, x.read_value() + 1)\r\n\r\nwith tf.Session() as sess:\r\n    sess.run(tf.global_variables_initializer())\r\n\r\n    for i in range(3):\r\n        print(sess.run([old_val, new_val, x.read_value()]))\r\n```\r\nThe result is\r\n```\r\n[1, 1, 1]\r\n[2, 2, 2]\r\n[3, 3, 3]\r\n```\r\nPretty strange. Just wonder why `control_dependencies` only work when the variable is `ResourceVariable`."}