{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/334898270", "html_url": "https://github.com/tensorflow/tensorflow/issues/4663#issuecomment-334898270", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4663", "id": 334898270, "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDg5ODI3MA==", "user": {"login": "kjslag", "id": 233837, "node_id": "MDQ6VXNlcjIzMzgzNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/233837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjslag", "html_url": "https://github.com/kjslag", "followers_url": "https://api.github.com/users/kjslag/followers", "following_url": "https://api.github.com/users/kjslag/following{/other_user}", "gists_url": "https://api.github.com/users/kjslag/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjslag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjslag/subscriptions", "organizations_url": "https://api.github.com/users/kjslag/orgs", "repos_url": "https://api.github.com/users/kjslag/repos", "events_url": "https://api.github.com/users/kjslag/events{/privacy}", "received_events_url": "https://api.github.com/users/kjslag/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-07T00:34:58Z", "updated_at": "2017-10-07T00:34:58Z", "author_association": "CONTRIBUTOR", "body_html": "<p>real_value doesn't seem to make OP's code work. Am I doing something wrong here? The +0 workaround does work however.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\nx <span class=\"pl-k\">=</span> tf.Variable(<span class=\"pl-c1\">0</span>, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.int32)\n\nold_val <span class=\"pl-k\">=</span> x.read_value() <span class=\"pl-c\"><span class=\"pl-c\">#</span> workaround: old_val = x+0</span>\n<span class=\"pl-k\">with</span> tf.control_dependencies([old_val]):\n    new_val <span class=\"pl-k\">=</span> tf.assign(x, x <span class=\"pl-k\">+</span> <span class=\"pl-c1\">1</span>)\n\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n    sess.run(tf.global_variables_initializer())\n\n    <span class=\"pl-k\">for</span> i <span class=\"pl-k\">in</span> <span class=\"pl-c1\">range</span>(<span class=\"pl-c1\">3</span>):\n        <span class=\"pl-c1\">print</span>(sess.run([old_val, new_val, x]))</pre></div>", "body_text": "real_value doesn't seem to make OP's code work. Am I doing something wrong here? The +0 workaround does work however.\nimport tensorflow as tf\n\nx = tf.Variable(0, dtype=tf.int32)\n\nold_val = x.read_value() # workaround: old_val = x+0\nwith tf.control_dependencies([old_val]):\n    new_val = tf.assign(x, x + 1)\n\nwith tf.Session() as sess:\n    sess.run(tf.global_variables_initializer())\n\n    for i in range(3):\n        print(sess.run([old_val, new_val, x]))", "body": "real_value doesn't seem to make OP's code work. Am I doing something wrong here? The +0 workaround does work however.\r\n\r\n```python\r\nimport tensorflow as tf\r\n\r\nx = tf.Variable(0, dtype=tf.int32)\r\n\r\nold_val = x.read_value() # workaround: old_val = x+0\r\nwith tf.control_dependencies([old_val]):\r\n    new_val = tf.assign(x, x + 1)\r\n\r\nwith tf.Session() as sess:\r\n    sess.run(tf.global_variables_initializer())\r\n\r\n    for i in range(3):\r\n        print(sess.run([old_val, new_val, x]))\r\n```"}