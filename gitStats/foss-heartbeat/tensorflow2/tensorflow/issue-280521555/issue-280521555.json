{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15214", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15214/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15214/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15214/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15214", "id": 280521555, "node_id": "MDU6SXNzdWUyODA1MjE1NTU=", "number": 15214, "title": "tf.profiler overrides shape_invariants in while_loop", "user": {"login": "drasmuss", "id": 1952220, "node_id": "MDQ6VXNlcjE5NTIyMjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1952220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drasmuss", "html_url": "https://github.com/drasmuss", "followers_url": "https://api.github.com/users/drasmuss/followers", "following_url": "https://api.github.com/users/drasmuss/following{/other_user}", "gists_url": "https://api.github.com/users/drasmuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/drasmuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drasmuss/subscriptions", "organizations_url": "https://api.github.com/users/drasmuss/orgs", "repos_url": "https://api.github.com/users/drasmuss/repos", "events_url": "https://api.github.com/users/drasmuss/events{/privacy}", "received_events_url": "https://api.github.com/users/drasmuss/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586558, "node_id": "MDU6TGFiZWw0MDQ1ODY1NTg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:community%20support", "name": "stat:community support", "color": "f4b400", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2017-12-08T15:18:52Z", "updated_at": "2018-04-18T17:01:12Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Windows 10</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.5.0-dev20171120</li>\n<li><strong>Python version</strong>: 3.5</li>\n<li><strong>Bazel version (if compiling from source)</strong>: N/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: N/A</li>\n<li><strong>CUDA/cuDNN version</strong>: N/A</li>\n<li><strong>GPU model and memory</strong>: N/A</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\na <span class=\"pl-k\">=</span> tf.zeros((<span class=\"pl-c1\">1</span>,))\nn <span class=\"pl-k\">=</span> tf.constant(<span class=\"pl-c1\">10</span>.)\ndo_profile <span class=\"pl-k\">=</span> <span class=\"pl-c1\">True</span>\n\n_, b <span class=\"pl-k\">=</span> tf.while_loop(\n    <span class=\"pl-k\">lambda</span> <span class=\"pl-smi\">x</span>, <span class=\"pl-smi\">y</span>: x[<span class=\"pl-c1\">0</span>] <span class=\"pl-k\">&lt;</span> n,\n    <span class=\"pl-k\">lambda</span> <span class=\"pl-smi\">x</span>, <span class=\"pl-smi\">y</span>: (x <span class=\"pl-k\">+</span> <span class=\"pl-c1\">1</span>, tf.concat((y, x), <span class=\"pl-c1\">0</span>)),\n    (a, tf.zeros((<span class=\"pl-c1\">0</span>,))),\n    <span class=\"pl-v\">shape_invariants</span><span class=\"pl-k\">=</span>(tf.TensorShape((<span class=\"pl-c1\">1</span>,)), tf.TensorShape((<span class=\"pl-c1\">None</span>,))))\n\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n    <span class=\"pl-k\">for</span> _ <span class=\"pl-k\">in</span> <span class=\"pl-c1\">range</span>(<span class=\"pl-c1\">2</span>):\n        grads <span class=\"pl-k\">=</span> tf.gradients(b, a)\n\n        run_options <span class=\"pl-k\">=</span> tf.RunOptions(<span class=\"pl-v\">trace_level</span><span class=\"pl-k\">=</span>tf.RunOptions.<span class=\"pl-c1\">FULL_TRACE</span>)\n        run_metadata <span class=\"pl-k\">=</span> tf.RunMetadata()\n        <span class=\"pl-c1\">print</span>(sess.run((b, grads), <span class=\"pl-v\">options</span><span class=\"pl-k\">=</span>run_options,\n                       <span class=\"pl-v\">run_metadata</span><span class=\"pl-k\">=</span>run_metadata))\n\n        <span class=\"pl-k\">if</span> do_profile:\n            tf.profiler.profile(tf.get_default_graph(), <span class=\"pl-v\">run_meta</span><span class=\"pl-k\">=</span>run_metadata)</pre></div>\n<p>If <code>do_profile=True</code>, this will give an error on the second pass through the for loop:</p>\n<pre><code>Traceback (most recent call last):\n  File \".../tmp3.py\", line 15, in &lt;module&gt;\n    grads = tf.gradients(b, a)\n  File \"...\\lib\\site-packages\\tensorflow\\python\\ops\\gradients_impl.py\", line 638, in gradients\n    % (op.name, i, t_in.shape, in_grad.shape))\nValueError: Incompatible shapes between op input and calculated input gradient.  Forward operation: while/Switch_1.  Input index: 0. Original input shape: (0,).  Calculated input gradient shape: (10,)\n</code></pre>\n<h3>Describe the problem</h3>\n<p>I believe this is caused by <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/profiler/tfprof_logger.py#L37\">this function</a>, which goes through the graph and fills in missing shapes from the <code>run_metadata</code>.  This modifies the graph in-place, so on the second pass through the for loop the loop variable that was intentionally defined with an unknown shape has been overwritten with the fixed shape from the last run.  This causes the shape mismatch error.</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): 1.5.0-dev20171120\nPython version: 3.5\nBazel version (if compiling from source): N/A\nGCC/Compiler version (if compiling from source): N/A\nCUDA/cuDNN version: N/A\nGPU model and memory: N/A\nExact command to reproduce:\n\nimport tensorflow as tf\n\na = tf.zeros((1,))\nn = tf.constant(10.)\ndo_profile = True\n\n_, b = tf.while_loop(\n    lambda x, y: x[0] < n,\n    lambda x, y: (x + 1, tf.concat((y, x), 0)),\n    (a, tf.zeros((0,))),\n    shape_invariants=(tf.TensorShape((1,)), tf.TensorShape((None,))))\n\nwith tf.Session() as sess:\n    for _ in range(2):\n        grads = tf.gradients(b, a)\n\n        run_options = tf.RunOptions(trace_level=tf.RunOptions.FULL_TRACE)\n        run_metadata = tf.RunMetadata()\n        print(sess.run((b, grads), options=run_options,\n                       run_metadata=run_metadata))\n\n        if do_profile:\n            tf.profiler.profile(tf.get_default_graph(), run_meta=run_metadata)\nIf do_profile=True, this will give an error on the second pass through the for loop:\nTraceback (most recent call last):\n  File \".../tmp3.py\", line 15, in <module>\n    grads = tf.gradients(b, a)\n  File \"...\\lib\\site-packages\\tensorflow\\python\\ops\\gradients_impl.py\", line 638, in gradients\n    % (op.name, i, t_in.shape, in_grad.shape))\nValueError: Incompatible shapes between op input and calculated input gradient.  Forward operation: while/Switch_1.  Input index: 0. Original input shape: (0,).  Calculated input gradient shape: (10,)\n\nDescribe the problem\nI believe this is caused by this function, which goes through the graph and fills in missing shapes from the run_metadata.  This modifies the graph in-place, so on the second pass through the for loop the loop variable that was intentionally defined with an unknown shape has been overwritten with the fixed shape from the last run.  This causes the shape mismatch error.", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 10\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.5.0-dev20171120\r\n- **Python version**: 3.5\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**:\r\n\r\n``` python\r\nimport tensorflow as tf\r\n\r\na = tf.zeros((1,))\r\nn = tf.constant(10.)\r\ndo_profile = True\r\n\r\n_, b = tf.while_loop(\r\n    lambda x, y: x[0] < n,\r\n    lambda x, y: (x + 1, tf.concat((y, x), 0)),\r\n    (a, tf.zeros((0,))),\r\n    shape_invariants=(tf.TensorShape((1,)), tf.TensorShape((None,))))\r\n\r\nwith tf.Session() as sess:\r\n    for _ in range(2):\r\n        grads = tf.gradients(b, a)\r\n\r\n        run_options = tf.RunOptions(trace_level=tf.RunOptions.FULL_TRACE)\r\n        run_metadata = tf.RunMetadata()\r\n        print(sess.run((b, grads), options=run_options,\r\n                       run_metadata=run_metadata))\r\n\r\n        if do_profile:\r\n            tf.profiler.profile(tf.get_default_graph(), run_meta=run_metadata)\r\n```\r\n\r\nIf `do_profile=True`, this will give an error on the second pass through the for loop:\r\n```\r\nTraceback (most recent call last):\r\n  File \".../tmp3.py\", line 15, in <module>\r\n    grads = tf.gradients(b, a)\r\n  File \"...\\lib\\site-packages\\tensorflow\\python\\ops\\gradients_impl.py\", line 638, in gradients\r\n    % (op.name, i, t_in.shape, in_grad.shape))\r\nValueError: Incompatible shapes between op input and calculated input gradient.  Forward operation: while/Switch_1.  Input index: 0. Original input shape: (0,).  Calculated input gradient shape: (10,)\r\n```\r\n\r\n### Describe the problem\r\n\r\nI believe this is caused by [this function](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/profiler/tfprof_logger.py#L37), which goes through the graph and fills in missing shapes from the `run_metadata`.  This modifies the graph in-place, so on the second pass through the for loop the loop variable that was intentionally defined with an unknown shape has been overwritten with the fixed shape from the last run.  This causes the shape mismatch error.\r\n  "}