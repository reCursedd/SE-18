{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17130", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17130/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17130/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17130/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17130", "id": 298306000, "node_id": "MDU6SXNzdWUyOTgzMDYwMDA=", "number": 17130, "title": "Java: SIGSEGV when `Tensors.create`-ing from an uninitialized array", "user": {"login": "benmosher", "id": 3709196, "node_id": "MDQ6VXNlcjM3MDkxOTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/3709196?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benmosher", "html_url": "https://github.com/benmosher", "followers_url": "https://api.github.com/users/benmosher/followers", "following_url": "https://api.github.com/users/benmosher/following{/other_user}", "gists_url": "https://api.github.com/users/benmosher/gists{/gist_id}", "starred_url": "https://api.github.com/users/benmosher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benmosher/subscriptions", "organizations_url": "https://api.github.com/users/benmosher/orgs", "repos_url": "https://api.github.com/users/benmosher/repos", "events_url": "https://api.github.com/users/benmosher/events{/privacy}", "received_events_url": "https://api.github.com/users/benmosher/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-02-19T15:01:11Z", "updated_at": "2018-02-23T05:43:34Z", "closed_at": "2018-02-23T05:43:34Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:<br>\nmacOS 10.13.3<br>\nJRE version: Java(TM) SE Runtime Environment (8.0_121-b13) (build 1.8.0_121-b13)</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: maven</li>\n</ul>\n<div class=\"highlight highlight-text-xml\"><pre>    &lt;<span class=\"pl-ent\">dependency</span>&gt;\n      &lt;<span class=\"pl-ent\">groupId</span>&gt;org.tensorflow&lt;/<span class=\"pl-ent\">groupId</span>&gt;\n      &lt;<span class=\"pl-ent\">artifactId</span>&gt;tensorflow&lt;/<span class=\"pl-ent\">artifactId</span>&gt;\n      &lt;<span class=\"pl-ent\">version</span>&gt;1.4.0&lt;/<span class=\"pl-ent\">version</span>&gt;\n    &lt;/<span class=\"pl-ent\">dependency</span>&gt;</pre></div>\n<ul>\n<li><strong>TensorFlow version (use command below)</strong>: 1.4.0</li>\n<li><strong>Python version</strong>: N/A</li>\n<li><strong>Bazel version (if compiling from source)</strong>: N/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: N/A</li>\n<li><strong>CUDA/cuDNN version</strong>: N/A</li>\n<li><strong>GPU model and memory</strong>: N/A</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<div class=\"highlight highlight-source-java\"><pre>    <span class=\"pl-c\"><span class=\"pl-c\">//</span> JUnit test case</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> testSigSegv() {\n        <span class=\"pl-k\">byte</span>[][] bb <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">byte</span>[<span class=\"pl-c1\">3</span>][];  <span class=\"pl-c\"><span class=\"pl-c\">//</span> note: new byte[3][1] doesn't crash, presumably it is initialized by the compile</span>\n\n        bb[<span class=\"pl-c1\">0</span>] <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">byte</span>[] { <span class=\"pl-c1\">0</span> };\n        bb[<span class=\"pl-c1\">1</span>] <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">byte</span>[] { <span class=\"pl-c1\">1</span> };\n        <span class=\"pl-c\"><span class=\"pl-c\">//</span> no bb[2]</span>\n\n        <span class=\"pl-c\"><span class=\"pl-c\">//</span> next line sigsegv's</span>\n        <span class=\"pl-smi\">Tensors</span><span class=\"pl-k\">.</span>create(bb);\n    }</pre></div>\n<h3>Describe the problem</h3>\n<p>Using <code>Tensors.create</code> to get a <code>Tensor&lt;String&gt;</code> from an uninitialized 2D <code>byte</code> array (<code>byte[][]</code>) results in a <code>SIGSEGV</code> from JNI. See full log below.</p>\n<h3>Source code / logs</h3>\n<p>When running the above test case, I get the following output.</p>\n<pre><code>#\n# A fatal error has been detected by the Java Runtime Environment:\n#\n#  SIGSEGV (0xb) at pc=0x000000010571f0b3, pid=30179, tid=0x0000000000001a03\n#\n# JRE version: Java(TM) SE Runtime Environment (8.0_121-b13) (build 1.8.0_121-b13)\n# Java VM: Java HotSpot(TM) 64-Bit Server VM (25.121-b13 mixed mode bsd-amd64 compressed oops)\n# Problematic frame:\n# V  [libjvm.dylib+0x31f0b3]\n#\n# Failed to write core dump. Core dumps have been disabled. To enable core dumping, try \"ulimit -c unlimited\" before starting Java again\n#\n# An error report file with more information is saved as:\n# /Users/ben/AGLabs/nfl/JavaProjects/nlp/hs_err_pid30179.log\n#\n# If you would like to submit a bug report, please visit:\n#   http://bugreport.java.com/bugreport/crash.jsp\n#\n\nProcess finished with exit code 134 (interrupted by signal 6: SIGABRT)\n</code></pre>\n<p>I'm not familiar enough with JNI in general to know if I'm expecting too much. I won't be surprised if you mark this <code>wontfix</code>, I was just surprised to be able to crash the process with a segfault given some bad data. Easy enough to work around (I will size/init my arrays more carefully) but thought you might want to know.</p>\n<p>Cheers! Thanks so much for this library!</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nmacOS 10.13.3\nJRE version: Java(TM) SE Runtime Environment (8.0_121-b13) (build 1.8.0_121-b13)\nTensorFlow installed from (source or binary): maven\n\n    <dependency>\n      <groupId>org.tensorflow</groupId>\n      <artifactId>tensorflow</artifactId>\n      <version>1.4.0</version>\n    </dependency>\n\nTensorFlow version (use command below): 1.4.0\nPython version: N/A\nBazel version (if compiling from source): N/A\nGCC/Compiler version (if compiling from source): N/A\nCUDA/cuDNN version: N/A\nGPU model and memory: N/A\nExact command to reproduce:\n\n    // JUnit test case\n    public void testSigSegv() {\n        byte[][] bb = new byte[3][];  // note: new byte[3][1] doesn't crash, presumably it is initialized by the compile\n\n        bb[0] = new byte[] { 0 };\n        bb[1] = new byte[] { 1 };\n        // no bb[2]\n\n        // next line sigsegv's\n        Tensors.create(bb);\n    }\nDescribe the problem\nUsing Tensors.create to get a Tensor<String> from an uninitialized 2D byte array (byte[][]) results in a SIGSEGV from JNI. See full log below.\nSource code / logs\nWhen running the above test case, I get the following output.\n#\n# A fatal error has been detected by the Java Runtime Environment:\n#\n#  SIGSEGV (0xb) at pc=0x000000010571f0b3, pid=30179, tid=0x0000000000001a03\n#\n# JRE version: Java(TM) SE Runtime Environment (8.0_121-b13) (build 1.8.0_121-b13)\n# Java VM: Java HotSpot(TM) 64-Bit Server VM (25.121-b13 mixed mode bsd-amd64 compressed oops)\n# Problematic frame:\n# V  [libjvm.dylib+0x31f0b3]\n#\n# Failed to write core dump. Core dumps have been disabled. To enable core dumping, try \"ulimit -c unlimited\" before starting Java again\n#\n# An error report file with more information is saved as:\n# /Users/ben/AGLabs/nfl/JavaProjects/nlp/hs_err_pid30179.log\n#\n# If you would like to submit a bug report, please visit:\n#   http://bugreport.java.com/bugreport/crash.jsp\n#\n\nProcess finished with exit code 134 (interrupted by signal 6: SIGABRT)\n\nI'm not familiar enough with JNI in general to know if I'm expecting too much. I won't be surprised if you mark this wontfix, I was just surprised to be able to crash the process with a segfault given some bad data. Easy enough to work around (I will size/init my arrays more carefully) but thought you might want to know.\nCheers! Thanks so much for this library!", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: \r\n  macOS 10.13.3\r\n  JRE version: Java(TM) SE Runtime Environment (8.0_121-b13) (build 1.8.0_121-b13)\r\n- **TensorFlow installed from (source or binary)**: maven\r\n```xml\r\n    <dependency>\r\n      <groupId>org.tensorflow</groupId>\r\n      <artifactId>tensorflow</artifactId>\r\n      <version>1.4.0</version>\r\n    </dependency>\r\n```\r\n- **TensorFlow version (use command below)**: 1.4.0\r\n- **Python version**: N/A\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**:\r\n\r\n```java\r\n    // JUnit test case\r\n    public void testSigSegv() {\r\n        byte[][] bb = new byte[3][];  // note: new byte[3][1] doesn't crash, presumably it is initialized by the compile\r\n\r\n        bb[0] = new byte[] { 0 };\r\n        bb[1] = new byte[] { 1 };\r\n        // no bb[2]\r\n\r\n        // next line sigsegv's\r\n        Tensors.create(bb);\r\n    }\r\n```\r\n\r\n### Describe the problem\r\n\r\nUsing `Tensors.create` to get a `Tensor<String>` from an uninitialized 2D `byte` array (`byte[][]`) results in a `SIGSEGV` from JNI. See full log below.\r\n\r\n### Source code / logs\r\n\r\nWhen running the above test case, I get the following output.\r\n```\r\n#\r\n# A fatal error has been detected by the Java Runtime Environment:\r\n#\r\n#  SIGSEGV (0xb) at pc=0x000000010571f0b3, pid=30179, tid=0x0000000000001a03\r\n#\r\n# JRE version: Java(TM) SE Runtime Environment (8.0_121-b13) (build 1.8.0_121-b13)\r\n# Java VM: Java HotSpot(TM) 64-Bit Server VM (25.121-b13 mixed mode bsd-amd64 compressed oops)\r\n# Problematic frame:\r\n# V  [libjvm.dylib+0x31f0b3]\r\n#\r\n# Failed to write core dump. Core dumps have been disabled. To enable core dumping, try \"ulimit -c unlimited\" before starting Java again\r\n#\r\n# An error report file with more information is saved as:\r\n# /Users/ben/AGLabs/nfl/JavaProjects/nlp/hs_err_pid30179.log\r\n#\r\n# If you would like to submit a bug report, please visit:\r\n#   http://bugreport.java.com/bugreport/crash.jsp\r\n#\r\n\r\nProcess finished with exit code 134 (interrupted by signal 6: SIGABRT)\r\n```\r\n\r\nI'm not familiar enough with JNI in general to know if I'm expecting too much. I won't be surprised if you mark this `wontfix`, I was just surprised to be able to crash the process with a segfault given some bad data. Easy enough to work around (I will size/init my arrays more carefully) but thought you might want to know.\r\n\r\nCheers! Thanks so much for this library!\r\n"}