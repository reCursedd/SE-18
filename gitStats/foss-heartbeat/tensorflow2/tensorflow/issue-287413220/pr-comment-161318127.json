{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/161318127", "pull_request_review_id": 88571426, "id": 161318127, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MTMxODEyNw==", "diff_hunk": "@@ -78,39 +83,46 @@ void RdmaMgr::SetupChannels() {\n       mr->set_rkey(rc->message_buffers_[i]->self_->rkey);\n     }\n     // synchronous call\n-    Status s = client->GetRemoteAddress(&req, &resp);\n-    // save obtained remote addresses\n-    // connect to the remote channel\n-    if (s.ok()) {\n-      CHECK(worker_name.compare(resp.host_name()) == 0);\n-      RdmaAddress ra;\n-      ra.lid = resp.channel().lid();\n-      ra.qpn = resp.channel().qpn();\n-      ra.psn = resp.channel().psn();\n-      ra.snp = resp.channel().snp();\n-      ra.iid = resp.channel().iid();\n-      rc->SetRemoteAddress(ra, false);\n-      rc->Connect();\n-      int i = 0;\n-      int idx[] = {1, 0, 3, 2};\n-      for (const auto& mr : resp.mr()) {\n-        // the connections are crossed, i.e.\n-        // local tx_message_buffer <---> remote rx_message_buffer_\n-        // local rx_message_buffer <---> remote tx_message_buffer_\n-        // local tx_ack_buffer <---> remote rx_ack_buffer_\n-        // local rx_ack_buffer <---> remote tx_ack_buffer_\n-        // hence idx[] = {1, 0, 3, 2}.\n-        RdmaBuffer* rb = rc->message_buffers_[idx[i]];\n-        RemoteMR rmr;\n-        rmr.remote_addr = mr.remote_addr();\n-        rmr.rkey = mr.rkey();\n-        rb->SetRemoteMR(rmr, false);\n-        i++;\n+    Status s;\n+    int attempts = 0;\n+    static const int max_num_attempts = 5;\n+    do {\n+      s = client->GetRemoteAddress(&req, &resp);\n+      // save obtained remote addresses\n+      // connect to the remote channel\n+      if (s.ok()) {\n+        CHECK(worker_name.compare(resp.host_name()) == 0);\n+        RdmaAddress ra;\n+        ra.lid = resp.channel().lid();\n+        ra.qpn = resp.channel().qpn();\n+        ra.psn = resp.channel().psn();\n+        ra.snp = resp.channel().snp();\n+        ra.iid = resp.channel().iid();\n+        rc->SetRemoteAddress(ra, false);\n+        rc->Connect();\n+        int i = 0;\n+        int idx[] = {1, 0};\n+        for (const auto& mr : resp.mr()) {\n+          // the connections are crossed, i.e.\n+          // local tx_message_buffer <---> remote rx_message_buffer_\n+          // local rx_message_buffer <---> remote tx_message_buffer_\n+          // hence idx[] = {1, 0}.\n+          RdmaMessageBuffer* rb = rc->message_buffers_[idx[i]];\n+          RemoteMR rmr;\n+          rmr.remote_addr = mr.remote_addr();\n+          rmr.rkey = mr.rkey();\n+          rb->SetRemoteMR(rmr, false);\n+          i++;\n+        }\n+        CHECK(i == RdmaChannel::kNumMessageBuffers);\n+      } else {\n+        LOG(ERROR) << s.error_message();\n+        if (++attempts == max_num_attempts) {\n+          break;\n+        }\n+        usleep(2000000);", "path": "tensorflow/contrib/verbs/rdma_mgr.cc", "position": null, "original_position": 86, "commit_id": "c9189ae40f9860f77fe6a3741d287b049184d5f2", "original_commit_id": "f15b6492deda4f15a7c1eb47895b4adbc87bd1e6", "user": {"login": "poxvoculi", "id": 15676913, "node_id": "MDQ6VXNlcjE1Njc2OTEz", "avatar_url": "https://avatars2.githubusercontent.com/u/15676913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poxvoculi", "html_url": "https://github.com/poxvoculi", "followers_url": "https://api.github.com/users/poxvoculi/followers", "following_url": "https://api.github.com/users/poxvoculi/following{/other_user}", "gists_url": "https://api.github.com/users/poxvoculi/gists{/gist_id}", "starred_url": "https://api.github.com/users/poxvoculi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poxvoculi/subscriptions", "organizations_url": "https://api.github.com/users/poxvoculi/orgs", "repos_url": "https://api.github.com/users/poxvoculi/repos", "events_url": "https://api.github.com/users/poxvoculi/events{/privacy}", "received_events_url": "https://api.github.com/users/poxvoculi/received_events", "type": "User", "site_admin": false}, "body": "consider Env::SleepForMicroseconds()", "created_at": "2018-01-12T20:28:23Z", "updated_at": "2018-01-17T14:03:09Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/16005#discussion_r161318127", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/16005", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/161318127"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/16005#discussion_r161318127"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/16005"}}, "body_html": "<p>consider Env::SleepForMicroseconds()</p>", "body_text": "consider Env::SleepForMicroseconds()"}