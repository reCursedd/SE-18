{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22871", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22871/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22871/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22871/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/22871", "id": 368745716, "node_id": "MDU6SXNzdWUzNjg3NDU3MTY=", "number": 22871, "title": "Dataset.shuffle gives same order with any seed if reshuffle_each_iteration=False", "user": {"login": "SiLiKhon", "id": 13967024, "node_id": "MDQ6VXNlcjEzOTY3MDI0", "avatar_url": "https://avatars0.githubusercontent.com/u/13967024?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SiLiKhon", "html_url": "https://github.com/SiLiKhon", "followers_url": "https://api.github.com/users/SiLiKhon/followers", "following_url": "https://api.github.com/users/SiLiKhon/following{/other_user}", "gists_url": "https://api.github.com/users/SiLiKhon/gists{/gist_id}", "starred_url": "https://api.github.com/users/SiLiKhon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SiLiKhon/subscriptions", "organizations_url": "https://api.github.com/users/SiLiKhon/orgs", "repos_url": "https://api.github.com/users/SiLiKhon/repos", "events_url": "https://api.github.com/users/SiLiKhon/events{/privacy}", "received_events_url": "https://api.github.com/users/SiLiKhon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-10T16:19:32Z", "updated_at": "2018-10-10T22:13:27Z", "closed_at": "2018-10-10T22:13:27Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: OS X 10.11.6</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>: N/A</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary (anaconda)</li>\n<li><strong>TensorFlow version (use command below)</strong>: b'unknown' 1.10.0</li>\n<li><strong>Python version</strong>:<br>\nPython 3.6.6 |Anaconda custom (64-bit)| (default, Jun 28 2018, 11:07:29)<br>\n[GCC 4.2.1 Compatible Clang 4.0.1 (tags/RELEASE_401/final)] on darwin</li>\n<li><strong>Bazel version (if compiling from source)</strong>: N/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: N/A</li>\n<li><strong>CUDA/cuDNN version</strong>: N/A</li>\n<li><strong>GPU model and memory</strong>: N/A</li>\n<li><strong>Exact command to reproduce</strong>:<br>\nin python interactive session</li>\n</ul>\n<pre><code>&gt;&gt;&gt; op1 = tf.data.Dataset.from_tensor_slices(list(range(100))).shuffle(100, seed=0, reshuffle_each_iteration=False).repeat().make_one_shot_iterator().get_next()\n&gt;&gt;&gt; op2 = tf.data.Dataset.from_tensor_slices(list(range(100))).shuffle(100, seed=1, reshuffle_each_iteration=False).repeat().make_one_shot_iterator().get_next()\n&gt;&gt;&gt; sess = tf.InteractiveSession()\n2018-10-10 18:56:24.996286: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.1 SSE4.2 AVX AVX2 FMA\n&gt;&gt;&gt; sess.run([op1, op2])\n[85, 85]\n&gt;&gt;&gt; sess.run([op1, op2])\n[1, 1]\n&gt;&gt;&gt; sess.run([op1, op2])\n[54, 54]\n</code></pre>\n<p>One can see that op1 and op2 fetch elements in same order. If reshuffle_each_iteration is set to True, the element order is different as expected. I believe different seed values should result in different element order for op1 and op2, no matter what the value of reshuffle_each_iteration is.</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): OS X 10.11.6\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A\nTensorFlow installed from (source or binary): binary (anaconda)\nTensorFlow version (use command below): b'unknown' 1.10.0\nPython version:\nPython 3.6.6 |Anaconda custom (64-bit)| (default, Jun 28 2018, 11:07:29)\n[GCC 4.2.1 Compatible Clang 4.0.1 (tags/RELEASE_401/final)] on darwin\nBazel version (if compiling from source): N/A\nGCC/Compiler version (if compiling from source): N/A\nCUDA/cuDNN version: N/A\nGPU model and memory: N/A\nExact command to reproduce:\nin python interactive session\n\n>>> op1 = tf.data.Dataset.from_tensor_slices(list(range(100))).shuffle(100, seed=0, reshuffle_each_iteration=False).repeat().make_one_shot_iterator().get_next()\n>>> op2 = tf.data.Dataset.from_tensor_slices(list(range(100))).shuffle(100, seed=1, reshuffle_each_iteration=False).repeat().make_one_shot_iterator().get_next()\n>>> sess = tf.InteractiveSession()\n2018-10-10 18:56:24.996286: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.1 SSE4.2 AVX AVX2 FMA\n>>> sess.run([op1, op2])\n[85, 85]\n>>> sess.run([op1, op2])\n[1, 1]\n>>> sess.run([op1, op2])\n[54, 54]\n\nOne can see that op1 and op2 fetch elements in same order. If reshuffle_each_iteration is set to True, the element order is different as expected. I believe different seed values should result in different element order for op1 and op2, no matter what the value of reshuffle_each_iteration is.", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: OS X 10.11.6\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**: N/A\r\n- **TensorFlow installed from (source or binary)**: binary (anaconda)\r\n- **TensorFlow version (use command below)**: b'unknown' 1.10.0\r\n- **Python version**:\r\nPython 3.6.6 |Anaconda custom (64-bit)| (default, Jun 28 2018, 11:07:29) \r\n[GCC 4.2.1 Compatible Clang 4.0.1 (tags/RELEASE_401/final)] on darwin\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**:\r\nin python interactive session\r\n\r\n```\r\n>>> op1 = tf.data.Dataset.from_tensor_slices(list(range(100))).shuffle(100, seed=0, reshuffle_each_iteration=False).repeat().make_one_shot_iterator().get_next()\r\n>>> op2 = tf.data.Dataset.from_tensor_slices(list(range(100))).shuffle(100, seed=1, reshuffle_each_iteration=False).repeat().make_one_shot_iterator().get_next()\r\n>>> sess = tf.InteractiveSession()\r\n2018-10-10 18:56:24.996286: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.1 SSE4.2 AVX AVX2 FMA\r\n>>> sess.run([op1, op2])\r\n[85, 85]\r\n>>> sess.run([op1, op2])\r\n[1, 1]\r\n>>> sess.run([op1, op2])\r\n[54, 54]\r\n```\r\n\r\nOne can see that op1 and op2 fetch elements in same order. If reshuffle_each_iteration is set to True, the element order is different as expected. I believe different seed values should result in different element order for op1 and op2, no matter what the value of reshuffle_each_iteration is."}