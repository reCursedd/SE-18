{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/348732993", "html_url": "https://github.com/tensorflow/tensorflow/issues/12454#issuecomment-348732993", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12454", "id": 348732993, "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODczMjk5Mw==", "user": {"login": "ppwwyyxx", "id": 1381301, "node_id": "MDQ6VXNlcjEzODEzMDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1381301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ppwwyyxx", "html_url": "https://github.com/ppwwyyxx", "followers_url": "https://api.github.com/users/ppwwyyxx/followers", "following_url": "https://api.github.com/users/ppwwyyxx/following{/other_user}", "gists_url": "https://api.github.com/users/ppwwyyxx/gists{/gist_id}", "starred_url": "https://api.github.com/users/ppwwyyxx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ppwwyyxx/subscriptions", "organizations_url": "https://api.github.com/users/ppwwyyxx/orgs", "repos_url": "https://api.github.com/users/ppwwyyxx/repos", "events_url": "https://api.github.com/users/ppwwyyxx/events{/privacy}", "received_events_url": "https://api.github.com/users/ppwwyyxx/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-03T01:20:33Z", "updated_at": "2017-12-03T01:20:44Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Relevant code here:<br>\n<div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/c9db2486ead95f000395af14919f0ae8f508e429/tensorflow/python/ops/math_ops.py#L894-L907\">tensorflow/tensorflow/python/ops/math_ops.py</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 894 to 907\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/c9db2486ead95f000395af14919f0ae8f508e429\">c9db248</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L894\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"894\"></td>\n          <td id=\"LC894\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">def</span> <span class=\"pl-en\">binary_op_wrapper</span>(<span class=\"pl-smi\">x</span>, <span class=\"pl-smi\">y</span>): </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L895\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"895\"></td>\n          <td id=\"LC895\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-k\">with</span> ops.name_scope(<span class=\"pl-c1\">None</span>, op_name, [x, y]) <span class=\"pl-k\">as</span> name: </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L896\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"896\"></td>\n          <td id=\"LC896\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-k\">if</span> <span class=\"pl-k\">not</span> <span class=\"pl-c1\">isinstance</span>(y, sparse_tensor.SparseTensor): </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L897\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"897\"></td>\n          <td id=\"LC897\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">       <span class=\"pl-k\">try</span>: </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L898\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"898\"></td>\n          <td id=\"LC898\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">         y <span class=\"pl-k\">=</span> ops.convert_to_tensor(y, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>x.dtype.base_dtype, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>y<span class=\"pl-pds\">\"</span></span>) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L899\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"899\"></td>\n          <td id=\"LC899\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">       <span class=\"pl-k\">except</span> <span class=\"pl-c1\">TypeError</span>: </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L900\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"900\"></td>\n          <td id=\"LC900\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">         <span class=\"pl-c\"><span class=\"pl-c\">#</span> If the RHS is not a tensor, it might be a tensor aware object</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L901\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"901\"></td>\n          <td id=\"LC901\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">         <span class=\"pl-c\"><span class=\"pl-c\">#</span> that can implement the operator with knowledge of itself</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L902\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"902\"></td>\n          <td id=\"LC902\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">         <span class=\"pl-c\"><span class=\"pl-c\">#</span> and the tensor.</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L903\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"903\"></td>\n          <td id=\"LC903\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">         <span class=\"pl-k\">if</span> <span class=\"pl-c1\">hasattr</span>(<span class=\"pl-c1\">type</span>(y), <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>__r<span class=\"pl-c1\">%s</span>__<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%</span> op_name): </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L904\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"904\"></td>\n          <td id=\"LC904\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">           <span class=\"pl-k\">return</span> <span class=\"pl-c1\">NotImplemented</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L905\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"905\"></td>\n          <td id=\"LC905\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">         <span class=\"pl-k\">else</span>: </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L906\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"906\"></td>\n          <td id=\"LC906\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">           <span class=\"pl-k\">raise</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L907\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"907\"></td>\n          <td id=\"LC907\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-k\">return</span> func(x, y, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span>name) </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<p><code>x.__mul__(0.5)</code> returns NotImplemented, then <code>0.5.__rmul__(x)</code> is called. Both failed therefore Python throws an error with its predefined message.</p>", "body_text": "Relevant code here:\n\n  \n    \n      tensorflow/tensorflow/python/ops/math_ops.py\n    \n    \n        Lines 894 to 907\n      in\n      c9db248\n    \n    \n    \n    \n\n        \n          \n           def binary_op_wrapper(x, y): \n        \n\n        \n          \n             with ops.name_scope(None, op_name, [x, y]) as name: \n        \n\n        \n          \n               if not isinstance(y, sparse_tensor.SparseTensor): \n        \n\n        \n          \n                 try: \n        \n\n        \n          \n                   y = ops.convert_to_tensor(y, dtype=x.dtype.base_dtype, name=\"y\") \n        \n\n        \n          \n                 except TypeError: \n        \n\n        \n          \n                   # If the RHS is not a tensor, it might be a tensor aware object \n        \n\n        \n          \n                   # that can implement the operator with knowledge of itself \n        \n\n        \n          \n                   # and the tensor. \n        \n\n        \n          \n                   if hasattr(type(y), \"__r%s__\" % op_name): \n        \n\n        \n          \n                     return NotImplemented \n        \n\n        \n          \n                   else: \n        \n\n        \n          \n                     raise \n        \n\n        \n          \n               return func(x, y, name=name) \n        \n    \n  \n\n\nx.__mul__(0.5) returns NotImplemented, then 0.5.__rmul__(x) is called. Both failed therefore Python throws an error with its predefined message.", "body": "Relevant code here:\r\nhttps://github.com/tensorflow/tensorflow/blob/c9db2486ead95f000395af14919f0ae8f508e429/tensorflow/python/ops/math_ops.py#L894-L907\r\n\r\n`x.__mul__(0.5)` returns NotImplemented, then `0.5.__rmul__(x)` is called. Both failed therefore Python throws an error with its predefined message. "}