{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/210641516", "html_url": "https://github.com/tensorflow/tensorflow/issues/1344#issuecomment-210641516", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1344", "id": 210641516, "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDY0MTUxNg==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2016-04-15T20:50:02Z", "updated_at": "2016-04-15T20:50:02Z", "author_association": "CONTRIBUTOR", "body_html": "<p>An update here: you can call <code>Session.run()</code> passing a <code>RunOptions</code> protobuf that requests a trace, and fills in a <code>RunMetadata</code> protobuf with details of all the ops that ran, on which device they ran, and how long they took. I think this gives you the programmatic access that you're looking for. Here's an example:</p>\n<p><div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/6f90ede2496134777a948fea872b17a67b4f6ef2/tensorflow/python/client/session_test.py#L913\">tensorflow/tensorflow/python/client/session_test.py</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n         Line 913\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/6f90ede2496134777a948fea872b17a67b4f6ef2\">6f90ede</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L913\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"913\"></td>\n          <td id=\"LC913\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">def</span> <span class=\"pl-en\">testPerStepTrace</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>): </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>", "body_text": "An update here: you can call Session.run() passing a RunOptions protobuf that requests a trace, and fills in a RunMetadata protobuf with details of all the ops that ran, on which device they ran, and how long they took. I think this gives you the programmatic access that you're looking for. Here's an example:\n\n  \n    \n      tensorflow/tensorflow/python/client/session_test.py\n    \n    \n         Line 913\n      in\n      6f90ede\n    \n    \n    \n    \n\n        \n          \n           def testPerStepTrace(self):", "body": "An update here: you can call `Session.run()` passing a `RunOptions` protobuf that requests a trace, and fills in a `RunMetadata` protobuf with details of all the ops that ran, on which device they ran, and how long they took. I think this gives you the programmatic access that you're looking for. Here's an example:\n\nhttps://github.com/tensorflow/tensorflow/blob/6f90ede2496134777a948fea872b17a67b4f6ef2/tensorflow/python/client/session_test.py#L913\n"}