{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/277761166", "html_url": "https://github.com/tensorflow/tensorflow/issues/7288#issuecomment-277761166", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7288", "id": 277761166, "node_id": "MDEyOklzc3VlQ29tbWVudDI3Nzc2MTE2Ng==", "user": {"login": "jart", "id": 49262, "node_id": "MDQ6VXNlcjQ5MjYy", "avatar_url": "https://avatars1.githubusercontent.com/u/49262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jart", "html_url": "https://github.com/jart", "followers_url": "https://api.github.com/users/jart/followers", "following_url": "https://api.github.com/users/jart/following{/other_user}", "gists_url": "https://api.github.com/users/jart/gists{/gist_id}", "starred_url": "https://api.github.com/users/jart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jart/subscriptions", "organizations_url": "https://api.github.com/users/jart/orgs", "repos_url": "https://api.github.com/users/jart/repos", "events_url": "https://api.github.com/users/jart/events{/privacy}", "received_events_url": "https://api.github.com/users/jart/received_events", "type": "User", "site_admin": false}, "created_at": "2017-02-06T17:58:54Z", "updated_at": "2017-02-06T17:58:54Z", "author_association": "MEMBER", "body_html": "<p>Since copts and linkopts are viral and propagate to dependencies, <code>-lpthread</code> is most likely being inherited from <code>@boringssl//:crypto</code>. See: <a href=\"https://github.com/google/boringssl/blob/bbcaa15b0647816b9a1a9b9e0d209cd6712f0105/BUILD#L91\">https://github.com/google/boringssl/blob/bbcaa15b0647816b9a1a9b9e0d209cd6712f0105/BUILD#L91</a></p>\n<p>If linking against BoringSSL for an Android build is genuinely a good thing to do, then this could be a bug. Hey <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=161459\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/petewarden\">@petewarden</a> what's the correct way to get SSL functionality for Android code? Should our friend be using a different library?</p>\n<p><strong>Unrelated suggestions:</strong></p>\n<blockquote>\n<p>name = \"libfoo.so\",</p>\n</blockquote>\n<p>Just name it <code>\"foo\"</code> because when Bazel builds this, it will prefix <code>lib</code> and append <code>.so</code> by default.</p>\n<blockquote>\n<p>copts = [ \"-fexceptions\", \"-DEIGEN_AVOID_STL_ARRAY\",<br>\n\"-mfpu=neon\", \"-std=c++11\",<br>\n\"-DMIN_LOG_LEVEL=0\", \"-DTF_LEAN_BINARY\",<br>\n\"-O2\", ],</p>\n</blockquote>\n<p>Many of these flags might already be inherited from the <code>@org_tensorflow//tensorflow/core:android_tensorflow_lib</code> dependency.</p>\n<p>The <code>-O2</code> (or maybe <code>-O3</code>) flag is set by default when you say <code>bazel build -c opt</code>.</p>\n<p>Bazel should already pass flags like <code>-std=c++11</code> by default.</p>\n<p>Another thing to note is that <code>bazel build -s //blah</code> is good for troubleshooting.</p>", "body_text": "Since copts and linkopts are viral and propagate to dependencies, -lpthread is most likely being inherited from @boringssl//:crypto. See: https://github.com/google/boringssl/blob/bbcaa15b0647816b9a1a9b9e0d209cd6712f0105/BUILD#L91\nIf linking against BoringSSL for an Android build is genuinely a good thing to do, then this could be a bug. Hey @petewarden what's the correct way to get SSL functionality for Android code? Should our friend be using a different library?\nUnrelated suggestions:\n\nname = \"libfoo.so\",\n\nJust name it \"foo\" because when Bazel builds this, it will prefix lib and append .so by default.\n\ncopts = [ \"-fexceptions\", \"-DEIGEN_AVOID_STL_ARRAY\",\n\"-mfpu=neon\", \"-std=c++11\",\n\"-DMIN_LOG_LEVEL=0\", \"-DTF_LEAN_BINARY\",\n\"-O2\", ],\n\nMany of these flags might already be inherited from the @org_tensorflow//tensorflow/core:android_tensorflow_lib dependency.\nThe -O2 (or maybe -O3) flag is set by default when you say bazel build -c opt.\nBazel should already pass flags like -std=c++11 by default.\nAnother thing to note is that bazel build -s //blah is good for troubleshooting.", "body": "Since copts and linkopts are viral and propagate to dependencies, `-lpthread` is most likely being inherited from `@boringssl//:crypto`. See: https://github.com/google/boringssl/blob/bbcaa15b0647816b9a1a9b9e0d209cd6712f0105/BUILD#L91\r\n\r\nIf linking against BoringSSL for an Android build is genuinely a good thing to do, then this could be a bug. Hey @petewarden what's the correct way to get SSL functionality for Android code? Should our friend be using a different library?\r\n\r\n**Unrelated suggestions:**\r\n\r\n> name = \"libfoo.so\",\r\n\r\nJust name it `\"foo\"` because when Bazel builds this, it will prefix `lib` and append `.so` by default.\r\n\r\n>    copts = [ \"-fexceptions\", \"-DEIGEN_AVOID_STL_ARRAY\",\r\n>              \"-mfpu=neon\", \"-std=c++11\",\r\n>              \"-DMIN_LOG_LEVEL=0\", \"-DTF_LEAN_BINARY\",\r\n>              \"-O2\", ],\r\n\r\nMany of these flags might already be inherited from the `@org_tensorflow//tensorflow/core:android_tensorflow_lib` dependency.\r\n\r\nThe `-O2` (or maybe `-O3`) flag is set by default when you say `bazel build -c opt`.\r\n\r\nBazel should already pass flags like `-std=c++11` by default.\r\n\r\nAnother thing to note is that `bazel build -s //blah` is good for troubleshooting."}