{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/284376291", "html_url": "https://github.com/tensorflow/tensorflow/issues/5432#issuecomment-284376291", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5432", "id": 284376291, "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDM3NjI5MQ==", "user": {"login": "brb1901", "id": 11439287, "node_id": "MDQ6VXNlcjExNDM5Mjg3", "avatar_url": "https://avatars3.githubusercontent.com/u/11439287?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brb1901", "html_url": "https://github.com/brb1901", "followers_url": "https://api.github.com/users/brb1901/followers", "following_url": "https://api.github.com/users/brb1901/following{/other_user}", "gists_url": "https://api.github.com/users/brb1901/gists{/gist_id}", "starred_url": "https://api.github.com/users/brb1901/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brb1901/subscriptions", "organizations_url": "https://api.github.com/users/brb1901/orgs", "repos_url": "https://api.github.com/users/brb1901/repos", "events_url": "https://api.github.com/users/brb1901/events{/privacy}", "received_events_url": "https://api.github.com/users/brb1901/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-06T11:53:05Z", "updated_at": "2017-03-06T11:54:56Z", "author_association": "NONE", "body_html": "<p>Just as a heads-up: this or a similar issue still caused problems for me, when using ./configure before building TensorFlow (1.0) from source. On a Ubuntu 16.04 machine with reliable internet connection (no proxy or anything funny), CUDA 8.0, CuDNN 5.1, and apparently after <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=49262\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jart\">@jart</a>'s bazel fix that includes multiple mirrors.</p>\n<p>It seems to me to be some bazel timeout issue, where the timeout happens perhaps too quickly for some files. In my case configure couldn't download the swig-3.0.8.tar.gz file and ended with:</p>\n<p>BUILD:2275:1: every rule of type _py_wrap_cc implicitly depends upon the target '@swig//:swig', but this target could not be found because of: no such package '@swig//': Error downloading [http://bazel-mirror.storage.googleapis.com/ufpr.dl.sourceforge.net/project/swig/swig/swig-3.0.8/swig-3.0.8.tar.gz, http://ufpr.dl.sourceforge.net/project/swig/swig/swig-3.0.8/swig-3.0.8.tar.gz, http://pilotfiber.dl.sourceforge.net/project/swig/swig/swig-3.0.8/swig-3.0.8.tar.gz] to /home/bram/.cache/bazel/_bazel_bram/f835375b14587b3eef360885d19162a0/external/swig/swig-3.0.8.tar.gz: All mirrors are down: [].<br>\nERROR: Evaluation of query \"deps((//tensorflow/... - //tensorflow/examples/android/...))\" failed: errors were encountered while computing transitive closure.</p>\n<p>I had no problems downloading the file with wget. It took a considerable number of seconds to make the connection though (although, like I said, my internet connection is solid -- but in Europe); which is why I suspect bazel timeouts a bit too quickly in some cases. It would be nice if this were easily configurable.</p>\n<p>In the end I used the workaround suggested by sunil3590 on Aug 1, 2016 as described here: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"116273316\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/bazelbuild/bazel/issues/587\" data-hovercard-type=\"issue\" data-hovercard-url=\"/bazelbuild/bazel/issues/587/hovercard\" href=\"https://github.com/bazelbuild/bazel/issues/587\">bazelbuild/bazel#587</a> . Basically downloading the file yourself, using <code>python -m SimpleHTTPServer 8000</code> to host it locally, and adapt workspace.bzl to download that file from that local host instead of from the original, remote sites. That worked but isn't pretty.</p>", "body_text": "Just as a heads-up: this or a similar issue still caused problems for me, when using ./configure before building TensorFlow (1.0) from source. On a Ubuntu 16.04 machine with reliable internet connection (no proxy or anything funny), CUDA 8.0, CuDNN 5.1, and apparently after @jart's bazel fix that includes multiple mirrors.\nIt seems to me to be some bazel timeout issue, where the timeout happens perhaps too quickly for some files. In my case configure couldn't download the swig-3.0.8.tar.gz file and ended with:\nBUILD:2275:1: every rule of type _py_wrap_cc implicitly depends upon the target '@swig//:swig', but this target could not be found because of: no such package '@swig//': Error downloading [http://bazel-mirror.storage.googleapis.com/ufpr.dl.sourceforge.net/project/swig/swig/swig-3.0.8/swig-3.0.8.tar.gz, http://ufpr.dl.sourceforge.net/project/swig/swig/swig-3.0.8/swig-3.0.8.tar.gz, http://pilotfiber.dl.sourceforge.net/project/swig/swig/swig-3.0.8/swig-3.0.8.tar.gz] to /home/bram/.cache/bazel/_bazel_bram/f835375b14587b3eef360885d19162a0/external/swig/swig-3.0.8.tar.gz: All mirrors are down: [].\nERROR: Evaluation of query \"deps((//tensorflow/... - //tensorflow/examples/android/...))\" failed: errors were encountered while computing transitive closure.\nI had no problems downloading the file with wget. It took a considerable number of seconds to make the connection though (although, like I said, my internet connection is solid -- but in Europe); which is why I suspect bazel timeouts a bit too quickly in some cases. It would be nice if this were easily configurable.\nIn the end I used the workaround suggested by sunil3590 on Aug 1, 2016 as described here: bazelbuild/bazel#587 . Basically downloading the file yourself, using python -m SimpleHTTPServer 8000 to host it locally, and adapt workspace.bzl to download that file from that local host instead of from the original, remote sites. That worked but isn't pretty.", "body": "Just as a heads-up: this or a similar issue still caused problems for me, when using ./configure before building TensorFlow (1.0) from source. On a Ubuntu 16.04 machine with reliable internet connection (no proxy or anything funny), CUDA 8.0, CuDNN 5.1, and apparently after @jart's bazel fix that includes multiple mirrors.\r\n\r\nIt seems to me to be some bazel timeout issue, where the timeout happens perhaps too quickly for some files. In my case configure couldn't download the swig-3.0.8.tar.gz file and ended with:\r\n\r\nBUILD:2275:1: every rule of type _py_wrap_cc implicitly depends upon the target '@swig//:swig', but this target could not be found because of: no such package '@swig//': Error downloading [http://bazel-mirror.storage.googleapis.com/ufpr.dl.sourceforge.net/project/swig/swig/swig-3.0.8/swig-3.0.8.tar.gz, http://ufpr.dl.sourceforge.net/project/swig/swig/swig-3.0.8/swig-3.0.8.tar.gz, http://pilotfiber.dl.sourceforge.net/project/swig/swig/swig-3.0.8/swig-3.0.8.tar.gz] to /home/bram/.cache/bazel/_bazel_bram/f835375b14587b3eef360885d19162a0/external/swig/swig-3.0.8.tar.gz: All mirrors are down: [].\r\nERROR: Evaluation of query \"deps((//tensorflow/... - //tensorflow/examples/android/...))\" failed: errors were encountered while computing transitive closure.\r\n\r\nI had no problems downloading the file with wget. It took a considerable number of seconds to make the connection though (although, like I said, my internet connection is solid -- but in Europe); which is why I suspect bazel timeouts a bit too quickly in some cases. It would be nice if this were easily configurable.\r\n\r\nIn the end I used the workaround suggested by sunil3590 on Aug 1, 2016 as described here: https://github.com/bazelbuild/bazel/issues/587 . Basically downloading the file yourself, using `python -m SimpleHTTPServer 8000` to host it locally, and adapt workspace.bzl to download that file from that local host instead of from the original, remote sites. That worked but isn't pretty.\r\n"}