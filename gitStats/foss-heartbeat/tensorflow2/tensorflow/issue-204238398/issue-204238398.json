{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7158", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7158/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7158/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7158/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/7158", "id": 204238398, "node_id": "MDU6SXNzdWUyMDQyMzgzOTg=", "number": 7158, "title": "Documentation for Inference from saved model", "user": {"login": "ashokvishnoi1994", "id": 5569972, "node_id": "MDQ6VXNlcjU1Njk5NzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/5569972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashokvishnoi1994", "html_url": "https://github.com/ashokvishnoi1994", "followers_url": "https://api.github.com/users/ashokvishnoi1994/followers", "following_url": "https://api.github.com/users/ashokvishnoi1994/following{/other_user}", "gists_url": "https://api.github.com/users/ashokvishnoi1994/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashokvishnoi1994/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashokvishnoi1994/subscriptions", "organizations_url": "https://api.github.com/users/ashokvishnoi1994/orgs", "repos_url": "https://api.github.com/users/ashokvishnoi1994/repos", "events_url": "https://api.github.com/users/ashokvishnoi1994/events{/privacy}", "received_events_url": "https://api.github.com/users/ashokvishnoi1994/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "petewarden", "id": 161459, "node_id": "MDQ6VXNlcjE2MTQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/161459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petewarden", "html_url": "https://github.com/petewarden", "followers_url": "https://api.github.com/users/petewarden/followers", "following_url": "https://api.github.com/users/petewarden/following{/other_user}", "gists_url": "https://api.github.com/users/petewarden/gists{/gist_id}", "starred_url": "https://api.github.com/users/petewarden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petewarden/subscriptions", "organizations_url": "https://api.github.com/users/petewarden/orgs", "repos_url": "https://api.github.com/users/petewarden/repos", "events_url": "https://api.github.com/users/petewarden/events{/privacy}", "received_events_url": "https://api.github.com/users/petewarden/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "petewarden", "id": 161459, "node_id": "MDQ6VXNlcjE2MTQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/161459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petewarden", "html_url": "https://github.com/petewarden", "followers_url": "https://api.github.com/users/petewarden/followers", "following_url": "https://api.github.com/users/petewarden/following{/other_user}", "gists_url": "https://api.github.com/users/petewarden/gists{/gist_id}", "starred_url": "https://api.github.com/users/petewarden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petewarden/subscriptions", "organizations_url": "https://api.github.com/users/petewarden/orgs", "repos_url": "https://api.github.com/users/petewarden/repos", "events_url": "https://api.github.com/users/petewarden/events{/privacy}", "received_events_url": "https://api.github.com/users/petewarden/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2017-01-31T09:08:13Z", "updated_at": "2017-06-16T16:48:48Z", "closed_at": "2017-06-16T16:48:47Z", "author_association": "NONE", "body_html": "<p>As explained at <a href=\"https://www.tensorflow.org/tutorials/mnist/pros/#build_a_multilayer_convolutional_network\" rel=\"nofollow\">https://www.tensorflow.org/tutorials/mnist/pros/#build_a_multilayer_convolutional_network</a> I created a CNN for MNIST image recognition. I don't want to test it in the same script so I trained the model, saved the checkpoint files and graph structure and then using freeze_graph.py script(<a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/tools/freeze_graph.py\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/tools/freeze_graph.py</a>)  I froze it into single .pb file. Now using this .pb file I want to check the accuracy of the model but there is no clear documentation as to how to do it. There is one example written in examples/label_images directory but that too is in C++ and for inception network. I have already parsed the .pb file and made a tf.Graph object.</p>", "body_text": "As explained at https://www.tensorflow.org/tutorials/mnist/pros/#build_a_multilayer_convolutional_network I created a CNN for MNIST image recognition. I don't want to test it in the same script so I trained the model, saved the checkpoint files and graph structure and then using freeze_graph.py script(https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/tools/freeze_graph.py)  I froze it into single .pb file. Now using this .pb file I want to check the accuracy of the model but there is no clear documentation as to how to do it. There is one example written in examples/label_images directory but that too is in C++ and for inception network. I have already parsed the .pb file and made a tf.Graph object.", "body": "As explained at https://www.tensorflow.org/tutorials/mnist/pros/#build_a_multilayer_convolutional_network I created a CNN for MNIST image recognition. I don't want to test it in the same script so I trained the model, saved the checkpoint files and graph structure and then using freeze_graph.py script(https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/tools/freeze_graph.py)  I froze it into single .pb file. Now using this .pb file I want to check the accuracy of the model but there is no clear documentation as to how to do it. There is one example written in examples/label_images directory but that too is in C++ and for inception network. I have already parsed the .pb file and made a tf.Graph object.  "}