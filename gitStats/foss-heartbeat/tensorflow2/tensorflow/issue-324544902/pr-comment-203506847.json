{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/203506847", "pull_request_review_id": 138411003, "id": 203506847, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzUwNjg0Nw==", "diff_hunk": "@@ -467,65 +466,62 @@ class MklAvgPoolingOp : public MklPoolingForwardOpBase<T> {\n \n       // If input is an empty tensor, allocate an empty output tensor and return\n       if (input_tensor.NumElements() == 0) {\n-        MklDnnShape output_mkl_shape;\n-        output_mkl_shape.SetMklTensor(false);\n-        TensorShape output_tf_shape;\n-        if (pool_params.data_format == TensorFormat::FORMAT_NCHW) {\n-          output_tf_shape = MklDnnDimsToTFShape(output_dims_mkl_order);\n-        } else {\n-          memory::dims output_dims_NHWC_order;\n-          output_dims_NHWC_order = {pool_params.tensor_in_batch,\n-                                    static_cast<int>(pool_params.out_height),\n-                                    static_cast<int>(pool_params.out_width),\n-                                    pool_params.out_depth};\n-          output_tf_shape = MklDnnDimsToTFShape(output_dims_NHWC_order);\n-        }\n         const int kOutputIndex = 0;\n-        AllocateOutputSetMklShape(context, kOutputIndex, &output_tensor,\n-                                  output_tf_shape, output_mkl_shape);\n-        CHECK_NOTNULL(output_tensor);\n+        this->AllocateEmptyOutputTensor(context, kOutputIndex, &pool_params,\n+                                        output_dims_mkl_order, &output_tensor);\n         return;\n       }\n \n-      // If input is in Mkl layout, then just get the memory format from it\n-      // directly, instead of using input data_format to AvgPool.\n-      if (dnn_shape_input.IsMklTensor()) {\n-        dnn_data_output.SetUsrMem(\n-            output_dims_mkl_order,\n-            static_cast<memory::format>(\n-                dnn_data_input.GetUsrMemDesc().data.format));\n+      memory::dims filter_dims, strides, padding_left, padding_right;\n+      this->PoolParamsToDims(&pool_params, &filter_dims, &strides,\n+          &padding_left, &padding_right);\n+\n+      // Get the input memory descriptor\n+      memory::desc input_md = dnn_shape_input.IsMklTensor()\n+          ? dnn_shape_input.GetMklLayout()\n+          : memory::desc(TFShapeToMklDnnDimsInNCHW(input_tensor_shape,\n+                this->data_format_tf_),\n+                MklDnnType<T>(), this->data_format_mkldnn_);\n+\n+      // Get src/filter/stride/padding information\n+      memory::dims src_dims = dnn_shape_input.IsMklTensor()\n+                            ? dnn_shape_input.GetSizesAsMklDnnDims()\n+                            : TFShapeToMklDnnDimsInNCHW(input_tensor.shape(),\n+                                   this->data_format_tf_);\n+\n+      // Get an average pooling primitive from the op pool\n+      MklPoolingFwdPrimitive<T> *pooling_fwd = nullptr;\n+      MklPoolingParams fwdParams(src_dims, output_dims_mkl_order, filter_dims,\n+          strides, padding_left, padding_right,\n+          algorithm::pooling_avg_exclude_padding);\n+      pooling_fwd = MklPoolingFwdPrimitiveFactory<T>::Get(fwdParams);\n+\n+      // allocate output tensor\n+      this->AllocateOutputTensor(context, *(pooling_fwd->GetPoolingFwdPd()),\n+          output_dims_mkl_order, this->data_format_mkldnn_, &output_tensor);\n+      CHECK_NOTNULL(output_tensor);\n+\n+      OP_REQUIRES_OK(context, context->status());\n \n+      // check whether we need to reorder src\n+      T* src_data = nullptr;", "path": "tensorflow/core/kernels/mkl_avgpooling_op.cc", "position": null, "original_position": 94, "commit_id": "6fdc6be324df7e3f7e3162e161ef4e869bd888fb", "original_commit_id": "d490493cd4848422e5480e8a30a0a88af07641ad", "user": {"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}, "body": "Make this be \"const T*\". Perhaps simplify code a bit by just doing something\r\n```\r\nconst T* src_data = input_tensor.flat<T>().data();\r\nif (input_md.data.format != pooling_fwd->GetSrcMemoryFormat()) {\r\n   ...\r\n   // overwrite src_data\r\n}\r\n```", "created_at": "2018-07-18T19:48:52Z", "updated_at": "2018-07-31T15:47:59Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/19403#discussion_r203506847", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/19403", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/203506847"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/19403#discussion_r203506847"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/19403"}}, "body_html": "<p>Make this be \"const T*\". Perhaps simplify code a bit by just doing something</p>\n<pre><code>const T* src_data = input_tensor.flat&lt;T&gt;().data();\nif (input_md.data.format != pooling_fwd-&gt;GetSrcMemoryFormat()) {\n   ...\n   // overwrite src_data\n}\n</code></pre>", "body_text": "Make this be \"const T*\". Perhaps simplify code a bit by just doing something\nconst T* src_data = input_tensor.flat<T>().data();\nif (input_md.data.format != pooling_fwd->GetSrcMemoryFormat()) {\n   ...\n   // overwrite src_data\n}"}