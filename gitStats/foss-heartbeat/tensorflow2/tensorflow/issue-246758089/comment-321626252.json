{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/321626252", "html_url": "https://github.com/tensorflow/tensorflow/pull/11907#issuecomment-321626252", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11907", "id": 321626252, "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTYyNjI1Mg==", "user": {"login": "DavidNorman", "id": 606831, "node_id": "MDQ6VXNlcjYwNjgzMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/606831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DavidNorman", "html_url": "https://github.com/DavidNorman", "followers_url": "https://api.github.com/users/DavidNorman/followers", "following_url": "https://api.github.com/users/DavidNorman/following{/other_user}", "gists_url": "https://api.github.com/users/DavidNorman/gists{/gist_id}", "starred_url": "https://api.github.com/users/DavidNorman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DavidNorman/subscriptions", "organizations_url": "https://api.github.com/users/DavidNorman/orgs", "repos_url": "https://api.github.com/users/DavidNorman/repos", "events_url": "https://api.github.com/users/DavidNorman/events{/privacy}", "received_events_url": "https://api.github.com/users/DavidNorman/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-10T17:54:14Z", "updated_at": "2017-08-10T17:54:14Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Again, I wonder why the GPU reverse convolution is allowed a special label, but 3rd party devices are not?</p>\n<p>Having gone to the trouble of identifying large combinations of ops, I do not really want to have to go back through them again at elaboration time, in order to figure out what I knew before.</p>\n<pre><code>  // Sigmoid\n  {{HloOpcode::kAdd, true, nullptr, {4, 1}},\n   {HloOpcode::kMultiply, true, nullptr, {4, 2}},\n   {HloOpcode::kTanh, true, nullptr, {3}},\n   {HloOpcode::kMultiply, true, nullptr, {4, -1}},\n   {HloOpcode::kConstant, true, IsConstantHalf, {}}},\n\n  // BiasAdd on convolution (explicit broadcast)\n  {{HloOpcode::kAdd, true, nullptr, {1, 2}},\n   {HloOpcode::kCall, false, IsPoplarConvolution, {-1, -1}},\n   {HloOpcode::kBroadcast, true, nullptr, {-1}}},\n\n  // Random truncated normal with post scale and add\n  {{HloOpcode::kAdd, true, nullptr, {2, 1}},\n   {HloOpcode::kConstant, true, nullptr, {}},\n   {HloOpcode::kMultiply, true, nullptr, {4, 3}},\n   {HloOpcode::kConstant, true, nullptr, {}},\n   {HloOpcode::kWhile, true, IsTruncatedNormalWhile, {5}},\n   {HloOpcode::kRng, true, nullptr, {6, 7}},\n   {HloOpcode::kConstant, true, nullptr, {}},\n   {HloOpcode::kConstant, true, nullptr, {}}},\n</code></pre>", "body_text": "Again, I wonder why the GPU reverse convolution is allowed a special label, but 3rd party devices are not?\nHaving gone to the trouble of identifying large combinations of ops, I do not really want to have to go back through them again at elaboration time, in order to figure out what I knew before.\n  // Sigmoid\n  {{HloOpcode::kAdd, true, nullptr, {4, 1}},\n   {HloOpcode::kMultiply, true, nullptr, {4, 2}},\n   {HloOpcode::kTanh, true, nullptr, {3}},\n   {HloOpcode::kMultiply, true, nullptr, {4, -1}},\n   {HloOpcode::kConstant, true, IsConstantHalf, {}}},\n\n  // BiasAdd on convolution (explicit broadcast)\n  {{HloOpcode::kAdd, true, nullptr, {1, 2}},\n   {HloOpcode::kCall, false, IsPoplarConvolution, {-1, -1}},\n   {HloOpcode::kBroadcast, true, nullptr, {-1}}},\n\n  // Random truncated normal with post scale and add\n  {{HloOpcode::kAdd, true, nullptr, {2, 1}},\n   {HloOpcode::kConstant, true, nullptr, {}},\n   {HloOpcode::kMultiply, true, nullptr, {4, 3}},\n   {HloOpcode::kConstant, true, nullptr, {}},\n   {HloOpcode::kWhile, true, IsTruncatedNormalWhile, {5}},\n   {HloOpcode::kRng, true, nullptr, {6, 7}},\n   {HloOpcode::kConstant, true, nullptr, {}},\n   {HloOpcode::kConstant, true, nullptr, {}}},", "body": "Again, I wonder why the GPU reverse convolution is allowed a special label, but 3rd party devices are not?\r\n\r\nHaving gone to the trouble of identifying large combinations of ops, I do not really want to have to go back through them again at elaboration time, in order to figure out what I knew before.\r\n\r\n```\r\n  // Sigmoid\r\n  {{HloOpcode::kAdd, true, nullptr, {4, 1}},\r\n   {HloOpcode::kMultiply, true, nullptr, {4, 2}},\r\n   {HloOpcode::kTanh, true, nullptr, {3}},\r\n   {HloOpcode::kMultiply, true, nullptr, {4, -1}},\r\n   {HloOpcode::kConstant, true, IsConstantHalf, {}}},\r\n\r\n  // BiasAdd on convolution (explicit broadcast)\r\n  {{HloOpcode::kAdd, true, nullptr, {1, 2}},\r\n   {HloOpcode::kCall, false, IsPoplarConvolution, {-1, -1}},\r\n   {HloOpcode::kBroadcast, true, nullptr, {-1}}},\r\n\r\n  // Random truncated normal with post scale and add\r\n  {{HloOpcode::kAdd, true, nullptr, {2, 1}},\r\n   {HloOpcode::kConstant, true, nullptr, {}},\r\n   {HloOpcode::kMultiply, true, nullptr, {4, 3}},\r\n   {HloOpcode::kConstant, true, nullptr, {}},\r\n   {HloOpcode::kWhile, true, IsTruncatedNormalWhile, {5}},\r\n   {HloOpcode::kRng, true, nullptr, {6, 7}},\r\n   {HloOpcode::kConstant, true, nullptr, {}},\r\n   {HloOpcode::kConstant, true, nullptr, {}}},\r\n```\r\n\r\n"}