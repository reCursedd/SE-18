{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/338445755", "html_url": "https://github.com/tensorflow/tensorflow/issues/13883#issuecomment-338445755", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13883", "id": 338445755, "node_id": "MDEyOklzc3VlQ29tbWVudDMzODQ0NTc1NQ==", "user": {"login": "drpngx", "id": 20959853, "node_id": "MDQ6VXNlcjIwOTU5ODUz", "avatar_url": "https://avatars1.githubusercontent.com/u/20959853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drpngx", "html_url": "https://github.com/drpngx", "followers_url": "https://api.github.com/users/drpngx/followers", "following_url": "https://api.github.com/users/drpngx/following{/other_user}", "gists_url": "https://api.github.com/users/drpngx/gists{/gist_id}", "starred_url": "https://api.github.com/users/drpngx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drpngx/subscriptions", "organizations_url": "https://api.github.com/users/drpngx/orgs", "repos_url": "https://api.github.com/users/drpngx/repos", "events_url": "https://api.github.com/users/drpngx/events{/privacy}", "received_events_url": "https://api.github.com/users/drpngx/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-22T02:17:30Z", "updated_at": "2017-10-22T02:17:30Z", "author_association": "MEMBER", "body_html": "<div class=\"email-fragment\">Cc <a class=\"user-mention\" href=\"https://github.com/mrry\">@mrry</a>\n\nI'm surprised that the data interface would be slow. Can you publish how\nyou treated that?</div>\n<span class=\"email-hidden-toggle\"><a href=\"#\">\u2026</a></span><div class=\"email-hidden-reply\">\n<div class=\"email-quoted-reply\">On Sat, Oct 21, 2017, 7:15 PM littleDing ***@***.***&gt; wrote:\n The build-in interfaces(both tf.data and csv op) are to slow for large\n scale data.\n Early tests (at about 2016-11 with tensorflow 1.0 or earlier version)\n shows that use cython + pandas + feeddict to load csv data would be 2~5x\n speed up than the build-in ops.\n\n A problem using pandas + feeddict is that it blocks with the python GIL\n and python codes is still slow, thus the speed up would scale when number\n of threads is over 5.\n\n So I'm wondering if it is possible to translate the codes into pure cpp so\n that it could benefit from the tf.queue ops.\n\n \u2014\n You are receiving this because you were assigned.\n Reply to this email directly, view it on GitHub\n &lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"267398358\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/13883\" href=\"https://github.com/tensorflow/tensorflow/issues/13883#issuecomment-338445604\">#13883 (comment)</a>&gt;,\n or mute the thread\n &lt;<a href=\"https://github.com/notifications/unsubscribe-auth/AT_SbQEklezj6kjSp60LRQ7WTEDwWywjks5suqVDgaJpZM4QBpDI\">https://github.com/notifications/unsubscribe-auth/AT_SbQEklezj6kjSp60LRQ7WTEDwWywjks5suqVDgaJpZM4QBpDI</a>&gt;\n .\n</div>\n<div class=\"email-fragment\"></div>\n</div>", "body_text": "Cc @mrry\n\nI'm surprised that the data interface would be slow. Can you publish how\nyou treated that?\n\u2026\nOn Sat, Oct 21, 2017, 7:15 PM littleDing ***@***.***> wrote:\n The build-in interfaces(both tf.data and csv op) are to slow for large\n scale data.\n Early tests (at about 2016-11 with tensorflow 1.0 or earlier version)\n shows that use cython + pandas + feeddict to load csv data would be 2~5x\n speed up than the build-in ops.\n\n A problem using pandas + feeddict is that it blocks with the python GIL\n and python codes is still slow, thus the speed up would scale when number\n of threads is over 5.\n\n So I'm wondering if it is possible to translate the codes into pure cpp so\n that it could benefit from the tf.queue ops.\n\n \u2014\n You are receiving this because you were assigned.\n Reply to this email directly, view it on GitHub\n <#13883 (comment)>,\n or mute the thread\n <https://github.com/notifications/unsubscribe-auth/AT_SbQEklezj6kjSp60LRQ7WTEDwWywjks5suqVDgaJpZM4QBpDI>\n .", "body": "Cc @mrry\n\nI'm surprised that the data interface would be slow. Can you publish how\nyou treated that?\n\nOn Sat, Oct 21, 2017, 7:15 PM littleDing <notifications@github.com> wrote:\n\n> The build-in interfaces(both tf.data and csv op) are to slow for large\n> scale data.\n> Early tests (at about 2016-11 with tensorflow 1.0 or earlier version)\n> shows that use cython + pandas + feeddict to load csv data would be 2~5x\n> speed up than the build-in ops.\n>\n> A problem using pandas + feeddict is that it blocks with the python GIL\n> and python codes is still slow, thus the speed up would scale when number\n> of threads is over 5.\n>\n> So I'm wondering if it is possible to translate the codes into pure cpp so\n> that it could benefit from the tf.queue ops.\n>\n> \u2014\n> You are receiving this because you were assigned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/tensorflow/issues/13883#issuecomment-338445604>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AT_SbQEklezj6kjSp60LRQ7WTEDwWywjks5suqVDgaJpZM4QBpDI>\n> .\n>\n"}