{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/372476513", "html_url": "https://github.com/tensorflow/tensorflow/issues/17590#issuecomment-372476513", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17590", "id": 372476513, "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjQ3NjUxMw==", "user": {"login": "allenlavoie", "id": 3731025, "node_id": "MDQ6VXNlcjM3MzEwMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3731025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/allenlavoie", "html_url": "https://github.com/allenlavoie", "followers_url": "https://api.github.com/users/allenlavoie/followers", "following_url": "https://api.github.com/users/allenlavoie/following{/other_user}", "gists_url": "https://api.github.com/users/allenlavoie/gists{/gist_id}", "starred_url": "https://api.github.com/users/allenlavoie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/allenlavoie/subscriptions", "organizations_url": "https://api.github.com/users/allenlavoie/orgs", "repos_url": "https://api.github.com/users/allenlavoie/repos", "events_url": "https://api.github.com/users/allenlavoie/events{/privacy}", "received_events_url": "https://api.github.com/users/allenlavoie/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-12T21:57:25Z", "updated_at": "2018-03-12T21:57:25Z", "author_association": "MEMBER", "body_html": "<p>The more worrying/unexpected issues here were PyObject leaks due to missing Py_DECREFs in our C code. Those are now fixed, although some of the changes haven't synced to github yet (give them a day or so).</p>\n<p>The main issue is that there's a bit of <code>variable_scope</code> code run by <code>Layer</code>s which means creating new <code>Layer</code>s in a loop will take quadratic time (closing a <code>variable_scope</code> is linear in the number of existing <code>variable_scope</code>s). We'll fix that eventually (potentially by removing <code>variable_scope</code> in TF2.x), but there's a relatively easy workaround in the meantime. You can either wrap your <code>Layer</code> creation in a <code>with tfe.EagerVariableStore().as_default():</code> block or reset the default graph on each iteration. This will ensure that <code>variable_scope</code> names don't build up in this dictionary.</p>", "body_text": "The more worrying/unexpected issues here were PyObject leaks due to missing Py_DECREFs in our C code. Those are now fixed, although some of the changes haven't synced to github yet (give them a day or so).\nThe main issue is that there's a bit of variable_scope code run by Layers which means creating new Layers in a loop will take quadratic time (closing a variable_scope is linear in the number of existing variable_scopes). We'll fix that eventually (potentially by removing variable_scope in TF2.x), but there's a relatively easy workaround in the meantime. You can either wrap your Layer creation in a with tfe.EagerVariableStore().as_default(): block or reset the default graph on each iteration. This will ensure that variable_scope names don't build up in this dictionary.", "body": "The more worrying/unexpected issues here were PyObject leaks due to missing Py_DECREFs in our C code. Those are now fixed, although some of the changes haven't synced to github yet (give them a day or so).\r\n\r\nThe main issue is that there's a bit of `variable_scope` code run by `Layer`s which means creating new `Layer`s in a loop will take quadratic time (closing a `variable_scope` is linear in the number of existing `variable_scope`s). We'll fix that eventually (potentially by removing `variable_scope` in TF2.x), but there's a relatively easy workaround in the meantime. You can either wrap your `Layer` creation in a `with tfe.EagerVariableStore().as_default():` block or reset the default graph on each iteration. This will ensure that `variable_scope` names don't build up in this dictionary."}