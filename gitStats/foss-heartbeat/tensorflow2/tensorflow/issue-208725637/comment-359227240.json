{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/359227240", "html_url": "https://github.com/tensorflow/tensorflow/issues/7669#issuecomment-359227240", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7669", "id": 359227240, "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTIyNzI0MA==", "user": {"login": "lam", "id": 21777, "node_id": "MDQ6VXNlcjIxNzc3", "avatar_url": "https://avatars0.githubusercontent.com/u/21777?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lam", "html_url": "https://github.com/lam", "followers_url": "https://api.github.com/users/lam/followers", "following_url": "https://api.github.com/users/lam/following{/other_user}", "gists_url": "https://api.github.com/users/lam/gists{/gist_id}", "starred_url": "https://api.github.com/users/lam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lam/subscriptions", "organizations_url": "https://api.github.com/users/lam/orgs", "repos_url": "https://api.github.com/users/lam/repos", "events_url": "https://api.github.com/users/lam/events{/privacy}", "received_events_url": "https://api.github.com/users/lam/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-21T06:26:24Z", "updated_at": "2018-01-21T06:26:24Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=25079800\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/agniszczotka\">@agniszczotka</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5517413\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/alyaxey\">@alyaxey</a> Using Experiment works and enables me to run validation along with training. However, I've found that the batch size is probably encoded as a constant instead of a symbolic tensor for the input node even though it is coded as a reshape node with variable batch size (i.e, tf.reshape(features[\"x\"], [-1, ...]). As a result, in the Android code, I have to allocate an array of similar size as the batch size to store the output (i.e, fetch()).</p>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/21777/35191494-b266e372-fe30-11e7-96eb-cc5cb7fbb2a5.png\"><img width=\"711\" alt=\"screen shot 2018-01-20 at 10 15 16 pm\" src=\"https://user-images.githubusercontent.com/21777/35191494-b266e372-fe30-11e7-96eb-cc5cb7fbb2a5.png\" style=\"max-width:100%;\"></a></p>", "body_text": "@agniszczotka @alyaxey Using Experiment works and enables me to run validation along with training. However, I've found that the batch size is probably encoded as a constant instead of a symbolic tensor for the input node even though it is coded as a reshape node with variable batch size (i.e, tf.reshape(features[\"x\"], [-1, ...]). As a result, in the Android code, I have to allocate an array of similar size as the batch size to store the output (i.e, fetch()).", "body": "@agniszczotka @alyaxey Using Experiment works and enables me to run validation along with training. However, I've found that the batch size is probably encoded as a constant instead of a symbolic tensor for the input node even though it is coded as a reshape node with variable batch size (i.e, tf.reshape(features[\"x\"], [-1, ...]). As a result, in the Android code, I have to allocate an array of similar size as the batch size to store the output (i.e, fetch()). \r\n\r\n<img width=\"711\" alt=\"screen shot 2018-01-20 at 10 15 16 pm\" src=\"https://user-images.githubusercontent.com/21777/35191494-b266e372-fe30-11e7-96eb-cc5cb7fbb2a5.png\">"}