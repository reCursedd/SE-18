{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7993", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7993/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7993/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7993/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/7993", "id": 211275152, "node_id": "MDU6SXNzdWUyMTEyNzUxNTI=", "number": 7993, "title": "tf.contrib.slim Out of Date API", "user": {"login": "jinfagang", "id": 21303438, "node_id": "MDQ6VXNlcjIxMzAzNDM4", "avatar_url": "https://avatars3.githubusercontent.com/u/21303438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jinfagang", "html_url": "https://github.com/jinfagang", "followers_url": "https://api.github.com/users/jinfagang/followers", "following_url": "https://api.github.com/users/jinfagang/following{/other_user}", "gists_url": "https://api.github.com/users/jinfagang/gists{/gist_id}", "starred_url": "https://api.github.com/users/jinfagang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jinfagang/subscriptions", "organizations_url": "https://api.github.com/users/jinfagang/orgs", "repos_url": "https://api.github.com/users/jinfagang/repos", "events_url": "https://api.github.com/users/jinfagang/events{/privacy}", "received_events_url": "https://api.github.com/users/jinfagang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473184161, "node_id": "MDU6TGFiZWw0NzMxODQxNjE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:support", "name": "type:support", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "tfboyd", "id": 23486130, "node_id": "MDQ6VXNlcjIzNDg2MTMw", "avatar_url": "https://avatars1.githubusercontent.com/u/23486130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tfboyd", "html_url": "https://github.com/tfboyd", "followers_url": "https://api.github.com/users/tfboyd/followers", "following_url": "https://api.github.com/users/tfboyd/following{/other_user}", "gists_url": "https://api.github.com/users/tfboyd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tfboyd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tfboyd/subscriptions", "organizations_url": "https://api.github.com/users/tfboyd/orgs", "repos_url": "https://api.github.com/users/tfboyd/repos", "events_url": "https://api.github.com/users/tfboyd/events{/privacy}", "received_events_url": "https://api.github.com/users/tfboyd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tfboyd", "id": 23486130, "node_id": "MDQ6VXNlcjIzNDg2MTMw", "avatar_url": "https://avatars1.githubusercontent.com/u/23486130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tfboyd", "html_url": "https://github.com/tfboyd", "followers_url": "https://api.github.com/users/tfboyd/followers", "following_url": "https://api.github.com/users/tfboyd/following{/other_user}", "gists_url": "https://api.github.com/users/tfboyd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tfboyd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tfboyd/subscriptions", "organizations_url": "https://api.github.com/users/tfboyd/orgs", "repos_url": "https://api.github.com/users/tfboyd/repos", "events_url": "https://api.github.com/users/tfboyd/events{/privacy}", "received_events_url": "https://api.github.com/users/tfboyd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2017-03-02T02:59:46Z", "updated_at": "2017-03-05T13:52:45Z", "closed_at": "2017-03-05T05:20:48Z", "author_association": "NONE", "body_html": "<p>I am using tf.contrib.slim API to build nets, it's simple and convenient, however, I think it's some kind of confusion me, I occurs a lot of out-of-date api which I think should be update or fix (except I got wrong idea to using it).<br>\nBasiclly, I got images and labels from tfrecord file, run this:</p>\n<pre><code>def run_training():\n\n    train_log_dir = './train_log'\n    if not tf.gfile.Exists(train_log_dir):\n        tf.gfile.MakeDirs(train_log_dir)\n\n    images, labels = inputs(train=True, batch_size=FLAGS.batch_size,\n                            num_epochs=FLAGS.num_epochs, one_hot_labels=True)\n    predictions = vgg.vgg_16(images, is_training=True)\n\n    slim.losses.softmax_cross_entropy(predictions, labels)\n    total_loss = slim.losses.get_total_loss()\n    tf.summary.scalar('loss', total_loss)\n\n    optimizer = tf.train.RMSPropOptimizer(0.001, 0.9)\n    train_op = slim.learning.create_train_op(total_loss, optimizer, summarize_gradients=True)\n\n    slim.learning.train(train_op, train_log_dir, save_summaries_secs=20)\n</code></pre>\n<p>all imports from <code>tf.contirb.slim</code>.<br>\nAnd I got these error.</p>\n<pre><code>File \"train_slim_vgg16.py\", line 157, in run_training2\n    slim.losses.softmax_cross_entropy(predictions, labels)\n  File \"/usr/local/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py\", line 117, in new_func\n    return func(*args, **kwargs)\n  File \"/usr/local/lib/python3.6/site-packages/tensorflow/contrib/losses/python/losses/loss_ops.py\", line 380, in softmax_cross_entropy\n    logits.get_shape().assert_is_compatible_with(onehot_labels.get_shape())\nAttributeError: 'tuple' object has no attribute 'get_shape'\n</code></pre>\n<p>I read and load images labels like this:</p>\n<pre><code>def read_and_decode(filename_queue):\n    reader = tf.TFRecordReader()\n    _, serialized_example = reader.read(filename_queue)\n    features = tf.parse_single_example(\n        serialized=serialized_example,\n        features={\n            'image/height': tf.FixedLenFeature([], tf.int64),\n            'image/width': tf.FixedLenFeature([], tf.int64),\n            'image/channels': tf.FixedLenFeature([], tf.int64),\n            'image/encoded': tf.FixedLenFeature([], tf.string),\n            'image/class/label': tf.FixedLenFeature([], tf.int64),\n        })\n    height = tf.cast(features['image/height'], dtype=tf.int32)\n    width = tf.cast(features['image/width'], dtype=tf.int32)\n    channels = tf.cast(features['image/channels'], dtype=tf.int32)\n    label = tf.cast(features['image/class/label'], dtype=tf.int32)\n\n    image = tf.image.decode_jpeg(features['image/encoded'], channels=3)\n    image = tf.image.resize_image_with_crop_or_pad(\n        image=image,\n        target_height=FLAGS.target_image_height,\n        target_width=FLAGS.target_image_width,\n    )\n    image = tf.cast(image, tf.float32) * (1. / 255) - 0.5\n    return image, label\n\n\ndef inputs(train, batch_size, num_epochs, one_hot_labels):\n    if not num_epochs:\n        num_epochs = None\n    with tf.name_scope('input'):\n        filename_queue = tf.train.string_input_producer(\n            tf_records_walker(tf_records_dir=FLAGS.tf_record_dir),\n            num_epochs=num_epochs,\n            shuffle=True)\n        image, label = read_and_decode(filename_queue)\n\n        if one_hot_labels:\n            label = tf.one_hot(indices=label, depth=FLAGS.num_classes+1, dtype=tf.int32)\n        images, sparse_labels = tf.train.shuffle_batch(\n            [image, label],\n            batch_size=batch_size,\n            num_threads=2,\n            capacity=10 + 3 * batch_size,\n            min_after_dequeue=10)\n\n        return images, sparse_labels\n</code></pre>\n<p>Obviously, the way used to write slim nets and train graph not effect anymore, I suggest develope team  update this contrib docs or update some APIs. (If I did something wrong, sincerely help you guys help me out, I just can't get my network run.)</p>", "body_text": "I am using tf.contrib.slim API to build nets, it's simple and convenient, however, I think it's some kind of confusion me, I occurs a lot of out-of-date api which I think should be update or fix (except I got wrong idea to using it).\nBasiclly, I got images and labels from tfrecord file, run this:\ndef run_training():\n\n    train_log_dir = './train_log'\n    if not tf.gfile.Exists(train_log_dir):\n        tf.gfile.MakeDirs(train_log_dir)\n\n    images, labels = inputs(train=True, batch_size=FLAGS.batch_size,\n                            num_epochs=FLAGS.num_epochs, one_hot_labels=True)\n    predictions = vgg.vgg_16(images, is_training=True)\n\n    slim.losses.softmax_cross_entropy(predictions, labels)\n    total_loss = slim.losses.get_total_loss()\n    tf.summary.scalar('loss', total_loss)\n\n    optimizer = tf.train.RMSPropOptimizer(0.001, 0.9)\n    train_op = slim.learning.create_train_op(total_loss, optimizer, summarize_gradients=True)\n\n    slim.learning.train(train_op, train_log_dir, save_summaries_secs=20)\n\nall imports from tf.contirb.slim.\nAnd I got these error.\nFile \"train_slim_vgg16.py\", line 157, in run_training2\n    slim.losses.softmax_cross_entropy(predictions, labels)\n  File \"/usr/local/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py\", line 117, in new_func\n    return func(*args, **kwargs)\n  File \"/usr/local/lib/python3.6/site-packages/tensorflow/contrib/losses/python/losses/loss_ops.py\", line 380, in softmax_cross_entropy\n    logits.get_shape().assert_is_compatible_with(onehot_labels.get_shape())\nAttributeError: 'tuple' object has no attribute 'get_shape'\n\nI read and load images labels like this:\ndef read_and_decode(filename_queue):\n    reader = tf.TFRecordReader()\n    _, serialized_example = reader.read(filename_queue)\n    features = tf.parse_single_example(\n        serialized=serialized_example,\n        features={\n            'image/height': tf.FixedLenFeature([], tf.int64),\n            'image/width': tf.FixedLenFeature([], tf.int64),\n            'image/channels': tf.FixedLenFeature([], tf.int64),\n            'image/encoded': tf.FixedLenFeature([], tf.string),\n            'image/class/label': tf.FixedLenFeature([], tf.int64),\n        })\n    height = tf.cast(features['image/height'], dtype=tf.int32)\n    width = tf.cast(features['image/width'], dtype=tf.int32)\n    channels = tf.cast(features['image/channels'], dtype=tf.int32)\n    label = tf.cast(features['image/class/label'], dtype=tf.int32)\n\n    image = tf.image.decode_jpeg(features['image/encoded'], channels=3)\n    image = tf.image.resize_image_with_crop_or_pad(\n        image=image,\n        target_height=FLAGS.target_image_height,\n        target_width=FLAGS.target_image_width,\n    )\n    image = tf.cast(image, tf.float32) * (1. / 255) - 0.5\n    return image, label\n\n\ndef inputs(train, batch_size, num_epochs, one_hot_labels):\n    if not num_epochs:\n        num_epochs = None\n    with tf.name_scope('input'):\n        filename_queue = tf.train.string_input_producer(\n            tf_records_walker(tf_records_dir=FLAGS.tf_record_dir),\n            num_epochs=num_epochs,\n            shuffle=True)\n        image, label = read_and_decode(filename_queue)\n\n        if one_hot_labels:\n            label = tf.one_hot(indices=label, depth=FLAGS.num_classes+1, dtype=tf.int32)\n        images, sparse_labels = tf.train.shuffle_batch(\n            [image, label],\n            batch_size=batch_size,\n            num_threads=2,\n            capacity=10 + 3 * batch_size,\n            min_after_dequeue=10)\n\n        return images, sparse_labels\n\nObviously, the way used to write slim nets and train graph not effect anymore, I suggest develope team  update this contrib docs or update some APIs. (If I did something wrong, sincerely help you guys help me out, I just can't get my network run.)", "body": "I am using tf.contrib.slim API to build nets, it's simple and convenient, however, I think it's some kind of confusion me, I occurs a lot of out-of-date api which I think should be update or fix (except I got wrong idea to using it).\r\nBasiclly, I got images and labels from tfrecord file, run this:\r\n\r\n```\r\ndef run_training():\r\n\r\n    train_log_dir = './train_log'\r\n    if not tf.gfile.Exists(train_log_dir):\r\n        tf.gfile.MakeDirs(train_log_dir)\r\n\r\n    images, labels = inputs(train=True, batch_size=FLAGS.batch_size,\r\n                            num_epochs=FLAGS.num_epochs, one_hot_labels=True)\r\n    predictions = vgg.vgg_16(images, is_training=True)\r\n\r\n    slim.losses.softmax_cross_entropy(predictions, labels)\r\n    total_loss = slim.losses.get_total_loss()\r\n    tf.summary.scalar('loss', total_loss)\r\n\r\n    optimizer = tf.train.RMSPropOptimizer(0.001, 0.9)\r\n    train_op = slim.learning.create_train_op(total_loss, optimizer, summarize_gradients=True)\r\n\r\n    slim.learning.train(train_op, train_log_dir, save_summaries_secs=20)\r\n```\r\nall imports from `tf.contirb.slim`. \r\nAnd I got these error.\r\n```\r\nFile \"train_slim_vgg16.py\", line 157, in run_training2\r\n    slim.losses.softmax_cross_entropy(predictions, labels)\r\n  File \"/usr/local/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py\", line 117, in new_func\r\n    return func(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/tensorflow/contrib/losses/python/losses/loss_ops.py\", line 380, in softmax_cross_entropy\r\n    logits.get_shape().assert_is_compatible_with(onehot_labels.get_shape())\r\nAttributeError: 'tuple' object has no attribute 'get_shape'\r\n```\r\nI read and load images labels like this:\r\n```\r\ndef read_and_decode(filename_queue):\r\n    reader = tf.TFRecordReader()\r\n    _, serialized_example = reader.read(filename_queue)\r\n    features = tf.parse_single_example(\r\n        serialized=serialized_example,\r\n        features={\r\n            'image/height': tf.FixedLenFeature([], tf.int64),\r\n            'image/width': tf.FixedLenFeature([], tf.int64),\r\n            'image/channels': tf.FixedLenFeature([], tf.int64),\r\n            'image/encoded': tf.FixedLenFeature([], tf.string),\r\n            'image/class/label': tf.FixedLenFeature([], tf.int64),\r\n        })\r\n    height = tf.cast(features['image/height'], dtype=tf.int32)\r\n    width = tf.cast(features['image/width'], dtype=tf.int32)\r\n    channels = tf.cast(features['image/channels'], dtype=tf.int32)\r\n    label = tf.cast(features['image/class/label'], dtype=tf.int32)\r\n\r\n    image = tf.image.decode_jpeg(features['image/encoded'], channels=3)\r\n    image = tf.image.resize_image_with_crop_or_pad(\r\n        image=image,\r\n        target_height=FLAGS.target_image_height,\r\n        target_width=FLAGS.target_image_width,\r\n    )\r\n    image = tf.cast(image, tf.float32) * (1. / 255) - 0.5\r\n    return image, label\r\n\r\n\r\ndef inputs(train, batch_size, num_epochs, one_hot_labels):\r\n    if not num_epochs:\r\n        num_epochs = None\r\n    with tf.name_scope('input'):\r\n        filename_queue = tf.train.string_input_producer(\r\n            tf_records_walker(tf_records_dir=FLAGS.tf_record_dir),\r\n            num_epochs=num_epochs,\r\n            shuffle=True)\r\n        image, label = read_and_decode(filename_queue)\r\n\r\n        if one_hot_labels:\r\n            label = tf.one_hot(indices=label, depth=FLAGS.num_classes+1, dtype=tf.int32)\r\n        images, sparse_labels = tf.train.shuffle_batch(\r\n            [image, label],\r\n            batch_size=batch_size,\r\n            num_threads=2,\r\n            capacity=10 + 3 * batch_size,\r\n            min_after_dequeue=10)\r\n\r\n        return images, sparse_labels\r\n```\r\nObviously, the way used to write slim nets and train graph not effect anymore, I suggest develope team  update this contrib docs or update some APIs. (If I did something wrong, sincerely help you guys help me out, I just can't get my network run.)"}