{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12993", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12993/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12993/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12993/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/12993", "id": 256943686, "node_id": "MDU6SXNzdWUyNTY5NDM2ODY=", "number": 12993, "title": "Different corrupted record Issue with TFRecordReader ", "user": {"login": "balaji-in-git", "id": 31880073, "node_id": "MDQ6VXNlcjMxODgwMDcz", "avatar_url": "https://avatars0.githubusercontent.com/u/31880073?v=4", "gravatar_id": "", "url": "https://api.github.com/users/balaji-in-git", "html_url": "https://github.com/balaji-in-git", "followers_url": "https://api.github.com/users/balaji-in-git/followers", "following_url": "https://api.github.com/users/balaji-in-git/following{/other_user}", "gists_url": "https://api.github.com/users/balaji-in-git/gists{/gist_id}", "starred_url": "https://api.github.com/users/balaji-in-git/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/balaji-in-git/subscriptions", "organizations_url": "https://api.github.com/users/balaji-in-git/orgs", "repos_url": "https://api.github.com/users/balaji-in-git/repos", "events_url": "https://api.github.com/users/balaji-in-git/events{/privacy}", "received_events_url": "https://api.github.com/users/balaji-in-git/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-12T07:26:57Z", "updated_at": "2017-09-12T10:20:18Z", "closed_at": "2017-09-12T10:20:18Z", "author_association": "NONE", "body_html": "<p>Hi, I am trying to convert some 11 mn features and labels into TFRecords; I convert my examples into scipy csr/coo and the features are simple 1Dim features. I am trying to make a batch of features of 1000 in a csr and I am able to write it into TFRecordWriter. The files are generated.<br>\nThe problem is when I try to read it using parse_example, I am trying to create a tensor equivalent to compressed sparse matrix of scipy and I am running into issues. I am ONLY trying to test my tensor values using sess.run() and I am getting this corrupted error. I tried to change different reading formats , FixedFeature, VarLenFeature, but no breakthrough.</p>\n<p>corrupted record at 0<br>\n[[Node: ReaderReadV2 = ReaderReadV2[_device=\"/job:localhost/replica:0/task:0/cpu:0\"](TFRecordReaderV2, input_producer)]]</p>\n<p>Here is how I am trying to parse the TFRecord</p>\n<p>features={<br>\n'feature_data' : tf.FixedLenFeature([],tf.string),<br>\n'feature_row' : tf.FixedLenFeature([],tf.string),<br>\n'feature_col' : tf.FixedLenFeature([], tf.string),<br>\n'feature_shape' : tf.FixedLenFeature([], tf.string)}</p>\n<h1>'feature_dim2' : tf.FixedLenFeature([1], tf.int64)}</h1>\n<pre><code>    print 'Reader initialized'\n    tfrecord_features = tf.parse_single_example(serialized_example, features)\n    fea_data = tf.decode_raw(tfrecord_features['feature_data'], tf.int32)\n    fea_row = tf.decode_raw(tfrecord_features['feature_row'], tf.int32)\n    fea_col = tf.decode_raw(tfrecord_features['feature_col'], tf.int32)\n    fea_shape = tf.decode_raw(tfrecord_features['feature_shape'], tf.int32)\n    print 'Parsed example'\n    print type(fea_data)\n    print type(fea_row)\n    ade_features = tf.sparse_to_dense(sparse_indices=[fea_row, fea_col], \n                                sparse_values=fea_data, \n                                output_shape=fea_shape)\n   ............\n   sess.run(ade_features)\n</code></pre>\n<p>Here is how I am trying to write the feature.</p>\n<p>writer = tf.python_io.TFRecordWriter(filename)<br>\n#for index in range(features_vectors.shape[0]):<br>\nfor iteration, (start, end) in enumerate(batches):<br>\n#print('Writing label index: ' + str(index))<br>\nfeature_batch = features_vectors[start:end] # again a csr<br>\nfeature_batch = feature_batch.tocoo()<br>\nlabel_vec = labels[start:end] # csr<br>\nlabel_vec = label_vec.tocoo()<br>\nexample = tf.train.Example(features=tf.train.Features(feature={<br>\n'feature_data' : self.bytes_feature(feature_batch.data.tobytes()),<br>\n'feature_row' : self.bytes_feature(feature_batch.row.tobytes()),<br>\n'feature_col' : self.bytes_feature(feature_batch.col.tobytes()),<br>\n'feature_shape' : self.bytes_feature(np.array(feature_batch.shape, np.int32).tobytes())<br>\nwriter.write(example.SerializeToString())<br>\nwriter.close()</p>\n<p>I am using tensorflow 1.2.1</p>", "body_text": "Hi, I am trying to convert some 11 mn features and labels into TFRecords; I convert my examples into scipy csr/coo and the features are simple 1Dim features. I am trying to make a batch of features of 1000 in a csr and I am able to write it into TFRecordWriter. The files are generated.\nThe problem is when I try to read it using parse_example, I am trying to create a tensor equivalent to compressed sparse matrix of scipy and I am running into issues. I am ONLY trying to test my tensor values using sess.run() and I am getting this corrupted error. I tried to change different reading formats , FixedFeature, VarLenFeature, but no breakthrough.\ncorrupted record at 0\n[[Node: ReaderReadV2 = ReaderReadV2[_device=\"/job:localhost/replica:0/task:0/cpu:0\"](TFRecordReaderV2, input_producer)]]\nHere is how I am trying to parse the TFRecord\nfeatures={\n'feature_data' : tf.FixedLenFeature([],tf.string),\n'feature_row' : tf.FixedLenFeature([],tf.string),\n'feature_col' : tf.FixedLenFeature([], tf.string),\n'feature_shape' : tf.FixedLenFeature([], tf.string)}\n'feature_dim2' : tf.FixedLenFeature([1], tf.int64)}\n    print 'Reader initialized'\n    tfrecord_features = tf.parse_single_example(serialized_example, features)\n    fea_data = tf.decode_raw(tfrecord_features['feature_data'], tf.int32)\n    fea_row = tf.decode_raw(tfrecord_features['feature_row'], tf.int32)\n    fea_col = tf.decode_raw(tfrecord_features['feature_col'], tf.int32)\n    fea_shape = tf.decode_raw(tfrecord_features['feature_shape'], tf.int32)\n    print 'Parsed example'\n    print type(fea_data)\n    print type(fea_row)\n    ade_features = tf.sparse_to_dense(sparse_indices=[fea_row, fea_col], \n                                sparse_values=fea_data, \n                                output_shape=fea_shape)\n   ............\n   sess.run(ade_features)\n\nHere is how I am trying to write the feature.\nwriter = tf.python_io.TFRecordWriter(filename)\n#for index in range(features_vectors.shape[0]):\nfor iteration, (start, end) in enumerate(batches):\n#print('Writing label index: ' + str(index))\nfeature_batch = features_vectors[start:end] # again a csr\nfeature_batch = feature_batch.tocoo()\nlabel_vec = labels[start:end] # csr\nlabel_vec = label_vec.tocoo()\nexample = tf.train.Example(features=tf.train.Features(feature={\n'feature_data' : self.bytes_feature(feature_batch.data.tobytes()),\n'feature_row' : self.bytes_feature(feature_batch.row.tobytes()),\n'feature_col' : self.bytes_feature(feature_batch.col.tobytes()),\n'feature_shape' : self.bytes_feature(np.array(feature_batch.shape, np.int32).tobytes())\nwriter.write(example.SerializeToString())\nwriter.close()\nI am using tensorflow 1.2.1", "body": "Hi, I am trying to convert some 11 mn features and labels into TFRecords; I convert my examples into scipy csr/coo and the features are simple 1Dim features. I am trying to make a batch of features of 1000 in a csr and I am able to write it into TFRecordWriter. The files are generated.\r\n The problem is when I try to read it using parse_example, I am trying to create a tensor equivalent to compressed sparse matrix of scipy and I am running into issues. I am ONLY trying to test my tensor values using sess.run(<tensor>) and I am getting this corrupted error. I tried to change different reading formats , FixedFeature, VarLenFeature, but no breakthrough.\r\n  \r\ncorrupted record at 0\r\n\t [[Node: ReaderReadV2 = ReaderReadV2[_device=\"/job:localhost/replica:0/task:0/cpu:0\"](TFRecordReaderV2, input_producer)]]\r\n\r\nHere is how I am trying to parse the TFRecord\r\n\r\n features={\r\n                'feature_data' : tf.FixedLenFeature([],tf.string),\r\n                'feature_row' : tf.FixedLenFeature([],tf.string),\r\n                'feature_col' : tf.FixedLenFeature([], tf.string),\r\n                'feature_shape' : tf.FixedLenFeature([], tf.string)}\r\n#                 'feature_dim2' : tf.FixedLenFeature([1], tf.int64)}\r\n        print 'Reader initialized'\r\n        tfrecord_features = tf.parse_single_example(serialized_example, features)\r\n        fea_data = tf.decode_raw(tfrecord_features['feature_data'], tf.int32)\r\n        fea_row = tf.decode_raw(tfrecord_features['feature_row'], tf.int32)\r\n        fea_col = tf.decode_raw(tfrecord_features['feature_col'], tf.int32)\r\n        fea_shape = tf.decode_raw(tfrecord_features['feature_shape'], tf.int32)\r\n        print 'Parsed example'\r\n        print type(fea_data)\r\n        print type(fea_row)\r\n        ade_features = tf.sparse_to_dense(sparse_indices=[fea_row, fea_col], \r\n                                    sparse_values=fea_data, \r\n                                    output_shape=fea_shape)\r\n       ............\r\n       sess.run(ade_features)\r\n\r\nHere is how I am trying to write the feature.\r\n\r\n writer = tf.python_io.TFRecordWriter(filename)\r\n        #for index in range(features_vectors.shape[0]):\r\n        for iteration, (start, end) in enumerate(batches):\r\n            #print('Writing label index: ' + str(index))\r\n            feature_batch = features_vectors[start:end] # again a csr\r\n            feature_batch = feature_batch.tocoo()\r\n            label_vec = labels[start:end] # csr\r\n            label_vec = label_vec.tocoo()\r\n            example = tf.train.Example(features=tf.train.Features(feature={\r\n                'feature_data' : self.bytes_feature(feature_batch.data.tobytes()),\r\n                'feature_row' : self.bytes_feature(feature_batch.row.tobytes()),\r\n                'feature_col' : self.bytes_feature(feature_batch.col.tobytes()),\r\n                'feature_shape' : self.bytes_feature(np.array(feature_batch.shape, np.int32).tobytes())\r\n            writer.write(example.SerializeToString())\r\n        writer.close()\r\n\r\nI am using tensorflow 1.2.1"}