{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7226", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7226/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7226/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7226/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/7226", "id": 204981402, "node_id": "MDU6SXNzdWUyMDQ5ODE0MDI=", "number": 7226, "title": "conv2d gives NaN gradients with float16 input", "user": {"login": "kshmelkov", "id": 10819534, "node_id": "MDQ6VXNlcjEwODE5NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/10819534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kshmelkov", "html_url": "https://github.com/kshmelkov", "followers_url": "https://api.github.com/users/kshmelkov/followers", "following_url": "https://api.github.com/users/kshmelkov/following{/other_user}", "gists_url": "https://api.github.com/users/kshmelkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/kshmelkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kshmelkov/subscriptions", "organizations_url": "https://api.github.com/users/kshmelkov/orgs", "repos_url": "https://api.github.com/users/kshmelkov/repos", "events_url": "https://api.github.com/users/kshmelkov/events{/privacy}", "received_events_url": "https://api.github.com/users/kshmelkov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-02-02T20:06:16Z", "updated_at": "2017-02-28T23:32:56Z", "closed_at": "2017-02-06T08:32:25Z", "author_association": "NONE", "body_html": "<h3>Environment info</h3>\n<p>Operating System: Ubuntu 16 LTS<br>\nbreaks already on CPU</p>\n<p>If installed from binary pip package, provide:</p>\n<ol>\n<li>A link to the pip package you installed: recent nightly build</li>\n<li>The output from <code>python -c \"import tensorflow; print(tensorflow.__version__)\"</code>.</li>\n</ol>\n<pre><code>&gt;tf.__version__\n'0.12.head'\n&gt;tf.__git_version__\n'0.12.1-2263-g4cc0d1e-dirty'\n</code></pre>\n<h3>If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)</h3>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n\nslim <span class=\"pl-k\">=</span> tf.contrib.slim\n\ndtype <span class=\"pl-k\">=</span> tf.float16\nshape <span class=\"pl-k\">=</span> (<span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">16</span>, <span class=\"pl-c1\">16</span>, <span class=\"pl-c1\">3</span>)\n\ninpt <span class=\"pl-k\">=</span> tf.placeholder(dtype, shape, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>input<span class=\"pl-pds\">'</span></span>)\nnet <span class=\"pl-k\">=</span> slim.conv2d(inpt, <span class=\"pl-c1\">16</span>, [<span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">3</span>], <span class=\"pl-v\">scope</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>conv<span class=\"pl-pds\">'</span></span>)\nloss <span class=\"pl-k\">=</span> tf.reduce_mean(net)\nopt <span class=\"pl-k\">=</span> tf.train.AdamOptimizer(<span class=\"pl-c1\">1e-3</span>)\ntrain_op <span class=\"pl-k\">=</span> slim.learning.create_train_op(loss, opt)\n\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n    sess.run(tf.global_variables_initializer())\n    <span class=\"pl-k\">for</span> i <span class=\"pl-k\">in</span> <span class=\"pl-c1\">range</span>(<span class=\"pl-c1\">2</span>):\n        val <span class=\"pl-k\">=</span> np.random.randn(<span class=\"pl-k\">*</span>shape)\n        <span class=\"pl-c1\">print</span>(sess.run(train_op, <span class=\"pl-v\">feed_dict</span><span class=\"pl-k\">=</span>{inpt: val}))</pre></div>\n<p>So basically it breaks on the second step of SGD because loss is NaN. If I change dtype in float32, it works. It should have nothing to do with CUDA, I tested it on CPU version as well as on GPU with CUDA8, CuDNN5.1.</p>\n<h3>What other attempted solutions have you tried?</h3>\n<p>I have no idea what to try here. Now I continue with float32.</p>\n<h3>Logs or other output that would be helpful</h3>\n<p>(If logs are large, please upload as attachment or provide link).</p>\n<pre><code>-0.00072765\nTraceback (most recent call last):\n  File \"/home/lear/kshmelko/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 1022, in _do_call\n    return fn(*args)\n  File \"/home/lear/kshmelko/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 1004, in _run_fn\n    status, run_metadata)\n  File \"/usr/lib/python3.5/contextlib.py\", line 66, in __exit__\n    next(self.gen)\n  File \"/home/lear/kshmelko/.local/lib/python3.5/site-packages/tensorflow/python/framework/errors_impl.py\", line 469, in raise_exception_on_not_ok_status\n    pywrap_tensorflow.TF_GetCode(status))\ntensorflow.python.framework.errors_impl.InvalidArgumentError: LossTensor is inf or nan : Tensor had NaN values\n         [[Node: train_op/CheckNumerics = CheckNumerics[T=DT_HALF, message=\"LossTensor is inf or nan\", _device=\"/job:localhost/replica:0/task:0/cpu:0\"](control_dependency)]]\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"test_bn.py\", line 22, in &lt;module&gt;\n    print(sess.run(train_op, feed_dict={inpt: val}))\n  File \"/home/lear/kshmelko/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 767, in run\n    run_metadata_ptr)\n  File \"/home/lear/kshmelko/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 965, in _run\n    feed_dict_string, options, run_metadata)\n  File \"/home/lear/kshmelko/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 1015, in _do_run\n    target_list, options, run_metadata)\n  File \"/home/lear/kshmelko/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 1035, in _do_call\n    raise type(e)(node_def, op, message)\ntensorflow.python.framework.errors_impl.InvalidArgumentError: LossTensor is inf or nan : Tensor had NaN values\n         [[Node: train_op/CheckNumerics = CheckNumerics[T=DT_HALF, message=\"LossTensor is inf or nan\", _device=\"/job:localhost/replica:0/task:0/cpu:0\"](control_dependency)]]\n\nCaused by op 'train_op/CheckNumerics', defined at:\n  File \"test_bn.py\", line 16, in &lt;module&gt;\n    train_op = slim.learning.create_train_op(loss, opt)\n  File \"/home/lear/kshmelko/.local/lib/python3.5/site-packages/tensorflow/contrib/slim/python/slim/learning.py\", line 472, in create_train_op\n    'LossTensor is inf or nan')\n  File \"/home/lear/kshmelko/.local/lib/python3.5/site-packages/tensorflow/python/ops/gen_array_ops.py\", line 433, in check_numerics\n    message=message, name=name)\n  File \"/home/lear/kshmelko/.local/lib/python3.5/site-packages/tensorflow/python/framework/op_def_library.py\", line 768, in apply_op\n    op_def=op_def)\n  File \"/home/lear/kshmelko/.local/lib/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 2402, in create_op\n    original_op=self._default_original_op, op_def=op_def)\n  File \"/home/lear/kshmelko/.local/lib/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 1264, in __init__\n    self._traceback = _extract_stack()\n\nInvalidArgumentError (see above for traceback): LossTensor is inf or nan : Tensor had NaN values\n         [[Node: train_op/CheckNumerics = CheckNumerics[T=DT_HALF, message=\"LossTensor is inf or nan\", _device=\"/job:localhost/replica:0/task:0/cpu:0\"](control_dependency)]]\n</code></pre>", "body_text": "Environment info\nOperating System: Ubuntu 16 LTS\nbreaks already on CPU\nIf installed from binary pip package, provide:\n\nA link to the pip package you installed: recent nightly build\nThe output from python -c \"import tensorflow; print(tensorflow.__version__)\".\n\n>tf.__version__\n'0.12.head'\n>tf.__git_version__\n'0.12.1-2263-g4cc0d1e-dirty'\n\nIf possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\nimport tensorflow as tf\nimport numpy as np\n\nslim = tf.contrib.slim\n\ndtype = tf.float16\nshape = (4, 16, 16, 3)\n\ninpt = tf.placeholder(dtype, shape, name='input')\nnet = slim.conv2d(inpt, 16, [3, 3], scope='conv')\nloss = tf.reduce_mean(net)\nopt = tf.train.AdamOptimizer(1e-3)\ntrain_op = slim.learning.create_train_op(loss, opt)\n\nwith tf.Session() as sess:\n    sess.run(tf.global_variables_initializer())\n    for i in range(2):\n        val = np.random.randn(*shape)\n        print(sess.run(train_op, feed_dict={inpt: val}))\nSo basically it breaks on the second step of SGD because loss is NaN. If I change dtype in float32, it works. It should have nothing to do with CUDA, I tested it on CPU version as well as on GPU with CUDA8, CuDNN5.1.\nWhat other attempted solutions have you tried?\nI have no idea what to try here. Now I continue with float32.\nLogs or other output that would be helpful\n(If logs are large, please upload as attachment or provide link).\n-0.00072765\nTraceback (most recent call last):\n  File \"/home/lear/kshmelko/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 1022, in _do_call\n    return fn(*args)\n  File \"/home/lear/kshmelko/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 1004, in _run_fn\n    status, run_metadata)\n  File \"/usr/lib/python3.5/contextlib.py\", line 66, in __exit__\n    next(self.gen)\n  File \"/home/lear/kshmelko/.local/lib/python3.5/site-packages/tensorflow/python/framework/errors_impl.py\", line 469, in raise_exception_on_not_ok_status\n    pywrap_tensorflow.TF_GetCode(status))\ntensorflow.python.framework.errors_impl.InvalidArgumentError: LossTensor is inf or nan : Tensor had NaN values\n         [[Node: train_op/CheckNumerics = CheckNumerics[T=DT_HALF, message=\"LossTensor is inf or nan\", _device=\"/job:localhost/replica:0/task:0/cpu:0\"](control_dependency)]]\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"test_bn.py\", line 22, in <module>\n    print(sess.run(train_op, feed_dict={inpt: val}))\n  File \"/home/lear/kshmelko/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 767, in run\n    run_metadata_ptr)\n  File \"/home/lear/kshmelko/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 965, in _run\n    feed_dict_string, options, run_metadata)\n  File \"/home/lear/kshmelko/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 1015, in _do_run\n    target_list, options, run_metadata)\n  File \"/home/lear/kshmelko/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 1035, in _do_call\n    raise type(e)(node_def, op, message)\ntensorflow.python.framework.errors_impl.InvalidArgumentError: LossTensor is inf or nan : Tensor had NaN values\n         [[Node: train_op/CheckNumerics = CheckNumerics[T=DT_HALF, message=\"LossTensor is inf or nan\", _device=\"/job:localhost/replica:0/task:0/cpu:0\"](control_dependency)]]\n\nCaused by op 'train_op/CheckNumerics', defined at:\n  File \"test_bn.py\", line 16, in <module>\n    train_op = slim.learning.create_train_op(loss, opt)\n  File \"/home/lear/kshmelko/.local/lib/python3.5/site-packages/tensorflow/contrib/slim/python/slim/learning.py\", line 472, in create_train_op\n    'LossTensor is inf or nan')\n  File \"/home/lear/kshmelko/.local/lib/python3.5/site-packages/tensorflow/python/ops/gen_array_ops.py\", line 433, in check_numerics\n    message=message, name=name)\n  File \"/home/lear/kshmelko/.local/lib/python3.5/site-packages/tensorflow/python/framework/op_def_library.py\", line 768, in apply_op\n    op_def=op_def)\n  File \"/home/lear/kshmelko/.local/lib/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 2402, in create_op\n    original_op=self._default_original_op, op_def=op_def)\n  File \"/home/lear/kshmelko/.local/lib/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 1264, in __init__\n    self._traceback = _extract_stack()\n\nInvalidArgumentError (see above for traceback): LossTensor is inf or nan : Tensor had NaN values\n         [[Node: train_op/CheckNumerics = CheckNumerics[T=DT_HALF, message=\"LossTensor is inf or nan\", _device=\"/job:localhost/replica:0/task:0/cpu:0\"](control_dependency)]]", "body": "### Environment info\r\nOperating System: Ubuntu 16 LTS\r\nbreaks already on CPU\r\n\r\nIf installed from binary pip package, provide:\r\n\r\n1. A link to the pip package you installed: recent nightly build\r\n2. The output from `python -c \"import tensorflow; print(tensorflow.__version__)\"`.\r\n```\r\n>tf.__version__\r\n'0.12.head'\r\n>tf.__git_version__\r\n'0.12.1-2263-g4cc0d1e-dirty'\r\n```\r\n\r\n### If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\r\n\r\n```python\r\nimport tensorflow as tf\r\nimport numpy as np\r\n\r\nslim = tf.contrib.slim\r\n\r\ndtype = tf.float16\r\nshape = (4, 16, 16, 3)\r\n\r\ninpt = tf.placeholder(dtype, shape, name='input')\r\nnet = slim.conv2d(inpt, 16, [3, 3], scope='conv')\r\nloss = tf.reduce_mean(net)\r\nopt = tf.train.AdamOptimizer(1e-3)\r\ntrain_op = slim.learning.create_train_op(loss, opt)\r\n\r\nwith tf.Session() as sess:\r\n    sess.run(tf.global_variables_initializer())\r\n    for i in range(2):\r\n        val = np.random.randn(*shape)\r\n        print(sess.run(train_op, feed_dict={inpt: val}))\r\n```\r\n\r\nSo basically it breaks on the second step of SGD because loss is NaN. If I change dtype in float32, it works. It should have nothing to do with CUDA, I tested it on CPU version as well as on GPU with CUDA8, CuDNN5.1.\r\n\r\n### What other attempted solutions have you tried?\r\nI have no idea what to try here. Now I continue with float32.\r\n\r\n### Logs or other output that would be helpful\r\n(If logs are large, please upload as attachment or provide link).\r\n```\r\n-0.00072765\r\nTraceback (most recent call last):\r\n  File \"/home/lear/kshmelko/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 1022, in _do_call\r\n    return fn(*args)\r\n  File \"/home/lear/kshmelko/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 1004, in _run_fn\r\n    status, run_metadata)\r\n  File \"/usr/lib/python3.5/contextlib.py\", line 66, in __exit__\r\n    next(self.gen)\r\n  File \"/home/lear/kshmelko/.local/lib/python3.5/site-packages/tensorflow/python/framework/errors_impl.py\", line 469, in raise_exception_on_not_ok_status\r\n    pywrap_tensorflow.TF_GetCode(status))\r\ntensorflow.python.framework.errors_impl.InvalidArgumentError: LossTensor is inf or nan : Tensor had NaN values\r\n         [[Node: train_op/CheckNumerics = CheckNumerics[T=DT_HALF, message=\"LossTensor is inf or nan\", _device=\"/job:localhost/replica:0/task:0/cpu:0\"](control_dependency)]]\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"test_bn.py\", line 22, in <module>\r\n    print(sess.run(train_op, feed_dict={inpt: val}))\r\n  File \"/home/lear/kshmelko/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 767, in run\r\n    run_metadata_ptr)\r\n  File \"/home/lear/kshmelko/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 965, in _run\r\n    feed_dict_string, options, run_metadata)\r\n  File \"/home/lear/kshmelko/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 1015, in _do_run\r\n    target_list, options, run_metadata)\r\n  File \"/home/lear/kshmelko/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 1035, in _do_call\r\n    raise type(e)(node_def, op, message)\r\ntensorflow.python.framework.errors_impl.InvalidArgumentError: LossTensor is inf or nan : Tensor had NaN values\r\n         [[Node: train_op/CheckNumerics = CheckNumerics[T=DT_HALF, message=\"LossTensor is inf or nan\", _device=\"/job:localhost/replica:0/task:0/cpu:0\"](control_dependency)]]\r\n\r\nCaused by op 'train_op/CheckNumerics', defined at:\r\n  File \"test_bn.py\", line 16, in <module>\r\n    train_op = slim.learning.create_train_op(loss, opt)\r\n  File \"/home/lear/kshmelko/.local/lib/python3.5/site-packages/tensorflow/contrib/slim/python/slim/learning.py\", line 472, in create_train_op\r\n    'LossTensor is inf or nan')\r\n  File \"/home/lear/kshmelko/.local/lib/python3.5/site-packages/tensorflow/python/ops/gen_array_ops.py\", line 433, in check_numerics\r\n    message=message, name=name)\r\n  File \"/home/lear/kshmelko/.local/lib/python3.5/site-packages/tensorflow/python/framework/op_def_library.py\", line 768, in apply_op\r\n    op_def=op_def)\r\n  File \"/home/lear/kshmelko/.local/lib/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 2402, in create_op\r\n    original_op=self._default_original_op, op_def=op_def)\r\n  File \"/home/lear/kshmelko/.local/lib/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 1264, in __init__\r\n    self._traceback = _extract_stack()\r\n\r\nInvalidArgumentError (see above for traceback): LossTensor is inf or nan : Tensor had NaN values\r\n         [[Node: train_op/CheckNumerics = CheckNumerics[T=DT_HALF, message=\"LossTensor is inf or nan\", _device=\"/job:localhost/replica:0/task:0/cpu:0\"](control_dependency)]]\r\n```"}