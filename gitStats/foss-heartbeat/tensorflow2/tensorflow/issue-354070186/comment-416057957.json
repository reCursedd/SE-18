{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/416057957", "html_url": "https://github.com/tensorflow/tensorflow/issues/21879#issuecomment-416057957", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21879", "id": 416057957, "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjA1Nzk1Nw==", "user": {"login": "jthestness", "id": 28744304, "node_id": "MDQ6VXNlcjI4NzQ0MzA0", "avatar_url": "https://avatars0.githubusercontent.com/u/28744304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jthestness", "html_url": "https://github.com/jthestness", "followers_url": "https://api.github.com/users/jthestness/followers", "following_url": "https://api.github.com/users/jthestness/following{/other_user}", "gists_url": "https://api.github.com/users/jthestness/gists{/gist_id}", "starred_url": "https://api.github.com/users/jthestness/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jthestness/subscriptions", "organizations_url": "https://api.github.com/users/jthestness/orgs", "repos_url": "https://api.github.com/users/jthestness/repos", "events_url": "https://api.github.com/users/jthestness/events{/privacy}", "received_events_url": "https://api.github.com/users/jthestness/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-26T18:15:19Z", "updated_at": "2018-08-26T18:15:19Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Hi <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=10277403\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/chengdianxuezi\">@chengdianxuezi</a>: It looks like this is likely an issue related to handling of environment variables in the test. OpenMPI has changed the way it exports local variables for the communicator size and the worker's rank ID. The code in <code>mpi_allreduce_test.py</code>, lines 55-56, read the rank and size from these environment variables. I believe OpenMPI 3.x exports these variables to the ranks using variable names <code>OMPI_COMM_WORLD_RANK</code> and <code>OMPI_COMM_WORLD_SIZE</code> rather than <code>PMI_RANK</code> and <code>PMI_SIZE</code> as defined in the code. You can try changing the way the test reads these variables.</p>\n<p>To be sure of how your MPI installation exports these variables, run the following test (which should work with any MPI distribution or version):</p>\n<pre><code>$~ mpirun -np 3 python3 -c \"import os;print(os.environ)\"\n</code></pre>\n<p>It will print the environment dictionary, including the MPI-defined variables.</p>", "body_text": "Hi @chengdianxuezi: It looks like this is likely an issue related to handling of environment variables in the test. OpenMPI has changed the way it exports local variables for the communicator size and the worker's rank ID. The code in mpi_allreduce_test.py, lines 55-56, read the rank and size from these environment variables. I believe OpenMPI 3.x exports these variables to the ranks using variable names OMPI_COMM_WORLD_RANK and OMPI_COMM_WORLD_SIZE rather than PMI_RANK and PMI_SIZE as defined in the code. You can try changing the way the test reads these variables.\nTo be sure of how your MPI installation exports these variables, run the following test (which should work with any MPI distribution or version):\n$~ mpirun -np 3 python3 -c \"import os;print(os.environ)\"\n\nIt will print the environment dictionary, including the MPI-defined variables.", "body": "Hi @chengdianxuezi: It looks like this is likely an issue related to handling of environment variables in the test. OpenMPI has changed the way it exports local variables for the communicator size and the worker's rank ID. The code in `mpi_allreduce_test.py`, lines 55-56, read the rank and size from these environment variables. I believe OpenMPI 3.x exports these variables to the ranks using variable names `OMPI_COMM_WORLD_RANK` and `OMPI_COMM_WORLD_SIZE` rather than `PMI_RANK` and `PMI_SIZE` as defined in the code. You can try changing the way the test reads these variables.\r\n\r\nTo be sure of how your MPI installation exports these variables, run the following test (which should work with any MPI distribution or version):\r\n```\r\n$~ mpirun -np 3 python3 -c \"import os;print(os.environ)\"\r\n```\r\nIt will print the environment dictionary, including the MPI-defined variables."}