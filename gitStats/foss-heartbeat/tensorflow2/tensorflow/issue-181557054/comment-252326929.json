{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/252326929", "html_url": "https://github.com/tensorflow/tensorflow/issues/4809#issuecomment-252326929", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4809", "id": 252326929, "node_id": "MDEyOklzc3VlQ29tbWVudDI1MjMyNjkyOQ==", "user": {"login": "prb12", "id": 11547801, "node_id": "MDQ6VXNlcjExNTQ3ODAx", "avatar_url": "https://avatars1.githubusercontent.com/u/11547801?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prb12", "html_url": "https://github.com/prb12", "followers_url": "https://api.github.com/users/prb12/followers", "following_url": "https://api.github.com/users/prb12/following{/other_user}", "gists_url": "https://api.github.com/users/prb12/gists{/gist_id}", "starred_url": "https://api.github.com/users/prb12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prb12/subscriptions", "organizations_url": "https://api.github.com/users/prb12/orgs", "repos_url": "https://api.github.com/users/prb12/repos", "events_url": "https://api.github.com/users/prb12/events{/privacy}", "received_events_url": "https://api.github.com/users/prb12/received_events", "type": "User", "site_admin": false}, "created_at": "2016-10-07T18:30:03Z", "updated_at": "2016-10-07T18:30:03Z", "author_association": "MEMBER", "body_html": "<blockquote>\n<p>if I had some way to see send/recv timing in the .pbtxt file I could diagnose things already</p>\n</blockquote>\n<p>Recv ops are async and don't currently get traced into StepStats.  I think that Send ops are traced, but may get filtered out (need to check).</p>\n<p>To visualize what's going on, the UI needs to connect the start of the Send op with the <em>end</em> of the Recv op (since this is approximately the time taken on the wire).  Note that Recv ops typically fire immediately and wait around on the remote machine until the matching Send op executes.</p>\n<p>Since there are typically <em>many</em> outstanding Recvs at any given time, mostly just waiting for data to arrive, showing them in the UI as regular op rectangles results in a largely useless and cluttered UI.   The Chrome UI has 'flow events' which would let me draw arrows from Sends to Recvs and this might be easier to understand and more compact (\"vertical arrows are good, diagonal arrows imply something is taking a long time\")</p>\n<p>Anyhow ... that's the plan, but it's hard to find time to work on this.</p>", "body_text": "if I had some way to see send/recv timing in the .pbtxt file I could diagnose things already\n\nRecv ops are async and don't currently get traced into StepStats.  I think that Send ops are traced, but may get filtered out (need to check).\nTo visualize what's going on, the UI needs to connect the start of the Send op with the end of the Recv op (since this is approximately the time taken on the wire).  Note that Recv ops typically fire immediately and wait around on the remote machine until the matching Send op executes.\nSince there are typically many outstanding Recvs at any given time, mostly just waiting for data to arrive, showing them in the UI as regular op rectangles results in a largely useless and cluttered UI.   The Chrome UI has 'flow events' which would let me draw arrows from Sends to Recvs and this might be easier to understand and more compact (\"vertical arrows are good, diagonal arrows imply something is taking a long time\")\nAnyhow ... that's the plan, but it's hard to find time to work on this.", "body": ">  if I had some way to see send/recv timing in the .pbtxt file I could diagnose things already\n\nRecv ops are async and don't currently get traced into StepStats.  I think that Send ops are traced, but may get filtered out (need to check). \n\nTo visualize what's going on, the UI needs to connect the start of the Send op with the _end_ of the Recv op (since this is approximately the time taken on the wire).  Note that Recv ops typically fire immediately and wait around on the remote machine until the matching Send op executes.    \n\nSince there are typically _many_ outstanding Recvs at any given time, mostly just waiting for data to arrive, showing them in the UI as regular op rectangles results in a largely useless and cluttered UI.   The Chrome UI has 'flow events' which would let me draw arrows from Sends to Recvs and this might be easier to understand and more compact (\"vertical arrows are good, diagonal arrows imply something is taking a long time\")  \n\nAnyhow ... that's the plan, but it's hard to find time to work on this.\n"}