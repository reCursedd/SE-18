{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/252261397", "html_url": "https://github.com/tensorflow/tensorflow/issues/4809#issuecomment-252261397", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4809", "id": 252261397, "node_id": "MDEyOklzc3VlQ29tbWVudDI1MjI2MTM5Nw==", "user": {"login": "prb12", "id": 11547801, "node_id": "MDQ6VXNlcjExNTQ3ODAx", "avatar_url": "https://avatars1.githubusercontent.com/u/11547801?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prb12", "html_url": "https://github.com/prb12", "followers_url": "https://api.github.com/users/prb12/followers", "following_url": "https://api.github.com/users/prb12/following{/other_user}", "gists_url": "https://api.github.com/users/prb12/gists{/gist_id}", "starred_url": "https://api.github.com/users/prb12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prb12/subscriptions", "organizations_url": "https://api.github.com/users/prb12/orgs", "repos_url": "https://api.github.com/users/prb12/repos", "events_url": "https://api.github.com/users/prb12/events{/privacy}", "received_events_url": "https://api.github.com/users/prb12/received_events", "type": "User", "site_admin": false}, "created_at": "2016-10-07T14:06:24Z", "updated_at": "2016-10-07T14:06:59Z", "author_association": "MEMBER", "body_html": "<p>Yes - the way trace data is collected for Send/Recv nodes in our internal tracer is somewhat out-of-band and isn't implemented in the current open-source distributed tracing.  Neither is the GPUTracer support (though that is an easy 2 line change).</p>\n<p>Both of these issues need to be addressed in the current refactoring which suharshs@ is doing to the various Session implementation.  I've been meaning to improve our internal Send/Recv tracing for some time, but it has never reached the top of the todo list ;-)</p>\n<p>To do a nice job of visualizing this, it would probably be necessary to make the tf.Timeline class accept the rewritten post-partitioning GraphDefs which can now be retrieved in the RunMetadata.  (This will also get rid of all of the 'Unknown' ops in the timeline!)</p>", "body_text": "Yes - the way trace data is collected for Send/Recv nodes in our internal tracer is somewhat out-of-band and isn't implemented in the current open-source distributed tracing.  Neither is the GPUTracer support (though that is an easy 2 line change).\nBoth of these issues need to be addressed in the current refactoring which suharshs@ is doing to the various Session implementation.  I've been meaning to improve our internal Send/Recv tracing for some time, but it has never reached the top of the todo list ;-)\nTo do a nice job of visualizing this, it would probably be necessary to make the tf.Timeline class accept the rewritten post-partitioning GraphDefs which can now be retrieved in the RunMetadata.  (This will also get rid of all of the 'Unknown' ops in the timeline!)", "body": "Yes - the way trace data is collected for Send/Recv nodes in our internal tracer is somewhat out-of-band and isn't implemented in the current open-source distributed tracing.  Neither is the GPUTracer support (though that is an easy 2 line change).  \n\nBoth of these issues need to be addressed in the current refactoring which suharshs@ is doing to the various Session implementation.  I've been meaning to improve our internal Send/Recv tracing for some time, but it has never reached the top of the todo list ;-)\n\nTo do a nice job of visualizing this, it would probably be necessary to make the tf.Timeline class accept the rewritten post-partitioning GraphDefs which can now be retrieved in the RunMetadata.  (This will also get rid of all of the 'Unknown' ops in the timeline!)\n"}