{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18540", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18540/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18540/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18540/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18540", "id": 314465405, "node_id": "MDU6SXNzdWUzMTQ0NjU0MDU=", "number": 18540, "title": "Tensorflow leaks 1280 bytes with each session opened and closed? (Python API)", "user": {"login": "Tal-Golan", "id": 10431558, "node_id": "MDQ6VXNlcjEwNDMxNTU4", "avatar_url": "https://avatars3.githubusercontent.com/u/10431558?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tal-Golan", "html_url": "https://github.com/Tal-Golan", "followers_url": "https://api.github.com/users/Tal-Golan/followers", "following_url": "https://api.github.com/users/Tal-Golan/following{/other_user}", "gists_url": "https://api.github.com/users/Tal-Golan/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tal-Golan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tal-Golan/subscriptions", "organizations_url": "https://api.github.com/users/Tal-Golan/orgs", "repos_url": "https://api.github.com/users/Tal-Golan/repos", "events_url": "https://api.github.com/users/Tal-Golan/events{/privacy}", "received_events_url": "https://api.github.com/users/Tal-Golan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "poxvoculi", "id": 15676913, "node_id": "MDQ6VXNlcjE1Njc2OTEz", "avatar_url": "https://avatars2.githubusercontent.com/u/15676913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poxvoculi", "html_url": "https://github.com/poxvoculi", "followers_url": "https://api.github.com/users/poxvoculi/followers", "following_url": "https://api.github.com/users/poxvoculi/following{/other_user}", "gists_url": "https://api.github.com/users/poxvoculi/gists{/gist_id}", "starred_url": "https://api.github.com/users/poxvoculi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poxvoculi/subscriptions", "organizations_url": "https://api.github.com/users/poxvoculi/orgs", "repos_url": "https://api.github.com/users/poxvoculi/repos", "events_url": "https://api.github.com/users/poxvoculi/events{/privacy}", "received_events_url": "https://api.github.com/users/poxvoculi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "poxvoculi", "id": 15676913, "node_id": "MDQ6VXNlcjE1Njc2OTEz", "avatar_url": "https://avatars2.githubusercontent.com/u/15676913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poxvoculi", "html_url": "https://github.com/poxvoculi", "followers_url": "https://api.github.com/users/poxvoculi/followers", "following_url": "https://api.github.com/users/poxvoculi/following{/other_user}", "gists_url": "https://api.github.com/users/poxvoculi/gists{/gist_id}", "starred_url": "https://api.github.com/users/poxvoculi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poxvoculi/subscriptions", "organizations_url": "https://api.github.com/users/poxvoculi/orgs", "repos_url": "https://api.github.com/users/poxvoculi/repos", "events_url": "https://api.github.com/users/poxvoculi/events{/privacy}", "received_events_url": "https://api.github.com/users/poxvoculi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-04-16T00:06:46Z", "updated_at": "2018-05-14T17:41:23Z", "closed_at": "2018-05-14T17:41:23Z", "author_association": "NONE", "body_html": "<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:<br>\nYes.</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:<br>\nLinux Ubuntu 17.10</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:<br>\nBinary</li>\n<li><strong>TensorFlow version (use command below)</strong>:<br>\n1.6 (also tested on 1.7)</li>\n<li><strong>Python version</strong>:<br>\n3.6</li>\n<li><strong>Bazel version (if compiling from source)</strong>:<br>\nN/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:<br>\nN/A</li>\n<li><strong>CUDA/cuDNN version</strong>:<br>\n9.0/7.0</li>\n<li><strong>GPU model and memory</strong>:<br>\nTitan XP, 12GB</li>\n<li><strong>Exact command to reproduce</strong>:<br>\nTo reproduce, save the following python script as <code>memory_test.py</code>:</li>\n</ul>\n<pre><code>    import tensorflow as tf\n    import sys\n    n_Iterations=int(sys.argv[1])\n    def open_and_close_session():\n       with tf.Session() as sess:\n          pass\n    for _ in range(n_Iterations):\n       open_and_close_session()\n    with tf.Session() as sess:\n       print(\"bytes used=\",sess.run(tf.contrib.memory_stats.BytesInUse()))\n</code></pre>\n<p>Then run it from the command line using different number of iterations:<br>\n<code>python memory_test.py 0</code>, <code>python memory_test.py 1</code>, <code>python memory_test.py 10</code>, and so on.</p>\n<h3>Describe the problem</h3>\n<p>It seems that each Tensorflow session I open and close consumes 1280 bytes from the GPU memory, which are not released until the python kernel is terminated.</p>\n<p>Running the script given above, which simply opens and closes sessions without any further operation, yields these results:</p>\n<ul>\n<li><code>python memory_test.py 0</code> yields <code>bytes used= 1280</code></li>\n<li><code>python memory_test.py 1</code> yields <code>bytes used= 2560</code>.</li>\n<li><code>python memory_test.py 10</code> yields <code>bytes used= 14080</code>.</li>\n<li><code>python memory_test.py 100</code> yields <code>bytes used= 129280</code>.</li>\n<li><code>python memory_test.py 1000</code> yields <code>bytes used= 1281280</code>.</li>\n</ul>\n<p>The math is easy - each session opened and closed leaks 1280 bytes. I tested this script on two different ubuntu 17.10 workstations with tensorflow-gpu 1.6 and 1.7 and different NVIDIA GPUs.</p>\n<p>(here's a related <a href=\"https://stackoverflow.com/q/49735217/1500585\" rel=\"nofollow\">stackoverflow question</a>, at least one user was able to reproduce).</p>", "body_text": "Have I written custom code (as opposed to using a stock example script provided in TensorFlow):\nYes.\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nLinux Ubuntu 17.10\nTensorFlow installed from (source or binary):\nBinary\nTensorFlow version (use command below):\n1.6 (also tested on 1.7)\nPython version:\n3.6\nBazel version (if compiling from source):\nN/A\nGCC/Compiler version (if compiling from source):\nN/A\nCUDA/cuDNN version:\n9.0/7.0\nGPU model and memory:\nTitan XP, 12GB\nExact command to reproduce:\nTo reproduce, save the following python script as memory_test.py:\n\n    import tensorflow as tf\n    import sys\n    n_Iterations=int(sys.argv[1])\n    def open_and_close_session():\n       with tf.Session() as sess:\n          pass\n    for _ in range(n_Iterations):\n       open_and_close_session()\n    with tf.Session() as sess:\n       print(\"bytes used=\",sess.run(tf.contrib.memory_stats.BytesInUse()))\n\nThen run it from the command line using different number of iterations:\npython memory_test.py 0, python memory_test.py 1, python memory_test.py 10, and so on.\nDescribe the problem\nIt seems that each Tensorflow session I open and close consumes 1280 bytes from the GPU memory, which are not released until the python kernel is terminated.\nRunning the script given above, which simply opens and closes sessions without any further operation, yields these results:\n\npython memory_test.py 0 yields bytes used= 1280\npython memory_test.py 1 yields bytes used= 2560.\npython memory_test.py 10 yields bytes used= 14080.\npython memory_test.py 100 yields bytes used= 129280.\npython memory_test.py 1000 yields bytes used= 1281280.\n\nThe math is easy - each session opened and closed leaks 1280 bytes. I tested this script on two different ubuntu 17.10 workstations with tensorflow-gpu 1.6 and 1.7 and different NVIDIA GPUs.\n(here's a related stackoverflow question, at least one user was able to reproduce).", "body": "- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nYes.\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nLinux Ubuntu 17.10\r\n- **TensorFlow installed from (source or binary)**:\r\nBinary\r\n- **TensorFlow version (use command below)**:\r\n1.6 (also tested on 1.7)\r\n- **Python version**: \r\n3.6\r\n- **Bazel version (if compiling from source)**:\r\nN/A\r\n- **GCC/Compiler version (if compiling from source)**:\r\nN/A\r\n- **CUDA/cuDNN version**:\r\n9.0/7.0\r\n- **GPU model and memory**:\r\nTitan XP, 12GB\r\n- **Exact command to reproduce**:\r\nTo reproduce, save the following python script as `memory_test.py`:\r\n```\r\n    import tensorflow as tf\r\n    import sys\r\n    n_Iterations=int(sys.argv[1])\r\n    def open_and_close_session():\r\n       with tf.Session() as sess:\r\n          pass\r\n    for _ in range(n_Iterations):\r\n       open_and_close_session()\r\n    with tf.Session() as sess:\r\n       print(\"bytes used=\",sess.run(tf.contrib.memory_stats.BytesInUse()))\r\n```\r\nThen run it from the command line using different number of iterations:\r\n`python memory_test.py 0`, `python memory_test.py 1`, `python memory_test.py 10`, and so on.\r\n\r\n### Describe the problem\r\nIt seems that each Tensorflow session I open and close consumes 1280 bytes from the GPU memory, which are not released until the python kernel is terminated. \r\n\r\nRunning the script given above, which simply opens and closes sessions without any further operation, yields these results:\r\n - `python memory_test.py 0` yields `bytes used= 1280`\r\n - `python memory_test.py 1` yields `bytes used= 2560`.\r\n - `python memory_test.py 10` yields `bytes used= 14080`.\r\n - `python memory_test.py 100` yields `bytes used= 129280`.\r\n - `python memory_test.py 1000` yields `bytes used= 1281280`.\r\n\r\nThe math is easy - each session opened and closed leaks 1280 bytes. I tested this script on two different ubuntu 17.10 workstations with tensorflow-gpu 1.6 and 1.7 and different NVIDIA GPUs.\r\n\r\n(here's a related [stackoverflow question](https://stackoverflow.com/q/49735217/1500585), at least one user was able to reproduce)."}