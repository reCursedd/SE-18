{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/182137702", "pull_request_review_id": 112881814, "id": 182137702, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjEzNzcwMg==", "diff_hunk": "@@ -141,21 +143,84 @@ darwin_cmake_vars = {\n     \"HAVE_MALLOC_MALLOC_H\": 1,\n }\n \n+# CMake variables specific to the Windows platform.\n+win32_cmake_vars = {\n+    # Headers\n+    \"HAVE_ERRNO_H\": 1,\n+    \"HAVE_EXECINFO_H\": 1,\n+    \"HAVE_FCNTL_H\": 1,\n+    \"HAVE_FENV_H\": 1,\n+    \"HAVE_INTTYPES_H\": 1,\n+    \"HAVE_MALLOC_H\": 1,\n+    \"HAVE_SIGNAL_H\": 1,\n+    \"HAVE_STDINT_H\": 1,\n+    \"HAVE_SYS_STAT_H\": 1,\n+    \"HAVE_SYS_TYPES_H\": 1,\n+    \"HAVE_ZLIB_H\": 1,\n+\n+    # Features\n+    \"BACKTRACE_HEADER\": \"execinfo.h\",\n+    \"HAVE_GETCWD\": 1,\n+    \"HAVE_INT64_T\": 1,\n+    \"HAVE_STRERROR\": 1,\n+    \"HAVE_STRTOLL\": 1,\n+    \"HAVE_SYSCONF\": 1,\n+    \"HAVE_UINT64_T\": 1,\n+    \"HAVE__CHSIZE_S\": 1,\n+    \"HAVE___CHKSTK\": 1,\n+\n+    # MSVC specific\n+    \"stricmp\": \"_stricmp\",\n+    \"strdup\": \"_strdup\",\n+\n+    # LLVM features\n+    \"ENABLE_BACKTRACES\": 1,\n+    \"LLVM_BINDIR\": \"/dev/null\",\n+    \"LLVM_DISABLE_ABI_BREAKING_CHECKS_ENFORCING\": 0,\n+    \"LLVM_ENABLE_ABI_BREAKING_CHECKS\": 0,\n+    \"LLVM_ENABLE_THREADS\": 1,\n+    \"LLVM_ENABLE_ZLIB\": 1,\n+    \"LLVM_HAS_ATOMICS\": 1,\n+    \"LLVM_INCLUDEDIR\": \"/dev/null\",\n+    \"LLVM_INFODIR\": \"/dev/null\",\n+    \"LLVM_MANDIR\": \"/dev/null\",\n+    \"LLVM_NATIVE_TARGET\": 1,\n+    \"LLVM_NATIVE_TARGETINFO\": 1,\n+    \"LLVM_NATIVE_TARGETMC\": 1,\n+    \"LLVM_NATIVE_ASMPRINTER\": 1,\n+    \"LLVM_NATIVE_ASMPARSER\": 1,\n+    \"LLVM_NATIVE_DISASSEMBLER\": 1,\n+    \"LLVM_ON_WIN32\": 1,\n+    \"LLVM_PREFIX\": \"/dev/null\",\n+    \"LLVM_VERSION_MAJOR\": 0,\n+    \"LLVM_VERSION_MINOR\": 0,\n+    \"LLVM_VERSION_PATCH\": 0,\n+    \"LTDL_SHLIB_EXT\": \".dll\",\n+    \"PACKAGE_NAME\": \"llvm\",\n+    \"PACKAGE_STRING\": \"llvm tensorflow-trunk\",\n+    \"PACKAGE_VERSION\": \"tensorflow-trunk\",\n+    \"RETSIGTYPE\": \"void\",\n+}\n+\n # Select a set of CMake variables based on the platform.\n # TODO(phawkins): use a better method to select the right host triple, rather\n # than hardcoding x86_64.\n all_cmake_vars = select({\n     \"@org_tensorflow//tensorflow:darwin\": cmake_var_string(\n-        cmake_vars + llvm_target_cmake_vars(\"X86\", \"x86_64-apple-darwin\") +\n+        posix_cmake_vars + llvm_target_cmake_vars(\"X86\", \"x86_64-apple-darwin\") +\n         darwin_cmake_vars,\n     ),\n     \"@org_tensorflow//tensorflow:linux_ppc64le\": cmake_var_string(\n-        cmake_vars +\n+        posix_cmake_vars +\n         llvm_target_cmake_vars(\"PowerPC\", \"powerpc64le-unknown-linux_gnu\") +\n         linux_cmake_vars,\n     ),\n+    \"@org_tensorflow//tensorflow:windows\": cmake_var_string(\n+        win32_cmake_vars +", "path": "third_party/llvm/llvm.BUILD", "position": null, "original_position": 110, "commit_id": "d0b4230bc3052f080c901f7d999cf848c7d81450", "original_commit_id": "71e607b96bb55cd9939a4b0bfe15be924e0bb5d6", "user": {"login": "sanjoy", "id": 136291, "node_id": "MDQ6VXNlcjEzNjI5MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/136291?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanjoy", "html_url": "https://github.com/sanjoy", "followers_url": "https://api.github.com/users/sanjoy/followers", "following_url": "https://api.github.com/users/sanjoy/following{/other_user}", "gists_url": "https://api.github.com/users/sanjoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanjoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanjoy/subscriptions", "organizations_url": "https://api.github.com/users/sanjoy/orgs", "repos_url": "https://api.github.com/users/sanjoy/repos", "events_url": "https://api.github.com/users/sanjoy/events{/privacy}", "received_events_url": "https://api.github.com/users/sanjoy/received_events", "type": "User", "site_admin": false}, "body": "Can we do here what we do for `linux_cmake_vars` and `darwin_cmake_vars` (i.e. extract out a `all_cmake_vars` that is  common to windows and posix instead of duplicating `posix_cmake_vars` here)?", "created_at": "2018-04-17T16:12:03Z", "updated_at": "2018-08-25T03:37:19Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/18293#discussion_r182137702", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/18293", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/182137702"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/18293#discussion_r182137702"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/18293"}}, "body_html": "<p>Can we do here what we do for <code>linux_cmake_vars</code> and <code>darwin_cmake_vars</code> (i.e. extract out a <code>all_cmake_vars</code> that is  common to windows and posix instead of duplicating <code>posix_cmake_vars</code> here)?</p>", "body_text": "Can we do here what we do for linux_cmake_vars and darwin_cmake_vars (i.e. extract out a all_cmake_vars that is  common to windows and posix instead of duplicating posix_cmake_vars here)?"}