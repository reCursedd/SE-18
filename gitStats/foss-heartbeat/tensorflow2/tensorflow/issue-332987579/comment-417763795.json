{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/417763795", "html_url": "https://github.com/tensorflow/tensorflow/pull/20076#issuecomment-417763795", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20076", "id": 417763795, "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzc2Mzc5NQ==", "user": {"login": "ringw", "id": 1391644, "node_id": "MDQ6VXNlcjEzOTE2NDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1391644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ringw", "html_url": "https://github.com/ringw", "followers_url": "https://api.github.com/users/ringw/followers", "following_url": "https://api.github.com/users/ringw/following{/other_user}", "gists_url": "https://api.github.com/users/ringw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ringw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ringw/subscriptions", "organizations_url": "https://api.github.com/users/ringw/orgs", "repos_url": "https://api.github.com/users/ringw/repos", "events_url": "https://api.github.com/users/ringw/events{/privacy}", "received_events_url": "https://api.github.com/users/ringw/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-31T19:13:43Z", "updated_at": "2018-08-31T19:13:43Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3540650\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmlipman\">@jmlipman</a> Hmm, I actually think conv2d and conv3d will already treat the 0th axis as a batch of independent images, so you shouldn't really need to modify the loop. You can treat a 4-D input as a batch of 3-D voxel masks if you just skip <code>array_ops.expand_dims(mask, 0)</code> in that case. Please also just copy <code>test_random_3d_fills</code> and create a 4-D test case!</p>", "body_text": "@jmlipman Hmm, I actually think conv2d and conv3d will already treat the 0th axis as a batch of independent images, so you shouldn't really need to modify the loop. You can treat a 4-D input as a batch of 3-D voxel masks if you just skip array_ops.expand_dims(mask, 0) in that case. Please also just copy test_random_3d_fills and create a 4-D test case!", "body": "@jmlipman Hmm, I actually think conv2d and conv3d will already treat the 0th axis as a batch of independent images, so you shouldn't really need to modify the loop. You can treat a 4-D input as a batch of 3-D voxel masks if you just skip `array_ops.expand_dims(mask, 0)` in that case. Please also just copy `test_random_3d_fills` and create a 4-D test case!"}