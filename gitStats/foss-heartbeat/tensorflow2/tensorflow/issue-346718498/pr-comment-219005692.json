{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/219005692", "pull_request_review_id": 157072799, "id": 219005692, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTAwNTY5Mg==", "diff_hunk": "@@ -3999,6 +4096,271 @@ Status MklLayoutRewritePass::MergeConv2DWithBiasAdd(std::unique_ptr<Graph>* g,\n   return Status::OK();\n }\n \n+Status MklLayoutRewritePass::MergeConv2DWithRelu(std::unique_ptr<Graph>* g,\n+                                                 Node* m, Node* n) {\n+  CHECK_EQ(((m->type_string() == csinfo_.relu &&\n+             n->type_string() == csinfo_.conv2d)) ||\n+               ((n->type_string() == csinfo_.relu &&\n+                 m->type_string() == csinfo_.conv2d)),\n+           true);\n+\n+  // If 'm' is Relu, then 'n' is Conv2D. Since Conv2D feeds Relu,\n+  // Relu is successor node, and Conv2D predecessor node.\n+  Node* pred = m->type_string() == csinfo_.relu ? n : m;\n+  Node* succ = m->type_string() == csinfo_.relu ? m : n;\n+\n+  // 1. Get all attributes from input nodes.\n+  DataType T_pred, T_succ;\n+  TF_CHECK_OK(GetNodeAttr(pred->def(), \"T\", &T_pred));\n+  TF_CHECK_OK(GetNodeAttr(succ->def(), \"T\", &T_succ));\n+  // We check to ensure that types of both succ and pred are same.\n+  // We expect them to be same, so we can enforce this as assert.\n+  // But assert can be too strict, so we enforce this as a check.\n+  // If the check fails, then we do not merge two nodes.\n+  // We also do same check for devices.\n+  if (T_pred != T_succ ||\n+      pred->assigned_device_name() != succ->assigned_device_name() ||\n+      pred->def().device() != succ->def().device()) {\n+    return Status(error::Code::INVALID_ARGUMENT,\n+                  \"T attribute or devices of Conv2D and \"\n+                  \"Relu do not match. Will skip node merge optimization\");\n+  }\n+\n+  const int succ_num = succ->num_inputs();\n+  gtl::InlinedVector<Node*, 4> succ_control_edges;\n+  gtl::InlinedVector<std::pair<Node*, int>, 4> succ_in(succ_num);\n+  FillInputs(succ, &succ_control_edges, &succ_in);\n+\n+  const int pred_num = pred->num_inputs();\n+  gtl::InlinedVector<Node*, 4> pred_control_edges;\n+  gtl::InlinedVector<std::pair<Node*, int>, 4> pred_in(pred_num);\n+  FillInputs(pred, &pred_control_edges, &pred_in);\n+\n+  // We need to ensure that Conv2D only feeds to Relu (some other operator is\n+  // not expecting output of Conv2D). If this is not the case, then we cannot\n+  // merge Conv2D with Relu.\n+  const int kFirstOutputSlot = 0;\n+  for (const Edge* e : pred->out_edges()) {\n+    if (e->src_output() == kFirstOutputSlot && e->dst() != succ) {\n+      return Status(error::Code::INVALID_ARGUMENT,\n+                    \"Conv2D does not feed to Relu, or \"\n+                    \"it feeds Relu but has multiple outputs. \"\n+                    \"Will skip node merge optimization\");\n+    }\n+  }\n+\n+  // 2. Get inputs Conv2D node. We dont need to get input from Relu, since", "path": "tensorflow/core/graph/mkl_layout_pass.cc", "position": 279, "original_position": 279, "commit_id": "00408b3315b825805812386b5c29f446fd05120d", "original_commit_id": "00408b3315b825805812386b5c29f446fd05120d", "user": {"login": "tatianashp", "id": 986732, "node_id": "MDQ6VXNlcjk4NjczMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/986732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatianashp", "html_url": "https://github.com/tatianashp", "followers_url": "https://api.github.com/users/tatianashp/followers", "following_url": "https://api.github.com/users/tatianashp/following{/other_user}", "gists_url": "https://api.github.com/users/tatianashp/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatianashp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatianashp/subscriptions", "organizations_url": "https://api.github.com/users/tatianashp/orgs", "repos_url": "https://api.github.com/users/tatianashp/repos", "events_url": "https://api.github.com/users/tatianashp/events{/privacy}", "received_events_url": "https://api.github.com/users/tatianashp/received_events", "type": "User", "site_admin": false}, "body": "inputs of Conv2D node", "created_at": "2018-09-20T00:41:46Z", "updated_at": "2018-09-20T00:59:37Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/21314#discussion_r219005692", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21314", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/219005692"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/21314#discussion_r219005692"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21314"}}, "body_html": "<p>inputs of Conv2D node</p>", "body_text": "inputs of Conv2D node"}