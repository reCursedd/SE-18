{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17488", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17488/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17488/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17488/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17488", "id": 302786604, "node_id": "MDU6SXNzdWUzMDI3ODY2MDQ=", "number": 17488, "title": "Feature request: tf.contrib.Predictor - add an optional ConfigProto argument to the constructor", "user": {"login": "GPhilo", "id": 4441724, "node_id": "MDQ6VXNlcjQ0NDE3MjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/4441724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GPhilo", "html_url": "https://github.com/GPhilo", "followers_url": "https://api.github.com/users/GPhilo/followers", "following_url": "https://api.github.com/users/GPhilo/following{/other_user}", "gists_url": "https://api.github.com/users/GPhilo/gists{/gist_id}", "starred_url": "https://api.github.com/users/GPhilo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GPhilo/subscriptions", "organizations_url": "https://api.github.com/users/GPhilo/orgs", "repos_url": "https://api.github.com/users/GPhilo/repos", "events_url": "https://api.github.com/users/GPhilo/events{/privacy}", "received_events_url": "https://api.github.com/users/GPhilo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "tatianashp", "id": 986732, "node_id": "MDQ6VXNlcjk4NjczMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/986732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatianashp", "html_url": "https://github.com/tatianashp", "followers_url": "https://api.github.com/users/tatianashp/followers", "following_url": "https://api.github.com/users/tatianashp/following{/other_user}", "gists_url": "https://api.github.com/users/tatianashp/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatianashp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatianashp/subscriptions", "organizations_url": "https://api.github.com/users/tatianashp/orgs", "repos_url": "https://api.github.com/users/tatianashp/repos", "events_url": "https://api.github.com/users/tatianashp/events{/privacy}", "received_events_url": "https://api.github.com/users/tatianashp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tatianashp", "id": 986732, "node_id": "MDQ6VXNlcjk4NjczMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/986732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatianashp", "html_url": "https://github.com/tatianashp", "followers_url": "https://api.github.com/users/tatianashp/followers", "following_url": "https://api.github.com/users/tatianashp/following{/other_user}", "gists_url": "https://api.github.com/users/tatianashp/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatianashp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatianashp/subscriptions", "organizations_url": "https://api.github.com/users/tatianashp/orgs", "repos_url": "https://api.github.com/users/tatianashp/repos", "events_url": "https://api.github.com/users/tatianashp/events{/privacy}", "received_events_url": "https://api.github.com/users/tatianashp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-03-06T17:08:00Z", "updated_at": "2018-04-17T22:53:52Z", "closed_at": "2018-04-17T22:53:52Z", "author_association": "NONE", "body_html": "<p>Have I written custom code: -<br>\nOS Platform and Distribution: -<br>\nTensorFlow installed from: -<br>\nTensorFlow version: -<br>\nBazel version: -<br>\nCUDA/cuDNN version: -<br>\nGPU model and memory: -<br>\nExact command to reproduce: -</p>\n<p>The <code>tf.contrib.Predictor</code> subclasses are useful to quickly run inferences, but at the moment it's impossible to configure the <code>tf.Session</code> instance used for inference, because it is created in <code>__init__</code> without the possibility to pass a <code>config</code> to it.</p>\n<p>My suggestion is then to add the explicit argument <code>config</code> to <code>Predictor</code>'s subclasses' init functions and pass it to the Session constructor.</p>\n<p>Note that, technically, for the <code>{Contrib|Core}EstimatorPredictor</code> classes one could already have a <code>session_config</code> defined in <code>estimator.config.session_config</code>, so perhaps this could be the fallback value when using these classes.</p>", "body_text": "Have I written custom code: -\nOS Platform and Distribution: -\nTensorFlow installed from: -\nTensorFlow version: -\nBazel version: -\nCUDA/cuDNN version: -\nGPU model and memory: -\nExact command to reproduce: -\nThe tf.contrib.Predictor subclasses are useful to quickly run inferences, but at the moment it's impossible to configure the tf.Session instance used for inference, because it is created in __init__ without the possibility to pass a config to it.\nMy suggestion is then to add the explicit argument config to Predictor's subclasses' init functions and pass it to the Session constructor.\nNote that, technically, for the {Contrib|Core}EstimatorPredictor classes one could already have a session_config defined in estimator.config.session_config, so perhaps this could be the fallback value when using these classes.", "body": "Have I written custom code: -\r\nOS Platform and Distribution: -\r\nTensorFlow installed from: -\r\nTensorFlow version: -\r\nBazel version: -\r\nCUDA/cuDNN version: -\r\nGPU model and memory: -\r\nExact command to reproduce: -\r\n\r\nThe `tf.contrib.Predictor` subclasses are useful to quickly run inferences, but at the moment it's impossible to configure the `tf.Session` instance used for inference, because it is created in `__init__` without the possibility to pass a `config` to it.\r\n\r\nMy suggestion is then to add the explicit argument `config` to `Predictor`'s subclasses' init functions and pass it to the Session constructor.\r\n\r\nNote that, technically, for the `{Contrib|Core}EstimatorPredictor` classes one could already have a `session_config` defined in `estimator.config.session_config`, so perhaps this could be the fallback value when using these classes."}