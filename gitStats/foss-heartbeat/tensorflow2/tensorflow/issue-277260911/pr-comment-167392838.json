{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/167392838", "pull_request_review_id": 95616501, "id": 167392838, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NzM5MjgzOA==", "diff_hunk": "@@ -373,22 +374,23 @@ seed2: An second seed to avoid seed collision.\n REGISTER_OP(\"ComputeAccidentalHits\")\n     .Input(\"true_classes: int64\")\n     .Input(\"sampled_candidates: int64\")\n+    .Input(\"num_true: int32\")\n     .Output(\"indices: int32\")\n     .Output(\"ids: int64\")\n     .Output(\"weights: float\")\n-    .Attr(\"num_true: int\")\n     .Attr(\"seed: int = 0\")\n     .Attr(\"seed2: int = 0\")\n     .SetShapeFn([](InferenceContext* c) {\n-      int64 num_true;", "path": "tensorflow/core/ops/candidate_sampling_ops.cc", "position": 197, "original_position": 197, "commit_id": "2b8be38ac4a57699904dc501fe7270c2b58177b6", "original_commit_id": "7ae527af3b23681496a2f265e936821a98f8da23", "user": {"login": "MtDersvan", "id": 7069222, "node_id": "MDQ6VXNlcjcwNjkyMjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/7069222?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MtDersvan", "html_url": "https://github.com/MtDersvan", "followers_url": "https://api.github.com/users/MtDersvan/followers", "following_url": "https://api.github.com/users/MtDersvan/following{/other_user}", "gists_url": "https://api.github.com/users/MtDersvan/gists{/gist_id}", "starred_url": "https://api.github.com/users/MtDersvan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MtDersvan/subscriptions", "organizations_url": "https://api.github.com/users/MtDersvan/orgs", "repos_url": "https://api.github.com/users/MtDersvan/repos", "events_url": "https://api.github.com/users/MtDersvan/events{/privacy}", "received_events_url": "https://api.github.com/users/MtDersvan/received_events", "type": "User", "site_admin": false}, "body": "@drpngx sorry for being absent for so long, but I'm back. \r\nThis original part:\r\n~~~c++\r\n        int64 num_true;\r\n        TF_RETURN_IF_ERROR(c->GetAttr(\"num_true\", &num_true));\r\n        ...\r\n        DimensionHandle unused;\r\n        TF_RETURN_IF_ERROR(\r\n            c->WithValue(c->Dim(true_classes, 1), num_true, &unused));\r\n~~~\r\nWas substituted by this one:\r\n~~~c++\r\n        DimensionHandle num_true;\r\n        TF_RETURN_IF_ERROR(c->MakeDimForScalarInput(2, &num_true));\r\n        ...\r\n        DimensionHandle unused;\r\n        TF_RETURN_IF_ERROR(\r\n            c->WithValue(c->Dim(true_classes, 1), c->Value(num_true), &unused));\r\n~~~\r\nAnd that change gives this error: https://pastebin.com/r5iTHZ6L\r\n\r\nAlso, the upper mentioned code, looks more like a hack, but when I try to get the value directly:\r\n~~~c++\r\n      int64 num_true;\r\n      const Tensor* t = c->input_tensor(2);\r\n      TF_RETURN_IF_ERROR(c->GetScalarFromTensor(t, &num_true));\r\n~~~\r\nIt gives me a `Segmentation fault (core dumped)` when I launch `nce_loss` with `remove_accidental_hits=True`.\r\n\r\nI'll try a few more things, but let me know if I'm making some terrible mistakes.", "created_at": "2018-02-10T08:24:12Z", "updated_at": "2018-02-10T10:52:44Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/14928#discussion_r167392838", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/14928", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/167392838"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/14928#discussion_r167392838"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/14928"}}, "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=20959853\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/drpngx\">@drpngx</a> sorry for being absent for so long, but I'm back.<br>\nThis original part:</p>\n<div class=\"highlight highlight-source-c++\"><pre>        int64 num_true;\n        <span class=\"pl-en\">TF_RETURN_IF_ERROR</span>(c-&gt;<span class=\"pl-en\">GetAttr</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>num_true<span class=\"pl-pds\">\"</span></span>, &amp;num_true));\n        ...\n        DimensionHandle unused;\n        <span class=\"pl-en\">TF_RETURN_IF_ERROR</span>(\n            c-&gt;<span class=\"pl-en\">WithValue</span>(c-&gt;<span class=\"pl-en\">Dim</span>(true_classes, <span class=\"pl-c1\">1</span>), num_true, &amp;unused));</pre></div>\n<p>Was substituted by this one:</p>\n<div class=\"highlight highlight-source-c++\"><pre>        DimensionHandle num_true;\n        <span class=\"pl-en\">TF_RETURN_IF_ERROR</span>(c-&gt;<span class=\"pl-en\">MakeDimForScalarInput</span>(<span class=\"pl-c1\">2</span>, &amp;num_true));\n        ...\n        DimensionHandle unused;\n        <span class=\"pl-en\">TF_RETURN_IF_ERROR</span>(\n            c-&gt;<span class=\"pl-en\">WithValue</span>(c-&gt;<span class=\"pl-en\">Dim</span>(true_classes, <span class=\"pl-c1\">1</span>), c-&gt;Value(num_true), &amp;unused));</pre></div>\n<p>And that change gives this error: <a href=\"https://pastebin.com/r5iTHZ6L\" rel=\"nofollow\">https://pastebin.com/r5iTHZ6L</a></p>\n<p>Also, the upper mentioned code, looks more like a hack, but when I try to get the value directly:</p>\n<div class=\"highlight highlight-source-c++\"><pre>      int64 num_true;\n      <span class=\"pl-k\">const</span> Tensor* t = c-&gt;<span class=\"pl-en\">input_tensor</span>(<span class=\"pl-c1\">2</span>);\n      <span class=\"pl-en\">TF_RETURN_IF_ERROR</span>(c-&gt;<span class=\"pl-en\">GetScalarFromTensor</span>(t, &amp;num_true));</pre></div>\n<p>It gives me a <code>Segmentation fault (core dumped)</code> when I launch <code>nce_loss</code> with <code>remove_accidental_hits=True</code>.</p>\n<p>I'll try a few more things, but let me know if I'm making some terrible mistakes.</p>", "body_text": "@drpngx sorry for being absent for so long, but I'm back.\nThis original part:\n        int64 num_true;\n        TF_RETURN_IF_ERROR(c->GetAttr(\"num_true\", &num_true));\n        ...\n        DimensionHandle unused;\n        TF_RETURN_IF_ERROR(\n            c->WithValue(c->Dim(true_classes, 1), num_true, &unused));\nWas substituted by this one:\n        DimensionHandle num_true;\n        TF_RETURN_IF_ERROR(c->MakeDimForScalarInput(2, &num_true));\n        ...\n        DimensionHandle unused;\n        TF_RETURN_IF_ERROR(\n            c->WithValue(c->Dim(true_classes, 1), c->Value(num_true), &unused));\nAnd that change gives this error: https://pastebin.com/r5iTHZ6L\nAlso, the upper mentioned code, looks more like a hack, but when I try to get the value directly:\n      int64 num_true;\n      const Tensor* t = c->input_tensor(2);\n      TF_RETURN_IF_ERROR(c->GetScalarFromTensor(t, &num_true));\nIt gives me a Segmentation fault (core dumped) when I launch nce_loss with remove_accidental_hits=True.\nI'll try a few more things, but let me know if I'm making some terrible mistakes.", "in_reply_to_id": 154553724}