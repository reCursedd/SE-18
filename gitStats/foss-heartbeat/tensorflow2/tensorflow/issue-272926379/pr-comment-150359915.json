{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/150359915", "pull_request_review_id": 75907199, "id": 150359915, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MDM1OTkxNQ==", "diff_hunk": "@@ -1604,6 +1604,7 @@ class PrefetchDataset(Dataset):\n \n   def __init__(self, input_dataset, buffer_size):\n     \"\"\"See `Dataset.prefetch()` for details.\"\"\"\n+    assert buffer_size > 0, \"The buffer_size ({}) has to be > 0.\".format(buffer_size)", "path": "tensorflow/python/data/ops/dataset_ops.py", "position": 4, "original_position": 4, "commit_id": "ec482438aeec42bcc402fd231c349afccc678120", "original_commit_id": "ec482438aeec42bcc402fd231c349afccc678120", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "body": "It's complicated by the fact that `buffer_size` can be a `tf.Tensor`. The `assert` will fail in that case... in fact I think it will trigger a different exception about using a `Tensor` as a boolean.\r\n\r\nThe most thorough way to do it would involve the following steps:\r\n\r\n1. Convert `buffer_size` to a `tf.Tensor` to validate its type etc.\r\n2. Attempt to convert it back using `tensor_util.constant_value()`.\r\n3. If the `constant_value()` is not `None`, compare it to `0`.", "created_at": "2017-11-10T23:31:04Z", "updated_at": "2017-11-10T23:31:04Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/14447#discussion_r150359915", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/14447", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/150359915"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/14447#discussion_r150359915"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/14447"}}, "body_html": "<p>It's complicated by the fact that <code>buffer_size</code> can be a <code>tf.Tensor</code>. The <code>assert</code> will fail in that case... in fact I think it will trigger a different exception about using a <code>Tensor</code> as a boolean.</p>\n<p>The most thorough way to do it would involve the following steps:</p>\n<ol>\n<li>Convert <code>buffer_size</code> to a <code>tf.Tensor</code> to validate its type etc.</li>\n<li>Attempt to convert it back using <code>tensor_util.constant_value()</code>.</li>\n<li>If the <code>constant_value()</code> is not <code>None</code>, compare it to <code>0</code>.</li>\n</ol>", "body_text": "It's complicated by the fact that buffer_size can be a tf.Tensor. The assert will fail in that case... in fact I think it will trigger a different exception about using a Tensor as a boolean.\nThe most thorough way to do it would involve the following steps:\n\nConvert buffer_size to a tf.Tensor to validate its type etc.\nAttempt to convert it back using tensor_util.constant_value().\nIf the constant_value() is not None, compare it to 0.", "in_reply_to_id": 150329676}