{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4648", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4648/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4648/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4648/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/4648", "id": 179959786, "node_id": "MDU6SXNzdWUxNzk5NTk3ODY=", "number": 4648, "title": "tf.contrib.learn.estimator each call to predict() reloads the model", "user": {"login": "ashern", "id": 515749, "node_id": "MDQ6VXNlcjUxNTc0OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/515749?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashern", "html_url": "https://github.com/ashern", "followers_url": "https://api.github.com/users/ashern/followers", "following_url": "https://api.github.com/users/ashern/following{/other_user}", "gists_url": "https://api.github.com/users/ashern/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashern/subscriptions", "organizations_url": "https://api.github.com/users/ashern/orgs", "repos_url": "https://api.github.com/users/ashern/repos", "events_url": "https://api.github.com/users/ashern/events{/privacy}", "received_events_url": "https://api.github.com/users/ashern/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2016-09-29T06:01:51Z", "updated_at": "2018-10-01T15:40:57Z", "closed_at": "2016-10-04T01:56:00Z", "author_association": "NONE", "body_html": "<h3>What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?</h3>\n<p>None</p>\n<h3>Environment info</h3>\n<p>Operating System:<br>\nOSX &amp; Ubuntu 14.04</p>\n<h3>If possible, provide a minimal reproducible example - Explanation</h3>\n<p>Each call to estimator.predict() completely reloads the model, which is very slow. Is there any mechanism to maintain the model in GPU/memory for consecutive calls?</p>\n<p>I understand that large arrays can be passed to the function for simultaneous predictions, but my use case is for slowly arriving data which must be processed quickly. Is there a mechanism for decreasing the 'start-up' time of this function?</p>\n<h3>What other attempted solutions have you tried?</h3>\n<p>Looked through API docs &amp; source code for alternative solutions</p>\n<h6></h6>", "body_text": "What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?\nNone\nEnvironment info\nOperating System:\nOSX & Ubuntu 14.04\nIf possible, provide a minimal reproducible example - Explanation\nEach call to estimator.predict() completely reloads the model, which is very slow. Is there any mechanism to maintain the model in GPU/memory for consecutive calls?\nI understand that large arrays can be passed to the function for simultaneous predictions, but my use case is for slowly arriving data which must be processed quickly. Is there a mechanism for decreasing the 'start-up' time of this function?\nWhat other attempted solutions have you tried?\nLooked through API docs & source code for alternative solutions", "body": "### What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?\n\nNone\n### Environment info\n\nOperating System:\nOSX & Ubuntu 14.04\n### If possible, provide a minimal reproducible example - Explanation\n\nEach call to estimator.predict() completely reloads the model, which is very slow. Is there any mechanism to maintain the model in GPU/memory for consecutive calls? \n\nI understand that large arrays can be passed to the function for simultaneous predictions, but my use case is for slowly arriving data which must be processed quickly. Is there a mechanism for decreasing the 'start-up' time of this function?\n### What other attempted solutions have you tried?\n\nLooked through API docs & source code for alternative solutions\n###### \n"}