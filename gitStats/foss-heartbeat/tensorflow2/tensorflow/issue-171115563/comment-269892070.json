{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/269892070", "html_url": "https://github.com/tensorflow/tensorflow/issues/3813#issuecomment-269892070", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3813", "id": 269892070, "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTg5MjA3MA==", "user": {"login": "ghost", "id": 10137, "node_id": "MDQ6VXNlcjEwMTM3", "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-01T04:35:19Z", "updated_at": "2017-01-01T04:35:19Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=577277\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/martinwicke\">@martinwicke</a> Thank you for your time. How to edit the function <code>input_fn</code> below to fix the ValueError: GraphDef cannot be larger than 2GB? Can you give another version of function <code>input_fn</code>? Thanks a lot. I am not very clear of how to do this edition with the link <a href=\"https://www.tensorflow.org/how_tos/reading_data/\" rel=\"nofollow\">https://www.tensorflow.org/how_tos/reading_data/</a> after trying a lot with a lot of errors.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">input_fn</span>(<span class=\"pl-smi\">df</span>):\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"\"\"</span>Input builder function.<span class=\"pl-pds\">\"\"\"</span></span>\n  <span class=\"pl-c\"><span class=\"pl-c\">#</span> Creates a dictionary mapping from each continuous feature column name (k) to</span>\n  <span class=\"pl-c\"><span class=\"pl-c\">#</span> the values of that column stored in a constant Tensor.</span>\n  continuous_cols <span class=\"pl-k\">=</span> {k: tf.constant(df[k].values) <span class=\"pl-k\">for</span> k <span class=\"pl-k\">in</span> <span class=\"pl-c1\">CONTINUOUS_COLUMNS</span>}\n  <span class=\"pl-c\"><span class=\"pl-c\">#</span> Creates a dictionary mapping from each categorical feature column name (k)</span>\n  <span class=\"pl-c\"><span class=\"pl-c\">#</span> to the values of that column stored in a tf.SparseTensor.</span>\n  categorical_cols <span class=\"pl-k\">=</span> {k: tf.SparseTensor(\n      <span class=\"pl-v\">indices</span><span class=\"pl-k\">=</span>[[i, <span class=\"pl-c1\">0</span>] <span class=\"pl-k\">for</span> i <span class=\"pl-k\">in</span> <span class=\"pl-c1\">range</span>(df[k].size)],\n      <span class=\"pl-v\">values</span><span class=\"pl-k\">=</span>df[k].values,\n      <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>[df[k].size, <span class=\"pl-c1\">1</span>])\n                      <span class=\"pl-k\">for</span> k <span class=\"pl-k\">in</span> <span class=\"pl-c1\">CATEGORICAL_COLUMNS</span>}\n  <span class=\"pl-c\"><span class=\"pl-c\">#</span> Merges the two dictionaries into one.</span>\n  feature_cols <span class=\"pl-k\">=</span> <span class=\"pl-c1\">dict</span>(continuous_cols)\n  feature_cols.update(categorical_cols)\n  <span class=\"pl-c\"><span class=\"pl-c\">#</span> Converts the label column into a constant Tensor.</span>\n  label <span class=\"pl-k\">=</span> tf.constant(df[<span class=\"pl-c1\">LABEL_COLUMN</span>].values)\n  <span class=\"pl-c\"><span class=\"pl-c\">#</span> Returns the feature columns and the label.</span>\n  <span class=\"pl-k\">return</span> feature_cols, label</pre></div>", "body_text": "@martinwicke Thank you for your time. How to edit the function input_fn below to fix the ValueError: GraphDef cannot be larger than 2GB? Can you give another version of function input_fn? Thanks a lot. I am not very clear of how to do this edition with the link https://www.tensorflow.org/how_tos/reading_data/ after trying a lot with a lot of errors.\ndef input_fn(df):\n  \"\"\"Input builder function.\"\"\"\n  # Creates a dictionary mapping from each continuous feature column name (k) to\n  # the values of that column stored in a constant Tensor.\n  continuous_cols = {k: tf.constant(df[k].values) for k in CONTINUOUS_COLUMNS}\n  # Creates a dictionary mapping from each categorical feature column name (k)\n  # to the values of that column stored in a tf.SparseTensor.\n  categorical_cols = {k: tf.SparseTensor(\n      indices=[[i, 0] for i in range(df[k].size)],\n      values=df[k].values,\n      shape=[df[k].size, 1])\n                      for k in CATEGORICAL_COLUMNS}\n  # Merges the two dictionaries into one.\n  feature_cols = dict(continuous_cols)\n  feature_cols.update(categorical_cols)\n  # Converts the label column into a constant Tensor.\n  label = tf.constant(df[LABEL_COLUMN].values)\n  # Returns the feature columns and the label.\n  return feature_cols, label", "body": "@martinwicke Thank you for your time. How to edit the function `input_fn` below to fix the ValueError: GraphDef cannot be larger than 2GB? Can you give another version of function `input_fn`? Thanks a lot. I am not very clear of how to do this edition with the link https://www.tensorflow.org/how_tos/reading_data/ after trying a lot with a lot of errors.\r\n```python\r\ndef input_fn(df):\r\n  \"\"\"Input builder function.\"\"\"\r\n  # Creates a dictionary mapping from each continuous feature column name (k) to\r\n  # the values of that column stored in a constant Tensor.\r\n  continuous_cols = {k: tf.constant(df[k].values) for k in CONTINUOUS_COLUMNS}\r\n  # Creates a dictionary mapping from each categorical feature column name (k)\r\n  # to the values of that column stored in a tf.SparseTensor.\r\n  categorical_cols = {k: tf.SparseTensor(\r\n      indices=[[i, 0] for i in range(df[k].size)],\r\n      values=df[k].values,\r\n      shape=[df[k].size, 1])\r\n                      for k in CATEGORICAL_COLUMNS}\r\n  # Merges the two dictionaries into one.\r\n  feature_cols = dict(continuous_cols)\r\n  feature_cols.update(categorical_cols)\r\n  # Converts the label column into a constant Tensor.\r\n  label = tf.constant(df[LABEL_COLUMN].values)\r\n  # Returns the feature columns and the label.\r\n  return feature_cols, label\r\n```"}