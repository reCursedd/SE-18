{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/359621571", "html_url": "https://github.com/tensorflow/tensorflow/pull/16119#issuecomment-359621571", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16119", "id": 359621571, "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTYyMTU3MQ==", "user": {"login": "alextp", "id": 5061, "node_id": "MDQ6VXNlcjUwNjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alextp", "html_url": "https://github.com/alextp", "followers_url": "https://api.github.com/users/alextp/followers", "following_url": "https://api.github.com/users/alextp/following{/other_user}", "gists_url": "https://api.github.com/users/alextp/gists{/gist_id}", "starred_url": "https://api.github.com/users/alextp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alextp/subscriptions", "organizations_url": "https://api.github.com/users/alextp/orgs", "repos_url": "https://api.github.com/users/alextp/repos", "events_url": "https://api.github.com/users/alextp/events{/privacy}", "received_events_url": "https://api.github.com/users/alextp/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-23T00:14:50Z", "updated_at": "2018-01-23T00:14:50Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13268675\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/selcouthlyBlue\">@selcouthlyBlue</a> yes. I meant that instead of having two loss functions, one which converts some arguments and calls the other,  we could have a simple utility function to convert the argument and a single loss function. This feels to me like a smaller API surface.</p>", "body_text": "@selcouthlyBlue yes. I meant that instead of having two loss functions, one which converts some arguments and calls the other,  we could have a simple utility function to convert the argument and a single loss function. This feels to me like a smaller API surface.", "body": "@selcouthlyBlue yes. I meant that instead of having two loss functions, one which converts some arguments and calls the other,  we could have a simple utility function to convert the argument and a single loss function. This feels to me like a smaller API surface."}