{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/340806841", "html_url": "https://github.com/tensorflow/tensorflow/issues/216#issuecomment-340806841", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/216", "id": 340806841, "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDgwNjg0MQ==", "user": {"login": "rhaps0dy", "id": 4928242, "node_id": "MDQ6VXNlcjQ5MjgyNDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/4928242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rhaps0dy", "html_url": "https://github.com/rhaps0dy", "followers_url": "https://api.github.com/users/rhaps0dy/followers", "following_url": "https://api.github.com/users/rhaps0dy/following{/other_user}", "gists_url": "https://api.github.com/users/rhaps0dy/gists{/gist_id}", "starred_url": "https://api.github.com/users/rhaps0dy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rhaps0dy/subscriptions", "organizations_url": "https://api.github.com/users/rhaps0dy/orgs", "repos_url": "https://api.github.com/users/rhaps0dy/repos", "events_url": "https://api.github.com/users/rhaps0dy/events{/privacy}", "received_events_url": "https://api.github.com/users/rhaps0dy/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-31T15:50:32Z", "updated_at": "2017-10-31T15:50:41Z", "author_association": "NONE", "body_html": "<p>I am surprised that so few people have this problem. I suppose it doesn't crop up often if you only do neural networks.</p>\n<p>As a temporary workaround, I'm using this:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">broadcast_matmul</span>(<span class=\"pl-smi\">A</span>, <span class=\"pl-smi\">B</span>):\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Compute A @ B, broadcasting over the first `N-2` ranks<span class=\"pl-pds\">\"</span></span>\n    <span class=\"pl-k\">with</span> tf.variable_scope(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>broadcast_matmul<span class=\"pl-pds\">\"</span></span>):\n        <span class=\"pl-k\">return</span> tf.reduce_sum(A[<span class=\"pl-c1\">...</span>, tf.newaxis] <span class=\"pl-k\">*</span> B[<span class=\"pl-c1\">...</span>, tf.newaxis, :, :],\n                             <span class=\"pl-v\">axis</span><span class=\"pl-k\">=</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">2</span>)</pre></div>\n<p>which is probably not very efficient but it works. Are you implementing it in the proper <code>matmul</code> operation, <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4010770\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/PeterMitrano\">@PeterMitrano</a> ?</p>", "body_text": "I am surprised that so few people have this problem. I suppose it doesn't crop up often if you only do neural networks.\nAs a temporary workaround, I'm using this:\ndef broadcast_matmul(A, B):\n    \"Compute A @ B, broadcasting over the first `N-2` ranks\"\n    with tf.variable_scope(\"broadcast_matmul\"):\n        return tf.reduce_sum(A[..., tf.newaxis] * B[..., tf.newaxis, :, :],\n                             axis=-2)\nwhich is probably not very efficient but it works. Are you implementing it in the proper matmul operation, @PeterMitrano ?", "body": "I am surprised that so few people have this problem. I suppose it doesn't crop up often if you only do neural networks.\r\n\r\nAs a temporary workaround, I'm using this:\r\n```python\r\ndef broadcast_matmul(A, B):\r\n    \"Compute A @ B, broadcasting over the first `N-2` ranks\"\r\n    with tf.variable_scope(\"broadcast_matmul\"):\r\n        return tf.reduce_sum(A[..., tf.newaxis] * B[..., tf.newaxis, :, :],\r\n                             axis=-2)\r\n```\r\n\r\nwhich is probably not very efficient but it works. Are you implementing it in the proper `matmul` operation, @PeterMitrano ?\r\n"}