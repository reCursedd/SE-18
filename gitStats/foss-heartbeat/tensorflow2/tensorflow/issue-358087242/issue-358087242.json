{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22143", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22143/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22143/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22143/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/22143", "id": 358087242, "node_id": "MDU6SXNzdWUzNTgwODcyNDI=", "number": 22143, "title": "ValueError: Op type not registered 'NcclAllReduce' in binary running on 35712d892b7a.", "user": {"login": "skang29", "id": 18202810, "node_id": "MDQ6VXNlcjE4MjAyODEw", "avatar_url": "https://avatars0.githubusercontent.com/u/18202810?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skang29", "html_url": "https://github.com/skang29", "followers_url": "https://api.github.com/users/skang29/followers", "following_url": "https://api.github.com/users/skang29/following{/other_user}", "gists_url": "https://api.github.com/users/skang29/gists{/gist_id}", "starred_url": "https://api.github.com/users/skang29/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skang29/subscriptions", "organizations_url": "https://api.github.com/users/skang29/orgs", "repos_url": "https://api.github.com/users/skang29/repos", "events_url": "https://api.github.com/users/skang29/events{/privacy}", "received_events_url": "https://api.github.com/users/skang29/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "dubey", "id": 2314265, "node_id": "MDQ6VXNlcjIzMTQyNjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2314265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dubey", "html_url": "https://github.com/dubey", "followers_url": "https://api.github.com/users/dubey/followers", "following_url": "https://api.github.com/users/dubey/following{/other_user}", "gists_url": "https://api.github.com/users/dubey/gists{/gist_id}", "starred_url": "https://api.github.com/users/dubey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dubey/subscriptions", "organizations_url": "https://api.github.com/users/dubey/orgs", "repos_url": "https://api.github.com/users/dubey/repos", "events_url": "https://api.github.com/users/dubey/events{/privacy}", "received_events_url": "https://api.github.com/users/dubey/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "dubey", "id": 2314265, "node_id": "MDQ6VXNlcjIzMTQyNjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2314265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dubey", "html_url": "https://github.com/dubey", "followers_url": "https://api.github.com/users/dubey/followers", "following_url": "https://api.github.com/users/dubey/following{/other_user}", "gists_url": "https://api.github.com/users/dubey/gists{/gist_id}", "starred_url": "https://api.github.com/users/dubey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dubey/subscriptions", "organizations_url": "https://api.github.com/users/dubey/orgs", "repos_url": "https://api.github.com/users/dubey/repos", "events_url": "https://api.github.com/users/dubey/events{/privacy}", "received_events_url": "https://api.github.com/users/dubey/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2018-09-07T14:22:04Z", "updated_at": "2018-10-08T17:39:50Z", "closed_at": "2018-10-08T17:39:38Z", "author_association": "NONE", "body_html": "<p>Please go to Stack Overflow for help and support:</p>\n<p><a href=\"https://stackoverflow.com/questions/tagged/tensorflow\" rel=\"nofollow\">https://stackoverflow.com/questions/tagged/tensorflow</a></p>\n<p>If you open a GitHub issue, here is our policy:</p>\n<ol>\n<li>It must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).</li>\n<li>The form below must be filled out.</li>\n<li>It shouldn't be a TensorBoard issue. Those go <a href=\"https://github.com/tensorflow/tensorboard/issues\">here</a>.</li>\n</ol>\n<p><strong>Here's why we have that policy</strong>: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.</p>\n<hr>\n<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes.</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Ubuntu 18.04</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>: No</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: Binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: v1.10.0-0-g656e7a2b34 1.10.0</li>\n<li><strong>Python version</strong>: 3.5</li>\n<li><strong>Bazel version (if compiling from source)</strong>:</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:</li>\n<li><strong>CUDA/cuDNN version</strong>: based on nvidia-docker tensorflow/tensorflow:1.10.0-gpu-py3 image.</li>\n<li><strong>GPU model and memory</strong>: Titan Xp 11GB 2 pcs.</li>\n<li><strong>Exact command to reproduce</strong>: gen_nccl_ops.nccl_all_reduce( ... )</li>\n</ul>\n<p>You can collect some of this information using our environment capture script:</p>\n<p><a href=\"https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\">https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh</a></p>\n<p>You can obtain the TensorFlow version with</p>\n<p>python -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"</p>\n<h3>Describe the problem</h3>\n<p>Describe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.</p>\n<p>Hi, I'm trying to implement multi-gpu tensorflow code.<br>\nI am trying to use <strong>gen_nccl_ops.nccl_all_reduce</strong> to sum values from each GPU, however, the code raises ValueError written below.<br>\n<code>ValueError: Op type not registered 'NcclAllReduce' in binary running on 35712d892b7a. Make sure the Op and Kernel are registered in the binary running in this process. Note that if you are loading a saved graph which used ops from tf.contrib, accessing (e.g.) </code>tf.contrib.resampler<code>should be done before importing the graph, as contrib ops are lazily registered when the module is first accessed. while building NodeDef 'Tower_0/Network/NcclAllReduce'</code><br>\nAs suggested by the error message, I tried to access <strong>tf.contrib.nccl</strong> at the beginning of the whole code files.</p>\n<pre><code>import tensorflow as tf\ntf.contrib.nccl\n\n# ... Code continues ... #\n</code></pre>\n<p>But it doesn't work!<br>\nI checked NCCL is installed using<br>\n<code>export NCCL_DEBUG=VERSION</code><br>\n, and got <strong>NCCL version 2.2.13+cuda9.2</strong>.</p>\n<p>I'm using nvidia-docker image tensorflow/tensorflow:1.10.0-gpu-py3.<br>\nI confirmed <strong>nccl.all_sum()</strong> is working.</p>\n<p>Is there anyway to import NCCL library before graph establishment?</p>\n<p>Thanks.</p>\n<h3>Source code / logs</h3>\n<p>Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.</p>\n<pre><code># Gradient Penalty on real distribution\nself.gradient = tf.gradients(tf.reduce_sum(self.D[real][logits]), [self.x])[0]\nself.slope_square = tf.reduce_sum(tf.square(self.gradient), reduction_indices=[1, 2, 3])\n\nif self.tower_config is None:\n    penalty = tf.reduce_mean(self.slope_square)\n    self.gradient_penalty = self.C_gradient * penalty\nelse:\n    # Utilize NCCL\n    shared_name = tf.get_variable_scope().name.\\\n        replace(self.tower_config.name, self.tower_config.prefix.format(\"NCCL\"))\n    penalty = gen_nccl_ops.nccl_all_reduce(\n        input=self.slope_square,\n        reduction=\"sum\",\n        num_devices=self.tower_config.num_devices,\n        shared_name=shared_name\n    ) / (1.0 / self.tower_config.num_devices)\n    self.gradient_penalty = self.C_gradient * penalty\n</code></pre>", "body_text": "Please go to Stack Overflow for help and support:\nhttps://stackoverflow.com/questions/tagged/tensorflow\nIf you open a GitHub issue, here is our policy:\n\nIt must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).\nThe form below must be filled out.\nIt shouldn't be a TensorBoard issue. Those go here.\n\nHere's why we have that policy: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\n\nSystem information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes.\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 18.04\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: No\nTensorFlow installed from (source or binary): Binary\nTensorFlow version (use command below): v1.10.0-0-g656e7a2b34 1.10.0\nPython version: 3.5\nBazel version (if compiling from source):\nGCC/Compiler version (if compiling from source):\nCUDA/cuDNN version: based on nvidia-docker tensorflow/tensorflow:1.10.0-gpu-py3 image.\nGPU model and memory: Titan Xp 11GB 2 pcs.\nExact command to reproduce: gen_nccl_ops.nccl_all_reduce( ... )\n\nYou can collect some of this information using our environment capture script:\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\nYou can obtain the TensorFlow version with\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\nDescribe the problem\nDescribe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.\nHi, I'm trying to implement multi-gpu tensorflow code.\nI am trying to use gen_nccl_ops.nccl_all_reduce to sum values from each GPU, however, the code raises ValueError written below.\nValueError: Op type not registered 'NcclAllReduce' in binary running on 35712d892b7a. Make sure the Op and Kernel are registered in the binary running in this process. Note that if you are loading a saved graph which used ops from tf.contrib, accessing (e.g.) tf.contrib.resamplershould be done before importing the graph, as contrib ops are lazily registered when the module is first accessed. while building NodeDef 'Tower_0/Network/NcclAllReduce'\nAs suggested by the error message, I tried to access tf.contrib.nccl at the beginning of the whole code files.\nimport tensorflow as tf\ntf.contrib.nccl\n\n# ... Code continues ... #\n\nBut it doesn't work!\nI checked NCCL is installed using\nexport NCCL_DEBUG=VERSION\n, and got NCCL version 2.2.13+cuda9.2.\nI'm using nvidia-docker image tensorflow/tensorflow:1.10.0-gpu-py3.\nI confirmed nccl.all_sum() is working.\nIs there anyway to import NCCL library before graph establishment?\nThanks.\nSource code / logs\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.\n# Gradient Penalty on real distribution\nself.gradient = tf.gradients(tf.reduce_sum(self.D[real][logits]), [self.x])[0]\nself.slope_square = tf.reduce_sum(tf.square(self.gradient), reduction_indices=[1, 2, 3])\n\nif self.tower_config is None:\n    penalty = tf.reduce_mean(self.slope_square)\n    self.gradient_penalty = self.C_gradient * penalty\nelse:\n    # Utilize NCCL\n    shared_name = tf.get_variable_scope().name.\\\n        replace(self.tower_config.name, self.tower_config.prefix.format(\"NCCL\"))\n    penalty = gen_nccl_ops.nccl_all_reduce(\n        input=self.slope_square,\n        reduction=\"sum\",\n        num_devices=self.tower_config.num_devices,\n        shared_name=shared_name\n    ) / (1.0 / self.tower_config.num_devices)\n    self.gradient_penalty = self.C_gradient * penalty", "body": "Please go to Stack Overflow for help and support:\r\n\r\nhttps://stackoverflow.com/questions/tagged/tensorflow\r\n\r\nIf you open a GitHub issue, here is our policy:\r\n\r\n1. It must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).\r\n2. The form below must be filled out.\r\n3. It shouldn't be a TensorBoard issue. Those go [here](https://github.com/tensorflow/tensorboard/issues).\r\n\r\n**Here's why we have that policy**: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes.\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 18.04\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**: No\r\n- **TensorFlow installed from (source or binary)**: Binary\r\n- **TensorFlow version (use command below)**: v1.10.0-0-g656e7a2b34 1.10.0\r\n- **Python version**: 3.5\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**: based on nvidia-docker tensorflow/tensorflow:1.10.0-gpu-py3 image.\r\n- **GPU model and memory**: Titan Xp 11GB 2 pcs.\r\n- **Exact command to reproduce**: gen_nccl_ops.nccl_all_reduce( ... )\r\n\r\nYou can collect some of this information using our environment capture script:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\nYou can obtain the TensorFlow version with\r\n\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n\r\n### Describe the problem\r\nDescribe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.\r\n\r\nHi, I'm trying to implement multi-gpu tensorflow code.\r\nI am trying to use **gen_nccl_ops.nccl_all_reduce** to sum values from each GPU, however, the code raises ValueError written below.\r\n`ValueError: Op type not registered 'NcclAllReduce' in binary running on 35712d892b7a. Make sure the Op and Kernel are registered in the binary running in this process. Note that if you are loading a saved graph which used ops from tf.contrib, accessing (e.g.) `tf.contrib.resampler` should be done before importing the graph, as contrib ops are lazily registered when the module is first accessed. while building NodeDef 'Tower_0/Network/NcclAllReduce'\r\n`\r\nAs suggested by the error message, I tried to access **tf.contrib.nccl** at the beginning of the whole code files.\r\n```\r\nimport tensorflow as tf\r\ntf.contrib.nccl\r\n\r\n# ... Code continues ... #\r\n```\r\nBut it doesn't work! \r\nI checked NCCL is installed using \r\n`export NCCL_DEBUG=VERSION`\r\n, and got **NCCL version 2.2.13+cuda9.2**.\r\n\r\nI'm using nvidia-docker image tensorflow/tensorflow:1.10.0-gpu-py3.\r\nI confirmed **nccl.all_sum()** is working.\r\n\r\nIs there anyway to import NCCL library before graph establishment?\r\n\r\nThanks.\r\n\r\n### Source code / logs\r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.\r\n\r\n```\r\n# Gradient Penalty on real distribution\r\nself.gradient = tf.gradients(tf.reduce_sum(self.D[real][logits]), [self.x])[0]\r\nself.slope_square = tf.reduce_sum(tf.square(self.gradient), reduction_indices=[1, 2, 3])\r\n\r\nif self.tower_config is None:\r\n    penalty = tf.reduce_mean(self.slope_square)\r\n    self.gradient_penalty = self.C_gradient * penalty\r\nelse:\r\n    # Utilize NCCL\r\n    shared_name = tf.get_variable_scope().name.\\\r\n        replace(self.tower_config.name, self.tower_config.prefix.format(\"NCCL\"))\r\n    penalty = gen_nccl_ops.nccl_all_reduce(\r\n        input=self.slope_square,\r\n        reduction=\"sum\",\r\n        num_devices=self.tower_config.num_devices,\r\n        shared_name=shared_name\r\n    ) / (1.0 / self.tower_config.num_devices)\r\n    self.gradient_penalty = self.C_gradient * penalty\r\n```\r\n"}