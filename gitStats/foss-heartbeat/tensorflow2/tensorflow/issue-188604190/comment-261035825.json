{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/261035825", "html_url": "https://github.com/tensorflow/tensorflow/issues/5527#issuecomment-261035825", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5527", "id": 261035825, "node_id": "MDEyOklzc3VlQ29tbWVudDI2MTAzNTgyNQ==", "user": {"login": "concretevitamin", "id": 592670, "node_id": "MDQ6VXNlcjU5MjY3MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/592670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/concretevitamin", "html_url": "https://github.com/concretevitamin", "followers_url": "https://api.github.com/users/concretevitamin/followers", "following_url": "https://api.github.com/users/concretevitamin/following{/other_user}", "gists_url": "https://api.github.com/users/concretevitamin/gists{/gist_id}", "starred_url": "https://api.github.com/users/concretevitamin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/concretevitamin/subscriptions", "organizations_url": "https://api.github.com/users/concretevitamin/orgs", "repos_url": "https://api.github.com/users/concretevitamin/repos", "events_url": "https://api.github.com/users/concretevitamin/events{/privacy}", "received_events_url": "https://api.github.com/users/concretevitamin/received_events", "type": "User", "site_admin": false}, "created_at": "2016-11-16T18:50:15Z", "updated_at": "2016-11-16T18:50:15Z", "author_association": "CONTRIBUTOR", "body_html": "<p>One weird thing is that this seems reproducible only non-deterministically.  Sometimes I see negligible error, sometimes I see 1%.</p>\n<p>It seems this is working as intended.  When ~1e8 numbers are being accumulated, at some point the accumulator value becomes &gt;&gt; next value being accumulated (in [0,1]).  On GPU the Eigen impl has<br>\nmore accumulators so this is mitigated a bit.  \"Fixing\" this probably requires significant algo revamp in <a href=\"https://bitbucket.org/eigen/eigen/src/caedc0b002df3c53c265b603c0f537511a88b15f/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h?at=default&amp;fileviewer=file-view-default\" rel=\"nofollow\">https://bitbucket.org/eigen/eigen/src/caedc0b002df3c53c265b603c0f537511a88b15f/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h?at=default&amp;fileviewer=file-view-default</a>.</p>", "body_text": "One weird thing is that this seems reproducible only non-deterministically.  Sometimes I see negligible error, sometimes I see 1%.\nIt seems this is working as intended.  When ~1e8 numbers are being accumulated, at some point the accumulator value becomes >> next value being accumulated (in [0,1]).  On GPU the Eigen impl has\nmore accumulators so this is mitigated a bit.  \"Fixing\" this probably requires significant algo revamp in https://bitbucket.org/eigen/eigen/src/caedc0b002df3c53c265b603c0f537511a88b15f/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h?at=default&fileviewer=file-view-default.", "body": "One weird thing is that this seems reproducible only non-deterministically.  Sometimes I see negligible error, sometimes I see 1%.\n\nIt seems this is working as intended.  When ~1e8 numbers are being accumulated, at some point the accumulator value becomes >> next value being accumulated (in [0,1]).  On GPU the Eigen impl has\nmore accumulators so this is mitigated a bit.  \"Fixing\" this probably requires significant algo revamp in https://bitbucket.org/eigen/eigen/src/caedc0b002df3c53c265b603c0f537511a88b15f/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h?at=default&fileviewer=file-view-default.\n"}