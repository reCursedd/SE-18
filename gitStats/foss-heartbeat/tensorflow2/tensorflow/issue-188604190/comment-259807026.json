{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/259807026", "html_url": "https://github.com/tensorflow/tensorflow/issues/5527#issuecomment-259807026", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5527", "id": 259807026, "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTgwNzAyNg==", "user": {"login": "ppwwyyxx", "id": 1381301, "node_id": "MDQ6VXNlcjEzODEzMDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1381301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ppwwyyxx", "html_url": "https://github.com/ppwwyyxx", "followers_url": "https://api.github.com/users/ppwwyyxx/followers", "following_url": "https://api.github.com/users/ppwwyyxx/following{/other_user}", "gists_url": "https://api.github.com/users/ppwwyyxx/gists{/gist_id}", "starred_url": "https://api.github.com/users/ppwwyyxx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ppwwyyxx/subscriptions", "organizations_url": "https://api.github.com/users/ppwwyyxx/orgs", "repos_url": "https://api.github.com/users/ppwwyyxx/repos", "events_url": "https://api.github.com/users/ppwwyyxx/events{/privacy}", "received_events_url": "https://api.github.com/users/ppwwyyxx/received_events", "type": "User", "site_admin": false}, "created_at": "2016-11-10T21:04:29Z", "updated_at": "2016-11-10T21:04:29Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Met similar problem recently. the following code:</p>\n<div class=\"highlight highlight-source-python\"><pre>data <span class=\"pl-k\">=</span> np.random.rand(<span class=\"pl-c1\">1e4</span>, <span class=\"pl-c1\">1e4</span>) <span class=\"pl-k\">+</span> np.random.rand(<span class=\"pl-c1\">1e4</span>, <span class=\"pl-c1\">1</span>)\ndata <span class=\"pl-k\">=</span> data.astype(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>float32<span class=\"pl-pds\">'</span></span>)\nvec <span class=\"pl-k\">=</span> tf.placeholder(tf.float32, data.shape)\ns <span class=\"pl-k\">=</span> tf.reduce_sum(vec)\n<span class=\"pl-k\">with</span> tf.Session(<span class=\"pl-v\">config</span><span class=\"pl-k\">=</span>tf.ConfigProto(<span class=\"pl-v\">intra_op_parallelism_threads</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>)) <span class=\"pl-k\">as</span> sess:\n    np_sum <span class=\"pl-k\">=</span> np.sum(data)\n    tf_sum <span class=\"pl-k\">=</span> sess.run(s, <span class=\"pl-v\">feed_dict</span><span class=\"pl-k\">=</span>{vec: data})\n    diff <span class=\"pl-k\">=</span> <span class=\"pl-c1\">abs</span>(tf_sum <span class=\"pl-k\">-</span> np_sum)\n    <span class=\"pl-c1\">print</span> np_sum, diff</pre></div>\n<p>gives an error of sometimes 2e5, which is about 2e-3 error per element. This seems a bit large.<br>\nThe difference is not very large on GPU though. I wonder how the reduction is implemented and what's its difference from numpy.</p>", "body_text": "Met similar problem recently. the following code:\ndata = np.random.rand(1e4, 1e4) + np.random.rand(1e4, 1)\ndata = data.astype('float32')\nvec = tf.placeholder(tf.float32, data.shape)\ns = tf.reduce_sum(vec)\nwith tf.Session(config=tf.ConfigProto(intra_op_parallelism_threads=1)) as sess:\n    np_sum = np.sum(data)\n    tf_sum = sess.run(s, feed_dict={vec: data})\n    diff = abs(tf_sum - np_sum)\n    print np_sum, diff\ngives an error of sometimes 2e5, which is about 2e-3 error per element. This seems a bit large.\nThe difference is not very large on GPU though. I wonder how the reduction is implemented and what's its difference from numpy.", "body": "Met similar problem recently. the following code:\n\n``` python\ndata = np.random.rand(1e4, 1e4) + np.random.rand(1e4, 1)\ndata = data.astype('float32')\nvec = tf.placeholder(tf.float32, data.shape)\ns = tf.reduce_sum(vec)\nwith tf.Session(config=tf.ConfigProto(intra_op_parallelism_threads=1)) as sess:\n    np_sum = np.sum(data)\n    tf_sum = sess.run(s, feed_dict={vec: data})\n    diff = abs(tf_sum - np_sum)\n    print np_sum, diff\n```\n\ngives an error of sometimes 2e5, which is about 2e-3 error per element. This seems a bit large. \nThe difference is not very large on GPU though. I wonder how the reduction is implemented and what's its difference from numpy.\n"}