{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22037", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22037/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22037/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22037/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/22037", "id": 356610740, "node_id": "MDU6SXNzdWUzNTY2MTA3NDA=", "number": 22037, "title": "compile issue for bazel build tensorflow/python/tools:optimize_for_inference", "user": {"login": "starkdg", "id": 17888885, "node_id": "MDQ6VXNlcjE3ODg4ODg1", "avatar_url": "https://avatars3.githubusercontent.com/u/17888885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/starkdg", "html_url": "https://github.com/starkdg", "followers_url": "https://api.github.com/users/starkdg/followers", "following_url": "https://api.github.com/users/starkdg/following{/other_user}", "gists_url": "https://api.github.com/users/starkdg/gists{/gist_id}", "starred_url": "https://api.github.com/users/starkdg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/starkdg/subscriptions", "organizations_url": "https://api.github.com/users/starkdg/orgs", "repos_url": "https://api.github.com/users/starkdg/repos", "events_url": "https://api.github.com/users/starkdg/events{/privacy}", "received_events_url": "https://api.github.com/users/starkdg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}], "state": "open", "locked": false, "assignee": {"login": "reedwm", "id": 6510203, "node_id": "MDQ6VXNlcjY1MTAyMDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/6510203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reedwm", "html_url": "https://github.com/reedwm", "followers_url": "https://api.github.com/users/reedwm/followers", "following_url": "https://api.github.com/users/reedwm/following{/other_user}", "gists_url": "https://api.github.com/users/reedwm/gists{/gist_id}", "starred_url": "https://api.github.com/users/reedwm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reedwm/subscriptions", "organizations_url": "https://api.github.com/users/reedwm/orgs", "repos_url": "https://api.github.com/users/reedwm/repos", "events_url": "https://api.github.com/users/reedwm/events{/privacy}", "received_events_url": "https://api.github.com/users/reedwm/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "reedwm", "id": 6510203, "node_id": "MDQ6VXNlcjY1MTAyMDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/6510203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reedwm", "html_url": "https://github.com/reedwm", "followers_url": "https://api.github.com/users/reedwm/followers", "following_url": "https://api.github.com/users/reedwm/following{/other_user}", "gists_url": "https://api.github.com/users/reedwm/gists{/gist_id}", "starred_url": "https://api.github.com/users/reedwm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reedwm/subscriptions", "organizations_url": "https://api.github.com/users/reedwm/orgs", "repos_url": "https://api.github.com/users/reedwm/repos", "events_url": "https://api.github.com/users/reedwm/events{/privacy}", "received_events_url": "https://api.github.com/users/reedwm/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2018-09-03T23:02:38Z", "updated_at": "2018-11-11T18:41:22Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>optimize_for_inference.py</p>\n<h3>System information:</h3>\n<h2>OS platform and distribution</h2>\n<p>Linux debian 4.9.0-6-amd64 <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"115886302\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/1\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/1/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/1\">#1</a> SMP Debian 4.9.82-1+deb9u3 (2018-03-02) x86_64 GNU/Linux</p>\n<h2>Tensorflow version</h2>\n<p>Tensorflow version r1.9 (compiled from source for CPU)</p>\n<h2>CUDA/cuDNN</h2>\n<p>n/a</p>\n<h2>gpu model and memory</h2>\n<p>n/a</p>\n<h2>Python version</h2>\n<p>Python version 3.5</p>\n<h2>Bazel version</h2>\n<p>Bazel version 0.16.0</p>\n<h2>Gcc version</h2>\n<p>gcc version 6.3.0</p>\n<h2>No custom code used, just standard script:</h2>\n<p>optimize_for_inference.py</p>\n<h3>Command to reproduce:</h3>\n<p>bazel build tensorflow/python/tools:optimize_for_inference</p>\n<h3>Mobile device</h3>\n<p>n/a</p>\n<h3>Problem:</h3>\n<p>The result is a failure to build.</p>\n<h3>Source code / logs</h3>\n<p>The output is rather lengthy, but here is the relevant \"ERROR\" part:</p>\n<p>ERROR: /home/david/tensorflow/tensorflow/contrib/coder/BUILD:144:1: C++ compilation of rule '//tensorflow/contrib/coder:python/ops/_coder_ops.so' failed (Exit 1)<br>\nIn file included from /usr/include/c++/6/map:60:0,<br>\nfrom external/protobuf_archive/src/google/protobuf/stubs/common.h:40,<br>\nfrom external/protobuf_archive/src/google/protobuf/stubs/atomicops.h:59,<br>\nfrom external/protobuf_archive/src/google/protobuf/stubs/atomic_sequence_num.h:33,<br>\nfrom external/protobuf_archive/src/google/protobuf/arena_impl.h:38,<br>\nfrom external/protobuf_archive/src/google/protobuf/arena.h:54,<br>\nfrom ./tensorflow/core/platform/default/protobuf.h:22,<br>\nfrom ./tensorflow/core/platform/protobuf.h:31,<br>\nfrom ./tensorflow/core/platform/default/string_coding.h:23,<br>\nfrom ./tensorflow/core/platform/tensor_coding.h:29,<br>\nfrom ./tensorflow/core/framework/resource_handle.h:19,<br>\nfrom ./tensorflow/core/framework/allocator.h:24,<br>\nfrom ./tensorflow/core/framework/op_kernel.h:23,<br>\nfrom tensorflow/contrib/coder/kernels/pmf_to_cdf_op.cc:24:<br>\n/usr/include/c++/6/bits/stl_tree.h: In instantiation of 'std::pair&lt;std::_Rb_tree_iterator&lt;_Val&gt;, std::_Rb_tree_iterator&lt;_Val&gt; &gt; std::_Rb_tree&lt;_Key, _Val, _KeyOfValue, _Compare, _Alloc&gt;::equal_range(const _Key&amp;) [with _Key = std::__cxx11::basic_string<em>; _Val = std::__cxx11::basic_string</em>; _KeyOfValue = std::_Identity&lt;std::__cxx11::basic_string<em>&gt;; _Compare = google::protobuf::Map&lt;std::__cxx11::basic_string, tensorflow::AttrValue&gt;::InnerMap::KeyCompare; _Alloc = google::protobuf::Map&lt;std::__cxx11::basic_string, tensorflow::AttrValue&gt;::MapAllocator&lt;std::__cxx11::basic_string</em>&gt;]':<br>\n/usr/include/c++/6/bits/stl_tree.h:2298:49:   required from 'std::_Rb_tree&lt;_Key, _Val, _KeyOfValue, _Compare, _Alloc&gt;::size_type std::_Rb_tree&lt;_Key, _Val, _KeyOfValue, _Compare, _Alloc&gt;::erase(const _Key&amp;) [with _Key = std::__cxx11::basic_string<em>; _Val = std::__cxx11::basic_string</em>; _KeyOfValue = std::_Identity&lt;std::__cxx11::basic_string<em>&gt;; _Compare = google::protobuf::Map&lt;std::__cxx11::basic_string, tensorflow::AttrValue&gt;::InnerMap::KeyCompare; _Alloc = google::protobuf::Map&lt;std::__cxx11::basic_string, tensorflow::AttrValue&gt;::MapAllocator&lt;std::__cxx11::basic_string</em>&gt;; std::_Rb_tree&lt;_Key, _Val, _KeyOfValue, _Compare, _Alloc&gt;::size_type = long unsigned int]'<br>\n/usr/include/c++/6/bits/stl_set.h:602:30:   required from 'std::set&lt;_Key, _Compare, _Alloc&gt;::size_type std::set&lt;_Key, _Compare, _Alloc&gt;::erase(const key_type&amp;) [with _Key = std::__cxx11::basic_string<em>; _Compare = google::protobuf::Map&lt;std::__cxx11::basic_string, tensorflow::AttrValue&gt;::InnerMap::KeyCompare; _Alloc = google::protobuf::Map&lt;std::__cxx11::basic_string, tensorflow::AttrValue&gt;::MapAllocator&lt;std::__cxx11::basic_string</em>&gt;; std::set&lt;_Key, _Compare, _Alloc&gt;::size_type = long unsigned int; std::set&lt;_Key, _Compare, _Alloc&gt;::key_type = std::__cxx11::basic_string*]'<br>\nexternal/protobuf_archive/src/google/protobuf/map.h:619:9:   required from 'void google::protobuf::Map&lt;Key, T&gt;::InnerMap::erase(google::protobuf::Map&lt;Key, T&gt;::InnerMap::iterator) [with Key = std::__cxx11::basic_string; T = tensorflow::AttrValue; google::protobuf::Map&lt;Key, T&gt;::InnerMap::iterator = google::protobuf::Map&lt;std::__cxx11::basic_string, tensorflow::AttrValue&gt;::InnerMap::iterator_base&lt;google::protobuf::Map&lt;std::__cxx11::basic_string, tensorflow::AttrValue&gt;::KeyValuePair&gt;]'<br>\nexternal/protobuf_archive/src/google/protobuf/map.h:1139:5:   required from 'google::protobuf::Map&lt;Key, T&gt;::iterator google::protobuf::Map&lt;Key, T&gt;::erase(google::protobuf::Map&lt;Key, T&gt;::iterator) [with Key = std::__cxx11::basic_string; T = tensorflow::AttrValue]'<br>\nexternal/protobuf_archive/src/google/protobuf/map.h:1144:20:   required from 'void google::protobuf::Map&lt;Key, T&gt;::erase(google::protobuf::Map&lt;Key, T&gt;::iterator, google::protobuf::Map&lt;Key, T&gt;::iterator) [with Key = std::__cxx11::basic_string; T = tensorflow::AttrValue]'<br>\nexternal/protobuf_archive/src/google/protobuf/map.h:1147:23:   required from 'void google::protobuf::Map&lt;Key, T&gt;::clear() [with Key = std::__cxx11::basic_string; T = tensorflow::AttrValue]'<br>\nexternal/protobuf_archive/src/google/protobuf/map_field_inl.h:180:3:   required from 'void google::protobuf::internal::MapField&lt;Derived, Key, T, key_wire_type, value_wire_type, default_enum_value&gt;::Clear() [with Derived = tensorflow::NameAttrList_AttrEntry_DoNotUse; Key = std::__cxx11::basic_string; T = tensorflow::AttrValue; google::protobuf::internal::WireFormatLite::FieldType kKeyFieldType = (google::protobuf::internal::WireFormatLite::FieldType)9u; google::protobuf::internal::WireFormatLite::FieldType kValueFieldType = (google::protobuf::internal::WireFormatLite::FieldType)11u; int default_enum_value = 0]'<br>\nbazel-out/k8-opt/genfiles/tensorflow/core/framework/attr_value.pb.h:1764:15:   required from here<br>\n/usr/include/c++/6/bits/stl_tree.h:1739:5: internal compiler error: Segmentation fault<br>\n}<br>\n^</p>", "body_text": "optimize_for_inference.py\nSystem information:\nOS platform and distribution\nLinux debian 4.9.0-6-amd64 #1 SMP Debian 4.9.82-1+deb9u3 (2018-03-02) x86_64 GNU/Linux\nTensorflow version\nTensorflow version r1.9 (compiled from source for CPU)\nCUDA/cuDNN\nn/a\ngpu model and memory\nn/a\nPython version\nPython version 3.5\nBazel version\nBazel version 0.16.0\nGcc version\ngcc version 6.3.0\nNo custom code used, just standard script:\noptimize_for_inference.py\nCommand to reproduce:\nbazel build tensorflow/python/tools:optimize_for_inference\nMobile device\nn/a\nProblem:\nThe result is a failure to build.\nSource code / logs\nThe output is rather lengthy, but here is the relevant \"ERROR\" part:\nERROR: /home/david/tensorflow/tensorflow/contrib/coder/BUILD:144:1: C++ compilation of rule '//tensorflow/contrib/coder:python/ops/_coder_ops.so' failed (Exit 1)\nIn file included from /usr/include/c++/6/map:60:0,\nfrom external/protobuf_archive/src/google/protobuf/stubs/common.h:40,\nfrom external/protobuf_archive/src/google/protobuf/stubs/atomicops.h:59,\nfrom external/protobuf_archive/src/google/protobuf/stubs/atomic_sequence_num.h:33,\nfrom external/protobuf_archive/src/google/protobuf/arena_impl.h:38,\nfrom external/protobuf_archive/src/google/protobuf/arena.h:54,\nfrom ./tensorflow/core/platform/default/protobuf.h:22,\nfrom ./tensorflow/core/platform/protobuf.h:31,\nfrom ./tensorflow/core/platform/default/string_coding.h:23,\nfrom ./tensorflow/core/platform/tensor_coding.h:29,\nfrom ./tensorflow/core/framework/resource_handle.h:19,\nfrom ./tensorflow/core/framework/allocator.h:24,\nfrom ./tensorflow/core/framework/op_kernel.h:23,\nfrom tensorflow/contrib/coder/kernels/pmf_to_cdf_op.cc:24:\n/usr/include/c++/6/bits/stl_tree.h: In instantiation of 'std::pair<std::_Rb_tree_iterator<_Val>, std::_Rb_tree_iterator<_Val> > std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::equal_range(const _Key&) [with _Key = std::__cxx11::basic_string; _Val = std::__cxx11::basic_string; _KeyOfValue = std::_Identity<std::__cxx11::basic_string>; _Compare = google::protobuf::Map<std::__cxx11::basic_string, tensorflow::AttrValue>::InnerMap::KeyCompare; _Alloc = google::protobuf::Map<std::__cxx11::basic_string, tensorflow::AttrValue>::MapAllocator<std::__cxx11::basic_string>]':\n/usr/include/c++/6/bits/stl_tree.h:2298:49:   required from 'std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::size_type std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::erase(const _Key&) [with _Key = std::__cxx11::basic_string; _Val = std::__cxx11::basic_string; _KeyOfValue = std::_Identity<std::__cxx11::basic_string>; _Compare = google::protobuf::Map<std::__cxx11::basic_string, tensorflow::AttrValue>::InnerMap::KeyCompare; _Alloc = google::protobuf::Map<std::__cxx11::basic_string, tensorflow::AttrValue>::MapAllocator<std::__cxx11::basic_string>; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::size_type = long unsigned int]'\n/usr/include/c++/6/bits/stl_set.h:602:30:   required from 'std::set<_Key, _Compare, _Alloc>::size_type std::set<_Key, _Compare, _Alloc>::erase(const key_type&) [with _Key = std::__cxx11::basic_string; _Compare = google::protobuf::Map<std::__cxx11::basic_string, tensorflow::AttrValue>::InnerMap::KeyCompare; _Alloc = google::protobuf::Map<std::__cxx11::basic_string, tensorflow::AttrValue>::MapAllocator<std::__cxx11::basic_string>; std::set<_Key, _Compare, _Alloc>::size_type = long unsigned int; std::set<_Key, _Compare, _Alloc>::key_type = std::__cxx11::basic_string*]'\nexternal/protobuf_archive/src/google/protobuf/map.h:619:9:   required from 'void google::protobuf::Map<Key, T>::InnerMap::erase(google::protobuf::Map<Key, T>::InnerMap::iterator) [with Key = std::__cxx11::basic_string; T = tensorflow::AttrValue; google::protobuf::Map<Key, T>::InnerMap::iterator = google::protobuf::Map<std::__cxx11::basic_string, tensorflow::AttrValue>::InnerMap::iterator_base<google::protobuf::Map<std::__cxx11::basic_string, tensorflow::AttrValue>::KeyValuePair>]'\nexternal/protobuf_archive/src/google/protobuf/map.h:1139:5:   required from 'google::protobuf::Map<Key, T>::iterator google::protobuf::Map<Key, T>::erase(google::protobuf::Map<Key, T>::iterator) [with Key = std::__cxx11::basic_string; T = tensorflow::AttrValue]'\nexternal/protobuf_archive/src/google/protobuf/map.h:1144:20:   required from 'void google::protobuf::Map<Key, T>::erase(google::protobuf::Map<Key, T>::iterator, google::protobuf::Map<Key, T>::iterator) [with Key = std::__cxx11::basic_string; T = tensorflow::AttrValue]'\nexternal/protobuf_archive/src/google/protobuf/map.h:1147:23:   required from 'void google::protobuf::Map<Key, T>::clear() [with Key = std::__cxx11::basic_string; T = tensorflow::AttrValue]'\nexternal/protobuf_archive/src/google/protobuf/map_field_inl.h:180:3:   required from 'void google::protobuf::internal::MapField<Derived, Key, T, key_wire_type, value_wire_type, default_enum_value>::Clear() [with Derived = tensorflow::NameAttrList_AttrEntry_DoNotUse; Key = std::__cxx11::basic_string; T = tensorflow::AttrValue; google::protobuf::internal::WireFormatLite::FieldType kKeyFieldType = (google::protobuf::internal::WireFormatLite::FieldType)9u; google::protobuf::internal::WireFormatLite::FieldType kValueFieldType = (google::protobuf::internal::WireFormatLite::FieldType)11u; int default_enum_value = 0]'\nbazel-out/k8-opt/genfiles/tensorflow/core/framework/attr_value.pb.h:1764:15:   required from here\n/usr/include/c++/6/bits/stl_tree.h:1739:5: internal compiler error: Segmentation fault\n}\n^", "body": "optimize_for_inference.py\r\n\r\n### System information:\r\n\r\n## OS platform and distribution\r\nLinux debian 4.9.0-6-amd64 #1 SMP Debian 4.9.82-1+deb9u3 (2018-03-02) x86_64 GNU/Linux\r\n\r\n## Tensorflow version\r\nTensorflow version r1.9 (compiled from source for CPU)\r\n\r\n## CUDA/cuDNN \r\nn/a\r\n\r\n## gpu model and memory\r\nn/a\r\n\r\n## Python version\r\nPython version 3.5\r\n\r\n## Bazel version\r\nBazel version 0.16.0 \r\n\r\n## Gcc version\r\ngcc version 6.3.0\r\n\r\n## No custom code used, just standard script:\r\noptimize_for_inference.py\r\n\r\n### Command to reproduce:\r\n\r\nbazel build tensorflow/python/tools:optimize_for_inference\r\n\r\n### Mobile device \r\n\r\nn/a\r\n\r\n### Problem:\r\n\r\nThe result is a failure to build.  \r\n\r\n### Source code / logs\r\nThe output is rather lengthy, but here is the relevant \"ERROR\" part:\r\n\r\nERROR: /home/david/tensorflow/tensorflow/contrib/coder/BUILD:144:1: C++ compilation of rule '//tensorflow/contrib/coder:python/ops/_coder_ops.so' failed (Exit 1)\r\nIn file included from /usr/include/c++/6/map:60:0,\r\n                 from external/protobuf_archive/src/google/protobuf/stubs/common.h:40,\r\n                 from external/protobuf_archive/src/google/protobuf/stubs/atomicops.h:59,\r\n                 from external/protobuf_archive/src/google/protobuf/stubs/atomic_sequence_num.h:33,\r\n                 from external/protobuf_archive/src/google/protobuf/arena_impl.h:38,\r\n                 from external/protobuf_archive/src/google/protobuf/arena.h:54,\r\n                 from ./tensorflow/core/platform/default/protobuf.h:22,\r\n                 from ./tensorflow/core/platform/protobuf.h:31,\r\n                 from ./tensorflow/core/platform/default/string_coding.h:23,\r\n                 from ./tensorflow/core/platform/tensor_coding.h:29,\r\n                 from ./tensorflow/core/framework/resource_handle.h:19,\r\n                 from ./tensorflow/core/framework/allocator.h:24,\r\n                 from ./tensorflow/core/framework/op_kernel.h:23,\r\n                 from tensorflow/contrib/coder/kernels/pmf_to_cdf_op.cc:24:\r\n/usr/include/c++/6/bits/stl_tree.h: In instantiation of 'std::pair<std::_Rb_tree_iterator<_Val>, std::_Rb_tree_iterator<_Val> > std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::equal_range(const _Key&) [with _Key = std::__cxx11::basic_string<char>*; _Val = std::__cxx11::basic_string<char>*; _KeyOfValue = std::_Identity<std::__cxx11::basic_string<char>*>; _Compare = google::protobuf::Map<std::__cxx11::basic_string<char>, tensorflow::AttrValue>::InnerMap::KeyCompare; _Alloc = google::protobuf::Map<std::__cxx11::basic_string<char>, tensorflow::AttrValue>::MapAllocator<std::__cxx11::basic_string<char>*>]':\r\n/usr/include/c++/6/bits/stl_tree.h:2298:49:   required from 'std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::size_type std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::erase(const _Key&) [with _Key = std::__cxx11::basic_string<char>*; _Val = std::__cxx11::basic_string<char>*; _KeyOfValue = std::_Identity<std::__cxx11::basic_string<char>*>; _Compare = google::protobuf::Map<std::__cxx11::basic_string<char>, tensorflow::AttrValue>::InnerMap::KeyCompare; _Alloc = google::protobuf::Map<std::__cxx11::basic_string<char>, tensorflow::AttrValue>::MapAllocator<std::__cxx11::basic_string<char>*>; std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::size_type = long unsigned int]'\r\n/usr/include/c++/6/bits/stl_set.h:602:30:   required from 'std::set<_Key, _Compare, _Alloc>::size_type std::set<_Key, _Compare, _Alloc>::erase(const key_type&) [with _Key = std::__cxx11::basic_string<char>*; _Compare = google::protobuf::Map<std::__cxx11::basic_string<char>, tensorflow::AttrValue>::InnerMap::KeyCompare; _Alloc = google::protobuf::Map<std::__cxx11::basic_string<char>, tensorflow::AttrValue>::MapAllocator<std::__cxx11::basic_string<char>*>; std::set<_Key, _Compare, _Alloc>::size_type = long unsigned int; std::set<_Key, _Compare, _Alloc>::key_type = std::__cxx11::basic_string<char>*]'\r\nexternal/protobuf_archive/src/google/protobuf/map.h:619:9:   required from 'void google::protobuf::Map<Key, T>::InnerMap::erase(google::protobuf::Map<Key, T>::InnerMap::iterator) [with Key = std::__cxx11::basic_string<char>; T = tensorflow::AttrValue; google::protobuf::Map<Key, T>::InnerMap::iterator = google::protobuf::Map<std::__cxx11::basic_string<char>, tensorflow::AttrValue>::InnerMap::iterator_base<google::protobuf::Map<std::__cxx11::basic_string<char>, tensorflow::AttrValue>::KeyValuePair>]'\r\nexternal/protobuf_archive/src/google/protobuf/map.h:1139:5:   required from 'google::protobuf::Map<Key, T>::iterator google::protobuf::Map<Key, T>::erase(google::protobuf::Map<Key, T>::iterator) [with Key = std::__cxx11::basic_string<char>; T = tensorflow::AttrValue]'\r\nexternal/protobuf_archive/src/google/protobuf/map.h:1144:20:   required from 'void google::protobuf::Map<Key, T>::erase(google::protobuf::Map<Key, T>::iterator, google::protobuf::Map<Key, T>::iterator) [with Key = std::__cxx11::basic_string<char>; T = tensorflow::AttrValue]'\r\nexternal/protobuf_archive/src/google/protobuf/map.h:1147:23:   required from 'void google::protobuf::Map<Key, T>::clear() [with Key = std::__cxx11::basic_string<char>; T = tensorflow::AttrValue]'\r\nexternal/protobuf_archive/src/google/protobuf/map_field_inl.h:180:3:   required from 'void google::protobuf::internal::MapField<Derived, Key, T, key_wire_type, value_wire_type, default_enum_value>::Clear() [with Derived = tensorflow::NameAttrList_AttrEntry_DoNotUse; Key = std::__cxx11::basic_string<char>; T = tensorflow::AttrValue; google::protobuf::internal::WireFormatLite::FieldType kKeyFieldType = (google::protobuf::internal::WireFormatLite::FieldType)9u; google::protobuf::internal::WireFormatLite::FieldType kValueFieldType = (google::protobuf::internal::WireFormatLite::FieldType)11u; int default_enum_value = 0]'\r\nbazel-out/k8-opt/genfiles/tensorflow/core/framework/attr_value.pb.h:1764:15:   required from here\r\n/usr/include/c++/6/bits/stl_tree.h:1739:5: internal compiler error: Segmentation fault\r\n     }\r\n     ^\r\n\r\n\r\n"}