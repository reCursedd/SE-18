{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/233996099", "pull_request_review_id": 175024525, "id": 233996099, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMzk5NjA5OQ==", "diff_hunk": "@@ -1278,6 +1292,85 @@ class CudnnRnnSequenceTensorDescriptor\n   SE_DISALLOW_COPY_AND_ASSIGN(CudnnRnnSequenceTensorDescriptor);\n };\n \n+class CudnnRnnVariableSequenceTensorDescriptor\n+    : public dnn::RnnVariableSequenceTensorDescriptor {\n+  CudnnRnnVariableSequenceTensorDescriptor(CUDAExecutor* parent, int seq_length,\n+                                           int batch_size, int data_size,\n+                                           int* seq_lens,\n+                                           cudnnDataType_t data_type,\n+                                           bool is_ready,\n+                                           RNNDataDescriptor handle)\n+      : parent_(parent),\n+        seq_length_(seq_length),\n+        batch_size_(batch_size),\n+        data_size_(data_size),\n+        seq_lens_(seq_lens),\n+        is_ready_(is_ready),\n+        data_type_(data_type),\n+        handle_(std::move(handle)) {}\n+\n+  CudnnRnnVariableSequenceTensorDescriptor(CUDAExecutor* parent)\n+      : parent_(parent), is_ready_(false) {}\n+\n+ public:\n+  CudnnRnnVariableSequenceTensorDescriptor(\n+      CudnnRnnVariableSequenceTensorDescriptor&&) = default;\n+\n+  static port::StatusOr<CudnnRnnVariableSequenceTensorDescriptor> Create(\n+      CUDAExecutor* parent, int seq_length, int batch_size, int data_size,\n+      int* seq_lens,  // This is the device memory\n+      cudnnDataType_t data_type) {\n+    CHECK_GT(seq_length, 0);\n+    RNNDataDescriptor tensor_desc = CreateRNNDataDescriptor();\n+    float paddingFill = 0.0f;\n+    std::vector<int> seq_lens_h(batch_size);\n+    cudaStream_t stream;\n+    cudaStreamCreate(&stream);\n+    auto status =\n+        cudaMemcpyAsync(seq_lens_h.data(), seq_lens, sizeof(int) * batch_size,\n+                        cudaMemcpyDeviceToHost, stream);\n+    if (status != cudaSuccess) {\n+      LOG(FATAL) << \"Copy sequence lengths error \\n\";\n+    }\n+    // int seqx[] = {1,2,1,3,4};\n+    // int vector_size = data_size*(isOutput?(isBidirectional?2:1):1);\n+    RETURN_IF_CUDNN_ERROR(cudnnSetRNNDataDescriptor(\n+        /*RNNDataDesc=*/tensor_desc.get(), /*dataType*/ data_type,\n+        /*layout=*/CUDNN_RNN_DATA_LAYOUT_SEQ_MAJOR_UNPACKED,\n+        /*maxSeqLength=*/seq_length,\n+        /*batchSize=*/batch_size, /*vectorSize=*/data_size,\n+        /*seqLengthArray=*/seq_lens_h.data(),\n+        /*paddingFill*/ (void*)&paddingFill));\n+    cudaStreamDestroy(stream);\n+    return CudnnRnnVariableSequenceTensorDescriptor(\n+        parent, seq_length, batch_size, data_size, seq_lens_h.data(), data_type,\n+        true, std::move(tensor_desc));\n+  }\n+\n+  static port::StatusOr<CudnnRnnVariableSequenceTensorDescriptor> Create(\n+      CUDAExecutor* parent) {\n+    return CudnnRnnVariableSequenceTensorDescriptor(parent);\n+  }\n+\n+  const cudnnRNNDataDescriptor_t handle() const { return handle_.get(); }\n+\n+  int seq_length() const { return seq_length_; }\n+  int batch_size() const { return batch_size_; }\n+  int data_size() const { return data_size_; }\n+  bool is_ready() const { return is_ready_; }\n+\n+ private:\n+  CUDAExecutor* parent_;\n+  int seq_length_;\n+  int batch_size_;\n+  int data_size_;\n+  int* seq_lens_;\n+  bool is_ready_;", "path": "tensorflow/stream_executor/cuda/cuda_dnn.cc", "position": null, "original_position": 119, "commit_id": "2301b4fabf41b7799919e1e29a1a3651367495aa", "original_commit_id": "514b05b38845eab0936f73b42e6e225702460e45", "user": {"login": "protoget", "id": 5117188, "node_id": "MDQ6VXNlcjUxMTcxODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5117188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/protoget", "html_url": "https://github.com/protoget", "followers_url": "https://api.github.com/users/protoget/followers", "following_url": "https://api.github.com/users/protoget/following{/other_user}", "gists_url": "https://api.github.com/users/protoget/gists{/gist_id}", "starred_url": "https://api.github.com/users/protoget/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/protoget/subscriptions", "organizations_url": "https://api.github.com/users/protoget/orgs", "repos_url": "https://api.github.com/users/protoget/repos", "events_url": "https://api.github.com/users/protoget/events{/privacy}", "received_events_url": "https://api.github.com/users/protoget/received_events", "type": "User", "site_admin": false}, "body": "Remove this.\r\nTF should work with cudnn 7.3 now.", "created_at": "2018-11-15T20:27:10Z", "updated_at": "2018-11-21T22:30:12Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/23588#discussion_r233996099", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/23588", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/233996099"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/23588#discussion_r233996099"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/23588"}}, "body_html": "<p>Remove this.<br>\nTF should work with cudnn 7.3 now.</p>", "body_text": "Remove this.\nTF should work with cudnn 7.3 now."}