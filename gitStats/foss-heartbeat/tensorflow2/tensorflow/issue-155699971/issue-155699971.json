{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2426", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2426/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2426/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2426/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/2426", "id": 155699971, "node_id": "MDU6SXNzdWUxNTU2OTk5NzE=", "number": 2426, "title": "Supporting negative reduction indices.", "user": {"login": "tillahoffmann", "id": 966348, "node_id": "MDQ6VXNlcjk2NjM0OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/966348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tillahoffmann", "html_url": "https://github.com/tillahoffmann", "followers_url": "https://api.github.com/users/tillahoffmann/followers", "following_url": "https://api.github.com/users/tillahoffmann/following{/other_user}", "gists_url": "https://api.github.com/users/tillahoffmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/tillahoffmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tillahoffmann/subscriptions", "organizations_url": "https://api.github.com/users/tillahoffmann/orgs", "repos_url": "https://api.github.com/users/tillahoffmann/repos", "events_url": "https://api.github.com/users/tillahoffmann/events{/privacy}", "received_events_url": "https://api.github.com/users/tillahoffmann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "keveman", "id": 229914, "node_id": "MDQ6VXNlcjIyOTkxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/229914?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keveman", "html_url": "https://github.com/keveman", "followers_url": "https://api.github.com/users/keveman/followers", "following_url": "https://api.github.com/users/keveman/following{/other_user}", "gists_url": "https://api.github.com/users/keveman/gists{/gist_id}", "starred_url": "https://api.github.com/users/keveman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keveman/subscriptions", "organizations_url": "https://api.github.com/users/keveman/orgs", "repos_url": "https://api.github.com/users/keveman/repos", "events_url": "https://api.github.com/users/keveman/events{/privacy}", "received_events_url": "https://api.github.com/users/keveman/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "keveman", "id": 229914, "node_id": "MDQ6VXNlcjIyOTkxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/229914?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keveman", "html_url": "https://github.com/keveman", "followers_url": "https://api.github.com/users/keveman/followers", "following_url": "https://api.github.com/users/keveman/following{/other_user}", "gists_url": "https://api.github.com/users/keveman/gists{/gist_id}", "starred_url": "https://api.github.com/users/keveman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keveman/subscriptions", "organizations_url": "https://api.github.com/users/keveman/orgs", "repos_url": "https://api.github.com/users/keveman/repos", "events_url": "https://api.github.com/users/keveman/events{/privacy}", "received_events_url": "https://api.github.com/users/keveman/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2016-05-19T10:07:11Z", "updated_at": "2016-05-19T19:15:31Z", "closed_at": "2016-05-19T19:15:31Z", "author_association": "CONTRIBUTOR", "body_html": "<p>The reduce operations do not support negative indices as opposed to their numpy equivalents. In particular, the following code fails with the error message <code>ValueError: Invalid reduction dimension -1 for input with 2 dimensions</code>.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Create reference values in numpy</span>\nx <span class=\"pl-k\">=</span> np.random.normal(<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span>, (<span class=\"pl-c1\">40</span>, <span class=\"pl-c1\">50</span>))\ny <span class=\"pl-k\">=</span> np.sum(x, <span class=\"pl-v\">axis</span><span class=\"pl-k\">=</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>)\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Try to reproduce the same in tensorflow</span>\nsess <span class=\"pl-k\">=</span> tf.InteractiveSession()\ntf_x <span class=\"pl-k\">=</span> tf.constant(x)\ntf_y <span class=\"pl-k\">=</span> tf.reduce_sum(x, <span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>)\nnp.testing.assert_allclose(tf_y.eval(), y)\nsess.close()    </pre></div>\n<p>The code that checks the reduction indices and throws the exception appears to know about the dimensionality of the vector (taken from <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/math_ops.py#L1610\">_ReductionShape</a>).</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">for</span> reduction_index <span class=\"pl-k\">in</span> reduction_indices:\n    <span class=\"pl-k\">if</span> reduction_index <span class=\"pl-k\">&lt;</span> <span class=\"pl-c1\">0</span> <span class=\"pl-k\">or</span> reduction_index <span class=\"pl-k\">&gt;=</span> input_shape.ndims:\n        <span class=\"pl-k\">raise</span> <span class=\"pl-c1\">ValueError</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Invalid reduction dimension <span class=\"pl-c1\">%d</span> for input with <span class=\"pl-c1\">%d</span> dimensions<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%</span> (reduction_index, input_shape.ndims))</pre></div>\n<p>I have thus started using the following function to support negative indices.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">_reduction_indices</span>(<span class=\"pl-smi\">input_tensor</span>, <span class=\"pl-smi\">reduction_indices</span>):\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> Get the shape and convert indices to a list</span>\n    input_shape <span class=\"pl-k\">=</span> input_tensor.get_shape()\n    reduction_indices <span class=\"pl-k\">=</span> np.ravel(reduction_indices)\n\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> Convert the indices</span>\n    <span class=\"pl-k\">return</span> [(input_shape.ndims <span class=\"pl-k\">+</span> index) <span class=\"pl-k\">if</span> index <span class=\"pl-k\">&lt;</span> <span class=\"pl-c1\">0</span> <span class=\"pl-k\">else</span> index <span class=\"pl-k\">for</span> index <span class=\"pl-k\">in</span> reduction_indices]</pre></div>\n<p>Would this be worth integrating into the main repository or is the lack of support for tensors with completely unknown shape problematic?</p>", "body_text": "The reduce operations do not support negative indices as opposed to their numpy equivalents. In particular, the following code fails with the error message ValueError: Invalid reduction dimension -1 for input with 2 dimensions.\nimport tensorflow as tf\nimport numpy as np\n\n# Create reference values in numpy\nx = np.random.normal(0, 1, (40, 50))\ny = np.sum(x, axis=-1)\n\n# Try to reproduce the same in tensorflow\nsess = tf.InteractiveSession()\ntf_x = tf.constant(x)\ntf_y = tf.reduce_sum(x, -1)\nnp.testing.assert_allclose(tf_y.eval(), y)\nsess.close()    \nThe code that checks the reduction indices and throws the exception appears to know about the dimensionality of the vector (taken from _ReductionShape).\nfor reduction_index in reduction_indices:\n    if reduction_index < 0 or reduction_index >= input_shape.ndims:\n        raise ValueError(\"Invalid reduction dimension %d for input with %d dimensions\" % (reduction_index, input_shape.ndims))\nI have thus started using the following function to support negative indices.\ndef _reduction_indices(input_tensor, reduction_indices):\n    # Get the shape and convert indices to a list\n    input_shape = input_tensor.get_shape()\n    reduction_indices = np.ravel(reduction_indices)\n\n    # Convert the indices\n    return [(input_shape.ndims + index) if index < 0 else index for index in reduction_indices]\nWould this be worth integrating into the main repository or is the lack of support for tensors with completely unknown shape problematic?", "body": "The reduce operations do not support negative indices as opposed to their numpy equivalents. In particular, the following code fails with the error message `ValueError: Invalid reduction dimension -1 for input with 2 dimensions`.\n\n``` python\nimport tensorflow as tf\nimport numpy as np\n\n# Create reference values in numpy\nx = np.random.normal(0, 1, (40, 50))\ny = np.sum(x, axis=-1)\n\n# Try to reproduce the same in tensorflow\nsess = tf.InteractiveSession()\ntf_x = tf.constant(x)\ntf_y = tf.reduce_sum(x, -1)\nnp.testing.assert_allclose(tf_y.eval(), y)\nsess.close()    \n```\n\nThe code that checks the reduction indices and throws the exception appears to know about the dimensionality of the vector (taken from [_ReductionShape](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/math_ops.py#L1610)).\n\n``` python\nfor reduction_index in reduction_indices:\n    if reduction_index < 0 or reduction_index >= input_shape.ndims:\n        raise ValueError(\"Invalid reduction dimension %d for input with %d dimensions\" % (reduction_index, input_shape.ndims))\n```\n\nI have thus started using the following function to support negative indices.\n\n``` python\ndef _reduction_indices(input_tensor, reduction_indices):\n    # Get the shape and convert indices to a list\n    input_shape = input_tensor.get_shape()\n    reduction_indices = np.ravel(reduction_indices)\n\n    # Convert the indices\n    return [(input_shape.ndims + index) if index < 0 else index for index in reduction_indices]\n```\n\nWould this be worth integrating into the main repository or is the lack of support for tensors with completely unknown shape problematic?\n"}