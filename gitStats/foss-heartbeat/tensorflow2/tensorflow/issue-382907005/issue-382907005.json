{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23893", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23893/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23893/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23893/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/23893", "id": 382907005, "node_id": "MDU6SXNzdWUzODI5MDcwMDU=", "number": 23893, "title": "StructuralEnsembleRegressor gives warning: Converting sparse IndexedSlices to a dense Tensor of unknown shape", "user": {"login": "wliangaz", "id": 25938350, "node_id": "MDQ6VXNlcjI1OTM4MzUw", "avatar_url": "https://avatars1.githubusercontent.com/u/25938350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wliangaz", "html_url": "https://github.com/wliangaz", "followers_url": "https://api.github.com/users/wliangaz/followers", "following_url": "https://api.github.com/users/wliangaz/following{/other_user}", "gists_url": "https://api.github.com/users/wliangaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/wliangaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wliangaz/subscriptions", "organizations_url": "https://api.github.com/users/wliangaz/orgs", "repos_url": "https://api.github.com/users/wliangaz/repos", "events_url": "https://api.github.com/users/wliangaz/events{/privacy}", "received_events_url": "https://api.github.com/users/wliangaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-11-21T00:40:41Z", "updated_at": "2018-11-21T00:40:41Z", "closed_at": null, "author_association": "NONE", "body_html": "<p><strong>System information</strong></p>\n<ul>\n<li>Have I written custom code (as opposed to using a stock example script provided in TensorFlow):<br>\nI break down the stock example and run it on debug mode. I used my own sample data which has 1000 rows x 15 cols.  here's the code:<br>\n#----<br>\nreader = tf.contrib.timeseries.CSVReader(csv_file_name,column_names=((tf.contrib.timeseries.TrainEvalFeatures.TIMES,)+ (tf.contrib.timeseries.TrainEvalFeatures.VALUES,) * N_COLS))<br>\ntrain_input_fn = tf.contrib.timeseries.RandomWindowInputFn(reader, batch_size=N_COLS, window_size = 15)<br>\ntraining_steps=150<br>\nstructural = tf.contrib.timeseries.StructuralEnsembleRegressor(periodicities=[7,100], num_features=N_COLS, cycle_num_latent_values=3)<br>\nff = structural.train(input_fn=train_input_fn, steps=training_steps)<br>\n#----</li>\n<li>OS Platform and Distribution: Windows 10, Anaconda, Python3.6</li>\n<li>TensorFlow installed from (source or binary): 1.12.0</li>\n<li>GPU model and memory: Quadro K2200</li>\n</ul>\n<p>Checked related SO posts and tf source code (gradients_impl.py), looks to me this was due to that TensorFlow automatically densifies the tf.IndexedSlices for unknown shape.  This also makes it throw OOM error for slightly larger dataset (1000rows x 25cols). I also saw a note from gradient_impl.py that reads:</p>\n<h1>TODO(mrry): Consider adding static shape information to</h1>\n<h1>IndexedSlices, to avoid using numpy here.</h1>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nI break down the stock example and run it on debug mode. I used my own sample data which has 1000 rows x 15 cols.  here's the code:\n#----\nreader = tf.contrib.timeseries.CSVReader(csv_file_name,column_names=((tf.contrib.timeseries.TrainEvalFeatures.TIMES,)+ (tf.contrib.timeseries.TrainEvalFeatures.VALUES,) * N_COLS))\ntrain_input_fn = tf.contrib.timeseries.RandomWindowInputFn(reader, batch_size=N_COLS, window_size = 15)\ntraining_steps=150\nstructural = tf.contrib.timeseries.StructuralEnsembleRegressor(periodicities=[7,100], num_features=N_COLS, cycle_num_latent_values=3)\nff = structural.train(input_fn=train_input_fn, steps=training_steps)\n#----\nOS Platform and Distribution: Windows 10, Anaconda, Python3.6\nTensorFlow installed from (source or binary): 1.12.0\nGPU model and memory: Quadro K2200\n\nChecked related SO posts and tf source code (gradients_impl.py), looks to me this was due to that TensorFlow automatically densifies the tf.IndexedSlices for unknown shape.  This also makes it throw OOM error for slightly larger dataset (1000rows x 25cols). I also saw a note from gradient_impl.py that reads:\nTODO(mrry): Consider adding static shape information to\nIndexedSlices, to avoid using numpy here.", "body": "**System information**\r\n- Have I written custom code (as opposed to using a stock example script provided in TensorFlow):\r\nI break down the stock example and run it on debug mode. I used my own sample data which has 1000 rows x 15 cols.  here's the code:\r\n#----\r\n    reader = tf.contrib.timeseries.CSVReader(csv_file_name,column_names=((tf.contrib.timeseries.TrainEvalFeatures.TIMES,)+ (tf.contrib.timeseries.TrainEvalFeatures.VALUES,) * N_COLS))\r\n    train_input_fn = tf.contrib.timeseries.RandomWindowInputFn(reader, batch_size=N_COLS, window_size = 15)\r\n    training_steps=150\r\n    structural = tf.contrib.timeseries.StructuralEnsembleRegressor(periodicities=[7,100], num_features=N_COLS, cycle_num_latent_values=3)\r\n    ff = structural.train(input_fn=train_input_fn, steps=training_steps)\r\n#----\r\n- OS Platform and Distribution: Windows 10, Anaconda, Python3.6\r\n- TensorFlow installed from (source or binary): 1.12.0\r\n- GPU model and memory: Quadro K2200\r\n\r\nChecked related SO posts and tf source code (gradients_impl.py), looks to me this was due to that TensorFlow automatically densifies the tf.IndexedSlices for unknown shape.  This also makes it throw OOM error for slightly larger dataset (1000rows x 25cols). I also saw a note from gradient_impl.py that reads:\r\n  # TODO(mrry): Consider adding static shape information to\r\n  # IndexedSlices, to avoid using numpy here.\r\n\r\n"}