{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/293285068", "html_url": "https://github.com/tensorflow/tensorflow/issues/7258#issuecomment-293285068", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7258", "id": 293285068, "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzI4NTA2OA==", "user": {"login": "sylvain-bougnoux", "id": 6706662, "node_id": "MDQ6VXNlcjY3MDY2NjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/6706662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sylvain-bougnoux", "html_url": "https://github.com/sylvain-bougnoux", "followers_url": "https://api.github.com/users/sylvain-bougnoux/followers", "following_url": "https://api.github.com/users/sylvain-bougnoux/following{/other_user}", "gists_url": "https://api.github.com/users/sylvain-bougnoux/gists{/gist_id}", "starred_url": "https://api.github.com/users/sylvain-bougnoux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sylvain-bougnoux/subscriptions", "organizations_url": "https://api.github.com/users/sylvain-bougnoux/orgs", "repos_url": "https://api.github.com/users/sylvain-bougnoux/repos", "events_url": "https://api.github.com/users/sylvain-bougnoux/events{/privacy}", "received_events_url": "https://api.github.com/users/sylvain-bougnoux/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-11T14:41:24Z", "updated_at": "2017-04-11T14:41:24Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=22941064\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/guschmue\">@guschmue</a>, I could build 2 with VS2015 &amp; cmake (no bazel), but <strong>no session factories are registered at runtime</strong>. I could build &amp; run tf_label_image_example, but when I used the same includes &amp; links in my own soft, it crashes with<br>\n<code>\\tensorflow\\tensorflow\\core\\common_runtime\\session.cc:58] Not found: No session factory registered for the given session options: {target: \"\" config: } Registered factories are {}.</code></p>\n<p>Currently the /WHOLEARCHIVE option make VS crashes with \"fatal error LNK1000: Internal error during CImplib::EmitThunk\". I could avoid it by specifying a library as in<br>\n<code>/WHOLEARCHIVE:tf_core_direct_session</code><br>\nBut it does not work either (maybe it is not the right library?).<br>\nAs tf_label_image_example does not use /WHOLEARCHIVE at all, I am wondering if it is the right option to use?</p>\n<p>I understand that factories are registered through global variables as in<br>\n<code> static DirectSessionRegistrar registrar;</code></p>\n<p>Is there another way to force such registration?<br>\nOr does anyone understand why these symbols are discarded?<br>\nWith VS it is not possible to control the order of globals' instantiation, but it should not be the case here!</p>", "body_text": "@guschmue, I could build 2 with VS2015 & cmake (no bazel), but no session factories are registered at runtime. I could build & run tf_label_image_example, but when I used the same includes & links in my own soft, it crashes with\n\\tensorflow\\tensorflow\\core\\common_runtime\\session.cc:58] Not found: No session factory registered for the given session options: {target: \"\" config: } Registered factories are {}.\nCurrently the /WHOLEARCHIVE option make VS crashes with \"fatal error LNK1000: Internal error during CImplib::EmitThunk\". I could avoid it by specifying a library as in\n/WHOLEARCHIVE:tf_core_direct_session\nBut it does not work either (maybe it is not the right library?).\nAs tf_label_image_example does not use /WHOLEARCHIVE at all, I am wondering if it is the right option to use?\nI understand that factories are registered through global variables as in\n static DirectSessionRegistrar registrar;\nIs there another way to force such registration?\nOr does anyone understand why these symbols are discarded?\nWith VS it is not possible to control the order of globals' instantiation, but it should not be the case here!", "body": "@guschmue, I could build 2 with VS2015 & cmake (no bazel), but **no session factories are registered at runtime**. I could build & run tf_label_image_example, but when I used the same includes & links in my own soft, it crashes with \r\n`\\tensorflow\\tensorflow\\core\\common_runtime\\session.cc:58] Not found: No session factory registered for the given session options: {target: \"\" config: } Registered factories are {}.` \r\n\r\nCurrently the /WHOLEARCHIVE option make VS crashes with \"fatal error LNK1000: Internal error during CImplib::EmitThunk\". I could avoid it by specifying a library as in\r\n`/WHOLEARCHIVE:tf_core_direct_session`\r\nBut it does not work either (maybe it is not the right library?).\r\nAs tf_label_image_example does not use /WHOLEARCHIVE at all, I am wondering if it is the right option to use?\r\n\r\nI understand that factories are registered through global variables as in \r\n` static DirectSessionRegistrar registrar;` \r\n\r\nIs there another way to force such registration? \r\nOr does anyone understand why these symbols are discarded?\r\nWith VS it is not possible to control the order of globals' instantiation, but it should not be the case here!"}