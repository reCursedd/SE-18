{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/309834038", "html_url": "https://github.com/tensorflow/tensorflow/pull/10598#issuecomment-309834038", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10598", "id": 309834038, "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTgzNDAzOA==", "user": {"login": "lakshayg", "id": 7976315, "node_id": "MDQ6VXNlcjc5NzYzMTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/7976315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lakshayg", "html_url": "https://github.com/lakshayg", "followers_url": "https://api.github.com/users/lakshayg/followers", "following_url": "https://api.github.com/users/lakshayg/following{/other_user}", "gists_url": "https://api.github.com/users/lakshayg/gists{/gist_id}", "starred_url": "https://api.github.com/users/lakshayg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lakshayg/subscriptions", "organizations_url": "https://api.github.com/users/lakshayg/orgs", "repos_url": "https://api.github.com/users/lakshayg/repos", "events_url": "https://api.github.com/users/lakshayg/events{/privacy}", "received_events_url": "https://api.github.com/users/lakshayg/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-20T17:42:05Z", "updated_at": "2017-06-20T17:53:05Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=16907534\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/rmlarsen\">@rmlarsen</a> I just checked and found that numpy gave inf and tf gave nan. WolframAlpha says that the value should be <code>inf</code> (<a href=\"http://www.wolframalpha.com/input/?i=atanh(1%2B0i)\" rel=\"nofollow\">http://www.wolframalpha.com/input/?i=atanh(1%2B0i)</a>). What is surprising is that the tf implementation of atanh uses std::atanh from the C library which gives inf for x=1 as well. I guess that I will have to check tensorflow's output again.</p>\n<p>Any ideas on how to fix this?</p>", "body_text": "@rmlarsen I just checked and found that numpy gave inf and tf gave nan. WolframAlpha says that the value should be inf (http://www.wolframalpha.com/input/?i=atanh(1%2B0i)). What is surprising is that the tf implementation of atanh uses std::atanh from the C library which gives inf for x=1 as well. I guess that I will have to check tensorflow's output again.\nAny ideas on how to fix this?", "body": "@rmlarsen I just checked and found that numpy gave inf and tf gave nan. WolframAlpha says that the value should be `inf` (http://www.wolframalpha.com/input/?i=atanh(1%2B0i)). What is surprising is that the tf implementation of atanh uses std::atanh from the C library which gives inf for x=1 as well. I guess that I will have to check tensorflow's output again.\r\n\r\nAny ideas on how to fix this?\r\n\r\n"}