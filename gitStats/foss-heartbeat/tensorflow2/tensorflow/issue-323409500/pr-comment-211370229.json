{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/211370229", "pull_request_review_id": 147775144, "id": 211370229, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTM3MDIyOQ==", "diff_hunk": "@@ -582,5 +584,31 @@ def testFileCrc32Binary(self):\n     self.assertTrue(crc1 != crc2)\n     self.assertEqual(crc2, crc3)\n \n+  def testMatchingFilesPermission(self):\n+    # Test case for GitHub issue 19274.\n+    # Create top level directory test_dir.\n+    dir_path = os.path.join(self._base_dir, \"test_dir\")\n+    file_io.create_dir(dir_path)\n+    # Create second level directories `noread` and `any`.\n+    noread_path = os.path.join(dir_path, \"noread\")\n+    file_io.create_dir(noread_path)\n+    any_path = os.path.join(dir_path, \"any\")\n+    file_io.create_dir(any_path)\n+    files = [\"file1.txt\", \"file2.txt\", \"file3.txt\"]\n+    for name in files:\n+      file_path = os.path.join(any_path, name)\n+      file_io.FileIO(file_path, mode=\"w\").write(\"testing\")\n+    file_path = os.path.join(noread_path, \"file4.txt\")\n+    file_io.FileIO(file_path, mode=\"w\").write(\"testing\")\n+    # Change noread to noread access.\n+    os.chmod(noread_path, 0)\n+    expected_match = [compat.as_bytes(dir_path)]\n+    with self.test_session() as sess:\n+      self.assertItemsEqual(\n+          gen_io_ops.matching_files(dir_path).eval(), expected_match)", "path": "tensorflow/python/lib/io/file_io_test.py", "position": null, "original_position": 35, "commit_id": "f4df6cb3aebc64a8e9c2c2d2dc06fa039e188566", "original_commit_id": "c1731614e10e5b2a8e77f1ee4565b3185541483c", "user": {"login": "rohan100jain", "id": 144114, "node_id": "MDQ6VXNlcjE0NDExNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/144114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rohan100jain", "html_url": "https://github.com/rohan100jain", "followers_url": "https://api.github.com/users/rohan100jain/followers", "following_url": "https://api.github.com/users/rohan100jain/following{/other_user}", "gists_url": "https://api.github.com/users/rohan100jain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rohan100jain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rohan100jain/subscriptions", "organizations_url": "https://api.github.com/users/rohan100jain/orgs", "repos_url": "https://api.github.com/users/rohan100jain/repos", "events_url": "https://api.github.com/users/rohan100jain/events{/privacy}", "received_events_url": "https://api.github.com/users/rohan100jain/received_events", "type": "User", "site_admin": false}, "body": "why use gen_io_ops.matching_files.. why not file_io.get_matching_files instead? In fact try looking for .../test_dir/*/file*.txt and expect to only find file1.txt, file2.txt and file3.txt", "created_at": "2018-08-20T18:52:20Z", "updated_at": "2018-08-22T13:24:58Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/19307#discussion_r211370229", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/19307", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/211370229"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/19307#discussion_r211370229"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/19307"}}, "body_html": "<p>why use gen_io_ops.matching_files.. why not file_io.get_matching_files instead? In fact try looking for .../test_dir/<em>/file</em>.txt and expect to only find file1.txt, file2.txt and file3.txt</p>", "body_text": "why use gen_io_ops.matching_files.. why not file_io.get_matching_files instead? In fact try looking for .../test_dir//file.txt and expect to only find file1.txt, file2.txt and file3.txt"}