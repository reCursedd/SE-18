{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23160", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23160/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23160/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23160/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/23160", "id": 372519691, "node_id": "MDU6SXNzdWUzNzI1MTk2OTE=", "number": 23160, "title": "tf.layers.dense activity_regularizer= tf.contrib.layers.l2_regularizer(0.0) causes error.", "user": {"login": "corynezin", "id": 30993572, "node_id": "MDQ6VXNlcjMwOTkzNTcy", "avatar_url": "https://avatars1.githubusercontent.com/u/30993572?v=4", "gravatar_id": "", "url": "https://api.github.com/users/corynezin", "html_url": "https://github.com/corynezin", "followers_url": "https://api.github.com/users/corynezin/followers", "following_url": "https://api.github.com/users/corynezin/following{/other_user}", "gists_url": "https://api.github.com/users/corynezin/gists{/gist_id}", "starred_url": "https://api.github.com/users/corynezin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/corynezin/subscriptions", "organizations_url": "https://api.github.com/users/corynezin/orgs", "repos_url": "https://api.github.com/users/corynezin/repos", "events_url": "https://api.github.com/users/corynezin/events{/privacy}", "received_events_url": "https://api.github.com/users/corynezin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "wt-huang", "id": 42785337, "node_id": "MDQ6VXNlcjQyNzg1MzM3", "avatar_url": "https://avatars0.githubusercontent.com/u/42785337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wt-huang", "html_url": "https://github.com/wt-huang", "followers_url": "https://api.github.com/users/wt-huang/followers", "following_url": "https://api.github.com/users/wt-huang/following{/other_user}", "gists_url": "https://api.github.com/users/wt-huang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wt-huang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wt-huang/subscriptions", "organizations_url": "https://api.github.com/users/wt-huang/orgs", "repos_url": "https://api.github.com/users/wt-huang/repos", "events_url": "https://api.github.com/users/wt-huang/events{/privacy}", "received_events_url": "https://api.github.com/users/wt-huang/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "wt-huang", "id": 42785337, "node_id": "MDQ6VXNlcjQyNzg1MzM3", "avatar_url": "https://avatars0.githubusercontent.com/u/42785337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wt-huang", "html_url": "https://github.com/wt-huang", "followers_url": "https://api.github.com/users/wt-huang/followers", "following_url": "https://api.github.com/users/wt-huang/following{/other_user}", "gists_url": "https://api.github.com/users/wt-huang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wt-huang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wt-huang/subscriptions", "organizations_url": "https://api.github.com/users/wt-huang/orgs", "repos_url": "https://api.github.com/users/wt-huang/repos", "events_url": "https://api.github.com/users/wt-huang/events{/privacy}", "received_events_url": "https://api.github.com/users/wt-huang/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-10-22T13:23:52Z", "updated_at": "2018-11-10T17:39:33Z", "closed_at": "2018-11-10T17:39:01Z", "author_association": "NONE", "body_html": "<p><strong>System information</strong></p>\n<ul>\n<li>Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes</li>\n<li>OS Platform and Distribution (e.g., Linux Ubuntu 16.04): RHEL 7.3</li>\n<li>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: n/a</li>\n<li>TensorFlow installed from (source or binary): binary (pip)</li>\n<li>TensorFlow version (use command below): 1.10</li>\n<li>Python version: 3.6</li>\n<li>Bazel version (if compiling from source):</li>\n<li>GCC/Compiler version (if compiling from source):</li>\n<li>CUDA/cuDNN version: 9.0 / 7</li>\n<li>GPU model and memory: Tesla k80</li>\n</ul>\n<p><strong>Describe the current behavior</strong><br>\nSetting the activity regularizer of a tf.layers.dense layer to tf.contrib.layers.l2_regularizer(0.0) gives the error:<br>\nValueError: None values not supported.</p>\n<p><strong>Describe the expected behavior</strong><br>\nNo error should be thrown - the regularizer should be disabled.<br>\n<strong>Code to reproduce the issue</strong><br>\nx = tf.placeholder(tf.float32, (64,100))<br>\nlayer = tf.layers.dense(<br>\nx,<br>\n100,<br>\nactivation=None,<br>\nkernel_initializer=tf.contrib.layers.xavier_initializer(),<br>\nactivity_regularizer=tf.contrib.layers.l2_regularizer(scale=0.0)<br>\n)</p>\n<p><strong>Other info / logs</strong><br>\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.</p>\n<p>Trace:<br>\nTraceback (most recent call last):<br>\nFile \"\", line 7, in <br>\nFile \"/tensorflow/python/layers/core.py\", line 189, in dense<br>\nreturn layer.apply(inputs)<br>\nFile \"/tensorflow/python/keras/engine/base_layer.py\", line 805, in apply<br>\nreturn self.<strong>call</strong>(inputs, *args, **kwargs)<br>\nFile \"/tensorflow/python/layers/base.py\", line 362, in <strong>call</strong><br>\noutputs = super(Layer, self).<strong>call</strong>(inputs, *args, **kwargs)<br>\nFile \"/tensorflow/python/keras/engine/base_layer.py\", line 758, in <strong>call</strong><br>\nself._handle_activity_regularization(inputs, outputs)<br>\nFile \"/tensorflow/python/keras/engine/base_layer.py\", line 640, in _handle_activity_regularization<br>\nself.add_loss(activity_regularization, inputs=inputs)<br>\nFile \"/tensorflow/python/layers/base.py\", line 134, in add_loss<br>\nsuper(Layer, self).add_loss(losses, inputs=inputs)<br>\nFile \"/tensorflow/python/keras/engine/base_layer.py\", line 411, in add_loss<br>\nif not tensor_util.is_tensor(loss) else loss for loss in losses]<br>\nFile \"/tensorflow/python/keras/engine/base_layer.py\", line 411, in <br>\nif not tensor_util.is_tensor(loss) else loss for loss in losses]<br>\nFile \"/tensorflow/python/framework/ops.py\", line 998, in convert_to_tensor<br>\nas_ref=False)<br>\nFile \"/tensorflow/python/framework/ops.py\", line 1094, in internal_convert_to_tensor<br>\nret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)<br>\nFile \"/tensorflow/python/framework/constant_op.py\", line 217, in _constant_tensor_conversion_function<br>\nreturn constant(v, dtype=dtype, name=name)<br>\nFile \"/tensorflow/python/framework/constant_op.py\", line 196, in constant<br>\nvalue, dtype=dtype, shape=shape, verify_shape=verify_shape))<br>\nFile \"/tensorflow/python/framework/tensor_util.py\", line 424, in make_tensor_proto<br>\nraise ValueError(\"None values not supported.\")</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): RHEL 7.3\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: n/a\nTensorFlow installed from (source or binary): binary (pip)\nTensorFlow version (use command below): 1.10\nPython version: 3.6\nBazel version (if compiling from source):\nGCC/Compiler version (if compiling from source):\nCUDA/cuDNN version: 9.0 / 7\nGPU model and memory: Tesla k80\n\nDescribe the current behavior\nSetting the activity regularizer of a tf.layers.dense layer to tf.contrib.layers.l2_regularizer(0.0) gives the error:\nValueError: None values not supported.\nDescribe the expected behavior\nNo error should be thrown - the regularizer should be disabled.\nCode to reproduce the issue\nx = tf.placeholder(tf.float32, (64,100))\nlayer = tf.layers.dense(\nx,\n100,\nactivation=None,\nkernel_initializer=tf.contrib.layers.xavier_initializer(),\nactivity_regularizer=tf.contrib.layers.l2_regularizer(scale=0.0)\n)\nOther info / logs\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.\nTrace:\nTraceback (most recent call last):\nFile \"\", line 7, in \nFile \"/tensorflow/python/layers/core.py\", line 189, in dense\nreturn layer.apply(inputs)\nFile \"/tensorflow/python/keras/engine/base_layer.py\", line 805, in apply\nreturn self.call(inputs, *args, **kwargs)\nFile \"/tensorflow/python/layers/base.py\", line 362, in call\noutputs = super(Layer, self).call(inputs, *args, **kwargs)\nFile \"/tensorflow/python/keras/engine/base_layer.py\", line 758, in call\nself._handle_activity_regularization(inputs, outputs)\nFile \"/tensorflow/python/keras/engine/base_layer.py\", line 640, in _handle_activity_regularization\nself.add_loss(activity_regularization, inputs=inputs)\nFile \"/tensorflow/python/layers/base.py\", line 134, in add_loss\nsuper(Layer, self).add_loss(losses, inputs=inputs)\nFile \"/tensorflow/python/keras/engine/base_layer.py\", line 411, in add_loss\nif not tensor_util.is_tensor(loss) else loss for loss in losses]\nFile \"/tensorflow/python/keras/engine/base_layer.py\", line 411, in \nif not tensor_util.is_tensor(loss) else loss for loss in losses]\nFile \"/tensorflow/python/framework/ops.py\", line 998, in convert_to_tensor\nas_ref=False)\nFile \"/tensorflow/python/framework/ops.py\", line 1094, in internal_convert_to_tensor\nret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\nFile \"/tensorflow/python/framework/constant_op.py\", line 217, in _constant_tensor_conversion_function\nreturn constant(v, dtype=dtype, name=name)\nFile \"/tensorflow/python/framework/constant_op.py\", line 196, in constant\nvalue, dtype=dtype, shape=shape, verify_shape=verify_shape))\nFile \"/tensorflow/python/framework/tensor_util.py\", line 424, in make_tensor_proto\nraise ValueError(\"None values not supported.\")", "body": "**System information**\r\n- Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04): RHEL 7.3\r\n- Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: n/a\r\n- TensorFlow installed from (source or binary): binary (pip)\r\n- TensorFlow version (use command below): 1.10\r\n- Python version: 3.6\r\n- Bazel version (if compiling from source):\r\n- GCC/Compiler version (if compiling from source):\r\n- CUDA/cuDNN version: 9.0 / 7\r\n- GPU model and memory: Tesla k80\r\n\r\n**Describe the current behavior**\r\nSetting the activity regularizer of a tf.layers.dense layer to tf.contrib.layers.l2_regularizer(0.0) gives the error:\r\nValueError: None values not supported.\r\n\r\n**Describe the expected behavior**\r\nNo error should be thrown - the regularizer should be disabled.\r\n**Code to reproduce the issue**\r\nx = tf.placeholder(tf.float32, (64,100))\r\nlayer = tf.layers.dense(\r\n    x,\r\n    100,\r\n    activation=None,\r\n    kernel_initializer=tf.contrib.layers.xavier_initializer(),\r\n    activity_regularizer=tf.contrib.layers.l2_regularizer(scale=0.0)\r\n)\r\n\r\n**Other info / logs**\r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.\r\n\r\nTrace:\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 7, in <module>\r\n  File \"/tensorflow/python/layers/core.py\", line 189, in dense\r\n    return layer.apply(inputs)\r\n  File \"/tensorflow/python/keras/engine/base_layer.py\", line 805, in apply\r\n    return self.__call__(inputs, *args, **kwargs)\r\n  File \"/tensorflow/python/layers/base.py\", line 362, in __call__\r\n    outputs = super(Layer, self).__call__(inputs, *args, **kwargs)\r\n  File \"/tensorflow/python/keras/engine/base_layer.py\", line 758, in __call__\r\n    self._handle_activity_regularization(inputs, outputs)\r\n  File \"/tensorflow/python/keras/engine/base_layer.py\", line 640, in _handle_activity_regularization\r\n    self.add_loss(activity_regularization, inputs=inputs)\r\n  File \"/tensorflow/python/layers/base.py\", line 134, in add_loss\r\n    super(Layer, self).add_loss(losses, inputs=inputs)\r\n  File \"/tensorflow/python/keras/engine/base_layer.py\", line 411, in add_loss\r\n    if not tensor_util.is_tensor(loss) else loss for loss in losses]\r\n  File \"/tensorflow/python/keras/engine/base_layer.py\", line 411, in <listcomp>\r\n    if not tensor_util.is_tensor(loss) else loss for loss in losses]\r\n  File \"/tensorflow/python/framework/ops.py\", line 998, in convert_to_tensor\r\n    as_ref=False)\r\n  File \"/tensorflow/python/framework/ops.py\", line 1094, in internal_convert_to_tensor\r\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\r\n  File \"/tensorflow/python/framework/constant_op.py\", line 217, in _constant_tensor_conversion_function\r\n    return constant(v, dtype=dtype, name=name)\r\n  File \"/tensorflow/python/framework/constant_op.py\", line 196, in constant\r\n    value, dtype=dtype, shape=shape, verify_shape=verify_shape))\r\n  File \"/tensorflow/python/framework/tensor_util.py\", line 424, in make_tensor_proto\r\n    raise ValueError(\"None values not supported.\")\r\n"}