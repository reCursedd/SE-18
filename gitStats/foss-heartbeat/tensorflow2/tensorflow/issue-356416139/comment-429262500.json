{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/429262500", "html_url": "https://github.com/tensorflow/tensorflow/issues/22023#issuecomment-429262500", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22023", "id": 429262500, "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTI2MjUwMA==", "user": {"login": "duane-ibm", "id": 20570859, "node_id": "MDQ6VXNlcjIwNTcwODU5", "avatar_url": "https://avatars3.githubusercontent.com/u/20570859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/duane-ibm", "html_url": "https://github.com/duane-ibm", "followers_url": "https://api.github.com/users/duane-ibm/followers", "following_url": "https://api.github.com/users/duane-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/duane-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/duane-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/duane-ibm/subscriptions", "organizations_url": "https://api.github.com/users/duane-ibm/orgs", "repos_url": "https://api.github.com/users/duane-ibm/repos", "events_url": "https://api.github.com/users/duane-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/duane-ibm/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-12T09:21:32Z", "updated_at": "2018-10-12T09:21:32Z", "author_association": "NONE", "body_html": "<p>With gcc 6.3.0 , Ubuntu 16.04, z13 : using bazel 0.15.0 instead of bazel 0.12.0, Build for vectorization does not fail with the <code>sqlite3.c</code> error anymore but fails with the eigen issue in PacketMath.h similarly seen on z14.</p>\n<pre><code>ERROR: /home/test/tensorflow/tensorflow/contrib/lite/kernels/BUILD:43:1: C++ compilation of rule '//tensorflow/contrib/lite/kernels:eigen_support' failed (Exit 1)\nIn file included from external/eigen_archive/Eigen/Core:427:0,\n                 from ./third_party/eigen3/Eigen/Core:1,\n                 from tensorflow/contrib/lite/kernels/eigen_support.cc:17:\nexternal/eigen_archive/Eigen/src/Core/arch/ZVector/PacketMath.h: In function 'Eigen::internal::Packet4f Eigen::internal::vec_splat_packet4f(const Packet4f&amp;)':\nexternal/eigen_archive/Eigen/src/Core/arch/ZVector/PacketMath.h:657:11: error: request for member 'v4f' in 'splat', which is of non-class type 'Eigen::internal::Packet4f {aka __vector(4) float}'\n     splat.v4f[0] = vec_splat(from.v4f[0], 0);\n           ^~~\nexternal/eigen_archive/Eigen/src/Core/arch/ZVector/PacketMath.h:657:35: error: request for member 'v4f' in 'from', which is of non-class type 'const Packet4f {aka const __vector(4) float}'\n     splat.v4f[0] = vec_splat(from.v4f[0], 0);\n                                   ^~~\nexternal/eigen_archive/Eigen/src/Core/arch/ZVector/PacketMath.h:657:44: internal compiler error: tree check: expected class 'type', have 'exceptional' (error_mark) in s390_fn_types_compatible, at config/s390/s390-c.c:727\n     splat.v4f[0] = vec_splat(from.v4f[0], 0);\n                                            ^\n0x80cc5367 tree_class_check_failed(tree_node const*, tree_code_class, char const*, int, char const*)\n        ../../gcc-6.3.0/gcc/tree.c:9704\n</code></pre>", "body_text": "With gcc 6.3.0 , Ubuntu 16.04, z13 : using bazel 0.15.0 instead of bazel 0.12.0, Build for vectorization does not fail with the sqlite3.c error anymore but fails with the eigen issue in PacketMath.h similarly seen on z14.\nERROR: /home/test/tensorflow/tensorflow/contrib/lite/kernels/BUILD:43:1: C++ compilation of rule '//tensorflow/contrib/lite/kernels:eigen_support' failed (Exit 1)\nIn file included from external/eigen_archive/Eigen/Core:427:0,\n                 from ./third_party/eigen3/Eigen/Core:1,\n                 from tensorflow/contrib/lite/kernels/eigen_support.cc:17:\nexternal/eigen_archive/Eigen/src/Core/arch/ZVector/PacketMath.h: In function 'Eigen::internal::Packet4f Eigen::internal::vec_splat_packet4f(const Packet4f&)':\nexternal/eigen_archive/Eigen/src/Core/arch/ZVector/PacketMath.h:657:11: error: request for member 'v4f' in 'splat', which is of non-class type 'Eigen::internal::Packet4f {aka __vector(4) float}'\n     splat.v4f[0] = vec_splat(from.v4f[0], 0);\n           ^~~\nexternal/eigen_archive/Eigen/src/Core/arch/ZVector/PacketMath.h:657:35: error: request for member 'v4f' in 'from', which is of non-class type 'const Packet4f {aka const __vector(4) float}'\n     splat.v4f[0] = vec_splat(from.v4f[0], 0);\n                                   ^~~\nexternal/eigen_archive/Eigen/src/Core/arch/ZVector/PacketMath.h:657:44: internal compiler error: tree check: expected class 'type', have 'exceptional' (error_mark) in s390_fn_types_compatible, at config/s390/s390-c.c:727\n     splat.v4f[0] = vec_splat(from.v4f[0], 0);\n                                            ^\n0x80cc5367 tree_class_check_failed(tree_node const*, tree_code_class, char const*, int, char const*)\n        ../../gcc-6.3.0/gcc/tree.c:9704", "body": "With gcc 6.3.0 , Ubuntu 16.04, z13 : using bazel 0.15.0 instead of bazel 0.12.0, Build for vectorization does not fail with the `sqlite3.c` error anymore but fails with the eigen issue in PacketMath.h similarly seen on z14.\r\n```\r\nERROR: /home/test/tensorflow/tensorflow/contrib/lite/kernels/BUILD:43:1: C++ compilation of rule '//tensorflow/contrib/lite/kernels:eigen_support' failed (Exit 1)\r\nIn file included from external/eigen_archive/Eigen/Core:427:0,\r\n                 from ./third_party/eigen3/Eigen/Core:1,\r\n                 from tensorflow/contrib/lite/kernels/eigen_support.cc:17:\r\nexternal/eigen_archive/Eigen/src/Core/arch/ZVector/PacketMath.h: In function 'Eigen::internal::Packet4f Eigen::internal::vec_splat_packet4f(const Packet4f&)':\r\nexternal/eigen_archive/Eigen/src/Core/arch/ZVector/PacketMath.h:657:11: error: request for member 'v4f' in 'splat', which is of non-class type 'Eigen::internal::Packet4f {aka __vector(4) float}'\r\n     splat.v4f[0] = vec_splat(from.v4f[0], 0);\r\n           ^~~\r\nexternal/eigen_archive/Eigen/src/Core/arch/ZVector/PacketMath.h:657:35: error: request for member 'v4f' in 'from', which is of non-class type 'const Packet4f {aka const __vector(4) float}'\r\n     splat.v4f[0] = vec_splat(from.v4f[0], 0);\r\n                                   ^~~\r\nexternal/eigen_archive/Eigen/src/Core/arch/ZVector/PacketMath.h:657:44: internal compiler error: tree check: expected class 'type', have 'exceptional' (error_mark) in s390_fn_types_compatible, at config/s390/s390-c.c:727\r\n     splat.v4f[0] = vec_splat(from.v4f[0], 0);\r\n                                            ^\r\n0x80cc5367 tree_class_check_failed(tree_node const*, tree_code_class, char const*, int, char const*)\r\n        ../../gcc-6.3.0/gcc/tree.c:9704\r\n```"}