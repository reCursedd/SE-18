{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/185061626", "pull_request_review_id": 116108252, "id": 185061626, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NTA2MTYyNg==", "diff_hunk": "@@ -48,46 +89,124 @@ bool CanContractEdge(const tensorflow::Edge* edge,\n   //   1. Get all nodes incoming to 'dst', excluding 'src'\n   //   2. Reverse DFS from those nodes\n   //   3. If reverse DFS reaches 'src' then we have a cycle\n-  std::vector<tensorflow::Node*> dfs_start_nodes;\n-  for (tensorflow::Node* node : dst->in_nodes()) {\n+  std::vector<SimpleNode*> dfs_start_nodes;\n+  for (SimpleNode* node : dst->in_nodes()) {\n     if (node != src) {\n       dfs_start_nodes.push_back(node);\n     }\n   }\n \n-  bool is_cycle = false;\n-  if (!dfs_start_nodes.empty()) {\n-    tensorflow::ReverseDFSFrom(graph, dfs_start_nodes, {},\n-                               [&is_cycle, src](tensorflow::Node* node) {\n-                                 if (node == src) {\n-                                   is_cycle = true;\n-                                 }\n-                               });\n+  bool is_cycle = CheckCycles(graph, src, dfs_start_nodes);\n+  return !is_cycle;\n+}\n+}  // namespace\n+SimpleNode::SimpleNode(const tensorflow::Node* node, const int id)\n+    : node_(node), id_(id) {\n+  if (node_) {\n+    in_edges_.reserve(node_->in_edges().size());\n+    out_edges_.reserve(node_->out_edges().size());\n   }\n+}\n \n-  return !is_cycle;\n+SimpleGraph::SimpleGraph(const tensorflow::Graph* g) : g_(g) {\n+  int n_nodes = g_->num_node_ids();\n+  nodes_.resize(n_nodes, nullptr);\n+  nodes_[g->kSourceId] = new SimpleNode(g->source_node(), g->kSourceId);\n+  nodes_[g->kSinkId] = new SimpleNode(g->sink_node(), g->kSinkId);\n+  int n_edges = g->num_edge_ids();\n+  edges_.resize(n_edges, nullptr);\n+  for (int i = 2; i < n_nodes; i++) {\n+    const auto n = g->FindNodeId(i);\n+    if (n) {\n+      nodes_[i] = new SimpleNode(n, i);\n+    } else {\n+      node_ids_.insert(i);\n+    }\n+  }\n+  for (int i = 0; i < n_edges; i++) {\n+    const auto e = g->FindEdgeId(i);\n+    if (e) {\n+      const auto tfsrc = e->src();\n+      const auto tfdst = e->dst();\n+      bool is_control = e->IsControlEdge();\n+      auto src = nodes_[tfsrc->id()];\n+      auto dst = nodes_[tfdst->id()];\n+      auto edge = new SimpleEdge(i, src, e->src_output(), dst, e->dst_input(),\n+                                 is_control);\n+      edges_[i] = edge;\n+      src->out_edges_.push_back(edge);\n+      dst->in_edges_.push_back(edge);\n+    } else {\n+      edge_ids_.insert(i);\n+    }\n+  }\n+}\n+\n+void SimpleGraph::AddEdge(SimpleNode* src, int out_port, SimpleNode* dst,\n+                          int in_port) {\n+  int i = edges_.size();\n+  if (edge_ids_.size()) {\n+    auto it = edge_ids_.begin();\n+    i = *it;\n+    edge_ids_.erase(it);\n+  } else {\n+    edges_.push_back(0);", "path": "tensorflow/contrib/tensorrt/segment/segment.cc", "position": null, "original_position": 141, "commit_id": "bf70368d36df3ee9a16f5285940d73fb54d911c0", "original_commit_id": "e276bf65e2f3ec452eb28d0a9d34849d65663788", "user": {"login": "aaroey", "id": 31743510, "node_id": "MDQ6VXNlcjMxNzQzNTEw", "avatar_url": "https://avatars0.githubusercontent.com/u/31743510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaroey", "html_url": "https://github.com/aaroey", "followers_url": "https://api.github.com/users/aaroey/followers", "following_url": "https://api.github.com/users/aaroey/following{/other_user}", "gists_url": "https://api.github.com/users/aaroey/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaroey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaroey/subscriptions", "organizations_url": "https://api.github.com/users/aaroey/orgs", "repos_url": "https://api.github.com/users/aaroey/repos", "events_url": "https://api.github.com/users/aaroey/events{/privacy}", "received_events_url": "https://api.github.com/users/aaroey/received_events", "type": "User", "site_admin": false}, "body": "s/0/nullptr", "created_at": "2018-04-30T18:00:52Z", "updated_at": "2018-05-02T21:46:24Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/18909#discussion_r185061626", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/18909", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/185061626"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/18909#discussion_r185061626"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/18909"}}, "body_html": "<p>s/0/nullptr</p>", "body_text": "s/0/nullptr"}