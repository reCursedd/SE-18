{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/185085679", "pull_request_review_id": 116108252, "id": 185085679, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NTA4NTY3OQ==", "diff_hunk": "@@ -403,10 +435,38 @@ tensorflow::Status ConvertGraphDefToTensorRT(\n       oss << \" \" << node_name;\n       subgraph_node_ids.insert(node_map.at(node_name)->id());\n     }\n-    VLOG(2) << \"Subgraph nodes\" << oss.str();\n+    VLOG(1) << \"Subgraph nodes at device \" << segment_nodes_and_device.second\n+            << \" : \" << oss.str();\n+    auto target_device =\n+        name_to_device_map.find(segment_nodes_and_device.second);\n+    std::shared_ptr<nvinfer1::IGpuAllocator> allocator(0);\n+\n+    int cuda_device_id = 0;\n+    if (target_device != name_to_device_map.end()) {\n+      tensorflow::TfGpuId tf_gpu_id(target_device->second->parsed_name().id);\n+      CudaGpuId cuda_gpu_id;\n+      Status s = GpuIdManager::TfToCudaGpuId(tf_gpu_id, &cuda_gpu_id);\n+      if (!s.ok()) {\n+        LOG(ERROR)\n+            << \"Cuda device identification failed, using device 0. Error= \"\n+            << s;\n+      } else {\n+        cuda_device_id = cuda_gpu_id.value();\n+      }\n+      tensorflow::GPUOptions gpuoptions;\n+      auto pm = tensorflow::ProcessState::singleton();", "path": "tensorflow/contrib/tensorrt/convert/convert_graph.cc", "position": null, "original_position": 174, "commit_id": "bf70368d36df3ee9a16f5285940d73fb54d911c0", "original_commit_id": "e276bf65e2f3ec452eb28d0a9d34849d65663788", "user": {"login": "aaroey", "id": 31743510, "node_id": "MDQ6VXNlcjMxNzQzNTEw", "avatar_url": "https://avatars0.githubusercontent.com/u/31743510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaroey", "html_url": "https://github.com/aaroey", "followers_url": "https://api.github.com/users/aaroey/followers", "following_url": "https://api.github.com/users/aaroey/following{/other_user}", "gists_url": "https://api.github.com/users/aaroey/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaroey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaroey/subscriptions", "organizations_url": "https://api.github.com/users/aaroey/orgs", "repos_url": "https://api.github.com/users/aaroey/repos", "events_url": "https://api.github.com/users/aaroey/events{/privacy}", "received_events_url": "https://api.github.com/users/aaroey/received_events", "type": "User", "site_admin": false}, "body": "I think when the segmenter is fixed to reflect the device assignments, this `ConverAfterShape()` method should accept an allocator as a parameter and we shouldn't need Cluster or ProcessState to retrieve the allocator. Would you please add a TODO for that? ", "created_at": "2018-04-30T19:31:56Z", "updated_at": "2018-05-02T21:46:24Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/18909#discussion_r185085679", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/18909", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/185085679"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/18909#discussion_r185085679"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/18909"}}, "body_html": "<p>I think when the segmenter is fixed to reflect the device assignments, this <code>ConverAfterShape()</code> method should accept an allocator as a parameter and we shouldn't need Cluster or ProcessState to retrieve the allocator. Would you please add a TODO for that?</p>", "body_text": "I think when the segmenter is fixed to reflect the device assignments, this ConverAfterShape() method should accept an allocator as a parameter and we shouldn't need Cluster or ProcessState to retrieve the allocator. Would you please add a TODO for that?"}