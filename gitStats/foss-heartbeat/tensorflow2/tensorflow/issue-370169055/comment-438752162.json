{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/438752162", "html_url": "https://github.com/tensorflow/tensorflow/issues/22987#issuecomment-438752162", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22987", "id": 438752162, "node_id": "MDEyOklzc3VlQ29tbWVudDQzODc1MjE2Mg==", "user": {"login": "nluehr", "id": 1873655, "node_id": "MDQ6VXNlcjE4NzM2NTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1873655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nluehr", "html_url": "https://github.com/nluehr", "followers_url": "https://api.github.com/users/nluehr/followers", "following_url": "https://api.github.com/users/nluehr/following{/other_user}", "gists_url": "https://api.github.com/users/nluehr/gists{/gist_id}", "starred_url": "https://api.github.com/users/nluehr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nluehr/subscriptions", "organizations_url": "https://api.github.com/users/nluehr/orgs", "repos_url": "https://api.github.com/users/nluehr/repos", "events_url": "https://api.github.com/users/nluehr/events{/privacy}", "received_events_url": "https://api.github.com/users/nluehr/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-14T17:41:50Z", "updated_at": "2018-11-14T17:41:50Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=40365382\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/azaks2\">@azaks2</a> The bug is not related to CUPTI.</p>\n<p>The problem is that ExecutorState caches a raw pointer to the TraceCollector <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/common_runtime/executor.cc#L1369\">here</a>. The cached copy then outlives the owning unique_ptr created in <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/common_runtime/direct_session.cc#L550\">DirectSession::RunInternal()</a>.</p>\n<p>Either a shared_ptr should be used (if multiple TraceCollectors can coexist) or a mutex is needed to keep direction_session from destroying the TraceCollector while it is in use by ExecutorState.</p>", "body_text": "@azaks2 The bug is not related to CUPTI.\nThe problem is that ExecutorState caches a raw pointer to the TraceCollector here. The cached copy then outlives the owning unique_ptr created in DirectSession::RunInternal().\nEither a shared_ptr should be used (if multiple TraceCollectors can coexist) or a mutex is needed to keep direction_session from destroying the TraceCollector while it is in use by ExecutorState.", "body": "@azaks2 The bug is not related to CUPTI.\r\n\r\nThe problem is that ExecutorState caches a raw pointer to the TraceCollector [here](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/common_runtime/executor.cc#L1369). The cached copy then outlives the owning unique_ptr created in [DirectSession::RunInternal()](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/common_runtime/direct_session.cc#L550).\r\n\r\nEither a shared_ptr should be used (if multiple TraceCollectors can coexist) or a mutex is needed to keep direction_session from destroying the TraceCollector while it is in use by ExecutorState."}