{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13639", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13639/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13639/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13639/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/13639", "id": 264661868, "node_id": "MDU6SXNzdWUyNjQ2NjE4Njg=", "number": 13639, "title": "Invoke get_shape() on sparse_tensor leads to feeding error", "user": {"login": "liqimai", "id": 8087906, "node_id": "MDQ6VXNlcjgwODc5MDY=", "avatar_url": "https://avatars0.githubusercontent.com/u/8087906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liqimai", "html_url": "https://github.com/liqimai", "followers_url": "https://api.github.com/users/liqimai/followers", "following_url": "https://api.github.com/users/liqimai/following{/other_user}", "gists_url": "https://api.github.com/users/liqimai/gists{/gist_id}", "starred_url": "https://api.github.com/users/liqimai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liqimai/subscriptions", "organizations_url": "https://api.github.com/users/liqimai/orgs", "repos_url": "https://api.github.com/users/liqimai/repos", "events_url": "https://api.github.com/users/liqimai/events{/privacy}", "received_events_url": "https://api.github.com/users/liqimai/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 15, "created_at": "2017-10-11T16:56:27Z", "updated_at": "2018-07-22T14:40:13Z", "closed_at": "2018-02-14T16:29:32Z", "author_association": "NONE", "body_html": "<p>If I invoke get_shape method on sparse_tensor, the shape tensor will be added into the _unfeedable_tensors set of the current graph. Then when I feed the sparse tensor, an error occurs.</p>\n<p>The codes below show this error</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n\nshape <span class=\"pl-k\">=</span> np.array([<span class=\"pl-c1\">7</span>, <span class=\"pl-c1\">9</span>, <span class=\"pl-c1\">2</span>], <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>np.int64)\nindices <span class=\"pl-k\">=</span> np.array([[<span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">0</span>], [<span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">5</span>, <span class=\"pl-c1\">1</span>]], <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>np.int64)\nvalues <span class=\"pl-k\">=</span> np.array([<span class=\"pl-c1\">1.0</span>, <span class=\"pl-c1\">2.0</span>], <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>np.float32)\nx <span class=\"pl-k\">=</span> tf.sparse_placeholder(tf.float32, <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>shape)\n\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n    x.get_shape() <span class=\"pl-c\"><span class=\"pl-c\">#</span> &lt;-- Troublemaker</span>\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> This line leads to the exception:</span>\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> \t   Tensor Tensor(\"Const:0\", shape=(3,), dtype=int64) may not be fed.</span>\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> The side effection of this line is that </span>\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> it adds the 'shape' tensor into Graph._unfeedable_tensors, </span>\n\n    <span class=\"pl-c1\">print</span>(sess.run(x, <span class=\"pl-v\">feed_dict</span><span class=\"pl-k\">=</span>{\n    \tx: tf.SparseTensorValue(indices, values, shape)}))</pre></div>\n<p>The stacktrace</p>\n<pre><code>ValueError                                Traceback (most recent call last)\n&lt;ipython-input-1-baac6f49a954&gt; in &lt;module&gt;()\n     10     x.get_shape()\n     11     print(sess.run(x, feed_dict={\n---&gt; 12     \tx: tf.SparseTensorValue(indices, values, shape)}))\n\n/Users/liqimai/anaconda3/lib/python3.5/site-packages/tensorflow/python/client/session.py in run(self, fetches, feed_dict, options, run_metadata)\n    765     try:\n    766       result = self._run(None, fetches, feed_dict, options_ptr,\n--&gt; 767                          run_metadata_ptr)\n    768       if run_metadata:\n    769         proto_data = tf_session.TF_GetBuffer(run_metadata_ptr)\n\n/Users/liqimai/anaconda3/lib/python3.5/site-packages/tensorflow/python/client/session.py in _run(self, handle, fetches, feed_dict, options, run_metadata)\n    944                 % (np_val.shape, subfeed_t.name, str(subfeed_t.get_shape())))\n    945           if not self.graph.is_feedable(subfeed_t):\n--&gt; 946             raise ValueError('Tensor %s may not be fed.' % subfeed_t)\n    947           subfeed_name = compat.as_bytes(subfeed_t.name)\n    948           feed_dict_string[subfeed_name] = np_val\n\nValueError: Tensor Tensor(\"Const:0\", shape=(3,), dtype=int64) may not be fed.\n</code></pre>\n<hr>\n<h3>System information</h3>\n<p>I do not think this bug is related to my environment.<br>\n== cat /etc/issue ===============================================<br>\nDarwin liqimaideMacBook-Pro.local 16.7.0 Darwin Kernel Version 16.7.0: Thu Jun 15 17:36:27 PDT 2017; root:xnu-3789.70.16~2/RELEASE_X86_64 x86_64<br>\nMac OS X 10.12.6</p>\n<p>== are we in docker =============================================<br>\nNo</p>\n<p>== compiler =====================================================<br>\nApple LLVM version 9.0.0 (clang-900.0.37)<br>\nTarget: x86_64-apple-darwin16.7.0<br>\nThread model: posix<br>\nInstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin</p>\n<p>== uname -a =====================================================<br>\nDarwin MacBook-Pro.local 16.7.0 Darwin Kernel Version 16.7.0: Thu Jun 15 17:36:27 PDT 2017; root:xnu-3789.70.16~2/RELEASE_X86_64 x86_64</p>\n<p>== check pips ===================================================<br>\nnumpy (1.11.3)<br>\nprotobuf (3.2.0)<br>\ntensorflow (1.0.0)</p>\n<p>== check for virtualenv =========================================<br>\nFalse</p>\n<p>== tensorflow import ============================================<br>\ntf.VERSION = 1.0.0<br>\ntf.GIT_VERSION = v1.0.0-rc2-15-g47bba63-dirty<br>\ntf.COMPILER_VERSION = v1.0.0-rc2-15-g47bba63-dirty<br>\nSanity check: array([1], dtype=int32)</p>\n<p>== env ==========================================================<br>\nLD_LIBRARY_PATH is unset<br>\nDYLD_LIBRARY_PATH is unset</p>\n<p>== nvidia-smi ===================================================<br>\ntf_env_collect.sh: line 105: nvidia-smi: command not found</p>\n<p>== cuda libs  ===================================================</p>", "body_text": "If I invoke get_shape method on sparse_tensor, the shape tensor will be added into the _unfeedable_tensors set of the current graph. Then when I feed the sparse tensor, an error occurs.\nThe codes below show this error\nimport tensorflow as tf\nimport numpy as np\n\nshape = np.array([7, 9, 2], dtype=np.int64)\nindices = np.array([[3, 2, 0], [4, 5, 1]], dtype=np.int64)\nvalues = np.array([1.0, 2.0], dtype=np.float32)\nx = tf.sparse_placeholder(tf.float32, shape=shape)\n\nwith tf.Session() as sess:\n    x.get_shape() # <-- Troublemaker\n    # This line leads to the exception:\n    # \t   Tensor Tensor(\"Const:0\", shape=(3,), dtype=int64) may not be fed.\n    # The side effection of this line is that \n    # it adds the 'shape' tensor into Graph._unfeedable_tensors, \n\n    print(sess.run(x, feed_dict={\n    \tx: tf.SparseTensorValue(indices, values, shape)}))\nThe stacktrace\nValueError                                Traceback (most recent call last)\n<ipython-input-1-baac6f49a954> in <module>()\n     10     x.get_shape()\n     11     print(sess.run(x, feed_dict={\n---> 12     \tx: tf.SparseTensorValue(indices, values, shape)}))\n\n/Users/liqimai/anaconda3/lib/python3.5/site-packages/tensorflow/python/client/session.py in run(self, fetches, feed_dict, options, run_metadata)\n    765     try:\n    766       result = self._run(None, fetches, feed_dict, options_ptr,\n--> 767                          run_metadata_ptr)\n    768       if run_metadata:\n    769         proto_data = tf_session.TF_GetBuffer(run_metadata_ptr)\n\n/Users/liqimai/anaconda3/lib/python3.5/site-packages/tensorflow/python/client/session.py in _run(self, handle, fetches, feed_dict, options, run_metadata)\n    944                 % (np_val.shape, subfeed_t.name, str(subfeed_t.get_shape())))\n    945           if not self.graph.is_feedable(subfeed_t):\n--> 946             raise ValueError('Tensor %s may not be fed.' % subfeed_t)\n    947           subfeed_name = compat.as_bytes(subfeed_t.name)\n    948           feed_dict_string[subfeed_name] = np_val\n\nValueError: Tensor Tensor(\"Const:0\", shape=(3,), dtype=int64) may not be fed.\n\n\nSystem information\nI do not think this bug is related to my environment.\n== cat /etc/issue ===============================================\nDarwin liqimaideMacBook-Pro.local 16.7.0 Darwin Kernel Version 16.7.0: Thu Jun 15 17:36:27 PDT 2017; root:xnu-3789.70.16~2/RELEASE_X86_64 x86_64\nMac OS X 10.12.6\n== are we in docker =============================================\nNo\n== compiler =====================================================\nApple LLVM version 9.0.0 (clang-900.0.37)\nTarget: x86_64-apple-darwin16.7.0\nThread model: posix\nInstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin\n== uname -a =====================================================\nDarwin MacBook-Pro.local 16.7.0 Darwin Kernel Version 16.7.0: Thu Jun 15 17:36:27 PDT 2017; root:xnu-3789.70.16~2/RELEASE_X86_64 x86_64\n== check pips ===================================================\nnumpy (1.11.3)\nprotobuf (3.2.0)\ntensorflow (1.0.0)\n== check for virtualenv =========================================\nFalse\n== tensorflow import ============================================\ntf.VERSION = 1.0.0\ntf.GIT_VERSION = v1.0.0-rc2-15-g47bba63-dirty\ntf.COMPILER_VERSION = v1.0.0-rc2-15-g47bba63-dirty\nSanity check: array([1], dtype=int32)\n== env ==========================================================\nLD_LIBRARY_PATH is unset\nDYLD_LIBRARY_PATH is unset\n== nvidia-smi ===================================================\ntf_env_collect.sh: line 105: nvidia-smi: command not found\n== cuda libs  ===================================================", "body": "If I invoke get_shape method on sparse_tensor, the shape tensor will be added into the _unfeedable_tensors set of the current graph. Then when I feed the sparse tensor, an error occurs.\r\n\r\nThe codes below show this error\r\n\r\n```python\r\nimport tensorflow as tf\r\nimport numpy as np\r\n\r\nshape = np.array([7, 9, 2], dtype=np.int64)\r\nindices = np.array([[3, 2, 0], [4, 5, 1]], dtype=np.int64)\r\nvalues = np.array([1.0, 2.0], dtype=np.float32)\r\nx = tf.sparse_placeholder(tf.float32, shape=shape)\r\n\r\nwith tf.Session() as sess:\r\n    x.get_shape() # <-- Troublemaker\r\n    # This line leads to the exception:\r\n    # \t   Tensor Tensor(\"Const:0\", shape=(3,), dtype=int64) may not be fed.\r\n    # The side effection of this line is that \r\n    # it adds the 'shape' tensor into Graph._unfeedable_tensors, \r\n\r\n    print(sess.run(x, feed_dict={\r\n    \tx: tf.SparseTensorValue(indices, values, shape)}))\r\n```\r\n\r\nThe stacktrace\r\n```\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-1-baac6f49a954> in <module>()\r\n     10     x.get_shape()\r\n     11     print(sess.run(x, feed_dict={\r\n---> 12     \tx: tf.SparseTensorValue(indices, values, shape)}))\r\n\r\n/Users/liqimai/anaconda3/lib/python3.5/site-packages/tensorflow/python/client/session.py in run(self, fetches, feed_dict, options, run_metadata)\r\n    765     try:\r\n    766       result = self._run(None, fetches, feed_dict, options_ptr,\r\n--> 767                          run_metadata_ptr)\r\n    768       if run_metadata:\r\n    769         proto_data = tf_session.TF_GetBuffer(run_metadata_ptr)\r\n\r\n/Users/liqimai/anaconda3/lib/python3.5/site-packages/tensorflow/python/client/session.py in _run(self, handle, fetches, feed_dict, options, run_metadata)\r\n    944                 % (np_val.shape, subfeed_t.name, str(subfeed_t.get_shape())))\r\n    945           if not self.graph.is_feedable(subfeed_t):\r\n--> 946             raise ValueError('Tensor %s may not be fed.' % subfeed_t)\r\n    947           subfeed_name = compat.as_bytes(subfeed_t.name)\r\n    948           feed_dict_string[subfeed_name] = np_val\r\n\r\nValueError: Tensor Tensor(\"Const:0\", shape=(3,), dtype=int64) may not be fed.\r\n```\r\n------------------------\r\n\r\n### System information\r\nI do not think this bug is related to my environment.\r\n== cat /etc/issue ===============================================\r\nDarwin liqimaideMacBook-Pro.local 16.7.0 Darwin Kernel Version 16.7.0: Thu Jun 15 17:36:27 PDT 2017; root:xnu-3789.70.16~2/RELEASE_X86_64 x86_64\r\nMac OS X 10.12.6\r\n\r\n== are we in docker =============================================\r\nNo\r\n\r\n== compiler =====================================================\r\nApple LLVM version 9.0.0 (clang-900.0.37)\r\nTarget: x86_64-apple-darwin16.7.0\r\nThread model: posix\r\nInstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin\r\n\r\n== uname -a =====================================================\r\nDarwin MacBook-Pro.local 16.7.0 Darwin Kernel Version 16.7.0: Thu Jun 15 17:36:27 PDT 2017; root:xnu-3789.70.16~2/RELEASE_X86_64 x86_64\r\n\r\n== check pips ===================================================\r\nnumpy (1.11.3)\r\nprotobuf (3.2.0)\r\ntensorflow (1.0.0)\r\n\r\n== check for virtualenv =========================================\r\nFalse\r\n\r\n== tensorflow import ============================================\r\ntf.VERSION = 1.0.0\r\ntf.GIT_VERSION = v1.0.0-rc2-15-g47bba63-dirty\r\ntf.COMPILER_VERSION = v1.0.0-rc2-15-g47bba63-dirty\r\nSanity check: array([1], dtype=int32)\r\n\r\n== env ==========================================================\r\nLD_LIBRARY_PATH is unset\r\nDYLD_LIBRARY_PATH is unset\r\n\r\n== nvidia-smi ===================================================\r\ntf_env_collect.sh: line 105: nvidia-smi: command not found\r\n\r\n== cuda libs  ==================================================="}