{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/367360895", "html_url": "https://github.com/tensorflow/tensorflow/issues/15985#issuecomment-367360895", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15985", "id": 367360895, "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzM2MDg5NQ==", "user": {"login": "pozhijisi", "id": 16745933, "node_id": "MDQ6VXNlcjE2NzQ1OTMz", "avatar_url": "https://avatars0.githubusercontent.com/u/16745933?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pozhijisi", "html_url": "https://github.com/pozhijisi", "followers_url": "https://api.github.com/users/pozhijisi/followers", "following_url": "https://api.github.com/users/pozhijisi/following{/other_user}", "gists_url": "https://api.github.com/users/pozhijisi/gists{/gist_id}", "starred_url": "https://api.github.com/users/pozhijisi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pozhijisi/subscriptions", "organizations_url": "https://api.github.com/users/pozhijisi/orgs", "repos_url": "https://api.github.com/users/pozhijisi/repos", "events_url": "https://api.github.com/users/pozhijisi/events{/privacy}", "received_events_url": "https://api.github.com/users/pozhijisi/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-21T15:21:18Z", "updated_at": "2018-02-21T22:55:59Z", "author_association": "NONE", "body_html": "<p>I am using the following code as a workaround.</p>\n<pre><code>def dense_to_sparse(dense_tensor, sequence_length):\n    indices = tf.where(tf.sequence_mask(sequence_length))\n    values = tf.gather_nd(dense_tensor, indices)\n    shape = tf.shape(dense_tensor, out_type=tf.int64)\n    return tf.SparseTensor(indices, values, shape)\n</code></pre>", "body_text": "I am using the following code as a workaround.\ndef dense_to_sparse(dense_tensor, sequence_length):\n    indices = tf.where(tf.sequence_mask(sequence_length))\n    values = tf.gather_nd(dense_tensor, indices)\n    shape = tf.shape(dense_tensor, out_type=tf.int64)\n    return tf.SparseTensor(indices, values, shape)", "body": "I am using the following code as a workaround.\r\n\r\n```\r\ndef dense_to_sparse(dense_tensor, sequence_length):\r\n    indices = tf.where(tf.sequence_mask(sequence_length))\r\n    values = tf.gather_nd(dense_tensor, indices)\r\n    shape = tf.shape(dense_tensor, out_type=tf.int64)\r\n    return tf.SparseTensor(indices, values, shape)\r\n```\r\n"}