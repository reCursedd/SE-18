{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3005", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3005/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3005/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3005/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/3005", "id": 161847687, "node_id": "MDU6SXNzdWUxNjE4NDc2ODc=", "number": 3005, "title": "Tensorflow Variables Copy Issue", "user": {"login": "RuofanKong", "id": 7396554, "node_id": "MDQ6VXNlcjczOTY1NTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/7396554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RuofanKong", "html_url": "https://github.com/RuofanKong", "followers_url": "https://api.github.com/users/RuofanKong/followers", "following_url": "https://api.github.com/users/RuofanKong/following{/other_user}", "gists_url": "https://api.github.com/users/RuofanKong/gists{/gist_id}", "starred_url": "https://api.github.com/users/RuofanKong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RuofanKong/subscriptions", "organizations_url": "https://api.github.com/users/RuofanKong/orgs", "repos_url": "https://api.github.com/users/RuofanKong/repos", "events_url": "https://api.github.com/users/RuofanKong/events{/privacy}", "received_events_url": "https://api.github.com/users/RuofanKong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-06-23T06:14:52Z", "updated_at": "2016-06-28T00:53:10Z", "closed_at": "2016-06-28T00:53:10Z", "author_association": "NONE", "body_html": "<p>I am using Tensorflow 0.8 to train the Deep Neural Networks. Currently, I encounter an issue that I want to define two exact same Neural Networks N1 and N2, and I train N1, during the training loop, I copy updated weights from N1 to N2 every 4 iterations. In fact, I know there is way using <code>tf.train.saver.save()</code> to save all N1 weights into a <code>.ckpt</code> file on Disk, and using <code>tf.train.saver.restore()</code> to load those weights from <code>.ckpt</code> file, which is equivalent to the copy functionality. However, this load/reload will impact the training speed, and I wonder if there are other more efficient ways to do the copy (For example, do in-memory copy, etc.). Thanks!</p>", "body_text": "I am using Tensorflow 0.8 to train the Deep Neural Networks. Currently, I encounter an issue that I want to define two exact same Neural Networks N1 and N2, and I train N1, during the training loop, I copy updated weights from N1 to N2 every 4 iterations. In fact, I know there is way using tf.train.saver.save() to save all N1 weights into a .ckpt file on Disk, and using tf.train.saver.restore() to load those weights from .ckpt file, which is equivalent to the copy functionality. However, this load/reload will impact the training speed, and I wonder if there are other more efficient ways to do the copy (For example, do in-memory copy, etc.). Thanks!", "body": "I am using Tensorflow 0.8 to train the Deep Neural Networks. Currently, I encounter an issue that I want to define two exact same Neural Networks N1 and N2, and I train N1, during the training loop, I copy updated weights from N1 to N2 every 4 iterations. In fact, I know there is way using `tf.train.saver.save()` to save all N1 weights into a `.ckpt` file on Disk, and using `tf.train.saver.restore()` to load those weights from `.ckpt` file, which is equivalent to the copy functionality. However, this load/reload will impact the training speed, and I wonder if there are other more efficient ways to do the copy (For example, do in-memory copy, etc.). Thanks!\n"}