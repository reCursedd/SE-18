{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/348301094", "html_url": "https://github.com/tensorflow/tensorflow/issues/14985#issuecomment-348301094", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14985", "id": 348301094, "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODMwMTA5NA==", "user": {"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-30T19:51:44Z", "updated_at": "2017-11-30T19:51:44Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=7106367\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/balconychy\">@balconychy</a> Thanks for the clear bug description!</p>\n<p>Looks like <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=20651499\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/weiranzhao\">@weiranzhao</a> wrote the code, and <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=15258583\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/josh11b\">@josh11b</a> might have reviewed it.  Can one of you take a look at this?</p>\n<p>For convenience, here's the repro program that <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=7106367\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/balconychy\">@balconychy</a> created:</p>\n<pre><code>import  cifar10\nimport tensorflow as tf\nimport tensorflow.contrib.slim as slim\nimport numpy as np\n\ndef check_unequal_size():\n    input_holder = tf.placeholder(tf.float32, [None,32,32,3])\n    out=tf.nn.fractional_max_pool(input_holder,[1,1.5,1.5,1],name=\"low_fea_pool\")\n    sess=tf.Session()\n    (x_train, y_train), (x_test, y_test) = cifar10.load_data()\n    x_train = x_train.astype('float32')\n    input_a=x_train[1:4]\n    input_b=x_train[1:5]\n    output_a,_,_=sess.run(out,\n               {input_holder:input_a\n                })\n    output_b,_,_= sess.run(out,\n                 {input_holder: input_b\n                 })\n    print(\"shape of input_a\",input_a.shape)\n    print(\"shape of output_a\", output_a.shape)\n    print(\"shape of input_b\", input_b.shape)\n    print(\"shape of output_b\", output_b.shape)\n    pass\n\ncheck_unequal_size()\n</code></pre>", "body_text": "@balconychy Thanks for the clear bug description!\nLooks like @weiranzhao wrote the code, and @josh11b might have reviewed it.  Can one of you take a look at this?\nFor convenience, here's the repro program that @balconychy created:\nimport  cifar10\nimport tensorflow as tf\nimport tensorflow.contrib.slim as slim\nimport numpy as np\n\ndef check_unequal_size():\n    input_holder = tf.placeholder(tf.float32, [None,32,32,3])\n    out=tf.nn.fractional_max_pool(input_holder,[1,1.5,1.5,1],name=\"low_fea_pool\")\n    sess=tf.Session()\n    (x_train, y_train), (x_test, y_test) = cifar10.load_data()\n    x_train = x_train.astype('float32')\n    input_a=x_train[1:4]\n    input_b=x_train[1:5]\n    output_a,_,_=sess.run(out,\n               {input_holder:input_a\n                })\n    output_b,_,_= sess.run(out,\n                 {input_holder: input_b\n                 })\n    print(\"shape of input_a\",input_a.shape)\n    print(\"shape of output_a\", output_a.shape)\n    print(\"shape of input_b\", input_b.shape)\n    print(\"shape of output_b\", output_b.shape)\n    pass\n\ncheck_unequal_size()", "body": "@balconychy Thanks for the clear bug description!\r\n\r\nLooks like @weiranzhao wrote the code, and @josh11b might have reviewed it.  Can one of you take a look at this?\r\n\r\nFor convenience, here's the repro program that @balconychy created:\r\n```\r\nimport  cifar10\r\nimport tensorflow as tf\r\nimport tensorflow.contrib.slim as slim\r\nimport numpy as np\r\n\r\ndef check_unequal_size():\r\n    input_holder = tf.placeholder(tf.float32, [None,32,32,3])\r\n    out=tf.nn.fractional_max_pool(input_holder,[1,1.5,1.5,1],name=\"low_fea_pool\")\r\n    sess=tf.Session()\r\n    (x_train, y_train), (x_test, y_test) = cifar10.load_data()\r\n    x_train = x_train.astype('float32')\r\n    input_a=x_train[1:4]\r\n    input_b=x_train[1:5]\r\n    output_a,_,_=sess.run(out,\r\n               {input_holder:input_a\r\n                })\r\n    output_b,_,_= sess.run(out,\r\n                 {input_holder: input_b\r\n                 })\r\n    print(\"shape of input_a\",input_a.shape)\r\n    print(\"shape of output_a\", output_a.shape)\r\n    print(\"shape of input_b\", input_b.shape)\r\n    print(\"shape of output_b\", output_b.shape)\r\n    pass\r\n\r\ncheck_unequal_size()\r\n```"}