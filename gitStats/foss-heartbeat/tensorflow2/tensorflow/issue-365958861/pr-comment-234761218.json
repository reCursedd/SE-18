{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/234761218", "pull_request_review_id": 176472209, "id": 234761218, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNDc2MTIxOA==", "diff_hunk": "@@ -0,0 +1,400 @@\n+/* Copyright 2018 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+\n+// ROCM userspace driver library wrapper functionality.\n+\n+#ifndef TENSORFLOW_STREAM_EXECUTOR_ROCM_ROCM_DRIVER_H_\n+#define TENSORFLOW_STREAM_EXECUTOR_ROCM_ROCM_DRIVER_H_\n+\n+#include <stddef.h>\n+#include \"tensorflow/stream_executor/platform/port.h\"\n+\n+#include \"rocm/include/hip/hip_runtime.h\"\n+#include \"tensorflow/stream_executor/device_options.h\"\n+#include \"tensorflow/stream_executor/lib/status.h\"\n+#include \"tensorflow/stream_executor/lib/statusor.h\"\n+#include \"tensorflow/stream_executor/platform/port.h\"\n+\n+namespace stream_executor {\n+namespace rocm {\n+\n+// Identifies the memory space where an allocation resides. See\n+// ROCMDriver::GetPointerMemorySpace().\n+enum class MemorySpace { kHost, kDevice };\n+\n+// Returns a casual string, such as \"host\" for the provided memory space.\n+string MemorySpaceString(MemorySpace memory_space);\n+\n+// ROCMDriver contains wrappers for calls to the userspace library driver. It's\n+// useful to isolate these calls and put basic wrappers around them to separate\n+// userspace library driver behaviors from the rest of the program.\n+//\n+// At the moment it's simply used as a namespace.\n+//\n+// The calls log any specific errors internally and return whether the operation\n+// was successful to the caller.\n+//\n+// Thread safety: these functions should not be used from signal handlers.\n+class ROCMDriver {", "path": "tensorflow/stream_executor/rocm/rocm_driver.h", "position": 50, "original_position": 50, "commit_id": "9226372134ab2e6b58c8f933391fb693a0f11f1f", "original_commit_id": "9226372134ab2e6b58c8f933391fb693a0f11f1f", "user": {"login": "timshen91", "id": 1157432, "node_id": "MDQ6VXNlcjExNTc0MzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1157432?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timshen91", "html_url": "https://github.com/timshen91", "followers_url": "https://api.github.com/users/timshen91/followers", "following_url": "https://api.github.com/users/timshen91/following{/other_user}", "gists_url": "https://api.github.com/users/timshen91/gists{/gist_id}", "starred_url": "https://api.github.com/users/timshen91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timshen91/subscriptions", "organizations_url": "https://api.github.com/users/timshen91/orgs", "repos_url": "https://api.github.com/users/timshen91/repos", "events_url": "https://api.github.com/users/timshen91/events{/privacy}", "received_events_url": "https://api.github.com/users/timshen91/received_events", "type": "User", "site_admin": false}, "body": "> So the best case scenario we are looking at is having a bunch of `gpu/*.h` files with their equivalent `.cc` files in the `cuda` / `rocm` dirs. I am not convinced that this is better that what we have currently.\r\n\r\nYes, that's the end state in my mind. The main benefit is that we have a single GPUDriver type, so that the event type can be implemented truely portably.\r\n\r\nWhat we have currently are ROCMDriver and CUDADriver, the duality forcefully propagates to all its users (e.g. the event class) even though the user don't care about which driver it's using. It'd be good to lift the forced duality.\r\n\r\nDoes it make sense?", "created_at": "2018-11-19T19:58:19Z", "updated_at": "2018-11-19T19:58:19Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/22669#discussion_r234761218", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/22669", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/234761218"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/22669#discussion_r234761218"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/22669"}}, "body_html": "<blockquote>\n<p>So the best case scenario we are looking at is having a bunch of <code>gpu/*.h</code> files with their equivalent <code>.cc</code> files in the <code>cuda</code> / <code>rocm</code> dirs. I am not convinced that this is better that what we have currently.</p>\n</blockquote>\n<p>Yes, that's the end state in my mind. The main benefit is that we have a single GPUDriver type, so that the event type can be implemented truely portably.</p>\n<p>What we have currently are ROCMDriver and CUDADriver, the duality forcefully propagates to all its users (e.g. the event class) even though the user don't care about which driver it's using. It'd be good to lift the forced duality.</p>\n<p>Does it make sense?</p>", "body_text": "So the best case scenario we are looking at is having a bunch of gpu/*.h files with their equivalent .cc files in the cuda / rocm dirs. I am not convinced that this is better that what we have currently.\n\nYes, that's the end state in my mind. The main benefit is that we have a single GPUDriver type, so that the event type can be implemented truely portably.\nWhat we have currently are ROCMDriver and CUDADriver, the duality forcefully propagates to all its users (e.g. the event class) even though the user don't care about which driver it's using. It'd be good to lift the forced duality.\nDoes it make sense?", "in_reply_to_id": 230946354}