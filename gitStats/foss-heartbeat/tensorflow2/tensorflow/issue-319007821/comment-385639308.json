{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/385639308", "html_url": "https://github.com/tensorflow/tensorflow/issues/18988#issuecomment-385639308", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18988", "id": 385639308, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTYzOTMwOA==", "user": {"login": "verbeemen", "id": 3610840, "node_id": "MDQ6VXNlcjM2MTA4NDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/3610840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/verbeemen", "html_url": "https://github.com/verbeemen", "followers_url": "https://api.github.com/users/verbeemen/followers", "following_url": "https://api.github.com/users/verbeemen/following{/other_user}", "gists_url": "https://api.github.com/users/verbeemen/gists{/gist_id}", "starred_url": "https://api.github.com/users/verbeemen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/verbeemen/subscriptions", "organizations_url": "https://api.github.com/users/verbeemen/orgs", "repos_url": "https://api.github.com/users/verbeemen/repos", "events_url": "https://api.github.com/users/verbeemen/events{/privacy}", "received_events_url": "https://api.github.com/users/verbeemen/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-01T10:09:05Z", "updated_at": "2018-05-01T10:09:05Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=22306846\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/wei-v-wang\">@wei-v-wang</a> - mostly yes, when i downsize everything to black and white images, and size it to 32x32 pxls then I receive some results. But the thing is. I've the feeling that tensorflow is more like a bike from the IKEA, whereby you've too many spare parts. You can build a lot of things but actually you don't know if your basic bike can ride properly.<br>\nWhat i'm really looking for is, a good (or even the best possible) template... (I even want to blog about it). But as it is, (And 1 month further), I can't find anything decent. 80% of the examples are based on mnist or 32x32 images, and the other 20% are snippets which will work in theory but they don't show you their actual setup.<br>\nAnd I do like the estimator api and tf records, because it makes life easier, but when i want to upscale to larger images, i receive those struggles. And I also think that 720x1280 aren't the biggest  images....</p>\n<ul>\n<li>I also don't really know what happens intern in tf_estimator. when does it uses the cpu and gpu?<br>\nAnd what about those <code>Dataset.list_files()</code> - does this means that each images is an tf-records?<br>\nbecause now I store my while training set in one big tf-record...</li>\n</ul>", "body_text": "@wei-v-wang - mostly yes, when i downsize everything to black and white images, and size it to 32x32 pxls then I receive some results. But the thing is. I've the feeling that tensorflow is more like a bike from the IKEA, whereby you've too many spare parts. You can build a lot of things but actually you don't know if your basic bike can ride properly.\nWhat i'm really looking for is, a good (or even the best possible) template... (I even want to blog about it). But as it is, (And 1 month further), I can't find anything decent. 80% of the examples are based on mnist or 32x32 images, and the other 20% are snippets which will work in theory but they don't show you their actual setup.\nAnd I do like the estimator api and tf records, because it makes life easier, but when i want to upscale to larger images, i receive those struggles. And I also think that 720x1280 aren't the biggest  images....\n\nI also don't really know what happens intern in tf_estimator. when does it uses the cpu and gpu?\nAnd what about those Dataset.list_files() - does this means that each images is an tf-records?\nbecause now I store my while training set in one big tf-record...", "body": "@wei-v-wang - mostly yes, when i downsize everything to black and white images, and size it to 32x32 pxls then I receive some results. But the thing is. I've the feeling that tensorflow is more like a bike from the IKEA, whereby you've too many spare parts. You can build a lot of things but actually you don't know if your basic bike can ride properly. \r\nWhat i'm really looking for is, a good (or even the best possible) template... (I even want to blog about it). But as it is, (And 1 month further), I can't find anything decent. 80% of the examples are based on mnist or 32x32 images, and the other 20% are snippets which will work in theory but they don't show you their actual setup.\r\nAnd I do like the estimator api and tf records, because it makes life easier, but when i want to upscale to larger images, i receive those struggles. And I also think that 720x1280 aren't the biggest  images.... \r\n+ I also don't really know what happens intern in tf_estimator. when does it uses the cpu and gpu?\r\nAnd what about those `Dataset.list_files()` - does this means that each images is an tf-records?\r\nbecause now I store my while training set in one big tf-record... "}