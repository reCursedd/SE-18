{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/259565120", "html_url": "https://github.com/tensorflow/tensorflow/issues/5416#issuecomment-259565120", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5416", "id": 259565120, "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTU2NTEyMA==", "user": {"login": "raphtown", "id": 177576, "node_id": "MDQ6VXNlcjE3NzU3Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/177576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raphtown", "html_url": "https://github.com/raphtown", "followers_url": "https://api.github.com/users/raphtown/followers", "following_url": "https://api.github.com/users/raphtown/following{/other_user}", "gists_url": "https://api.github.com/users/raphtown/gists{/gist_id}", "starred_url": "https://api.github.com/users/raphtown/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raphtown/subscriptions", "organizations_url": "https://api.github.com/users/raphtown/orgs", "repos_url": "https://api.github.com/users/raphtown/repos", "events_url": "https://api.github.com/users/raphtown/events{/privacy}", "received_events_url": "https://api.github.com/users/raphtown/received_events", "type": "User", "site_admin": false}, "created_at": "2016-11-10T00:19:05Z", "updated_at": "2016-11-10T00:19:34Z", "author_association": "NONE", "body_html": "<p>Hello <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=192142\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mrry\">@mrry</a>, <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=11547801\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/prb12\">@prb12</a>, and thank you for taking a look into this!</p>\n<p>Varying the inter_op_parallelism_threads field in the ConfigProto doesn't seem to do much, except when I set it very high (e.g. 1000) and then more of the runs execute sequentially.</p>\n<p>Maybe this will help you debug the issue, but it seems like the number of CPU cores available has a direct impact on if the GPUs execute sequentially or in parallel (I am using the SLURM allocation system which lets me specify how many CPUs to give).  The results I gave in my original bug report were with 2 CPUs available total.  If I increase this amount to 4 CPUs, then the issue disappears.  If I decrease the amount to 1 CPU, then it seems that all runs execute sequentially (worsening the problem).</p>\n<p>Lastly, I also tested this with 0.9.0, which displayed similar issues.</p>", "body_text": "Hello @mrry, @prb12, and thank you for taking a look into this!\nVarying the inter_op_parallelism_threads field in the ConfigProto doesn't seem to do much, except when I set it very high (e.g. 1000) and then more of the runs execute sequentially.\nMaybe this will help you debug the issue, but it seems like the number of CPU cores available has a direct impact on if the GPUs execute sequentially or in parallel (I am using the SLURM allocation system which lets me specify how many CPUs to give).  The results I gave in my original bug report were with 2 CPUs available total.  If I increase this amount to 4 CPUs, then the issue disappears.  If I decrease the amount to 1 CPU, then it seems that all runs execute sequentially (worsening the problem).\nLastly, I also tested this with 0.9.0, which displayed similar issues.", "body": "Hello @mrry, @prb12, and thank you for taking a look into this!\n\nVarying the inter_op_parallelism_threads field in the ConfigProto doesn't seem to do much, except when I set it very high (e.g. 1000) and then more of the runs execute sequentially.\n\nMaybe this will help you debug the issue, but it seems like the number of CPU cores available has a direct impact on if the GPUs execute sequentially or in parallel (I am using the SLURM allocation system which lets me specify how many CPUs to give).  The results I gave in my original bug report were with 2 CPUs available total.  If I increase this amount to 4 CPUs, then the issue disappears.  If I decrease the amount to 1 CPU, then it seems that all runs execute sequentially (worsening the problem).\n\nLastly, I also tested this with 0.9.0, which displayed similar issues.\n"}