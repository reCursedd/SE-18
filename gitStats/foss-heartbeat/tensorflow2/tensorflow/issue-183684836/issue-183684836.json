{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5040", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5040/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5040/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5040/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/5040", "id": 183684836, "node_id": "MDU6SXNzdWUxODM2ODQ4MzY=", "number": 5040, "title": "possible bug in translate.py", "user": {"login": "chengiant", "id": 5179825, "node_id": "MDQ6VXNlcjUxNzk4MjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/5179825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chengiant", "html_url": "https://github.com/chengiant", "followers_url": "https://api.github.com/users/chengiant/followers", "following_url": "https://api.github.com/users/chengiant/following{/other_user}", "gists_url": "https://api.github.com/users/chengiant/gists{/gist_id}", "starred_url": "https://api.github.com/users/chengiant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chengiant/subscriptions", "organizations_url": "https://api.github.com/users/chengiant/orgs", "repos_url": "https://api.github.com/users/chengiant/repos", "events_url": "https://api.github.com/users/chengiant/events{/privacy}", "received_events_url": "https://api.github.com/users/chengiant/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-10-18T13:22:51Z", "updated_at": "2016-10-23T23:00:23Z", "closed_at": "2016-10-23T23:00:23Z", "author_association": "NONE", "body_html": "<p>Hi there,<br>\nI read translate.py (/tensorflow/models/rnn/translate/translate.py), and got confused on the implement of decoder:<br>\nstep1: when decode a new  input sentence, it is ok to chose a proper bucketId to do decode<br>\nstep2: tokenize the inputs(line244):<br>\nencoder_inputs, decoder_inputs, target_weights = model.get_batch({bucket_id: [(token_ids, [])]}, bucket_id)<br>\nstep3: model.step the same as training procedure did</p>\n<p>My question:<br>\nThe decoder_inputs are all zeros, except that the first one was assgined GO, Is this ok for a decoder? should't the LSTM's input be assgined with the previous LSTM's output, one by one?</p>", "body_text": "Hi there,\nI read translate.py (/tensorflow/models/rnn/translate/translate.py), and got confused on the implement of decoder:\nstep1: when decode a new  input sentence, it is ok to chose a proper bucketId to do decode\nstep2: tokenize the inputs(line244):\nencoder_inputs, decoder_inputs, target_weights = model.get_batch({bucket_id: [(token_ids, [])]}, bucket_id)\nstep3: model.step the same as training procedure did\nMy question:\nThe decoder_inputs are all zeros, except that the first one was assgined GO, Is this ok for a decoder? should't the LSTM's input be assgined with the previous LSTM's output, one by one?", "body": "Hi there,\nI read translate.py (/tensorflow/models/rnn/translate/translate.py), and got confused on the implement of decoder:\nstep1: when decode a new  input sentence, it is ok to chose a proper bucketId to do decode \nstep2: tokenize the inputs(line244): \n       encoder_inputs, decoder_inputs, target_weights = model.get_batch({bucket_id: [(token_ids, [])]}, bucket_id)\nstep3: model.step the same as training procedure did\n\nMy question:  \nThe decoder_inputs are all zeros, except that the first one was assgined GO, Is this ok for a decoder? should't the LSTM's input be assgined with the previous LSTM's output, one by one?\n"}