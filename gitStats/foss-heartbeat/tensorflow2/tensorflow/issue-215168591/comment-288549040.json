{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/288549040", "html_url": "https://github.com/tensorflow/tensorflow/issues/8517#issuecomment-288549040", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8517", "id": 288549040, "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODU0OTA0MA==", "user": {"login": "poxvoculi", "id": 15676913, "node_id": "MDQ6VXNlcjE1Njc2OTEz", "avatar_url": "https://avatars2.githubusercontent.com/u/15676913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poxvoculi", "html_url": "https://github.com/poxvoculi", "followers_url": "https://api.github.com/users/poxvoculi/followers", "following_url": "https://api.github.com/users/poxvoculi/following{/other_user}", "gists_url": "https://api.github.com/users/poxvoculi/gists{/gist_id}", "starred_url": "https://api.github.com/users/poxvoculi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poxvoculi/subscriptions", "organizations_url": "https://api.github.com/users/poxvoculi/orgs", "repos_url": "https://api.github.com/users/poxvoculi/repos", "events_url": "https://api.github.com/users/poxvoculi/events{/privacy}", "received_events_url": "https://api.github.com/users/poxvoculi/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-22T21:42:16Z", "updated_at": "2017-03-22T21:42:16Z", "author_association": "MEMBER", "body_html": "<p>In this case, the CUDA_ERROR_DEINITIALIZED error is probably a side effect of some other error that is causing a CUDA kernel to fail, and not a primary error.</p>\n<p>When a CUDA kernel fails in a way that can't just return an error status to the next driver call, the driver shuts down.  However, TensorFlow still has some CUDA Event polling threads running (one for each GPU), and these can very quickly field the CUDA_ERROR_DEINITIALIZED error when they can into the terminating driver, and then this error gets propagated back up to python and printed to the terminal.</p>\n<p>I can't reproduce your problem in a clean install in GCE, or building from source in GCE.  I tried pip installing the source you cit and got:</p>\n<p>tensorflow_gpu-1.0.1-cp34-cp34m-linux_x86_64.whl is not a supported wheel on this platform.</p>", "body_text": "In this case, the CUDA_ERROR_DEINITIALIZED error is probably a side effect of some other error that is causing a CUDA kernel to fail, and not a primary error.\nWhen a CUDA kernel fails in a way that can't just return an error status to the next driver call, the driver shuts down.  However, TensorFlow still has some CUDA Event polling threads running (one for each GPU), and these can very quickly field the CUDA_ERROR_DEINITIALIZED error when they can into the terminating driver, and then this error gets propagated back up to python and printed to the terminal.\nI can't reproduce your problem in a clean install in GCE, or building from source in GCE.  I tried pip installing the source you cit and got:\ntensorflow_gpu-1.0.1-cp34-cp34m-linux_x86_64.whl is not a supported wheel on this platform.", "body": "In this case, the CUDA_ERROR_DEINITIALIZED error is probably a side effect of some other error that is causing a CUDA kernel to fail, and not a primary error.\r\n\r\nWhen a CUDA kernel fails in a way that can't just return an error status to the next driver call, the driver shuts down.  However, TensorFlow still has some CUDA Event polling threads running (one for each GPU), and these can very quickly field the CUDA_ERROR_DEINITIALIZED error when they can into the terminating driver, and then this error gets propagated back up to python and printed to the terminal.\r\n\r\nI can't reproduce your problem in a clean install in GCE, or building from source in GCE.  I tried pip installing the source you cit and got:\r\n\r\ntensorflow_gpu-1.0.1-cp34-cp34m-linux_x86_64.whl is not a supported wheel on this platform.\r\n"}