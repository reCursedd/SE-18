{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8569", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8569/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8569/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8569/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/8569", "id": 215588836, "node_id": "MDU6SXNzdWUyMTU1ODg4MzY=", "number": 8569, "title": "Incorrect results from tfprof", "user": {"login": "bowang", "id": 425637, "node_id": "MDQ6VXNlcjQyNTYzNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/425637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bowang", "html_url": "https://github.com/bowang", "followers_url": "https://api.github.com/users/bowang/followers", "following_url": "https://api.github.com/users/bowang/following{/other_user}", "gists_url": "https://api.github.com/users/bowang/gists{/gist_id}", "starred_url": "https://api.github.com/users/bowang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bowang/subscriptions", "organizations_url": "https://api.github.com/users/bowang/orgs", "repos_url": "https://api.github.com/users/bowang/repos", "events_url": "https://api.github.com/users/bowang/events{/privacy}", "received_events_url": "https://api.github.com/users/bowang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2017-03-20T23:45:51Z", "updated_at": "2017-05-25T01:51:33Z", "closed_at": "2017-03-28T17:44:19Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I was profiling a few matrix multiplications with tfprof but couldn't make sense of the output. The per-op timing results are hard to believe to be true.</p>\n<p>Code:</p>\n<pre><code>import tensorflow as tf\nimport tensorflow.contrib.tfprof as tfprof\n\ndim = 6000\nn = 5\nwith tf.device('/gpu:0'):\n    X, Y, Z, _X, _Y = [], [], [], [], []\n    for i in range(n):\n        X.append(tf.random_uniform([dim, dim], 0, 10, name='X' + str(i)))\n        Y.append(tf.random_uniform([dim, dim], 0, 10, name='Y' + str(i)))\n        _X.append(tf.placeholder(dtype=tf.float32, shape=[dim, dim]))\n        _Y.append(tf.placeholder(dtype=tf.float32, shape=[dim, dim]))\n        Z.append(tf.matmul(_X[i], _Y[i]))\n    W = tf.ones([dim, dim])\n    for i in range(n):\n        W = tf.matmul(W, Z[i])\n\nsess = tf.Session(config=tf.ConfigProto(gpu_options=tf.GPUOptions(allow_growth=True)))\nsess.run(tf.global_variables_initializer())\nX_, Y_ = sess.run([X, Y])\n\nrun_metadata = tf.RunMetadata()\nrun_options = tf.RunOptions(trace_level=tf.RunOptions.FULL_TRACE)\nW_ = sess.run(W,\n              {_i: i_ for _i, i_ in zip(_X + _Y, X_ + Y_)},\n              options=run_options,\n              run_metadata=run_metadata)\n\ntfprof.model_analyzer.print_model_analysis(\n    tf.get_default_graph(),\n    run_meta=run_metadata,\n    tfprof_options=tfprof.model_analyzer.PRINT_ALL_TIMING_MEMORY)\n</code></pre>\n<p>Output:</p>\n<pre><code>_TFProfRoot (0B/1296.00MB, 0us/778.18ms)\n  MatMul (144.00MB/144.00MB, 162.51ms/162.51ms)\n  MatMul_1 (144.00MB/144.00MB, 145.03ms/145.03ms)\n  MatMul_2 (144.00MB/144.00MB, 145.07ms/145.07ms)\n  MatMul_3 (144.00MB/144.00MB, 162.69ms/162.69ms)\n  MatMul_4 (144.00MB/144.00MB, 162.57ms/162.57ms)\n  MatMul_5 (144.00MB/144.00MB, 241us/241us)\n  MatMul_6 (144.00MB/144.00MB, 21us/21us)\n  MatMul_7 (144.00MB/144.00MB, 16us/16us)\n  MatMul_8 (144.00MB/144.00MB, 10us/10us)\n  MatMul_9 (144.00MB/144.00MB, 19us/19us)\n  ones (144.00MB/144.00MB, 6us/6us)\n</code></pre>\n<p>Graph:<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://cloud.githubusercontent.com/assets/425637/24126577/0f5aafbe-0d8c-11e7-9b3e-92a5df5548cc.png\"><img src=\"https://cloud.githubusercontent.com/assets/425637/24126577/0f5aafbe-0d8c-11e7-9b3e-92a5df5548cc.png\" alt=\"image\" style=\"max-width:100%;\"></a></p>\n<p><strong>As shown in the profiling output, MatMul_[0-4] take 1,000 -10,000x longer than MatMul_[5-9]. However, they are all matrix multiplications of the same size!</strong></p>\n<h3>Environment info</h3>\n<p>Operating System: Ubuntu 14.04.5</p>\n<p>Installed version of CUDA and cuDNN:</p>\n<pre><code>-rw-r--r-- 1 root root 556000 Mar  1 12:58 /usr/local/cuda/lib64/libcudadevrt.a\nlrwxrwxrwx 1 root root     16 Mar  1 12:58 /usr/local/cuda/lib64/libcudart.so -&gt; libcudart.so.8.0\nlrwxrwxrwx 1 root root     19 Mar  1 12:58 /usr/local/cuda/lib64/libcudart.so.8.0 -&gt; libcudart.so.8.0.61\n-rwxr-xr-x 1 root root 415432 Mar  1 12:58 /usr/local/cuda/lib64/libcudart.so.8.0.61\n-rw-r--r-- 1 root root 775162 Mar  1 12:58 /usr/local/cuda/lib64/libcudart_static.a\n</code></pre>\n<p>If installed from binary pip package, provide:</p>\n<ol>\n<li>\n<p>A link to the pip package you installed:<br>\n<code>tensorflow_gpu-1.0.1-cp27-cp27mu-manylinux1_x86_64.whl</code></p>\n</li>\n<li>\n<p>The output from <code>python -c \"import tensorflow; print(tensorflow.__version__)\"</code>.<br>\n<code>1.0.1</code></p>\n</li>\n</ol>", "body_text": "I was profiling a few matrix multiplications with tfprof but couldn't make sense of the output. The per-op timing results are hard to believe to be true.\nCode:\nimport tensorflow as tf\nimport tensorflow.contrib.tfprof as tfprof\n\ndim = 6000\nn = 5\nwith tf.device('/gpu:0'):\n    X, Y, Z, _X, _Y = [], [], [], [], []\n    for i in range(n):\n        X.append(tf.random_uniform([dim, dim], 0, 10, name='X' + str(i)))\n        Y.append(tf.random_uniform([dim, dim], 0, 10, name='Y' + str(i)))\n        _X.append(tf.placeholder(dtype=tf.float32, shape=[dim, dim]))\n        _Y.append(tf.placeholder(dtype=tf.float32, shape=[dim, dim]))\n        Z.append(tf.matmul(_X[i], _Y[i]))\n    W = tf.ones([dim, dim])\n    for i in range(n):\n        W = tf.matmul(W, Z[i])\n\nsess = tf.Session(config=tf.ConfigProto(gpu_options=tf.GPUOptions(allow_growth=True)))\nsess.run(tf.global_variables_initializer())\nX_, Y_ = sess.run([X, Y])\n\nrun_metadata = tf.RunMetadata()\nrun_options = tf.RunOptions(trace_level=tf.RunOptions.FULL_TRACE)\nW_ = sess.run(W,\n              {_i: i_ for _i, i_ in zip(_X + _Y, X_ + Y_)},\n              options=run_options,\n              run_metadata=run_metadata)\n\ntfprof.model_analyzer.print_model_analysis(\n    tf.get_default_graph(),\n    run_meta=run_metadata,\n    tfprof_options=tfprof.model_analyzer.PRINT_ALL_TIMING_MEMORY)\n\nOutput:\n_TFProfRoot (0B/1296.00MB, 0us/778.18ms)\n  MatMul (144.00MB/144.00MB, 162.51ms/162.51ms)\n  MatMul_1 (144.00MB/144.00MB, 145.03ms/145.03ms)\n  MatMul_2 (144.00MB/144.00MB, 145.07ms/145.07ms)\n  MatMul_3 (144.00MB/144.00MB, 162.69ms/162.69ms)\n  MatMul_4 (144.00MB/144.00MB, 162.57ms/162.57ms)\n  MatMul_5 (144.00MB/144.00MB, 241us/241us)\n  MatMul_6 (144.00MB/144.00MB, 21us/21us)\n  MatMul_7 (144.00MB/144.00MB, 16us/16us)\n  MatMul_8 (144.00MB/144.00MB, 10us/10us)\n  MatMul_9 (144.00MB/144.00MB, 19us/19us)\n  ones (144.00MB/144.00MB, 6us/6us)\n\nGraph:\n\nAs shown in the profiling output, MatMul_[0-4] take 1,000 -10,000x longer than MatMul_[5-9]. However, they are all matrix multiplications of the same size!\nEnvironment info\nOperating System: Ubuntu 14.04.5\nInstalled version of CUDA and cuDNN:\n-rw-r--r-- 1 root root 556000 Mar  1 12:58 /usr/local/cuda/lib64/libcudadevrt.a\nlrwxrwxrwx 1 root root     16 Mar  1 12:58 /usr/local/cuda/lib64/libcudart.so -> libcudart.so.8.0\nlrwxrwxrwx 1 root root     19 Mar  1 12:58 /usr/local/cuda/lib64/libcudart.so.8.0 -> libcudart.so.8.0.61\n-rwxr-xr-x 1 root root 415432 Mar  1 12:58 /usr/local/cuda/lib64/libcudart.so.8.0.61\n-rw-r--r-- 1 root root 775162 Mar  1 12:58 /usr/local/cuda/lib64/libcudart_static.a\n\nIf installed from binary pip package, provide:\n\n\nA link to the pip package you installed:\ntensorflow_gpu-1.0.1-cp27-cp27mu-manylinux1_x86_64.whl\n\n\nThe output from python -c \"import tensorflow; print(tensorflow.__version__)\".\n1.0.1", "body": "I was profiling a few matrix multiplications with tfprof but couldn't make sense of the output. The per-op timing results are hard to believe to be true.\r\n\r\nCode:\r\n```\r\nimport tensorflow as tf\r\nimport tensorflow.contrib.tfprof as tfprof\r\n\r\ndim = 6000\r\nn = 5\r\nwith tf.device('/gpu:0'):\r\n    X, Y, Z, _X, _Y = [], [], [], [], []\r\n    for i in range(n):\r\n        X.append(tf.random_uniform([dim, dim], 0, 10, name='X' + str(i)))\r\n        Y.append(tf.random_uniform([dim, dim], 0, 10, name='Y' + str(i)))\r\n        _X.append(tf.placeholder(dtype=tf.float32, shape=[dim, dim]))\r\n        _Y.append(tf.placeholder(dtype=tf.float32, shape=[dim, dim]))\r\n        Z.append(tf.matmul(_X[i], _Y[i]))\r\n    W = tf.ones([dim, dim])\r\n    for i in range(n):\r\n        W = tf.matmul(W, Z[i])\r\n\r\nsess = tf.Session(config=tf.ConfigProto(gpu_options=tf.GPUOptions(allow_growth=True)))\r\nsess.run(tf.global_variables_initializer())\r\nX_, Y_ = sess.run([X, Y])\r\n\r\nrun_metadata = tf.RunMetadata()\r\nrun_options = tf.RunOptions(trace_level=tf.RunOptions.FULL_TRACE)\r\nW_ = sess.run(W,\r\n              {_i: i_ for _i, i_ in zip(_X + _Y, X_ + Y_)},\r\n              options=run_options,\r\n              run_metadata=run_metadata)\r\n\r\ntfprof.model_analyzer.print_model_analysis(\r\n    tf.get_default_graph(),\r\n    run_meta=run_metadata,\r\n    tfprof_options=tfprof.model_analyzer.PRINT_ALL_TIMING_MEMORY)\r\n```\r\n\r\nOutput:\r\n```\r\n_TFProfRoot (0B/1296.00MB, 0us/778.18ms)\r\n  MatMul (144.00MB/144.00MB, 162.51ms/162.51ms)\r\n  MatMul_1 (144.00MB/144.00MB, 145.03ms/145.03ms)\r\n  MatMul_2 (144.00MB/144.00MB, 145.07ms/145.07ms)\r\n  MatMul_3 (144.00MB/144.00MB, 162.69ms/162.69ms)\r\n  MatMul_4 (144.00MB/144.00MB, 162.57ms/162.57ms)\r\n  MatMul_5 (144.00MB/144.00MB, 241us/241us)\r\n  MatMul_6 (144.00MB/144.00MB, 21us/21us)\r\n  MatMul_7 (144.00MB/144.00MB, 16us/16us)\r\n  MatMul_8 (144.00MB/144.00MB, 10us/10us)\r\n  MatMul_9 (144.00MB/144.00MB, 19us/19us)\r\n  ones (144.00MB/144.00MB, 6us/6us)\r\n```\r\n\r\nGraph:\r\n![image](https://cloud.githubusercontent.com/assets/425637/24126577/0f5aafbe-0d8c-11e7-9b3e-92a5df5548cc.png)\r\n\r\n**As shown in the profiling output, MatMul_[0-4] take 1,000 -10,000x longer than MatMul_[5-9]. However, they are all matrix multiplications of the same size!**\r\n\r\n### Environment info\r\nOperating System: Ubuntu 14.04.5\r\n\r\nInstalled version of CUDA and cuDNN: \r\n```\r\n-rw-r--r-- 1 root root 556000 Mar  1 12:58 /usr/local/cuda/lib64/libcudadevrt.a\r\nlrwxrwxrwx 1 root root     16 Mar  1 12:58 /usr/local/cuda/lib64/libcudart.so -> libcudart.so.8.0\r\nlrwxrwxrwx 1 root root     19 Mar  1 12:58 /usr/local/cuda/lib64/libcudart.so.8.0 -> libcudart.so.8.0.61\r\n-rwxr-xr-x 1 root root 415432 Mar  1 12:58 /usr/local/cuda/lib64/libcudart.so.8.0.61\r\n-rw-r--r-- 1 root root 775162 Mar  1 12:58 /usr/local/cuda/lib64/libcudart_static.a\r\n```\r\n\r\nIf installed from binary pip package, provide:\r\n\r\n1. A link to the pip package you installed:\r\n`tensorflow_gpu-1.0.1-cp27-cp27mu-manylinux1_x86_64.whl`\r\n\r\n2. The output from `python -c \"import tensorflow; print(tensorflow.__version__)\"`.\r\n`1.0.1`\r\n"}