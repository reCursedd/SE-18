{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12051", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12051/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12051/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12051/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/12051", "id": 248134981, "node_id": "MDU6SXNzdWUyNDgxMzQ5ODE=", "number": 12051, "title": "an API to tell TF ABI", "user": {"login": "ppwwyyxx", "id": 1381301, "node_id": "MDQ6VXNlcjEzODEzMDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1381301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ppwwyyxx", "html_url": "https://github.com/ppwwyyxx", "followers_url": "https://api.github.com/users/ppwwyyxx/followers", "following_url": "https://api.github.com/users/ppwwyyxx/following{/other_user}", "gists_url": "https://api.github.com/users/ppwwyyxx/gists{/gist_id}", "starred_url": "https://api.github.com/users/ppwwyyxx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ppwwyyxx/subscriptions", "organizations_url": "https://api.github.com/users/ppwwyyxx/orgs", "repos_url": "https://api.github.com/users/ppwwyyxx/repos", "events_url": "https://api.github.com/users/ppwwyyxx/events{/privacy}", "received_events_url": "https://api.github.com/users/ppwwyyxx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}, {"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-08-04T22:53:17Z", "updated_at": "2017-11-01T15:05:25Z", "closed_at": "2017-11-01T15:05:25Z", "author_association": "CONTRIBUTOR", "body_html": "<p>This is a feature request.<br>\nTF pip packages might be built with different C++ ABI. The released binaries are built with old ABI. If a user manually compile it with gcc&gt;=5, the default is to use new CXX11 ABI (unless explicitly changed).</p>\n<p>As someone who wrote custom ops, this could cause trouble: the op has to be compiled with the same ABI, otherwise there will be issues like <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"236026412\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/10714\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/10714/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/10714\">#10714</a> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"220949023\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/9137\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/9137/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/9137\">#9137</a>. Therefore the user of my ops would need to be aware of what ABI he's using, and change the flags manually.</p>\n<p>I hope there is an API simply tells what ABI should be used when compiling user ops, similar to <code>tf.sysconfig.get_include()</code> which tells what path to include.</p>", "body_text": "This is a feature request.\nTF pip packages might be built with different C++ ABI. The released binaries are built with old ABI. If a user manually compile it with gcc>=5, the default is to use new CXX11 ABI (unless explicitly changed).\nAs someone who wrote custom ops, this could cause trouble: the op has to be compiled with the same ABI, otherwise there will be issues like #10714 #9137. Therefore the user of my ops would need to be aware of what ABI he's using, and change the flags manually.\nI hope there is an API simply tells what ABI should be used when compiling user ops, similar to tf.sysconfig.get_include() which tells what path to include.", "body": "This is a feature request.\r\nTF pip packages might be built with different C++ ABI. The released binaries are built with old ABI. If a user manually compile it with gcc>=5, the default is to use new CXX11 ABI (unless explicitly changed).\r\n\r\nAs someone who wrote custom ops, this could cause trouble: the op has to be compiled with the same ABI, otherwise there will be issues like #10714 #9137. Therefore the user of my ops would need to be aware of what ABI he's using, and change the flags manually.\r\n\r\nI hope there is an API simply tells what ABI should be used when compiling user ops, similar to `tf.sysconfig.get_include()` which tells what path to include."}