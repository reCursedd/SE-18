{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/226085470", "pull_request_review_id": 165825015, "id": 226085470, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNjA4NTQ3MA==", "diff_hunk": "@@ -0,0 +1,254 @@\n+#!/usr/bin/env bash\n+# Copyright 2018 The TensorFlow Authors. All Rights Reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ==============================================================================\n+\n+function usage {\n+  script_name=$0\n+  echo \"Usage:\"\n+  echo \"  $script_name [--image docker_image] [--num_containers num_of_containers]\"\n+  echo \"               [--deployment deployment_name] [--config_map config_map]\"\n+  echo \"               [--cp] [--src local_src_dir] [--dest container_dest_dir]\"\n+  echo \"               [--port container_ssh_port] [--hostnet] [--shared_volume]\"\n+  echo \"               [--delete] [--help]\"\n+  echo \"\"\n+  echo \"  Parameters:\"\n+  echo \"    image:          docker image used to create container.\"\n+  echo \"    num_containers: number of containers that will be launched.\"\n+  echo \"    deployment:     deployment name. (default: k8s-ml-deployment)\"\n+  echo \"    config_map:     config map name. (default: k8s-config-map)\"\n+  echo \"    cp:             upload file to all containers. (src and dest must\"\n+  echo \"                    be provided along with cp option)\"\n+  echo \"    src:            path to local source file. (used for cp option)\"\n+  echo \"    dest:           path to destination in container. (used for cp option)\"\n+  echo \"    port:           ssh port in container. Set ssh port (other than 22)\"\n+  echo \"                    when host network mode is enabled\"\n+  echo \"    hostnet:        enable host network mode. (default: disable)\"\n+  echo \"    shared_volume:  mount shared volume. (default: disable)\"\n+  echo \"    delete:         delete deployment and configmap.\"\n+  echo \"                    (default: k8s-ml-deployment and k8s-config-map)\"\n+  echo \"    help:           print usage.\"\n+}\n+\n+# Create temporary directory\n+TMP_DIR=$(mktemp -d)\n+\n+# Temporary k8s yaml file\n+YAML_TMP_FILE=\"${TMP_DIR}/k8s_ml.yaml\"\n+\n+# Temporary hostfile\n+HOST_FILE=\"${TMP_DIR}/hostfile\"\n+\n+# Docker image and number of containers\n+DOCKER_IMAGE=\"\"\n+NUM_CONTAINERS=0\n+\n+# Default ssh port\n+SSH_PORT=22\n+\n+# Default config map\n+CONFIG_MAP=\"k8s-config-map\"\n+\n+# Default Deployment\n+DEPLOYMENT=\"k8s-ml-deployment\"\n+\n+# Used for uploading file to all docker containers\n+CP=0\n+SRC=\"\"\n+DEST=\"\"\n+\n+# Python script to generate yaml file for k8s TensorFlow cluster\n+CUR_SCRIPT_DIR=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" && pwd)\"\n+K8S_GEN_ALLREDUCE_TF_YAML=\"${CUR_SCRIPT_DIR}/k8s_generate_yaml.py\"\n+\n+# Create or delete tensorflow cluster\n+# DELETE=0: Create cluster\n+# DELETE=1: Delete cluster\n+DELETE=0\n+\n+# Used to enable host network mode to achieve best performance\n+# USE_HOSTNET=0: Flannel network mode\n+# USE_HOSTNET=1: Host network mode\n+USE_HOSTNET=0\n+\n+# Used to mount shared volume\n+USE_SHARED_VOLUME=0\n+\n+if [[ $# -lt 1 ]]; then\n+  echo \"Error: illegal number of parameters\"\n+  usage\n+  exit 1\n+fi\n+\n+while [[ $# -ge 1 ]]; do\n+  key=\"$1\"\n+  case $key in\n+    --image)\n+      DOCKER_IMAGE=\"$2\"\n+      shift\n+      ;;\n+    --num_containers)\n+      NUM_CONTAINERS=\"$2\"\n+      shift\n+      ;;\n+    --config_map)\n+      CONFIG_MAP=\"$2\"\n+      shift\n+      ;;\n+    --deployment)\n+      DEPLOYMENT=\"$2\"\n+      shift\n+      ;;\n+    --cp)\n+      CP=1\n+      ;;\n+    --src)\n+      SRC=\"$2\"\n+      shift\n+      ;;\n+    --dest)\n+      DEST=\"$2\"\n+      shift\n+      ;;\n+    --port)\n+      SSH_PORT=\"$2\"\n+      shift\n+      ;;\n+    --hostnet)\n+      USE_HOSTNET=1\n+      ;;\n+    --shared_volume)\n+      USE_SHARED_VOLUME=1\n+      ;;\n+    --delete)\n+      DELETE=1\n+      ;;\n+    --help)\n+      usage\n+      exit 0\n+      ;;\n+    *)\n+      echo \"Unknown option: $key\"\n+      usage\n+      exit 1\n+      ;;\n+  esac\n+  shift\n+done\n+\n+function generate_yaml_file {\n+  if [[ ! -f ${K8S_GEN_ALLREDUCE_TF_YAML} ]]; then\n+    echo \"Error: can not find yaml-generating script ${K8S_GEN_ALLREDUCE_TF_YAML}\"\n+    exit 1\n+  fi\n+\n+  echo \"\"\n+  echo \"Generating k8s cluster yaml config file with the following settings\"\n+  echo \"  Docker image: ${DOCKER_IMAGE}\"\n+  echo \"  Number of containers: ${NUM_CONTAINERS}\"\n+  echo \"  Config map: ${CONFIG_MAP}\"\n+  echo \"  Deployment: ${DEPLOYMENT}\"\n+\n+  if [[ $USE_HOSTNET -eq 1 ]]; then\n+    echo \"  Host network mode: True\"\n+    echo \"  Container ssh port: ${SSH_PORT}\"\n+  fi\n+\n+  python ${K8S_GEN_ALLREDUCE_TF_YAML} \\\n+    --docker_image ${DOCKER_IMAGE} \\\n+    --num_containers ${NUM_CONTAINERS} \\\n+    --config_map ${CONFIG_MAP} \\\n+    --deployment ${DEPLOYMENT} \\\n+    --ssh_port ${SSH_PORT} \\\n+    --use_hostnet ${USE_HOSTNET} \\\n+    --use_shared_volume ${USE_SHARED_VOLUME} \\\n+    > ${YAML_TMP_FILE}\n+}\n+\n+# Note: this function remove the yaml file to make sure that the key automatically\n+# generated inside the container is not reused in other deployment\n+function remove_yaml_file {\n+  rm -rf ${YAML_TMP_FILE}\n+}\n+\n+function upload_file_to_all_containers {\n+  ${KUBECTL_BIN} get pods | grep ${DEPLOYMENT} \\\n+    | awk '{print $1}' | \\\n+    while read line;\n+    do\n+      echo \"Uploading $1 to $line:$2\"\n+      ${KUBECTL_BIN} cp $1 $line:$2\n+    done\n+}\n+\n+function generate_container_hostfile {\n+  # This line assumes that --output=wide prints the IP addresses\n+  # in the 6th column\n+  ${KUBECTL_BIN} get pods --output=wide | grep ${DEPLOYMENT} \\\n+      | awk '{print $6}' > ${HOST_FILE}\n+\n+  echo \"\"\n+  echo \"Containers hostfile locates at ${HOST_FILE}\"\n+}\n+\n+function launch_container {\n+  generate_yaml_file\n+  echo \"\"\n+  echo \"Launching k8s cluster...\"\n+  ${KUBECTL_BIN} create -f ${YAML_TMP_FILE}\n+  generate_container_hostfile\n+  remove_yaml_file\n+}\n+\n+function delete_deployment_configmap {\n+  ${KUBECTL_BIN} delete deployment ${DEPLOYMENT}\n+  ${KUBECTL_BIN} delete configmap ${CONFIG_MAP}\n+}\n+\n+# Check kubectl binary\n+KUBECTL_BIN=kubectl\n+if [[ ! -x \"$(command -v ${KUBECTL_BIN})\" ]]; then\n+  echo 'Error: cannot find kubectl binary'\n+  exit 1\n+fi\n+\n+if [[ $DELETE -eq 1 ]]; then\n+  echo \"Deleting deployment ${DEPLOYMENT} and config map ${CONFIG_MAP}...\"\n+  delete_deployment_configmap\n+elif [[ $CP -eq 1 || -n \"$SRC\" || -n \"$DEST\" ]] ; then\n+  if [[ \"$CP\" -eq 1 && -n \"$SRC\"  && -n \"$DEST\" ]]; then", "path": "tensorflow/tools/dist_test/scripts_allreduce/k8s_deploy_tensorflow.sh", "position": null, "original_position": 230, "commit_id": "8bd9c36c86b78b14c1138e0377d50fb1b4cc5c51", "original_commit_id": "ddfbc9e1b0aeda3fb10ea90246e14f50342fb399", "user": {"login": "congxu-ml", "id": 38994615, "node_id": "MDQ6VXNlcjM4OTk0NjE1", "avatar_url": "https://avatars1.githubusercontent.com/u/38994615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/congxu-ml", "html_url": "https://github.com/congxu-ml", "followers_url": "https://api.github.com/users/congxu-ml/followers", "following_url": "https://api.github.com/users/congxu-ml/following{/other_user}", "gists_url": "https://api.github.com/users/congxu-ml/gists{/gist_id}", "starred_url": "https://api.github.com/users/congxu-ml/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/congxu-ml/subscriptions", "organizations_url": "https://api.github.com/users/congxu-ml/orgs", "repos_url": "https://api.github.com/users/congxu-ml/repos", "events_url": "https://api.github.com/users/congxu-ml/events{/privacy}", "received_events_url": "https://api.github.com/users/congxu-ml/received_events", "type": "User", "site_admin": false}, "body": "Done", "created_at": "2018-10-17T20:37:03Z", "updated_at": "2018-10-17T22:37:14Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/22873#discussion_r226085470", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/22873", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/226085470"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/22873#discussion_r226085470"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/22873"}}, "body_html": "<p>Done</p>", "body_text": "Done", "in_reply_to_id": 226049233}