{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/350556241", "html_url": "https://github.com/tensorflow/tensorflow/issues/12598#issuecomment-350556241", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12598", "id": 350556241, "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDU1NjI0MQ==", "user": {"login": "pesser", "id": 2175508, "node_id": "MDQ6VXNlcjIxNzU1MDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2175508?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pesser", "html_url": "https://github.com/pesser", "followers_url": "https://api.github.com/users/pesser/followers", "following_url": "https://api.github.com/users/pesser/following{/other_user}", "gists_url": "https://api.github.com/users/pesser/gists{/gist_id}", "starred_url": "https://api.github.com/users/pesser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pesser/subscriptions", "organizations_url": "https://api.github.com/users/pesser/orgs", "repos_url": "https://api.github.com/users/pesser/repos", "events_url": "https://api.github.com/users/pesser/events{/privacy}", "received_events_url": "https://api.github.com/users/pesser/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-10T15:31:24Z", "updated_at": "2018-01-09T11:36:44Z", "author_association": "NONE", "body_html": "<p>Indeed, the problem seems to be with <code>_build_initializer_expr</code> and its exhaustive graph traversal. Just replacing this function with an identity function works fine for me so I'm not sure why it is needed.</p>\n<p>As a workaround without modifying tensorflow code, I found that one can use an arbitrary initializer for variables and then work with the node returned from an assign op during the initialization pass. This should automatically propagate dependencies and works without modification of tensorflow code.</p>\n<p>Edit: Example for PixelCNN <a href=\"https://github.com/pesser/pixel-cnn/blob/c625c9d033683bcb9a149245bc4b11951b4f3634/pixel_cnn_pp/nn.py#L190\">https://github.com/pesser/pixel-cnn/blob/c625c9d033683bcb9a149245bc4b11951b4f3634/pixel_cnn_pp/nn.py#L190</a></p>", "body_text": "Indeed, the problem seems to be with _build_initializer_expr and its exhaustive graph traversal. Just replacing this function with an identity function works fine for me so I'm not sure why it is needed.\nAs a workaround without modifying tensorflow code, I found that one can use an arbitrary initializer for variables and then work with the node returned from an assign op during the initialization pass. This should automatically propagate dependencies and works without modification of tensorflow code.\nEdit: Example for PixelCNN https://github.com/pesser/pixel-cnn/blob/c625c9d033683bcb9a149245bc4b11951b4f3634/pixel_cnn_pp/nn.py#L190", "body": "Indeed, the problem seems to be with `_build_initializer_expr` and its exhaustive graph traversal. Just replacing this function with an identity function works fine for me so I'm not sure why it is needed.\r\n\r\nAs a workaround without modifying tensorflow code, I found that one can use an arbitrary initializer for variables and then work with the node returned from an assign op during the initialization pass. This should automatically propagate dependencies and works without modification of tensorflow code. \r\n\r\nEdit: Example for PixelCNN https://github.com/pesser/pixel-cnn/blob/c625c9d033683bcb9a149245bc4b11951b4f3634/pixel_cnn_pp/nn.py#L190\r\n  "}