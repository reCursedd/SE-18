{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/387574953", "html_url": "https://github.com/tensorflow/tensorflow/issues/19108#issuecomment-387574953", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19108", "id": 387574953, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzU3NDk1Mw==", "user": {"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-08T23:36:25Z", "updated_at": "2018-05-08T23:36:25Z", "author_association": "MEMBER", "body_html": "<p>So you want the ability to set layer's weights as custom tensors?</p>\n<p>When we talk about \"layer's weights\", there are two components:</p>\n<ul>\n<li>Layer attributes such as <code>self.kernel</code>, <code>self.bias</code>.</li>\n<li>List of weights that are used in backpropagation (<code>self.trainable_weights</code>) or used for saving (<code>self.weights</code>).</li>\n</ul>\n<p>It seems you want to:</p>\n<ol>\n<li>Explicitly create your own weight variables</li>\n<li>Transform them through a formula</li>\n<li>Use the output of that as the <code>self.kernel</code> (for instance) attribute on your layer</li>\n<li>Still be able to update the original variables that you created, via backprop when training your model</li>\n</ol>\n<p>Is that right?</p>\n<p>It sounds like you should subclass the layer you're looking at (e.g. <code>Dense</code>) and write your own <code>build</code> methods (the method that creates the weights).</p>", "body_text": "So you want the ability to set layer's weights as custom tensors?\nWhen we talk about \"layer's weights\", there are two components:\n\nLayer attributes such as self.kernel, self.bias.\nList of weights that are used in backpropagation (self.trainable_weights) or used for saving (self.weights).\n\nIt seems you want to:\n\nExplicitly create your own weight variables\nTransform them through a formula\nUse the output of that as the self.kernel (for instance) attribute on your layer\nStill be able to update the original variables that you created, via backprop when training your model\n\nIs that right?\nIt sounds like you should subclass the layer you're looking at (e.g. Dense) and write your own build methods (the method that creates the weights).", "body": "So you want the ability to set layer's weights as custom tensors?\r\n\r\nWhen we talk about \"layer's weights\", there are two components:\r\n\r\n- Layer attributes such as `self.kernel`, `self.bias`.\r\n- List of weights that are used in backpropagation (`self.trainable_weights`) or used for saving (`self.weights`).\r\n\r\nIt seems you want to:\r\n\r\n1) Explicitly create your own weight variables\r\n2) Transform them through a formula\r\n3) Use the output of that as the `self.kernel` (for instance) attribute on your layer\r\n4) Still be able to update the original variables that you created, via backprop when training your model\r\n\r\nIs that right?\r\n\r\nIt sounds like you should subclass the layer you're looking at (e.g. `Dense`) and write your own `build` methods (the method that creates the weights).\r\n\r\n\r\n\r\n"}