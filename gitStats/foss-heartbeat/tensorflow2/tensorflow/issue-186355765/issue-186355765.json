{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5305", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5305/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5305/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5305/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/5305", "id": 186355765, "node_id": "MDU6SXNzdWUxODYzNTU3NjU=", "number": 5305, "title": "More programmatically configurable TensorBoard graph visualization", "user": {"login": "eamartin", "id": 287200, "node_id": "MDQ6VXNlcjI4NzIwMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/287200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eamartin", "html_url": "https://github.com/eamartin", "followers_url": "https://api.github.com/users/eamartin/followers", "following_url": "https://api.github.com/users/eamartin/following{/other_user}", "gists_url": "https://api.github.com/users/eamartin/gists{/gist_id}", "starred_url": "https://api.github.com/users/eamartin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eamartin/subscriptions", "organizations_url": "https://api.github.com/users/eamartin/orgs", "repos_url": "https://api.github.com/users/eamartin/repos", "events_url": "https://api.github.com/users/eamartin/events{/privacy}", "received_events_url": "https://api.github.com/users/eamartin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 284285184, "node_id": "MDU6TGFiZWwyODQyODUxODQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:tensorboard", "name": "comp:tensorboard", "color": "0052cc", "default": false}, {"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-10-31T18:08:24Z", "updated_at": "2017-06-16T20:09:46Z", "closed_at": "2017-06-16T20:09:46Z", "author_association": "NONE", "body_html": "<p>I'm repeatedly making small tweaks to graphs and visualizing them in TensorBoard.<br>\nHere are two feature requests for TensorBoard that would make this workflow significantly smoother:</p>\n<p>(1)<br>\nAllow the user to specify that a node should always be drawn in the main graph or as an auxiliary node.  Alternatively, add an option to draw all nodes in main graph.</p>\n<p>Currently, TensorBoard chooses to put nodes in a subgraph as auxiliary nodes (within the subgraph). Adding a node to the main graph consists of \"open subgraph, click auxiliary node to add to main graph\", which needs to be repeated for each auxiliary node to move because \"add to main graph\" collapses all subgraphs. This pain could also be partially alleviated by an option to \"Shift + Click\" to add/remove multiple nodes from the main graph at once.</p>\n<p>(2)<br>\nAllow the user to force edges to be drawn when both nodes are in the main graph.</p>\n<p>Example case:<br>\nLet op <code>X</code> be in the top level graph. Let <code>SG</code> be a subgraph and let <code>SG</code> contain 10 subgraphs <code>F_i</code> for <code>i=1,...,10</code> that all take <code>X</code> as input.<br>\nTensorBoard will draw an edge from <code>X</code> to <code>SG</code>, but each <code>F_i</code> will have it's dependence on <code>X</code> noted as an auxiliary input. There is no way to add <code>X</code> to the main graph because it is already in the main graph (but visualized as an aux input).<br>\nIt would nice for there to be a way for there to be one edge from <code>X</code> to <code>SG</code>, and then 10 edges connecting the entry point of <code>X</code> into <code>SG</code> with each of the <code>F_i</code>. Ideally this option would also have a programmatic interface or at least a default to set.</p>", "body_text": "I'm repeatedly making small tweaks to graphs and visualizing them in TensorBoard.\nHere are two feature requests for TensorBoard that would make this workflow significantly smoother:\n(1)\nAllow the user to specify that a node should always be drawn in the main graph or as an auxiliary node.  Alternatively, add an option to draw all nodes in main graph.\nCurrently, TensorBoard chooses to put nodes in a subgraph as auxiliary nodes (within the subgraph). Adding a node to the main graph consists of \"open subgraph, click auxiliary node to add to main graph\", which needs to be repeated for each auxiliary node to move because \"add to main graph\" collapses all subgraphs. This pain could also be partially alleviated by an option to \"Shift + Click\" to add/remove multiple nodes from the main graph at once.\n(2)\nAllow the user to force edges to be drawn when both nodes are in the main graph.\nExample case:\nLet op X be in the top level graph. Let SG be a subgraph and let SG contain 10 subgraphs F_i for i=1,...,10 that all take X as input.\nTensorBoard will draw an edge from X to SG, but each F_i will have it's dependence on X noted as an auxiliary input. There is no way to add X to the main graph because it is already in the main graph (but visualized as an aux input).\nIt would nice for there to be a way for there to be one edge from X to SG, and then 10 edges connecting the entry point of X into SG with each of the F_i. Ideally this option would also have a programmatic interface or at least a default to set.", "body": "I'm repeatedly making small tweaks to graphs and visualizing them in TensorBoard.\r\nHere are two feature requests for TensorBoard that would make this workflow significantly smoother:\r\n\r\n(1)\r\nAllow the user to specify that a node should always be drawn in the main graph or as an auxiliary node.  Alternatively, add an option to draw all nodes in main graph.\r\n\r\nCurrently, TensorBoard chooses to put nodes in a subgraph as auxiliary nodes (within the subgraph). Adding a node to the main graph consists of \"open subgraph, click auxiliary node to add to main graph\", which needs to be repeated for each auxiliary node to move because \"add to main graph\" collapses all subgraphs. This pain could also be partially alleviated by an option to \"Shift + Click\" to add/remove multiple nodes from the main graph at once.\r\n\r\n(2)\r\nAllow the user to force edges to be drawn when both nodes are in the main graph.\r\n\r\nExample case:\r\nLet op ``X`` be in the top level graph. Let ``SG`` be a subgraph and let ``SG`` contain 10 subgraphs ``F_i`` for ``i=1,...,10`` that all take ``X`` as input.\r\nTensorBoard will draw an edge from ``X`` to ``SG``, but each ``F_i`` will have it's dependence on ``X`` noted as an auxiliary input. There is no way to add ``X`` to the main graph because it is already in the main graph (but visualized as an aux input). \r\nIt would nice for there to be a way for there to be one edge from ``X`` to ``SG``, and then 10 edges connecting the entry point of ``X`` into ``SG`` with each of the ``F_i``. Ideally this option would also have a programmatic interface or at least a default to set."}