{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17056", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17056/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17056/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17056/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17056", "id": 297620671, "node_id": "MDU6SXNzdWUyOTc2MjA2NzE=", "number": 17056, "title": "tf.reduce_min([inf, nan]).eval() == inf, should be nan", "user": {"login": "girving", "id": 70511, "node_id": "MDQ6VXNlcjcwNTEx", "avatar_url": "https://avatars1.githubusercontent.com/u/70511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/girving", "html_url": "https://github.com/girving", "followers_url": "https://api.github.com/users/girving/followers", "following_url": "https://api.github.com/users/girving/following{/other_user}", "gists_url": "https://api.github.com/users/girving/gists{/gist_id}", "starred_url": "https://api.github.com/users/girving/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/girving/subscriptions", "organizations_url": "https://api.github.com/users/girving/orgs", "repos_url": "https://api.github.com/users/girving/repos", "events_url": "https://api.github.com/users/girving/events{/privacy}", "received_events_url": "https://api.github.com/users/girving/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 12, "created_at": "2018-02-15T22:32:23Z", "updated_at": "2018-11-20T13:26:28Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<h3>Describe the problem</h3>\n<p><code>tf.reduce_min</code> and <code>tf.reduce_max</code> do not propagate nans correctly.  E.g.,</p>\n<pre><code>&gt;&gt;&gt; tf.reduce_min([inf, nan]).eval()\ninf\n</code></pre>\n<p>but the correct answer (the one most useful for debugging) is <code>nan</code>.  This is presumably due to a backwards comparison, similar to the old <code>tf.nn.relu(nan) == 0</code> bug that <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=487667\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/alexalemi\">@alexalemi</a> found.</p>\n<h3>Source code / logs</h3>\n<p>Here's a colab illustrating the problem with TensorFlow 1.6.0-rc1: <a href=\"https://drive.google.com/file/d/1nDA0Q48PveBlx_D5Zurchbw8l7eczRSB/view?usp=sharing\" rel=\"nofollow\">https://drive.google.com/file/d/1nDA0Q48PveBlx_D5Zurchbw8l7eczRSB/view?usp=sharing</a></p>", "body_text": "Describe the problem\ntf.reduce_min and tf.reduce_max do not propagate nans correctly.  E.g.,\n>>> tf.reduce_min([inf, nan]).eval()\ninf\n\nbut the correct answer (the one most useful for debugging) is nan.  This is presumably due to a backwards comparison, similar to the old tf.nn.relu(nan) == 0 bug that @alexalemi found.\nSource code / logs\nHere's a colab illustrating the problem with TensorFlow 1.6.0-rc1: https://drive.google.com/file/d/1nDA0Q48PveBlx_D5Zurchbw8l7eczRSB/view?usp=sharing", "body": "### Describe the problem\r\n\r\n`tf.reduce_min` and `tf.reduce_max` do not propagate nans correctly.  E.g.,\r\n\r\n    >>> tf.reduce_min([inf, nan]).eval()\r\n    inf\r\n\r\nbut the correct answer (the one most useful for debugging) is `nan`.  This is presumably due to a backwards comparison, similar to the old `tf.nn.relu(nan) == 0` bug that @alexalemi found.\r\n\r\n### Source code / logs\r\nHere's a colab illustrating the problem with TensorFlow 1.6.0-rc1: https://drive.google.com/file/d/1nDA0Q48PveBlx_D5Zurchbw8l7eczRSB/view?usp=sharing"}