{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/359985253", "html_url": "https://github.com/tensorflow/tensorflow/issues/14850#issuecomment-359985253", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14850", "id": 359985253, "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTk4NTI1Mw==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-24T01:02:24Z", "updated_at": "2018-01-24T01:02:24Z", "author_association": "CONTRIBUTOR", "body_html": "<blockquote>\n<p>By the way, does current implementation have any retry logic for network communication?</p>\n</blockquote>\n<p>Yes, we use gRPC in \"non-fail-fast\" (or <a href=\"https://github.com/grpc/grpc/blob/master/doc/wait-for-ready.md\">\"wait-for-ready\"</a>) mode, which means that RPCs sent while in a transient failure state will be retried.</p>", "body_text": "By the way, does current implementation have any retry logic for network communication?\n\nYes, we use gRPC in \"non-fail-fast\" (or \"wait-for-ready\") mode, which means that RPCs sent while in a transient failure state will be retried.", "body": "> By the way, does current implementation have any retry logic for network communication?\r\n\r\nYes, we use gRPC in \"non-fail-fast\" (or [\"wait-for-ready\"](https://github.com/grpc/grpc/blob/master/doc/wait-for-ready.md)) mode, which means that RPCs sent while in a transient failure state will be retried."}