{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19750", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19750/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19750/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19750/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19750", "id": 329075600, "node_id": "MDU6SXNzdWUzMjkwNzU2MDA=", "number": 19750, "title": "Numerical errors in symmetric tensors lead to eventual instability", "user": {"login": "Zenome84", "id": 39647569, "node_id": "MDQ6VXNlcjM5NjQ3NTY5", "avatar_url": "https://avatars0.githubusercontent.com/u/39647569?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zenome84", "html_url": "https://github.com/Zenome84", "followers_url": "https://api.github.com/users/Zenome84/followers", "following_url": "https://api.github.com/users/Zenome84/following{/other_user}", "gists_url": "https://api.github.com/users/Zenome84/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zenome84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zenome84/subscriptions", "organizations_url": "https://api.github.com/users/Zenome84/orgs", "repos_url": "https://api.github.com/users/Zenome84/repos", "events_url": "https://api.github.com/users/Zenome84/events{/privacy}", "received_events_url": "https://api.github.com/users/Zenome84/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "rohan100jain", "id": 144114, "node_id": "MDQ6VXNlcjE0NDExNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/144114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rohan100jain", "html_url": "https://github.com/rohan100jain", "followers_url": "https://api.github.com/users/rohan100jain/followers", "following_url": "https://api.github.com/users/rohan100jain/following{/other_user}", "gists_url": "https://api.github.com/users/rohan100jain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rohan100jain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rohan100jain/subscriptions", "organizations_url": "https://api.github.com/users/rohan100jain/orgs", "repos_url": "https://api.github.com/users/rohan100jain/repos", "events_url": "https://api.github.com/users/rohan100jain/events{/privacy}", "received_events_url": "https://api.github.com/users/rohan100jain/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rohan100jain", "id": 144114, "node_id": "MDQ6VXNlcjE0NDExNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/144114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rohan100jain", "html_url": "https://github.com/rohan100jain", "followers_url": "https://api.github.com/users/rohan100jain/followers", "following_url": "https://api.github.com/users/rohan100jain/following{/other_user}", "gists_url": "https://api.github.com/users/rohan100jain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rohan100jain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rohan100jain/subscriptions", "organizations_url": "https://api.github.com/users/rohan100jain/orgs", "repos_url": "https://api.github.com/users/rohan100jain/repos", "events_url": "https://api.github.com/users/rohan100jain/events{/privacy}", "received_events_url": "https://api.github.com/users/rohan100jain/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-06-04T14:18:07Z", "updated_at": "2018-06-18T21:36:12Z", "closed_at": "2018-06-18T21:36:12Z", "author_association": "NONE", "body_html": "<p>I use <code>B = tf.matmul(A, A, transpose_b=True)</code> throughout my model, but I keep getting output tensors that are not symmetric. At first this is and unnoticeable amount, but after sufficient optimization steps calculations like <code>tf.linalg.logdet</code> and <code>tf.linalg.inv</code> blow up - not invertable or no cholesky decomposition.</p>\n<p>After many steps of testing, I noticed that this happened because the input tensors were not symmetric, when they should be.</p>\n<p>To test this out, I tried <code>tf.reduce_sum(tf.cast(B != tf.transpose(B), tf.int16))</code> to check at what point the data stops being symmetric, and this happens right at the first step.</p>\n<p>Is this a known issue? Any recommendations?</p>", "body_text": "I use B = tf.matmul(A, A, transpose_b=True) throughout my model, but I keep getting output tensors that are not symmetric. At first this is and unnoticeable amount, but after sufficient optimization steps calculations like tf.linalg.logdet and tf.linalg.inv blow up - not invertable or no cholesky decomposition.\nAfter many steps of testing, I noticed that this happened because the input tensors were not symmetric, when they should be.\nTo test this out, I tried tf.reduce_sum(tf.cast(B != tf.transpose(B), tf.int16)) to check at what point the data stops being symmetric, and this happens right at the first step.\nIs this a known issue? Any recommendations?", "body": "I use `B = tf.matmul(A, A, transpose_b=True)` throughout my model, but I keep getting output tensors that are not symmetric. At first this is and unnoticeable amount, but after sufficient optimization steps calculations like `tf.linalg.logdet` and `tf.linalg.inv` blow up - not invertable or no cholesky decomposition.\r\n\r\nAfter many steps of testing, I noticed that this happened because the input tensors were not symmetric, when they should be.\r\n\r\nTo test this out, I tried `tf.reduce_sum(tf.cast(B != tf.transpose(B), tf.int16))` to check at what point the data stops being symmetric, and this happens right at the first step.\r\n\r\nIs this a known issue? Any recommendations?"}