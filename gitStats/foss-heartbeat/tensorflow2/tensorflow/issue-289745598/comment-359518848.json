{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/359518848", "html_url": "https://github.com/tensorflow/tensorflow/issues/16226#issuecomment-359518848", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16226", "id": 359518848, "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTUxODg0OA==", "user": {"login": "yongtang", "id": 6932348, "node_id": "MDQ6VXNlcjY5MzIzNDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/6932348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yongtang", "html_url": "https://github.com/yongtang", "followers_url": "https://api.github.com/users/yongtang/followers", "following_url": "https://api.github.com/users/yongtang/following{/other_user}", "gists_url": "https://api.github.com/users/yongtang/gists{/gist_id}", "starred_url": "https://api.github.com/users/yongtang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yongtang/subscriptions", "organizations_url": "https://api.github.com/users/yongtang/orgs", "repos_url": "https://api.github.com/users/yongtang/repos", "events_url": "https://api.github.com/users/yongtang/events{/privacy}", "received_events_url": "https://api.github.com/users/yongtang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-22T18:28:25Z", "updated_at": "2018-01-22T18:32:27Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=35576504\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jswelch\">@jswelch</a> I am not very familiar with the HPC/Slurm so I might be ignorant in this topic. Though from docker's point of view, if you invoke your container with <code>--net=host</code>:</p>\n<pre><code>docker run --net=host busybusy ...\n</code></pre>\n<p>Then you essentially get the same network stack inside and outside of the container. There is no need to do a port mapping of container vs host any more with <code>--net=host</code>. You still have all the other benefits like process isolation, etc, though.</p>\n<p>With the same network stack, your current port management scheme will work like before. In other words, if Slurm already handled port management at the host level, then with <code>--net=host</code> it will \"just work\" I assume.</p>", "body_text": "@jswelch I am not very familiar with the HPC/Slurm so I might be ignorant in this topic. Though from docker's point of view, if you invoke your container with --net=host:\ndocker run --net=host busybusy ...\n\nThen you essentially get the same network stack inside and outside of the container. There is no need to do a port mapping of container vs host any more with --net=host. You still have all the other benefits like process isolation, etc, though.\nWith the same network stack, your current port management scheme will work like before. In other words, if Slurm already handled port management at the host level, then with --net=host it will \"just work\" I assume.", "body": "@jswelch I am not very familiar with the HPC/Slurm so I might be ignorant in this topic. Though from docker's point of view, if you invoke your container with `--net=host`:\r\n```\r\ndocker run --net=host busybusy ...\r\n```\r\n\r\nThen you essentially get the same network stack inside and outside of the container. There is no need to do a port mapping of container vs host any more with `--net=host`. You still have all the other benefits like process isolation, etc, though.\r\n\r\nWith the same network stack, your current port management scheme will work like before. In other words, if Slurm already handled port management at the host level, then with `--net=host` it will \"just work\" I assume."}