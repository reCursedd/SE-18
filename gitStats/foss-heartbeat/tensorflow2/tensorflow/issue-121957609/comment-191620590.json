{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/191620590", "html_url": "https://github.com/tensorflow/tensorflow/issues/504#issuecomment-191620590", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/504", "id": 191620590, "node_id": "MDEyOklzc3VlQ29tbWVudDE5MTYyMDU5MA==", "user": {"login": "savage7", "id": 971353, "node_id": "MDQ6VXNlcjk3MTM1Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/971353?v=4", "gravatar_id": "", "url": "https://api.github.com/users/savage7", "html_url": "https://github.com/savage7", "followers_url": "https://api.github.com/users/savage7/followers", "following_url": "https://api.github.com/users/savage7/following{/other_user}", "gists_url": "https://api.github.com/users/savage7/gists{/gist_id}", "starred_url": "https://api.github.com/users/savage7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/savage7/subscriptions", "organizations_url": "https://api.github.com/users/savage7/orgs", "repos_url": "https://api.github.com/users/savage7/repos", "events_url": "https://api.github.com/users/savage7/events{/privacy}", "received_events_url": "https://api.github.com/users/savage7/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-03T07:10:34Z", "updated_at": "2016-03-03T07:10:34Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=8906225\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/syed-ahmed\">@syed-ahmed</a><br>\nIs your model just loading or also correctly recognizing your trained images? I looked at the label_image code and there is a difference in mapping rgb-&gt;float values in the Android code which I had to change.<br>\nMy current model uses a not very good training set so I'm not 100% sure if the solution is correct...</p>\n<p>What I did to fix the mapping of the rgb-&gt; float values:</p>\n<p>Original label_image code after loading the Images:<br>\n<code>tensorflow::ops::Div(tensorflow::ops::Sub( input_tensor, tensorflow::ops::Const({g_image_mean}, b.opts()), b.opts()), tensorflow::ops::Const({g_image_mean}, b.opts()), b.opts().WithName(\"final_result\"));</code></p>\n<p>Original Android code snippet:<br>\n<code>input_tensor_mapped(0, i, j, 0) =  static_cast&lt;float&gt;(src-&gt;red) - g_image_mean;</code></p>\n<p>What is missing the the div by g_image_mean in mapping of the int-&gt;float rgb values:<br>\n<code>input_tensor_mapped(0, i, j, 0) =  (static_cast&lt;float&gt;(src-&gt;red) - g_image_mean)/g_image_mean;</code></p>\n<p>Now my images a recognized correctly.</p>", "body_text": "@syed-ahmed\nIs your model just loading or also correctly recognizing your trained images? I looked at the label_image code and there is a difference in mapping rgb->float values in the Android code which I had to change.\nMy current model uses a not very good training set so I'm not 100% sure if the solution is correct...\nWhat I did to fix the mapping of the rgb-> float values:\nOriginal label_image code after loading the Images:\ntensorflow::ops::Div(tensorflow::ops::Sub( input_tensor, tensorflow::ops::Const({g_image_mean}, b.opts()), b.opts()), tensorflow::ops::Const({g_image_mean}, b.opts()), b.opts().WithName(\"final_result\"));\nOriginal Android code snippet:\ninput_tensor_mapped(0, i, j, 0) =  static_cast<float>(src->red) - g_image_mean;\nWhat is missing the the div by g_image_mean in mapping of the int->float rgb values:\ninput_tensor_mapped(0, i, j, 0) =  (static_cast<float>(src->red) - g_image_mean)/g_image_mean;\nNow my images a recognized correctly.", "body": "@syed-ahmed \nIs your model just loading or also correctly recognizing your trained images? I looked at the label_image code and there is a difference in mapping rgb->float values in the Android code which I had to change. \nMy current model uses a not very good training set so I'm not 100% sure if the solution is correct...\n\nWhat I did to fix the mapping of the rgb-> float values:\n\nOriginal label_image code after loading the Images:\n`tensorflow::ops::Div(tensorflow::ops::Sub(\n                                              input_tensor, tensorflow::ops::Const({g_image_mean}, b.opts()), b.opts()),\n                         tensorflow::ops::Const({g_image_mean}, b.opts()),\n                         b.opts().WithName(\"final_result\"));`\n\nOriginal Android code snippet:\n `input_tensor_mapped(0, i, j, 0) =  static_cast<float>(src->red) - g_image_mean;`\n\nWhat is missing the the div by g_image_mean in mapping of the int->float rgb values:\n`input_tensor_mapped(0, i, j, 0) =  (static_cast<float>(src->red) - g_image_mean)/g_image_mean;`\n\nNow my images a recognized correctly.\n"}