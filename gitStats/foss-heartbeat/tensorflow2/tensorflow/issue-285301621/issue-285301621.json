{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15767", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15767/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15767/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15767/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15767", "id": 285301621, "node_id": "MDU6SXNzdWUyODUzMDE2MjE=", "number": 15767, "title": "Decode_raw_op_test failure on s390x", "user": {"login": "namrata-ibm", "id": 21953668, "node_id": "MDQ6VXNlcjIxOTUzNjY4", "avatar_url": "https://avatars3.githubusercontent.com/u/21953668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/namrata-ibm", "html_url": "https://github.com/namrata-ibm", "followers_url": "https://api.github.com/users/namrata-ibm/followers", "following_url": "https://api.github.com/users/namrata-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/namrata-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/namrata-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/namrata-ibm/subscriptions", "organizations_url": "https://api.github.com/users/namrata-ibm/orgs", "repos_url": "https://api.github.com/users/namrata-ibm/repos", "events_url": "https://api.github.com/users/namrata-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/namrata-ibm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586558, "node_id": "MDU6TGFiZWw0MDQ1ODY1NTg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:community%20support", "name": "stat:community support", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-01T11:06:24Z", "updated_at": "2018-09-13T18:57:19Z", "closed_at": "2018-09-13T18:57:19Z", "author_association": "CONTRIBUTOR", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: No</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: s390x Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: source</li>\n<li><strong>TensorFlow version (use command below)</strong>: v1.4.1</li>\n<li><strong>Python version</strong>: 2.7.12</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.7.0</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: gcc 5.4.0</li>\n<li><strong>CUDA/cuDNN version</strong>: NA</li>\n<li><strong>GPU model and memory</strong>: NA</li>\n<li><strong>Exact command to reproduce</strong>: bazel test -c opt //tensorflow/python/kernel_tests:decode_raw_op_test</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>Observing a failure in <a href=\"https://github.com/tensorflow/tensorflow/blob/v1.4.1/tensorflow/python/kernel_tests/decode_raw_op_test.py#L77\">testToFloat16</a> sub test, while running <code>decode_raw_op_test</code>. It seems that the <a href=\"https://github.com/tensorflow/tensorflow/blob/v1.4.1/tensorflow/core/kernels/decode_raw_op.cc#L80\">byte-reversal logic</a> for big endian is not needed for <strong>float16 input</strong>(and float16 output). While the other sub tests like int16/uint16 which have byte array input need byte-swapping for consistent results. What would be the best way to correct this?<br>\n<a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=16907534\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/rmlarsen\">@rmlarsen</a>, <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=10000148\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jiefangxuanyan\">@jiefangxuanyan</a> , Could you please share your thoughts on this?</p>\n<h3>Source code / logs</h3>\n<pre><code>FAIL: testToFloat16 (__main__.DecodeRawOpTest)\n----------------------------------------------------------------------\n.\nAssertionError:\nArrays are not equal\n(mismatch 100.0%)\n x: [repr failed for &lt;matrix&gt;: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()]\n y: array([[  3.576279e-06,   1.144409e-05,   1.156330e-05,   4.053116e-06]], dtype=float16)\n----------------------------------------------------------------------\nRan 7 tests in 0.089s\n\nFAILED (failures=1)\nnot equal where =  (array([0, 0, 0, 0]), array([0, 1, 2, 3]))\nnot equal lhs =  [[ 1. -2. -3.  4.]]\nnot equal rhs =  [  3.57627869e-06   1.14440918e-05   1.15633011e-05   4.05311584e-06]\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): No\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): s390x Ubuntu 16.04\nTensorFlow installed from (source or binary): source\nTensorFlow version (use command below): v1.4.1\nPython version: 2.7.12\nBazel version (if compiling from source): 0.7.0\nGCC/Compiler version (if compiling from source): gcc 5.4.0\nCUDA/cuDNN version: NA\nGPU model and memory: NA\nExact command to reproduce: bazel test -c opt //tensorflow/python/kernel_tests:decode_raw_op_test\n\nDescribe the problem\nObserving a failure in testToFloat16 sub test, while running decode_raw_op_test. It seems that the byte-reversal logic for big endian is not needed for float16 input(and float16 output). While the other sub tests like int16/uint16 which have byte array input need byte-swapping for consistent results. What would be the best way to correct this?\n@rmlarsen, @jiefangxuanyan , Could you please share your thoughts on this?\nSource code / logs\nFAIL: testToFloat16 (__main__.DecodeRawOpTest)\n----------------------------------------------------------------------\n.\nAssertionError:\nArrays are not equal\n(mismatch 100.0%)\n x: [repr failed for <matrix>: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()]\n y: array([[  3.576279e-06,   1.144409e-05,   1.156330e-05,   4.053116e-06]], dtype=float16)\n----------------------------------------------------------------------\nRan 7 tests in 0.089s\n\nFAILED (failures=1)\nnot equal where =  (array([0, 0, 0, 0]), array([0, 1, 2, 3]))\nnot equal lhs =  [[ 1. -2. -3.  4.]]\nnot equal rhs =  [  3.57627869e-06   1.14440918e-05   1.15633011e-05   4.05311584e-06]", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: s390x Ubuntu 16.04 \r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: v1.4.1\r\n- **Python version**: 2.7.12\r\n- **Bazel version (if compiling from source)**: 0.7.0\r\n- **GCC/Compiler version (if compiling from source)**: gcc 5.4.0\r\n- **CUDA/cuDNN version**: NA\r\n- **GPU model and memory**: NA\r\n- **Exact command to reproduce**: bazel test -c opt //tensorflow/python/kernel_tests:decode_raw_op_test\r\n\r\n### Describe the problem\r\nObserving a failure in [testToFloat16](https://github.com/tensorflow/tensorflow/blob/v1.4.1/tensorflow/python/kernel_tests/decode_raw_op_test.py#L77) sub test, while running `decode_raw_op_test`. It seems that the [byte-reversal logic](https://github.com/tensorflow/tensorflow/blob/v1.4.1/tensorflow/core/kernels/decode_raw_op.cc#L80) for big endian is not needed for **float16 input**(and float16 output). While the other sub tests like int16/uint16 which have byte array input need byte-swapping for consistent results. What would be the best way to correct this?\r\n@rmlarsen, @jiefangxuanyan , Could you please share your thoughts on this?\r\n \r\n### Source code / logs\r\n```\r\nFAIL: testToFloat16 (__main__.DecodeRawOpTest)\r\n----------------------------------------------------------------------\r\n.\r\nAssertionError:\r\nArrays are not equal\r\n(mismatch 100.0%)\r\n x: [repr failed for <matrix>: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()]\r\n y: array([[  3.576279e-06,   1.144409e-05,   1.156330e-05,   4.053116e-06]], dtype=float16)\r\n----------------------------------------------------------------------\r\nRan 7 tests in 0.089s\r\n\r\nFAILED (failures=1)\r\nnot equal where =  (array([0, 0, 0, 0]), array([0, 1, 2, 3]))\r\nnot equal lhs =  [[ 1. -2. -3.  4.]]\r\nnot equal rhs =  [  3.57627869e-06   1.14440918e-05   1.15633011e-05   4.05311584e-06]\r\n```\r\n"}