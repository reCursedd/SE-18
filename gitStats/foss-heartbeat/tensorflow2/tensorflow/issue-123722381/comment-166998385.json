{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/166998385", "html_url": "https://github.com/tensorflow/tensorflow/issues/608#issuecomment-166998385", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/608", "id": 166998385, "node_id": "MDEyOklzc3VlQ29tbWVudDE2Njk5ODM4NQ==", "user": {"login": "nryant", "id": 716377, "node_id": "MDQ6VXNlcjcxNjM3Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/716377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nryant", "html_url": "https://github.com/nryant", "followers_url": "https://api.github.com/users/nryant/followers", "following_url": "https://api.github.com/users/nryant/following{/other_user}", "gists_url": "https://api.github.com/users/nryant/gists{/gist_id}", "starred_url": "https://api.github.com/users/nryant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nryant/subscriptions", "organizations_url": "https://api.github.com/users/nryant/orgs", "repos_url": "https://api.github.com/users/nryant/repos", "events_url": "https://api.github.com/users/nryant/events{/privacy}", "received_events_url": "https://api.github.com/users/nryant/received_events", "type": "User", "site_admin": false}, "created_at": "2015-12-23T21:55:17Z", "updated_at": "2015-12-23T22:22:08Z", "author_association": "NONE", "body_html": "<p>I implemented this using a slightly modified version of <code>clip_by_norm</code>, which I applied to each weights variable. I then computed these normed weights variables at each update and then ran a loop across the variables calling <code>assign</code>. Unfortunately, calling <code>assign</code> within a Python loop at each step was a major performance bottleneck and I can't see any op in the API that would allow me to move this update into the graph.</p>", "body_text": "I implemented this using a slightly modified version of clip_by_norm, which I applied to each weights variable. I then computed these normed weights variables at each update and then ran a loop across the variables calling assign. Unfortunately, calling assign within a Python loop at each step was a major performance bottleneck and I can't see any op in the API that would allow me to move this update into the graph.", "body": "I implemented this using a slightly modified version of `clip_by_norm`, which I applied to each weights variable. I then computed these normed weights variables at each update and then ran a loop across the variables calling `assign`. Unfortunately, calling `assign` within a Python loop at each step was a major performance bottleneck and I can't see any op in the API that would allow me to move this update into the graph.\n"}