{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8493", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8493/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8493/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8493/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/8493", "id": 214946848, "node_id": "MDU6SXNzdWUyMTQ5NDY4NDg=", "number": 8493, "title": "Implementation of LSTMCell inconsistent with the refered paper.", "user": {"login": "chkap", "id": 7592610, "node_id": "MDQ6VXNlcjc1OTI2MTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/7592610?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chkap", "html_url": "https://github.com/chkap", "followers_url": "https://api.github.com/users/chkap/followers", "following_url": "https://api.github.com/users/chkap/following{/other_user}", "gists_url": "https://api.github.com/users/chkap/gists{/gist_id}", "starred_url": "https://api.github.com/users/chkap/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chkap/subscriptions", "organizations_url": "https://api.github.com/users/chkap/orgs", "repos_url": "https://api.github.com/users/chkap/repos", "events_url": "https://api.github.com/users/chkap/events{/privacy}", "received_events_url": "https://api.github.com/users/chkap/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-17T09:14:31Z", "updated_at": "2017-03-17T10:10:34Z", "closed_at": "2017-03-17T10:10:26Z", "author_association": "NONE", "body_html": "<p>This is an extended issue of the existing issue <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"214713876\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/8469\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/8469/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/8469\">#8469</a> .</p>\n<p>In the comments, it said that the LSTMCell is implemented based on this <a href=\"https://research.google.com/pubs/archive/43905.pdf\" rel=\"nofollow\">paper</a>.<br>\nIn this paper, the several gates are computed like <code>sum_i(args[i] * W[i])</code>. Here, the args are list of input and m_state. More details can be found in the mentioned paper.<br>\nHowever, in the code the gates are computed as:</p>\n<pre><code>      # i = input_gate, j = new_input, f = forget_gate, o = output_gate\n      lstm_matrix = _linear([inputs, m_prev], 4 * self._num_units, bias=True)\n      i, j, f, o = array_ops.split(\n          value=lstm_matrix, num_or_size_splits=4, axis=1)\n</code></pre>\n<p>Diving into the <code>_linear</code> function, showing that:</p>\n<pre><code>      res = math_ops.matmul(array_ops.concat(args, 1), weights)\n</code></pre>\n<p>The <code>args </code>are firstly concatenated, and then <code>matmul </code>with the weights. In this implementation, the parameter number of the weights is much larger than what said in the paper. This is totally different from what said in the paper.</p>", "body_text": "This is an extended issue of the existing issue #8469 .\nIn the comments, it said that the LSTMCell is implemented based on this paper.\nIn this paper, the several gates are computed like sum_i(args[i] * W[i]). Here, the args are list of input and m_state. More details can be found in the mentioned paper.\nHowever, in the code the gates are computed as:\n      # i = input_gate, j = new_input, f = forget_gate, o = output_gate\n      lstm_matrix = _linear([inputs, m_prev], 4 * self._num_units, bias=True)\n      i, j, f, o = array_ops.split(\n          value=lstm_matrix, num_or_size_splits=4, axis=1)\n\nDiving into the _linear function, showing that:\n      res = math_ops.matmul(array_ops.concat(args, 1), weights)\n\nThe args are firstly concatenated, and then matmul with the weights. In this implementation, the parameter number of the weights is much larger than what said in the paper. This is totally different from what said in the paper.", "body": "This is an extended issue of the existing issue #8469 .\r\n\r\nIn the comments, it said that the LSTMCell is implemented based on this [paper](https://research.google.com/pubs/archive/43905.pdf). \r\nIn this paper, the several gates are computed like `sum_i(args[i] * W[i])`. Here, the args are list of input and m_state. More details can be found in the mentioned paper.\r\nHowever, in the code the gates are computed as:\r\n```\r\n      # i = input_gate, j = new_input, f = forget_gate, o = output_gate\r\n      lstm_matrix = _linear([inputs, m_prev], 4 * self._num_units, bias=True)\r\n      i, j, f, o = array_ops.split(\r\n          value=lstm_matrix, num_or_size_splits=4, axis=1)\r\n```\r\nDiving into the `_linear` function, showing that:\r\n```\r\n      res = math_ops.matmul(array_ops.concat(args, 1), weights)\r\n```\r\nThe `args `are firstly concatenated, and then `matmul `with the weights. In this implementation, the parameter number of the weights is much larger than what said in the paper. This is totally different from what said in the paper.\r\n\r\n\r\n"}