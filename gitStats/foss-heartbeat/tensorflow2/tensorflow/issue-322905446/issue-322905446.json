{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19274", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19274/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19274/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19274/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19274", "id": 322905446, "node_id": "MDU6SXNzdWUzMjI5MDU0NDY=", "number": 19274, "title": "tf.matching_files fails when there is a file with wrong permissions in a subdirectory ", "user": {"login": "arogozhnikov", "id": 6318811, "node_id": "MDQ6VXNlcjYzMTg4MTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6318811?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arogozhnikov", "html_url": "https://github.com/arogozhnikov", "followers_url": "https://api.github.com/users/arogozhnikov/followers", "following_url": "https://api.github.com/users/arogozhnikov/following{/other_user}", "gists_url": "https://api.github.com/users/arogozhnikov/gists{/gist_id}", "starred_url": "https://api.github.com/users/arogozhnikov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arogozhnikov/subscriptions", "organizations_url": "https://api.github.com/users/arogozhnikov/orgs", "repos_url": "https://api.github.com/users/arogozhnikov/repos", "events_url": "https://api.github.com/users/arogozhnikov/events{/privacy}", "received_events_url": "https://api.github.com/users/arogozhnikov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "rohan100jain", "id": 144114, "node_id": "MDQ6VXNlcjE0NDExNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/144114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rohan100jain", "html_url": "https://github.com/rohan100jain", "followers_url": "https://api.github.com/users/rohan100jain/followers", "following_url": "https://api.github.com/users/rohan100jain/following{/other_user}", "gists_url": "https://api.github.com/users/rohan100jain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rohan100jain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rohan100jain/subscriptions", "organizations_url": "https://api.github.com/users/rohan100jain/orgs", "repos_url": "https://api.github.com/users/rohan100jain/repos", "events_url": "https://api.github.com/users/rohan100jain/events{/privacy}", "received_events_url": "https://api.github.com/users/rohan100jain/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rohan100jain", "id": 144114, "node_id": "MDQ6VXNlcjE0NDExNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/144114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rohan100jain", "html_url": "https://github.com/rohan100jain", "followers_url": "https://api.github.com/users/rohan100jain/followers", "following_url": "https://api.github.com/users/rohan100jain/following{/other_user}", "gists_url": "https://api.github.com/users/rohan100jain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rohan100jain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rohan100jain/subscriptions", "organizations_url": "https://api.github.com/users/rohan100jain/orgs", "repos_url": "https://api.github.com/users/rohan100jain/repos", "events_url": "https://api.github.com/users/rohan100jain/events{/privacy}", "received_events_url": "https://api.github.com/users/rohan100jain/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-05-14T17:14:09Z", "updated_at": "2018-10-16T00:08:33Z", "closed_at": "2018-10-16T00:08:33Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Ubuntu18.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: pip installed binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.8</li>\n<li><strong>Python version</strong>: 3.6</li>\n<li><strong>Bazel version (if compiling from source)</strong>: NA</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: NA</li>\n<li><strong>CUDA/cuDNN version</strong>: NA</li>\n<li><strong>GPU model and memory</strong>: NA</li>\n<li><strong>Exact command to reproduce</strong>: see below</li>\n</ul>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">from</span> tensorflow.python.framework.graph_util <span class=\"pl-k\">import</span> convert_variables_to_constants\n\ngraph <span class=\"pl-k\">=</span> tf.Graph()\n<span class=\"pl-k\">with</span> graph.as_default():\n    output1 <span class=\"pl-k\">=</span> tf.matching_files(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>/some/dir<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>output1<span class=\"pl-pds\">'</span></span>, )\n    sess <span class=\"pl-k\">=</span> tf.InteractiveSession(<span class=\"pl-v\">graph</span><span class=\"pl-k\">=</span>graph)\n    <span class=\"pl-c1\">print</span>(sess.run([output1]))</pre></div>\n<h3>Describe the problem</h3>\n<p>This simple script fails if some dir contains a file without read access somewhere in subfolders of <code>/some/dir</code>. So for instance if I don't have permission to read <code>/some/dir/subfolder/filebelongingtosomeoneelse</code>, the script fails (while I have permissions for subfolder).<br>\nStrange thing is that neither read access needed to know its filename, nor it is actually will be listed in the output (so it should be skipped during scanning).</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu18.04\nTensorFlow installed from (source or binary): pip installed binary\nTensorFlow version (use command below): 1.8\nPython version: 3.6\nBazel version (if compiling from source): NA\nGCC/Compiler version (if compiling from source): NA\nCUDA/cuDNN version: NA\nGPU model and memory: NA\nExact command to reproduce: see below\n\nimport tensorflow as tf\nfrom tensorflow.python.framework.graph_util import convert_variables_to_constants\n\ngraph = tf.Graph()\nwith graph.as_default():\n    output1 = tf.matching_files('/some/dir', name='output1', )\n    sess = tf.InteractiveSession(graph=graph)\n    print(sess.run([output1]))\nDescribe the problem\nThis simple script fails if some dir contains a file without read access somewhere in subfolders of /some/dir. So for instance if I don't have permission to read /some/dir/subfolder/filebelongingtosomeoneelse, the script fails (while I have permissions for subfolder).\nStrange thing is that neither read access needed to know its filename, nor it is actually will be listed in the output (so it should be skipped during scanning).", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu18.04\r\n- **TensorFlow installed from (source or binary)**: pip installed binary\r\n- **TensorFlow version (use command below)**: 1.8\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**: NA\r\n- **GCC/Compiler version (if compiling from source)**: NA\r\n- **CUDA/cuDNN version**: NA\r\n- **GPU model and memory**: NA\r\n- **Exact command to reproduce**: see below\r\n\r\n```python\r\nimport tensorflow as tf\r\nfrom tensorflow.python.framework.graph_util import convert_variables_to_constants\r\n\r\ngraph = tf.Graph()\r\nwith graph.as_default():\r\n    output1 = tf.matching_files('/some/dir', name='output1', )\r\n    sess = tf.InteractiveSession(graph=graph)\r\n    print(sess.run([output1]))\r\n```\r\n\r\n### Describe the problem\r\n\r\nThis simple script fails if some dir contains a file without read access somewhere in subfolders of `/some/dir`. So for instance if I don't have permission to read `/some/dir/subfolder/filebelongingtosomeoneelse`, the script fails (while I have permissions for subfolder). \r\nStrange thing is that neither read access needed to know its filename, nor it is actually will be listed in the output (so it should be skipped during scanning). \r\n\r\n"}