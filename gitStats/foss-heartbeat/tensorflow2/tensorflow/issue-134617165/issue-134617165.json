{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1171", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1171/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1171/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1171/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/1171", "id": 134617165, "node_id": "MDU6SXNzdWUxMzQ2MTcxNjU=", "number": 1171, "title": "Undefined reference to symbol 'ceil@@GLIBC_2.2.5' at build time", "user": {"login": "drgriffis", "id": 11445546, "node_id": "MDQ6VXNlcjExNDQ1NTQ2", "avatar_url": "https://avatars0.githubusercontent.com/u/11445546?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drgriffis", "html_url": "https://github.com/drgriffis", "followers_url": "https://api.github.com/users/drgriffis/followers", "following_url": "https://api.github.com/users/drgriffis/following{/other_user}", "gists_url": "https://api.github.com/users/drgriffis/gists{/gist_id}", "starred_url": "https://api.github.com/users/drgriffis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drgriffis/subscriptions", "organizations_url": "https://api.github.com/users/drgriffis/orgs", "repos_url": "https://api.github.com/users/drgriffis/repos", "events_url": "https://api.github.com/users/drgriffis/events{/privacy}", "received_events_url": "https://api.github.com/users/drgriffis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-02-18T15:50:03Z", "updated_at": "2016-11-11T17:24:42Z", "closed_at": "2016-06-09T16:14:16Z", "author_association": "NONE", "body_html": "<p>I'm working on compiling Tensorflow from source, using non-standard GCC/etc. installations.  Environment info: RHEL 6.7, GCC 5.2.1, Bazel 0.1.5.  I'm installing Tensorflow from HEAD (commit <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/f82ad3601d40a2078afcef6af40ad6ec75bd11c1/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/f82ad3601d40a2078afcef6af40ad6ec75bd11c1\"><tt>f82ad36</tt></a>).  I'm using a non-CUDA configuration.  I've followed the steps <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=16007223\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/sethbruder\">@sethbruder</a> suggests in his comment on <a href=\"https://github.com/bazelbuild/bazel/issues/649\" data-hovercard-type=\"issue\" data-hovercard-url=\"/bazelbuild/bazel/issues/649/hovercard\">bazel#649</a>, including copying the contents of <code>tools</code> from bazel into <code>tensorflow/tools/</code> and into <code>tensorflow/google/protobuf/tools/</code>.  This is possibly related to <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"118348052\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/332\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/332/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/332\">#332</a>, as I'm getting the same error, but at build time as opposed to API usage.</p>\n<p>I've tried to set up the relevant paths for my non-standard system resource install using the following settings before invoking bazel:</p>\n<div class=\"highlight highlight-source-shell\"><pre><span class=\"pl-k\">export</span> LDFLAGS=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>-Wl,-rpath,/opt/rh/devtoolset-4/root/usr/lib64 -lrt -lm<span class=\"pl-pds\">\"</span></span>\n<span class=\"pl-k\">export</span> CC=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/opt/rh/devtoolset-4/root/usr/bin/gcc<span class=\"pl-pds\">\"</span></span>\n<span class=\"pl-k\">export</span> CXX=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/opt/rh/devtoolset-4/root/usr/bin/g++<span class=\"pl-pds\">\"</span></span>\n<span class=\"pl-k\">export</span> JAVA_HOME=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/u/drspeech/opt/jdks/jdk1.8.0_25<span class=\"pl-pds\">\"</span></span>\n<span class=\"pl-k\">export</span> LD_LIBRARY_PATH=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/opt/rh/devtoolset-4/root/usr/lib:<span class=\"pl-smi\">${LD_LIBRARY_PATH}</span><span class=\"pl-pds\">\"</span></span>\n<span class=\"pl-k\">export</span> BAZEL_ARGS=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>--verbose_failures<span class=\"pl-pds\">\"</span></span>\n<span class=\"pl-k\">export</span> EXTRA_BAZEL_ARGS=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">${EXTRA_BAZEL_ARGS}</span> --linkopt=-Wl,-rpath,/opt/rh/devtoolset-4/root/usr/lib64<span class=\"pl-pds\">\"</span></span>\n<span class=\"pl-k\">export</span> EXTRA_BAZEL_ARGS=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">${EXTRA_BAZEL_ARGS}</span> --linkopt=-Wl,-rpath,/u/drspeech/opt/jdks/jdk1.8.0_25/lib<span class=\"pl-pds\">\"</span></span>\n<span class=\"pl-k\">export</span> EXTRA_BAZEL_ARGS=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">${EXTRA_BAZEL_ARGS}</span> --linkopt=-lz<span class=\"pl-pds\">\"</span></span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>export EXTRA_BAZEL_ARGS=\"${BAZEL_ARGS} --linkopt=-Wl,-rpath,/usr/local/cuda-7.0/lib64\"</span>\n<span class=\"pl-k\">export</span> PYTHON_MAJOR_VERSION=3\n<span class=\"pl-k\">export</span> PYTHON_BINARY=/u/drspeech/opt/python-3.5.1/bin/python3\n<span class=\"pl-k\">export</span> MYBAZEL=/u/drspeech/opt/bazel-0.1.5/0.1.5/bazel-0.1.5/output/bazel</pre></div>\n<p>(there may be some leftover settings; this is adapted from what I used for building bazel in <a href=\"https://github.com/bazelbuild/bazel/issues/925\" data-hovercard-type=\"issue\" data-hovercard-url=\"/bazelbuild/bazel/issues/925/hovercard\">bazel#925</a>)</p>\n<p>When I invoke bazel with</p>\n<div class=\"highlight highlight-source-shell\"><pre><span class=\"pl-smi\">${MYBAZEL}</span> build -c opt //tensorflow/tools/pip_package:build_pip_package</pre></div>\n<p>I get the following error output:</p>\n<pre><code>WARNING: Output base '/homes/2/griffisd/.cache/bazel/_bazel_griffisd/294e12ab714f8384c060bacb49311f55' is on NFS. This may lead to surprising failures and undetermined behavior.\nWARNING: Sandboxed execution is not supported on your system and thus hermeticity of actions cannot be guaranteed. See http://bazel.io/docs/bazel-user-manual.html#sandboxing for more information. You can turn off this warning via --ignore_unsupported_sandboxing.\n____Loading...\n____Found 1 target...\n____Building...\n____[1 / 12] Compiling google/protobuf/python/google/protobuf/pyext/descriptor.cc\n____[1 / 147] Compiling external/re2/re2/compile.cc\nERROR: /homes/0/drspeech/opt/tensorflow-0.6.0/0.7.0/tensorflow/google/protobuf/BUILD:272:1: Linking of rule '//google/protobuf:protoc' failed: gcc failed: error executing command \n  (cd /homes/2/griffisd/.cache/bazel/_bazel_griffisd/294e12ab714f8384c060bacb49311f55/tensorflow &amp;&amp; \\\n  exec env - \\\n  /opt/rh/devtoolset-4/root/usr/bin/gcc -o bazel-out/host/bin/google/protobuf/protoc -B/opt/rh/devtoolset-4/root/usr/bin/ -Wl,-z,relro,-z,now -no-canonical-prefixes -pass-exit-codes '-Wl,--build-id=md5' '-Wl,--hash-style=gnu' -Wl,-S -Wl,--gc-sections -Wl,@bazel-out/host/bin/google/protobuf/protoc-2.params): com.google.devtools.build.lib.shell.BadExitStatusException: Process exited with status 1: gcc failed: error executing command \n  (cd /homes/2/griffisd/.cache/bazel/_bazel_griffisd/294e12ab714f8384c060bacb49311f55/tensorflow &amp;&amp; \\\n  exec env - \\\n  /opt/rh/devtoolset-4/root/usr/bin/gcc -o bazel-out/host/bin/google/protobuf/protoc -B/opt/rh/devtoolset-4/root/usr/bin/ -Wl,-z,relro,-z,now -no-canonical-prefixes -pass-exit-codes '-Wl,--build-id=md5' '-Wl,--hash-style=gnu' -Wl,-S -Wl,--gc-sections -Wl,@bazel-out/host/bin/google/protobuf/protoc-2.params): com.google.devtools.build.lib.shell.BadExitStatusException: Process exited with status 1.\n/opt/rh/devtoolset-4/root/usr/bin/ld: /opt/rh/devtoolset-4/root/usr/lib/gcc/x86_64-redhat-linux/5.2.1/libstdc++_nonshared.a(hashtable_c++0x.o): undefined reference to symbol 'ceil@@GLIBC_2.2.5'\n//lib64/libm.so.6: error adding symbols: DSO missing from command line\ncollect2: error: ld returned 1 exit status\nTarget //tensorflow/tools/pip_package:build_pip_package failed to build\n____Elapsed time: 0.707s, Critical Path: 0.34s\n</code></pre>\n<p>It seems like I may be missing an \"-lm\" flag in the invocation to gcc to the protobuf target; I've tried including it in LDFLAGS as shown above, but it doesn't seem to be appearing in the gcc invocation.</p>", "body_text": "I'm working on compiling Tensorflow from source, using non-standard GCC/etc. installations.  Environment info: RHEL 6.7, GCC 5.2.1, Bazel 0.1.5.  I'm installing Tensorflow from HEAD (commit f82ad36).  I'm using a non-CUDA configuration.  I've followed the steps @sethbruder suggests in his comment on bazel#649, including copying the contents of tools from bazel into tensorflow/tools/ and into tensorflow/google/protobuf/tools/.  This is possibly related to #332, as I'm getting the same error, but at build time as opposed to API usage.\nI've tried to set up the relevant paths for my non-standard system resource install using the following settings before invoking bazel:\nexport LDFLAGS=\"-Wl,-rpath,/opt/rh/devtoolset-4/root/usr/lib64 -lrt -lm\"\nexport CC=\"/opt/rh/devtoolset-4/root/usr/bin/gcc\"\nexport CXX=\"/opt/rh/devtoolset-4/root/usr/bin/g++\"\nexport JAVA_HOME=\"/u/drspeech/opt/jdks/jdk1.8.0_25\"\nexport LD_LIBRARY_PATH=\"/opt/rh/devtoolset-4/root/usr/lib:${LD_LIBRARY_PATH}\"\nexport BAZEL_ARGS=\"--verbose_failures\"\nexport EXTRA_BAZEL_ARGS=\"${EXTRA_BAZEL_ARGS} --linkopt=-Wl,-rpath,/opt/rh/devtoolset-4/root/usr/lib64\"\nexport EXTRA_BAZEL_ARGS=\"${EXTRA_BAZEL_ARGS} --linkopt=-Wl,-rpath,/u/drspeech/opt/jdks/jdk1.8.0_25/lib\"\nexport EXTRA_BAZEL_ARGS=\"${EXTRA_BAZEL_ARGS} --linkopt=-lz\"\n#export EXTRA_BAZEL_ARGS=\"${BAZEL_ARGS} --linkopt=-Wl,-rpath,/usr/local/cuda-7.0/lib64\"\nexport PYTHON_MAJOR_VERSION=3\nexport PYTHON_BINARY=/u/drspeech/opt/python-3.5.1/bin/python3\nexport MYBAZEL=/u/drspeech/opt/bazel-0.1.5/0.1.5/bazel-0.1.5/output/bazel\n(there may be some leftover settings; this is adapted from what I used for building bazel in bazel#925)\nWhen I invoke bazel with\n${MYBAZEL} build -c opt //tensorflow/tools/pip_package:build_pip_package\nI get the following error output:\nWARNING: Output base '/homes/2/griffisd/.cache/bazel/_bazel_griffisd/294e12ab714f8384c060bacb49311f55' is on NFS. This may lead to surprising failures and undetermined behavior.\nWARNING: Sandboxed execution is not supported on your system and thus hermeticity of actions cannot be guaranteed. See http://bazel.io/docs/bazel-user-manual.html#sandboxing for more information. You can turn off this warning via --ignore_unsupported_sandboxing.\n____Loading...\n____Found 1 target...\n____Building...\n____[1 / 12] Compiling google/protobuf/python/google/protobuf/pyext/descriptor.cc\n____[1 / 147] Compiling external/re2/re2/compile.cc\nERROR: /homes/0/drspeech/opt/tensorflow-0.6.0/0.7.0/tensorflow/google/protobuf/BUILD:272:1: Linking of rule '//google/protobuf:protoc' failed: gcc failed: error executing command \n  (cd /homes/2/griffisd/.cache/bazel/_bazel_griffisd/294e12ab714f8384c060bacb49311f55/tensorflow && \\\n  exec env - \\\n  /opt/rh/devtoolset-4/root/usr/bin/gcc -o bazel-out/host/bin/google/protobuf/protoc -B/opt/rh/devtoolset-4/root/usr/bin/ -Wl,-z,relro,-z,now -no-canonical-prefixes -pass-exit-codes '-Wl,--build-id=md5' '-Wl,--hash-style=gnu' -Wl,-S -Wl,--gc-sections -Wl,@bazel-out/host/bin/google/protobuf/protoc-2.params): com.google.devtools.build.lib.shell.BadExitStatusException: Process exited with status 1: gcc failed: error executing command \n  (cd /homes/2/griffisd/.cache/bazel/_bazel_griffisd/294e12ab714f8384c060bacb49311f55/tensorflow && \\\n  exec env - \\\n  /opt/rh/devtoolset-4/root/usr/bin/gcc -o bazel-out/host/bin/google/protobuf/protoc -B/opt/rh/devtoolset-4/root/usr/bin/ -Wl,-z,relro,-z,now -no-canonical-prefixes -pass-exit-codes '-Wl,--build-id=md5' '-Wl,--hash-style=gnu' -Wl,-S -Wl,--gc-sections -Wl,@bazel-out/host/bin/google/protobuf/protoc-2.params): com.google.devtools.build.lib.shell.BadExitStatusException: Process exited with status 1.\n/opt/rh/devtoolset-4/root/usr/bin/ld: /opt/rh/devtoolset-4/root/usr/lib/gcc/x86_64-redhat-linux/5.2.1/libstdc++_nonshared.a(hashtable_c++0x.o): undefined reference to symbol 'ceil@@GLIBC_2.2.5'\n//lib64/libm.so.6: error adding symbols: DSO missing from command line\ncollect2: error: ld returned 1 exit status\nTarget //tensorflow/tools/pip_package:build_pip_package failed to build\n____Elapsed time: 0.707s, Critical Path: 0.34s\n\nIt seems like I may be missing an \"-lm\" flag in the invocation to gcc to the protobuf target; I've tried including it in LDFLAGS as shown above, but it doesn't seem to be appearing in the gcc invocation.", "body": "I'm working on compiling Tensorflow from source, using non-standard GCC/etc. installations.  Environment info: RHEL 6.7, GCC 5.2.1, Bazel 0.1.5.  I'm installing Tensorflow from HEAD (commit f82ad36).  I'm using a non-CUDA configuration.  I've followed the steps @sethbruder suggests in his comment on [bazel#649](https://github.com/bazelbuild/bazel/issues/649), including copying the contents of `tools` from bazel into `tensorflow/tools/` and into `tensorflow/google/protobuf/tools/`.  This is possibly related to #332, as I'm getting the same error, but at build time as opposed to API usage.\n\nI've tried to set up the relevant paths for my non-standard system resource install using the following settings before invoking bazel:\n\n``` sh\nexport LDFLAGS=\"-Wl,-rpath,/opt/rh/devtoolset-4/root/usr/lib64 -lrt -lm\"\nexport CC=\"/opt/rh/devtoolset-4/root/usr/bin/gcc\"\nexport CXX=\"/opt/rh/devtoolset-4/root/usr/bin/g++\"\nexport JAVA_HOME=\"/u/drspeech/opt/jdks/jdk1.8.0_25\"\nexport LD_LIBRARY_PATH=\"/opt/rh/devtoolset-4/root/usr/lib:${LD_LIBRARY_PATH}\"\nexport BAZEL_ARGS=\"--verbose_failures\"\nexport EXTRA_BAZEL_ARGS=\"${EXTRA_BAZEL_ARGS} --linkopt=-Wl,-rpath,/opt/rh/devtoolset-4/root/usr/lib64\"\nexport EXTRA_BAZEL_ARGS=\"${EXTRA_BAZEL_ARGS} --linkopt=-Wl,-rpath,/u/drspeech/opt/jdks/jdk1.8.0_25/lib\"\nexport EXTRA_BAZEL_ARGS=\"${EXTRA_BAZEL_ARGS} --linkopt=-lz\"\n#export EXTRA_BAZEL_ARGS=\"${BAZEL_ARGS} --linkopt=-Wl,-rpath,/usr/local/cuda-7.0/lib64\"\nexport PYTHON_MAJOR_VERSION=3\nexport PYTHON_BINARY=/u/drspeech/opt/python-3.5.1/bin/python3\nexport MYBAZEL=/u/drspeech/opt/bazel-0.1.5/0.1.5/bazel-0.1.5/output/bazel\n```\n\n(there may be some leftover settings; this is adapted from what I used for building bazel in [bazel#925](https://github.com/bazelbuild/bazel/issues/925))\n\nWhen I invoke bazel with\n\n``` sh\n${MYBAZEL} build -c opt //tensorflow/tools/pip_package:build_pip_package\n```\n\nI get the following error output:\n\n```\nWARNING: Output base '/homes/2/griffisd/.cache/bazel/_bazel_griffisd/294e12ab714f8384c060bacb49311f55' is on NFS. This may lead to surprising failures and undetermined behavior.\nWARNING: Sandboxed execution is not supported on your system and thus hermeticity of actions cannot be guaranteed. See http://bazel.io/docs/bazel-user-manual.html#sandboxing for more information. You can turn off this warning via --ignore_unsupported_sandboxing.\n____Loading...\n____Found 1 target...\n____Building...\n____[1 / 12] Compiling google/protobuf/python/google/protobuf/pyext/descriptor.cc\n____[1 / 147] Compiling external/re2/re2/compile.cc\nERROR: /homes/0/drspeech/opt/tensorflow-0.6.0/0.7.0/tensorflow/google/protobuf/BUILD:272:1: Linking of rule '//google/protobuf:protoc' failed: gcc failed: error executing command \n  (cd /homes/2/griffisd/.cache/bazel/_bazel_griffisd/294e12ab714f8384c060bacb49311f55/tensorflow && \\\n  exec env - \\\n  /opt/rh/devtoolset-4/root/usr/bin/gcc -o bazel-out/host/bin/google/protobuf/protoc -B/opt/rh/devtoolset-4/root/usr/bin/ -Wl,-z,relro,-z,now -no-canonical-prefixes -pass-exit-codes '-Wl,--build-id=md5' '-Wl,--hash-style=gnu' -Wl,-S -Wl,--gc-sections -Wl,@bazel-out/host/bin/google/protobuf/protoc-2.params): com.google.devtools.build.lib.shell.BadExitStatusException: Process exited with status 1: gcc failed: error executing command \n  (cd /homes/2/griffisd/.cache/bazel/_bazel_griffisd/294e12ab714f8384c060bacb49311f55/tensorflow && \\\n  exec env - \\\n  /opt/rh/devtoolset-4/root/usr/bin/gcc -o bazel-out/host/bin/google/protobuf/protoc -B/opt/rh/devtoolset-4/root/usr/bin/ -Wl,-z,relro,-z,now -no-canonical-prefixes -pass-exit-codes '-Wl,--build-id=md5' '-Wl,--hash-style=gnu' -Wl,-S -Wl,--gc-sections -Wl,@bazel-out/host/bin/google/protobuf/protoc-2.params): com.google.devtools.build.lib.shell.BadExitStatusException: Process exited with status 1.\n/opt/rh/devtoolset-4/root/usr/bin/ld: /opt/rh/devtoolset-4/root/usr/lib/gcc/x86_64-redhat-linux/5.2.1/libstdc++_nonshared.a(hashtable_c++0x.o): undefined reference to symbol 'ceil@@GLIBC_2.2.5'\n//lib64/libm.so.6: error adding symbols: DSO missing from command line\ncollect2: error: ld returned 1 exit status\nTarget //tensorflow/tools/pip_package:build_pip_package failed to build\n____Elapsed time: 0.707s, Critical Path: 0.34s\n```\n\nIt seems like I may be missing an \"-lm\" flag in the invocation to gcc to the protobuf target; I've tried including it in LDFLAGS as shown above, but it doesn't seem to be appearing in the gcc invocation.\n"}