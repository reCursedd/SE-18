{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11965", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11965/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11965/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11965/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/11965", "id": 247356255, "node_id": "MDU6SXNzdWUyNDczNTYyNTU=", "number": 11965, "title": "Moving average and moving variance in Batchnorm aren't updated", "user": {"login": "idofr", "id": 2036083, "node_id": "MDQ6VXNlcjIwMzYwODM=", "avatar_url": "https://avatars1.githubusercontent.com/u/2036083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/idofr", "html_url": "https://github.com/idofr", "followers_url": "https://api.github.com/users/idofr/followers", "following_url": "https://api.github.com/users/idofr/following{/other_user}", "gists_url": "https://api.github.com/users/idofr/gists{/gist_id}", "starred_url": "https://api.github.com/users/idofr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/idofr/subscriptions", "organizations_url": "https://api.github.com/users/idofr/orgs", "repos_url": "https://api.github.com/users/idofr/repos", "events_url": "https://api.github.com/users/idofr/events{/privacy}", "received_events_url": "https://api.github.com/users/idofr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586558, "node_id": "MDU6TGFiZWw0MDQ1ODY1NTg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:community%20support", "name": "stat:community support", "color": "f4b400", "default": false}, {"id": 473184161, "node_id": "MDU6TGFiZWw0NzMxODQxNjE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:support", "name": "type:support", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2017-08-02T11:22:20Z", "updated_at": "2018-06-06T03:45:47Z", "closed_at": "2017-08-03T21:02:37Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: No</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Windows 10</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: pip</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.2.1</li>\n<li><strong>Python version</strong>:  3.5.3</li>\n<li><strong>Bazel version (if compiling from source)</strong>: None</li>\n<li><strong>CUDA/cuDNN version</strong>: 8/5.1</li>\n<li><strong>GPU model and memory</strong>: GeForce 1080</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I'm using the slim wrapper, which in turn returns an instance of BatchNormalization from layers/normalisation.py. All paramers are set to default, except for scale which is set to True (i.e. adding the gamma scaler). After training, when looking the at the learned parameters, I notice that all the moving means in the network are still 0 while all the moving variances are 1, i.e. they weren't updated.</p>\n<p>Both variables don't show up in tf.trainable_variables() which might explain the lack of updates. However, since these are not actually learned but rather calculated, I'm not sure whether they would be updated by the optimiser.</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): No\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10\nTensorFlow installed from (source or binary): pip\nTensorFlow version (use command below): 1.2.1\nPython version:  3.5.3\nBazel version (if compiling from source): None\nCUDA/cuDNN version: 8/5.1\nGPU model and memory: GeForce 1080\nExact command to reproduce:\n\nDescribe the problem\nI'm using the slim wrapper, which in turn returns an instance of BatchNormalization from layers/normalisation.py. All paramers are set to default, except for scale which is set to True (i.e. adding the gamma scaler). After training, when looking the at the learned parameters, I notice that all the moving means in the network are still 0 while all the moving variances are 1, i.e. they weren't updated.\nBoth variables don't show up in tf.trainable_variables() which might explain the lack of updates. However, since these are not actually learned but rather calculated, I'm not sure whether they would be updated by the optimiser.", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 10\r\n- **TensorFlow installed from (source or binary)**: pip\r\n- **TensorFlow version (use command below)**: 1.2.1\r\n- **Python version**:  3.5.3\r\n- **Bazel version (if compiling from source)**: None\r\n- **CUDA/cuDNN version**: 8/5.1\r\n- **GPU model and memory**: GeForce 1080\r\n- **Exact command to reproduce**:\r\n\r\n### Describe the problem\r\nI'm using the slim wrapper, which in turn returns an instance of BatchNormalization from layers/normalisation.py. All paramers are set to default, except for scale which is set to True (i.e. adding the gamma scaler). After training, when looking the at the learned parameters, I notice that all the moving means in the network are still 0 while all the moving variances are 1, i.e. they weren't updated. \r\n\r\nBoth variables don't show up in tf.trainable_variables() which might explain the lack of updates. However, since these are not actually learned but rather calculated, I'm not sure whether they would be updated by the optimiser.\r\n"}