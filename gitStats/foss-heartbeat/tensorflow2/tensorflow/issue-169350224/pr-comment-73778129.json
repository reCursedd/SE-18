{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/73778129", "pull_request_review_id": null, "id": 73778129, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDczNzc4MTI5", "diff_hunk": "@@ -236,6 +236,110 @@ struct functor_traits<scalar_compose_op<Scalar, UnaryFunctor, BinaryFunctor>> {\n   };\n };\n \n+// tag for not complex number pass to tanh\n+struct tanh_not_complex_tag {};\n+// tag for complex number pass to tanh\n+struct tanh_complex_tag {};\n+// struct for tag dispatching\n+template <typename T>\n+struct tanh_dispatching_tag {\n+  typedef tanh_not_complex_tag type;\n+};\n+// struct specify for complex<double>\n+template <>\n+struct tanh_dispatching_tag<std::complex<double>> {\n+  typedef tanh_complex_tag type;\n+};\n+// struct specify for complex<float>\n+template <>\n+struct tanh_dispatching_tag<std::complex<float>> {\n+  typedef tanh_complex_tag type;\n+};\n+// compute tanh for complex number\n+template <typename T>\n+const T tanh_dispatching(tanh_complex_tag, const T& _x) {\n+  return numext::tanh(_x);\n+}\n+// compute tanh for not complex number\n+template <typename T>\n+const T tanh_dispatching(tanh_not_complex_tag, const T& _x) {", "path": "tensorflow/core/kernels/cwise_ops.h", "position": 30, "original_position": 30, "commit_id": "f6b8a8bdfe19cbaa229d39529cbc53f105b10b4f", "original_commit_id": "f6b8a8bdfe19cbaa229d39529cbc53f105b10b4f", "user": {"login": "benoitsteiner", "id": 6969686, "node_id": "MDQ6VXNlcjY5Njk2ODY=", "avatar_url": "https://avatars0.githubusercontent.com/u/6969686?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benoitsteiner", "html_url": "https://github.com/benoitsteiner", "followers_url": "https://api.github.com/users/benoitsteiner/followers", "following_url": "https://api.github.com/users/benoitsteiner/following{/other_user}", "gists_url": "https://api.github.com/users/benoitsteiner/gists{/gist_id}", "starred_url": "https://api.github.com/users/benoitsteiner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benoitsteiner/subscriptions", "organizations_url": "https://api.github.com/users/benoitsteiner/orgs", "repos_url": "https://api.github.com/users/benoitsteiner/repos", "events_url": "https://api.github.com/users/benoitsteiner/events{/privacy}", "received_events_url": "https://api.github.com/users/benoitsteiner/received_events", "type": "User", "site_admin": false}, "body": "It would be a simpler and we wouldn't loose the vectorized implementation if you instead fixed the eigen code to return consistent results with a without vectorization. How about updating https://bitbucket.org/eigen/eigen/src/c44a78394f3f9d9bfc75caad97feb14c4183c942/Eigen/src/Core/functors/UnaryFunctors.h?at=default&fileviewer=file-view-default#UnaryFunctors.h-501 to use the code you implemented in tanh_dispatching instead of relying on numext::tanh?\n", "created_at": "2016-08-06T01:23:17Z", "updated_at": "2016-08-06T01:24:04Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/3642#discussion_r73778129", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/3642", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/73778129"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/3642#discussion_r73778129"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/3642"}}, "body_html": "<p>It would be a simpler and we wouldn't loose the vectorized implementation if you instead fixed the eigen code to return consistent results with a without vectorization. How about updating <a href=\"https://bitbucket.org/eigen/eigen/src/c44a78394f3f9d9bfc75caad97feb14c4183c942/Eigen/src/Core/functors/UnaryFunctors.h?at=default&amp;fileviewer=file-view-default#UnaryFunctors.h-501\" rel=\"nofollow\">https://bitbucket.org/eigen/eigen/src/c44a78394f3f9d9bfc75caad97feb14c4183c942/Eigen/src/Core/functors/UnaryFunctors.h?at=default&amp;fileviewer=file-view-default#UnaryFunctors.h-501</a> to use the code you implemented in tanh_dispatching instead of relying on numext::tanh?</p>", "body_text": "It would be a simpler and we wouldn't loose the vectorized implementation if you instead fixed the eigen code to return consistent results with a without vectorization. How about updating https://bitbucket.org/eigen/eigen/src/c44a78394f3f9d9bfc75caad97feb14c4183c942/Eigen/src/Core/functors/UnaryFunctors.h?at=default&fileviewer=file-view-default#UnaryFunctors.h-501 to use the code you implemented in tanh_dispatching instead of relying on numext::tanh?"}