{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/137390825", "pull_request_review_id": 61051638, "id": 137390825, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzM5MDgyNQ==", "diff_hunk": "@@ -621,21 +634,36 @@ int64 EmitTranspose021Tiled(llvm_ir::IrArray input, llvm_ir::IrArray output,\n             builder->CreateICmpEQ(builder->getInt64(tile_size), tile_height)),\n         \"not_last_row\", builder);\n     builder->SetInsertPoint(if_not_last_row.true_block->getTerminator());\n-    for (int64 i = 0; i < tile_size; ++i) {\n-      emit_cp_element(offset_dim(index, builder->getInt64(i), /*dim=*/1),\n-                      builder->getInt64(i));\n+    for (int64 i = 0; i < tile_size; i += num_rows) {\n+      auto source_idx = offset_dim(index, builder->getInt64(i), /*dim=*/1);\n+      auto y_loc = builder->CreateAdd(builder->getInt64(i), logical_y);\n+      emit_cp_element(source_idx, y_loc);\n     }\n     builder->SetInsertPoint(if_not_last_row.false_block->getTerminator());\n     llvm_ir::LlvmIfData if_in_tile = llvm_ir::EmitIfThenElse(\n-        builder->CreateICmpULT(x, tile_width), \"in_tile\", builder);\n+        builder->CreateICmpULT(logical_x, tile_width), \"x_in_tile\", builder);\n     builder->SetInsertPoint(if_in_tile.true_block->getTerminator());\n-    auto loop = llvm_ir::ForLoop::EmitForLoop(loop_name, builder->getInt64(0),\n-                                              tile_height, builder->getInt64(1),\n-                                              builder);\n+\n+    // tile_height_upper_bound = cdiv(tile_height, num_rows) * num_rows", "path": "tensorflow/compiler/xla/service/gpu/ir_emitter_unnested.cc", "position": null, "original_position": 94, "commit_id": "6321dfd80696b9ba32534004872b16d7ae6d0288", "original_commit_id": "d37ad63ef5ea87455f0e848154c75c799f55920a", "user": {"login": "jlebar", "id": 150663, "node_id": "MDQ6VXNlcjE1MDY2Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/150663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlebar", "html_url": "https://github.com/jlebar", "followers_url": "https://api.github.com/users/jlebar/followers", "following_url": "https://api.github.com/users/jlebar/following{/other_user}", "gists_url": "https://api.github.com/users/jlebar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlebar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlebar/subscriptions", "organizations_url": "https://api.github.com/users/jlebar/orgs", "repos_url": "https://api.github.com/users/jlebar/repos", "events_url": "https://api.github.com/users/jlebar/events{/privacy}", "received_events_url": "https://api.github.com/users/jlebar/received_events", "type": "User", "site_admin": false}, "body": "Took me a while to figure out what \"cdiv\" meant.  Maybe write this as\r\n\r\n    ceil(tile_height / num_rows)\r\n\r\ninstead?", "created_at": "2017-09-06T21:08:10Z", "updated_at": "2017-09-07T16:39:36Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/12660#discussion_r137390825", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/12660", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/137390825"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/12660#discussion_r137390825"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/12660"}}, "body_html": "<p>Took me a while to figure out what \"cdiv\" meant.  Maybe write this as</p>\n<pre><code>ceil(tile_height / num_rows)\n</code></pre>\n<p>instead?</p>", "body_text": "Took me a while to figure out what \"cdiv\" meant.  Maybe write this as\nceil(tile_height / num_rows)\n\ninstead?"}