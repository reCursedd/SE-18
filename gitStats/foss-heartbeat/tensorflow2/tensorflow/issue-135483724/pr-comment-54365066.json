{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/54365066", "pull_request_review_id": null, "id": 54365066, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzY1MDY2", "diff_hunk": "@@ -0,0 +1,107 @@\n+package tensorflow_test\n+\n+import (\n+\t\"fmt\"\n+\t\"testing\"\n+\n+\t\"github.com/davecgh/go-spew/spew\"\n+\t\"github.com/golang/protobuf/proto\"\n+\t\"github.com/tensorflow/tensorflow\"\n+\ttf \"github.com/tensorflow/tensorflow/tensorflow/go\"\n+)\n+\n+var exampleGraph = `node {\n+  name: \"output1\"\n+  op: \"Const\"\n+  attr {\n+    key: \"dtype\"\n+    value {\n+      type: DT_STRING\n+    }\n+  }\n+  attr {\n+    key: \"value\"\n+    value {\n+      tensor {\n+        dtype: DT_STRING\n+        tensor_shape {\n+        }\n+        string_val: \"Hello, TensorFlow!\"\n+      }\n+    }\n+  }\n+}\n+node {\n+  name: \"Const_1\"\n+  op: \"Const\"\n+  attr {\n+    key: \"dtype\"\n+    value {\n+      type: DT_INT32\n+    }\n+  }\n+  attr {\n+    key: \"value\"\n+    value {\n+      tensor {\n+        dtype: DT_INT32\n+        tensor_shape {\n+        }\n+        int_val: 10\n+      }\n+    }\n+  }\n+}\n+node {\n+  name: \"Const_2\"\n+  op: \"Const\"\n+  attr {\n+    key: \"dtype\"\n+    value {\n+      type: DT_INT32\n+    }\n+  }\n+  attr {\n+    key: \"value\"\n+    value {\n+      tensor {\n+        dtype: DT_INT32\n+        tensor_shape {\n+        }\n+        int_val: 32\n+      }\n+    }\n+  }\n+}\n+node {\n+  name: \"output2\"\n+  op: \"Add\"\n+  input: \"Const_1\"\n+  input: \"Const_2\"\n+  attr {\n+    key: \"T\"\n+    value {\n+      type: DT_INT32\n+    }\n+  }\n+}\n+version: 5`\n+\n+func TestNewSession(t *testing.T) {\n+\tgraph := &tf.GraphDef{}\n+\tif err := proto.UnmarshalText(exampleGraph, graph); err != nil {\n+\t\tt.Fatal(err)\n+\t}\n+\ts, err := tensorflow.NewSession()\n+\tif err := s.ExtendGraph(graph); err != nil {\n+\t\tt.Fatal(err)\n+\t}\n+\toutput, err := s.Run(nil, []string{\"output1\", \"output2\"}, nil)\n+\tif err != nil {\n+\t\tt.Fatal(err)\n+\t}\n+\tfmt.Println(output)\n+\tfor _, out := range output {", "path": "tensorflow_test.go", "position": 104, "original_position": 104, "commit_id": "f3361c4e7ff987a1897c9d2e9e1b8d9211bdabdc", "original_commit_id": "a9a4363464bb52f3a3577d08474bafefadf1691d", "user": {"login": "tmc", "id": 3977, "node_id": "MDQ6VXNlcjM5Nzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/3977?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmc", "html_url": "https://github.com/tmc", "followers_url": "https://api.github.com/users/tmc/followers", "following_url": "https://api.github.com/users/tmc/following{/other_user}", "gists_url": "https://api.github.com/users/tmc/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmc/subscriptions", "organizations_url": "https://api.github.com/users/tmc/orgs", "repos_url": "https://api.github.com/users/tmc/repos", "events_url": "https://api.github.com/users/tmc/events{/privacy}", "received_events_url": "https://api.github.com/users/tmc/received_events", "type": "User", "site_admin": false}, "body": "Yes I agree. This work was really just a quick push to show that the approach was functional and this is a prime example. \n", "created_at": "2016-02-29T02:55:11Z", "updated_at": "2016-02-29T03:41:48Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/1237#discussion_r54365066", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/1237", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/54365066"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/1237#discussion_r54365066"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/1237"}}, "body_html": "<p>Yes I agree. This work was really just a quick push to show that the approach was functional and this is a prime example.</p>", "body_text": "Yes I agree. This work was really just a quick push to show that the approach was functional and this is a prime example."}