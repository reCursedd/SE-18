{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19507", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19507/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19507/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19507/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19507", "id": 325830887, "node_id": "MDU6SXNzdWUzMjU4MzA4ODc=", "number": 19507, "title": "Eager metrics not saving as summaries", "user": {"login": "Threynaud", "id": 13488732, "node_id": "MDQ6VXNlcjEzNDg4NzMy", "avatar_url": "https://avatars1.githubusercontent.com/u/13488732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Threynaud", "html_url": "https://github.com/Threynaud", "followers_url": "https://api.github.com/users/Threynaud/followers", "following_url": "https://api.github.com/users/Threynaud/following{/other_user}", "gists_url": "https://api.github.com/users/Threynaud/gists{/gist_id}", "starred_url": "https://api.github.com/users/Threynaud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Threynaud/subscriptions", "organizations_url": "https://api.github.com/users/Threynaud/orgs", "repos_url": "https://api.github.com/users/Threynaud/repos", "events_url": "https://api.github.com/users/Threynaud/events{/privacy}", "received_events_url": "https://api.github.com/users/Threynaud/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-05-23T18:52:47Z", "updated_at": "2018-06-15T07:13:38Z", "closed_at": "2018-05-24T15:18:48Z", "author_association": "NONE", "body_html": "<p>I am writing a piece of tf.eager code on the Iris dataset and I'm facing issues when trying to save <code>Mean</code> and <code>Accuracy</code> as summaries. Here is the piece of code I am using:</p>\n<pre><code>def evaluate(model, iterator, logdir=None):\n    avg_loss = tfe.metrics.Mean('loss')\n    accuracy = tfe.metrics.Accuracy('accuracy')\n\n    for inputs, labels in iterator:\n        avg_loss(sce(model, inputs, labels))\n        accuracy(tf.argmax(model(inputs), axis=1, output_type=tf.int64),\n                 tf.argmax(labels, axis=1))\n    print(f\"Dev set: Average loss: {avg_loss.result()},\\\n    Accuracy: {100 * accuracy.result()}\\n\")\n    with tf.contrib.summary.always_record_summaries():\n        tf.contrib.summary.scalar('loss', avg_loss.result())\n        tf.contrib.summary.scalar('accuracy', accuracy.result())\n</code></pre>\n<p>This is almost a copy from the MNIST Eager tutorial (line 82).<br>\nThe print statement is working great but when it gets into the <code>with</code> block I get:</p>\n<pre><code>File \"./iris.py\", line 131, in train_iris_model\n    logdir=logdir, summary_freq=summary_freq)\n  File \"./iris.py\", line 98, in fit\n    evaluate(model, dev_iterator, logdir=logdir)\n  File \"./iris.py\", line 61, in evaluate\n    Accuracy: {100 * accuracy.result()}\\n\")\n  File \"/Users/thms/.virtualenvs/unbabel3/lib/python3.6/site-packages/tensorflow/contrib/eager/python/metrics_impl.py\", line 341, in result\n    t = self.numer / self.denom\nAttributeError: 'Mean' object has no attribute 'numer'\n</code></pre>\n<p>If I understand correctly it means that is is trying to call <code>.result()</code> on an unitialized <code>Mean</code> object but I don't get why. Is this normal behaviour?</p>\n<p>Full code can be found <a href=\"https://github.com/Threynaud/tf-deep-learning/blob/master/tensorflow/tf-eager/iris/iris.py\">here</a> and run with <code>./iris.py</code></p>\n<hr>\n<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Mac OS High Sierra</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: Binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.8</li>\n<li><strong>Python version</strong>: 3.6.5</li>\n</ul>", "body_text": "I am writing a piece of tf.eager code on the Iris dataset and I'm facing issues when trying to save Mean and Accuracy as summaries. Here is the piece of code I am using:\ndef evaluate(model, iterator, logdir=None):\n    avg_loss = tfe.metrics.Mean('loss')\n    accuracy = tfe.metrics.Accuracy('accuracy')\n\n    for inputs, labels in iterator:\n        avg_loss(sce(model, inputs, labels))\n        accuracy(tf.argmax(model(inputs), axis=1, output_type=tf.int64),\n                 tf.argmax(labels, axis=1))\n    print(f\"Dev set: Average loss: {avg_loss.result()},\\\n    Accuracy: {100 * accuracy.result()}\\n\")\n    with tf.contrib.summary.always_record_summaries():\n        tf.contrib.summary.scalar('loss', avg_loss.result())\n        tf.contrib.summary.scalar('accuracy', accuracy.result())\n\nThis is almost a copy from the MNIST Eager tutorial (line 82).\nThe print statement is working great but when it gets into the with block I get:\nFile \"./iris.py\", line 131, in train_iris_model\n    logdir=logdir, summary_freq=summary_freq)\n  File \"./iris.py\", line 98, in fit\n    evaluate(model, dev_iterator, logdir=logdir)\n  File \"./iris.py\", line 61, in evaluate\n    Accuracy: {100 * accuracy.result()}\\n\")\n  File \"/Users/thms/.virtualenvs/unbabel3/lib/python3.6/site-packages/tensorflow/contrib/eager/python/metrics_impl.py\", line 341, in result\n    t = self.numer / self.denom\nAttributeError: 'Mean' object has no attribute 'numer'\n\nIf I understand correctly it means that is is trying to call .result() on an unitialized Mean object but I don't get why. Is this normal behaviour?\nFull code can be found here and run with ./iris.py\n\nSystem information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Mac OS High Sierra\nTensorFlow installed from (source or binary): Binary\nTensorFlow version (use command below): 1.8\nPython version: 3.6.5", "body": "I am writing a piece of tf.eager code on the Iris dataset and I'm facing issues when trying to save `Mean` and `Accuracy` as summaries. Here is the piece of code I am using:\r\n```\r\ndef evaluate(model, iterator, logdir=None):\r\n    avg_loss = tfe.metrics.Mean('loss')\r\n    accuracy = tfe.metrics.Accuracy('accuracy')\r\n\r\n    for inputs, labels in iterator:\r\n        avg_loss(sce(model, inputs, labels))\r\n        accuracy(tf.argmax(model(inputs), axis=1, output_type=tf.int64),\r\n                 tf.argmax(labels, axis=1))\r\n    print(f\"Dev set: Average loss: {avg_loss.result()},\\\r\n    Accuracy: {100 * accuracy.result()}\\n\")\r\n    with tf.contrib.summary.always_record_summaries():\r\n        tf.contrib.summary.scalar('loss', avg_loss.result())\r\n        tf.contrib.summary.scalar('accuracy', accuracy.result())\r\n```\r\n\r\nThis is almost a copy from the MNIST Eager tutorial (line 82).\r\nThe print statement is working great but when it gets into the `with` block I get:\r\n```\r\nFile \"./iris.py\", line 131, in train_iris_model\r\n    logdir=logdir, summary_freq=summary_freq)\r\n  File \"./iris.py\", line 98, in fit\r\n    evaluate(model, dev_iterator, logdir=logdir)\r\n  File \"./iris.py\", line 61, in evaluate\r\n    Accuracy: {100 * accuracy.result()}\\n\")\r\n  File \"/Users/thms/.virtualenvs/unbabel3/lib/python3.6/site-packages/tensorflow/contrib/eager/python/metrics_impl.py\", line 341, in result\r\n    t = self.numer / self.denom\r\nAttributeError: 'Mean' object has no attribute 'numer'\r\n```\r\n\r\nIf I understand correctly it means that is is trying to call `.result()` on an unitialized `Mean` object but I don't get why. Is this normal behaviour?\r\n\r\nFull code can be found [here](https://github.com/Threynaud/tf-deep-learning/blob/master/tensorflow/tf-eager/iris/iris.py) and run with `./iris.py`\r\n\r\n------------------------\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Mac OS High Sierra\r\n- **TensorFlow installed from (source or binary)**: Binary\r\n- **TensorFlow version (use command below)**: 1.8\r\n- **Python version**: 3.6.5"}