{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19310", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19310/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19310/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19310/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19310", "id": 323469025, "node_id": "MDU6SXNzdWUzMjM0NjkwMjU=", "number": 19310, "title": "What packages I should use to build my Relationship advisor algorithm?", "user": {"login": "harishankards", "id": 5006693, "node_id": "MDQ6VXNlcjUwMDY2OTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/5006693?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harishankards", "html_url": "https://github.com/harishankards", "followers_url": "https://api.github.com/users/harishankards/followers", "following_url": "https://api.github.com/users/harishankards/following{/other_user}", "gists_url": "https://api.github.com/users/harishankards/gists{/gist_id}", "starred_url": "https://api.github.com/users/harishankards/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harishankards/subscriptions", "organizations_url": "https://api.github.com/users/harishankards/orgs", "repos_url": "https://api.github.com/users/harishankards/repos", "events_url": "https://api.github.com/users/harishankards/events{/privacy}", "received_events_url": "https://api.github.com/users/harishankards/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "rohan100jain", "id": 144114, "node_id": "MDQ6VXNlcjE0NDExNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/144114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rohan100jain", "html_url": "https://github.com/rohan100jain", "followers_url": "https://api.github.com/users/rohan100jain/followers", "following_url": "https://api.github.com/users/rohan100jain/following{/other_user}", "gists_url": "https://api.github.com/users/rohan100jain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rohan100jain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rohan100jain/subscriptions", "organizations_url": "https://api.github.com/users/rohan100jain/orgs", "repos_url": "https://api.github.com/users/rohan100jain/repos", "events_url": "https://api.github.com/users/rohan100jain/events{/privacy}", "received_events_url": "https://api.github.com/users/rohan100jain/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rohan100jain", "id": 144114, "node_id": "MDQ6VXNlcjE0NDExNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/144114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rohan100jain", "html_url": "https://github.com/rohan100jain", "followers_url": "https://api.github.com/users/rohan100jain/followers", "following_url": "https://api.github.com/users/rohan100jain/following{/other_user}", "gists_url": "https://api.github.com/users/rohan100jain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rohan100jain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rohan100jain/subscriptions", "organizations_url": "https://api.github.com/users/rohan100jain/orgs", "repos_url": "https://api.github.com/users/rohan100jain/repos", "events_url": "https://api.github.com/users/rohan100jain/events{/privacy}", "received_events_url": "https://api.github.com/users/rohan100jain/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-05-16T04:57:40Z", "updated_at": "2018-06-18T22:49:58Z", "closed_at": "2018-06-18T22:49:57Z", "author_association": "NONE", "body_html": "<p>Hey guys,</p>\n<p>Good day!</p>\n<p>I'm trying to build a Relationship advisor using Machine Learning.</p>\n<p><strong>Project Description:</strong> The system will be presented to the couples who are going to be in a relationship / going to apply divorce / going to marry. They will be asked a set of questions by the system about their habits, lifestyle, behaviour etc., Based on the answers provided by both of them, the system will evaluate them and tell them whether they are made for each other or not based on the percentage of matching between them.</p>\n<p>In case, if the couples are going to apply divorce, the system will analyse them and also suggest some ways to the couples to solve their problem. If not, it will tell them to apply divorce so that they could lead a happier life separately.</p>\n<p><strong>Query:</strong> So, the above description explains what I want to build.<br>\nPlease suggest some packages inside tensorflow through which I can achieve the system I want.</p>", "body_text": "Hey guys,\nGood day!\nI'm trying to build a Relationship advisor using Machine Learning.\nProject Description: The system will be presented to the couples who are going to be in a relationship / going to apply divorce / going to marry. They will be asked a set of questions by the system about their habits, lifestyle, behaviour etc., Based on the answers provided by both of them, the system will evaluate them and tell them whether they are made for each other or not based on the percentage of matching between them.\nIn case, if the couples are going to apply divorce, the system will analyse them and also suggest some ways to the couples to solve their problem. If not, it will tell them to apply divorce so that they could lead a happier life separately.\nQuery: So, the above description explains what I want to build.\nPlease suggest some packages inside tensorflow through which I can achieve the system I want.", "body": "Hey guys,\r\n\r\nGood day!\r\n\r\nI'm trying to build a Relationship advisor using Machine Learning. \r\n\r\n**Project Description:** The system will be presented to the couples who are going to be in a relationship / going to apply divorce / going to marry. They will be asked a set of questions by the system about their habits, lifestyle, behaviour etc., Based on the answers provided by both of them, the system will evaluate them and tell them whether they are made for each other or not based on the percentage of matching between them.\r\n\r\nIn case, if the couples are going to apply divorce, the system will analyse them and also suggest some ways to the couples to solve their problem. If not, it will tell them to apply divorce so that they could lead a happier life separately.\r\n\r\n**Query:** So, the above description explains what I want to build. \r\nPlease suggest some packages inside tensorflow through which I can achieve the system I want.\r\n"}