{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/158384942", "pull_request_review_id": 85183601, "id": 158384942, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1ODM4NDk0Mg==", "diff_hunk": "@@ -33,26 +21,94 @@ tf_proto_library_cc(\n     ],\n )\n \n-load(\"//tensorflow:tensorflow.bzl\", \"tf_custom_op_library\")\n-load(\"//tensorflow:tensorflow.bzl\", \"tf_py_test\")\n+load(\n+    \"//tensorflow:tensorflow.bzl\",\n+    \"tf_custom_op_py_library\",\n+    \"tf_custom_op_library\",\n+    \"tf_gen_op_wrapper_py\",\n+    \"tf_gen_op_libs\",\n+    \"tf_kernel_library\",\n+    \"tf_py_test\",\n+)\n \n tf_custom_op_library(\n-    name = \"mpi_collectives.so\",\n+    name = \"python/ops/_mpi_ops.so\",\n     srcs = [\n-        \"mpi_ops.cc\",\n-        \"ring.cc\",\n-        \"ring.h\",\n+        \"kernels/mpi_ops.cc\",\n+        \"kernels/ring.cc\",\n+        \"kernels/ring.h\",\n+        \"ops/mpi_ops.cc\",\n     ],\n     gpu_srcs = [\n-        \"ring.cu.cc\",\n-        \"ring.h\",\n+        \"kernels/ring.cu.cc\",\n+        \"kernels/ring.h\",\n     ],\n     deps = [\n         \":mpi_message_proto_cc\",\n+        \"//tensorflow/core:lib_internal\",", "path": "tensorflow/contrib/mpi_collectives/BUILD", "position": null, "original_position": 55, "commit_id": "b339eab14fcc6fbb99721b0e55bbf7dc683226ae", "original_commit_id": "4c253207e85027a6fa19d35c11a5eafccda871ee", "user": {"login": "allenlavoie", "id": 3731025, "node_id": "MDQ6VXNlcjM3MzEwMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3731025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/allenlavoie", "html_url": "https://github.com/allenlavoie", "followers_url": "https://api.github.com/users/allenlavoie/followers", "following_url": "https://api.github.com/users/allenlavoie/following{/other_user}", "gists_url": "https://api.github.com/users/allenlavoie/gists{/gist_id}", "starred_url": "https://api.github.com/users/allenlavoie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/allenlavoie/subscriptions", "organizations_url": "https://api.github.com/users/allenlavoie/orgs", "repos_url": "https://api.github.com/users/allenlavoie/repos", "events_url": "https://api.github.com/users/allenlavoie/events{/privacy}", "received_events_url": "https://api.github.com/users/allenlavoie/received_events", "type": "User", "site_admin": false}, "body": "So this is (only) to pick up tf_additional_mpi_lib_defines()? Would it help if we added a defines or a copts field to [tf_custom_op_library](https://github.com/tensorflow/tensorflow/blob/d409f79cb29df6091cb3ee2c80f6b2bd826950e5/tensorflow/tensorflow.bzl#L1218)? Otherwise I'm fine with this, or I suppose you could create a separate `cc_library` rule with just the `defines=` if you wanted to avoid depending on the whole `lib_internal` rule.\r\n\r\nOne advantage of having your own defines= rule would be protection from people (e.g. me) ham-fistedly removing the define you're relying on from lib_internal. This was the main (only?) issue after the RTLD_GLOBAL removal, correct?", "created_at": "2017-12-21T21:41:16Z", "updated_at": "2017-12-21T22:24:19Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/15534#discussion_r158384942", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/15534", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/158384942"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/15534#discussion_r158384942"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/15534"}}, "body_html": "<p>So this is (only) to pick up tf_additional_mpi_lib_defines()? Would it help if we added a defines or a copts field to <a href=\"https://github.com/tensorflow/tensorflow/blob/d409f79cb29df6091cb3ee2c80f6b2bd826950e5/tensorflow/tensorflow.bzl#L1218\">tf_custom_op_library</a>? Otherwise I'm fine with this, or I suppose you could create a separate <code>cc_library</code> rule with just the <code>defines=</code> if you wanted to avoid depending on the whole <code>lib_internal</code> rule.</p>\n<p>One advantage of having your own defines= rule would be protection from people (e.g. me) ham-fistedly removing the define you're relying on from lib_internal. This was the main (only?) issue after the RTLD_GLOBAL removal, correct?</p>", "body_text": "So this is (only) to pick up tf_additional_mpi_lib_defines()? Would it help if we added a defines or a copts field to tf_custom_op_library? Otherwise I'm fine with this, or I suppose you could create a separate cc_library rule with just the defines= if you wanted to avoid depending on the whole lib_internal rule.\nOne advantage of having your own defines= rule would be protection from people (e.g. me) ham-fistedly removing the define you're relying on from lib_internal. This was the main (only?) issue after the RTLD_GLOBAL removal, correct?"}