{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/347285057", "html_url": "https://github.com/tensorflow/tensorflow/issues/11157#issuecomment-347285057", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11157", "id": 347285057, "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzI4NTA1Nw==", "user": {"login": "chledowski", "id": 24462884, "node_id": "MDQ6VXNlcjI0NDYyODg0", "avatar_url": "https://avatars2.githubusercontent.com/u/24462884?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chledowski", "html_url": "https://github.com/chledowski", "followers_url": "https://api.github.com/users/chledowski/followers", "following_url": "https://api.github.com/users/chledowski/following{/other_user}", "gists_url": "https://api.github.com/users/chledowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/chledowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chledowski/subscriptions", "organizations_url": "https://api.github.com/users/chledowski/orgs", "repos_url": "https://api.github.com/users/chledowski/repos", "events_url": "https://api.github.com/users/chledowski/events{/privacy}", "received_events_url": "https://api.github.com/users/chledowski/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-27T18:50:10Z", "updated_at": "2017-11-27T18:50:10Z", "author_association": "NONE", "body_html": "<p>I have similar problems when trying to reproduce <a href=\"https://arxiv.org/abs/1609.06038\" rel=\"nofollow\">esim</a>. However, when I use simpler neural network architecture, such as <a href=\"https://arxiv.org/abs/1508.01991\" rel=\"nofollow\">bilstm</a>, everything works correctly.</p>\n<p>Changing saving to keras.save did not help.</p>\n<pre><code>Traceback (most recent call last):\n  File \"src/scripts/train_model.py\", line 69, in &lt;module&gt;                                                                                         \n    plugins=[MetaSaver(), AutomaticNamer(namer=\"timestamp_namer\")])                                                                               \n  File \"/home/kchledowski/subspace-word-embeddings/src/vegab.py\", line 403, in main                                                               \n    call_training_func)()                                                                                                                         \n  File \"/home/kchledowski/subspace-word-embeddings/src/vegab.py\", line 265, in func_wrapper                                                       \n    func(*args, **kwargs)                                                                                                                         \n  File \"/home/kchledowski/subspace-word-embeddings/src/vegab.py\", line 388, in call_training_func                                                 \n    func(config, args.save_path, **training_func_kwargs)                                                                                          \n  File \"src/scripts/train_model.py\", line 56, in train_model                                                                                      \n    n_epochs=config[\"n_epochs\"], batch_size=config[\"batch_size\"])                                                                                 \n  File \"/home/kchledowski/subspace-word-embeddings/src/training_loop.py\", line 125, in baseline_training_loop                                     \n    callbacks=callbacks)                                                                                                                          \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/site-packages/keras/legacy/interfaces.py\", line 87, in wrapper                      \n    return func(*args, **kwargs)                                                                                                                  \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/site-packages/keras/engine/training.py\", line 2082, in fit_generator                \n    callbacks.on_epoch_end(epoch, epoch_logs)                                                                                                     \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/site-packages/keras/callbacks.py\", line 77, in on_epoch_end                         \n    callback.on_epoch_end(epoch, logs)                                                                                                            \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/site-packages/keras/callbacks.py\", line 428, in on_epoch_end                        \n    self.model.save(filepath, overwrite=True)                                                                                                     \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/site-packages/keras/engine/topology.py\", line 2553, in save                         \n    save_model(self, filepath, overwrite, include_optimizer)                                                                                      \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/site-packages/keras/models.py\", line 107, in save_model                             \n    'config': model.get_config()                                                                                                                  \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/site-packages/keras/engine/topology.py\", line 2394, in get_config                   \n    return copy.deepcopy(config)                                                                                                                  \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 150, in deepcopy                                                     \n    y = copier(x, memo)   \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 240, in _deepcopy_dict                                               \n    y[deepcopy(key, memo)] = deepcopy(value, memo)                                                                                                \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 150, in deepcopy                                                     \n    y = copier(x, memo)                                                                                                                           \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 220, in _deepcopy_tuple                                              \n    y = [deepcopy(a, memo) for a in x]                                                                                                            \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 220, in &lt;listcomp&gt;                                                   \n    y = [deepcopy(a, memo) for a in x]                                                                                                            \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 150, in deepcopy                                                     \n    y = copier(x, memo)                                                                                                                           \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 220, in _deepcopy_tuple                                              \n    y = [deepcopy(a, memo) for a in x]                                                                                                            \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 220, in &lt;listcomp&gt;                                                   \n    y = [deepcopy(a, memo) for a in x]                                                                                                            \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 180, in deepcopy                                                     \n    y = _reconstruct(x, memo, *rv)                                                                                                                \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 280, in _reconstruct                                                 \n    state = deepcopy(state, memo)                                                                                                                 \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 150, in deepcopy                                                     \n    y = copier(x, memo)                                                                                                                           \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 240, in _deepcopy_dict                                               \n    y[deepcopy(key, memo)] = deepcopy(value, memo)                                                                                                \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 180, in deepcopy                                                     \n    y = _reconstruct(x, memo, *rv)                                                                                                                \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 280, in _reconstruct                                                 \n    state = deepcopy(state, memo)                                                                                                                 \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 150, in deepcopy                                                     \n    y = copier(x, memo)                                                                                                                           \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 240, in _deepcopy_dict                                               \n    y[deepcopy(key, memo)] = deepcopy(value, memo)                                                                                                \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 180, in deepcopy                                                     \n    y = _reconstruct(x, memo, *rv)                                                                                                                \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 280, in _reconstruct                                                 \n    state = deepcopy(state, memo)                                                                                                                 \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 150, in deepcopy                                                     \n    y = copier(x, memo)                                                                                                                           \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 240, in _deepcopy_dict                                               \n    y[deepcopy(key, memo)] = deepcopy(value, memo)                                                                                                \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 169, in deepcopy                                                     \n    rv = reductor(4)                                                                                                                              \nTypeError: can't pickle _thread.lock objects \n</code></pre>\n<p>Any ideas, what might be the cause? The first epoch works ok, then I get this error during callbacks.</p>", "body_text": "I have similar problems when trying to reproduce esim. However, when I use simpler neural network architecture, such as bilstm, everything works correctly.\nChanging saving to keras.save did not help.\nTraceback (most recent call last):\n  File \"src/scripts/train_model.py\", line 69, in <module>                                                                                         \n    plugins=[MetaSaver(), AutomaticNamer(namer=\"timestamp_namer\")])                                                                               \n  File \"/home/kchledowski/subspace-word-embeddings/src/vegab.py\", line 403, in main                                                               \n    call_training_func)()                                                                                                                         \n  File \"/home/kchledowski/subspace-word-embeddings/src/vegab.py\", line 265, in func_wrapper                                                       \n    func(*args, **kwargs)                                                                                                                         \n  File \"/home/kchledowski/subspace-word-embeddings/src/vegab.py\", line 388, in call_training_func                                                 \n    func(config, args.save_path, **training_func_kwargs)                                                                                          \n  File \"src/scripts/train_model.py\", line 56, in train_model                                                                                      \n    n_epochs=config[\"n_epochs\"], batch_size=config[\"batch_size\"])                                                                                 \n  File \"/home/kchledowski/subspace-word-embeddings/src/training_loop.py\", line 125, in baseline_training_loop                                     \n    callbacks=callbacks)                                                                                                                          \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/site-packages/keras/legacy/interfaces.py\", line 87, in wrapper                      \n    return func(*args, **kwargs)                                                                                                                  \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/site-packages/keras/engine/training.py\", line 2082, in fit_generator                \n    callbacks.on_epoch_end(epoch, epoch_logs)                                                                                                     \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/site-packages/keras/callbacks.py\", line 77, in on_epoch_end                         \n    callback.on_epoch_end(epoch, logs)                                                                                                            \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/site-packages/keras/callbacks.py\", line 428, in on_epoch_end                        \n    self.model.save(filepath, overwrite=True)                                                                                                     \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/site-packages/keras/engine/topology.py\", line 2553, in save                         \n    save_model(self, filepath, overwrite, include_optimizer)                                                                                      \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/site-packages/keras/models.py\", line 107, in save_model                             \n    'config': model.get_config()                                                                                                                  \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/site-packages/keras/engine/topology.py\", line 2394, in get_config                   \n    return copy.deepcopy(config)                                                                                                                  \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 150, in deepcopy                                                     \n    y = copier(x, memo)   \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 240, in _deepcopy_dict                                               \n    y[deepcopy(key, memo)] = deepcopy(value, memo)                                                                                                \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 150, in deepcopy                                                     \n    y = copier(x, memo)                                                                                                                           \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 220, in _deepcopy_tuple                                              \n    y = [deepcopy(a, memo) for a in x]                                                                                                            \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 220, in <listcomp>                                                   \n    y = [deepcopy(a, memo) for a in x]                                                                                                            \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 150, in deepcopy                                                     \n    y = copier(x, memo)                                                                                                                           \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 220, in _deepcopy_tuple                                              \n    y = [deepcopy(a, memo) for a in x]                                                                                                            \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 220, in <listcomp>                                                   \n    y = [deepcopy(a, memo) for a in x]                                                                                                            \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 180, in deepcopy                                                     \n    y = _reconstruct(x, memo, *rv)                                                                                                                \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 280, in _reconstruct                                                 \n    state = deepcopy(state, memo)                                                                                                                 \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 150, in deepcopy                                                     \n    y = copier(x, memo)                                                                                                                           \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 240, in _deepcopy_dict                                               \n    y[deepcopy(key, memo)] = deepcopy(value, memo)                                                                                                \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 180, in deepcopy                                                     \n    y = _reconstruct(x, memo, *rv)                                                                                                                \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 280, in _reconstruct                                                 \n    state = deepcopy(state, memo)                                                                                                                 \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 150, in deepcopy                                                     \n    y = copier(x, memo)                                                                                                                           \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 240, in _deepcopy_dict                                               \n    y[deepcopy(key, memo)] = deepcopy(value, memo)                                                                                                \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 180, in deepcopy                                                     \n    y = _reconstruct(x, memo, *rv)                                                                                                                \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 280, in _reconstruct                                                 \n    state = deepcopy(state, memo)                                                                                                                 \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 150, in deepcopy                                                     \n    y = copier(x, memo)                                                                                                                           \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 240, in _deepcopy_dict                                               \n    y[deepcopy(key, memo)] = deepcopy(value, memo)                                                                                                \n  File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 169, in deepcopy                                                     \n    rv = reductor(4)                                                                                                                              \nTypeError: can't pickle _thread.lock objects \n\nAny ideas, what might be the cause? The first epoch works ok, then I get this error during callbacks.", "body": "I have similar problems when trying to reproduce [esim](https://arxiv.org/abs/1609.06038). However, when I use simpler neural network architecture, such as [bilstm](https://arxiv.org/abs/1508.01991), everything works correctly.\r\n\r\nChanging saving to keras.save did not help.\r\n\r\n  \r\n    Traceback (most recent call last):\r\n      File \"src/scripts/train_model.py\", line 69, in <module>                                                                                         \r\n        plugins=[MetaSaver(), AutomaticNamer(namer=\"timestamp_namer\")])                                                                               \r\n      File \"/home/kchledowski/subspace-word-embeddings/src/vegab.py\", line 403, in main                                                               \r\n        call_training_func)()                                                                                                                         \r\n      File \"/home/kchledowski/subspace-word-embeddings/src/vegab.py\", line 265, in func_wrapper                                                       \r\n        func(*args, **kwargs)                                                                                                                         \r\n      File \"/home/kchledowski/subspace-word-embeddings/src/vegab.py\", line 388, in call_training_func                                                 \r\n        func(config, args.save_path, **training_func_kwargs)                                                                                          \r\n      File \"src/scripts/train_model.py\", line 56, in train_model                                                                                      \r\n        n_epochs=config[\"n_epochs\"], batch_size=config[\"batch_size\"])                                                                                 \r\n      File \"/home/kchledowski/subspace-word-embeddings/src/training_loop.py\", line 125, in baseline_training_loop                                     \r\n        callbacks=callbacks)                                                                                                                          \r\n      File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/site-packages/keras/legacy/interfaces.py\", line 87, in wrapper                      \r\n        return func(*args, **kwargs)                                                                                                                  \r\n      File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/site-packages/keras/engine/training.py\", line 2082, in fit_generator                \r\n        callbacks.on_epoch_end(epoch, epoch_logs)                                                                                                     \r\n      File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/site-packages/keras/callbacks.py\", line 77, in on_epoch_end                         \r\n        callback.on_epoch_end(epoch, logs)                                                                                                            \r\n      File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/site-packages/keras/callbacks.py\", line 428, in on_epoch_end                        \r\n        self.model.save(filepath, overwrite=True)                                                                                                     \r\n      File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/site-packages/keras/engine/topology.py\", line 2553, in save                         \r\n        save_model(self, filepath, overwrite, include_optimizer)                                                                                      \r\n      File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/site-packages/keras/models.py\", line 107, in save_model                             \r\n        'config': model.get_config()                                                                                                                  \r\n      File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/site-packages/keras/engine/topology.py\", line 2394, in get_config                   \r\n        return copy.deepcopy(config)                                                                                                                  \r\n      File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 150, in deepcopy                                                     \r\n        y = copier(x, memo)   \r\n      File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 240, in _deepcopy_dict                                               \r\n        y[deepcopy(key, memo)] = deepcopy(value, memo)                                                                                                \r\n      File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 150, in deepcopy                                                     \r\n        y = copier(x, memo)                                                                                                                           \r\n      File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 220, in _deepcopy_tuple                                              \r\n        y = [deepcopy(a, memo) for a in x]                                                                                                            \r\n      File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 220, in <listcomp>                                                   \r\n        y = [deepcopy(a, memo) for a in x]                                                                                                            \r\n      File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 150, in deepcopy                                                     \r\n        y = copier(x, memo)                                                                                                                           \r\n      File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 220, in _deepcopy_tuple                                              \r\n        y = [deepcopy(a, memo) for a in x]                                                                                                            \r\n      File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 220, in <listcomp>                                                   \r\n        y = [deepcopy(a, memo) for a in x]                                                                                                            \r\n      File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 180, in deepcopy                                                     \r\n        y = _reconstruct(x, memo, *rv)                                                                                                                \r\n      File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 280, in _reconstruct                                                 \r\n        state = deepcopy(state, memo)                                                                                                                 \r\n      File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 150, in deepcopy                                                     \r\n        y = copier(x, memo)                                                                                                                           \r\n      File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 240, in _deepcopy_dict                                               \r\n        y[deepcopy(key, memo)] = deepcopy(value, memo)                                                                                                \r\n      File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 180, in deepcopy                                                     \r\n        y = _reconstruct(x, memo, *rv)                                                                                                                \r\n      File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 280, in _reconstruct                                                 \r\n        state = deepcopy(state, memo)                                                                                                                 \r\n      File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 150, in deepcopy                                                     \r\n        y = copier(x, memo)                                                                                                                           \r\n      File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 240, in _deepcopy_dict                                               \r\n        y[deepcopy(key, memo)] = deepcopy(value, memo)                                                                                                \r\n      File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 180, in deepcopy                                                     \r\n        y = _reconstruct(x, memo, *rv)                                                                                                                \r\n      File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 280, in _reconstruct                                                 \r\n        state = deepcopy(state, memo)                                                                                                                 \r\n      File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 150, in deepcopy                                                     \r\n        y = copier(x, memo)                                                                                                                           \r\n      File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 240, in _deepcopy_dict                                               \r\n        y[deepcopy(key, memo)] = deepcopy(value, memo)                                                                                                \r\n      File \"/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py\", line 169, in deepcopy                                                     \r\n        rv = reductor(4)                                                                                                                              \r\n    TypeError: can't pickle _thread.lock objects \r\n\r\nAny ideas, what might be the cause? The first epoch works ok, then I get this error during callbacks."}