{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/325326392", "html_url": "https://github.com/tensorflow/tensorflow/issues/11157#issuecomment-325326392", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11157", "id": 325326392, "node_id": "MDEyOklzc3VlQ29tbWVudDMyNTMyNjM5Mg==", "user": {"login": "JankiMehta", "id": 5293624, "node_id": "MDQ6VXNlcjUyOTM2MjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/5293624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JankiMehta", "html_url": "https://github.com/JankiMehta", "followers_url": "https://api.github.com/users/JankiMehta/followers", "following_url": "https://api.github.com/users/JankiMehta/following{/other_user}", "gists_url": "https://api.github.com/users/JankiMehta/gists{/gist_id}", "starred_url": "https://api.github.com/users/JankiMehta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JankiMehta/subscriptions", "organizations_url": "https://api.github.com/users/JankiMehta/orgs", "repos_url": "https://api.github.com/users/JankiMehta/repos", "events_url": "https://api.github.com/users/JankiMehta/events{/privacy}", "received_events_url": "https://api.github.com/users/JankiMehta/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-28T11:15:24Z", "updated_at": "2017-08-28T11:15:55Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1794715\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ebrevdo\">@ebrevdo</a></p>\n<pre><code>import pickle\nfrom keras.layers import Dense\nfrom keras.layers import LSTM\nfrom keras.models import Sequential\nfrom keras.metrics import categorical_accuracy\n\nmodel = Sequential()\nmodel.add(LSTM(20, return_sequences=True, stateful=False, batch_input_shape=(10, 20, 4)))\nmodel.add(Dense(3, activation='softmax'))\n\nmodel.compile(loss=\"categorical_crossentropy\",\n              optimizer='adam',\n              metrics=[categorical_accuracy],\n              sample_weight_mode='temporal')\n\ndata_path = '/home/ubuntu/invoice/data/'     #any path to store pickle dump\noutput_file_path = data_path + 'model.dat'\nwith open(output_file_path, 'wb') as f:\n    pickle.dump(model, f)\n</code></pre>\n<p>Error Msg:</p>\n<pre><code>Traceback (most recent call last):\n  File \"&lt;input&gt;\", line 19, in &lt;module&gt;\nTypeError: can't pickle _thread.lock objects\n</code></pre>", "body_text": "@ebrevdo\nimport pickle\nfrom keras.layers import Dense\nfrom keras.layers import LSTM\nfrom keras.models import Sequential\nfrom keras.metrics import categorical_accuracy\n\nmodel = Sequential()\nmodel.add(LSTM(20, return_sequences=True, stateful=False, batch_input_shape=(10, 20, 4)))\nmodel.add(Dense(3, activation='softmax'))\n\nmodel.compile(loss=\"categorical_crossentropy\",\n              optimizer='adam',\n              metrics=[categorical_accuracy],\n              sample_weight_mode='temporal')\n\ndata_path = '/home/ubuntu/invoice/data/'     #any path to store pickle dump\noutput_file_path = data_path + 'model.dat'\nwith open(output_file_path, 'wb') as f:\n    pickle.dump(model, f)\n\nError Msg:\nTraceback (most recent call last):\n  File \"<input>\", line 19, in <module>\nTypeError: can't pickle _thread.lock objects", "body": "@ebrevdo \r\n\r\n```\r\nimport pickle\r\nfrom keras.layers import Dense\r\nfrom keras.layers import LSTM\r\nfrom keras.models import Sequential\r\nfrom keras.metrics import categorical_accuracy\r\n\r\nmodel = Sequential()\r\nmodel.add(LSTM(20, return_sequences=True, stateful=False, batch_input_shape=(10, 20, 4)))\r\nmodel.add(Dense(3, activation='softmax'))\r\n\r\nmodel.compile(loss=\"categorical_crossentropy\",\r\n              optimizer='adam',\r\n              metrics=[categorical_accuracy],\r\n              sample_weight_mode='temporal')\r\n\r\ndata_path = '/home/ubuntu/invoice/data/'     #any path to store pickle dump\r\noutput_file_path = data_path + 'model.dat'\r\nwith open(output_file_path, 'wb') as f:\r\n    pickle.dump(model, f)\r\n```\r\n\r\nError Msg:\r\n```\r\nTraceback (most recent call last):\r\n  File \"<input>\", line 19, in <module>\r\nTypeError: can't pickle _thread.lock objects\r\n```"}