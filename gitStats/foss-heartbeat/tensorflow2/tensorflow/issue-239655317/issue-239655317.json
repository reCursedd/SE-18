{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11157", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11157/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11157/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11157/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/11157", "id": 239655317, "node_id": "MDU6SXNzdWUyMzk2NTUzMTc=", "number": 11157, "title": "TypeError: can't pickle _thread.lock objects", "user": {"login": "mattfeel", "id": 529006, "node_id": "MDQ6VXNlcjUyOTAwNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/529006?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattfeel", "html_url": "https://github.com/mattfeel", "followers_url": "https://api.github.com/users/mattfeel/followers", "following_url": "https://api.github.com/users/mattfeel/following{/other_user}", "gists_url": "https://api.github.com/users/mattfeel/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattfeel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattfeel/subscriptions", "organizations_url": "https://api.github.com/users/mattfeel/orgs", "repos_url": "https://api.github.com/users/mattfeel/repos", "events_url": "https://api.github.com/users/mattfeel/events{/privacy}", "received_events_url": "https://api.github.com/users/mattfeel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 51, "created_at": "2017-06-30T01:38:11Z", "updated_at": "2018-10-30T13:56:45Z", "closed_at": "2018-02-17T22:00:08Z", "author_association": "NONE", "body_html": "<p>Please go to Stack Overflow for help and support:</p>\n<p><a href=\"http://stackoverflow.com/questions/tagged/tensorflow\" rel=\"nofollow\">http://stackoverflow.com/questions/tagged/tensorflow</a></p>\n<p>If you open a GitHub issue, here is our policy:</p>\n<ol>\n<li>It must be a bug or a feature request.</li>\n<li>The form below must be filled out.</li>\n<li>It shouldn't be a TensorBoard issue. Those go <a href=\"https://github.com/tensorflow/tensorboard/issues\">here</a>.</li>\n</ol>\n<p><strong>Here's why we have that policy</strong>: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.</p>\n<hr>\n<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: No, using stock examples</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: pip</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.2.1</li>\n<li><strong>Python version</strong>: 3.6.1 (Anaconda 4.4.0 64-bit)</li>\n<li><strong>Bazel version (if compiling from source)</strong>:</li>\n<li><strong>CUDA/cuDNN version</strong>:</li>\n<li><strong>GPU model and memory</strong>:</li>\n<li><strong>Exact command to reproduce</strong>: I'm running the seq2seq example in models/tutorials/rnn/translate, verbatim.</li>\n</ul>\n<p>You can collect some of this information using our environment capture script:</p>\n<p><a href=\"https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\">https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh</a></p>\n<p>Collecting system information...<br>\n2017-06-29 18:35:16.672194: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.<br>\n2017-06-29 18:35:16.672242: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.<br>\n2017-06-29 18:35:16.672250: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.<br>\nWrote environment to tf_env.txt. You can review the contents of that file.<br>\nand use it to populate the fields in the github issue template.</p>\n<p>cat tf_env.txt</p>\n<p>== cat /etc/issue ===============================================<br>\nLinux GCRGDL171 4.8.0-58-generic <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"116007605\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/63\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/63/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/63\">#63</a>~16.04.1-Ubuntu SMP Mon Jun 26 18:08:51 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux<br>\nVERSION=\"16.04.2 LTS (Xenial Xerus)\"<br>\nVERSION_ID=\"16.04\"<br>\nVERSION_CODENAME=xenial</p>\n<p>== are we in docker =============================================<br>\nNo</p>\n<p>== compiler =====================================================<br>\nc++ (Ubuntu 5.4.0-6ubuntu1~16.04.4) 5.4.0 20160609<br>\nCopyright (C) 2015 Free Software Foundation, Inc.<br>\nThis is free software; see the source for copying conditions.  There is NO<br>\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</p>\n<p>== uname -a =====================================================<br>\nLinux GCRGDL171 4.8.0-58-generic <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"116007605\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/63\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/63/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/63\">#63</a>~16.04.1-Ubuntu SMP Mon Jun 26 18:08:51 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux</p>\n<p>== check pips ===================================================<br>\nnumpy (1.12.1)<br>\nnumpydoc (0.6.0)<br>\nprotobuf (3.3.0)<br>\ntensorflow (1.2.1)</p>\n<p>== check for virtualenv =========================================<br>\nFalse</p>\n<p>== tensorflow import ============================================<br>\ntf.VERSION = 1.2.1<br>\ntf.GIT_VERSION = v1.2.0-5-g435cdfc<br>\ntf.COMPILER_VERSION = v1.2.0-5-g435cdfc<br>\nSanity check: array([1], dtype=int32)</p>\n<p>== env ==========================================================<br>\nLD_LIBRARY_PATH /usr/local/cuda:/usr/local/cuda/lib64:<br>\nDYLD_LIBRARY_PATH is unset</p>\n<p>== nvidia-smi ===================================================<br>\nThu Jun 29 18:35:19 2017<br>\n+-----------------------------------------------------------------------------+<br>\n| NVIDIA-SMI 375.66                 Driver Version: 375.66                    |<br>\n|-------------------------------+----------------------+----------------------+<br>\n| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |<br>\n| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |<br>\n|===============================+======================+======================|<br>\n|   0  Tesla K40m          Off  | 0000:27:00.0     Off |                    0 |<br>\n| N/A   27C    P8    21W / 235W |      0MiB / 11439MiB |      0%      Default |<br>\n+-------------------------------+----------------------+----------------------+</p>\n<p>+-----------------------------------------------------------------------------+<br>\n| Processes:                                                       GPU Memory |<br>\n|  GPU       PID  Type  Process name                               Usage      |<br>\n|=============================================================================|<br>\n|  No running processes found                                                 |<br>\n+-----------------------------------------------------------------------------+</p>\n<p>== cuda libs  ===================================================<br>\n/usr/local/cuda-8.0/lib64/libcudart.so.8.0.61<br>\n/usr/local/cuda-8.0/lib64/libcudart_static.a<br>\n/usr/local/cuda-8.0/doc/man/man7/libcudart.7<br>\n/usr/local/cuda-8.0/doc/man/man7/libcudart.so.7</p>\n<p>You can obtain the TensorFlow version with</p>\n<p>python -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"</p>\n<h3>Describe the problem</h3>\n<p>Describe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.</p>\n<p>I get exception: TypeError: can't pickle _thread.lock objects. It happens on different machines with the same python version. Just running your example code verbatim.</p>\n<h3>Source code / logs</h3>\n<p>Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.</p>\n<p>Traceback (most recent call last):<br>\nFile \"translate.py\", line 322, in <br>\ntf.app.run()<br>\nFile \"/home/t-mabruc/anaconda3/lib/python3.6/site-packages/tensorflow/python/platform/app.py\", line 48, in run<br>\n_sys.exit(main(_sys.argv[:1] + flags_passthrough))<br>\nFile \"translate.py\", line 319, in main<br>\ntrain()<br>\nFile \"translate.py\", line 178, in train<br>\nmodel = create_model(sess, False)<br>\nFile \"translate.py\", line 136, in create_model<br>\ndtype=dtype)<br>\nFile \"/home/t-mabruc/models/tutorials/rnn/translate/seq2seq_model.py\", line 179, in <strong>init</strong><br>\nsoftmax_loss_function=softmax_loss_function)<br>\nFile \"/home/t-mabruc/anaconda3/lib/python3.6/site-packages/tensorflow/contrib/legacy_seq2seq/python/ops/seq2seq.py\", line 1206, in model_with_buckets<br>\ndecoder_inputs[:bucket[1]])<br>\nFile \"/home/t-mabruc/models/tutorials/rnn/translate/seq2seq_model.py\", line 178, in <br>\nlambda x, y: seq2seq_f(x, y, False),<br>\nFile \"/home/t-mabruc/models/tutorials/rnn/translate/seq2seq_model.py\", line 142, in seq2seq_f<br>\ndtype=dtype)<br>\nFile \"/home/t-mabruc/anaconda3/lib/python3.6/site-packages/tensorflow/contrib/legacy_seq2seq/python/ops/seq2seq.py\", line 848, in embedding_attention_seq2seq<br>\nencoder_cell = copy.deepcopy(cell)<br>\nFile \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 161, in deepcopy<br>\ny = copier(memo)<br>\nFile \"/home/t-mabruc/anaconda3/lib/python3.6/site-packages/tensorflow/python/layers/base.py\", line 476, in <strong>deepcopy</strong><br>\nsetattr(result, k, copy.deepcopy(v, memo))<br>\nFile \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 150, in deepcopy<br>\ny = copier(x, memo)<br>\nFile \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 215, in _deepcopy_list<br>\nappend(deepcopy(a, memo))<br>\nFile \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 180, in deepcopy<br>\ny = _reconstruct(x, memo, *rv)<br>\nFile \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 280, in _reconstruct<br>\nstate = deepcopy(state, memo)<br>\nFile \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 150, in deepcopy<br>\ny = copier(x, memo)<br>\nFile \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 240, in _deepcopy_dict<br>\ny[deepcopy(key, memo)] = deepcopy(value, memo)<br>\nFile \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 180, in deepcopy<br>\ny = _reconstruct(x, memo, *rv)<br>\nFile \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 280, in _reconstruct<br>\nstate = deepcopy(state, memo)<br>\nFile \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 150, in deepcopy<br>\ny = copier(x, memo)<br>\nFile \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 240, in _deepcopy_dict<br>\ny[deepcopy(key, memo)] = deepcopy(value, memo)<br>\nFile \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 180, in deepcopy<br>\ny = _reconstruct(x, memo, *rv)<br>\nFile \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 280, in _reconstruct<br>\nstate = deepcopy(state, memo)<br>\nFile \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 150, in deepcopy<br>\ny = copier(x, memo)<br>\nFile \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 240, in _deepcopy_dict<br>\ny[deepcopy(key, memo)] = deepcopy(value, memo)<br>\nFile \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 180, in deepcopy<br>\ny = _reconstruct(x, memo, *rv)<br>\nFile \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 280, in _reconstruct<br>\nstate = deepcopy(state, memo)<br>\nFile \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 150, in deepcopy<br>\ny = copier(x, memo)<br>\nFile \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 240, in _deepcopy_dict<br>\ny[deepcopy(key, memo)] = deepcopy(value, memo)<br>\nFile \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 169, in deepcopy<br>\nrv = reductor(4)<br>\nTypeError: can't pickle _thread.lock objects</p>", "body_text": "Please go to Stack Overflow for help and support:\nhttp://stackoverflow.com/questions/tagged/tensorflow\nIf you open a GitHub issue, here is our policy:\n\nIt must be a bug or a feature request.\nThe form below must be filled out.\nIt shouldn't be a TensorBoard issue. Those go here.\n\nHere's why we have that policy: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\n\nSystem information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): No, using stock examples\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04\nTensorFlow installed from (source or binary): pip\nTensorFlow version (use command below): 1.2.1\nPython version: 3.6.1 (Anaconda 4.4.0 64-bit)\nBazel version (if compiling from source):\nCUDA/cuDNN version:\nGPU model and memory:\nExact command to reproduce: I'm running the seq2seq example in models/tutorials/rnn/translate, verbatim.\n\nYou can collect some of this information using our environment capture script:\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\nCollecting system information...\n2017-06-29 18:35:16.672194: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.\n2017-06-29 18:35:16.672242: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\n2017-06-29 18:35:16.672250: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\nWrote environment to tf_env.txt. You can review the contents of that file.\nand use it to populate the fields in the github issue template.\ncat tf_env.txt\n== cat /etc/issue ===============================================\nLinux GCRGDL171 4.8.0-58-generic #63~16.04.1-Ubuntu SMP Mon Jun 26 18:08:51 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\nVERSION=\"16.04.2 LTS (Xenial Xerus)\"\nVERSION_ID=\"16.04\"\nVERSION_CODENAME=xenial\n== are we in docker =============================================\nNo\n== compiler =====================================================\nc++ (Ubuntu 5.4.0-6ubuntu1~16.04.4) 5.4.0 20160609\nCopyright (C) 2015 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n== uname -a =====================================================\nLinux GCRGDL171 4.8.0-58-generic #63~16.04.1-Ubuntu SMP Mon Jun 26 18:08:51 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\n== check pips ===================================================\nnumpy (1.12.1)\nnumpydoc (0.6.0)\nprotobuf (3.3.0)\ntensorflow (1.2.1)\n== check for virtualenv =========================================\nFalse\n== tensorflow import ============================================\ntf.VERSION = 1.2.1\ntf.GIT_VERSION = v1.2.0-5-g435cdfc\ntf.COMPILER_VERSION = v1.2.0-5-g435cdfc\nSanity check: array([1], dtype=int32)\n== env ==========================================================\nLD_LIBRARY_PATH /usr/local/cuda:/usr/local/cuda/lib64:\nDYLD_LIBRARY_PATH is unset\n== nvidia-smi ===================================================\nThu Jun 29 18:35:19 2017\n+-----------------------------------------------------------------------------+\n| NVIDIA-SMI 375.66                 Driver Version: 375.66                    |\n|-------------------------------+----------------------+----------------------+\n| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n|===============================+======================+======================|\n|   0  Tesla K40m          Off  | 0000:27:00.0     Off |                    0 |\n| N/A   27C    P8    21W / 235W |      0MiB / 11439MiB |      0%      Default |\n+-------------------------------+----------------------+----------------------+\n+-----------------------------------------------------------------------------+\n| Processes:                                                       GPU Memory |\n|  GPU       PID  Type  Process name                               Usage      |\n|=============================================================================|\n|  No running processes found                                                 |\n+-----------------------------------------------------------------------------+\n== cuda libs  ===================================================\n/usr/local/cuda-8.0/lib64/libcudart.so.8.0.61\n/usr/local/cuda-8.0/lib64/libcudart_static.a\n/usr/local/cuda-8.0/doc/man/man7/libcudart.7\n/usr/local/cuda-8.0/doc/man/man7/libcudart.so.7\nYou can obtain the TensorFlow version with\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\nDescribe the problem\nDescribe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.\nI get exception: TypeError: can't pickle _thread.lock objects. It happens on different machines with the same python version. Just running your example code verbatim.\nSource code / logs\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.\nTraceback (most recent call last):\nFile \"translate.py\", line 322, in \ntf.app.run()\nFile \"/home/t-mabruc/anaconda3/lib/python3.6/site-packages/tensorflow/python/platform/app.py\", line 48, in run\n_sys.exit(main(_sys.argv[:1] + flags_passthrough))\nFile \"translate.py\", line 319, in main\ntrain()\nFile \"translate.py\", line 178, in train\nmodel = create_model(sess, False)\nFile \"translate.py\", line 136, in create_model\ndtype=dtype)\nFile \"/home/t-mabruc/models/tutorials/rnn/translate/seq2seq_model.py\", line 179, in init\nsoftmax_loss_function=softmax_loss_function)\nFile \"/home/t-mabruc/anaconda3/lib/python3.6/site-packages/tensorflow/contrib/legacy_seq2seq/python/ops/seq2seq.py\", line 1206, in model_with_buckets\ndecoder_inputs[:bucket[1]])\nFile \"/home/t-mabruc/models/tutorials/rnn/translate/seq2seq_model.py\", line 178, in \nlambda x, y: seq2seq_f(x, y, False),\nFile \"/home/t-mabruc/models/tutorials/rnn/translate/seq2seq_model.py\", line 142, in seq2seq_f\ndtype=dtype)\nFile \"/home/t-mabruc/anaconda3/lib/python3.6/site-packages/tensorflow/contrib/legacy_seq2seq/python/ops/seq2seq.py\", line 848, in embedding_attention_seq2seq\nencoder_cell = copy.deepcopy(cell)\nFile \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 161, in deepcopy\ny = copier(memo)\nFile \"/home/t-mabruc/anaconda3/lib/python3.6/site-packages/tensorflow/python/layers/base.py\", line 476, in deepcopy\nsetattr(result, k, copy.deepcopy(v, memo))\nFile \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 150, in deepcopy\ny = copier(x, memo)\nFile \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 215, in _deepcopy_list\nappend(deepcopy(a, memo))\nFile \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 180, in deepcopy\ny = _reconstruct(x, memo, *rv)\nFile \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 280, in _reconstruct\nstate = deepcopy(state, memo)\nFile \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 150, in deepcopy\ny = copier(x, memo)\nFile \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 240, in _deepcopy_dict\ny[deepcopy(key, memo)] = deepcopy(value, memo)\nFile \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 180, in deepcopy\ny = _reconstruct(x, memo, *rv)\nFile \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 280, in _reconstruct\nstate = deepcopy(state, memo)\nFile \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 150, in deepcopy\ny = copier(x, memo)\nFile \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 240, in _deepcopy_dict\ny[deepcopy(key, memo)] = deepcopy(value, memo)\nFile \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 180, in deepcopy\ny = _reconstruct(x, memo, *rv)\nFile \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 280, in _reconstruct\nstate = deepcopy(state, memo)\nFile \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 150, in deepcopy\ny = copier(x, memo)\nFile \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 240, in _deepcopy_dict\ny[deepcopy(key, memo)] = deepcopy(value, memo)\nFile \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 180, in deepcopy\ny = _reconstruct(x, memo, *rv)\nFile \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 280, in _reconstruct\nstate = deepcopy(state, memo)\nFile \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 150, in deepcopy\ny = copier(x, memo)\nFile \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 240, in _deepcopy_dict\ny[deepcopy(key, memo)] = deepcopy(value, memo)\nFile \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 169, in deepcopy\nrv = reductor(4)\nTypeError: can't pickle _thread.lock objects", "body": "Please go to Stack Overflow for help and support:\r\n\r\nhttp://stackoverflow.com/questions/tagged/tensorflow\r\n\r\nIf you open a GitHub issue, here is our policy:\r\n\r\n1. It must be a bug or a feature request.\r\n2. The form below must be filled out.\r\n3. It shouldn't be a TensorBoard issue. Those go [here](https://github.com/tensorflow/tensorboard/issues).\r\n\r\n**Here's why we have that policy**: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No, using stock examples\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: pip\r\n- **TensorFlow version (use command below)**: 1.2.1\r\n- **Python version**: 3.6.1 (Anaconda 4.4.0 64-bit)\r\n- **Bazel version (if compiling from source)**:\r\n- **CUDA/cuDNN version**:\r\n- **GPU model and memory**:\r\n- **Exact command to reproduce**: I'm running the seq2seq example in models/tutorials/rnn/translate, verbatim.\r\n\r\nYou can collect some of this information using our environment capture script:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\nCollecting system information...\r\n2017-06-29 18:35:16.672194: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.\r\n2017-06-29 18:35:16.672242: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\r\n2017-06-29 18:35:16.672250: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\r\nWrote environment to tf_env.txt. You can review the contents of that file.\r\nand use it to populate the fields in the github issue template.\r\n\r\ncat tf_env.txt\r\n\r\n== cat /etc/issue ===============================================\r\nLinux GCRGDL171 4.8.0-58-generic #63~16.04.1-Ubuntu SMP Mon Jun 26 18:08:51 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\r\nVERSION=\"16.04.2 LTS (Xenial Xerus)\"\r\nVERSION_ID=\"16.04\"\r\nVERSION_CODENAME=xenial\r\n\r\n== are we in docker =============================================\r\nNo\r\n\r\n== compiler =====================================================\r\nc++ (Ubuntu 5.4.0-6ubuntu1~16.04.4) 5.4.0 20160609\r\nCopyright (C) 2015 Free Software Foundation, Inc.\r\nThis is free software; see the source for copying conditions.  There is NO\r\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n\r\n\r\n== uname -a =====================================================\r\nLinux GCRGDL171 4.8.0-58-generic #63~16.04.1-Ubuntu SMP Mon Jun 26 18:08:51 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\r\n\r\n== check pips ===================================================\r\nnumpy (1.12.1)\r\nnumpydoc (0.6.0)\r\nprotobuf (3.3.0)\r\ntensorflow (1.2.1)\r\n\r\n== check for virtualenv =========================================\r\nFalse\r\n\r\n== tensorflow import ============================================\r\ntf.VERSION = 1.2.1\r\ntf.GIT_VERSION = v1.2.0-5-g435cdfc\r\ntf.COMPILER_VERSION = v1.2.0-5-g435cdfc\r\nSanity check: array([1], dtype=int32)\r\n\r\n== env ==========================================================\r\nLD_LIBRARY_PATH /usr/local/cuda:/usr/local/cuda/lib64:\r\nDYLD_LIBRARY_PATH is unset\r\n\r\n== nvidia-smi ===================================================\r\nThu Jun 29 18:35:19 2017\r\n+-----------------------------------------------------------------------------+\r\n| NVIDIA-SMI 375.66                 Driver Version: 375.66                    |\r\n|-------------------------------+----------------------+----------------------+\r\n| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\r\n| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\r\n|===============================+======================+======================|\r\n|   0  Tesla K40m          Off  | 0000:27:00.0     Off |                    0 |\r\n| N/A   27C    P8    21W / 235W |      0MiB / 11439MiB |      0%      Default |\r\n+-------------------------------+----------------------+----------------------+\r\n\r\n+-----------------------------------------------------------------------------+\r\n| Processes:                                                       GPU Memory |\r\n|  GPU       PID  Type  Process name                               Usage      |\r\n|=============================================================================|\r\n|  No running processes found                                                 |\r\n+-----------------------------------------------------------------------------+\r\n\r\n== cuda libs  ===================================================\r\n/usr/local/cuda-8.0/lib64/libcudart.so.8.0.61\r\n/usr/local/cuda-8.0/lib64/libcudart_static.a\r\n/usr/local/cuda-8.0/doc/man/man7/libcudart.7\r\n/usr/local/cuda-8.0/doc/man/man7/libcudart.so.7\r\n\r\nYou can obtain the TensorFlow version with\r\n\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n\r\n### Describe the problem\r\nDescribe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.\r\n\r\nI get exception: TypeError: can't pickle _thread.lock objects. It happens on different machines with the same python version. Just running your example code verbatim. \r\n\r\n### Source code / logs\r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.\r\n\r\nTraceback (most recent call last):\r\n  File \"translate.py\", line 322, in <module>\r\n    tf.app.run()\r\n  File \"/home/t-mabruc/anaconda3/lib/python3.6/site-packages/tensorflow/python/platform/app.py\", line 48, in run\r\n    _sys.exit(main(_sys.argv[:1] + flags_passthrough))\r\n  File \"translate.py\", line 319, in main\r\n    train()\r\n  File \"translate.py\", line 178, in train\r\n    model = create_model(sess, False)\r\n  File \"translate.py\", line 136, in create_model\r\n    dtype=dtype)\r\n  File \"/home/t-mabruc/models/tutorials/rnn/translate/seq2seq_model.py\", line 179, in __init__\r\n    softmax_loss_function=softmax_loss_function)\r\n  File \"/home/t-mabruc/anaconda3/lib/python3.6/site-packages/tensorflow/contrib/legacy_seq2seq/python/ops/seq2seq.py\", line 1206, in model_with_buckets\r\n    decoder_inputs[:bucket[1]])\r\n  File \"/home/t-mabruc/models/tutorials/rnn/translate/seq2seq_model.py\", line 178, in <lambda>\r\n    lambda x, y: seq2seq_f(x, y, False),\r\n  File \"/home/t-mabruc/models/tutorials/rnn/translate/seq2seq_model.py\", line 142, in seq2seq_f\r\n    dtype=dtype)\r\n  File \"/home/t-mabruc/anaconda3/lib/python3.6/site-packages/tensorflow/contrib/legacy_seq2seq/python/ops/seq2seq.py\", line 848, in embedding_attention_seq2seq\r\n    encoder_cell = copy.deepcopy(cell)\r\n  File \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 161, in deepcopy\r\n    y = copier(memo)\r\n  File \"/home/t-mabruc/anaconda3/lib/python3.6/site-packages/tensorflow/python/layers/base.py\", line 476, in __deepcopy__\r\n    setattr(result, k, copy.deepcopy(v, memo))\r\n  File \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 150, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 215, in _deepcopy_list\r\n    append(deepcopy(a, memo))\r\n  File \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 180, in deepcopy\r\n    y = _reconstruct(x, memo, *rv)\r\n  File \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 280, in _reconstruct\r\n    state = deepcopy(state, memo)\r\n  File \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 150, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 240, in _deepcopy_dict\r\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n  File \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 180, in deepcopy\r\n    y = _reconstruct(x, memo, *rv)\r\n  File \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 280, in _reconstruct\r\n    state = deepcopy(state, memo)\r\n  File \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 150, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 240, in _deepcopy_dict\r\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n  File \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 180, in deepcopy\r\n    y = _reconstruct(x, memo, *rv)\r\n  File \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 280, in _reconstruct\r\n    state = deepcopy(state, memo)\r\n  File \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 150, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 240, in _deepcopy_dict\r\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n  File \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 180, in deepcopy\r\n    y = _reconstruct(x, memo, *rv)\r\n  File \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 280, in _reconstruct\r\n    state = deepcopy(state, memo)\r\n  File \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 150, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 240, in _deepcopy_dict\r\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n  File \"/home/t-mabruc/anaconda3/lib/python3.6/copy.py\", line 169, in deepcopy\r\n    rv = reductor(4)\r\nTypeError: can't pickle _thread.lock objects"}