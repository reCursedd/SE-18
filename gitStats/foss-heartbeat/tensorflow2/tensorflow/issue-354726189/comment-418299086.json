{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/418299086", "html_url": "https://github.com/tensorflow/tensorflow/issues/21923#issuecomment-418299086", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21923", "id": 418299086, "node_id": "MDEyOklzc3VlQ29tbWVudDQxODI5OTA4Ng==", "user": {"login": "zbitouzakaria", "id": 12535244, "node_id": "MDQ6VXNlcjEyNTM1MjQ0", "avatar_url": "https://avatars0.githubusercontent.com/u/12535244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zbitouzakaria", "html_url": "https://github.com/zbitouzakaria", "followers_url": "https://api.github.com/users/zbitouzakaria/followers", "following_url": "https://api.github.com/users/zbitouzakaria/following{/other_user}", "gists_url": "https://api.github.com/users/zbitouzakaria/gists{/gist_id}", "starred_url": "https://api.github.com/users/zbitouzakaria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zbitouzakaria/subscriptions", "organizations_url": "https://api.github.com/users/zbitouzakaria/orgs", "repos_url": "https://api.github.com/users/zbitouzakaria/repos", "events_url": "https://api.github.com/users/zbitouzakaria/events{/privacy}", "received_events_url": "https://api.github.com/users/zbitouzakaria/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-04T09:18:03Z", "updated_at": "2018-09-04T09:18:03Z", "author_association": "NONE", "body_html": "<p>The best might be to simply specify it in the documentation. Something along theses lines for the <a href=\"https://www.tensorflow.org/api_docs/python/tf/nn/atrous_conv2d\" rel=\"nofollow\">atrous_conv2d doc</a>:</p>\n<ul>\n<li>Before</li>\n</ul>\n<blockquote>\n<p>This function is a simpler wrapper around the more general tf.nn.convolution, and exists only for backwards compatibility. You can use tf.nn.convolution to perform 1-D, 2-D, or 3-D atrous convolution.</p>\n</blockquote>\n<ul>\n<li>After</li>\n</ul>\n<blockquote>\n<p>This function is a simpler wrapper around the more general tf.nn.convolution, and exists only for backwards compatibility. Make sure to use tf.nn.convolution to perform 1-D, 2-D, or 3-D atrous convolutions, by specifying the proper dilation rate for your input.</p>\n</blockquote>\n<blockquote>\n<p>Be especially wary not to use this function to perform 1-D atrous convolutions, since we zero-pad the input tensor to have a size multiple of the dilation rate along the corresponding dimensions, which will affect the performance of the operation.</p>\n</blockquote>\n<p>Or you could put up a warning in the atrous_conv2d function if you notice that the input tensor is one dimensional along the width or height axis.</p>", "body_text": "The best might be to simply specify it in the documentation. Something along theses lines for the atrous_conv2d doc:\n\nBefore\n\n\nThis function is a simpler wrapper around the more general tf.nn.convolution, and exists only for backwards compatibility. You can use tf.nn.convolution to perform 1-D, 2-D, or 3-D atrous convolution.\n\n\nAfter\n\n\nThis function is a simpler wrapper around the more general tf.nn.convolution, and exists only for backwards compatibility. Make sure to use tf.nn.convolution to perform 1-D, 2-D, or 3-D atrous convolutions, by specifying the proper dilation rate for your input.\n\n\nBe especially wary not to use this function to perform 1-D atrous convolutions, since we zero-pad the input tensor to have a size multiple of the dilation rate along the corresponding dimensions, which will affect the performance of the operation.\n\nOr you could put up a warning in the atrous_conv2d function if you notice that the input tensor is one dimensional along the width or height axis.", "body": "The best might be to simply specify it in the documentation. Something along theses lines for the [atrous_conv2d doc](https://www.tensorflow.org/api_docs/python/tf/nn/atrous_conv2d):\r\n\r\n- Before\r\n\r\n> This function is a simpler wrapper around the more general tf.nn.convolution, and exists only for backwards compatibility. You can use tf.nn.convolution to perform 1-D, 2-D, or 3-D atrous convolution.\r\n\r\n\r\n- After\r\n\r\n> This function is a simpler wrapper around the more general tf.nn.convolution, and exists only for backwards compatibility. Make sure to use tf.nn.convolution to perform 1-D, 2-D, or 3-D atrous convolutions, by specifying the proper dilation rate for your input.\r\n\r\n> Be especially wary not to use this function to perform 1-D atrous convolutions, since we zero-pad the input tensor to have a size multiple of the dilation rate along the corresponding dimensions, which will affect the performance of the operation.\r\n\r\nOr you could put up a warning in the atrous_conv2d function if you notice that the input tensor is one dimensional along the width or height axis."}