{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/321187898", "html_url": "https://github.com/tensorflow/tensorflow/issues/4914#issuecomment-321187898", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4914", "id": 321187898, "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTE4Nzg5OA==", "user": {"login": "noe", "id": 4972, "node_id": "MDQ6VXNlcjQ5NzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/4972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/noe", "html_url": "https://github.com/noe", "followers_url": "https://api.github.com/users/noe/followers", "following_url": "https://api.github.com/users/noe/following{/other_user}", "gists_url": "https://api.github.com/users/noe/gists{/gist_id}", "starred_url": "https://api.github.com/users/noe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/noe/subscriptions", "organizations_url": "https://api.github.com/users/noe/orgs", "repos_url": "https://api.github.com/users/noe/repos", "events_url": "https://api.github.com/users/noe/events{/privacy}", "received_events_url": "https://api.github.com/users/noe/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-09T08:21:49Z", "updated_at": "2017-08-09T08:21:49Z", "author_association": "NONE", "body_html": "<p>This is still happening with TF 1.2.1. The updated snippet, which outputs the same results, is:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">from</span> <span class=\"pl-c1\">__future__</span> <span class=\"pl-k\">import</span> absolute_import, division, print_function\n<span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\nc <span class=\"pl-k\">=</span> tf.Variable(<span class=\"pl-c1\">0.0</span>)\n\nsqrt_grad <span class=\"pl-k\">=</span> tf.gradients(tf.sqrt(c), c)\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> another possibility is when another factor in the argument is zero</span>\nx <span class=\"pl-k\">=</span> tf.Variable(<span class=\"pl-c1\">1</span>.)\nsqrt_x_grad <span class=\"pl-k\">=</span> tf.gradients(tf.sqrt(x <span class=\"pl-k\">*</span> c), x)\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> try to use select to filter out the NaN</span>\nselsqrt_grad <span class=\"pl-k\">=</span> tf.gradients(tf.where(c <span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">0</span>, tf.sqrt(c), <span class=\"pl-c1\">0</span>), c)\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> try clipping of the sqrt</span>\nclipsqrt_grad <span class=\"pl-k\">=</span> tf.gradients(tf.clip_by_value(tf.sqrt(c), <span class=\"pl-c1\">1e-10</span>, <span class=\"pl-c1\">1</span>), c)\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> clip the argument of the sqrt --&gt; only numerically stable option</span>\nclipargsqrt_grad <span class=\"pl-k\">=</span> tf.gradients(tf.sqrt(tf.clip_by_value(c, <span class=\"pl-c1\">1e-10</span>, <span class=\"pl-c1\">1</span>)), c)\n\ninit_op <span class=\"pl-k\">=</span> tf.global_variables_initializer()\n\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n    sess.run(init_op)\n\n    <span class=\"pl-c1\">print</span>(sess.run([sqrt_grad, sqrt_x_grad, selsqrt_grad,\n                    clipsqrt_grad, clipargsqrt_grad]))</pre></div>", "body_text": "This is still happening with TF 1.2.1. The updated snippet, which outputs the same results, is:\nfrom __future__ import absolute_import, division, print_function\nimport tensorflow as tf\n\nc = tf.Variable(0.0)\n\nsqrt_grad = tf.gradients(tf.sqrt(c), c)\n\n# another possibility is when another factor in the argument is zero\nx = tf.Variable(1.)\nsqrt_x_grad = tf.gradients(tf.sqrt(x * c), x)\n\n# try to use select to filter out the NaN\nselsqrt_grad = tf.gradients(tf.where(c > 0, tf.sqrt(c), 0), c)\n\n# try clipping of the sqrt\nclipsqrt_grad = tf.gradients(tf.clip_by_value(tf.sqrt(c), 1e-10, 1), c)\n\n# clip the argument of the sqrt --> only numerically stable option\nclipargsqrt_grad = tf.gradients(tf.sqrt(tf.clip_by_value(c, 1e-10, 1)), c)\n\ninit_op = tf.global_variables_initializer()\n\nwith tf.Session() as sess:\n    sess.run(init_op)\n\n    print(sess.run([sqrt_grad, sqrt_x_grad, selsqrt_grad,\n                    clipsqrt_grad, clipargsqrt_grad]))", "body": "This is still happening with TF 1.2.1. The updated snippet, which outputs the same results, is:\r\n```Python\r\nfrom __future__ import absolute_import, division, print_function\r\nimport tensorflow as tf\r\n\r\nc = tf.Variable(0.0)\r\n\r\nsqrt_grad = tf.gradients(tf.sqrt(c), c)\r\n\r\n# another possibility is when another factor in the argument is zero\r\nx = tf.Variable(1.)\r\nsqrt_x_grad = tf.gradients(tf.sqrt(x * c), x)\r\n\r\n# try to use select to filter out the NaN\r\nselsqrt_grad = tf.gradients(tf.where(c > 0, tf.sqrt(c), 0), c)\r\n\r\n# try clipping of the sqrt\r\nclipsqrt_grad = tf.gradients(tf.clip_by_value(tf.sqrt(c), 1e-10, 1), c)\r\n\r\n# clip the argument of the sqrt --> only numerically stable option\r\nclipargsqrt_grad = tf.gradients(tf.sqrt(tf.clip_by_value(c, 1e-10, 1)), c)\r\n\r\ninit_op = tf.global_variables_initializer()\r\n\r\nwith tf.Session() as sess:\r\n    sess.run(init_op)\r\n\r\n    print(sess.run([sqrt_grad, sqrt_x_grad, selsqrt_grad,\r\n                    clipsqrt_grad, clipargsqrt_grad]))\r\n```"}