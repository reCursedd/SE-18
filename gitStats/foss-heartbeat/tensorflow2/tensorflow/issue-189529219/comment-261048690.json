{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/261048690", "html_url": "https://github.com/tensorflow/tensorflow/issues/5631#issuecomment-261048690", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5631", "id": 261048690, "node_id": "MDEyOklzc3VlQ29tbWVudDI2MTA0ODY5MA==", "user": {"login": "cbockman", "id": 4667922, "node_id": "MDQ6VXNlcjQ2Njc5MjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/4667922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cbockman", "html_url": "https://github.com/cbockman", "followers_url": "https://api.github.com/users/cbockman/followers", "following_url": "https://api.github.com/users/cbockman/following{/other_user}", "gists_url": "https://api.github.com/users/cbockman/gists{/gist_id}", "starred_url": "https://api.github.com/users/cbockman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cbockman/subscriptions", "organizations_url": "https://api.github.com/users/cbockman/orgs", "repos_url": "https://api.github.com/users/cbockman/repos", "events_url": "https://api.github.com/users/cbockman/events{/privacy}", "received_events_url": "https://api.github.com/users/cbockman/received_events", "type": "User", "site_admin": false}, "created_at": "2016-11-16T19:37:34Z", "updated_at": "2016-11-16T19:37:34Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Apologies...</p>\n<p>OK, so actually got bitten by an unrelated issue.  This can probably be closed, although maybe worth some light tf.Print documentation clarification.</p>\n<p><code>output, _ = tf.nn.bidirectional_dynamic_rnn(fw_cell, bw_cell, inputs,lengths,dtype=tf.float32)</code><br>\n<code>output=tf.Print(output, [output], \"MSG\")</code><br>\n<code>output = tf.concat(2, output)</code></p>\n<p>The above created issues for me because tf.Print apparently transforms the tuple of tensors (output) into a single tensor.  This results in tf.concat receiving a single tensor as 'output', rather than a tuple, as was expected.</p>\n<p>This may be 100% intended--and, in fact, the documentation for tf.Print is very understandably silent on what happens when a non-Tensor gets passed into tf.Print.  From a quick read of tf.Print as an \"identity\" op, however, I didn't anticipate that tf.Print could actually transform the input to something else.  (And yes, I now appreciate the internal consistency as to why this is true, given how TF generally tries to cast non-Tensors into Tensors, for convenience).</p>\n<p>Maybe worth clarifying, or maybe I'm just dumb...</p>\n<p>Certainly somewhat ironic, as I blindedly layered in a tf.Print for debug purposes, and managed to create another problem.</p>", "body_text": "Apologies...\nOK, so actually got bitten by an unrelated issue.  This can probably be closed, although maybe worth some light tf.Print documentation clarification.\noutput, _ = tf.nn.bidirectional_dynamic_rnn(fw_cell, bw_cell, inputs,lengths,dtype=tf.float32)\noutput=tf.Print(output, [output], \"MSG\")\noutput = tf.concat(2, output)\nThe above created issues for me because tf.Print apparently transforms the tuple of tensors (output) into a single tensor.  This results in tf.concat receiving a single tensor as 'output', rather than a tuple, as was expected.\nThis may be 100% intended--and, in fact, the documentation for tf.Print is very understandably silent on what happens when a non-Tensor gets passed into tf.Print.  From a quick read of tf.Print as an \"identity\" op, however, I didn't anticipate that tf.Print could actually transform the input to something else.  (And yes, I now appreciate the internal consistency as to why this is true, given how TF generally tries to cast non-Tensors into Tensors, for convenience).\nMaybe worth clarifying, or maybe I'm just dumb...\nCertainly somewhat ironic, as I blindedly layered in a tf.Print for debug purposes, and managed to create another problem.", "body": "Apologies...\n\nOK, so actually got bitten by an unrelated issue.  This can probably be closed, although maybe worth some light tf.Print documentation clarification.\n\n`output, _ = tf.nn.bidirectional_dynamic_rnn(fw_cell, bw_cell, inputs,lengths,dtype=tf.float32)`\n`output=tf.Print(output, [output], \"MSG\")`\n`output = tf.concat(2, output)`\n\nThe above created issues for me because tf.Print apparently transforms the tuple of tensors (output) into a single tensor.  This results in tf.concat receiving a single tensor as 'output', rather than a tuple, as was expected.\n\nThis may be 100% intended--and, in fact, the documentation for tf.Print is very understandably silent on what happens when a non-Tensor gets passed into tf.Print.  From a quick read of tf.Print as an \"identity\" op, however, I didn't anticipate that tf.Print could actually transform the input to something else.  (And yes, I now appreciate the internal consistency as to why this is true, given how TF generally tries to cast non-Tensors into Tensors, for convenience).\n\nMaybe worth clarifying, or maybe I'm just dumb...\n\nCertainly somewhat ironic, as I blindedly layered in a tf.Print for debug purposes, and managed to create another problem.\n"}