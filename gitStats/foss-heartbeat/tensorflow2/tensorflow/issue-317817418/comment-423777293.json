{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/423777293", "html_url": "https://github.com/tensorflow/tensorflow/issues/18879#issuecomment-423777293", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18879", "id": 423777293, "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzc3NzI5Mw==", "user": {"login": "martiningram", "id": 8013690, "node_id": "MDQ6VXNlcjgwMTM2OTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/8013690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martiningram", "html_url": "https://github.com/martiningram", "followers_url": "https://api.github.com/users/martiningram/followers", "following_url": "https://api.github.com/users/martiningram/following{/other_user}", "gists_url": "https://api.github.com/users/martiningram/gists{/gist_id}", "starred_url": "https://api.github.com/users/martiningram/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martiningram/subscriptions", "organizations_url": "https://api.github.com/users/martiningram/orgs", "repos_url": "https://api.github.com/users/martiningram/repos", "events_url": "https://api.github.com/users/martiningram/events{/privacy}", "received_events_url": "https://api.github.com/users/martiningram/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-22T22:17:03Z", "updated_at": "2018-09-22T22:17:46Z", "author_association": "NONE", "body_html": "<p>Hi all,</p>\n<p>I just wanted to write that I had the same problem under Mac OS X, and after a lot of dead ends (including building tensorflow from source...!) I realised that I hadn't copied part of the example to my file. In particular, I was missing the <code>REGISTER_OP</code> part right at the top of the file. The following file works for me:</p>\n<pre><code>#include \"tensorflow/core/framework/op_kernel.h\"\n\n#include \"tensorflow/core/framework/op.h\"\n#include \"tensorflow/core/framework/shape_inference.h\"\n\nusing namespace tensorflow;\n\nREGISTER_OP(\"ZeroOut\")\n    .Input(\"to_zero: int32\")\n    .Output(\"zeroed: int32\")\n    .SetShapeFn([](::tensorflow::shape_inference::InferenceContext* c) {\n      c-&gt;set_output(0, c-&gt;input(0));\n      return Status::OK();\n    });\n\nclass ZeroOutOp : public OpKernel {\n public:\n  explicit ZeroOutOp(OpKernelConstruction* context) : OpKernel(context) {}\n\n  void Compute(OpKernelContext* context) override {\n    // Grab the input tensor\n    const Tensor&amp; input_tensor = context-&gt;input(0);\n    auto input = input_tensor.flat&lt;int32&gt;();\n\n    // Create an output tensor\n    Tensor* output_tensor = NULL;\n    OP_REQUIRES_OK(context, context-&gt;allocate_output(0, input_tensor.shape(),\n                                                     &amp;output_tensor));\n    auto output_flat = output_tensor-&gt;flat&lt;int32&gt;();\n\n    // Set all but the first element of the output tensor to 0.\n    const int N = input.size();\n    for (int i = 1; i &lt; N; i++) {\n      output_flat(i) = 0;\n    }\n\n    // Preserve the first input value if possible.\n    if (N &gt; 0) output_flat(0) = input(0);\n  }\n};\n\nREGISTER_KERNEL_BUILDER(Name(\"ZeroOut\").Device(DEVICE_CPU), ZeroOutOp);\n</code></pre>\n<p>You guys may have a Windows-specific problem, but I thought I'd pass this on anyway.</p>", "body_text": "Hi all,\nI just wanted to write that I had the same problem under Mac OS X, and after a lot of dead ends (including building tensorflow from source...!) I realised that I hadn't copied part of the example to my file. In particular, I was missing the REGISTER_OP part right at the top of the file. The following file works for me:\n#include \"tensorflow/core/framework/op_kernel.h\"\n\n#include \"tensorflow/core/framework/op.h\"\n#include \"tensorflow/core/framework/shape_inference.h\"\n\nusing namespace tensorflow;\n\nREGISTER_OP(\"ZeroOut\")\n    .Input(\"to_zero: int32\")\n    .Output(\"zeroed: int32\")\n    .SetShapeFn([](::tensorflow::shape_inference::InferenceContext* c) {\n      c->set_output(0, c->input(0));\n      return Status::OK();\n    });\n\nclass ZeroOutOp : public OpKernel {\n public:\n  explicit ZeroOutOp(OpKernelConstruction* context) : OpKernel(context) {}\n\n  void Compute(OpKernelContext* context) override {\n    // Grab the input tensor\n    const Tensor& input_tensor = context->input(0);\n    auto input = input_tensor.flat<int32>();\n\n    // Create an output tensor\n    Tensor* output_tensor = NULL;\n    OP_REQUIRES_OK(context, context->allocate_output(0, input_tensor.shape(),\n                                                     &output_tensor));\n    auto output_flat = output_tensor->flat<int32>();\n\n    // Set all but the first element of the output tensor to 0.\n    const int N = input.size();\n    for (int i = 1; i < N; i++) {\n      output_flat(i) = 0;\n    }\n\n    // Preserve the first input value if possible.\n    if (N > 0) output_flat(0) = input(0);\n  }\n};\n\nREGISTER_KERNEL_BUILDER(Name(\"ZeroOut\").Device(DEVICE_CPU), ZeroOutOp);\n\nYou guys may have a Windows-specific problem, but I thought I'd pass this on anyway.", "body": "Hi all,\r\n\r\nI just wanted to write that I had the same problem under Mac OS X, and after a lot of dead ends (including building tensorflow from source...!) I realised that I hadn't copied part of the example to my file. In particular, I was missing the `REGISTER_OP` part right at the top of the file. The following file works for me:\r\n\r\n```\r\n#include \"tensorflow/core/framework/op_kernel.h\"\r\n\r\n#include \"tensorflow/core/framework/op.h\"\r\n#include \"tensorflow/core/framework/shape_inference.h\"\r\n\r\nusing namespace tensorflow;\r\n\r\nREGISTER_OP(\"ZeroOut\")\r\n    .Input(\"to_zero: int32\")\r\n    .Output(\"zeroed: int32\")\r\n    .SetShapeFn([](::tensorflow::shape_inference::InferenceContext* c) {\r\n      c->set_output(0, c->input(0));\r\n      return Status::OK();\r\n    });\r\n\r\nclass ZeroOutOp : public OpKernel {\r\n public:\r\n  explicit ZeroOutOp(OpKernelConstruction* context) : OpKernel(context) {}\r\n\r\n  void Compute(OpKernelContext* context) override {\r\n    // Grab the input tensor\r\n    const Tensor& input_tensor = context->input(0);\r\n    auto input = input_tensor.flat<int32>();\r\n\r\n    // Create an output tensor\r\n    Tensor* output_tensor = NULL;\r\n    OP_REQUIRES_OK(context, context->allocate_output(0, input_tensor.shape(),\r\n                                                     &output_tensor));\r\n    auto output_flat = output_tensor->flat<int32>();\r\n\r\n    // Set all but the first element of the output tensor to 0.\r\n    const int N = input.size();\r\n    for (int i = 1; i < N; i++) {\r\n      output_flat(i) = 0;\r\n    }\r\n\r\n    // Preserve the first input value if possible.\r\n    if (N > 0) output_flat(0) = input(0);\r\n  }\r\n};\r\n\r\nREGISTER_KERNEL_BUILDER(Name(\"ZeroOut\").Device(DEVICE_CPU), ZeroOutOp);\r\n```\r\n\r\nYou guys may have a Windows-specific problem, but I thought I'd pass this on anyway."}