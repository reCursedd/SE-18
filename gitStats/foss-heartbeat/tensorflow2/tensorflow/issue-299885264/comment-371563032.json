{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/371563032", "html_url": "https://github.com/tensorflow/tensorflow/issues/17233#issuecomment-371563032", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17233", "id": 371563032, "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTU2MzAzMg==", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-08T17:36:05Z", "updated_at": "2018-03-08T17:36:05Z", "author_association": "CONTRIBUTOR", "body_html": "<p>OK, it looks like your issue is also due to change in alignment requirements in TF 1.6</p>\n<p>The reason <code>align_numpy_tf</code> didn't help is possibly because you were calling it too many times. Each time you call it, it involves a memory copy into aligned memory. The way I use it is to call it once, and then do in-place operations on the resulting array.</p>\n<p>PS, you can check alignment of various allocators using this utility</p>\n<pre><code># install ray, pytorch, then\nwget -N https://raw.githubusercontent.com/diux-dev/cluster/fa98c59d07447e2b7923fde8ee294f9a054f9fbb/yuxin_numpy/tf_numpy_benchmark.py\npython tf_numpy_benchmark.py --benchmark=allocator_alignment\n</code></pre>\n<p>it prints how many bytes you are off 64-byte alignment, ie, I see something like this with tcmalloc</p>\n<pre><code>     numpy: 0\n       ray: 48\n   pytorch: 0\n        tf: 0\n</code></pre>", "body_text": "OK, it looks like your issue is also due to change in alignment requirements in TF 1.6\nThe reason align_numpy_tf didn't help is possibly because you were calling it too many times. Each time you call it, it involves a memory copy into aligned memory. The way I use it is to call it once, and then do in-place operations on the resulting array.\nPS, you can check alignment of various allocators using this utility\n# install ray, pytorch, then\nwget -N https://raw.githubusercontent.com/diux-dev/cluster/fa98c59d07447e2b7923fde8ee294f9a054f9fbb/yuxin_numpy/tf_numpy_benchmark.py\npython tf_numpy_benchmark.py --benchmark=allocator_alignment\n\nit prints how many bytes you are off 64-byte alignment, ie, I see something like this with tcmalloc\n     numpy: 0\n       ray: 48\n   pytorch: 0\n        tf: 0", "body": "OK, it looks like your issue is also due to change in alignment requirements in TF 1.6\r\n\r\nThe reason `align_numpy_tf` didn't help is possibly because you were calling it too many times. Each time you call it, it involves a memory copy into aligned memory. The way I use it is to call it once, and then do in-place operations on the resulting array.\r\n \r\nPS, you can check alignment of various allocators using this utility\r\n\r\n```\r\n# install ray, pytorch, then\r\nwget -N https://raw.githubusercontent.com/diux-dev/cluster/fa98c59d07447e2b7923fde8ee294f9a054f9fbb/yuxin_numpy/tf_numpy_benchmark.py\r\npython tf_numpy_benchmark.py --benchmark=allocator_alignment\r\n```\r\nit prints how many bytes you are off 64-byte alignment, ie, I see something like this with tcmalloc\r\n```\r\n     numpy: 0\r\n       ray: 48\r\n   pytorch: 0\r\n        tf: 0\r\n```"}