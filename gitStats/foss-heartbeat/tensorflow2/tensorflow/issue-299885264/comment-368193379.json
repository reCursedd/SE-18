{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/368193379", "html_url": "https://github.com/tensorflow/tensorflow/issues/17233#issuecomment-368193379", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17233", "id": 368193379, "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODE5MzM3OQ==", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-24T02:57:14Z", "updated_at": "2018-02-24T02:57:14Z", "author_association": "CONTRIBUTOR", "body_html": "<p>OK, here's a hacky way of aligning an existing array. This removes the speed penalty of speed dict, and you can copy new data into existing aligned memory using <code>np.copyto</code></p>\n<pre><code>def align_numpy(unaligned):\n  sess = tf.get_default_session()\n  aligned = sess.run(tf.ones(unaligned.shape, dtype=unaligned.dtype))\n  np.copyto(aligned, unaligned)\n  return aligned\n\n</code></pre>", "body_text": "OK, here's a hacky way of aligning an existing array. This removes the speed penalty of speed dict, and you can copy new data into existing aligned memory using np.copyto\ndef align_numpy(unaligned):\n  sess = tf.get_default_session()\n  aligned = sess.run(tf.ones(unaligned.shape, dtype=unaligned.dtype))\n  np.copyto(aligned, unaligned)\n  return aligned", "body": "OK, here's a hacky way of aligning an existing array. This removes the speed penalty of speed dict, and you can copy new data into existing aligned memory using `np.copyto`\r\n\r\n```\r\ndef align_numpy(unaligned):\r\n  sess = tf.get_default_session()\r\n  aligned = sess.run(tf.ones(unaligned.shape, dtype=unaligned.dtype))\r\n  np.copyto(aligned, unaligned)\r\n  return aligned\r\n\r\n```"}