{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15115", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15115/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15115/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15115/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15115", "id": 279240779, "node_id": "MDU6SXNzdWUyNzkyNDA3Nzk=", "number": 15115, "title": "Wrong result when computing accuracy using tf.metrics.accuracy", "user": {"login": "secsilm", "id": 8894643, "node_id": "MDQ6VXNlcjg4OTQ2NDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/8894643?v=4", "gravatar_id": "", "url": "https://api.github.com/users/secsilm", "html_url": "https://github.com/secsilm", "followers_url": "https://api.github.com/users/secsilm/followers", "following_url": "https://api.github.com/users/secsilm/following{/other_user}", "gists_url": "https://api.github.com/users/secsilm/gists{/gist_id}", "starred_url": "https://api.github.com/users/secsilm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/secsilm/subscriptions", "organizations_url": "https://api.github.com/users/secsilm/orgs", "repos_url": "https://api.github.com/users/secsilm/repos", "events_url": "https://api.github.com/users/secsilm/events{/privacy}", "received_events_url": "https://api.github.com/users/secsilm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-12-05T04:18:37Z", "updated_at": "2017-12-07T02:22:28Z", "closed_at": "2017-12-05T18:54:56Z", "author_association": "CONTRIBUTOR", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Windows 10 1709</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: pip</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.4.0</li>\n<li><strong>Python version</strong>: Python 3.5.2 :: Anaconda custom (64-bit)</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I found the result <code>tf.metrics.accuracy</code> returns is incorrect when I trained my model. To verify this I wrote a  simple program.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\nsess <span class=\"pl-k\">=</span> tf.Session()\nlabels <span class=\"pl-k\">=</span> tf.placeholder(tf.int32)\npredictions <span class=\"pl-k\">=</span> tf.placeholder(tf.int32)\nacc, _ <span class=\"pl-k\">=</span> tf.metrics.accuracy(labels, predictions)\nmy_acc <span class=\"pl-k\">=</span> tf.reduce_mean(tf.cast(tf.equal(labels, predictions), tf.float32))\n\nfeed_dict <span class=\"pl-k\">=</span> {\n    labels: [<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">5</span>], \n    predictions: [<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">5</span>]\n}\nsess.run(tf.global_variables_initializer())\nsess.run(tf.local_variables_initializer())\n\nsess.run(acc, feed_dict)  <span class=\"pl-c\"><span class=\"pl-c\">#</span> 0.0</span>\nsess.run(my_acc, feed_dict)  <span class=\"pl-c\"><span class=\"pl-c\">#</span> 1.0</span></pre></div>\n<p>You can see that <code>acc</code> and <code>my_acc</code> is different and acc is wrong. I double checked <a href=\"https://www.tensorflow.org/api_docs/python/tf/metrics/accuracy\" rel=\"nofollow\">the doc</a> and still confused. Is there anything I missed? Thank you.</p>", "body_text": "System information\n\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10 1709\nTensorFlow installed from (source or binary): pip\nTensorFlow version (use command below): 1.4.0\nPython version: Python 3.5.2 :: Anaconda custom (64-bit)\n\nDescribe the problem\nI found the result tf.metrics.accuracy returns is incorrect when I trained my model. To verify this I wrote a  simple program.\nimport tensorflow as tf\n\nsess = tf.Session()\nlabels = tf.placeholder(tf.int32)\npredictions = tf.placeholder(tf.int32)\nacc, _ = tf.metrics.accuracy(labels, predictions)\nmy_acc = tf.reduce_mean(tf.cast(tf.equal(labels, predictions), tf.float32))\n\nfeed_dict = {\n    labels: [1, 2, 3, 4, 5], \n    predictions: [1, 2, 3, 4, 5]\n}\nsess.run(tf.global_variables_initializer())\nsess.run(tf.local_variables_initializer())\n\nsess.run(acc, feed_dict)  # 0.0\nsess.run(my_acc, feed_dict)  # 1.0\nYou can see that acc and my_acc is different and acc is wrong. I double checked the doc and still confused. Is there anything I missed? Thank you.", "body": "### System information\r\n\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 10 1709\r\n- **TensorFlow installed from (source or binary)**: pip\r\n- **TensorFlow version (use command below)**: 1.4.0\r\n- **Python version**: Python 3.5.2 :: Anaconda custom (64-bit)\r\n\r\n### Describe the problem\r\n\r\nI found the result `tf.metrics.accuracy` returns is incorrect when I trained my model. To verify this I wrote a  simple program.\r\n\r\n```python\r\nimport tensorflow as tf\r\n\r\nsess = tf.Session()\r\nlabels = tf.placeholder(tf.int32)\r\npredictions = tf.placeholder(tf.int32)\r\nacc, _ = tf.metrics.accuracy(labels, predictions)\r\nmy_acc = tf.reduce_mean(tf.cast(tf.equal(labels, predictions), tf.float32))\r\n\r\nfeed_dict = {\r\n    labels: [1, 2, 3, 4, 5], \r\n    predictions: [1, 2, 3, 4, 5]\r\n}\r\nsess.run(tf.global_variables_initializer())\r\nsess.run(tf.local_variables_initializer())\r\n\r\nsess.run(acc, feed_dict)  # 0.0\r\nsess.run(my_acc, feed_dict)  # 1.0\r\n```\r\n\r\nYou can see that `acc` and `my_acc` is different and acc is wrong. I double checked [the doc](https://www.tensorflow.org/api_docs/python/tf/metrics/accuracy) and still confused. Is there anything I missed? Thank you."}