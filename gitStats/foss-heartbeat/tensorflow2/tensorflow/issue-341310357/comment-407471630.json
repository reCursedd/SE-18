{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/407471630", "html_url": "https://github.com/tensorflow/tensorflow/issues/20816#issuecomment-407471630", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20816", "id": 407471630, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzQ3MTYzMA==", "user": {"login": "robieta", "id": 13089297, "node_id": "MDQ6VXNlcjEzMDg5Mjk3", "avatar_url": "https://avatars0.githubusercontent.com/u/13089297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robieta", "html_url": "https://github.com/robieta", "followers_url": "https://api.github.com/users/robieta/followers", "following_url": "https://api.github.com/users/robieta/following{/other_user}", "gists_url": "https://api.github.com/users/robieta/gists{/gist_id}", "starred_url": "https://api.github.com/users/robieta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robieta/subscriptions", "organizations_url": "https://api.github.com/users/robieta/orgs", "repos_url": "https://api.github.com/users/robieta/repos", "events_url": "https://api.github.com/users/robieta/events{/privacy}", "received_events_url": "https://api.github.com/users/robieta/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-24T16:38:08Z", "updated_at": "2018-07-24T16:38:08Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I don't think that would be practical. (Since we can't control how a builtin behaved. If you need to change dtypes you will need to use <code>tf.cast</code>. Feel free to reopen this issue with more explanation if that doesn't satisfy your use case.</p>", "body_text": "I don't think that would be practical. (Since we can't control how a builtin behaved. If you need to change dtypes you will need to use tf.cast. Feel free to reopen this issue with more explanation if that doesn't satisfy your use case.", "body": "I don't think that would be practical. (Since we can't control how a builtin behaved. If you need to change dtypes you will need to use `tf.cast`. Feel free to reopen this issue with more explanation if that doesn't satisfy your use case."}