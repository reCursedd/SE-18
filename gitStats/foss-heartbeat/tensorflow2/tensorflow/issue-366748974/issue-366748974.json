{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22727", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22727/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22727/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22727/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/22727", "id": 366748974, "node_id": "MDU6SXNzdWUzNjY3NDg5NzQ=", "number": 22727, "title": "Error with model.fit when input is a dataset", "user": {"login": "dmus", "id": 464378, "node_id": "MDQ6VXNlcjQ2NDM3OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/464378?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmus", "html_url": "https://github.com/dmus", "followers_url": "https://api.github.com/users/dmus/followers", "following_url": "https://api.github.com/users/dmus/following{/other_user}", "gists_url": "https://api.github.com/users/dmus/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmus/subscriptions", "organizations_url": "https://api.github.com/users/dmus/orgs", "repos_url": "https://api.github.com/users/dmus/repos", "events_url": "https://api.github.com/users/dmus/events{/privacy}", "received_events_url": "https://api.github.com/users/dmus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-10-04T11:40:34Z", "updated_at": "2018-11-20T07:57:06Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>EDIT: Probably solved, this is because no label information is provided. However, the error message is not very clear</p>\n<h3>System information</h3>\n<ul>\n<li>Tensorflow 1.10 and tf-nightly-gpu-1.12.0.dev20181004</li>\n<li>Ubuntu 16.04</li>\n</ul>\n<p>model.fit() gives an error when the input data is a tensor that is concatenated from different datasets.</p>\n<p>With this code example the error can be reproduced:</p>\n<pre><code>import tensorflow as tf\nimport numpy as np\n\nif __name__ == '__main__':\n    \n    model = tf.keras.Sequential()\n    model.add(tf.keras.layers.Dense(32, input_shape=(48,48,3)))\n    model.add(tf.keras.layers.Dense(32))\n\n    model.summary()\n\n    # Compile with optimizer, loss and metrics\n    optimizer = tf.train.AdamOptimizer(learning_rate=0.01)\n    model.compile(loss=tf.keras.losses.mean_squared_error,\n                  optimizer=optimizer)\n\n    # make a dataset from a numpy array\n    x = np.random.sample((1000,48,48,3))\n    match = tf.data.Dataset.from_tensor_slices(x)\n\n    classes = []\n    for c in range(5):\n        # In a real application here a dataset.filter() is used\n        class_data = match\n        class_data = class_data.batch(4)\n        classes.append(class_data)\n    \n    data = list(map(lambda x: x.make_one_shot_iterator().get_next(), classes))\n    batch = tf.concat(axis=0, values=data)\n\n    model.fit(\n        batch,\n        steps_per_epoch=100,\n        epochs=100)\n</code></pre>\n<p>The error is</p>\n<blockquote>\n<p>myproject/nightly-env/lib/python3.6/site-packages/tensorflow/python/keras/engine/training_arrays.py\", line 137, in fit_loop<br>\nif issparse is not None and issparse(ins[i]) and not K.is_sparse(feed[i]):<br>\nIndexError: list index out of range</p>\n</blockquote>\n<p>The code can be even simplified further:</p>\n<pre><code>import tensorflow as tf\nimport numpy as np\n\nif __name__ == '__main__':\n    \n    model = tf.keras.Sequential()\n    model.add(tf.keras.layers.Dense(32, input_shape=(48,48,3)))\n    model.add(tf.keras.layers.Dense(32))\n\n    model.summary()\n\n    # Compile with optimizer, loss and metrics\n    optimizer = tf.train.AdamOptimizer(learning_rate=0.01)\n    model.compile(loss=tf.keras.losses.mean_squared_error,\n                  optimizer=optimizer)\n\n    # make a dataset from a numpy array\n    x = np.random.sample((1000,48,48,3))\n    match = tf.data.Dataset.from_tensor_slices(x)\n    match = match.batch(4)\n\n    model.fit(\n        match,\n        steps_per_epoch=100,\n        epochs=100)\n</code></pre>\n<p>This gives the same error</p>", "body_text": "EDIT: Probably solved, this is because no label information is provided. However, the error message is not very clear\nSystem information\n\nTensorflow 1.10 and tf-nightly-gpu-1.12.0.dev20181004\nUbuntu 16.04\n\nmodel.fit() gives an error when the input data is a tensor that is concatenated from different datasets.\nWith this code example the error can be reproduced:\nimport tensorflow as tf\nimport numpy as np\n\nif __name__ == '__main__':\n    \n    model = tf.keras.Sequential()\n    model.add(tf.keras.layers.Dense(32, input_shape=(48,48,3)))\n    model.add(tf.keras.layers.Dense(32))\n\n    model.summary()\n\n    # Compile with optimizer, loss and metrics\n    optimizer = tf.train.AdamOptimizer(learning_rate=0.01)\n    model.compile(loss=tf.keras.losses.mean_squared_error,\n                  optimizer=optimizer)\n\n    # make a dataset from a numpy array\n    x = np.random.sample((1000,48,48,3))\n    match = tf.data.Dataset.from_tensor_slices(x)\n\n    classes = []\n    for c in range(5):\n        # In a real application here a dataset.filter() is used\n        class_data = match\n        class_data = class_data.batch(4)\n        classes.append(class_data)\n    \n    data = list(map(lambda x: x.make_one_shot_iterator().get_next(), classes))\n    batch = tf.concat(axis=0, values=data)\n\n    model.fit(\n        batch,\n        steps_per_epoch=100,\n        epochs=100)\n\nThe error is\n\nmyproject/nightly-env/lib/python3.6/site-packages/tensorflow/python/keras/engine/training_arrays.py\", line 137, in fit_loop\nif issparse is not None and issparse(ins[i]) and not K.is_sparse(feed[i]):\nIndexError: list index out of range\n\nThe code can be even simplified further:\nimport tensorflow as tf\nimport numpy as np\n\nif __name__ == '__main__':\n    \n    model = tf.keras.Sequential()\n    model.add(tf.keras.layers.Dense(32, input_shape=(48,48,3)))\n    model.add(tf.keras.layers.Dense(32))\n\n    model.summary()\n\n    # Compile with optimizer, loss and metrics\n    optimizer = tf.train.AdamOptimizer(learning_rate=0.01)\n    model.compile(loss=tf.keras.losses.mean_squared_error,\n                  optimizer=optimizer)\n\n    # make a dataset from a numpy array\n    x = np.random.sample((1000,48,48,3))\n    match = tf.data.Dataset.from_tensor_slices(x)\n    match = match.batch(4)\n\n    model.fit(\n        match,\n        steps_per_epoch=100,\n        epochs=100)\n\nThis gives the same error", "body": "EDIT: Probably solved, this is because no label information is provided. However, the error message is not very clear\r\n\r\n### System information\r\n- Tensorflow 1.10 and tf-nightly-gpu-1.12.0.dev20181004\r\n- Ubuntu 16.04\r\n\r\nmodel.fit() gives an error when the input data is a tensor that is concatenated from different datasets.\r\n\r\nWith this code example the error can be reproduced:\r\n```\r\nimport tensorflow as tf\r\nimport numpy as np\r\n\r\nif __name__ == '__main__':\r\n    \r\n    model = tf.keras.Sequential()\r\n    model.add(tf.keras.layers.Dense(32, input_shape=(48,48,3)))\r\n    model.add(tf.keras.layers.Dense(32))\r\n\r\n    model.summary()\r\n\r\n    # Compile with optimizer, loss and metrics\r\n    optimizer = tf.train.AdamOptimizer(learning_rate=0.01)\r\n    model.compile(loss=tf.keras.losses.mean_squared_error,\r\n                  optimizer=optimizer)\r\n\r\n    # make a dataset from a numpy array\r\n    x = np.random.sample((1000,48,48,3))\r\n    match = tf.data.Dataset.from_tensor_slices(x)\r\n\r\n    classes = []\r\n    for c in range(5):\r\n        # In a real application here a dataset.filter() is used\r\n        class_data = match\r\n        class_data = class_data.batch(4)\r\n        classes.append(class_data)\r\n    \r\n    data = list(map(lambda x: x.make_one_shot_iterator().get_next(), classes))\r\n    batch = tf.concat(axis=0, values=data)\r\n\r\n    model.fit(\r\n        batch,\r\n        steps_per_epoch=100,\r\n        epochs=100)\r\n```\r\nThe error is\r\n\r\n> myproject/nightly-env/lib/python3.6/site-packages/tensorflow/python/keras/engine/training_arrays.py\", line 137, in fit_loop\r\n>     if issparse is not None and issparse(ins[i]) and not K.is_sparse(feed[i]):\r\n> IndexError: list index out of range\r\n\r\nThe code can be even simplified further:\r\n```\r\nimport tensorflow as tf\r\nimport numpy as np\r\n\r\nif __name__ == '__main__':\r\n    \r\n    model = tf.keras.Sequential()\r\n    model.add(tf.keras.layers.Dense(32, input_shape=(48,48,3)))\r\n    model.add(tf.keras.layers.Dense(32))\r\n\r\n    model.summary()\r\n\r\n    # Compile with optimizer, loss and metrics\r\n    optimizer = tf.train.AdamOptimizer(learning_rate=0.01)\r\n    model.compile(loss=tf.keras.losses.mean_squared_error,\r\n                  optimizer=optimizer)\r\n\r\n    # make a dataset from a numpy array\r\n    x = np.random.sample((1000,48,48,3))\r\n    match = tf.data.Dataset.from_tensor_slices(x)\r\n    match = match.batch(4)\r\n\r\n    model.fit(\r\n        match,\r\n        steps_per_epoch=100,\r\n        epochs=100)\r\n```\r\nThis gives the same error"}