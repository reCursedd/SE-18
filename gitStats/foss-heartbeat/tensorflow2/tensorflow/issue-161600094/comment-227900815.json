{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/227900815", "html_url": "https://github.com/tensorflow/tensorflow/issues/2990#issuecomment-227900815", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2990", "id": 227900815, "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzkwMDgxNQ==", "user": {"login": "dannygoldstein", "id": 2769632, "node_id": "MDQ6VXNlcjI3Njk2MzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/2769632?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dannygoldstein", "html_url": "https://github.com/dannygoldstein", "followers_url": "https://api.github.com/users/dannygoldstein/followers", "following_url": "https://api.github.com/users/dannygoldstein/following{/other_user}", "gists_url": "https://api.github.com/users/dannygoldstein/gists{/gist_id}", "starred_url": "https://api.github.com/users/dannygoldstein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dannygoldstein/subscriptions", "organizations_url": "https://api.github.com/users/dannygoldstein/orgs", "repos_url": "https://api.github.com/users/dannygoldstein/repos", "events_url": "https://api.github.com/users/dannygoldstein/events{/privacy}", "received_events_url": "https://api.github.com/users/dannygoldstein/received_events", "type": "User", "site_admin": false}, "created_at": "2016-06-22T22:49:37Z", "updated_at": "2016-06-22T22:49:37Z", "author_association": "NONE", "body_html": "<p>Thanks!</p>\n<p>On Wed, Jun 22, 2016 at 3:47 PM, Igor Babuschkin <a href=\"mailto:notifications@github.com\">notifications@github.com</a><br>\nwrote:</p>\n<blockquote>\n<p>Is there any way to have a variable initialized with a callable call it<br>\neach time the variable's initializer is run?</p>\n<p>You can define the initializer as a PyFunc op.<br>\nNote that you need to manually specify the output shape of your op with<br>\ntensor.set_shape before you can use it to initialize a variable.</p>\n<p>import tensorflow as tfimport numpy as npimport scipy</p>\n<p>session = tf.InteractiveSession()<br>\ndef get_random():<br>\nreturn scipy.random.random(size=[2,2]).astype(np.float32)</p>\n<p>init = tf.py_func(get_random, [], [tf.float32])[0]<br>\ninit.set_shape((2, 2))<br>\nvar = tf.Variable(init)<br>\nsession.run(var.initializer)print(var.eval())#[[ 0.97525001  0.68293589]# [ 0.59959763  0.14780547]]<br>\nsession.run(var.initializer)print(var.eval())#[[ 0.7729072   0.84212685]# [ 0.74777764  0.97365493]]</p>\n<p>\u2014<br>\nYou are receiving this because you authored the thread.<br>\nReply to this email directly, view it on GitHub<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"161600094\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/2990\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/2990/hovercard?comment_id=227900152&amp;comment_type=issue_comment\" href=\"https://github.com/tensorflow/tensorflow/issues/2990#issuecomment-227900152\">#2990 (comment)</a>,<br>\nor mute the thread<br>\n<a href=\"https://github.com/notifications/unsubscribe/ACpC4M2MCb7ZvaD_jlqiYIAfJvEdvdhyks5qObuSgaJpZM4I7bnS\">https://github.com/notifications/unsubscribe/ACpC4M2MCb7ZvaD_jlqiYIAfJvEdvdhyks5qObuSgaJpZM4I7bnS</a><br>\n.</p>\n</blockquote>\n<h2></h2>\n<p>Danny Goldstein<br>\n<a href=\"http://astro.berkeley.edu/~dgold/\" rel=\"nofollow\">http://astro.berkeley.edu/~dgold/</a></p>", "body_text": "Thanks!\nOn Wed, Jun 22, 2016 at 3:47 PM, Igor Babuschkin notifications@github.com\nwrote:\n\nIs there any way to have a variable initialized with a callable call it\neach time the variable's initializer is run?\nYou can define the initializer as a PyFunc op.\nNote that you need to manually specify the output shape of your op with\ntensor.set_shape before you can use it to initialize a variable.\nimport tensorflow as tfimport numpy as npimport scipy\nsession = tf.InteractiveSession()\ndef get_random():\nreturn scipy.random.random(size=[2,2]).astype(np.float32)\ninit = tf.py_func(get_random, [], [tf.float32])[0]\ninit.set_shape((2, 2))\nvar = tf.Variable(init)\nsession.run(var.initializer)print(var.eval())#[[ 0.97525001  0.68293589]# [ 0.59959763  0.14780547]]\nsession.run(var.initializer)print(var.eval())#[[ 0.7729072   0.84212685]# [ 0.74777764  0.97365493]]\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\n#2990 (comment),\nor mute the thread\nhttps://github.com/notifications/unsubscribe/ACpC4M2MCb7ZvaD_jlqiYIAfJvEdvdhyks5qObuSgaJpZM4I7bnS\n.\n\n\nDanny Goldstein\nhttp://astro.berkeley.edu/~dgold/", "body": "Thanks!\n\nOn Wed, Jun 22, 2016 at 3:47 PM, Igor Babuschkin notifications@github.com\nwrote:\n\n> Is there any way to have a variable initialized with a callable call it\n> each time the variable's initializer is run?\n> \n> You can define the initializer as a PyFunc op.\n> Note that you need to manually specify the output shape of your op with\n> tensor.set_shape before you can use it to initialize a variable.\n> \n> import tensorflow as tfimport numpy as npimport scipy\n> \n> session = tf.InteractiveSession()\n> def get_random():\n>     return scipy.random.random(size=[2,2]).astype(np.float32)\n> \n> init = tf.py_func(get_random, [], [tf.float32])[0]\n> init.set_shape((2, 2))\n> var = tf.Variable(init)\n> session.run(var.initializer)print(var.eval())#[[ 0.97525001  0.68293589]# [ 0.59959763  0.14780547]]\n> session.run(var.initializer)print(var.eval())#[[ 0.7729072   0.84212685]# [ 0.74777764  0.97365493]]\n> \n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/tensorflow/tensorflow/issues/2990#issuecomment-227900152,\n> or mute the thread\n> https://github.com/notifications/unsubscribe/ACpC4M2MCb7ZvaD_jlqiYIAfJvEdvdhyks5qObuSgaJpZM4I7bnS\n> .\n\n## \n\nDanny Goldstein\nhttp://astro.berkeley.edu/~dgold/\n"}