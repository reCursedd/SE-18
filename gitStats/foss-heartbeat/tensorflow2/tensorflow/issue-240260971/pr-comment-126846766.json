{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/126846766", "pull_request_review_id": 49358943, "id": 126846766, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNjg0Njc2Ng==", "diff_hunk": "@@ -0,0 +1,37 @@\n+package org.tensorflow.types;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.tensorflow.DataType;\n+\n+/**\n+ * Utility class for representing TF types as Java types. For each TF type (e.g., int32),\n+ * there is a corresponding Java type (e.g., TFInt32) that represents it at compile time\n+ * and a corresponding immutable object (e.g., TFInt32.T) that represents it at run time.\n+ */\n+public class Types {\n+\n+  private Types() {} // not instantiable\n+\n+  static final Map<Class<?>, Integer> typeCodes = new HashMap<>();\n+  /** Convert to the equivalent DataType. */\n+\n+  public static DataType dataType(Class<?> c) {\n+    Integer code = typeCodes.get(c);\n+    if (code == null) {\n+      throw new IllegalArgumentException(\"\" + c + \" is not a TensorFlow type.\");\n+    }\n+    return DataType.fromC(code.intValue());", "path": "tensorflow/java/src/main/java/org/tensorflow/types/Types.java", "position": null, "original_position": 24, "commit_id": "1020ee116d2bf99bc90e95730a8431fb001fbb40", "original_commit_id": "ab4ddab453cf220994a5da055beefcaa423993a3", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "body": "Wouldn't this require `fromC` to be public? (Since the package for `DataType` is `org.tensorflow`, which is different from the package for this class - `org.tensorflow.types`)?\r\n\r\nAlternatively, would it make sense for the map to be:\r\n\r\n```\r\nstatic final Map<Class<?>, DataType> typeMap = new HashMap();\r\n```\r\n\r\ninstead? (And the `.csv` file can refer to enums in the `DataType`  instead of integers).\r\nSo the call in the generated files would look like:\r\n\r\n```\r\nstatic {\r\n  Types.typeCodes.put(TFUint8.class, DataType.UINT8);\r\n}\r\n```\r\n\r\nOr perhaps I'm missing something?", "created_at": "2017-07-12T01:33:01Z", "updated_at": "2017-07-12T23:42:42Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/11251#discussion_r126846766", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11251", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/126846766"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/11251#discussion_r126846766"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11251"}}, "body_html": "<p>Wouldn't this require <code>fromC</code> to be public? (Since the package for <code>DataType</code> is <code>org.tensorflow</code>, which is different from the package for this class - <code>org.tensorflow.types</code>)?</p>\n<p>Alternatively, would it make sense for the map to be:</p>\n<pre><code>static final Map&lt;Class&lt;?&gt;, DataType&gt; typeMap = new HashMap();\n</code></pre>\n<p>instead? (And the <code>.csv</code> file can refer to enums in the <code>DataType</code>  instead of integers).<br>\nSo the call in the generated files would look like:</p>\n<pre><code>static {\n  Types.typeCodes.put(TFUint8.class, DataType.UINT8);\n}\n</code></pre>\n<p>Or perhaps I'm missing something?</p>", "body_text": "Wouldn't this require fromC to be public? (Since the package for DataType is org.tensorflow, which is different from the package for this class - org.tensorflow.types)?\nAlternatively, would it make sense for the map to be:\nstatic final Map<Class<?>, DataType> typeMap = new HashMap();\n\ninstead? (And the .csv file can refer to enums in the DataType  instead of integers).\nSo the call in the generated files would look like:\nstatic {\n  Types.typeCodes.put(TFUint8.class, DataType.UINT8);\n}\n\nOr perhaps I'm missing something?"}