{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/126848317", "pull_request_review_id": 49358943, "id": 126848317, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNjg0ODMxNw==", "diff_hunk": "@@ -0,0 +1,138 @@\n+#!/usr/bin/perl\n+\n+use strict;\n+my $count;\n+\n+my $option = '-t', my $template;\n+\n+sub usage {\n+    print \"Usage: tftypes [-ctdT] <type desc file> <tmpl file>\\n\\n\"\n+         .\"This script generates parts of various .java files that depend on which\"\n+         .\"TensorFlow types are supported by the Java API and how much. For each\"\n+         .\"such .java file, there is a .tmpl file in the same source directory in\"\n+         .\"which the strings \\@TYPEINFO\\@ and \\@IMPORTS\\@ are replaced with\"\n+         .\"appropriate Java code. Output code is sent to standard output.\\n\\n\";\n+\n+    print \"Modulo putting in the correct directory names, it can be invoked as follows:\\n\";\n+    print \"tftypes -c tftypes.csv Tensors.java.tmpl > Tensors.java\\n\";\n+    print \"tftypes -d tftypes.csv DataType.java.tmpl > DataType.java\\n\";\n+    print \"tftypes -t tftypes.csv <dir>                                   [outputs files to dir]\\n\";\n+}\n+\n+if ($ARGV[0] =~ m/^-/) {\n+    $option = shift;\n+}\n+my $typedesc = shift;\n+my $tmpl = shift;\n+\n+my $dirname;\n+\n+if ($option eq '-t') {\n+    $dirname = $tmpl;\n+}\n+\n+open (TMPL, \"<$tmpl\") || die \"Cannot open $tmpl for reading\\n\";\n+\n+my $text = do { local $/; <TMPL> };\n+\n+my %jtypecount;\n+\n+my $typeinfo, my $imports;\n+\n+open (TYPEDESC, $typedesc);\n+\n+my @info = ([]);\n+\n+while (<TYPEDESC>) {\n+    chomp;\n+    my $line = $_;\n+    if ($line =~ m/^TF type/) { next }\n+    $line =~ s/\\r$//;\n+    (my $name, my $index, my $jtype, my $jbox, my $creat, my $default, my $desc) =\n+        split /,/, $line, 7;\n+    $desc =~ s/^ *//g;\n+    $desc =~ s/ *$//g;\n+    $jtypecount{$jtype}++;\n+    if ($jtypecount{$jtype} > 1) {\n+# currently allowing Java types to stand for more than one TF type, but\n+# may want to revisit this.\n+#       print STDERR \"Ambiguous Java type for $name : $jtype\\n\";\n+#       exit 1\n+    }\n+\n+    push @info, [$name, $index, $jtype, $jbox, $creat, $default, $desc];\n+}\n+\n+my $first = 1;\n+\n+for (my $i = 1; $i <= $#info; $first = 0, $i++) {\n+    (my $name, my $index, my $jtype, my $jbox, my $creat, my $default, my $desc) =\n+        @{$info[$i]};\n+    my $tfname = \"TF\".$name;\n+    my $ucname = uc $name;\n+\n+    if ($option eq '-t') {\n+        if ($jtype eq '') { next }\n+        # Generate class declarations\n+        # print STDERR \"Creating $dirname/$tfname.java\\n\";\n+        open (CLASSFILE, \">$dirname/$tfname.java\") || die \"Can't open $tfname.java\";\n+        print CLASSFILE \"// GENERATED FILE. Edit tftypes.pl instead.\\n\";\n+        print CLASSFILE \"package org.tensorflow.types;\\n\\n\";\n+        print CLASSFILE  \"/** The class $tfname represents $desc. */\\n\"\n+                        .\"public class $tfname implements Types.TFType {\\n\"\n+                        .\"  /** Represents the type $tfname at run time. */\\n\"\n+                        .\"  public static final Class<$tfname> T = $tfname.class;\\n\"\n+                        .\"  static {\\n\"\n+                        .\"    Types.typeCodes.put($tfname.T, $index);\\n\"\n+                        .\"  }\\n\";\n+        if ($default ne '') {\n+            print CLASSFILE\n+                         \"  static {\\n\"\n+                        .\"    Types.scalars.put($tfname.T, $default);\\n\"\n+                        .\"  }\\n\";\n+        }\n+        print CLASSFILE  \"}\\n\";\n+        close(CLASSFILE);\n+    } elsif ($option eq '-d') {", "path": "tensorflow/java/src/gen/perl/tftypes.pl", "position": null, "original_position": 96, "commit_id": "1020ee116d2bf99bc90e95730a8431fb001fbb40", "original_commit_id": "ab4ddab453cf220994a5da055beefcaa423993a3", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "body": "Remove this block? (We're not generating `DataType.java`, or are you planning to change that?)\r\n\r\nAt this point, I think the only thing we gain from generating `DataType.java` is the ability to share the short description fragment for each type. I think that the gains from not having this generation machinery for it outweigh the benefits of sharing that comment, so I'd be tempted to avoid generating it.\r\n\r\nAlso, see comment below about doing away with the integer value in the `.csv` and having `Types.typeCodes` map from `TFType` to `DataType` directly, instead of redirecting through an `Integer`", "created_at": "2017-07-12T01:48:00Z", "updated_at": "2017-07-12T23:42:42Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/11251#discussion_r126848317", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11251", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/126848317"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/11251#discussion_r126848317"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11251"}}, "body_html": "<p>Remove this block? (We're not generating <code>DataType.java</code>, or are you planning to change that?)</p>\n<p>At this point, I think the only thing we gain from generating <code>DataType.java</code> is the ability to share the short description fragment for each type. I think that the gains from not having this generation machinery for it outweigh the benefits of sharing that comment, so I'd be tempted to avoid generating it.</p>\n<p>Also, see comment below about doing away with the integer value in the <code>.csv</code> and having <code>Types.typeCodes</code> map from <code>TFType</code> to <code>DataType</code> directly, instead of redirecting through an <code>Integer</code></p>", "body_text": "Remove this block? (We're not generating DataType.java, or are you planning to change that?)\nAt this point, I think the only thing we gain from generating DataType.java is the ability to share the short description fragment for each type. I think that the gains from not having this generation machinery for it outweigh the benefits of sharing that comment, so I'd be tempted to avoid generating it.\nAlso, see comment below about doing away with the integer value in the .csv and having Types.typeCodes map from TFType to DataType directly, instead of redirecting through an Integer"}