{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/126937048", "pull_request_review_id": 49469815, "id": 126937048, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNjkzNzA0OA==", "diff_hunk": "@@ -0,0 +1,21 @@\n+TF type,datatype code,Java type,Java boxed type,Creator?,default,Description\r\n+Float,1,float,Float,y,0f,32-bit single precision floating point number\r\n+Double,2,double,Double,y,0,64-bit double precision floating point number\r\n+Int32,3,int,Integer,y,0,32-bit signed integer\r\n+UInt8,4,byte,Byte,n,,8-bit unsigned integer\r\n+Int16,5,,Short,n,(short)0,16-bit signed integer\r", "path": "tensorflow/java/src/gen/resources/tftypes.csv", "position": null, "original_position": 6, "commit_id": "1020ee116d2bf99bc90e95730a8431fb001fbb40", "original_commit_id": "a4ecc9df93ce41e01f3985ef23e9409dabde1ee7", "user": {"login": "andrewcmyers", "id": 4623813, "node_id": "MDQ6VXNlcjQ2MjM4MTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/4623813?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewcmyers", "html_url": "https://github.com/andrewcmyers", "followers_url": "https://api.github.com/users/andrewcmyers/followers", "following_url": "https://api.github.com/users/andrewcmyers/following{/other_user}", "gists_url": "https://api.github.com/users/andrewcmyers/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewcmyers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewcmyers/subscriptions", "organizations_url": "https://api.github.com/users/andrewcmyers/orgs", "repos_url": "https://api.github.com/users/andrewcmyers/repos", "events_url": "https://api.github.com/users/andrewcmyers/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewcmyers/received_events", "type": "User", "site_admin": false}, "body": "I am happy to remove it. I guess we were seeing the role of this file a little differently. You are looking at it as something you would like to minimize as much as possible. I was viewing it as a kind of very-lightweight spec, analogous to the proto buf specs, that summarizes how the Java API handles TF data types. A little redundancy in a spec can be good because it allows tools and humans to check for errors, though I still actually think DataType ought to be generated from it so there aren't two specs.\r\n\r\nBy the way, DataType is currently only visible in the API because Tensor lets you create a Tensor by giving an array of longs and a DataType, because you can ask what DataType a Tensor has, and because the API talks about types in terms of it. Once the ops are expressed in terms of the types package, DataType will become almost completely an implementation detail that is present mainly for backward compatibility. Probably all the javadoc specs should be written in terms of the types package once that happens.", "created_at": "2017-07-12T12:14:59Z", "updated_at": "2017-07-12T23:42:42Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/11251#discussion_r126937048", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11251", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/126937048"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/11251#discussion_r126937048"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11251"}}, "body_html": "<p>I am happy to remove it. I guess we were seeing the role of this file a little differently. You are looking at it as something you would like to minimize as much as possible. I was viewing it as a kind of very-lightweight spec, analogous to the proto buf specs, that summarizes how the Java API handles TF data types. A little redundancy in a spec can be good because it allows tools and humans to check for errors, though I still actually think DataType ought to be generated from it so there aren't two specs.</p>\n<p>By the way, DataType is currently only visible in the API because Tensor lets you create a Tensor by giving an array of longs and a DataType, because you can ask what DataType a Tensor has, and because the API talks about types in terms of it. Once the ops are expressed in terms of the types package, DataType will become almost completely an implementation detail that is present mainly for backward compatibility. Probably all the javadoc specs should be written in terms of the types package once that happens.</p>", "body_text": "I am happy to remove it. I guess we were seeing the role of this file a little differently. You are looking at it as something you would like to minimize as much as possible. I was viewing it as a kind of very-lightweight spec, analogous to the proto buf specs, that summarizes how the Java API handles TF data types. A little redundancy in a spec can be good because it allows tools and humans to check for errors, though I still actually think DataType ought to be generated from it so there aren't two specs.\nBy the way, DataType is currently only visible in the API because Tensor lets you create a Tensor by giving an array of longs and a DataType, because you can ask what DataType a Tensor has, and because the API talks about types in terms of it. Once the ops are expressed in terms of the types package, DataType will become almost completely an implementation detail that is present mainly for backward compatibility. Probably all the javadoc specs should be written in terms of the types package once that happens.", "in_reply_to_id": 126876166}