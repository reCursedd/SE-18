{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12328", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12328/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12328/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12328/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/12328", "id": 250630235, "node_id": "MDU6SXNzdWUyNTA2MzAyMzU=", "number": 12328, "title": "Issues related to integrating syntaxnet/parsey mcparseface in Java + tf.reduce_sum", "user": {"login": "marhlder", "id": 2690031, "node_id": "MDQ6VXNlcjI2OTAwMzE=", "avatar_url": "https://avatars0.githubusercontent.com/u/2690031?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marhlder", "html_url": "https://github.com/marhlder", "followers_url": "https://api.github.com/users/marhlder/followers", "following_url": "https://api.github.com/users/marhlder/following{/other_user}", "gists_url": "https://api.github.com/users/marhlder/gists{/gist_id}", "starred_url": "https://api.github.com/users/marhlder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marhlder/subscriptions", "organizations_url": "https://api.github.com/users/marhlder/orgs", "repos_url": "https://api.github.com/users/marhlder/repos", "events_url": "https://api.github.com/users/marhlder/events{/privacy}", "received_events_url": "https://api.github.com/users/marhlder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 47, "created_at": "2017-08-16T13:39:05Z", "updated_at": "2018-07-20T10:26:07Z", "closed_at": "2017-08-18T12:33:38Z", "author_association": "NONE", "body_html": "<p>Summary/tldr:<br>\nIt would be nice with more String support in the Java API and a tf.reduce_sum which supports string concatenation.</p>\n<p>Body:<br>\nI have successfully hacked in the custom ops of syntaxnet into the Tensorflow master as I wish to run syntaxnet from my Java NLP pipeline.</p>\n<p>I do this by saving a SavedModelBundle and load it again from Java.</p>\n<p>My project is based on a saved model of parsey_mcparseface from this branch:<br>\n<a href=\"https://github.com/dmansfield/models/tree/documents-from-tensor\">https://github.com/dmansfield/models/tree/documents-from-tensor</a><br>\nBy user <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=662307\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/dmansfield\">@dmansfield</a>.</p>\n<p>And a tensorflow build based on the custom ops from:<br>\n<a href=\"https://github.com/tensorflow/models/tree/master/syntaxnet\">https://github.com/tensorflow/models/tree/master/syntaxnet</a><br>\nHacked into master of tensorflow.</p>\n<p>Hacking in the ops, as build in ops, was necessary as the Java api through the JNI does not support user loaded ops yet (AFAIK).</p>\n<p>The code with the syntaxnet ops hacked in can be found here:<br>\n<a href=\"https://github.com/marhlder/syntaxnet-ops-hack\">https://github.com/marhlder/syntaxnet-ops-hack</a></p>\n<p>I have everything running except that the strings in the output tensor from my saved model includes junk (non-printable chars) which I think is due to the offset table described in tensor_jni.cc file.</p>\n<p>I can run the same model from Python without any issues.</p>\n<p>The Java API does currently not seem to support anything but scalar string tensors. It looks like using a scalar string tensor will solve my problem as that part of the codes seems to handle the offset table.</p>\n<p>I would therefore like to reduce the string tensor produced by my parsey mcparseface model.<br>\nI then found that the tf.reduce_sum does not yet support string concatenation.</p>\n<p>There should already be an op for it:<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"125057980\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/701\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/701/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/701\">#701</a></p>\n<p>User <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=192142\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mrry\">@mrry</a> commented that he was looking for a use case for this here:<br>\n<a href=\"https://stackoverflow.com/questions/34247374/merge-string-tensors-in-tensorflow\" rel=\"nofollow\">https://stackoverflow.com/questions/34247374/merge-string-tensors-in-tensorflow</a></p>", "body_text": "Summary/tldr:\nIt would be nice with more String support in the Java API and a tf.reduce_sum which supports string concatenation.\nBody:\nI have successfully hacked in the custom ops of syntaxnet into the Tensorflow master as I wish to run syntaxnet from my Java NLP pipeline.\nI do this by saving a SavedModelBundle and load it again from Java.\nMy project is based on a saved model of parsey_mcparseface from this branch:\nhttps://github.com/dmansfield/models/tree/documents-from-tensor\nBy user @dmansfield.\nAnd a tensorflow build based on the custom ops from:\nhttps://github.com/tensorflow/models/tree/master/syntaxnet\nHacked into master of tensorflow.\nHacking in the ops, as build in ops, was necessary as the Java api through the JNI does not support user loaded ops yet (AFAIK).\nThe code with the syntaxnet ops hacked in can be found here:\nhttps://github.com/marhlder/syntaxnet-ops-hack\nI have everything running except that the strings in the output tensor from my saved model includes junk (non-printable chars) which I think is due to the offset table described in tensor_jni.cc file.\nI can run the same model from Python without any issues.\nThe Java API does currently not seem to support anything but scalar string tensors. It looks like using a scalar string tensor will solve my problem as that part of the codes seems to handle the offset table.\nI would therefore like to reduce the string tensor produced by my parsey mcparseface model.\nI then found that the tf.reduce_sum does not yet support string concatenation.\nThere should already be an op for it:\n#701\nUser @mrry commented that he was looking for a use case for this here:\nhttps://stackoverflow.com/questions/34247374/merge-string-tensors-in-tensorflow", "body": "Summary/tldr: \r\nIt would be nice with more String support in the Java API and a tf.reduce_sum which supports string concatenation. \r\n\r\nBody:\r\nI have successfully hacked in the custom ops of syntaxnet into the Tensorflow master as I wish to run syntaxnet from my Java NLP pipeline. \r\n\r\nI do this by saving a SavedModelBundle and load it again from Java. \r\n\r\nMy project is based on a saved model of parsey_mcparseface from this branch: \r\nhttps://github.com/dmansfield/models/tree/documents-from-tensor\r\nBy user @dmansfield.\r\n\r\nAnd a tensorflow build based on the custom ops from: \r\nhttps://github.com/tensorflow/models/tree/master/syntaxnet\r\nHacked into master of tensorflow.\r\n\r\nHacking in the ops, as build in ops, was necessary as the Java api through the JNI does not support user loaded ops yet (AFAIK). \r\n\r\nThe code with the syntaxnet ops hacked in can be found here:\r\nhttps://github.com/marhlder/syntaxnet-ops-hack\r\n\r\nI have everything running except that the strings in the output tensor from my saved model includes junk (non-printable chars) which I think is due to the offset table described in tensor_jni.cc file. \r\n\r\nI can run the same model from Python without any issues. \r\n\r\nThe Java API does currently not seem to support anything but scalar string tensors. It looks like using a scalar string tensor will solve my problem as that part of the codes seems to handle the offset table. \r\n\r\nI would therefore like to reduce the string tensor produced by my parsey mcparseface model. \r\nI then found that the tf.reduce_sum does not yet support string concatenation. \r\n\r\nThere should already be an op for it: \r\nhttps://github.com/tensorflow/tensorflow/issues/701\r\n\r\nUser @mrry commented that he was looking for a use case for this here:\r\nhttps://stackoverflow.com/questions/34247374/merge-string-tensors-in-tensorflow\r\n\r\n\r\n "}