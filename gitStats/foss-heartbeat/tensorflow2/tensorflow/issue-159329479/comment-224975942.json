{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/224975942", "html_url": "https://github.com/tensorflow/tensorflow/issues/2750#issuecomment-224975942", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2750", "id": 224975942, "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDk3NTk0Mg==", "user": {"login": "cgarciae", "id": 5862228, "node_id": "MDQ6VXNlcjU4NjIyMjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5862228?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cgarciae", "html_url": "https://github.com/cgarciae", "followers_url": "https://api.github.com/users/cgarciae/followers", "following_url": "https://api.github.com/users/cgarciae/following{/other_user}", "gists_url": "https://api.github.com/users/cgarciae/gists{/gist_id}", "starred_url": "https://api.github.com/users/cgarciae/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cgarciae/subscriptions", "organizations_url": "https://api.github.com/users/cgarciae/orgs", "repos_url": "https://api.github.com/users/cgarciae/repos", "events_url": "https://api.github.com/users/cgarciae/events{/privacy}", "received_events_url": "https://api.github.com/users/cgarciae/received_events", "type": "User", "site_admin": false}, "created_at": "2016-06-09T17:57:37Z", "updated_at": "2016-06-09T17:57:37Z", "author_association": "NONE", "body_html": "<ol>\n<li>I'll maintain it for the moment but leave the invitation open.</li>\n<li><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=577277\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/martinwicke\">@martinwicke</a> Yeah, its actually inspired by PrettyTensor (initially) but with some changes, the original README had this comment</li>\n</ol>\n<blockquote>\n<p>TensorBuilder takes inspiration from <a href=\"https://github.com/google/prettytensor\">prettytensor</a> but its internals are simpler, its API is smaller but equally powerfull, its branching mechanism is more expresive and doesn't break the fluent API, and its immutable nature helps avoid a lot of conceptual complexity.</p>\n</blockquote>\n<p>A lot of problems I found with PrettyTensor is that its API was mutable, where as Tensor operations are immutable. So TensorBuilder is immutable, this makes creating an arbitrary number of branches trivial, you also don't need the Templates concept to specify a procedure, you just use a plain old python function from Builder to Builder.</p>\n<p>In the last release I removed the core functionality for creating layers and delegated that to libraries through patches. Now TensorBuilder's focus is to enable Tensor-based libraries with nice syntax, branching capabilities, and the DSL.</p>", "body_text": "I'll maintain it for the moment but leave the invitation open.\n@martinwicke Yeah, its actually inspired by PrettyTensor (initially) but with some changes, the original README had this comment\n\n\nTensorBuilder takes inspiration from prettytensor but its internals are simpler, its API is smaller but equally powerfull, its branching mechanism is more expresive and doesn't break the fluent API, and its immutable nature helps avoid a lot of conceptual complexity.\n\nA lot of problems I found with PrettyTensor is that its API was mutable, where as Tensor operations are immutable. So TensorBuilder is immutable, this makes creating an arbitrary number of branches trivial, you also don't need the Templates concept to specify a procedure, you just use a plain old python function from Builder to Builder.\nIn the last release I removed the core functionality for creating layers and delegated that to libraries through patches. Now TensorBuilder's focus is to enable Tensor-based libraries with nice syntax, branching capabilities, and the DSL.", "body": "1. I'll maintain it for the moment but leave the invitation open.\n2. @martinwicke Yeah, its actually inspired by PrettyTensor (initially) but with some changes, the original README had this comment\n\n> TensorBuilder takes inspiration from [prettytensor](https://github.com/google/prettytensor) but its internals are simpler, its API is smaller but equally powerfull, its branching mechanism is more expresive and doesn't break the fluent API, and its immutable nature helps avoid a lot of conceptual complexity.\n\nA lot of problems I found with PrettyTensor is that its API was mutable, where as Tensor operations are immutable. So TensorBuilder is immutable, this makes creating an arbitrary number of branches trivial, you also don't need the Templates concept to specify a procedure, you just use a plain old python function from Builder to Builder.\n\nIn the last release I removed the core functionality for creating layers and delegated that to libraries through patches. Now TensorBuilder's focus is to enable Tensor-based libraries with nice syntax, branching capabilities, and the DSL.\n"}