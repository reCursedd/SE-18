{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16031", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16031/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16031/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16031/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16031", "id": 287670509, "node_id": "MDU6SXNzdWUyODc2NzA1MDk=", "number": 16031, "title": "tf.data.Dataset.padded_batch() doesn't work with dataset.map using tf.py_func", "user": {"login": "yukunfeng", "id": 16083281, "node_id": "MDQ6VXNlcjE2MDgzMjgx", "avatar_url": "https://avatars3.githubusercontent.com/u/16083281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yukunfeng", "html_url": "https://github.com/yukunfeng", "followers_url": "https://api.github.com/users/yukunfeng/followers", "following_url": "https://api.github.com/users/yukunfeng/following{/other_user}", "gists_url": "https://api.github.com/users/yukunfeng/gists{/gist_id}", "starred_url": "https://api.github.com/users/yukunfeng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yukunfeng/subscriptions", "organizations_url": "https://api.github.com/users/yukunfeng/orgs", "repos_url": "https://api.github.com/users/yukunfeng/repos", "events_url": "https://api.github.com/users/yukunfeng/events{/privacy}", "received_events_url": "https://api.github.com/users/yukunfeng/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-11T05:44:19Z", "updated_at": "2018-01-12T03:24:15Z", "closed_at": "2018-01-11T17:56:46Z", "author_association": "NONE", "body_html": "<hr>\n<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code</strong>: yes</li>\n<li><strong>OS Platform and Distribution</strong>: CentOS Linux release 7.2.1511</li>\n<li><strong>TensorFlow installed from</strong>: pip</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.4.1</li>\n<li><strong>Python version</strong>: 2.7.5</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>It's quite common for NLP tasks to read variable-length sentences from text files, to map them and to padd them. But Dataset.padded_batch() doesn't work with tf.dataset which uses map (tf.py_func)</p>\n<h3>Source code</h3>\n<pre><code>import tensorflow as tf                                                                           \nimport numpy as np                                                                                \n                                                                                                  \ndef convert(line):                                                                                \n    tokens = line.split()                                                                 \n    return np.array(tokens, dtype=np.int32)\n\n# Simulating reading variable-length sentences from a file. Using TextLineDataset will have the same problem\ndataset = tf.data.Dataset.from_tensor_slices([\"1 2 3\", \"4 5\"])         \n                           \n# Tokenize each sentence and convert it to list of int\ndataset = dataset.map(lambda line: tf.py_func(convert, [line], [tf.int32]))     \n                  \ndataset = dataset.padded_batch(1, [None]) # This line doesn't work whatever the batch_size is\n# dataset = dataset.batch(1) # This line works well                                              \n \niterator = dataset.make_one_shot_iterator()                                                       \nbatch_data = iterator.get_next()                                                                  \n                                                                                                  \nwith tf.Session() as sess:                                                                        \n    print sess.run(batch_data)                                                                                                 \n</code></pre>\n<h3>Log</h3>\n<pre><code>    dataset = dataset.padded_batch(1, [None])\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/data/ops/dataset_ops.py\", line 695, in padded_batch\n    return PaddedBatchDataset(self, batch_size, padded_shapes, padding_values)\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/data/ops/dataset_ops.py\", line 1292, in __init__\n    input_dataset.output_shapes, _partial_shape_to_tensor, padded_shapes)\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/data/util/nest.py\", line 512, in map_structure_up_to\n    assert_shallow_structure(shallow_tree, input_tree)\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/data/util/nest.py\", line 356, in assert_shallow_structure\n    \"Input has type: %s.\" % type(input_tree))\nTypeError: If shallow structure is a sequence, input must also be a sequence. Input has type: &lt;type 'list'&gt;.\n</code></pre>", "body_text": "System information\n\nHave I written custom code: yes\nOS Platform and Distribution: CentOS Linux release 7.2.1511\nTensorFlow installed from: pip\nTensorFlow version (use command below): 1.4.1\nPython version: 2.7.5\n\nDescribe the problem\nIt's quite common for NLP tasks to read variable-length sentences from text files, to map them and to padd them. But Dataset.padded_batch() doesn't work with tf.dataset which uses map (tf.py_func)\nSource code\nimport tensorflow as tf                                                                           \nimport numpy as np                                                                                \n                                                                                                  \ndef convert(line):                                                                                \n    tokens = line.split()                                                                 \n    return np.array(tokens, dtype=np.int32)\n\n# Simulating reading variable-length sentences from a file. Using TextLineDataset will have the same problem\ndataset = tf.data.Dataset.from_tensor_slices([\"1 2 3\", \"4 5\"])         \n                           \n# Tokenize each sentence and convert it to list of int\ndataset = dataset.map(lambda line: tf.py_func(convert, [line], [tf.int32]))     \n                  \ndataset = dataset.padded_batch(1, [None]) # This line doesn't work whatever the batch_size is\n# dataset = dataset.batch(1) # This line works well                                              \n \niterator = dataset.make_one_shot_iterator()                                                       \nbatch_data = iterator.get_next()                                                                  \n                                                                                                  \nwith tf.Session() as sess:                                                                        \n    print sess.run(batch_data)                                                                                                 \n\nLog\n    dataset = dataset.padded_batch(1, [None])\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/data/ops/dataset_ops.py\", line 695, in padded_batch\n    return PaddedBatchDataset(self, batch_size, padded_shapes, padding_values)\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/data/ops/dataset_ops.py\", line 1292, in __init__\n    input_dataset.output_shapes, _partial_shape_to_tensor, padded_shapes)\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/data/util/nest.py\", line 512, in map_structure_up_to\n    assert_shallow_structure(shallow_tree, input_tree)\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/data/util/nest.py\", line 356, in assert_shallow_structure\n    \"Input has type: %s.\" % type(input_tree))\nTypeError: If shallow structure is a sequence, input must also be a sequence. Input has type: <type 'list'>.", "body": "\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code**: yes\r\n- **OS Platform and Distribution**: CentOS Linux release 7.2.1511\r\n- **TensorFlow installed from**: pip\r\n- **TensorFlow version (use command below)**: 1.4.1\r\n- **Python version**: 2.7.5\r\n\r\n### Describe the problem\r\nIt's quite common for NLP tasks to read variable-length sentences from text files, to map them and to padd them. But Dataset.padded_batch() doesn't work with tf.dataset which uses map (tf.py_func)\r\n\r\n### Source code\r\n```\r\nimport tensorflow as tf                                                                           \r\nimport numpy as np                                                                                \r\n                                                                                                  \r\ndef convert(line):                                                                                \r\n    tokens = line.split()                                                                 \r\n    return np.array(tokens, dtype=np.int32)\r\n\r\n# Simulating reading variable-length sentences from a file. Using TextLineDataset will have the same problem\r\ndataset = tf.data.Dataset.from_tensor_slices([\"1 2 3\", \"4 5\"])         \r\n                           \r\n# Tokenize each sentence and convert it to list of int\r\ndataset = dataset.map(lambda line: tf.py_func(convert, [line], [tf.int32]))     \r\n                  \r\ndataset = dataset.padded_batch(1, [None]) # This line doesn't work whatever the batch_size is\r\n# dataset = dataset.batch(1) # This line works well                                              \r\n \r\niterator = dataset.make_one_shot_iterator()                                                       \r\nbatch_data = iterator.get_next()                                                                  \r\n                                                                                                  \r\nwith tf.Session() as sess:                                                                        \r\n    print sess.run(batch_data)                                                                                                 \r\n```\r\n\r\n### Log\r\n```\r\n    dataset = dataset.padded_batch(1, [None])\r\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/data/ops/dataset_ops.py\", line 695, in padded_batch\r\n    return PaddedBatchDataset(self, batch_size, padded_shapes, padding_values)\r\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/data/ops/dataset_ops.py\", line 1292, in __init__\r\n    input_dataset.output_shapes, _partial_shape_to_tensor, padded_shapes)\r\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/data/util/nest.py\", line 512, in map_structure_up_to\r\n    assert_shallow_structure(shallow_tree, input_tree)\r\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/data/util/nest.py\", line 356, in assert_shallow_structure\r\n    \"Input has type: %s.\" % type(input_tree))\r\nTypeError: If shallow structure is a sequence, input must also be a sequence. Input has type: <type 'list'>.\r\n```"}