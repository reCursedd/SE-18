{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12857", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12857/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12857/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12857/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/12857", "id": 255771614, "node_id": "MDU6SXNzdWUyNTU3NzE2MTQ=", "number": 12857, "title": "Unhelpful exceptions from tf.truncated_normal with dtype=tf.int32 ", "user": {"login": "slacy", "id": 157238, "node_id": "MDQ6VXNlcjE1NzIzOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/157238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/slacy", "html_url": "https://github.com/slacy", "followers_url": "https://api.github.com/users/slacy/followers", "following_url": "https://api.github.com/users/slacy/following{/other_user}", "gists_url": "https://api.github.com/users/slacy/gists{/gist_id}", "starred_url": "https://api.github.com/users/slacy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/slacy/subscriptions", "organizations_url": "https://api.github.com/users/slacy/orgs", "repos_url": "https://api.github.com/users/slacy/repos", "events_url": "https://api.github.com/users/slacy/events{/privacy}", "received_events_url": "https://api.github.com/users/slacy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-09-06T23:30:16Z", "updated_at": "2017-12-08T18:59:23Z", "closed_at": "2017-12-08T18:59:02Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: NO</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu 14.04 LTS</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: pip install tensorflow</li>\n<li><strong>TensorFlow version (use command below)</strong>: ('v1.3.0-rc2-20-g0787eee', '1.3.0')</li>\n<li><strong>Python version</strong>: Python 2.7.6</li>\n<li><strong>Bazel version (if compiling from source)</strong>: N/A</li>\n<li><strong>CUDA/cuDNN version</strong>: N/A (CPU)</li>\n<li><strong>GPU model and memory</strong>: N/A</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<p>python -c \"import tensorflow as tf ; tf.truncated_normal([1], dtype=tf.int32)\"</p>\n<h3>Describe the problem</h3>\n<p>When attempting to initialize a tf.Variable of type tf.int32 using <code>tf.truncated_normal()</code>, invocation with simple args raise a TypeError, but the error message is ambiguous and unhelpful for debugging:</p>\n<pre><code>python -c \"import tensorflow as tf ; tf.truncated_normal([1], dtype=tf.int32)\"\nTraceback (most recent call last):\n  File \"&lt;string&gt;\", line 1, in &lt;module&gt;\n  File \"/usr/slacy/src/tf_clean/env/local/lib/python2.7/site-packages/tensorflow/python/ops/random_ops.py\", line 168, in truncated_normal\n    mean_tensor = ops.convert_to_tensor(mean, dtype=dtype, name=\"mean\")\n  File \"/usr/slacy/src/tf_clean/env/local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 611, in convert_to_tensor\n    as_ref=False)\n  File \"/usr/slacy/src/tf_clean/env/local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 676, in internal_convert_to_tensor\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n  File \"/usr/slacy/src/tf_clean/env/local/lib/python2.7/site-packages/tensorflow/python/framework/constant_op.py\", line 121, in _constant_tensor_conversion_function\n    return constant(v, dtype=dtype, name=name)\n  File \"/usr/slacy/src/tf_clean/env/local/lib/python2.7/site-packages/tensorflow/python/framework/constant_op.py\", line 102, in constant\n    tensor_util.make_tensor_proto(value, dtype=dtype, shape=shape, verify_shape=verify_shape))\n  File \"/usr/slacy/src/tf_clean/env/local/lib/python2.7/site-packages/tensorflow/python/framework/tensor_util.py\", line 376, in make_tensor_proto\n    _AssertCompatible(values, dtype)\n  File \"/usr/slacy/src/tf_clean/env/local/lib/python2.7/site-packages/tensorflow/python/framework/tensor_util.py\", line 302, in _AssertCompatible\n    (dtype.name, repr(mismatch), type(mismatch).__name__))\nTypeError: Expected int32, got 0.0 of type 'float' instead.\n\n</code></pre>\n<p>Providing more arguments to <code>tf.truncated_normal</code> correctly indicates that tf.int32 isn't a supported type:</p>\n<pre><code>python -c \"import tensorflow as tf ; tf.truncated_normal([1], mean=0, stddev=1, dtype=tf.int32)\"\nTraceback (most recent call last):\n  File \"&lt;string&gt;\", line 1, in &lt;module&gt;\n  File \"/usr/slacy/src/tf_clean/env/local/lib/python2.7/site-packages/tensorflow/python/ops/random_ops.py\", line 172, in truncated_normal\n    shape_tensor, dtype, seed=seed1, seed2=seed2)\n  File \"/usr/slacy/src/tf_clean/env/local/lib/python2.7/site-packages/tensorflow/python/ops/gen_random_ops.py\", line 316, in _truncated_normal\n    seed=seed, seed2=seed2, name=name)\n  File \"/usr/slacy/src/tf_clean/env/local/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py\", line 700, in apply_op\n    attr_value.type = _MakeType(value, attr_def)\n  File \"/usr/slacy/src/tf_clean/env/local/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py\", line 179, in _MakeType\n    _SatisfiesTypeConstraint(i, attr_def, param_name=attr_def.name)\n  File \"/usr/slacy/src/tf_clean/env/local/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py\", line 60, in _SatisfiesTypeConstraint\n    \", \".join(dtypes.as_dtype(x).name for x in allowed_list)))\nTypeError: Value passed to parameter 'dtype' has DataType int32 not in list of allowed values: float16, float32, float64\n</code></pre>\n<p>Contrasting this with usage of complex64, which provides the correct error message even with simple args:</p>\n<pre><code>python -c \"import tensorflow as tf ; tf.truncated_normal([1], dtype=tf.complex64)\"\nTraceback (most recent call last):\n  File \"&lt;string&gt;\", line 1, in &lt;module&gt;\n  File \"/usr/slacy/src/tf_clean/env/local/lib/python2.7/site-packages/tensorflow/python/ops/random_ops.py\", line 172, in truncated_normal\n    shape_tensor, dtype, seed=seed1, seed2=seed2)\n  File \"/usr/slacy/src/tf_clean/env/local/lib/python2.7/site-packages/tensorflow/python/ops/gen_random_ops.py\", line 316, in _truncated_normal\n    seed=seed, seed2=seed2, name=name)\n  File \"/usr/slacy/src/tf_clean/env/local/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py\", line 700, in apply_op\n    attr_value.type = _MakeType(value, attr_def)\n  File \"/usr/slacy/src/tf_clean/env/local/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py\", line 179, in _MakeType\n    _SatisfiesTypeConstraint(i, attr_def, param_name=attr_def.name)\n  File \"/usr/slacy/src/tf_clean/env/local/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py\", line 60, in _SatisfiesTypeConstraint\n    \", \".join(dtypes.as_dtype(x).name for x in allowed_list)))\nTypeError: Value passed to parameter 'dtype' has DataType complex64 not in list of allowed values: float16, float32, float64\n</code></pre>\n<p>dtype argument checking should happen up front, earlier in the codepath of <code>truncated_normal()</code></p>\n<h3>Source code / logs</h3>\n<p>See above</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): NO\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 14.04 LTS\nTensorFlow installed from (source or binary): pip install tensorflow\nTensorFlow version (use command below): ('v1.3.0-rc2-20-g0787eee', '1.3.0')\nPython version: Python 2.7.6\nBazel version (if compiling from source): N/A\nCUDA/cuDNN version: N/A (CPU)\nGPU model and memory: N/A\nExact command to reproduce:\n\npython -c \"import tensorflow as tf ; tf.truncated_normal([1], dtype=tf.int32)\"\nDescribe the problem\nWhen attempting to initialize a tf.Variable of type tf.int32 using tf.truncated_normal(), invocation with simple args raise a TypeError, but the error message is ambiguous and unhelpful for debugging:\npython -c \"import tensorflow as tf ; tf.truncated_normal([1], dtype=tf.int32)\"\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"/usr/slacy/src/tf_clean/env/local/lib/python2.7/site-packages/tensorflow/python/ops/random_ops.py\", line 168, in truncated_normal\n    mean_tensor = ops.convert_to_tensor(mean, dtype=dtype, name=\"mean\")\n  File \"/usr/slacy/src/tf_clean/env/local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 611, in convert_to_tensor\n    as_ref=False)\n  File \"/usr/slacy/src/tf_clean/env/local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 676, in internal_convert_to_tensor\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n  File \"/usr/slacy/src/tf_clean/env/local/lib/python2.7/site-packages/tensorflow/python/framework/constant_op.py\", line 121, in _constant_tensor_conversion_function\n    return constant(v, dtype=dtype, name=name)\n  File \"/usr/slacy/src/tf_clean/env/local/lib/python2.7/site-packages/tensorflow/python/framework/constant_op.py\", line 102, in constant\n    tensor_util.make_tensor_proto(value, dtype=dtype, shape=shape, verify_shape=verify_shape))\n  File \"/usr/slacy/src/tf_clean/env/local/lib/python2.7/site-packages/tensorflow/python/framework/tensor_util.py\", line 376, in make_tensor_proto\n    _AssertCompatible(values, dtype)\n  File \"/usr/slacy/src/tf_clean/env/local/lib/python2.7/site-packages/tensorflow/python/framework/tensor_util.py\", line 302, in _AssertCompatible\n    (dtype.name, repr(mismatch), type(mismatch).__name__))\nTypeError: Expected int32, got 0.0 of type 'float' instead.\n\n\nProviding more arguments to tf.truncated_normal correctly indicates that tf.int32 isn't a supported type:\npython -c \"import tensorflow as tf ; tf.truncated_normal([1], mean=0, stddev=1, dtype=tf.int32)\"\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"/usr/slacy/src/tf_clean/env/local/lib/python2.7/site-packages/tensorflow/python/ops/random_ops.py\", line 172, in truncated_normal\n    shape_tensor, dtype, seed=seed1, seed2=seed2)\n  File \"/usr/slacy/src/tf_clean/env/local/lib/python2.7/site-packages/tensorflow/python/ops/gen_random_ops.py\", line 316, in _truncated_normal\n    seed=seed, seed2=seed2, name=name)\n  File \"/usr/slacy/src/tf_clean/env/local/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py\", line 700, in apply_op\n    attr_value.type = _MakeType(value, attr_def)\n  File \"/usr/slacy/src/tf_clean/env/local/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py\", line 179, in _MakeType\n    _SatisfiesTypeConstraint(i, attr_def, param_name=attr_def.name)\n  File \"/usr/slacy/src/tf_clean/env/local/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py\", line 60, in _SatisfiesTypeConstraint\n    \", \".join(dtypes.as_dtype(x).name for x in allowed_list)))\nTypeError: Value passed to parameter 'dtype' has DataType int32 not in list of allowed values: float16, float32, float64\n\nContrasting this with usage of complex64, which provides the correct error message even with simple args:\npython -c \"import tensorflow as tf ; tf.truncated_normal([1], dtype=tf.complex64)\"\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"/usr/slacy/src/tf_clean/env/local/lib/python2.7/site-packages/tensorflow/python/ops/random_ops.py\", line 172, in truncated_normal\n    shape_tensor, dtype, seed=seed1, seed2=seed2)\n  File \"/usr/slacy/src/tf_clean/env/local/lib/python2.7/site-packages/tensorflow/python/ops/gen_random_ops.py\", line 316, in _truncated_normal\n    seed=seed, seed2=seed2, name=name)\n  File \"/usr/slacy/src/tf_clean/env/local/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py\", line 700, in apply_op\n    attr_value.type = _MakeType(value, attr_def)\n  File \"/usr/slacy/src/tf_clean/env/local/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py\", line 179, in _MakeType\n    _SatisfiesTypeConstraint(i, attr_def, param_name=attr_def.name)\n  File \"/usr/slacy/src/tf_clean/env/local/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py\", line 60, in _SatisfiesTypeConstraint\n    \", \".join(dtypes.as_dtype(x).name for x in allowed_list)))\nTypeError: Value passed to parameter 'dtype' has DataType complex64 not in list of allowed values: float16, float32, float64\n\ndtype argument checking should happen up front, earlier in the codepath of truncated_normal()\nSource code / logs\nSee above", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: NO\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 14.04 LTS \r\n- **TensorFlow installed from (source or binary)**: pip install tensorflow \r\n- **TensorFlow version (use command below)**: ('v1.3.0-rc2-20-g0787eee', '1.3.0')\r\n- **Python version**: Python 2.7.6\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: N/A (CPU)\r\n- **GPU model and memory**: N/A \r\n- **Exact command to reproduce**:\r\n\r\npython -c \"import tensorflow as tf ; tf.truncated_normal([1], dtype=tf.int32)\"\r\n\r\n### Describe the problem\r\nWhen attempting to initialize a tf.Variable of type tf.int32 using ```tf.truncated_normal()```, invocation with simple args raise a TypeError, but the error message is ambiguous and unhelpful for debugging: \r\n\r\n```\r\npython -c \"import tensorflow as tf ; tf.truncated_normal([1], dtype=tf.int32)\"\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/usr/slacy/src/tf_clean/env/local/lib/python2.7/site-packages/tensorflow/python/ops/random_ops.py\", line 168, in truncated_normal\r\n    mean_tensor = ops.convert_to_tensor(mean, dtype=dtype, name=\"mean\")\r\n  File \"/usr/slacy/src/tf_clean/env/local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 611, in convert_to_tensor\r\n    as_ref=False)\r\n  File \"/usr/slacy/src/tf_clean/env/local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 676, in internal_convert_to_tensor\r\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\r\n  File \"/usr/slacy/src/tf_clean/env/local/lib/python2.7/site-packages/tensorflow/python/framework/constant_op.py\", line 121, in _constant_tensor_conversion_function\r\n    return constant(v, dtype=dtype, name=name)\r\n  File \"/usr/slacy/src/tf_clean/env/local/lib/python2.7/site-packages/tensorflow/python/framework/constant_op.py\", line 102, in constant\r\n    tensor_util.make_tensor_proto(value, dtype=dtype, shape=shape, verify_shape=verify_shape))\r\n  File \"/usr/slacy/src/tf_clean/env/local/lib/python2.7/site-packages/tensorflow/python/framework/tensor_util.py\", line 376, in make_tensor_proto\r\n    _AssertCompatible(values, dtype)\r\n  File \"/usr/slacy/src/tf_clean/env/local/lib/python2.7/site-packages/tensorflow/python/framework/tensor_util.py\", line 302, in _AssertCompatible\r\n    (dtype.name, repr(mismatch), type(mismatch).__name__))\r\nTypeError: Expected int32, got 0.0 of type 'float' instead.\r\n\r\n```\r\n\r\nProviding more arguments to ```tf.truncated_normal``` correctly indicates that tf.int32 isn't a supported type: \r\n\r\n```\r\npython -c \"import tensorflow as tf ; tf.truncated_normal([1], mean=0, stddev=1, dtype=tf.int32)\"\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/usr/slacy/src/tf_clean/env/local/lib/python2.7/site-packages/tensorflow/python/ops/random_ops.py\", line 172, in truncated_normal\r\n    shape_tensor, dtype, seed=seed1, seed2=seed2)\r\n  File \"/usr/slacy/src/tf_clean/env/local/lib/python2.7/site-packages/tensorflow/python/ops/gen_random_ops.py\", line 316, in _truncated_normal\r\n    seed=seed, seed2=seed2, name=name)\r\n  File \"/usr/slacy/src/tf_clean/env/local/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py\", line 700, in apply_op\r\n    attr_value.type = _MakeType(value, attr_def)\r\n  File \"/usr/slacy/src/tf_clean/env/local/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py\", line 179, in _MakeType\r\n    _SatisfiesTypeConstraint(i, attr_def, param_name=attr_def.name)\r\n  File \"/usr/slacy/src/tf_clean/env/local/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py\", line 60, in _SatisfiesTypeConstraint\r\n    \", \".join(dtypes.as_dtype(x).name for x in allowed_list)))\r\nTypeError: Value passed to parameter 'dtype' has DataType int32 not in list of allowed values: float16, float32, float64\r\n```\r\n\r\nContrasting this with usage of complex64, which provides the correct error message even with simple args: \r\n\r\n```\r\npython -c \"import tensorflow as tf ; tf.truncated_normal([1], dtype=tf.complex64)\"\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/usr/slacy/src/tf_clean/env/local/lib/python2.7/site-packages/tensorflow/python/ops/random_ops.py\", line 172, in truncated_normal\r\n    shape_tensor, dtype, seed=seed1, seed2=seed2)\r\n  File \"/usr/slacy/src/tf_clean/env/local/lib/python2.7/site-packages/tensorflow/python/ops/gen_random_ops.py\", line 316, in _truncated_normal\r\n    seed=seed, seed2=seed2, name=name)\r\n  File \"/usr/slacy/src/tf_clean/env/local/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py\", line 700, in apply_op\r\n    attr_value.type = _MakeType(value, attr_def)\r\n  File \"/usr/slacy/src/tf_clean/env/local/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py\", line 179, in _MakeType\r\n    _SatisfiesTypeConstraint(i, attr_def, param_name=attr_def.name)\r\n  File \"/usr/slacy/src/tf_clean/env/local/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py\", line 60, in _SatisfiesTypeConstraint\r\n    \", \".join(dtypes.as_dtype(x).name for x in allowed_list)))\r\nTypeError: Value passed to parameter 'dtype' has DataType complex64 not in list of allowed values: float16, float32, float64\r\n```\r\n\r\ndtype argument checking should happen up front, earlier in the codepath of ```truncated_normal()```\r\n\r\n\r\n### Source code / logs\r\n\r\nSee above\r\n"}