{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/438565021", "html_url": "https://github.com/tensorflow/tensorflow/issues/23610#issuecomment-438565021", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23610", "id": 438565021, "node_id": "MDEyOklzc3VlQ29tbWVudDQzODU2NTAyMQ==", "user": {"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-14T07:30:17Z", "updated_at": "2018-11-14T07:30:17Z", "author_association": "NONE", "body_html": "<p>I think generalizing the approach to causal padding used by <code>tf.keras.layers.Conv1D</code> to n-dimensional convolutions would be straight-forward enough if we assumed there was only one causal/\"time\" dimension. The 2-d case could be useful for generating audio spectrograms, the 3-d for video generation. We'd have to add an arg to the API for the user to specify which dimension is causal. Also, rather than adding a <code>causal</code> flag, Keras does causal convolutions with the <code>padding=\"causal\"</code> arg.</p>\n<p>The implementation of causal padding in <code>tf.keras.layers.Conv1d</code> uses the crop/pad strategy described in the feature request and could be generalized to this n-dim case. <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=533735\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/joshim5\">@joshim5</a> would you like to submit a PR for this? If not I can take a look</p>", "body_text": "I think generalizing the approach to causal padding used by tf.keras.layers.Conv1D to n-dimensional convolutions would be straight-forward enough if we assumed there was only one causal/\"time\" dimension. The 2-d case could be useful for generating audio spectrograms, the 3-d for video generation. We'd have to add an arg to the API for the user to specify which dimension is causal. Also, rather than adding a causal flag, Keras does causal convolutions with the padding=\"causal\" arg.\nThe implementation of causal padding in tf.keras.layers.Conv1d uses the crop/pad strategy described in the feature request and could be generalized to this n-dim case. @joshim5 would you like to submit a PR for this? If not I can take a look", "body": "I think generalizing the approach to causal padding used by `tf.keras.layers.Conv1D` to n-dimensional convolutions would be straight-forward enough if we assumed there was only one causal/\"time\" dimension. The 2-d case could be useful for generating audio spectrograms, the 3-d for video generation. We'd have to add an arg to the API for the user to specify which dimension is causal. Also, rather than adding a `causal` flag, Keras does causal convolutions with the `padding=\"causal\"` arg.\r\n\r\nThe implementation of causal padding in `tf.keras.layers.Conv1d` uses the crop/pad strategy described in the feature request and could be generalized to this n-dim case. @joshim5 would you like to submit a PR for this? If not I can take a look"}