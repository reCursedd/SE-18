{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14283", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14283/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14283/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14283/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14283", "id": 271414397, "node_id": "MDU6SXNzdWUyNzE0MTQzOTc=", "number": 14283, "title": "Can't use estimator + dataset and train for less than one epoch", "user": {"login": "nisace", "id": 22485278, "node_id": "MDQ6VXNlcjIyNDg1Mjc4", "avatar_url": "https://avatars0.githubusercontent.com/u/22485278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nisace", "html_url": "https://github.com/nisace", "followers_url": "https://api.github.com/users/nisace/followers", "following_url": "https://api.github.com/users/nisace/following{/other_user}", "gists_url": "https://api.github.com/users/nisace/gists{/gist_id}", "starred_url": "https://api.github.com/users/nisace/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nisace/subscriptions", "organizations_url": "https://api.github.com/users/nisace/orgs", "repos_url": "https://api.github.com/users/nisace/repos", "events_url": "https://api.github.com/users/nisace/events{/privacy}", "received_events_url": "https://api.github.com/users/nisace/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "ispirmustafa", "id": 19293677, "node_id": "MDQ6VXNlcjE5MjkzNjc3", "avatar_url": "https://avatars1.githubusercontent.com/u/19293677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ispirmustafa", "html_url": "https://github.com/ispirmustafa", "followers_url": "https://api.github.com/users/ispirmustafa/followers", "following_url": "https://api.github.com/users/ispirmustafa/following{/other_user}", "gists_url": "https://api.github.com/users/ispirmustafa/gists{/gist_id}", "starred_url": "https://api.github.com/users/ispirmustafa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ispirmustafa/subscriptions", "organizations_url": "https://api.github.com/users/ispirmustafa/orgs", "repos_url": "https://api.github.com/users/ispirmustafa/repos", "events_url": "https://api.github.com/users/ispirmustafa/events{/privacy}", "received_events_url": "https://api.github.com/users/ispirmustafa/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ispirmustafa", "id": 19293677, "node_id": "MDQ6VXNlcjE5MjkzNjc3", "avatar_url": "https://avatars1.githubusercontent.com/u/19293677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ispirmustafa", "html_url": "https://github.com/ispirmustafa", "followers_url": "https://api.github.com/users/ispirmustafa/followers", "following_url": "https://api.github.com/users/ispirmustafa/following{/other_user}", "gists_url": "https://api.github.com/users/ispirmustafa/gists{/gist_id}", "starred_url": "https://api.github.com/users/ispirmustafa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ispirmustafa/subscriptions", "organizations_url": "https://api.github.com/users/ispirmustafa/orgs", "repos_url": "https://api.github.com/users/ispirmustafa/repos", "events_url": "https://api.github.com/users/ispirmustafa/events{/privacy}", "received_events_url": "https://api.github.com/users/ispirmustafa/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 22, "created_at": "2017-11-06T09:50:06Z", "updated_at": "2018-08-20T16:10:48Z", "closed_at": "2018-08-20T16:10:48Z", "author_association": "NONE", "body_html": "<p>TensorFlow 1.4 moves TF Dataset to core (tf.data.Dataset) and doc/tutorial suggest to use tf.estimator to train models.</p>\n<p>However, as recommended at the end of this <a href=\"https://www.tensorflow.org/programmers_guide/datasets\" rel=\"nofollow\">page</a>, the Dataset object and its iterator must be instantiated inside the input_fn function. This means the iterations through the dataset will start over for each call to estimator.train(input_fn, steps). Thus, calling is with steps &lt; number of samples in epoch, will lead to train the model on a subset of the dataset.</p>\n<p>Thus my question. Is it possible to implement something like this with Estimator + Dataset:</p>\n<pre><code>for i in range(num_epochs):\n    # Train for some steps\n    estimator.train(input_fn=train_input_fn, steps=valid_freq)\n\n   validation_iterator.\n    # Evaluate on the validation set (steps=None, we evaluate on the full validation set)\n   estimator.evaluate(input_fn=valid_input_fn)\n</code></pre>\n<p>without starting training samples iterations from scratch at each call to <code>estimator.train(input_fn=train_input_fn, steps=valid_freq) </code></p>\n<p>For example, unlike <a href=\"https://www.tensorflow.org/programmers_guide/datasets\" rel=\"nofollow\">here</a>, instantiate the Dataset and its iterator outside input_fn. I tried it but it does not work because then the input (from the dataset iterator) and the model (from the estimator model_fn) are not part of the same graph.</p>\n<p>Thanks</p>", "body_text": "TensorFlow 1.4 moves TF Dataset to core (tf.data.Dataset) and doc/tutorial suggest to use tf.estimator to train models.\nHowever, as recommended at the end of this page, the Dataset object and its iterator must be instantiated inside the input_fn function. This means the iterations through the dataset will start over for each call to estimator.train(input_fn, steps). Thus, calling is with steps < number of samples in epoch, will lead to train the model on a subset of the dataset.\nThus my question. Is it possible to implement something like this with Estimator + Dataset:\nfor i in range(num_epochs):\n    # Train for some steps\n    estimator.train(input_fn=train_input_fn, steps=valid_freq)\n\n   validation_iterator.\n    # Evaluate on the validation set (steps=None, we evaluate on the full validation set)\n   estimator.evaluate(input_fn=valid_input_fn)\n\nwithout starting training samples iterations from scratch at each call to estimator.train(input_fn=train_input_fn, steps=valid_freq) \nFor example, unlike here, instantiate the Dataset and its iterator outside input_fn. I tried it but it does not work because then the input (from the dataset iterator) and the model (from the estimator model_fn) are not part of the same graph.\nThanks", "body": "TensorFlow 1.4 moves TF Dataset to core (tf.data.Dataset) and doc/tutorial suggest to use tf.estimator to train models.\r\n\r\nHowever, as recommended at the end of this [page](https://www.tensorflow.org/programmers_guide/datasets), the Dataset object and its iterator must be instantiated inside the input_fn function. This means the iterations through the dataset will start over for each call to estimator.train(input_fn, steps). Thus, calling is with steps < number of samples in epoch, will lead to train the model on a subset of the dataset.\r\n\r\nThus my question. Is it possible to implement something like this with Estimator + Dataset:\r\n\r\n```\r\nfor i in range(num_epochs):\r\n    # Train for some steps\r\n    estimator.train(input_fn=train_input_fn, steps=valid_freq)\r\n\r\n   validation_iterator.\r\n    # Evaluate on the validation set (steps=None, we evaluate on the full validation set)\r\n   estimator.evaluate(input_fn=valid_input_fn)\r\n```\r\n\r\nwithout starting training samples iterations from scratch at each call to `estimator.train(input_fn=train_input_fn, steps=valid_freq)\r\n`\r\n\r\nFor example, unlike [here](https://www.tensorflow.org/programmers_guide/datasets), instantiate the Dataset and its iterator outside input_fn. I tried it but it does not work because then the input (from the dataset iterator) and the model (from the estimator model_fn) are not part of the same graph.\r\n\r\nThanks"}