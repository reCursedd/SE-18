{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/377046473", "html_url": "https://github.com/tensorflow/tensorflow/pull/17652#issuecomment-377046473", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17652", "id": 377046473, "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzA0NjQ3Mw==", "user": {"login": "yongtang", "id": 6932348, "node_id": "MDQ6VXNlcjY5MzIzNDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/6932348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yongtang", "html_url": "https://github.com/yongtang", "followers_url": "https://api.github.com/users/yongtang/followers", "following_url": "https://api.github.com/users/yongtang/following{/other_user}", "gists_url": "https://api.github.com/users/yongtang/gists{/gist_id}", "starred_url": "https://api.github.com/users/yongtang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yongtang/subscriptions", "organizations_url": "https://api.github.com/users/yongtang/orgs", "repos_url": "https://api.github.com/users/yongtang/repos", "events_url": "https://api.github.com/users/yongtang/events{/privacy}", "received_events_url": "https://api.github.com/users/yongtang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-28T21:40:07Z", "updated_at": "2018-03-28T21:40:07Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=192142\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mrry\">@mrry</a> Given the discrepancies mentioned above, I think it might make sense to support</p>\n<pre><code>dtypes.as_dtype(float) =&gt; float32\ndtypes.as_dtype(bool) =&gt; bool\n</code></pre>\n<p>For <code>int</code> and <code>complex</code> maybe we should defer to not add the support for now?</p>", "body_text": "@mrry Given the discrepancies mentioned above, I think it might make sense to support\ndtypes.as_dtype(float) => float32\ndtypes.as_dtype(bool) => bool\n\nFor int and complex maybe we should defer to not add the support for now?", "body": "@mrry Given the discrepancies mentioned above, I think it might make sense to support \r\n```\r\ndtypes.as_dtype(float) => float32\r\ndtypes.as_dtype(bool) => bool\r\n```\r\n\r\nFor `int` and `complex` maybe we should defer to not add the support for now?"}