{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/196964316", "pull_request_review_id": 130613504, "id": 196964316, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5Njk2NDMxNg==", "diff_hunk": "@@ -2130,6 +2130,115 @@ def compute_recall(true_p, false_n, name):\n     return rec, update_op\n \n \n+@tf_export('metrics.sensitivity')\n+def sensitivity(labels,\n+                predictions,\n+                weights=None,\n+                metrics_collections=None,\n+                updates_collections=None,\n+                name=None):\n+  \"\"\"Same as `tensorflow.metrics.recall`\n+\n+  For additional information about specificity and sensitivity, see the\n+  following: https://en.wikipedia.org/wiki/Sensitivity_and_specificity\"\"\"\n+  return recall(labels, predictions, weights, metrics_collections,\n+                updates_collections, name or \"sensitivity\")\n+\n+@tf_export('metrics.specificity')\n+def specificity(labels,\n+                predictions,\n+                weights=None,\n+                metrics_collections=None,\n+                updates_collections=None,\n+                name=None):\n+  \"\"\"Computes the specificity of the predictions with respect to the labels.\n+\n+  The `specificity` function creates two local variables, `true_negatives`\n+  and `false_positives`, that are used to compute the specificity. This value\n+  is ultimately returned as `specificity`, an idempotent operation that simply\n+  divides `true_negatives` by the sum of `true_negatives` and `false_positives`.\n+\n+  For estimation of the metric over a stream of data, the function creates an\n+  `update_op` that updates these variables and returns the `specificity`.\n+  `update_op` weights each prediction by the corresponding value in `weights`.\n+\n+  If `weights` is `None`, weights default to 1. Use weights of 0 to mask values.\n+\n+  For additional information about specificity and sensitivity, see the\n+  following: https://en.wikipedia.org/wiki/Sensitivity_and_specificity\n+\n+  Args:\n+    labels: The ground truth values, a `Tensor` whose dimensions must match\n+      `predictions`. Will be cast to `bool`.\n+    predictions: The predicted values, a `Tensor` of arbitrary dimensions. Will\n+      be cast to `bool`.\n+    weights: Optional `Tensor` whose rank is either 0, or the same rank as\n+      `labels`, and must be broadcastable to `labels` (i.e., all dimensions must\n+      be either `1`, or the same as the corresponding `labels` dimension).\n+    metrics_collections: An optional list of collections that `specificity`\n+      should be added to.\n+    updates_collections: An optional list of collections that `update_op` should\n+      be added to.\n+    name: An optional variable_scope name.\n+\n+  Returns:\n+    specificity: Scalar float `Tensor` with the value of `true_negatives`\n+      divided by the sum of `true_negatives` and `false_positives`.\n+    update_op: `Operation` that increments `true_negatives` and\n+      `false_positives` variables appropriately and whose value matches\n+      `specificity`.\n+\n+  Raises:\n+    ValueError: If `predictions` and `labels` have mismatched shapes, or if\n+      `weights` is not `None` and its shape doesn't match `predictions`, or if\n+      either `metrics_collections` or `updates_collections` are not a list or\n+      tuple.\n+    RuntimeError: If eager execution is enabled.\n+  \"\"\"\n+  if context.in_eager_mode():\n+    raise RuntimeError('tf.metrics.recall is not supported is not '\n+                       'supported when eager execution is enabled.')\n+\n+  with variable_scope.variable_scope(name, 'specificity',\n+                                     (predictions, labels, weights)):\n+    predictions, labels, weights = _remove_squeezable_dimensions(\n+        predictions=math_ops.cast(predictions, dtype=dtypes.bool),\n+        labels=math_ops.cast(labels, dtype=dtypes.bool),\n+        weights=weights)\n+\n+    true_n, true_negatives_update_op = true_negatives(\n+        labels,\n+        predictions,\n+        weights,\n+        metrics_collections=None,\n+        updates_collections=None,\n+        name=None)\n+    false_p, false_positives_update_op = false_positives(\n+        labels,\n+        predictions,\n+        weights,\n+        metrics_collections=None,\n+        updates_collections=None,\n+        name=None)\n+\n+    def compute_specificity(true_n, false_p, name):\n+      return array_ops.where(\n+          math_ops.greater(true_n + false_p, 0),\n+          math_ops.div(true_n, true_n + false_p), 0, name)\n+\n+    specificity = compute_specificity(true_n, false_p, 'value')", "path": "tensorflow/python/ops/metrics_impl.py", "position": null, "original_position": 100, "commit_id": "fd9a126e7a4eb20171a28923a40624c392680f6b", "original_commit_id": "3dc3c2ac35d93f64128766c2ec1d8cab6fad6940", "user": {"login": "josh11b", "id": 15258583, "node_id": "MDQ6VXNlcjE1MjU4NTgz", "avatar_url": "https://avatars0.githubusercontent.com/u/15258583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josh11b", "html_url": "https://github.com/josh11b", "followers_url": "https://api.github.com/users/josh11b/followers", "following_url": "https://api.github.com/users/josh11b/following{/other_user}", "gists_url": "https://api.github.com/users/josh11b/gists{/gist_id}", "starred_url": "https://api.github.com/users/josh11b/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josh11b/subscriptions", "organizations_url": "https://api.github.com/users/josh11b/orgs", "repos_url": "https://api.github.com/users/josh11b/repos", "events_url": "https://api.github.com/users/josh11b/events{/privacy}", "received_events_url": "https://api.github.com/users/josh11b/received_events", "type": "User", "site_admin": false}, "body": "Note that this should be updated to reflect the changes to this file to support distributed.", "created_at": "2018-06-20T22:39:41Z", "updated_at": "2018-06-21T09:23:20Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/17261#discussion_r196964316", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/17261", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/196964316"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/17261#discussion_r196964316"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/17261"}}, "body_html": "<p>Note that this should be updated to reflect the changes to this file to support distributed.</p>", "body_text": "Note that this should be updated to reflect the changes to this file to support distributed."}