{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/122080358", "pull_request_review_id": 44165216, "id": 122080358, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMjA4MDM1OA==", "diff_hunk": "@@ -29,73 +32,137 @@ class FixedLengthRecordReader : public ReaderBase {\n  public:\n   FixedLengthRecordReader(const string& node_name, int64 header_bytes,\n                           int64 record_bytes, int64 footer_bytes,\n-                          int64 hop_bytes, Env* env)\n+                          int64 hop_bytes, const string& encoding,\n+                          Env* env)\n       : ReaderBase(\n             strings::StrCat(\"FixedLengthRecordReader '\", node_name, \"'\")),\n         header_bytes_(header_bytes),\n         record_bytes_(record_bytes),\n         footer_bytes_(footer_bytes),\n         hop_bytes_(hop_bytes),\n         env_(env),\n-        file_pos_limit_(-1),\n-        record_number_(0) {}\n+        record_number_(0),\n+        encoding_(encoding) {}\n \n   // On success:\n-  // * input_buffer_ != nullptr,\n-  // * input_buffer_->Tell() == header_bytes_\n-  // * file_pos_limit_ == file size - footer_bytes_\n+  // * buffered_input_stream_ != nullptr,\n+  // * buffered_input_stream_->Tell() == header_bytes_\n   Status OnWorkStartedLocked() override {\n     record_number_ = 0;\n-    uint64 file_size = 0;\n-    TF_RETURN_IF_ERROR(env_->GetFileSize(current_work(), &file_size));\n-    file_pos_limit_ = file_size - footer_bytes_;\n \n-    TF_RETURN_IF_ERROR(env_->NewRandomAccessFile(current_work(), &file_));\n+    lookahead_cache_.clear();\n \n-    input_buffer_.reset(new io::InputBuffer(file_.get(), kBufferSize));\n-    TF_RETURN_IF_ERROR(input_buffer_->SkipNBytes(header_bytes_));\n+    TF_RETURN_IF_ERROR(env_->NewRandomAccessFile(current_work(), &file_));\n+    if (encoding_ == \"ZLIB\" || encoding_ == \"GZIP\") {\n+      const io::ZlibCompressionOptions zlib_options =\n+          encoding_ == \"ZLIB\" ?\n+          io::ZlibCompressionOptions::DEFAULT() :\n+          io::ZlibCompressionOptions::GZIP();\n+      file_stream_.reset(new io::RandomAccessInputStream(file_.get()));\n+      buffered_input_stream_.reset(new io::ZlibInputStream(file_stream_.get(),\n+                                                          (size_t)kBufferSize,\n+                                                          (size_t)kBufferSize,\n+                                                          zlib_options));\n+    } else {\n+      buffered_input_stream_.reset(\n+          new io::BufferedInputStream(file_.get(), kBufferSize));\n+    }\n+    TF_RETURN_IF_ERROR(buffered_input_stream_->SkipNBytes(header_bytes_));\n+\n+    int bytes_to_read = footer_bytes_;\n+\n+    // In case hop_bytes_ is in between 0 and record_bytes_,\n+    // we will need to hold a cache so that later on we could prefix the cache\n+    // with the remaining data to read:\n+    // For example, assume record_bytes is 2 and hop_bytes is 1,\n+    // For file \"H123\",\n+    // We will process the data in the following way:\n+    // 1. Read hope_bytes of 1 (\"1\") and save it in hop cache.", "path": "tensorflow/core/kernels/fixed_length_record_reader_op.cc", "position": null, "original_position": 73, "commit_id": "58c7ad730e58a411864bd5b2d24df0a2d2aabc5b", "original_commit_id": "88632bf60ce3fa03d6209c8802b9b660312398ba", "user": {"login": "yongtang", "id": 6932348, "node_id": "MDQ6VXNlcjY5MzIzNDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/6932348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yongtang", "html_url": "https://github.com/yongtang", "followers_url": "https://api.github.com/users/yongtang/followers", "following_url": "https://api.github.com/users/yongtang/following{/other_user}", "gists_url": "https://api.github.com/users/yongtang/gists{/gist_id}", "starred_url": "https://api.github.com/users/yongtang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yongtang/subscriptions", "organizations_url": "https://api.github.com/users/yongtang/orgs", "repos_url": "https://api.github.com/users/yongtang/repos", "events_url": "https://api.github.com/users/yongtang/events{/privacy}", "received_events_url": "https://api.github.com/users/yongtang/received_events", "type": "User", "site_admin": false}, "body": "Done.", "created_at": "2017-06-14T22:28:02Z", "updated_at": "2017-06-27T00:11:31Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/8901#discussion_r122080358", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/8901", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/122080358"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/8901#discussion_r122080358"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/8901"}}, "body_html": "<p>Done.</p>", "body_text": "Done.", "in_reply_to_id": 122006700}