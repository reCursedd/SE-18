{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15403", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15403/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15403/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15403/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15403", "id": 282510127, "node_id": "MDU6SXNzdWUyODI1MTAxMjc=", "number": 15403, "title": "Computing gradients of loop variables return None", "user": {"login": "ecsark", "id": 1857013, "node_id": "MDQ6VXNlcjE4NTcwMTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1857013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecsark", "html_url": "https://github.com/ecsark", "followers_url": "https://api.github.com/users/ecsark/followers", "following_url": "https://api.github.com/users/ecsark/following{/other_user}", "gists_url": "https://api.github.com/users/ecsark/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecsark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecsark/subscriptions", "organizations_url": "https://api.github.com/users/ecsark/orgs", "repos_url": "https://api.github.com/users/ecsark/repos", "events_url": "https://api.github.com/users/ecsark/events{/privacy}", "received_events_url": "https://api.github.com/users/ecsark/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-15T18:27:24Z", "updated_at": "2018-01-23T18:59:39Z", "closed_at": "2017-12-15T21:00:37Z", "author_association": "NONE", "body_html": "<h3>Problem description</h3>\n<p>I got <code>None</code> when computing gradient of the two loop variables that are supposed to have gradient..</p>\n<h3>Minimum code to reproduce the error</h3>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">loop_cond</span>(<span class=\"pl-smi\">i</span>, <span class=\"pl-k\">*</span><span class=\"pl-smi\">_</span>):\n    <span class=\"pl-k\">with</span> tf.control_dependencies([tf.Print(i, [i])]):\n        <span class=\"pl-k\">return</span> i <span class=\"pl-k\">&lt;</span> <span class=\"pl-c1\">5</span>\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">loop_body</span>(<span class=\"pl-smi\">i</span>, <span class=\"pl-smi\">a</span>, <span class=\"pl-smi\">b</span>):\n    c <span class=\"pl-k\">=</span> tf.gradients(b, a)[<span class=\"pl-c1\">0</span>]\n    b <span class=\"pl-k\">=</span> b <span class=\"pl-k\">+</span> c\n    <span class=\"pl-k\">return</span> i <span class=\"pl-k\">+</span> <span class=\"pl-c1\">1</span>, b,  b <span class=\"pl-k\">**</span> <span class=\"pl-c1\">2</span>\n        \na <span class=\"pl-k\">=</span> tf.constant(<span class=\"pl-c1\">3.0</span>)\nf_i, f_a, f_b <span class=\"pl-k\">=</span> tf.while_loop(loop_cond, loop_body, [<span class=\"pl-c1\">0</span>, a, a])</pre></div>\n<p>It seems to have failed in the first iteration as there was no output from print statement.</p>\n<h3>Complete logs</h3>\n<pre><code>---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n&lt;ipython-input-23-a766942a3da2&gt; in &lt;module&gt;()\n      9 \n     10 a = tf.constant(3.0)\n---&gt; 11 f_i, f_a, f_b = tf.while_loop(loop_cond, loop_body, [0, a, a])\n\n~/.conda/envs/conda-local/lib/python3.5/site-packages/tensorflow/python/ops/control_flow_ops.py in while_loop(cond, body, loop_vars, shape_invariants, parallel_iterations, back_prop, swap_memory, name)\n   2814     loop_context = WhileContext(parallel_iterations, back_prop, swap_memory)  # pylint: disable=redefined-outer-name\n   2815     ops.add_to_collection(ops.GraphKeys.WHILE_CONTEXT, loop_context)\n-&gt; 2816     result = loop_context.BuildLoop(cond, body, loop_vars, shape_invariants)\n   2817     return result\n   2818 \n\n~/.conda/envs/conda-local/lib/python3.5/site-packages/tensorflow/python/ops/control_flow_ops.py in BuildLoop(self, pred, body, loop_vars, shape_invariants)\n   2638       self.Enter()\n   2639       original_body_result, exit_vars = self._BuildLoop(\n-&gt; 2640           pred, body, original_loop_vars, loop_vars, shape_invariants)\n   2641     finally:\n   2642       self.Exit()\n\n~/.conda/envs/conda-local/lib/python3.5/site-packages/tensorflow/python/ops/control_flow_ops.py in _BuildLoop(self, pred, body, original_loop_vars, loop_vars, shape_invariants)\n   2588         structure=original_loop_vars,\n   2589         flat_sequence=vars_for_body_with_tensor_arrays)\n-&gt; 2590     body_result = body(*packed_vars_for_body)\n   2591     if not nest.is_sequence(body_result):\n   2592       body_result = [body_result]\n\n&lt;ipython-input-23-a766942a3da2&gt; in loop_body(i, a, b)\n      5 def loop_body(i, a, b):\n      6     c = tf.gradients(b, a)[0]\n----&gt; 7     b = b + c\n      8     return i + 1, b,  b ** 2\n      9 \n\n~/.conda/envs/conda-local/lib/python3.5/site-packages/tensorflow/python/ops/math_ops.py in binary_op_wrapper(x, y)\n    883       if not isinstance(y, sparse_tensor.SparseTensor):\n    884         try:\n--&gt; 885           y = ops.convert_to_tensor(y, dtype=x.dtype.base_dtype, name=\"y\")\n    886         except TypeError:\n    887           # If the RHS is not a tensor, it might be a tensor aware object\n\n~/.conda/envs/conda-local/lib/python3.5/site-packages/tensorflow/python/framework/ops.py in convert_to_tensor(value, dtype, name, preferred_dtype)\n    834       name=name,\n    835       preferred_dtype=preferred_dtype,\n--&gt; 836       as_ref=False)\n    837 \n    838 \n\n~/.conda/envs/conda-local/lib/python3.5/site-packages/tensorflow/python/framework/ops.py in internal_convert_to_tensor(value, dtype, name, as_ref, preferred_dtype, ctx)\n    924 \n    925     if ret is None:\n--&gt; 926       ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n    927 \n    928     if ret is NotImplemented:\n\n~/.conda/envs/conda-local/lib/python3.5/site-packages/tensorflow/python/framework/constant_op.py in _constant_tensor_conversion_function(v, dtype, name, as_ref)\n    227                                          as_ref=False):\n    228   _ = as_ref\n--&gt; 229   return constant(v, dtype=dtype, name=name)\n    230 \n    231 \n\n~/.conda/envs/conda-local/lib/python3.5/site-packages/tensorflow/python/framework/constant_op.py in constant(value, dtype, shape, name, verify_shape)\n    206   tensor_value.tensor.CopyFrom(\n    207       tensor_util.make_tensor_proto(\n--&gt; 208           value, dtype=dtype, shape=shape, verify_shape=verify_shape))\n    209   dtype_value = attr_value_pb2.AttrValue(type=tensor_value.tensor.dtype)\n    210   const_tensor = g.create_op(\n\n~/.conda/envs/conda-local/lib/python3.5/site-packages/tensorflow/python/framework/tensor_util.py in make_tensor_proto(values, dtype, shape, verify_shape)\n    369   else:\n    370     if values is None:\n--&gt; 371       raise ValueError(\"None values not supported.\")\n    372     # if dtype is provided, forces numpy array to be the type\n    373     # provided if possible.\n\nValueError: None values not supported.\n</code></pre>\n<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: No</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Debian GNU/Linux 7.11 (wheezy)</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: v1.4.0-4-g9283868 1.4.0</li>\n<li><strong>Python version</strong>:  3.5.4</li>\n<li><strong>Bazel version (if compiling from source)</strong>:</li>\n<li><strong>CUDA/cuDNN version</strong>: NA</li>\n<li><strong>GPU model and memory</strong>: NA</li>\n</ul>", "body_text": "Problem description\nI got None when computing gradient of the two loop variables that are supposed to have gradient..\nMinimum code to reproduce the error\ndef loop_cond(i, *_):\n    with tf.control_dependencies([tf.Print(i, [i])]):\n        return i < 5\n\ndef loop_body(i, a, b):\n    c = tf.gradients(b, a)[0]\n    b = b + c\n    return i + 1, b,  b ** 2\n        \na = tf.constant(3.0)\nf_i, f_a, f_b = tf.while_loop(loop_cond, loop_body, [0, a, a])\nIt seems to have failed in the first iteration as there was no output from print statement.\nComplete logs\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n<ipython-input-23-a766942a3da2> in <module>()\n      9 \n     10 a = tf.constant(3.0)\n---> 11 f_i, f_a, f_b = tf.while_loop(loop_cond, loop_body, [0, a, a])\n\n~/.conda/envs/conda-local/lib/python3.5/site-packages/tensorflow/python/ops/control_flow_ops.py in while_loop(cond, body, loop_vars, shape_invariants, parallel_iterations, back_prop, swap_memory, name)\n   2814     loop_context = WhileContext(parallel_iterations, back_prop, swap_memory)  # pylint: disable=redefined-outer-name\n   2815     ops.add_to_collection(ops.GraphKeys.WHILE_CONTEXT, loop_context)\n-> 2816     result = loop_context.BuildLoop(cond, body, loop_vars, shape_invariants)\n   2817     return result\n   2818 \n\n~/.conda/envs/conda-local/lib/python3.5/site-packages/tensorflow/python/ops/control_flow_ops.py in BuildLoop(self, pred, body, loop_vars, shape_invariants)\n   2638       self.Enter()\n   2639       original_body_result, exit_vars = self._BuildLoop(\n-> 2640           pred, body, original_loop_vars, loop_vars, shape_invariants)\n   2641     finally:\n   2642       self.Exit()\n\n~/.conda/envs/conda-local/lib/python3.5/site-packages/tensorflow/python/ops/control_flow_ops.py in _BuildLoop(self, pred, body, original_loop_vars, loop_vars, shape_invariants)\n   2588         structure=original_loop_vars,\n   2589         flat_sequence=vars_for_body_with_tensor_arrays)\n-> 2590     body_result = body(*packed_vars_for_body)\n   2591     if not nest.is_sequence(body_result):\n   2592       body_result = [body_result]\n\n<ipython-input-23-a766942a3da2> in loop_body(i, a, b)\n      5 def loop_body(i, a, b):\n      6     c = tf.gradients(b, a)[0]\n----> 7     b = b + c\n      8     return i + 1, b,  b ** 2\n      9 \n\n~/.conda/envs/conda-local/lib/python3.5/site-packages/tensorflow/python/ops/math_ops.py in binary_op_wrapper(x, y)\n    883       if not isinstance(y, sparse_tensor.SparseTensor):\n    884         try:\n--> 885           y = ops.convert_to_tensor(y, dtype=x.dtype.base_dtype, name=\"y\")\n    886         except TypeError:\n    887           # If the RHS is not a tensor, it might be a tensor aware object\n\n~/.conda/envs/conda-local/lib/python3.5/site-packages/tensorflow/python/framework/ops.py in convert_to_tensor(value, dtype, name, preferred_dtype)\n    834       name=name,\n    835       preferred_dtype=preferred_dtype,\n--> 836       as_ref=False)\n    837 \n    838 \n\n~/.conda/envs/conda-local/lib/python3.5/site-packages/tensorflow/python/framework/ops.py in internal_convert_to_tensor(value, dtype, name, as_ref, preferred_dtype, ctx)\n    924 \n    925     if ret is None:\n--> 926       ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n    927 \n    928     if ret is NotImplemented:\n\n~/.conda/envs/conda-local/lib/python3.5/site-packages/tensorflow/python/framework/constant_op.py in _constant_tensor_conversion_function(v, dtype, name, as_ref)\n    227                                          as_ref=False):\n    228   _ = as_ref\n--> 229   return constant(v, dtype=dtype, name=name)\n    230 \n    231 \n\n~/.conda/envs/conda-local/lib/python3.5/site-packages/tensorflow/python/framework/constant_op.py in constant(value, dtype, shape, name, verify_shape)\n    206   tensor_value.tensor.CopyFrom(\n    207       tensor_util.make_tensor_proto(\n--> 208           value, dtype=dtype, shape=shape, verify_shape=verify_shape))\n    209   dtype_value = attr_value_pb2.AttrValue(type=tensor_value.tensor.dtype)\n    210   const_tensor = g.create_op(\n\n~/.conda/envs/conda-local/lib/python3.5/site-packages/tensorflow/python/framework/tensor_util.py in make_tensor_proto(values, dtype, shape, verify_shape)\n    369   else:\n    370     if values is None:\n--> 371       raise ValueError(\"None values not supported.\")\n    372     # if dtype is provided, forces numpy array to be the type\n    373     # provided if possible.\n\nValueError: None values not supported.\n\nSystem information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): No\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Debian GNU/Linux 7.11 (wheezy)\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): v1.4.0-4-g9283868 1.4.0\nPython version:  3.5.4\nBazel version (if compiling from source):\nCUDA/cuDNN version: NA\nGPU model and memory: NA", "body": "### Problem description\r\nI got `None` when computing gradient of the two loop variables that are supposed to have gradient..\r\n\r\n### Minimum code to reproduce the error\r\n```python\r\ndef loop_cond(i, *_):\r\n    with tf.control_dependencies([tf.Print(i, [i])]):\r\n        return i < 5\r\n\r\ndef loop_body(i, a, b):\r\n    c = tf.gradients(b, a)[0]\r\n    b = b + c\r\n    return i + 1, b,  b ** 2\r\n        \r\na = tf.constant(3.0)\r\nf_i, f_a, f_b = tf.while_loop(loop_cond, loop_body, [0, a, a])\r\n```\r\n\r\nIt seems to have failed in the first iteration as there was no output from print statement.\r\n\r\n### Complete logs\r\n```\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-23-a766942a3da2> in <module>()\r\n      9 \r\n     10 a = tf.constant(3.0)\r\n---> 11 f_i, f_a, f_b = tf.while_loop(loop_cond, loop_body, [0, a, a])\r\n\r\n~/.conda/envs/conda-local/lib/python3.5/site-packages/tensorflow/python/ops/control_flow_ops.py in while_loop(cond, body, loop_vars, shape_invariants, parallel_iterations, back_prop, swap_memory, name)\r\n   2814     loop_context = WhileContext(parallel_iterations, back_prop, swap_memory)  # pylint: disable=redefined-outer-name\r\n   2815     ops.add_to_collection(ops.GraphKeys.WHILE_CONTEXT, loop_context)\r\n-> 2816     result = loop_context.BuildLoop(cond, body, loop_vars, shape_invariants)\r\n   2817     return result\r\n   2818 \r\n\r\n~/.conda/envs/conda-local/lib/python3.5/site-packages/tensorflow/python/ops/control_flow_ops.py in BuildLoop(self, pred, body, loop_vars, shape_invariants)\r\n   2638       self.Enter()\r\n   2639       original_body_result, exit_vars = self._BuildLoop(\r\n-> 2640           pred, body, original_loop_vars, loop_vars, shape_invariants)\r\n   2641     finally:\r\n   2642       self.Exit()\r\n\r\n~/.conda/envs/conda-local/lib/python3.5/site-packages/tensorflow/python/ops/control_flow_ops.py in _BuildLoop(self, pred, body, original_loop_vars, loop_vars, shape_invariants)\r\n   2588         structure=original_loop_vars,\r\n   2589         flat_sequence=vars_for_body_with_tensor_arrays)\r\n-> 2590     body_result = body(*packed_vars_for_body)\r\n   2591     if not nest.is_sequence(body_result):\r\n   2592       body_result = [body_result]\r\n\r\n<ipython-input-23-a766942a3da2> in loop_body(i, a, b)\r\n      5 def loop_body(i, a, b):\r\n      6     c = tf.gradients(b, a)[0]\r\n----> 7     b = b + c\r\n      8     return i + 1, b,  b ** 2\r\n      9 \r\n\r\n~/.conda/envs/conda-local/lib/python3.5/site-packages/tensorflow/python/ops/math_ops.py in binary_op_wrapper(x, y)\r\n    883       if not isinstance(y, sparse_tensor.SparseTensor):\r\n    884         try:\r\n--> 885           y = ops.convert_to_tensor(y, dtype=x.dtype.base_dtype, name=\"y\")\r\n    886         except TypeError:\r\n    887           # If the RHS is not a tensor, it might be a tensor aware object\r\n\r\n~/.conda/envs/conda-local/lib/python3.5/site-packages/tensorflow/python/framework/ops.py in convert_to_tensor(value, dtype, name, preferred_dtype)\r\n    834       name=name,\r\n    835       preferred_dtype=preferred_dtype,\r\n--> 836       as_ref=False)\r\n    837 \r\n    838 \r\n\r\n~/.conda/envs/conda-local/lib/python3.5/site-packages/tensorflow/python/framework/ops.py in internal_convert_to_tensor(value, dtype, name, as_ref, preferred_dtype, ctx)\r\n    924 \r\n    925     if ret is None:\r\n--> 926       ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\r\n    927 \r\n    928     if ret is NotImplemented:\r\n\r\n~/.conda/envs/conda-local/lib/python3.5/site-packages/tensorflow/python/framework/constant_op.py in _constant_tensor_conversion_function(v, dtype, name, as_ref)\r\n    227                                          as_ref=False):\r\n    228   _ = as_ref\r\n--> 229   return constant(v, dtype=dtype, name=name)\r\n    230 \r\n    231 \r\n\r\n~/.conda/envs/conda-local/lib/python3.5/site-packages/tensorflow/python/framework/constant_op.py in constant(value, dtype, shape, name, verify_shape)\r\n    206   tensor_value.tensor.CopyFrom(\r\n    207       tensor_util.make_tensor_proto(\r\n--> 208           value, dtype=dtype, shape=shape, verify_shape=verify_shape))\r\n    209   dtype_value = attr_value_pb2.AttrValue(type=tensor_value.tensor.dtype)\r\n    210   const_tensor = g.create_op(\r\n\r\n~/.conda/envs/conda-local/lib/python3.5/site-packages/tensorflow/python/framework/tensor_util.py in make_tensor_proto(values, dtype, shape, verify_shape)\r\n    369   else:\r\n    370     if values is None:\r\n--> 371       raise ValueError(\"None values not supported.\")\r\n    372     # if dtype is provided, forces numpy array to be the type\r\n    373     # provided if possible.\r\n\r\nValueError: None values not supported.\r\n```\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Debian GNU/Linux 7.11 (wheezy)\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: v1.4.0-4-g9283868 1.4.0\r\n- **Python version**:  3.5.4\r\n- **Bazel version (if compiling from source)**:\r\n- **CUDA/cuDNN version**: NA\r\n- **GPU model and memory**: NA"}