{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/130742638", "pull_request_review_id": 53652234, "id": 130742638, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMDc0MjYzOA==", "diff_hunk": "@@ -0,0 +1,85 @@\n+/* Copyright 2016 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+\n+#if GOOGLE_CUDA\n+\n+#define EIGEN_USE_GPU\n+\n+#include \"tensorflow/core/framework/register_types.h\"\n+#include \"tensorflow/core/framework/tensor_types.h\"\n+#include \"tensorflow/core/kernels/cuda_device_array_gpu.h\"\n+#include \"tensorflow/core/util/cuda_kernel_helper.h\"\n+\n+namespace tensorflow {\n+\n+using GPUDevice = Eigen::GpuDevice;\n+\n+namespace {\n+\n+template <typename T>\n+__global__ void DynamicStitchKernel(\n+        const int32 slice_size, const int32 output_size,\n+        CudaDeviceArrayStruct<int32> input_indices,\n+        CudaDeviceArrayStruct<const T*> input_ptrs,\n+        T *output) {\n+  int32 * data_indices = GetCudaDeviceArrayOnDevice(&input_indices);\n+  const T** data_ptrs = GetCudaDeviceArrayOnDevice(&input_ptrs);\n+  CUDA_1D_KERNEL_LOOP(output_index, output_size) {\n+    const int32 slice_id = output_index / slice_size;\n+    const int32 slice_offset = output_index % slice_size;\n+    const int32 input_index = data_indices[slice_id];\n+    if (input_index != -1) {\n+      output[output_index] = ldg(data_ptrs[input_index] + slice_offset);\n+    }\n+  }\n+}\n+\n+} // namespace\n+\n+template <typename T>\n+void DynamicStitchGPUImpl(const Eigen::GpuDevice& gpu_device,\n+                          const int32 slice_size, const int32 first_dim_size,\n+                          const CudaDeviceArrayStruct<int>& input_indices,\n+                          const CudaDeviceArrayStruct<const T*>& input_ptrs,\n+                          T* output) {\n+  const int32 output_size = first_dim_size * slice_size;\n+  auto config = GetCudaLaunchConfig(output_size, gpu_device);\n+  // set output to zeros\n+  SetZero<<<config.block_count, config.thread_per_block, 0, gpu_device.stream()>>>(", "path": "tensorflow/core/kernels/dynamic_stitch_op_gpu.cu.cc", "position": null, "original_position": 60, "commit_id": "d3e79f9a7da7ec1fb0ae86a7cb317ab8ed544dd6", "original_commit_id": "e675a39ffa4b92402d14da435acfa573c1780ed9", "user": {"login": "ekelsen", "id": 2533174, "node_id": "MDQ6VXNlcjI1MzMxNzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2533174?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ekelsen", "html_url": "https://github.com/ekelsen", "followers_url": "https://api.github.com/users/ekelsen/followers", "following_url": "https://api.github.com/users/ekelsen/following{/other_user}", "gists_url": "https://api.github.com/users/ekelsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/ekelsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ekelsen/subscriptions", "organizations_url": "https://api.github.com/users/ekelsen/orgs", "repos_url": "https://api.github.com/users/ekelsen/repos", "events_url": "https://api.github.com/users/ekelsen/events{/privacy}", "received_events_url": "https://api.github.com/users/ekelsen/received_events", "type": "User", "site_admin": false}, "body": "Jeff's TODO from above suggests the CPU implementation leaves the output that is otherwise untouched as uninitialized, so this kernel is currently not necessary to match the behavior of the CPU kernel.", "created_at": "2017-08-01T22:12:18Z", "updated_at": "2017-08-09T03:37:07Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/11940#discussion_r130742638", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11940", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/130742638"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/11940#discussion_r130742638"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11940"}}, "body_html": "<p>Jeff's TODO from above suggests the CPU implementation leaves the output that is otherwise untouched as uninitialized, so this kernel is currently not necessary to match the behavior of the CPU kernel.</p>", "body_text": "Jeff's TODO from above suggests the CPU implementation leaves the output that is otherwise untouched as uninitialized, so this kernel is currently not necessary to match the behavior of the CPU kernel."}