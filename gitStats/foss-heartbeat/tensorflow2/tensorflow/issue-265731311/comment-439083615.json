{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/439083615", "html_url": "https://github.com/tensorflow/tensorflow/issues/13745#issuecomment-439083615", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13745", "id": 439083615, "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTA4MzYxNQ==", "user": {"login": "tsvetiko", "id": 4830762, "node_id": "MDQ6VXNlcjQ4MzA3NjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/4830762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tsvetiko", "html_url": "https://github.com/tsvetiko", "followers_url": "https://api.github.com/users/tsvetiko/followers", "following_url": "https://api.github.com/users/tsvetiko/following{/other_user}", "gists_url": "https://api.github.com/users/tsvetiko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tsvetiko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tsvetiko/subscriptions", "organizations_url": "https://api.github.com/users/tsvetiko/orgs", "repos_url": "https://api.github.com/users/tsvetiko/repos", "events_url": "https://api.github.com/users/tsvetiko/events{/privacy}", "received_events_url": "https://api.github.com/users/tsvetiko/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-15T15:39:16Z", "updated_at": "2018-11-15T15:39:16Z", "author_association": "NONE", "body_html": "<p>As <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=192142\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mrry\">@mrry</a> said, I needed to do the following (considering the shape of the labels) in order to work:</p>\n<pre><code>dataset = dataset.batch(batch_size).filter(lambda features, labels: tf.equal(tf.shape(labels)[0], batch_size))\n</code></pre>", "body_text": "As @mrry said, I needed to do the following (considering the shape of the labels) in order to work:\ndataset = dataset.batch(batch_size).filter(lambda features, labels: tf.equal(tf.shape(labels)[0], batch_size))", "body": "As @mrry said, I needed to do the following (considering the shape of the labels) in order to work:\r\n```\r\ndataset = dataset.batch(batch_size).filter(lambda features, labels: tf.equal(tf.shape(labels)[0], batch_size))\r\n```"}