{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/76340196", "pull_request_review_id": null, "id": 76340196, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc2MzQwMTk2", "diff_hunk": "@@ -303,3 +307,92 @@ def fold_batch_norms(input_graph_def):\n \n   result_graph_def.node.extend(new_ops)\n   return result_graph_def\n+\n+\n+def fuse_resize_and_conv(input_graph_def):\n+  \"\"\"Merges preceding resize and mirror pad ops into a specialized convolution.\n+\n+  There's a common pattern of enlarging the input to a convolution using a\n+  resize operation, and also using MirrorPad to extend the boundaries to that\n+  zero edge pixels don't bleed inwards when convolving. This routine looks for\n+  that pattern of operations, and fuses them together into a Conv2DWithResizeOp.\n+\n+  Args:\n+    input_graph_def: A GraphDef containing a model.\n+\n+  Returns:\n+    Modified graph with resize and pad ops merged.\n+\n+  Raises:\n+    ValueError: If the graph is badly formed with duplicate node names.\n+  \"\"\"\n+\n+  input_node_map = {}\n+  for node in input_graph_def.node:\n+    if node.name not in input_node_map.keys():\n+      input_node_map[node.name] = node\n+    else:\n+      raise ValueError(\"Duplicate node names detected.\")", "path": "tensorflow/python/tools/optimize_for_inference_lib.py", "position": 72, "original_position": 72, "commit_id": "8a7479a046882d729bd2ddea75c83d17cdfe059f", "original_commit_id": "8a7479a046882d729bd2ddea75c83d17cdfe059f", "user": {"login": "cwhipkey", "id": 17578177, "node_id": "MDQ6VXNlcjE3NTc4MTc3", "avatar_url": "https://avatars0.githubusercontent.com/u/17578177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cwhipkey", "html_url": "https://github.com/cwhipkey", "followers_url": "https://api.github.com/users/cwhipkey/followers", "following_url": "https://api.github.com/users/cwhipkey/following{/other_user}", "gists_url": "https://api.github.com/users/cwhipkey/gists{/gist_id}", "starred_url": "https://api.github.com/users/cwhipkey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cwhipkey/subscriptions", "organizations_url": "https://api.github.com/users/cwhipkey/orgs", "repos_url": "https://api.github.com/users/cwhipkey/repos", "events_url": "https://api.github.com/users/cwhipkey/events{/privacy}", "received_events_url": "https://api.github.com/users/cwhipkey/received_events", "type": "User", "site_admin": false}, "body": "include    node.name  in the exception message?\n", "created_at": "2016-08-25T22:58:43Z", "updated_at": "2016-08-25T22:58:43Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/4046#discussion_r76340196", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/4046", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/76340196"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/4046#discussion_r76340196"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/4046"}}, "body_html": "<p>include    node.name  in the exception message?</p>", "body_text": "include    node.name  in the exception message?"}