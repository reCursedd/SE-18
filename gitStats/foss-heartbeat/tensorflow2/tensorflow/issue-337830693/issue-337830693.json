{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20509", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20509/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20509/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20509/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20509", "id": 337830693, "node_id": "MDU6SXNzdWUzMzc4MzA2OTM=", "number": 20509, "title": "Cannot use tf.metrics with MirroredStrategy", "user": {"login": "jdvylder", "id": 30600355, "node_id": "MDQ6VXNlcjMwNjAwMzU1", "avatar_url": "https://avatars1.githubusercontent.com/u/30600355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdvylder", "html_url": "https://github.com/jdvylder", "followers_url": "https://api.github.com/users/jdvylder/followers", "following_url": "https://api.github.com/users/jdvylder/following{/other_user}", "gists_url": "https://api.github.com/users/jdvylder/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdvylder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdvylder/subscriptions", "organizations_url": "https://api.github.com/users/jdvylder/orgs", "repos_url": "https://api.github.com/users/jdvylder/repos", "events_url": "https://api.github.com/users/jdvylder/events{/privacy}", "received_events_url": "https://api.github.com/users/jdvylder/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 996845227, "node_id": "MDU6TGFiZWw5OTY4NDUyMjc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:dist-strat", "name": "comp:dist-strat", "color": "0052cc", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "josh11b", "id": 15258583, "node_id": "MDQ6VXNlcjE1MjU4NTgz", "avatar_url": "https://avatars0.githubusercontent.com/u/15258583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josh11b", "html_url": "https://github.com/josh11b", "followers_url": "https://api.github.com/users/josh11b/followers", "following_url": "https://api.github.com/users/josh11b/following{/other_user}", "gists_url": "https://api.github.com/users/josh11b/gists{/gist_id}", "starred_url": "https://api.github.com/users/josh11b/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josh11b/subscriptions", "organizations_url": "https://api.github.com/users/josh11b/orgs", "repos_url": "https://api.github.com/users/josh11b/repos", "events_url": "https://api.github.com/users/josh11b/events{/privacy}", "received_events_url": "https://api.github.com/users/josh11b/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "josh11b", "id": 15258583, "node_id": "MDQ6VXNlcjE1MjU4NTgz", "avatar_url": "https://avatars0.githubusercontent.com/u/15258583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josh11b", "html_url": "https://github.com/josh11b", "followers_url": "https://api.github.com/users/josh11b/followers", "following_url": "https://api.github.com/users/josh11b/following{/other_user}", "gists_url": "https://api.github.com/users/josh11b/gists{/gist_id}", "starred_url": "https://api.github.com/users/josh11b/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josh11b/subscriptions", "organizations_url": "https://api.github.com/users/josh11b/orgs", "repos_url": "https://api.github.com/users/josh11b/repos", "events_url": "https://api.github.com/users/josh11b/events{/privacy}", "received_events_url": "https://api.github.com/users/josh11b/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2018-07-03T10:06:08Z", "updated_at": "2018-07-27T07:57:50Z", "closed_at": "2018-07-17T09:15:15Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: using nvidia containter: <a href=\"https://docs.nvidia.com/deeplearning/dgx/tensorflow-release-notes/rel_18.06.html#rel_18.06\" rel=\"nofollow\">https://docs.nvidia.com/deeplearning/dgx/tensorflow-release-notes/rel_18.06.html#rel_18.06</a></li>\n<li><strong>TensorFlow version (use command below)</strong>:1.8.0</li>\n<li><strong>Python version</strong>: 3.5</li>\n<li><strong>Bazel version (if compiling from source)</strong>: N/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: N/A</li>\n<li><strong>CUDA/cuDNN version</strong>: 9.0.176</li>\n<li><strong>GPU model and memory</strong>: nvidia tesla v100</li>\n<li><strong>Exact command to reproduce</strong>: N/A</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I'm training a network using a custom tf.estimator. To monitor its training i used several metrics from tf. metrics: accuracy, auc, true positives, ... When running this on a single GPU, This works as expected, however when using <code>tf.contrib.distribute.MirroredStrategy</code> i get an exception. Apparently all metrics suffer from the same bug (tested by iteratively leaving the metric out).</p>\n<h3>Source code / logs</h3>\n<p>I tried to extract the relevant part from my code:</p>\n<pre><code>def configure_trainer(self):\n        if self.configuration.get(\"multi_gpu\"):\n            distribute = tf.contrib.distribute.MirroredStrategy(num_gpus=2)\n        else:\n            distribute = None\n\n        run_config = tf.estimator.RunConfig(model_dir=out_dir, tf_random_seed=self.configuration.get(\"random_seed\"),\n                                                save_summary_steps=400,\n                                                save_checkpoints_steps=1000,\n                                                log_step_count_stepss400,\n                                                train_distribute=distribute)\n\n        self.trainer = tf.estimator.Estimator(\n            model_fn=self.get_model_fn,  \n            config=run_config\n        )\n\ndef get_model_fn(self, mode, features, labels, params):\n        self.configure_network(input_tensor=features, output_tensor=labels, mode=mode)\n        eval_metrics = self.get_accuracy(self.network.get_output_tensor(),labels)\n        return tf.estimator.EstimatorSpec(mode=mode, predictions=self.predictions,\n                                              loss=self.loss, train_op=self.trainer_conf.get_train_op_fn(self.loss,mode),\n                                              eval_metric_ops=eval_metrics\n                                              )\n...\ndef get_accuracy(self, output_tensor,  ground_truth, name=\"\"):\n        metric_name = 'Accuracy_' + name\n        accuracy = tf.metrics.accuracy(\n                labels=ground_truth,\n                predictions=tf.argmax(output_tensor, axis=-1),\n                name=metric_name)\n        tf.summary.scalar(metric_name , accuracy[1])\n        return {\n            metric_name : accuracy\n        }\n</code></pre>\n<p>This results in the following error trace:</p>\n<pre><code>Traceback (most recent call last):\n  File \"train.py\", line 27, in &lt;module&gt;\n    experimenter.run_training_experiment(config)\n  File \"/media/local/BDA_tf_framework/neuralnetwork/trainingexperimenter.py\", line 39, in run_training_experiment\n    tf.estimator.train_and_evaluate(self.trainer, self.training_specs, self.eval_specs)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/training.py\", line 439, in train_and_evaluate\n    executor.run()\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/training.py\", line 518, in run\n    self.run_local()\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/training.py\", line 650, in run_local\n    hooks=train_hooks)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/estimator.py\", line 363, in train\n    loss = self._train_model(input_fn, hooks, saving_listeners)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/estimator.py\", line 841, in _train_model\n    return self._train_model_distributed(input_fn, hooks, saving_listeners)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/estimator.py\", line 977, in _train_model_distributed\n    saving_listeners)\n  File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\n    self.gen.throw(type, value, traceback)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 5265, in get_controller\n    yield g\n  File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\n    self.gen.throw(type, value, traceback)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 5060, in get_controller\n    yield default\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 5265, in get_controller\n    yield g\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/estimator.py\", line 977, in _train_model_distributed\n    saving_listeners)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/distribute.py\", line 304, in __exit__\n    self._var_creator_scope.__exit__(exception_type, exception_value, traceback)\n  File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\n    self.gen.throw(type, value, traceback)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/variable_scope.py\", line 2283, in variable_creator_scope\n    yield\n  File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\n    self.gen.throw(type, value, traceback)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 2939, in _variable_creator_scope\n    yield\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/variable_scope.py\", line 2283, in variable_creator_scope\n    yield\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/estimator.py\", line 884, in _train_model_distributed\n    self.config)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/distribute.py\", line 756, in call_for_each_tower\n    return self._call_for_each_tower(fn, *args, **kwargs)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/contrib/distribute/python/mirrored_strategy.py\", line 254, in _call_for_each_tower\n    coord.join(threads)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/coordinator.py\", line 389, in join\n    six.reraise(*self._exc_info_to_raise)\n  File \"/usr/local/lib/python3.5/dist-packages/six.py\", line 693, in reraise\n    raise value\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/coordinator.py\", line 297, in stop_on_exception\n    yield\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/contrib/distribute/python/mirrored_strategy.py\", line 466, in run\n    self.done = True\n  File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\n    self.gen.throw(type, value, traceback)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/eager/context.py\", line 295, in _mode\n    yield\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/contrib/distribute/python/mirrored_strategy.py\", line 466, in run\n    self.done = True\n  File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\n    self.gen.throw(type, value, traceback)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/eager/context.py\", line 514, in device_policy\n    yield\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/contrib/distribute/python/mirrored_strategy.py\", line 466, in run\n    self.done = True\n  File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\n    self.gen.throw(type, value, traceback)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 5265, in get_controller\n    yield g\n  File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\n    self.gen.throw(type, value, traceback)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 5060, in get_controller\n    yield default\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 5265, in get_controller\n    yield g\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/contrib/distribute/python/mirrored_strategy.py\", line 466, in run\n    self.done = True\n  File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\n    self.gen.throw(type, value, traceback)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 4338, in device\n    yield\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/contrib/distribute/python/mirrored_strategy.py\", line 466, in run\n    self.done = True\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 5991, in __exit__\n    self._name_scope.__exit__(type_arg, value_arg, traceback_arg)\n  File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\n    self.gen.throw(type, value, traceback)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 4115, in name_scope\n    yield \"\" if new_stack is None else new_stack + \"/\"\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/contrib/distribute/python/mirrored_strategy.py\", line 466, in run\n    self.done = True\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/variable_scope.py\", line 2097, in __exit__\n    self._graph_context_manager.__exit__(type_arg, value_arg, traceback_arg)\n  File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\n    self.gen.throw(type, value, traceback)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 5265, in get_controller\n    yield g\n  File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\n    self.gen.throw(type, value, traceback)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 5060, in get_controller\n    yield default\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 5265, in get_controller\n    yield g\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/contrib/distribute/python/mirrored_strategy.py\", line 466, in run\n    self.done = True\n  File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\n    self.gen.throw(type, value, traceback)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/variable_scope.py\", line 2283, in variable_creator_scope\n    yield\n  File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\n    self.gen.throw(type, value, traceback)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 2939, in _variable_creator_scope\n    yield\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/variable_scope.py\", line 2283, in variable_creator_scope\n    yield\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/contrib/distribute/python/mirrored_strategy.py\", line 465, in run\n    self.main_result = self.main_fn(*self.main_args, **self.main_kwargs)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/estimator.py\", line 831, in _call_model_fn\n    model_fn_results = self._model_fn(features=features, **kwargs)\n  File \"/media/local/BDA_tf_framework/neuralnetwork/trainingexperimenter.py\", line 116, in get_model_fn\n    eval_metrics = self.logger.get_eval_metrics(self.predictions, labels)\n  File \"/media/local/myfiles/Mytraininglogger.py\", line 26, in get_eval_metrics\n    metrics.update(self.get_accuracy(output_tensor, ground_truth, name=name))\n  File \"/media/local/BDA_tf_framework/neuralnetwork/traininglogger.py\", line 60, in get_accuracy\n    name=metric_name)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/metrics_impl.py\", line 409, in accuracy\n    name or 'accuracy')\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/metrics_impl.py\", line 345, in mean\n    return mean_t, update_op\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/variable_scope.py\", line 2095, in __exit__\n    self._current_name_scope.__exit__(type_arg, value_arg, traceback_arg)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 5991, in __exit__\n    self._name_scope.__exit__(type_arg, value_arg, traceback_arg)\n  File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\n    self.gen.throw(type, value, traceback)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 4115, in name_scope\n    yield \"\" if new_stack is None else new_stack + \"/\"\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/metrics_impl.py\", line 332, in mean\n    update_total_op = state_ops.assign_add(total, math_ops.reduce_sum(values))\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/state_ops.py\", line 251, in assign_add\n    return ref.assign_add(value)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/contrib/distribute/python/values.py\", line 311, in assign_add\n    return self.get(device=_get_update_device()).assign_add(*args, **kwargs)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/contrib/distribute/python/values.py\", line 283, in _get_update_device\n    \"Use DistributionStrategy.update() to modify a MirroredVariable.\")\nRuntimeError: Use DistributionStrategy.update() to modify a MirroredVariable.\nException ignored in: &lt;generator object get_controller at 0x7f2dec1a2fc0&gt;\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 5267, in get_controller\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/eager/context.py\", line 136, in pop\nIndexError: pop from empty list\nException ignored in: &lt;generator object get_controller at 0x7f2dec1f0830&gt;\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 5267, in get_controller\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/eager/context.py\", line 136, in pop\nIndexError: pop from empty list\nException ignored in: &lt;generator object get_controller at 0x7f2dec17d9e8&gt;\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 5267, in get_controller\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/eager/context.py\", line 136, in pop\nIndexError: pop from empty list\nMakefile:19: recipe for target 'train_gpu' failed\nmake: *** [train_gpu] Error 1\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04\nTensorFlow installed from (source or binary): using nvidia containter: https://docs.nvidia.com/deeplearning/dgx/tensorflow-release-notes/rel_18.06.html#rel_18.06\nTensorFlow version (use command below):1.8.0\nPython version: 3.5\nBazel version (if compiling from source): N/A\nGCC/Compiler version (if compiling from source): N/A\nCUDA/cuDNN version: 9.0.176\nGPU model and memory: nvidia tesla v100\nExact command to reproduce: N/A\n\nDescribe the problem\nI'm training a network using a custom tf.estimator. To monitor its training i used several metrics from tf. metrics: accuracy, auc, true positives, ... When running this on a single GPU, This works as expected, however when using tf.contrib.distribute.MirroredStrategy i get an exception. Apparently all metrics suffer from the same bug (tested by iteratively leaving the metric out).\nSource code / logs\nI tried to extract the relevant part from my code:\ndef configure_trainer(self):\n        if self.configuration.get(\"multi_gpu\"):\n            distribute = tf.contrib.distribute.MirroredStrategy(num_gpus=2)\n        else:\n            distribute = None\n\n        run_config = tf.estimator.RunConfig(model_dir=out_dir, tf_random_seed=self.configuration.get(\"random_seed\"),\n                                                save_summary_steps=400,\n                                                save_checkpoints_steps=1000,\n                                                log_step_count_stepss400,\n                                                train_distribute=distribute)\n\n        self.trainer = tf.estimator.Estimator(\n            model_fn=self.get_model_fn,  \n            config=run_config\n        )\n\ndef get_model_fn(self, mode, features, labels, params):\n        self.configure_network(input_tensor=features, output_tensor=labels, mode=mode)\n        eval_metrics = self.get_accuracy(self.network.get_output_tensor(),labels)\n        return tf.estimator.EstimatorSpec(mode=mode, predictions=self.predictions,\n                                              loss=self.loss, train_op=self.trainer_conf.get_train_op_fn(self.loss,mode),\n                                              eval_metric_ops=eval_metrics\n                                              )\n...\ndef get_accuracy(self, output_tensor,  ground_truth, name=\"\"):\n        metric_name = 'Accuracy_' + name\n        accuracy = tf.metrics.accuracy(\n                labels=ground_truth,\n                predictions=tf.argmax(output_tensor, axis=-1),\n                name=metric_name)\n        tf.summary.scalar(metric_name , accuracy[1])\n        return {\n            metric_name : accuracy\n        }\n\nThis results in the following error trace:\nTraceback (most recent call last):\n  File \"train.py\", line 27, in <module>\n    experimenter.run_training_experiment(config)\n  File \"/media/local/BDA_tf_framework/neuralnetwork/trainingexperimenter.py\", line 39, in run_training_experiment\n    tf.estimator.train_and_evaluate(self.trainer, self.training_specs, self.eval_specs)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/training.py\", line 439, in train_and_evaluate\n    executor.run()\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/training.py\", line 518, in run\n    self.run_local()\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/training.py\", line 650, in run_local\n    hooks=train_hooks)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/estimator.py\", line 363, in train\n    loss = self._train_model(input_fn, hooks, saving_listeners)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/estimator.py\", line 841, in _train_model\n    return self._train_model_distributed(input_fn, hooks, saving_listeners)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/estimator.py\", line 977, in _train_model_distributed\n    saving_listeners)\n  File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\n    self.gen.throw(type, value, traceback)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 5265, in get_controller\n    yield g\n  File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\n    self.gen.throw(type, value, traceback)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 5060, in get_controller\n    yield default\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 5265, in get_controller\n    yield g\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/estimator.py\", line 977, in _train_model_distributed\n    saving_listeners)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/distribute.py\", line 304, in __exit__\n    self._var_creator_scope.__exit__(exception_type, exception_value, traceback)\n  File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\n    self.gen.throw(type, value, traceback)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/variable_scope.py\", line 2283, in variable_creator_scope\n    yield\n  File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\n    self.gen.throw(type, value, traceback)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 2939, in _variable_creator_scope\n    yield\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/variable_scope.py\", line 2283, in variable_creator_scope\n    yield\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/estimator.py\", line 884, in _train_model_distributed\n    self.config)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/distribute.py\", line 756, in call_for_each_tower\n    return self._call_for_each_tower(fn, *args, **kwargs)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/contrib/distribute/python/mirrored_strategy.py\", line 254, in _call_for_each_tower\n    coord.join(threads)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/coordinator.py\", line 389, in join\n    six.reraise(*self._exc_info_to_raise)\n  File \"/usr/local/lib/python3.5/dist-packages/six.py\", line 693, in reraise\n    raise value\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/coordinator.py\", line 297, in stop_on_exception\n    yield\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/contrib/distribute/python/mirrored_strategy.py\", line 466, in run\n    self.done = True\n  File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\n    self.gen.throw(type, value, traceback)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/eager/context.py\", line 295, in _mode\n    yield\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/contrib/distribute/python/mirrored_strategy.py\", line 466, in run\n    self.done = True\n  File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\n    self.gen.throw(type, value, traceback)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/eager/context.py\", line 514, in device_policy\n    yield\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/contrib/distribute/python/mirrored_strategy.py\", line 466, in run\n    self.done = True\n  File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\n    self.gen.throw(type, value, traceback)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 5265, in get_controller\n    yield g\n  File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\n    self.gen.throw(type, value, traceback)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 5060, in get_controller\n    yield default\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 5265, in get_controller\n    yield g\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/contrib/distribute/python/mirrored_strategy.py\", line 466, in run\n    self.done = True\n  File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\n    self.gen.throw(type, value, traceback)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 4338, in device\n    yield\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/contrib/distribute/python/mirrored_strategy.py\", line 466, in run\n    self.done = True\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 5991, in __exit__\n    self._name_scope.__exit__(type_arg, value_arg, traceback_arg)\n  File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\n    self.gen.throw(type, value, traceback)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 4115, in name_scope\n    yield \"\" if new_stack is None else new_stack + \"/\"\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/contrib/distribute/python/mirrored_strategy.py\", line 466, in run\n    self.done = True\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/variable_scope.py\", line 2097, in __exit__\n    self._graph_context_manager.__exit__(type_arg, value_arg, traceback_arg)\n  File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\n    self.gen.throw(type, value, traceback)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 5265, in get_controller\n    yield g\n  File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\n    self.gen.throw(type, value, traceback)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 5060, in get_controller\n    yield default\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 5265, in get_controller\n    yield g\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/contrib/distribute/python/mirrored_strategy.py\", line 466, in run\n    self.done = True\n  File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\n    self.gen.throw(type, value, traceback)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/variable_scope.py\", line 2283, in variable_creator_scope\n    yield\n  File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\n    self.gen.throw(type, value, traceback)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 2939, in _variable_creator_scope\n    yield\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/variable_scope.py\", line 2283, in variable_creator_scope\n    yield\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/contrib/distribute/python/mirrored_strategy.py\", line 465, in run\n    self.main_result = self.main_fn(*self.main_args, **self.main_kwargs)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/estimator.py\", line 831, in _call_model_fn\n    model_fn_results = self._model_fn(features=features, **kwargs)\n  File \"/media/local/BDA_tf_framework/neuralnetwork/trainingexperimenter.py\", line 116, in get_model_fn\n    eval_metrics = self.logger.get_eval_metrics(self.predictions, labels)\n  File \"/media/local/myfiles/Mytraininglogger.py\", line 26, in get_eval_metrics\n    metrics.update(self.get_accuracy(output_tensor, ground_truth, name=name))\n  File \"/media/local/BDA_tf_framework/neuralnetwork/traininglogger.py\", line 60, in get_accuracy\n    name=metric_name)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/metrics_impl.py\", line 409, in accuracy\n    name or 'accuracy')\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/metrics_impl.py\", line 345, in mean\n    return mean_t, update_op\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/variable_scope.py\", line 2095, in __exit__\n    self._current_name_scope.__exit__(type_arg, value_arg, traceback_arg)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 5991, in __exit__\n    self._name_scope.__exit__(type_arg, value_arg, traceback_arg)\n  File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\n    self.gen.throw(type, value, traceback)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 4115, in name_scope\n    yield \"\" if new_stack is None else new_stack + \"/\"\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/metrics_impl.py\", line 332, in mean\n    update_total_op = state_ops.assign_add(total, math_ops.reduce_sum(values))\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/state_ops.py\", line 251, in assign_add\n    return ref.assign_add(value)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/contrib/distribute/python/values.py\", line 311, in assign_add\n    return self.get(device=_get_update_device()).assign_add(*args, **kwargs)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/contrib/distribute/python/values.py\", line 283, in _get_update_device\n    \"Use DistributionStrategy.update() to modify a MirroredVariable.\")\nRuntimeError: Use DistributionStrategy.update() to modify a MirroredVariable.\nException ignored in: <generator object get_controller at 0x7f2dec1a2fc0>\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 5267, in get_controller\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/eager/context.py\", line 136, in pop\nIndexError: pop from empty list\nException ignored in: <generator object get_controller at 0x7f2dec1f0830>\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 5267, in get_controller\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/eager/context.py\", line 136, in pop\nIndexError: pop from empty list\nException ignored in: <generator object get_controller at 0x7f2dec17d9e8>\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 5267, in get_controller\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/eager/context.py\", line 136, in pop\nIndexError: pop from empty list\nMakefile:19: recipe for target 'train_gpu' failed\nmake: *** [train_gpu] Error 1", "body": "\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: using nvidia containter: https://docs.nvidia.com/deeplearning/dgx/tensorflow-release-notes/rel_18.06.html#rel_18.06 \r\n- **TensorFlow version (use command below)**:1.8.0\r\n- **Python version**: 3.5\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: 9.0.176\r\n- **GPU model and memory**: nvidia tesla v100\r\n- **Exact command to reproduce**: N/A\r\n\r\n\r\n\r\n### Describe the problem\r\nI'm training a network using a custom tf.estimator. To monitor its training i used several metrics from tf. metrics: accuracy, auc, true positives, ... When running this on a single GPU, This works as expected, however when using `tf.contrib.distribute.MirroredStrategy` i get an exception. Apparently all metrics suffer from the same bug (tested by iteratively leaving the metric out).\r\n\r\n### Source code / logs\r\nI tried to extract the relevant part from my code:\r\n```\r\ndef configure_trainer(self):\r\n        if self.configuration.get(\"multi_gpu\"):\r\n            distribute = tf.contrib.distribute.MirroredStrategy(num_gpus=2)\r\n        else:\r\n            distribute = None\r\n\r\n        run_config = tf.estimator.RunConfig(model_dir=out_dir, tf_random_seed=self.configuration.get(\"random_seed\"),\r\n                                                save_summary_steps=400,\r\n                                                save_checkpoints_steps=1000,\r\n                                                log_step_count_stepss400,\r\n                                                train_distribute=distribute)\r\n\r\n        self.trainer = tf.estimator.Estimator(\r\n            model_fn=self.get_model_fn,  \r\n            config=run_config\r\n        )\r\n\r\ndef get_model_fn(self, mode, features, labels, params):\r\n        self.configure_network(input_tensor=features, output_tensor=labels, mode=mode)\r\n        eval_metrics = self.get_accuracy(self.network.get_output_tensor(),labels)\r\n        return tf.estimator.EstimatorSpec(mode=mode, predictions=self.predictions,\r\n                                              loss=self.loss, train_op=self.trainer_conf.get_train_op_fn(self.loss,mode),\r\n                                              eval_metric_ops=eval_metrics\r\n                                              )\r\n...\r\ndef get_accuracy(self, output_tensor,  ground_truth, name=\"\"):\r\n        metric_name = 'Accuracy_' + name\r\n        accuracy = tf.metrics.accuracy(\r\n                labels=ground_truth,\r\n                predictions=tf.argmax(output_tensor, axis=-1),\r\n                name=metric_name)\r\n        tf.summary.scalar(metric_name , accuracy[1])\r\n        return {\r\n            metric_name : accuracy\r\n        }\r\n```\r\n\r\nThis results in the following error trace:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"train.py\", line 27, in <module>\r\n    experimenter.run_training_experiment(config)\r\n  File \"/media/local/BDA_tf_framework/neuralnetwork/trainingexperimenter.py\", line 39, in run_training_experiment\r\n    tf.estimator.train_and_evaluate(self.trainer, self.training_specs, self.eval_specs)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/training.py\", line 439, in train_and_evaluate\r\n    executor.run()\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/training.py\", line 518, in run\r\n    self.run_local()\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/training.py\", line 650, in run_local\r\n    hooks=train_hooks)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/estimator.py\", line 363, in train\r\n    loss = self._train_model(input_fn, hooks, saving_listeners)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/estimator.py\", line 841, in _train_model\r\n    return self._train_model_distributed(input_fn, hooks, saving_listeners)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/estimator.py\", line 977, in _train_model_distributed\r\n    saving_listeners)\r\n  File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\r\n    self.gen.throw(type, value, traceback)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 5265, in get_controller\r\n    yield g\r\n  File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\r\n    self.gen.throw(type, value, traceback)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 5060, in get_controller\r\n    yield default\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 5265, in get_controller\r\n    yield g\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/estimator.py\", line 977, in _train_model_distributed\r\n    saving_listeners)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/distribute.py\", line 304, in __exit__\r\n    self._var_creator_scope.__exit__(exception_type, exception_value, traceback)\r\n  File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\r\n    self.gen.throw(type, value, traceback)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/variable_scope.py\", line 2283, in variable_creator_scope\r\n    yield\r\n  File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\r\n    self.gen.throw(type, value, traceback)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 2939, in _variable_creator_scope\r\n    yield\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/variable_scope.py\", line 2283, in variable_creator_scope\r\n    yield\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/estimator.py\", line 884, in _train_model_distributed\r\n    self.config)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/distribute.py\", line 756, in call_for_each_tower\r\n    return self._call_for_each_tower(fn, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/contrib/distribute/python/mirrored_strategy.py\", line 254, in _call_for_each_tower\r\n    coord.join(threads)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/coordinator.py\", line 389, in join\r\n    six.reraise(*self._exc_info_to_raise)\r\n  File \"/usr/local/lib/python3.5/dist-packages/six.py\", line 693, in reraise\r\n    raise value\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/coordinator.py\", line 297, in stop_on_exception\r\n    yield\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/contrib/distribute/python/mirrored_strategy.py\", line 466, in run\r\n    self.done = True\r\n  File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\r\n    self.gen.throw(type, value, traceback)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/eager/context.py\", line 295, in _mode\r\n    yield\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/contrib/distribute/python/mirrored_strategy.py\", line 466, in run\r\n    self.done = True\r\n  File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\r\n    self.gen.throw(type, value, traceback)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/eager/context.py\", line 514, in device_policy\r\n    yield\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/contrib/distribute/python/mirrored_strategy.py\", line 466, in run\r\n    self.done = True\r\n  File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\r\n    self.gen.throw(type, value, traceback)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 5265, in get_controller\r\n    yield g\r\n  File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\r\n    self.gen.throw(type, value, traceback)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 5060, in get_controller\r\n    yield default\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 5265, in get_controller\r\n    yield g\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/contrib/distribute/python/mirrored_strategy.py\", line 466, in run\r\n    self.done = True\r\n  File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\r\n    self.gen.throw(type, value, traceback)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 4338, in device\r\n    yield\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/contrib/distribute/python/mirrored_strategy.py\", line 466, in run\r\n    self.done = True\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 5991, in __exit__\r\n    self._name_scope.__exit__(type_arg, value_arg, traceback_arg)\r\n  File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\r\n    self.gen.throw(type, value, traceback)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 4115, in name_scope\r\n    yield \"\" if new_stack is None else new_stack + \"/\"\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/contrib/distribute/python/mirrored_strategy.py\", line 466, in run\r\n    self.done = True\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/variable_scope.py\", line 2097, in __exit__\r\n    self._graph_context_manager.__exit__(type_arg, value_arg, traceback_arg)\r\n  File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\r\n    self.gen.throw(type, value, traceback)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 5265, in get_controller\r\n    yield g\r\n  File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\r\n    self.gen.throw(type, value, traceback)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 5060, in get_controller\r\n    yield default\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 5265, in get_controller\r\n    yield g\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/contrib/distribute/python/mirrored_strategy.py\", line 466, in run\r\n    self.done = True\r\n  File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\r\n    self.gen.throw(type, value, traceback)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/variable_scope.py\", line 2283, in variable_creator_scope\r\n    yield\r\n  File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\r\n    self.gen.throw(type, value, traceback)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 2939, in _variable_creator_scope\r\n    yield\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/variable_scope.py\", line 2283, in variable_creator_scope\r\n    yield\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/contrib/distribute/python/mirrored_strategy.py\", line 465, in run\r\n    self.main_result = self.main_fn(*self.main_args, **self.main_kwargs)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/estimator/estimator.py\", line 831, in _call_model_fn\r\n    model_fn_results = self._model_fn(features=features, **kwargs)\r\n  File \"/media/local/BDA_tf_framework/neuralnetwork/trainingexperimenter.py\", line 116, in get_model_fn\r\n    eval_metrics = self.logger.get_eval_metrics(self.predictions, labels)\r\n  File \"/media/local/myfiles/Mytraininglogger.py\", line 26, in get_eval_metrics\r\n    metrics.update(self.get_accuracy(output_tensor, ground_truth, name=name))\r\n  File \"/media/local/BDA_tf_framework/neuralnetwork/traininglogger.py\", line 60, in get_accuracy\r\n    name=metric_name)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/metrics_impl.py\", line 409, in accuracy\r\n    name or 'accuracy')\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/metrics_impl.py\", line 345, in mean\r\n    return mean_t, update_op\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/variable_scope.py\", line 2095, in __exit__\r\n    self._current_name_scope.__exit__(type_arg, value_arg, traceback_arg)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 5991, in __exit__\r\n    self._name_scope.__exit__(type_arg, value_arg, traceback_arg)\r\n  File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\r\n    self.gen.throw(type, value, traceback)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 4115, in name_scope\r\n    yield \"\" if new_stack is None else new_stack + \"/\"\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/metrics_impl.py\", line 332, in mean\r\n    update_total_op = state_ops.assign_add(total, math_ops.reduce_sum(values))\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/state_ops.py\", line 251, in assign_add\r\n    return ref.assign_add(value)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/contrib/distribute/python/values.py\", line 311, in assign_add\r\n    return self.get(device=_get_update_device()).assign_add(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/contrib/distribute/python/values.py\", line 283, in _get_update_device\r\n    \"Use DistributionStrategy.update() to modify a MirroredVariable.\")\r\nRuntimeError: Use DistributionStrategy.update() to modify a MirroredVariable.\r\nException ignored in: <generator object get_controller at 0x7f2dec1a2fc0>\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 5267, in get_controller\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/eager/context.py\", line 136, in pop\r\nIndexError: pop from empty list\r\nException ignored in: <generator object get_controller at 0x7f2dec1f0830>\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 5267, in get_controller\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/eager/context.py\", line 136, in pop\r\nIndexError: pop from empty list\r\nException ignored in: <generator object get_controller at 0x7f2dec17d9e8>\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 5267, in get_controller\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/eager/context.py\", line 136, in pop\r\nIndexError: pop from empty list\r\nMakefile:19: recipe for target 'train_gpu' failed\r\nmake: *** [train_gpu] Error 1\r\n```"}