{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23725", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23725/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23725/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23725/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/23725", "id": 380425534, "node_id": "MDU6SXNzdWUzODA0MjU1MzQ=", "number": 23725, "title": "Sparse Precision Matrix implemetations (for gaussian processes or GMRFs)", "user": {"login": "sadatnfs", "id": 19790145, "node_id": "MDQ6VXNlcjE5NzkwMTQ1", "avatar_url": "https://avatars2.githubusercontent.com/u/19790145?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sadatnfs", "html_url": "https://github.com/sadatnfs", "followers_url": "https://api.github.com/users/sadatnfs/followers", "following_url": "https://api.github.com/users/sadatnfs/following{/other_user}", "gists_url": "https://api.github.com/users/sadatnfs/gists{/gist_id}", "starred_url": "https://api.github.com/users/sadatnfs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sadatnfs/subscriptions", "organizations_url": "https://api.github.com/users/sadatnfs/orgs", "repos_url": "https://api.github.com/users/sadatnfs/repos", "events_url": "https://api.github.com/users/sadatnfs/events{/privacy}", "received_events_url": "https://api.github.com/users/sadatnfs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "wt-huang", "id": 42785337, "node_id": "MDQ6VXNlcjQyNzg1MzM3", "avatar_url": "https://avatars0.githubusercontent.com/u/42785337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wt-huang", "html_url": "https://github.com/wt-huang", "followers_url": "https://api.github.com/users/wt-huang/followers", "following_url": "https://api.github.com/users/wt-huang/following{/other_user}", "gists_url": "https://api.github.com/users/wt-huang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wt-huang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wt-huang/subscriptions", "organizations_url": "https://api.github.com/users/wt-huang/orgs", "repos_url": "https://api.github.com/users/wt-huang/repos", "events_url": "https://api.github.com/users/wt-huang/events{/privacy}", "received_events_url": "https://api.github.com/users/wt-huang/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "wt-huang", "id": 42785337, "node_id": "MDQ6VXNlcjQyNzg1MzM3", "avatar_url": "https://avatars0.githubusercontent.com/u/42785337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wt-huang", "html_url": "https://github.com/wt-huang", "followers_url": "https://api.github.com/users/wt-huang/followers", "following_url": "https://api.github.com/users/wt-huang/following{/other_user}", "gists_url": "https://api.github.com/users/wt-huang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wt-huang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wt-huang/subscriptions", "organizations_url": "https://api.github.com/users/wt-huang/orgs", "repos_url": "https://api.github.com/users/wt-huang/repos", "events_url": "https://api.github.com/users/wt-huang/events{/privacy}", "received_events_url": "https://api.github.com/users/wt-huang/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-11-13T21:12:32Z", "updated_at": "2018-11-14T00:52:54Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<p>Are there any plans in the near future to implement sparse precision matrix computations for TensorFlow? My main use case when I'll be using this is for models like a Gaussian Process where a sparse precision matrix can be fed in as a Gaussian Markov Random Field to evaluate the GP (the sparse representation of an AR(1) GP is only tri-diagonal whereas the covariance matrix is dense).</p>\n<p>Being able to evaluate on sparse matrices would be super helpful in computation speeds I think. Thoughts?</p>\n<p><strong>System information</strong></p>\n<ul>\n<li>TensorFlow version (you are using): 1.12.0</li>\n<li>Are you willing to contribute it (Yes/No): Yes</li>\n</ul>\n<p><strong>Describe the feature and the current behavior/state.</strong></p>\n<p><strong>Will this change the current api? How?</strong><br>\nOnly additions I hope</p>\n<p><strong>Who will benefit with this feature?</strong><br>\nStatistical modelers with high dimensional sparse data</p>\n<p><strong>Any Other info.</strong></p>", "body_text": "Are there any plans in the near future to implement sparse precision matrix computations for TensorFlow? My main use case when I'll be using this is for models like a Gaussian Process where a sparse precision matrix can be fed in as a Gaussian Markov Random Field to evaluate the GP (the sparse representation of an AR(1) GP is only tri-diagonal whereas the covariance matrix is dense).\nBeing able to evaluate on sparse matrices would be super helpful in computation speeds I think. Thoughts?\nSystem information\n\nTensorFlow version (you are using): 1.12.0\nAre you willing to contribute it (Yes/No): Yes\n\nDescribe the feature and the current behavior/state.\nWill this change the current api? How?\nOnly additions I hope\nWho will benefit with this feature?\nStatistical modelers with high dimensional sparse data\nAny Other info.", "body": "Are there any plans in the near future to implement sparse precision matrix computations for TensorFlow? My main use case when I'll be using this is for models like a Gaussian Process where a sparse precision matrix can be fed in as a Gaussian Markov Random Field to evaluate the GP (the sparse representation of an AR(1) GP is only tri-diagonal whereas the covariance matrix is dense).\r\n\r\nBeing able to evaluate on sparse matrices would be super helpful in computation speeds I think. Thoughts?\r\n\r\n\r\n\r\n**System information**\r\n- TensorFlow version (you are using): 1.12.0\r\n- Are you willing to contribute it (Yes/No): Yes\r\n\r\n\r\n**Describe the feature and the current behavior/state.**\r\n\r\n**Will this change the current api? How?**\r\nOnly additions I hope\r\n\r\n**Who will benefit with this feature?**\r\nStatistical modelers with high dimensional sparse data\r\n\r\n**Any Other info.**\r\n"}