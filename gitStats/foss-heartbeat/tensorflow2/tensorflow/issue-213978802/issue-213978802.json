{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8383", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8383/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8383/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8383/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/8383", "id": 213978802, "node_id": "MDU6SXNzdWUyMTM5Nzg4MDI=", "number": 8383, "title": "Importing graph with control flow using TF_GraphImportGraphDef crashes", "user": {"login": "OlavHN", "id": 324645, "node_id": "MDQ6VXNlcjMyNDY0NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/324645?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OlavHN", "html_url": "https://github.com/OlavHN", "followers_url": "https://api.github.com/users/OlavHN/followers", "following_url": "https://api.github.com/users/OlavHN/following{/other_user}", "gists_url": "https://api.github.com/users/OlavHN/gists{/gist_id}", "starred_url": "https://api.github.com/users/OlavHN/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OlavHN/subscriptions", "organizations_url": "https://api.github.com/users/OlavHN/orgs", "repos_url": "https://api.github.com/users/OlavHN/repos", "events_url": "https://api.github.com/users/OlavHN/events{/privacy}", "received_events_url": "https://api.github.com/users/OlavHN/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-14T06:20:23Z", "updated_at": "2017-03-14T06:56:24Z", "closed_at": "2017-03-14T06:56:24Z", "author_association": "CONTRIBUTOR", "body_html": "<h3>What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?</h3>\n<p><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"213417771\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/8284\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/8284/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/8284\">#8284</a><br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"187456302\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/5406\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/5406/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/5406\">#5406</a></p>\n<h3>Environment info</h3>\n<p>Operating System:</p>\n<p>macOS 10.12.3</p>\n<p>Installed version of CUDA and cuDNN:<br>\n(please attach the output of <code>ls -l /path/to/cuda/lib/libcud*</code>):</p>\n<p>CPU only</p>\n<ol>\n<li>The commit hash (<code>git rev-parse HEAD</code>) <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/e895d5ca395c2362df4f5c8f08b68501b41f8a98/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/e895d5ca395c2362df4f5c8f08b68501b41f8a98\"><tt>e895d5c</tt></a></li>\n<li>The output of <code>bazel version</code></li>\n</ol>\n<pre><code>Build label: 0.4.4-homebrew\nBuild target: bazel-out/local-opt/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar\nBuild time: Thu Feb 2 01:05:15 2017 (1485997515)\nBuild timestamp: 1485997515\nBuild timestamp as int: 1485997515\n</code></pre>\n<h3>If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)</h3>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">from</span> tensorflow.python.framework.graph_util <span class=\"pl-k\">import</span> convert_variables_to_constants\n\nx <span class=\"pl-k\">=</span> tf.placeholder(tf.float32, <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">None</span>), <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>x<span class=\"pl-pds\">\"</span></span>)\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">add_one</span>(<span class=\"pl-smi\">x</span>):\n  <span class=\"pl-k\">return</span> tf.add(x, <span class=\"pl-c1\">1</span>)\n\ny <span class=\"pl-k\">=</span> tf.map_fn(add_one, x)\n\ny <span class=\"pl-k\">=</span> tf.identity(y, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>y<span class=\"pl-pds\">\"</span></span>)\n\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n  <span class=\"pl-c1\">print</span>(tf.get_default_graph().as_graph_def().node)\n  minimal_graph <span class=\"pl-k\">=</span> convert_variables_to_constants(sess, sess.graph.as_graph_def(<span class=\"pl-v\">add_shapes</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>), [<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>y<span class=\"pl-pds\">\"</span></span>])\n  tf.train.write_graph(minimal_graph, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>.<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>minimal_graph.proto<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">as_text</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">False</span>)</pre></div>\n<div class=\"highlight highlight-source-go\"><pre><span class=\"pl-k\">package</span> main\n\n<span class=\"pl-k\">import</span> (\n  tf <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>github.com/tensorflow/tensorflow/tensorflow/go<span class=\"pl-pds\">\"</span></span>\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>io/ioutil<span class=\"pl-pds\">\"</span></span>\n)\n\n<span class=\"pl-k\">func</span> <span class=\"pl-en\">main</span>() {\n  <span class=\"pl-smi\">modelPath</span> <span class=\"pl-k\">:=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>cond_test/minimal_graph.proto<span class=\"pl-pds\">\"</span></span>\n  <span class=\"pl-smi\">graphDef</span>, <span class=\"pl-smi\">_</span> <span class=\"pl-k\">:=</span> ioutil.<span class=\"pl-c1\">ReadFile</span>(modelPath)\n  <span class=\"pl-smi\">graph</span> <span class=\"pl-k\">:=</span> tf.<span class=\"pl-c1\">NewGraph</span>()\n  graph.<span class=\"pl-c1\">Import</span>(graphDef, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>)\n}</pre></div>\n<h3>What other attempted solutions have you tried?</h3>\n<ul>\n<li>Loading the graph without the <code>map_fn</code> works as expected. (<code>y = add_one(x)</code>)</li>\n<li>Originally encountered problem using prebuild tensorflow for python: <code>pip install tensorflow</code></li>\n<li>Same issue when saving / restoring using SavedModel routines.</li>\n</ul>\n<h3>Logs or other output that would be helpful</h3>\n<pre><code>fatal error: unexpected signal during runtime execution\n[signal SIGSEGV: segmentation violation code=0x1 addr=0x0 pc=0x5de318c]\n\nruntime stack:\nruntime.throw(0x40cdc29, 0x2a)\n\t/usr/local/go/src/runtime/panic.go:596 +0x95\nruntime.sigpanic()\n\t/usr/local/go/src/runtime/signal_unix.go:274 +0x2db\n\ngoroutine 1 [syscall, locked to thread]:\nruntime.cgocall(0x40973d0, 0xc42004de60, 0x40b34e0)\n\t/usr/local/go/src/runtime/cgocall.go:131 +0xe2 fp=0xc42004de30 sp=0xc42004ddf0\ngithub.com/tensorflow/tensorflow/tensorflow/go._Cfunc_TF_GraphImportGraphDef(0xbf00020, 0xd0be3f0, 0xd0bee20, 0xd0bd5a0)\n\tgithub.com/tensorflow/tensorflow/tensorflow/go/_obj/_cgo_gotypes.go:386 +0x45 fp=0xc42004de60 sp=0xc42004de30\ngithub.com/tensorflow/tensorflow/tensorflow/go.(*Graph).Import.func7(0xbf00020, 0xd0be3f0, 0xd0bee20, 0xd0bd5a0)\n\t/Users/olav/go/src/github.com/tensorflow/tensorflow/tensorflow/go/graph.go:96 +0x121 fp=0xc42004de98 sp=0xc42004de60\ngithub.com/tensorflow/tensorflow/tensorflow/go.(*Graph).Import(0xc42000e038, 0xc42008a000, 0x1ae9, 0x1ce9, 0x0, 0x0, 0x0, 0x0)\n\t/Users/olav/go/src/github.com/tensorflow/tensorflow/tensorflow/go/graph.go:96 +0x1ef fp=0xc42004df00 sp=0xc42004de98\nmain.main()\n\t/Users/olav/go/src/github.com/olavhn/infer/test.go:14 +0x112 fp=0xc42004df88 sp=0xc42004df00\nruntime.main()\n\t/usr/local/go/src/runtime/proc.go:185 +0x20a fp=0xc42004dfe0 sp=0xc42004df88\nruntime.goexit()\n\t/usr/local/go/src/runtime/asm_amd64.s:2197 +0x1 fp=0xc42004dfe8 sp=0xc42004dfe0\n\ngoroutine 17 [syscall, locked to thread]:\nruntime.goexit()\n\t/usr/local/go/src/runtime/asm_amd64.s:2197 +0x1\n</code></pre>", "body_text": "What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?\n#8284\n#5406\nEnvironment info\nOperating System:\nmacOS 10.12.3\nInstalled version of CUDA and cuDNN:\n(please attach the output of ls -l /path/to/cuda/lib/libcud*):\nCPU only\n\nThe commit hash (git rev-parse HEAD) e895d5c\nThe output of bazel version\n\nBuild label: 0.4.4-homebrew\nBuild target: bazel-out/local-opt/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar\nBuild time: Thu Feb 2 01:05:15 2017 (1485997515)\nBuild timestamp: 1485997515\nBuild timestamp as int: 1485997515\n\nIf possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\nimport tensorflow as tf\nfrom tensorflow.python.framework.graph_util import convert_variables_to_constants\n\nx = tf.placeholder(tf.float32, shape=(None), name=\"x\")\n\ndef add_one(x):\n  return tf.add(x, 1)\n\ny = tf.map_fn(add_one, x)\n\ny = tf.identity(y, name=\"y\")\n\nwith tf.Session() as sess:\n  print(tf.get_default_graph().as_graph_def().node)\n  minimal_graph = convert_variables_to_constants(sess, sess.graph.as_graph_def(add_shapes=True), [\"y\"])\n  tf.train.write_graph(minimal_graph, '.', 'minimal_graph.proto', as_text=False)\npackage main\n\nimport (\n  tf \"github.com/tensorflow/tensorflow/tensorflow/go\"\n  \"io/ioutil\"\n)\n\nfunc main() {\n  modelPath := \"cond_test/minimal_graph.proto\"\n  graphDef, _ := ioutil.ReadFile(modelPath)\n  graph := tf.NewGraph()\n  graph.Import(graphDef, \"\")\n}\nWhat other attempted solutions have you tried?\n\nLoading the graph without the map_fn works as expected. (y = add_one(x))\nOriginally encountered problem using prebuild tensorflow for python: pip install tensorflow\nSame issue when saving / restoring using SavedModel routines.\n\nLogs or other output that would be helpful\nfatal error: unexpected signal during runtime execution\n[signal SIGSEGV: segmentation violation code=0x1 addr=0x0 pc=0x5de318c]\n\nruntime stack:\nruntime.throw(0x40cdc29, 0x2a)\n\t/usr/local/go/src/runtime/panic.go:596 +0x95\nruntime.sigpanic()\n\t/usr/local/go/src/runtime/signal_unix.go:274 +0x2db\n\ngoroutine 1 [syscall, locked to thread]:\nruntime.cgocall(0x40973d0, 0xc42004de60, 0x40b34e0)\n\t/usr/local/go/src/runtime/cgocall.go:131 +0xe2 fp=0xc42004de30 sp=0xc42004ddf0\ngithub.com/tensorflow/tensorflow/tensorflow/go._Cfunc_TF_GraphImportGraphDef(0xbf00020, 0xd0be3f0, 0xd0bee20, 0xd0bd5a0)\n\tgithub.com/tensorflow/tensorflow/tensorflow/go/_obj/_cgo_gotypes.go:386 +0x45 fp=0xc42004de60 sp=0xc42004de30\ngithub.com/tensorflow/tensorflow/tensorflow/go.(*Graph).Import.func7(0xbf00020, 0xd0be3f0, 0xd0bee20, 0xd0bd5a0)\n\t/Users/olav/go/src/github.com/tensorflow/tensorflow/tensorflow/go/graph.go:96 +0x121 fp=0xc42004de98 sp=0xc42004de60\ngithub.com/tensorflow/tensorflow/tensorflow/go.(*Graph).Import(0xc42000e038, 0xc42008a000, 0x1ae9, 0x1ce9, 0x0, 0x0, 0x0, 0x0)\n\t/Users/olav/go/src/github.com/tensorflow/tensorflow/tensorflow/go/graph.go:96 +0x1ef fp=0xc42004df00 sp=0xc42004de98\nmain.main()\n\t/Users/olav/go/src/github.com/olavhn/infer/test.go:14 +0x112 fp=0xc42004df88 sp=0xc42004df00\nruntime.main()\n\t/usr/local/go/src/runtime/proc.go:185 +0x20a fp=0xc42004dfe0 sp=0xc42004df88\nruntime.goexit()\n\t/usr/local/go/src/runtime/asm_amd64.s:2197 +0x1 fp=0xc42004dfe8 sp=0xc42004dfe0\n\ngoroutine 17 [syscall, locked to thread]:\nruntime.goexit()\n\t/usr/local/go/src/runtime/asm_amd64.s:2197 +0x1", "body": "### What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?\r\n\r\nhttps://github.com/tensorflow/tensorflow/issues/8284\r\nhttps://github.com/tensorflow/tensorflow/issues/5406\r\n\r\n### Environment info\r\nOperating System:\r\n\r\nmacOS 10.12.3\r\n\r\nInstalled version of CUDA and cuDNN: \r\n(please attach the output of `ls -l /path/to/cuda/lib/libcud*`):\r\n\r\nCPU only\r\n\r\n1. The commit hash (`git rev-parse HEAD`) e895d5ca395c2362df4f5c8\r\n2. The output of `bazel version`\r\n\r\n```\r\nBuild label: 0.4.4-homebrew\r\nBuild target: bazel-out/local-opt/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar\r\nBuild time: Thu Feb 2 01:05:15 2017 (1485997515)\r\nBuild timestamp: 1485997515\r\nBuild timestamp as int: 1485997515\r\n```\r\n\r\n### If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\r\n\r\n```python\r\nimport tensorflow as tf\r\nfrom tensorflow.python.framework.graph_util import convert_variables_to_constants\r\n\r\nx = tf.placeholder(tf.float32, shape=(None), name=\"x\")\r\n\r\ndef add_one(x):\r\n  return tf.add(x, 1)\r\n\r\ny = tf.map_fn(add_one, x)\r\n\r\ny = tf.identity(y, name=\"y\")\r\n\r\nwith tf.Session() as sess:\r\n  print(tf.get_default_graph().as_graph_def().node)\r\n  minimal_graph = convert_variables_to_constants(sess, sess.graph.as_graph_def(add_shapes=True), [\"y\"])\r\n  tf.train.write_graph(minimal_graph, '.', 'minimal_graph.proto', as_text=False)\r\n```\r\n\r\n```go\r\npackage main\r\n\r\nimport (\r\n  tf \"github.com/tensorflow/tensorflow/tensorflow/go\"\r\n  \"io/ioutil\"\r\n)\r\n\r\nfunc main() {\r\n  modelPath := \"cond_test/minimal_graph.proto\"\r\n  graphDef, _ := ioutil.ReadFile(modelPath)\r\n  graph := tf.NewGraph()\r\n  graph.Import(graphDef, \"\")\r\n}\r\n```\r\n\r\n### What other attempted solutions have you tried?\r\n\r\n- Loading the graph without the `map_fn` works as expected. (`y = add_one(x)`)\r\n- Originally encountered problem using prebuild tensorflow for python: `pip install tensorflow`\r\n- Same issue when saving / restoring using SavedModel routines.\r\n\r\n### Logs or other output that would be helpful\r\n\r\n```\r\nfatal error: unexpected signal during runtime execution\r\n[signal SIGSEGV: segmentation violation code=0x1 addr=0x0 pc=0x5de318c]\r\n\r\nruntime stack:\r\nruntime.throw(0x40cdc29, 0x2a)\r\n\t/usr/local/go/src/runtime/panic.go:596 +0x95\r\nruntime.sigpanic()\r\n\t/usr/local/go/src/runtime/signal_unix.go:274 +0x2db\r\n\r\ngoroutine 1 [syscall, locked to thread]:\r\nruntime.cgocall(0x40973d0, 0xc42004de60, 0x40b34e0)\r\n\t/usr/local/go/src/runtime/cgocall.go:131 +0xe2 fp=0xc42004de30 sp=0xc42004ddf0\r\ngithub.com/tensorflow/tensorflow/tensorflow/go._Cfunc_TF_GraphImportGraphDef(0xbf00020, 0xd0be3f0, 0xd0bee20, 0xd0bd5a0)\r\n\tgithub.com/tensorflow/tensorflow/tensorflow/go/_obj/_cgo_gotypes.go:386 +0x45 fp=0xc42004de60 sp=0xc42004de30\r\ngithub.com/tensorflow/tensorflow/tensorflow/go.(*Graph).Import.func7(0xbf00020, 0xd0be3f0, 0xd0bee20, 0xd0bd5a0)\r\n\t/Users/olav/go/src/github.com/tensorflow/tensorflow/tensorflow/go/graph.go:96 +0x121 fp=0xc42004de98 sp=0xc42004de60\r\ngithub.com/tensorflow/tensorflow/tensorflow/go.(*Graph).Import(0xc42000e038, 0xc42008a000, 0x1ae9, 0x1ce9, 0x0, 0x0, 0x0, 0x0)\r\n\t/Users/olav/go/src/github.com/tensorflow/tensorflow/tensorflow/go/graph.go:96 +0x1ef fp=0xc42004df00 sp=0xc42004de98\r\nmain.main()\r\n\t/Users/olav/go/src/github.com/olavhn/infer/test.go:14 +0x112 fp=0xc42004df88 sp=0xc42004df00\r\nruntime.main()\r\n\t/usr/local/go/src/runtime/proc.go:185 +0x20a fp=0xc42004dfe0 sp=0xc42004df88\r\nruntime.goexit()\r\n\t/usr/local/go/src/runtime/asm_amd64.s:2197 +0x1 fp=0xc42004dfe8 sp=0xc42004dfe0\r\n\r\ngoroutine 17 [syscall, locked to thread]:\r\nruntime.goexit()\r\n\t/usr/local/go/src/runtime/asm_amd64.s:2197 +0x1\r\n```\r\n"}