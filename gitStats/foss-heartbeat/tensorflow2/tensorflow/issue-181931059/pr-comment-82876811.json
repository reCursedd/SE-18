{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/82876811", "pull_request_review_id": 3753491, "id": 82876811, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgyODc2ODEx", "diff_hunk": "@@ -33,26 +33,27 @@ def confusion_matrix(predictions, labels, num_classes=None, dtype=dtypes.int32,\n   Calculate the Confusion Matrix for a pair of prediction and\n   label 1-D int arrays.\n \n-  Considering a prediction array such as: `[1, 2, 3]`\n-  And a label array such as: `[2, 2, 3]`\n+  The matrix rows represent the prediction labels and the columns\n+  represents the real labels. The confusion matrix is always a 2-D array\n+  of shape `[n, n]`, where `n` is the number of valid labels for a given\n+  classification task. Both prediction and labels must be 1-D arrays of\n+  the same shape in order for this function to work.\n \n-  The confusion matrix returned would be the following one:\n+  Class labels are expected to start at 0. E.g., if there were\n+  three classes then the possible labels would be `[0, 1, 2]`.\n \n-  ```python\n-      [[0, 0, 0]\n-       [0, 1, 0]\n-       [0, 1, 0]\n-       [0, 0, 1]]\n-  ```\n+  If `weights` is not `None`, then each prediction contributes its\n+  corresponding weight to the total value of the confusion matrix cell.\n \n-  If `weights` is not None, then the confusion matrix elements are the\n-  corresponding `weights` elements.\n+  For example:\n \n-  Where the matrix rows represent the prediction labels and the columns\n-  represents the real labels. The confusion matrix is always a 2-D array\n-  of shape [n, n], where n is the number of valid labels for a given\n-  classification task. Both prediction and labels must be 1-D arrays of\n-  the same shape in order for this function to work.\n+  ```python\n+    tf.contrib.metrics.confusion_matrix([1, 2, 3], [2, 2, 3]) ==>\n+      [[0, 0, 0, 0]\n+       [0, 0, 1, 0]\n+       [0, 0, 1, 0]\n+       [0, 0, 0, 1]]\n+  ```", "path": "tensorflow/contrib/metrics/python/ops/confusion_matrix_ops.py", "position": null, "original_position": 40, "commit_id": "eea2529baec0b663c3a2d09c5b14b2440e7f14d0", "original_commit_id": "e617778e72e7e10f49c5a96533668f87ae8abb71", "user": {"login": "rohan100jain", "id": 144114, "node_id": "MDQ6VXNlcjE0NDExNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/144114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rohan100jain", "html_url": "https://github.com/rohan100jain", "followers_url": "https://api.github.com/users/rohan100jain/followers", "following_url": "https://api.github.com/users/rohan100jain/following{/other_user}", "gists_url": "https://api.github.com/users/rohan100jain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rohan100jain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rohan100jain/subscriptions", "organizations_url": "https://api.github.com/users/rohan100jain/orgs", "repos_url": "https://api.github.com/users/rohan100jain/repos", "events_url": "https://api.github.com/users/rohan100jain/events{/privacy}", "received_events_url": "https://api.github.com/users/rohan100jain/received_events", "type": "User", "site_admin": false}, "body": "Can you add a summary line here saying that since the highest value label was 3, the label space assumed is 0, 1, 2, 3 and hence we end up with n=4 and a 4X4 matrix. I feel that'll make this clearer.\n", "created_at": "2016-10-11T20:03:55Z", "updated_at": "2016-10-12T15:19:17Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/4868#discussion_r82876811", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/4868", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/82876811"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/4868#discussion_r82876811"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/4868"}}, "body_html": "<p>Can you add a summary line here saying that since the highest value label was 3, the label space assumed is 0, 1, 2, 3 and hence we end up with n=4 and a 4X4 matrix. I feel that'll make this clearer.</p>", "body_text": "Can you add a summary line here saying that since the highest value label was 3, the label space assumed is 0, 1, 2, 3 and hence we end up with n=4 and a 4X4 matrix. I feel that'll make this clearer."}