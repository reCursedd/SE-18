{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/288165244", "html_url": "https://github.com/tensorflow/tensorflow/issues/8181#issuecomment-288165244", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8181", "id": 288165244, "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODE2NTI0NA==", "user": {"login": "cancan101", "id": 51059, "node_id": "MDQ6VXNlcjUxMDU5", "avatar_url": "https://avatars1.githubusercontent.com/u/51059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cancan101", "html_url": "https://github.com/cancan101", "followers_url": "https://api.github.com/users/cancan101/followers", "following_url": "https://api.github.com/users/cancan101/following{/other_user}", "gists_url": "https://api.github.com/users/cancan101/gists{/gist_id}", "starred_url": "https://api.github.com/users/cancan101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cancan101/subscriptions", "organizations_url": "https://api.github.com/users/cancan101/orgs", "repos_url": "https://api.github.com/users/cancan101/repos", "events_url": "https://api.github.com/users/cancan101/events{/privacy}", "received_events_url": "https://api.github.com/users/cancan101/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-21T17:57:25Z", "updated_at": "2017-03-21T17:57:25Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Here is a short example demonstrating the issue:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">from</span> tensorflow.python.framework.graph_util_impl <span class=\"pl-k\">import</span> remove_training_nodes\n\n<span class=\"pl-k\">with</span> tf.Graph().as_default() <span class=\"pl-k\">as</span> g:\n    <span class=\"pl-c1\">input</span> <span class=\"pl-k\">=</span> tf.placeholder(tf.float32)\n    output <span class=\"pl-k\">=</span> tf.identity(<span class=\"pl-c1\">input</span>, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>output<span class=\"pl-pds\">'</span></span>)\n    graph_def <span class=\"pl-k\">=</span> g.as_graph_def()\n    <span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Before:<span class=\"pl-pds\">\"</span></span>)\n    <span class=\"pl-c1\">print</span>([n.name <span class=\"pl-k\">for</span> n <span class=\"pl-k\">in</span> graph_def.node])\n    <span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>After:<span class=\"pl-pds\">\"</span></span>)    \n    <span class=\"pl-c1\">print</span>([n.name <span class=\"pl-k\">for</span> n <span class=\"pl-k\">in</span> remove_training_nodes(graph_def).node])</pre></div>\n<p>which produces:</p>\n<pre><code>Before:\n[u'Placeholder', u'output']\nAfter:\n[u'Placeholder']\n</code></pre>\n<p>In this case the signature of <code>remove_training_nodes</code> might need to be changed to list the set of nodes that should not be removed.</p>\n<p>Thoughts?</p>", "body_text": "Here is a short example demonstrating the issue:\nimport tensorflow as tf\nfrom tensorflow.python.framework.graph_util_impl import remove_training_nodes\n\nwith tf.Graph().as_default() as g:\n    input = tf.placeholder(tf.float32)\n    output = tf.identity(input, name='output')\n    graph_def = g.as_graph_def()\n    print(\"Before:\")\n    print([n.name for n in graph_def.node])\n    print(\"After:\")    \n    print([n.name for n in remove_training_nodes(graph_def).node])\nwhich produces:\nBefore:\n[u'Placeholder', u'output']\nAfter:\n[u'Placeholder']\n\nIn this case the signature of remove_training_nodes might need to be changed to list the set of nodes that should not be removed.\nThoughts?", "body": "Here is a short example demonstrating the issue:\r\n```python\r\nimport tensorflow as tf\r\nfrom tensorflow.python.framework.graph_util_impl import remove_training_nodes\r\n\r\nwith tf.Graph().as_default() as g:\r\n    input = tf.placeholder(tf.float32)\r\n    output = tf.identity(input, name='output')\r\n    graph_def = g.as_graph_def()\r\n    print(\"Before:\")\r\n    print([n.name for n in graph_def.node])\r\n    print(\"After:\")    \r\n    print([n.name for n in remove_training_nodes(graph_def).node])\r\n```\r\n\r\nwhich produces:\r\n```\r\nBefore:\r\n[u'Placeholder', u'output']\r\nAfter:\r\n[u'Placeholder']\r\n```\r\nIn this case the signature of `remove_training_nodes` might need to be changed to list the set of nodes that should not be removed. \r\n\r\nThoughts?"}