{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19273", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19273/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19273/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19273/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/19273", "id": 322890348, "node_id": "MDExOlB1bGxSZXF1ZXN0MTg3ODgzMDE3", "number": 19273, "title": "Fix errors and typos in the Estimators programmer's guide", "user": {"login": "ageron", "id": 76661, "node_id": "MDQ6VXNlcjc2NjYx", "avatar_url": "https://avatars3.githubusercontent.com/u/76661?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ageron", "html_url": "https://github.com/ageron", "followers_url": "https://api.github.com/users/ageron/followers", "following_url": "https://api.github.com/users/ageron/following{/other_user}", "gists_url": "https://api.github.com/users/ageron/gists{/gist_id}", "starred_url": "https://api.github.com/users/ageron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ageron/subscriptions", "organizations_url": "https://api.github.com/users/ageron/orgs", "repos_url": "https://api.github.com/users/ageron/repos", "events_url": "https://api.github.com/users/ageron/events{/privacy}", "received_events_url": "https://api.github.com/users/ageron/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "zheng-xq", "id": 15736910, "node_id": "MDQ6VXNlcjE1NzM2OTEw", "avatar_url": "https://avatars0.githubusercontent.com/u/15736910?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zheng-xq", "html_url": "https://github.com/zheng-xq", "followers_url": "https://api.github.com/users/zheng-xq/followers", "following_url": "https://api.github.com/users/zheng-xq/following{/other_user}", "gists_url": "https://api.github.com/users/zheng-xq/gists{/gist_id}", "starred_url": "https://api.github.com/users/zheng-xq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zheng-xq/subscriptions", "organizations_url": "https://api.github.com/users/zheng-xq/orgs", "repos_url": "https://api.github.com/users/zheng-xq/repos", "events_url": "https://api.github.com/users/zheng-xq/events{/privacy}", "received_events_url": "https://api.github.com/users/zheng-xq/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "zheng-xq", "id": 15736910, "node_id": "MDQ6VXNlcjE1NzM2OTEw", "avatar_url": "https://avatars0.githubusercontent.com/u/15736910?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zheng-xq", "html_url": "https://github.com/zheng-xq", "followers_url": "https://api.github.com/users/zheng-xq/followers", "following_url": "https://api.github.com/users/zheng-xq/following{/other_user}", "gists_url": "https://api.github.com/users/zheng-xq/gists{/gist_id}", "starred_url": "https://api.github.com/users/zheng-xq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zheng-xq/subscriptions", "organizations_url": "https://api.github.com/users/zheng-xq/orgs", "repos_url": "https://api.github.com/users/zheng-xq/repos", "events_url": "https://api.github.com/users/zheng-xq/events{/privacy}", "received_events_url": "https://api.github.com/users/zheng-xq/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-05-14T16:28:52Z", "updated_at": "2018-05-21T15:52:30Z", "closed_at": "2018-05-21T06:45:37Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/19273", "html_url": "https://github.com/tensorflow/tensorflow/pull/19273", "diff_url": "https://github.com/tensorflow/tensorflow/pull/19273.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/19273.patch"}, "body_html": "<p>The main errors are the last three changes:</p>\n<div class=\"highlight highlight-source-diff\"><pre>         def input_fn(dataset):\n<span class=\"pl-md\"><span class=\"pl-md\">-</span>           ...  # manipulate dataset, extracting feature names and the label</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>           ...  # manipulate dataset, extracting the feature dict and the label</span>\n            return feature_dict, label\n \n     (See @{$programmers_guide/datasets} for full details.)\n<span class=\"pl-mdr\">@@ -96,13 +95,13 @@</span> of the following four steps:\n         population = tf.feature_column.numeric_column('population')\n         crime_rate = tf.feature_column.numeric_column('crime_rate')\n         median_education = tf.feature_column.numeric_column('median_education',\n<span class=\"pl-md\"><span class=\"pl-md\">-</span>                            normalizer_fn='lambda x: x - global_education_mean')</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>                            normalizer_fn=lambda x: x - global_education_mean)</span>\n \n 3.  **Instantiate the relevant pre-made Estimator.**  For example, here's\n     a sample instantiation of a pre-made Estimator named `LinearClassifier`:\n \n         # Instantiate an estimator, passing the feature columns.\n<span class=\"pl-md\"><span class=\"pl-md\">-</span>        estimator = tf.estimator.Estimator.LinearClassifier(</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>        estimator = tf.estimator.LinearClassifier(</span>\n             feature_columns=[population, crime_rate, median_education],\n             )</pre></div>", "body_text": "The main errors are the last three changes:\n         def input_fn(dataset):\n-           ...  # manipulate dataset, extracting feature names and the label\n+           ...  # manipulate dataset, extracting the feature dict and the label\n            return feature_dict, label\n \n     (See @{$programmers_guide/datasets} for full details.)\n@@ -96,13 +95,13 @@ of the following four steps:\n         population = tf.feature_column.numeric_column('population')\n         crime_rate = tf.feature_column.numeric_column('crime_rate')\n         median_education = tf.feature_column.numeric_column('median_education',\n-                            normalizer_fn='lambda x: x - global_education_mean')\n+                            normalizer_fn=lambda x: x - global_education_mean)\n \n 3.  **Instantiate the relevant pre-made Estimator.**  For example, here's\n     a sample instantiation of a pre-made Estimator named `LinearClassifier`:\n \n         # Instantiate an estimator, passing the feature columns.\n-        estimator = tf.estimator.Estimator.LinearClassifier(\n+        estimator = tf.estimator.LinearClassifier(\n             feature_columns=[population, crime_rate, median_education],\n             )", "body": "The main errors are the last three changes:\r\n\r\n```diff\r\n         def input_fn(dataset):\r\n-           ...  # manipulate dataset, extracting feature names and the label\r\n+           ...  # manipulate dataset, extracting the feature dict and the label\r\n            return feature_dict, label\r\n \r\n     (See @{$programmers_guide/datasets} for full details.)\r\n@@ -96,13 +95,13 @@ of the following four steps:\r\n         population = tf.feature_column.numeric_column('population')\r\n         crime_rate = tf.feature_column.numeric_column('crime_rate')\r\n         median_education = tf.feature_column.numeric_column('median_education',\r\n-                            normalizer_fn='lambda x: x - global_education_mean')\r\n+                            normalizer_fn=lambda x: x - global_education_mean)\r\n \r\n 3.  **Instantiate the relevant pre-made Estimator.**  For example, here's\r\n     a sample instantiation of a pre-made Estimator named `LinearClassifier`:\r\n \r\n         # Instantiate an estimator, passing the feature columns.\r\n-        estimator = tf.estimator.Estimator.LinearClassifier(\r\n+        estimator = tf.estimator.LinearClassifier(\r\n             feature_columns=[population, crime_rate, median_education],\r\n             )\r\n```"}