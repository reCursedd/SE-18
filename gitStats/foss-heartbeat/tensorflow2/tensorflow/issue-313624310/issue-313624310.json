{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18452", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18452/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18452/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18452/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18452", "id": 313624310, "node_id": "MDU6SXNzdWUzMTM2MjQzMTA=", "number": 18452, "title": "Different pixel values for the same image when read using DecodeJpeg on x86_64 and arm64", "user": {"login": "deepaksuresh", "id": 9796812, "node_id": "MDQ6VXNlcjk3OTY4MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/9796812?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deepaksuresh", "html_url": "https://github.com/deepaksuresh", "followers_url": "https://api.github.com/users/deepaksuresh/followers", "following_url": "https://api.github.com/users/deepaksuresh/following{/other_user}", "gists_url": "https://api.github.com/users/deepaksuresh/gists{/gist_id}", "starred_url": "https://api.github.com/users/deepaksuresh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deepaksuresh/subscriptions", "organizations_url": "https://api.github.com/users/deepaksuresh/orgs", "repos_url": "https://api.github.com/users/deepaksuresh/repos", "events_url": "https://api.github.com/users/deepaksuresh/events{/privacy}", "received_events_url": "https://api.github.com/users/deepaksuresh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "bignamehyp", "id": 3474655, "node_id": "MDQ6VXNlcjM0NzQ2NTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3474655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bignamehyp", "html_url": "https://github.com/bignamehyp", "followers_url": "https://api.github.com/users/bignamehyp/followers", "following_url": "https://api.github.com/users/bignamehyp/following{/other_user}", "gists_url": "https://api.github.com/users/bignamehyp/gists{/gist_id}", "starred_url": "https://api.github.com/users/bignamehyp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bignamehyp/subscriptions", "organizations_url": "https://api.github.com/users/bignamehyp/orgs", "repos_url": "https://api.github.com/users/bignamehyp/repos", "events_url": "https://api.github.com/users/bignamehyp/events{/privacy}", "received_events_url": "https://api.github.com/users/bignamehyp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bignamehyp", "id": 3474655, "node_id": "MDQ6VXNlcjM0NzQ2NTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3474655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bignamehyp", "html_url": "https://github.com/bignamehyp", "followers_url": "https://api.github.com/users/bignamehyp/followers", "following_url": "https://api.github.com/users/bignamehyp/following{/other_user}", "gists_url": "https://api.github.com/users/bignamehyp/gists{/gist_id}", "starred_url": "https://api.github.com/users/bignamehyp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bignamehyp/subscriptions", "organizations_url": "https://api.github.com/users/bignamehyp/orgs", "repos_url": "https://api.github.com/users/bignamehyp/repos", "events_url": "https://api.github.com/users/bignamehyp/events{/privacy}", "received_events_url": "https://api.github.com/users/bignamehyp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 13, "created_at": "2018-04-12T08:24:47Z", "updated_at": "2018-08-14T19:48:04Z", "closed_at": "2018-08-14T19:45:09Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:<br>\nNo</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:<br>\nWindows 10</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:<br>\nSource</li>\n<li><strong>TensorFlow version (use command below)</strong>:<br>\n1.5.0</li>\n<li><strong>Python version</strong>:<br>\n3.4</li>\n<li><strong>Bazel version (if compiling from source)</strong>:<br>\n0.11.0</li>\n<li><strong>CUDA/cuDNN version</strong>:<br>\n9.0/7.0.5</li>\n<li><strong>GPU model and memory</strong>:<br>\nN/A</li>\n<li><strong>Exact command to reproduce</strong>:<br>\ngiven below in the problem description</li>\n</ul>\n<p>I used <code>DecodeJpeg</code> method to read in images during training, I used it with <code>dct_method=\"\"</code>.<br>\nIn order to use the same operation on Android, I compiled TensorFlow with DecodeJpeg using bazel.<br>\nI compiled it for <code>arm64</code>.</p>\n<p>The problem I'm facing is that, the pixel values from both the platforms are significantly different</p>\n<p>In Python, I use the snippet below to read image,</p>\n<pre><code>with tf.gfile.FastGFile(r'path\\to\\image.jpg', 'rb') as image_file:\n    image_bytes = image_file.read()\ndecode_jpeg_data = tf.placeholder(dtype=tf.string)\ndecode_jpeg = tf.image.decode_jpeg(decode_jpeg_data_f, channels=3)\nimage = sess.run(decode_jpeg , feed_dict={decode_jpeg_data: image_bytes })\n</code></pre>\n<p>I use <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/java/src/main/java/org/tensorflow/examples/LabelImage.java\">this </a>script to execute the model on Android.<br>\nI executed <code>DecodeJpeg</code> with <code>dct_method</code> set to <code>' '</code>, <code>INTEGER_FAST</code>, <code>INTEGER_ACCURATE</code>, on both desktop as well as Android.<br>\nAll of them gave pixel values which were significantly different from what I got on a desktop, for the same <code>dct_method</code></p>\n<p>For instance, for the same image, at (100,100,0) the value on <code>x86_64</code> is <code>213</code>, while it is <code>204</code> on <code>arm64</code>.<br>\nThe problem is that, the prediction label sometimes flips across the two platforms, for the same image.</p>\n<p>How can I get the same behavior on both platforms?<br>\nI had asked this on <a href=\"https://stackoverflow.com/questions/49748902/tensorflow-decodejpeg-method-gives-different-pixel-values-on-desktop-and-mobile\" rel=\"nofollow\">StackOverflow</a></p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nNo\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nWindows 10\nTensorFlow installed from (source or binary):\nSource\nTensorFlow version (use command below):\n1.5.0\nPython version:\n3.4\nBazel version (if compiling from source):\n0.11.0\nCUDA/cuDNN version:\n9.0/7.0.5\nGPU model and memory:\nN/A\nExact command to reproduce:\ngiven below in the problem description\n\nI used DecodeJpeg method to read in images during training, I used it with dct_method=\"\".\nIn order to use the same operation on Android, I compiled TensorFlow with DecodeJpeg using bazel.\nI compiled it for arm64.\nThe problem I'm facing is that, the pixel values from both the platforms are significantly different\nIn Python, I use the snippet below to read image,\nwith tf.gfile.FastGFile(r'path\\to\\image.jpg', 'rb') as image_file:\n    image_bytes = image_file.read()\ndecode_jpeg_data = tf.placeholder(dtype=tf.string)\ndecode_jpeg = tf.image.decode_jpeg(decode_jpeg_data_f, channels=3)\nimage = sess.run(decode_jpeg , feed_dict={decode_jpeg_data: image_bytes })\n\nI use this script to execute the model on Android.\nI executed DecodeJpeg with dct_method set to ' ', INTEGER_FAST, INTEGER_ACCURATE, on both desktop as well as Android.\nAll of them gave pixel values which were significantly different from what I got on a desktop, for the same dct_method\nFor instance, for the same image, at (100,100,0) the value on x86_64 is 213, while it is 204 on arm64.\nThe problem is that, the prediction label sometimes flips across the two platforms, for the same image.\nHow can I get the same behavior on both platforms?\nI had asked this on StackOverflow", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nNo\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nWindows 10 \r\n- **TensorFlow installed from (source or binary)**:\r\nSource\r\n- **TensorFlow version (use command below)**:\r\n1.5.0\r\n- **Python version**: \r\n3.4\r\n- **Bazel version (if compiling from source)**:\r\n0.11.0\r\n- **CUDA/cuDNN version**:\r\n9.0/7.0.5\r\n- **GPU model and memory**:\r\nN/A\r\n- **Exact command to reproduce**:\r\ngiven below in the problem description\r\n\r\nI used `DecodeJpeg` method to read in images during training, I used it with `dct_method=\"\"`.\r\nIn order to use the same operation on Android, I compiled TensorFlow with DecodeJpeg using bazel.\r\nI compiled it for `arm64`.\r\n\r\nThe problem I'm facing is that, the pixel values from both the platforms are significantly different\r\n\r\nIn Python, I use the snippet below to read image,\r\n```\r\nwith tf.gfile.FastGFile(r'path\\to\\image.jpg', 'rb') as image_file:\r\n    image_bytes = image_file.read()\r\ndecode_jpeg_data = tf.placeholder(dtype=tf.string)\r\ndecode_jpeg = tf.image.decode_jpeg(decode_jpeg_data_f, channels=3)\r\nimage = sess.run(decode_jpeg , feed_dict={decode_jpeg_data: image_bytes })\r\n```\r\nI use [this ](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/java/src/main/java/org/tensorflow/examples/LabelImage.java)script to execute the model on Android. \r\nI executed `DecodeJpeg` with `dct_method` set to `' '`, `INTEGER_FAST`, `INTEGER_ACCURATE`, on both desktop as well as Android.\r\nAll of them gave pixel values which were significantly different from what I got on a desktop, for the same `dct_method`\r\n\r\nFor instance, for the same image, at (100,100,0) the value on `x86_64` is `213`, while it is `204` on `arm64`.\r\nThe problem is that, the prediction label sometimes flips across the two platforms, for the same image.\r\n\r\nHow can I get the same behavior on both platforms?\r\nI had asked this on [StackOverflow](https://stackoverflow.com/questions/49748902/tensorflow-decodejpeg-method-gives-different-pixel-values-on-desktop-and-mobile)\r\n"}