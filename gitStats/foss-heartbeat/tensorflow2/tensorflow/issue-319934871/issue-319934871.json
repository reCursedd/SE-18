{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19060", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19060/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19060/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19060/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19060", "id": 319934871, "node_id": "MDU6SXNzdWUzMTk5MzQ4NzE=", "number": 19060, "title": "data.prefetch_to_device does not work with tf.data.Iterator.from_structure()", "user": {"login": "fogelton", "id": 1250236, "node_id": "MDQ6VXNlcjEyNTAyMzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1250236?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fogelton", "html_url": "https://github.com/fogelton", "followers_url": "https://api.github.com/users/fogelton/followers", "following_url": "https://api.github.com/users/fogelton/following{/other_user}", "gists_url": "https://api.github.com/users/fogelton/gists{/gist_id}", "starred_url": "https://api.github.com/users/fogelton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fogelton/subscriptions", "organizations_url": "https://api.github.com/users/fogelton/orgs", "repos_url": "https://api.github.com/users/fogelton/repos", "events_url": "https://api.github.com/users/fogelton/events{/privacy}", "received_events_url": "https://api.github.com/users/fogelton/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "rohan100jain", "id": 144114, "node_id": "MDQ6VXNlcjE0NDExNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/144114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rohan100jain", "html_url": "https://github.com/rohan100jain", "followers_url": "https://api.github.com/users/rohan100jain/followers", "following_url": "https://api.github.com/users/rohan100jain/following{/other_user}", "gists_url": "https://api.github.com/users/rohan100jain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rohan100jain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rohan100jain/subscriptions", "organizations_url": "https://api.github.com/users/rohan100jain/orgs", "repos_url": "https://api.github.com/users/rohan100jain/repos", "events_url": "https://api.github.com/users/rohan100jain/events{/privacy}", "received_events_url": "https://api.github.com/users/rohan100jain/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rohan100jain", "id": 144114, "node_id": "MDQ6VXNlcjE0NDExNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/144114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rohan100jain", "html_url": "https://github.com/rohan100jain", "followers_url": "https://api.github.com/users/rohan100jain/followers", "following_url": "https://api.github.com/users/rohan100jain/following{/other_user}", "gists_url": "https://api.github.com/users/rohan100jain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rohan100jain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rohan100jain/subscriptions", "organizations_url": "https://api.github.com/users/rohan100jain/orgs", "repos_url": "https://api.github.com/users/rohan100jain/repos", "events_url": "https://api.github.com/users/rohan100jain/events{/privacy}", "received_events_url": "https://api.github.com/users/rohan100jain/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-05-03T14:04:01Z", "updated_at": "2018-05-03T14:33:29Z", "closed_at": "2018-05-03T14:33:29Z", "author_association": "NONE", "body_html": "<p>it works with make_one_shot_iterator(), I can see that the training time is 2x lower, when using the make_initializable_iterator() the time is the same as without prefetching to device.<br>\nhow to use the new feature when dataset switch (train/val/test) is needed for evaluation purpose?<br>\ncode parts<br>\n//not working<br>\ntrainDataset = tf.data.Dataset.from_tensor_slices((trainFeatures,trainLabels,trainLengths,trainMasks))<br>\ntrainDataset = trainDataset.batch(batchSize)<br>\ntrainDataset = trainDataset.apply(tf.contrib.data.shuffle_and_repeat(100,nEpochs))<br>\niterator = tf.data.Iterator.from_structure(trainDataset.output_types, trainDataset.output_shapes)<br>\ntrain_init_op = iterator.make_initializer(trainDataset)<br>\ntrainDataset = trainDataset.apply(tf.contrib.data.prefetch_to_device('/gpu:0'))</p>\n<p>//working<br>\ntrainDataset = tf.data.Dataset.from_tensor_slices((trainFeatures,trainLabels,trainLengths,trainMasks))<br>\ntrainDataset = trainDataset.batch(batchSize)<br>\ntrainDataset = trainDataset.apply(tf.contrib.data.shuffle_and_repeat(100,nEpochs))<br>\ntrainDataset = trainDataset.apply(tf.contrib.data.prefetch_to_device('/gpu:0'))<br>\niterator = trainDataset.make_one_shot_iterator()</p>", "body_text": "it works with make_one_shot_iterator(), I can see that the training time is 2x lower, when using the make_initializable_iterator() the time is the same as without prefetching to device.\nhow to use the new feature when dataset switch (train/val/test) is needed for evaluation purpose?\ncode parts\n//not working\ntrainDataset = tf.data.Dataset.from_tensor_slices((trainFeatures,trainLabels,trainLengths,trainMasks))\ntrainDataset = trainDataset.batch(batchSize)\ntrainDataset = trainDataset.apply(tf.contrib.data.shuffle_and_repeat(100,nEpochs))\niterator = tf.data.Iterator.from_structure(trainDataset.output_types, trainDataset.output_shapes)\ntrain_init_op = iterator.make_initializer(trainDataset)\ntrainDataset = trainDataset.apply(tf.contrib.data.prefetch_to_device('/gpu:0'))\n//working\ntrainDataset = tf.data.Dataset.from_tensor_slices((trainFeatures,trainLabels,trainLengths,trainMasks))\ntrainDataset = trainDataset.batch(batchSize)\ntrainDataset = trainDataset.apply(tf.contrib.data.shuffle_and_repeat(100,nEpochs))\ntrainDataset = trainDataset.apply(tf.contrib.data.prefetch_to_device('/gpu:0'))\niterator = trainDataset.make_one_shot_iterator()", "body": "it works with make_one_shot_iterator(), I can see that the training time is 2x lower, when using the make_initializable_iterator() the time is the same as without prefetching to device.\r\nhow to use the new feature when dataset switch (train/val/test) is needed for evaluation purpose?\r\ncode parts\r\n//not working\r\ntrainDataset = tf.data.Dataset.from_tensor_slices((trainFeatures,trainLabels,trainLengths,trainMasks))\r\ntrainDataset = trainDataset.batch(batchSize)\r\ntrainDataset = trainDataset.apply(tf.contrib.data.shuffle_and_repeat(100,nEpochs))\r\niterator = tf.data.Iterator.from_structure(trainDataset.output_types, trainDataset.output_shapes)\r\ntrain_init_op = iterator.make_initializer(trainDataset)\r\ntrainDataset = trainDataset.apply(tf.contrib.data.prefetch_to_device('/gpu:0'))\r\n\r\n//working\r\ntrainDataset = tf.data.Dataset.from_tensor_slices((trainFeatures,trainLabels,trainLengths,trainMasks))\r\ntrainDataset = trainDataset.batch(batchSize)\r\ntrainDataset = trainDataset.apply(tf.contrib.data.shuffle_and_repeat(100,nEpochs))\r\ntrainDataset = trainDataset.apply(tf.contrib.data.prefetch_to_device('/gpu:0'))\r\niterator = trainDataset.make_one_shot_iterator()"}