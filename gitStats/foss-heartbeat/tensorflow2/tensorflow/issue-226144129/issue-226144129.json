{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9644", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9644/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9644/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9644/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9644", "id": 226144129, "node_id": "MDU6SXNzdWUyMjYxNDQxMjk=", "number": 9644, "title": "Indexed Slices Support", "user": {"login": "eaplatanios", "id": 1294940, "node_id": "MDQ6VXNlcjEyOTQ5NDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1294940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eaplatanios", "html_url": "https://github.com/eaplatanios", "followers_url": "https://api.github.com/users/eaplatanios/followers", "following_url": "https://api.github.com/users/eaplatanios/following{/other_user}", "gists_url": "https://api.github.com/users/eaplatanios/gists{/gist_id}", "starred_url": "https://api.github.com/users/eaplatanios/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eaplatanios/subscriptions", "organizations_url": "https://api.github.com/users/eaplatanios/orgs", "repos_url": "https://api.github.com/users/eaplatanios/repos", "events_url": "https://api.github.com/users/eaplatanios/events{/privacy}", "received_events_url": "https://api.github.com/users/eaplatanios/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-03T23:38:23Z", "updated_at": "2017-05-05T20:58:15Z", "closed_at": "2017-05-05T20:58:15Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Hi,</p>\n<p>I am wondering what the reasoning behind IndexedSlices is and whether they are actually necessary. My understanding is that they are only constructed for the gradient of the gather op. Is there any other place in the Python API that IndexedSlices are being constructed? Now, even though they are only constructed there, there are special cases throughout the Python codebase for dealing with indexed slices. Is the performance benefit so important to justify all this special treatment code? I am asking because I am wondering if it is useful to implement that functionality in an API for a different language.</p>\n<p>And if I am to rephrase this question, should one put effort into adding support to the C++ API for indexed slices, or is their use a remnant of a design choice that is not that useful looking in retrospect?</p>\n<p>Thank you!</p>", "body_text": "Hi,\nI am wondering what the reasoning behind IndexedSlices is and whether they are actually necessary. My understanding is that they are only constructed for the gradient of the gather op. Is there any other place in the Python API that IndexedSlices are being constructed? Now, even though they are only constructed there, there are special cases throughout the Python codebase for dealing with indexed slices. Is the performance benefit so important to justify all this special treatment code? I am asking because I am wondering if it is useful to implement that functionality in an API for a different language.\nAnd if I am to rephrase this question, should one put effort into adding support to the C++ API for indexed slices, or is their use a remnant of a design choice that is not that useful looking in retrospect?\nThank you!", "body": "Hi,\r\n\r\nI am wondering what the reasoning behind IndexedSlices is and whether they are actually necessary. My understanding is that they are only constructed for the gradient of the gather op. Is there any other place in the Python API that IndexedSlices are being constructed? Now, even though they are only constructed there, there are special cases throughout the Python codebase for dealing with indexed slices. Is the performance benefit so important to justify all this special treatment code? I am asking because I am wondering if it is useful to implement that functionality in an API for a different language. \r\n\r\nAnd if I am to rephrase this question, should one put effort into adding support to the C++ API for indexed slices, or is their use a remnant of a design choice that is not that useful looking in retrospect?\r\n\r\nThank you!"}