{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/224652625", "pull_request_review_id": 164075407, "id": 224652625, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNDY1MjYyNQ==", "diff_hunk": "@@ -1467,6 +1467,59 @@ tensorflow::Status ConvertPlugin(Converter& ctx,\n   return tensorflow::Status::OK();\n }\n \n+tensorflow::Status ConvertTranspose(\n+    Converter& ctx, const tensorflow::NodeDef& node_def,\n+    const std::vector<TRT_TensorOrWeights>& inputs,\n+    std::vector<TRT_TensorOrWeights>* outputs) {\n+  if (inputs.size() != 2 || !inputs.at(0).is_tensor() ||\n+      !inputs.at(1).is_weights()) {\n+    return tensorflow::errors::InvalidArgument(\n+        \"Input expects tensor and weights, at\", node_def.name());\n+  }\n+  nvinfer1::ITensor* input_tensor = const_cast<nvinfer1::ITensor*>(\n+      inputs.at(0).tensor());\n+\n+  TRT_ShapedWeights weights = inputs.at(1).weights();\n+  const int* weights_ptr = static_cast<int*>(const_cast<void*>(\n+      weights.GetValues()));\n+  std::vector<int> perm(weights.count());\n+  for (int i = 0; i < weights.count(); i++) {\n+    perm[i] = weights_ptr[i];\n+  }\n+\n+  nvinfer1::ITensor* output_tensor = ctx.TransposeTensor(input_tensor, perm);\n+  outputs->push_back(TRT_TensorOrWeights(output_tensor));\n+  return tensorflow::Status::OK();\n+}\n+\n+tensorflow::Status ConvertReshape(\n+    Converter& ctx, const tensorflow::NodeDef& node_def,\n+    const std::vector<TRT_TensorOrWeights>& inputs,\n+    std::vector<TRT_TensorOrWeights>* outputs) {\n+  if (inputs.size() != 2 || !inputs.at(1).is_weights()) {\n+    return tensorflow::errors::InvalidArgument(\n+        \"Input expects weights for shape, at\", node_def.name());\n+  }\n+\n+  TRT_ShapedWeights weights = inputs.at(1).weights();\n+  const int* weights_ptr = static_cast<int*>(const_cast<void*>(\n+      weights.GetValues()));\n+  nvinfer1::Dims new_shape;\n+  // Ignore first (batch) dimension because TRT abstracts batch away", "path": "tensorflow/contrib/tensorrt/convert/convert_nodes.cc", "position": 912, "original_position": 42, "commit_id": "77456c6611fd2faa07d6efabafb3f61f82a24eed", "original_commit_id": "307ef84f3c53bb35222182afaf40385fae88ec73", "user": {"login": "trevor-m", "id": 12981474, "node_id": "MDQ6VXNlcjEyOTgxNDc0", "avatar_url": "https://avatars1.githubusercontent.com/u/12981474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trevor-m", "html_url": "https://github.com/trevor-m", "followers_url": "https://api.github.com/users/trevor-m/followers", "following_url": "https://api.github.com/users/trevor-m/following{/other_user}", "gists_url": "https://api.github.com/users/trevor-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/trevor-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trevor-m/subscriptions", "organizations_url": "https://api.github.com/users/trevor-m/orgs", "repos_url": "https://api.github.com/users/trevor-m/repos", "events_url": "https://api.github.com/users/trevor-m/events{/privacy}", "received_events_url": "https://api.github.com/users/trevor-m/received_events", "type": "User", "site_admin": false}, "body": "> We need to return an error if the first dim doesn't match the max batch size of the engine.\r\n\r\nWould there be a problem if the first dim == -1?\r\n\r\nWould this work? new_shape and input_shape include the batch dim.\r\n```\r\nif new_shape[0] == -1 and (product(new_shape[1:]) == product(original_shape[1:])):\r\n  # Good\r\nelif new_shape[0] == max_batch_size:\r\n  # Good\r\nelse:\r\n  # Bad\r\n```", "created_at": "2018-10-12T01:58:43Z", "updated_at": "2018-10-16T17:06:56Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/22874#discussion_r224652625", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/22874", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/224652625"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/22874#discussion_r224652625"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/22874"}}, "body_html": "<blockquote>\n<p>We need to return an error if the first dim doesn't match the max batch size of the engine.</p>\n</blockquote>\n<p>Would there be a problem if the first dim == -1?</p>\n<p>Would this work? new_shape and input_shape include the batch dim.</p>\n<pre><code>if new_shape[0] == -1 and (product(new_shape[1:]) == product(original_shape[1:])):\n  # Good\nelif new_shape[0] == max_batch_size:\n  # Good\nelse:\n  # Bad\n</code></pre>", "body_text": "We need to return an error if the first dim doesn't match the max batch size of the engine.\n\nWould there be a problem if the first dim == -1?\nWould this work? new_shape and input_shape include the batch dim.\nif new_shape[0] == -1 and (product(new_shape[1:]) == product(original_shape[1:])):\n  # Good\nelif new_shape[0] == max_batch_size:\n  # Good\nelse:\n  # Bad", "in_reply_to_id": 224607210}