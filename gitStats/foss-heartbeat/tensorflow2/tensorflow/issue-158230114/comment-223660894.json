{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/223660894", "html_url": "https://github.com/tensorflow/tensorflow/issues/2626#issuecomment-223660894", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2626", "id": 223660894, "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzY2MDg5NA==", "user": {"login": "prb12", "id": 11547801, "node_id": "MDQ6VXNlcjExNTQ3ODAx", "avatar_url": "https://avatars1.githubusercontent.com/u/11547801?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prb12", "html_url": "https://github.com/prb12", "followers_url": "https://api.github.com/users/prb12/followers", "following_url": "https://api.github.com/users/prb12/following{/other_user}", "gists_url": "https://api.github.com/users/prb12/gists{/gist_id}", "starred_url": "https://api.github.com/users/prb12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prb12/subscriptions", "organizations_url": "https://api.github.com/users/prb12/orgs", "repos_url": "https://api.github.com/users/prb12/repos", "events_url": "https://api.github.com/users/prb12/events{/privacy}", "received_events_url": "https://api.github.com/users/prb12/received_events", "type": "User", "site_admin": false}, "created_at": "2016-06-03T18:45:03Z", "updated_at": "2016-06-03T18:46:32Z", "author_association": "MEMBER", "body_html": "<p>I'm not sure that the change to 'with_the_same_user' is relevant.  (AFAIK, This is just used in our Jenkins test framework to ensure the LD_LIBRARY_PATH from the Docker container is used when running GPU tests as the user 'CI_BUILD_UID')</p>\n<p>Note: the same GIT commit also changed the interpretation of the trace level enum.  Prior to this change, the TRACE_FULL option was only recording the host-side enqueueing of ops (i.e. what is now done if you specify 'SOFTWARE_TRACE')</p>\n<p>It is now the case the 'TRACE_FULL' will also try to enable the GPUTracer on CUDA builds.<br>\nIf you're running a python script, this requires libcupti to be on your LD_LIBRARY_PATH (since there's no other way to find the NVidia library.)</p>\n<p>e.g. LD_LIBRARY_PATH=/usr/loca/cuda/lib64:/usrlocal/cuda/extras/lib64</p>\n<p>Please can you check your path, and see if this fixes the problem?</p>", "body_text": "I'm not sure that the change to 'with_the_same_user' is relevant.  (AFAIK, This is just used in our Jenkins test framework to ensure the LD_LIBRARY_PATH from the Docker container is used when running GPU tests as the user 'CI_BUILD_UID')\nNote: the same GIT commit also changed the interpretation of the trace level enum.  Prior to this change, the TRACE_FULL option was only recording the host-side enqueueing of ops (i.e. what is now done if you specify 'SOFTWARE_TRACE')\nIt is now the case the 'TRACE_FULL' will also try to enable the GPUTracer on CUDA builds.\nIf you're running a python script, this requires libcupti to be on your LD_LIBRARY_PATH (since there's no other way to find the NVidia library.)\ne.g. LD_LIBRARY_PATH=/usr/loca/cuda/lib64:/usrlocal/cuda/extras/lib64\nPlease can you check your path, and see if this fixes the problem?", "body": "I'm not sure that the change to 'with_the_same_user' is relevant.  (AFAIK, This is just used in our Jenkins test framework to ensure the LD_LIBRARY_PATH from the Docker container is used when running GPU tests as the user 'CI_BUILD_UID')\n\nNote: the same GIT commit also changed the interpretation of the trace level enum.  Prior to this change, the TRACE_FULL option was only recording the host-side enqueueing of ops (i.e. what is now done if you specify 'SOFTWARE_TRACE') \n\nIt is now the case the 'TRACE_FULL' will also try to enable the GPUTracer on CUDA builds.  \nIf you're running a python script, this requires libcupti to be on your LD_LIBRARY_PATH (since there's no other way to find the NVidia library.)\n\ne.g. LD_LIBRARY_PATH=/usr/loca/cuda/lib64:/usrlocal/cuda/extras/lib64\n\nPlease can you check your path, and see if this fixes the problem?\n"}