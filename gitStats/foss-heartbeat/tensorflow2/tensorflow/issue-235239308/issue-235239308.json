{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10650", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10650/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10650/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10650/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/10650", "id": 235239308, "node_id": "MDU6SXNzdWUyMzUyMzkzMDg=", "number": 10650, "title": "tf.reshape does not take tf.Dimension as argument ", "user": {"login": "artcg", "id": 952771, "node_id": "MDQ6VXNlcjk1Mjc3MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/952771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artcg", "html_url": "https://github.com/artcg", "followers_url": "https://api.github.com/users/artcg/followers", "following_url": "https://api.github.com/users/artcg/following{/other_user}", "gists_url": "https://api.github.com/users/artcg/gists{/gist_id}", "starred_url": "https://api.github.com/users/artcg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artcg/subscriptions", "organizations_url": "https://api.github.com/users/artcg/orgs", "repos_url": "https://api.github.com/users/artcg/repos", "events_url": "https://api.github.com/users/artcg/events{/privacy}", "received_events_url": "https://api.github.com/users/artcg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}, {"id": 473184161, "node_id": "MDU6TGFiZWw0NzMxODQxNjE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:support", "name": "type:support", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-06-12T13:50:32Z", "updated_at": "2018-04-23T14:37:42Z", "closed_at": "2017-07-20T14:55:16Z", "author_association": "NONE", "body_html": "<p>Minimal code to reproduce</p>\n<pre><code>import tensorflow as tf\nt = tf.constant([1, 2, 3])\nd = tf.Dimension(3)\nt = tf.reshape(t, [-1, d])\n</code></pre>\n<p>Gives stack trace:</p>\n<pre><code>TypeError: Expected binary or unicode string, got -1\n</code></pre>\n<p>The reason this would be useful to allow is because when you access tensor shapes (with, e.g. <code>t.shape</code>) you get it in tf.Dimension so if you want to assign relative to the current shape then you don't need to convert to int</p>\n<p>If there is some reason why tensorflow doesn't allow this behaviour than I think at least the stack trace should be more verbose (e.g. in the example above it shouldn't be complaining about -1, it should be complaining about the value in tf.Dimension class)</p>", "body_text": "Minimal code to reproduce\nimport tensorflow as tf\nt = tf.constant([1, 2, 3])\nd = tf.Dimension(3)\nt = tf.reshape(t, [-1, d])\n\nGives stack trace:\nTypeError: Expected binary or unicode string, got -1\n\nThe reason this would be useful to allow is because when you access tensor shapes (with, e.g. t.shape) you get it in tf.Dimension so if you want to assign relative to the current shape then you don't need to convert to int\nIf there is some reason why tensorflow doesn't allow this behaviour than I think at least the stack trace should be more verbose (e.g. in the example above it shouldn't be complaining about -1, it should be complaining about the value in tf.Dimension class)", "body": "Minimal code to reproduce\r\n\r\n```\r\nimport tensorflow as tf\r\nt = tf.constant([1, 2, 3])\r\nd = tf.Dimension(3)\r\nt = tf.reshape(t, [-1, d])\r\n```\r\n\r\nGives stack trace:\r\n\r\n```\r\nTypeError: Expected binary or unicode string, got -1\r\n```\r\n\r\n\r\nThe reason this would be useful to allow is because when you access tensor shapes (with, e.g. ```t.shape```) you get it in tf.Dimension so if you want to assign relative to the current shape then you don't need to convert to int\r\n\r\n\r\nIf there is some reason why tensorflow doesn't allow this behaviour than I think at least the stack trace should be more verbose (e.g. in the example above it shouldn't be complaining about -1, it should be complaining about the value in tf.Dimension class)"}