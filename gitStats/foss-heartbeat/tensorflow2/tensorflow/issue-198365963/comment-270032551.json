{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/270032551", "html_url": "https://github.com/tensorflow/tensorflow/issues/6604#issuecomment-270032551", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6604", "id": 270032551, "node_id": "MDEyOklzc3VlQ29tbWVudDI3MDAzMjU1MQ==", "user": {"login": "bodokaiser", "id": 1780466, "node_id": "MDQ6VXNlcjE3ODA0NjY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1780466?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bodokaiser", "html_url": "https://github.com/bodokaiser", "followers_url": "https://api.github.com/users/bodokaiser/followers", "following_url": "https://api.github.com/users/bodokaiser/following{/other_user}", "gists_url": "https://api.github.com/users/bodokaiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/bodokaiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bodokaiser/subscriptions", "organizations_url": "https://api.github.com/users/bodokaiser/orgs", "repos_url": "https://api.github.com/users/bodokaiser/repos", "events_url": "https://api.github.com/users/bodokaiser/events{/privacy}", "received_events_url": "https://api.github.com/users/bodokaiser/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-02T23:34:48Z", "updated_at": "2017-01-02T23:34:59Z", "author_association": "NONE", "body_html": "<p>One possible solution I see with <code>tf.train.MonitoredTrainingSession</code>:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">with</span> tf.train.MonitoredTrainingSession(<span class=\"pl-v\">hooks</span><span class=\"pl-k\">=</span>hooks) <span class=\"pl-k\">as</span> session:\n    <span class=\"pl-k\">while</span> <span class=\"pl-k\">not</span> session.should_stop():\n        session.run(train, <span class=\"pl-v\">feed_dict</span><span class=\"pl-k\">=</span>{\n            x: batch[<span class=\"pl-c1\">0</span>].eval(<span class=\"pl-v\">session</span><span class=\"pl-k\">=</span>session),\n            y: batch[<span class=\"pl-c1\">1</span>].eval(<span class=\"pl-v\">session</span><span class=\"pl-k\">=</span>session),\n        })</pre></div>\n<p>that we take the <code>feed_dict</code> argument of <code>session.run</code> and pass it down to every <code>hook</code> where we add that <code>feed_dict</code> as default to <code>tf.train.SessionRunArgs</code>.</p>", "body_text": "One possible solution I see with tf.train.MonitoredTrainingSession:\nwith tf.train.MonitoredTrainingSession(hooks=hooks) as session:\n    while not session.should_stop():\n        session.run(train, feed_dict={\n            x: batch[0].eval(session=session),\n            y: batch[1].eval(session=session),\n        })\nthat we take the feed_dict argument of session.run and pass it down to every hook where we add that feed_dict as default to tf.train.SessionRunArgs.", "body": "One possible solution I see with `tf.train.MonitoredTrainingSession`:\r\n\r\n```python\r\nwith tf.train.MonitoredTrainingSession(hooks=hooks) as session:\r\n    while not session.should_stop():\r\n        session.run(train, feed_dict={\r\n            x: batch[0].eval(session=session),\r\n            y: batch[1].eval(session=session),\r\n        })\r\n```\r\n\r\nthat we take the `feed_dict` argument of `session.run` and pass it down to every `hook` where we add that `feed_dict` as default to `tf.train.SessionRunArgs`."}