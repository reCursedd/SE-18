{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22033", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22033/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22033/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22033/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/22033", "id": 356562026, "node_id": "MDU6SXNzdWUzNTY1NjIwMjY=", "number": 22033, "title": "Accuracy oscillates between ~0% and ~70% when creating multiple models", "user": {"login": "ChrisSwinchatt", "id": 1572288, "node_id": "MDQ6VXNlcjE1NzIyODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1572288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisSwinchatt", "html_url": "https://github.com/ChrisSwinchatt", "followers_url": "https://api.github.com/users/ChrisSwinchatt/followers", "following_url": "https://api.github.com/users/ChrisSwinchatt/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisSwinchatt/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisSwinchatt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisSwinchatt/subscriptions", "organizations_url": "https://api.github.com/users/ChrisSwinchatt/orgs", "repos_url": "https://api.github.com/users/ChrisSwinchatt/repos", "events_url": "https://api.github.com/users/ChrisSwinchatt/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisSwinchatt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "wt-huang", "id": 42785337, "node_id": "MDQ6VXNlcjQyNzg1MzM3", "avatar_url": "https://avatars0.githubusercontent.com/u/42785337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wt-huang", "html_url": "https://github.com/wt-huang", "followers_url": "https://api.github.com/users/wt-huang/followers", "following_url": "https://api.github.com/users/wt-huang/following{/other_user}", "gists_url": "https://api.github.com/users/wt-huang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wt-huang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wt-huang/subscriptions", "organizations_url": "https://api.github.com/users/wt-huang/orgs", "repos_url": "https://api.github.com/users/wt-huang/repos", "events_url": "https://api.github.com/users/wt-huang/events{/privacy}", "received_events_url": "https://api.github.com/users/wt-huang/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "wt-huang", "id": 42785337, "node_id": "MDQ6VXNlcjQyNzg1MzM3", "avatar_url": "https://avatars0.githubusercontent.com/u/42785337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wt-huang", "html_url": "https://github.com/wt-huang", "followers_url": "https://api.github.com/users/wt-huang/followers", "following_url": "https://api.github.com/users/wt-huang/following{/other_user}", "gists_url": "https://api.github.com/users/wt-huang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wt-huang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wt-huang/subscriptions", "organizations_url": "https://api.github.com/users/wt-huang/orgs", "repos_url": "https://api.github.com/users/wt-huang/repos", "events_url": "https://api.github.com/users/wt-huang/events{/privacy}", "received_events_url": "https://api.github.com/users/wt-huang/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2018-09-03T16:38:57Z", "updated_at": "2018-10-16T20:41:11Z", "closed_at": "2018-10-16T20:41:10Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Windows 10</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>: No</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: PyPi (pip)</li>\n<li><strong>TensorFlow version (use command below)</strong>: b'v1.10.0-rc1-19-g656e7a2b34' 1.10.0</li>\n<li><strong>Python version</strong>: 3.6.6</li>\n<li><strong>Bazel version (if compiling from source)</strong>: N/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: N/A</li>\n<li><strong>CUDA/cuDNN version</strong>: CUDA 9.0</li>\n<li><strong>GPU model and memory</strong>: GTX 1060 6 GB</li>\n<li><strong>Exact command to reproduce</strong>:\n<ul>\n<li>Download bug.py and training.csv from this Gist: <a href=\"https://gist.github.com/ChrisSwinchatt/97304761e9f875dfd34e3339891a5475\">https://gist.github.com/ChrisSwinchatt/97304761e9f875dfd34e3339891a5475</a></li>\n<li>Run python bug.py</li>\n</ul>\n</li>\n</ul>\n<h3>Describe the problem</h3>\n<p><strong>I've found that the problem doesn't occur when TensorFlow is forced to use the CPU</strong></p>\n<p>Full disclosure: I also opened an issue with Keras (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"356558184\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/keras-team/keras/issues/11070\" data-hovercard-type=\"issue\" data-hovercard-url=\"/keras-team/keras/issues/11070/hovercard\" href=\"https://github.com/keras-team/keras/issues/11070\">keras-team/keras#11070</a>) because I'm not sure whether the bug is with TensorFlow or Keras. I am using tf.Keras, though, rather than just Keras with TensorFlow as a backend.</p>\n<p>I'm using a sequence-to-sequence model based on the Keras blogpost which I've wrapped into a fairly complicated object (although the issue also occurs with a simplified version linked below). When I create a new model (which I have to do for gridsearch and for clearing the TF session when the graph gets too big and slows down training) it starts with accuracy of either 0% or 70%.</p>\n<p>Here are a pair of screenshots that show what I mean:</p>\n<p>Good: <a href=\"https://i.imgur.com/7mT5Siv.png\" rel=\"nofollow\">https://i.imgur.com/7mT5Siv.png</a><br>\nBad: <a href=\"https://i.imgur.com/MZ3NdCB.png\" rel=\"nofollow\">https://i.imgur.com/MZ3NdCB.png</a></p>\n<p>You can see in the first screenshot that the accuracy is low but trending upwards. In the second, the accuracy of two models starts at 70% and doesn't increase (another model starts at 3% and also doesn't increase).</p>\n<p>This happens whether I create new, blank models or load pretrained weights into new models with model.load_weights().</p>\n<h3>Source code / logs</h3>\n<p>Source code and screenshots are above.</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: No\nTensorFlow installed from (source or binary): PyPi (pip)\nTensorFlow version (use command below): b'v1.10.0-rc1-19-g656e7a2b34' 1.10.0\nPython version: 3.6.6\nBazel version (if compiling from source): N/A\nGCC/Compiler version (if compiling from source): N/A\nCUDA/cuDNN version: CUDA 9.0\nGPU model and memory: GTX 1060 6 GB\nExact command to reproduce:\n\nDownload bug.py and training.csv from this Gist: https://gist.github.com/ChrisSwinchatt/97304761e9f875dfd34e3339891a5475\nRun python bug.py\n\n\n\nDescribe the problem\nI've found that the problem doesn't occur when TensorFlow is forced to use the CPU\nFull disclosure: I also opened an issue with Keras (keras-team/keras#11070) because I'm not sure whether the bug is with TensorFlow or Keras. I am using tf.Keras, though, rather than just Keras with TensorFlow as a backend.\nI'm using a sequence-to-sequence model based on the Keras blogpost which I've wrapped into a fairly complicated object (although the issue also occurs with a simplified version linked below). When I create a new model (which I have to do for gridsearch and for clearing the TF session when the graph gets too big and slows down training) it starts with accuracy of either 0% or 70%.\nHere are a pair of screenshots that show what I mean:\nGood: https://i.imgur.com/7mT5Siv.png\nBad: https://i.imgur.com/MZ3NdCB.png\nYou can see in the first screenshot that the accuracy is low but trending upwards. In the second, the accuracy of two models starts at 70% and doesn't increase (another model starts at 3% and also doesn't increase).\nThis happens whether I create new, blank models or load pretrained weights into new models with model.load_weights().\nSource code / logs\nSource code and screenshots are above.", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 10\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**: No\r\n- **TensorFlow installed from (source or binary)**: PyPi (pip)\r\n- **TensorFlow version (use command below)**: b'v1.10.0-rc1-19-g656e7a2b34' 1.10.0\r\n- **Python version**: 3.6.6\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: CUDA 9.0\r\n- **GPU model and memory**: GTX 1060 6 GB\r\n- **Exact command to reproduce**:\r\n  - Download bug.py and training.csv from this Gist: https://gist.github.com/ChrisSwinchatt/97304761e9f875dfd34e3339891a5475\r\n  - Run python bug.py\r\n\r\n### Describe the problem\r\n\r\n**I've found that the problem doesn't occur when TensorFlow is forced to use the CPU**\r\n\r\nFull disclosure: I also opened an issue with Keras (https://github.com/keras-team/keras/issues/11070) because I'm not sure whether the bug is with TensorFlow or Keras. I am using tf.Keras, though, rather than just Keras with TensorFlow as a backend.\r\n\r\nI'm using a sequence-to-sequence model based on the Keras blogpost which I've wrapped into a fairly complicated object (although the issue also occurs with a simplified version linked below). When I create a new model (which I have to do for gridsearch and for clearing the TF session when the graph gets too big and slows down training) it starts with accuracy of either 0% or 70%.\r\n\r\nHere are a pair of screenshots that show what I mean:\r\n\r\nGood: https://i.imgur.com/7mT5Siv.png\r\nBad: https://i.imgur.com/MZ3NdCB.png\r\n\r\nYou can see in the first screenshot that the accuracy is low but trending upwards. In the second, the accuracy of two models starts at 70% and doesn't increase (another model starts at 3% and also doesn't increase).\r\n\r\nThis happens whether I create new, blank models or load pretrained weights into new models with model.load_weights().\r\n\r\n### Source code / logs\r\n\r\nSource code and screenshots are above."}