{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/231217118", "html_url": "https://github.com/tensorflow/tensorflow/issues/2789#issuecomment-231217118", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2789", "id": 231217118, "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTIxNzExOA==", "user": {"login": "NickShahML", "id": 14891677, "node_id": "MDQ6VXNlcjE0ODkxNjc3", "avatar_url": "https://avatars2.githubusercontent.com/u/14891677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NickShahML", "html_url": "https://github.com/NickShahML", "followers_url": "https://api.github.com/users/NickShahML/followers", "following_url": "https://api.github.com/users/NickShahML/following{/other_user}", "gists_url": "https://api.github.com/users/NickShahML/gists{/gist_id}", "starred_url": "https://api.github.com/users/NickShahML/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NickShahML/subscriptions", "organizations_url": "https://api.github.com/users/NickShahML/orgs", "repos_url": "https://api.github.com/users/NickShahML/repos", "events_url": "https://api.github.com/users/NickShahML/events{/privacy}", "received_events_url": "https://api.github.com/users/NickShahML/received_events", "type": "User", "site_admin": false}, "created_at": "2016-07-07T21:46:29Z", "updated_at": "2016-07-07T21:46:29Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5205204\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/alquraishi\">@alquraishi</a> what you are suggesting only applies when you use the dropout wrapper from <code>rnn_cell.py</code>. However, if you just apply dropout at the <code>rnn.py</code> level, you can easily adjust the stochastic dropout masks should change on each timestep.</p>\n<p>I'm working on implementing zoneout right now and I think that all you need to do is use <code>tf.nn.dropout</code> to achieve this with <code>rnn.py</code></p>", "body_text": "@alquraishi what you are suggesting only applies when you use the dropout wrapper from rnn_cell.py. However, if you just apply dropout at the rnn.py level, you can easily adjust the stochastic dropout masks should change on each timestep.\nI'm working on implementing zoneout right now and I think that all you need to do is use tf.nn.dropout to achieve this with rnn.py", "body": "@alquraishi what you are suggesting only applies when you use the dropout wrapper from `rnn_cell.py`. However, if you just apply dropout at the `rnn.py` level, you can easily adjust the stochastic dropout masks should change on each timestep. \n\nI'm working on implementing zoneout right now and I think that all you need to do is use `tf.nn.dropout` to achieve this with `rnn.py`\n"}