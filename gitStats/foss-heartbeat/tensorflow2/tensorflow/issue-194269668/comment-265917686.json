{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/265917686", "html_url": "https://github.com/tensorflow/tensorflow/pull/6185#issuecomment-265917686", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6185", "id": 265917686, "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTkxNzY4Ng==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2016-12-09T02:35:29Z", "updated_at": "2016-12-09T02:35:29Z", "author_association": "CONTRIBUTOR", "body_html": "<p>IIRC the problem is that the <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/distributed_runtime/rpc/grpc_call.h#L134\"><code>Call</code></a> objects used in <code>GrpcMasterService</code> and <code>GrpcWorkerService</code> have pointers to the underlying gRPC service objects in their <code>responder_</code> field. So you need some way to ensure that all of the pending requests have completed/been cancelled before deleting the server itself.</p>\n<p>At the time I implemented this, it didn't seem worth the additional complexity to support clean shutdown (which was not a feature anybody was using at the time...). I'd be delighted if there's a simple solution here.</p>", "body_text": "IIRC the problem is that the Call objects used in GrpcMasterService and GrpcWorkerService have pointers to the underlying gRPC service objects in their responder_ field. So you need some way to ensure that all of the pending requests have completed/been cancelled before deleting the server itself.\nAt the time I implemented this, it didn't seem worth the additional complexity to support clean shutdown (which was not a feature anybody was using at the time...). I'd be delighted if there's a simple solution here.", "body": "IIRC the problem is that the [`Call`](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/distributed_runtime/rpc/grpc_call.h#L134) objects used in `GrpcMasterService` and `GrpcWorkerService` have pointers to the underlying gRPC service objects in their `responder_` field. So you need some way to ensure that all of the pending requests have completed/been cancelled before deleting the server itself.\r\n\r\nAt the time I implemented this, it didn't seem worth the additional complexity to support clean shutdown (which was not a feature anybody was using at the time...). I'd be delighted if there's a simple solution here."}