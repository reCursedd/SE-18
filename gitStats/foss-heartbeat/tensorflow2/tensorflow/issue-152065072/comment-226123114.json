{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/226123114", "html_url": "https://github.com/tensorflow/tensorflow/issues/2180#issuecomment-226123114", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2180", "id": 226123114, "node_id": "MDEyOklzc3VlQ29tbWVudDIyNjEyMzExNA==", "user": {"login": "maniteja123", "id": 6291963, "node_id": "MDQ6VXNlcjYyOTE5NjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/6291963?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maniteja123", "html_url": "https://github.com/maniteja123", "followers_url": "https://api.github.com/users/maniteja123/followers", "following_url": "https://api.github.com/users/maniteja123/following{/other_user}", "gists_url": "https://api.github.com/users/maniteja123/gists{/gist_id}", "starred_url": "https://api.github.com/users/maniteja123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maniteja123/subscriptions", "organizations_url": "https://api.github.com/users/maniteja123/orgs", "repos_url": "https://api.github.com/users/maniteja123/repos", "events_url": "https://api.github.com/users/maniteja123/events{/privacy}", "received_events_url": "https://api.github.com/users/maniteja123/received_events", "type": "User", "site_admin": false}, "created_at": "2016-06-15T08:34:39Z", "updated_at": "2016-06-15T08:34:39Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Thanks for the response. Could you please clarify some questions ? Would adding a wrapper suffice ? I was thinking <code>sparse_ops.py</code> where similar functions are there ? Or should it be added to the core code ?</p>\n<p>Also the implementation AFAICU would be something like</p>\n<pre><code>transposed_indices  = tf.reverse(sp_input.indices), [False, True])\ntransposed_values = sp_input.values\ntransposed_shape = tf.reverse(sp_input.shape), [True])\nsp_output = tf.SparseTensor(transosed_indices, transposed_values, transposed_shape)\nsp_output = tf.sparse_reorder(sp_output)\n</code></pre>\n<p>Please let me know if this is  the right approach here ? Thanks.</p>", "body_text": "Thanks for the response. Could you please clarify some questions ? Would adding a wrapper suffice ? I was thinking sparse_ops.py where similar functions are there ? Or should it be added to the core code ?\nAlso the implementation AFAICU would be something like\ntransposed_indices  = tf.reverse(sp_input.indices), [False, True])\ntransposed_values = sp_input.values\ntransposed_shape = tf.reverse(sp_input.shape), [True])\nsp_output = tf.SparseTensor(transosed_indices, transposed_values, transposed_shape)\nsp_output = tf.sparse_reorder(sp_output)\n\nPlease let me know if this is  the right approach here ? Thanks.", "body": "Thanks for the response. Could you please clarify some questions ? Would adding a wrapper suffice ? I was thinking `sparse_ops.py` where similar functions are there ? Or should it be added to the core code ?\n\nAlso the implementation AFAICU would be something like \n\n```\ntransposed_indices  = tf.reverse(sp_input.indices), [False, True])\ntransposed_values = sp_input.values\ntransposed_shape = tf.reverse(sp_input.shape), [True])\nsp_output = tf.SparseTensor(transosed_indices, transposed_values, transposed_shape)\nsp_output = tf.sparse_reorder(sp_output)\n```\n\nPlease let me know if this is  the right approach here ? Thanks.\n"}