{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/216086573", "html_url": "https://github.com/tensorflow/tensorflow/issues/2180#issuecomment-216086573", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2180", "id": 216086573, "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjA4NjU3Mw==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2016-05-02T00:58:33Z", "updated_at": "2016-05-02T00:58:33Z", "author_association": "CONTRIBUTOR", "body_html": "<p>There's no built-in op for doing this, but you could do something like the following:</p>\n<div class=\"highlight highlight-source-python\"><pre>input_st <span class=\"pl-k\">=</span> <span class=\"pl-c1\">...</span>  <span class=\"pl-c\"><span class=\"pl-c\">#</span> object of type `tf.SparseTensor`, with 2-D indices</span>\n\nindices <span class=\"pl-k\">=</span> input_st.indices\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Reverse the columns of `indices`</span>\ntransposed_indices <span class=\"pl-k\">=</span> tf.concat(<span class=\"pl-c1\">1</span>, [indices[:, <span class=\"pl-c1\">1</span>:<span class=\"pl-c1\">2</span>], indices[:, <span class=\"pl-c1\">0</span>:<span class=\"pl-c1\">1</span>]])\n\ndense_shape <span class=\"pl-k\">=</span> input_st.dense_shape\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Reverse the elements of `dense_shape`</span>\ntransposed_dense_shape <span class=\"pl-k\">=</span> tf.pack([dense_shape[<span class=\"pl-c1\">1</span>], dense_shape[<span class=\"pl-c1\">0</span>]])\n\ntransposed_st <span class=\"pl-k\">=</span> tf.SparseTensor(transposed_indices, input_st.values, transposed_dense_shape)</pre></div>", "body_text": "There's no built-in op for doing this, but you could do something like the following:\ninput_st = ...  # object of type `tf.SparseTensor`, with 2-D indices\n\nindices = input_st.indices\n# Reverse the columns of `indices`\ntransposed_indices = tf.concat(1, [indices[:, 1:2], indices[:, 0:1]])\n\ndense_shape = input_st.dense_shape\n# Reverse the elements of `dense_shape`\ntransposed_dense_shape = tf.pack([dense_shape[1], dense_shape[0]])\n\ntransposed_st = tf.SparseTensor(transposed_indices, input_st.values, transposed_dense_shape)", "body": "There's no built-in op for doing this, but you could do something like the following:\n\n``` python\ninput_st = ...  # object of type `tf.SparseTensor`, with 2-D indices\n\nindices = input_st.indices\n# Reverse the columns of `indices`\ntransposed_indices = tf.concat(1, [indices[:, 1:2], indices[:, 0:1]])\n\ndense_shape = input_st.dense_shape\n# Reverse the elements of `dense_shape`\ntransposed_dense_shape = tf.pack([dense_shape[1], dense_shape[0]])\n\ntransposed_st = tf.SparseTensor(transposed_indices, input_st.values, transposed_dense_shape)\n```\n"}