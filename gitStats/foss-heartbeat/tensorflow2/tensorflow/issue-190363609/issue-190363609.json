{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5694", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5694/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5694/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5694/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/5694", "id": 190363609, "node_id": "MDU6SXNzdWUxOTAzNjM2MDk=", "number": 5694, "title": "FusedBatchNorm does not support 3D Filters", "user": {"login": "tomrunia", "id": 5536129, "node_id": "MDQ6VXNlcjU1MzYxMjk=", "avatar_url": "https://avatars1.githubusercontent.com/u/5536129?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomrunia", "html_url": "https://github.com/tomrunia", "followers_url": "https://api.github.com/users/tomrunia/followers", "following_url": "https://api.github.com/users/tomrunia/following{/other_user}", "gists_url": "https://api.github.com/users/tomrunia/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomrunia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomrunia/subscriptions", "organizations_url": "https://api.github.com/users/tomrunia/orgs", "repos_url": "https://api.github.com/users/tomrunia/repos", "events_url": "https://api.github.com/users/tomrunia/events{/privacy}", "received_events_url": "https://api.github.com/users/tomrunia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2016-11-18T16:37:09Z", "updated_at": "2018-06-13T06:07:11Z", "closed_at": "2017-06-16T18:36:49Z", "author_association": "NONE", "body_html": "<p>The current implementation of <code>tf.contrib.layers.batch_norm</code> is quite slow with the default parameters. Recent builds of TF support <code>fused=True</code> which forces the use of the faster <code>nn.fused_batch_norm</code>. However this method does not support 3D filters for computing the mean and variance. The normal (slower) variant with <code>fused=False</code> does not have this problem.</p>\n<p><strong>FusedBatchNorm</strong>:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c\"><span class=\"pl-c\">#</span> Following error is raised when trying to batch normalize 3D filters</span>\n<span class=\"pl-k\">elif</span> original_rank <span class=\"pl-k\">not</span> <span class=\"pl-k\">in</span> [<span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">4</span>]:\n      <span class=\"pl-k\">raise</span> <span class=\"pl-c1\">ValueError</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Inputs <span class=\"pl-c1\">%s</span> has unsupported rank. <span class=\"pl-c1\">\\</span></span>\n<span class=\"pl-s\">          Expected 2 or 4 but got <span class=\"pl-c1\">%d</span><span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">%</span> (inputs.name, original_rank))</pre></div>\n<p>And the default implementation without the fused version uses these axis to compute the <code>tf.nn.moments</code>:</p>\n<div class=\"highlight highlight-source-python\"><pre>axis <span class=\"pl-k\">=</span> <span class=\"pl-c1\">list</span>(<span class=\"pl-c1\">range</span>(inputs_rank <span class=\"pl-k\">-</span> <span class=\"pl-c1\">1</span>))</pre></div>\n<p>This also works for 3D filters of course. See code: <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/layers/python/layers/layers.py#L483\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/layers/python/layers/layers.py#L483</a></p>", "body_text": "The current implementation of tf.contrib.layers.batch_norm is quite slow with the default parameters. Recent builds of TF support fused=True which forces the use of the faster nn.fused_batch_norm. However this method does not support 3D filters for computing the mean and variance. The normal (slower) variant with fused=False does not have this problem.\nFusedBatchNorm:\n# Following error is raised when trying to batch normalize 3D filters\nelif original_rank not in [2, 4]:\n      raise ValueError('Inputs %s has unsupported rank. \\\n          Expected 2 or 4 but got %d' % (inputs.name, original_rank))\nAnd the default implementation without the fused version uses these axis to compute the tf.nn.moments:\naxis = list(range(inputs_rank - 1))\nThis also works for 3D filters of course. See code: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/layers/python/layers/layers.py#L483", "body": "The current implementation of `tf.contrib.layers.batch_norm` is quite slow with the default parameters. Recent builds of TF support `fused=True` which forces the use of the faster `nn.fused_batch_norm`. However this method does not support 3D filters for computing the mean and variance. The normal (slower) variant with `fused=False` does not have this problem.\r\n\r\n**FusedBatchNorm**:\r\n```python\r\n# Following error is raised when trying to batch normalize 3D filters\r\nelif original_rank not in [2, 4]:\r\n      raise ValueError('Inputs %s has unsupported rank. \\\r\n          Expected 2 or 4 but got %d' % (inputs.name, original_rank))\r\n```\r\n\r\nAnd the default implementation without the fused version uses these axis to compute the `tf.nn.moments`:\r\n\r\n```python\r\naxis = list(range(inputs_rank - 1))\r\n```\r\n\r\nThis also works for 3D filters of course. See code: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/layers/python/layers/layers.py#L483"}