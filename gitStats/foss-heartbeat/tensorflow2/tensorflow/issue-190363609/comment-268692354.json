{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/268692354", "html_url": "https://github.com/tensorflow/tensorflow/issues/5694#issuecomment-268692354", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5694", "id": 268692354, "node_id": "MDEyOklzc3VlQ29tbWVudDI2ODY5MjM1NA==", "user": {"login": "zhangyaobit", "id": 1034716, "node_id": "MDQ6VXNlcjEwMzQ3MTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1034716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangyaobit", "html_url": "https://github.com/zhangyaobit", "followers_url": "https://api.github.com/users/zhangyaobit/followers", "following_url": "https://api.github.com/users/zhangyaobit/following{/other_user}", "gists_url": "https://api.github.com/users/zhangyaobit/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangyaobit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangyaobit/subscriptions", "organizations_url": "https://api.github.com/users/zhangyaobit/orgs", "repos_url": "https://api.github.com/users/zhangyaobit/repos", "events_url": "https://api.github.com/users/zhangyaobit/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangyaobit/received_events", "type": "User", "site_admin": false}, "created_at": "2016-12-22T01:12:26Z", "updated_at": "2016-12-22T01:12:26Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=2789456\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/siddharth-agrawal\">@siddharth-agrawal</a> Please note that how the code currently handles the case when the input is 2D (<a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/layers/python/layers/layers.py#L233\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/layers/python/layers/layers.py#L233</a>): the input is reshaped to a 4D shape [-1, 1, 1, channels].</p>\n<p>I believe this is essentially the same as the workaround by <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5536129\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/tomrunia\">@tomrunia</a>, where the 5D input is reshaped to 4D. For the 3D case, say NWC, you can do the same to reshape from [N, W, C] to [-1, 1, W, C].</p>\n<p>I think you can add both the 5D and 3D case inside _fused_batch_norm (while <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5536129\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/tomrunia\">@tomrunia</a> is doing it outside _fused_batch_norm), in addition to the 2d case, which is currently already supported.</p>\n<p>Please let me know if this works.</p>", "body_text": "@siddharth-agrawal Please note that how the code currently handles the case when the input is 2D (https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/layers/python/layers/layers.py#L233): the input is reshaped to a 4D shape [-1, 1, 1, channels].\nI believe this is essentially the same as the workaround by @tomrunia, where the 5D input is reshaped to 4D. For the 3D case, say NWC, you can do the same to reshape from [N, W, C] to [-1, 1, W, C].\nI think you can add both the 5D and 3D case inside _fused_batch_norm (while @tomrunia is doing it outside _fused_batch_norm), in addition to the 2d case, which is currently already supported.\nPlease let me know if this works.", "body": "@siddharth-agrawal Please note that how the code currently handles the case when the input is 2D (https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/layers/python/layers/layers.py#L233): the input is reshaped to a 4D shape [-1, 1, 1, channels].\r\n\r\nI believe this is essentially the same as the workaround by @tomrunia, where the 5D input is reshaped to 4D. For the 3D case, say NWC, you can do the same to reshape from [N, W, C] to [-1, 1, W, C]. \r\n\r\nI think you can add both the 5D and 3D case inside _fused_batch_norm (while @tomrunia is doing it outside _fused_batch_norm), in addition to the 2d case, which is currently already supported.\r\n\r\nPlease let me know if this works."}