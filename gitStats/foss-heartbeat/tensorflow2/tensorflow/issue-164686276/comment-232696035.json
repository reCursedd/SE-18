{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/232696035", "html_url": "https://github.com/tensorflow/tensorflow/issues/3247#issuecomment-232696035", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3247", "id": 232696035, "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjY5NjAzNQ==", "user": {"login": "tanmayshankar", "id": 11453811, "node_id": "MDQ6VXNlcjExNDUzODEx", "avatar_url": "https://avatars3.githubusercontent.com/u/11453811?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tanmayshankar", "html_url": "https://github.com/tanmayshankar", "followers_url": "https://api.github.com/users/tanmayshankar/followers", "following_url": "https://api.github.com/users/tanmayshankar/following{/other_user}", "gists_url": "https://api.github.com/users/tanmayshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/tanmayshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tanmayshankar/subscriptions", "organizations_url": "https://api.github.com/users/tanmayshankar/orgs", "repos_url": "https://api.github.com/users/tanmayshankar/repos", "events_url": "https://api.github.com/users/tanmayshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/tanmayshankar/received_events", "type": "User", "site_admin": false}, "created_at": "2016-07-14T15:16:29Z", "updated_at": "2016-07-14T15:16:29Z", "author_association": "NONE", "body_html": "<p>Hi Vijay and Jianmin, thanks for taking the time to look into this.</p>\n<p>I agree that controlling padding amounts of each dimension is probably the most general scenario, but  I also like the existing abstraction of padding types in place.</p>\n<p>Until this feature is brought in, would it be possible for me to define an alternate operation to conv3d,<br>\nwhere the amount of padding for planes, rows and columns is decided case-wise based on the padding type?<br>\nIt seems that the conv_ops_3d.cc seems to be doing something similar (If I'm right, the VALID padding is some sort of default case, and SAME padding is built over that?), except that it clubs rows, columns and planes within those if statements checking padding types.</p>", "body_text": "Hi Vijay and Jianmin, thanks for taking the time to look into this.\nI agree that controlling padding amounts of each dimension is probably the most general scenario, but  I also like the existing abstraction of padding types in place.\nUntil this feature is brought in, would it be possible for me to define an alternate operation to conv3d,\nwhere the amount of padding for planes, rows and columns is decided case-wise based on the padding type?\nIt seems that the conv_ops_3d.cc seems to be doing something similar (If I'm right, the VALID padding is some sort of default case, and SAME padding is built over that?), except that it clubs rows, columns and planes within those if statements checking padding types.", "body": "Hi Vijay and Jianmin, thanks for taking the time to look into this. \n\nI agree that controlling padding amounts of each dimension is probably the most general scenario, but  I also like the existing abstraction of padding types in place. \n\nUntil this feature is brought in, would it be possible for me to define an alternate operation to conv3d, \nwhere the amount of padding for planes, rows and columns is decided case-wise based on the padding type? \nIt seems that the conv_ops_3d.cc seems to be doing something similar (If I'm right, the VALID padding is some sort of default case, and SAME padding is built over that?), except that it clubs rows, columns and planes within those if statements checking padding types. \n"}