{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/392544527", "html_url": "https://github.com/tensorflow/tensorflow/issues/3247#issuecomment-392544527", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3247", "id": 392544527, "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjU0NDUyNw==", "user": {"login": "florianletsch", "id": 1116784, "node_id": "MDQ6VXNlcjExMTY3ODQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1116784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/florianletsch", "html_url": "https://github.com/florianletsch", "followers_url": "https://api.github.com/users/florianletsch/followers", "following_url": "https://api.github.com/users/florianletsch/following{/other_user}", "gists_url": "https://api.github.com/users/florianletsch/gists{/gist_id}", "starred_url": "https://api.github.com/users/florianletsch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/florianletsch/subscriptions", "organizations_url": "https://api.github.com/users/florianletsch/orgs", "repos_url": "https://api.github.com/users/florianletsch/repos", "events_url": "https://api.github.com/users/florianletsch/events{/privacy}", "received_events_url": "https://api.github.com/users/florianletsch/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-28T14:40:34Z", "updated_at": "2018-05-28T14:40:34Z", "author_association": "NONE", "body_html": "<p>Here's the solution I've used: Set padding to be 'VALID' (= no padding), but pad manually in the spatial dimension using <code>tf.pad</code>:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c\"><span class=\"pl-c\">#</span> pad spatially</span>\npaddings <span class=\"pl-k\">=</span> tf.constant([[<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>], [<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>], [<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>], [<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>], [<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>]])\npadded <span class=\"pl-k\">=</span> tf.pad(inputs, paddings)\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> convolution without automatic padding</span>\ntf.nn.conv3d(inputs, filters, <span class=\"pl-v\">strides</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>], <span class=\"pl-v\">padding</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>VALID)<span class=\"pl-ii\"></span></span></pre></div>", "body_text": "Here's the solution I've used: Set padding to be 'VALID' (= no padding), but pad manually in the spatial dimension using tf.pad:\n# pad spatially\npaddings = tf.constant([[0, 0], [0, 0], [1, 1], [1, 1], [0, 0]])\npadded = tf.pad(inputs, paddings)\n\n# convolution without automatic padding\ntf.nn.conv3d(inputs, filters, strides=[1, 1, 1, 1, 1], padding='VALID)", "body": "Here's the solution I've used: Set padding to be 'VALID' (= no padding), but pad manually in the spatial dimension using `tf.pad`:\r\n\r\n```py\r\n# pad spatially\r\npaddings = tf.constant([[0, 0], [0, 0], [1, 1], [1, 1], [0, 0]])\r\npadded = tf.pad(inputs, paddings)\r\n\r\n# convolution without automatic padding\r\ntf.nn.conv3d(inputs, filters, strides=[1, 1, 1, 1, 1], padding='VALID)\r\n```"}