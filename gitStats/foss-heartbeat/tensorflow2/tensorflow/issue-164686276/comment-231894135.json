{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/231894135", "html_url": "https://github.com/tensorflow/tensorflow/issues/3247#issuecomment-231894135", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3247", "id": 231894135, "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTg5NDEzNQ==", "user": {"login": "vrv", "id": 463737, "node_id": "MDQ6VXNlcjQ2MzczNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/463737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vrv", "html_url": "https://github.com/vrv", "followers_url": "https://api.github.com/users/vrv/followers", "following_url": "https://api.github.com/users/vrv/following{/other_user}", "gists_url": "https://api.github.com/users/vrv/gists{/gist_id}", "starred_url": "https://api.github.com/users/vrv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vrv/subscriptions", "organizations_url": "https://api.github.com/users/vrv/orgs", "repos_url": "https://api.github.com/users/vrv/repos", "events_url": "https://api.github.com/users/vrv/events{/privacy}", "received_events_url": "https://api.github.com/users/vrv/received_events", "type": "User", "site_admin": false}, "created_at": "2016-07-11T23:19:44Z", "updated_at": "2016-07-11T23:19:44Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Unfortunately at the moment there is no way to specify different padding algorithms for different dimensions.</p>\n<p>The ideal way to handle this (and other future feature requests like this) would be to support explicit padding -- the user passes the amount of padding on the 'top' and 'bottom' of each dimension, so they have full control of the algorithm.</p>\n<p>To do this, code that calls into eigen_spatial_convolution.h and cuboid_convolution.h (etc.) would need to call a version of the interfaces that passes the explicit dimensions.  Right now we pass 'padding algorithms.'   For example: <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/eigen_spatial_convolutions.h#L932\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/eigen_spatial_convolutions.h#L932</a> would need to be changed to take explicit padding values instead of 'padding_type'.  We could then change the API that has padding_type to call into the one that provides the explicit padding dimensions, to maximize code reuse.</p>\n<p>This would be a major/difficult change for someone not familiar with the codebase, and it's something we can track internally.</p>", "body_text": "Unfortunately at the moment there is no way to specify different padding algorithms for different dimensions.\nThe ideal way to handle this (and other future feature requests like this) would be to support explicit padding -- the user passes the amount of padding on the 'top' and 'bottom' of each dimension, so they have full control of the algorithm.\nTo do this, code that calls into eigen_spatial_convolution.h and cuboid_convolution.h (etc.) would need to call a version of the interfaces that passes the explicit dimensions.  Right now we pass 'padding algorithms.'   For example: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/eigen_spatial_convolutions.h#L932 would need to be changed to take explicit padding values instead of 'padding_type'.  We could then change the API that has padding_type to call into the one that provides the explicit padding dimensions, to maximize code reuse.\nThis would be a major/difficult change for someone not familiar with the codebase, and it's something we can track internally.", "body": "Unfortunately at the moment there is no way to specify different padding algorithms for different dimensions.\n\nThe ideal way to handle this (and other future feature requests like this) would be to support explicit padding -- the user passes the amount of padding on the 'top' and 'bottom' of each dimension, so they have full control of the algorithm.\n\nTo do this, code that calls into eigen_spatial_convolution.h and cuboid_convolution.h (etc.) would need to call a version of the interfaces that passes the explicit dimensions.  Right now we pass 'padding algorithms.'   For example: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/eigen_spatial_convolutions.h#L932 would need to be changed to take explicit padding values instead of 'padding_type'.  We could then change the API that has padding_type to call into the one that provides the explicit padding dimensions, to maximize code reuse.\n\nThis would be a major/difficult change for someone not familiar with the codebase, and it's something we can track internally. \n"}