{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7118", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7118/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7118/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7118/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/7118", "id": 203763687, "node_id": "MDU6SXNzdWUyMDM3NjM2ODc=", "number": 7118, "title": "Cannot run TensorFlow on GPU - RHEL 6", "user": {"login": "Ettrai", "id": 5682555, "node_id": "MDQ6VXNlcjU2ODI1NTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/5682555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ettrai", "html_url": "https://github.com/Ettrai", "followers_url": "https://api.github.com/users/Ettrai/followers", "following_url": "https://api.github.com/users/Ettrai/following{/other_user}", "gists_url": "https://api.github.com/users/Ettrai/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ettrai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ettrai/subscriptions", "organizations_url": "https://api.github.com/users/Ettrai/orgs", "repos_url": "https://api.github.com/users/Ettrai/repos", "events_url": "https://api.github.com/users/Ettrai/events{/privacy}", "received_events_url": "https://api.github.com/users/Ettrai/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586558, "node_id": "MDU6TGFiZWw0MDQ1ODY1NTg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:community%20support", "name": "stat:community support", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "gunan", "id": 7946809, "node_id": "MDQ6VXNlcjc5NDY4MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7946809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gunan", "html_url": "https://github.com/gunan", "followers_url": "https://api.github.com/users/gunan/followers", "following_url": "https://api.github.com/users/gunan/following{/other_user}", "gists_url": "https://api.github.com/users/gunan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gunan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gunan/subscriptions", "organizations_url": "https://api.github.com/users/gunan/orgs", "repos_url": "https://api.github.com/users/gunan/repos", "events_url": "https://api.github.com/users/gunan/events{/privacy}", "received_events_url": "https://api.github.com/users/gunan/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "gunan", "id": 7946809, "node_id": "MDQ6VXNlcjc5NDY4MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7946809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gunan", "html_url": "https://github.com/gunan", "followers_url": "https://api.github.com/users/gunan/followers", "following_url": "https://api.github.com/users/gunan/following{/other_user}", "gists_url": "https://api.github.com/users/gunan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gunan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gunan/subscriptions", "organizations_url": "https://api.github.com/users/gunan/orgs", "repos_url": "https://api.github.com/users/gunan/repos", "events_url": "https://api.github.com/users/gunan/events{/privacy}", "received_events_url": "https://api.github.com/users/gunan/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2017-01-27T23:14:06Z", "updated_at": "2017-02-12T09:17:28Z", "closed_at": "2017-02-12T09:17:28Z", "author_association": "NONE", "body_html": "<p>Hello,<br>\nI have been trying for days to take advantage of the in one of the machines I have access to.<br>\nGiven that <strong>I have no root</strong>  access I had to compile everything from source.<br>\nI tried both the last stable release and the current master branch but I had no luck at running TensorFlow on the GPU.</p>\n<p>My setup is the following :<br>\nRed Hat EL 6.8 (no root access)<br>\nPython 2.7.8<br>\nvirtualenv 13.1.0<br>\ndevtoolset-4 (GCC 5.3.1)<br>\nBazel 0.4.3 (built from source)<br>\nGeForce GTX680 (compute capability 3.0)<br>\nCuda Toolkit 8.0<br>\ncuDNN 5.1</p>\n<p>I had to modify few configuration files such that the configure script could complete successfully :</p>\n<div class=\"highlight highlight-source-diff\"><pre><span class=\"pl-c1\">diff --git a/configure b/configure</span>\nindex a8e7bb773..002094aba 100755\n<span class=\"pl-md\">--- a/configure</span>\n<span class=\"pl-mi1\">+++ b/configure</span>\n<span class=\"pl-mdr\">@@ -39,7 +39,7 @@</span> function bazel_clean_and_fetch() {\n   # bazel clean --expunge currently doesn't work on Windows\n   # TODO(pcloudy): Re-enable it after bazel clean --expunge is fixed.\n   if ! is_windows; then\n<span class=\"pl-md\"><span class=\"pl-md\">-</span>    bazel clean --expunge</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>    bazel clean --expunge_async</span>\n   fi\n   bazel fetch \"//tensorflow/... -//tensorflow/examples/android/...\"\n }\n\n\n<span class=\"pl-c1\">diff --git a/tensorflow/core/platform/default/build_config.bzl b/tensorflow/core/platform/default/build_config.bzl</span>\nindex ebf835d11..824471640 100644\n<span class=\"pl-md\">--- a/tensorflow/core/platform/default/build_config.bzl</span>\n<span class=\"pl-mi1\">+++ b/tensorflow/core/platform/default/build_config.bzl</span>\n<span class=\"pl-mdr\">@@ -8,7 +8,7 @@</span> load(\"//tensorflow:tensorflow.bzl\", \"if_not_mobile\")\n WITH_GCP_SUPPORT = False\n WITH_HDFS_SUPPORT = False\n WITH_XLA_SUPPORT = False\n<span class=\"pl-md\"><span class=\"pl-md\">-</span>WITH_JEMALLOC = True</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>WITH_JEMALLOC = False</span>\n \n # Appends a suffix to a list of deps.\n def tf_deps(deps, suffix):\n\n\n<span class=\"pl-c1\">diff --git a/tensorflow/tensorflow.bzl b/tensorflow/tensorflow.bzl</span>\nindex 7fa7e4a91..ef41f5cd9 100644\n<span class=\"pl-md\">--- a/tensorflow/tensorflow.bzl</span>\n<span class=\"pl-mi1\">+++ b/tensorflow/tensorflow.bzl</span>\n<span class=\"pl-mdr\">@@ -714,7 +714,8 @@</span> def tf_custom_op_library(name, srcs=[], gpu_srcs=[], deps=[]):\n   )\n \n def tf_extension_linkopts():\n<span class=\"pl-md\"><span class=\"pl-md\">-</span>  return []  # No extension link opts</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>  #return []  # No extension link opts</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>  return [\"-lrt\"] </span>\n \n def tf_extension_copts():\n   return []  # No extension c opts\n\n\n<span class=\"pl-c1\">diff --git a/third_party/gpus/crosstool/CROSSTOOL.tpl b/third_party/gpus/crosstool/CROSSTOOL.tpl</span>\nindex b77a45c32..e1fb068a2 100644\n<span class=\"pl-md\">--- a/third_party/gpus/crosstool/CROSSTOOL.tpl</span>\n<span class=\"pl-mi1\">+++ b/third_party/gpus/crosstool/CROSSTOOL.tpl</span>\n<span class=\"pl-mdr\">@@ -56,6 +56,8 @@</span> toolchain {\n   cxx_flag: \"-std=c++11\"\n   linker_flag: \"-Wl,-no-as-needed\"\n   linker_flag: \"-lstdc++\"\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>  linker_flag: \"-lm\"</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>  linker_flag: \"-lrt\"</span>\n   linker_flag: \"-B/usr/bin/\"</pre></div>\n<p>At the point in which I have to ask bazel to build TensorFlow I face a weird problem.<br>\nIf I use <a href=\"https://github.com/tensorflow/tensorflow/issues/4944\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/4944/hovercard\">--config=cuda8.0</a> the building process completes but the gpu is never used nor detected.</p>\n<p>If I use --config=cuda the building process fails with the following error</p>\n<pre lang=\"bazel\"><code>ERROR: /home/emt1627/.cache/bazel/_bazel_emt1627/aeec3eab67314b40e280b02ed0028dfc/external/nasm/BUILD:8:1: undeclared inclusion(s) in rule '@nasm//:nasm':\nthis rule is missing dependency declarations for the following files included by 'external/nasm/regvals.c':\n  '/opt/rh/devtoolset-4/root/usr/lib/gcc/x86_64-redhat-linux/5.3.1/include/stddef.h'\n  '/opt/rh/devtoolset-4/root/usr/lib/gcc/x86_64-redhat-linux/5.3.1/include/stdarg.h'\n  '/opt/rh/devtoolset-4/root/usr/lib/gcc/x86_64-redhat-linux/5.3.1/include/stdint.h'.\nTarget //tensorflow/tools/pip_package:build_pip_package failed to build\nUse --verbose_failures to see the command lines of failed build steps.\n</code></pre>\n<p>If I run it again I get a similar error</p>\n<pre lang=\"bazel\"><code>ERROR: /home/emt1627/.cache/bazel/_bazel_emt1627/aeec3eab67314b40e280b02ed0028dfc/external/nasm/BUILD:8:1: undeclared inclusion(s) in rule '@nasm//:nasm':\nthis rule is missing dependency declarations for the following files included by 'external/nasm/iflag.c':\n  '/opt/rh/devtoolset-4/root/usr/lib/gcc/x86_64-redhat-linux/5.3.1/include/stdint.h'\n  '/opt/rh/devtoolset-4/root/usr/lib/gcc/x86_64-redhat-linux/5.3.1/include/stddef.h'\n  '/opt/rh/devtoolset-4/root/usr/lib/gcc/x86_64-redhat-linux/5.3.1/include/stdarg.h'.\nTarget //tensorflow/tools/pip_package:build_pip_package failed to build\nUse --verbose_failures to see the command lines of failed build steps.\n</code></pre>\n<p>I have also tried different configurations of Cuda toolkit and cuDNN library, but those all led nowhere near the solution.</p>", "body_text": "Hello,\nI have been trying for days to take advantage of the in one of the machines I have access to.\nGiven that I have no root  access I had to compile everything from source.\nI tried both the last stable release and the current master branch but I had no luck at running TensorFlow on the GPU.\nMy setup is the following :\nRed Hat EL 6.8 (no root access)\nPython 2.7.8\nvirtualenv 13.1.0\ndevtoolset-4 (GCC 5.3.1)\nBazel 0.4.3 (built from source)\nGeForce GTX680 (compute capability 3.0)\nCuda Toolkit 8.0\ncuDNN 5.1\nI had to modify few configuration files such that the configure script could complete successfully :\ndiff --git a/configure b/configure\nindex a8e7bb773..002094aba 100755\n--- a/configure\n+++ b/configure\n@@ -39,7 +39,7 @@ function bazel_clean_and_fetch() {\n   # bazel clean --expunge currently doesn't work on Windows\n   # TODO(pcloudy): Re-enable it after bazel clean --expunge is fixed.\n   if ! is_windows; then\n-    bazel clean --expunge\n+    bazel clean --expunge_async\n   fi\n   bazel fetch \"//tensorflow/... -//tensorflow/examples/android/...\"\n }\n\n\ndiff --git a/tensorflow/core/platform/default/build_config.bzl b/tensorflow/core/platform/default/build_config.bzl\nindex ebf835d11..824471640 100644\n--- a/tensorflow/core/platform/default/build_config.bzl\n+++ b/tensorflow/core/platform/default/build_config.bzl\n@@ -8,7 +8,7 @@ load(\"//tensorflow:tensorflow.bzl\", \"if_not_mobile\")\n WITH_GCP_SUPPORT = False\n WITH_HDFS_SUPPORT = False\n WITH_XLA_SUPPORT = False\n-WITH_JEMALLOC = True\n+WITH_JEMALLOC = False\n \n # Appends a suffix to a list of deps.\n def tf_deps(deps, suffix):\n\n\ndiff --git a/tensorflow/tensorflow.bzl b/tensorflow/tensorflow.bzl\nindex 7fa7e4a91..ef41f5cd9 100644\n--- a/tensorflow/tensorflow.bzl\n+++ b/tensorflow/tensorflow.bzl\n@@ -714,7 +714,8 @@ def tf_custom_op_library(name, srcs=[], gpu_srcs=[], deps=[]):\n   )\n \n def tf_extension_linkopts():\n-  return []  # No extension link opts\n+  #return []  # No extension link opts\n+  return [\"-lrt\"] \n \n def tf_extension_copts():\n   return []  # No extension c opts\n\n\ndiff --git a/third_party/gpus/crosstool/CROSSTOOL.tpl b/third_party/gpus/crosstool/CROSSTOOL.tpl\nindex b77a45c32..e1fb068a2 100644\n--- a/third_party/gpus/crosstool/CROSSTOOL.tpl\n+++ b/third_party/gpus/crosstool/CROSSTOOL.tpl\n@@ -56,6 +56,8 @@ toolchain {\n   cxx_flag: \"-std=c++11\"\n   linker_flag: \"-Wl,-no-as-needed\"\n   linker_flag: \"-lstdc++\"\n+  linker_flag: \"-lm\"\n+  linker_flag: \"-lrt\"\n   linker_flag: \"-B/usr/bin/\"\nAt the point in which I have to ask bazel to build TensorFlow I face a weird problem.\nIf I use --config=cuda8.0 the building process completes but the gpu is never used nor detected.\nIf I use --config=cuda the building process fails with the following error\nERROR: /home/emt1627/.cache/bazel/_bazel_emt1627/aeec3eab67314b40e280b02ed0028dfc/external/nasm/BUILD:8:1: undeclared inclusion(s) in rule '@nasm//:nasm':\nthis rule is missing dependency declarations for the following files included by 'external/nasm/regvals.c':\n  '/opt/rh/devtoolset-4/root/usr/lib/gcc/x86_64-redhat-linux/5.3.1/include/stddef.h'\n  '/opt/rh/devtoolset-4/root/usr/lib/gcc/x86_64-redhat-linux/5.3.1/include/stdarg.h'\n  '/opt/rh/devtoolset-4/root/usr/lib/gcc/x86_64-redhat-linux/5.3.1/include/stdint.h'.\nTarget //tensorflow/tools/pip_package:build_pip_package failed to build\nUse --verbose_failures to see the command lines of failed build steps.\n\nIf I run it again I get a similar error\nERROR: /home/emt1627/.cache/bazel/_bazel_emt1627/aeec3eab67314b40e280b02ed0028dfc/external/nasm/BUILD:8:1: undeclared inclusion(s) in rule '@nasm//:nasm':\nthis rule is missing dependency declarations for the following files included by 'external/nasm/iflag.c':\n  '/opt/rh/devtoolset-4/root/usr/lib/gcc/x86_64-redhat-linux/5.3.1/include/stdint.h'\n  '/opt/rh/devtoolset-4/root/usr/lib/gcc/x86_64-redhat-linux/5.3.1/include/stddef.h'\n  '/opt/rh/devtoolset-4/root/usr/lib/gcc/x86_64-redhat-linux/5.3.1/include/stdarg.h'.\nTarget //tensorflow/tools/pip_package:build_pip_package failed to build\nUse --verbose_failures to see the command lines of failed build steps.\n\nI have also tried different configurations of Cuda toolkit and cuDNN library, but those all led nowhere near the solution.", "body": "Hello,\r\nI have been trying for days to take advantage of the in one of the machines I have access to. \r\nGiven that **I have no root**  access I had to compile everything from source. \r\nI tried both the last stable release and the current master branch but I had no luck at running TensorFlow on the GPU. \r\n\r\nMy setup is the following : \r\nRed Hat EL 6.8 (no root access)\r\nPython 2.7.8\r\nvirtualenv 13.1.0\r\ndevtoolset-4 (GCC 5.3.1)\r\nBazel 0.4.3 (built from source)\r\nGeForce GTX680 (compute capability 3.0)\r\nCuda Toolkit 8.0\r\ncuDNN 5.1\r\n\r\nI had to modify few configuration files such that the configure script could complete successfully : \r\n```diff\r\ndiff --git a/configure b/configure\r\nindex a8e7bb773..002094aba 100755\r\n--- a/configure\r\n+++ b/configure\r\n@@ -39,7 +39,7 @@ function bazel_clean_and_fetch() {\r\n   # bazel clean --expunge currently doesn't work on Windows\r\n   # TODO(pcloudy): Re-enable it after bazel clean --expunge is fixed.\r\n   if ! is_windows; then\r\n-    bazel clean --expunge\r\n+    bazel clean --expunge_async\r\n   fi\r\n   bazel fetch \"//tensorflow/... -//tensorflow/examples/android/...\"\r\n }\r\n\r\n\r\ndiff --git a/tensorflow/core/platform/default/build_config.bzl b/tensorflow/core/platform/default/build_config.bzl\r\nindex ebf835d11..824471640 100644\r\n--- a/tensorflow/core/platform/default/build_config.bzl\r\n+++ b/tensorflow/core/platform/default/build_config.bzl\r\n@@ -8,7 +8,7 @@ load(\"//tensorflow:tensorflow.bzl\", \"if_not_mobile\")\r\n WITH_GCP_SUPPORT = False\r\n WITH_HDFS_SUPPORT = False\r\n WITH_XLA_SUPPORT = False\r\n-WITH_JEMALLOC = True\r\n+WITH_JEMALLOC = False\r\n \r\n # Appends a suffix to a list of deps.\r\n def tf_deps(deps, suffix):\r\n\r\n\r\ndiff --git a/tensorflow/tensorflow.bzl b/tensorflow/tensorflow.bzl\r\nindex 7fa7e4a91..ef41f5cd9 100644\r\n--- a/tensorflow/tensorflow.bzl\r\n+++ b/tensorflow/tensorflow.bzl\r\n@@ -714,7 +714,8 @@ def tf_custom_op_library(name, srcs=[], gpu_srcs=[], deps=[]):\r\n   )\r\n \r\n def tf_extension_linkopts():\r\n-  return []  # No extension link opts\r\n+  #return []  # No extension link opts\r\n+  return [\"-lrt\"] \r\n \r\n def tf_extension_copts():\r\n   return []  # No extension c opts\r\n\r\n\r\ndiff --git a/third_party/gpus/crosstool/CROSSTOOL.tpl b/third_party/gpus/crosstool/CROSSTOOL.tpl\r\nindex b77a45c32..e1fb068a2 100644\r\n--- a/third_party/gpus/crosstool/CROSSTOOL.tpl\r\n+++ b/third_party/gpus/crosstool/CROSSTOOL.tpl\r\n@@ -56,6 +56,8 @@ toolchain {\r\n   cxx_flag: \"-std=c++11\"\r\n   linker_flag: \"-Wl,-no-as-needed\"\r\n   linker_flag: \"-lstdc++\"\r\n+  linker_flag: \"-lm\"\r\n+  linker_flag: \"-lrt\"\r\n   linker_flag: \"-B/usr/bin/\"\r\n```\r\n\r\nAt the point in which I have to ask bazel to build TensorFlow I face a weird problem. \r\nIf I use [--config=cuda8.0](https://github.com/tensorflow/tensorflow/issues/4944) the building process completes but the gpu is never used nor detected. \r\n\r\nIf I use --config=cuda the building process fails with the following error \r\n\r\n```bazel\r\nERROR: /home/emt1627/.cache/bazel/_bazel_emt1627/aeec3eab67314b40e280b02ed0028dfc/external/nasm/BUILD:8:1: undeclared inclusion(s) in rule '@nasm//:nasm':\r\nthis rule is missing dependency declarations for the following files included by 'external/nasm/regvals.c':\r\n  '/opt/rh/devtoolset-4/root/usr/lib/gcc/x86_64-redhat-linux/5.3.1/include/stddef.h'\r\n  '/opt/rh/devtoolset-4/root/usr/lib/gcc/x86_64-redhat-linux/5.3.1/include/stdarg.h'\r\n  '/opt/rh/devtoolset-4/root/usr/lib/gcc/x86_64-redhat-linux/5.3.1/include/stdint.h'.\r\nTarget //tensorflow/tools/pip_package:build_pip_package failed to build\r\nUse --verbose_failures to see the command lines of failed build steps.\r\n```\r\n \r\nIf I run it again I get a similar error \r\n\r\n```bazel\r\nERROR: /home/emt1627/.cache/bazel/_bazel_emt1627/aeec3eab67314b40e280b02ed0028dfc/external/nasm/BUILD:8:1: undeclared inclusion(s) in rule '@nasm//:nasm':\r\nthis rule is missing dependency declarations for the following files included by 'external/nasm/iflag.c':\r\n  '/opt/rh/devtoolset-4/root/usr/lib/gcc/x86_64-redhat-linux/5.3.1/include/stdint.h'\r\n  '/opt/rh/devtoolset-4/root/usr/lib/gcc/x86_64-redhat-linux/5.3.1/include/stddef.h'\r\n  '/opt/rh/devtoolset-4/root/usr/lib/gcc/x86_64-redhat-linux/5.3.1/include/stdarg.h'.\r\nTarget //tensorflow/tools/pip_package:build_pip_package failed to build\r\nUse --verbose_failures to see the command lines of failed build steps.\r\n```\r\n\r\nI have also tried different configurations of Cuda toolkit and cuDNN library, but those all led nowhere near the solution.\r\n\r\n\r\n\r\n\r\n\r\n\r\n"}