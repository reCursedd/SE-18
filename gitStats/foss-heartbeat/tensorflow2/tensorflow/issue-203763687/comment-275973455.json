{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/275973455", "html_url": "https://github.com/tensorflow/tensorflow/issues/7118#issuecomment-275973455", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7118", "id": 275973455, "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTk3MzQ1NQ==", "user": {"login": "Ettrai", "id": 5682555, "node_id": "MDQ6VXNlcjU2ODI1NTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/5682555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ettrai", "html_url": "https://github.com/Ettrai", "followers_url": "https://api.github.com/users/Ettrai/followers", "following_url": "https://api.github.com/users/Ettrai/following{/other_user}", "gists_url": "https://api.github.com/users/Ettrai/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ettrai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ettrai/subscriptions", "organizations_url": "https://api.github.com/users/Ettrai/orgs", "repos_url": "https://api.github.com/users/Ettrai/repos", "events_url": "https://api.github.com/users/Ettrai/events{/privacy}", "received_events_url": "https://api.github.com/users/Ettrai/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-30T03:30:08Z", "updated_at": "2017-01-30T03:30:50Z", "author_association": "NONE", "body_html": "<p>I managed to build TensorFlow 0.12.1 with GPU support on the following configuration :</p>\n<p>Red Hat EL 6.8 (no root access)<br>\nPython 2.7.8<br>\nvirtualenv 13.1.0<br>\ndevtoolset-4 (GCC 5.3.1)<br>\nBazel 0.4.3 (built from source)<br>\nGeForce GTX680 (compute capability 3.0)<br>\nCuda Toolkit 8.0<br>\ncuDNN 5.1</p>\n<p>This is my final diff :</p>\n<div class=\"highlight highlight-source-diff\"><pre><span class=\"pl-c1\">diff --git a/configure b/configure</span>\nindex 3fc0b5909..33e73b8d0 100755\n<span class=\"pl-md\">--- a/configure</span>\n<span class=\"pl-mi1\">+++ b/configure</span>\n<span class=\"pl-mdr\">@@ -22,7 +22,7 @@</span> function bazel_clean_and_fetch() {\n   # bazel clean --expunge currently doesn't work on Windows\n   # TODO(pcloudy): Re-enable it after bazel clean --expunge is fixed.\n   if ! is_windows; then\n<span class=\"pl-md\"><span class=\"pl-md\">-</span>    bazel clean --expunge</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>    bazel clean --expunge_async</span>\n   fi\n   bazel fetch //tensorflow/...\n }\n\n<span class=\"pl-c1\">diff --git a/tensorflow/tensorflow.bzl b/tensorflow/tensorflow.bzl</span>\nindex d78cb7b57..42bf7c8b6 100644\n<span class=\"pl-md\">--- a/tensorflow/tensorflow.bzl</span>\n<span class=\"pl-mi1\">+++ b/tensorflow/tensorflow.bzl</span>\n<span class=\"pl-mdr\">@@ -792,7 +792,7 @@</span> def tf_custom_op_library(name, srcs=[], gpu_srcs=[], deps=[]):\n   )\n\n def tf_extension_linkopts():\n<span class=\"pl-md\"><span class=\"pl-md\">-</span>  return []  # No extension link opts</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>  return [\"-lrt\"]</span>\n\n def tf_extension_copts():\n   return []  # No extension c opts\n\n<span class=\"pl-c1\">diff --git a/tensorflow/workspace.bzl b/tensorflow/workspace.bzl</span>\nindex 06e16cdb0..d1ac0544e 100644\n<span class=\"pl-md\">--- a/tensorflow/workspace.bzl</span>\n<span class=\"pl-mi1\">+++ b/tensorflow/workspace.bzl</span>\n<span class=\"pl-mdr\">@@ -228,7 +228,7 @@</span> def tf_workspace(path_prefix = \"\", tf_repo_name = \"\"):\n\n   native.new_http_archive(\n     name = \"zlib_archive\",\n<span class=\"pl-md\"><span class=\"pl-md\">-</span>    url = \"http://zlib.net/zlib-1.2.8.tar.gz\",</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>    url = \"http://zlib.net/fossils/zlib-1.2.8.tar.gz\",</span>\n     sha256 = \"36658cb768a54c1d4dec43c3116c27ed893e88b02ecfcb44f2166f9c0b7f2a0d\",\n     strip_prefix = \"zlib-1.2.8\",\n     build_file = str(Label(\"//:zlib.BUILD\")),\n\n<span class=\"pl-c1\">diff --git a/third_party/gpus/crosstool/CROSSTOOL.tpl b/third_party/gpus/crosstool/CROSSTOOL.tpl</span>\nindex 3ce6b74a5..06e572691 100644\n<span class=\"pl-md\">--- a/third_party/gpus/crosstool/CROSSTOOL.tpl</span>\n<span class=\"pl-mi1\">+++ b/third_party/gpus/crosstool/CROSSTOOL.tpl</span>\n<span class=\"pl-mdr\">@@ -55,7 +55,9 @@</span> toolchain {\n   # and the device compiler to use \"-std=c++11\".\n   cxx_flag: \"-std=c++11\"\n   linker_flag: \"-lstdc++\"\n<span class=\"pl-md\"><span class=\"pl-md\">-</span>  linker_flag: \"-B/usr/bin/\"</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>  linker_flag: \"-lm\"</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>  linker_flag: \"-lrt\"</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>  linker_flag: \"-B/opt/rh/devtoolset-4/root/usr/bin\"</span>\n\n %{gcc_host_compiler_includes}\n   tool_path { name: \"gcov\" path: \"/usr/bin/gcov\" }\n<span class=\"pl-mdr\">@@ -121,6 +123,8 @@</span> toolchain {\n\n   # Include directory for cuda headers.\n   cxx_builtin_include_directory: \"%{cuda_include_path}\"\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>  cxx_builtin_include_directory: \"/opt/rh/devtoolset-4/root/usr/lib\"</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>  cxx_builtin_include_directory: \"/opt/rh/devtoolset-4/root/usr/include\"</span>\n\n   compilation_mode_flags {\n     mode: DBG</pre></div>\n<p>I hope this helps and thank you <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=7946809\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/gunan\">@gunan</a> !</p>", "body_text": "I managed to build TensorFlow 0.12.1 with GPU support on the following configuration :\nRed Hat EL 6.8 (no root access)\nPython 2.7.8\nvirtualenv 13.1.0\ndevtoolset-4 (GCC 5.3.1)\nBazel 0.4.3 (built from source)\nGeForce GTX680 (compute capability 3.0)\nCuda Toolkit 8.0\ncuDNN 5.1\nThis is my final diff :\ndiff --git a/configure b/configure\nindex 3fc0b5909..33e73b8d0 100755\n--- a/configure\n+++ b/configure\n@@ -22,7 +22,7 @@ function bazel_clean_and_fetch() {\n   # bazel clean --expunge currently doesn't work on Windows\n   # TODO(pcloudy): Re-enable it after bazel clean --expunge is fixed.\n   if ! is_windows; then\n-    bazel clean --expunge\n+    bazel clean --expunge_async\n   fi\n   bazel fetch //tensorflow/...\n }\n\ndiff --git a/tensorflow/tensorflow.bzl b/tensorflow/tensorflow.bzl\nindex d78cb7b57..42bf7c8b6 100644\n--- a/tensorflow/tensorflow.bzl\n+++ b/tensorflow/tensorflow.bzl\n@@ -792,7 +792,7 @@ def tf_custom_op_library(name, srcs=[], gpu_srcs=[], deps=[]):\n   )\n\n def tf_extension_linkopts():\n-  return []  # No extension link opts\n+  return [\"-lrt\"]\n\n def tf_extension_copts():\n   return []  # No extension c opts\n\ndiff --git a/tensorflow/workspace.bzl b/tensorflow/workspace.bzl\nindex 06e16cdb0..d1ac0544e 100644\n--- a/tensorflow/workspace.bzl\n+++ b/tensorflow/workspace.bzl\n@@ -228,7 +228,7 @@ def tf_workspace(path_prefix = \"\", tf_repo_name = \"\"):\n\n   native.new_http_archive(\n     name = \"zlib_archive\",\n-    url = \"http://zlib.net/zlib-1.2.8.tar.gz\",\n+    url = \"http://zlib.net/fossils/zlib-1.2.8.tar.gz\",\n     sha256 = \"36658cb768a54c1d4dec43c3116c27ed893e88b02ecfcb44f2166f9c0b7f2a0d\",\n     strip_prefix = \"zlib-1.2.8\",\n     build_file = str(Label(\"//:zlib.BUILD\")),\n\ndiff --git a/third_party/gpus/crosstool/CROSSTOOL.tpl b/third_party/gpus/crosstool/CROSSTOOL.tpl\nindex 3ce6b74a5..06e572691 100644\n--- a/third_party/gpus/crosstool/CROSSTOOL.tpl\n+++ b/third_party/gpus/crosstool/CROSSTOOL.tpl\n@@ -55,7 +55,9 @@ toolchain {\n   # and the device compiler to use \"-std=c++11\".\n   cxx_flag: \"-std=c++11\"\n   linker_flag: \"-lstdc++\"\n-  linker_flag: \"-B/usr/bin/\"\n+  linker_flag: \"-lm\"\n+  linker_flag: \"-lrt\"\n+  linker_flag: \"-B/opt/rh/devtoolset-4/root/usr/bin\"\n\n %{gcc_host_compiler_includes}\n   tool_path { name: \"gcov\" path: \"/usr/bin/gcov\" }\n@@ -121,6 +123,8 @@ toolchain {\n\n   # Include directory for cuda headers.\n   cxx_builtin_include_directory: \"%{cuda_include_path}\"\n+  cxx_builtin_include_directory: \"/opt/rh/devtoolset-4/root/usr/lib\"\n+  cxx_builtin_include_directory: \"/opt/rh/devtoolset-4/root/usr/include\"\n\n   compilation_mode_flags {\n     mode: DBG\nI hope this helps and thank you @gunan !", "body": "I managed to build TensorFlow 0.12.1 with GPU support on the following configuration : \r\n\r\nRed Hat EL 6.8 (no root access)\r\nPython 2.7.8\r\nvirtualenv 13.1.0\r\ndevtoolset-4 (GCC 5.3.1)\r\nBazel 0.4.3 (built from source)\r\nGeForce GTX680 (compute capability 3.0)\r\nCuda Toolkit 8.0\r\ncuDNN 5.1\r\n\r\nThis is my final diff : \r\n\r\n```diff\r\ndiff --git a/configure b/configure\r\nindex 3fc0b5909..33e73b8d0 100755\r\n--- a/configure\r\n+++ b/configure\r\n@@ -22,7 +22,7 @@ function bazel_clean_and_fetch() {\r\n   # bazel clean --expunge currently doesn't work on Windows\r\n   # TODO(pcloudy): Re-enable it after bazel clean --expunge is fixed.\r\n   if ! is_windows; then\r\n-    bazel clean --expunge\r\n+    bazel clean --expunge_async\r\n   fi\r\n   bazel fetch //tensorflow/...\r\n }\r\n\r\ndiff --git a/tensorflow/tensorflow.bzl b/tensorflow/tensorflow.bzl\r\nindex d78cb7b57..42bf7c8b6 100644\r\n--- a/tensorflow/tensorflow.bzl\r\n+++ b/tensorflow/tensorflow.bzl\r\n@@ -792,7 +792,7 @@ def tf_custom_op_library(name, srcs=[], gpu_srcs=[], deps=[]):\r\n   )\r\n\r\n def tf_extension_linkopts():\r\n-  return []  # No extension link opts\r\n+  return [\"-lrt\"]\r\n\r\n def tf_extension_copts():\r\n   return []  # No extension c opts\r\n\r\ndiff --git a/tensorflow/workspace.bzl b/tensorflow/workspace.bzl\r\nindex 06e16cdb0..d1ac0544e 100644\r\n--- a/tensorflow/workspace.bzl\r\n+++ b/tensorflow/workspace.bzl\r\n@@ -228,7 +228,7 @@ def tf_workspace(path_prefix = \"\", tf_repo_name = \"\"):\r\n\r\n   native.new_http_archive(\r\n     name = \"zlib_archive\",\r\n-    url = \"http://zlib.net/zlib-1.2.8.tar.gz\",\r\n+    url = \"http://zlib.net/fossils/zlib-1.2.8.tar.gz\",\r\n     sha256 = \"36658cb768a54c1d4dec43c3116c27ed893e88b02ecfcb44f2166f9c0b7f2a0d\",\r\n     strip_prefix = \"zlib-1.2.8\",\r\n     build_file = str(Label(\"//:zlib.BUILD\")),\r\n\r\ndiff --git a/third_party/gpus/crosstool/CROSSTOOL.tpl b/third_party/gpus/crosstool/CROSSTOOL.tpl\r\nindex 3ce6b74a5..06e572691 100644\r\n--- a/third_party/gpus/crosstool/CROSSTOOL.tpl\r\n+++ b/third_party/gpus/crosstool/CROSSTOOL.tpl\r\n@@ -55,7 +55,9 @@ toolchain {\r\n   # and the device compiler to use \"-std=c++11\".\r\n   cxx_flag: \"-std=c++11\"\r\n   linker_flag: \"-lstdc++\"\r\n-  linker_flag: \"-B/usr/bin/\"\r\n+  linker_flag: \"-lm\"\r\n+  linker_flag: \"-lrt\"\r\n+  linker_flag: \"-B/opt/rh/devtoolset-4/root/usr/bin\"\r\n\r\n %{gcc_host_compiler_includes}\r\n   tool_path { name: \"gcov\" path: \"/usr/bin/gcov\" }\r\n@@ -121,6 +123,8 @@ toolchain {\r\n\r\n   # Include directory for cuda headers.\r\n   cxx_builtin_include_directory: \"%{cuda_include_path}\"\r\n+  cxx_builtin_include_directory: \"/opt/rh/devtoolset-4/root/usr/lib\"\r\n+  cxx_builtin_include_directory: \"/opt/rh/devtoolset-4/root/usr/include\"\r\n\r\n   compilation_mode_flags {\r\n     mode: DBG\r\n```\r\n\r\nI hope this helps and thank you @gunan !\r\n"}