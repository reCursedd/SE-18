{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20738", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20738/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20738/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20738/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20738", "id": 340641504, "node_id": "MDU6SXNzdWUzNDA2NDE1MDQ=", "number": 20738, "title": "AttributeError: 'DataFrame' object has no attribute 'dtype'", "user": {"login": "attitude95", "id": 12265711, "node_id": "MDQ6VXNlcjEyMjY1NzEx", "avatar_url": "https://avatars2.githubusercontent.com/u/12265711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/attitude95", "html_url": "https://github.com/attitude95", "followers_url": "https://api.github.com/users/attitude95/followers", "following_url": "https://api.github.com/users/attitude95/following{/other_user}", "gists_url": "https://api.github.com/users/attitude95/gists{/gist_id}", "starred_url": "https://api.github.com/users/attitude95/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/attitude95/subscriptions", "organizations_url": "https://api.github.com/users/attitude95/orgs", "repos_url": "https://api.github.com/users/attitude95/repos", "events_url": "https://api.github.com/users/attitude95/events{/privacy}", "received_events_url": "https://api.github.com/users/attitude95/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "tatianashp", "id": 986732, "node_id": "MDQ6VXNlcjk4NjczMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/986732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatianashp", "html_url": "https://github.com/tatianashp", "followers_url": "https://api.github.com/users/tatianashp/followers", "following_url": "https://api.github.com/users/tatianashp/following{/other_user}", "gists_url": "https://api.github.com/users/tatianashp/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatianashp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatianashp/subscriptions", "organizations_url": "https://api.github.com/users/tatianashp/orgs", "repos_url": "https://api.github.com/users/tatianashp/repos", "events_url": "https://api.github.com/users/tatianashp/events{/privacy}", "received_events_url": "https://api.github.com/users/tatianashp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tatianashp", "id": 986732, "node_id": "MDQ6VXNlcjk4NjczMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/986732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatianashp", "html_url": "https://github.com/tatianashp", "followers_url": "https://api.github.com/users/tatianashp/followers", "following_url": "https://api.github.com/users/tatianashp/following{/other_user}", "gists_url": "https://api.github.com/users/tatianashp/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatianashp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatianashp/subscriptions", "organizations_url": "https://api.github.com/users/tatianashp/orgs", "repos_url": "https://api.github.com/users/tatianashp/repos", "events_url": "https://api.github.com/users/tatianashp/events{/privacy}", "received_events_url": "https://api.github.com/users/tatianashp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-07-12T13:37:21Z", "updated_at": "2018-07-17T12:30:51Z", "closed_at": "2018-07-13T06:22:25Z", "author_association": "NONE", "body_html": "<p>Please go to Stack Overflow for help and support:</p>\n<p><a href=\"https://stackoverflow.com/questions/tagged/tensorflow\" rel=\"nofollow\">https://stackoverflow.com/questions/tagged/tensorflow</a></p>\n<p>If you open a GitHub issue, here is our policy:</p>\n<ol>\n<li>It must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).</li>\n<li>The form below must be filled out.</li>\n<li>It shouldn't be a TensorBoard issue. Those go <a href=\"https://github.com/tensorflow/tensorboard/issues\">here</a>.</li>\n</ol>\n<p><strong>Here's why we have that policy</strong>: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.</p>\n<hr>\n<h3>System information</h3>\n<ul>\n<li><strong>I'm using the FashionMNIST code tutorial in  <a href=\"https://goo.gl/GtM6ov\" rel=\"nofollow\"> https://goo.gl/GtM6ov</a></strong>:</li>\n<li><strong>Mac OS 10.13.3</strong>:</li>\n<li><strong>Source</strong>:</li>\n<li><strong>TensorFlow version (1.8.0)</strong>:</li>\n<li>*Python 3.6.5 :: Anaconda, Inc.**:</li>\n<li><strong>Bazel version (if compiling from source)</strong>:</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:</li>\n<li><strong>CUDA/cuDNN version</strong>:</li>\n<li><strong>GPU model and memory</strong>:</li>\n</ul>\n<p>train_input_fn = tf.estimator.inputs.numpy_input_fn(<br>\nx={\"pixels\": features.values/255},<br>\ny=labels,<br>\nbatch_size=100,<br>\nnum_epochs=3,<br>\nshuffle=True)<br>\nfeature_columns = [tf.feature_column.numeric_column(\"pixels\", shape=784)]</p>\n<p>classifier = tf.estimator.LinearClassifier(<br>\nfeature_columns = feature_columns,<br>\nn_classes = 10,<br>\nmodel_dir = \"./models/linear1\"<br>\n)</p>\n<p>classifier.train(input_fn=train_input_fn)</p>\n<hr>\n<p>AttributeError                            Traceback (most recent call last)<br>\n in ()<br>\n----&gt; 1 classifier.train(input_fn=train_input_fn)</p>\n<p>~/anaconda3/lib/python3.6/site-packages/tensorflow/python/estimator/estimator.py in train(self, input_fn, hooks, steps, max_steps, saving_listeners)<br>\n361<br>\n362     saving_listeners = _check_listeners_type(saving_listeners)<br>\n--&gt; 363     loss = self._train_model(input_fn, hooks, saving_listeners)<br>\n364     logging.info('Loss for final step: %s.', loss)<br>\n365     return self</p>\n<p>~/anaconda3/lib/python3.6/site-packages/tensorflow/python/estimator/estimator.py in _train_model(self, input_fn, hooks, saving_listeners)<br>\n841       return self._train_model_distributed(input_fn, hooks, saving_listeners)<br>\n842     else:<br>\n--&gt; 843       return self._train_model_default(input_fn, hooks, saving_listeners)<br>\n844<br>\n845   def _train_model_default(self, input_fn, hooks, saving_listeners):</p>\n<p>~/anaconda3/lib/python3.6/site-packages/tensorflow/python/estimator/estimator.py in _train_model_default(self, input_fn, hooks, saving_listeners)<br>\n851       features, labels, input_hooks = (<br>\n852           self._get_features_and_labels_from_input_fn(<br>\n--&gt; 853               input_fn, model_fn_lib.ModeKeys.TRAIN))<br>\n854       worker_hooks.extend(input_hooks)<br>\n855       estimator_spec = self._call_model_fn(</p>\n<p>~/anaconda3/lib/python3.6/site-packages/tensorflow/python/estimator/estimator.py in _get_features_and_labels_from_input_fn(self, input_fn, mode)<br>\n689   def _get_features_and_labels_from_input_fn(self, input_fn, mode):<br>\n690     \"\"\"Extracts the <code>features</code> and labels from return values of <code>input_fn</code>.\"\"\"<br>\n--&gt; 691     result = self._call_input_fn(input_fn, mode)<br>\n692     # TODO(anjalisridhar): What about the default DistributionStrategy? Perhaps<br>\n693     # using any input is alright in that case. There is also a</p>\n<p>~/anaconda3/lib/python3.6/site-packages/tensorflow/python/estimator/estimator.py in _call_input_fn(self, input_fn, mode)<br>\n796       kwargs['config'] = self.config<br>\n797     with ops.device('/cpu:0'):<br>\n--&gt; 798       return input_fn(**kwargs)<br>\n799<br>\n800   def _call_model_fn(self, features, labels, mode, config):</p>\n<p>~/anaconda3/lib/python3.6/site-packages/tensorflow/python/estimator/inputs/numpy_io.py in input_fn()<br>\n194         num_threads=num_threads,<br>\n195         enqueue_size=batch_size,<br>\n--&gt; 196         num_epochs=num_epochs)<br>\n197<br>\n198     batch = (</p>\n<p>~/anaconda3/lib/python3.6/site-packages/tensorflow/python/estimator/inputs/queues/feeding_functions.py in _enqueue_data(data, capacity, shuffle, min_after_dequeue, num_threads, seed, name, enqueue_size, num_epochs, pad_value)<br>\n390     elif isinstance(data, collections.OrderedDict):<br>\n391       types = [dtypes.int64<br>\n--&gt; 392               ] + [dtypes.as_dtype(col.dtype) for col in data.values()]<br>\n393       queue_shapes = [()] + [col.shape[1:] for col in data.values()]<br>\n394       get_feed_fn = _OrderedDictNumpyFeedFn</p>\n<p>~/anaconda3/lib/python3.6/site-packages/tensorflow/python/estimator/inputs/queues/feeding_functions.py in (.0)<br>\n390     elif isinstance(data, collections.OrderedDict):<br>\n391       types = [dtypes.int64<br>\n--&gt; 392               ] + [dtypes.as_dtype(col.dtype) for col in data.values()]<br>\n393       queue_shapes = [()] + [col.shape[1:] for col in data.values()]<br>\n394       get_feed_fn = _OrderedDictNumpyFeedFn</p>\n<p>~/anaconda3/lib/python3.6/site-packages/pandas/core/generic.py in <strong>getattr</strong>(self, name)<br>\n4370             if self._info_axis._can_hold_identifiers_and_holds_name(name):<br>\n4371                 return self[name]<br>\n-&gt; 4372             return object.<strong>getattribute</strong>(self, name)<br>\n4373<br>\n4374     def <strong>setattr</strong>(self, name, value):</p>\n<p>AttributeError: 'DataFrame' object has no attribute 'dtype'</p>\n<p>This is the error I'm getting.</p>", "body_text": "Please go to Stack Overflow for help and support:\nhttps://stackoverflow.com/questions/tagged/tensorflow\nIf you open a GitHub issue, here is our policy:\n\nIt must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).\nThe form below must be filled out.\nIt shouldn't be a TensorBoard issue. Those go here.\n\nHere's why we have that policy: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\n\nSystem information\n\nI'm using the FashionMNIST code tutorial in   https://goo.gl/GtM6ov:\nMac OS 10.13.3:\nSource:\nTensorFlow version (1.8.0):\n*Python 3.6.5 :: Anaconda, Inc.**:\nBazel version (if compiling from source):\nGCC/Compiler version (if compiling from source):\nCUDA/cuDNN version:\nGPU model and memory:\n\ntrain_input_fn = tf.estimator.inputs.numpy_input_fn(\nx={\"pixels\": features.values/255},\ny=labels,\nbatch_size=100,\nnum_epochs=3,\nshuffle=True)\nfeature_columns = [tf.feature_column.numeric_column(\"pixels\", shape=784)]\nclassifier = tf.estimator.LinearClassifier(\nfeature_columns = feature_columns,\nn_classes = 10,\nmodel_dir = \"./models/linear1\"\n)\nclassifier.train(input_fn=train_input_fn)\n\nAttributeError                            Traceback (most recent call last)\n in ()\n----> 1 classifier.train(input_fn=train_input_fn)\n~/anaconda3/lib/python3.6/site-packages/tensorflow/python/estimator/estimator.py in train(self, input_fn, hooks, steps, max_steps, saving_listeners)\n361\n362     saving_listeners = _check_listeners_type(saving_listeners)\n--> 363     loss = self._train_model(input_fn, hooks, saving_listeners)\n364     logging.info('Loss for final step: %s.', loss)\n365     return self\n~/anaconda3/lib/python3.6/site-packages/tensorflow/python/estimator/estimator.py in _train_model(self, input_fn, hooks, saving_listeners)\n841       return self._train_model_distributed(input_fn, hooks, saving_listeners)\n842     else:\n--> 843       return self._train_model_default(input_fn, hooks, saving_listeners)\n844\n845   def _train_model_default(self, input_fn, hooks, saving_listeners):\n~/anaconda3/lib/python3.6/site-packages/tensorflow/python/estimator/estimator.py in _train_model_default(self, input_fn, hooks, saving_listeners)\n851       features, labels, input_hooks = (\n852           self._get_features_and_labels_from_input_fn(\n--> 853               input_fn, model_fn_lib.ModeKeys.TRAIN))\n854       worker_hooks.extend(input_hooks)\n855       estimator_spec = self._call_model_fn(\n~/anaconda3/lib/python3.6/site-packages/tensorflow/python/estimator/estimator.py in _get_features_and_labels_from_input_fn(self, input_fn, mode)\n689   def _get_features_and_labels_from_input_fn(self, input_fn, mode):\n690     \"\"\"Extracts the features and labels from return values of input_fn.\"\"\"\n--> 691     result = self._call_input_fn(input_fn, mode)\n692     # TODO(anjalisridhar): What about the default DistributionStrategy? Perhaps\n693     # using any input is alright in that case. There is also a\n~/anaconda3/lib/python3.6/site-packages/tensorflow/python/estimator/estimator.py in _call_input_fn(self, input_fn, mode)\n796       kwargs['config'] = self.config\n797     with ops.device('/cpu:0'):\n--> 798       return input_fn(**kwargs)\n799\n800   def _call_model_fn(self, features, labels, mode, config):\n~/anaconda3/lib/python3.6/site-packages/tensorflow/python/estimator/inputs/numpy_io.py in input_fn()\n194         num_threads=num_threads,\n195         enqueue_size=batch_size,\n--> 196         num_epochs=num_epochs)\n197\n198     batch = (\n~/anaconda3/lib/python3.6/site-packages/tensorflow/python/estimator/inputs/queues/feeding_functions.py in _enqueue_data(data, capacity, shuffle, min_after_dequeue, num_threads, seed, name, enqueue_size, num_epochs, pad_value)\n390     elif isinstance(data, collections.OrderedDict):\n391       types = [dtypes.int64\n--> 392               ] + [dtypes.as_dtype(col.dtype) for col in data.values()]\n393       queue_shapes = [()] + [col.shape[1:] for col in data.values()]\n394       get_feed_fn = _OrderedDictNumpyFeedFn\n~/anaconda3/lib/python3.6/site-packages/tensorflow/python/estimator/inputs/queues/feeding_functions.py in (.0)\n390     elif isinstance(data, collections.OrderedDict):\n391       types = [dtypes.int64\n--> 392               ] + [dtypes.as_dtype(col.dtype) for col in data.values()]\n393       queue_shapes = [()] + [col.shape[1:] for col in data.values()]\n394       get_feed_fn = _OrderedDictNumpyFeedFn\n~/anaconda3/lib/python3.6/site-packages/pandas/core/generic.py in getattr(self, name)\n4370             if self._info_axis._can_hold_identifiers_and_holds_name(name):\n4371                 return self[name]\n-> 4372             return object.getattribute(self, name)\n4373\n4374     def setattr(self, name, value):\nAttributeError: 'DataFrame' object has no attribute 'dtype'\nThis is the error I'm getting.", "body": "Please go to Stack Overflow for help and support:\r\n\r\nhttps://stackoverflow.com/questions/tagged/tensorflow\r\n\r\nIf you open a GitHub issue, here is our policy:\r\n\r\n1. It must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).\r\n2. The form below must be filled out.\r\n3. It shouldn't be a TensorBoard issue. Those go [here](https://github.com/tensorflow/tensorboard/issues).\r\n\r\n**Here's why we have that policy**: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\r\n\r\n------------------------\r\n\r\n### System information\r\n- **I'm using the FashionMNIST code tutorial in  [ https://goo.gl/GtM6ov](https://goo.gl/GtM6ov)**:\r\n- **Mac OS 10.13.3**:\r\n- **Source**:\r\n- **TensorFlow version (1.8.0)**:\r\n- *Python 3.6.5 :: Anaconda, Inc.**: \r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**:\r\n- **GPU model and memory**:\r\n\r\ntrain_input_fn = tf.estimator.inputs.numpy_input_fn(\r\n        x={\"pixels\": features.values/255},\r\n        y=labels,\r\n        batch_size=100,\r\n        num_epochs=3,\r\n        shuffle=True)\r\nfeature_columns = [tf.feature_column.numeric_column(\"pixels\", shape=784)]\r\n\r\nclassifier = tf.estimator.LinearClassifier(\r\n    feature_columns = feature_columns,\r\n    n_classes = 10,\r\n    model_dir = \"./models/linear1\"\r\n)\r\n\r\nclassifier.train(input_fn=train_input_fn)\r\n\r\n\r\n--------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-84-5c962f10a4d9> in <module>()\r\n----> 1 classifier.train(input_fn=train_input_fn)\r\n\r\n~/anaconda3/lib/python3.6/site-packages/tensorflow/python/estimator/estimator.py in train(self, input_fn, hooks, steps, max_steps, saving_listeners)\r\n    361 \r\n    362     saving_listeners = _check_listeners_type(saving_listeners)\r\n--> 363     loss = self._train_model(input_fn, hooks, saving_listeners)\r\n    364     logging.info('Loss for final step: %s.', loss)\r\n    365     return self\r\n\r\n~/anaconda3/lib/python3.6/site-packages/tensorflow/python/estimator/estimator.py in _train_model(self, input_fn, hooks, saving_listeners)\r\n    841       return self._train_model_distributed(input_fn, hooks, saving_listeners)\r\n    842     else:\r\n--> 843       return self._train_model_default(input_fn, hooks, saving_listeners)\r\n    844 \r\n    845   def _train_model_default(self, input_fn, hooks, saving_listeners):\r\n\r\n~/anaconda3/lib/python3.6/site-packages/tensorflow/python/estimator/estimator.py in _train_model_default(self, input_fn, hooks, saving_listeners)\r\n    851       features, labels, input_hooks = (\r\n    852           self._get_features_and_labels_from_input_fn(\r\n--> 853               input_fn, model_fn_lib.ModeKeys.TRAIN))\r\n    854       worker_hooks.extend(input_hooks)\r\n    855       estimator_spec = self._call_model_fn(\r\n\r\n~/anaconda3/lib/python3.6/site-packages/tensorflow/python/estimator/estimator.py in _get_features_and_labels_from_input_fn(self, input_fn, mode)\r\n    689   def _get_features_and_labels_from_input_fn(self, input_fn, mode):\r\n    690     \"\"\"Extracts the `features` and labels from return values of `input_fn`.\"\"\"\r\n--> 691     result = self._call_input_fn(input_fn, mode)\r\n    692     # TODO(anjalisridhar): What about the default DistributionStrategy? Perhaps\r\n    693     # using any input is alright in that case. There is also a\r\n\r\n~/anaconda3/lib/python3.6/site-packages/tensorflow/python/estimator/estimator.py in _call_input_fn(self, input_fn, mode)\r\n    796       kwargs['config'] = self.config\r\n    797     with ops.device('/cpu:0'):\r\n--> 798       return input_fn(**kwargs)\r\n    799 \r\n    800   def _call_model_fn(self, features, labels, mode, config):\r\n\r\n~/anaconda3/lib/python3.6/site-packages/tensorflow/python/estimator/inputs/numpy_io.py in input_fn()\r\n    194         num_threads=num_threads,\r\n    195         enqueue_size=batch_size,\r\n--> 196         num_epochs=num_epochs)\r\n    197 \r\n    198     batch = (\r\n\r\n~/anaconda3/lib/python3.6/site-packages/tensorflow/python/estimator/inputs/queues/feeding_functions.py in _enqueue_data(data, capacity, shuffle, min_after_dequeue, num_threads, seed, name, enqueue_size, num_epochs, pad_value)\r\n    390     elif isinstance(data, collections.OrderedDict):\r\n    391       types = [dtypes.int64\r\n--> 392               ] + [dtypes.as_dtype(col.dtype) for col in data.values()]\r\n    393       queue_shapes = [()] + [col.shape[1:] for col in data.values()]\r\n    394       get_feed_fn = _OrderedDictNumpyFeedFn\r\n\r\n~/anaconda3/lib/python3.6/site-packages/tensorflow/python/estimator/inputs/queues/feeding_functions.py in <listcomp>(.0)\r\n    390     elif isinstance(data, collections.OrderedDict):\r\n    391       types = [dtypes.int64\r\n--> 392               ] + [dtypes.as_dtype(col.dtype) for col in data.values()]\r\n    393       queue_shapes = [()] + [col.shape[1:] for col in data.values()]\r\n    394       get_feed_fn = _OrderedDictNumpyFeedFn\r\n\r\n~/anaconda3/lib/python3.6/site-packages/pandas/core/generic.py in __getattr__(self, name)\r\n   4370             if self._info_axis._can_hold_identifiers_and_holds_name(name):\r\n   4371                 return self[name]\r\n-> 4372             return object.__getattribute__(self, name)\r\n   4373 \r\n   4374     def __setattr__(self, name, value):\r\n\r\nAttributeError: 'DataFrame' object has no attribute 'dtype'\r\n\r\nThis is the error I'm getting."}