{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/426110014", "html_url": "https://github.com/tensorflow/tensorflow/issues/22444#issuecomment-426110014", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22444", "id": 426110014, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjExMDAxNA==", "user": {"login": "wt-huang", "id": 42785337, "node_id": "MDQ6VXNlcjQyNzg1MzM3", "avatar_url": "https://avatars0.githubusercontent.com/u/42785337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wt-huang", "html_url": "https://github.com/wt-huang", "followers_url": "https://api.github.com/users/wt-huang/followers", "following_url": "https://api.github.com/users/wt-huang/following{/other_user}", "gists_url": "https://api.github.com/users/wt-huang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wt-huang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wt-huang/subscriptions", "organizations_url": "https://api.github.com/users/wt-huang/orgs", "repos_url": "https://api.github.com/users/wt-huang/repos", "events_url": "https://api.github.com/users/wt-huang/events{/privacy}", "received_events_url": "https://api.github.com/users/wt-huang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-02T00:46:20Z", "updated_at": "2018-10-02T00:48:24Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=11569055\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/lcxywfe\">@lcxywfe</a> The tensor shape for model input and output should be identical. To avoid <code>Dimension mismatch</code> error, you would need to convert <code>data[0]</code> and <code>data[1]</code> to np.array. Below is an example to get input from your model then do the same and feed <code>data[1]</code> to a separate tflite model, then you will see identical outputs.</p>\n<pre><code>    model = tf.contrib.lite.Interpreter(model_path=\"resnet18_finetuned_batch2.tflite\")\n\n    input_details = model.get_input_details()\n    output_details = model.get_output_details()\n\n    data = np.array(np.random.random_sample(input_details[0]['shape']), dtype=np.float32)\n    model.allocate_tensors()\n    model.set_tensor(input_details[0]['index'], data)\n\n    model.invoke()\n    output = model.get_tensor(output_details[0]['index'])\n</code></pre>", "body_text": "@lcxywfe The tensor shape for model input and output should be identical. To avoid Dimension mismatch error, you would need to convert data[0] and data[1] to np.array. Below is an example to get input from your model then do the same and feed data[1] to a separate tflite model, then you will see identical outputs.\n    model = tf.contrib.lite.Interpreter(model_path=\"resnet18_finetuned_batch2.tflite\")\n\n    input_details = model.get_input_details()\n    output_details = model.get_output_details()\n\n    data = np.array(np.random.random_sample(input_details[0]['shape']), dtype=np.float32)\n    model.allocate_tensors()\n    model.set_tensor(input_details[0]['index'], data)\n\n    model.invoke()\n    output = model.get_tensor(output_details[0]['index'])", "body": "@lcxywfe The tensor shape for model input and output should be identical. To avoid `Dimension mismatch` error, you would need to convert `data[0]` and `data[1]` to np.array. Below is an example to get input from your model then do the same and feed `data[1]` to a separate tflite model, then you will see identical outputs.\r\n\r\n```\r\n    model = tf.contrib.lite.Interpreter(model_path=\"resnet18_finetuned_batch2.tflite\")\r\n\r\n    input_details = model.get_input_details()\r\n    output_details = model.get_output_details()\r\n\r\n    data = np.array(np.random.random_sample(input_details[0]['shape']), dtype=np.float32)\r\n    model.allocate_tensors()\r\n    model.set_tensor(input_details[0]['index'], data)\r\n\r\n    model.invoke()\r\n    output = model.get_tensor(output_details[0]['index'])\r\n```"}