{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/371", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/371/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/371/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/371/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/371", "id": 119303223, "node_id": "MDU6SXNzdWUxMTkzMDMyMjM=", "number": 371, "title": "Sparse tensor construction given repeated indices", "user": {"login": "andyljones", "id": 662606, "node_id": "MDQ6VXNlcjY2MjYwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/662606?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andyljones", "html_url": "https://github.com/andyljones", "followers_url": "https://api.github.com/users/andyljones/followers", "following_url": "https://api.github.com/users/andyljones/following{/other_user}", "gists_url": "https://api.github.com/users/andyljones/gists{/gist_id}", "starred_url": "https://api.github.com/users/andyljones/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andyljones/subscriptions", "organizations_url": "https://api.github.com/users/andyljones/orgs", "repos_url": "https://api.github.com/users/andyljones/repos", "events_url": "https://api.github.com/users/andyljones/events{/privacy}", "received_events_url": "https://api.github.com/users/andyljones/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 284443156, "node_id": "MDU6TGFiZWwyODQ0NDMxNTY=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:docs", "name": "type:docs", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2015-11-28T15:51:15Z", "updated_at": "2015-12-23T19:38:04Z", "closed_at": "2015-12-23T19:37:50Z", "author_association": "NONE", "body_html": "<p>TensorFlow behaves differently (and surprisingly) to SciPy when converting sparse matrices to dense matrices.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">import</span> scipy <span class=\"pl-k\">as</span> sp\n<span class=\"pl-k\">import</span> scipy.sparse\n\ni <span class=\"pl-k\">=</span> [<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>]\nj <span class=\"pl-k\">=</span> [<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>]\nvalues <span class=\"pl-k\">=</span> [<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>]\n\nsp_answer <span class=\"pl-k\">=</span> sp.sparse.coo_matrix((values, (i, j))).todense()\n<span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>SciPy's answer is <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> <span class=\"pl-c1\">str</span>(sp_answer)) <span class=\"pl-c\"><span class=\"pl-c\">#</span> prints [[3]]</span>\n\ntf_answer <span class=\"pl-k\">=</span> tf.sparse_to_dense([i, j], [<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>], values, <span class=\"pl-c1\">0</span>)\n<span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>TF's answer is <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> <span class=\"pl-c1\">str</span>(tf.Session().run(tf_answer))) <span class=\"pl-c\"><span class=\"pl-c\">#</span> prints [[2]]</span></pre></div>\n<p>Specifically, if an index pair is repeated, then SciPy will sum the corresponding values, while TF just keeps the last value.</p>\n<p>Is this behaviour intentional or accidental? If it's intentional, I'll make a pull request to add a mention of it to the docs. If it's accidental, I'll make a pull request to fix it.</p>", "body_text": "TensorFlow behaves differently (and surprisingly) to SciPy when converting sparse matrices to dense matrices.\nimport tensorflow as tf\nimport scipy as sp\nimport scipy.sparse\n\ni = [0, 0]\nj = [0, 0]\nvalues = [1, 2]\n\nsp_answer = sp.sparse.coo_matrix((values, (i, j))).todense()\nprint(\"SciPy's answer is \" + str(sp_answer)) # prints [[3]]\n\ntf_answer = tf.sparse_to_dense([i, j], [1, 1], values, 0)\nprint(\"TF's answer is \" + str(tf.Session().run(tf_answer))) # prints [[2]]\nSpecifically, if an index pair is repeated, then SciPy will sum the corresponding values, while TF just keeps the last value.\nIs this behaviour intentional or accidental? If it's intentional, I'll make a pull request to add a mention of it to the docs. If it's accidental, I'll make a pull request to fix it.", "body": "TensorFlow behaves differently (and surprisingly) to SciPy when converting sparse matrices to dense matrices.\n\n``` python\nimport tensorflow as tf\nimport scipy as sp\nimport scipy.sparse\n\ni = [0, 0]\nj = [0, 0]\nvalues = [1, 2]\n\nsp_answer = sp.sparse.coo_matrix((values, (i, j))).todense()\nprint(\"SciPy's answer is \" + str(sp_answer)) # prints [[3]]\n\ntf_answer = tf.sparse_to_dense([i, j], [1, 1], values, 0)\nprint(\"TF's answer is \" + str(tf.Session().run(tf_answer))) # prints [[2]]\n```\n\nSpecifically, if an index pair is repeated, then SciPy will sum the corresponding values, while TF just keeps the last value.\n\nIs this behaviour intentional or accidental? If it's intentional, I'll make a pull request to add a mention of it to the docs. If it's accidental, I'll make a pull request to fix it.\n"}