{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/411674245", "html_url": "https://github.com/tensorflow/tensorflow/issues/3388#issuecomment-411674245", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3388", "id": 411674245, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTY3NDI0NQ==", "user": {"login": "muneebullahkhan", "id": 39429431, "node_id": "MDQ6VXNlcjM5NDI5NDMx", "avatar_url": "https://avatars3.githubusercontent.com/u/39429431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/muneebullahkhan", "html_url": "https://github.com/muneebullahkhan", "followers_url": "https://api.github.com/users/muneebullahkhan/followers", "following_url": "https://api.github.com/users/muneebullahkhan/following{/other_user}", "gists_url": "https://api.github.com/users/muneebullahkhan/gists{/gist_id}", "starred_url": "https://api.github.com/users/muneebullahkhan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/muneebullahkhan/subscriptions", "organizations_url": "https://api.github.com/users/muneebullahkhan/orgs", "repos_url": "https://api.github.com/users/muneebullahkhan/repos", "events_url": "https://api.github.com/users/muneebullahkhan/events{/privacy}", "received_events_url": "https://api.github.com/users/muneebullahkhan/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-09T08:08:32Z", "updated_at": "2018-08-09T08:08:32Z", "author_association": "NONE", "body_html": "<p>i run this code<br>\nimport tensorflow as tf</p>\n<h1>read and decode the image</h1>\n<p>image_contents = tf.read_file(\"~/Desktop/test.jpg\")<br>\nimage = tf.image.decode_jpeg(image_contents, channels=3)</p>\n<p>with tf.Session() as sess:<br>\nimg = sess.run(image)<br>\nprint(img)<br>\nand give this flowing error how to fix it<br>\nNotFoundError                             Traceback (most recent call last)<br>\n~\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\client\\session.py in _do_call(self, fn, *args)<br>\n1321     try:<br>\n-&gt; 1322       return fn(*args)<br>\n1323     except errors.OpError as e:</p>\n<p>~\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\client\\session.py in _run_fn(feed_dict, fetch_list, target_list, options, run_metadata)<br>\n1306       return self._call_tf_sessionrun(<br>\n-&gt; 1307           options, feed_dict, fetch_list, target_list, run_metadata)<br>\n1308</p>", "body_text": "i run this code\nimport tensorflow as tf\nread and decode the image\nimage_contents = tf.read_file(\"~/Desktop/test.jpg\")\nimage = tf.image.decode_jpeg(image_contents, channels=3)\nwith tf.Session() as sess:\nimg = sess.run(image)\nprint(img)\nand give this flowing error how to fix it\nNotFoundError                             Traceback (most recent call last)\n~\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\client\\session.py in _do_call(self, fn, *args)\n1321     try:\n-> 1322       return fn(*args)\n1323     except errors.OpError as e:\n~\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\client\\session.py in _run_fn(feed_dict, fetch_list, target_list, options, run_metadata)\n1306       return self._call_tf_sessionrun(\n-> 1307           options, feed_dict, fetch_list, target_list, run_metadata)\n1308", "body": " i run this code \r\nimport tensorflow as tf    \r\n# read and decode the image\r\nimage_contents = tf.read_file(\"~/Desktop/test.jpg\")\r\nimage = tf.image.decode_jpeg(image_contents, channels=3)\r\n\r\nwith tf.Session() as sess:   \r\n    img = sess.run(image)\r\n    print(img)\r\nand give this flowing error how to fix it\r\nNotFoundError                             Traceback (most recent call last)\r\n~\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\client\\session.py in _do_call(self, fn, *args)\r\n   1321     try:\r\n-> 1322       return fn(*args)\r\n   1323     except errors.OpError as e:\r\n\r\n~\\Anaconda3\\envs\\tensorflow\\lib\\site-packages\\tensorflow\\python\\client\\session.py in _run_fn(feed_dict, fetch_list, target_list, options, run_metadata)\r\n   1306       return self._call_tf_sessionrun(\r\n-> 1307           options, feed_dict, fetch_list, target_list, run_metadata)\r\n   1308 \r\n\r\n "}