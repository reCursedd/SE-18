{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/398526503", "html_url": "https://github.com/tensorflow/tensorflow/issues/20124#issuecomment-398526503", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20124", "id": 398526503, "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODUyNjUwMw==", "user": {"login": "archiki", "id": 34877432, "node_id": "MDQ6VXNlcjM0ODc3NDMy", "avatar_url": "https://avatars3.githubusercontent.com/u/34877432?v=4", "gravatar_id": "", "url": "https://api.github.com/users/archiki", "html_url": "https://github.com/archiki", "followers_url": "https://api.github.com/users/archiki/followers", "following_url": "https://api.github.com/users/archiki/following{/other_user}", "gists_url": "https://api.github.com/users/archiki/gists{/gist_id}", "starred_url": "https://api.github.com/users/archiki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/archiki/subscriptions", "organizations_url": "https://api.github.com/users/archiki/orgs", "repos_url": "https://api.github.com/users/archiki/repos", "events_url": "https://api.github.com/users/archiki/events{/privacy}", "received_events_url": "https://api.github.com/users/archiki/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-19T20:01:51Z", "updated_at": "2018-06-20T16:56:03Z", "author_association": "NONE", "body_html": "<p>To give more context this is how i have stacked the cells-<br>\n<code>stacked_cells=tf.nn.rnn_cell.MultiRNNCell([get_cell(num_hidden[_],keep_prob,z_prob_cells,z_prob_states,use_dropout,use_zoneout)</code> for _ in range(num_hidden_layers)],state_is_tuple=True)</p>\n<pre><code>default_state=stacked_cells.zero_state(128,tf.float32)\nprint(default_state)\n#init_state=tf.placeholder_with_default(default_state,shape=[num_hidden_layers,2,None,num_hidden])\ninit_state=tf.Variable(default_state,trainable=False)\nstate_per_layer=tf.unstack(init_state,axis=0)\n#print(type(state_per_layer))\nrnn_tuple_state=tuple([tf.nn.rnn_cell.LSTMStateTuple(state_per_layer[idx][0],state_per_layer[idx][1]) for idx in range(num_hidden_layers)])\n\n\noutputs, new_states = tf.nn.dynamic_rnn(stacked_cells, x, dtype=tf.float32,\n                            sequence_length=seq,parallel_iterations=64,initial_state=rnn_tuple_state)\n#update_op=get_state_update_op(states,new_states)\nnew_states=tf.stack(new_states)`\n</code></pre>\n<p>The traceback i get is the following-</p>\n<p>`Traceback (most recent call last):<br>\nFile \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 1567, in _create_c_op<br>\nc_op = c_api.TF_FinishOperation(op_desc)<br>\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Dimension 2 in both shapes must be equal, but are 64 and 32. Shapes are [2,128,64] and [2,128,32].<br>\nFrom merging shape 0 with other shapes. for 'Variable_1/initial_value' (op: 'Pack') with input shapes: [2,128,64], [2,128,32].</p>\n<p>During handling of the above exception, another exception occurred:</p>\n<p>Traceback (most recent call last):<br>\nFile \"model_4_f.py\", line 289, in <br>\nscore,state_update_op= seqRNN(x_batch,seq_batch,weights_out,biases)<br>\nFile \"model_4_f.py\", line 253, in seqRNN<br>\ninit_state=tf.Variable(default_state,trainable=False)<br>\nFile \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/variables.py\", line 235, in <strong>init</strong><br>\nconstraint=constraint)<br>\nFile \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/variables.py\", line 355, in _init_from_args<br>\ninitial_value, name=\"initial_value\", dtype=dtype)<br>\nFile \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 1014, in convert_to_tensor<br>\nas_ref=False)<br>\nFile \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 1104, in internal_convert_to_tensor<br>\nret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)<br>\nFile \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/array_ops.py\", line 1034, in _autopacking_conversion_function<br>\nreturn _autopacking_helper(v, inferred_dtype, name or \"packed\")<br>\nFile \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/array_ops.py\", line 997, in _autopacking_helper<br>\nreturn gen_array_ops.pack(elems_as_tensors, name=scope)<br>\nFile \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/gen_array_ops.py\", line 4517, in pack<br>\n\"Pack\", values=values, axis=axis, name=name)<br>\nFile \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/op_def_library.py\", line 787, in _apply_op_helper<br>\nop_def=op_def)<br>\nFile \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 3392, in create_op<br>\nop_def=op_def)<br>\nFile \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 1734, in <strong>init</strong><br>\ncontrol_input_ops)<br>\nFile \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 1570, in _create_c_op<br>\nraise ValueError(str(e))<br>\nValueError: Dimension 2 in both shapes must be equal, but are 64 and 32. Shapes are [2,128,64] and [2,128,32].<br>\nFrom merging shape 0 with other shapes. for 'Variable_1/initial_value' (op: 'Pack') with input shapes: [2,128,64], [2,128,32].<br>\n`</p>", "body_text": "To give more context this is how i have stacked the cells-\nstacked_cells=tf.nn.rnn_cell.MultiRNNCell([get_cell(num_hidden[_],keep_prob,z_prob_cells,z_prob_states,use_dropout,use_zoneout) for _ in range(num_hidden_layers)],state_is_tuple=True)\ndefault_state=stacked_cells.zero_state(128,tf.float32)\nprint(default_state)\n#init_state=tf.placeholder_with_default(default_state,shape=[num_hidden_layers,2,None,num_hidden])\ninit_state=tf.Variable(default_state,trainable=False)\nstate_per_layer=tf.unstack(init_state,axis=0)\n#print(type(state_per_layer))\nrnn_tuple_state=tuple([tf.nn.rnn_cell.LSTMStateTuple(state_per_layer[idx][0],state_per_layer[idx][1]) for idx in range(num_hidden_layers)])\n\n\noutputs, new_states = tf.nn.dynamic_rnn(stacked_cells, x, dtype=tf.float32,\n                            sequence_length=seq,parallel_iterations=64,initial_state=rnn_tuple_state)\n#update_op=get_state_update_op(states,new_states)\nnew_states=tf.stack(new_states)`\n\nThe traceback i get is the following-\n`Traceback (most recent call last):\nFile \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 1567, in _create_c_op\nc_op = c_api.TF_FinishOperation(op_desc)\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Dimension 2 in both shapes must be equal, but are 64 and 32. Shapes are [2,128,64] and [2,128,32].\nFrom merging shape 0 with other shapes. for 'Variable_1/initial_value' (op: 'Pack') with input shapes: [2,128,64], [2,128,32].\nDuring handling of the above exception, another exception occurred:\nTraceback (most recent call last):\nFile \"model_4_f.py\", line 289, in \nscore,state_update_op= seqRNN(x_batch,seq_batch,weights_out,biases)\nFile \"model_4_f.py\", line 253, in seqRNN\ninit_state=tf.Variable(default_state,trainable=False)\nFile \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/variables.py\", line 235, in init\nconstraint=constraint)\nFile \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/variables.py\", line 355, in _init_from_args\ninitial_value, name=\"initial_value\", dtype=dtype)\nFile \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 1014, in convert_to_tensor\nas_ref=False)\nFile \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 1104, in internal_convert_to_tensor\nret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\nFile \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/array_ops.py\", line 1034, in _autopacking_conversion_function\nreturn _autopacking_helper(v, inferred_dtype, name or \"packed\")\nFile \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/array_ops.py\", line 997, in _autopacking_helper\nreturn gen_array_ops.pack(elems_as_tensors, name=scope)\nFile \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/gen_array_ops.py\", line 4517, in pack\n\"Pack\", values=values, axis=axis, name=name)\nFile \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/op_def_library.py\", line 787, in _apply_op_helper\nop_def=op_def)\nFile \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 3392, in create_op\nop_def=op_def)\nFile \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 1734, in init\ncontrol_input_ops)\nFile \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 1570, in _create_c_op\nraise ValueError(str(e))\nValueError: Dimension 2 in both shapes must be equal, but are 64 and 32. Shapes are [2,128,64] and [2,128,32].\nFrom merging shape 0 with other shapes. for 'Variable_1/initial_value' (op: 'Pack') with input shapes: [2,128,64], [2,128,32].\n`", "body": "To give more context this is how i have stacked the cells-\r\n`stacked_cells=tf.nn.rnn_cell.MultiRNNCell([get_cell(num_hidden[_],keep_prob,z_prob_cells,z_prob_states,use_dropout,use_zoneout)` for _ in range(num_hidden_layers)],state_is_tuple=True)\r\n\t\r\n\tdefault_state=stacked_cells.zero_state(128,tf.float32)\r\n\tprint(default_state)\r\n\t#init_state=tf.placeholder_with_default(default_state,shape=[num_hidden_layers,2,None,num_hidden])\r\n\tinit_state=tf.Variable(default_state,trainable=False)\r\n\tstate_per_layer=tf.unstack(init_state,axis=0)\r\n\t#print(type(state_per_layer))\r\n\trnn_tuple_state=tuple([tf.nn.rnn_cell.LSTMStateTuple(state_per_layer[idx][0],state_per_layer[idx][1]) for idx in range(num_hidden_layers)])\r\n\t\r\n\t\r\n\toutputs, new_states = tf.nn.dynamic_rnn(stacked_cells, x, dtype=tf.float32,\r\n                                sequence_length=seq,parallel_iterations=64,initial_state=rnn_tuple_state)\r\n\t#update_op=get_state_update_op(states,new_states)\r\n\tnew_states=tf.stack(new_states)`\r\n\r\nThe traceback i get is the following-\r\n\r\n`Traceback (most recent call last):\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 1567, in _create_c_op\r\n    c_op = c_api.TF_FinishOperation(op_desc)\r\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Dimension 2 in both shapes must be equal, but are 64 and 32. Shapes are [2,128,64] and [2,128,32].\r\n\tFrom merging shape 0 with other shapes. for 'Variable_1/initial_value' (op: 'Pack') with input shapes: [2,128,64], [2,128,32].\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"model_4_f.py\", line 289, in <module>\r\n    score,state_update_op= seqRNN(x_batch,seq_batch,weights_out,biases)\r\n  File \"model_4_f.py\", line 253, in seqRNN\r\n    init_state=tf.Variable(default_state,trainable=False)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/variables.py\", line 235, in __init__\r\n    constraint=constraint)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/variables.py\", line 355, in _init_from_args\r\n    initial_value, name=\"initial_value\", dtype=dtype)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 1014, in convert_to_tensor\r\n    as_ref=False)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 1104, in internal_convert_to_tensor\r\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/array_ops.py\", line 1034, in _autopacking_conversion_function\r\n    return _autopacking_helper(v, inferred_dtype, name or \"packed\")\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/array_ops.py\", line 997, in _autopacking_helper\r\n    return gen_array_ops.pack(elems_as_tensors, name=scope)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/gen_array_ops.py\", line 4517, in pack\r\n    \"Pack\", values=values, axis=axis, name=name)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/op_def_library.py\", line 787, in _apply_op_helper\r\n    op_def=op_def)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 3392, in create_op\r\n    op_def=op_def)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 1734, in __init__\r\n    control_input_ops)\r\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py\", line 1570, in _create_c_op\r\n    raise ValueError(str(e))\r\nValueError: Dimension 2 in both shapes must be equal, but are 64 and 32. Shapes are [2,128,64] and [2,128,32].\r\n\tFrom merging shape 0 with other shapes. for 'Variable_1/initial_value' (op: 'Pack') with input shapes: [2,128,64], [2,128,32].\r\n`"}