{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/241093445", "html_url": "https://github.com/tensorflow/tensorflow/issues/3682#issuecomment-241093445", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3682", "id": 241093445, "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTA5MzQ0NQ==", "user": {"login": "kbrems", "id": 456665, "node_id": "MDQ6VXNlcjQ1NjY2NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/456665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kbrems", "html_url": "https://github.com/kbrems", "followers_url": "https://api.github.com/users/kbrems/followers", "following_url": "https://api.github.com/users/kbrems/following{/other_user}", "gists_url": "https://api.github.com/users/kbrems/gists{/gist_id}", "starred_url": "https://api.github.com/users/kbrems/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kbrems/subscriptions", "organizations_url": "https://api.github.com/users/kbrems/orgs", "repos_url": "https://api.github.com/users/kbrems/repos", "events_url": "https://api.github.com/users/kbrems/events{/privacy}", "received_events_url": "https://api.github.com/users/kbrems/received_events", "type": "User", "site_admin": false}, "created_at": "2016-08-19T18:13:11Z", "updated_at": "2016-08-19T18:13:11Z", "author_association": "CONTRIBUTOR", "body_html": "<p>As a potential alternative, we have implemented a python-only framework for adding custom operators to tensorflow, the Operator Vectorization Library:<br>\n<a href=\"https://github.com/opveclib/opveclib\">https://github.com/opveclib/opveclib</a>. Multi-threaded C++ and CUDA code is automatically generated from the python operators, which can be used in a Tensorflow application with only a binary install of tensorflow. We have implemented the log1p and expm1 operators as an example. See documentation at <a href=\"http://opveclib.readthedocs.io/en/latest/expm1.html\" rel=\"nofollow\">http://opveclib.readthedocs.io/en/latest/expm1.html</a></p>", "body_text": "As a potential alternative, we have implemented a python-only framework for adding custom operators to tensorflow, the Operator Vectorization Library:\nhttps://github.com/opveclib/opveclib. Multi-threaded C++ and CUDA code is automatically generated from the python operators, which can be used in a Tensorflow application with only a binary install of tensorflow. We have implemented the log1p and expm1 operators as an example. See documentation at http://opveclib.readthedocs.io/en/latest/expm1.html", "body": "As a potential alternative, we have implemented a python-only framework for adding custom operators to tensorflow, the Operator Vectorization Library: \nhttps://github.com/opveclib/opveclib. Multi-threaded C++ and CUDA code is automatically generated from the python operators, which can be used in a Tensorflow application with only a binary install of tensorflow. We have implemented the log1p and expm1 operators as an example. See documentation at http://opveclib.readthedocs.io/en/latest/expm1.html\n"}