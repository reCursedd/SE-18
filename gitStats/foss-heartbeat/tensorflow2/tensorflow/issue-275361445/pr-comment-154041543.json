{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/154041543", "pull_request_review_id": 80142165, "id": 154041543, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NDA0MTU0Mw==", "diff_hunk": "@@ -132,6 +133,8 @@ def __init__(self,\n         work.\n       discriminator_optimizer: Same as `generator_optimizer`, but for the\n         discriminator updates.\n+      get_hooks_fn: A function that takes a GANTrainOps tuple and returns a list\n+        of hooks.", "path": "tensorflow/contrib/gan/python/estimator/python/gan_estimator_impl.py", "position": null, "original_position": 13, "commit_id": "329724733a0083ff614faf76efd02cdc1e9bd547", "original_commit_id": "99e4e6a228a4e6f19dacd1c030035e94a951f5f6", "user": {"login": "sleighsoft", "id": 9438971, "node_id": "MDQ6VXNlcjk0Mzg5NzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/9438971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sleighsoft", "html_url": "https://github.com/sleighsoft", "followers_url": "https://api.github.com/users/sleighsoft/followers", "following_url": "https://api.github.com/users/sleighsoft/following{/other_user}", "gists_url": "https://api.github.com/users/sleighsoft/gists{/gist_id}", "starred_url": "https://api.github.com/users/sleighsoft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sleighsoft/subscriptions", "organizations_url": "https://api.github.com/users/sleighsoft/orgs", "repos_url": "https://api.github.com/users/sleighsoft/repos", "events_url": "https://api.github.com/users/sleighsoft/events{/privacy}", "received_events_url": "https://api.github.com/users/sleighsoft/received_events", "type": "User", "site_admin": false}, "body": "The list of hooks represents `training_hooks` to run during `estimator` training. The documentation is taken from `gan.train.get_sequential_train_hooks()`.\r\n In the current implementation it will always default to `gan.train.get_sequential_train_hooks()` which runs the generator for `n` steps and the discriminator for `m` steps.\r\nIf a user would want to run a custom operation in between the generator training and the discriminator training it is currently not possible to do so.\r\nThis change enables the user to build custom training approaches like it is already done with `gan.train.get_joint_train_hooks()` but which is not currently possible to select.\r\n\r\nFurthermore as far as my understanding goes without these changes it is not possible for a `GANEstimator` user to specify `n` and `m` (steps to train generator & discriminator) instead it always train for `n=1` and `m=1`.", "created_at": "2017-11-30T10:49:02Z", "updated_at": "2017-12-05T13:20:34Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/14723#discussion_r154041543", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/14723", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/154041543"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/14723#discussion_r154041543"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/14723"}}, "body_html": "<p>The list of hooks represents <code>training_hooks</code> to run during <code>estimator</code> training. The documentation is taken from <code>gan.train.get_sequential_train_hooks()</code>.<br>\nIn the current implementation it will always default to <code>gan.train.get_sequential_train_hooks()</code> which runs the generator for <code>n</code> steps and the discriminator for <code>m</code> steps.<br>\nIf a user would want to run a custom operation in between the generator training and the discriminator training it is currently not possible to do so.<br>\nThis change enables the user to build custom training approaches like it is already done with <code>gan.train.get_joint_train_hooks()</code> but which is not currently possible to select.</p>\n<p>Furthermore as far as my understanding goes without these changes it is not possible for a <code>GANEstimator</code> user to specify <code>n</code> and <code>m</code> (steps to train generator &amp; discriminator) instead it always train for <code>n=1</code> and <code>m=1</code>.</p>", "body_text": "The list of hooks represents training_hooks to run during estimator training. The documentation is taken from gan.train.get_sequential_train_hooks().\nIn the current implementation it will always default to gan.train.get_sequential_train_hooks() which runs the generator for n steps and the discriminator for m steps.\nIf a user would want to run a custom operation in between the generator training and the discriminator training it is currently not possible to do so.\nThis change enables the user to build custom training approaches like it is already done with gan.train.get_joint_train_hooks() but which is not currently possible to select.\nFurthermore as far as my understanding goes without these changes it is not possible for a GANEstimator user to specify n and m (steps to train generator & discriminator) instead it always train for n=1 and m=1.", "in_reply_to_id": 153799788}