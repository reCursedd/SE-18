{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13438", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13438/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13438/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13438/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/13438", "id": 261970952, "node_id": "MDU6SXNzdWUyNjE5NzA5NTI=", "number": 13438, "title": "The problem in saving and restoring LSTM models", "user": {"login": "FesianXu", "id": 12878858, "node_id": "MDQ6VXNlcjEyODc4ODU4", "avatar_url": "https://avatars3.githubusercontent.com/u/12878858?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FesianXu", "html_url": "https://github.com/FesianXu", "followers_url": "https://api.github.com/users/FesianXu/followers", "following_url": "https://api.github.com/users/FesianXu/following{/other_user}", "gists_url": "https://api.github.com/users/FesianXu/gists{/gist_id}", "starred_url": "https://api.github.com/users/FesianXu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FesianXu/subscriptions", "organizations_url": "https://api.github.com/users/FesianXu/orgs", "repos_url": "https://api.github.com/users/FesianXu/repos", "events_url": "https://api.github.com/users/FesianXu/events{/privacy}", "received_events_url": "https://api.github.com/users/FesianXu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-02T02:48:43Z", "updated_at": "2017-10-02T03:53:23Z", "closed_at": "2017-10-02T03:53:23Z", "author_association": "NONE", "body_html": "<p>I have trained a LSTM model and saved it as a small part of another model. the key code as follows:</p>\n<div class=\"highlight highlight-source-python\"><pre>       initializer <span class=\"pl-k\">=</span> tf.truncated_normal_initializer()\n        <span class=\"pl-k\">with</span> tf.variable_scope(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>RNN_model<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">reuse</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">None</span>, <span class=\"pl-v\">initializer</span><span class=\"pl-k\">=</span>initializer):\n            train_rnn <span class=\"pl-k\">=</span> RNNmodel.LSTMmodel(<span class=\"pl-c1\">True</span>, RNNmodel.<span class=\"pl-c1\">TRAIN_BATCH_SIZE</span>, RNNmodel.<span class=\"pl-c1\">NUM_STEP</span>)\n        <span class=\"pl-k\">with</span> tf.variable_scope(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>RNN_model<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">reuse</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>, <span class=\"pl-v\">initializer</span><span class=\"pl-k\">=</span>initializer):\n            test_rnn <span class=\"pl-k\">=</span> RNNmodel.LSTMmodel(<span class=\"pl-c1\">False</span>, RNNmodel.<span class=\"pl-c1\">EVAL_BATCH_SIZE</span>, RNNmodel.<span class=\"pl-c1\">NUM_STEP</span>)\n        init <span class=\"pl-k\">=</span> tf.global_variables_initializer()\n        sess.run(init)\n        <span class=\"pl-c\"><span class=\"pl-c\">#</span> train here</span>\n        saver.save(sess, saver_path)</pre></div>\n<p>everything looks normal when i restore it <code>saver.restore(sess, saver_path)</code>, but when i run the epoch and reach to the code <code>sess.run(op)</code>, it throws an error saying that</p>\n<blockquote>\n<p>FailedPreconditionError (see above for traceback): Attempting to use uninitialized value RNN_model/RNN/multi_rnn_cell/cell_0/basic_lstm_cell/kernel</p>\n</blockquote>\n<p>and i checked out the ckpt files and found that there was not any variables about LSTM cells so i wonder if <code>Saver().save</code> could save the variables in LSTM cells.Or i just had a wrong practice.</p>", "body_text": "I have trained a LSTM model and saved it as a small part of another model. the key code as follows:\n       initializer = tf.truncated_normal_initializer()\n        with tf.variable_scope('RNN_model', reuse=None, initializer=initializer):\n            train_rnn = RNNmodel.LSTMmodel(True, RNNmodel.TRAIN_BATCH_SIZE, RNNmodel.NUM_STEP)\n        with tf.variable_scope('RNN_model', reuse=True, initializer=initializer):\n            test_rnn = RNNmodel.LSTMmodel(False, RNNmodel.EVAL_BATCH_SIZE, RNNmodel.NUM_STEP)\n        init = tf.global_variables_initializer()\n        sess.run(init)\n        # train here\n        saver.save(sess, saver_path)\neverything looks normal when i restore it saver.restore(sess, saver_path), but when i run the epoch and reach to the code sess.run(op), it throws an error saying that\n\nFailedPreconditionError (see above for traceback): Attempting to use uninitialized value RNN_model/RNN/multi_rnn_cell/cell_0/basic_lstm_cell/kernel\n\nand i checked out the ckpt files and found that there was not any variables about LSTM cells so i wonder if Saver().save could save the variables in LSTM cells.Or i just had a wrong practice.", "body": "I have trained a LSTM model and saved it as a small part of another model. the key code as follows:\r\n```python\r\n       initializer = tf.truncated_normal_initializer()\r\n        with tf.variable_scope('RNN_model', reuse=None, initializer=initializer):\r\n            train_rnn = RNNmodel.LSTMmodel(True, RNNmodel.TRAIN_BATCH_SIZE, RNNmodel.NUM_STEP)\r\n        with tf.variable_scope('RNN_model', reuse=True, initializer=initializer):\r\n            test_rnn = RNNmodel.LSTMmodel(False, RNNmodel.EVAL_BATCH_SIZE, RNNmodel.NUM_STEP)\r\n        init = tf.global_variables_initializer()\r\n        sess.run(init)\r\n        # train here\r\n        saver.save(sess, saver_path)\r\n```\r\n\r\neverything looks normal when i restore it `saver.restore(sess, saver_path)`, but when i run the epoch and reach to the code `sess.run(op)`, it throws an error saying that\r\n> FailedPreconditionError (see above for traceback): Attempting to use uninitialized value RNN_model/RNN/multi_rnn_cell/cell_0/basic_lstm_cell/kernel\r\n\r\nand i checked out the ckpt files and found that there was not any variables about LSTM cells so i wonder if `Saver().save` could save the variables in LSTM cells.Or i just had a wrong practice.\r\n"}