{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18956", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18956/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18956/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18956/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18956", "id": 318691679, "node_id": "MDU6SXNzdWUzMTg2OTE2Nzk=", "number": 18956, "title": "Fail to build cmake with gpu for _lstm and _rnn ops in windows", "user": {"login": "jackyko1991", "id": 12065287, "node_id": "MDQ6VXNlcjEyMDY1Mjg3", "avatar_url": "https://avatars0.githubusercontent.com/u/12065287?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackyko1991", "html_url": "https://github.com/jackyko1991", "followers_url": "https://api.github.com/users/jackyko1991/followers", "following_url": "https://api.github.com/users/jackyko1991/following{/other_user}", "gists_url": "https://api.github.com/users/jackyko1991/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackyko1991/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackyko1991/subscriptions", "organizations_url": "https://api.github.com/users/jackyko1991/orgs", "repos_url": "https://api.github.com/users/jackyko1991/repos", "events_url": "https://api.github.com/users/jackyko1991/events{/privacy}", "received_events_url": "https://api.github.com/users/jackyko1991/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "gunan", "id": 7946809, "node_id": "MDQ6VXNlcjc5NDY4MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7946809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gunan", "html_url": "https://github.com/gunan", "followers_url": "https://api.github.com/users/gunan/followers", "following_url": "https://api.github.com/users/gunan/following{/other_user}", "gists_url": "https://api.github.com/users/gunan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gunan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gunan/subscriptions", "organizations_url": "https://api.github.com/users/gunan/orgs", "repos_url": "https://api.github.com/users/gunan/repos", "events_url": "https://api.github.com/users/gunan/events{/privacy}", "received_events_url": "https://api.github.com/users/gunan/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "gunan", "id": 7946809, "node_id": "MDQ6VXNlcjc5NDY4MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7946809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gunan", "html_url": "https://github.com/gunan", "followers_url": "https://api.github.com/users/gunan/followers", "following_url": "https://api.github.com/users/gunan/following{/other_user}", "gists_url": "https://api.github.com/users/gunan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gunan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gunan/subscriptions", "organizations_url": "https://api.github.com/users/gunan/orgs", "repos_url": "https://api.github.com/users/gunan/repos", "events_url": "https://api.github.com/users/gunan/events{/privacy}", "received_events_url": "https://api.github.com/users/gunan/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-04-29T05:37:17Z", "updated_at": "2018-05-30T17:51:55Z", "closed_at": "2018-05-30T03:14:30Z", "author_association": "CONTRIBUTOR", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: No</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Windows 10</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: source</li>\n<li><strong>TensorFlow version (use command below)</strong>: github master (should be 1.8?)</li>\n<li><strong>Python version</strong>:  3.6</li>\n<li><strong>Bazel version (if compiling from source)</strong>: CMake build</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: MSVC2015</li>\n<li><strong>CUDA/cuDNN version</strong>:  CUDA 9.0 with CUDNN 7.0.5</li>\n<li><strong>GPU model and memory</strong>: GTX 1060 6GB</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<p>cmake <br>\n-DCMAKE_INSTALL_PREFIX=../install/ <br>\n-DCMAKE_BUILD_TYPE=Release <br>\n-Dtensorflow_BUILD_SHARED_LIB=ON <br>\n-Dtensorflow_BUILD_ALL_KERNELS=ON <br>\n-Dtensorflow_BUILD_CONTRIB_KERNELS=ON <br>\n-Dtensorflow_BUILD_CC_EXAMPLE=ON <br>\n-Dtensorflow_BUILD_PYTHON_BINDINGS=ON <br>\n-Dtensorflow_ENABLE_GRPC_SUPPORT=ON <br>\n-Dtensorflow_ENABLE_SSL_SUPPORT=OFF <br>\n-Dtensorflow_BUILD_CC_TESTS=OFF <br>\n-Dtensorflow_BUILD_PYTHON_TESTS=OFF <br>\n-Dtensorflow_ENABLE_GPU=ON ..</p>\n<h3>Describe the problem</h3>\n<p>In the <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/rnn/BUILD\">contrib/rnn</a> build, the gpu resource requires <code>blas_gemm.h</code> . I found this is missed in the cmake<br>\n<a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/cmake/tf_python.cmake\">relevent position</a></p>\n<p>I have built pass in older version of tensorflow release (1.5) but not in 1.8. The cuda object built in rnn should be linked with blas_gemm? How can I modified the cmake files to do this?</p>\n<h3>Source code / logs</h3>\n<p>The cmake file that fails to build</p>\n<div class=\"highlight highlight-source-cmake\"><pre><span class=\"pl-k\">if</span>(<span class=\"pl-k\">WIN32</span>)\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> include contrib/rnn as .so</span>\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span></span>\n    <span class=\"pl-c1\">set</span>(tf_gru_srcs\n        <span class=\"pl-s\">\"<span class=\"pl-smi\">${tensorflow_source_dir}</span>/tensorflow/contrib/rnn/kernels/blas_gemm.cc\"</span>\n        <span class=\"pl-s\">\"<span class=\"pl-smi\">${tensorflow_source_dir}</span>/tensorflow/contrib/rnn/kernels/blas_gemm.h\"</span>\n        <span class=\"pl-s\">\"<span class=\"pl-smi\">${tensorflow_source_dir}</span>/tensorflow/contrib/rnn/kernels/gru_ops.cc\"</span>\n        <span class=\"pl-s\">\"<span class=\"pl-smi\">${tensorflow_source_dir}</span>/tensorflow/contrib/rnn/kernels/gru_ops.h\"</span>\n        <span class=\"pl-s\">\"<span class=\"pl-smi\">${tensorflow_source_dir}</span>/tensorflow/contrib/rnn/ops/gru_ops.cc\"</span>\n    )\n    <span class=\"pl-c1\">set</span>(tf_gru_gpu_srcs\n        <span class=\"pl-s\">\"<span class=\"pl-smi\">${tensorflow_source_dir}</span>/tensorflow/contrib/rnn/kernels/gru_ops_gpu.cu.cc\"</span>\n    )\n\n    <span class=\"pl-c1\">set</span>(tf_lstm_srcs\n        <span class=\"pl-s\">\"<span class=\"pl-smi\">${tensorflow_source_dir}</span>/tensorflow/contrib/rnn/kernels/blas_gemm.cc\"</span>\n        <span class=\"pl-s\">\"<span class=\"pl-smi\">${tensorflow_source_dir}</span>/tensorflow/contrib/rnn/kernels/blas_gemm.h\"</span>\n        <span class=\"pl-s\">\"<span class=\"pl-smi\">${tensorflow_source_dir}</span>/tensorflow/contrib/rnn/kernels/lstm_ops.cc\"</span>\n        <span class=\"pl-s\">\"<span class=\"pl-smi\">${tensorflow_source_dir}</span>/tensorflow/contrib/rnn/kernels/lstm_ops.h\"</span>\n        <span class=\"pl-s\">\"<span class=\"pl-smi\">${tensorflow_source_dir}</span>/tensorflow/contrib/rnn/ops/lstm_ops.cc\"</span>\n    )\n    <span class=\"pl-c1\">set</span>(tf_lstm_gpu_srcs\n        <span class=\"pl-s\">\"<span class=\"pl-smi\">${tensorflow_source_dir}</span>/tensorflow/contrib/rnn/kernels/lstm_ops_gpu.cu.cc\"</span>\n    )\n\n    AddUserOps(<span class=\"pl-k\">TARGET</span> _gru_ops\n        <span class=\"pl-k\">SOURCES</span> <span class=\"pl-s\">\"<span class=\"pl-smi\">${tf_gru_srcs}</span>\"</span>\n        GPUSOURCES <span class=\"pl-smi\">${tf_gru_gpu_srcs}</span>\n        <span class=\"pl-k\">DEPENDS</span> pywrap_tensorflow_internal tf_python_ops\n        DISTCOPY <span class=\"pl-smi\">${CMAKE_CURRENT_BINARY_DIR}</span>/tf_python/tensorflow/contrib/rnn/python/ops/)\n\n    AddUserOps(<span class=\"pl-k\">TARGET</span> _lstm_ops\n        <span class=\"pl-k\">SOURCES</span> <span class=\"pl-s\">\"<span class=\"pl-smi\">${tf_lstm_srcs}</span>\"</span>\n        GPUSOURCES <span class=\"pl-smi\">${tf_lstm_gpu_srcs}</span>\n        <span class=\"pl-k\">DEPENDS</span> pywrap_tensorflow_internal tf_python_ops\n        DISTCOPY <span class=\"pl-smi\">${CMAKE_CURRENT_BINARY_DIR}</span>/tf_python/tensorflow/contrib/rnn/python/ops/)\n<span class=\"pl-k\">endif</span>(<span class=\"pl-k\">WIN32</span>)</pre></div>\n<p>Bazel BUILD file in contrib/rnn:</p>\n<pre lang=\"BAZEL\"><code>tf_custom_op_library(\n    name = \"python/ops/_lstm_ops.so\",\n    srcs = [\n        \"kernels/blas_gemm.cc\",\n        \"kernels/blas_gemm.h\",\n        \"kernels/lstm_ops.cc\",\n        \"kernels/lstm_ops.h\",\n        \"ops/lstm_ops.cc\",\n    ],\n    gpu_srcs = [\n        \"kernels/blas_gemm.h\",\n        \"kernels/lstm_ops_gpu.cu.cc\",\n        \"kernels/lstm_ops.h\",\n    ],\n    deps = [\"//tensorflow/core/kernels:eigen_helpers\"],\n)\n\n...\n\ntf_custom_op_library(\n    name = \"python/ops/_gru_ops.so\",\n    srcs = [\n        \"kernels/blas_gemm.cc\",\n        \"kernels/blas_gemm.h\",\n        \"kernels/gru_ops.cc\",\n        \"kernels/gru_ops.h\",\n        \"ops/gru_ops.cc\",\n    ],\n    gpu_srcs = [\n        \"kernels/blas_gemm.h\",\n        \"kernels/gru_ops_gpu.cu.cc\",\n        \"kernels/gru_ops.h\",\n    ],\n    deps = [\"//tensorflow/core/kernels:eigen_helpers\"],\n)\n\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): No\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10\nTensorFlow installed from (source or binary): source\nTensorFlow version (use command below): github master (should be 1.8?)\nPython version:  3.6\nBazel version (if compiling from source): CMake build\nGCC/Compiler version (if compiling from source): MSVC2015\nCUDA/cuDNN version:  CUDA 9.0 with CUDNN 7.0.5\nGPU model and memory: GTX 1060 6GB\nExact command to reproduce:\n\ncmake \n-DCMAKE_INSTALL_PREFIX=../install/ \n-DCMAKE_BUILD_TYPE=Release \n-Dtensorflow_BUILD_SHARED_LIB=ON \n-Dtensorflow_BUILD_ALL_KERNELS=ON \n-Dtensorflow_BUILD_CONTRIB_KERNELS=ON \n-Dtensorflow_BUILD_CC_EXAMPLE=ON \n-Dtensorflow_BUILD_PYTHON_BINDINGS=ON \n-Dtensorflow_ENABLE_GRPC_SUPPORT=ON \n-Dtensorflow_ENABLE_SSL_SUPPORT=OFF \n-Dtensorflow_BUILD_CC_TESTS=OFF \n-Dtensorflow_BUILD_PYTHON_TESTS=OFF \n-Dtensorflow_ENABLE_GPU=ON ..\nDescribe the problem\nIn the contrib/rnn build, the gpu resource requires blas_gemm.h . I found this is missed in the cmake\nrelevent position\nI have built pass in older version of tensorflow release (1.5) but not in 1.8. The cuda object built in rnn should be linked with blas_gemm? How can I modified the cmake files to do this?\nSource code / logs\nThe cmake file that fails to build\nif(WIN32)\n    # include contrib/rnn as .so\n    #\n    set(tf_gru_srcs\n        \"${tensorflow_source_dir}/tensorflow/contrib/rnn/kernels/blas_gemm.cc\"\n        \"${tensorflow_source_dir}/tensorflow/contrib/rnn/kernels/blas_gemm.h\"\n        \"${tensorflow_source_dir}/tensorflow/contrib/rnn/kernels/gru_ops.cc\"\n        \"${tensorflow_source_dir}/tensorflow/contrib/rnn/kernels/gru_ops.h\"\n        \"${tensorflow_source_dir}/tensorflow/contrib/rnn/ops/gru_ops.cc\"\n    )\n    set(tf_gru_gpu_srcs\n        \"${tensorflow_source_dir}/tensorflow/contrib/rnn/kernels/gru_ops_gpu.cu.cc\"\n    )\n\n    set(tf_lstm_srcs\n        \"${tensorflow_source_dir}/tensorflow/contrib/rnn/kernels/blas_gemm.cc\"\n        \"${tensorflow_source_dir}/tensorflow/contrib/rnn/kernels/blas_gemm.h\"\n        \"${tensorflow_source_dir}/tensorflow/contrib/rnn/kernels/lstm_ops.cc\"\n        \"${tensorflow_source_dir}/tensorflow/contrib/rnn/kernels/lstm_ops.h\"\n        \"${tensorflow_source_dir}/tensorflow/contrib/rnn/ops/lstm_ops.cc\"\n    )\n    set(tf_lstm_gpu_srcs\n        \"${tensorflow_source_dir}/tensorflow/contrib/rnn/kernels/lstm_ops_gpu.cu.cc\"\n    )\n\n    AddUserOps(TARGET _gru_ops\n        SOURCES \"${tf_gru_srcs}\"\n        GPUSOURCES ${tf_gru_gpu_srcs}\n        DEPENDS pywrap_tensorflow_internal tf_python_ops\n        DISTCOPY ${CMAKE_CURRENT_BINARY_DIR}/tf_python/tensorflow/contrib/rnn/python/ops/)\n\n    AddUserOps(TARGET _lstm_ops\n        SOURCES \"${tf_lstm_srcs}\"\n        GPUSOURCES ${tf_lstm_gpu_srcs}\n        DEPENDS pywrap_tensorflow_internal tf_python_ops\n        DISTCOPY ${CMAKE_CURRENT_BINARY_DIR}/tf_python/tensorflow/contrib/rnn/python/ops/)\nendif(WIN32)\nBazel BUILD file in contrib/rnn:\ntf_custom_op_library(\n    name = \"python/ops/_lstm_ops.so\",\n    srcs = [\n        \"kernels/blas_gemm.cc\",\n        \"kernels/blas_gemm.h\",\n        \"kernels/lstm_ops.cc\",\n        \"kernels/lstm_ops.h\",\n        \"ops/lstm_ops.cc\",\n    ],\n    gpu_srcs = [\n        \"kernels/blas_gemm.h\",\n        \"kernels/lstm_ops_gpu.cu.cc\",\n        \"kernels/lstm_ops.h\",\n    ],\n    deps = [\"//tensorflow/core/kernels:eigen_helpers\"],\n)\n\n...\n\ntf_custom_op_library(\n    name = \"python/ops/_gru_ops.so\",\n    srcs = [\n        \"kernels/blas_gemm.cc\",\n        \"kernels/blas_gemm.h\",\n        \"kernels/gru_ops.cc\",\n        \"kernels/gru_ops.h\",\n        \"ops/gru_ops.cc\",\n    ],\n    gpu_srcs = [\n        \"kernels/blas_gemm.h\",\n        \"kernels/gru_ops_gpu.cu.cc\",\n        \"kernels/gru_ops.h\",\n    ],\n    deps = [\"//tensorflow/core/kernels:eigen_helpers\"],\n)", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 10 \r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: github master (should be 1.8?)\r\n- **Python version**:  3.6\r\n- **Bazel version (if compiling from source)**: CMake build\r\n- **GCC/Compiler version (if compiling from source)**: MSVC2015\r\n- **CUDA/cuDNN version**:  CUDA 9.0 with CUDNN 7.0.5\r\n- **GPU model and memory**: GTX 1060 6GB\r\n- **Exact command to reproduce**:\r\n\r\ncmake \\\r\n    \t-DCMAKE_INSTALL_PREFIX=../install/ \\\r\n    \t-DCMAKE_BUILD_TYPE=Release \\\r\n        -Dtensorflow_BUILD_SHARED_LIB=ON \\\r\n    \t-Dtensorflow_BUILD_ALL_KERNELS=ON \\\r\n    \t-Dtensorflow_BUILD_CONTRIB_KERNELS=ON \\\r\n    \t-Dtensorflow_BUILD_CC_EXAMPLE=ON \\\r\n    \t-Dtensorflow_BUILD_PYTHON_BINDINGS=ON \\\r\n    \t-Dtensorflow_ENABLE_GRPC_SUPPORT=ON \\\r\n    \t-Dtensorflow_ENABLE_SSL_SUPPORT=OFF \\\r\n    \t-Dtensorflow_BUILD_CC_TESTS=OFF \\\r\n    \t-Dtensorflow_BUILD_PYTHON_TESTS=OFF \\\r\n        -Dtensorflow_ENABLE_GPU=ON ..\r\n\r\n### Describe the problem\r\nIn the [contrib/rnn](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/rnn/BUILD) build, the gpu resource requires `blas_gemm.h` . I found this is missed in the cmake \r\n[relevent position](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/cmake/tf_python.cmake)\r\n\r\n I have built pass in older version of tensorflow release (1.5) but not in 1.8. The cuda object built in rnn should be linked with blas_gemm? How can I modified the cmake files to do this?\r\n\r\n### Source code / logs\r\nThe cmake file that fails to build\r\n\r\n```cmake\r\nif(WIN32)\r\n    # include contrib/rnn as .so\r\n    #\r\n    set(tf_gru_srcs\r\n        \"${tensorflow_source_dir}/tensorflow/contrib/rnn/kernels/blas_gemm.cc\"\r\n        \"${tensorflow_source_dir}/tensorflow/contrib/rnn/kernels/blas_gemm.h\"\r\n        \"${tensorflow_source_dir}/tensorflow/contrib/rnn/kernels/gru_ops.cc\"\r\n        \"${tensorflow_source_dir}/tensorflow/contrib/rnn/kernels/gru_ops.h\"\r\n        \"${tensorflow_source_dir}/tensorflow/contrib/rnn/ops/gru_ops.cc\"\r\n    )\r\n    set(tf_gru_gpu_srcs\r\n        \"${tensorflow_source_dir}/tensorflow/contrib/rnn/kernels/gru_ops_gpu.cu.cc\"\r\n    )\r\n\r\n    set(tf_lstm_srcs\r\n        \"${tensorflow_source_dir}/tensorflow/contrib/rnn/kernels/blas_gemm.cc\"\r\n        \"${tensorflow_source_dir}/tensorflow/contrib/rnn/kernels/blas_gemm.h\"\r\n        \"${tensorflow_source_dir}/tensorflow/contrib/rnn/kernels/lstm_ops.cc\"\r\n        \"${tensorflow_source_dir}/tensorflow/contrib/rnn/kernels/lstm_ops.h\"\r\n        \"${tensorflow_source_dir}/tensorflow/contrib/rnn/ops/lstm_ops.cc\"\r\n    )\r\n    set(tf_lstm_gpu_srcs\r\n        \"${tensorflow_source_dir}/tensorflow/contrib/rnn/kernels/lstm_ops_gpu.cu.cc\"\r\n    )\r\n\r\n    AddUserOps(TARGET _gru_ops\r\n        SOURCES \"${tf_gru_srcs}\"\r\n        GPUSOURCES ${tf_gru_gpu_srcs}\r\n        DEPENDS pywrap_tensorflow_internal tf_python_ops\r\n        DISTCOPY ${CMAKE_CURRENT_BINARY_DIR}/tf_python/tensorflow/contrib/rnn/python/ops/)\r\n\r\n    AddUserOps(TARGET _lstm_ops\r\n        SOURCES \"${tf_lstm_srcs}\"\r\n        GPUSOURCES ${tf_lstm_gpu_srcs}\r\n        DEPENDS pywrap_tensorflow_internal tf_python_ops\r\n        DISTCOPY ${CMAKE_CURRENT_BINARY_DIR}/tf_python/tensorflow/contrib/rnn/python/ops/)\r\nendif(WIN32)\r\n```\r\n\r\nBazel BUILD file in contrib/rnn:\r\n\r\n```BAZEL\r\ntf_custom_op_library(\r\n    name = \"python/ops/_lstm_ops.so\",\r\n    srcs = [\r\n        \"kernels/blas_gemm.cc\",\r\n        \"kernels/blas_gemm.h\",\r\n        \"kernels/lstm_ops.cc\",\r\n        \"kernels/lstm_ops.h\",\r\n        \"ops/lstm_ops.cc\",\r\n    ],\r\n    gpu_srcs = [\r\n        \"kernels/blas_gemm.h\",\r\n        \"kernels/lstm_ops_gpu.cu.cc\",\r\n        \"kernels/lstm_ops.h\",\r\n    ],\r\n    deps = [\"//tensorflow/core/kernels:eigen_helpers\"],\r\n)\r\n\r\n...\r\n\r\ntf_custom_op_library(\r\n    name = \"python/ops/_gru_ops.so\",\r\n    srcs = [\r\n        \"kernels/blas_gemm.cc\",\r\n        \"kernels/blas_gemm.h\",\r\n        \"kernels/gru_ops.cc\",\r\n        \"kernels/gru_ops.h\",\r\n        \"ops/gru_ops.cc\",\r\n    ],\r\n    gpu_srcs = [\r\n        \"kernels/blas_gemm.h\",\r\n        \"kernels/gru_ops_gpu.cu.cc\",\r\n        \"kernels/gru_ops.h\",\r\n    ],\r\n    deps = [\"//tensorflow/core/kernels:eigen_helpers\"],\r\n)\r\n\r\n```"}