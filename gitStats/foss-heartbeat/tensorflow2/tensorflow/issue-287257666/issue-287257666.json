{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15983", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15983/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15983/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15983/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15983", "id": 287257666, "node_id": "MDU6SXNzdWUyODcyNTc2NjY=", "number": 15983, "title": "Feature request: Reduce learning rate on plateau", "user": {"login": "aneergaard", "id": 10213572, "node_id": "MDQ6VXNlcjEwMjEzNTcy", "avatar_url": "https://avatars1.githubusercontent.com/u/10213572?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aneergaard", "html_url": "https://github.com/aneergaard", "followers_url": "https://api.github.com/users/aneergaard/followers", "following_url": "https://api.github.com/users/aneergaard/following{/other_user}", "gists_url": "https://api.github.com/users/aneergaard/gists{/gist_id}", "starred_url": "https://api.github.com/users/aneergaard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aneergaard/subscriptions", "organizations_url": "https://api.github.com/users/aneergaard/orgs", "repos_url": "https://api.github.com/users/aneergaard/repos", "events_url": "https://api.github.com/users/aneergaard/events{/privacy}", "received_events_url": "https://api.github.com/users/aneergaard/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-01-09T22:49:36Z", "updated_at": "2018-09-04T08:44:12Z", "closed_at": "2018-01-11T17:51:34Z", "author_association": "NONE", "body_html": "<p>Please go to Stack Overflow for help and support:</p>\n<p><a href=\"https://stackoverflow.com/questions/tagged/tensorflow\" rel=\"nofollow\">https://stackoverflow.com/questions/tagged/tensorflow</a></p>\n<p>If you open a GitHub issue, here is our policy:</p>\n<ol>\n<li>It must be a bug or a feature request.</li>\n<li>The form below must be filled out.</li>\n<li>It shouldn't be a TensorBoard issue. Those go <a href=\"https://github.com/tensorflow/tensorboard/issues\">here</a>.</li>\n</ol>\n<p><strong>Here's why we have that policy</strong>: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.</p>\n<hr>\n<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:<br>\nYes. But applies to stock examples as well.</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:<br>\nLinux Ubuntu 16.04.</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:<br>\nBinary.</li>\n<li><strong>TensorFlow version (use command below)</strong>:<br>\nv1.4.0-19-ga52c8d9 1.4.1</li>\n<li><strong>Python version</strong>:<br>\nPython 3.5.4</li>\n<li><strong>Bazel version (if compiling from source)</strong>:<br>\nN/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:<br>\nN/A</li>\n<li><strong>CUDA/cuDNN version</strong>:<br>\nCUDA: V8.0.61<br>\ncuDNN: 6.0.21</li>\n<li><strong>GPU model and memory</strong>:<br>\nGTX 1080Ti 11GB running driver version 384.98</li>\n<li><strong>Exact command to reproduce</strong>:<br>\nN/A. However, I am using the Experiment, Estimator and Dataset APIs in order to do training.</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>Describe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.<br>\nI would like to reduce the learning rate during training. However, I do not want to treat this as another tunable hyperparameter, so I would like this to be based on performance plateauing. In Keras, it is easy to implement learning rate reduction by monitoring the validation loss using the ReduceLROnPlateau callback function, but in TensorFlow this does not seem to be the case/easy. I certainly haven't found any implementation of this, so I propose this as a feature request.</p>\n<p>Feel free to close this if this is not the correct forum.</p>\n<h3>Source code / logs</h3>\n<p>Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.</p>", "body_text": "Please go to Stack Overflow for help and support:\nhttps://stackoverflow.com/questions/tagged/tensorflow\nIf you open a GitHub issue, here is our policy:\n\nIt must be a bug or a feature request.\nThe form below must be filled out.\nIt shouldn't be a TensorBoard issue. Those go here.\n\nHere's why we have that policy: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\n\nSystem information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nYes. But applies to stock examples as well.\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nLinux Ubuntu 16.04.\nTensorFlow installed from (source or binary):\nBinary.\nTensorFlow version (use command below):\nv1.4.0-19-ga52c8d9 1.4.1\nPython version:\nPython 3.5.4\nBazel version (if compiling from source):\nN/A\nGCC/Compiler version (if compiling from source):\nN/A\nCUDA/cuDNN version:\nCUDA: V8.0.61\ncuDNN: 6.0.21\nGPU model and memory:\nGTX 1080Ti 11GB running driver version 384.98\nExact command to reproduce:\nN/A. However, I am using the Experiment, Estimator and Dataset APIs in order to do training.\n\nDescribe the problem\nDescribe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.\nI would like to reduce the learning rate during training. However, I do not want to treat this as another tunable hyperparameter, so I would like this to be based on performance plateauing. In Keras, it is easy to implement learning rate reduction by monitoring the validation loss using the ReduceLROnPlateau callback function, but in TensorFlow this does not seem to be the case/easy. I certainly haven't found any implementation of this, so I propose this as a feature request.\nFeel free to close this if this is not the correct forum.\nSource code / logs\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.", "body": "Please go to Stack Overflow for help and support:\r\n\r\nhttps://stackoverflow.com/questions/tagged/tensorflow\r\n\r\nIf you open a GitHub issue, here is our policy:\r\n\r\n1. It must be a bug or a feature request.\r\n2. The form below must be filled out.\r\n3. It shouldn't be a TensorBoard issue. Those go [here](https://github.com/tensorflow/tensorboard/issues).\r\n\r\n**Here's why we have that policy**: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nYes. But applies to stock examples as well.\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nLinux Ubuntu 16.04.\r\n- **TensorFlow installed from (source or binary)**:\r\nBinary.\r\n- **TensorFlow version (use command below)**:\r\nv1.4.0-19-ga52c8d9 1.4.1\r\n- **Python version**: \r\nPython 3.5.4\r\n- **Bazel version (if compiling from source)**:\r\nN/A\r\n- **GCC/Compiler version (if compiling from source)**:\r\nN/A\r\n- **CUDA/cuDNN version**:\r\nCUDA: V8.0.61\r\ncuDNN: 6.0.21\r\n- **GPU model and memory**:\r\nGTX 1080Ti 11GB running driver version 384.98\r\n- **Exact command to reproduce**:\r\nN/A. However, I am using the Experiment, Estimator and Dataset APIs in order to do training.\r\n\r\n### Describe the problem\r\nDescribe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.\r\nI would like to reduce the learning rate during training. However, I do not want to treat this as another tunable hyperparameter, so I would like this to be based on performance plateauing. In Keras, it is easy to implement learning rate reduction by monitoring the validation loss using the ReduceLROnPlateau callback function, but in TensorFlow this does not seem to be the case/easy. I certainly haven't found any implementation of this, so I propose this as a feature request.\r\n\r\nFeel free to close this if this is not the correct forum.\r\n\r\n### Source code / logs\r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.\r\n"}