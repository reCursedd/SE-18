{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13485", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13485/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13485/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13485/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/13485", "id": 262706719, "node_id": "MDU6SXNzdWUyNjI3MDY3MTk=", "number": 13485, "title": "tf.Session.list_devices seems to return an (int64 *) for device.memory_limit_bytes and leaks", "user": {"login": "sjperkins", "id": 3530212, "node_id": "MDQ6VXNlcjM1MzAyMTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3530212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjperkins", "html_url": "https://github.com/sjperkins", "followers_url": "https://api.github.com/users/sjperkins/followers", "following_url": "https://api.github.com/users/sjperkins/following{/other_user}", "gists_url": "https://api.github.com/users/sjperkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjperkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjperkins/subscriptions", "organizations_url": "https://api.github.com/users/sjperkins/orgs", "repos_url": "https://api.github.com/users/sjperkins/repos", "events_url": "https://api.github.com/users/sjperkins/events{/privacy}", "received_events_url": "https://api.github.com/users/sjperkins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-04T08:34:40Z", "updated_at": "2017-10-04T17:28:08Z", "closed_at": "2017-10-04T17:28:07Z", "author_association": "CONTRIBUTOR", "body_html": "<hr>\n<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:</li>\n</ul>\n<p>no</p>\n<ul>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:</li>\n</ul>\n<p>Linux Ubuntu 16.04</p>\n<ul>\n<li><strong>TensorFlow installed from (source or binary)</strong>:</li>\n</ul>\n<p>binary 1.3.0 GPU</p>\n<ul>\n<li><strong>TensorFlow version (use command below)</strong>:</li>\n</ul>\n<p>('v1.3.0-rc2-20-g0787eee', '1.3.0')</p>\n<ul>\n<li><strong>Python version</strong>:</li>\n</ul>\n<p>Python 2.7.12</p>\n<ul>\n<li><strong>Bazel version (if compiling from source)</strong>:</li>\n</ul>\n<p>N/A</p>\n<ul>\n<li><strong>CUDA/cuDNN version</strong>:</li>\n</ul>\n<p>CUDA 8.0 + cuDNN 6.0</p>\n<ul>\n<li><strong>GPU model and memory</strong>:</li>\n</ul>\n<p>GeForce GTX 960M</p>\n<ul>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> S:\n    <span class=\"pl-k\">for</span> d <span class=\"pl-k\">in</span> S.list_devices():\n        <span class=\"pl-c1\">print</span> d.name, d.device_type, d.memory_limit_bytes</pre></div>\n<p>produces:</p>\n<div class=\"highlight highlight-source-shell\"><pre>2017-10-04 10:31:04.370386: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn<span class=\"pl-s\"><span class=\"pl-pds\">'</span>t compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.</span>\n<span class=\"pl-s\">2017-10-04 10:31:04.370409: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn<span class=\"pl-pds\">'</span></span>t compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\n2017-10-04 10:31:04.370415: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn<span class=\"pl-s\"><span class=\"pl-pds\">'</span>t compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.</span>\n<span class=\"pl-s\">2017-10-04 10:31:04.370419: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn<span class=\"pl-pds\">'</span></span>t compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.\n2017-10-04 10:31:04.370423: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn<span class=\"pl-s\"><span class=\"pl-pds\">'</span>t compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.</span>\n<span class=\"pl-s\">2017-10-04 10:31:04.566504: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:893] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero</span>\n<span class=\"pl-s\">2017-10-04 10:31:04.566814: I tensorflow/core/common_runtime/gpu/gpu_device.cc:955] Found device 0 with properties: </span>\n<span class=\"pl-s\">name: GeForce GTX 960M</span>\n<span class=\"pl-s\">major: 5 minor: 0 memoryClockRate (GHz) 1.176</span>\n<span class=\"pl-s\">pciBusID 0000:01:00.0</span>\n<span class=\"pl-s\">Total memory: 3.95GiB</span>\n<span class=\"pl-s\">Free memory: 3.92GiB</span>\n<span class=\"pl-s\">2017-10-04 10:31:04.566862: I tensorflow/core/common_runtime/gpu/gpu_device.cc:976] DMA: 0 </span>\n<span class=\"pl-s\">2017-10-04 10:31:04.566868: I tensorflow/core/common_runtime/gpu/gpu_device.cc:986] 0:   Y </span>\n<span class=\"pl-s\">2017-10-04 10:31:04.566875: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1045] Creating TensorFlow device (/gpu:0) -&gt; (device: 0, name: GeForce GTX 960M, pci bus id: 0000:01:00.0)</span>\n<span class=\"pl-s\">/job:localhost/replica:0/task:0/device:CPU:0 CPU &lt;Swig Object of type <span class=\"pl-pds\">'</span></span>int64_t <span class=\"pl-k\">*</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span> at 0x7f5c22f61a50&gt;</span>\n<span class=\"pl-s\">/job:localhost/replica:0/task:0/device:GPU:0 GPU &lt;Swig Object of type <span class=\"pl-pds\">'</span></span>int64_t <span class=\"pl-k\">*</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span> at 0x7f5c22f613f0&gt;</span>\n<span class=\"pl-s\">swig/python detected a memory leak of type <span class=\"pl-pds\">'</span></span>int64_t <span class=\"pl-k\">*</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>, no destructor found.</span>\n<span class=\"pl-s\">swig/python detected a memory leak of type <span class=\"pl-pds\">'</span></span>int64_t <span class=\"pl-k\">*</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>, no destructor found.</span></pre></div>\n<h3>Describe the problem</h3>\n<p>The <code>memory_limit_bytes</code> attribute seems to be wrapping an <code>int64 *</code> pointer (as opposed to a int64) and swig seems to think it's leaking this pointer. Also, in the docs its referred to as <a href=\"https://www.tensorflow.org/api_docs/python/tf/Session#list_devices\" rel=\"nofollow\"><code>memory_limit</code></a></p>\n<h3>Source code / logs</h3>\n<p>N/A</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\n\nno\n\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\n\nLinux Ubuntu 16.04\n\nTensorFlow installed from (source or binary):\n\nbinary 1.3.0 GPU\n\nTensorFlow version (use command below):\n\n('v1.3.0-rc2-20-g0787eee', '1.3.0')\n\nPython version:\n\nPython 2.7.12\n\nBazel version (if compiling from source):\n\nN/A\n\nCUDA/cuDNN version:\n\nCUDA 8.0 + cuDNN 6.0\n\nGPU model and memory:\n\nGeForce GTX 960M\n\nExact command to reproduce:\n\nimport tensorflow as tf\n\nwith tf.Session() as S:\n    for d in S.list_devices():\n        print d.name, d.device_type, d.memory_limit_bytes\nproduces:\n2017-10-04 10:31:04.370386: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.\n2017-10-04 10:31:04.370409: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\n2017-10-04 10:31:04.370415: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\n2017-10-04 10:31:04.370419: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.\n2017-10-04 10:31:04.370423: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.\n2017-10-04 10:31:04.566504: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:893] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n2017-10-04 10:31:04.566814: I tensorflow/core/common_runtime/gpu/gpu_device.cc:955] Found device 0 with properties: \nname: GeForce GTX 960M\nmajor: 5 minor: 0 memoryClockRate (GHz) 1.176\npciBusID 0000:01:00.0\nTotal memory: 3.95GiB\nFree memory: 3.92GiB\n2017-10-04 10:31:04.566862: I tensorflow/core/common_runtime/gpu/gpu_device.cc:976] DMA: 0 \n2017-10-04 10:31:04.566868: I tensorflow/core/common_runtime/gpu/gpu_device.cc:986] 0:   Y \n2017-10-04 10:31:04.566875: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1045] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 960M, pci bus id: 0000:01:00.0)\n/job:localhost/replica:0/task:0/device:CPU:0 CPU <Swig Object of type 'int64_t *' at 0x7f5c22f61a50>\n/job:localhost/replica:0/task:0/device:GPU:0 GPU <Swig Object of type 'int64_t *' at 0x7f5c22f613f0>\nswig/python detected a memory leak of type 'int64_t *', no destructor found.\nswig/python detected a memory leak of type 'int64_t *', no destructor found.\nDescribe the problem\nThe memory_limit_bytes attribute seems to be wrapping an int64 * pointer (as opposed to a int64) and swig seems to think it's leaking this pointer. Also, in the docs its referred to as memory_limit\nSource code / logs\nN/A", "body": "------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\n\r\nno\r\n\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\n\r\nLinux Ubuntu 16.04\r\n\r\n- **TensorFlow installed from (source or binary)**:\r\n\r\nbinary 1.3.0 GPU\r\n\r\n- **TensorFlow version (use command below)**:\r\n\r\n('v1.3.0-rc2-20-g0787eee', '1.3.0')\r\n\r\n- **Python version**: \r\n\r\nPython 2.7.12\r\n\r\n- **Bazel version (if compiling from source)**:\r\n\r\nN/A\r\n\r\n- **CUDA/cuDNN version**:\r\n\r\nCUDA 8.0 + cuDNN 6.0\r\n\r\n- **GPU model and memory**:\r\n\r\nGeForce GTX 960M\r\n\r\n- **Exact command to reproduce**:\r\n\r\n```python\r\nimport tensorflow as tf\r\n\r\nwith tf.Session() as S:\r\n    for d in S.list_devices():\r\n        print d.name, d.device_type, d.memory_limit_bytes\r\n```\r\n\r\nproduces:\r\n\r\n```bash\r\n2017-10-04 10:31:04.370386: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.\r\n2017-10-04 10:31:04.370409: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\r\n2017-10-04 10:31:04.370415: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\r\n2017-10-04 10:31:04.370419: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.\r\n2017-10-04 10:31:04.370423: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.\r\n2017-10-04 10:31:04.566504: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:893] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\r\n2017-10-04 10:31:04.566814: I tensorflow/core/common_runtime/gpu/gpu_device.cc:955] Found device 0 with properties: \r\nname: GeForce GTX 960M\r\nmajor: 5 minor: 0 memoryClockRate (GHz) 1.176\r\npciBusID 0000:01:00.0\r\nTotal memory: 3.95GiB\r\nFree memory: 3.92GiB\r\n2017-10-04 10:31:04.566862: I tensorflow/core/common_runtime/gpu/gpu_device.cc:976] DMA: 0 \r\n2017-10-04 10:31:04.566868: I tensorflow/core/common_runtime/gpu/gpu_device.cc:986] 0:   Y \r\n2017-10-04 10:31:04.566875: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1045] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 960M, pci bus id: 0000:01:00.0)\r\n/job:localhost/replica:0/task:0/device:CPU:0 CPU <Swig Object of type 'int64_t *' at 0x7f5c22f61a50>\r\n/job:localhost/replica:0/task:0/device:GPU:0 GPU <Swig Object of type 'int64_t *' at 0x7f5c22f613f0>\r\nswig/python detected a memory leak of type 'int64_t *', no destructor found.\r\nswig/python detected a memory leak of type 'int64_t *', no destructor found.\r\n```\r\n\r\n### Describe the problem\r\n\r\nThe `memory_limit_bytes` attribute seems to be wrapping an `int64 *` pointer (as opposed to a int64) and swig seems to think it's leaking this pointer. Also, in the docs its referred to as [`memory_limit`](https://www.tensorflow.org/api_docs/python/tf/Session#list_devices)\r\n\r\n### Source code / logs\r\n\r\nN/A"}