{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/225853280", "pull_request_review_id": 165540539, "id": 225853280, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNTg1MzI4MA==", "diff_hunk": "@@ -0,0 +1,82 @@\n+/* Copyright 2018 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+\n+package org.tensorflow;\n+\n+/**\n+ * An in-process TensorFlow server, for use in distributed training.\n+ *\n+ * A {@code tf.train.Server} instance encapsulates a set of devices and a\n+ * {@code tf.Session} target that can participate in distributed training. A\n+ * server belongs to a cluster (specified by a {@code tf.train.ClusterSpec}),\n+ * and corresponds to a particular task in a named job. The server can\n+ * communicate with any other server in the same cluster.\n+ *\n+ * <p><b>WARNING:</b>A {@code Server} owns resources that <b>must</b> be\n+ * explicitly freed by invoking {@link #close()}.\n+ *\n+ * <p>Instances of a {@code Server} are thread-safe.\n+ */\n+public final class Server implements AutoCloseable {\n+\n+  /** \n+   * Constructs a new instance of server. \n+   *\n+   * @param config Server definition specified as a serialized\n+   *        <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/protobuf/tensorflow_server.proto\">ServerDef</a>\n+   *        protocol buffer.\n+   */\n+  public Server(byte[] serverDef) {\n+    nativeHandle = allocate(serverDef);\n+  }\n+\n+  /** Starts this server. */\n+  public synchronized void start() {\n+    start(nativeHandle);\n+  }\n+\n+  /** Stops this server. */\n+  public synchronized void stop() {\n+    stop(nativeHandle);\n+  }\n+\n+  /** Blocks until the server has shut down (currently blocks forever). */\n+  public synchronized void join() {\n+    join(nativeHandle);\n+  }\n+\n+  @Override\n+  public void close() {", "path": "tensorflow/java/src/main/java/org/tensorflow/Server.java", "position": null, "original_position": 61, "commit_id": "41311db125e6b5caf30c88bd3697ac7dd18e94fe", "original_commit_id": "231ef238b5e9047ce85ba30e340e09b1a21a585a", "user": {"login": "dmitrievanthony", "id": 1028969, "node_id": "MDQ6VXNlcjEwMjg5Njk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1028969?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmitrievanthony", "html_url": "https://github.com/dmitrievanthony", "followers_url": "https://api.github.com/users/dmitrievanthony/followers", "following_url": "https://api.github.com/users/dmitrievanthony/following{/other_user}", "gists_url": "https://api.github.com/users/dmitrievanthony/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmitrievanthony/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmitrievanthony/subscriptions", "organizations_url": "https://api.github.com/users/dmitrievanthony/orgs", "repos_url": "https://api.github.com/users/dmitrievanthony/repos", "events_url": "https://api.github.com/users/dmitrievanthony/events{/privacy}", "received_events_url": "https://api.github.com/users/dmitrievanthony/received_events", "type": "User", "site_admin": false}, "body": "I would prefer to keep these two methods separately. The reason for that is simple, `Server` is `AutoCloseable` and that means that common use case will look like this:\r\n\r\n```java\r\ntry (Server server = new Server(...)) {\r\n  server.start();\r\n  server.join(); // or server.stop();\r\n}\r\n```\r\n\r\nAs you can see in this case method `close()` will be called automatically after `join`, so it `join` frees resources itself it will lead to illegal state exception.\r\n\r\nBesides that, it would be great to have as similar API in all languages as it possible.", "created_at": "2018-10-17T09:42:25Z", "updated_at": "2018-11-08T20:31:45Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/23022#discussion_r225853280", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/23022", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/225853280"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/23022#discussion_r225853280"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/23022"}}, "body_html": "<p>I would prefer to keep these two methods separately. The reason for that is simple, <code>Server</code> is <code>AutoCloseable</code> and that means that common use case will look like this:</p>\n<div class=\"highlight highlight-source-java\"><pre><span class=\"pl-k\">try</span> (<span class=\"pl-smi\">Server</span> server <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Server</span>(<span class=\"pl-c1\">...</span>)) {\n  server<span class=\"pl-k\">.</span>start();\n  server<span class=\"pl-k\">.</span>join(); <span class=\"pl-c\"><span class=\"pl-c\">//</span> or server.stop();</span>\n}</pre></div>\n<p>As you can see in this case method <code>close()</code> will be called automatically after <code>join</code>, so it <code>join</code> frees resources itself it will lead to illegal state exception.</p>\n<p>Besides that, it would be great to have as similar API in all languages as it possible.</p>", "body_text": "I would prefer to keep these two methods separately. The reason for that is simple, Server is AutoCloseable and that means that common use case will look like this:\ntry (Server server = new Server(...)) {\n  server.start();\n  server.join(); // or server.stop();\n}\nAs you can see in this case method close() will be called automatically after join, so it join frees resources itself it will lead to illegal state exception.\nBesides that, it would be great to have as similar API in all languages as it possible.", "in_reply_to_id": 225780745}