{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23022", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23022/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23022/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23022/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/23022", "id": 370570253, "node_id": "MDExOlB1bGxSZXF1ZXN0MjIzMjE2NzU4", "number": 23022, "title": "Add ability to start TensorFlow server from Java API", "user": {"login": "dmitrievanthony", "id": 1028969, "node_id": "MDQ6VXNlcjEwMjg5Njk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1028969?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmitrievanthony", "html_url": "https://github.com/dmitrievanthony", "followers_url": "https://api.github.com/users/dmitrievanthony/followers", "following_url": "https://api.github.com/users/dmitrievanthony/following{/other_user}", "gists_url": "https://api.github.com/users/dmitrievanthony/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmitrievanthony/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmitrievanthony/subscriptions", "organizations_url": "https://api.github.com/users/dmitrievanthony/orgs", "repos_url": "https://api.github.com/users/dmitrievanthony/repos", "events_url": "https://api.github.com/users/dmitrievanthony/events{/privacy}", "received_events_url": "https://api.github.com/users/dmitrievanthony/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}, {"id": 987666414, "node_id": "MDU6TGFiZWw5ODc2NjY0MTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/ready%20to%20pull", "name": "ready to pull", "color": "2cd643", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "ymodak", "id": 42785357, "node_id": "MDQ6VXNlcjQyNzg1MzU3", "avatar_url": "https://avatars1.githubusercontent.com/u/42785357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ymodak", "html_url": "https://github.com/ymodak", "followers_url": "https://api.github.com/users/ymodak/followers", "following_url": "https://api.github.com/users/ymodak/following{/other_user}", "gists_url": "https://api.github.com/users/ymodak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ymodak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ymodak/subscriptions", "organizations_url": "https://api.github.com/users/ymodak/orgs", "repos_url": "https://api.github.com/users/ymodak/repos", "events_url": "https://api.github.com/users/ymodak/events{/privacy}", "received_events_url": "https://api.github.com/users/ymodak/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ymodak", "id": 42785357, "node_id": "MDQ6VXNlcjQyNzg1MzU3", "avatar_url": "https://avatars1.githubusercontent.com/u/42785357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ymodak", "html_url": "https://github.com/ymodak", "followers_url": "https://api.github.com/users/ymodak/followers", "following_url": "https://api.github.com/users/ymodak/following{/other_user}", "gists_url": "https://api.github.com/users/ymodak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ymodak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ymodak/subscriptions", "organizations_url": "https://api.github.com/users/ymodak/orgs", "repos_url": "https://api.github.com/users/ymodak/repos", "events_url": "https://api.github.com/users/ymodak/events{/privacy}", "received_events_url": "https://api.github.com/users/ymodak/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 16, "created_at": "2018-10-16T11:41:25Z", "updated_at": "2018-11-12T18:59:52Z", "closed_at": "2018-11-12T18:51:08Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/23022", "html_url": "https://github.com/tensorflow/tensorflow/pull/23022", "diff_url": "https://github.com/tensorflow/tensorflow/pull/23022.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/23022.patch"}, "body_html": "<p><a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/distribute/README.md#standalone-client-mode\">Standalone Client Mode</a> allows to easily train model utilizing distributed resources. Only one thing we need to do that is to start TensorFlow server on every cluster node we'd like to participate in training. Because of that it's very important to have an ability to start TensorFlow server in different ways and from any environment. I prepared this request as result of <a href=\"https://groups.google.com/a/tensorflow.org/forum/#!topic/developers/TVtFC94bC8k\" rel=\"nofollow\">discussion on Development List</a>.</p>\n<p>The following example demonstrates how to use TensorFlow server in Java:</p>\n<div class=\"highlight highlight-source-java\"><pre><span class=\"pl-smi\">ClusterDef</span> clusterDef <span class=\"pl-k\">=</span> <span class=\"pl-smi\">ClusterDef</span><span class=\"pl-k\">.</span>newBuilder()\n  .addJob(<span class=\"pl-smi\">JobDef</span><span class=\"pl-k\">.</span>newBuilder()\n  .setName(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>worker<span class=\"pl-pds\">\"</span></span>)\n  .putTasks(<span class=\"pl-c1\">0</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>localhost:4321<span class=\"pl-pds\">\"</span></span>)\n  .build()\n)<span class=\"pl-k\">.</span>build();\n\n<span class=\"pl-smi\">ServerDef</span> serverDef <span class=\"pl-k\">=</span> <span class=\"pl-smi\">ServerDef</span><span class=\"pl-k\">.</span>newBuilder()\n  .setCluster(clusterDef)\n  .setJobName(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>worker<span class=\"pl-pds\">\"</span></span>)\n  .setTaskIndex(<span class=\"pl-c1\">0</span>)\n  .setProtocol(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>grpc<span class=\"pl-pds\">\"</span></span>)\n  .build();\n\n<span class=\"pl-smi\">Server</span> server <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Server</span>(serverDef<span class=\"pl-k\">.</span>toByteArray());\nserver<span class=\"pl-k\">.</span>start();\nserver<span class=\"pl-k\">.</span>join();</pre></div>\n<p>Please, feel free to comment and suggest changes.</p>", "body_text": "Standalone Client Mode allows to easily train model utilizing distributed resources. Only one thing we need to do that is to start TensorFlow server on every cluster node we'd like to participate in training. Because of that it's very important to have an ability to start TensorFlow server in different ways and from any environment. I prepared this request as result of discussion on Development List.\nThe following example demonstrates how to use TensorFlow server in Java:\nClusterDef clusterDef = ClusterDef.newBuilder()\n  .addJob(JobDef.newBuilder()\n  .setName(\"worker\")\n  .putTasks(0, \"localhost:4321\")\n  .build()\n).build();\n\nServerDef serverDef = ServerDef.newBuilder()\n  .setCluster(clusterDef)\n  .setJobName(\"worker\")\n  .setTaskIndex(0)\n  .setProtocol(\"grpc\")\n  .build();\n\nServer server = new Server(serverDef.toByteArray());\nserver.start();\nserver.join();\nPlease, feel free to comment and suggest changes.", "body": "[Standalone Client Mode](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/distribute/README.md#standalone-client-mode) allows to easily train model utilizing distributed resources. Only one thing we need to do that is to start TensorFlow server on every cluster node we'd like to participate in training. Because of that it's very important to have an ability to start TensorFlow server in different ways and from any environment. I prepared this request as result of [discussion on Development List](https://groups.google.com/a/tensorflow.org/forum/#!topic/developers/TVtFC94bC8k).\r\n\r\nThe following example demonstrates how to use TensorFlow server in Java:\r\n```java\r\nClusterDef clusterDef = ClusterDef.newBuilder()\r\n  .addJob(JobDef.newBuilder()\r\n  .setName(\"worker\")\r\n  .putTasks(0, \"localhost:4321\")\r\n  .build()\r\n).build();\r\n\r\nServerDef serverDef = ServerDef.newBuilder()\r\n  .setCluster(clusterDef)\r\n  .setJobName(\"worker\")\r\n  .setTaskIndex(0)\r\n  .setProtocol(\"grpc\")\r\n  .build();\r\n\r\nServer server = new Server(serverDef.toByteArray());\r\nserver.start();\r\nserver.join();\r\n```\r\n\r\nPlease, feel free to comment and suggest changes."}