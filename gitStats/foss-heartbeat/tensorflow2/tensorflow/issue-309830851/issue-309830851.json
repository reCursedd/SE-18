{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18090", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18090/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18090/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18090/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/18090", "id": 309830851, "node_id": "MDExOlB1bGxSZXF1ZXN0MTc4Mzg2MDEz", "number": 18090, "title": "Bounds-check node ID before getting it's name", "user": {"login": "TBastiani", "id": 286440, "node_id": "MDQ6VXNlcjI4NjQ0MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/286440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TBastiani", "html_url": "https://github.com/TBastiani", "followers_url": "https://api.github.com/users/TBastiani/followers", "following_url": "https://api.github.com/users/TBastiani/following{/other_user}", "gists_url": "https://api.github.com/users/TBastiani/gists{/gist_id}", "starred_url": "https://api.github.com/users/TBastiani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TBastiani/subscriptions", "organizations_url": "https://api.github.com/users/TBastiani/orgs", "repos_url": "https://api.github.com/users/TBastiani/repos", "events_url": "https://api.github.com/users/TBastiani/events{/privacy}", "received_events_url": "https://api.github.com/users/TBastiani/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-03-29T16:58:43Z", "updated_at": "2018-04-06T16:56:08Z", "closed_at": "2018-04-06T16:56:07Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/18090", "html_url": "https://github.com/tensorflow/tensorflow/pull/18090", "diff_url": "https://github.com/tensorflow/tensorflow/pull/18090.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/18090.patch"}, "body_html": "<p>When the edge is either a frame enter or exit edge then DescribeCycle() would segfault.</p>\n<p>Here's some code to reproduce this issue.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf                                                                                                                                                                                                                       \n\n<span class=\"pl-k\">with</span> tf.device(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>/cpu:0<span class=\"pl-pds\">'</span></span>):\n    xin <span class=\"pl-k\">=</span> tf.placeholder(tf.float32, [<span class=\"pl-c1\">None</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>], <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>input<span class=\"pl-pds\">'</span></span>)\n    rnn_cell <span class=\"pl-k\">=</span> tf.contrib.rnn.LSTMCell(<span class=\"pl-c1\">1</span>)\n    out, _ <span class=\"pl-k\">=</span> tf.nn.dynamic_rnn(rnn_cell, xin, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.float32)\n    out <span class=\"pl-k\">=</span> tf.layers.batch_normalization(out, <span class=\"pl-v\">training</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>)\n    out <span class=\"pl-k\">=</span> tf.identity(out, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>output<span class=\"pl-pds\">'</span></span>)\n\n    optimiser <span class=\"pl-k\">=</span> tf.train.AdamOptimizer(<span class=\"pl-c1\">.0001</span>)\n    update_ops <span class=\"pl-k\">=</span> tf.get_collection(tf.GraphKeys.<span class=\"pl-c1\">UPDATE_OPS</span>)\n    <span class=\"pl-k\">with</span> tf.control_dependencies(update_ops):\n        out <span class=\"pl-k\">=</span> optimiser.minimize(out, <span class=\"pl-v\">global_step</span><span class=\"pl-k\">=</span>tf.Variable(<span class=\"pl-c1\">0</span>, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.float32), <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>train_op<span class=\"pl-pds\">'</span></span>)\n\nconfig <span class=\"pl-k\">=</span> tf.ConfigProto(<span class=\"pl-v\">allow_soft_placement</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">False</span>)\nsess <span class=\"pl-k\">=</span> tf.Session(<span class=\"pl-v\">config</span><span class=\"pl-k\">=</span>config)\nsess.run(tf.global_variables_initializer())\n\nsample_in <span class=\"pl-k\">=</span> [[[<span class=\"pl-c1\">0</span>]]]\nsess.run(out, <span class=\"pl-v\">feed_dict</span><span class=\"pl-k\">=</span>{xin: sample_in})</pre></div>", "body_text": "When the edge is either a frame enter or exit edge then DescribeCycle() would segfault.\nHere's some code to reproduce this issue.\nimport tensorflow as tf                                                                                                                                                                                                                       \n\nwith tf.device('/cpu:0'):\n    xin = tf.placeholder(tf.float32, [None, 1, 1], name='input')\n    rnn_cell = tf.contrib.rnn.LSTMCell(1)\n    out, _ = tf.nn.dynamic_rnn(rnn_cell, xin, dtype=tf.float32)\n    out = tf.layers.batch_normalization(out, training=True)\n    out = tf.identity(out, name='output')\n\n    optimiser = tf.train.AdamOptimizer(.0001)\n    update_ops = tf.get_collection(tf.GraphKeys.UPDATE_OPS)\n    with tf.control_dependencies(update_ops):\n        out = optimiser.minimize(out, global_step=tf.Variable(0, dtype=tf.float32), name='train_op')\n\nconfig = tf.ConfigProto(allow_soft_placement = False)\nsess = tf.Session(config=config)\nsess.run(tf.global_variables_initializer())\n\nsample_in = [[[0]]]\nsess.run(out, feed_dict={xin: sample_in})", "body": "When the edge is either a frame enter or exit edge then DescribeCycle() would segfault.\r\n\r\nHere's some code to reproduce this issue.\r\n\r\n```Python\r\nimport tensorflow as tf                                                                                                                                                                                                                       \r\n\r\nwith tf.device('/cpu:0'):\r\n    xin = tf.placeholder(tf.float32, [None, 1, 1], name='input')\r\n    rnn_cell = tf.contrib.rnn.LSTMCell(1)\r\n    out, _ = tf.nn.dynamic_rnn(rnn_cell, xin, dtype=tf.float32)\r\n    out = tf.layers.batch_normalization(out, training=True)\r\n    out = tf.identity(out, name='output')\r\n\r\n    optimiser = tf.train.AdamOptimizer(.0001)\r\n    update_ops = tf.get_collection(tf.GraphKeys.UPDATE_OPS)\r\n    with tf.control_dependencies(update_ops):\r\n        out = optimiser.minimize(out, global_step=tf.Variable(0, dtype=tf.float32), name='train_op')\r\n\r\nconfig = tf.ConfigProto(allow_soft_placement = False)\r\nsess = tf.Session(config=config)\r\nsess.run(tf.global_variables_initializer())\r\n\r\nsample_in = [[[0]]]\r\nsess.run(out, feed_dict={xin: sample_in})\r\n```"}