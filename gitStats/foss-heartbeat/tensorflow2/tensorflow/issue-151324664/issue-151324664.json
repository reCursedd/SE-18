{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2127", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2127/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2127/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2127/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/2127", "id": 151324664, "node_id": "MDU6SXNzdWUxNTEzMjQ2NjQ=", "number": 2127, "title": "tf.nn.dynamic_rnn fails when batch_size is 0", "user": {"login": "rshin", "id": 13770, "node_id": "MDQ6VXNlcjEzNzcw", "avatar_url": "https://avatars0.githubusercontent.com/u/13770?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rshin", "html_url": "https://github.com/rshin", "followers_url": "https://api.github.com/users/rshin/followers", "following_url": "https://api.github.com/users/rshin/following{/other_user}", "gists_url": "https://api.github.com/users/rshin/gists{/gist_id}", "starred_url": "https://api.github.com/users/rshin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rshin/subscriptions", "organizations_url": "https://api.github.com/users/rshin/orgs", "repos_url": "https://api.github.com/users/rshin/repos", "events_url": "https://api.github.com/users/rshin/events{/privacy}", "received_events_url": "https://api.github.com/users/rshin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2016-04-27T08:11:28Z", "updated_at": "2017-02-09T22:02:16Z", "closed_at": "2016-05-17T22:06:25Z", "author_association": "CONTRIBUTOR", "body_html": "<h3>Environment info</h3>\n<p>Operating System: Ubuntu 15.10</p>\n<p>Installed version of CUDA and cuDNN:</p>\n<pre><code>-rw-r--r-- 1 root root    322936 Aug 15  2015 /usr/local/cuda/lib64/libcudadevrt.a\nlrwxrwxrwx 1 root root        16 Aug 15  2015 /usr/local/cuda/lib64/libcudart.so -&gt; libcudart.so.7.5\nlrwxrwxrwx 1 root root        19 Aug 15  2015 /usr/local/cuda/lib64/libcudart.so.7.5 -&gt; libcudart.so.7.5.18\n-rwxr-xr-x 1 root root    383336 Aug 15  2015 /usr/local/cuda/lib64/libcudart.so.7.5.18\n-rw-r--r-- 1 root root    720192 Aug 15  2015 /usr/local/cuda/lib64/libcudart_static.a\nlrwxrwxrwx 1 3319 users       13 Feb  9 09:48 /usr/local/cuda/lib64/libcudnn.so -&gt; libcudnn.so.4\nlrwxrwxrwx 1 3319 users       17 Feb  9 09:48 /usr/local/cuda/lib64/libcudnn.so.4 -&gt; libcudnn.so.4.0.7\n-rwxrwxr-x 1 3319 users 61453024 Feb  8 14:12 /usr/local/cuda/lib64/libcudnn.so.4.0.7\n-rw-rw-r-- 1 3319 users 62025862 Feb  8 14:12 /usr/local/cuda/lib64/libcudnn_static.a\n</code></pre>\n<p>Commit hash: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/8d310bfcffcd46418d68dd535fb0fbcfee74b8a0/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/8d310bfcffcd46418d68dd535fb0fbcfee74b8a0\"><tt>8d310bf</tt></a></p>\n<h3>Steps to reproduce</h3>\n<p>Run the following test case:</p>\n<pre><code>import tensorflow as tf\n\noutputs, state = tf.nn.dynamic_rnn(\n  tf.nn.rnn_cell.BasicRNNCell(1),\n  tf.zeros((0, 1, 1)),\n  dtype=tf.float32)\n\nwith tf.Session() as sess:\n  initializer = tf.random_uniform_initializer(-0.1, 0.1)\n  tf.initialize_all_variables().run()\n  print sess.run([state])\n</code></pre>\n<p>When TensorFlow is compiled with <code>-c dbg</code>, this fails with the following message:</p>\n<pre><code>python: external/eigen_archive/eigen-eigen-0823d98fdde7/unsupported/Eigen/CXX11/src/Tensor/TensorIntDiv.h:124: Eigen::internal::TensorIntDivisor&lt;T, div_gt_one&gt;::TensorIntDivisor(T) [with T = long int; bool div_gt_one = false]: Assertion `divider &gt; 0' failed.\n</code></pre>\n<p>Using gdb, we get the following backtrace:</p>\n<pre><code>(gdb) bt\n#0  0x00007ffff7826267 in __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:55\n#1  0x00007ffff7827eca in __GI_abort () at abort.c:89\n#2  0x00007ffff781f03d in __assert_fail_base (fmt=0x7ffff7980fe8 \"%s%s%s:%u: %s%sAssertion `%s' failed.\\n%n\", assertion=assertion@entry=0x7fffeb82f7fe \"divider &gt; 0\",\n    file=file@entry=0x7fffeb82f738 \"external/eigen_archive/eigen-eigen-0823d98fdde7/unsupported/Eigen/CXX11/src/Tensor/TensorIntDiv.h\", line=line@entry=124,\n    function=function@entry=0x7fffeb860080 &lt;Eigen::internal::TensorIntDivisor&lt;int, false&gt;::TensorIntDivisor(int)::__PRETTY_FUNCTION__&gt; \"Eigen::internal::TensorIntDivisor&lt;T, div_gt_one&gt;::TensorIntDivisor(T) [with T = int; bool div_gt_one = false]\") at assert.c:92\n#3  0x00007ffff781f0f2 in __GI___assert_fail (assertion=0x7fffeb82f7fe \"divider &gt; 0\", file=0x7fffeb82f738 \"external/eigen_archive/eigen-eigen-0823d98fdde7/unsupported/Eigen/CXX11/src/Tensor/TensorIntDiv.h\", line=124,\n    function=0x7fffeb860080 &lt;Eigen::internal::TensorIntDivisor&lt;int, false&gt;::TensorIntDivisor(int)::__PRETTY_FUNCTION__&gt; \"Eigen::internal::TensorIntDivisor&lt;T, div_gt_one&gt;::TensorIntDivisor(T) [with T = int; bool div_gt_one = false]\") at assert.c:101\n#4  0x00007fffe9173cf5 in Eigen::internal::TensorIntDivisor&lt;int, false&gt;::TensorIntDivisor (this=0x7fff3dff9e40, divider=0)\n    at external/eigen_archive/eigen-eigen-0823d98fdde7/unsupported/Eigen/CXX11/src/Tensor/TensorIntDiv.h:124\n#5  0x00007fffe9793fd5 in Eigen::TensorEvaluator&lt;Eigen::TensorSlicingOp&lt;Eigen::DSizes&lt;long, 3&gt; const, Eigen::DSizes&lt;long, 3&gt; const, Eigen::TensorMap&lt;Eigen::Tensor&lt;float const, 3, 1, int&gt;, 16&gt; const&gt; const, Eigen::GpuDevice&gt;::TensorEvaluator (this=0x7fff3dff9f20, op=..., device=...) at external/eigen_archive/eigen-eigen-0823d98fdde7/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h:352\n#6  0x00007fffe979370a in Eigen::TensorEvaluator&lt;Eigen::TensorAssignOp&lt;Eigen::TensorMap&lt;Eigen::Tensor&lt;float, 3, 1, int&gt;, 16&gt;, Eigen::TensorSlicingOp&lt;Eigen::DSizes&lt;long, 3&gt; const, Eigen::DSizes&lt;long, 3&gt; const, Eigen::TensorMap&lt;Eigen::Tensor&lt;float const, 3, 1, int&gt;, 16&gt; const&gt; const&gt; const, Eigen::GpuDevice&gt;::TensorEvaluator (this=0x7fff3dff9f00, op=..., device=...)\n    at external/eigen_archive/eigen-eigen-0823d98fdde7/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h:106\n#7  0x00007fffe97930b3 in Eigen::internal::TensorExecutor&lt;Eigen::TensorAssignOp&lt;Eigen::TensorMap&lt;Eigen::Tensor&lt;float, 3, 1, int&gt;, 16&gt;, Eigen::TensorSlicingOp&lt;Eigen::DSizes&lt;long, 3&gt; const, Eigen::DSizes&lt;long, 3&gt; const, Eigen::TensorMap&lt;Eigen::Tensor&lt;float const, 3, 1, int&gt;, 16&gt; const&gt; const&gt; const, Eigen::GpuDevice, false&gt;::run (expr=..., device=...)\n    at external/eigen_archive/eigen-eigen-0823d98fdde7/unsupported/Eigen/CXX11/src/Tensor/TensorExecutor.h:233\n#8  0x00007fffe9792bd2 in Eigen::TensorDevice&lt;Eigen::TensorMap&lt;Eigen::Tensor&lt;float, 3, 1, int&gt;, 16&gt;, Eigen::GpuDevice&gt;::operator=&lt;Eigen::TensorSlicingOp&lt;Eigen::DSizes&lt;long, 3&gt; const, Eigen::DSizes&lt;long, 3&gt; const, Eigen::TensorMap&lt;Eigen::Tensor&lt;float const, 3, 1, int&gt;, 16&gt; const&gt; &gt; (this=0x7fff3dffa040, other=...) at external/eigen_archive/eigen-eigen-0823d98fdde7/unsupported/Eigen/CXX11/src/Tensor/TensorDevice.h:35\n#9  0x00007fffe9792570 in tensorflow::functor::Split&lt;Eigen::GpuDevice, float&gt;::operator() (this=0x7fff3dffa1e0, d=..., output=..., input=..., slice_indices=..., slice_sizes=...)\n    at tensorflow/core/kernels/split_lib_gpu.cu.cc:37\n#10 0x00007fffe96be665 in tensorflow::TensorArrayUnpackOp&lt;Eigen::GpuDevice, float&gt;::Compute (this=0xe44040, ctx=0x7fff3dffab20) at tensorflow/core/kernels/tensor_array_ops.cc:753\n#11 0x00007fffeaf8e561 in tensorflow::BaseGPUDevice::Compute (this=0x2ba8110, op_kernel=0xe44040, context=0x7fff3dffab20) at tensorflow/core/common_runtime/gpu/gpu_device.cc:388\n#12 0x00007fffeb1b22eb in tensorflow::(anonymous namespace)::ExecutorState::Process (this=0xdf4290, tagged_node=..., scheduled_usec=0) at tensorflow/core/common_runtime/executor.cc:1092\n#13 0x00007fffeb1bdbeb in std::_Mem_fn&lt;void (tensorflow::(anonymous namespace)::ExecutorState::*)(tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long)&gt;::operator()&lt;tensorflow::(anonymous namespace)::ExecutorState::TaggedNode&amp;, long long&amp;, void&gt; (this=0x7fff200008c0, __object=0xdf4290) at /usr/include/c++/4.9/functional:569\n#14 0x00007fffeb1bd03e in std::_Bind&lt;std::_Mem_fn&lt;void (tensorflow::(anonymous namespace)::ExecutorState::*)(tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long int)&gt;(tensorflow::(anonymous namespace)::ExecutorState*, tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long int)&gt;::__call&lt;void, 0ul, 1ul, 2ul&gt;(&lt;unknown type in /usr/local/lib/python2.7/dist-packages/tensorflow/python/_pywrap_tensorflow.so, CU 0xf323471, DIE 0xf3a21e7&gt;, std::_Index_tuple&lt;0ul, 1ul, 2ul&gt;) (this=0x7fff200008c0, __args=&lt;unknown type in /usr/local/lib/python2.7/dist-packages/tensorflow/python/_pywrap_tensorflow.so, CU 0xf323471, DIE 0xf3a21e7&gt;)\n    at /usr/include/c++/4.9/functional:1264\n#15 0x00007fffeb1bb69a in std::_Bind&lt;std::_Mem_fn&lt;void (tensorflow::(anonymous namespace)::ExecutorState::*)(tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long int)&gt;(tensorflow::(anonymous namespace)::ExecutorState*, tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long int)&gt;::operator()&lt;, void&gt;(void) (this=0x7fff200008c0) at /usr/include/c++/4.9/functional:1323\n#16 0x00007fffeb1b98b6 in std::_Function_handler&lt;void(), std::_Bind&lt;std::_Mem_fn&lt;void (tensorflow::(anonymous namespace)::ExecutorState::*)(tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long int)&gt;(tensorflow::(anonymous namespace)::ExecutorState*, tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long int)&gt; &gt;::_M_invoke(const std::_Any_data &amp;) (__functor=...) at /usr/include/c++/4.9/functional:2039\n#17 0x00007fffe8e4788c in std::function&lt;void ()&gt;::operator()() const (this=0x7fff3dffadd0) at /usr/include/c++/4.9/functional:2439\n#18 0x00007fffeb450454 in tensorflow::thread::ThreadPool::Impl::WorkerLoop (this=0x2bb28f0) at tensorflow/core/lib/core/threadpool.cc:196\n#19 0x00007fffeb44fe95 in tensorflow::thread::ThreadPool::Impl::Impl(tensorflow::Env*, tensorflow::ThreadOptions const&amp;, std::string const&amp;, int)::{lambda()#1}::operator()() const ()\n    at tensorflow/core/lib/core/threadpool.cc:123\n#20 0x00007fffeb45086d in std::_Function_handler&lt;void(), tensorflow::thread::ThreadPool::Impl::Impl(tensorflow::Env*, const tensorflow::ThreadOptions&amp;, const string&amp;, int)::&lt;lambda()&gt; &gt;::_M_invoke(const std::_Any_data &amp;) (\n    __functor=...) at /usr/include/c++/4.9/functional:2039\n#21 0x00007fffe8e4788c in std::function&lt;void ()&gt;::operator()() const (this=0x2bb4c48) at /usr/include/c++/4.9/functional:2439\n#22 0x00007fffeb471f5e in std::_Bind_simple&lt;std::function&lt;void ()&gt; ()&gt;::_M_invoke&lt;&gt;(std::_Index_tuple&lt;&gt;) (this=0x2bb4c48) at /usr/include/c++/4.9/functional:1700\n#23 0x00007fffeb471ea3 in std::_Bind_simple&lt;std::function&lt;void ()&gt; ()&gt;::operator()() (this=0x2bb4c48) at /usr/include/c++/4.9/functional:1688\n#24 0x00007fffeb471e20 in std::thread::_Impl&lt;std::_Bind_simple&lt;std::function&lt;void ()&gt; ()&gt; &gt;::_M_run() (this=0x2bb4c30) at /usr/include/c++/4.9/thread:115\n#25 0x00007fffdc3bc030 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\n#26 0x00007ffff7bc26aa in start_thread (arg=0x7fff3dffb700) at pthread_create.c:333\n#27 0x00007ffff78f7e9d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\n\n(gdb) f 10\n#10 0x00007fffe96be665 in tensorflow::TensorArrayUnpackOp&lt;Eigen::GpuDevice, float&gt;::Compute (this=0xe44040, ctx=0x7fff3dffab20) at tensorflow/core/kernels/tensor_array_ops.cc:753\n753           functor::Split&lt;Device, T&gt;()(ctx-&gt;eigen_device&lt;Device&gt;(), tensor_value_i_t,\n(gdb) p this-&gt;name()\n$1 = (const std::string &amp;) @0xdc49e0: {static npos = &lt;optimized out&gt;, _M_dataplus = {&lt;std::allocator&lt;char&gt;&gt; = {&lt;__gnu_cxx::new_allocator&lt;char&gt;&gt; = {&lt;No data fields&gt;}, &lt;No data fields&gt;},\n    _M_p = 0x2bee918 \"RNN/TensorArrayUnpack\"}}\n</code></pre>", "body_text": "Environment info\nOperating System: Ubuntu 15.10\nInstalled version of CUDA and cuDNN:\n-rw-r--r-- 1 root root    322936 Aug 15  2015 /usr/local/cuda/lib64/libcudadevrt.a\nlrwxrwxrwx 1 root root        16 Aug 15  2015 /usr/local/cuda/lib64/libcudart.so -> libcudart.so.7.5\nlrwxrwxrwx 1 root root        19 Aug 15  2015 /usr/local/cuda/lib64/libcudart.so.7.5 -> libcudart.so.7.5.18\n-rwxr-xr-x 1 root root    383336 Aug 15  2015 /usr/local/cuda/lib64/libcudart.so.7.5.18\n-rw-r--r-- 1 root root    720192 Aug 15  2015 /usr/local/cuda/lib64/libcudart_static.a\nlrwxrwxrwx 1 3319 users       13 Feb  9 09:48 /usr/local/cuda/lib64/libcudnn.so -> libcudnn.so.4\nlrwxrwxrwx 1 3319 users       17 Feb  9 09:48 /usr/local/cuda/lib64/libcudnn.so.4 -> libcudnn.so.4.0.7\n-rwxrwxr-x 1 3319 users 61453024 Feb  8 14:12 /usr/local/cuda/lib64/libcudnn.so.4.0.7\n-rw-rw-r-- 1 3319 users 62025862 Feb  8 14:12 /usr/local/cuda/lib64/libcudnn_static.a\n\nCommit hash: 8d310bf\nSteps to reproduce\nRun the following test case:\nimport tensorflow as tf\n\noutputs, state = tf.nn.dynamic_rnn(\n  tf.nn.rnn_cell.BasicRNNCell(1),\n  tf.zeros((0, 1, 1)),\n  dtype=tf.float32)\n\nwith tf.Session() as sess:\n  initializer = tf.random_uniform_initializer(-0.1, 0.1)\n  tf.initialize_all_variables().run()\n  print sess.run([state])\n\nWhen TensorFlow is compiled with -c dbg, this fails with the following message:\npython: external/eigen_archive/eigen-eigen-0823d98fdde7/unsupported/Eigen/CXX11/src/Tensor/TensorIntDiv.h:124: Eigen::internal::TensorIntDivisor<T, div_gt_one>::TensorIntDivisor(T) [with T = long int; bool div_gt_one = false]: Assertion `divider > 0' failed.\n\nUsing gdb, we get the following backtrace:\n(gdb) bt\n#0  0x00007ffff7826267 in __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:55\n#1  0x00007ffff7827eca in __GI_abort () at abort.c:89\n#2  0x00007ffff781f03d in __assert_fail_base (fmt=0x7ffff7980fe8 \"%s%s%s:%u: %s%sAssertion `%s' failed.\\n%n\", assertion=assertion@entry=0x7fffeb82f7fe \"divider > 0\",\n    file=file@entry=0x7fffeb82f738 \"external/eigen_archive/eigen-eigen-0823d98fdde7/unsupported/Eigen/CXX11/src/Tensor/TensorIntDiv.h\", line=line@entry=124,\n    function=function@entry=0x7fffeb860080 <Eigen::internal::TensorIntDivisor<int, false>::TensorIntDivisor(int)::__PRETTY_FUNCTION__> \"Eigen::internal::TensorIntDivisor<T, div_gt_one>::TensorIntDivisor(T) [with T = int; bool div_gt_one = false]\") at assert.c:92\n#3  0x00007ffff781f0f2 in __GI___assert_fail (assertion=0x7fffeb82f7fe \"divider > 0\", file=0x7fffeb82f738 \"external/eigen_archive/eigen-eigen-0823d98fdde7/unsupported/Eigen/CXX11/src/Tensor/TensorIntDiv.h\", line=124,\n    function=0x7fffeb860080 <Eigen::internal::TensorIntDivisor<int, false>::TensorIntDivisor(int)::__PRETTY_FUNCTION__> \"Eigen::internal::TensorIntDivisor<T, div_gt_one>::TensorIntDivisor(T) [with T = int; bool div_gt_one = false]\") at assert.c:101\n#4  0x00007fffe9173cf5 in Eigen::internal::TensorIntDivisor<int, false>::TensorIntDivisor (this=0x7fff3dff9e40, divider=0)\n    at external/eigen_archive/eigen-eigen-0823d98fdde7/unsupported/Eigen/CXX11/src/Tensor/TensorIntDiv.h:124\n#5  0x00007fffe9793fd5 in Eigen::TensorEvaluator<Eigen::TensorSlicingOp<Eigen::DSizes<long, 3> const, Eigen::DSizes<long, 3> const, Eigen::TensorMap<Eigen::Tensor<float const, 3, 1, int>, 16> const> const, Eigen::GpuDevice>::TensorEvaluator (this=0x7fff3dff9f20, op=..., device=...) at external/eigen_archive/eigen-eigen-0823d98fdde7/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h:352\n#6  0x00007fffe979370a in Eigen::TensorEvaluator<Eigen::TensorAssignOp<Eigen::TensorMap<Eigen::Tensor<float, 3, 1, int>, 16>, Eigen::TensorSlicingOp<Eigen::DSizes<long, 3> const, Eigen::DSizes<long, 3> const, Eigen::TensorMap<Eigen::Tensor<float const, 3, 1, int>, 16> const> const> const, Eigen::GpuDevice>::TensorEvaluator (this=0x7fff3dff9f00, op=..., device=...)\n    at external/eigen_archive/eigen-eigen-0823d98fdde7/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h:106\n#7  0x00007fffe97930b3 in Eigen::internal::TensorExecutor<Eigen::TensorAssignOp<Eigen::TensorMap<Eigen::Tensor<float, 3, 1, int>, 16>, Eigen::TensorSlicingOp<Eigen::DSizes<long, 3> const, Eigen::DSizes<long, 3> const, Eigen::TensorMap<Eigen::Tensor<float const, 3, 1, int>, 16> const> const> const, Eigen::GpuDevice, false>::run (expr=..., device=...)\n    at external/eigen_archive/eigen-eigen-0823d98fdde7/unsupported/Eigen/CXX11/src/Tensor/TensorExecutor.h:233\n#8  0x00007fffe9792bd2 in Eigen::TensorDevice<Eigen::TensorMap<Eigen::Tensor<float, 3, 1, int>, 16>, Eigen::GpuDevice>::operator=<Eigen::TensorSlicingOp<Eigen::DSizes<long, 3> const, Eigen::DSizes<long, 3> const, Eigen::TensorMap<Eigen::Tensor<float const, 3, 1, int>, 16> const> > (this=0x7fff3dffa040, other=...) at external/eigen_archive/eigen-eigen-0823d98fdde7/unsupported/Eigen/CXX11/src/Tensor/TensorDevice.h:35\n#9  0x00007fffe9792570 in tensorflow::functor::Split<Eigen::GpuDevice, float>::operator() (this=0x7fff3dffa1e0, d=..., output=..., input=..., slice_indices=..., slice_sizes=...)\n    at tensorflow/core/kernels/split_lib_gpu.cu.cc:37\n#10 0x00007fffe96be665 in tensorflow::TensorArrayUnpackOp<Eigen::GpuDevice, float>::Compute (this=0xe44040, ctx=0x7fff3dffab20) at tensorflow/core/kernels/tensor_array_ops.cc:753\n#11 0x00007fffeaf8e561 in tensorflow::BaseGPUDevice::Compute (this=0x2ba8110, op_kernel=0xe44040, context=0x7fff3dffab20) at tensorflow/core/common_runtime/gpu/gpu_device.cc:388\n#12 0x00007fffeb1b22eb in tensorflow::(anonymous namespace)::ExecutorState::Process (this=0xdf4290, tagged_node=..., scheduled_usec=0) at tensorflow/core/common_runtime/executor.cc:1092\n#13 0x00007fffeb1bdbeb in std::_Mem_fn<void (tensorflow::(anonymous namespace)::ExecutorState::*)(tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long)>::operator()<tensorflow::(anonymous namespace)::ExecutorState::TaggedNode&, long long&, void> (this=0x7fff200008c0, __object=0xdf4290) at /usr/include/c++/4.9/functional:569\n#14 0x00007fffeb1bd03e in std::_Bind<std::_Mem_fn<void (tensorflow::(anonymous namespace)::ExecutorState::*)(tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long int)>(tensorflow::(anonymous namespace)::ExecutorState*, tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long int)>::__call<void, 0ul, 1ul, 2ul>(<unknown type in /usr/local/lib/python2.7/dist-packages/tensorflow/python/_pywrap_tensorflow.so, CU 0xf323471, DIE 0xf3a21e7>, std::_Index_tuple<0ul, 1ul, 2ul>) (this=0x7fff200008c0, __args=<unknown type in /usr/local/lib/python2.7/dist-packages/tensorflow/python/_pywrap_tensorflow.so, CU 0xf323471, DIE 0xf3a21e7>)\n    at /usr/include/c++/4.9/functional:1264\n#15 0x00007fffeb1bb69a in std::_Bind<std::_Mem_fn<void (tensorflow::(anonymous namespace)::ExecutorState::*)(tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long int)>(tensorflow::(anonymous namespace)::ExecutorState*, tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long int)>::operator()<, void>(void) (this=0x7fff200008c0) at /usr/include/c++/4.9/functional:1323\n#16 0x00007fffeb1b98b6 in std::_Function_handler<void(), std::_Bind<std::_Mem_fn<void (tensorflow::(anonymous namespace)::ExecutorState::*)(tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long int)>(tensorflow::(anonymous namespace)::ExecutorState*, tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long int)> >::_M_invoke(const std::_Any_data &) (__functor=...) at /usr/include/c++/4.9/functional:2039\n#17 0x00007fffe8e4788c in std::function<void ()>::operator()() const (this=0x7fff3dffadd0) at /usr/include/c++/4.9/functional:2439\n#18 0x00007fffeb450454 in tensorflow::thread::ThreadPool::Impl::WorkerLoop (this=0x2bb28f0) at tensorflow/core/lib/core/threadpool.cc:196\n#19 0x00007fffeb44fe95 in tensorflow::thread::ThreadPool::Impl::Impl(tensorflow::Env*, tensorflow::ThreadOptions const&, std::string const&, int)::{lambda()#1}::operator()() const ()\n    at tensorflow/core/lib/core/threadpool.cc:123\n#20 0x00007fffeb45086d in std::_Function_handler<void(), tensorflow::thread::ThreadPool::Impl::Impl(tensorflow::Env*, const tensorflow::ThreadOptions&, const string&, int)::<lambda()> >::_M_invoke(const std::_Any_data &) (\n    __functor=...) at /usr/include/c++/4.9/functional:2039\n#21 0x00007fffe8e4788c in std::function<void ()>::operator()() const (this=0x2bb4c48) at /usr/include/c++/4.9/functional:2439\n#22 0x00007fffeb471f5e in std::_Bind_simple<std::function<void ()> ()>::_M_invoke<>(std::_Index_tuple<>) (this=0x2bb4c48) at /usr/include/c++/4.9/functional:1700\n#23 0x00007fffeb471ea3 in std::_Bind_simple<std::function<void ()> ()>::operator()() (this=0x2bb4c48) at /usr/include/c++/4.9/functional:1688\n#24 0x00007fffeb471e20 in std::thread::_Impl<std::_Bind_simple<std::function<void ()> ()> >::_M_run() (this=0x2bb4c30) at /usr/include/c++/4.9/thread:115\n#25 0x00007fffdc3bc030 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\n#26 0x00007ffff7bc26aa in start_thread (arg=0x7fff3dffb700) at pthread_create.c:333\n#27 0x00007ffff78f7e9d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\n\n(gdb) f 10\n#10 0x00007fffe96be665 in tensorflow::TensorArrayUnpackOp<Eigen::GpuDevice, float>::Compute (this=0xe44040, ctx=0x7fff3dffab20) at tensorflow/core/kernels/tensor_array_ops.cc:753\n753           functor::Split<Device, T>()(ctx->eigen_device<Device>(), tensor_value_i_t,\n(gdb) p this->name()\n$1 = (const std::string &) @0xdc49e0: {static npos = <optimized out>, _M_dataplus = {<std::allocator<char>> = {<__gnu_cxx::new_allocator<char>> = {<No data fields>}, <No data fields>},\n    _M_p = 0x2bee918 \"RNN/TensorArrayUnpack\"}}", "body": "### Environment info\n\nOperating System: Ubuntu 15.10\n\nInstalled version of CUDA and cuDNN: \n\n```\n-rw-r--r-- 1 root root    322936 Aug 15  2015 /usr/local/cuda/lib64/libcudadevrt.a\nlrwxrwxrwx 1 root root        16 Aug 15  2015 /usr/local/cuda/lib64/libcudart.so -> libcudart.so.7.5\nlrwxrwxrwx 1 root root        19 Aug 15  2015 /usr/local/cuda/lib64/libcudart.so.7.5 -> libcudart.so.7.5.18\n-rwxr-xr-x 1 root root    383336 Aug 15  2015 /usr/local/cuda/lib64/libcudart.so.7.5.18\n-rw-r--r-- 1 root root    720192 Aug 15  2015 /usr/local/cuda/lib64/libcudart_static.a\nlrwxrwxrwx 1 3319 users       13 Feb  9 09:48 /usr/local/cuda/lib64/libcudnn.so -> libcudnn.so.4\nlrwxrwxrwx 1 3319 users       17 Feb  9 09:48 /usr/local/cuda/lib64/libcudnn.so.4 -> libcudnn.so.4.0.7\n-rwxrwxr-x 1 3319 users 61453024 Feb  8 14:12 /usr/local/cuda/lib64/libcudnn.so.4.0.7\n-rw-rw-r-- 1 3319 users 62025862 Feb  8 14:12 /usr/local/cuda/lib64/libcudnn_static.a\n```\n\nCommit hash: 8d310bfcffcd46418d68dd535fb0fbcfee74b8a0\n### Steps to reproduce\n\nRun the following test case:\n\n```\nimport tensorflow as tf\n\noutputs, state = tf.nn.dynamic_rnn(\n  tf.nn.rnn_cell.BasicRNNCell(1),\n  tf.zeros((0, 1, 1)),\n  dtype=tf.float32)\n\nwith tf.Session() as sess:\n  initializer = tf.random_uniform_initializer(-0.1, 0.1)\n  tf.initialize_all_variables().run()\n  print sess.run([state])\n```\n\nWhen TensorFlow is compiled with `-c dbg`, this fails with the following message:\n\n```\npython: external/eigen_archive/eigen-eigen-0823d98fdde7/unsupported/Eigen/CXX11/src/Tensor/TensorIntDiv.h:124: Eigen::internal::TensorIntDivisor<T, div_gt_one>::TensorIntDivisor(T) [with T = long int; bool div_gt_one = false]: Assertion `divider > 0' failed.\n```\n\nUsing gdb, we get the following backtrace:\n\n```\n(gdb) bt\n#0  0x00007ffff7826267 in __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:55\n#1  0x00007ffff7827eca in __GI_abort () at abort.c:89\n#2  0x00007ffff781f03d in __assert_fail_base (fmt=0x7ffff7980fe8 \"%s%s%s:%u: %s%sAssertion `%s' failed.\\n%n\", assertion=assertion@entry=0x7fffeb82f7fe \"divider > 0\",\n    file=file@entry=0x7fffeb82f738 \"external/eigen_archive/eigen-eigen-0823d98fdde7/unsupported/Eigen/CXX11/src/Tensor/TensorIntDiv.h\", line=line@entry=124,\n    function=function@entry=0x7fffeb860080 <Eigen::internal::TensorIntDivisor<int, false>::TensorIntDivisor(int)::__PRETTY_FUNCTION__> \"Eigen::internal::TensorIntDivisor<T, div_gt_one>::TensorIntDivisor(T) [with T = int; bool div_gt_one = false]\") at assert.c:92\n#3  0x00007ffff781f0f2 in __GI___assert_fail (assertion=0x7fffeb82f7fe \"divider > 0\", file=0x7fffeb82f738 \"external/eigen_archive/eigen-eigen-0823d98fdde7/unsupported/Eigen/CXX11/src/Tensor/TensorIntDiv.h\", line=124,\n    function=0x7fffeb860080 <Eigen::internal::TensorIntDivisor<int, false>::TensorIntDivisor(int)::__PRETTY_FUNCTION__> \"Eigen::internal::TensorIntDivisor<T, div_gt_one>::TensorIntDivisor(T) [with T = int; bool div_gt_one = false]\") at assert.c:101\n#4  0x00007fffe9173cf5 in Eigen::internal::TensorIntDivisor<int, false>::TensorIntDivisor (this=0x7fff3dff9e40, divider=0)\n    at external/eigen_archive/eigen-eigen-0823d98fdde7/unsupported/Eigen/CXX11/src/Tensor/TensorIntDiv.h:124\n#5  0x00007fffe9793fd5 in Eigen::TensorEvaluator<Eigen::TensorSlicingOp<Eigen::DSizes<long, 3> const, Eigen::DSizes<long, 3> const, Eigen::TensorMap<Eigen::Tensor<float const, 3, 1, int>, 16> const> const, Eigen::GpuDevice>::TensorEvaluator (this=0x7fff3dff9f20, op=..., device=...) at external/eigen_archive/eigen-eigen-0823d98fdde7/unsupported/Eigen/CXX11/src/Tensor/TensorMorphing.h:352\n#6  0x00007fffe979370a in Eigen::TensorEvaluator<Eigen::TensorAssignOp<Eigen::TensorMap<Eigen::Tensor<float, 3, 1, int>, 16>, Eigen::TensorSlicingOp<Eigen::DSizes<long, 3> const, Eigen::DSizes<long, 3> const, Eigen::TensorMap<Eigen::Tensor<float const, 3, 1, int>, 16> const> const> const, Eigen::GpuDevice>::TensorEvaluator (this=0x7fff3dff9f00, op=..., device=...)\n    at external/eigen_archive/eigen-eigen-0823d98fdde7/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h:106\n#7  0x00007fffe97930b3 in Eigen::internal::TensorExecutor<Eigen::TensorAssignOp<Eigen::TensorMap<Eigen::Tensor<float, 3, 1, int>, 16>, Eigen::TensorSlicingOp<Eigen::DSizes<long, 3> const, Eigen::DSizes<long, 3> const, Eigen::TensorMap<Eigen::Tensor<float const, 3, 1, int>, 16> const> const> const, Eigen::GpuDevice, false>::run (expr=..., device=...)\n    at external/eigen_archive/eigen-eigen-0823d98fdde7/unsupported/Eigen/CXX11/src/Tensor/TensorExecutor.h:233\n#8  0x00007fffe9792bd2 in Eigen::TensorDevice<Eigen::TensorMap<Eigen::Tensor<float, 3, 1, int>, 16>, Eigen::GpuDevice>::operator=<Eigen::TensorSlicingOp<Eigen::DSizes<long, 3> const, Eigen::DSizes<long, 3> const, Eigen::TensorMap<Eigen::Tensor<float const, 3, 1, int>, 16> const> > (this=0x7fff3dffa040, other=...) at external/eigen_archive/eigen-eigen-0823d98fdde7/unsupported/Eigen/CXX11/src/Tensor/TensorDevice.h:35\n#9  0x00007fffe9792570 in tensorflow::functor::Split<Eigen::GpuDevice, float>::operator() (this=0x7fff3dffa1e0, d=..., output=..., input=..., slice_indices=..., slice_sizes=...)\n    at tensorflow/core/kernels/split_lib_gpu.cu.cc:37\n#10 0x00007fffe96be665 in tensorflow::TensorArrayUnpackOp<Eigen::GpuDevice, float>::Compute (this=0xe44040, ctx=0x7fff3dffab20) at tensorflow/core/kernels/tensor_array_ops.cc:753\n#11 0x00007fffeaf8e561 in tensorflow::BaseGPUDevice::Compute (this=0x2ba8110, op_kernel=0xe44040, context=0x7fff3dffab20) at tensorflow/core/common_runtime/gpu/gpu_device.cc:388\n#12 0x00007fffeb1b22eb in tensorflow::(anonymous namespace)::ExecutorState::Process (this=0xdf4290, tagged_node=..., scheduled_usec=0) at tensorflow/core/common_runtime/executor.cc:1092\n#13 0x00007fffeb1bdbeb in std::_Mem_fn<void (tensorflow::(anonymous namespace)::ExecutorState::*)(tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long)>::operator()<tensorflow::(anonymous namespace)::ExecutorState::TaggedNode&, long long&, void> (this=0x7fff200008c0, __object=0xdf4290) at /usr/include/c++/4.9/functional:569\n#14 0x00007fffeb1bd03e in std::_Bind<std::_Mem_fn<void (tensorflow::(anonymous namespace)::ExecutorState::*)(tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long int)>(tensorflow::(anonymous namespace)::ExecutorState*, tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long int)>::__call<void, 0ul, 1ul, 2ul>(<unknown type in /usr/local/lib/python2.7/dist-packages/tensorflow/python/_pywrap_tensorflow.so, CU 0xf323471, DIE 0xf3a21e7>, std::_Index_tuple<0ul, 1ul, 2ul>) (this=0x7fff200008c0, __args=<unknown type in /usr/local/lib/python2.7/dist-packages/tensorflow/python/_pywrap_tensorflow.so, CU 0xf323471, DIE 0xf3a21e7>)\n    at /usr/include/c++/4.9/functional:1264\n#15 0x00007fffeb1bb69a in std::_Bind<std::_Mem_fn<void (tensorflow::(anonymous namespace)::ExecutorState::*)(tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long int)>(tensorflow::(anonymous namespace)::ExecutorState*, tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long int)>::operator()<, void>(void) (this=0x7fff200008c0) at /usr/include/c++/4.9/functional:1323\n#16 0x00007fffeb1b98b6 in std::_Function_handler<void(), std::_Bind<std::_Mem_fn<void (tensorflow::(anonymous namespace)::ExecutorState::*)(tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long int)>(tensorflow::(anonymous namespace)::ExecutorState*, tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long int)> >::_M_invoke(const std::_Any_data &) (__functor=...) at /usr/include/c++/4.9/functional:2039\n#17 0x00007fffe8e4788c in std::function<void ()>::operator()() const (this=0x7fff3dffadd0) at /usr/include/c++/4.9/functional:2439\n#18 0x00007fffeb450454 in tensorflow::thread::ThreadPool::Impl::WorkerLoop (this=0x2bb28f0) at tensorflow/core/lib/core/threadpool.cc:196\n#19 0x00007fffeb44fe95 in tensorflow::thread::ThreadPool::Impl::Impl(tensorflow::Env*, tensorflow::ThreadOptions const&, std::string const&, int)::{lambda()#1}::operator()() const ()\n    at tensorflow/core/lib/core/threadpool.cc:123\n#20 0x00007fffeb45086d in std::_Function_handler<void(), tensorflow::thread::ThreadPool::Impl::Impl(tensorflow::Env*, const tensorflow::ThreadOptions&, const string&, int)::<lambda()> >::_M_invoke(const std::_Any_data &) (\n    __functor=...) at /usr/include/c++/4.9/functional:2039\n#21 0x00007fffe8e4788c in std::function<void ()>::operator()() const (this=0x2bb4c48) at /usr/include/c++/4.9/functional:2439\n#22 0x00007fffeb471f5e in std::_Bind_simple<std::function<void ()> ()>::_M_invoke<>(std::_Index_tuple<>) (this=0x2bb4c48) at /usr/include/c++/4.9/functional:1700\n#23 0x00007fffeb471ea3 in std::_Bind_simple<std::function<void ()> ()>::operator()() (this=0x2bb4c48) at /usr/include/c++/4.9/functional:1688\n#24 0x00007fffeb471e20 in std::thread::_Impl<std::_Bind_simple<std::function<void ()> ()> >::_M_run() (this=0x2bb4c30) at /usr/include/c++/4.9/thread:115\n#25 0x00007fffdc3bc030 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\n#26 0x00007ffff7bc26aa in start_thread (arg=0x7fff3dffb700) at pthread_create.c:333\n#27 0x00007ffff78f7e9d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\n\n(gdb) f 10\n#10 0x00007fffe96be665 in tensorflow::TensorArrayUnpackOp<Eigen::GpuDevice, float>::Compute (this=0xe44040, ctx=0x7fff3dffab20) at tensorflow/core/kernels/tensor_array_ops.cc:753\n753           functor::Split<Device, T>()(ctx->eigen_device<Device>(), tensor_value_i_t,\n(gdb) p this->name()\n$1 = (const std::string &) @0xdc49e0: {static npos = <optimized out>, _M_dataplus = {<std::allocator<char>> = {<__gnu_cxx::new_allocator<char>> = {<No data fields>}, <No data fields>},\n    _M_p = 0x2bee918 \"RNN/TensorArrayUnpack\"}}\n```\n"}