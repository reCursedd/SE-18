{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17354", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17354/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17354/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17354/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17354", "id": 301407955, "node_id": "MDU6SXNzdWUzMDE0MDc5NTU=", "number": 17354, "title": "Throw Exception instead of Crash when out of BFC memory allocation", "user": {"login": "ghostplant", "id": 12099308, "node_id": "MDQ6VXNlcjEyMDk5MzA4", "avatar_url": "https://avatars2.githubusercontent.com/u/12099308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghostplant", "html_url": "https://github.com/ghostplant", "followers_url": "https://api.github.com/users/ghostplant/followers", "following_url": "https://api.github.com/users/ghostplant/following{/other_user}", "gists_url": "https://api.github.com/users/ghostplant/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghostplant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghostplant/subscriptions", "organizations_url": "https://api.github.com/users/ghostplant/orgs", "repos_url": "https://api.github.com/users/ghostplant/repos", "events_url": "https://api.github.com/users/ghostplant/events{/privacy}", "received_events_url": "https://api.github.com/users/ghostplant/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-03-01T13:40:49Z", "updated_at": "2018-03-02T18:39:06Z", "closed_at": "2018-03-01T19:02:35Z", "author_association": "CONTRIBUTOR", "body_html": "<p>For huge application model, the memory is easy to overflow and the framework will quit after plenty of Out-of-memory logs. Is it possible to just quickly throw an Exception in python runtime instead of killing the whole program?</p>", "body_text": "For huge application model, the memory is easy to overflow and the framework will quit after plenty of Out-of-memory logs. Is it possible to just quickly throw an Exception in python runtime instead of killing the whole program?", "body": "For huge application model, the memory is easy to overflow and the framework will quit after plenty of Out-of-memory logs. Is it possible to just quickly throw an Exception in python runtime instead of killing the whole program?"}