{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/83241703", "pull_request_review_id": 4097203, "id": 83241703, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgzMjQxNzAz", "diff_hunk": "@@ -16,33 +18,34 @@ py_library(\n         \"//tensorflow/contrib/bayesflow:bayesflow_py\",\n         \"//tensorflow/contrib/copy_graph:copy_graph_py\",\n         \"//tensorflow/contrib/crf:crf_py\",\n-        \"//tensorflow/contrib/cudnn_rnn:cudnn_rnn_py\",\n         \"//tensorflow/contrib/distributions:distributions_py\",\n-        \"//tensorflow/contrib/factorization:factorization_py\",\n-        \"//tensorflow/contrib/ffmpeg:ffmpeg_ops_py\",\n         \"//tensorflow/contrib/framework:framework_py\",\n         \"//tensorflow/contrib/graph_editor:graph_editor_py\",\n         \"//tensorflow/contrib/grid_rnn:grid_rnn_py\",\n         \"//tensorflow/contrib/layers:layers_py\",\n-        \"//tensorflow/contrib/learn\",\n         \"//tensorflow/contrib/linear_optimizer:sdca_ops_py\",\n         \"//tensorflow/contrib/lookup:lookup_py\",\n         \"//tensorflow/contrib/losses:losses_py\",\n-        \"//tensorflow/contrib/metrics:metrics_py\",\n         \"//tensorflow/contrib/opt:opt_py\",\n-        \"//tensorflow/contrib/quantization:quantization_py\",\n-        \"//tensorflow/contrib/rnn:rnn_py\",\n-        \"//tensorflow/contrib/seq2seq:seq2seq_py\",\n         \"//tensorflow/contrib/slim\",\n         \"//tensorflow/contrib/slim:nets\",\n-        \"//tensorflow/contrib/tensor_forest:tensor_forest_py\",\n-        \"//tensorflow/contrib/tensor_forest/hybrid:ops_lib\",\n         \"//tensorflow/contrib/tensorboard\",\n         \"//tensorflow/contrib/testing:testing_py\",\n         \"//tensorflow/contrib/tfprof\",\n         \"//tensorflow/contrib/training:training_py\",\n         \"//tensorflow/contrib/util:util_py\",\n-    ],\n+    ] + if_not_windows([\n+        \"//tensorflow/contrib/cudnn_rnn:cudnn_rnn_py\",\n+        \"//tensorflow/contrib/factorization:factorization_py\",\n+        \"//tensorflow/contrib/ffmpeg:ffmpeg_ops_py\",\n+        \"//tensorflow/contrib/learn\",\n+        \"//tensorflow/contrib/metrics:metrics_py\",\n+        \"//tensorflow/contrib/quantization:quantization_py\",\n+        \"//tensorflow/contrib/rnn:rnn_py\",\n+        \"//tensorflow/contrib/seq2seq:seq2seq_py\",\n+        \"//tensorflow/contrib/tensor_forest:tensor_forest_py\",\n+        \"//tensorflow/contrib/tensor_forest/hybrid:ops_lib\",\n+    ]),", "path": "tensorflow/contrib/BUILD", "position": null, "original_position": 51, "commit_id": "a981a7dae464a04236c25c114872c02a4e3c574e", "original_commit_id": "38077a9dc0d076845eee39c3b52f055d30a7e29f", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "body": "If these aren't present in the PIP package, will this not cause import statements to fail as soon as you use `tf.contrib`?\n\n(I understand that some of these have explicit `tf.load_op_library()` calls at the top level that will fail, but we could address those by statically linking those ops into `_pywrap_tensorflow.pyd`.)\n\nIt looks like you've already modified some of these dependencies, e.g. for `//tensorflow/contrib/layers:layers_py`. If you don't want to modify all of the dependencies, perhaps in the short term we should just not build `:contrib_py` on Windows?\n", "created_at": "2016-10-13T15:20:18Z", "updated_at": "2016-10-19T11:12:03Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/4942#discussion_r83241703", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/4942", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/83241703"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/4942#discussion_r83241703"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/4942"}}, "body_html": "<p>If these aren't present in the PIP package, will this not cause import statements to fail as soon as you use <code>tf.contrib</code>?</p>\n<p>(I understand that some of these have explicit <code>tf.load_op_library()</code> calls at the top level that will fail, but we could address those by statically linking those ops into <code>_pywrap_tensorflow.pyd</code>.)</p>\n<p>It looks like you've already modified some of these dependencies, e.g. for <code>//tensorflow/contrib/layers:layers_py</code>. If you don't want to modify all of the dependencies, perhaps in the short term we should just not build <code>:contrib_py</code> on Windows?</p>", "body_text": "If these aren't present in the PIP package, will this not cause import statements to fail as soon as you use tf.contrib?\n(I understand that some of these have explicit tf.load_op_library() calls at the top level that will fail, but we could address those by statically linking those ops into _pywrap_tensorflow.pyd.)\nIt looks like you've already modified some of these dependencies, e.g. for //tensorflow/contrib/layers:layers_py. If you don't want to modify all of the dependencies, perhaps in the short term we should just not build :contrib_py on Windows?"}