{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/355504231", "html_url": "https://github.com/tensorflow/tensorflow/issues/15213#issuecomment-355504231", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15213", "id": 355504231, "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTUwNDIzMQ==", "user": {"login": "rongjiecomputer", "id": 13115060, "node_id": "MDQ6VXNlcjEzMTE1MDYw", "avatar_url": "https://avatars2.githubusercontent.com/u/13115060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rongjiecomputer", "html_url": "https://github.com/rongjiecomputer", "followers_url": "https://api.github.com/users/rongjiecomputer/followers", "following_url": "https://api.github.com/users/rongjiecomputer/following{/other_user}", "gists_url": "https://api.github.com/users/rongjiecomputer/gists{/gist_id}", "starred_url": "https://api.github.com/users/rongjiecomputer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rongjiecomputer/subscriptions", "organizations_url": "https://api.github.com/users/rongjiecomputer/orgs", "repos_url": "https://api.github.com/users/rongjiecomputer/repos", "events_url": "https://api.github.com/users/rongjiecomputer/events{/privacy}", "received_events_url": "https://api.github.com/users/rongjiecomputer/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-05T08:58:33Z", "updated_at": "2018-01-05T08:58:33Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Status update:</p>\n<p>Most of the changes needed to make <code>tfcompile</code> built and run on Windows have been merged. As promised, I made a repo with all the instructions to build and use XLA/AOT on Windows. (Contributions are welcomed to improve my silly MNIST C++ demo).</p>\n<p><a href=\"https://github.com/rongjiecomputer/tensorflow-xla-aot-windows\">https://github.com/rongjiecomputer/tensorflow-xla-aot-windows</a></p>\n<p>There are some obstacles that prevent XLA/AOT to work out of the box for Windows users:</p>\n<ul>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"283089723\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/15466\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/tensorflow/tensorflow/pull/15466/hovercard\" href=\"https://github.com/tensorflow/tensorflow/pull/15466\">#15466</a> : Tensorflow team and Bazel team are still discussing about how to set global compile flags, a solved problem in build system like CMake.</li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"276022961\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/bazelbuild/bazel/issues/4149\" data-hovercard-type=\"issue\" data-hovercard-url=\"/bazelbuild/bazel/issues/4149/hovercard\" href=\"https://github.com/bazelbuild/bazel/issues/4149\">bazelbuild/bazel#4149</a> : Bazel tends to generate long path name, sometime it exceed the max path length on Windows. Changes to Bazel's design are needed to fix this.</li>\n<li>Bazel runfiles on Windows (used by <code>freeze_graph</code> target). Waiting <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"276022961\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/bazelbuild/bazel/issues/4149\" data-hovercard-type=\"issue\" data-hovercard-url=\"/bazelbuild/bazel/issues/4149/hovercard\" href=\"https://github.com/bazelbuild/bazel/issues/4149\">bazelbuild/bazel#4149</a> and <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"283165892\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/15475\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/tensorflow/tensorflow/pull/15475/hovercard\" href=\"https://github.com/tensorflow/tensorflow/pull/15475\">#15475</a>.</li>\n</ul>\n<p>It should be possible to build components of XLA/AOT with CMake, but unfortunately Tensorflow's CMake build scripts are written specifically for MSBuild. It just won't work with Ninja which I prefer. Any CMake expert is welcomed to bring XLA/AOT to CMake so that both LLVM and Tensorflow can be built together in CMake directly.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5453737\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/tatatodd\">@tatatodd</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=348932\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/hawkinsp\">@hawkinsp</a></p>\n<blockquote>\n<p>llvm.BUILD is auto-generated and the script to generate it is not open-sourced.</p>\n</blockquote>\n<p>Any thoughts on this? My handcrafted <a href=\"https://github.com/rongjiecomputer/tensorflow-xla-aot-windows/blob/master/BUILD.bazel\">BUILD.bazel</a> is quite similar to the auto-generated <a href=\"https://github.com/tensorflow/tensorflow/blob/master/third_party/llvm/llvm.BUILD\">llvm.BUILD</a>. Since its purpose is to import prebuilt libraries, headers and some defines to Tensorflow, I think it is possible to make it works on Linux and Mac OS as well (the only problem is I don't have machines to test).</p>\n<p>Please do not close this issue yet. It is far from being \"fixed\".</p>", "body_text": "Status update:\nMost of the changes needed to make tfcompile built and run on Windows have been merged. As promised, I made a repo with all the instructions to build and use XLA/AOT on Windows. (Contributions are welcomed to improve my silly MNIST C++ demo).\nhttps://github.com/rongjiecomputer/tensorflow-xla-aot-windows\nThere are some obstacles that prevent XLA/AOT to work out of the box for Windows users:\n\n#15466 : Tensorflow team and Bazel team are still discussing about how to set global compile flags, a solved problem in build system like CMake.\nbazelbuild/bazel#4149 : Bazel tends to generate long path name, sometime it exceed the max path length on Windows. Changes to Bazel's design are needed to fix this.\nBazel runfiles on Windows (used by freeze_graph target). Waiting bazelbuild/bazel#4149 and #15475.\n\nIt should be possible to build components of XLA/AOT with CMake, but unfortunately Tensorflow's CMake build scripts are written specifically for MSBuild. It just won't work with Ninja which I prefer. Any CMake expert is welcomed to bring XLA/AOT to CMake so that both LLVM and Tensorflow can be built together in CMake directly.\n@tatatodd @hawkinsp\n\nllvm.BUILD is auto-generated and the script to generate it is not open-sourced.\n\nAny thoughts on this? My handcrafted BUILD.bazel is quite similar to the auto-generated llvm.BUILD. Since its purpose is to import prebuilt libraries, headers and some defines to Tensorflow, I think it is possible to make it works on Linux and Mac OS as well (the only problem is I don't have machines to test).\nPlease do not close this issue yet. It is far from being \"fixed\".", "body": "Status update:\r\n\r\nMost of the changes needed to make `tfcompile` built and run on Windows have been merged. As promised, I made a repo with all the instructions to build and use XLA/AOT on Windows. (Contributions are welcomed to improve my silly MNIST C++ demo).\r\n\r\nhttps://github.com/rongjiecomputer/tensorflow-xla-aot-windows\r\n\r\nThere are some obstacles that prevent XLA/AOT to work out of the box for Windows users:\r\n- https://github.com/tensorflow/tensorflow/pull/15466 : Tensorflow team and Bazel team are still discussing about how to set global compile flags, a solved problem in build system like CMake.\r\n- https://github.com/bazelbuild/bazel/issues/4149 : Bazel tends to generate long path name, sometime it exceed the max path length on Windows. Changes to Bazel's design are needed to fix this.\r\n- Bazel runfiles on Windows (used by `freeze_graph` target). Waiting https://github.com/bazelbuild/bazel/issues/4149 and https://github.com/tensorflow/tensorflow/pull/15475.\r\n\r\nIt should be possible to build components of XLA/AOT with CMake, but unfortunately Tensorflow's CMake build scripts are written specifically for MSBuild. It just won't work with Ninja which I prefer. Any CMake expert is welcomed to bring XLA/AOT to CMake so that both LLVM and Tensorflow can be built together in CMake directly.\r\n\r\n@tatatodd @hawkinsp\r\n\r\n> llvm.BUILD is auto-generated and the script to generate it is not open-sourced.\r\n\r\nAny thoughts on this? My handcrafted [BUILD.bazel](https://github.com/rongjiecomputer/tensorflow-xla-aot-windows/blob/master/BUILD.bazel) is quite similar to the auto-generated [llvm.BUILD](https://github.com/tensorflow/tensorflow/blob/master/third_party/llvm/llvm.BUILD). Since its purpose is to import prebuilt libraries, headers and some defines to Tensorflow, I think it is possible to make it works on Linux and Mac OS as well (the only problem is I don't have machines to test).\r\n\r\nPlease do not close this issue yet. It is far from being \"fixed\"."}