{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13577", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13577/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13577/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13577/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/13577", "id": 263799015, "node_id": "MDU6SXNzdWUyNjM3OTkwMTU=", "number": 13577, "title": "Size of TFRecord is much more larger than CSV format", "user": {"login": "wenruij", "id": 5120224, "node_id": "MDQ6VXNlcjUxMjAyMjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5120224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wenruij", "html_url": "https://github.com/wenruij", "followers_url": "https://api.github.com/users/wenruij/followers", "following_url": "https://api.github.com/users/wenruij/following{/other_user}", "gists_url": "https://api.github.com/users/wenruij/gists{/gist_id}", "starred_url": "https://api.github.com/users/wenruij/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wenruij/subscriptions", "organizations_url": "https://api.github.com/users/wenruij/orgs", "repos_url": "https://api.github.com/users/wenruij/repos", "events_url": "https://api.github.com/users/wenruij/events{/privacy}", "received_events_url": "https://api.github.com/users/wenruij/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-10-09T06:56:46Z", "updated_at": "2018-01-24T03:01:00Z", "closed_at": "2018-01-24T03:01:00Z", "author_association": "NONE", "body_html": "<h3>Testing Data:</h3>\n<p><code>adult.data</code> in <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/learn/wide_n_deep_tutorial.py\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/learn/wide_n_deep_tutorial.py</a></p>\n<h3>Problem:</h3>\n<p>To use a <code>tf.contrib.data.TFRecordDataset</code>, i tried to convert <code>adult.data</code> in CSV into a TFRecord, but i just found that the <strong>TFRecord</strong> after converted is about <strong>12MB</strong>, while the original <strong>CSV</strong> is only about <strong>3MB</strong>, oops, <strong>why the storage efficiency for TFRecord is so poor\uff1f</strong></p>\n<h3>Source code for converting CSV to TFRecord:</h3>\n<pre><code>def _int64_feature(value):\n    return tf.train.Feature(int64_list=tf.train.Int64List(value=value))\n\ndef _bytes_feature(value):\n    return tf.train.Feature(bytes_list=tf.train.BytesList(value=value))\n\ndef csv2proto(\n        data_source,\n        all_cols,\n        categorical_cols=[],\n        continuous_cols=[],\n        multi_values_cols=[],\n        inner_delimiter=';'):\n    if not os.path.isfile(data_source):\n        raise ValueError('data file passed do not exist or not a file')\n\n    file_name = os.path.splitext(data_source)[0] + '.tfrecords'\n    writer = tf.python_io.TFRecordWriter(file_name)\n    with open(data_source) as f:\n        reader = csv.DictReader(f, fieldnames=all_cols)\n        for row in reader:\n            feature = dict()\n            for col in categorical_cols:\n                feature.update({col: _bytes_feature([row[col]])})\n            for col in continuous_cols:\n                feature.update({col: _int64_feature([int(row[col])])})\n            for col in multi_values_cols:\n                feature.update({col: _bytes_feature(row[col].split(inner_delimiter))})\n\n            example = tf.train.Example(features=tf.train.Features(feature=feature))\n            writer.write(example.SerializeToString())\n\n        writer.close()\n</code></pre>\n<h3>System information:</h3>\n<ul>\n<li><strong>OS Platform</strong>:  Mac OS X 10.12.5</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: pip install</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.3.0</li>\n<li><strong>Python version</strong>:  2.7</li>\n<li><strong>Bazel version (if compiling from source)</strong>: None</li>\n<li><strong>CUDA/cuDNN version</strong>: None</li>\n<li><strong>GPU model and memory</strong>: None</li>\n</ul>", "body_text": "Testing Data:\nadult.data in https://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/learn/wide_n_deep_tutorial.py\nProblem:\nTo use a tf.contrib.data.TFRecordDataset, i tried to convert adult.data in CSV into a TFRecord, but i just found that the TFRecord after converted is about 12MB, while the original CSV is only about 3MB, oops, why the storage efficiency for TFRecord is so poor\uff1f\nSource code for converting CSV to TFRecord:\ndef _int64_feature(value):\n    return tf.train.Feature(int64_list=tf.train.Int64List(value=value))\n\ndef _bytes_feature(value):\n    return tf.train.Feature(bytes_list=tf.train.BytesList(value=value))\n\ndef csv2proto(\n        data_source,\n        all_cols,\n        categorical_cols=[],\n        continuous_cols=[],\n        multi_values_cols=[],\n        inner_delimiter=';'):\n    if not os.path.isfile(data_source):\n        raise ValueError('data file passed do not exist or not a file')\n\n    file_name = os.path.splitext(data_source)[0] + '.tfrecords'\n    writer = tf.python_io.TFRecordWriter(file_name)\n    with open(data_source) as f:\n        reader = csv.DictReader(f, fieldnames=all_cols)\n        for row in reader:\n            feature = dict()\n            for col in categorical_cols:\n                feature.update({col: _bytes_feature([row[col]])})\n            for col in continuous_cols:\n                feature.update({col: _int64_feature([int(row[col])])})\n            for col in multi_values_cols:\n                feature.update({col: _bytes_feature(row[col].split(inner_delimiter))})\n\n            example = tf.train.Example(features=tf.train.Features(feature=feature))\n            writer.write(example.SerializeToString())\n\n        writer.close()\n\nSystem information:\n\nOS Platform:  Mac OS X 10.12.5\nTensorFlow installed from (source or binary): pip install\nTensorFlow version (use command below): 1.3.0\nPython version:  2.7\nBazel version (if compiling from source): None\nCUDA/cuDNN version: None\nGPU model and memory: None", "body": "### Testing Data:\r\n `adult.data` in https://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/learn/wide_n_deep_tutorial.py\r\n### Problem:\r\nTo use a `tf.contrib.data.TFRecordDataset`, i tried to convert `adult.data` in CSV into a TFRecord, but i just found that the **TFRecord** after converted is about **12MB**, while the original **CSV** is only about **3MB**, oops, **why the storage efficiency for TFRecord is so poor\uff1f**\r\n\r\n### Source code for converting CSV to TFRecord:\r\n```\r\ndef _int64_feature(value):\r\n    return tf.train.Feature(int64_list=tf.train.Int64List(value=value))\r\n\r\ndef _bytes_feature(value):\r\n    return tf.train.Feature(bytes_list=tf.train.BytesList(value=value))\r\n\r\ndef csv2proto(\r\n        data_source,\r\n        all_cols,\r\n        categorical_cols=[],\r\n        continuous_cols=[],\r\n        multi_values_cols=[],\r\n        inner_delimiter=';'):\r\n    if not os.path.isfile(data_source):\r\n        raise ValueError('data file passed do not exist or not a file')\r\n\r\n    file_name = os.path.splitext(data_source)[0] + '.tfrecords'\r\n    writer = tf.python_io.TFRecordWriter(file_name)\r\n    with open(data_source) as f:\r\n        reader = csv.DictReader(f, fieldnames=all_cols)\r\n        for row in reader:\r\n            feature = dict()\r\n            for col in categorical_cols:\r\n                feature.update({col: _bytes_feature([row[col]])})\r\n            for col in continuous_cols:\r\n                feature.update({col: _int64_feature([int(row[col])])})\r\n            for col in multi_values_cols:\r\n                feature.update({col: _bytes_feature(row[col].split(inner_delimiter))})\r\n\r\n            example = tf.train.Example(features=tf.train.Features(feature=feature))\r\n            writer.write(example.SerializeToString())\r\n\r\n        writer.close()\r\n```\r\n\r\n### System information:\r\n- **OS Platform**:  Mac OS X 10.12.5\r\n- **TensorFlow installed from (source or binary)**: pip install\r\n- **TensorFlow version (use command below)**: 1.3.0\r\n- **Python version**:  2.7\r\n- **Bazel version (if compiling from source)**: None\r\n- **CUDA/cuDNN version**: None\r\n- **GPU model and memory**: None"}