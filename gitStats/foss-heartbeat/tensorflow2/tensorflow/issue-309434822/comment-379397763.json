{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/379397763", "html_url": "https://github.com/tensorflow/tensorflow/issues/18055#issuecomment-379397763", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18055", "id": 379397763, "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTM5Nzc2Mw==", "user": {"login": "peastman", "id": 4379786, "node_id": "MDQ6VXNlcjQzNzk3ODY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4379786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peastman", "html_url": "https://github.com/peastman", "followers_url": "https://api.github.com/users/peastman/followers", "following_url": "https://api.github.com/users/peastman/following{/other_user}", "gists_url": "https://api.github.com/users/peastman/gists{/gist_id}", "starred_url": "https://api.github.com/users/peastman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peastman/subscriptions", "organizations_url": "https://api.github.com/users/peastman/orgs", "repos_url": "https://api.github.com/users/peastman/repos", "events_url": "https://api.github.com/users/peastman/events{/privacy}", "received_events_url": "https://api.github.com/users/peastman/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-06T22:06:49Z", "updated_at": "2018-04-06T22:06:49Z", "author_association": "NONE", "body_html": "<p>I tried your test, and sure enough if I run it directly it works.  However, if I run it using <code>nosetests</code> it gets skipped:</p>\n<pre><code>$ nosetests --nocapture -v test.py\nReturns a TensorFlow Session for use in executing tests. ... ok\n\n----------------------------------------------------------------------\nRan 1 test in 0.001s\n\nOK\n</code></pre>\n<p>In addition, if I tell it to run just that one test rather than all tests in the file</p>\n<pre><code>$ nosetests test.py:MyTest.test_foo\n</code></pre>\n<p>then it fails:</p>\n<pre><code>Traceback (most recent call last):\n  File \"/Users/peastman/miniconda3/lib/python3.6/site-packages/nose/failure.py\", line 39, in runTest\n    raise self.exc_val.with_traceback(self.tb)\n  File \"/Users/peastman/miniconda3/lib/python3.6/site-packages/nose/loader.py\", line 522, in makeTest\n    return self._makeTest(obj, parent)\n  File \"/Users/peastman/miniconda3/lib/python3.6/site-packages/nose/loader.py\", line 576, in _makeTest\n    return parent(obj.__name__)\n  File \"/Users/peastman/miniconda3/lib/python3.6/site-packages/tensorflow/python/framework/test_util.py\", line 708, in __init__\n    super(TensorFlowTestCase, self).__init__(methodName)\n  File \"/Users/peastman/miniconda3/lib/python3.6/unittest/case.py\", line 399, in __init__\n    (self.__class__, methodName))\nValueError: no such test method in &lt;class 'test.MyTest'&gt;: decorated\n</code></pre>", "body_text": "I tried your test, and sure enough if I run it directly it works.  However, if I run it using nosetests it gets skipped:\n$ nosetests --nocapture -v test.py\nReturns a TensorFlow Session for use in executing tests. ... ok\n\n----------------------------------------------------------------------\nRan 1 test in 0.001s\n\nOK\n\nIn addition, if I tell it to run just that one test rather than all tests in the file\n$ nosetests test.py:MyTest.test_foo\n\nthen it fails:\nTraceback (most recent call last):\n  File \"/Users/peastman/miniconda3/lib/python3.6/site-packages/nose/failure.py\", line 39, in runTest\n    raise self.exc_val.with_traceback(self.tb)\n  File \"/Users/peastman/miniconda3/lib/python3.6/site-packages/nose/loader.py\", line 522, in makeTest\n    return self._makeTest(obj, parent)\n  File \"/Users/peastman/miniconda3/lib/python3.6/site-packages/nose/loader.py\", line 576, in _makeTest\n    return parent(obj.__name__)\n  File \"/Users/peastman/miniconda3/lib/python3.6/site-packages/tensorflow/python/framework/test_util.py\", line 708, in __init__\n    super(TensorFlowTestCase, self).__init__(methodName)\n  File \"/Users/peastman/miniconda3/lib/python3.6/unittest/case.py\", line 399, in __init__\n    (self.__class__, methodName))\nValueError: no such test method in <class 'test.MyTest'>: decorated", "body": "I tried your test, and sure enough if I run it directly it works.  However, if I run it using `nosetests` it gets skipped:\r\n\r\n```\r\n$ nosetests --nocapture -v test.py\r\nReturns a TensorFlow Session for use in executing tests. ... ok\r\n\r\n----------------------------------------------------------------------\r\nRan 1 test in 0.001s\r\n\r\nOK\r\n```\r\n\r\nIn addition, if I tell it to run just that one test rather than all tests in the file\r\n\r\n```\r\n$ nosetests test.py:MyTest.test_foo\r\n```\r\n\r\nthen it fails:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/peastman/miniconda3/lib/python3.6/site-packages/nose/failure.py\", line 39, in runTest\r\n    raise self.exc_val.with_traceback(self.tb)\r\n  File \"/Users/peastman/miniconda3/lib/python3.6/site-packages/nose/loader.py\", line 522, in makeTest\r\n    return self._makeTest(obj, parent)\r\n  File \"/Users/peastman/miniconda3/lib/python3.6/site-packages/nose/loader.py\", line 576, in _makeTest\r\n    return parent(obj.__name__)\r\n  File \"/Users/peastman/miniconda3/lib/python3.6/site-packages/tensorflow/python/framework/test_util.py\", line 708, in __init__\r\n    super(TensorFlowTestCase, self).__init__(methodName)\r\n  File \"/Users/peastman/miniconda3/lib/python3.6/unittest/case.py\", line 399, in __init__\r\n    (self.__class__, methodName))\r\nValueError: no such test method in <class 'test.MyTest'>: decorated\r\n```"}