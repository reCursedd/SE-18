{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19163", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19163/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19163/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19163/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19163", "id": 321380466, "node_id": "MDU6SXNzdWUzMjEzODA0NjY=", "number": 19163, "title": "Memory leak in tensorflow newsession c++ api", "user": {"login": "achalshah20", "id": 9772589, "node_id": "MDQ6VXNlcjk3NzI1ODk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9772589?v=4", "gravatar_id": "", "url": "https://api.github.com/users/achalshah20", "html_url": "https://github.com/achalshah20", "followers_url": "https://api.github.com/users/achalshah20/followers", "following_url": "https://api.github.com/users/achalshah20/following{/other_user}", "gists_url": "https://api.github.com/users/achalshah20/gists{/gist_id}", "starred_url": "https://api.github.com/users/achalshah20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/achalshah20/subscriptions", "organizations_url": "https://api.github.com/users/achalshah20/orgs", "repos_url": "https://api.github.com/users/achalshah20/repos", "events_url": "https://api.github.com/users/achalshah20/events{/privacy}", "received_events_url": "https://api.github.com/users/achalshah20/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "cy89", "id": 29663194, "node_id": "MDQ6VXNlcjI5NjYzMTk0", "avatar_url": "https://avatars0.githubusercontent.com/u/29663194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cy89", "html_url": "https://github.com/cy89", "followers_url": "https://api.github.com/users/cy89/followers", "following_url": "https://api.github.com/users/cy89/following{/other_user}", "gists_url": "https://api.github.com/users/cy89/gists{/gist_id}", "starred_url": "https://api.github.com/users/cy89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cy89/subscriptions", "organizations_url": "https://api.github.com/users/cy89/orgs", "repos_url": "https://api.github.com/users/cy89/repos", "events_url": "https://api.github.com/users/cy89/events{/privacy}", "received_events_url": "https://api.github.com/users/cy89/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cy89", "id": 29663194, "node_id": "MDQ6VXNlcjI5NjYzMTk0", "avatar_url": "https://avatars0.githubusercontent.com/u/29663194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cy89", "html_url": "https://github.com/cy89", "followers_url": "https://api.github.com/users/cy89/followers", "following_url": "https://api.github.com/users/cy89/following{/other_user}", "gists_url": "https://api.github.com/users/cy89/gists{/gist_id}", "starred_url": "https://api.github.com/users/cy89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cy89/subscriptions", "organizations_url": "https://api.github.com/users/cy89/orgs", "repos_url": "https://api.github.com/users/cy89/repos", "events_url": "https://api.github.com/users/cy89/events{/privacy}", "received_events_url": "https://api.github.com/users/cy89/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2018-05-08T23:27:55Z", "updated_at": "2018-07-21T01:14:01Z", "closed_at": "2018-07-21T01:13:53Z", "author_association": "CONTRIBUTOR", "body_html": "<hr>\n<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Ubuntu 18.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: source</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.8</li>\n<li><strong>Python version</strong>:  3.5</li>\n<li><strong>Bazel version (if compiling from source)</strong>:0.12</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:7.3</li>\n<li><strong>CUDA/cuDNN version</strong>: 9.1.85,7.1.3</li>\n<li><strong>GPU model and memory</strong>: Titan x geforce</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<p>Code:</p>\n<pre><code>class Temp\n{\n public:\n  Temp(){\nstd::unique_ptr&lt;tensorflow::Session&gt; session(\n      tensorflow::NewSession(tensorflow::SessionOptions()));\n};\n};\n\nint main(int argc, char **argv)\n{\n  Temp temp;\n  return 0;\n}\n</code></pre>\n<h3>Describe the problem</h3>\n<p>I am just trying to create tensorflow session and getting memory leak.</p>\n<h3>Source code / logs: (Valgrind)</h3>\n<pre><code>==13704== 4,391 (24 direct, 4,367 indirect) bytes in 1 blocks are definitely lost in loss record 87,919 of 88,141\n==13704==    at 0x4C30216: operator new(unsigned long) (vg_replace_malloc.c:334)\n==13704==    by 0x73D47A7: tensorflow::RegisterXlaDeviceKernels(char const*, char const*) (in /usr/lib/tensorflow_cc/libtensorflow_cc.so)\n==13704==    by 0x6CD32C1: tensorflow::XlaCpuDeviceFactory::CreateDevices(tensorflow::SessionOptions const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::vector&lt;tensorflow::Device*, std::allocator&lt;tensorflow::Device*&gt; &gt;*) (in /usr/lib/tensorflow_cc/libtensorflow_cc.so)\n==13704==    by 0xBAA034C: tensorflow::DeviceFactory::AddDevices(tensorflow::SessionOptions const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::vector&lt;tensorflow::Device*, std::allocator&lt;tensorflow::Device*&gt; &gt;*) (in /usr/lib/tensorflow_cc/libtensorflow_cc.so)\n==13704==    by 0xB93A246: tensorflow::DirectSessionFactory::NewSession(tensorflow::SessionOptions const&amp;) (in /usr/lib/tensorflow_cc/libtensorflow_cc.so)\n==13704==    by 0xBAED531: tensorflow::NewSession(tensorflow::SessionOptions const&amp;) (in /usr/lib/tensorflow_cc/libtensorflow_cc.so)\n==13704==    by 0x4E5E1D5: Temp::Temp() (temp.cpp:7)\n</code></pre>\n<pre><code>4,388 (24 direct, 4,364 indirect) bytes in 1 blocks are definitely lost in loss record 87,918 of 88,141\n==13704==    at 0x4C30216: operator new(unsigned long) (vg_replace_malloc.c:334)\n==13704==    by 0x73D47A7: tensorflow::RegisterXlaDeviceKernels(char const*, char const*) (in /usr/lib/tensorflow_cc/libtensorflow_cc.so)\n==13704==    by 0x73CF019: tensorflow::XlaGpuDeviceFactory::CreateDevices(tensorflow::SessionOptions const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::vector&lt;tensorflow::Device*, std::allocator&lt;tensorflow::Device*&gt; &gt;*) (in /usr/lib/tensorflow_cc/libtensorflow_cc.so)\n==13704==    by 0xBAA034C: tensorflow::DeviceFactory::AddDevices(tensorflow::SessionOptions const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::vector&lt;tensorflow::Device*, std::allocator&lt;tensorflow::Device*&gt; &gt;*) (in /usr/lib/tensorflow_cc/libtensorflow_cc.so)\n==13704==    by 0xB93A246: tensorflow::DirectSessionFactory::NewSession(tensorflow::SessionOptions const&amp;) (in /usr/lib/tensorflow_cc/libtensorflow_cc.so)\n==13704==    by 0xBAED531: tensorflow::NewSession(tensorflow::SessionOptions const&amp;) (in /usr/lib/tensorflow_cc/libtensorflow_cc.so)\n==13704==    by 0x4E5E1D5: Temp::Temp() (temp.cpp:7)\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 18.04\nTensorFlow installed from (source or binary): source\nTensorFlow version (use command below): 1.8\nPython version:  3.5\nBazel version (if compiling from source):0.12\nGCC/Compiler version (if compiling from source):7.3\nCUDA/cuDNN version: 9.1.85,7.1.3\nGPU model and memory: Titan x geforce\nExact command to reproduce:\n\nCode:\nclass Temp\n{\n public:\n  Temp(){\nstd::unique_ptr<tensorflow::Session> session(\n      tensorflow::NewSession(tensorflow::SessionOptions()));\n};\n};\n\nint main(int argc, char **argv)\n{\n  Temp temp;\n  return 0;\n}\n\nDescribe the problem\nI am just trying to create tensorflow session and getting memory leak.\nSource code / logs: (Valgrind)\n==13704== 4,391 (24 direct, 4,367 indirect) bytes in 1 blocks are definitely lost in loss record 87,919 of 88,141\n==13704==    at 0x4C30216: operator new(unsigned long) (vg_replace_malloc.c:334)\n==13704==    by 0x73D47A7: tensorflow::RegisterXlaDeviceKernels(char const*, char const*) (in /usr/lib/tensorflow_cc/libtensorflow_cc.so)\n==13704==    by 0x6CD32C1: tensorflow::XlaCpuDeviceFactory::CreateDevices(tensorflow::SessionOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<tensorflow::Device*, std::allocator<tensorflow::Device*> >*) (in /usr/lib/tensorflow_cc/libtensorflow_cc.so)\n==13704==    by 0xBAA034C: tensorflow::DeviceFactory::AddDevices(tensorflow::SessionOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<tensorflow::Device*, std::allocator<tensorflow::Device*> >*) (in /usr/lib/tensorflow_cc/libtensorflow_cc.so)\n==13704==    by 0xB93A246: tensorflow::DirectSessionFactory::NewSession(tensorflow::SessionOptions const&) (in /usr/lib/tensorflow_cc/libtensorflow_cc.so)\n==13704==    by 0xBAED531: tensorflow::NewSession(tensorflow::SessionOptions const&) (in /usr/lib/tensorflow_cc/libtensorflow_cc.so)\n==13704==    by 0x4E5E1D5: Temp::Temp() (temp.cpp:7)\n\n4,388 (24 direct, 4,364 indirect) bytes in 1 blocks are definitely lost in loss record 87,918 of 88,141\n==13704==    at 0x4C30216: operator new(unsigned long) (vg_replace_malloc.c:334)\n==13704==    by 0x73D47A7: tensorflow::RegisterXlaDeviceKernels(char const*, char const*) (in /usr/lib/tensorflow_cc/libtensorflow_cc.so)\n==13704==    by 0x73CF019: tensorflow::XlaGpuDeviceFactory::CreateDevices(tensorflow::SessionOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<tensorflow::Device*, std::allocator<tensorflow::Device*> >*) (in /usr/lib/tensorflow_cc/libtensorflow_cc.so)\n==13704==    by 0xBAA034C: tensorflow::DeviceFactory::AddDevices(tensorflow::SessionOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<tensorflow::Device*, std::allocator<tensorflow::Device*> >*) (in /usr/lib/tensorflow_cc/libtensorflow_cc.so)\n==13704==    by 0xB93A246: tensorflow::DirectSessionFactory::NewSession(tensorflow::SessionOptions const&) (in /usr/lib/tensorflow_cc/libtensorflow_cc.so)\n==13704==    by 0xBAED531: tensorflow::NewSession(tensorflow::SessionOptions const&) (in /usr/lib/tensorflow_cc/libtensorflow_cc.so)\n==13704==    by 0x4E5E1D5: Temp::Temp() (temp.cpp:7)", "body": "------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 18.04\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: 1.8\r\n- **Python version**:  3.5\r\n- **Bazel version (if compiling from source)**:0.12\r\n- **GCC/Compiler version (if compiling from source)**:7.3\r\n- **CUDA/cuDNN version**: 9.1.85,7.1.3\r\n- **GPU model and memory**: Titan x geforce\r\n- **Exact command to reproduce**:\r\n\r\nCode:\r\n```\r\nclass Temp\r\n{\r\n public:\r\n  Temp(){\r\nstd::unique_ptr<tensorflow::Session> session(\r\n      tensorflow::NewSession(tensorflow::SessionOptions()));\r\n};\r\n};\r\n\r\nint main(int argc, char **argv)\r\n{\r\n  Temp temp;\r\n  return 0;\r\n}\r\n```\r\n\r\n### Describe the problem\r\nI am just trying to create tensorflow session and getting memory leak.\r\n\r\n### Source code / logs: (Valgrind)\r\n```\r\n==13704== 4,391 (24 direct, 4,367 indirect) bytes in 1 blocks are definitely lost in loss record 87,919 of 88,141\r\n==13704==    at 0x4C30216: operator new(unsigned long) (vg_replace_malloc.c:334)\r\n==13704==    by 0x73D47A7: tensorflow::RegisterXlaDeviceKernels(char const*, char const*) (in /usr/lib/tensorflow_cc/libtensorflow_cc.so)\r\n==13704==    by 0x6CD32C1: tensorflow::XlaCpuDeviceFactory::CreateDevices(tensorflow::SessionOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<tensorflow::Device*, std::allocator<tensorflow::Device*> >*) (in /usr/lib/tensorflow_cc/libtensorflow_cc.so)\r\n==13704==    by 0xBAA034C: tensorflow::DeviceFactory::AddDevices(tensorflow::SessionOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<tensorflow::Device*, std::allocator<tensorflow::Device*> >*) (in /usr/lib/tensorflow_cc/libtensorflow_cc.so)\r\n==13704==    by 0xB93A246: tensorflow::DirectSessionFactory::NewSession(tensorflow::SessionOptions const&) (in /usr/lib/tensorflow_cc/libtensorflow_cc.so)\r\n==13704==    by 0xBAED531: tensorflow::NewSession(tensorflow::SessionOptions const&) (in /usr/lib/tensorflow_cc/libtensorflow_cc.so)\r\n==13704==    by 0x4E5E1D5: Temp::Temp() (temp.cpp:7)\r\n```\r\n\r\n\r\n```\r\n4,388 (24 direct, 4,364 indirect) bytes in 1 blocks are definitely lost in loss record 87,918 of 88,141\r\n==13704==    at 0x4C30216: operator new(unsigned long) (vg_replace_malloc.c:334)\r\n==13704==    by 0x73D47A7: tensorflow::RegisterXlaDeviceKernels(char const*, char const*) (in /usr/lib/tensorflow_cc/libtensorflow_cc.so)\r\n==13704==    by 0x73CF019: tensorflow::XlaGpuDeviceFactory::CreateDevices(tensorflow::SessionOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<tensorflow::Device*, std::allocator<tensorflow::Device*> >*) (in /usr/lib/tensorflow_cc/libtensorflow_cc.so)\r\n==13704==    by 0xBAA034C: tensorflow::DeviceFactory::AddDevices(tensorflow::SessionOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<tensorflow::Device*, std::allocator<tensorflow::Device*> >*) (in /usr/lib/tensorflow_cc/libtensorflow_cc.so)\r\n==13704==    by 0xB93A246: tensorflow::DirectSessionFactory::NewSession(tensorflow::SessionOptions const&) (in /usr/lib/tensorflow_cc/libtensorflow_cc.so)\r\n==13704==    by 0xBAED531: tensorflow::NewSession(tensorflow::SessionOptions const&) (in /usr/lib/tensorflow_cc/libtensorflow_cc.so)\r\n==13704==    by 0x4E5E1D5: Temp::Temp() (temp.cpp:7)\r\n```\r\n"}