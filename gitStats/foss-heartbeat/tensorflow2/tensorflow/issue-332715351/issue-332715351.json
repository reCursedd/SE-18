{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20052", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20052/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20052/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20052/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20052", "id": 332715351, "node_id": "MDU6SXNzdWUzMzI3MTUzNTE=", "number": 20052, "title": "tflite: output tensor size is not variable.", "user": {"login": "wenhui7909", "id": 29617697, "node_id": "MDQ6VXNlcjI5NjE3Njk3", "avatar_url": "https://avatars1.githubusercontent.com/u/29617697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wenhui7909", "html_url": "https://github.com/wenhui7909", "followers_url": "https://api.github.com/users/wenhui7909/followers", "following_url": "https://api.github.com/users/wenhui7909/following{/other_user}", "gists_url": "https://api.github.com/users/wenhui7909/gists{/gist_id}", "starred_url": "https://api.github.com/users/wenhui7909/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wenhui7909/subscriptions", "organizations_url": "https://api.github.com/users/wenhui7909/orgs", "repos_url": "https://api.github.com/users/wenhui7909/repos", "events_url": "https://api.github.com/users/wenhui7909/events{/privacy}", "received_events_url": "https://api.github.com/users/wenhui7909/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 750616506, "node_id": "MDU6TGFiZWw3NTA2MTY1MDY=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:lite", "name": "comp:lite", "color": "0052cc", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "suharshs", "id": 1450614, "node_id": "MDQ6VXNlcjE0NTA2MTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1450614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suharshs", "html_url": "https://github.com/suharshs", "followers_url": "https://api.github.com/users/suharshs/followers", "following_url": "https://api.github.com/users/suharshs/following{/other_user}", "gists_url": "https://api.github.com/users/suharshs/gists{/gist_id}", "starred_url": "https://api.github.com/users/suharshs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suharshs/subscriptions", "organizations_url": "https://api.github.com/users/suharshs/orgs", "repos_url": "https://api.github.com/users/suharshs/repos", "events_url": "https://api.github.com/users/suharshs/events{/privacy}", "received_events_url": "https://api.github.com/users/suharshs/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "suharshs", "id": 1450614, "node_id": "MDQ6VXNlcjE0NTA2MTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1450614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suharshs", "html_url": "https://github.com/suharshs", "followers_url": "https://api.github.com/users/suharshs/followers", "following_url": "https://api.github.com/users/suharshs/following{/other_user}", "gists_url": "https://api.github.com/users/suharshs/gists{/gist_id}", "starred_url": "https://api.github.com/users/suharshs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suharshs/subscriptions", "organizations_url": "https://api.github.com/users/suharshs/orgs", "repos_url": "https://api.github.com/users/suharshs/repos", "events_url": "https://api.github.com/users/suharshs/events{/privacy}", "received_events_url": "https://api.github.com/users/suharshs/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2018-06-15T09:58:47Z", "updated_at": "2018-09-21T16:49:03Z", "closed_at": "2018-09-13T17:14:04Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:  Ubuntu 17.10</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: source</li>\n<li><strong>TensorFlow version (use command below)</strong>: tensorflow 1.8</li>\n<li><strong>Python version</strong>:  2.7</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.13.0</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: 6.4</li>\n<li><strong>CUDA/cuDNN version</strong>: None</li>\n<li><strong>GPU model and memory</strong>: GeForce GTX 750</li>\n<li><strong>Exact command to reproduce</strong>: run mtcnn pnet model in tflite android demo of tflitecamerademo.</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>Use mtcnn pnet source code to generate pnet.pb file,<br>\nthen convert pnet.pb to pnet.tflite file.<br>\nwhen run pnet.tflite in  tflitecamerademo and input size is not the same as the number of when converting the tflite, the error log is \"num_input_elements != num_output_elements (42050 != 48050)\".<br>\nI guess output tensor need resize because I resize the input tensor.<br>\nBut I can't find the API of output tensor resize.</p>\n<h3>Source code / logs</h3>\n<p>The pnet code as below:<br>\n(self.feed('data')  #pylint: disable=no-value-for-parameter, no-member<br>\n.conv(3, 3, 10, 1, 1, padding='VALID', relu=False, name='conv1')<br>\n.prelu(name='PReLU1')<br>\n.max_pool(2, 2, 2, 2, name='pool1')<br>\n.conv(3, 3, 16, 1, 1, padding='VALID', relu=False, name='conv2')<br>\n.prelu(name='PReLU2')<br>\n.conv(3, 3, 32, 1, 1, padding='VALID', relu=False, name='conv3')<br>\n.prelu(name='PReLU3')<br>\n.conv(1, 1, 2, 1, 1, relu=False, name='conv4-1')<br>\n.softmax(3,name='prob1'))</p>\n<pre><code>(self.feed('PReLU3') #pylint: disable=no-value-for-parameter\n.conv(1, 1, 4, 1, 1, relu=False, name='conv4-2'))\n</code></pre>\n<p>generate pb file as below:<br>\ndata = tf.placeholder(name=\"input\", dtype=tf.float32, shape=(None, None, None, 3))<br>\npnet = PNet({'data':data})<br>\npnet.load(os.path.join(model_path, 'det1.npy'), sess)</p>\n<pre><code>frozen_graphdef = tf.graph_util.convert_variables_to_constants(\n        sess, sess.graph_def, ['pnet/conv4-2/BiasAdd', 'pnet/prob1'])\n</code></pre>\n<p>model_f = tf.gfile.GFile(\"/home/hwh/pnet_none.pb\", \"wb\")</p>\n<p>convert to tflite file as below:<br>\n./bazel-bin/tensorflow/contrib/lite/toco/toco    --input_file=/home/hwh/pnet.pb   --input_format=TENSORFLOW_GRAPHDEF  --output_format=TFLITE   --output_file=/home/hwh/pnet.tflite --inference_type=FLOAT   --input_type=FLOAT --input_arrays=pnet/input   --output_arrays=pnet/prob1,pnet/conv4-2/BiasAdd --input_shapes=1,320,320,3</p>\n<p>then I run this tflite file in tflitecamerademo, and before tflite run,<br>\nI resize input tensor to (1, 299, 299, 3).</p>\n<p>when run the error log as below:<br>\n06-15 16:14:36.500 12080-12275/android.example.com.tflitecamerademo E/AndroidRuntime: FATAL EXCEPTION: CameraBackground<br>\nProcess: android.example.com.tflitecamerademo, PID: 12080<br>\njava.lang.NullPointerException: Internal error: Can not allocate memory for the given inputs: tensorflow/contrib/lite/kernels/reshape.cc:68 num_input_elements != num_output_elements (42050 != 48050)<br>\nat org.tensorflow.lite.NativeInterpreterWrapper.run(Native Method)<br>\nat org.tensorflow.lite.NativeInterpreterWrapper.run(NativeInterpreterWrapper.java:123)<br>\nat org.tensorflow.lite.Interpreter.runForMultipleInputsOutputs(Interpreter.java:166)<br>\nat com.example.android.tflitecamerademo.ImageClassifierFloatInception.runInference(ImageClassifierFloatInception.java:121)<br>\nat com.example.android.tflitecamerademo.ImageClassifier.classifyFrame(ImageClassifier.java:117)<br>\nat com.example.android.tflitecamerademo.Camera2BasicFragment.classifyFrame(Camera2BasicFragment.java:697)<br>\nat com.example.android.tflitecamerademo.Camera2BasicFragment.-wrap0(Camera2BasicFragment.java)<br>\nat com.example.android.tflitecamerademo.Camera2BasicFragment$4.run(Camera2BasicFragment.java:592)<br>\nat android.os.Handler.handleCallback(Handler.java:815)<br>\nat android.os.Handler.dispatchMessage(Handler.java:104)<br>\nat android.os.Looper.loop(Looper.java:194)<br>\nat android.os.HandlerThread.run(HandlerThread.java:61)</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):  Ubuntu 17.10\nTensorFlow installed from (source or binary): source\nTensorFlow version (use command below): tensorflow 1.8\nPython version:  2.7\nBazel version (if compiling from source): 0.13.0\nGCC/Compiler version (if compiling from source): 6.4\nCUDA/cuDNN version: None\nGPU model and memory: GeForce GTX 750\nExact command to reproduce: run mtcnn pnet model in tflite android demo of tflitecamerademo.\n\nDescribe the problem\nUse mtcnn pnet source code to generate pnet.pb file,\nthen convert pnet.pb to pnet.tflite file.\nwhen run pnet.tflite in  tflitecamerademo and input size is not the same as the number of when converting the tflite, the error log is \"num_input_elements != num_output_elements (42050 != 48050)\".\nI guess output tensor need resize because I resize the input tensor.\nBut I can't find the API of output tensor resize.\nSource code / logs\nThe pnet code as below:\n(self.feed('data')  #pylint: disable=no-value-for-parameter, no-member\n.conv(3, 3, 10, 1, 1, padding='VALID', relu=False, name='conv1')\n.prelu(name='PReLU1')\n.max_pool(2, 2, 2, 2, name='pool1')\n.conv(3, 3, 16, 1, 1, padding='VALID', relu=False, name='conv2')\n.prelu(name='PReLU2')\n.conv(3, 3, 32, 1, 1, padding='VALID', relu=False, name='conv3')\n.prelu(name='PReLU3')\n.conv(1, 1, 2, 1, 1, relu=False, name='conv4-1')\n.softmax(3,name='prob1'))\n(self.feed('PReLU3') #pylint: disable=no-value-for-parameter\n.conv(1, 1, 4, 1, 1, relu=False, name='conv4-2'))\n\ngenerate pb file as below:\ndata = tf.placeholder(name=\"input\", dtype=tf.float32, shape=(None, None, None, 3))\npnet = PNet({'data':data})\npnet.load(os.path.join(model_path, 'det1.npy'), sess)\nfrozen_graphdef = tf.graph_util.convert_variables_to_constants(\n        sess, sess.graph_def, ['pnet/conv4-2/BiasAdd', 'pnet/prob1'])\n\nmodel_f = tf.gfile.GFile(\"/home/hwh/pnet_none.pb\", \"wb\")\nconvert to tflite file as below:\n./bazel-bin/tensorflow/contrib/lite/toco/toco    --input_file=/home/hwh/pnet.pb   --input_format=TENSORFLOW_GRAPHDEF  --output_format=TFLITE   --output_file=/home/hwh/pnet.tflite --inference_type=FLOAT   --input_type=FLOAT --input_arrays=pnet/input   --output_arrays=pnet/prob1,pnet/conv4-2/BiasAdd --input_shapes=1,320,320,3\nthen I run this tflite file in tflitecamerademo, and before tflite run,\nI resize input tensor to (1, 299, 299, 3).\nwhen run the error log as below:\n06-15 16:14:36.500 12080-12275/android.example.com.tflitecamerademo E/AndroidRuntime: FATAL EXCEPTION: CameraBackground\nProcess: android.example.com.tflitecamerademo, PID: 12080\njava.lang.NullPointerException: Internal error: Can not allocate memory for the given inputs: tensorflow/contrib/lite/kernels/reshape.cc:68 num_input_elements != num_output_elements (42050 != 48050)\nat org.tensorflow.lite.NativeInterpreterWrapper.run(Native Method)\nat org.tensorflow.lite.NativeInterpreterWrapper.run(NativeInterpreterWrapper.java:123)\nat org.tensorflow.lite.Interpreter.runForMultipleInputsOutputs(Interpreter.java:166)\nat com.example.android.tflitecamerademo.ImageClassifierFloatInception.runInference(ImageClassifierFloatInception.java:121)\nat com.example.android.tflitecamerademo.ImageClassifier.classifyFrame(ImageClassifier.java:117)\nat com.example.android.tflitecamerademo.Camera2BasicFragment.classifyFrame(Camera2BasicFragment.java:697)\nat com.example.android.tflitecamerademo.Camera2BasicFragment.-wrap0(Camera2BasicFragment.java)\nat com.example.android.tflitecamerademo.Camera2BasicFragment$4.run(Camera2BasicFragment.java:592)\nat android.os.Handler.handleCallback(Handler.java:815)\nat android.os.Handler.dispatchMessage(Handler.java:104)\nat android.os.Looper.loop(Looper.java:194)\nat android.os.HandlerThread.run(HandlerThread.java:61)", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:  Ubuntu 17.10\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: tensorflow 1.8\r\n- **Python version**:  2.7\r\n- **Bazel version (if compiling from source)**: 0.13.0\r\n- **GCC/Compiler version (if compiling from source)**: 6.4\r\n- **CUDA/cuDNN version**: None\r\n- **GPU model and memory**: GeForce GTX 750\r\n- **Exact command to reproduce**: run mtcnn pnet model in tflite android demo of tflitecamerademo.\r\n\r\n### Describe the problem\r\nUse mtcnn pnet source code to generate pnet.pb file, \r\nthen convert pnet.pb to pnet.tflite file.\r\nwhen run pnet.tflite in  tflitecamerademo and input size is not the same as the number of when converting the tflite, the error log is \"num_input_elements != num_output_elements (42050 != 48050)\".\r\nI guess output tensor need resize because I resize the input tensor.\r\nBut I can't find the API of output tensor resize.\r\n\r\n### Source code / logs\r\nThe pnet code as below:\r\n    (self.feed('data')  #pylint: disable=no-value-for-parameter, no-member\r\n    .conv(3, 3, 10, 1, 1, padding='VALID', relu=False, name='conv1')\r\n     .prelu(name='PReLU1')\r\n     .max_pool(2, 2, 2, 2, name='pool1')\r\n     .conv(3, 3, 16, 1, 1, padding='VALID', relu=False, name='conv2')\r\n     .prelu(name='PReLU2')\r\n     .conv(3, 3, 32, 1, 1, padding='VALID', relu=False, name='conv3')\r\n     .prelu(name='PReLU3')\r\n     .conv(1, 1, 2, 1, 1, relu=False, name='conv4-1')\r\n      .softmax(3,name='prob1'))\r\n\r\n    (self.feed('PReLU3') #pylint: disable=no-value-for-parameter\r\n    .conv(1, 1, 4, 1, 1, relu=False, name='conv4-2'))\r\ngenerate pb file as below:\r\n   data = tf.placeholder(name=\"input\", dtype=tf.float32, shape=(None, None, None, 3))\r\n   pnet = PNet({'data':data})\r\n   pnet.load(os.path.join(model_path, 'det1.npy'), sess)\r\n\r\n    frozen_graphdef = tf.graph_util.convert_variables_to_constants(\r\n            sess, sess.graph_def, ['pnet/conv4-2/BiasAdd', 'pnet/prob1'])\r\n   model_f = tf.gfile.GFile(\"/home/hwh/pnet_none.pb\", \"wb\")\r\n\r\nconvert to tflite file as below:\r\n./bazel-bin/tensorflow/contrib/lite/toco/toco    --input_file=/home/hwh/pnet.pb   --input_format=TENSORFLOW_GRAPHDEF  --output_format=TFLITE   --output_file=/home/hwh/pnet.tflite --inference_type=FLOAT   --input_type=FLOAT --input_arrays=pnet/input   --output_arrays=pnet/prob1,pnet/conv4-2/BiasAdd --input_shapes=1,320,320,3\r\n\r\nthen I run this tflite file in tflitecamerademo, and before tflite run, \r\nI resize input tensor to (1, 299, 299, 3).\r\n\r\nwhen run the error log as below:\r\n    06-15 16:14:36.500 12080-12275/android.example.com.tflitecamerademo E/AndroidRuntime: FATAL EXCEPTION: CameraBackground\r\n    Process: android.example.com.tflitecamerademo, PID: 12080\r\n    java.lang.NullPointerException: Internal error: Can not allocate memory for the given inputs: tensorflow/contrib/lite/kernels/reshape.cc:68 num_input_elements != num_output_elements (42050 != 48050)\r\n        at org.tensorflow.lite.NativeInterpreterWrapper.run(Native Method)\r\n        at org.tensorflow.lite.NativeInterpreterWrapper.run(NativeInterpreterWrapper.java:123)\r\n        at org.tensorflow.lite.Interpreter.runForMultipleInputsOutputs(Interpreter.java:166)\r\n        at com.example.android.tflitecamerademo.ImageClassifierFloatInception.runInference(ImageClassifierFloatInception.java:121)\r\n        at com.example.android.tflitecamerademo.ImageClassifier.classifyFrame(ImageClassifier.java:117)\r\n        at com.example.android.tflitecamerademo.Camera2BasicFragment.classifyFrame(Camera2BasicFragment.java:697)\r\n        at com.example.android.tflitecamerademo.Camera2BasicFragment.-wrap0(Camera2BasicFragment.java)\r\n        at com.example.android.tflitecamerademo.Camera2BasicFragment$4.run(Camera2BasicFragment.java:592)\r\n        at android.os.Handler.handleCallback(Handler.java:815)\r\n        at android.os.Handler.dispatchMessage(Handler.java:104)\r\n        at android.os.Looper.loop(Looper.java:194)\r\n        at android.os.HandlerThread.run(HandlerThread.java:61)\r\n\r\n"}