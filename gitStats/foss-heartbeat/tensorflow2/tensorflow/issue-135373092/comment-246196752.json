{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/246196752", "html_url": "https://github.com/tensorflow/tensorflow/issues/1234#issuecomment-246196752", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1234", "id": 246196752, "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjE5Njc1Mg==", "user": {"login": "ivan-aksamentov", "id": 9403403, "node_id": "MDQ6VXNlcjk0MDM0MDM=", "avatar_url": "https://avatars0.githubusercontent.com/u/9403403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivan-aksamentov", "html_url": "https://github.com/ivan-aksamentov", "followers_url": "https://api.github.com/users/ivan-aksamentov/followers", "following_url": "https://api.github.com/users/ivan-aksamentov/following{/other_user}", "gists_url": "https://api.github.com/users/ivan-aksamentov/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivan-aksamentov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivan-aksamentov/subscriptions", "organizations_url": "https://api.github.com/users/ivan-aksamentov/orgs", "repos_url": "https://api.github.com/users/ivan-aksamentov/repos", "events_url": "https://api.github.com/users/ivan-aksamentov/events{/privacy}", "received_events_url": "https://api.github.com/users/ivan-aksamentov/received_events", "type": "User", "site_admin": false}, "created_at": "2016-09-11T18:48:27Z", "updated_at": "2016-09-11T18:55:41Z", "author_association": "NONE", "body_html": "<p>The described convenient behavior has changed somewhere between versions 0.9 and 0.10.<br>\nThe snippet with <code>sparse_softmax_cross_entropy_with_logits</code> now results in:</p>\n<pre><code>[array([ nan], dtype=float32), array([ nan], dtype=float32)]\n</code></pre>\n<p>Cross entropy for padding logits became <code>nan</code> instead of <code>0.0</code>. Looks like a breaking change: in my case forward pass is still okay (with masking), but gradients are now stuffed with <code>nan</code>s . It took some time to realize that new behavior is version dependent.</p>\n<p>Versions with \"0\" behavior:<br>\n<a href=\"https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.9.0-cp27-none-linux_x86_64.whl\" rel=\"nofollow\">linux/gpu/tensorflow-0.9.0-cp27-none-linux_x86_64.whl</a></p>\n<p>Versions with \"nan\" behavior:<br>\n<a href=\"https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.10.0rc0-cp27-none-linux_x86_64.whl\" rel=\"nofollow\">linux/gpu/tensorflow-0.10.0rc0-cp27-none-linux_x86_64.whl</a><br>\n<a href=\"https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.10.0-cp27-none-linux_x86_64.whl\" rel=\"nofollow\">linux/gpu/tensorflow-0.10.0-cp27-none-linux_x86_64.whl</a></p>\n<p>Should we open a new issue or is this new behavior by design?</p>", "body_text": "The described convenient behavior has changed somewhere between versions 0.9 and 0.10.\nThe snippet with sparse_softmax_cross_entropy_with_logits now results in:\n[array([ nan], dtype=float32), array([ nan], dtype=float32)]\n\nCross entropy for padding logits became nan instead of 0.0. Looks like a breaking change: in my case forward pass is still okay (with masking), but gradients are now stuffed with nans . It took some time to realize that new behavior is version dependent.\nVersions with \"0\" behavior:\nlinux/gpu/tensorflow-0.9.0-cp27-none-linux_x86_64.whl\nVersions with \"nan\" behavior:\nlinux/gpu/tensorflow-0.10.0rc0-cp27-none-linux_x86_64.whl\nlinux/gpu/tensorflow-0.10.0-cp27-none-linux_x86_64.whl\nShould we open a new issue or is this new behavior by design?", "body": "The described convenient behavior has changed somewhere between versions 0.9 and 0.10.\nThe snippet with `sparse_softmax_cross_entropy_with_logits` now results in:\n\n```\n[array([ nan], dtype=float32), array([ nan], dtype=float32)]\n```\n\nCross entropy for padding logits became `nan` instead of `0.0`. Looks like a breaking change: in my case forward pass is still okay (with masking), but gradients are now stuffed with `nan`s . It took some time to realize that new behavior is version dependent.\n\nVersions with \"0\" behavior:\n[linux/gpu/tensorflow-0.9.0-cp27-none-linux_x86_64.whl](https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.9.0-cp27-none-linux_x86_64.whl)\n\nVersions with \"nan\" behavior:\n[linux/gpu/tensorflow-0.10.0rc0-cp27-none-linux_x86_64.whl](https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.10.0rc0-cp27-none-linux_x86_64.whl)\n[linux/gpu/tensorflow-0.10.0-cp27-none-linux_x86_64.whl](https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.10.0-cp27-none-linux_x86_64.whl)\n\nShould we open a new issue or is this new behavior by design?\n"}