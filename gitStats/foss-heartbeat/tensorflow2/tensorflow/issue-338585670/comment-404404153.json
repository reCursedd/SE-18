{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/404404153", "html_url": "https://github.com/tensorflow/tensorflow/issues/20567#issuecomment-404404153", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20567", "id": 404404153, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDQwNDE1Mw==", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-12T06:31:04Z", "updated_at": "2018-07-12T06:31:23Z", "author_association": "MEMBER", "body_html": "<p>An interesting suggestion. If I may, an alternative way to phrase you proposal is that <code>y.set_shape([100])</code> should have the same effect as:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">with</span> tf.control_dependencies([tf.assert_equal(tf.shape(y), [<span class=\"pl-c1\">100</span>])]):\n  y <span class=\"pl-k\">=</span> tf.identity(y)</pre></div>\n<p>(a little more sophistication for handling partially known shapes as well, but the general idea being to use <a href=\"https://www.tensorflow.org/api_guides/python/check_ops\" rel=\"nofollow\">assertion operations</a> to validate shapes at graph execution time).</p>\n<p>So far, the shape of the symbolic <code>Tensor</code> object has only been used as a hint to help catch errors during graph construction. For most operations this is enough since shapes can be statically determined then. However, there are handful of operations where this is not possible and I can see how validation at runtime can be useful. That said, I don't think the costs (both additional overhead in graph execution and the time to implement it) outweigh the benefits enough for us to prioritize this at this moment.</p>\n<p>For now, I'm going to mark this as \"Contributions Welcome\" with the understanding that if someone has the inclination to take this on, we'd be happy to discuss a detailed proposal. Sound reasonable?</p>", "body_text": "An interesting suggestion. If I may, an alternative way to phrase you proposal is that y.set_shape([100]) should have the same effect as:\nwith tf.control_dependencies([tf.assert_equal(tf.shape(y), [100])]):\n  y = tf.identity(y)\n(a little more sophistication for handling partially known shapes as well, but the general idea being to use assertion operations to validate shapes at graph execution time).\nSo far, the shape of the symbolic Tensor object has only been used as a hint to help catch errors during graph construction. For most operations this is enough since shapes can be statically determined then. However, there are handful of operations where this is not possible and I can see how validation at runtime can be useful. That said, I don't think the costs (both additional overhead in graph execution and the time to implement it) outweigh the benefits enough for us to prioritize this at this moment.\nFor now, I'm going to mark this as \"Contributions Welcome\" with the understanding that if someone has the inclination to take this on, we'd be happy to discuss a detailed proposal. Sound reasonable?", "body": "An interesting suggestion. If I may, an alternative way to phrase you proposal is that `y.set_shape([100])` should have the same effect as:\r\n\r\n```python\r\nwith tf.control_dependencies([tf.assert_equal(tf.shape(y), [100])]):\r\n  y = tf.identity(y)\r\n```\r\n\r\n(a little more sophistication for handling partially known shapes as well, but the general idea being to use [assertion operations](https://www.tensorflow.org/api_guides/python/check_ops) to validate shapes at graph execution time).\r\n\r\nSo far, the shape of the symbolic `Tensor` object has only been used as a hint to help catch errors during graph construction. For most operations this is enough since shapes can be statically determined then. However, there are handful of operations where this is not possible and I can see how validation at runtime can be useful. That said, I don't think the costs (both additional overhead in graph execution and the time to implement it) outweigh the benefits enough for us to prioritize this at this moment.\r\n\r\nFor now, I'm going to mark this as \"Contributions Welcome\" with the understanding that if someone has the inclination to take this on, we'd be happy to discuss a detailed proposal. Sound reasonable?"}