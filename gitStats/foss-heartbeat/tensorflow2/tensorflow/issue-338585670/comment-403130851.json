{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/403130851", "html_url": "https://github.com/tensorflow/tensorflow/issues/20567#issuecomment-403130851", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20567", "id": 403130851, "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzEzMDg1MQ==", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-06T19:52:49Z", "updated_at": "2018-07-06T19:52:49Z", "author_association": "MEMBER", "body_html": "<p>Thanks for the suggestion and the report.</p>\n<p>As you probably guessed, <code>tf.py_func</code> can't return a known shape since the shape of the returned tensor depends on Python code evaluated during graph execution. <a href=\"https://www.tensorflow.org/api_docs/python/tf/Tensor#set_shape\" rel=\"nofollow\"><code>set_shape</code></a> is meant to fill in gaps in shape inference at graph construction time.</p>\n<p>Perhaps you're suggesting that an error be thrown at graph execution time (<code>sess.run()</code>)?<br>\nFWIW, this isn't specific to <code>py_func</code>. For example, the following demonstrates similar behavior with <code>placeholder</code>:</p>\n<div class=\"highlight highlight-source-python\"><pre>x <span class=\"pl-k\">=</span> tf.placeholder(tf.float32)  <span class=\"pl-c\"><span class=\"pl-c\">#</span> Unknown shape</span>\ny <span class=\"pl-k\">=</span> tf.identity(x)\ny.set_shape([<span class=\"pl-c1\">100</span>, <span class=\"pl-c1\">100</span>])\n<span class=\"pl-c1\">print</span>(x)\n<span class=\"pl-c1\">print</span>(y)\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n  <span class=\"pl-c1\">print</span>(sess.run(y, <span class=\"pl-v\">feed_dict</span><span class=\"pl-k\">=</span>{x:<span class=\"pl-c1\">10</span>}))</pre></div>\n<p>Or with other functions where the shape can only be known at graph construction time, like <code>tf.unique</code></p>\n<div class=\"highlight highlight-source-python\"><pre>x <span class=\"pl-k\">=</span> tf.constant([<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>])\ny, idx <span class=\"pl-k\">=</span> tf.unique(x)\ny.set_shape([<span class=\"pl-c1\">100</span>])\n<span class=\"pl-c1\">print</span>(x)\n<span class=\"pl-c1\">print</span>(y)\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n  <span class=\"pl-c1\">print</span>(sess.run(y))</pre></div>\n<p>Off the top of my head I'm not sure how to spec out the feature request here.</p>", "body_text": "Thanks for the suggestion and the report.\nAs you probably guessed, tf.py_func can't return a known shape since the shape of the returned tensor depends on Python code evaluated during graph execution. set_shape is meant to fill in gaps in shape inference at graph construction time.\nPerhaps you're suggesting that an error be thrown at graph execution time (sess.run())?\nFWIW, this isn't specific to py_func. For example, the following demonstrates similar behavior with placeholder:\nx = tf.placeholder(tf.float32)  # Unknown shape\ny = tf.identity(x)\ny.set_shape([100, 100])\nprint(x)\nprint(y)\nwith tf.Session() as sess:\n  print(sess.run(y, feed_dict={x:10}))\nOr with other functions where the shape can only be known at graph construction time, like tf.unique\nx = tf.constant([1, 1, 2])\ny, idx = tf.unique(x)\ny.set_shape([100])\nprint(x)\nprint(y)\nwith tf.Session() as sess:\n  print(sess.run(y))\nOff the top of my head I'm not sure how to spec out the feature request here.", "body": "Thanks for the suggestion and the report.\r\n\r\nAs you probably guessed, `tf.py_func` can't return a known shape since the shape of the returned tensor depends on Python code evaluated during graph execution. [`set_shape`](https://www.tensorflow.org/api_docs/python/tf/Tensor#set_shape) is meant to fill in gaps in shape inference at graph construction time.\r\n\r\nPerhaps you're suggesting that an error be thrown at graph execution time (`sess.run()`)?\r\nFWIW, this isn't specific to `py_func`. For example, the following demonstrates similar behavior with `placeholder`:\r\n\r\n```python\r\nx = tf.placeholder(tf.float32)  # Unknown shape\r\ny = tf.identity(x)\r\ny.set_shape([100, 100])\r\nprint(x)\r\nprint(y)\r\nwith tf.Session() as sess:\r\n  print(sess.run(y, feed_dict={x:10}))\r\n```\r\n\r\nOr with other functions where the shape can only be known at graph construction time, like `tf.unique`\r\n\r\n```python\r\nx = tf.constant([1, 1, 2])\r\ny, idx = tf.unique(x)\r\ny.set_shape([100])\r\nprint(x)\r\nprint(y)\r\nwith tf.Session() as sess:\r\n  print(sess.run(y))\r\n```\r\n\r\nOff the top of my head I'm not sure how to spec out the feature request here."}