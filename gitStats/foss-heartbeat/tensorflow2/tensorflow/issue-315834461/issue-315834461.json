{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18688", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18688/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18688/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18688/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18688", "id": 315834461, "node_id": "MDU6SXNzdWUzMTU4MzQ0NjE=", "number": 18688, "title": "Estimator.predict() has Shape Issues?", "user": {"login": "selcouthlyBlue", "id": 13268675, "node_id": "MDQ6VXNlcjEzMjY4Njc1", "avatar_url": "https://avatars2.githubusercontent.com/u/13268675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/selcouthlyBlue", "html_url": "https://github.com/selcouthlyBlue", "followers_url": "https://api.github.com/users/selcouthlyBlue/followers", "following_url": "https://api.github.com/users/selcouthlyBlue/following{/other_user}", "gists_url": "https://api.github.com/users/selcouthlyBlue/gists{/gist_id}", "starred_url": "https://api.github.com/users/selcouthlyBlue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/selcouthlyBlue/subscriptions", "organizations_url": "https://api.github.com/users/selcouthlyBlue/orgs", "repos_url": "https://api.github.com/users/selcouthlyBlue/repos", "events_url": "https://api.github.com/users/selcouthlyBlue/events{/privacy}", "received_events_url": "https://api.github.com/users/selcouthlyBlue/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "ispirmustafa", "id": 19293677, "node_id": "MDQ6VXNlcjE5MjkzNjc3", "avatar_url": "https://avatars1.githubusercontent.com/u/19293677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ispirmustafa", "html_url": "https://github.com/ispirmustafa", "followers_url": "https://api.github.com/users/ispirmustafa/followers", "following_url": "https://api.github.com/users/ispirmustafa/following{/other_user}", "gists_url": "https://api.github.com/users/ispirmustafa/gists{/gist_id}", "starred_url": "https://api.github.com/users/ispirmustafa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ispirmustafa/subscriptions", "organizations_url": "https://api.github.com/users/ispirmustafa/orgs", "repos_url": "https://api.github.com/users/ispirmustafa/repos", "events_url": "https://api.github.com/users/ispirmustafa/events{/privacy}", "received_events_url": "https://api.github.com/users/ispirmustafa/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ispirmustafa", "id": 19293677, "node_id": "MDQ6VXNlcjE5MjkzNjc3", "avatar_url": "https://avatars1.githubusercontent.com/u/19293677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ispirmustafa", "html_url": "https://github.com/ispirmustafa", "followers_url": "https://api.github.com/users/ispirmustafa/followers", "following_url": "https://api.github.com/users/ispirmustafa/following{/other_user}", "gists_url": "https://api.github.com/users/ispirmustafa/gists{/gist_id}", "starred_url": "https://api.github.com/users/ispirmustafa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ispirmustafa/subscriptions", "organizations_url": "https://api.github.com/users/ispirmustafa/orgs", "repos_url": "https://api.github.com/users/ispirmustafa/repos", "events_url": "https://api.github.com/users/ispirmustafa/events{/privacy}", "received_events_url": "https://api.github.com/users/ispirmustafa/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-04-19T11:21:36Z", "updated_at": "2018-04-20T23:27:26Z", "closed_at": "2018-04-20T05:58:47Z", "author_association": "CONTRIBUTOR", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:<br>\nYes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:<br>\nWindows 8.1</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:<br>\nBinary</li>\n<li><strong>TensorFlow version (use command below)</strong>:<br>\n1.6</li>\n<li><strong>Python version</strong>:<br>\n3.6</li>\n<li><strong>Bazel version (if compiling from source)</strong>:<br>\nN/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:<br>\nN/A</li>\n<li><strong>CUDA/cuDNN version</strong>:<br>\nN/A</li>\n<li><strong>GPU model and memory</strong>:<br>\nN/A<br>\n-<strong>Exact command to reproduce</strong>:<br>\nJust execture run.py in this <a href=\"https://github.com/selcouthlyBlue/ShapeErrorReproduce\">repository</a></li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I've already posted this <a href=\"https://stackoverflow.com/questions/49911525/estimator-predict-has-shape-issues?noredirect=1#comment86845047_49911525\" rel=\"nofollow\">problem</a> in stackoverflow. Unfortunately, no one can figure it out there so I'm posting it here as well.</p>\n<p>I can train and evalaute a Tensorflow Estimator model without any problems. When I do prediction, this error arises:</p>\n<pre><code>InvalidArgumentError (see above for traceback): output_shape has incorrect number of elements: 79 should be: 2\n\t [[Node: output = SparseToDense[T=DT_INT32, Tindices=DT_INT32, validate_indices=true, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](ToInt32, ToInt32_1, ToInt32_2, bidirectional_rnn/bidirectional_rnn/fw/fw/time)]]\n</code></pre>\n<p>All of the model functions I made use the same architecture:</p>\n<pre><code>def _train_model_fn(features, labels, mode, params):\n    features, outputs = _get_fed_features_and_resulting_predictions(features, params['num_classes'])\n    predictions = {\"outputs\": outputs}\n\n    ... # loss initialization and whatnot\n\n    return _create_model_fn(mode,\n                                            predictions,\n                                            loss,\n                                            train_op)\n\ndef _predict_model_fn(features, mode, params):\n    features, outputs = _get_fed_features_and_resulting_predictions(features, params['num_classes'])\n    predictions = {\"outputs\": outputs}\n\n    return _create_model_fn(mode, predictions,\n                            export_outputs={\n                                \"outputs\": tf.estimator.export.PredictOutput(outputs)\n                            })\n\n\ndef _create_model_fn(mode, predictions, loss=None, train_op=None, export_outputs=None):\n    return tf.estimator.EstimatorSpec(mode=mode,\n                                      predictions=predictions,\n                                      loss=loss,\n                                      train_op=train_op,\n                                      export_outputs=export_outputs)\n</code></pre>\n<p>Here's the training code and the predict code:</p>\n<pre><code>def train(features, labels, num_classes, params, checkpoint_dir,\n          batch_size=1, num_epochs=1, save_checkpoint_every_n_epochs=1):\n    num_steps_per_epoch = len(features) // batch_size\n    save_checkpoint_steps = save_checkpoint_every_n_epochs * num_steps_per_epoch\n    params['num_classes'] = num_classes\n    params['log_step_count_steps'] = num_steps_per_epoch\n    estimator = tf.estimator.Estimator(model_fn=_train_model_fn,\n                                       params=params,\n                                       model_dir=checkpoint_dir,\n                                       config=tf.estimator.RunConfig(\n                                           save_checkpoints_steps=save_checkpoint_steps,\n                                           log_step_count_steps=num_steps_per_epoch,\n                                           save_summary_steps=num_steps_per_epoch\n                                       ))\n    estimator.train(input_fn=_input_fn(features, labels, batch_size),\n                    steps=num_epochs * num_steps_per_epoch)\n\n\ndef predict(features, params, checkpoint_dir):\n    estimator = tf.estimator.Estimator(model_fn=_predict_model_fn,\n                                       params=params,\n                                       model_dir=checkpoint_dir)\n    predictions = estimator.predict(input_fn=_input_fn(features))\n    for i, p in enumerate(predictions):\n        print(i, p)\n</code></pre>\n<p>I also checked the shapes given every time the input passes a layer when training, and the same thing for predicting. They give the same shapes:</p>\n<p>Training:</p>\n<pre><code>conv2d [1, 358, 358, 16]\nmax_pool2d [1, 179, 179, 16]\ncollapse_to_rnn_dims [1, 179, 2864]\nbirnn [1, 179, 64]\n</code></pre>\n<p>Prediction:</p>\n<pre><code>conv2d [1, 358, 358, 16]\nmax_pool2d [1, 179, 179, 16]\ncollapse_to_rnn_dims [1, 179, 2864]\nbirnn [1, 179, 64]\n</code></pre>\n<p>Here are the <code>SparseTensors</code> that are passed to <code>sparse_to_dense</code>:</p>\n<p>Training:</p>\n<p><code>SparseTensor(indices=Tensor(\"CTCBeamSearchDecoder:0\", shape=(?, 2), dtype=int64), values=Tensor(\"CTCBeamSearchDecoder:1\", shape=(?,), dtype=int64), dense_shape=Tensor(\"CTCBeamSearchDecoder:2\", shape=(2,), dtype=int64))</code></p>\n<p>Prediction:</p>\n<p><code>SparseTensor(indices=Tensor(\"CTCBeamSearchDecoder:0\", shape=(?, 2), dtype=int64), values=Tensor(\"CTCBeamSearchDecoder:1\", shape=(?,), dtype=int64), dense_shape=Tensor(\"CTCBeamSearchDecoder:2\", shape=(2,), dtype=int64))</code></p>\n<p>Which are all pretty much the same.</p>\n<p>Any reason why this is happening? Shouldn't the <code>_predict_model_fn</code> work given that it follows the same architecture as that of the other <code>model_fn</code>s?</p>\n<p>Here's the full stacktrace: (Note: I called the predict function after evaluation)</p>\n<pre><code>INFO:tensorflow:Using config: {'_cluster_spec': &lt;tensorflow.python.training.server_lib.ClusterSpec object at 0x0000006041C05978&gt;, '_model_dir': 'model-20180420-112636', '_task_type': 'worker', '_keep_checkpoint_every_n_hours': 10000, '_task_id': 0, '_session_config': None, '_num_worker_replicas': 1, '_global_id_in_cluster': 0, '_service': None, '_tf_random_seed': None, '_log_step_count_steps': 100, '_evaluation_master': '', '_save_summary_steps': 100, '_save_checkpoints_steps': None, '_master': '', '_keep_checkpoint_max': 5, '_is_chief': True, '_num_ps_replicas': 0, '_save_checkpoints_secs': 600}\nINFO:tensorflow:Calling model_fn.\n[1, 179, 64]\nINFO:tensorflow:Done calling model_fn.\nSparseTensor(indices=Tensor(\"CTCBeamSearchDecoder:0\", shape=(?, 2), dtype=int64), values=Tensor(\"CTCBeamSearchDecoder:1\", shape=(?,), dtype=int64), dense_shape=Tensor(\"CTCBeamSearchDecoder:2\", shape=(2,), dtype=int64))\nINFO:tensorflow:Graph was finalized.\nINFO:tensorflow:Restoring parameters from model-20180420-112636\\model.ckpt-1\nINFO:tensorflow:Running local_init_op.\nINFO:tensorflow:Done running local_init_op.\nTraceback (most recent call last):\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1361, in _do_call\n    return fn(*args)\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1340, in _run_fn\n    target_list, status, run_metadata)\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\errors_impl.py\", line 516, in __exit__\n    c_api.TF_GetCode(self.status.status))\ntensorflow.python.framework.errors_impl.InvalidArgumentError: output_shape has incorrect number of elements: 82 should be: 2\n\t [[Node: output = SparseToDense[T=DT_INT32, Tindices=DT_INT32, validate_indices=true, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](ToInt32, ToInt32_1, ToInt32_2, bidirectional_rnn/bidirectional_rnn/fw/fw/time)]]\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:/Users/asus.11/Documents/ShapeErrorReproduce/run.py\", line 56, in &lt;module&gt;\n    main()\n  File \"C:/Users/asus.11/Documents/ShapeErrorReproduce/run.py\", line 52, in main\n    predict_with_model(checkpoint_dir)\n  File \"C:/Users/asus.11/Documents/ShapeErrorReproduce/run.py\", line 46, in predict_with_model\n    predict(images, run_params, checkpoint_dir)\n  File \"C:\\Users\\asus.11\\Documents\\ShapeErrorReproduce\\experiment_ops.py\", line 173, in predict\n    for i, p in enumerate(predictions):\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\estimator\\estimator.py\", line 492, in predict\n    preds_evaluated = mon_sess.run(predictions)\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\training\\monitored_session.py\", line 546, in run\n    run_metadata=run_metadata)\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\training\\monitored_session.py\", line 1022, in run\n    run_metadata=run_metadata)\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\training\\monitored_session.py\", line 1113, in run\n    raise six.reraise(*original_exc_info)\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\six.py\", line 693, in reraise\n    raise value\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\training\\monitored_session.py\", line 1098, in run\n    return self._sess.run(*args, **kwargs)\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\training\\monitored_session.py\", line 1170, in run\n    run_metadata=run_metadata)\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\training\\monitored_session.py\", line 950, in run\n    return self._sess.run(*args, **kwargs)\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 905, in run\n    run_metadata_ptr)\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1137, in _run\n    feed_dict_tensor, options, run_metadata)\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1355, in _do_run\n    options, run_metadata)\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1374, in _do_call\n    raise type(e)(node_def, op, message)\ntensorflow.python.framework.errors_impl.InvalidArgumentError: output_shape has incorrect number of elements: 82 should be: 2\n\t [[Node: output = SparseToDense[T=DT_INT32, Tindices=DT_INT32, validate_indices=true, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](ToInt32, ToInt32_1, ToInt32_2, bidirectional_rnn/bidirectional_rnn/fw/fw/time)]]\n\nCaused by op 'output', defined at:\n  File \"C:/Users/asus.11/Documents/ShapeErrorReproduce/run.py\", line 56, in &lt;module&gt;\n    main()\n  File \"C:/Users/asus.11/Documents/ShapeErrorReproduce/run.py\", line 52, in main\n    predict_with_model(checkpoint_dir)\n  File \"C:/Users/asus.11/Documents/ShapeErrorReproduce/run.py\", line 46, in predict_with_model\n    predict(images, run_params, checkpoint_dir)\n  File \"C:\\Users\\asus.11\\Documents\\ShapeErrorReproduce\\experiment_ops.py\", line 173, in predict\n    for i, p in enumerate(predictions):\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\estimator\\estimator.py\", line 479, in predict\n    features, None, model_fn_lib.ModeKeys.PREDICT, self.config)\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\estimator\\estimator.py\", line 793, in _call_model_fn\n    model_fn_results = self._model_fn(features=features, **kwargs)\n  File \"C:\\Users\\asus.11\\Documents\\ShapeErrorReproduce\\experiment_ops.py\", line 129, in _predict_model_fn\n    features, outputs = _get_fed_features_and_resulting_predictions(features, params['num_classes'])\n  File \"C:\\Users\\asus.11\\Documents\\ShapeErrorReproduce\\experiment_ops.py\", line 124, in _get_fed_features_and_resulting_predictions\n    outputs = _get_decoded_outputs(features, num_classes)\n  File \"C:\\Users\\asus.11\\Documents\\ShapeErrorReproduce\\experiment_ops.py\", line 73, in _get_decoded_outputs\n    name=\"output\")\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\ops\\sparse_ops.py\", line 791, in sparse_to_dense\n    name=name)\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\ops\\gen_sparse_ops.py\", line 2401, in _sparse_to_dense\n    name=name)\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\op_def_library.py\", line 787, in _apply_op_helper\n    op_def=op_def)\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 3271, in create_op\n    op_def=op_def)\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 1650, in __init__\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\n\nInvalidArgumentError (see above for traceback): output_shape has incorrect number of elements: 82 should be: 2\n\t [[Node: output = SparseToDense[T=DT_INT32, Tindices=DT_INT32, validate_indices=true, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](ToInt32, ToInt32_1, ToInt32_2, bidirectional_rnn/bidirectional_rnn/fw/fw/time)]]\n</code></pre>\n<p>Apparently, the shape error also changes with every run.</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nYes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nWindows 8.1\nTensorFlow installed from (source or binary):\nBinary\nTensorFlow version (use command below):\n1.6\nPython version:\n3.6\nBazel version (if compiling from source):\nN/A\nGCC/Compiler version (if compiling from source):\nN/A\nCUDA/cuDNN version:\nN/A\nGPU model and memory:\nN/A\n-Exact command to reproduce:\nJust execture run.py in this repository\n\nDescribe the problem\nI've already posted this problem in stackoverflow. Unfortunately, no one can figure it out there so I'm posting it here as well.\nI can train and evalaute a Tensorflow Estimator model without any problems. When I do prediction, this error arises:\nInvalidArgumentError (see above for traceback): output_shape has incorrect number of elements: 79 should be: 2\n\t [[Node: output = SparseToDense[T=DT_INT32, Tindices=DT_INT32, validate_indices=true, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](ToInt32, ToInt32_1, ToInt32_2, bidirectional_rnn/bidirectional_rnn/fw/fw/time)]]\n\nAll of the model functions I made use the same architecture:\ndef _train_model_fn(features, labels, mode, params):\n    features, outputs = _get_fed_features_and_resulting_predictions(features, params['num_classes'])\n    predictions = {\"outputs\": outputs}\n\n    ... # loss initialization and whatnot\n\n    return _create_model_fn(mode,\n                                            predictions,\n                                            loss,\n                                            train_op)\n\ndef _predict_model_fn(features, mode, params):\n    features, outputs = _get_fed_features_and_resulting_predictions(features, params['num_classes'])\n    predictions = {\"outputs\": outputs}\n\n    return _create_model_fn(mode, predictions,\n                            export_outputs={\n                                \"outputs\": tf.estimator.export.PredictOutput(outputs)\n                            })\n\n\ndef _create_model_fn(mode, predictions, loss=None, train_op=None, export_outputs=None):\n    return tf.estimator.EstimatorSpec(mode=mode,\n                                      predictions=predictions,\n                                      loss=loss,\n                                      train_op=train_op,\n                                      export_outputs=export_outputs)\n\nHere's the training code and the predict code:\ndef train(features, labels, num_classes, params, checkpoint_dir,\n          batch_size=1, num_epochs=1, save_checkpoint_every_n_epochs=1):\n    num_steps_per_epoch = len(features) // batch_size\n    save_checkpoint_steps = save_checkpoint_every_n_epochs * num_steps_per_epoch\n    params['num_classes'] = num_classes\n    params['log_step_count_steps'] = num_steps_per_epoch\n    estimator = tf.estimator.Estimator(model_fn=_train_model_fn,\n                                       params=params,\n                                       model_dir=checkpoint_dir,\n                                       config=tf.estimator.RunConfig(\n                                           save_checkpoints_steps=save_checkpoint_steps,\n                                           log_step_count_steps=num_steps_per_epoch,\n                                           save_summary_steps=num_steps_per_epoch\n                                       ))\n    estimator.train(input_fn=_input_fn(features, labels, batch_size),\n                    steps=num_epochs * num_steps_per_epoch)\n\n\ndef predict(features, params, checkpoint_dir):\n    estimator = tf.estimator.Estimator(model_fn=_predict_model_fn,\n                                       params=params,\n                                       model_dir=checkpoint_dir)\n    predictions = estimator.predict(input_fn=_input_fn(features))\n    for i, p in enumerate(predictions):\n        print(i, p)\n\nI also checked the shapes given every time the input passes a layer when training, and the same thing for predicting. They give the same shapes:\nTraining:\nconv2d [1, 358, 358, 16]\nmax_pool2d [1, 179, 179, 16]\ncollapse_to_rnn_dims [1, 179, 2864]\nbirnn [1, 179, 64]\n\nPrediction:\nconv2d [1, 358, 358, 16]\nmax_pool2d [1, 179, 179, 16]\ncollapse_to_rnn_dims [1, 179, 2864]\nbirnn [1, 179, 64]\n\nHere are the SparseTensors that are passed to sparse_to_dense:\nTraining:\nSparseTensor(indices=Tensor(\"CTCBeamSearchDecoder:0\", shape=(?, 2), dtype=int64), values=Tensor(\"CTCBeamSearchDecoder:1\", shape=(?,), dtype=int64), dense_shape=Tensor(\"CTCBeamSearchDecoder:2\", shape=(2,), dtype=int64))\nPrediction:\nSparseTensor(indices=Tensor(\"CTCBeamSearchDecoder:0\", shape=(?, 2), dtype=int64), values=Tensor(\"CTCBeamSearchDecoder:1\", shape=(?,), dtype=int64), dense_shape=Tensor(\"CTCBeamSearchDecoder:2\", shape=(2,), dtype=int64))\nWhich are all pretty much the same.\nAny reason why this is happening? Shouldn't the _predict_model_fn work given that it follows the same architecture as that of the other model_fns?\nHere's the full stacktrace: (Note: I called the predict function after evaluation)\nINFO:tensorflow:Using config: {'_cluster_spec': <tensorflow.python.training.server_lib.ClusterSpec object at 0x0000006041C05978>, '_model_dir': 'model-20180420-112636', '_task_type': 'worker', '_keep_checkpoint_every_n_hours': 10000, '_task_id': 0, '_session_config': None, '_num_worker_replicas': 1, '_global_id_in_cluster': 0, '_service': None, '_tf_random_seed': None, '_log_step_count_steps': 100, '_evaluation_master': '', '_save_summary_steps': 100, '_save_checkpoints_steps': None, '_master': '', '_keep_checkpoint_max': 5, '_is_chief': True, '_num_ps_replicas': 0, '_save_checkpoints_secs': 600}\nINFO:tensorflow:Calling model_fn.\n[1, 179, 64]\nINFO:tensorflow:Done calling model_fn.\nSparseTensor(indices=Tensor(\"CTCBeamSearchDecoder:0\", shape=(?, 2), dtype=int64), values=Tensor(\"CTCBeamSearchDecoder:1\", shape=(?,), dtype=int64), dense_shape=Tensor(\"CTCBeamSearchDecoder:2\", shape=(2,), dtype=int64))\nINFO:tensorflow:Graph was finalized.\nINFO:tensorflow:Restoring parameters from model-20180420-112636\\model.ckpt-1\nINFO:tensorflow:Running local_init_op.\nINFO:tensorflow:Done running local_init_op.\nTraceback (most recent call last):\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1361, in _do_call\n    return fn(*args)\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1340, in _run_fn\n    target_list, status, run_metadata)\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\errors_impl.py\", line 516, in __exit__\n    c_api.TF_GetCode(self.status.status))\ntensorflow.python.framework.errors_impl.InvalidArgumentError: output_shape has incorrect number of elements: 82 should be: 2\n\t [[Node: output = SparseToDense[T=DT_INT32, Tindices=DT_INT32, validate_indices=true, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](ToInt32, ToInt32_1, ToInt32_2, bidirectional_rnn/bidirectional_rnn/fw/fw/time)]]\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:/Users/asus.11/Documents/ShapeErrorReproduce/run.py\", line 56, in <module>\n    main()\n  File \"C:/Users/asus.11/Documents/ShapeErrorReproduce/run.py\", line 52, in main\n    predict_with_model(checkpoint_dir)\n  File \"C:/Users/asus.11/Documents/ShapeErrorReproduce/run.py\", line 46, in predict_with_model\n    predict(images, run_params, checkpoint_dir)\n  File \"C:\\Users\\asus.11\\Documents\\ShapeErrorReproduce\\experiment_ops.py\", line 173, in predict\n    for i, p in enumerate(predictions):\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\estimator\\estimator.py\", line 492, in predict\n    preds_evaluated = mon_sess.run(predictions)\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\training\\monitored_session.py\", line 546, in run\n    run_metadata=run_metadata)\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\training\\monitored_session.py\", line 1022, in run\n    run_metadata=run_metadata)\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\training\\monitored_session.py\", line 1113, in run\n    raise six.reraise(*original_exc_info)\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\six.py\", line 693, in reraise\n    raise value\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\training\\monitored_session.py\", line 1098, in run\n    return self._sess.run(*args, **kwargs)\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\training\\monitored_session.py\", line 1170, in run\n    run_metadata=run_metadata)\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\training\\monitored_session.py\", line 950, in run\n    return self._sess.run(*args, **kwargs)\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 905, in run\n    run_metadata_ptr)\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1137, in _run\n    feed_dict_tensor, options, run_metadata)\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1355, in _do_run\n    options, run_metadata)\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1374, in _do_call\n    raise type(e)(node_def, op, message)\ntensorflow.python.framework.errors_impl.InvalidArgumentError: output_shape has incorrect number of elements: 82 should be: 2\n\t [[Node: output = SparseToDense[T=DT_INT32, Tindices=DT_INT32, validate_indices=true, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](ToInt32, ToInt32_1, ToInt32_2, bidirectional_rnn/bidirectional_rnn/fw/fw/time)]]\n\nCaused by op 'output', defined at:\n  File \"C:/Users/asus.11/Documents/ShapeErrorReproduce/run.py\", line 56, in <module>\n    main()\n  File \"C:/Users/asus.11/Documents/ShapeErrorReproduce/run.py\", line 52, in main\n    predict_with_model(checkpoint_dir)\n  File \"C:/Users/asus.11/Documents/ShapeErrorReproduce/run.py\", line 46, in predict_with_model\n    predict(images, run_params, checkpoint_dir)\n  File \"C:\\Users\\asus.11\\Documents\\ShapeErrorReproduce\\experiment_ops.py\", line 173, in predict\n    for i, p in enumerate(predictions):\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\estimator\\estimator.py\", line 479, in predict\n    features, None, model_fn_lib.ModeKeys.PREDICT, self.config)\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\estimator\\estimator.py\", line 793, in _call_model_fn\n    model_fn_results = self._model_fn(features=features, **kwargs)\n  File \"C:\\Users\\asus.11\\Documents\\ShapeErrorReproduce\\experiment_ops.py\", line 129, in _predict_model_fn\n    features, outputs = _get_fed_features_and_resulting_predictions(features, params['num_classes'])\n  File \"C:\\Users\\asus.11\\Documents\\ShapeErrorReproduce\\experiment_ops.py\", line 124, in _get_fed_features_and_resulting_predictions\n    outputs = _get_decoded_outputs(features, num_classes)\n  File \"C:\\Users\\asus.11\\Documents\\ShapeErrorReproduce\\experiment_ops.py\", line 73, in _get_decoded_outputs\n    name=\"output\")\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\ops\\sparse_ops.py\", line 791, in sparse_to_dense\n    name=name)\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\ops\\gen_sparse_ops.py\", line 2401, in _sparse_to_dense\n    name=name)\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\op_def_library.py\", line 787, in _apply_op_helper\n    op_def=op_def)\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 3271, in create_op\n    op_def=op_def)\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 1650, in __init__\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\n\nInvalidArgumentError (see above for traceback): output_shape has incorrect number of elements: 82 should be: 2\n\t [[Node: output = SparseToDense[T=DT_INT32, Tindices=DT_INT32, validate_indices=true, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](ToInt32, ToInt32_1, ToInt32_2, bidirectional_rnn/bidirectional_rnn/fw/fw/time)]]\n\nApparently, the shape error also changes with every run.", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nYes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nWindows 8.1\r\n- **TensorFlow installed from (source or binary)**:\r\nBinary\r\n- **TensorFlow version (use command below)**:\r\n1.6\r\n- **Python version**: \r\n3.6\r\n- **Bazel version (if compiling from source)**:\r\nN/A\r\n- **GCC/Compiler version (if compiling from source)**:\r\nN/A\r\n- **CUDA/cuDNN version**:\r\nN/A\r\n- **GPU model and memory**:\r\nN/A\r\n-**Exact command to reproduce**:\r\nJust execture run.py in this [repository](https://github.com/selcouthlyBlue/ShapeErrorReproduce)\r\n\r\n### Describe the problem\r\nI've already posted this [problem](https://stackoverflow.com/questions/49911525/estimator-predict-has-shape-issues?noredirect=1#comment86845047_49911525) in stackoverflow. Unfortunately, no one can figure it out there so I'm posting it here as well.\r\n\r\nI can train and evalaute a Tensorflow Estimator model without any problems. When I do prediction, this error arises:\r\n\r\n```\r\nInvalidArgumentError (see above for traceback): output_shape has incorrect number of elements: 79 should be: 2\r\n\t [[Node: output = SparseToDense[T=DT_INT32, Tindices=DT_INT32, validate_indices=true, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](ToInt32, ToInt32_1, ToInt32_2, bidirectional_rnn/bidirectional_rnn/fw/fw/time)]]\r\n```\r\n\r\n\r\nAll of the model functions I made use the same architecture:\r\n\r\n```\r\ndef _train_model_fn(features, labels, mode, params):\r\n    features, outputs = _get_fed_features_and_resulting_predictions(features, params['num_classes'])\r\n    predictions = {\"outputs\": outputs}\r\n\r\n    ... # loss initialization and whatnot\r\n\r\n    return _create_model_fn(mode,\r\n                                            predictions,\r\n                                            loss,\r\n                                            train_op)\r\n\r\ndef _predict_model_fn(features, mode, params):\r\n    features, outputs = _get_fed_features_and_resulting_predictions(features, params['num_classes'])\r\n    predictions = {\"outputs\": outputs}\r\n\r\n    return _create_model_fn(mode, predictions,\r\n                            export_outputs={\r\n                                \"outputs\": tf.estimator.export.PredictOutput(outputs)\r\n                            })\r\n\r\n\r\ndef _create_model_fn(mode, predictions, loss=None, train_op=None, export_outputs=None):\r\n    return tf.estimator.EstimatorSpec(mode=mode,\r\n                                      predictions=predictions,\r\n                                      loss=loss,\r\n                                      train_op=train_op,\r\n                                      export_outputs=export_outputs)\r\n```\r\n\r\nHere's the training code and the predict code:\r\n\r\n```\r\ndef train(features, labels, num_classes, params, checkpoint_dir,\r\n          batch_size=1, num_epochs=1, save_checkpoint_every_n_epochs=1):\r\n    num_steps_per_epoch = len(features) // batch_size\r\n    save_checkpoint_steps = save_checkpoint_every_n_epochs * num_steps_per_epoch\r\n    params['num_classes'] = num_classes\r\n    params['log_step_count_steps'] = num_steps_per_epoch\r\n    estimator = tf.estimator.Estimator(model_fn=_train_model_fn,\r\n                                       params=params,\r\n                                       model_dir=checkpoint_dir,\r\n                                       config=tf.estimator.RunConfig(\r\n                                           save_checkpoints_steps=save_checkpoint_steps,\r\n                                           log_step_count_steps=num_steps_per_epoch,\r\n                                           save_summary_steps=num_steps_per_epoch\r\n                                       ))\r\n    estimator.train(input_fn=_input_fn(features, labels, batch_size),\r\n                    steps=num_epochs * num_steps_per_epoch)\r\n\r\n\r\ndef predict(features, params, checkpoint_dir):\r\n    estimator = tf.estimator.Estimator(model_fn=_predict_model_fn,\r\n                                       params=params,\r\n                                       model_dir=checkpoint_dir)\r\n    predictions = estimator.predict(input_fn=_input_fn(features))\r\n    for i, p in enumerate(predictions):\r\n        print(i, p)\r\n```\r\n\r\nI also checked the shapes given every time the input passes a layer when training, and the same thing for predicting. They give the same shapes:\r\n\r\nTraining:\r\n\r\n```\r\nconv2d [1, 358, 358, 16]\r\nmax_pool2d [1, 179, 179, 16]\r\ncollapse_to_rnn_dims [1, 179, 2864]\r\nbirnn [1, 179, 64]\r\n```\r\n\r\nPrediction:\r\n\r\n```\r\nconv2d [1, 358, 358, 16]\r\nmax_pool2d [1, 179, 179, 16]\r\ncollapse_to_rnn_dims [1, 179, 2864]\r\nbirnn [1, 179, 64]\r\n```\r\n\r\nHere are the `SparseTensors` that are passed to `sparse_to_dense`:\r\n\r\nTraining:\r\n\r\n`SparseTensor(indices=Tensor(\"CTCBeamSearchDecoder:0\", shape=(?, 2), dtype=int64), values=Tensor(\"CTCBeamSearchDecoder:1\", shape=(?,), dtype=int64), dense_shape=Tensor(\"CTCBeamSearchDecoder:2\", shape=(2,), dtype=int64))`\r\n\r\nPrediction:\r\n\r\n`SparseTensor(indices=Tensor(\"CTCBeamSearchDecoder:0\", shape=(?, 2), dtype=int64), values=Tensor(\"CTCBeamSearchDecoder:1\", shape=(?,), dtype=int64), dense_shape=Tensor(\"CTCBeamSearchDecoder:2\", shape=(2,), dtype=int64))`\r\n\r\nWhich are all pretty much the same.\r\n\r\nAny reason why this is happening? Shouldn't the `_predict_model_fn` work given that it follows the same architecture as that of the other `model_fn`s?\r\n\r\nHere's the full stacktrace: (Note: I called the predict function after evaluation)\r\n\r\n```\r\nINFO:tensorflow:Using config: {'_cluster_spec': <tensorflow.python.training.server_lib.ClusterSpec object at 0x0000006041C05978>, '_model_dir': 'model-20180420-112636', '_task_type': 'worker', '_keep_checkpoint_every_n_hours': 10000, '_task_id': 0, '_session_config': None, '_num_worker_replicas': 1, '_global_id_in_cluster': 0, '_service': None, '_tf_random_seed': None, '_log_step_count_steps': 100, '_evaluation_master': '', '_save_summary_steps': 100, '_save_checkpoints_steps': None, '_master': '', '_keep_checkpoint_max': 5, '_is_chief': True, '_num_ps_replicas': 0, '_save_checkpoints_secs': 600}\r\nINFO:tensorflow:Calling model_fn.\r\n[1, 179, 64]\r\nINFO:tensorflow:Done calling model_fn.\r\nSparseTensor(indices=Tensor(\"CTCBeamSearchDecoder:0\", shape=(?, 2), dtype=int64), values=Tensor(\"CTCBeamSearchDecoder:1\", shape=(?,), dtype=int64), dense_shape=Tensor(\"CTCBeamSearchDecoder:2\", shape=(2,), dtype=int64))\r\nINFO:tensorflow:Graph was finalized.\r\nINFO:tensorflow:Restoring parameters from model-20180420-112636\\model.ckpt-1\r\nINFO:tensorflow:Running local_init_op.\r\nINFO:tensorflow:Done running local_init_op.\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1361, in _do_call\r\n    return fn(*args)\r\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1340, in _run_fn\r\n    target_list, status, run_metadata)\r\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\errors_impl.py\", line 516, in __exit__\r\n    c_api.TF_GetCode(self.status.status))\r\ntensorflow.python.framework.errors_impl.InvalidArgumentError: output_shape has incorrect number of elements: 82 should be: 2\r\n\t [[Node: output = SparseToDense[T=DT_INT32, Tindices=DT_INT32, validate_indices=true, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](ToInt32, ToInt32_1, ToInt32_2, bidirectional_rnn/bidirectional_rnn/fw/fw/time)]]\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:/Users/asus.11/Documents/ShapeErrorReproduce/run.py\", line 56, in <module>\r\n    main()\r\n  File \"C:/Users/asus.11/Documents/ShapeErrorReproduce/run.py\", line 52, in main\r\n    predict_with_model(checkpoint_dir)\r\n  File \"C:/Users/asus.11/Documents/ShapeErrorReproduce/run.py\", line 46, in predict_with_model\r\n    predict(images, run_params, checkpoint_dir)\r\n  File \"C:\\Users\\asus.11\\Documents\\ShapeErrorReproduce\\experiment_ops.py\", line 173, in predict\r\n    for i, p in enumerate(predictions):\r\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\estimator\\estimator.py\", line 492, in predict\r\n    preds_evaluated = mon_sess.run(predictions)\r\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\training\\monitored_session.py\", line 546, in run\r\n    run_metadata=run_metadata)\r\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\training\\monitored_session.py\", line 1022, in run\r\n    run_metadata=run_metadata)\r\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\training\\monitored_session.py\", line 1113, in run\r\n    raise six.reraise(*original_exc_info)\r\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\six.py\", line 693, in reraise\r\n    raise value\r\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\training\\monitored_session.py\", line 1098, in run\r\n    return self._sess.run(*args, **kwargs)\r\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\training\\monitored_session.py\", line 1170, in run\r\n    run_metadata=run_metadata)\r\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\training\\monitored_session.py\", line 950, in run\r\n    return self._sess.run(*args, **kwargs)\r\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 905, in run\r\n    run_metadata_ptr)\r\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1137, in _run\r\n    feed_dict_tensor, options, run_metadata)\r\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1355, in _do_run\r\n    options, run_metadata)\r\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1374, in _do_call\r\n    raise type(e)(node_def, op, message)\r\ntensorflow.python.framework.errors_impl.InvalidArgumentError: output_shape has incorrect number of elements: 82 should be: 2\r\n\t [[Node: output = SparseToDense[T=DT_INT32, Tindices=DT_INT32, validate_indices=true, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](ToInt32, ToInt32_1, ToInt32_2, bidirectional_rnn/bidirectional_rnn/fw/fw/time)]]\r\n\r\nCaused by op 'output', defined at:\r\n  File \"C:/Users/asus.11/Documents/ShapeErrorReproduce/run.py\", line 56, in <module>\r\n    main()\r\n  File \"C:/Users/asus.11/Documents/ShapeErrorReproduce/run.py\", line 52, in main\r\n    predict_with_model(checkpoint_dir)\r\n  File \"C:/Users/asus.11/Documents/ShapeErrorReproduce/run.py\", line 46, in predict_with_model\r\n    predict(images, run_params, checkpoint_dir)\r\n  File \"C:\\Users\\asus.11\\Documents\\ShapeErrorReproduce\\experiment_ops.py\", line 173, in predict\r\n    for i, p in enumerate(predictions):\r\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\estimator\\estimator.py\", line 479, in predict\r\n    features, None, model_fn_lib.ModeKeys.PREDICT, self.config)\r\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\estimator\\estimator.py\", line 793, in _call_model_fn\r\n    model_fn_results = self._model_fn(features=features, **kwargs)\r\n  File \"C:\\Users\\asus.11\\Documents\\ShapeErrorReproduce\\experiment_ops.py\", line 129, in _predict_model_fn\r\n    features, outputs = _get_fed_features_and_resulting_predictions(features, params['num_classes'])\r\n  File \"C:\\Users\\asus.11\\Documents\\ShapeErrorReproduce\\experiment_ops.py\", line 124, in _get_fed_features_and_resulting_predictions\r\n    outputs = _get_decoded_outputs(features, num_classes)\r\n  File \"C:\\Users\\asus.11\\Documents\\ShapeErrorReproduce\\experiment_ops.py\", line 73, in _get_decoded_outputs\r\n    name=\"output\")\r\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\ops\\sparse_ops.py\", line 791, in sparse_to_dense\r\n    name=name)\r\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\ops\\gen_sparse_ops.py\", line 2401, in _sparse_to_dense\r\n    name=name)\r\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\op_def_library.py\", line 787, in _apply_op_helper\r\n    op_def=op_def)\r\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 3271, in create_op\r\n    op_def=op_def)\r\n  File \"C:\\Users\\asus.11\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 1650, in __init__\r\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\r\n\r\nInvalidArgumentError (see above for traceback): output_shape has incorrect number of elements: 82 should be: 2\r\n\t [[Node: output = SparseToDense[T=DT_INT32, Tindices=DT_INT32, validate_indices=true, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](ToInt32, ToInt32_1, ToInt32_2, bidirectional_rnn/bidirectional_rnn/fw/fw/time)]]\r\n```\r\n\r\nApparently, the shape error also changes with every run."}