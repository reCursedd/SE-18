{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/276994450", "html_url": "https://github.com/tensorflow/tensorflow/issues/7216#issuecomment-276994450", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7216", "id": 276994450, "node_id": "MDEyOklzc3VlQ29tbWVudDI3Njk5NDQ1MA==", "user": {"login": "DavidNorman", "id": 606831, "node_id": "MDQ6VXNlcjYwNjgzMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/606831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DavidNorman", "html_url": "https://github.com/DavidNorman", "followers_url": "https://api.github.com/users/DavidNorman/followers", "following_url": "https://api.github.com/users/DavidNorman/following{/other_user}", "gists_url": "https://api.github.com/users/DavidNorman/gists{/gist_id}", "starred_url": "https://api.github.com/users/DavidNorman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DavidNorman/subscriptions", "organizations_url": "https://api.github.com/users/DavidNorman/orgs", "repos_url": "https://api.github.com/users/DavidNorman/repos", "events_url": "https://api.github.com/users/DavidNorman/events{/privacy}", "received_events_url": "https://api.github.com/users/DavidNorman/received_events", "type": "User", "site_admin": false}, "created_at": "2017-02-02T15:47:41Z", "updated_at": "2017-02-02T15:47:41Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I've confirmed that undoing the changes to the dependencies in <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/191658d54f90ac03c15b339326129cd52d1f56a3/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/191658d54f90ac03c15b339326129cd52d1f56a3\"><tt>191658d</tt></a> will make the build succeed again.</p>\n<p>I think that the problem is the target :cuda_platform is referred to in a target called :stream_executor_cuda without being tested for CUDA config.</p>\n<p>This is as opposed to its use in the macro tf_cuda_library, where it isn't included when cuda isn't enabled.</p>\n<p>The stream_executor_cuda is always included in the gpu_executable and gpu_plugin targets in XLA, which are in turn always included in various other targets that are included in XLA independent of whether CUDA is enabled.</p>\n<p>I suspect that either the stream_executor_cuda should be a tf_cuda_library, or something like that.<br>\nOr maybe it is the higher targets, like gpu_plugin which should be tf_cuda_library type targets.</p>", "body_text": "I've confirmed that undoing the changes to the dependencies in 191658d will make the build succeed again.\nI think that the problem is the target :cuda_platform is referred to in a target called :stream_executor_cuda without being tested for CUDA config.\nThis is as opposed to its use in the macro tf_cuda_library, where it isn't included when cuda isn't enabled.\nThe stream_executor_cuda is always included in the gpu_executable and gpu_plugin targets in XLA, which are in turn always included in various other targets that are included in XLA independent of whether CUDA is enabled.\nI suspect that either the stream_executor_cuda should be a tf_cuda_library, or something like that.\nOr maybe it is the higher targets, like gpu_plugin which should be tf_cuda_library type targets.", "body": "I've confirmed that undoing the changes to the dependencies in 191658d54f90ac03c15b339326129cd52d1f56a3 will make the build succeed again.\r\n\r\nI think that the problem is the target :cuda_platform is referred to in a target called :stream_executor_cuda without being tested for CUDA config.\r\n\r\nThis is as opposed to its use in the macro tf_cuda_library, where it isn't included when cuda isn't enabled.\r\n\r\nThe stream_executor_cuda is always included in the gpu_executable and gpu_plugin targets in XLA, which are in turn always included in various other targets that are included in XLA independent of whether CUDA is enabled.\r\n\r\nI suspect that either the stream_executor_cuda should be a tf_cuda_library, or something like that.\r\nOr maybe it is the higher targets, like gpu_plugin which should be tf_cuda_library type targets."}