{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18669", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18669/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18669/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18669/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18669", "id": 315583728, "node_id": "MDU6SXNzdWUzMTU1ODM3Mjg=", "number": 18669, "title": "Unable to reuse opaque_kernel variable in CudnnLSTM for FP16", "user": {"login": "agupta74", "id": 21690396, "node_id": "MDQ6VXNlcjIxNjkwMzk2", "avatar_url": "https://avatars2.githubusercontent.com/u/21690396?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agupta74", "html_url": "https://github.com/agupta74", "followers_url": "https://api.github.com/users/agupta74/followers", "following_url": "https://api.github.com/users/agupta74/following{/other_user}", "gists_url": "https://api.github.com/users/agupta74/gists{/gist_id}", "starred_url": "https://api.github.com/users/agupta74/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agupta74/subscriptions", "organizations_url": "https://api.github.com/users/agupta74/orgs", "repos_url": "https://api.github.com/users/agupta74/repos", "events_url": "https://api.github.com/users/agupta74/events{/privacy}", "received_events_url": "https://api.github.com/users/agupta74/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "cy89", "id": 29663194, "node_id": "MDQ6VXNlcjI5NjYzMTk0", "avatar_url": "https://avatars0.githubusercontent.com/u/29663194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cy89", "html_url": "https://github.com/cy89", "followers_url": "https://api.github.com/users/cy89/followers", "following_url": "https://api.github.com/users/cy89/following{/other_user}", "gists_url": "https://api.github.com/users/cy89/gists{/gist_id}", "starred_url": "https://api.github.com/users/cy89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cy89/subscriptions", "organizations_url": "https://api.github.com/users/cy89/orgs", "repos_url": "https://api.github.com/users/cy89/repos", "events_url": "https://api.github.com/users/cy89/events{/privacy}", "received_events_url": "https://api.github.com/users/cy89/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cy89", "id": 29663194, "node_id": "MDQ6VXNlcjI5NjYzMTk0", "avatar_url": "https://avatars0.githubusercontent.com/u/29663194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cy89", "html_url": "https://github.com/cy89", "followers_url": "https://api.github.com/users/cy89/followers", "following_url": "https://api.github.com/users/cy89/following{/other_user}", "gists_url": "https://api.github.com/users/cy89/gists{/gist_id}", "starred_url": "https://api.github.com/users/cy89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cy89/subscriptions", "organizations_url": "https://api.github.com/users/cy89/orgs", "repos_url": "https://api.github.com/users/cy89/repos", "events_url": "https://api.github.com/users/cy89/events{/privacy}", "received_events_url": "https://api.github.com/users/cy89/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-04-18T18:01:21Z", "updated_at": "2018-04-19T15:56:09Z", "closed_at": "2018-04-19T15:56:09Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: Binary using GPUs</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.7.0</li>\n<li><strong>Python version</strong>: 2.7</li>\n<li><strong>Bazel version (if compiling from source)</strong>: NA</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: NA</li>\n<li><strong>CUDA/cuDNN version</strong>:  Cuda 9.0/ CuDNN 7.0.5</li>\n<li><strong>GPU model and memory</strong>:  Volta(V100), 16 GB</li>\n<li><strong>Exact command to reproduce</strong>: Please see the code below</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>Unable to reuse opaque_kernel variables with FP16 data type. Works for FP32 data type. Here is the stack trace:</p>\n<p>File \"cudnn_lstm_example.py\", line 37, in <br>\noutputs_2, _ = lstm(inputs_2)<br>\nFile \"/usr/local/anaconda2/envs/tensorflow_1.7/lib/python2.7/site-packages/tensorflow/python/layers/base.py\", line 696, in <strong>call</strong><br>\nself.build(input_shapes)<br>\nFile \"/usr/local/anaconda2/envs/tensorflow_1.7/lib/python2.7/site-packages/tensorflow/contrib/cudnn_rnn/python/layers/cudnn_rnn.py\", line 358, in build<br>\n\"opaque_kernel\", initializer=opaque_params_t, validate_shape=False)<br>\nFile \"/usr/local/anaconda2/envs/tensorflow_1.7/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py\", line 1297, in get_variable<br>\nconstraint=constraint)<br>\nFile \"/usr/local/anaconda2/envs/tensorflow_1.7/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py\", line 1093, in get_variable<br>\nconstraint=constraint)<br>\nFile \"/usr/local/anaconda2/envs/tensorflow_1.7/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py\", line 431, in get_variable<br>\nreturn custom_getter(**custom_getter_kwargs)<br>\nFile \"/usr/local/anaconda2/envs/tensorflow_1.7/lib/python2.7/site-packages/tensorflow/contrib/cudnn_rnn/python/layers/cudnn_rnn.py\", line 291, in _update_trainable_weights<br>\nvariable = getter(*args, **kwargs)<br>\nFile \"/usr/local/anaconda2/envs/tensorflow_1.7/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py\", line 408, in _true_getter<br>\nuse_resource=use_resource, constraint=constraint)<br>\nFile \"/usr/local/anaconda2/envs/tensorflow_1.7/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py\", line 758, in _get_single_variable<br>\nfound_type_str))<br>\nValueError: Trying to share variable cudnn_rnn/cudnn_bi_lstm/opaque_kernel, but specified dtype float32 and found dtype float16_ref.</p>\n<h3>Source code / logs</h3>\n<pre><code>import tensorflow as tf\n\nnum_layers = 1\nnum_units = 40\nbatch_size = 60\ndir_count = 2\n\ninputDType= tf.float16 # Does not work\n#inputDType = tf.float32 # Works\n\ninputs_1 = tf.random_uniform([\n    num_layers * dir_count, batch_size, num_units], dtype=inputDType)\n\ninputs_2 = tf.random_uniform([\n    num_layers * dir_count, batch_size, num_units], dtype=inputDType)\n\nwith tf.variable_scope(\"cudnn_rnn\", reuse=False):\n    lstm = tf.contrib.cudnn_rnn.CudnnLSTM(\n        num_layers=num_layers,\n        num_units=num_units,\n        direction=\"bidirectional\",\n        dtype=inputDType,\n        name=\"cudnn_bi_lstm\")\n                \n    outputs_1, _ = lstm(inputs_1)\n\nwith tf.variable_scope(\"cudnn_rnn\", reuse=True):\n    lstm = tf.contrib.cudnn_rnn.CudnnLSTM(\n        num_layers=num_layers,\n        num_units=num_units,\n        direction=\"bidirectional\",\n        dtype=inputDType,\n        name=\"cudnn_bi_lstm\")\n\n    outputs_2, _ = lstm(inputs_2)\n\nloss1 = tf.reduce_sum(outputs_1)\nloss2 = tf.reduce_sum(outputs_2)\nloss= loss1+loss2\nvar = lstm.trainable_variables[0]\n\ngrad = tf.gradients(loss, var)[0]\nprint('grad.shape: %s' % grad.shape)\nprint('var.shape: %s' % var.shape)\n\nopt = tf.train.AdamOptimizer()\ntrain_op = opt.apply_gradients([(grad, lstm.trainable_variables[0])])\n\nwith tf.Session() as sess:\n    sess.run(tf.global_variables_initializer())\n    print(sess.run(outputs_1))\n    print(sess.run(outputs_2))\n    sess.run(train_op)\n    print(sess.run(outputs_1))\n    print(sess.run(outputs_2))\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04\nTensorFlow installed from (source or binary): Binary using GPUs\nTensorFlow version (use command below): 1.7.0\nPython version: 2.7\nBazel version (if compiling from source): NA\nGCC/Compiler version (if compiling from source): NA\nCUDA/cuDNN version:  Cuda 9.0/ CuDNN 7.0.5\nGPU model and memory:  Volta(V100), 16 GB\nExact command to reproduce: Please see the code below\n\nDescribe the problem\nUnable to reuse opaque_kernel variables with FP16 data type. Works for FP32 data type. Here is the stack trace:\nFile \"cudnn_lstm_example.py\", line 37, in \noutputs_2, _ = lstm(inputs_2)\nFile \"/usr/local/anaconda2/envs/tensorflow_1.7/lib/python2.7/site-packages/tensorflow/python/layers/base.py\", line 696, in call\nself.build(input_shapes)\nFile \"/usr/local/anaconda2/envs/tensorflow_1.7/lib/python2.7/site-packages/tensorflow/contrib/cudnn_rnn/python/layers/cudnn_rnn.py\", line 358, in build\n\"opaque_kernel\", initializer=opaque_params_t, validate_shape=False)\nFile \"/usr/local/anaconda2/envs/tensorflow_1.7/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py\", line 1297, in get_variable\nconstraint=constraint)\nFile \"/usr/local/anaconda2/envs/tensorflow_1.7/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py\", line 1093, in get_variable\nconstraint=constraint)\nFile \"/usr/local/anaconda2/envs/tensorflow_1.7/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py\", line 431, in get_variable\nreturn custom_getter(**custom_getter_kwargs)\nFile \"/usr/local/anaconda2/envs/tensorflow_1.7/lib/python2.7/site-packages/tensorflow/contrib/cudnn_rnn/python/layers/cudnn_rnn.py\", line 291, in _update_trainable_weights\nvariable = getter(*args, **kwargs)\nFile \"/usr/local/anaconda2/envs/tensorflow_1.7/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py\", line 408, in _true_getter\nuse_resource=use_resource, constraint=constraint)\nFile \"/usr/local/anaconda2/envs/tensorflow_1.7/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py\", line 758, in _get_single_variable\nfound_type_str))\nValueError: Trying to share variable cudnn_rnn/cudnn_bi_lstm/opaque_kernel, but specified dtype float32 and found dtype float16_ref.\nSource code / logs\nimport tensorflow as tf\n\nnum_layers = 1\nnum_units = 40\nbatch_size = 60\ndir_count = 2\n\ninputDType= tf.float16 # Does not work\n#inputDType = tf.float32 # Works\n\ninputs_1 = tf.random_uniform([\n    num_layers * dir_count, batch_size, num_units], dtype=inputDType)\n\ninputs_2 = tf.random_uniform([\n    num_layers * dir_count, batch_size, num_units], dtype=inputDType)\n\nwith tf.variable_scope(\"cudnn_rnn\", reuse=False):\n    lstm = tf.contrib.cudnn_rnn.CudnnLSTM(\n        num_layers=num_layers,\n        num_units=num_units,\n        direction=\"bidirectional\",\n        dtype=inputDType,\n        name=\"cudnn_bi_lstm\")\n                \n    outputs_1, _ = lstm(inputs_1)\n\nwith tf.variable_scope(\"cudnn_rnn\", reuse=True):\n    lstm = tf.contrib.cudnn_rnn.CudnnLSTM(\n        num_layers=num_layers,\n        num_units=num_units,\n        direction=\"bidirectional\",\n        dtype=inputDType,\n        name=\"cudnn_bi_lstm\")\n\n    outputs_2, _ = lstm(inputs_2)\n\nloss1 = tf.reduce_sum(outputs_1)\nloss2 = tf.reduce_sum(outputs_2)\nloss= loss1+loss2\nvar = lstm.trainable_variables[0]\n\ngrad = tf.gradients(loss, var)[0]\nprint('grad.shape: %s' % grad.shape)\nprint('var.shape: %s' % var.shape)\n\nopt = tf.train.AdamOptimizer()\ntrain_op = opt.apply_gradients([(grad, lstm.trainable_variables[0])])\n\nwith tf.Session() as sess:\n    sess.run(tf.global_variables_initializer())\n    print(sess.run(outputs_1))\n    print(sess.run(outputs_2))\n    sess.run(train_op)\n    print(sess.run(outputs_1))\n    print(sess.run(outputs_2))", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: Binary using GPUs\r\n- **TensorFlow version (use command below)**: 1.7.0\r\n- **Python version**: 2.7\r\n- **Bazel version (if compiling from source)**: NA\r\n- **GCC/Compiler version (if compiling from source)**: NA\r\n- **CUDA/cuDNN version**:  Cuda 9.0/ CuDNN 7.0.5\r\n- **GPU model and memory**:  Volta(V100), 16 GB\r\n- **Exact command to reproduce**: Please see the code below\r\n\r\n### Describe the problem\r\nUnable to reuse opaque_kernel variables with FP16 data type. Works for FP32 data type. Here is the stack trace:\r\n\r\n File \"cudnn_lstm_example.py\", line 37, in <module>\r\n    outputs_2, _ = lstm(inputs_2)\r\n  File \"/usr/local/anaconda2/envs/tensorflow_1.7/lib/python2.7/site-packages/tensorflow/python/layers/base.py\", line 696, in __call__\r\n    self.build(input_shapes)\r\n  File \"/usr/local/anaconda2/envs/tensorflow_1.7/lib/python2.7/site-packages/tensorflow/contrib/cudnn_rnn/python/layers/cudnn_rnn.py\", line 358, in build\r\n    \"opaque_kernel\", initializer=opaque_params_t, validate_shape=False)\r\n  File \"/usr/local/anaconda2/envs/tensorflow_1.7/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py\", line 1297, in get_variable\r\n    constraint=constraint)\r\n  File \"/usr/local/anaconda2/envs/tensorflow_1.7/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py\", line 1093, in get_variable\r\n    constraint=constraint)\r\n  File \"/usr/local/anaconda2/envs/tensorflow_1.7/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py\", line 431, in get_variable\r\n    return custom_getter(**custom_getter_kwargs)\r\n  File \"/usr/local/anaconda2/envs/tensorflow_1.7/lib/python2.7/site-packages/tensorflow/contrib/cudnn_rnn/python/layers/cudnn_rnn.py\", line 291, in _update_trainable_weights\r\n    variable = getter(*args, **kwargs)\r\n  File \"/usr/local/anaconda2/envs/tensorflow_1.7/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py\", line 408, in _true_getter\r\n    use_resource=use_resource, constraint=constraint)\r\n  File \"/usr/local/anaconda2/envs/tensorflow_1.7/lib/python2.7/site-packages/tensorflow/python/ops/variable_scope.py\", line 758, in _get_single_variable\r\n    found_type_str))\r\nValueError: Trying to share variable cudnn_rnn/cudnn_bi_lstm/opaque_kernel, but specified dtype float32 and found dtype float16_ref.\r\n\r\n### Source code / logs\r\n\r\n```\r\nimport tensorflow as tf\r\n\r\nnum_layers = 1\r\nnum_units = 40\r\nbatch_size = 60\r\ndir_count = 2\r\n\r\ninputDType= tf.float16 # Does not work\r\n#inputDType = tf.float32 # Works\r\n\r\ninputs_1 = tf.random_uniform([\r\n    num_layers * dir_count, batch_size, num_units], dtype=inputDType)\r\n\r\ninputs_2 = tf.random_uniform([\r\n    num_layers * dir_count, batch_size, num_units], dtype=inputDType)\r\n\r\nwith tf.variable_scope(\"cudnn_rnn\", reuse=False):\r\n    lstm = tf.contrib.cudnn_rnn.CudnnLSTM(\r\n        num_layers=num_layers,\r\n        num_units=num_units,\r\n        direction=\"bidirectional\",\r\n        dtype=inputDType,\r\n        name=\"cudnn_bi_lstm\")\r\n                \r\n    outputs_1, _ = lstm(inputs_1)\r\n\r\nwith tf.variable_scope(\"cudnn_rnn\", reuse=True):\r\n    lstm = tf.contrib.cudnn_rnn.CudnnLSTM(\r\n        num_layers=num_layers,\r\n        num_units=num_units,\r\n        direction=\"bidirectional\",\r\n        dtype=inputDType,\r\n        name=\"cudnn_bi_lstm\")\r\n\r\n    outputs_2, _ = lstm(inputs_2)\r\n\r\nloss1 = tf.reduce_sum(outputs_1)\r\nloss2 = tf.reduce_sum(outputs_2)\r\nloss= loss1+loss2\r\nvar = lstm.trainable_variables[0]\r\n\r\ngrad = tf.gradients(loss, var)[0]\r\nprint('grad.shape: %s' % grad.shape)\r\nprint('var.shape: %s' % var.shape)\r\n\r\nopt = tf.train.AdamOptimizer()\r\ntrain_op = opt.apply_gradients([(grad, lstm.trainable_variables[0])])\r\n\r\nwith tf.Session() as sess:\r\n    sess.run(tf.global_variables_initializer())\r\n    print(sess.run(outputs_1))\r\n    print(sess.run(outputs_2))\r\n    sess.run(train_op)\r\n    print(sess.run(outputs_1))\r\n    print(sess.run(outputs_2))\r\n```\r\n"}