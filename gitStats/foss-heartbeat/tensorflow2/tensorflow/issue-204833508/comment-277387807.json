{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/277387807", "html_url": "https://github.com/tensorflow/tensorflow/issues/7214#issuecomment-277387807", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7214", "id": 277387807, "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzM4NzgwNw==", "user": {"login": "machrisaa", "id": 12701396, "node_id": "MDQ6VXNlcjEyNzAxMzk2", "avatar_url": "https://avatars0.githubusercontent.com/u/12701396?v=4", "gravatar_id": "", "url": "https://api.github.com/users/machrisaa", "html_url": "https://github.com/machrisaa", "followers_url": "https://api.github.com/users/machrisaa/followers", "following_url": "https://api.github.com/users/machrisaa/following{/other_user}", "gists_url": "https://api.github.com/users/machrisaa/gists{/gist_id}", "starred_url": "https://api.github.com/users/machrisaa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/machrisaa/subscriptions", "organizations_url": "https://api.github.com/users/machrisaa/orgs", "repos_url": "https://api.github.com/users/machrisaa/repos", "events_url": "https://api.github.com/users/machrisaa/events{/privacy}", "received_events_url": "https://api.github.com/users/machrisaa/received_events", "type": "User", "site_admin": false}, "created_at": "2017-02-03T23:08:34Z", "updated_at": "2017-02-03T23:08:34Z", "author_association": "NONE", "body_html": "<p>Hi <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=326106\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/aselle\">@aselle</a> , based on the thinking I have mentioned. I have created a demo in <a href=\"https://github.com/tensorflow/tensorflow/pull/7254\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/tensorflow/tensorflow/pull/7254/hovercard\">#7254</a> that use RedBaron to parse the source into \"Full Syntax Tree\" with comments and formatting preserved. Then transform the tree nodes based on the rules and finally unparse the tree back to source code.</p>\n<p>The <code>tf_update2.py</code> is a working prototype. It can already convert a single file with all the rules defined in <code>tf_update.py</code>. It has also fixed the issue I raised here. It also support converting <code>tf.reverse</code> and <code>tf.image.resize_images</code>.</p>\n<p>If you think this method I am using is suitable for the project. I will continue to work on the remaining features like handling folder tree and create <code>report.txt</code>.</p>", "body_text": "Hi @aselle , based on the thinking I have mentioned. I have created a demo in #7254 that use RedBaron to parse the source into \"Full Syntax Tree\" with comments and formatting preserved. Then transform the tree nodes based on the rules and finally unparse the tree back to source code.\nThe tf_update2.py is a working prototype. It can already convert a single file with all the rules defined in tf_update.py. It has also fixed the issue I raised here. It also support converting tf.reverse and tf.image.resize_images.\nIf you think this method I am using is suitable for the project. I will continue to work on the remaining features like handling folder tree and create report.txt.", "body": "Hi @aselle , based on the thinking I have mentioned. I have created a demo in [#7254](https://github.com/tensorflow/tensorflow/pull/7254) that use RedBaron to parse the source into \"Full Syntax Tree\" with comments and formatting preserved. Then transform the tree nodes based on the rules and finally unparse the tree back to source code.\r\n\r\nThe `tf_update2.py` is a working prototype. It can already convert a single file with all the rules defined in `tf_update.py`. It has also fixed the issue I raised here. It also support converting `tf.reverse` and `tf.image.resize_images`.\r\n\r\nIf you think this method I am using is suitable for the project. I will continue to work on the remaining features like handling folder tree and create `report.txt`.\r\n"}