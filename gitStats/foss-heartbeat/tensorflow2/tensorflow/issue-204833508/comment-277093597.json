{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/277093597", "html_url": "https://github.com/tensorflow/tensorflow/issues/7214#issuecomment-277093597", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7214", "id": 277093597, "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzA5MzU5Nw==", "user": {"login": "machrisaa", "id": 12701396, "node_id": "MDQ6VXNlcjEyNzAxMzk2", "avatar_url": "https://avatars0.githubusercontent.com/u/12701396?v=4", "gravatar_id": "", "url": "https://api.github.com/users/machrisaa", "html_url": "https://github.com/machrisaa", "followers_url": "https://api.github.com/users/machrisaa/followers", "following_url": "https://api.github.com/users/machrisaa/following{/other_user}", "gists_url": "https://api.github.com/users/machrisaa/gists{/gist_id}", "starred_url": "https://api.github.com/users/machrisaa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/machrisaa/subscriptions", "organizations_url": "https://api.github.com/users/machrisaa/orgs", "repos_url": "https://api.github.com/users/machrisaa/repos", "events_url": "https://api.github.com/users/machrisaa/events{/privacy}", "received_events_url": "https://api.github.com/users/machrisaa/received_events", "type": "User", "site_admin": false}, "created_at": "2017-02-02T21:43:32Z", "updated_at": "2017-02-02T21:43:32Z", "author_association": "NONE", "body_html": "<p>Hi <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=326106\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/aselle\">@aselle</a> , thanks for the reply. You are right. Using the <code>ast</code> would have the limitation about the position of a list-like object and problem about preserving the comments. I think you have tried to preserve the comment as much as possible.</p>\n<p>I have tried other methods to convert an inline method -&gt; ast -&gt; transform -&gt; unparsing -&gt; replace the original method by using <code>ast. NodeTransformer</code>. The transformation could be much easier especially working on the cases with changing signature, like <code>tf.image.resize_images</code> and <code>tf.reverse</code>. But apparently, this will lost all the inline comments like what you have mentioned.</p>\n<p>At the moment, I am looking for some <code>ast</code> alternative methods like using Redboran (<code>pip install redbaron</code>). Is there any requirement of what kind of library can be used in the Tensorflow project?</p>", "body_text": "Hi @aselle , thanks for the reply. You are right. Using the ast would have the limitation about the position of a list-like object and problem about preserving the comments. I think you have tried to preserve the comment as much as possible.\nI have tried other methods to convert an inline method -> ast -> transform -> unparsing -> replace the original method by using ast. NodeTransformer. The transformation could be much easier especially working on the cases with changing signature, like tf.image.resize_images and tf.reverse. But apparently, this will lost all the inline comments like what you have mentioned.\nAt the moment, I am looking for some ast alternative methods like using Redboran (pip install redbaron). Is there any requirement of what kind of library can be used in the Tensorflow project?", "body": "Hi @aselle , thanks for the reply. You are right. Using the `ast` would have the limitation about the position of a list-like object and problem about preserving the comments. I think you have tried to preserve the comment as much as possible. \r\n\r\nI have tried other methods to convert an inline method -> ast -> transform -> unparsing -> replace the original method by using `ast. NodeTransformer`. The transformation could be much easier especially working on the cases with changing signature, like `tf.image.resize_images` and `tf.reverse`. But apparently, this will lost all the inline comments like what you have mentioned.\r\n\r\nAt the moment, I am looking for some `ast` alternative methods like using Redboran (`pip install redbaron`). Is there any requirement of what kind of library can be used in the Tensorflow project?\r\n"}