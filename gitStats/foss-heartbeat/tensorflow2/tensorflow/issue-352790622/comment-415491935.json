{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/415491935", "html_url": "https://github.com/tensorflow/tensorflow/pull/21783#issuecomment-415491935", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21783", "id": 415491935, "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTQ5MTkzNQ==", "user": {"login": "xiejw", "id": 1184671, "node_id": "MDQ6VXNlcjExODQ2NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1184671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xiejw", "html_url": "https://github.com/xiejw", "followers_url": "https://api.github.com/users/xiejw/followers", "following_url": "https://api.github.com/users/xiejw/following{/other_user}", "gists_url": "https://api.github.com/users/xiejw/gists{/gist_id}", "starred_url": "https://api.github.com/users/xiejw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xiejw/subscriptions", "organizations_url": "https://api.github.com/users/xiejw/orgs", "repos_url": "https://api.github.com/users/xiejw/repos", "events_url": "https://api.github.com/users/xiejw/events{/privacy}", "received_events_url": "https://api.github.com/users/xiejw/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-23T16:58:59Z", "updated_at": "2018-08-23T16:58:59Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I think this is a difference between the workflow you are using vs the the workflow this API is designed for.</p>\n<p>ispir@ might provide more thoughts here.</p>\n<p>But typically, the daily incremental training is achieved in the following way:</p>\n<ol>\n<li>Train the model for day 1</li>\n<li>For day 2, start a new model_dir, set the warning starting in Estimator constructor to continue from day 1 checkpoint and start the training from empty model_dir.</li>\n<li>For day 3, a new model_dir and warn start he Estimator with day 2's ckpt.</li>\n</ol>\n<p>This is production reliable approach. But it seems your workflow is different.</p>\n<p>On top of my head, the problem with your approach is as follows:</p>\n<ol>\n<li>Say if you intend to train the model for 1000 steps every day. And you are at 20000 now in total.</li>\n<li>During the training in day N, at step 200500 (so half of the steps planned for that day), if the job gets crashed or restarted, which happens, after restarting, your job will train another 1000 steps due to the incremental configuration, and now it is beyond your goal. This is the design for max_steps.</li>\n</ol>", "body_text": "I think this is a difference between the workflow you are using vs the the workflow this API is designed for.\nispir@ might provide more thoughts here.\nBut typically, the daily incremental training is achieved in the following way:\n\nTrain the model for day 1\nFor day 2, start a new model_dir, set the warning starting in Estimator constructor to continue from day 1 checkpoint and start the training from empty model_dir.\nFor day 3, a new model_dir and warn start he Estimator with day 2's ckpt.\n\nThis is production reliable approach. But it seems your workflow is different.\nOn top of my head, the problem with your approach is as follows:\n\nSay if you intend to train the model for 1000 steps every day. And you are at 20000 now in total.\nDuring the training in day N, at step 200500 (so half of the steps planned for that day), if the job gets crashed or restarted, which happens, after restarting, your job will train another 1000 steps due to the incremental configuration, and now it is beyond your goal. This is the design for max_steps.", "body": "I think this is a difference between the workflow you are using vs the the workflow this API is designed for. \r\n\r\nispir@ might provide more thoughts here. \r\n\r\nBut typically, the daily incremental training is achieved in the following way:\r\n1. Train the model for day 1\r\n2. For day 2, start a new model_dir, set the warning starting in Estimator constructor to continue from day 1 checkpoint and start the training from empty model_dir. \r\n3. For day 3, a new model_dir and warn start he Estimator with day 2's ckpt.\r\n\r\nThis is production reliable approach. But it seems your workflow is different. \r\n\r\nOn top of my head, the problem with your approach is as follows:\r\n1. Say if you intend to train the model for 1000 steps every day. And you are at 20000 now in total.\r\n2. During the training in day N, at step 200500 (so half of the steps planned for that day), if the job gets crashed or restarted, which happens, after restarting, your job will train another 1000 steps due to the incremental configuration, and now it is beyond your goal. This is the design for max_steps. "}