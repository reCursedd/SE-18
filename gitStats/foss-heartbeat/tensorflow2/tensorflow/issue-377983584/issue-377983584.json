{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23562", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23562/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23562/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23562/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/23562", "id": 377983584, "node_id": "MDU6SXNzdWUzNzc5ODM1ODQ=", "number": 23562, "title": "[xrt] Add \"Free all memory\" op", "user": {"login": "Keno", "id": 1291671, "node_id": "MDQ6VXNlcjEyOTE2NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1291671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Keno", "html_url": "https://github.com/Keno", "followers_url": "https://api.github.com/users/Keno/followers", "following_url": "https://api.github.com/users/Keno/following{/other_user}", "gists_url": "https://api.github.com/users/Keno/gists{/gist_id}", "starred_url": "https://api.github.com/users/Keno/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Keno/subscriptions", "organizations_url": "https://api.github.com/users/Keno/orgs", "repos_url": "https://api.github.com/users/Keno/repos", "events_url": "https://api.github.com/users/Keno/events{/privacy}", "received_events_url": "https://api.github.com/users/Keno/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097545817, "node_id": "MDU6TGFiZWwxMDk3NTQ1ODE3", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:apis", "name": "comp:apis", "color": "0052cc", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "open", "locked": false, "assignee": {"login": "michaelisard", "id": 5376757, "node_id": "MDQ6VXNlcjUzNzY3NTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/5376757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelisard", "html_url": "https://github.com/michaelisard", "followers_url": "https://api.github.com/users/michaelisard/followers", "following_url": "https://api.github.com/users/michaelisard/following{/other_user}", "gists_url": "https://api.github.com/users/michaelisard/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelisard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelisard/subscriptions", "organizations_url": "https://api.github.com/users/michaelisard/orgs", "repos_url": "https://api.github.com/users/michaelisard/repos", "events_url": "https://api.github.com/users/michaelisard/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelisard/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "michaelisard", "id": 5376757, "node_id": "MDQ6VXNlcjUzNzY3NTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/5376757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelisard", "html_url": "https://github.com/michaelisard", "followers_url": "https://api.github.com/users/michaelisard/followers", "following_url": "https://api.github.com/users/michaelisard/following{/other_user}", "gists_url": "https://api.github.com/users/michaelisard/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelisard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelisard/subscriptions", "organizations_url": "https://api.github.com/users/michaelisard/orgs", "repos_url": "https://api.github.com/users/michaelisard/repos", "events_url": "https://api.github.com/users/michaelisard/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelisard/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-11-06T18:46:34Z", "updated_at": "2018-11-19T11:06:55Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<p><strong>System information</strong></p>\n<ul>\n<li>TensorFlow version (you are using): nightly</li>\n<li>Are you willing to contribute it (Yes/No): N/A</li>\n</ul>\n<p><strong>Describe the feature and the current behavior/state.</strong><br>\nWhen a client loses track of xrt-managed state (e.g. because it errors before it could start tracking it) or because it crashes, or because other errors, the allocation stays around on the device side with no way to free it (other than a hard restart of the device). It would be useful to have an xrt op that drops all memory that xrt knows about (perhaps optionally with a preserve list, so the client can say \"I know about these, so don't free them\").</p>\n<p><strong>Will this change the current api? How?</strong><br>\nThis will likely be a new xrt op.</p>\n<p><strong>Who will benefit with this feature?</strong><br>\nUsers of the xrt API.</p>\n<p><strong>Any Other info.</strong><br>\n<a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5376757\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/michaelisard\">@michaelisard</a> requested to be assigned.</p>", "body_text": "System information\n\nTensorFlow version (you are using): nightly\nAre you willing to contribute it (Yes/No): N/A\n\nDescribe the feature and the current behavior/state.\nWhen a client loses track of xrt-managed state (e.g. because it errors before it could start tracking it) or because it crashes, or because other errors, the allocation stays around on the device side with no way to free it (other than a hard restart of the device). It would be useful to have an xrt op that drops all memory that xrt knows about (perhaps optionally with a preserve list, so the client can say \"I know about these, so don't free them\").\nWill this change the current api? How?\nThis will likely be a new xrt op.\nWho will benefit with this feature?\nUsers of the xrt API.\nAny Other info.\n@michaelisard requested to be assigned.", "body": "**System information**\r\n- TensorFlow version (you are using): nightly\r\n- Are you willing to contribute it (Yes/No): N/A\r\n\r\n**Describe the feature and the current behavior/state.**\r\nWhen a client loses track of xrt-managed state (e.g. because it errors before it could start tracking it) or because it crashes, or because other errors, the allocation stays around on the device side with no way to free it (other than a hard restart of the device). It would be useful to have an xrt op that drops all memory that xrt knows about (perhaps optionally with a preserve list, so the client can say \"I know about these, so don't free them\").\r\n\r\n**Will this change the current api? How?**\r\nThis will likely be a new xrt op.\r\n\r\n**Who will benefit with this feature?**\r\nUsers of the xrt API.\r\n\r\n**Any Other info.**\r\n@michaelisard requested to be assigned."}