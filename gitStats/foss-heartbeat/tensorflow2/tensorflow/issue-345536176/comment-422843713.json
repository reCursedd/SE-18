{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/422843713", "html_url": "https://github.com/tensorflow/tensorflow/pull/21222#issuecomment-422843713", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21222", "id": 422843713, "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjg0MzcxMw==", "user": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-19T15:18:30Z", "updated_at": "2018-09-19T15:18:30Z", "author_association": "CONTRIBUTOR", "body_html": "<div class=\"email-fragment\">No; you're right - zero_state can be called independently (i.e. before)\nbuild and this is a problem.\n\nIs there a way to have zero_state return a bunch of all-zero tensors and\nthen have call() incorporate the initial state?\n\nHere's a hacky way, maybe you can find another solution:\n\nbuild() creates the initial state vectors.  Add a \"time\" component to your\nNTM state.  zero_state returns an integer value of 0 for that.\n\nThen in call(), you do:\n\ncond(state.time == 0, &lt;initial state tensors&gt;, &lt;NTM calculation&gt;)\n\nwherever it's necessary\n\nincrement state.time in each call().</div>\n<span class=\"email-hidden-toggle\"><a href=\"#\">\u2026</a></span><div class=\"email-hidden-reply\">\n<div class=\"email-quoted-reply\">On Wed, Sep 19, 2018 at 8:15 AM, Mark Collier ***@***.***&gt; wrote:\n *<a class=\"user-mention\" href=\"https://github.com/MarkPKCollier\">@MarkPKCollier</a>* commented on this pull request.\n ------------------------------\n\n In tensorflow/contrib/rnn/python/ops/rnn_cell.py\n &lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"345536176\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/21222\" href=\"https://github.com/tensorflow/tensorflow/pull/21222#discussion_r218845664\">#21222 (comment)</a>&gt;\n :\n\n &gt; +      [t[:, self.memory_size - i - 1:self.memory_size * 2 - i - 1]\n +        for i in range(self.memory_size)],\n +      axis=1)\n +\n +    # eq (8)\n +    w_ = math_ops.reduce_sum(\n +      array_ops.expand_dims(w_g, axis=1) * s_matrix, axis=2)\n +    w_sharpen = math_ops.pow(w_, array_ops.expand_dims(gamma, axis=1))\n +\n +    # eq (9)\n +    w = w_sharpen / math_ops.reduce_sum(w_sharpen, axis=1, keepdims=True)\n +\n +    return w\n +\n +  def zero_state(self, batch_size, dtype):\n +    self._init_read_vectors = [self.add_variable(\n\n Yes, so I had tried that previously but get the following error about the\n variables not having been created when the zero_state method is called:\n\n Traceback (most recent call last):\n   File \"run_tasks.py\", line 145, in &lt;module&gt;\n     train_model = BuildTrainModel(train_max_seq_len, train_inputs, train_outputs)\n   File \"run_tasks.py\", line 119, in __init__\n     super(BuildTrainModel, self).__init__(max_seq_len, inputs, tf.contrib.learn.ModeKeys.TRAIN)\n   File \"run_tasks.py\", line 67, in __init__\n     self._build_model()\n   File \"run_tasks.py\", line 107, in _build_model\n     initial_state=initial_state if args.mann == 'none' else None)\n   File \"/Users/mcollier/anaconda2/lib/python2.7/site-packages/tensorflow/python/ops/rnn.py\", line 601, in dynamic_rnn\n     state = cell.zero_state(batch_size, dtype)\n   File \"/Users/mcollier/anaconda2/lib/python2.7/site-packages/tensorflow/contrib/rnn/python/ops/rnn_cell.py\", line 3305, in zero_state\n     for i in range(self.read_head_num)]\n AttributeError: 'NTMCell' object has no attribute '_init_read_vectors'\n\n Perhaps I am doing something wrong?\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n &lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"345536176\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/21222\" href=\"https://github.com/tensorflow/tensorflow/pull/21222#discussion_r218845664\">#21222 (comment)</a>&gt;,\n or mute the thread\n &lt;<a href=\"https://github.com/notifications/unsubscribe-auth/ABtim1McVSOLHfXwFpWrmKr5I9QCwkZcks5ucl-ZgaJpZM4Vlceb\">https://github.com/notifications/unsubscribe-auth/ABtim1McVSOLHfXwFpWrmKr5I9QCwkZcks5ucl-ZgaJpZM4Vlceb</a>&gt;\n .\n</div>\n<div class=\"email-fragment\"></div>\n</div>", "body_text": "No; you're right - zero_state can be called independently (i.e. before)\nbuild and this is a problem.\n\nIs there a way to have zero_state return a bunch of all-zero tensors and\nthen have call() incorporate the initial state?\n\nHere's a hacky way, maybe you can find another solution:\n\nbuild() creates the initial state vectors.  Add a \"time\" component to your\nNTM state.  zero_state returns an integer value of 0 for that.\n\nThen in call(), you do:\n\ncond(state.time == 0, <initial state tensors>, <NTM calculation>)\n\nwherever it's necessary\n\nincrement state.time in each call().\n\u2026\nOn Wed, Sep 19, 2018 at 8:15 AM, Mark Collier ***@***.***> wrote:\n *@MarkPKCollier* commented on this pull request.\n ------------------------------\n\n In tensorflow/contrib/rnn/python/ops/rnn_cell.py\n <#21222 (comment)>\n :\n\n > +      [t[:, self.memory_size - i - 1:self.memory_size * 2 - i - 1]\n +        for i in range(self.memory_size)],\n +      axis=1)\n +\n +    # eq (8)\n +    w_ = math_ops.reduce_sum(\n +      array_ops.expand_dims(w_g, axis=1) * s_matrix, axis=2)\n +    w_sharpen = math_ops.pow(w_, array_ops.expand_dims(gamma, axis=1))\n +\n +    # eq (9)\n +    w = w_sharpen / math_ops.reduce_sum(w_sharpen, axis=1, keepdims=True)\n +\n +    return w\n +\n +  def zero_state(self, batch_size, dtype):\n +    self._init_read_vectors = [self.add_variable(\n\n Yes, so I had tried that previously but get the following error about the\n variables not having been created when the zero_state method is called:\n\n Traceback (most recent call last):\n   File \"run_tasks.py\", line 145, in <module>\n     train_model = BuildTrainModel(train_max_seq_len, train_inputs, train_outputs)\n   File \"run_tasks.py\", line 119, in __init__\n     super(BuildTrainModel, self).__init__(max_seq_len, inputs, tf.contrib.learn.ModeKeys.TRAIN)\n   File \"run_tasks.py\", line 67, in __init__\n     self._build_model()\n   File \"run_tasks.py\", line 107, in _build_model\n     initial_state=initial_state if args.mann == 'none' else None)\n   File \"/Users/mcollier/anaconda2/lib/python2.7/site-packages/tensorflow/python/ops/rnn.py\", line 601, in dynamic_rnn\n     state = cell.zero_state(batch_size, dtype)\n   File \"/Users/mcollier/anaconda2/lib/python2.7/site-packages/tensorflow/contrib/rnn/python/ops/rnn_cell.py\", line 3305, in zero_state\n     for i in range(self.read_head_num)]\n AttributeError: 'NTMCell' object has no attribute '_init_read_vectors'\n\n Perhaps I am doing something wrong?\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#21222 (comment)>,\n or mute the thread\n <https://github.com/notifications/unsubscribe-auth/ABtim1McVSOLHfXwFpWrmKr5I9QCwkZcks5ucl-ZgaJpZM4Vlceb>\n .", "body": "No; you're right - zero_state can be called independently (i.e. before)\nbuild and this is a problem.\n\nIs there a way to have zero_state return a bunch of all-zero tensors and\nthen have call() incorporate the initial state?\n\nHere's a hacky way, maybe you can find another solution:\n\nbuild() creates the initial state vectors.  Add a \"time\" component to your\nNTM state.  zero_state returns an integer value of 0 for that.\n\nThen in call(), you do:\n\ncond(state.time == 0, <initial state tensors>, <NTM calculation>)\n\nwherever it's necessary\n\nincrement state.time in each call().\n\nOn Wed, Sep 19, 2018 at 8:15 AM, Mark Collier <notifications@github.com>\nwrote:\n\n> *@MarkPKCollier* commented on this pull request.\n> ------------------------------\n>\n> In tensorflow/contrib/rnn/python/ops/rnn_cell.py\n> <https://github.com/tensorflow/tensorflow/pull/21222#discussion_r218845664>\n> :\n>\n> > +      [t[:, self.memory_size - i - 1:self.memory_size * 2 - i - 1]\n> +        for i in range(self.memory_size)],\n> +      axis=1)\n> +\n> +    # eq (8)\n> +    w_ = math_ops.reduce_sum(\n> +      array_ops.expand_dims(w_g, axis=1) * s_matrix, axis=2)\n> +    w_sharpen = math_ops.pow(w_, array_ops.expand_dims(gamma, axis=1))\n> +\n> +    # eq (9)\n> +    w = w_sharpen / math_ops.reduce_sum(w_sharpen, axis=1, keepdims=True)\n> +\n> +    return w\n> +\n> +  def zero_state(self, batch_size, dtype):\n> +    self._init_read_vectors = [self.add_variable(\n>\n> Yes, so I had tried that previously but get the following error about the\n> variables not having been created when the zero_state method is called:\n>\n> Traceback (most recent call last):\n>   File \"run_tasks.py\", line 145, in <module>\n>     train_model = BuildTrainModel(train_max_seq_len, train_inputs, train_outputs)\n>   File \"run_tasks.py\", line 119, in __init__\n>     super(BuildTrainModel, self).__init__(max_seq_len, inputs, tf.contrib.learn.ModeKeys.TRAIN)\n>   File \"run_tasks.py\", line 67, in __init__\n>     self._build_model()\n>   File \"run_tasks.py\", line 107, in _build_model\n>     initial_state=initial_state if args.mann == 'none' else None)\n>   File \"/Users/mcollier/anaconda2/lib/python2.7/site-packages/tensorflow/python/ops/rnn.py\", line 601, in dynamic_rnn\n>     state = cell.zero_state(batch_size, dtype)\n>   File \"/Users/mcollier/anaconda2/lib/python2.7/site-packages/tensorflow/contrib/rnn/python/ops/rnn_cell.py\", line 3305, in zero_state\n>     for i in range(self.read_head_num)]\n> AttributeError: 'NTMCell' object has no attribute '_init_read_vectors'\n>\n> Perhaps I am doing something wrong?\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/tensorflow/pull/21222#discussion_r218845664>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABtim1McVSOLHfXwFpWrmKr5I9QCwkZcks5ucl-ZgaJpZM4Vlceb>\n> .\n>\n"}