{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/377445814", "html_url": "https://github.com/tensorflow/tensorflow/issues/17914#issuecomment-377445814", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17914", "id": 377445814, "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzQ0NTgxNA==", "user": {"login": "arassadin", "id": 3072128, "node_id": "MDQ6VXNlcjMwNzIxMjg=", "avatar_url": "https://avatars0.githubusercontent.com/u/3072128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arassadin", "html_url": "https://github.com/arassadin", "followers_url": "https://api.github.com/users/arassadin/followers", "following_url": "https://api.github.com/users/arassadin/following{/other_user}", "gists_url": "https://api.github.com/users/arassadin/gists{/gist_id}", "starred_url": "https://api.github.com/users/arassadin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arassadin/subscriptions", "organizations_url": "https://api.github.com/users/arassadin/orgs", "repos_url": "https://api.github.com/users/arassadin/repos", "events_url": "https://api.github.com/users/arassadin/events{/privacy}", "received_events_url": "https://api.github.com/users/arassadin/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-30T05:02:40Z", "updated_at": "2018-03-30T05:02:40Z", "author_association": "NONE", "body_html": "<p>Hi <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=31743510\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/aaroey\">@aaroey</a> , <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=10539540\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/samikama\">@samikama</a></p>\n<p>My <code>.tf_configure.bazelrc</code>:</p>\n<pre><code>build --action_env PYTHON_BIN_PATH=\"/usr/bin/python3\"\nbuild --action_env PYTHON_LIB_PATH=\"/usr/local/lib/python3.5/dist-packages\"\nbuild --force_python=py3\nbuild --host_force_python=py3\nbuild --python_path=\"/usr/bin/python3\"\nbuild --define with_jemalloc=true\nbuild:gcp --define with_gcp_support=false\nbuild:hdfs --define with_hdfs_support=false\nbuild:s3 --define with_s3_support=false\nbuild:kafka --define with_kafka_support=false\nbuild --define with_xla_support=true\nbuild:gdr --define with_gdr_support=false\nbuild:verbs --define with_verbs_support=false\nbuild --action_env TF_NEED_OPENCL_SYCL=\"0\"\nbuild --action_env TF_NEED_CUDA=\"1\"\nbuild --action_env CUDA_TOOLKIT_PATH=\"/usr/local/cuda\"\nbuild --action_env TF_CUDA_VERSION=\"9.0\"\nbuild --action_env CUDNN_INSTALL_PATH=\"/usr/local/lib\"\nbuild --action_env TF_CUDNN_VERSION=\"7\"\nbuild --action_env TENSORRT_INSTALL_PATH=\"/home/alexandr/distr/tensorrt/targets/x86_64-linux-gnu/lib\"\nbuild --action_env TF_TENSORRT_VERSION=\"4.0.4\"\nbuild --action_env TF_CUDA_COMPUTE_CAPABILITIES=\"6.1\"\nbuild --action_env LD_LIBRARY_PATH=\"/usr/local/lib:/usr/local/tensorrt/lib:/usr/local/cuda/lib64\"\nbuild --action_env TF_CUDA_CLANG=\"0\"\nbuild --action_env GCC_HOST_COMPILER_PATH=\"/usr/bin/gcc\"\nbuild --config=cuda\ntest --config=cuda\nbuild --define grpc_no_ares=true\nbuild:opt --copt=-march=native\nbuild:opt --host_copt=-march=native\nbuild:opt --define with_default_optimizations=true\nbuild --copt=-DGEMMLOWP_ALLOW_SLOW_SCALAR_FALLBACK\nbuild --host_copt=-DGEMMLOWP_ALLOW_SLOW_SCALAR_FALLBACK\n</code></pre>\n<p>and it still failes on <code>v1.7.0</code> with the same error (<code>/usr/local/tensorrt/lib</code> is a link to <code>/home/alexandr/distr/tensorrt/targets/x86_64-linux-gnu/lib</code>).</p>\n<p>I tried <code>bazel build LD_LIBRARY_PATH=\"/usr/local/lib:/usr/local/tensorrt/lib:/usr/local/cuda/lib64\" -s //tensorflow/contrib/tensorrt:gen_trt_engine_op_py_wrappers_cc</code> but result is the same.</p>\n<p>I not really understand</p>\n<blockquote>\n<p>Another point, notice that cudnn is not added to the linker command line. Check whether it is in linker scipt. if not you are missing a dependency in your repositories.</p>\n</blockquote>\n<p>It in all standart (system-wide) linker paths</p>\n<pre><code>sudo find /usr/ -name libcudnn.so*\n/usr/lib/libcudnn.so\n/usr/lib/x86_64-linux-gnu/libcudnn.so\n/usr/lib/x86_64-linux-gnu/libcudnn.so.7\n/usr/lib/x86_64-linux-gnu/libcudnn.so.7.0.5\n/usr/lib/libcudnn.so.7\n/usr/lib/libcudnn.so.7.0.5\n/usr/local/lib/libcudnn.so\n/usr/local/lib/libcudnn.so.7\n/usr/local/lib/libcudnn.so.7.0.5\n</code></pre>\n<p>and in TensorRT <code>lib</code> dir. I can compile anything with <code>-lcudnn</code> flag and exec it. Can you elaborate more on this?..</p>", "body_text": "Hi @aaroey , @samikama\nMy .tf_configure.bazelrc:\nbuild --action_env PYTHON_BIN_PATH=\"/usr/bin/python3\"\nbuild --action_env PYTHON_LIB_PATH=\"/usr/local/lib/python3.5/dist-packages\"\nbuild --force_python=py3\nbuild --host_force_python=py3\nbuild --python_path=\"/usr/bin/python3\"\nbuild --define with_jemalloc=true\nbuild:gcp --define with_gcp_support=false\nbuild:hdfs --define with_hdfs_support=false\nbuild:s3 --define with_s3_support=false\nbuild:kafka --define with_kafka_support=false\nbuild --define with_xla_support=true\nbuild:gdr --define with_gdr_support=false\nbuild:verbs --define with_verbs_support=false\nbuild --action_env TF_NEED_OPENCL_SYCL=\"0\"\nbuild --action_env TF_NEED_CUDA=\"1\"\nbuild --action_env CUDA_TOOLKIT_PATH=\"/usr/local/cuda\"\nbuild --action_env TF_CUDA_VERSION=\"9.0\"\nbuild --action_env CUDNN_INSTALL_PATH=\"/usr/local/lib\"\nbuild --action_env TF_CUDNN_VERSION=\"7\"\nbuild --action_env TENSORRT_INSTALL_PATH=\"/home/alexandr/distr/tensorrt/targets/x86_64-linux-gnu/lib\"\nbuild --action_env TF_TENSORRT_VERSION=\"4.0.4\"\nbuild --action_env TF_CUDA_COMPUTE_CAPABILITIES=\"6.1\"\nbuild --action_env LD_LIBRARY_PATH=\"/usr/local/lib:/usr/local/tensorrt/lib:/usr/local/cuda/lib64\"\nbuild --action_env TF_CUDA_CLANG=\"0\"\nbuild --action_env GCC_HOST_COMPILER_PATH=\"/usr/bin/gcc\"\nbuild --config=cuda\ntest --config=cuda\nbuild --define grpc_no_ares=true\nbuild:opt --copt=-march=native\nbuild:opt --host_copt=-march=native\nbuild:opt --define with_default_optimizations=true\nbuild --copt=-DGEMMLOWP_ALLOW_SLOW_SCALAR_FALLBACK\nbuild --host_copt=-DGEMMLOWP_ALLOW_SLOW_SCALAR_FALLBACK\n\nand it still failes on v1.7.0 with the same error (/usr/local/tensorrt/lib is a link to /home/alexandr/distr/tensorrt/targets/x86_64-linux-gnu/lib).\nI tried bazel build LD_LIBRARY_PATH=\"/usr/local/lib:/usr/local/tensorrt/lib:/usr/local/cuda/lib64\" -s //tensorflow/contrib/tensorrt:gen_trt_engine_op_py_wrappers_cc but result is the same.\nI not really understand\n\nAnother point, notice that cudnn is not added to the linker command line. Check whether it is in linker scipt. if not you are missing a dependency in your repositories.\n\nIt in all standart (system-wide) linker paths\nsudo find /usr/ -name libcudnn.so*\n/usr/lib/libcudnn.so\n/usr/lib/x86_64-linux-gnu/libcudnn.so\n/usr/lib/x86_64-linux-gnu/libcudnn.so.7\n/usr/lib/x86_64-linux-gnu/libcudnn.so.7.0.5\n/usr/lib/libcudnn.so.7\n/usr/lib/libcudnn.so.7.0.5\n/usr/local/lib/libcudnn.so\n/usr/local/lib/libcudnn.so.7\n/usr/local/lib/libcudnn.so.7.0.5\n\nand in TensorRT lib dir. I can compile anything with -lcudnn flag and exec it. Can you elaborate more on this?..", "body": "Hi @aaroey , @samikama \r\n\r\nMy `.tf_configure.bazelrc`:\r\n```\r\nbuild --action_env PYTHON_BIN_PATH=\"/usr/bin/python3\"\r\nbuild --action_env PYTHON_LIB_PATH=\"/usr/local/lib/python3.5/dist-packages\"\r\nbuild --force_python=py3\r\nbuild --host_force_python=py3\r\nbuild --python_path=\"/usr/bin/python3\"\r\nbuild --define with_jemalloc=true\r\nbuild:gcp --define with_gcp_support=false\r\nbuild:hdfs --define with_hdfs_support=false\r\nbuild:s3 --define with_s3_support=false\r\nbuild:kafka --define with_kafka_support=false\r\nbuild --define with_xla_support=true\r\nbuild:gdr --define with_gdr_support=false\r\nbuild:verbs --define with_verbs_support=false\r\nbuild --action_env TF_NEED_OPENCL_SYCL=\"0\"\r\nbuild --action_env TF_NEED_CUDA=\"1\"\r\nbuild --action_env CUDA_TOOLKIT_PATH=\"/usr/local/cuda\"\r\nbuild --action_env TF_CUDA_VERSION=\"9.0\"\r\nbuild --action_env CUDNN_INSTALL_PATH=\"/usr/local/lib\"\r\nbuild --action_env TF_CUDNN_VERSION=\"7\"\r\nbuild --action_env TENSORRT_INSTALL_PATH=\"/home/alexandr/distr/tensorrt/targets/x86_64-linux-gnu/lib\"\r\nbuild --action_env TF_TENSORRT_VERSION=\"4.0.4\"\r\nbuild --action_env TF_CUDA_COMPUTE_CAPABILITIES=\"6.1\"\r\nbuild --action_env LD_LIBRARY_PATH=\"/usr/local/lib:/usr/local/tensorrt/lib:/usr/local/cuda/lib64\"\r\nbuild --action_env TF_CUDA_CLANG=\"0\"\r\nbuild --action_env GCC_HOST_COMPILER_PATH=\"/usr/bin/gcc\"\r\nbuild --config=cuda\r\ntest --config=cuda\r\nbuild --define grpc_no_ares=true\r\nbuild:opt --copt=-march=native\r\nbuild:opt --host_copt=-march=native\r\nbuild:opt --define with_default_optimizations=true\r\nbuild --copt=-DGEMMLOWP_ALLOW_SLOW_SCALAR_FALLBACK\r\nbuild --host_copt=-DGEMMLOWP_ALLOW_SLOW_SCALAR_FALLBACK\r\n```\r\nand it still failes on `v1.7.0` with the same error (`/usr/local/tensorrt/lib` is a link to `/home/alexandr/distr/tensorrt/targets/x86_64-linux-gnu/lib`).\r\n\r\nI tried `bazel build LD_LIBRARY_PATH=\"/usr/local/lib:/usr/local/tensorrt/lib:/usr/local/cuda/lib64\" -s //tensorflow/contrib/tensorrt:gen_trt_engine_op_py_wrappers_cc` but result is the same.\r\n\r\nI not really understand\r\n> Another point, notice that cudnn is not added to the linker command line. Check whether it is in linker scipt. if not you are missing a dependency in your repositories.\r\n\r\nIt in all standart (system-wide) linker paths\r\n```\r\nsudo find /usr/ -name libcudnn.so*\r\n/usr/lib/libcudnn.so\r\n/usr/lib/x86_64-linux-gnu/libcudnn.so\r\n/usr/lib/x86_64-linux-gnu/libcudnn.so.7\r\n/usr/lib/x86_64-linux-gnu/libcudnn.so.7.0.5\r\n/usr/lib/libcudnn.so.7\r\n/usr/lib/libcudnn.so.7.0.5\r\n/usr/local/lib/libcudnn.so\r\n/usr/local/lib/libcudnn.so.7\r\n/usr/local/lib/libcudnn.so.7.0.5\r\n```\r\nand in TensorRT `lib` dir. I can compile anything with `-lcudnn` flag and exec it. Can you elaborate more on this?.."}