{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20426", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20426/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20426/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20426/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20426", "id": 337110992, "node_id": "MDU6SXNzdWUzMzcxMTA5OTI=", "number": 20426, "title": "`tf.keras.layers` does not work probably when using `variable_scope` in `tf.keras.Model`", "user": {"login": "datlife", "id": 13214917, "node_id": "MDQ6VXNlcjEzMjE0OTE3", "avatar_url": "https://avatars0.githubusercontent.com/u/13214917?v=4", "gravatar_id": "", "url": "https://api.github.com/users/datlife", "html_url": "https://github.com/datlife", "followers_url": "https://api.github.com/users/datlife/followers", "following_url": "https://api.github.com/users/datlife/following{/other_user}", "gists_url": "https://api.github.com/users/datlife/gists{/gist_id}", "starred_url": "https://api.github.com/users/datlife/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/datlife/subscriptions", "organizations_url": "https://api.github.com/users/datlife/orgs", "repos_url": "https://api.github.com/users/datlife/repos", "events_url": "https://api.github.com/users/datlife/events{/privacy}", "received_events_url": "https://api.github.com/users/datlife/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "robieta", "id": 13089297, "node_id": "MDQ6VXNlcjEzMDg5Mjk3", "avatar_url": "https://avatars0.githubusercontent.com/u/13089297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robieta", "html_url": "https://github.com/robieta", "followers_url": "https://api.github.com/users/robieta/followers", "following_url": "https://api.github.com/users/robieta/following{/other_user}", "gists_url": "https://api.github.com/users/robieta/gists{/gist_id}", "starred_url": "https://api.github.com/users/robieta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robieta/subscriptions", "organizations_url": "https://api.github.com/users/robieta/orgs", "repos_url": "https://api.github.com/users/robieta/repos", "events_url": "https://api.github.com/users/robieta/events{/privacy}", "received_events_url": "https://api.github.com/users/robieta/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "robieta", "id": 13089297, "node_id": "MDQ6VXNlcjEzMDg5Mjk3", "avatar_url": "https://avatars0.githubusercontent.com/u/13089297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robieta", "html_url": "https://github.com/robieta", "followers_url": "https://api.github.com/users/robieta/followers", "following_url": "https://api.github.com/users/robieta/following{/other_user}", "gists_url": "https://api.github.com/users/robieta/gists{/gist_id}", "starred_url": "https://api.github.com/users/robieta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robieta/subscriptions", "organizations_url": "https://api.github.com/users/robieta/orgs", "repos_url": "https://api.github.com/users/robieta/repos", "events_url": "https://api.github.com/users/robieta/events{/privacy}", "received_events_url": "https://api.github.com/users/robieta/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 13, "created_at": "2018-06-29T19:25:23Z", "updated_at": "2018-07-09T21:24:46Z", "closed_at": "2018-07-09T21:24:46Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: NO</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:  pip install</li>\n<li><strong>TensorFlow version (use command below)</strong>: v1.9.0-rc0-35-g17d6639b55 1.9.0-rc1</li>\n<li><strong>Python version</strong>:  3.6</li>\n<li><strong>CUDA/cuDNN version</strong>:  CUDA 9.0 / cuDNN 7</li>\n<li><strong>GPU model and memory</strong>: GTX 1080</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">conv_block</span>(<span class=\"pl-smi\">inputs</span>, <span class=\"pl-smi\">filters</span>, <span class=\"pl-smi\">kernel_size</span>, <span class=\"pl-smi\">strides</span>, <span class=\"pl-smi\">scope</span>):\n  <span class=\"pl-s\"><span class=\"pl-pds\">'''</span>Create a simple Conv --&gt; BN --&gt; ReLU6 block<span class=\"pl-pds\">'''</span></span>\n\n  <span class=\"pl-k\">with</span> tf.variable_scope(scope):\n    x <span class=\"pl-k\">=</span> tf.keras.layers.Conv2D(filters, kernel_size, strides, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>conv2d<span class=\"pl-pds\">'</span></span>)(inputs)\n    x <span class=\"pl-k\">=</span> tf.keras.layers.BatchNormalization(<span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>BN<span class=\"pl-pds\">'</span></span>)(x)\n    x <span class=\"pl-k\">=</span> tf.keras.layers.Activation(tf.nn.relu6)(x)\n    <span class=\"pl-k\">return</span> x\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">reproduce_keras_variable_scope_error</span>():\n\n  <span class=\"pl-c\"><span class=\"pl-c\">#</span> Construct a simple model</span>\n  inputs <span class=\"pl-k\">=</span> tf.keras.Input(<span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">224</span>, <span class=\"pl-c1\">224</span>, <span class=\"pl-c1\">3</span>], <span class=\"pl-v\">batch_size</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>inputs<span class=\"pl-pds\">'</span></span>)\n  hidden <span class=\"pl-k\">=</span> conv_block(inputs, <span class=\"pl-c1\">32</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-v\">scope</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>block_1<span class=\"pl-pds\">'</span></span>)\n  outputs <span class=\"pl-k\">=</span> conv_block(hidden, <span class=\"pl-c1\">64</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-v\">scope</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>block_2<span class=\"pl-pds\">'</span></span>)\n  \n  <span class=\"pl-c\"><span class=\"pl-c\">#</span> This is fine, the tensor scopes are matched as expected</span>\n  <span class=\"pl-k\">for</span> v <span class=\"pl-k\">in</span> tf.trainable_variables():\n    <span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span><span class=\"pl-c1\">{<span class=\"pl-k\">:20</span>}</span> <span class=\"pl-c1\">{}</span><span class=\"pl-pds\">'</span></span>.format(v.name, v.shape))\n\n  <span class=\"pl-c\"><span class=\"pl-c\">#</span> Problem happens here. Please consult the error output below.</span>\n  model <span class=\"pl-k\">=</span> tf.keras.Model(inputs, outputs)\n  model.summary()\n\n<span class=\"pl-k\">if</span> <span class=\"pl-c1\">__name__</span> <span class=\"pl-k\">==</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>__main__<span class=\"pl-pds\">'</span></span>:\n  reproduce_keras_variable_scope_error()</pre></div>\n<h3>Describe the problem</h3>\n<p>The problem is Keras layers do not probably name its variables according the <code>variable_scope</code> . Therefore, I cannot call <code>conv_block</code> multiple times.</p>\n<ul>\n<li>This problem occurs when calling <code>tf.layers</code> as well.</li>\n<li>I would like to use <code>tf.keras.Model</code> because I might convert to <code>Estimator</code> later.</li>\n</ul>\n<h3>Source code / logs</h3>\n<div class=\"highlight highlight-source-shell\"><pre>block_1/conv2d/kernel:0 (3, 3, 3, 32)\nblock_1/conv2d/bias:0 (32,)\nblock_1/BN/gamma:0   (32,)\nblock_1/BN/beta:0    (32,)\nblock_2/conv2d/kernel:0 (3, 3, 32, 64)\nblock_2/conv2d/bias:0 (64,)\nblock_2/BN/gamma:0   (64,)\nblock_2/BN/beta:0    (64,)\nTraceback (most recent call last):\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>tf_keras_layer.py<span class=\"pl-pds\">\"</span></span>, line 24, <span class=\"pl-k\">in</span> <span class=\"pl-k\">&lt;</span>module<span class=\"pl-k\">&gt;</span>\n    <span class=\"pl-en\">reproduce_variable_scope_error</span>()\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>tf_keras_layer.py<span class=\"pl-pds\">\"</span></span>, line 20, <span class=\"pl-k\">in</span> reproduce_variable_scope_error\n    model = tf.keras.Model(inputs, outputs)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/home/dat/miniconda2/envs/portrait/lib/python3.6/site-packages/tensorflow/python/keras/engine/training.py<span class=\"pl-pds\">\"</span></span>, line 112, <span class=\"pl-k\">in</span> __init__\n    super(Model, self).__init__(<span class=\"pl-k\">*</span>args, <span class=\"pl-k\">**</span>kwargs)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/home/dat/miniconda2/envs/portrait/lib/python3.6/site-packages/tensorflow/python/keras/engine/network.py<span class=\"pl-pds\">\"</span></span>, line 78, <span class=\"pl-k\">in</span> __init__\n    self._init_graph_network(<span class=\"pl-k\">*</span>args, <span class=\"pl-k\">**</span>kwargs)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/home/dat/miniconda2/envs/portrait/lib/python3.6/site-packages/tensorflow/python/keras/engine/network.py<span class=\"pl-pds\">\"</span></span>, line 244, <span class=\"pl-k\">in</span> _init_graph_network\n    self.inputs, self.outputs)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/home/dat/miniconda2/envs/portrait/lib/python3.6/site-packages/tensorflow/python/keras/engine/network.py<span class=\"pl-pds\">\"</span></span>, line 1689, <span class=\"pl-k\">in</span> _map_graph_network\n    str(all_names.count(name)) + <span class=\"pl-s\"><span class=\"pl-pds\">'</span> times in the model. <span class=\"pl-pds\">'</span></span>\nValueError: The name <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>conv2d<span class=\"pl-pds\">\"</span></span> is used 2 <span class=\"pl-c1\">times</span> <span class=\"pl-k\">in</span> the model. All layer names should be unique.</pre></div>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): NO\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 16.04\nTensorFlow installed from (source or binary):  pip install\nTensorFlow version (use command below): v1.9.0-rc0-35-g17d6639b55 1.9.0-rc1\nPython version:  3.6\nCUDA/cuDNN version:  CUDA 9.0 / cuDNN 7\nGPU model and memory: GTX 1080\nExact command to reproduce:\n\nimport tensorflow as tf\n\ndef conv_block(inputs, filters, kernel_size, strides, scope):\n  '''Create a simple Conv --> BN --> ReLU6 block'''\n\n  with tf.variable_scope(scope):\n    x = tf.keras.layers.Conv2D(filters, kernel_size, strides, name='conv2d')(inputs)\n    x = tf.keras.layers.BatchNormalization(name='BN')(x)\n    x = tf.keras.layers.Activation(tf.nn.relu6)(x)\n    return x\n\ndef reproduce_keras_variable_scope_error():\n\n  # Construct a simple model\n  inputs = tf.keras.Input(shape=[224, 224, 3], batch_size=1, name='inputs')\n  hidden = conv_block(inputs, 32, 3, 2, scope='block_1')\n  outputs = conv_block(hidden, 64, 3, 2, scope='block_2')\n  \n  # This is fine, the tensor scopes are matched as expected\n  for v in tf.trainable_variables():\n    print('{:20} {}'.format(v.name, v.shape))\n\n  # Problem happens here. Please consult the error output below.\n  model = tf.keras.Model(inputs, outputs)\n  model.summary()\n\nif __name__ =='__main__':\n  reproduce_keras_variable_scope_error()\nDescribe the problem\nThe problem is Keras layers do not probably name its variables according the variable_scope . Therefore, I cannot call conv_block multiple times.\n\nThis problem occurs when calling tf.layers as well.\nI would like to use tf.keras.Model because I might convert to Estimator later.\n\nSource code / logs\nblock_1/conv2d/kernel:0 (3, 3, 3, 32)\nblock_1/conv2d/bias:0 (32,)\nblock_1/BN/gamma:0   (32,)\nblock_1/BN/beta:0    (32,)\nblock_2/conv2d/kernel:0 (3, 3, 32, 64)\nblock_2/conv2d/bias:0 (64,)\nblock_2/BN/gamma:0   (64,)\nblock_2/BN/beta:0    (64,)\nTraceback (most recent call last):\n  File \"tf_keras_layer.py\", line 24, in <module>\n    reproduce_variable_scope_error()\n  File \"tf_keras_layer.py\", line 20, in reproduce_variable_scope_error\n    model = tf.keras.Model(inputs, outputs)\n  File \"/home/dat/miniconda2/envs/portrait/lib/python3.6/site-packages/tensorflow/python/keras/engine/training.py\", line 112, in __init__\n    super(Model, self).__init__(*args, **kwargs)\n  File \"/home/dat/miniconda2/envs/portrait/lib/python3.6/site-packages/tensorflow/python/keras/engine/network.py\", line 78, in __init__\n    self._init_graph_network(*args, **kwargs)\n  File \"/home/dat/miniconda2/envs/portrait/lib/python3.6/site-packages/tensorflow/python/keras/engine/network.py\", line 244, in _init_graph_network\n    self.inputs, self.outputs)\n  File \"/home/dat/miniconda2/envs/portrait/lib/python3.6/site-packages/tensorflow/python/keras/engine/network.py\", line 1689, in _map_graph_network\n    str(all_names.count(name)) + ' times in the model. '\nValueError: The name \"conv2d\" is used 2 times in the model. All layer names should be unique.", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: NO\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**:  pip install\r\n- **TensorFlow version (use command below)**: v1.9.0-rc0-35-g17d6639b55 1.9.0-rc1\r\n- **Python version**:  3.6\r\n- **CUDA/cuDNN version**:  CUDA 9.0 / cuDNN 7\r\n- **GPU model and memory**: GTX 1080\r\n- **Exact command to reproduce**:\r\n```python\r\nimport tensorflow as tf\r\n\r\ndef conv_block(inputs, filters, kernel_size, strides, scope):\r\n  '''Create a simple Conv --> BN --> ReLU6 block'''\r\n\r\n  with tf.variable_scope(scope):\r\n    x = tf.keras.layers.Conv2D(filters, kernel_size, strides, name='conv2d')(inputs)\r\n    x = tf.keras.layers.BatchNormalization(name='BN')(x)\r\n    x = tf.keras.layers.Activation(tf.nn.relu6)(x)\r\n    return x\r\n\r\ndef reproduce_keras_variable_scope_error():\r\n\r\n  # Construct a simple model\r\n  inputs = tf.keras.Input(shape=[224, 224, 3], batch_size=1, name='inputs')\r\n  hidden = conv_block(inputs, 32, 3, 2, scope='block_1')\r\n  outputs = conv_block(hidden, 64, 3, 2, scope='block_2')\r\n  \r\n  # This is fine, the tensor scopes are matched as expected\r\n  for v in tf.trainable_variables():\r\n    print('{:20} {}'.format(v.name, v.shape))\r\n\r\n  # Problem happens here. Please consult the error output below.\r\n  model = tf.keras.Model(inputs, outputs)\r\n  model.summary()\r\n\r\nif __name__ =='__main__':\r\n  reproduce_keras_variable_scope_error()\r\n```\r\n### Describe the problem\r\n\r\nThe problem is Keras layers do not probably name its variables according the `variable_scope` . Therefore, I cannot call `conv_block` multiple times. \r\n  * This problem occurs when calling `tf.layers` as well.\r\n  * I would like to use `tf.keras.Model` because I might convert to `Estimator` later.\r\n\r\n### Source code / logs\r\n```shell\r\nblock_1/conv2d/kernel:0 (3, 3, 3, 32)\r\nblock_1/conv2d/bias:0 (32,)\r\nblock_1/BN/gamma:0   (32,)\r\nblock_1/BN/beta:0    (32,)\r\nblock_2/conv2d/kernel:0 (3, 3, 32, 64)\r\nblock_2/conv2d/bias:0 (64,)\r\nblock_2/BN/gamma:0   (64,)\r\nblock_2/BN/beta:0    (64,)\r\nTraceback (most recent call last):\r\n  File \"tf_keras_layer.py\", line 24, in <module>\r\n    reproduce_variable_scope_error()\r\n  File \"tf_keras_layer.py\", line 20, in reproduce_variable_scope_error\r\n    model = tf.keras.Model(inputs, outputs)\r\n  File \"/home/dat/miniconda2/envs/portrait/lib/python3.6/site-packages/tensorflow/python/keras/engine/training.py\", line 112, in __init__\r\n    super(Model, self).__init__(*args, **kwargs)\r\n  File \"/home/dat/miniconda2/envs/portrait/lib/python3.6/site-packages/tensorflow/python/keras/engine/network.py\", line 78, in __init__\r\n    self._init_graph_network(*args, **kwargs)\r\n  File \"/home/dat/miniconda2/envs/portrait/lib/python3.6/site-packages/tensorflow/python/keras/engine/network.py\", line 244, in _init_graph_network\r\n    self.inputs, self.outputs)\r\n  File \"/home/dat/miniconda2/envs/portrait/lib/python3.6/site-packages/tensorflow/python/keras/engine/network.py\", line 1689, in _map_graph_network\r\n    str(all_names.count(name)) + ' times in the model. '\r\nValueError: The name \"conv2d\" is used 2 times in the model. All layer names should be unique.\r\n```"}