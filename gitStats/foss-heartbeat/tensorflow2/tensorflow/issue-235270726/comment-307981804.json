{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/307981804", "html_url": "https://github.com/tensorflow/tensorflow/issues/10652#issuecomment-307981804", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10652", "id": 307981804, "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzk4MTgwNA==", "user": {"login": "lukaszkaiser", "id": 684901, "node_id": "MDQ6VXNlcjY4NDkwMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/684901?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukaszkaiser", "html_url": "https://github.com/lukaszkaiser", "followers_url": "https://api.github.com/users/lukaszkaiser/followers", "following_url": "https://api.github.com/users/lukaszkaiser/following{/other_user}", "gists_url": "https://api.github.com/users/lukaszkaiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukaszkaiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukaszkaiser/subscriptions", "organizations_url": "https://api.github.com/users/lukaszkaiser/orgs", "repos_url": "https://api.github.com/users/lukaszkaiser/repos", "events_url": "https://api.github.com/users/lukaszkaiser/events{/privacy}", "received_events_url": "https://api.github.com/users/lukaszkaiser/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-13T01:41:03Z", "updated_at": "2017-06-13T01:41:03Z", "author_association": "MEMBER", "body_html": "<p>You are absolutely right: in 1.0.1 there was a bug that allowed \"False\" to override inheritance in a variable scope. We consider this a bug because variable scopes are meant to be nested inside functions and libraries. Imagine you're calling a sub-model defined in a library and you want to reuse all of it. If that model ever called \"False\" like in 1.0.1, you'd get a very wrong behavior that'd be potentially impossible to correct without changing the library. In 1.0.1, to get the correct behavior, you had to use \"None\" instead of \"False\" -- in fact we documented that you should always use only those two, but \"False\" worked like above. In 1.1.0 we changed this to avoid problems like the one above. But if you have a clear use-case for this, let us know!</p>", "body_text": "You are absolutely right: in 1.0.1 there was a bug that allowed \"False\" to override inheritance in a variable scope. We consider this a bug because variable scopes are meant to be nested inside functions and libraries. Imagine you're calling a sub-model defined in a library and you want to reuse all of it. If that model ever called \"False\" like in 1.0.1, you'd get a very wrong behavior that'd be potentially impossible to correct without changing the library. In 1.0.1, to get the correct behavior, you had to use \"None\" instead of \"False\" -- in fact we documented that you should always use only those two, but \"False\" worked like above. In 1.1.0 we changed this to avoid problems like the one above. But if you have a clear use-case for this, let us know!", "body": "You are absolutely right: in 1.0.1 there was a bug that allowed \"False\" to override inheritance in a variable scope. We consider this a bug because variable scopes are meant to be nested inside functions and libraries. Imagine you're calling a sub-model defined in a library and you want to reuse all of it. If that model ever called \"False\" like in 1.0.1, you'd get a very wrong behavior that'd be potentially impossible to correct without changing the library. In 1.0.1, to get the correct behavior, you had to use \"None\" instead of \"False\" -- in fact we documented that you should always use only those two, but \"False\" worked like above. In 1.1.0 we changed this to avoid problems like the one above. But if you have a clear use-case for this, let us know!"}