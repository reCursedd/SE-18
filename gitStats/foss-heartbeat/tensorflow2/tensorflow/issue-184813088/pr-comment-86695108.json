{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/86695108", "pull_request_review_id": 7340279, "id": 86695108, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2Njk1MTA4", "diff_hunk": "@@ -340,3 +341,45 @@ def __call__(self, shape, dtype=dtypes.float32, partition_info=None):\n     \"\"\"Generate a tensor used to initialize a variable.\"\"\"\n     return random_ops._random_walk(shape, self._nonlinearity, dtype,\n                                    seed=self._seed)\n+\n+\n+def orthogonal_initializer(gain=1.0, dtype=dtypes.float32, seed=None):\n+  \"\"\"Returns an initializer that generates an orthogonal rotation matrix.\n+\n+  Initialize a tensor using an orthogonal matrix.\n+\n+  Args:\n+    gain: multiplicative factor to apply to the orthogonal matrix\n+    dtype: The type of the output.\n+    seed: A Python integer. Used to create random seeds. See\n+      [`set_random_seed`](../../api_docs/python/constant_op.md#set_random_seed)\n+      for behavior.\n+\n+  Returns:\n+    An initializer that generates orthogonal tensors\n+\n+  Raises:\n+    ValueError: if `dtype` is not a floating point type.\n+  \"\"\"\n+  def _initializer(shape, dtype=_assert_float_dtype(dtype), partition_info=None):\n+    # Flatten the input shape with the last dimension remaining its original shape so it works for conv2d\n+    num_rows = 1\n+    for dim in shape[:-1]:\n+      num_rows *= dim\n+    num_cols = shape[-1]\n+    flat_shape = (num_rows, num_cols)\n+\n+    if gain == 'relu':\n+      _gain = math.sqrt(2)\n+    else:\n+      _gain = gain\n+\n+    # Generate a random matrix\n+    a = random_ops.random_normal(flat_shape, dtype=dtype, seed=seed)\n+    # Compute the svd\n+    _, u, v = linalg_ops.svd(a, full_matrices=False)\n+    # Pick the right singular value decomposition\n+    q = u if num_cols < num_rows else v\n+    return _gain * array_ops.reshape(q, shape)", "path": "tensorflow/python/ops/init_ops.py", "position": null, "original_position": 51, "commit_id": "1cb31e3ea41334e3718bad0f33a92dd5030ca229", "original_commit_id": "b0d3dea6bc5d141c67c976f3cc04115e1b7446d2", "user": {"login": "tillahoffmann", "id": 966348, "node_id": "MDQ6VXNlcjk2NjM0OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/966348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tillahoffmann", "html_url": "https://github.com/tillahoffmann", "followers_url": "https://api.github.com/users/tillahoffmann/followers", "following_url": "https://api.github.com/users/tillahoffmann/following{/other_user}", "gists_url": "https://api.github.com/users/tillahoffmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/tillahoffmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tillahoffmann/subscriptions", "organizations_url": "https://api.github.com/users/tillahoffmann/orgs", "repos_url": "https://api.github.com/users/tillahoffmann/repos", "events_url": "https://api.github.com/users/tillahoffmann/events{/privacy}", "received_events_url": "https://api.github.com/users/tillahoffmann/received_events", "type": "User", "site_admin": false}, "body": "[`svd`](https://www.tensorflow.org/versions/r0.11/api_docs/python/math_ops.html#svd), given a matrix of shape `[..., M, N]`, returns `u` of shape `[..., M, P]` and `v` of shape `[..., N, P]`, where `P` is the minimum of `M` and `N` (assuming `full_matrices=False`). So I still need to roll axes here to get things right.\n\nAs an aside, is it intentional, to have the return value of `svd` in tensorflow be different from the return value of `np.svd`?\n", "created_at": "2016-11-06T20:17:00Z", "updated_at": "2016-11-14T18:50:06Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/5164#discussion_r86695108", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/5164", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/86695108"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/5164#discussion_r86695108"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/5164"}}, "body_html": "<p><a href=\"https://www.tensorflow.org/versions/r0.11/api_docs/python/math_ops.html#svd\" rel=\"nofollow\"><code>svd</code></a>, given a matrix of shape <code>[..., M, N]</code>, returns <code>u</code> of shape <code>[..., M, P]</code> and <code>v</code> of shape <code>[..., N, P]</code>, where <code>P</code> is the minimum of <code>M</code> and <code>N</code> (assuming <code>full_matrices=False</code>). So I still need to roll axes here to get things right.</p>\n<p>As an aside, is it intentional, to have the return value of <code>svd</code> in tensorflow be different from the return value of <code>np.svd</code>?</p>", "body_text": "svd, given a matrix of shape [..., M, N], returns u of shape [..., M, P] and v of shape [..., N, P], where P is the minimum of M and N (assuming full_matrices=False). So I still need to roll axes here to get things right.\nAs an aside, is it intentional, to have the return value of svd in tensorflow be different from the return value of np.svd?", "in_reply_to_id": 86026183}