{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/86415851", "pull_request_review_id": 7076921, "id": 86415851, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2NDE1ODUx", "diff_hunk": "@@ -444,5 +444,47 @@ def testDevice(self):\n     self.assertDeviceEqual(\"/job:ps\", var.initializer.device)\n \n \n+class OrthogonalInitializerTest(tf.test.TestCase):\n+\n+  def testInitializerIdentical(self):\n+    for dtype in [tf.float32, tf.float64]:\n+      init1 = tf.orthogonal_initializer(seed=1, dtype=dtype)\n+      init2 = tf.orthogonal_initializer(seed=1, dtype=dtype)\n+      self.assertTrue(identicaltest(self, init1, init2))\n+\n+  def testInitializerDifferent(self):\n+    for dtype in [tf.float32, tf.float64]:\n+      init1 = tf.orthogonal_initializer(seed=1, dtype=dtype)\n+      init2 = tf.orthogonal_initializer(seed=2, dtype=dtype)\n+      self.assertFalse(identicaltest(self, init1, init2))\n+\n+  def testDuplicatedInitializer(self):\n+    init = tf.orthogonal_initializer()\n+    self.assertFalse(duplicated_initializer(self, init, 1))\n+\n+  def testInvalidDataType(self):\n+    self.assertRaises(\n+      ValueError,\n+      tf.orthogonal_initializer, dtype=tf.string)\n+\n+  def testGain(self):\n+    num = 100\n+    for dtype in [tf.float32, tf.float64]:\n+      init1 = tf.orthogonal_initializer(seed=1, dtype=dtype)\n+      init2 = tf.orthogonal_initializer(gain=3.14, seed=1, dtype=dtype)\n+      with self.test_session(graph=tf.Graph()):\n+        t1 = init1([num]).eval()\n+      with self.test_session(graph=tf.Graph()):", "path": "tensorflow/python/kernel_tests/init_ops_test.py", "position": null, "original_position": 34, "commit_id": "1cb31e3ea41334e3718bad0f33a92dd5030ca229", "original_commit_id": "b0d3dea6bc5d141c67c976f3cc04115e1b7446d2", "user": {"login": "vrv", "id": 463737, "node_id": "MDQ6VXNlcjQ2MzczNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/463737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vrv", "html_url": "https://github.com/vrv", "followers_url": "https://api.github.com/users/vrv/followers", "following_url": "https://api.github.com/users/vrv/following{/other_user}", "gists_url": "https://api.github.com/users/vrv/gists{/gist_id}", "starred_url": "https://api.github.com/users/vrv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vrv/subscriptions", "organizations_url": "https://api.github.com/users/vrv/orgs", "repos_url": "https://api.github.com/users/vrv/repos", "events_url": "https://api.github.com/users/vrv/events{/privacy}", "received_events_url": "https://api.github.com/users/vrv/received_events", "type": "User", "site_admin": false}, "body": "It's redundant now -- we haven't cleaned all the other cases up though.\n\nuse_gpu=True will try to run on GPU if available, and pass otherwise.\n\nWe have CI builds that run on GPU and CPU, so they will eventually get tested on both.\n", "created_at": "2016-11-03T18:44:01Z", "updated_at": "2016-11-14T18:50:06Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/5164#discussion_r86415851", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/5164", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/86415851"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/5164#discussion_r86415851"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/5164"}}, "body_html": "<p>It's redundant now -- we haven't cleaned all the other cases up though.</p>\n<p>use_gpu=True will try to run on GPU if available, and pass otherwise.</p>\n<p>We have CI builds that run on GPU and CPU, so they will eventually get tested on both.</p>", "body_text": "It's redundant now -- we haven't cleaned all the other cases up though.\nuse_gpu=True will try to run on GPU if available, and pass otherwise.\nWe have CI builds that run on GPU and CPU, so they will eventually get tested on both.", "in_reply_to_id": 86028218}