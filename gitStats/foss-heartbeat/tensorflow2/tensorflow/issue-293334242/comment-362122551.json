{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/362122551", "html_url": "https://github.com/tensorflow/tensorflow/issues/16631#issuecomment-362122551", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16631", "id": 362122551, "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjEyMjU1MQ==", "user": {"login": "martinwicke", "id": 577277, "node_id": "MDQ6VXNlcjU3NzI3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/577277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinwicke", "html_url": "https://github.com/martinwicke", "followers_url": "https://api.github.com/users/martinwicke/followers", "following_url": "https://api.github.com/users/martinwicke/following{/other_user}", "gists_url": "https://api.github.com/users/martinwicke/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinwicke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinwicke/subscriptions", "organizations_url": "https://api.github.com/users/martinwicke/orgs", "repos_url": "https://api.github.com/users/martinwicke/repos", "events_url": "https://api.github.com/users/martinwicke/events{/privacy}", "received_events_url": "https://api.github.com/users/martinwicke/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-01T00:56:59Z", "updated_at": "2018-02-01T00:56:59Z", "author_association": "MEMBER", "body_html": "<p>If you implement your custom_getter, you can call the original getter in order to fall back on the existing method to make a variable. So you check your dict, return a special thing if your variable is in there, otherwise return whatever the getter you get in the first arg returns.</p>", "body_text": "If you implement your custom_getter, you can call the original getter in order to fall back on the existing method to make a variable. So you check your dict, return a special thing if your variable is in there, otherwise return whatever the getter you get in the first arg returns.", "body": "If you implement your custom_getter, you can call the original getter in order to fall back on the existing method to make a variable. So you check your dict, return a special thing if your variable is in there, otherwise return whatever the getter you get in the first arg returns."}