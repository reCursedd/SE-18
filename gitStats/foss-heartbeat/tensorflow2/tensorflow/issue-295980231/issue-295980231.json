{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16896", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16896/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16896/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16896/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/16896", "id": 295980231, "node_id": "MDExOlB1bGxSZXF1ZXN0MTY4MzE5MzY0", "number": 16896, "title": "dataset_ops.py batch() checks type immediately", "user": {"login": "ahundt", "id": 55744, "node_id": "MDQ6VXNlcjU1NzQ0", "avatar_url": "https://avatars1.githubusercontent.com/u/55744?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahundt", "html_url": "https://github.com/ahundt", "followers_url": "https://api.github.com/users/ahundt/followers", "following_url": "https://api.github.com/users/ahundt/following{/other_user}", "gists_url": "https://api.github.com/users/ahundt/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahundt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahundt/subscriptions", "organizations_url": "https://api.github.com/users/ahundt/orgs", "repos_url": "https://api.github.com/users/ahundt/repos", "events_url": "https://api.github.com/users/ahundt/events{/privacy}", "received_events_url": "https://api.github.com/users/ahundt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-02-09T19:11:54Z", "updated_at": "2018-02-10T22:06:37Z", "closed_at": "2018-02-10T22:06:37Z", "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/16896", "html_url": "https://github.com/tensorflow/tensorflow/pull/16896", "diff_url": "https://github.com/tensorflow/tensorflow/pull/16896.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/16896.patch"}, "body_html": "<p>Currently if you inadvertently pass a non integer value for batch_size you get a strangely cryptic error with a long trace:</p>\n<pre><code>  File \"/home/ahundt/.local/lib/python2.7/site-packages/tensorflow/python/data/ops/dataset_ops.py\", line 734, in batch\n    return BatchDataset(self, batch_size)\n  File \"/home/ahundt/.local/lib/python2.7/site-packages/tensorflow/python/data/ops/dataset_ops.py\", line 1392, in __init__\n    batch_size, dtype=dtypes.int64, name=\"batch_size\")\n  File \"/home/ahundt/.local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 932, in convert_to_tensor\n    as_ref=False)\n  File \"/home/ahundt/.local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1022, in internal_convert_to_tensor\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n  File \"/home/ahundt/.local/lib/python2.7/site-packages/tensorflow/python/framework/constant_op.py\", line 233, in _constant_tensor_conversion_function\n    return constant(v, dtype=dtype, name=name)\n  File \"/home/ahundt/.local/lib/python2.7/site-packages/tensorflow/python/framework/constant_op.py\", line 212, in constant\n    value, dtype=dtype, shape=shape, verify_shape=verify_shape))\n  File \"/home/ahundt/.local/lib/python2.7/site-packages/tensorflow/python/framework/tensor_util.py\", line 413, in make_tensor_proto\n    _AssertCompatible(values, dtype)\n  File \"/home/ahundt/.local/lib/python2.7/site-packages/tensorflow/python/framework/tensor_util.py\", line 328, in _AssertCompatible\n    (dtype.name, repr(mismatch), type(mismatch).__name__))\nTypeError: Expected int64, got 'dataset_reader.py' of type 'str' instead.\n</code></pre>\n<p>This PR hopes to clear that up by checking the type right at the call site.</p>\n<p>If I made a mistake in the preferred approach to such a check I'd appreciate advice, I did some searching and I couldn't find obvious examples that can accept both integers and scalar tensors, there are always slight variations and acceptable imports depend on the code location.</p>", "body_text": "Currently if you inadvertently pass a non integer value for batch_size you get a strangely cryptic error with a long trace:\n  File \"/home/ahundt/.local/lib/python2.7/site-packages/tensorflow/python/data/ops/dataset_ops.py\", line 734, in batch\n    return BatchDataset(self, batch_size)\n  File \"/home/ahundt/.local/lib/python2.7/site-packages/tensorflow/python/data/ops/dataset_ops.py\", line 1392, in __init__\n    batch_size, dtype=dtypes.int64, name=\"batch_size\")\n  File \"/home/ahundt/.local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 932, in convert_to_tensor\n    as_ref=False)\n  File \"/home/ahundt/.local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1022, in internal_convert_to_tensor\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n  File \"/home/ahundt/.local/lib/python2.7/site-packages/tensorflow/python/framework/constant_op.py\", line 233, in _constant_tensor_conversion_function\n    return constant(v, dtype=dtype, name=name)\n  File \"/home/ahundt/.local/lib/python2.7/site-packages/tensorflow/python/framework/constant_op.py\", line 212, in constant\n    value, dtype=dtype, shape=shape, verify_shape=verify_shape))\n  File \"/home/ahundt/.local/lib/python2.7/site-packages/tensorflow/python/framework/tensor_util.py\", line 413, in make_tensor_proto\n    _AssertCompatible(values, dtype)\n  File \"/home/ahundt/.local/lib/python2.7/site-packages/tensorflow/python/framework/tensor_util.py\", line 328, in _AssertCompatible\n    (dtype.name, repr(mismatch), type(mismatch).__name__))\nTypeError: Expected int64, got 'dataset_reader.py' of type 'str' instead.\n\nThis PR hopes to clear that up by checking the type right at the call site.\nIf I made a mistake in the preferred approach to such a check I'd appreciate advice, I did some searching and I couldn't find obvious examples that can accept both integers and scalar tensors, there are always slight variations and acceptable imports depend on the code location.", "body": "Currently if you inadvertently pass a non integer value for batch_size you get a strangely cryptic error with a long trace:\r\n```\r\n  File \"/home/ahundt/.local/lib/python2.7/site-packages/tensorflow/python/data/ops/dataset_ops.py\", line 734, in batch\r\n    return BatchDataset(self, batch_size)\r\n  File \"/home/ahundt/.local/lib/python2.7/site-packages/tensorflow/python/data/ops/dataset_ops.py\", line 1392, in __init__\r\n    batch_size, dtype=dtypes.int64, name=\"batch_size\")\r\n  File \"/home/ahundt/.local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 932, in convert_to_tensor\r\n    as_ref=False)\r\n  File \"/home/ahundt/.local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1022, in internal_convert_to_tensor\r\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\r\n  File \"/home/ahundt/.local/lib/python2.7/site-packages/tensorflow/python/framework/constant_op.py\", line 233, in _constant_tensor_conversion_function\r\n    return constant(v, dtype=dtype, name=name)\r\n  File \"/home/ahundt/.local/lib/python2.7/site-packages/tensorflow/python/framework/constant_op.py\", line 212, in constant\r\n    value, dtype=dtype, shape=shape, verify_shape=verify_shape))\r\n  File \"/home/ahundt/.local/lib/python2.7/site-packages/tensorflow/python/framework/tensor_util.py\", line 413, in make_tensor_proto\r\n    _AssertCompatible(values, dtype)\r\n  File \"/home/ahundt/.local/lib/python2.7/site-packages/tensorflow/python/framework/tensor_util.py\", line 328, in _AssertCompatible\r\n    (dtype.name, repr(mismatch), type(mismatch).__name__))\r\nTypeError: Expected int64, got 'dataset_reader.py' of type 'str' instead.\r\n```\r\n\r\nThis PR hopes to clear that up by checking the type right at the call site.\r\n\r\nIf I made a mistake in the preferred approach to such a check I'd appreciate advice, I did some searching and I couldn't find obvious examples that can accept both integers and scalar tensors, there are always slight variations and acceptable imports depend on the code location. "}