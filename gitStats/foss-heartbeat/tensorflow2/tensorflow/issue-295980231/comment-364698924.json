{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/364698924", "html_url": "https://github.com/tensorflow/tensorflow/pull/16896#issuecomment-364698924", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16896", "id": 364698924, "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDY5ODkyNA==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-10T22:06:37Z", "updated_at": "2018-02-10T22:06:37Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Thanks for the contribution. Unfortunately I can't accept it because it would break backwards compatibility: types other than <code>tf.Tensor</code> and <code>int</code> are convertible into the <code>tf.int64</code> argument for <code>batch_size</code> and this would incorrectly reject them.</p>\n<p>I would be in favor of improving the argument handling for <code>tf.data</code> APIs in general, so if you come up with another way to do this I'd be happy to review another PR.</p>", "body_text": "Thanks for the contribution. Unfortunately I can't accept it because it would break backwards compatibility: types other than tf.Tensor and int are convertible into the tf.int64 argument for batch_size and this would incorrectly reject them.\nI would be in favor of improving the argument handling for tf.data APIs in general, so if you come up with another way to do this I'd be happy to review another PR.", "body": "Thanks for the contribution. Unfortunately I can't accept it because it would break backwards compatibility: types other than `tf.Tensor` and `int` are convertible into the `tf.int64` argument for `batch_size` and this would incorrectly reject them.\r\n\r\nI would be in favor of improving the argument handling for `tf.data` APIs in general, so if you come up with another way to do this I'd be happy to review another PR."}