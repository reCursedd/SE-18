{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/197675357", "pull_request_review_id": 131461969, "id": 197675357, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NzY3NTM1Nw==", "diff_hunk": "@@ -0,0 +1,66 @@\n+# Copyright 2018 The TensorFlow Authors. All Rights Reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+# use this file except in compliance with the License.  You may obtain a copy of\n+# the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the\n+# License for the specific language governing permissions and limitations under\n+# the License.\n+# ==============================================================================\n+\"\"\"Tests for SequenceFileDataset.\"\"\"\n+\n+from __future__ import absolute_import\n+from __future__ import division\n+from __future__ import print_function\n+\n+import os\n+\n+from tensorflow.contrib.hadoop.python.ops import hadoop_dataset_ops\n+from tensorflow.python.framework import constant_op\n+from tensorflow.python.framework import dtypes\n+from tensorflow.python.framework import errors\n+from tensorflow.python.ops import array_ops\n+from tensorflow.python.platform import resource_loader\n+from tensorflow.python.platform import test\n+\n+class SequenceFileDatasetTest(test.TestCase):\n+\n+  def test_sequence_file_dataset(self):\n+    \"\"\"Test case for SequenceFileDataset.\n+\n+    The file is generated with `org.apache.hadoop.io.Text` for key/value.\n+    There are 25 records in the file with the format of:\n+    key = XXX\n+    value = VALUEXXX\n+    where XXX is replaced as the line number (starts with 001).\n+    \"\"\"\n+    filename = os.path.join(\n+        resource_loader.get_data_files_path(), 'testdata/string.seq')\n+\n+    filenames = array_ops.placeholder_with_default(", "path": "tensorflow/contrib/hadoop/python/kernel_tests/hadoop_test.py", "position": null, "original_position": 45, "commit_id": "c8e2668612189bcb2784334ce61636a6502c1603", "original_commit_id": "951f26d6af78707412434275efc769f4ec4194a6", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "body": "Can you simply make a `constant_op.constant()` here? (It doesn't look like the placeholder is ever fed.)", "created_at": "2018-06-25T04:06:28Z", "updated_at": "2018-08-09T18:44:22Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/19534#discussion_r197675357", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/19534", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/197675357"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/19534#discussion_r197675357"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/19534"}}, "body_html": "<p>Can you simply make a <code>constant_op.constant()</code> here? (It doesn't look like the placeholder is ever fed.)</p>", "body_text": "Can you simply make a constant_op.constant() here? (It doesn't look like the placeholder is ever fed.)"}