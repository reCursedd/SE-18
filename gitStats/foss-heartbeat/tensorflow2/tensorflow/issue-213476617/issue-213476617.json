{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8288", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8288/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8288/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8288/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/8288", "id": 213476617, "node_id": "MDU6SXNzdWUyMTM0NzY2MTc=", "number": 8288, "title": "Dynamic RNN, Initialization, Control Dependencies", "user": {"login": "varunkumar3618", "id": 9327561, "node_id": "MDQ6VXNlcjkzMjc1NjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/9327561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varunkumar3618", "html_url": "https://github.com/varunkumar3618", "followers_url": "https://api.github.com/users/varunkumar3618/followers", "following_url": "https://api.github.com/users/varunkumar3618/following{/other_user}", "gists_url": "https://api.github.com/users/varunkumar3618/gists{/gist_id}", "starred_url": "https://api.github.com/users/varunkumar3618/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varunkumar3618/subscriptions", "organizations_url": "https://api.github.com/users/varunkumar3618/orgs", "repos_url": "https://api.github.com/users/varunkumar3618/repos", "events_url": "https://api.github.com/users/varunkumar3618/events{/privacy}", "received_events_url": "https://api.github.com/users/varunkumar3618/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "sguada", "id": 1766524, "node_id": "MDQ6VXNlcjE3NjY1MjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1766524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sguada", "html_url": "https://github.com/sguada", "followers_url": "https://api.github.com/users/sguada/followers", "following_url": "https://api.github.com/users/sguada/following{/other_user}", "gists_url": "https://api.github.com/users/sguada/gists{/gist_id}", "starred_url": "https://api.github.com/users/sguada/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sguada/subscriptions", "organizations_url": "https://api.github.com/users/sguada/orgs", "repos_url": "https://api.github.com/users/sguada/repos", "events_url": "https://api.github.com/users/sguada/events{/privacy}", "received_events_url": "https://api.github.com/users/sguada/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sguada", "id": 1766524, "node_id": "MDQ6VXNlcjE3NjY1MjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1766524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sguada", "html_url": "https://github.com/sguada", "followers_url": "https://api.github.com/users/sguada/followers", "following_url": "https://api.github.com/users/sguada/following{/other_user}", "gists_url": "https://api.github.com/users/sguada/gists{/gist_id}", "starred_url": "https://api.github.com/users/sguada/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sguada/subscriptions", "organizations_url": "https://api.github.com/users/sguada/orgs", "repos_url": "https://api.github.com/users/sguada/repos", "events_url": "https://api.github.com/users/sguada/events{/privacy}", "received_events_url": "https://api.github.com/users/sguada/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2017-03-10T23:10:24Z", "updated_at": "2017-06-16T21:03:26Z", "closed_at": "2017-06-16T21:03:26Z", "author_association": "NONE", "body_html": "<p>I am trying to write a custom RNN Cell with regularized weights and am encountering a problem caused by the treatment of control flow dependencies.</p>\n<p>I initialize variables in the RNNCell as follows:</p>\n<p>with tf.variable_scope(scope):<br>\nw = tf.get_variable(..., reg=tf.layers.l2_reg())</p>\n<p>and use the cell in a dynamic_rnn call.</p>\n<p>At the end of graph construction, I retrieve all the regularized losses (using tf.GraphKeys.REGULARIZATION_LOSSES).</p>\n<p>When I add the regularization losses to my cross entropy loss, I run into the following error: \"InvalidArgumentError: The node 'Sum/input' has inputs from different frames.\" It seems that, because the variables are only created conditionally, they can't be used together with other tensors.</p>\n<p>Could you please suggest a workaround or provide a mechanism for adding regularization to an RNN?</p>", "body_text": "I am trying to write a custom RNN Cell with regularized weights and am encountering a problem caused by the treatment of control flow dependencies.\nI initialize variables in the RNNCell as follows:\nwith tf.variable_scope(scope):\nw = tf.get_variable(..., reg=tf.layers.l2_reg())\nand use the cell in a dynamic_rnn call.\nAt the end of graph construction, I retrieve all the regularized losses (using tf.GraphKeys.REGULARIZATION_LOSSES).\nWhen I add the regularization losses to my cross entropy loss, I run into the following error: \"InvalidArgumentError: The node 'Sum/input' has inputs from different frames.\" It seems that, because the variables are only created conditionally, they can't be used together with other tensors.\nCould you please suggest a workaround or provide a mechanism for adding regularization to an RNN?", "body": "I am trying to write a custom RNN Cell with regularized weights and am encountering a problem caused by the treatment of control flow dependencies.\r\n\r\nI initialize variables in the RNNCell as follows:\r\n\r\nwith tf.variable_scope(scope):\r\n  w = tf.get_variable(..., reg=tf.layers.l2_reg())\r\n\r\nand use the cell in a dynamic_rnn call.\r\n\r\nAt the end of graph construction, I retrieve all the regularized losses (using tf.GraphKeys.REGULARIZATION_LOSSES).\r\n\r\nWhen I add the regularization losses to my cross entropy loss, I run into the following error: \"InvalidArgumentError: The node 'Sum/input' has inputs from different frames.\" It seems that, because the variables are only created conditionally, they can't be used together with other tensors.\r\n\r\nCould you please suggest a workaround or provide a mechanism for adding regularization to an RNN?\r\n"}