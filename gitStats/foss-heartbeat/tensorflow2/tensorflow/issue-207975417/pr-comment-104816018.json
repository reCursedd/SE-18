{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/104816018", "pull_request_review_id": 25669410, "id": 104816018, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNDgxNjAxOA==", "diff_hunk": "@@ -805,7 +805,52 @@ def op(converted_input, _, converted_padding):  # pylint: disable=missing-docstr\n         filter_shape=window_shape)\n \n \n-def atrous_conv2d(value, filters, rate, padding, name=None):\n+def atrous_conv1d(input, filter, rate, padding, strides=None, name=None):\n+  \"\"\"Atrous convolution (a.k.a. convolution with holes or dilated convolution).\n+\n+  Computes a 1-D atrous convolution, also known as convolution with holes or\n+  dilated convolution, given 3-D `input` and `filter` tensors. If the `rate`\n+  parameter is equal to one, it performs regular 1-D convolution. If the `rate`\n+  parameter is greater than one, it performs convolution with holes, sampling\n+  the input values every `rate` points.\n+  This is equivalent to convolving the input with a set of upsampled filters,\n+  produced by inserting `rate - 1` zeros between two consecutive values of the\n+  filters along the `height` dimensions, hence the name atrous\n+  convolution or convolution with holes (the French word trous means holes in\n+  English).\n+\n+  See @{tf.nn.atrous_conv2d}\n+\n+  Args:\n+  input: A 3-D `Tensor` of type `float`. It needs to be in the default \"NHWC\"\n+    format. Its shape is `[batch, in_height, in_channels]`.\n+  filter: A 3-D `Tensor` with the same type as `input` and shape\n+    `[filter_height, in_channels, out_channels]`. `filter`'\n+    `in_channels` dimension must match that of `input`. Atrous convolution is\n+    equivalent to standard convolution with upsampled filters with effective\n+    height `filter_height + (filter_height - 1) * (rate - 1)`, produced by\n+    inserting `rate - 1` zeros along consecutive elements across the\n+    `filter`' spatial dimensions.\n+  rate: A positive int32. The stride with which we sample input values across\n+    the `height` and `width` dimensions. Equivalently, the rate by which we\n+    upsample the filter values by inserting zeros across the `height` and\n+    `width` dimensions. In the literature, the same parameter is sometimes\n+    called `input stride` or `dilation`.\n+  padding: A string, either `'VALID'` or `'SAME'`. The padding algorithm.\n+  strides: Optional.  Sequence of 1 ints >= 1.  Specifies the output stride.\n+    Defaults to [1].  If any value of strides is > 1, then all values of\n+    dilation_rate must be 1.\n+  name: Optional name for the returned tensor.\n+  Returns:\n+    A `Tensor` with the same type as `value`.\n+  Raises:\n+    ValueError: If input/output depth does not match `filters`' shape, or if\n+      padding is other than `'VALID'` or `'SAME'`.\n+\n+  \"\"\"\n+  return convolution(input=input, filter=filter, padding=padding, dilation_rate=np.broadcast_to(rate, (1, )), strides=strides, name=name)", "path": "tensorflow/python/ops/nn_ops.py", "position": null, "original_position": 48, "commit_id": "2cd78a9ec313b933876678d8cf1f43596e350544", "original_commit_id": "6e11066713fce8eb1c89f2060a125c72324cb52f", "user": {"login": "gpapan", "id": 6232317, "node_id": "MDQ6VXNlcjYyMzIzMTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/6232317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gpapan", "html_url": "https://github.com/gpapan", "followers_url": "https://api.github.com/users/gpapan/followers", "following_url": "https://api.github.com/users/gpapan/following{/other_user}", "gists_url": "https://api.github.com/users/gpapan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gpapan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gpapan/subscriptions", "organizations_url": "https://api.github.com/users/gpapan/orgs", "repos_url": "https://api.github.com/users/gpapan/repos", "events_url": "https://api.github.com/users/gpapan/events{/privacy}", "received_events_url": "https://api.github.com/users/gpapan/received_events", "type": "User", "site_admin": false}, "body": "Line >80 chars long", "created_at": "2017-03-08T00:23:07Z", "updated_at": "2017-05-01T18:12:41Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/7545#discussion_r104816018", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/7545", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/104816018"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/7545#discussion_r104816018"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/7545"}}, "body_html": "<p>Line &gt;80 chars long</p>", "body_text": "Line >80 chars long"}