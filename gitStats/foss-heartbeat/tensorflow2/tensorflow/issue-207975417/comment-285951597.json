{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/285951597", "html_url": "https://github.com/tensorflow/tensorflow/pull/7545#issuecomment-285951597", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7545", "id": 285951597, "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTk1MTU5Nw==", "user": {"login": "nmiculinic", "id": 3183610, "node_id": "MDQ6VXNlcjMxODM2MTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/3183610?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nmiculinic", "html_url": "https://github.com/nmiculinic", "followers_url": "https://api.github.com/users/nmiculinic/followers", "following_url": "https://api.github.com/users/nmiculinic/following{/other_user}", "gists_url": "https://api.github.com/users/nmiculinic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nmiculinic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nmiculinic/subscriptions", "organizations_url": "https://api.github.com/users/nmiculinic/orgs", "repos_url": "https://api.github.com/users/nmiculinic/repos", "events_url": "https://api.github.com/users/nmiculinic/events{/privacy}", "received_events_url": "https://api.github.com/users/nmiculinic/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-12T15:21:34Z", "updated_at": "2017-03-12T15:21:34Z", "author_association": "CONTRIBUTOR", "body_html": "<blockquote>\n<p>As far as adding atrous_conv1d and atrous_conv3d, I don't see the advantage --- better to just use the convolution function directly. atrous_conv2d existed prior to the unified tf.nn.convolution function, and is preserved for backwards compatibility.</p>\n</blockquote>\n<p>For both completeness and ease of use. When I was searching for atrous_conv1d I only found atrous_conv2d and assumed only that one is implemented (and I implemented one myself mimicking atrous_conv1d implementation before realizing there's general convolution which handles all cases). Having atrous_conv2d as standalone increase its salience and confuses users (me included).</p>", "body_text": "As far as adding atrous_conv1d and atrous_conv3d, I don't see the advantage --- better to just use the convolution function directly. atrous_conv2d existed prior to the unified tf.nn.convolution function, and is preserved for backwards compatibility.\n\nFor both completeness and ease of use. When I was searching for atrous_conv1d I only found atrous_conv2d and assumed only that one is implemented (and I implemented one myself mimicking atrous_conv1d implementation before realizing there's general convolution which handles all cases). Having atrous_conv2d as standalone increase its salience and confuses users (me included).", "body": "> As far as adding atrous_conv1d and atrous_conv3d, I don't see the advantage --- better to just use the convolution function directly. atrous_conv2d existed prior to the unified tf.nn.convolution function, and is preserved for backwards compatibility.\r\n\r\nFor both completeness and ease of use. When I was searching for atrous_conv1d I only found atrous_conv2d and assumed only that one is implemented (and I implemented one myself mimicking atrous_conv1d implementation before realizing there's general convolution which handles all cases). Having atrous_conv2d as standalone increase its salience and confuses users (me included).\r\n\r\n"}