{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18963", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18963/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18963/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18963/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/18963", "id": 318749817, "node_id": "MDExOlB1bGxSZXF1ZXN0MTg0ODU0NzQ3", "number": 18963, "title": "fix missing type conversion", "user": {"login": "rmanyari", "id": 1471029, "node_id": "MDQ6VXNlcjE0NzEwMjk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1471029?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmanyari", "html_url": "https://github.com/rmanyari", "followers_url": "https://api.github.com/users/rmanyari/followers", "following_url": "https://api.github.com/users/rmanyari/following{/other_user}", "gists_url": "https://api.github.com/users/rmanyari/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmanyari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmanyari/subscriptions", "organizations_url": "https://api.github.com/users/rmanyari/orgs", "repos_url": "https://api.github.com/users/rmanyari/repos", "events_url": "https://api.github.com/users/rmanyari/events{/privacy}", "received_events_url": "https://api.github.com/users/rmanyari/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-29T21:03:16Z", "updated_at": "2018-05-22T17:19:00Z", "closed_at": "2018-05-22T17:19:00Z", "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/18963", "html_url": "https://github.com/tensorflow/tensorflow/pull/18963", "diff_url": "https://github.com/tensorflow/tensorflow/pull/18963.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/18963.patch"}, "body_html": "<p>Hi,</p>\n<p>I was following the getting started and noticed that the else case of <code>eval_input_fn</code> needs an extra dict(features). Without it I get:</p>\n<pre><code>(tensorflow) rodrigo@rodrigo-XPS-13-9360:~/dev/tensorflow$ python python/iris_graph.py\nTraceback (most recent call last):\n  File \"python/iris_graph.py\", line 52, in &lt;module&gt;\n    eval_result = classifier.evaluate(input_fn=lambda:eval_input_fn(test_features, test_labels, batch_size))\n  File \"/home/rodrigo/dev/tensorflow/local/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py\", line 425, in evaluate\n    name=name)\n  File \"/home/rodrigo/dev/tensorflow/local/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py\", line 1087, in _evaluate_model\n    features, labels, model_fn_lib.ModeKeys.EVAL, self.config)\n  File \"/home/rodrigo/dev/tensorflow/local/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py\", line 831, in _call_model_fn\n    model_fn_results = self._model_fn(features=features, **kwargs)\n  File \"/home/rodrigo/dev/tensorflow/local/lib/python2.7/site-packages/tensorflow/python/estimator/canned/dnn.py\", line 347, in _model_fn\n    config=config)\n  File \"/home/rodrigo/dev/tensorflow/local/lib/python2.7/site-packages/tensorflow/python/estimator/canned/dnn.py\", line 159, in _dnn_model_fn\n    'Given type: {}'.format(type(features)))\nValueError: features should be a dictionary of `Tensor`s. Given type: &lt;class 'tensorflow.python.framework.ops.Tensor'&gt;\n(tensorflow) rodrigo@rodrigo-XPS-13-9360:~/dev/tensorflow$\n</code></pre>\n<p>After adding the extra type conversion (line 39) as following everything works fine:</p>\n<pre><code> 35 def eval_input_fn(features, labels, batch_size):\n 36     if labels is None:\n 37         input = features\n 38     else:\n 39         input = (dict(features), labels)\n 40     dataset = tf.data.Dataset.from_tensor_slices(input)\n 41     dataset = dataset.batch(batch_size)\n 42     return dataset.make_one_shot_iterator().get_next()\n</code></pre>\n<p>Note that this is also consistent with <code>train_input_fn</code></p>", "body_text": "Hi,\nI was following the getting started and noticed that the else case of eval_input_fn needs an extra dict(features). Without it I get:\n(tensorflow) rodrigo@rodrigo-XPS-13-9360:~/dev/tensorflow$ python python/iris_graph.py\nTraceback (most recent call last):\n  File \"python/iris_graph.py\", line 52, in <module>\n    eval_result = classifier.evaluate(input_fn=lambda:eval_input_fn(test_features, test_labels, batch_size))\n  File \"/home/rodrigo/dev/tensorflow/local/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py\", line 425, in evaluate\n    name=name)\n  File \"/home/rodrigo/dev/tensorflow/local/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py\", line 1087, in _evaluate_model\n    features, labels, model_fn_lib.ModeKeys.EVAL, self.config)\n  File \"/home/rodrigo/dev/tensorflow/local/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py\", line 831, in _call_model_fn\n    model_fn_results = self._model_fn(features=features, **kwargs)\n  File \"/home/rodrigo/dev/tensorflow/local/lib/python2.7/site-packages/tensorflow/python/estimator/canned/dnn.py\", line 347, in _model_fn\n    config=config)\n  File \"/home/rodrigo/dev/tensorflow/local/lib/python2.7/site-packages/tensorflow/python/estimator/canned/dnn.py\", line 159, in _dnn_model_fn\n    'Given type: {}'.format(type(features)))\nValueError: features should be a dictionary of `Tensor`s. Given type: <class 'tensorflow.python.framework.ops.Tensor'>\n(tensorflow) rodrigo@rodrigo-XPS-13-9360:~/dev/tensorflow$\n\nAfter adding the extra type conversion (line 39) as following everything works fine:\n 35 def eval_input_fn(features, labels, batch_size):\n 36     if labels is None:\n 37         input = features\n 38     else:\n 39         input = (dict(features), labels)\n 40     dataset = tf.data.Dataset.from_tensor_slices(input)\n 41     dataset = dataset.batch(batch_size)\n 42     return dataset.make_one_shot_iterator().get_next()\n\nNote that this is also consistent with train_input_fn", "body": "Hi,\r\n\r\nI was following the getting started and noticed that the else case of `eval_input_fn` needs an extra dict(features). Without it I get:\r\n\r\n```\r\n(tensorflow) rodrigo@rodrigo-XPS-13-9360:~/dev/tensorflow$ python python/iris_graph.py\r\nTraceback (most recent call last):\r\n  File \"python/iris_graph.py\", line 52, in <module>\r\n    eval_result = classifier.evaluate(input_fn=lambda:eval_input_fn(test_features, test_labels, batch_size))\r\n  File \"/home/rodrigo/dev/tensorflow/local/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py\", line 425, in evaluate\r\n    name=name)\r\n  File \"/home/rodrigo/dev/tensorflow/local/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py\", line 1087, in _evaluate_model\r\n    features, labels, model_fn_lib.ModeKeys.EVAL, self.config)\r\n  File \"/home/rodrigo/dev/tensorflow/local/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py\", line 831, in _call_model_fn\r\n    model_fn_results = self._model_fn(features=features, **kwargs)\r\n  File \"/home/rodrigo/dev/tensorflow/local/lib/python2.7/site-packages/tensorflow/python/estimator/canned/dnn.py\", line 347, in _model_fn\r\n    config=config)\r\n  File \"/home/rodrigo/dev/tensorflow/local/lib/python2.7/site-packages/tensorflow/python/estimator/canned/dnn.py\", line 159, in _dnn_model_fn\r\n    'Given type: {}'.format(type(features)))\r\nValueError: features should be a dictionary of `Tensor`s. Given type: <class 'tensorflow.python.framework.ops.Tensor'>\r\n(tensorflow) rodrigo@rodrigo-XPS-13-9360:~/dev/tensorflow$\r\n```\r\n\r\nAfter adding the extra type conversion (line 39) as following everything works fine:\r\n\r\n```\r\n 35 def eval_input_fn(features, labels, batch_size):\r\n 36     if labels is None:\r\n 37         input = features\r\n 38     else:\r\n 39         input = (dict(features), labels)\r\n 40     dataset = tf.data.Dataset.from_tensor_slices(input)\r\n 41     dataset = dataset.batch(batch_size)\r\n 42     return dataset.make_one_shot_iterator().get_next()\r\n```\r\n\r\nNote that this is also consistent with `train_input_fn`"}