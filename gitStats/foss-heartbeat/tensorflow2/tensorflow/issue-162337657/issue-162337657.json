{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3054", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3054/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3054/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3054/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/3054", "id": 162337657, "node_id": "MDU6SXNzdWUxNjIzMzc2NTc=", "number": 3054, "title": "Multivariate normal distribution crashes on broadcast", "user": {"login": "jlowin", "id": 153965, "node_id": "MDQ6VXNlcjE1Mzk2NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/153965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlowin", "html_url": "https://github.com/jlowin", "followers_url": "https://api.github.com/users/jlowin/followers", "following_url": "https://api.github.com/users/jlowin/following{/other_user}", "gists_url": "https://api.github.com/users/jlowin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlowin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlowin/subscriptions", "organizations_url": "https://api.github.com/users/jlowin/orgs", "repos_url": "https://api.github.com/users/jlowin/repos", "events_url": "https://api.github.com/users/jlowin/events{/privacy}", "received_events_url": "https://api.github.com/users/jlowin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2016-06-26T17:25:52Z", "updated_at": "2016-07-01T12:05:45Z", "closed_at": "2016-07-01T12:05:45Z", "author_association": "NONE", "body_html": "<h3>Environment info</h3>\n<p>Operating System: Mac OS X 10.11.5</p>\n<p>If installed from binary pip package, provide:</p>\n<ol>\n<li>Which pip package you installed.<br>\n<a href=\"https://storage.googleapis.com/tensorflow/mac/tensorflow-0.9.0-py3-none-any.whl\" rel=\"nofollow\">https://storage.googleapis.com/tensorflow/mac/tensorflow-0.9.0-py3-none-any.whl</a></li>\n<li>The output from <code>python -c \"import tensorflow; print(tensorflow.__version__)\"</code>.<br>\n0.9.0</li>\n</ol>\n<h3>Issue</h3>\n<p>The Multivariate Normal distribution in <code>contrib.distributions</code> <a href=\"https://github.com/tensorflow/tensorflow/blob/d42facc3cc9611f0c9722c81551a7404a0bd3f6b/tensorflow/contrib/distributions/python/ops/mvn.py#L378\">claims to support broadcasting</a> but it does not appear to work. This script will illustrate the issue:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n<span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> dimensions</span>\na <span class=\"pl-k\">=</span> <span class=\"pl-c1\">2</span>\nb <span class=\"pl-k\">=</span> <span class=\"pl-c1\">3</span>\nc <span class=\"pl-k\">=</span> <span class=\"pl-c1\">4</span>\n\nmu <span class=\"pl-k\">=</span> tf.reshape(tf.constant(\n    np.arange(a <span class=\"pl-k\">*</span> b <span class=\"pl-k\">*</span> c <span class=\"pl-k\">*</span> <span class=\"pl-c1\">1.0</span>)),\n    [a, b, c])\n\nsigma <span class=\"pl-k\">=</span> tf.batch_matrix_diag(tf.reshape(tf.constant(\n    np.arange(a <span class=\"pl-k\">*</span> b <span class=\"pl-k\">*</span> c <span class=\"pl-k\">*</span> <span class=\"pl-c1\">1.0</span>) <span class=\"pl-k\">+</span> <span class=\"pl-c1\">1</span>),\n    [a, b, c]))\n\nmvn <span class=\"pl-k\">=</span> tf.contrib.distributions.MultivariateNormal(mu, sigma)\n\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> works because shape(input) == shape(mu)</span>\n    sess.run(mvn.pdf(np.ones((a, b, c))))\n\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> fails even though input and mu are broadcastable</span>\n    sess.run(mvn.pdf(np.ones((<span class=\"pl-c1\">1</span>, a, b, c))))</pre></div>", "body_text": "Environment info\nOperating System: Mac OS X 10.11.5\nIf installed from binary pip package, provide:\n\nWhich pip package you installed.\nhttps://storage.googleapis.com/tensorflow/mac/tensorflow-0.9.0-py3-none-any.whl\nThe output from python -c \"import tensorflow; print(tensorflow.__version__)\".\n0.9.0\n\nIssue\nThe Multivariate Normal distribution in contrib.distributions claims to support broadcasting but it does not appear to work. This script will illustrate the issue:\nimport numpy as np\nimport tensorflow as tf\n\n# dimensions\na = 2\nb = 3\nc = 4\n\nmu = tf.reshape(tf.constant(\n    np.arange(a * b * c * 1.0)),\n    [a, b, c])\n\nsigma = tf.batch_matrix_diag(tf.reshape(tf.constant(\n    np.arange(a * b * c * 1.0) + 1),\n    [a, b, c]))\n\nmvn = tf.contrib.distributions.MultivariateNormal(mu, sigma)\n\nwith tf.Session() as sess:\n    # works because shape(input) == shape(mu)\n    sess.run(mvn.pdf(np.ones((a, b, c))))\n\n    # fails even though input and mu are broadcastable\n    sess.run(mvn.pdf(np.ones((1, a, b, c))))", "body": "### Environment info\n\nOperating System: Mac OS X 10.11.5\n\nIf installed from binary pip package, provide:\n1. Which pip package you installed. \n   https://storage.googleapis.com/tensorflow/mac/tensorflow-0.9.0-py3-none-any.whl\n2. The output from `python -c \"import tensorflow; print(tensorflow.__version__)\"`.\n   0.9.0\n### Issue\n\nThe Multivariate Normal distribution in `contrib.distributions` [claims to support broadcasting](https://github.com/tensorflow/tensorflow/blob/d42facc3cc9611f0c9722c81551a7404a0bd3f6b/tensorflow/contrib/distributions/python/ops/mvn.py#L378) but it does not appear to work. This script will illustrate the issue:\n\n``` python\nimport numpy as np\nimport tensorflow as tf\n\n# dimensions\na = 2\nb = 3\nc = 4\n\nmu = tf.reshape(tf.constant(\n    np.arange(a * b * c * 1.0)),\n    [a, b, c])\n\nsigma = tf.batch_matrix_diag(tf.reshape(tf.constant(\n    np.arange(a * b * c * 1.0) + 1),\n    [a, b, c]))\n\nmvn = tf.contrib.distributions.MultivariateNormal(mu, sigma)\n\nwith tf.Session() as sess:\n    # works because shape(input) == shape(mu)\n    sess.run(mvn.pdf(np.ones((a, b, c))))\n\n    # fails even though input and mu are broadcastable\n    sess.run(mvn.pdf(np.ones((1, a, b, c))))\n```\n"}