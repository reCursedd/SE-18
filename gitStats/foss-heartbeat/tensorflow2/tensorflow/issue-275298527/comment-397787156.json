{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/397787156", "html_url": "https://github.com/tensorflow/tensorflow/issues/14713#issuecomment-397787156", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14713", "id": 397787156, "node_id": "MDEyOklzc3VlQ29tbWVudDM5Nzc4NzE1Ng==", "user": {"login": "rharish101", "id": 25344287, "node_id": "MDQ6VXNlcjI1MzQ0Mjg3", "avatar_url": "https://avatars0.githubusercontent.com/u/25344287?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rharish101", "html_url": "https://github.com/rharish101", "followers_url": "https://api.github.com/users/rharish101/followers", "following_url": "https://api.github.com/users/rharish101/following{/other_user}", "gists_url": "https://api.github.com/users/rharish101/gists{/gist_id}", "starred_url": "https://api.github.com/users/rharish101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rharish101/subscriptions", "organizations_url": "https://api.github.com/users/rharish101/orgs", "repos_url": "https://api.github.com/users/rharish101/repos", "events_url": "https://api.github.com/users/rharish101/events{/privacy}", "received_events_url": "https://api.github.com/users/rharish101/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-16T05:01:32Z", "updated_at": "2018-06-16T11:55:33Z", "author_association": "NONE", "body_html": "<p>The issue is sort-of solved. It still existed even after changing all instances of <code>tf.Variable</code> in the transfer learning model to <code>tf.get_variable</code>. Also, it only seemed to occur with trainable variables in the graph.</p>\n<p>Therefore I simply did not specify the trainable variables in the list passed to the <code>vars_to_warm_start</code> parameter. Now, even though they aren't in the list, they're still being warm-started. This is exactly what I had intended, but it still wouldn't allow me to warm-start non-trainable variables and ignore warm-starting for trainable ones.</p>\n<p>Although my issue has been solved, is there a way of getting the trainable variables to not warm-start automatically? Or is it probably due to the use of <code>tf.Variable</code> also in the checkpoint from where variables are warm-started?</p>", "body_text": "The issue is sort-of solved. It still existed even after changing all instances of tf.Variable in the transfer learning model to tf.get_variable. Also, it only seemed to occur with trainable variables in the graph.\nTherefore I simply did not specify the trainable variables in the list passed to the vars_to_warm_start parameter. Now, even though they aren't in the list, they're still being warm-started. This is exactly what I had intended, but it still wouldn't allow me to warm-start non-trainable variables and ignore warm-starting for trainable ones.\nAlthough my issue has been solved, is there a way of getting the trainable variables to not warm-start automatically? Or is it probably due to the use of tf.Variable also in the checkpoint from where variables are warm-started?", "body": "The issue is sort-of solved. It still existed even after changing all instances of `tf.Variable` in the transfer learning model to `tf.get_variable`. Also, it only seemed to occur with trainable variables in the graph.\r\n\r\nTherefore I simply did not specify the trainable variables in the list passed to the `vars_to_warm_start` parameter. Now, even though they aren't in the list, they're still being warm-started. This is exactly what I had intended, but it still wouldn't allow me to warm-start non-trainable variables and ignore warm-starting for trainable ones.\r\n\r\nAlthough my issue has been solved, is there a way of getting the trainable variables to not warm-start automatically? Or is it probably due to the use of `tf.Variable` also in the checkpoint from where variables are warm-started?"}