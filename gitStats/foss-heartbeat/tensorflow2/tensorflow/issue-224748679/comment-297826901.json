{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/297826901", "html_url": "https://github.com/tensorflow/tensorflow/issues/9484#issuecomment-297826901", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9484", "id": 297826901, "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzgyNjkwMQ==", "user": {"login": "guschmue", "id": 22941064, "node_id": "MDQ6VXNlcjIyOTQxMDY0", "avatar_url": "https://avatars3.githubusercontent.com/u/22941064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guschmue", "html_url": "https://github.com/guschmue", "followers_url": "https://api.github.com/users/guschmue/followers", "following_url": "https://api.github.com/users/guschmue/following{/other_user}", "gists_url": "https://api.github.com/users/guschmue/gists{/gist_id}", "starred_url": "https://api.github.com/users/guschmue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guschmue/subscriptions", "organizations_url": "https://api.github.com/users/guschmue/orgs", "repos_url": "https://api.github.com/users/guschmue/repos", "events_url": "https://api.github.com/users/guschmue/events{/privacy}", "received_events_url": "https://api.github.com/users/guschmue/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-27T20:16:06Z", "updated_at": "2017-04-28T02:41:51Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Yeah, I know about this one. On windows there is no symbolic link like:<br>\n/usr/local/cuda/lib64/libcudnn.so -&gt; libcudnn.so.5<br>\n/usr/local/cuda/lib64/libcudnn.so.5 -&gt; libcudnn.so.5.1.5<br>\nso you need to know the full dll name.<br>\nIn the master we link against cudnn.lib and cudnn.lib will know the correct dll name but might have the same problem that if you linked with the cudnn.lib for 5 it wants to have the 5 dll and 5 might not work for you.<br>\nIn 1.1 I think we are still using dynamic load.<br>\nI could take a look and see if there is a clean way out of it.</p>", "body_text": "Yeah, I know about this one. On windows there is no symbolic link like:\n/usr/local/cuda/lib64/libcudnn.so -> libcudnn.so.5\n/usr/local/cuda/lib64/libcudnn.so.5 -> libcudnn.so.5.1.5\nso you need to know the full dll name.\nIn the master we link against cudnn.lib and cudnn.lib will know the correct dll name but might have the same problem that if you linked with the cudnn.lib for 5 it wants to have the 5 dll and 5 might not work for you.\nIn 1.1 I think we are still using dynamic load.\nI could take a look and see if there is a clean way out of it.", "body": "Yeah, I know about this one. On windows there is no symbolic link like:\r\n/usr/local/cuda/lib64/libcudnn.so -> libcudnn.so.5\r\n/usr/local/cuda/lib64/libcudnn.so.5 -> libcudnn.so.5.1.5\r\nso you need to know the full dll name.\r\nIn the master we link against cudnn.lib and cudnn.lib will know the correct dll name but might have the same problem that if you linked with the cudnn.lib for 5 it wants to have the 5 dll and 5 might not work for you. \r\nIn 1.1 I think we are still using dynamic load.\r\nI could take a look and see if there is a clean way out of it.\r\n"}