{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/325974807", "html_url": "https://github.com/tensorflow/tensorflow/issues/9661#issuecomment-325974807", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9661", "id": 325974807, "node_id": "MDEyOklzc3VlQ29tbWVudDMyNTk3NDgwNw==", "user": {"login": "ruppeshnalwaya1993", "id": 2301185, "node_id": "MDQ6VXNlcjIzMDExODU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2301185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ruppeshnalwaya1993", "html_url": "https://github.com/ruppeshnalwaya1993", "followers_url": "https://api.github.com/users/ruppeshnalwaya1993/followers", "following_url": "https://api.github.com/users/ruppeshnalwaya1993/following{/other_user}", "gists_url": "https://api.github.com/users/ruppeshnalwaya1993/gists{/gist_id}", "starred_url": "https://api.github.com/users/ruppeshnalwaya1993/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ruppeshnalwaya1993/subscriptions", "organizations_url": "https://api.github.com/users/ruppeshnalwaya1993/orgs", "repos_url": "https://api.github.com/users/ruppeshnalwaya1993/repos", "events_url": "https://api.github.com/users/ruppeshnalwaya1993/events{/privacy}", "received_events_url": "https://api.github.com/users/ruppeshnalwaya1993/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-30T12:26:57Z", "updated_at": "2017-08-30T12:26:57Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1645737\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/lissyx\">@lissyx</a> I resolved the error by building tfcompile separately using command <code>bazel build tensorflow/compiler/aot:tfcompile</code> and then using tfcompile tool directly in terminal like this</p>\n<pre><code>bazel-bin/tensorflow/compiler/aot/tfcompile --graph=test_graph_build/test_graph_tfmatmul.pb --config=test_graph_build/test_graph_tfmatmul.config.pbtxt --cpp_class=foo::bar::MatMulComp --out_header=test_graph_build/test_graph_tfmatmul.h --out_object=test_graph_build/test_graph_tfmatmul.o --target_triple=armv64-apple-ios\n</code></pre>\n<p>The above command generated  <code>test_graph_tfmatmul.h</code> and <code>test_graph_tfmatmul.o</code> for ios arm64 which I link to the in <a href=\"https://github.com/tensorflow/tensorflow/tree/r1.2/tensorflow/contrib/ios_examples\">simple ios example project </a>. I copied the basic program to run the graph as given on <a href=\"https://www.tensorflow.org/performance/xla/tfcompile\" rel=\"nofollow\">tensorflow aot page</a> and built the app. But for some reason some symbols are not found and gives error:</p>\n<pre><code>Undefined symbols for architecture armv7:\n  \"___xla_cpu_runtime_EigenMatMulF32\", referenced from:\n      _entry in test_graph_tfmatmul.o\n  \"tensorflow::tfcompile::runtime::FreeContiguous(void*)\", referenced from:\n      foo::bar::MatMulComp::~MatMulComp() in RunModelViewController.o\n  \"tensorflow::tfcompile::runtime::MallocContiguousBuffers(long const*, unsigned long, void**, bool)\", referenced from:\n      foo::bar::MatMulComp::MatMulComp(foo::bar::MatMulComp::AllocMode) in RunModelViewController.o\n  \"xla::ExecutableRunOptions::set_intra_op_thread_pool(Eigen::ThreadPoolDevice const*)\", referenced from:\n      foo::bar::MatMulComp::set_thread_pool(Eigen::ThreadPoolDevice const*) in RunModelViewController.o\nld: symbol(s) not found for architecture armv7\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\n</code></pre>\n<p>I had already built the <a href=\"https://github.com/tensorflow/tensorflow/tree/r1.2/tensorflow/contrib/ios_examples\">simple ios example project </a> once before, hence I am assuming all the header search paths and linker paths and libs are properly set in build settings of the project. But after additional adding the .h and .o generated from AOT,  with accompanying code to test it, the project it not building. What am I missing? Is there something additional I have to link?</p>", "body_text": "@lissyx I resolved the error by building tfcompile separately using command bazel build tensorflow/compiler/aot:tfcompile and then using tfcompile tool directly in terminal like this\nbazel-bin/tensorflow/compiler/aot/tfcompile --graph=test_graph_build/test_graph_tfmatmul.pb --config=test_graph_build/test_graph_tfmatmul.config.pbtxt --cpp_class=foo::bar::MatMulComp --out_header=test_graph_build/test_graph_tfmatmul.h --out_object=test_graph_build/test_graph_tfmatmul.o --target_triple=armv64-apple-ios\n\nThe above command generated  test_graph_tfmatmul.h and test_graph_tfmatmul.o for ios arm64 which I link to the in simple ios example project . I copied the basic program to run the graph as given on tensorflow aot page and built the app. But for some reason some symbols are not found and gives error:\nUndefined symbols for architecture armv7:\n  \"___xla_cpu_runtime_EigenMatMulF32\", referenced from:\n      _entry in test_graph_tfmatmul.o\n  \"tensorflow::tfcompile::runtime::FreeContiguous(void*)\", referenced from:\n      foo::bar::MatMulComp::~MatMulComp() in RunModelViewController.o\n  \"tensorflow::tfcompile::runtime::MallocContiguousBuffers(long const*, unsigned long, void**, bool)\", referenced from:\n      foo::bar::MatMulComp::MatMulComp(foo::bar::MatMulComp::AllocMode) in RunModelViewController.o\n  \"xla::ExecutableRunOptions::set_intra_op_thread_pool(Eigen::ThreadPoolDevice const*)\", referenced from:\n      foo::bar::MatMulComp::set_thread_pool(Eigen::ThreadPoolDevice const*) in RunModelViewController.o\nld: symbol(s) not found for architecture armv7\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\n\nI had already built the simple ios example project  once before, hence I am assuming all the header search paths and linker paths and libs are properly set in build settings of the project. But after additional adding the .h and .o generated from AOT,  with accompanying code to test it, the project it not building. What am I missing? Is there something additional I have to link?", "body": "@lissyx I resolved the error by building tfcompile separately using command `bazel build tensorflow/compiler/aot:tfcompile` and then using tfcompile tool directly in terminal like this \r\n```\r\nbazel-bin/tensorflow/compiler/aot/tfcompile --graph=test_graph_build/test_graph_tfmatmul.pb --config=test_graph_build/test_graph_tfmatmul.config.pbtxt --cpp_class=foo::bar::MatMulComp --out_header=test_graph_build/test_graph_tfmatmul.h --out_object=test_graph_build/test_graph_tfmatmul.o --target_triple=armv64-apple-ios\r\n```\r\n\r\nThe above command generated  `test_graph_tfmatmul.h` and `test_graph_tfmatmul.o` for ios arm64 which I link to the in [simple ios example project ](https://github.com/tensorflow/tensorflow/tree/r1.2/tensorflow/contrib/ios_examples). I copied the basic program to run the graph as given on [tensorflow aot page](https://www.tensorflow.org/performance/xla/tfcompile) and built the app. But for some reason some symbols are not found and gives error:\r\n```\r\nUndefined symbols for architecture armv7:\r\n  \"___xla_cpu_runtime_EigenMatMulF32\", referenced from:\r\n      _entry in test_graph_tfmatmul.o\r\n  \"tensorflow::tfcompile::runtime::FreeContiguous(void*)\", referenced from:\r\n      foo::bar::MatMulComp::~MatMulComp() in RunModelViewController.o\r\n  \"tensorflow::tfcompile::runtime::MallocContiguousBuffers(long const*, unsigned long, void**, bool)\", referenced from:\r\n      foo::bar::MatMulComp::MatMulComp(foo::bar::MatMulComp::AllocMode) in RunModelViewController.o\r\n  \"xla::ExecutableRunOptions::set_intra_op_thread_pool(Eigen::ThreadPoolDevice const*)\", referenced from:\r\n      foo::bar::MatMulComp::set_thread_pool(Eigen::ThreadPoolDevice const*) in RunModelViewController.o\r\nld: symbol(s) not found for architecture armv7\r\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\r\n```\r\n\r\nI had already built the [simple ios example project ](https://github.com/tensorflow/tensorflow/tree/r1.2/tensorflow/contrib/ios_examples) once before, hence I am assuming all the header search paths and linker paths and libs are properly set in build settings of the project. But after additional adding the .h and .o generated from AOT,  with accompanying code to test it, the project it not building. What am I missing? Is there something additional I have to link?"}