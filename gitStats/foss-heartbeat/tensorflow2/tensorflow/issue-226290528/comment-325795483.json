{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/325795483", "html_url": "https://github.com/tensorflow/tensorflow/issues/9661#issuecomment-325795483", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9661", "id": 325795483, "node_id": "MDEyOklzc3VlQ29tbWVudDMyNTc5NTQ4Mw==", "user": {"login": "ruppeshnalwaya1993", "id": 2301185, "node_id": "MDQ6VXNlcjIzMDExODU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2301185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ruppeshnalwaya1993", "html_url": "https://github.com/ruppeshnalwaya1993", "followers_url": "https://api.github.com/users/ruppeshnalwaya1993/followers", "following_url": "https://api.github.com/users/ruppeshnalwaya1993/following{/other_user}", "gists_url": "https://api.github.com/users/ruppeshnalwaya1993/gists{/gist_id}", "starred_url": "https://api.github.com/users/ruppeshnalwaya1993/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ruppeshnalwaya1993/subscriptions", "organizations_url": "https://api.github.com/users/ruppeshnalwaya1993/orgs", "repos_url": "https://api.github.com/users/ruppeshnalwaya1993/repos", "events_url": "https://api.github.com/users/ruppeshnalwaya1993/events{/privacy}", "received_events_url": "https://api.github.com/users/ruppeshnalwaya1993/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-29T20:33:47Z", "updated_at": "2017-08-29T20:33:47Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1645737\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/lissyx\">@lissyx</a> Thanks for your reply! I want to build for iOS and not raspberry pie. Nevertheless, to make sure I understand the process correctly, I tried to build using the changes that you suggested. One thing I am not sure of is given</p>\n<pre><code>tfcompile_flags = select({\n        \"//tensorflow:rpi3\": str('--target_triple=\"armv6-linux-gnueabihf\" --target_cpu=\"cortex-a53\" --target_features=\"+neon-fp-armv8\"'),\n--target_features=\"+sse4.1\" --target_features=\"+sse4.2\" --target_features=\"+avx\" --target_features=\"+avx2\" --target_features=\"+fma\"',\n        \"//conditions:default\": str('')\n    }),\n</code></pre>\n<p>how do specify in the bazel build command in terminal to build for //tensorflow:rpi3 and not //conditions:default or anything else?</p>\n<p>Since I was unsure how to specify the target in the terminal command, I specified the default one to be also raspberry pie like this:</p>\n<pre><code>tfcompile_flags = select({\n        \"//tensorflow:rpi3\": str('--target_triple=\"armv6-linux-gnueabihf\" --target_cpu=\"cortex-a53\" --target_features=\"+neon-fp-armv8\"'),\n--target_features=\"+sse4.1\" --target_features=\"+sse4.2\" --target_features=\"+avx\" --target_features=\"+avx2\" --target_features=\"+fma\"',\n        \"//conditions:default\": str('--target_triple=\"armv6-linux-gnueabihf\" --target_cpu=\"cortex-a53\" --target_features=\"+neon-fp-armv8\"')\n    }),\n</code></pre>\n<p>I tried building the test graph mentioned at <a href=\"https://www.tensorflow.org/performance/xla/tfcompile\" rel=\"nofollow\">tensorflow aot page</a> by adding tfcompile_flags as written above in the BUILD file and running the command <code>bazel build test_graph_tfmatmul</code>. BUILD file is as follows kept in a directory <code>//test_graph_build</code>.</p>\n<pre><code>load(\"//tensorflow/compiler/aot:tfcompile.bzl\", \"tf_library\")\ntf_library(\n    name = \"test_graph_tfmatmul\",\n    cpp_class = \"foo::bar::MatMulComp\",\n    graph = \"test_graph_tfmatmul.pb\",\n    config = \"test_graph_tfmatmul.config.pbtxt\",\n    tfcompile_flags = select({\n        \"//tensorflow:ios\": str('--target_triple=\"arm64-apple-ios\"'),\n        \"//conditions:default\": str('--target_triple=\"armv6-linux-gnueabihf\" --target_cpu=\"cortex-a53\" --target_features=\"+neon-fp-armv8\"')\n    }),\n)\n</code></pre>\n<p>But after a lot of time compiling, this does throws an error as follows:</p>\n<pre><code>INFO: Reading 'startup' options from /etc/bazel.bazelrc: --batch\nWARNING: /tensorflow/tensorflow/core/BUILD:1634:1: in includes attribute of cc_library rule //tensorflow/core:framework_headers_lib: '../../external/nsync/public' resolves to 'external/nsync/public' not below the relative path of its package 'tensorflow/core'. This will be an error in the future. Since this rule was created by the macro 'cc_header_only_library', the error might have been caused by the macro implementation in /tensorflow/tensorflow/tensorflow.bzl:911:30.\nINFO: Found 1 target...\nINFO: From Executing genrule //test_graph_build:gen_test_graph_tfmatmul:\n2017-08-29 20:20:29.702831: I tensorflow/core/platform/cpu_feature_guard.cc:137] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.1 SSE4.2 AVX AVX2 FMA\n'+neon-fp-armv8' is not a recognized feature for this target (ignoring feature)\n'+neon-fp-armv8' is not a recognized feature for this target (ignoring feature)\n'+neon-fp-armv8' is not a recognized feature for this target (ignoring feature)\n'+neon-fp-armv8' is not a recognized feature for this target (ignoring feature)\n'+neon-fp-armv8' is not a recognized feature for this target (ignoring feature)\nERROR: /tensorflow/test_graph_build/BUILD:4:1: Linking of rule '//test_graph_build:test_graph_tfmatmul' failed: link_dynamic_library.sh failed: error executing command external/bazel_tools/tools/cpp/link_dynamic_library.sh no ignored ignored ignored /usr/bin/gcc -shared -o bazel-out/local-opt/bin/test_graph_build/libtest_graph_tfmatmul.so '-fuse-ld=gold' ... (remaining 7 argument(s) skipped): com.google.devtools.build.lib.shell.BadExitStatusException: Process exited with status 1.\n/usr/bin/ld.gold: fatal error: bazel-out/local-opt/genfiles/test_graph_build/test_graph_tfmatmul.o: unsupported ELF machine number 40\ncollect2: error: ld returned 1 exit status\nTarget //test_graph_build:test_graph_tfmatmul failed to build\nUse --verbose_failures to see the command lines of failed build steps.\nINFO: Elapsed time: 16.549s, Critical Path: 3.46s\n</code></pre>\n<p>What would be the right way to build this ?</p>", "body_text": "@lissyx Thanks for your reply! I want to build for iOS and not raspberry pie. Nevertheless, to make sure I understand the process correctly, I tried to build using the changes that you suggested. One thing I am not sure of is given\ntfcompile_flags = select({\n        \"//tensorflow:rpi3\": str('--target_triple=\"armv6-linux-gnueabihf\" --target_cpu=\"cortex-a53\" --target_features=\"+neon-fp-armv8\"'),\n--target_features=\"+sse4.1\" --target_features=\"+sse4.2\" --target_features=\"+avx\" --target_features=\"+avx2\" --target_features=\"+fma\"',\n        \"//conditions:default\": str('')\n    }),\n\nhow do specify in the bazel build command in terminal to build for //tensorflow:rpi3 and not //conditions:default or anything else?\nSince I was unsure how to specify the target in the terminal command, I specified the default one to be also raspberry pie like this:\ntfcompile_flags = select({\n        \"//tensorflow:rpi3\": str('--target_triple=\"armv6-linux-gnueabihf\" --target_cpu=\"cortex-a53\" --target_features=\"+neon-fp-armv8\"'),\n--target_features=\"+sse4.1\" --target_features=\"+sse4.2\" --target_features=\"+avx\" --target_features=\"+avx2\" --target_features=\"+fma\"',\n        \"//conditions:default\": str('--target_triple=\"armv6-linux-gnueabihf\" --target_cpu=\"cortex-a53\" --target_features=\"+neon-fp-armv8\"')\n    }),\n\nI tried building the test graph mentioned at tensorflow aot page by adding tfcompile_flags as written above in the BUILD file and running the command bazel build test_graph_tfmatmul. BUILD file is as follows kept in a directory //test_graph_build.\nload(\"//tensorflow/compiler/aot:tfcompile.bzl\", \"tf_library\")\ntf_library(\n    name = \"test_graph_tfmatmul\",\n    cpp_class = \"foo::bar::MatMulComp\",\n    graph = \"test_graph_tfmatmul.pb\",\n    config = \"test_graph_tfmatmul.config.pbtxt\",\n    tfcompile_flags = select({\n        \"//tensorflow:ios\": str('--target_triple=\"arm64-apple-ios\"'),\n        \"//conditions:default\": str('--target_triple=\"armv6-linux-gnueabihf\" --target_cpu=\"cortex-a53\" --target_features=\"+neon-fp-armv8\"')\n    }),\n)\n\nBut after a lot of time compiling, this does throws an error as follows:\nINFO: Reading 'startup' options from /etc/bazel.bazelrc: --batch\nWARNING: /tensorflow/tensorflow/core/BUILD:1634:1: in includes attribute of cc_library rule //tensorflow/core:framework_headers_lib: '../../external/nsync/public' resolves to 'external/nsync/public' not below the relative path of its package 'tensorflow/core'. This will be an error in the future. Since this rule was created by the macro 'cc_header_only_library', the error might have been caused by the macro implementation in /tensorflow/tensorflow/tensorflow.bzl:911:30.\nINFO: Found 1 target...\nINFO: From Executing genrule //test_graph_build:gen_test_graph_tfmatmul:\n2017-08-29 20:20:29.702831: I tensorflow/core/platform/cpu_feature_guard.cc:137] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.1 SSE4.2 AVX AVX2 FMA\n'+neon-fp-armv8' is not a recognized feature for this target (ignoring feature)\n'+neon-fp-armv8' is not a recognized feature for this target (ignoring feature)\n'+neon-fp-armv8' is not a recognized feature for this target (ignoring feature)\n'+neon-fp-armv8' is not a recognized feature for this target (ignoring feature)\n'+neon-fp-armv8' is not a recognized feature for this target (ignoring feature)\nERROR: /tensorflow/test_graph_build/BUILD:4:1: Linking of rule '//test_graph_build:test_graph_tfmatmul' failed: link_dynamic_library.sh failed: error executing command external/bazel_tools/tools/cpp/link_dynamic_library.sh no ignored ignored ignored /usr/bin/gcc -shared -o bazel-out/local-opt/bin/test_graph_build/libtest_graph_tfmatmul.so '-fuse-ld=gold' ... (remaining 7 argument(s) skipped): com.google.devtools.build.lib.shell.BadExitStatusException: Process exited with status 1.\n/usr/bin/ld.gold: fatal error: bazel-out/local-opt/genfiles/test_graph_build/test_graph_tfmatmul.o: unsupported ELF machine number 40\ncollect2: error: ld returned 1 exit status\nTarget //test_graph_build:test_graph_tfmatmul failed to build\nUse --verbose_failures to see the command lines of failed build steps.\nINFO: Elapsed time: 16.549s, Critical Path: 3.46s\n\nWhat would be the right way to build this ?", "body": "@lissyx Thanks for your reply! I want to build for iOS and not raspberry pie. Nevertheless, to make sure I understand the process correctly, I tried to build using the changes that you suggested. One thing I am not sure of is given \r\n```\r\ntfcompile_flags = select({\r\n        \"//tensorflow:rpi3\": str('--target_triple=\"armv6-linux-gnueabihf\" --target_cpu=\"cortex-a53\" --target_features=\"+neon-fp-armv8\"'),\r\n--target_features=\"+sse4.1\" --target_features=\"+sse4.2\" --target_features=\"+avx\" --target_features=\"+avx2\" --target_features=\"+fma\"',\r\n        \"//conditions:default\": str('')\r\n    }),\r\n```\r\nhow do specify in the bazel build command in terminal to build for //tensorflow:rpi3 and not //conditions:default or anything else?\r\n\r\nSince I was unsure how to specify the target in the terminal command, I specified the default one to be also raspberry pie like this:\r\n```\r\ntfcompile_flags = select({\r\n        \"//tensorflow:rpi3\": str('--target_triple=\"armv6-linux-gnueabihf\" --target_cpu=\"cortex-a53\" --target_features=\"+neon-fp-armv8\"'),\r\n--target_features=\"+sse4.1\" --target_features=\"+sse4.2\" --target_features=\"+avx\" --target_features=\"+avx2\" --target_features=\"+fma\"',\r\n        \"//conditions:default\": str('--target_triple=\"armv6-linux-gnueabihf\" --target_cpu=\"cortex-a53\" --target_features=\"+neon-fp-armv8\"')\r\n    }),\r\n```\r\nI tried building the test graph mentioned at [tensorflow aot page](https://www.tensorflow.org/performance/xla/tfcompile) by adding tfcompile_flags as written above in the BUILD file and running the command `bazel build test_graph_tfmatmul`. BUILD file is as follows kept in a directory `//test_graph_build`.\r\n```\r\nload(\"//tensorflow/compiler/aot:tfcompile.bzl\", \"tf_library\")\r\ntf_library(\r\n    name = \"test_graph_tfmatmul\",\r\n    cpp_class = \"foo::bar::MatMulComp\",\r\n    graph = \"test_graph_tfmatmul.pb\",\r\n    config = \"test_graph_tfmatmul.config.pbtxt\",\r\n    tfcompile_flags = select({\r\n        \"//tensorflow:ios\": str('--target_triple=\"arm64-apple-ios\"'),\r\n        \"//conditions:default\": str('--target_triple=\"armv6-linux-gnueabihf\" --target_cpu=\"cortex-a53\" --target_features=\"+neon-fp-armv8\"')\r\n    }),\r\n)\r\n```\r\n\r\nBut after a lot of time compiling, this does throws an error as follows:\r\n```\r\nINFO: Reading 'startup' options from /etc/bazel.bazelrc: --batch\r\nWARNING: /tensorflow/tensorflow/core/BUILD:1634:1: in includes attribute of cc_library rule //tensorflow/core:framework_headers_lib: '../../external/nsync/public' resolves to 'external/nsync/public' not below the relative path of its package 'tensorflow/core'. This will be an error in the future. Since this rule was created by the macro 'cc_header_only_library', the error might have been caused by the macro implementation in /tensorflow/tensorflow/tensorflow.bzl:911:30.\r\nINFO: Found 1 target...\r\nINFO: From Executing genrule //test_graph_build:gen_test_graph_tfmatmul:\r\n2017-08-29 20:20:29.702831: I tensorflow/core/platform/cpu_feature_guard.cc:137] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.1 SSE4.2 AVX AVX2 FMA\r\n'+neon-fp-armv8' is not a recognized feature for this target (ignoring feature)\r\n'+neon-fp-armv8' is not a recognized feature for this target (ignoring feature)\r\n'+neon-fp-armv8' is not a recognized feature for this target (ignoring feature)\r\n'+neon-fp-armv8' is not a recognized feature for this target (ignoring feature)\r\n'+neon-fp-armv8' is not a recognized feature for this target (ignoring feature)\r\nERROR: /tensorflow/test_graph_build/BUILD:4:1: Linking of rule '//test_graph_build:test_graph_tfmatmul' failed: link_dynamic_library.sh failed: error executing command external/bazel_tools/tools/cpp/link_dynamic_library.sh no ignored ignored ignored /usr/bin/gcc -shared -o bazel-out/local-opt/bin/test_graph_build/libtest_graph_tfmatmul.so '-fuse-ld=gold' ... (remaining 7 argument(s) skipped): com.google.devtools.build.lib.shell.BadExitStatusException: Process exited with status 1.\r\n/usr/bin/ld.gold: fatal error: bazel-out/local-opt/genfiles/test_graph_build/test_graph_tfmatmul.o: unsupported ELF machine number 40\r\ncollect2: error: ld returned 1 exit status\r\nTarget //test_graph_build:test_graph_tfmatmul failed to build\r\nUse --verbose_failures to see the command lines of failed build steps.\r\nINFO: Elapsed time: 16.549s, Critical Path: 3.46s\r\n```\r\n\r\n\r\n\r\nWhat would be the right way to build this ?"}