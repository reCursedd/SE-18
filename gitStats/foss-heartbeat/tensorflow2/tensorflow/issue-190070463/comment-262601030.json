{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/262601030", "html_url": "https://github.com/tensorflow/tensorflow/issues/5667#issuecomment-262601030", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5667", "id": 262601030, "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjYwMTAzMA==", "user": {"login": "josh11b", "id": 15258583, "node_id": "MDQ6VXNlcjE1MjU4NTgz", "avatar_url": "https://avatars0.githubusercontent.com/u/15258583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josh11b", "html_url": "https://github.com/josh11b", "followers_url": "https://api.github.com/users/josh11b/followers", "following_url": "https://api.github.com/users/josh11b/following{/other_user}", "gists_url": "https://api.github.com/users/josh11b/gists{/gist_id}", "starred_url": "https://api.github.com/users/josh11b/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josh11b/subscriptions", "organizations_url": "https://api.github.com/users/josh11b/orgs", "repos_url": "https://api.github.com/users/josh11b/repos", "events_url": "https://api.github.com/users/josh11b/events{/privacy}", "received_events_url": "https://api.github.com/users/josh11b/received_events", "type": "User", "site_admin": false}, "created_at": "2016-11-23T18:52:44Z", "updated_at": "2016-11-23T18:52:44Z", "author_association": "MEMBER", "body_html": "<p>To re-iterate what girving@ said:</p>\n<ul>\n<li>The documentation you link to does not come from tensorflow/python/ops/variables.py, but from the generated code (gen_state_ops.py, imported by tensorflow/python/ops/state_ops.py).</li>\n<li>I'm a bit foggy on the specifics of why we did generated the code the way we did (the documentation just comes from the generated code), but I can hazard a few guesses:</li>\n</ul>\n<ul>\n<li>It avoid duplicating the places where we specify the default, reducing friction if we ever want to change the default (especially since sometimes people copy-paste the generated code as a starting point for a wrapper around it).</li>\n<li>We'd have to write code to render the default as legal Python in the generated code, which was extra code we didn't really need for anything else.</li>\n<li>There is a gotcha if the default value is considered mutable by Python, see e.g.: <a href=\"http://docs.quantifiedcode.com/python-anti-patterns/correctness/mutable_default_value_as_argument.html\" rel=\"nofollow\">http://docs.quantifiedcode.com/python-anti-patterns/correctness/mutable_default_value_as_argument.html</a></li>\n</ul>\n<p>Instead we put the defaults in the doc string (search for the string \"Defaults to\").  We talked about various fixes (for example changing the rendering from \"arg=None\" to something else that indicates it is optional without specifying what the default is, perhaps \"[arg]\"), but no one solution made everybody happy so we left it as-is.  Another (tricky) possible solution: get the default out of the doc string, but that seems like it might be a bit fragile (e.g. could be disturbed by word wrapping, or a dot inside the default value).</p>", "body_text": "To re-iterate what girving@ said:\n\nThe documentation you link to does not come from tensorflow/python/ops/variables.py, but from the generated code (gen_state_ops.py, imported by tensorflow/python/ops/state_ops.py).\nI'm a bit foggy on the specifics of why we did generated the code the way we did (the documentation just comes from the generated code), but I can hazard a few guesses:\n\n\nIt avoid duplicating the places where we specify the default, reducing friction if we ever want to change the default (especially since sometimes people copy-paste the generated code as a starting point for a wrapper around it).\nWe'd have to write code to render the default as legal Python in the generated code, which was extra code we didn't really need for anything else.\nThere is a gotcha if the default value is considered mutable by Python, see e.g.: http://docs.quantifiedcode.com/python-anti-patterns/correctness/mutable_default_value_as_argument.html\n\nInstead we put the defaults in the doc string (search for the string \"Defaults to\").  We talked about various fixes (for example changing the rendering from \"arg=None\" to something else that indicates it is optional without specifying what the default is, perhaps \"[arg]\"), but no one solution made everybody happy so we left it as-is.  Another (tricky) possible solution: get the default out of the doc string, but that seems like it might be a bit fragile (e.g. could be disturbed by word wrapping, or a dot inside the default value).", "body": "To re-iterate what girving@ said:\r\n* The documentation you link to does not come from tensorflow/python/ops/variables.py, but from the generated code (gen_state_ops.py, imported by tensorflow/python/ops/state_ops.py).\r\n* I'm a bit foggy on the specifics of why we did generated the code the way we did (the documentation just comes from the generated code), but I can hazard a few guesses:\r\n - It avoid duplicating the places where we specify the default, reducing friction if we ever want to change the default (especially since sometimes people copy-paste the generated code as a starting point for a wrapper around it).\r\n - We'd have to write code to render the default as legal Python in the generated code, which was extra code we didn't really need for anything else.\r\n - There is a gotcha if the default value is considered mutable by Python, see e.g.: http://docs.quantifiedcode.com/python-anti-patterns/correctness/mutable_default_value_as_argument.html\r\n\r\nInstead we put the defaults in the doc string (search for the string \"Defaults to\").  We talked about various fixes (for example changing the rendering from \"arg=None\" to something else that indicates it is optional without specifying what the default is, perhaps \"[arg]\"), but no one solution made everybody happy so we left it as-is.  Another (tricky) possible solution: get the default out of the doc string, but that seems like it might be a bit fragile (e.g. could be disturbed by word wrapping, or a dot inside the default value)."}