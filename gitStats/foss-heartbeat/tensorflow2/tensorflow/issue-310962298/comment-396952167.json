{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/396952167", "html_url": "https://github.com/tensorflow/tensorflow/issues/18213#issuecomment-396952167", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18213", "id": 396952167, "node_id": "MDEyOklzc3VlQ29tbWVudDM5Njk1MjE2Nw==", "user": {"login": "ppwwyyxx", "id": 1381301, "node_id": "MDQ6VXNlcjEzODEzMDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1381301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ppwwyyxx", "html_url": "https://github.com/ppwwyyxx", "followers_url": "https://api.github.com/users/ppwwyyxx/followers", "following_url": "https://api.github.com/users/ppwwyyxx/following{/other_user}", "gists_url": "https://api.github.com/users/ppwwyyxx/gists{/gist_id}", "starred_url": "https://api.github.com/users/ppwwyyxx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ppwwyyxx/subscriptions", "organizations_url": "https://api.github.com/users/ppwwyyxx/orgs", "repos_url": "https://api.github.com/users/ppwwyyxx/repos", "events_url": "https://api.github.com/users/ppwwyyxx/events{/privacy}", "received_events_url": "https://api.github.com/users/ppwwyyxx/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-13T14:12:49Z", "updated_at": "2018-06-13T14:12:49Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Thanks! Looks like I found the right person.<br>\nExplicit padding would be nice. Surprised to know that there is no gain over <code>tf.pad</code>. Speaking of performance, another potential issue with the current \"SAME\" mode is that it does padding twice (one explicitly with <code>functor::PadInput</code> and one with cudnn) in order to pad [2, 3]. But in the hypothetical new mode, only one cudnn call is needed to pad [3, 2] .</p>", "body_text": "Thanks! Looks like I found the right person.\nExplicit padding would be nice. Surprised to know that there is no gain over tf.pad. Speaking of performance, another potential issue with the current \"SAME\" mode is that it does padding twice (one explicitly with functor::PadInput and one with cudnn) in order to pad [2, 3]. But in the hypothetical new mode, only one cudnn call is needed to pad [3, 2] .", "body": "Thanks! Looks like I found the right person.\r\nExplicit padding would be nice. Surprised to know that there is no gain over `tf.pad`. Speaking of performance, another potential issue with the current \"SAME\" mode is that it does padding twice (one explicitly with `functor::PadInput` and one with cudnn) in order to pad [2, 3]. But in the hypothetical new mode, only one cudnn call is needed to pad [3, 2] ."}