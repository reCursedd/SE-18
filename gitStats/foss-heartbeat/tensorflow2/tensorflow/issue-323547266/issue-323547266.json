{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19322", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19322/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19322/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19322/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19322", "id": 323547266, "node_id": "MDU6SXNzdWUzMjM1NDcyNjY=", "number": 19322, "title": "tf.gfile.GFile deadlocks on HDFS access after a fork()", "user": {"login": "superbobry", "id": 185856, "node_id": "MDQ6VXNlcjE4NTg1Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/185856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/superbobry", "html_url": "https://github.com/superbobry", "followers_url": "https://api.github.com/users/superbobry/followers", "following_url": "https://api.github.com/users/superbobry/following{/other_user}", "gists_url": "https://api.github.com/users/superbobry/gists{/gist_id}", "starred_url": "https://api.github.com/users/superbobry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/superbobry/subscriptions", "organizations_url": "https://api.github.com/users/superbobry/orgs", "repos_url": "https://api.github.com/users/superbobry/repos", "events_url": "https://api.github.com/users/superbobry/events{/privacy}", "received_events_url": "https://api.github.com/users/superbobry/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-16T09:50:12Z", "updated_at": "2018-06-10T17:16:45Z", "closed_at": null, "author_association": "MEMBER", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: N/A</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: macOS 10.13</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: v1.8.0-0-g93bc2e2072 1.8.0</li>\n<li><strong>Python version</strong>: 3.6</li>\n<li><strong>Bazel version (if compiling from source)</strong>: N/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: N/A</li>\n<li><strong>CUDA/cuDNN version</strong>: N/A</li>\n<li><strong>GPU model and memory</strong>: N/A</li>\n<li><strong>Exact command to reproduce</strong>: N/A</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>Accessing HDFS via <code>tf.gfile</code> functions leads to a deadlock (?) if the HDFS has been initialized, i.e. there has been at least a single HDFS call from the parent process. Not sure if this is a <code>libhdfs</code> bug, or a TF one. If the former, then maybe <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"296131552\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/16919\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/16919/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/16919\">#16919</a> could help.</p>\n<h3>Source code / logs</h3>\n<h4>Case 1: HDFS is not initialized in the parent process</h4>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">def</span> <span class=\"pl-en\">f</span>():\n<span class=\"pl-c1\">...</span>     <span class=\"pl-c1\">print</span>(tf.gfile.ListDirectory(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>hdfs://root/user/[...]<span class=\"pl-pds\">\"</span></span>))\n<span class=\"pl-c1\">...</span>\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">from</span> multiprocessing <span class=\"pl-k\">import</span> Process\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> p <span class=\"pl-k\">=</span> Process(<span class=\"pl-v\">target</span><span class=\"pl-k\">=</span>f)\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> p.start()\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> p.join()\n<span class=\"pl-c1\">SLF4J</span>: Class path contains multiple <span class=\"pl-c1\">SLF4J</span> bindings.\n<span class=\"pl-c1\">SLF4J</span>: See http:<span class=\"pl-k\">//</span>www.slf4j.org<span class=\"pl-k\">/</span>codes.html<span class=\"pl-c\"><span class=\"pl-c\">#</span>multiple_bindings for an explanation.</span>\n<span class=\"pl-c1\">SLF4J</span>: Actual binding <span class=\"pl-k\">is</span> of type [org.slf4j.impl.Log4jLoggerFactory]\n\n[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>foo<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>bar<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>boo<span class=\"pl-pds\">'</span></span>]</pre></div>\n<h4>Case 2: HDFS is initialized in the parent process</h4>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> f()\n<span class=\"pl-c1\">SLF4J</span>: Class path contains multiple <span class=\"pl-c1\">SLF4J</span> bindings.\n<span class=\"pl-c1\">SLF4J</span>: See http:<span class=\"pl-k\">//</span>www.slf4j.org<span class=\"pl-k\">/</span>codes.html<span class=\"pl-c\"><span class=\"pl-c\">#</span>multiple_bindings for an explanation.</span>\n<span class=\"pl-c1\">SLF4J</span>: Actual binding <span class=\"pl-k\">is</span> of type [org.slf4j.impl.Log4jLoggerFactory]\n[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>foo<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>bar<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>boo<span class=\"pl-pds\">'</span></span>]\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> p <span class=\"pl-k\">=</span> Process(<span class=\"pl-v\">target</span><span class=\"pl-k\">=</span>f)\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> p.start()\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> p.join()  <span class=\"pl-c\"><span class=\"pl-c\">#</span> Never returns.</span></pre></div>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): N/A\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): macOS 10.13\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): v1.8.0-0-g93bc2e2072 1.8.0\nPython version: 3.6\nBazel version (if compiling from source): N/A\nGCC/Compiler version (if compiling from source): N/A\nCUDA/cuDNN version: N/A\nGPU model and memory: N/A\nExact command to reproduce: N/A\n\nDescribe the problem\nAccessing HDFS via tf.gfile functions leads to a deadlock (?) if the HDFS has been initialized, i.e. there has been at least a single HDFS call from the parent process. Not sure if this is a libhdfs bug, or a TF one. If the former, then maybe #16919 could help.\nSource code / logs\nCase 1: HDFS is not initialized in the parent process\n>>> import tensorflow as tf\n>>> def f():\n...     print(tf.gfile.ListDirectory(\"hdfs://root/user/[...]\"))\n...\n>>> from multiprocessing import Process\n>>> p = Process(target=f)\n>>> p.start()\n>>> p.join()\nSLF4J: Class path contains multiple SLF4J bindings.\nSLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.\nSLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]\n\n['foo', 'bar', 'boo']\nCase 2: HDFS is initialized in the parent process\n>>> f()\nSLF4J: Class path contains multiple SLF4J bindings.\nSLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.\nSLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]\n['foo', 'bar', 'boo']\n>>> p = Process(target=f)\n>>> p.start()\n>>> p.join()  # Never returns.", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: N/A\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: macOS 10.13\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: v1.8.0-0-g93bc2e2072 1.8.0\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: N/A\r\n\r\n### Describe the problem\r\n\r\nAccessing HDFS via `tf.gfile` functions leads to a deadlock (?) if the HDFS has been initialized, i.e. there has been at least a single HDFS call from the parent process. Not sure if this is a `libhdfs` bug, or a TF one. If the former, then maybe #16919 could help.\r\n\r\n### Source code / logs\r\n\r\n#### Case 1: HDFS is not initialized in the parent process\r\n\r\n```python\r\n>>> import tensorflow as tf\r\n>>> def f():\r\n...     print(tf.gfile.ListDirectory(\"hdfs://root/user/[...]\"))\r\n...\r\n>>> from multiprocessing import Process\r\n>>> p = Process(target=f)\r\n>>> p.start()\r\n>>> p.join()\r\nSLF4J: Class path contains multiple SLF4J bindings.\r\nSLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.\r\nSLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]\r\n\r\n['foo', 'bar', 'boo']\r\n```\r\n\r\n#### Case 2: HDFS is initialized in the parent process\r\n\r\n```python\r\n>>> f()\r\nSLF4J: Class path contains multiple SLF4J bindings.\r\nSLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.\r\nSLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]\r\n['foo', 'bar', 'boo']\r\n>>> p = Process(target=f)\r\n>>> p.start()\r\n>>> p.join()  # Never returns.\r\n```"}