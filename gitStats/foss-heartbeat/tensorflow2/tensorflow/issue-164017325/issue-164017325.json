{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3201", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3201/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3201/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3201/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/3201", "id": 164017325, "node_id": "MDU6SXNzdWUxNjQwMTczMjU=", "number": 3201, "title": "Calculate a vector l1 norm of a tensor creates unnecessary copy of tensor", "user": {"login": "zhengwy888", "id": 1190730, "node_id": "MDQ6VXNlcjExOTA3MzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1190730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhengwy888", "html_url": "https://github.com/zhengwy888", "followers_url": "https://api.github.com/users/zhengwy888/followers", "following_url": "https://api.github.com/users/zhengwy888/following{/other_user}", "gists_url": "https://api.github.com/users/zhengwy888/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhengwy888/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhengwy888/subscriptions", "organizations_url": "https://api.github.com/users/zhengwy888/orgs", "repos_url": "https://api.github.com/users/zhengwy888/repos", "events_url": "https://api.github.com/users/zhengwy888/events{/privacy}", "received_events_url": "https://api.github.com/users/zhengwy888/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-07-06T07:44:32Z", "updated_at": "2016-07-11T16:08:36Z", "closed_at": "2016-07-11T16:08:36Z", "author_association": "NONE", "body_html": "<p>I am using tensorflow 0.9.<br>\nwhen I am trying to calculate a simple l1-norm of vector, like</p>\n<div class=\"highlight highlight-source-python\"><pre>    matrix <span class=\"pl-k\">=</span> vs.get_variable(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Matrix<span class=\"pl-pds\">\"</span></span>, [total_arg_size, output_size])                      \n    l1norm <span class=\"pl-k\">=</span> tf.reduce_mean(tf.abs(matrix))                                                 </pre></div>\n<p>Tensorflow allocates memory for the results of tf.abs(matrix). when matrix size are large, this could cause out of memory issue.<br>\nIs there a way I can avoid this additional allocation?</p>", "body_text": "I am using tensorflow 0.9.\nwhen I am trying to calculate a simple l1-norm of vector, like\n    matrix = vs.get_variable(\"Matrix\", [total_arg_size, output_size])                      \n    l1norm = tf.reduce_mean(tf.abs(matrix))                                                 \nTensorflow allocates memory for the results of tf.abs(matrix). when matrix size are large, this could cause out of memory issue.\nIs there a way I can avoid this additional allocation?", "body": "I am using tensorflow 0.9.\nwhen I am trying to calculate a simple l1-norm of vector, like \n\n``` python\n    matrix = vs.get_variable(\"Matrix\", [total_arg_size, output_size])                      \n    l1norm = tf.reduce_mean(tf.abs(matrix))                                                 \n```\n\nTensorflow allocates memory for the results of tf.abs(matrix). when matrix size are large, this could cause out of memory issue.\nIs there a way I can avoid this additional allocation? \n"}