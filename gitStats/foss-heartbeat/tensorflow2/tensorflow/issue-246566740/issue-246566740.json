{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11877", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11877/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11877/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11877/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/11877", "id": 246566740, "node_id": "MDU6SXNzdWUyNDY1NjY3NDA=", "number": 11877, "title": "Why tf.FIFOQueue didn't removed when using tf.reset_default_graph?", "user": {"login": "ericyue", "id": 918889, "node_id": "MDQ6VXNlcjkxODg4OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/918889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ericyue", "html_url": "https://github.com/ericyue", "followers_url": "https://api.github.com/users/ericyue/followers", "following_url": "https://api.github.com/users/ericyue/following{/other_user}", "gists_url": "https://api.github.com/users/ericyue/gists{/gist_id}", "starred_url": "https://api.github.com/users/ericyue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ericyue/subscriptions", "organizations_url": "https://api.github.com/users/ericyue/orgs", "repos_url": "https://api.github.com/users/ericyue/repos", "events_url": "https://api.github.com/users/ericyue/events{/privacy}", "received_events_url": "https://api.github.com/users/ericyue/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-07-30T07:00:14Z", "updated_at": "2017-07-31T16:58:22Z", "closed_at": "2017-07-31T16:23:06Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: No</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:  Linux Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: Pip</li>\n<li><strong>TensorFlow version (use command below)</strong>:  1.2.1</li>\n<li><strong>Python version</strong>:  2.7</li>\n<li><strong>Bazel version (if compiling from source)</strong>: None</li>\n<li><strong>CUDA/cuDNN version</strong>: None</li>\n<li><strong>GPU model and memory</strong>: None</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I want to empty the entire session and grapth while every loop . But the FIFOQueue seems didn't  removed when I  using tf.reset_default_graph.</p>\n<p>So how to make everything clean in currrent process(without create a subprocess \\ or change FIFO's name)?</p>\n<h3>Source code / logs</h3>\n<pre><code>import tensorflow as tf\n\ncluster = tf.train.ClusterSpec({\"ps\": [\"localhost:65062\"], \"worker\": [\"localhost:65063\"]})\nps = tf.train.Server(cluster, job_name=\"ps\", task_index=0)\nworker = tf.train.Server(cluster, job_name=\"worker\", task_index=0)\n\nwhile True:\n  print \"begin a new job\"\n\n  print(\"PS: {0}\".format(ps.target))\n  print(\"Worker: {0}\".format(worker.target))\n\n  with tf.Session(worker.target) as sess:\n    with tf.device(\"/job:ps/task:0\"):\n        W = tf.Variable(tf.zeros([784, 10]))\n        b = tf.Variable(tf.zeros([10]))\n        file_queue = tf.FIFOQueue(10,\n                                     [tf.int32, tf.bool, tf.string, tf.string],\n                                     shared_name = 'global_queue')\n    init = tf.global_variables_initializer()\n    sess.run([init, file_queue.close()])\n\n  tf.reset_default_graph()\n  time.sleep(2)\n</code></pre>\n<h3>ERROR</h3>\n<pre><code>CancelledError (see above for traceback): Queue 'global_queue' is already closed.\n\t [[Node: fifo_queue_Close = QueueCloseV2[cancel_pending_enqueues=false, _device=\"/job:ps/replica:0/task:0/cpu:0\"](fifo_queue)]]\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): No\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):  Linux Ubuntu 16.04\nTensorFlow installed from (source or binary): Pip\nTensorFlow version (use command below):  1.2.1\nPython version:  2.7\nBazel version (if compiling from source): None\nCUDA/cuDNN version: None\nGPU model and memory: None\nExact command to reproduce:\n\nDescribe the problem\nI want to empty the entire session and grapth while every loop . But the FIFOQueue seems didn't  removed when I  using tf.reset_default_graph.\nSo how to make everything clean in currrent process(without create a subprocess \\ or change FIFO's name)?\nSource code / logs\nimport tensorflow as tf\n\ncluster = tf.train.ClusterSpec({\"ps\": [\"localhost:65062\"], \"worker\": [\"localhost:65063\"]})\nps = tf.train.Server(cluster, job_name=\"ps\", task_index=0)\nworker = tf.train.Server(cluster, job_name=\"worker\", task_index=0)\n\nwhile True:\n  print \"begin a new job\"\n\n  print(\"PS: {0}\".format(ps.target))\n  print(\"Worker: {0}\".format(worker.target))\n\n  with tf.Session(worker.target) as sess:\n    with tf.device(\"/job:ps/task:0\"):\n        W = tf.Variable(tf.zeros([784, 10]))\n        b = tf.Variable(tf.zeros([10]))\n        file_queue = tf.FIFOQueue(10,\n                                     [tf.int32, tf.bool, tf.string, tf.string],\n                                     shared_name = 'global_queue')\n    init = tf.global_variables_initializer()\n    sess.run([init, file_queue.close()])\n\n  tf.reset_default_graph()\n  time.sleep(2)\n\nERROR\nCancelledError (see above for traceback): Queue 'global_queue' is already closed.\n\t [[Node: fifo_queue_Close = QueueCloseV2[cancel_pending_enqueues=false, _device=\"/job:ps/replica:0/task:0/cpu:0\"](fifo_queue)]]", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:  Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: Pip\r\n- **TensorFlow version (use command below)**:  1.2.1\r\n- **Python version**:  2.7\r\n- **Bazel version (if compiling from source)**: None\r\n- **CUDA/cuDNN version**: None\r\n- **GPU model and memory**: None\r\n- **Exact command to reproduce**:\r\n\r\n### Describe the problem\r\nI want to empty the entire session and grapth while every loop . But the FIFOQueue seems didn't  removed when I  using tf.reset_default_graph.  \r\n\r\nSo how to make everything clean in currrent process(without create a subprocess \\ or change FIFO's name)?\r\n\r\n### Source code / logs\r\n```\r\nimport tensorflow as tf\r\n\r\ncluster = tf.train.ClusterSpec({\"ps\": [\"localhost:65062\"], \"worker\": [\"localhost:65063\"]})\r\nps = tf.train.Server(cluster, job_name=\"ps\", task_index=0)\r\nworker = tf.train.Server(cluster, job_name=\"worker\", task_index=0)\r\n\r\nwhile True:\r\n  print \"begin a new job\"\r\n\r\n  print(\"PS: {0}\".format(ps.target))\r\n  print(\"Worker: {0}\".format(worker.target))\r\n\r\n  with tf.Session(worker.target) as sess:\r\n    with tf.device(\"/job:ps/task:0\"):\r\n        W = tf.Variable(tf.zeros([784, 10]))\r\n        b = tf.Variable(tf.zeros([10]))\r\n        file_queue = tf.FIFOQueue(10,\r\n                                     [tf.int32, tf.bool, tf.string, tf.string],\r\n                                     shared_name = 'global_queue')\r\n    init = tf.global_variables_initializer()\r\n    sess.run([init, file_queue.close()])\r\n\r\n  tf.reset_default_graph()\r\n  time.sleep(2)\r\n```\r\n\r\n### ERROR\r\n```\r\nCancelledError (see above for traceback): Queue 'global_queue' is already closed.\r\n\t [[Node: fifo_queue_Close = QueueCloseV2[cancel_pending_enqueues=false, _device=\"/job:ps/replica:0/task:0/cpu:0\"](fifo_queue)]]\r\n```"}