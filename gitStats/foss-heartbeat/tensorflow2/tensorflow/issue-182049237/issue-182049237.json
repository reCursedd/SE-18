{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4876", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4876/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4876/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4876/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/4876", "id": 182049237, "node_id": "MDU6SXNzdWUxODIwNDkyMzc=", "number": 4876, "title": "Eigen::TensorEvaluator `m_impl` is private, compiling cxx11_tensor_cuda.cu", "user": {"login": "hughperkins", "id": 123560, "node_id": "MDQ6VXNlcjEyMzU2MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/123560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hughperkins", "html_url": "https://github.com/hughperkins", "followers_url": "https://api.github.com/users/hughperkins/followers", "following_url": "https://api.github.com/users/hughperkins/following{/other_user}", "gists_url": "https://api.github.com/users/hughperkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/hughperkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hughperkins/subscriptions", "organizations_url": "https://api.github.com/users/hughperkins/orgs", "repos_url": "https://api.github.com/users/hughperkins/repos", "events_url": "https://api.github.com/users/hughperkins/events{/privacy}", "received_events_url": "https://api.github.com/users/hughperkins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "benoitsteiner", "id": 6969686, "node_id": "MDQ6VXNlcjY5Njk2ODY=", "avatar_url": "https://avatars0.githubusercontent.com/u/6969686?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benoitsteiner", "html_url": "https://github.com/benoitsteiner", "followers_url": "https://api.github.com/users/benoitsteiner/followers", "following_url": "https://api.github.com/users/benoitsteiner/following{/other_user}", "gists_url": "https://api.github.com/users/benoitsteiner/gists{/gist_id}", "starred_url": "https://api.github.com/users/benoitsteiner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benoitsteiner/subscriptions", "organizations_url": "https://api.github.com/users/benoitsteiner/orgs", "repos_url": "https://api.github.com/users/benoitsteiner/repos", "events_url": "https://api.github.com/users/benoitsteiner/events{/privacy}", "received_events_url": "https://api.github.com/users/benoitsteiner/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "benoitsteiner", "id": 6969686, "node_id": "MDQ6VXNlcjY5Njk2ODY=", "avatar_url": "https://avatars0.githubusercontent.com/u/6969686?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benoitsteiner", "html_url": "https://github.com/benoitsteiner", "followers_url": "https://api.github.com/users/benoitsteiner/followers", "following_url": "https://api.github.com/users/benoitsteiner/following{/other_user}", "gists_url": "https://api.github.com/users/benoitsteiner/gists{/gist_id}", "starred_url": "https://api.github.com/users/benoitsteiner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benoitsteiner/subscriptions", "organizations_url": "https://api.github.com/users/benoitsteiner/orgs", "repos_url": "https://api.github.com/users/benoitsteiner/repos", "events_url": "https://api.github.com/users/benoitsteiner/events{/privacy}", "received_events_url": "https://api.github.com/users/benoitsteiner/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2016-10-10T15:47:55Z", "updated_at": "2016-10-26T00:07:29Z", "closed_at": "2016-10-10T20:19:48Z", "author_association": "NONE", "body_html": "<p>i know this is a bug for Eigen repo, but the owner of the file seems to be Benoit Steiner, so tentatively thinking here might be a good place to file it?</p>\n<p>If I build cxx11_tensor_cuda.cu using standard eigen build process, it does in fact compile.</p>\n<p>However, if I build using clang, I get the following error:</p>\n<pre><code>In file included from test/eigen/cxx11_tensor_cuda.cu:19:\nIn file included from /usr/local/eigen/unsupported/Eigen/CXX11/Tensor:95:\n/usr/local/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReductionCuda.h:687:50: error: \n      'm_impl' is a private member of 'Eigen::TensorEvaluator&lt;const\n      Eigen::TensorReductionOp&lt;Eigen::internal::MaxReducer&lt;float&gt;, const\n      Eigen::array&lt;long, 2&gt;, const Eigen::TensorMap&lt;Eigen::Tensor&lt;float, 4, 0,\n      long&gt;, 0&gt; &gt;, Eigen::GpuDevice&gt;'\n      typename Self::CoeffReturnType val = input.m_impl.coeff(j * num_pr...\n...\ntest/eigen/cxx11_tensor_cuda.cu:234:30: note: in instantiation of function\n      template specialization\n      'Eigen::TensorDevice&lt;Eigen::TensorMap&lt;Eigen::Tensor&lt;float, 2, 0, long&gt;,\n      0&gt;,\n      Eigen::GpuDevice&gt;::operator=&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MaxReducer&lt;float&gt;,\n      const Eigen::array&lt;long, 2&gt;, const Eigen::TensorMap&lt;Eigen::Tensor&lt;float,\n      4, 0, long&gt;, 0&gt; &gt; &gt;' requested here\n  gpu_out.device(gpu_device) = gpu_in1.maximum(reduction_axis);\n                             ^\n/usr/local/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h:732:36: note: \n      declared private here\n  TensorEvaluator&lt;ArgType, Device&gt; m_impl;\n</code></pre>\n<p>I'm building as follows:</p>\n<ul>\n<li>(optional) comment out lines 15-17, to disable fp16</li>\n<li>run, from cloned eigen repo:</li>\n</ul>\n<pre><code> clang++-3.8 -std=c++11 -I. -Itest -Ibuild/test -I/usr/local/cuda-7.5/include unsupported/test/cxx11_tensor_cuda.cu --cuda-host-only -emit-llvm  -O3 -S -o cxx11_tensor_cuda-hostraw.ll\n</code></pre>\n<p>Thoughts?  <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6969686\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/benoitsteiner\">@benoitsteiner</a></p>\n<p>(edited to have a correct commandline, tested from root of cloned eigen repo)</p>", "body_text": "i know this is a bug for Eigen repo, but the owner of the file seems to be Benoit Steiner, so tentatively thinking here might be a good place to file it?\nIf I build cxx11_tensor_cuda.cu using standard eigen build process, it does in fact compile.\nHowever, if I build using clang, I get the following error:\nIn file included from test/eigen/cxx11_tensor_cuda.cu:19:\nIn file included from /usr/local/eigen/unsupported/Eigen/CXX11/Tensor:95:\n/usr/local/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReductionCuda.h:687:50: error: \n      'm_impl' is a private member of 'Eigen::TensorEvaluator<const\n      Eigen::TensorReductionOp<Eigen::internal::MaxReducer<float>, const\n      Eigen::array<long, 2>, const Eigen::TensorMap<Eigen::Tensor<float, 4, 0,\n      long>, 0> >, Eigen::GpuDevice>'\n      typename Self::CoeffReturnType val = input.m_impl.coeff(j * num_pr...\n...\ntest/eigen/cxx11_tensor_cuda.cu:234:30: note: in instantiation of function\n      template specialization\n      'Eigen::TensorDevice<Eigen::TensorMap<Eigen::Tensor<float, 2, 0, long>,\n      0>,\n      Eigen::GpuDevice>::operator=<Eigen::TensorReductionOp<Eigen::internal::MaxReducer<float>,\n      const Eigen::array<long, 2>, const Eigen::TensorMap<Eigen::Tensor<float,\n      4, 0, long>, 0> > >' requested here\n  gpu_out.device(gpu_device) = gpu_in1.maximum(reduction_axis);\n                             ^\n/usr/local/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h:732:36: note: \n      declared private here\n  TensorEvaluator<ArgType, Device> m_impl;\n\nI'm building as follows:\n\n(optional) comment out lines 15-17, to disable fp16\nrun, from cloned eigen repo:\n\n clang++-3.8 -std=c++11 -I. -Itest -Ibuild/test -I/usr/local/cuda-7.5/include unsupported/test/cxx11_tensor_cuda.cu --cuda-host-only -emit-llvm  -O3 -S -o cxx11_tensor_cuda-hostraw.ll\n\nThoughts?  @benoitsteiner\n(edited to have a correct commandline, tested from root of cloned eigen repo)", "body": "i know this is a bug for Eigen repo, but the owner of the file seems to be Benoit Steiner, so tentatively thinking here might be a good place to file it?\n\nIf I build cxx11_tensor_cuda.cu using standard eigen build process, it does in fact compile.\n\nHowever, if I build using clang, I get the following error:\n\n```\nIn file included from test/eigen/cxx11_tensor_cuda.cu:19:\nIn file included from /usr/local/eigen/unsupported/Eigen/CXX11/Tensor:95:\n/usr/local/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReductionCuda.h:687:50: error: \n      'm_impl' is a private member of 'Eigen::TensorEvaluator<const\n      Eigen::TensorReductionOp<Eigen::internal::MaxReducer<float>, const\n      Eigen::array<long, 2>, const Eigen::TensorMap<Eigen::Tensor<float, 4, 0,\n      long>, 0> >, Eigen::GpuDevice>'\n      typename Self::CoeffReturnType val = input.m_impl.coeff(j * num_pr...\n...\ntest/eigen/cxx11_tensor_cuda.cu:234:30: note: in instantiation of function\n      template specialization\n      'Eigen::TensorDevice<Eigen::TensorMap<Eigen::Tensor<float, 2, 0, long>,\n      0>,\n      Eigen::GpuDevice>::operator=<Eigen::TensorReductionOp<Eigen::internal::MaxReducer<float>,\n      const Eigen::array<long, 2>, const Eigen::TensorMap<Eigen::Tensor<float,\n      4, 0, long>, 0> > >' requested here\n  gpu_out.device(gpu_device) = gpu_in1.maximum(reduction_axis);\n                             ^\n/usr/local/eigen/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h:732:36: note: \n      declared private here\n  TensorEvaluator<ArgType, Device> m_impl;\n```\n\nI'm building as follows:\n- (optional) comment out lines 15-17, to disable fp16\n- run, from cloned eigen repo:\n\n```\n clang++-3.8 -std=c++11 -I. -Itest -Ibuild/test -I/usr/local/cuda-7.5/include unsupported/test/cxx11_tensor_cuda.cu --cuda-host-only -emit-llvm  -O3 -S -o cxx11_tensor_cuda-hostraw.ll\n```\n\nThoughts?  @benoitsteiner \n\n(edited to have a correct commandline, tested from root of cloned eigen repo)\n"}