{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8898", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8898/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8898/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8898/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/8898", "id": 218712647, "node_id": "MDU6SXNzdWUyMTg3MTI2NDc=", "number": 8898, "title": "Import Error  Couldn't open CUDA library libcudnn.so.5.", "user": {"login": "lunasdejavu", "id": 7753153, "node_id": "MDQ6VXNlcjc3NTMxNTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/7753153?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lunasdejavu", "html_url": "https://github.com/lunasdejavu", "followers_url": "https://api.github.com/users/lunasdejavu/followers", "following_url": "https://api.github.com/users/lunasdejavu/following{/other_user}", "gists_url": "https://api.github.com/users/lunasdejavu/gists{/gist_id}", "starred_url": "https://api.github.com/users/lunasdejavu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lunasdejavu/subscriptions", "organizations_url": "https://api.github.com/users/lunasdejavu/orgs", "repos_url": "https://api.github.com/users/lunasdejavu/repos", "events_url": "https://api.github.com/users/lunasdejavu/events{/privacy}", "received_events_url": "https://api.github.com/users/lunasdejavu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 20, "created_at": "2017-04-01T18:05:30Z", "updated_at": "2017-12-07T10:32:13Z", "closed_at": "2017-04-02T15:22:21Z", "author_association": "NONE", "body_html": "<h3>What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?</h3>\n<p>i was installing tensorflow  GPU version on ubuntu x86-64<br>\nbut I found an error:</p>\n<p><code> &gt;&gt;&gt; import tensorflow as tf I tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcublas.so.8.0 locally I tensorflow/stream_executor/dso_loader.cc:126] Couldn't open CUDA library libcudnn.so.5. LD_LIBRARY_PATH: /home/lunasdejavu/Downloads:/usr/local/cuda-8.0/lib64 I tensorflow/stream_executor/cuda/cuda_dnn.cc:3517] Unable to load cuDNN DSO I tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcufft.so.8.0 locally I tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcuda.so.1 locally I tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcurand.so.8.0 locally</code></p>\n<p>i tried to install again and again follow the instructions<br>\nit is still useless.<br>\nI tried the NVIDIA_CUDA-8.0_Samples then make. no error after <code>all</code></p>\n<p>can somebody help me... i was working on this setting for almost 24 hours....</p>\n<h3>Environment info</h3>\n<p>Operating System:<br>\ngcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.4)<br>\n64 bit<br>\nInstalled version of CUDA and cuDNN:<br>\n(please attach the output of <code>ls -l /path/to/cuda/lib/libcud*</code>):<br>\ni can't use the command</p>\n<p>but the packages are cuda-repo-ubuntu1604-8-0-local-ga2_8.0.61-1_amd64.deb<br>\ncudnn-8.0-linux-x64-v6.0.tgz</p>\n<p>If installed from binary pip package, provide:<br>\n<a href=\"https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.11.0-cp27-none-linux_x86_64.whl\" rel=\"nofollow\">https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.11.0-cp27-none-linux_x86_64.whl</a></p>\n<ol>\n<li>A link to the pip package you installed:</li>\n<li>The output from <code>python -c \"import tensorflow; print(tensorflow.__version__)\"</code>.</li>\n</ol>\n<p>If installed from source, provide</p>\n<ol>\n<li>The commit hash (<code>git rev-parse HEAD</code>)</li>\n<li>The output of <code>bazel version</code><br>\nBuild label: 0.4.5<br>\nBuild target: bazel-out/local-fastbuild/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar<br>\nBuild time: Thu Mar 16 12:19:38 2017 (1489666778)<br>\nBuild timestamp: 1489666778<br>\nBuild timestamp as int: 1489666778</li>\n</ol>\n<h3>If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)</h3>\n<h3>What other attempted solutions have you tried?</h3>\n<p>i searched the manual of th<br>\ncd <br>\nexport LD_LIBRARY_PATH=<code>pwd</code>:$LD_LIBRARY_PATH</p>\n<pre><code>Add &lt;installpath&gt; to your build and link process by adding -I&lt;installpath&gt; to your compile\nline and -L&lt;installpath&gt; -lcudnn to your link line.\n</code></pre>\n<h3>Logs or other output that would be helpful</h3>\n<p>(If logs are large, please upload as attachment or provide link).</p>", "body_text": "What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?\ni was installing tensorflow  GPU version on ubuntu x86-64\nbut I found an error:\n >>> import tensorflow as tf I tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcublas.so.8.0 locally I tensorflow/stream_executor/dso_loader.cc:126] Couldn't open CUDA library libcudnn.so.5. LD_LIBRARY_PATH: /home/lunasdejavu/Downloads:/usr/local/cuda-8.0/lib64 I tensorflow/stream_executor/cuda/cuda_dnn.cc:3517] Unable to load cuDNN DSO I tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcufft.so.8.0 locally I tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcuda.so.1 locally I tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcurand.so.8.0 locally\ni tried to install again and again follow the instructions\nit is still useless.\nI tried the NVIDIA_CUDA-8.0_Samples then make. no error after all\ncan somebody help me... i was working on this setting for almost 24 hours....\nEnvironment info\nOperating System:\ngcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.4)\n64 bit\nInstalled version of CUDA and cuDNN:\n(please attach the output of ls -l /path/to/cuda/lib/libcud*):\ni can't use the command\nbut the packages are cuda-repo-ubuntu1604-8-0-local-ga2_8.0.61-1_amd64.deb\ncudnn-8.0-linux-x64-v6.0.tgz\nIf installed from binary pip package, provide:\nhttps://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.11.0-cp27-none-linux_x86_64.whl\n\nA link to the pip package you installed:\nThe output from python -c \"import tensorflow; print(tensorflow.__version__)\".\n\nIf installed from source, provide\n\nThe commit hash (git rev-parse HEAD)\nThe output of bazel version\nBuild label: 0.4.5\nBuild target: bazel-out/local-fastbuild/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar\nBuild time: Thu Mar 16 12:19:38 2017 (1489666778)\nBuild timestamp: 1489666778\nBuild timestamp as int: 1489666778\n\nIf possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\nWhat other attempted solutions have you tried?\ni searched the manual of th\ncd \nexport LD_LIBRARY_PATH=pwd:$LD_LIBRARY_PATH\nAdd <installpath> to your build and link process by adding -I<installpath> to your compile\nline and -L<installpath> -lcudnn to your link line.\n\nLogs or other output that would be helpful\n(If logs are large, please upload as attachment or provide link).", "body": "\r\n\r\n### What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?\r\ni was installing tensorflow  GPU version on ubuntu x86-64\r\nbut I found an error:\r\n\r\n` >>> import tensorflow as tf\r\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcublas.so.8.0 locally\r\nI tensorflow/stream_executor/dso_loader.cc:126] Couldn't open CUDA library libcudnn.so.5. LD_LIBRARY_PATH: /home/lunasdejavu/Downloads:/usr/local/cuda-8.0/lib64\r\nI tensorflow/stream_executor/cuda/cuda_dnn.cc:3517] Unable to load cuDNN DSO\r\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcufft.so.8.0 locally\r\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcuda.so.1 locally\r\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcurand.so.8.0 locally`\r\n\r\ni tried to install again and again follow the instructions \r\nit is still useless.\r\nI tried the NVIDIA_CUDA-8.0_Samples then make. no error after `all`\r\n\r\ncan somebody help me... i was working on this setting for almost 24 hours....\r\n### Environment info\r\nOperating System:\r\ngcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.4) \r\n64 bit\r\nInstalled version of CUDA and cuDNN: \r\n(please attach the output of `ls -l /path/to/cuda/lib/libcud*`):\r\ni can't use the command\r\n\r\nbut the packages are cuda-repo-ubuntu1604-8-0-local-ga2_8.0.61-1_amd64.deb\r\ncudnn-8.0-linux-x64-v6.0.tgz\r\n\r\nIf installed from binary pip package, provide:\r\nhttps://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.11.0-cp27-none-linux_x86_64.whl\r\n1. A link to the pip package you installed:\r\n2. The output from `python -c \"import tensorflow; print(tensorflow.__version__)\"`.\r\n\r\nIf installed from source, provide \r\n \r\n1. The commit hash (`git rev-parse HEAD`)\r\n2. The output of `bazel version`\r\nBuild label: 0.4.5\r\nBuild target: bazel-out/local-fastbuild/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar\r\nBuild time: Thu Mar 16 12:19:38 2017 (1489666778)\r\nBuild timestamp: 1489666778\r\nBuild timestamp as int: 1489666778\r\n\r\n### If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\r\n\r\n\r\n### What other attempted solutions have you tried?\r\ni searched the manual of th\r\n cd <installpath>\r\n    export LD_LIBRARY_PATH=`pwd`:$LD_LIBRARY_PATH\r\n\r\n    Add <installpath> to your build and link process by adding -I<installpath> to your compile\r\n    line and -L<installpath> -lcudnn to your link line.\r\n### Logs or other output that would be helpful\r\n(If logs are large, please upload as attachment or provide link).\r\n"}