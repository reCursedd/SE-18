{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11227", "id": 128532170, "node_id": "MDExOlB1bGxSZXF1ZXN0MTI4NTMyMTcw", "html_url": "https://github.com/tensorflow/tensorflow/pull/11227", "diff_url": "https://github.com/tensorflow/tensorflow/pull/11227.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/11227.patch", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11227", "number": 11227, "state": "closed", "locked": false, "title": "Configure script code reduction (no merge please)", "user": {"login": "hotchkiss87", "id": 7031823, "node_id": "MDQ6VXNlcjcwMzE4MjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/7031823?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hotchkiss87", "html_url": "https://github.com/hotchkiss87", "followers_url": "https://api.github.com/users/hotchkiss87/followers", "following_url": "https://api.github.com/users/hotchkiss87/following{/other_user}", "gists_url": "https://api.github.com/users/hotchkiss87/gists{/gist_id}", "starred_url": "https://api.github.com/users/hotchkiss87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hotchkiss87/subscriptions", "organizations_url": "https://api.github.com/users/hotchkiss87/orgs", "repos_url": "https://api.github.com/users/hotchkiss87/repos", "events_url": "https://api.github.com/users/hotchkiss87/events{/privacy}", "received_events_url": "https://api.github.com/users/hotchkiss87/received_events", "type": "User", "site_admin": false}, "body": "Please don't merge yet.\r\n\r\nThe configure script has a lot of repetition. Adding functions can reduce the number of lines of code, help prevent errors, and make life easier.\r\n\r\nI noticed it was kind of long when editing another part.\r\n\r\nThis adds two functions: build_with and get_path\r\n```bash\r\nfunction build_with {\r\n  # don't change value if it is already set\r\n  if [[ \"$(eval echo \\\"\\$$1\\\")\" ]] ; then\r\n    return\r\n  fi\r\n  local needed=\"$1\"\r\n  local build_ask=\"$2\"\r\n  # default is 'enabled' or 'disabled'\r\n  local default=\"$3\"\r\n\r\n  if [[ \"$4\" ]] ; then\r\n    local build_ans_yes=\"$4\"\r\n    local build_ans_no=\"$5\"\r\n  else\r\n    local build_ans_yes=\"$build_ask support will be enabled for TensorFlow.\"\r\n    local build_ans_no=\"No $build_ans_yes\"\r\n    local build_ask=\"Do you wish to build TensorFlow with $build_ask support?\"\r\n  fi\r\n\r\n  if [[ \"$default\" == \"enabled\" ]] ; then\r\n    local build_ask=\"$build_ask [Y/n] \"\r\n  else\r\n    local build_ask=\"$build_ask [y/N] \"\r\n  fi\r\n\r\n  while true; do\r\n    read -p \"$build_ask\" user_input\r\n\r\n    case \"$user_input\" in\r\n      [Yy]* ) echo \"$build_ans_yes\"\r\n        eval $needed=1\r\n        break;;\r\n      [Nn]* ) echo \"$build_ans_no\"\r\n        eval $needed=0\r\n        break;;\r\n      \"\" ) if [[ \"$default\" == \"enabled\" ]] ; then\r\n          echo \"$build_ans_yes\"\r\n          eval $needed=1\r\n        else\r\n          echo \"$build_ans_no\"\r\n          eval $needed=0\r\n        fi\r\n        break;;\r\n      * ) echo \"Invalid selection: $user_input\";;\r\n    esac\r\n  done\r\n}\r\n```\r\n\r\n```bash\r\nfunction get_path {\r\n  if [[ \"$(eval echo \\\"\\$$1\\\")\" ]] ; then\r\n    return\r\n  fi\r\n  local sys_path=\"$1\"\r\n  local path_for=\"$2\"\r\n  # looking for a path for a bin or lib\r\n  local type_of_path=\"$3\"\r\n  # optional search for bin, array of paths for lib\r\n  local generic_path=\"$4\"\r\n  local default_path=\"\"\r\n\r\n  if [[ \"$type_of_path\" == \"bin\" ]] ; then\r\n    local default_path=\"$(which $path_for || true)\"\r\n    if [[ !\"$default_path\" ]] && [[ \"$generic_path\" ]] ; then\r\n      local default_path=\"$(which $generic_path || true)\"\r\n    fi\r\n    local ask_for_path=\"Please specify the location of $path_for. [Default is $default_path]:\"\r\n  else\r\n    echo \"Possible library path(s): \"\r\n    for x in \"${generic_path[@]}\" ; do\r\n      if [[ \"$x\" ]] && [[ ! \"$default_path\" ]] ; then\r\n        local default_path=\"$x\"\r\n      fi\r\n      echo \"    $x\"\r\n    done\r\n    local ask_for_path=\"Please input the desired $path_for library path to use. [Default is $default_path]:\"\r\n  fi\r\n\r\n  while true; do\r\n    read -p \"$ask_for_path \" $sys_path\r\n\r\n    if [[ ! \"$(eval echo \\$$sys_path)\" ]] ; then\r\n      if [[ -e \"$default_path\" ]] ; then\r\n        eval $sys_path=\"$default_path\"\r\n      elif [[ -e \"$generic_path\" ]] && [[ \"$type_of_path\" == \"bin\" ]] ; then\r\n        eval $sys_path=\"$default_path\"\r\n      else\r\n        echo \"ERROR! I cannot find a default path and one was not specified.\" 1>&2\r\n      fi\r\n    fi\r\n\r\n    if [[ -e \"$(eval echo \\$$sys_path)\" ]] ; then\r\n      if [[ \"$type_of_path\" == \"bin\" ]] && [[ ! -x \"$(eval echo \\$$sys_path)\" ]] ; then\r\n        echo \"ERROR! \\$$sys_path is not executable.\" 1>&2\r\n      else\r\n        break\r\n      fi\r\n    else\r\n      echo \"ERROR! $(eval echo \\$$sys_path) does not seem to be a valid path to $path_for.\" 1>&2\r\n    fi\r\n  done\r\n}\r\n```\r\n\r\nThose functions alone kill ~150 or so lines of code. I was going to do more reducing MKL, but I believe I rebased those changes away due to the discussion in  #11212\r\n\r\nIf possible, I'd like to run tests on this to see if there's any issue with cross compatibility. (I'm not sure what permissions are, and if I can run the tests myself?) I killed another 50 or so from the CUDA area, but I want to try it on a machine with CUDA before running it.\r\n\r\nThe selection below is just to see what versions you're supporting. TensorFlow is pretty new, and you're already using some more recent options in the script. I just wanted to test it to be sure.\r\n```bash\r\ndeclare -A array_test=( [one]=\"position_one\" [two]=\"position_two\" [three]=\"position_three\" )\r\narray_ans=\"\"\r\npositional_test=( one two three )\r\npositional_ans=\"position_oneposition_twoposition_three\"\r\n\r\nfor x in \"${positional_test[@]}\" ; do\r\n  array_ans+=\"$(eval echo \\${array_test[$x]})\"\r\ndone\r\n\r\nif [[ ! \"$array_ans\" == \"$positional_ans\" ]] ; then\r\n  echo \"dec arrays not supported\"\r\n  exit 1\r\nfi\r\n```\r\n\r\nIf that is successful, I can remove another 100 or so lines. It'll (probably) be more readable too, for instance you can just add something like:\r\n```bash\r\ndeclare -A GCP=( [tf_needs]=\"TF_NEED_GCP\" [name]=\"Google Cloud Platform\" [default]=\"disabled\" \\\r\n                                [write_opts]=\"write_gcp\" [enabled]=0 )\r\n```\r\nAnd have it iterate over fields instead of having an entire section of the script that has the same install process as TF_NEED_HDFS.", "created_at": "2017-07-02T20:00:46Z", "updated_at": "2017-07-13T02:44:29Z", "closed_at": "2017-07-13T02:44:29Z", "merged_at": null, "merge_commit_sha": "30ca78e420024054d576bbc20b6dc4486d5a4e80", "assignee": {"login": "yifeif", "id": 1192265, "node_id": "MDQ6VXNlcjExOTIyNjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1192265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yifeif", "html_url": "https://github.com/yifeif", "followers_url": "https://api.github.com/users/yifeif/followers", "following_url": "https://api.github.com/users/yifeif/following{/other_user}", "gists_url": "https://api.github.com/users/yifeif/gists{/gist_id}", "starred_url": "https://api.github.com/users/yifeif/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yifeif/subscriptions", "organizations_url": "https://api.github.com/users/yifeif/orgs", "repos_url": "https://api.github.com/users/yifeif/repos", "events_url": "https://api.github.com/users/yifeif/events{/privacy}", "received_events_url": "https://api.github.com/users/yifeif/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "yifeif", "id": 1192265, "node_id": "MDQ6VXNlcjExOTIyNjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1192265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yifeif", "html_url": "https://github.com/yifeif", "followers_url": "https://api.github.com/users/yifeif/followers", "following_url": "https://api.github.com/users/yifeif/following{/other_user}", "gists_url": "https://api.github.com/users/yifeif/gists{/gist_id}", "starred_url": "https://api.github.com/users/yifeif/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yifeif/subscriptions", "organizations_url": "https://api.github.com/users/yifeif/orgs", "repos_url": "https://api.github.com/users/yifeif/repos", "events_url": "https://api.github.com/users/yifeif/events{/privacy}", "received_events_url": "https://api.github.com/users/yifeif/received_events", "type": "User", "site_admin": false}], "requested_reviewers": [{"login": "yifeif", "id": 1192265, "node_id": "MDQ6VXNlcjExOTIyNjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1192265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yifeif", "html_url": "https://github.com/yifeif", "followers_url": "https://api.github.com/users/yifeif/followers", "following_url": "https://api.github.com/users/yifeif/following{/other_user}", "gists_url": "https://api.github.com/users/yifeif/gists{/gist_id}", "starred_url": "https://api.github.com/users/yifeif/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yifeif/subscriptions", "organizations_url": "https://api.github.com/users/yifeif/orgs", "repos_url": "https://api.github.com/users/yifeif/repos", "events_url": "https://api.github.com/users/yifeif/events{/privacy}", "received_events_url": "https://api.github.com/users/yifeif/received_events", "type": "User", "site_admin": false}, {"login": "gunan", "id": 7946809, "node_id": "MDQ6VXNlcjc5NDY4MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7946809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gunan", "html_url": "https://github.com/gunan", "followers_url": "https://api.github.com/users/gunan/followers", "following_url": "https://api.github.com/users/gunan/following{/other_user}", "gists_url": "https://api.github.com/users/gunan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gunan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gunan/subscriptions", "organizations_url": "https://api.github.com/users/gunan/orgs", "repos_url": "https://api.github.com/users/gunan/repos", "events_url": "https://api.github.com/users/gunan/events{/privacy}", "received_events_url": "https://api.github.com/users/gunan/received_events", "type": "User", "site_admin": false}], "requested_teams": [], "labels": [{"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}], "milestone": null, "commits_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11227/commits", "review_comments_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11227/comments", "review_comment_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11227/comments", "statuses_url": "https://api.github.com/repos/tensorflow/tensorflow/statuses/ed6b273977908161c6b7c2383e2d9eec24c97be3", "head": {"label": "hotchkiss87:config_script_updates", "ref": "config_script_updates", "sha": "ed6b273977908161c6b7c2383e2d9eec24c97be3", "user": {"login": "hotchkiss87", "id": 7031823, "node_id": "MDQ6VXNlcjcwMzE4MjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/7031823?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hotchkiss87", "html_url": "https://github.com/hotchkiss87", "followers_url": "https://api.github.com/users/hotchkiss87/followers", "following_url": "https://api.github.com/users/hotchkiss87/following{/other_user}", "gists_url": "https://api.github.com/users/hotchkiss87/gists{/gist_id}", "starred_url": "https://api.github.com/users/hotchkiss87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hotchkiss87/subscriptions", "organizations_url": "https://api.github.com/users/hotchkiss87/orgs", "repos_url": "https://api.github.com/users/hotchkiss87/repos", "events_url": "https://api.github.com/users/hotchkiss87/events{/privacy}", "received_events_url": "https://api.github.com/users/hotchkiss87/received_events", "type": "User", "site_admin": false}, "repo": {"id": 95972742, "node_id": "MDEwOlJlcG9zaXRvcnk5NTk3Mjc0Mg==", "name": "tensorflow", "full_name": "hotchkiss87/tensorflow", "private": false, "owner": {"login": "hotchkiss87", "id": 7031823, "node_id": "MDQ6VXNlcjcwMzE4MjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/7031823?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hotchkiss87", "html_url": "https://github.com/hotchkiss87", "followers_url": "https://api.github.com/users/hotchkiss87/followers", "following_url": "https://api.github.com/users/hotchkiss87/following{/other_user}", "gists_url": "https://api.github.com/users/hotchkiss87/gists{/gist_id}", "starred_url": "https://api.github.com/users/hotchkiss87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hotchkiss87/subscriptions", "organizations_url": "https://api.github.com/users/hotchkiss87/orgs", "repos_url": "https://api.github.com/users/hotchkiss87/repos", "events_url": "https://api.github.com/users/hotchkiss87/events{/privacy}", "received_events_url": "https://api.github.com/users/hotchkiss87/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/hotchkiss87/tensorflow", "description": "Computation using data flow graphs for scalable machine learning", "fork": true, "url": "https://api.github.com/repos/hotchkiss87/tensorflow", "forks_url": "https://api.github.com/repos/hotchkiss87/tensorflow/forks", "keys_url": "https://api.github.com/repos/hotchkiss87/tensorflow/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/hotchkiss87/tensorflow/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/hotchkiss87/tensorflow/teams", "hooks_url": "https://api.github.com/repos/hotchkiss87/tensorflow/hooks", "issue_events_url": "https://api.github.com/repos/hotchkiss87/tensorflow/issues/events{/number}", "events_url": "https://api.github.com/repos/hotchkiss87/tensorflow/events", "assignees_url": "https://api.github.com/repos/hotchkiss87/tensorflow/assignees{/user}", "branches_url": "https://api.github.com/repos/hotchkiss87/tensorflow/branches{/branch}", "tags_url": "https://api.github.com/repos/hotchkiss87/tensorflow/tags", "blobs_url": "https://api.github.com/repos/hotchkiss87/tensorflow/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/hotchkiss87/tensorflow/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/hotchkiss87/tensorflow/git/refs{/sha}", "trees_url": "https://api.github.com/repos/hotchkiss87/tensorflow/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/hotchkiss87/tensorflow/statuses/{sha}", "languages_url": "https://api.github.com/repos/hotchkiss87/tensorflow/languages", "stargazers_url": "https://api.github.com/repos/hotchkiss87/tensorflow/stargazers", "contributors_url": "https://api.github.com/repos/hotchkiss87/tensorflow/contributors", "subscribers_url": "https://api.github.com/repos/hotchkiss87/tensorflow/subscribers", "subscription_url": "https://api.github.com/repos/hotchkiss87/tensorflow/subscription", "commits_url": "https://api.github.com/repos/hotchkiss87/tensorflow/commits{/sha}", "git_commits_url": "https://api.github.com/repos/hotchkiss87/tensorflow/git/commits{/sha}", "comments_url": "https://api.github.com/repos/hotchkiss87/tensorflow/comments{/number}", "issue_comment_url": "https://api.github.com/repos/hotchkiss87/tensorflow/issues/comments{/number}", "contents_url": "https://api.github.com/repos/hotchkiss87/tensorflow/contents/{+path}", "compare_url": "https://api.github.com/repos/hotchkiss87/tensorflow/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/hotchkiss87/tensorflow/merges", "archive_url": "https://api.github.com/repos/hotchkiss87/tensorflow/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/hotchkiss87/tensorflow/downloads", "issues_url": "https://api.github.com/repos/hotchkiss87/tensorflow/issues{/number}", "pulls_url": "https://api.github.com/repos/hotchkiss87/tensorflow/pulls{/number}", "milestones_url": "https://api.github.com/repos/hotchkiss87/tensorflow/milestones{/number}", "notifications_url": "https://api.github.com/repos/hotchkiss87/tensorflow/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/hotchkiss87/tensorflow/labels{/name}", "releases_url": "https://api.github.com/repos/hotchkiss87/tensorflow/releases{/id}", "deployments_url": "https://api.github.com/repos/hotchkiss87/tensorflow/deployments", "created_at": "2017-07-01T15:35:52Z", "updated_at": "2017-07-01T15:36:18Z", "pushed_at": "2017-07-02T19:44:36Z", "git_url": "git://github.com/hotchkiss87/tensorflow.git", "ssh_url": "git@github.com:hotchkiss87/tensorflow.git", "clone_url": "https://github.com/hotchkiss87/tensorflow.git", "svn_url": "https://github.com/hotchkiss87/tensorflow", "homepage": "http://tensorflow.org", "size": 112459, "stargazers_count": 0, "watchers_count": 0, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": {"key": "apache-2.0", "name": "Apache License 2.0", "spdx_id": "Apache-2.0", "url": "https://api.github.com/licenses/apache-2.0", "node_id": "MDc6TGljZW5zZTI="}, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "tensorflow:master", "ref": "master", "sha": "fad6cc605436451dad498e54c9718b4d3d096f89", "user": {"login": "tensorflow", "id": 15658638, "node_id": "MDEyOk9yZ2FuaXphdGlvbjE1NjU4NjM4", "avatar_url": "https://avatars1.githubusercontent.com/u/15658638?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tensorflow", "html_url": "https://github.com/tensorflow", "followers_url": "https://api.github.com/users/tensorflow/followers", "following_url": "https://api.github.com/users/tensorflow/following{/other_user}", "gists_url": "https://api.github.com/users/tensorflow/gists{/gist_id}", "starred_url": "https://api.github.com/users/tensorflow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tensorflow/subscriptions", "organizations_url": "https://api.github.com/users/tensorflow/orgs", "repos_url": "https://api.github.com/users/tensorflow/repos", "events_url": "https://api.github.com/users/tensorflow/events{/privacy}", "received_events_url": "https://api.github.com/users/tensorflow/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 45717250, "node_id": "MDEwOlJlcG9zaXRvcnk0NTcxNzI1MA==", "name": "tensorflow", "full_name": "tensorflow/tensorflow", "private": false, "owner": {"login": "tensorflow", "id": 15658638, "node_id": "MDEyOk9yZ2FuaXphdGlvbjE1NjU4NjM4", "avatar_url": "https://avatars1.githubusercontent.com/u/15658638?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tensorflow", "html_url": "https://github.com/tensorflow", "followers_url": "https://api.github.com/users/tensorflow/followers", "following_url": "https://api.github.com/users/tensorflow/following{/other_user}", "gists_url": "https://api.github.com/users/tensorflow/gists{/gist_id}", "starred_url": "https://api.github.com/users/tensorflow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tensorflow/subscriptions", "organizations_url": "https://api.github.com/users/tensorflow/orgs", "repos_url": "https://api.github.com/users/tensorflow/repos", "events_url": "https://api.github.com/users/tensorflow/events{/privacy}", "received_events_url": "https://api.github.com/users/tensorflow/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/tensorflow/tensorflow", "description": "An Open Source Machine Learning Framework for Everyone", "fork": false, "url": "https://api.github.com/repos/tensorflow/tensorflow", "forks_url": "https://api.github.com/repos/tensorflow/tensorflow/forks", "keys_url": "https://api.github.com/repos/tensorflow/tensorflow/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/tensorflow/tensorflow/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/tensorflow/tensorflow/teams", "hooks_url": "https://api.github.com/repos/tensorflow/tensorflow/hooks", "issue_events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/events{/number}", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/events", "assignees_url": "https://api.github.com/repos/tensorflow/tensorflow/assignees{/user}", "branches_url": "https://api.github.com/repos/tensorflow/tensorflow/branches{/branch}", "tags_url": "https://api.github.com/repos/tensorflow/tensorflow/tags", "blobs_url": "https://api.github.com/repos/tensorflow/tensorflow/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/tensorflow/tensorflow/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/tensorflow/tensorflow/git/refs{/sha}", "trees_url": "https://api.github.com/repos/tensorflow/tensorflow/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/tensorflow/tensorflow/statuses/{sha}", "languages_url": "https://api.github.com/repos/tensorflow/tensorflow/languages", "stargazers_url": "https://api.github.com/repos/tensorflow/tensorflow/stargazers", "contributors_url": "https://api.github.com/repos/tensorflow/tensorflow/contributors", "subscribers_url": "https://api.github.com/repos/tensorflow/tensorflow/subscribers", "subscription_url": "https://api.github.com/repos/tensorflow/tensorflow/subscription", "commits_url": "https://api.github.com/repos/tensorflow/tensorflow/commits{/sha}", "git_commits_url": "https://api.github.com/repos/tensorflow/tensorflow/git/commits{/sha}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/comments{/number}", "issue_comment_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments{/number}", "contents_url": "https://api.github.com/repos/tensorflow/tensorflow/contents/{+path}", "compare_url": "https://api.github.com/repos/tensorflow/tensorflow/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/tensorflow/tensorflow/merges", "archive_url": "https://api.github.com/repos/tensorflow/tensorflow/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/tensorflow/tensorflow/downloads", "issues_url": "https://api.github.com/repos/tensorflow/tensorflow/issues{/number}", "pulls_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls{/number}", "milestones_url": "https://api.github.com/repos/tensorflow/tensorflow/milestones{/number}", "notifications_url": "https://api.github.com/repos/tensorflow/tensorflow/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/labels{/name}", "releases_url": "https://api.github.com/repos/tensorflow/tensorflow/releases{/id}", "deployments_url": "https://api.github.com/repos/tensorflow/tensorflow/deployments", "created_at": "2015-11-07T01:19:20Z", "updated_at": "2018-11-25T01:43:55Z", "pushed_at": "2018-11-24T18:40:19Z", "git_url": "git://github.com/tensorflow/tensorflow.git", "ssh_url": "git@github.com:tensorflow/tensorflow.git", "clone_url": "https://github.com/tensorflow/tensorflow.git", "svn_url": "https://github.com/tensorflow/tensorflow", "homepage": "https://tensorflow.org", "size": 284546, "stargazers_count": 115177, "watchers_count": 115177, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 69948, "mirror_url": null, "archived": false, "open_issues_count": 1760, "license": {"key": "apache-2.0", "name": "Apache License 2.0", "spdx_id": "Apache-2.0", "url": "https://api.github.com/licenses/apache-2.0", "node_id": "MDc6TGljZW5zZTI="}, "forks": 69948, "open_issues": 1760, "watchers": 115177, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11227"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/11227"}, "issue": {"href": "https://api.github.com/repos/tensorflow/tensorflow/issues/11227"}, "comments": {"href": "https://api.github.com/repos/tensorflow/tensorflow/issues/11227/comments"}, "review_comments": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11227/comments"}, "review_comment": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11227/commits"}, "statuses": {"href": "https://api.github.com/repos/tensorflow/tensorflow/statuses/ed6b273977908161c6b7c2383e2d9eec24c97be3"}}, "author_association": "NONE", "body_html": "<p>Please don't merge yet.</p>\n<p>The configure script has a lot of repetition. Adding functions can reduce the number of lines of code, help prevent errors, and make life easier.</p>\n<p>I noticed it was kind of long when editing another part.</p>\n<p>This adds two functions: build_with and get_path</p>\n<div class=\"highlight highlight-source-shell\"><pre><span class=\"pl-k\">function</span> <span class=\"pl-en\">build_with</span> {\n  <span class=\"pl-c\"><span class=\"pl-c\">#</span> don't change value if it is already set</span>\n  <span class=\"pl-k\">if</span> [[ <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-s\"><span class=\"pl-pds\">$(</span>eval <span class=\"pl-c1\">echo</span> <span class=\"pl-cce\">\\\"\\$</span><span class=\"pl-smi\">$1</span><span class=\"pl-cce\">\\\"</span><span class=\"pl-pds\">)</span></span><span class=\"pl-pds\">\"</span></span> ]] <span class=\"pl-k\">;</span> <span class=\"pl-k\">then</span>\n    <span class=\"pl-k\">return</span>\n  <span class=\"pl-k\">fi</span>\n  <span class=\"pl-k\">local</span> needed=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$1</span><span class=\"pl-pds\">\"</span></span>\n  <span class=\"pl-k\">local</span> build_ask=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$2</span><span class=\"pl-pds\">\"</span></span>\n  <span class=\"pl-c\"><span class=\"pl-c\">#</span> default is 'enabled' or 'disabled'</span>\n  <span class=\"pl-k\">local</span> default=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$3</span><span class=\"pl-pds\">\"</span></span>\n\n  <span class=\"pl-k\">if</span> [[ <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$4</span><span class=\"pl-pds\">\"</span></span> ]] <span class=\"pl-k\">;</span> <span class=\"pl-k\">then</span>\n    <span class=\"pl-k\">local</span> build_ans_yes=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$4</span><span class=\"pl-pds\">\"</span></span>\n    <span class=\"pl-k\">local</span> build_ans_no=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$5</span><span class=\"pl-pds\">\"</span></span>\n  <span class=\"pl-k\">else</span>\n    <span class=\"pl-k\">local</span> build_ans_yes=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$build_ask</span> support will be enabled for TensorFlow.<span class=\"pl-pds\">\"</span></span>\n    <span class=\"pl-k\">local</span> build_ans_no=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>No <span class=\"pl-smi\">$build_ans_yes</span><span class=\"pl-pds\">\"</span></span>\n    <span class=\"pl-k\">local</span> build_ask=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Do you wish to build TensorFlow with <span class=\"pl-smi\">$build_ask</span> support?<span class=\"pl-pds\">\"</span></span>\n  <span class=\"pl-k\">fi</span>\n\n  <span class=\"pl-k\">if</span> [[ <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$default</span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">==</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>enabled<span class=\"pl-pds\">\"</span></span> ]] <span class=\"pl-k\">;</span> <span class=\"pl-k\">then</span>\n    <span class=\"pl-k\">local</span> build_ask=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$build_ask</span> [Y/n] <span class=\"pl-pds\">\"</span></span>\n  <span class=\"pl-k\">else</span>\n    <span class=\"pl-k\">local</span> build_ask=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$build_ask</span> [y/N] <span class=\"pl-pds\">\"</span></span>\n  <span class=\"pl-k\">fi</span>\n\n  <span class=\"pl-k\">while</span> <span class=\"pl-c1\">true</span><span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span>\n    <span class=\"pl-c1\">read</span> -p <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$build_ask</span><span class=\"pl-pds\">\"</span></span> user_input\n\n    <span class=\"pl-k\">case</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$user_input</span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">in</span>\n      [Yy]<span class=\"pl-k\">*</span> ) <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$build_ans_yes</span><span class=\"pl-pds\">\"</span></span>\n        <span class=\"pl-c1\">eval</span> <span class=\"pl-smi\">$needed</span>=1\n        <span class=\"pl-c1\">break</span>;;\n      [Nn]<span class=\"pl-k\">*</span> ) <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$build_ans_no</span><span class=\"pl-pds\">\"</span></span>\n        <span class=\"pl-c1\">eval</span> <span class=\"pl-smi\">$needed</span>=0\n        <span class=\"pl-c1\">break</span>;;\n      <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span> ) <span class=\"pl-k\">if</span> [[ <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$default</span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">==</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>enabled<span class=\"pl-pds\">\"</span></span> ]] <span class=\"pl-k\">;</span> <span class=\"pl-k\">then</span>\n          <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$build_ans_yes</span><span class=\"pl-pds\">\"</span></span>\n          <span class=\"pl-c1\">eval</span> <span class=\"pl-smi\">$needed</span>=1\n        <span class=\"pl-k\">else</span>\n          <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$build_ans_no</span><span class=\"pl-pds\">\"</span></span>\n          <span class=\"pl-c1\">eval</span> <span class=\"pl-smi\">$needed</span>=0\n        <span class=\"pl-k\">fi</span>\n        <span class=\"pl-c1\">break</span>;;\n      <span class=\"pl-k\">*</span> ) <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Invalid selection: <span class=\"pl-smi\">$user_input</span><span class=\"pl-pds\">\"</span></span>;;\n    <span class=\"pl-k\">esac</span>\n  <span class=\"pl-k\">done</span>\n}</pre></div>\n<div class=\"highlight highlight-source-shell\"><pre><span class=\"pl-k\">function</span> <span class=\"pl-en\">get_path</span> {\n  <span class=\"pl-k\">if</span> [[ <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-s\"><span class=\"pl-pds\">$(</span>eval <span class=\"pl-c1\">echo</span> <span class=\"pl-cce\">\\\"\\$</span><span class=\"pl-smi\">$1</span><span class=\"pl-cce\">\\\"</span><span class=\"pl-pds\">)</span></span><span class=\"pl-pds\">\"</span></span> ]] <span class=\"pl-k\">;</span> <span class=\"pl-k\">then</span>\n    <span class=\"pl-k\">return</span>\n  <span class=\"pl-k\">fi</span>\n  <span class=\"pl-k\">local</span> sys_path=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$1</span><span class=\"pl-pds\">\"</span></span>\n  <span class=\"pl-k\">local</span> path_for=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$2</span><span class=\"pl-pds\">\"</span></span>\n  <span class=\"pl-c\"><span class=\"pl-c\">#</span> looking for a path for a bin or lib</span>\n  <span class=\"pl-k\">local</span> type_of_path=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$3</span><span class=\"pl-pds\">\"</span></span>\n  <span class=\"pl-c\"><span class=\"pl-c\">#</span> optional search for bin, array of paths for lib</span>\n  <span class=\"pl-k\">local</span> generic_path=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$4</span><span class=\"pl-pds\">\"</span></span>\n  <span class=\"pl-k\">local</span> default_path=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>\n\n  <span class=\"pl-k\">if</span> [[ <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$type_of_path</span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">==</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>bin<span class=\"pl-pds\">\"</span></span> ]] <span class=\"pl-k\">;</span> <span class=\"pl-k\">then</span>\n    <span class=\"pl-k\">local</span> default_path=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-s\"><span class=\"pl-pds\">$(</span>which <span class=\"pl-smi\">$path_for</span> <span class=\"pl-k\">||</span> true<span class=\"pl-pds\">)</span></span><span class=\"pl-pds\">\"</span></span>\n    <span class=\"pl-k\">if</span> [[ <span class=\"pl-k\">!</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$default_path</span><span class=\"pl-pds\">\"</span></span> ]] <span class=\"pl-k\">&amp;&amp;</span> [[ <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$generic_path</span><span class=\"pl-pds\">\"</span></span> ]] <span class=\"pl-k\">;</span> <span class=\"pl-k\">then</span>\n      <span class=\"pl-k\">local</span> default_path=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-s\"><span class=\"pl-pds\">$(</span>which <span class=\"pl-smi\">$generic_path</span> <span class=\"pl-k\">||</span> true<span class=\"pl-pds\">)</span></span><span class=\"pl-pds\">\"</span></span>\n    <span class=\"pl-k\">fi</span>\n    <span class=\"pl-k\">local</span> ask_for_path=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Please specify the location of <span class=\"pl-smi\">$path_for</span>. [Default is <span class=\"pl-smi\">$default_path</span>]:<span class=\"pl-pds\">\"</span></span>\n  <span class=\"pl-k\">else</span>\n    <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Possible library path(s): <span class=\"pl-pds\">\"</span></span>\n    <span class=\"pl-k\">for</span> <span class=\"pl-smi\">x</span> <span class=\"pl-k\">in</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">${generic_path[@]}</span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span>\n      <span class=\"pl-k\">if</span> [[ <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$x</span><span class=\"pl-pds\">\"</span></span> ]] <span class=\"pl-k\">&amp;&amp;</span> [[ <span class=\"pl-k\">!</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$default_path</span><span class=\"pl-pds\">\"</span></span> ]] <span class=\"pl-k\">;</span> <span class=\"pl-k\">then</span>\n        <span class=\"pl-k\">local</span> default_path=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$x</span><span class=\"pl-pds\">\"</span></span>\n      <span class=\"pl-k\">fi</span>\n      <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>    <span class=\"pl-smi\">$x</span><span class=\"pl-pds\">\"</span></span>\n    <span class=\"pl-k\">done</span>\n    <span class=\"pl-k\">local</span> ask_for_path=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Please input the desired <span class=\"pl-smi\">$path_for</span> library path to use. [Default is <span class=\"pl-smi\">$default_path</span>]:<span class=\"pl-pds\">\"</span></span>\n  <span class=\"pl-k\">fi</span>\n\n  <span class=\"pl-k\">while</span> <span class=\"pl-c1\">true</span><span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span>\n    <span class=\"pl-c1\">read</span> -p <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$ask_for_path</span> <span class=\"pl-pds\">\"</span></span> <span class=\"pl-smi\">$sys_path</span>\n\n    <span class=\"pl-k\">if</span> [[ <span class=\"pl-k\">!</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-s\"><span class=\"pl-pds\">$(</span>eval <span class=\"pl-c1\">echo</span> <span class=\"pl-cce\">\\$</span><span class=\"pl-smi\">$sys_path</span><span class=\"pl-pds\">)</span></span><span class=\"pl-pds\">\"</span></span> ]] <span class=\"pl-k\">;</span> <span class=\"pl-k\">then</span>\n      <span class=\"pl-k\">if</span> [[ <span class=\"pl-k\">-e</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$default_path</span><span class=\"pl-pds\">\"</span></span> ]] <span class=\"pl-k\">;</span> <span class=\"pl-k\">then</span>\n        <span class=\"pl-c1\">eval</span> <span class=\"pl-smi\">$sys_path</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$default_path</span><span class=\"pl-pds\">\"</span></span>\n      <span class=\"pl-k\">elif</span> [[ <span class=\"pl-k\">-e</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$generic_path</span><span class=\"pl-pds\">\"</span></span> ]] <span class=\"pl-k\">&amp;&amp;</span> [[ <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$type_of_path</span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">==</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>bin<span class=\"pl-pds\">\"</span></span> ]] <span class=\"pl-k\">;</span> <span class=\"pl-k\">then</span>\n        <span class=\"pl-c1\">eval</span> <span class=\"pl-smi\">$sys_path</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$default_path</span><span class=\"pl-pds\">\"</span></span>\n      <span class=\"pl-k\">else</span>\n        <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>ERROR! I cannot find a default path and one was not specified.<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">1&gt;&amp;2</span>\n      <span class=\"pl-k\">fi</span>\n    <span class=\"pl-k\">fi</span>\n\n    <span class=\"pl-k\">if</span> [[ <span class=\"pl-k\">-e</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-s\"><span class=\"pl-pds\">$(</span>eval <span class=\"pl-c1\">echo</span> <span class=\"pl-cce\">\\$</span><span class=\"pl-smi\">$sys_path</span><span class=\"pl-pds\">)</span></span><span class=\"pl-pds\">\"</span></span> ]] <span class=\"pl-k\">;</span> <span class=\"pl-k\">then</span>\n      <span class=\"pl-k\">if</span> [[ <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$type_of_path</span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">==</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>bin<span class=\"pl-pds\">\"</span></span> ]] <span class=\"pl-k\">&amp;&amp;</span> [[ <span class=\"pl-k\">!</span> <span class=\"pl-k\">-x</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-s\"><span class=\"pl-pds\">$(</span>eval <span class=\"pl-c1\">echo</span> <span class=\"pl-cce\">\\$</span><span class=\"pl-smi\">$sys_path</span><span class=\"pl-pds\">)</span></span><span class=\"pl-pds\">\"</span></span> ]] <span class=\"pl-k\">;</span> <span class=\"pl-k\">then</span>\n        <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>ERROR! <span class=\"pl-cce\">\\$</span><span class=\"pl-smi\">$sys_path</span> is not executable.<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">1&gt;&amp;2</span>\n      <span class=\"pl-k\">else</span>\n        <span class=\"pl-c1\">break</span>\n      <span class=\"pl-k\">fi</span>\n    <span class=\"pl-k\">else</span>\n      <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>ERROR! <span class=\"pl-s\"><span class=\"pl-pds\">$(</span>eval <span class=\"pl-c1\">echo</span> <span class=\"pl-cce\">\\$</span><span class=\"pl-smi\">$sys_path</span><span class=\"pl-pds\">)</span></span> does not seem to be a valid path to <span class=\"pl-smi\">$path_for</span>.<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">1&gt;&amp;2</span>\n    <span class=\"pl-k\">fi</span>\n  <span class=\"pl-k\">done</span>\n}</pre></div>\n<p>Those functions alone kill ~150 or so lines of code. I was going to do more reducing MKL, but I believe I rebased those changes away due to the discussion in  <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"239987218\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/11212\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/tensorflow/tensorflow/pull/11212/hovercard\" href=\"https://github.com/tensorflow/tensorflow/pull/11212\">#11212</a></p>\n<p>If possible, I'd like to run tests on this to see if there's any issue with cross compatibility. (I'm not sure what permissions are, and if I can run the tests myself?) I killed another 50 or so from the CUDA area, but I want to try it on a machine with CUDA before running it.</p>\n<p>The selection below is just to see what versions you're supporting. TensorFlow is pretty new, and you're already using some more recent options in the script. I just wanted to test it to be sure.</p>\n<div class=\"highlight highlight-source-shell\"><pre><span class=\"pl-k\">declare</span> -A array_test=( [one]=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>position_one<span class=\"pl-pds\">\"</span></span> [two]=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>position_two<span class=\"pl-pds\">\"</span></span> [three]=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>position_three<span class=\"pl-pds\">\"</span></span> )\narray_ans=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>\npositional_test=( one two three )\npositional_ans=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>position_oneposition_twoposition_three<span class=\"pl-pds\">\"</span></span>\n\n<span class=\"pl-k\">for</span> <span class=\"pl-smi\">x</span> <span class=\"pl-k\">in</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">${positional_test[@]}</span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span>\n  array_ans+=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-s\"><span class=\"pl-pds\">$(</span>eval <span class=\"pl-c1\">echo</span> <span class=\"pl-cce\">\\$</span>{array_test[<span class=\"pl-smi\">$x</span>]}<span class=\"pl-pds\">)</span></span><span class=\"pl-pds\">\"</span></span>\n<span class=\"pl-k\">done</span>\n\n<span class=\"pl-k\">if</span> [[ <span class=\"pl-k\">!</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$array_ans</span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">==</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">$positional_ans</span><span class=\"pl-pds\">\"</span></span> ]] <span class=\"pl-k\">;</span> <span class=\"pl-k\">then</span>\n  <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>dec arrays not supported<span class=\"pl-pds\">\"</span></span>\n  <span class=\"pl-c1\">exit</span> 1\n<span class=\"pl-k\">fi</span></pre></div>\n<p>If that is successful, I can remove another 100 or so lines. It'll (probably) be more readable too, for instance you can just add something like:</p>\n<div class=\"highlight highlight-source-shell\"><pre><span class=\"pl-k\">declare</span> -A GCP=( [tf_needs]=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>TF_NEED_GCP<span class=\"pl-pds\">\"</span></span> [name]=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Google Cloud Platform<span class=\"pl-pds\">\"</span></span> [default]=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>disabled<span class=\"pl-pds\">\"</span></span> \\\n                                [write_opts]=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>write_gcp<span class=\"pl-pds\">\"</span></span> [enabled]=0 )</pre></div>\n<p>And have it iterate over fields instead of having an entire section of the script that has the same install process as TF_NEED_HDFS.</p>", "body_text": "Please don't merge yet.\nThe configure script has a lot of repetition. Adding functions can reduce the number of lines of code, help prevent errors, and make life easier.\nI noticed it was kind of long when editing another part.\nThis adds two functions: build_with and get_path\nfunction build_with {\n  # don't change value if it is already set\n  if [[ \"$(eval echo \\\"\\$$1\\\")\" ]] ; then\n    return\n  fi\n  local needed=\"$1\"\n  local build_ask=\"$2\"\n  # default is 'enabled' or 'disabled'\n  local default=\"$3\"\n\n  if [[ \"$4\" ]] ; then\n    local build_ans_yes=\"$4\"\n    local build_ans_no=\"$5\"\n  else\n    local build_ans_yes=\"$build_ask support will be enabled for TensorFlow.\"\n    local build_ans_no=\"No $build_ans_yes\"\n    local build_ask=\"Do you wish to build TensorFlow with $build_ask support?\"\n  fi\n\n  if [[ \"$default\" == \"enabled\" ]] ; then\n    local build_ask=\"$build_ask [Y/n] \"\n  else\n    local build_ask=\"$build_ask [y/N] \"\n  fi\n\n  while true; do\n    read -p \"$build_ask\" user_input\n\n    case \"$user_input\" in\n      [Yy]* ) echo \"$build_ans_yes\"\n        eval $needed=1\n        break;;\n      [Nn]* ) echo \"$build_ans_no\"\n        eval $needed=0\n        break;;\n      \"\" ) if [[ \"$default\" == \"enabled\" ]] ; then\n          echo \"$build_ans_yes\"\n          eval $needed=1\n        else\n          echo \"$build_ans_no\"\n          eval $needed=0\n        fi\n        break;;\n      * ) echo \"Invalid selection: $user_input\";;\n    esac\n  done\n}\nfunction get_path {\n  if [[ \"$(eval echo \\\"\\$$1\\\")\" ]] ; then\n    return\n  fi\n  local sys_path=\"$1\"\n  local path_for=\"$2\"\n  # looking for a path for a bin or lib\n  local type_of_path=\"$3\"\n  # optional search for bin, array of paths for lib\n  local generic_path=\"$4\"\n  local default_path=\"\"\n\n  if [[ \"$type_of_path\" == \"bin\" ]] ; then\n    local default_path=\"$(which $path_for || true)\"\n    if [[ !\"$default_path\" ]] && [[ \"$generic_path\" ]] ; then\n      local default_path=\"$(which $generic_path || true)\"\n    fi\n    local ask_for_path=\"Please specify the location of $path_for. [Default is $default_path]:\"\n  else\n    echo \"Possible library path(s): \"\n    for x in \"${generic_path[@]}\" ; do\n      if [[ \"$x\" ]] && [[ ! \"$default_path\" ]] ; then\n        local default_path=\"$x\"\n      fi\n      echo \"    $x\"\n    done\n    local ask_for_path=\"Please input the desired $path_for library path to use. [Default is $default_path]:\"\n  fi\n\n  while true; do\n    read -p \"$ask_for_path \" $sys_path\n\n    if [[ ! \"$(eval echo \\$$sys_path)\" ]] ; then\n      if [[ -e \"$default_path\" ]] ; then\n        eval $sys_path=\"$default_path\"\n      elif [[ -e \"$generic_path\" ]] && [[ \"$type_of_path\" == \"bin\" ]] ; then\n        eval $sys_path=\"$default_path\"\n      else\n        echo \"ERROR! I cannot find a default path and one was not specified.\" 1>&2\n      fi\n    fi\n\n    if [[ -e \"$(eval echo \\$$sys_path)\" ]] ; then\n      if [[ \"$type_of_path\" == \"bin\" ]] && [[ ! -x \"$(eval echo \\$$sys_path)\" ]] ; then\n        echo \"ERROR! \\$$sys_path is not executable.\" 1>&2\n      else\n        break\n      fi\n    else\n      echo \"ERROR! $(eval echo \\$$sys_path) does not seem to be a valid path to $path_for.\" 1>&2\n    fi\n  done\n}\nThose functions alone kill ~150 or so lines of code. I was going to do more reducing MKL, but I believe I rebased those changes away due to the discussion in  #11212\nIf possible, I'd like to run tests on this to see if there's any issue with cross compatibility. (I'm not sure what permissions are, and if I can run the tests myself?) I killed another 50 or so from the CUDA area, but I want to try it on a machine with CUDA before running it.\nThe selection below is just to see what versions you're supporting. TensorFlow is pretty new, and you're already using some more recent options in the script. I just wanted to test it to be sure.\ndeclare -A array_test=( [one]=\"position_one\" [two]=\"position_two\" [three]=\"position_three\" )\narray_ans=\"\"\npositional_test=( one two three )\npositional_ans=\"position_oneposition_twoposition_three\"\n\nfor x in \"${positional_test[@]}\" ; do\n  array_ans+=\"$(eval echo \\${array_test[$x]})\"\ndone\n\nif [[ ! \"$array_ans\" == \"$positional_ans\" ]] ; then\n  echo \"dec arrays not supported\"\n  exit 1\nfi\nIf that is successful, I can remove another 100 or so lines. It'll (probably) be more readable too, for instance you can just add something like:\ndeclare -A GCP=( [tf_needs]=\"TF_NEED_GCP\" [name]=\"Google Cloud Platform\" [default]=\"disabled\" \\\n                                [write_opts]=\"write_gcp\" [enabled]=0 )\nAnd have it iterate over fields instead of having an entire section of the script that has the same install process as TF_NEED_HDFS.", "merged": false, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": null, "comments": 6, "review_comments": 0, "maintainer_can_modify": false, "commits": 24, "additions": 381, "deletions": 531, "changed_files": 1}