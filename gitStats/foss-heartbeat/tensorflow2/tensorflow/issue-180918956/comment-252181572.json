{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/252181572", "html_url": "https://github.com/tensorflow/tensorflow/issues/4757#issuecomment-252181572", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4757", "id": 252181572, "node_id": "MDEyOklzc3VlQ29tbWVudDI1MjE4MTU3Mg==", "user": {"login": "chenghuige", "id": 6323467, "node_id": "MDQ6VXNlcjYzMjM0Njc=", "avatar_url": "https://avatars0.githubusercontent.com/u/6323467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenghuige", "html_url": "https://github.com/chenghuige", "followers_url": "https://api.github.com/users/chenghuige/followers", "following_url": "https://api.github.com/users/chenghuige/following{/other_user}", "gists_url": "https://api.github.com/users/chenghuige/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenghuige/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenghuige/subscriptions", "organizations_url": "https://api.github.com/users/chenghuige/orgs", "repos_url": "https://api.github.com/users/chenghuige/repos", "events_url": "https://api.github.com/users/chenghuige/events{/privacy}", "received_events_url": "https://api.github.com/users/chenghuige/received_events", "type": "User", "site_admin": false}, "created_at": "2016-10-07T08:24:58Z", "updated_at": "2016-10-07T22:21:12Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5453737\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/tatatodd\">@tatatodd</a> you can see my example code of<br>\npython read-renamed-buildgraph.py it actually works if not reading using meta graph.</p>\n<p>from 'how to' of tensorflow.org</p>\n<p><a href=\"https://www.tensorflow.org/versions/r0.11/how_tos/variables/index.html#saving-and-restoring\" rel=\"nofollow\">saving-and-restoring</a></p>\n<pre><code># Create some variables.\nv1 = tf.Variable(..., name=\"v1\")\nv2 = tf.Variable(..., name=\"v2\")\n...\n# Add ops to save and restore only 'v2' using the name \"my_v2\"\nsaver = tf.train.Saver({\"my_v2\": v2})\n# Use the saver object normally after that.\n...\n</code></pre>\n<p>Actually by doing this I can load two same models(models with same graph and just different variable values like bow model of step 1 and step 100) into the same session.<br>\nI assume by doing this I save variable using new name. So to avoid loading two models with same weight.</p>\n<p>So could I achive this without having to reload the model building graph from scratch ? Just load from meta graph?</p>", "body_text": "@tatatodd you can see my example code of\npython read-renamed-buildgraph.py it actually works if not reading using meta graph.\nfrom 'how to' of tensorflow.org\nsaving-and-restoring\n# Create some variables.\nv1 = tf.Variable(..., name=\"v1\")\nv2 = tf.Variable(..., name=\"v2\")\n...\n# Add ops to save and restore only 'v2' using the name \"my_v2\"\nsaver = tf.train.Saver({\"my_v2\": v2})\n# Use the saver object normally after that.\n...\n\nActually by doing this I can load two same models(models with same graph and just different variable values like bow model of step 1 and step 100) into the same session.\nI assume by doing this I save variable using new name. So to avoid loading two models with same weight.\nSo could I achive this without having to reload the model building graph from scratch ? Just load from meta graph?", "body": "@tatatodd you can see my example code of  \npython read-renamed-buildgraph.py it actually works if not reading using meta graph.\n\nfrom 'how to' of tensorflow.org\n\n[saving-and-restoring](https://www.tensorflow.org/versions/r0.11/how_tos/variables/index.html#saving-and-restoring)\n\n```\n# Create some variables.\nv1 = tf.Variable(..., name=\"v1\")\nv2 = tf.Variable(..., name=\"v2\")\n...\n# Add ops to save and restore only 'v2' using the name \"my_v2\"\nsaver = tf.train.Saver({\"my_v2\": v2})\n# Use the saver object normally after that.\n...\n```\n\nActually by doing this I can load two same models(models with same graph and just different variable values like bow model of step 1 and step 100) into the same session.\nI assume by doing this I save variable using new name. So to avoid loading two models with same weight.\n\nSo could I achive this without having to reload the model building graph from scratch ? Just load from meta graph?\n"}