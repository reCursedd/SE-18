{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/252101689", "html_url": "https://github.com/tensorflow/tensorflow/issues/4757#issuecomment-252101689", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4757", "id": 252101689, "node_id": "MDEyOklzc3VlQ29tbWVudDI1MjEwMTY4OQ==", "user": {"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}, "created_at": "2016-10-06T22:03:31Z", "updated_at": "2016-10-06T22:03:31Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6323467\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/chenghuige\">@chenghuige</a> The problem is in your second step <code>rename-scope.py</code>, where you run the following two lines:</p>\n<pre><code>out_vars = {v.name[:v.name.rfind(':')].replace('old', 'new', 1): v for v in src_vars}\ntf.train.Saver(var_list=out_vars).save(sess, '/tmp/new.model')\n</code></pre>\n<p>I think you're assuming that this step is sufficient to rename the <code>old/w</code> variable to <code>new/w</code>.  In reality it's not.  Note that the python string replace method returns a copy of the string, and doesn't mutate the string itself:<br>\n<a href=\"https://docs.python.org/2/library/string.html#string.replace\" rel=\"nofollow\">https://docs.python.org/2/library/string.html#string.replace</a></p>\n<p>What are you actually trying to do?</p>", "body_text": "@chenghuige The problem is in your second step rename-scope.py, where you run the following two lines:\nout_vars = {v.name[:v.name.rfind(':')].replace('old', 'new', 1): v for v in src_vars}\ntf.train.Saver(var_list=out_vars).save(sess, '/tmp/new.model')\n\nI think you're assuming that this step is sufficient to rename the old/w variable to new/w.  In reality it's not.  Note that the python string replace method returns a copy of the string, and doesn't mutate the string itself:\nhttps://docs.python.org/2/library/string.html#string.replace\nWhat are you actually trying to do?", "body": "@chenghuige The problem is in your second step `rename-scope.py`, where you run the following two lines:\n\n```\nout_vars = {v.name[:v.name.rfind(':')].replace('old', 'new', 1): v for v in src_vars}\ntf.train.Saver(var_list=out_vars).save(sess, '/tmp/new.model')\n```\n\nI think you're assuming that this step is sufficient to rename the `old/w` variable to `new/w`.  In reality it's not.  Note that the python string replace method returns a copy of the string, and doesn't mutate the string itself:\nhttps://docs.python.org/2/library/string.html#string.replace\n\nWhat are you actually trying to do?\n"}