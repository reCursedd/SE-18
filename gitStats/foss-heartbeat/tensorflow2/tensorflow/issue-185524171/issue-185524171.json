{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5223", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5223/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5223/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5223/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/5223", "id": 185524171, "node_id": "MDU6SXNzdWUxODU1MjQxNzE=", "number": 5223, "title": "dynamic_RNN fails on mac with unspecified batch_Size", "user": {"login": "pfaucon", "id": 3473919, "node_id": "MDQ6VXNlcjM0NzM5MTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/3473919?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pfaucon", "html_url": "https://github.com/pfaucon", "followers_url": "https://api.github.com/users/pfaucon/followers", "following_url": "https://api.github.com/users/pfaucon/following{/other_user}", "gists_url": "https://api.github.com/users/pfaucon/gists{/gist_id}", "starred_url": "https://api.github.com/users/pfaucon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pfaucon/subscriptions", "organizations_url": "https://api.github.com/users/pfaucon/orgs", "repos_url": "https://api.github.com/users/pfaucon/repos", "events_url": "https://api.github.com/users/pfaucon/events{/privacy}", "received_events_url": "https://api.github.com/users/pfaucon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-10-26T22:11:30Z", "updated_at": "2017-02-09T22:02:05Z", "closed_at": "2016-10-29T22:48:15Z", "author_association": "NONE", "body_html": "<p>tl;dr:<br>\ndynamic_rnn fails on OS X with unspecified batch_size but works fine on Ubuntu 14.04/Python3.4.3.  It seems that on OS X the 'None != \"?\"' evaluates poorly, then at some point in ops/rnn.py +918 this equality fails:<br>\nif const_batch_size != got_batch_size:<br>\n(i.e. None != Dimension(\"?\"))</p>\n<p>My best guess is that Dimension(\"?\") is hacked in such a way that any comparison using it returns some fake None which for some reason on OSX + python 3.4 means true (I tried explicitly \"if None:\" as a sanity check, it evaluates as false).  For now I've modified the offending code to be:<br>\nif const_batch_size != got_batch_size:<br>\nif  (const_batch_size != got_batch_size) == got_batch_size or (const_batch_size != got_batch_size) == const_batch_size:<br>\nprint(\"weird dimensions stuff in ops/rnn.py, what the shit python?\")<br>\ncontinue<br>\nraise ValueError(<br>\n\"Batch_size is not the same for all the elements in the input.\")</p>\n<p>This</p>\n<h3>Environment info</h3>\n<p>Operating System:<br>\nOS X 10.12<br>\nPython 3.4.1<br>\nInstalled version of CUDA and cuDNN:<br>\n(please attach the output of <code>ls -l /path/to/cuda/lib/libcud*</code>):<br>\nN/A (CPU version)</p>\n<p>If installed from binary pip package, provide:<br>\n0.11.0rc1 (just installed wheel)<br>\nalso fails on 0.10.0rc1, 0.10.0 (though it works on 0.10.0 on Linux)</p>\n<h3>If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code).  It may work with less but this was a simpl</h3>\n<p>import tensorflow as tf</p>\n<p>input_size = 256<br>\nlength = 100<br>\nnum_classes = 64</p>\n<p>data = tf.placeholder(tf.float32, [None, length, input_size])<br>\ntarget = tf.placeholder(tf.float32, [None, length, num_classes])</p>\n<p>max_length = int(target.get_shape()[1])<br>\nnum_classes = int(target.get_shape()[2])</p>\n<p>network = tf.nn.rnn_cell.GRUCell(200)<br>\noutput, new_state = tf.nn.dynamic_rnn(network, data, dtype=tf.float32)</p>\n<h3>What other attempted solutions have you tried?</h3>\n<p>Works fine on my Linux box with or without GPU</p>\n<h3>Logs or other output that would be helpful</h3>\n<p>(If logs are large, please upload as attachment or provide link).<br>\nTraceback (most recent call last):<br>\nFile \"&lt;my_directory&gt;/tensorflow_mac_fail_test.py\", line 18, in <br>\noutput, new_state = tf.nn.dynamic_rnn(network, data, dtype=tf.float32)<br>\nFile \"/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/tensorflow/python/ops/rnn.py\", line 836, in dynamic_rnn<br>\ndtype=dtype)<br>\nFile \"/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/tensorflow/python/ops/rnn.py\", line 920, in _dynamic_rnn_loop<br>\n\"Batch_size is not the same for all the elements in the input.\")<br>\nValueError: Batch_size is not the same for all the elements in the input.</p>", "body_text": "tl;dr:\ndynamic_rnn fails on OS X with unspecified batch_size but works fine on Ubuntu 14.04/Python3.4.3.  It seems that on OS X the 'None != \"?\"' evaluates poorly, then at some point in ops/rnn.py +918 this equality fails:\nif const_batch_size != got_batch_size:\n(i.e. None != Dimension(\"?\"))\nMy best guess is that Dimension(\"?\") is hacked in such a way that any comparison using it returns some fake None which for some reason on OSX + python 3.4 means true (I tried explicitly \"if None:\" as a sanity check, it evaluates as false).  For now I've modified the offending code to be:\nif const_batch_size != got_batch_size:\nif  (const_batch_size != got_batch_size) == got_batch_size or (const_batch_size != got_batch_size) == const_batch_size:\nprint(\"weird dimensions stuff in ops/rnn.py, what the shit python?\")\ncontinue\nraise ValueError(\n\"Batch_size is not the same for all the elements in the input.\")\nThis\nEnvironment info\nOperating System:\nOS X 10.12\nPython 3.4.1\nInstalled version of CUDA and cuDNN:\n(please attach the output of ls -l /path/to/cuda/lib/libcud*):\nN/A (CPU version)\nIf installed from binary pip package, provide:\n0.11.0rc1 (just installed wheel)\nalso fails on 0.10.0rc1, 0.10.0 (though it works on 0.10.0 on Linux)\nIf possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code).  It may work with less but this was a simpl\nimport tensorflow as tf\ninput_size = 256\nlength = 100\nnum_classes = 64\ndata = tf.placeholder(tf.float32, [None, length, input_size])\ntarget = tf.placeholder(tf.float32, [None, length, num_classes])\nmax_length = int(target.get_shape()[1])\nnum_classes = int(target.get_shape()[2])\nnetwork = tf.nn.rnn_cell.GRUCell(200)\noutput, new_state = tf.nn.dynamic_rnn(network, data, dtype=tf.float32)\nWhat other attempted solutions have you tried?\nWorks fine on my Linux box with or without GPU\nLogs or other output that would be helpful\n(If logs are large, please upload as attachment or provide link).\nTraceback (most recent call last):\nFile \"<my_directory>/tensorflow_mac_fail_test.py\", line 18, in \noutput, new_state = tf.nn.dynamic_rnn(network, data, dtype=tf.float32)\nFile \"/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/tensorflow/python/ops/rnn.py\", line 836, in dynamic_rnn\ndtype=dtype)\nFile \"/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/tensorflow/python/ops/rnn.py\", line 920, in _dynamic_rnn_loop\n\"Batch_size is not the same for all the elements in the input.\")\nValueError: Batch_size is not the same for all the elements in the input.", "body": "tl;dr:\ndynamic_rnn fails on OS X with unspecified batch_size but works fine on Ubuntu 14.04/Python3.4.3.  It seems that on OS X the 'None != \"?\"' evaluates poorly, then at some point in ops/rnn.py +918 this equality fails:\n if const_batch_size != got_batch_size:\n(i.e. None != Dimension(\"?\"))\n\nMy best guess is that Dimension(\"?\") is hacked in such a way that any comparison using it returns some fake None which for some reason on OSX + python 3.4 means true (I tried explicitly \"if None:\" as a sanity check, it evaluates as false).  For now I've modified the offending code to be: \nif const_batch_size != got_batch_size:\n      if  (const_batch_size != got_batch_size) == got_batch_size or (const_batch_size != got_batch_size) == const_batch_size:\n            print(\"weird dimensions stuff in ops/rnn.py, what the shit python?\")\n            continue\n      raise ValueError(\n          \"Batch_size is not the same for all the elements in the input.\")\n\nThis\n### Environment info\n\nOperating System:\nOS X 10.12\nPython 3.4.1\nInstalled version of CUDA and cuDNN: \n(please attach the output of `ls -l /path/to/cuda/lib/libcud*`):\nN/A (CPU version)\n\nIf installed from binary pip package, provide:\n0.11.0rc1 (just installed wheel)\nalso fails on 0.10.0rc1, 0.10.0 (though it works on 0.10.0 on Linux)\n### If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code).  It may work with less but this was a simpl\n\nimport tensorflow as tf\n\ninput_size = 256\nlength = 100\nnum_classes = 64\n\ndata = tf.placeholder(tf.float32, [None, length, input_size])\ntarget = tf.placeholder(tf.float32, [None, length, num_classes])\n\nmax_length = int(target.get_shape()[1])\nnum_classes = int(target.get_shape()[2])\n\nnetwork = tf.nn.rnn_cell.GRUCell(200)\noutput, new_state = tf.nn.dynamic_rnn(network, data, dtype=tf.float32)\n### What other attempted solutions have you tried?\n\nWorks fine on my Linux box with or without GPU\n### Logs or other output that would be helpful\n\n(If logs are large, please upload as attachment or provide link).\nTraceback (most recent call last):\n  File \"<my_directory>/tensorflow_mac_fail_test.py\", line 18, in <module>\n    output, new_state = tf.nn.dynamic_rnn(network, data, dtype=tf.float32)\n  File \"/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/tensorflow/python/ops/rnn.py\", line 836, in dynamic_rnn\n    dtype=dtype)\n  File \"/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/tensorflow/python/ops/rnn.py\", line 920, in _dynamic_rnn_loop\n    \"Batch_size is not the same for all the elements in the input.\")\nValueError: Batch_size is not the same for all the elements in the input.\n"}