{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/101855953", "pull_request_review_id": 22601783, "id": 101855953, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMTg1NTk1Mw==", "diff_hunk": "@@ -132,6 +133,10 @@ Status GrpcServer::Init() {\n         return errors::InvalidArgument(\n             \"Could not parse port for local server from \\\"\", iter->second,\n             \"\\\"\");\n+      } else if (!port::IsValidIpAddr(hostname_port[0])) {\n+        return errors::InvalidArgument(\n+            \"Invalid ip address for local server from \\\"\", iter->second,\n+            \"\\\"\");", "path": "tensorflow/core/distributed_runtime/rpc/grpc_server_lib.cc", "position": 15, "original_position": 15, "commit_id": "0c3145807615f96147cb56337d5b8ea60915e4b7", "original_commit_id": "0c3145807615f96147cb56337d5b8ea60915e4b7", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "body": "I don't think this solves issue #7328. This is only checking the address for the local task (which we then overwrite with `0.0.0.0` or `localhost` later in this method). Since the process running this code will (or at least should) never attempt to connect to itself, I very much doubt that it's the source of the hanging.\r\n\r\nIt'd probably be more valuable to add validation for the addresses that get added to the `GrpcChannelSpec` (on L180). These are the addresses that will be used for contacting other workers, which is probably where your code was blocking.\r\n\r\nThe more important place for validation would be when you build the `GrpcChannelSpec`", "created_at": "2017-02-17T22:00:10Z", "updated_at": "2017-02-17T22:02:27Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/7532#discussion_r101855953", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/7532", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/101855953"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/7532#discussion_r101855953"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/7532"}}, "body_html": "<p>I don't think this solves issue <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"205878131\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/7328\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/7328/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/7328\">#7328</a>. This is only checking the address for the local task (which we then overwrite with <code>0.0.0.0</code> or <code>localhost</code> later in this method). Since the process running this code will (or at least should) never attempt to connect to itself, I very much doubt that it's the source of the hanging.</p>\n<p>It'd probably be more valuable to add validation for the addresses that get added to the <code>GrpcChannelSpec</code> (on L180). These are the addresses that will be used for contacting other workers, which is probably where your code was blocking.</p>\n<p>The more important place for validation would be when you build the <code>GrpcChannelSpec</code></p>", "body_text": "I don't think this solves issue #7328. This is only checking the address for the local task (which we then overwrite with 0.0.0.0 or localhost later in this method). Since the process running this code will (or at least should) never attempt to connect to itself, I very much doubt that it's the source of the hanging.\nIt'd probably be more valuable to add validation for the addresses that get added to the GrpcChannelSpec (on L180). These are the addresses that will be used for contacting other workers, which is probably where your code was blocking.\nThe more important place for validation would be when you build the GrpcChannelSpec"}