{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/320142984", "html_url": "https://github.com/tensorflow/tensorflow/pull/11392#issuecomment-320142984", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11392", "id": 320142984, "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDE0Mjk4NA==", "user": {"login": "byronyi", "id": 2613663, "node_id": "MDQ6VXNlcjI2MTM2NjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/2613663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/byronyi", "html_url": "https://github.com/byronyi", "followers_url": "https://api.github.com/users/byronyi/followers", "following_url": "https://api.github.com/users/byronyi/following{/other_user}", "gists_url": "https://api.github.com/users/byronyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/byronyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/byronyi/subscriptions", "organizations_url": "https://api.github.com/users/byronyi/orgs", "repos_url": "https://api.github.com/users/byronyi/repos", "events_url": "https://api.github.com/users/byronyi/events{/privacy}", "received_events_url": "https://api.github.com/users/byronyi/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-04T02:54:30Z", "updated_at": "2017-08-04T03:04:47Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Apart from docs, the only remaining issue I am not sure about are the CPU-only allocators. The way it is handled now is a bunch of hacks:</p>\n<ol>\n<li>it overrides the default CPU allocator, which allocates 100% of all CPU RAM tensors</li>\n<li>it re-introduces a <code>BasicCPUAllocator</code> which is exactly the same with the one in <code>gpu/pool_allocator.h</code> (I actually copied directly from there)</li>\n<li>it could not co-exists with <code>MKLCPUAllocator</code> as it precedes the latter one with a higher priority</li>\n</ol>\n<p>The main rationale of these hacks is that the current <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/framework/allocator.cc#L71\">default cpu allocator</a> is not visitable, so my patch will fail at <a href=\"https://github.com/red-bird/tensorflow/blob/955764316dd9c796db874ae2034e336a48b1fb46/tensorflow/contrib/gdr/gdr_memory_manager.cc#L257\">this line</a>. The entire <code>BFCRdmaAllocator</code> is introduced to avoid this failure.</p>\n<p>Note that MKL suffers from the exact same problem, and they uses the exactly <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/common_runtime/mkl_cpu_allocator.h\">same hacks</a>:</p>\n<ol>\n<li>it overrides the default CPU allocator</li>\n<li>it re-introduces a <code>MklSubAllocator</code> that is equivalent to the <code>BasicCPUAllocator</code></li>\n<li>it could not co-exists with other CPU allocators</li>\n</ol>\n<p>The tentative fix I will propose is just to make the current default cpu allocator subclasses from <code>VisitableAllocator</code>, which save all my hacks to re-introduce a visitable default cpu allocator.</p>\n<p>I tried to find the commit that introduces the initial <code>cpu_allocator</code>, but it actually dated back to the very first commit of TF. Maybe <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6969686\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/benoitsteiner\">@benoitsteiner</a> or <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=577277\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/martinwicke\">@martinwicke</a> could give some comments here?</p>", "body_text": "Apart from docs, the only remaining issue I am not sure about are the CPU-only allocators. The way it is handled now is a bunch of hacks:\n\nit overrides the default CPU allocator, which allocates 100% of all CPU RAM tensors\nit re-introduces a BasicCPUAllocator which is exactly the same with the one in gpu/pool_allocator.h (I actually copied directly from there)\nit could not co-exists with MKLCPUAllocator as it precedes the latter one with a higher priority\n\nThe main rationale of these hacks is that the current default cpu allocator is not visitable, so my patch will fail at this line. The entire BFCRdmaAllocator is introduced to avoid this failure.\nNote that MKL suffers from the exact same problem, and they uses the exactly same hacks:\n\nit overrides the default CPU allocator\nit re-introduces a MklSubAllocator that is equivalent to the BasicCPUAllocator\nit could not co-exists with other CPU allocators\n\nThe tentative fix I will propose is just to make the current default cpu allocator subclasses from VisitableAllocator, which save all my hacks to re-introduce a visitable default cpu allocator.\nI tried to find the commit that introduces the initial cpu_allocator, but it actually dated back to the very first commit of TF. Maybe @benoitsteiner or @martinwicke could give some comments here?", "body": "Apart from docs, the only remaining issue I am not sure about are the CPU-only allocators. The way it is handled now is a bunch of hacks:\r\n\r\n1. it overrides the default CPU allocator, which allocates 100% of all CPU RAM tensors \r\n2. it re-introduces a `BasicCPUAllocator` which is exactly the same with the one in `gpu/pool_allocator.h` (I actually copied directly from there)\r\n3. it could not co-exists with `MKLCPUAllocator` as it precedes the latter one with a higher priority\r\n\r\nThe main rationale of these hacks is that the current [default cpu allocator](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/framework/allocator.cc#L71) is not visitable, so my patch will fail at [this line](https://github.com/red-bird/tensorflow/blob/955764316dd9c796db874ae2034e336a48b1fb46/tensorflow/contrib/gdr/gdr_memory_manager.cc#L257). The entire `BFCRdmaAllocator` is introduced to avoid this failure.\r\n\r\nNote that MKL suffers from the exact same problem, and they uses the exactly [same hacks](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/common_runtime/mkl_cpu_allocator.h): \r\n\r\n1. it overrides the default CPU allocator\r\n2. it re-introduces a `MklSubAllocator` that is equivalent to the `BasicCPUAllocator`\r\n3. it could not co-exists with other CPU allocators\r\n\r\nThe tentative fix I will propose is just to make the current default cpu allocator subclasses from `VisitableAllocator`, which save all my hacks to re-introduce a visitable default cpu allocator.\r\n\r\nI tried to find the commit that introduces the initial `cpu_allocator`, but it actually dated back to the very first commit of TF. Maybe @benoitsteiner or @martinwicke could give some comments here?"}