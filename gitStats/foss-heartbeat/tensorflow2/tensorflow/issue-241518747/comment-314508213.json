{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/314508213", "html_url": "https://github.com/tensorflow/tensorflow/pull/11392#issuecomment-314508213", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11392", "id": 314508213, "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDUwODIxMw==", "user": {"login": "byronyi", "id": 2613663, "node_id": "MDQ6VXNlcjI2MTM2NjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/2613663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/byronyi", "html_url": "https://github.com/byronyi", "followers_url": "https://api.github.com/users/byronyi/followers", "following_url": "https://api.github.com/users/byronyi/following{/other_user}", "gists_url": "https://api.github.com/users/byronyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/byronyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/byronyi/subscriptions", "organizations_url": "https://api.github.com/users/byronyi/orgs", "repos_url": "https://api.github.com/users/byronyi/repos", "events_url": "https://api.github.com/users/byronyi/events{/privacy}", "received_events_url": "https://api.github.com/users/byronyi/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-11T17:01:11Z", "updated_at": "2017-07-11T17:01:11Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Current CI doesn't have GDR environment so we are specifically testing the \"fallback to gRPC\" behaviour.</p>\n<p>I've already implemented such logic in my code (<a href=\"https://github.com/tensorflow/tensorflow/pull/11392/files#diff-3dd79508fcea22184e8086c24dae0deaR349\">here</a> and <a href=\"https://github.com/tensorflow/tensorflow/pull/11392/files#diff-c404e67a9906d0e4749fd1f718ea3c73R137\">there</a>); but GDR environment requires RDMA user space libraries, which are currently not linked into the TF core library. Currently I am stuck by adding them as a third-party dependency (porting CMake based project to bazel).</p>\n<p>Alternatively I could make it a separated runtime (like grpc+verbs and grpc+mpi), but that will defeat the whole point of being able to fallback to gRPC.</p>", "body_text": "Current CI doesn't have GDR environment so we are specifically testing the \"fallback to gRPC\" behaviour.\nI've already implemented such logic in my code (here and there); but GDR environment requires RDMA user space libraries, which are currently not linked into the TF core library. Currently I am stuck by adding them as a third-party dependency (porting CMake based project to bazel).\nAlternatively I could make it a separated runtime (like grpc+verbs and grpc+mpi), but that will defeat the whole point of being able to fallback to gRPC.", "body": "Current CI doesn't have GDR environment so we are specifically testing the \"fallback to gRPC\" behaviour.\r\n\r\nI've already implemented such logic in my code ([here](https://github.com/tensorflow/tensorflow/pull/11392/files#diff-3dd79508fcea22184e8086c24dae0deaR349) and [there](https://github.com/tensorflow/tensorflow/pull/11392/files#diff-c404e67a9906d0e4749fd1f718ea3c73R137)); but GDR environment requires RDMA user space libraries, which are currently not linked into the TF core library. Currently I am stuck by adding them as a third-party dependency (porting CMake based project to bazel).\r\n\r\nAlternatively I could make it a separated runtime (like grpc+verbs and grpc+mpi), but that will defeat the whole point of being able to fallback to gRPC."}