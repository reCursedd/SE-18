{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/131295800", "pull_request_review_id": 54262728, "id": 131295800, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMTI5NTgwMA==", "diff_hunk": "@@ -0,0 +1,38 @@\n+#ifndef GDR_MEMORY_MANAGER_H_\n+#define GDR_MEMORY_MANAGER_H_\n+\n+#include \"tensorflow/core/lib/core/status.h\"\n+\n+namespace google {\n+namespace protobuf {\n+class Any;\n+}\n+}\n+\n+namespace tensorflow {\n+\n+class Device;\n+class DeviceContext;\n+class Tensor;\n+\n+class RemoteMemoryManager {\n+ public:\n+  virtual Status Init() = 0;\n+  virtual void Run() = 0;\n+  virtual void Stop() = 0;\n+\n+  virtual Status TransportOptionsFromTensor(\n+      ::google::protobuf::Any* mutable_transport_options, const Tensor& tensor,\n+      Device* device, DeviceContext* device_context, bool on_host) = 0;\n+\n+  virtual Status TensorFromTransportOptions(\n+      Tensor* tensor, const ::google::protobuf::Any& transport_options,\n+      Device* device, DeviceContext* device_context, bool on_host) = 0;\n+};\n+\n+RemoteMemoryManager* CreateRemoteMemoryManager(const string& host,", "path": "tensorflow/contrib/gdr/gdr_memory_manager.h", "position": 42, "original_position": 33, "commit_id": "241c020c64410ca16683a7a7f42b223f422e5dae", "original_commit_id": "955764316dd9c796db874ae2034e336a48b1fb46", "user": {"login": "byronyi", "id": 2613663, "node_id": "MDQ6VXNlcjI2MTM2NjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/2613663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/byronyi", "html_url": "https://github.com/byronyi", "followers_url": "https://api.github.com/users/byronyi/followers", "following_url": "https://api.github.com/users/byronyi/following{/other_user}", "gists_url": "https://api.github.com/users/byronyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/byronyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/byronyi/subscriptions", "organizations_url": "https://api.github.com/users/byronyi/orgs", "repos_url": "https://api.github.com/users/byronyi/repos", "events_url": "https://api.github.com/users/byronyi/events{/privacy}", "received_events_url": "https://api.github.com/users/byronyi/received_events", "type": "User", "site_admin": false}, "body": "It will fail in the `GdrMemoryManager::Init()`, which will break in [`rdma_create_ep`](https://github.com/red-bird/tensorflow/blob/955764316dd9c796db874ae2034e336a48b1fb46/tensorflow/contrib/gdr/gdr_memory_manager.cc#L204) with `EADDRNOTAVAIL` (Cannot assign requested address). \r\n\r\nAs a side note, the rdmacm library supports set `RDMA_OPTION_ID_REUSEADDR` using `rdma_set_option`, similar to `SO_REUSEADDR`. I could not think of an use case setting that option though, nor have I tried it myself.", "created_at": "2017-08-04T01:31:21Z", "updated_at": "2017-08-08T01:02:01Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/11392#discussion_r131295800", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11392", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/131295800"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/11392#discussion_r131295800"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11392"}}, "body_html": "<p>It will fail in the <code>GdrMemoryManager::Init()</code>, which will break in <a href=\"https://github.com/red-bird/tensorflow/blob/955764316dd9c796db874ae2034e336a48b1fb46/tensorflow/contrib/gdr/gdr_memory_manager.cc#L204\"><code>rdma_create_ep</code></a> with <code>EADDRNOTAVAIL</code> (Cannot assign requested address).</p>\n<p>As a side note, the rdmacm library supports set <code>RDMA_OPTION_ID_REUSEADDR</code> using <code>rdma_set_option</code>, similar to <code>SO_REUSEADDR</code>. I could not think of an use case setting that option though, nor have I tried it myself.</p>", "body_text": "It will fail in the GdrMemoryManager::Init(), which will break in rdma_create_ep with EADDRNOTAVAIL (Cannot assign requested address).\nAs a side note, the rdmacm library supports set RDMA_OPTION_ID_REUSEADDR using rdma_set_option, similar to SO_REUSEADDR. I could not think of an use case setting that option though, nor have I tried it myself.", "in_reply_to_id": 131220803}