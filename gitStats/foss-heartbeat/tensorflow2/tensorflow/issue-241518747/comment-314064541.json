{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/314064541", "html_url": "https://github.com/tensorflow/tensorflow/pull/11392#issuecomment-314064541", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11392", "id": 314064541, "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDA2NDU0MQ==", "user": {"login": "byronyi", "id": 2613663, "node_id": "MDQ6VXNlcjI2MTM2NjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/2613663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/byronyi", "html_url": "https://github.com/byronyi", "followers_url": "https://api.github.com/users/byronyi/followers", "following_url": "https://api.github.com/users/byronyi/following{/other_user}", "gists_url": "https://api.github.com/users/byronyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/byronyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/byronyi/subscriptions", "organizations_url": "https://api.github.com/users/byronyi/orgs", "repos_url": "https://api.github.com/users/byronyi/repos", "events_url": "https://api.github.com/users/byronyi/events{/privacy}", "received_events_url": "https://api.github.com/users/byronyi/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-10T10:13:31Z", "updated_at": "2017-07-10T16:44:29Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I have done some investigations and would like to purpose adding <a href=\"https://www.openfabrics.org/downloads/rdmacm/\" rel=\"nofollow\"><code>librdmacm</code></a> and <a href=\"https://git.kernel.org/pub/scm/libs/infiniband/libibverbs.git\" rel=\"nofollow\"><code>libibverbs</code></a> as third party dependencies (<code>librdmacm</code> depends on <code>libibverbs</code>). All of these compile on latest Linux without any hardware requirements. For the runtime, one could simply call <code>ibv_get_device_list(3)</code> and check if the target environment requirements are met.</p>\n<p>Now of course all of these are Linux specific, so we need an extra compatibility layer against non-Linux platforms. I do know there are <a href=\"https://docs.microsoft.com/en-us/windows-hardware/drivers/network/overview-of-network-direct-kernel-provider-interface--ndkpi-\" rel=\"nofollow\">RDMA APIs</a> available on Windows, but I don't have a Windows box, so this has to be left to future contributors.</p>\n<p>And for the functional testing, we could use <a href=\"https://github.com/torvalds/linux/blob/master/drivers/infiniband/sw/rxe/Kconfig\">Software RDMA over Ethernet</a> as a software emulated RDMA layer that runs on any platform. It does require upstream Linux kernel version <a href=\"https://github.com/torvalds/linux/commit/8700e3e7c4857d28ebaa824509934556da0b3e76\">at least 4.8</a> to enable such feature, so we do need to <a href=\"https://github.com/linux-rdma/rdma-core/blob/master/Documentation/rxe.md\">setup a separated CI environment</a> for that purpose.</p>", "body_text": "I have done some investigations and would like to purpose adding librdmacm and libibverbs as third party dependencies (librdmacm depends on libibverbs). All of these compile on latest Linux without any hardware requirements. For the runtime, one could simply call ibv_get_device_list(3) and check if the target environment requirements are met.\nNow of course all of these are Linux specific, so we need an extra compatibility layer against non-Linux platforms. I do know there are RDMA APIs available on Windows, but I don't have a Windows box, so this has to be left to future contributors.\nAnd for the functional testing, we could use Software RDMA over Ethernet as a software emulated RDMA layer that runs on any platform. It does require upstream Linux kernel version at least 4.8 to enable such feature, so we do need to setup a separated CI environment for that purpose.", "body": "I have done some investigations and would like to purpose adding [`librdmacm`](https://www.openfabrics.org/downloads/rdmacm/) and [`libibverbs`](https://git.kernel.org/pub/scm/libs/infiniband/libibverbs.git) as third party dependencies (`librdmacm` depends on `libibverbs`). All of these compile on latest Linux without any hardware requirements. For the runtime, one could simply call `ibv_get_device_list(3)` and check if the target environment requirements are met.\r\n\r\nNow of course all of these are Linux specific, so we need an extra compatibility layer against non-Linux platforms. I do know there are [RDMA APIs](https://docs.microsoft.com/en-us/windows-hardware/drivers/network/overview-of-network-direct-kernel-provider-interface--ndkpi-) available on Windows, but I don't have a Windows box, so this has to be left to future contributors.\r\n\r\nAnd for the functional testing, we could use [Software RDMA over Ethernet](https://github.com/torvalds/linux/blob/master/drivers/infiniband/sw/rxe/Kconfig) as a software emulated RDMA layer that runs on any platform. It does require upstream Linux kernel version [at least 4.8](https://github.com/torvalds/linux/commit/8700e3e7c4857d28ebaa824509934556da0b3e76) to enable such feature, so we do need to [setup a separated CI environment](https://github.com/linux-rdma/rdma-core/blob/master/Documentation/rxe.md) for that purpose."}