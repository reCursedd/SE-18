{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/859", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/859/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/859/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/859/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/859", "id": 128372209, "node_id": "MDU6SXNzdWUxMjgzNzIyMDk=", "number": 859, "title": "Feature request: clear all variable tensors", "user": {"login": "Russell91", "id": 1069617, "node_id": "MDQ6VXNlcjEwNjk2MTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1069617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Russell91", "html_url": "https://github.com/Russell91", "followers_url": "https://api.github.com/users/Russell91/followers", "following_url": "https://api.github.com/users/Russell91/following{/other_user}", "gists_url": "https://api.github.com/users/Russell91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Russell91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Russell91/subscriptions", "organizations_url": "https://api.github.com/users/Russell91/orgs", "repos_url": "https://api.github.com/users/Russell91/repos", "events_url": "https://api.github.com/users/Russell91/events{/privacy}", "received_events_url": "https://api.github.com/users/Russell91/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "lukaszkaiser", "id": 684901, "node_id": "MDQ6VXNlcjY4NDkwMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/684901?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukaszkaiser", "html_url": "https://github.com/lukaszkaiser", "followers_url": "https://api.github.com/users/lukaszkaiser/followers", "following_url": "https://api.github.com/users/lukaszkaiser/following{/other_user}", "gists_url": "https://api.github.com/users/lukaszkaiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukaszkaiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukaszkaiser/subscriptions", "organizations_url": "https://api.github.com/users/lukaszkaiser/orgs", "repos_url": "https://api.github.com/users/lukaszkaiser/repos", "events_url": "https://api.github.com/users/lukaszkaiser/events{/privacy}", "received_events_url": "https://api.github.com/users/lukaszkaiser/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "lukaszkaiser", "id": 684901, "node_id": "MDQ6VXNlcjY4NDkwMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/684901?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukaszkaiser", "html_url": "https://github.com/lukaszkaiser", "followers_url": "https://api.github.com/users/lukaszkaiser/followers", "following_url": "https://api.github.com/users/lukaszkaiser/following{/other_user}", "gists_url": "https://api.github.com/users/lukaszkaiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukaszkaiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukaszkaiser/subscriptions", "organizations_url": "https://api.github.com/users/lukaszkaiser/orgs", "repos_url": "https://api.github.com/users/lukaszkaiser/repos", "events_url": "https://api.github.com/users/lukaszkaiser/events{/privacy}", "received_events_url": "https://api.github.com/users/lukaszkaiser/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2016-01-24T04:41:12Z", "updated_at": "2017-12-06T10:45:07Z", "closed_at": "2016-01-26T02:46:46Z", "author_association": "NONE", "body_html": "<p>When using ipython notebooks, one frequently runs the same cell without restarting the kernel. If the cell contains code of the form:</p>\n<pre><code>x = tf.get_variable('x', (1,))\n</code></pre>\n<p>the cell will run correctly the first time, but throw an error the second. Obviously this error is appropriate in python files, but really just gets in the way for notebooks. It would be great if something like tf.clear_all_variables() were implemented, such that I could have a cell with contents:</p>\n<pre><code>tf.clear_all_variables()\nx = tf.get_variable('x', (1,))\n</code></pre>\n<p>that I could run over and over again. On a larger scale, tensorflow seems to be rather unfriendly to notebooks in general, frequently requiring kernel restarts for small changes. But this issue for definitely contributes to the greatest number of forced kernel restarts for me.</p>", "body_text": "When using ipython notebooks, one frequently runs the same cell without restarting the kernel. If the cell contains code of the form:\nx = tf.get_variable('x', (1,))\n\nthe cell will run correctly the first time, but throw an error the second. Obviously this error is appropriate in python files, but really just gets in the way for notebooks. It would be great if something like tf.clear_all_variables() were implemented, such that I could have a cell with contents:\ntf.clear_all_variables()\nx = tf.get_variable('x', (1,))\n\nthat I could run over and over again. On a larger scale, tensorflow seems to be rather unfriendly to notebooks in general, frequently requiring kernel restarts for small changes. But this issue for definitely contributes to the greatest number of forced kernel restarts for me.", "body": "When using ipython notebooks, one frequently runs the same cell without restarting the kernel. If the cell contains code of the form:\n\n```\nx = tf.get_variable('x', (1,))\n```\n\nthe cell will run correctly the first time, but throw an error the second. Obviously this error is appropriate in python files, but really just gets in the way for notebooks. It would be great if something like tf.clear_all_variables() were implemented, such that I could have a cell with contents:\n\n```\ntf.clear_all_variables()\nx = tf.get_variable('x', (1,))\n```\n\nthat I could run over and over again. On a larger scale, tensorflow seems to be rather unfriendly to notebooks in general, frequently requiring kernel restarts for small changes. But this issue for definitely contributes to the greatest number of forced kernel restarts for me.\n"}