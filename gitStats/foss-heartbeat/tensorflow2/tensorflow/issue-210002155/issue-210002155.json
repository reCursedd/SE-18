{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7846", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7846/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7846/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7846/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/7846", "id": 210002155, "node_id": "MDU6SXNzdWUyMTAwMDIxNTU=", "number": 7846, "title": "No 'T' attr on Logical op in GraphDef", "user": {"login": "eamartin", "id": 287200, "node_id": "MDQ6VXNlcjI4NzIwMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/287200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eamartin", "html_url": "https://github.com/eamartin", "followers_url": "https://api.github.com/users/eamartin/followers", "following_url": "https://api.github.com/users/eamartin/following{/other_user}", "gists_url": "https://api.github.com/users/eamartin/gists{/gist_id}", "starred_url": "https://api.github.com/users/eamartin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eamartin/subscriptions", "organizations_url": "https://api.github.com/users/eamartin/orgs", "repos_url": "https://api.github.com/users/eamartin/repos", "events_url": "https://api.github.com/users/eamartin/events{/privacy}", "received_events_url": "https://api.github.com/users/eamartin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "girving", "id": 70511, "node_id": "MDQ6VXNlcjcwNTEx", "avatar_url": "https://avatars1.githubusercontent.com/u/70511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/girving", "html_url": "https://github.com/girving", "followers_url": "https://api.github.com/users/girving/followers", "following_url": "https://api.github.com/users/girving/following{/other_user}", "gists_url": "https://api.github.com/users/girving/gists{/gist_id}", "starred_url": "https://api.github.com/users/girving/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/girving/subscriptions", "organizations_url": "https://api.github.com/users/girving/orgs", "repos_url": "https://api.github.com/users/girving/repos", "events_url": "https://api.github.com/users/girving/events{/privacy}", "received_events_url": "https://api.github.com/users/girving/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "girving", "id": 70511, "node_id": "MDQ6VXNlcjcwNTEx", "avatar_url": "https://avatars1.githubusercontent.com/u/70511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/girving", "html_url": "https://github.com/girving", "followers_url": "https://api.github.com/users/girving/followers", "following_url": "https://api.github.com/users/girving/following{/other_user}", "gists_url": "https://api.github.com/users/girving/gists{/gist_id}", "starred_url": "https://api.github.com/users/girving/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/girving/subscriptions", "organizations_url": "https://api.github.com/users/girving/orgs", "repos_url": "https://api.github.com/users/girving/repos", "events_url": "https://api.github.com/users/girving/events{/privacy}", "received_events_url": "https://api.github.com/users/girving/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2017-02-24T09:44:03Z", "updated_at": "2017-02-24T21:20:47Z", "closed_at": "2017-02-24T21:20:47Z", "author_association": "NONE", "body_html": "<p>Most graph nodes have a 'T' attr in their node definition.<br>\n'LogicalAnd', 'LogicalOr', and others do not in TF 1.0. Is this because these nodes only operate on bools?<br>\nAdding a 'T' attr would help tool builders have a uniform interface to ops and would allow easy future extension to logical operations on integer types.</p>\n<p>Example:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">from</span> <span class=\"pl-c1\">__future__</span> <span class=\"pl-k\">import</span> print_function\n<span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\nx <span class=\"pl-k\">=</span> tf.constant(<span class=\"pl-c1\">1</span>., <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>x<span class=\"pl-pds\">'</span></span>)\ny <span class=\"pl-k\">=</span> tf.constant(<span class=\"pl-c1\">2</span>., <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>y<span class=\"pl-pds\">'</span></span>)\nge <span class=\"pl-k\">=</span> tf.greater(x, y, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>ge<span class=\"pl-pds\">'</span></span>)\nq <span class=\"pl-k\">=</span> tf.logical_and(ge, ge, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>q<span class=\"pl-pds\">'</span></span>)\nz <span class=\"pl-k\">=</span> tf.logical_not(q, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>z<span class=\"pl-pds\">'</span></span>)\n\n<span class=\"pl-c1\">print</span>(tf.get_default_graph().as_graph_def())</pre></div>\n<p>Output:</p>\n<pre><code>node {\n  name: \"x\"\n  op: \"Const\"\n  attr {\n    key: \"dtype\"\n    value {\n      type: DT_FLOAT\n    }\n  }\n  attr {\n    key: \"value\"\n    value {\n      tensor {\n        dtype: DT_FLOAT\n        tensor_shape {\n        }\n        float_val: 1.0\n      }\n    }\n  }\n}\nnode {\n  name: \"y\"\n  op: \"Const\"\n  attr {\n    key: \"dtype\"\n    value {\n      type: DT_FLOAT\n    }\n  }\n  attr {\n    key: \"value\"\n    value {\n      tensor {\n        dtype: DT_FLOAT\n        tensor_shape {\n        }\n        float_val: 2.0\n      }\n    }\n  }\n}\nnode {\n  name: \"ge\"\n  op: \"Greater\"\n  input: \"x\"\n  input: \"y\"\n  attr {\n    key: \"T\"\n    value {\n      type: DT_FLOAT\n    }\n  }\n}\nnode {\n  name: \"q\"\n  op: \"LogicalAnd\"\n  input: \"ge\"\n  input: \"ge\"\n}\nnode {\n  name: \"z\"\n  op: \"LogicalNot\"\n  input: \"q\"\n}\nversions {\n  producer: 21\n}\n</code></pre>", "body_text": "Most graph nodes have a 'T' attr in their node definition.\n'LogicalAnd', 'LogicalOr', and others do not in TF 1.0. Is this because these nodes only operate on bools?\nAdding a 'T' attr would help tool builders have a uniform interface to ops and would allow easy future extension to logical operations on integer types.\nExample:\nfrom __future__ import print_function\nimport tensorflow as tf\n\nx = tf.constant(1., name='x')\ny = tf.constant(2., name='y')\nge = tf.greater(x, y, name='ge')\nq = tf.logical_and(ge, ge, name='q')\nz = tf.logical_not(q, name='z')\n\nprint(tf.get_default_graph().as_graph_def())\nOutput:\nnode {\n  name: \"x\"\n  op: \"Const\"\n  attr {\n    key: \"dtype\"\n    value {\n      type: DT_FLOAT\n    }\n  }\n  attr {\n    key: \"value\"\n    value {\n      tensor {\n        dtype: DT_FLOAT\n        tensor_shape {\n        }\n        float_val: 1.0\n      }\n    }\n  }\n}\nnode {\n  name: \"y\"\n  op: \"Const\"\n  attr {\n    key: \"dtype\"\n    value {\n      type: DT_FLOAT\n    }\n  }\n  attr {\n    key: \"value\"\n    value {\n      tensor {\n        dtype: DT_FLOAT\n        tensor_shape {\n        }\n        float_val: 2.0\n      }\n    }\n  }\n}\nnode {\n  name: \"ge\"\n  op: \"Greater\"\n  input: \"x\"\n  input: \"y\"\n  attr {\n    key: \"T\"\n    value {\n      type: DT_FLOAT\n    }\n  }\n}\nnode {\n  name: \"q\"\n  op: \"LogicalAnd\"\n  input: \"ge\"\n  input: \"ge\"\n}\nnode {\n  name: \"z\"\n  op: \"LogicalNot\"\n  input: \"q\"\n}\nversions {\n  producer: 21\n}", "body": "Most graph nodes have a 'T' attr in their node definition.\r\n'LogicalAnd', 'LogicalOr', and others do not in TF 1.0. Is this because these nodes only operate on bools?\r\nAdding a 'T' attr would help tool builders have a uniform interface to ops and would allow easy future extension to logical operations on integer types.\r\n\r\nExample:\r\n```python\r\nfrom __future__ import print_function\r\nimport tensorflow as tf\r\n\r\nx = tf.constant(1., name='x')\r\ny = tf.constant(2., name='y')\r\nge = tf.greater(x, y, name='ge')\r\nq = tf.logical_and(ge, ge, name='q')\r\nz = tf.logical_not(q, name='z')\r\n\r\nprint(tf.get_default_graph().as_graph_def())\r\n```\r\n\r\nOutput:\r\n```\r\nnode {\r\n  name: \"x\"\r\n  op: \"Const\"\r\n  attr {\r\n    key: \"dtype\"\r\n    value {\r\n      type: DT_FLOAT\r\n    }\r\n  }\r\n  attr {\r\n    key: \"value\"\r\n    value {\r\n      tensor {\r\n        dtype: DT_FLOAT\r\n        tensor_shape {\r\n        }\r\n        float_val: 1.0\r\n      }\r\n    }\r\n  }\r\n}\r\nnode {\r\n  name: \"y\"\r\n  op: \"Const\"\r\n  attr {\r\n    key: \"dtype\"\r\n    value {\r\n      type: DT_FLOAT\r\n    }\r\n  }\r\n  attr {\r\n    key: \"value\"\r\n    value {\r\n      tensor {\r\n        dtype: DT_FLOAT\r\n        tensor_shape {\r\n        }\r\n        float_val: 2.0\r\n      }\r\n    }\r\n  }\r\n}\r\nnode {\r\n  name: \"ge\"\r\n  op: \"Greater\"\r\n  input: \"x\"\r\n  input: \"y\"\r\n  attr {\r\n    key: \"T\"\r\n    value {\r\n      type: DT_FLOAT\r\n    }\r\n  }\r\n}\r\nnode {\r\n  name: \"q\"\r\n  op: \"LogicalAnd\"\r\n  input: \"ge\"\r\n  input: \"ge\"\r\n}\r\nnode {\r\n  name: \"z\"\r\n  op: \"LogicalNot\"\r\n  input: \"q\"\r\n}\r\nversions {\r\n  producer: 21\r\n}\r\n```"}