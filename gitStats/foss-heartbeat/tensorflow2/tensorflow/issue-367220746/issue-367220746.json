{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22766", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22766/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22766/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22766/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/22766", "id": 367220746, "node_id": "MDU6SXNzdWUzNjcyMjA3NDY=", "number": 22766, "title": "nvcc error: string_view.h: constexpr function return is non-constant", "user": {"login": "albertz", "id": 59132, "node_id": "MDQ6VXNlcjU5MTMy", "avatar_url": "https://avatars0.githubusercontent.com/u/59132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/albertz", "html_url": "https://github.com/albertz", "followers_url": "https://api.github.com/users/albertz/followers", "following_url": "https://api.github.com/users/albertz/following{/other_user}", "gists_url": "https://api.github.com/users/albertz/gists{/gist_id}", "starred_url": "https://api.github.com/users/albertz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/albertz/subscriptions", "organizations_url": "https://api.github.com/users/albertz/orgs", "repos_url": "https://api.github.com/users/albertz/repos", "events_url": "https://api.github.com/users/albertz/events{/privacy}", "received_events_url": "https://api.github.com/users/albertz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false}], "state": "open", "locked": false, "assignee": {"login": "gunan", "id": 7946809, "node_id": "MDQ6VXNlcjc5NDY4MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7946809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gunan", "html_url": "https://github.com/gunan", "followers_url": "https://api.github.com/users/gunan/followers", "following_url": "https://api.github.com/users/gunan/following{/other_user}", "gists_url": "https://api.github.com/users/gunan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gunan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gunan/subscriptions", "organizations_url": "https://api.github.com/users/gunan/orgs", "repos_url": "https://api.github.com/users/gunan/repos", "events_url": "https://api.github.com/users/gunan/events{/privacy}", "received_events_url": "https://api.github.com/users/gunan/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "gunan", "id": 7946809, "node_id": "MDQ6VXNlcjc5NDY4MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7946809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gunan", "html_url": "https://github.com/gunan", "followers_url": "https://api.github.com/users/gunan/followers", "following_url": "https://api.github.com/users/gunan/following{/other_user}", "gists_url": "https://api.github.com/users/gunan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gunan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gunan/subscriptions", "organizations_url": "https://api.github.com/users/gunan/orgs", "repos_url": "https://api.github.com/users/gunan/repos", "events_url": "https://api.github.com/users/gunan/events{/privacy}", "received_events_url": "https://api.github.com/users/gunan/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2018-10-05T13:50:59Z", "updated_at": "2018-11-19T23:27:45Z", "closed_at": null, "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: This is what the bug is about, see below.</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Ubuntu 16.04</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>: no</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: v1.11.0-0-gc19e29306c 1.11.0</li>\n<li><strong>Python version</strong>: 3.6.3</li>\n<li><strong>Bazel version (if compiling from source)</strong>: none</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: 5.4.0</li>\n<li><strong>CUDA/cuDNN version</strong>: 8.0, 9.0, 9.1</li>\n<li><strong>GPU model and memory</strong>: doesn't matter</li>\n<li><strong>Exact command to reproduce</strong>: See below.</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>Compiling some custom native op with <code>nvcc</code> fails, with basically this error:</p>\n<pre><code>absl/strings/string_view.h(501): error: constexpr function return is non-constant\n</code></pre>\n<p>Compiling the same code with <code>g++</code> does not have this issue. This seems specifically related to the CUDA frontent <code>cudafe</code>.</p>\n<h3>Source code / logs</h3>\n<p>Example code <code>test.cpp</code>:</p>\n<pre><code>// For Eigen::GpuDevice.\n#define EIGEN_USE_GPU 1\n\n// For Eigen::ThreadPoolDevice.\n#define EIGEN_USE_THREADS 1\n\n#include \"tensorflow/core/framework/op.h\"\n#include \"tensorflow/core/framework/shape_inference.h\"\n#include \"tensorflow/core/framework/op_kernel.h\"\n#include \"tensorflow/core/common_runtime/device.h\"\n\n#include &lt;cuda.h&gt;\n#include &lt;cuda_runtime.h&gt;\n#include &lt;cublas_v2.h&gt;\n#include &lt;math_constants.h&gt;\n\n#include \"tensorflow/core/platform/stream_executor.h\"\n</code></pre>\n<p>Compile command:<br>\n<code>/usr/local/cuda-8.0/bin/nvcc -shared -O2 -std=c++11 -I /u/zeyer/py-envs/py36-tf111/lib/python3.6/site-packages/tensorflow/include -I /u/zeyer/py-envs/py36-tf111/lib/python3.6/site-packages/tensorflow/include/external/nsync/public -I /usr/local/cuda-8.0/include -L /usr/local/cuda-8.0/lib64 -x cu -DGOOGLE_CUDA=1 -Xcompiler -fPIC -D_GLIBCXX_USE_CXX11_ABI=0 -g test.cpp -o test.so -lblas -lf77blas -L/u/zeyer/py-envs/py36-tf111/lib/python3.6/site-packages/numpy/.libs -lopenblasp-r0-8dca6697.3.0.dev -L/u/zeyer/py-envs/py36-tf111/lib/python3.6/site-packages/tensorflow -ltensorflow_framework -v -Xcompiler -v</code></p>\n<p>The full compile output (including some more warnings) can be seen <a href=\"https://stackoverflow.com/questions/52665441/nvcc-error-string-view-h-constexpr-function-return-is-non-constant\" rel=\"nofollow\">here in the StackOverflow question</a>.</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): This is what the bug is about, see below.\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 16.04\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: no\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): v1.11.0-0-gc19e29306c 1.11.0\nPython version: 3.6.3\nBazel version (if compiling from source): none\nGCC/Compiler version (if compiling from source): 5.4.0\nCUDA/cuDNN version: 8.0, 9.0, 9.1\nGPU model and memory: doesn't matter\nExact command to reproduce: See below.\n\nDescribe the problem\nCompiling some custom native op with nvcc fails, with basically this error:\nabsl/strings/string_view.h(501): error: constexpr function return is non-constant\n\nCompiling the same code with g++ does not have this issue. This seems specifically related to the CUDA frontent cudafe.\nSource code / logs\nExample code test.cpp:\n// For Eigen::GpuDevice.\n#define EIGEN_USE_GPU 1\n\n// For Eigen::ThreadPoolDevice.\n#define EIGEN_USE_THREADS 1\n\n#include \"tensorflow/core/framework/op.h\"\n#include \"tensorflow/core/framework/shape_inference.h\"\n#include \"tensorflow/core/framework/op_kernel.h\"\n#include \"tensorflow/core/common_runtime/device.h\"\n\n#include <cuda.h>\n#include <cuda_runtime.h>\n#include <cublas_v2.h>\n#include <math_constants.h>\n\n#include \"tensorflow/core/platform/stream_executor.h\"\n\nCompile command:\n/usr/local/cuda-8.0/bin/nvcc -shared -O2 -std=c++11 -I /u/zeyer/py-envs/py36-tf111/lib/python3.6/site-packages/tensorflow/include -I /u/zeyer/py-envs/py36-tf111/lib/python3.6/site-packages/tensorflow/include/external/nsync/public -I /usr/local/cuda-8.0/include -L /usr/local/cuda-8.0/lib64 -x cu -DGOOGLE_CUDA=1 -Xcompiler -fPIC -D_GLIBCXX_USE_CXX11_ABI=0 -g test.cpp -o test.so -lblas -lf77blas -L/u/zeyer/py-envs/py36-tf111/lib/python3.6/site-packages/numpy/.libs -lopenblasp-r0-8dca6697.3.0.dev -L/u/zeyer/py-envs/py36-tf111/lib/python3.6/site-packages/tensorflow -ltensorflow_framework -v -Xcompiler -v\nThe full compile output (including some more warnings) can be seen here in the StackOverflow question.", "body": "\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: This is what the bug is about, see below.\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 16.04\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**: no\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: v1.11.0-0-gc19e29306c 1.11.0\r\n- **Python version**: 3.6.3\r\n- **Bazel version (if compiling from source)**: none\r\n- **GCC/Compiler version (if compiling from source)**: 5.4.0\r\n- **CUDA/cuDNN version**: 8.0, 9.0, 9.1\r\n- **GPU model and memory**: doesn't matter\r\n- **Exact command to reproduce**: See below.\r\n\r\n### Describe the problem\r\n\r\nCompiling some custom native op with `nvcc` fails, with basically this error:\r\n\r\n    absl/strings/string_view.h(501): error: constexpr function return is non-constant\r\n\r\nCompiling the same code with `g++` does not have this issue. This seems specifically related to the CUDA frontent `cudafe`.\r\n\r\n### Source code / logs\r\n\r\nExample code `test.cpp`:\r\n\r\n```\r\n// For Eigen::GpuDevice.\r\n#define EIGEN_USE_GPU 1\r\n\r\n// For Eigen::ThreadPoolDevice.\r\n#define EIGEN_USE_THREADS 1\r\n\r\n#include \"tensorflow/core/framework/op.h\"\r\n#include \"tensorflow/core/framework/shape_inference.h\"\r\n#include \"tensorflow/core/framework/op_kernel.h\"\r\n#include \"tensorflow/core/common_runtime/device.h\"\r\n\r\n#include <cuda.h>\r\n#include <cuda_runtime.h>\r\n#include <cublas_v2.h>\r\n#include <math_constants.h>\r\n\r\n#include \"tensorflow/core/platform/stream_executor.h\"\r\n```\r\n\r\nCompile command:\r\n`/usr/local/cuda-8.0/bin/nvcc -shared -O2 -std=c++11 -I /u/zeyer/py-envs/py36-tf111/lib/python3.6/site-packages/tensorflow/include -I /u/zeyer/py-envs/py36-tf111/lib/python3.6/site-packages/tensorflow/include/external/nsync/public -I /usr/local/cuda-8.0/include -L /usr/local/cuda-8.0/lib64 -x cu -DGOOGLE_CUDA=1 -Xcompiler -fPIC -D_GLIBCXX_USE_CXX11_ABI=0 -g test.cpp -o test.so -lblas -lf77blas -L/u/zeyer/py-envs/py36-tf111/lib/python3.6/site-packages/numpy/.libs -lopenblasp-r0-8dca6697.3.0.dev -L/u/zeyer/py-envs/py36-tf111/lib/python3.6/site-packages/tensorflow -ltensorflow_framework -v -Xcompiler -v`\r\n\r\nThe full compile output (including some more warnings) can be seen [here in the StackOverflow question](https://stackoverflow.com/questions/52665441/nvcc-error-string-view-h-constexpr-function-return-is-non-constant).\r\n"}