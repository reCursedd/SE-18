{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/377338596", "html_url": "https://github.com/tensorflow/tensorflow/issues/12888#issuecomment-377338596", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12888", "id": 377338596, "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzMzODU5Ng==", "user": {"login": "cgarciae", "id": 5862228, "node_id": "MDQ6VXNlcjU4NjIyMjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5862228?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cgarciae", "html_url": "https://github.com/cgarciae", "followers_url": "https://api.github.com/users/cgarciae/followers", "following_url": "https://api.github.com/users/cgarciae/following{/other_user}", "gists_url": "https://api.github.com/users/cgarciae/gists{/gist_id}", "starred_url": "https://api.github.com/users/cgarciae/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cgarciae/subscriptions", "organizations_url": "https://api.github.com/users/cgarciae/orgs", "repos_url": "https://api.github.com/users/cgarciae/repos", "events_url": "https://api.github.com/users/cgarciae/events{/privacy}", "received_events_url": "https://api.github.com/users/cgarciae/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-29T19:00:37Z", "updated_at": "2018-03-29T19:00:37Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6410074\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/tjingrant\">@tjingrant</a> I've been digging into the <code>onnx_tf</code> repo. Thanks a lot for this!!!</p>\n<p>I think that the <code>onnx</code> dependency should not be an issue for the following reasons:</p>\n<ul>\n<li>PyTorch has it as a standard module, meaning another big company already trusts that code.</li>\n<li>The format is getting good traction, Microsoft is adding native Windows <a href=\"https://blogs.windows.com/buildingapps/2018/03/07/ai-platform-windows-developers\" rel=\"nofollow\">support</a> for it, MXNet Server added support to <a href=\"https://github.com/awslabs/mxnet-model-server\">serve OXXN</a> models, Nvidia already has <a href=\"https://www.youtube.com/watch?v=vAelubuwquE\" rel=\"nofollow\">demos</a> supporting the format.</li>\n<li>There is the <a href=\"https://github.com/onnx/onnx/wiki/%5BAnnouncement%5D-ONNX-working-groups-established\">ONNX working groups</a> to guide the development of the format so the TensorFlow team can join it they want to have a voice.</li>\n</ul>\n<p>This pull requests is now 5+ months old and ONNX got 1.0 since then so I'd say that now is a good time to give it a try again. Seeing all of the commitment from other players I find it unacceptable that Tensorflow which is the leading framework is not part of this initiative, its as if the Chrome team missed out on web assembly.</p>", "body_text": "@tjingrant I've been digging into the onnx_tf repo. Thanks a lot for this!!!\nI think that the onnx dependency should not be an issue for the following reasons:\n\nPyTorch has it as a standard module, meaning another big company already trusts that code.\nThe format is getting good traction, Microsoft is adding native Windows support for it, MXNet Server added support to serve OXXN models, Nvidia already has demos supporting the format.\nThere is the ONNX working groups to guide the development of the format so the TensorFlow team can join it they want to have a voice.\n\nThis pull requests is now 5+ months old and ONNX got 1.0 since then so I'd say that now is a good time to give it a try again. Seeing all of the commitment from other players I find it unacceptable that Tensorflow which is the leading framework is not part of this initiative, its as if the Chrome team missed out on web assembly.", "body": "@tjingrant I've been digging into the `onnx_tf` repo. Thanks a lot for this!!!\r\n\r\nI think that the `onnx` dependency should not be an issue for the following reasons: \r\n* PyTorch has it as a standard module, meaning another big company already trusts that code.\r\n* The format is getting good traction, Microsoft is adding native Windows [support](https://blogs.windows.com/buildingapps/2018/03/07/ai-platform-windows-developers) for it, MXNet Server added support to [serve OXXN](https://github.com/awslabs/mxnet-model-server) models, Nvidia already has [demos](https://www.youtube.com/watch?v=vAelubuwquE) supporting the format.\r\n* There is the [ONNX working groups](https://github.com/onnx/onnx/wiki/%5BAnnouncement%5D-ONNX-working-groups-established) to guide the development of the format so the TensorFlow team can join it they want to have a voice.\r\n\r\nThis pull requests is now 5+ months old and ONNX got 1.0 since then so I'd say that now is a good time to give it a try again. Seeing all of the commitment from other players I find it unacceptable that Tensorflow which is the leading framework is not part of this initiative, its as if the Chrome team missed out on web assembly. "}