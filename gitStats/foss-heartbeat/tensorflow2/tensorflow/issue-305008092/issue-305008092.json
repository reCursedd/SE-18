{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17698", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17698/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17698/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17698/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17698", "id": 305008092, "node_id": "MDU6SXNzdWUzMDUwMDgwOTI=", "number": 17698, "title": "Session JNI interface has memory leak", "user": {"login": "raintung", "id": 4536087, "node_id": "MDQ6VXNlcjQ1MzYwODc=", "avatar_url": "https://avatars2.githubusercontent.com/u/4536087?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raintung", "html_url": "https://github.com/raintung", "followers_url": "https://api.github.com/users/raintung/followers", "following_url": "https://api.github.com/users/raintung/following{/other_user}", "gists_url": "https://api.github.com/users/raintung/gists{/gist_id}", "starred_url": "https://api.github.com/users/raintung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raintung/subscriptions", "organizations_url": "https://api.github.com/users/raintung/orgs", "repos_url": "https://api.github.com/users/raintung/repos", "events_url": "https://api.github.com/users/raintung/events{/privacy}", "received_events_url": "https://api.github.com/users/raintung/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-03-14T03:10:14Z", "updated_at": "2018-07-10T22:47:11Z", "closed_at": "2018-07-10T22:47:11Z", "author_association": "NONE", "body_html": "<p>System information<br>\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): NO<br>\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu<br>\nTensorFlow installed from (source or binary): source<br>\nTensorFlow version (use command below): Master<br>\nPython version: 3.6<br>\nBazel version (if compiling from source): N/A<br>\nGCC/Compiler version (if compiling from source): N/A<br>\nCUDA/cuDNN version: None<br>\nGPU model and memory: None<br>\nExact command to reproduce: Run the snippet below.</p>\n<p>Describe the problem<br>\nRead the tensorflow_jni.cc code in the code section as blow.</p>\n<pre><code>  TF_Graph* graph = reinterpret_cast&lt;TF_Graph*&gt;(graph_handle);\n  TF_Status* status = TF_NewStatus();\n  TF_SessionOptions* opts = TF_NewSessionOptions();\n  const char* ctarget = nullptr;\n  jbyte* cconfig = nullptr;\n  if (target != nullptr) {\n    ctarget = env-&gt;GetStringUTFChars(target, nullptr);\n  }\n  if (config != nullptr) {\n    cconfig = env-&gt;GetByteArrayElements(config, nullptr);\n    TF_SetConfig(opts, cconfig,\n                 static_cast&lt;size_t&gt;(env-&gt;GetArrayLength(config)), status);\n    if (!throwExceptionIfNotOK(env, status)) {\n      env-&gt;ReleaseByteArrayElements(config, cconfig, JNI_ABORT);\n      //Not release the status, opts\n      return 0;\n    }\n  }\n</code></pre>\n<p>After throw exception, it look like not release the status, opts memory.</p>", "body_text": "System information\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): NO\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu\nTensorFlow installed from (source or binary): source\nTensorFlow version (use command below): Master\nPython version: 3.6\nBazel version (if compiling from source): N/A\nGCC/Compiler version (if compiling from source): N/A\nCUDA/cuDNN version: None\nGPU model and memory: None\nExact command to reproduce: Run the snippet below.\nDescribe the problem\nRead the tensorflow_jni.cc code in the code section as blow.\n  TF_Graph* graph = reinterpret_cast<TF_Graph*>(graph_handle);\n  TF_Status* status = TF_NewStatus();\n  TF_SessionOptions* opts = TF_NewSessionOptions();\n  const char* ctarget = nullptr;\n  jbyte* cconfig = nullptr;\n  if (target != nullptr) {\n    ctarget = env->GetStringUTFChars(target, nullptr);\n  }\n  if (config != nullptr) {\n    cconfig = env->GetByteArrayElements(config, nullptr);\n    TF_SetConfig(opts, cconfig,\n                 static_cast<size_t>(env->GetArrayLength(config)), status);\n    if (!throwExceptionIfNotOK(env, status)) {\n      env->ReleaseByteArrayElements(config, cconfig, JNI_ABORT);\n      //Not release the status, opts\n      return 0;\n    }\n  }\n\nAfter throw exception, it look like not release the status, opts memory.", "body": "System information\r\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): NO\r\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu\r\nTensorFlow installed from (source or binary): source\r\nTensorFlow version (use command below): Master\r\nPython version: 3.6\r\nBazel version (if compiling from source): N/A\r\nGCC/Compiler version (if compiling from source): N/A\r\nCUDA/cuDNN version: None\r\nGPU model and memory: None\r\nExact command to reproduce: Run the snippet below.\r\n\r\nDescribe the problem\r\nRead the tensorflow_jni.cc code in the code section as blow.\r\n\r\n```\r\n  TF_Graph* graph = reinterpret_cast<TF_Graph*>(graph_handle);\r\n  TF_Status* status = TF_NewStatus();\r\n  TF_SessionOptions* opts = TF_NewSessionOptions();\r\n  const char* ctarget = nullptr;\r\n  jbyte* cconfig = nullptr;\r\n  if (target != nullptr) {\r\n    ctarget = env->GetStringUTFChars(target, nullptr);\r\n  }\r\n  if (config != nullptr) {\r\n    cconfig = env->GetByteArrayElements(config, nullptr);\r\n    TF_SetConfig(opts, cconfig,\r\n                 static_cast<size_t>(env->GetArrayLength(config)), status);\r\n    if (!throwExceptionIfNotOK(env, status)) {\r\n      env->ReleaseByteArrayElements(config, cconfig, JNI_ABORT);\r\n      //Not release the status, opts\r\n      return 0;\r\n    }\r\n  }\r\n```\r\nAfter throw exception, it look like not release the status, opts memory.\r\n\r\n\r\n"}