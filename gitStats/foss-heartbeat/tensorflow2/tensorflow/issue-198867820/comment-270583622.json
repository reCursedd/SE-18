{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/270583622", "html_url": "https://github.com/tensorflow/tensorflow/issues/6653#issuecomment-270583622", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6653", "id": 270583622, "node_id": "MDEyOklzc3VlQ29tbWVudDI3MDU4MzYyMg==", "user": {"login": "DjangoPeng", "id": 16943353, "node_id": "MDQ6VXNlcjE2OTQzMzUz", "avatar_url": "https://avatars3.githubusercontent.com/u/16943353?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DjangoPeng", "html_url": "https://github.com/DjangoPeng", "followers_url": "https://api.github.com/users/DjangoPeng/followers", "following_url": "https://api.github.com/users/DjangoPeng/following{/other_user}", "gists_url": "https://api.github.com/users/DjangoPeng/gists{/gist_id}", "starred_url": "https://api.github.com/users/DjangoPeng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DjangoPeng/subscriptions", "organizations_url": "https://api.github.com/users/DjangoPeng/orgs", "repos_url": "https://api.github.com/users/DjangoPeng/repos", "events_url": "https://api.github.com/users/DjangoPeng/events{/privacy}", "received_events_url": "https://api.github.com/users/DjangoPeng/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-05T07:48:53Z", "updated_at": "2017-01-05T07:49:35Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=19201532\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zakizhou\">@zakizhou</a> I had a try of <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/g3doc/api_docs/python/functions_and_classes/shard8/tf.train.import_meta_graph.md\">tf.train.import_meta_graph</a>, and I always restore fail. Could you show me a use case? I attached my test snippet below:</p>\n<h3>Save model</h3>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\na <span class=\"pl-k\">=</span> tf.Variable(<span class=\"pl-c1\">1</span>, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>a<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.int32)\nb <span class=\"pl-k\">=</span> tf.Variable(<span class=\"pl-c1\">2</span>, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>b<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.int32)\nc <span class=\"pl-k\">=</span> a <span class=\"pl-k\">+</span> b\ninit_op <span class=\"pl-k\">=</span> tf.global_variables_initializer() \nsaver <span class=\"pl-k\">=</span> tf.train.Saver(tf.trainable_variables())\nsess <span class=\"pl-k\">=</span> tf.Session()\nsess.run(init_op)  <span class=\"pl-c\"><span class=\"pl-c\">#</span>  I have to run it twice to avoid the same error above.</span>\nsess.run(d)\nsaver.save(sess, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/tmp/PJT/model-0<span class=\"pl-pds\">'</span></span>)</pre></div>\n<p>Then I get the model file as below:</p>\n<pre><code>model-0.meta\nmodel-0.index\nmodel-0.data-00000-of-00001\n</code></pre>\n<h3>Restore model</h3>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n    new_saver <span class=\"pl-k\">=</span> tf.train.import_meta_graph(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>/tmp/PJT/model-0.meta<span class=\"pl-pds\">'</span></span>)\n    new_saver.restore(sess, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>model-0.data-00000-of-00001<span class=\"pl-pds\">'</span></span>) <span class=\"pl-c\"><span class=\"pl-c\">#</span> It raise NotFoundError</span></pre></div>\n<p>Error log:</p>\n<pre><code>NotFoundError: Unsuccessful TensorSliceReader constructor: Failed to find any matching files for model-0.data-00000-of-00001\n...\n</code></pre>", "body_text": "@zakizhou I had a try of tf.train.import_meta_graph, and I always restore fail. Could you show me a use case? I attached my test snippet below:\nSave model\nimport tensorflow as tf\na = tf.Variable(1, name='a', dtype=tf.int32)\nb = tf.Variable(2, name='b', dtype=tf.int32)\nc = a + b\ninit_op = tf.global_variables_initializer() \nsaver = tf.train.Saver(tf.trainable_variables())\nsess = tf.Session()\nsess.run(init_op)  #  I have to run it twice to avoid the same error above.\nsess.run(d)\nsaver.save(sess, '/tmp/PJT/model-0')\nThen I get the model file as below:\nmodel-0.meta\nmodel-0.index\nmodel-0.data-00000-of-00001\n\nRestore model\nimport tensorflow as tf\nwith tf.Session() as sess:\n    new_saver = tf.train.import_meta_graph('/tmp/PJT/model-0.meta')\n    new_saver.restore(sess, 'model-0.data-00000-of-00001') # It raise NotFoundError\nError log:\nNotFoundError: Unsuccessful TensorSliceReader constructor: Failed to find any matching files for model-0.data-00000-of-00001\n...", "body": "@zakizhou I had a try of [tf.train.import_meta_graph](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/g3doc/api_docs/python/functions_and_classes/shard8/tf.train.import_meta_graph.md), and I always restore fail. Could you show me a use case? I attached my test snippet below:\r\n### Save model\r\n```python\r\nimport tensorflow as tf\r\na = tf.Variable(1, name='a', dtype=tf.int32)\r\nb = tf.Variable(2, name='b', dtype=tf.int32)\r\nc = a + b\r\ninit_op = tf.global_variables_initializer() \r\nsaver = tf.train.Saver(tf.trainable_variables())\r\nsess = tf.Session()\r\nsess.run(init_op)  #  I have to run it twice to avoid the same error above.\r\nsess.run(d)\r\nsaver.save(sess, '/tmp/PJT/model-0')\r\n```\r\nThen I get the model file as below:\r\n```\r\nmodel-0.meta\r\nmodel-0.index\r\nmodel-0.data-00000-of-00001\r\n```\r\n### Restore model\r\n```python\r\nimport tensorflow as tf\r\nwith tf.Session() as sess:\r\n    new_saver = tf.train.import_meta_graph('/tmp/PJT/model-0.meta')\r\n    new_saver.restore(sess, 'model-0.data-00000-of-00001') # It raise NotFoundError\r\n```\r\nError log:\r\n```\r\nNotFoundError: Unsuccessful TensorSliceReader constructor: Failed to find any matching files for model-0.data-00000-of-00001\r\n...\r\n```\r\n"}