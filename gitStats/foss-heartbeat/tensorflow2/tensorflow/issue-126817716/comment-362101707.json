{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/362101707", "html_url": "https://github.com/tensorflow/tensorflow/issues/781#issuecomment-362101707", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/781", "id": 362101707, "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjEwMTcwNw==", "user": {"login": "ahundt", "id": 55744, "node_id": "MDQ6VXNlcjU1NzQ0", "avatar_url": "https://avatars1.githubusercontent.com/u/55744?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahundt", "html_url": "https://github.com/ahundt", "followers_url": "https://api.github.com/users/ahundt/followers", "following_url": "https://api.github.com/users/ahundt/following{/other_user}", "gists_url": "https://api.github.com/users/ahundt/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahundt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahundt/subscriptions", "organizations_url": "https://api.github.com/users/ahundt/orgs", "repos_url": "https://api.github.com/users/ahundt/repos", "events_url": "https://api.github.com/users/ahundt/events{/privacy}", "received_events_url": "https://api.github.com/users/ahundt/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-31T23:07:57Z", "updated_at": "2018-01-31T23:35:33Z", "author_association": "NONE", "body_html": "<p><strong>Update:</strong> No point doing the matrix below manually because I just found:</p>\n<div class=\"highlight highlight-source-python\"><pre>    tf.contrib.image._flat_transforms_to_matrices()\n    tf.contrib.image._transform_matrices_to_flat()</pre></div>\n<p>Not public, but they can be copied locally if needed.</p>\n<p><strong>previous question:</strong><br>\nAlso is the following correct if I want to define an actual coordinate index in the input image, apply the transform, and get the same coordinate in the output image?</p>\n<div class=\"highlight highlight-source-python\"><pre>        <span class=\"pl-c\"><span class=\"pl-c\">#</span> transform_matrix is an</span>\n        <span class=\"pl-c\"><span class=\"pl-c\">#</span> 8 element projective transform matrix</span>\n        t <span class=\"pl-k\">=</span> transform_matrix\n        projection <span class=\"pl-k\">=</span> tf.convert_to_tensor(\n            [[t[<span class=\"pl-c1\">0</span>], t[<span class=\"pl-c1\">1</span>], t[<span class=\"pl-c1\">2</span>]],\n             [t[<span class=\"pl-c1\">3</span>], t[<span class=\"pl-c1\">4</span>], t[<span class=\"pl-c1\">5</span>]],\n             [t[<span class=\"pl-c1\">6</span>], t[<span class=\"pl-c1\">7</span>], <span class=\"pl-c1\">1</span>])\n        coordinate = tf.transpose(tf.convert_to_tensor(\n            coordinate[<span class=\"pl-c1\">0</span>],\n            coordinate[<span class=\"pl-c1\">1</span>],\n            <span class=\"pl-c1\">1</span>\n        ))\n        output_coordinate = projection <span class=\"pl-k\">*</span> coordinate\n        output_coordinate = coordinate[:<span class=\"pl-c1\">2</span>]</pre></div>", "body_text": "Update: No point doing the matrix below manually because I just found:\n    tf.contrib.image._flat_transforms_to_matrices()\n    tf.contrib.image._transform_matrices_to_flat()\nNot public, but they can be copied locally if needed.\nprevious question:\nAlso is the following correct if I want to define an actual coordinate index in the input image, apply the transform, and get the same coordinate in the output image?\n        # transform_matrix is an\n        # 8 element projective transform matrix\n        t = transform_matrix\n        projection = tf.convert_to_tensor(\n            [[t[0], t[1], t[2]],\n             [t[3], t[4], t[5]],\n             [t[6], t[7], 1])\n        coordinate = tf.transpose(tf.convert_to_tensor(\n            coordinate[0],\n            coordinate[1],\n            1\n        ))\n        output_coordinate = projection * coordinate\n        output_coordinate = coordinate[:2]", "body": "\r\n**Update:** No point doing the matrix below manually because I just found:\r\n```python\r\n    tf.contrib.image._flat_transforms_to_matrices()\r\n    tf.contrib.image._transform_matrices_to_flat()\r\n```\r\nNot public, but they can be copied locally if needed.\r\n\r\n**previous question:**\r\nAlso is the following correct if I want to define an actual coordinate index in the input image, apply the transform, and get the same coordinate in the output image?\r\n\r\n```python\r\n\r\n        # transform_matrix is an\r\n        # 8 element projective transform matrix\r\n        t = transform_matrix\r\n        projection = tf.convert_to_tensor(\r\n            [[t[0], t[1], t[2]],\r\n             [t[3], t[4], t[5]],\r\n             [t[6], t[7], 1])\r\n        coordinate = tf.transpose(tf.convert_to_tensor(\r\n            coordinate[0],\r\n            coordinate[1],\r\n            1\r\n        ))\r\n        output_coordinate = projection * coordinate\r\n        output_coordinate = coordinate[:2]\r\n```"}