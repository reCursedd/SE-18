{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/404708222", "html_url": "https://github.com/tensorflow/tensorflow/issues/20677#issuecomment-404708222", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20677", "id": 404708222, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDcwODIyMg==", "user": {"login": "zjfheart", "id": 10344081, "node_id": "MDQ6VXNlcjEwMzQ0MDgx", "avatar_url": "https://avatars3.githubusercontent.com/u/10344081?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zjfheart", "html_url": "https://github.com/zjfheart", "followers_url": "https://api.github.com/users/zjfheart/followers", "following_url": "https://api.github.com/users/zjfheart/following{/other_user}", "gists_url": "https://api.github.com/users/zjfheart/gists{/gist_id}", "starred_url": "https://api.github.com/users/zjfheart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zjfheart/subscriptions", "organizations_url": "https://api.github.com/users/zjfheart/orgs", "repos_url": "https://api.github.com/users/zjfheart/repos", "events_url": "https://api.github.com/users/zjfheart/events{/privacy}", "received_events_url": "https://api.github.com/users/zjfheart/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-13T02:39:04Z", "updated_at": "2018-07-13T02:41:30Z", "author_association": "NONE", "body_html": "<p>Hi <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=22967383\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/wdirons\">@wdirons</a><br>\nI git clone the latest version.<br>\ngit clone <a href=\"https://github.com/tensorflow/tensorflow\">https://github.com/tensorflow/tensorflow</a><br>\n[root@Jingfeng_redhat tensorflow]# vi RELEASE.md</p>\n<pre><code>\n # Release 1.9.0\n## Major Features And Improvements\n * Updated docs for `tf.keras`: New Keras-based [get started](http://tensorflow.org/versions/r1.9/get_started),\n and [programmers guide page](http://tensorflow.org/versions/r1.9/programmers_guide/keras).\n* Update `tf.keras` to the Keras 2.1.6 API.\n....\n</code></pre>\n<p>I modify the .tf_configure.bazelrc file, changing it to false (see below), and then clear the cache. But still get the same error.</p>\n<p>[root@Jingfeng_redhat tensorflow]# rm -rf  ~/.cache/<br>\n[root@Jingfeng_redhat tensorflow]# vi .tf_configure.bazelrc<br>\nbuild --action_env PYTHON_BIN_PATH=\"/usr/bin/python3.4\"<br>\nbuild --action_env PYTHON_LIB_PATH=\"/usr/lib64/python3.4/site-packages\"<br>\nbuild --python_path=\"/usr/bin/python3.4\"<br>\nbuild --define with_jemalloc=true<br>\nbuild:gcp --define with_gcp_support=false<br>\nbuild:hdfs --define with_hdfs_support=true<br>\nbuild:aws --define with_aws_support=true<br>\nbuild --define with_kafka_support=true<br>\nbuild:xla --define with_xla_support=true<br>\nbuild:gdr --define with_gdr_support=true<br>\nbuild:verbs --define with_verbs_support=true<br>\nbuild --action_env TF_NEED_OPENCL_SYCL=\"0\"<br>\nbuild --action_env TF_NEED_CUDA=\"1\"<br>\nbuild --action_env CUDA_TOOLKIT_PATH=\"/usr/local/cuda\"<br>\nbuild --action_env TF_CUDA_VERSION=\"9.0\"<br>\nbuild --action_env CUDNN_INSTALL_PATH=\"/usr/local/cuda-9.0\"<br>\nbuild --action_env TF_CUDNN_VERSION=\"7\"<br>\nbuild --action_env TF_NCCL_VERSION=\"1\"<br>\nbuild --action_env TF_CUDA_COMPUTE_CAPABILITIES=\"3.5,5.2\"<br>\nbuild --action_env TF_CUDA_CLANG=\"0\"<br>\nbuild --action_env GCC_HOST_COMPILER_PATH=\"/usr/bin/gcc\"<br>\nbuild --config=cuda<br>\ntest --config=cuda<br>\nbuild --define grpc_no_ares=true<br>\nbuild:opt --copt=-mcpu=native<br>\nbuild:opt --define with_default_optimizations=true<br>\nbuild --strip=always</p>\n<p>[root@Jingfeng_redhat tensorflow]# bazel build --config=opt --config=cuda //tensorflow/tools/pip_package:build_pip_package<br>\nExtracting Bazel installation...<br>\n................<br>\nERROR: /root/.cache/bazel/_bazel_root/efb88f6336d9c4a18216fb94287b8d97/external/boringssl/BUILD:115:1: C++ compilation of rule '@boringssl//:crypto' failed (Exit 1)<br>\nexternal/boringssl/src/crypto/digest_extra/digest_extra.c: In function 'EVP_get_digestbynid':<br>\nexternal/boringssl/src/crypto/digest_extra/digest_extra.c:110:3: error: 'for' loop initial declarations are only allowed in C99 mode<br>\nfor (unsigned i = 0; i &lt; OPENSSL_ARRAY_SIZE(nid_to_digest_mapping); i++) {<br>\n^<br>\nexternal/boringssl/src/crypto/digest_extra/digest_extra.c:110:3: note: use option -std=c99 or -std=gnu99 to compile your code<br>\nexternal/boringssl/src/crypto/digest_extra/digest_extra.c: In function 'cbs_to_md':<br>\nexternal/boringssl/src/crypto/digest_extra/digest_extra.c:141:3: error: 'for' loop initial declarations are only allowed in C99 mode<br>\nfor (size_t i = 0; i &lt; OPENSSL_ARRAY_SIZE(kMDOIDs); i++) {<br>\n^<br>\nexternal/boringssl/src/crypto/digest_extra/digest_extra.c: In function 'EVP_marshal_digest_algorithm':<br>\nexternal/boringssl/src/crypto/digest_extra/digest_extra.c:204:3: error: 'for' loop initial declarations are only allowed in C99 mode<br>\nfor (size_t i = 0; i &lt; OPENSSL_ARRAY_SIZE(kMDOIDs); i++) {<br>\n^<br>\nexternal/boringssl/src/crypto/digest_extra/digest_extra.c: In function 'EVP_get_digestbyname':<br>\nexternal/boringssl/src/crypto/digest_extra/digest_extra.c:230:3: error: 'for' loop initial declarations are only allowed in C99 mode<br>\nfor (unsigned i = 0; i &lt; OPENSSL_ARRAY_SIZE(nid_to_digest_mapping); i++) {<br>\n^<br>\nTarget //tensorflow/tools/pip_package:build_pip_package failed to build<br>\nUse --verbose_failures to see the command lines of failed build steps.<br>\nINFO: Elapsed time: 57.111s, Critical Path: 0.81s<br>\nFAILED: Build did NOT complete successfully</p>\n<p>Hi <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=8660918\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jayfurmanek\">@jayfurmanek</a>  now, I am using the bazel 0.11.0. I also tried the version 0.15.0 (still the same error)<br>\n[root@Jingfeng_redhat tensorflow]# bazel version<br>\nBuild label: 0.11.0- (@non-git)<br>\nBuild target: bazel-out/ppc-opt/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar<br>\nBuild time: Fri Jul 13 14:25:29 +50491 (1531191651929)<br>\nBuild timestamp: 1531191651929<br>\nBuild timestamp as int: 1531191651929</p>\n<p>Here is the configuration info:<br>\n[root@Jingfeng_redhat tensorflow]# ./configure<br>\nWARNING: Running Bazel server needs to be killed, because the startup options are different.<br>\nYou have bazel 0.11.0- (@non-git) installed.<br>\nPlease specify the location of python. [Default is /root/anaconda3/bin/python]: /usr/bin/python3.4</p>\n<p>Found possible Python library paths:<br>\n/usr/lib64/python3.4/site-packages<br>\n/usr/lib/python3.4/site-packages<br>\nPlease input the desired Python library path to use.  Default is [/usr/lib64/python3.4/site-packages]</p>\n<p>Do you wish to build TensorFlow with jemalloc as malloc support? [Y/n]: y<br>\njemalloc as malloc support will be enabled for TensorFlow.</p>\n<p>Do you wish to build TensorFlow with Google Cloud Platform support? [Y/n]: n<br>\nNo Google Cloud Platform support will be enabled for TensorFlow.</p>\n<p>Do you wish to build TensorFlow with Hadoop File System support? [Y/n]: n<br>\nNo Hadoop File System support will be enabled for TensorFlow.</p>\n<p>Do you wish to build TensorFlow with Amazon AWS Platform support? [Y/n]: n<br>\nNo Amazon AWS Platform support will be enabled for TensorFlow.</p>\n<p>Do you wish to build TensorFlow with Apache Kafka Platform support? [Y/n]: n<br>\nNo Apache Kafka Platform support will be enabled for TensorFlow.</p>\n<p>Do you wish to build TensorFlow with XLA JIT support? [y/N]: n<br>\nNo XLA JIT support will be enabled for TensorFlow.</p>\n<p>Do you wish to build TensorFlow with GDR support? [y/N]: n<br>\nNo GDR support will be enabled for TensorFlow.</p>\n<p>Do you wish to build TensorFlow with VERBS support? [y/N]: n<br>\nNo VERBS support will be enabled for TensorFlow.</p>\n<p>Do you wish to build TensorFlow with OpenCL SYCL support? [y/N]: n<br>\nNo OpenCL SYCL support will be enabled for TensorFlow.</p>\n<p>Do you wish to build TensorFlow with CUDA support? [y/N]: y<br>\nCUDA support will be enabled for TensorFlow.</p>\n<p>Please specify the CUDA SDK version you want to use. [Leave empty to default to CUDA 9.0]:</p>\n<p>Please specify the location where CUDA 9.0 toolkit is installed. Refer to README.md for more details. [Default is /usr/local/cuda]:</p>\n<p>Please specify the cuDNN version you want to use. [Leave empty to default to cuDNN 7.0]:</p>\n<p>Please specify the location where cuDNN 7 library is installed. Refer to README.md for more details. [Default is /usr/local/cuda]:</p>\n<p>Do you wish to build TensorFlow with TensorRT support? [y/N]: n<br>\nNo TensorRT support will be enabled for TensorFlow.</p>\n<p>Please specify the NCCL version you want to use. [Leave empty to default to NCCL 1.3]:</p>\n<p>Please specify a list of comma-separated Cuda compute capabilities you want to build with.<br>\nYou can find the compute capability of your device at: <a href=\"https://developer.nvidia.com/cuda-gpus\" rel=\"nofollow\">https://developer.nvidia.com/cuda-gpus</a>.<br>\nPlease note that each additional compute capability significantly increases your build time and binary size. [Default is: 3.5,5.2]</p>\n<p>Do you want to use clang as CUDA compiler? [y/N]: n<br>\nnvcc will be used as CUDA compiler.</p>\n<p>Please specify which gcc should be used by nvcc as the host compiler. [Default is /usr/bin/gcc]:</p>\n<p>Do you wish to build TensorFlow with MPI support? [y/N]: n<br>\nNo MPI support will be enabled for TensorFlow.</p>\n<p>Please specify optimization flags to use during compilation when bazel option \"--config=opt\" is specified [Default is -mcpu=native]:</p>\n<p>Would you like to interactively configure ./WORKSPACE for Android builds? [y/N]: n<br>\nNot configuring the WORKSPACE for Android builds.</p>\n<p>Preconfigured Bazel build configs. You can use any of the below by adding \"--config=&lt;&gt;\" to your build command. See tools/bazel.rc for more details.<br>\n--config=mkl         \t# Build with MKL support.<br>\n--config=monolithic  \t# Config for mostly static monolithic build.<br>\nConfiguration finished<br>\n[root@Jingfeng_redhat tensorflow]#</p>", "body_text": "Hi @wdirons\nI git clone the latest version.\ngit clone https://github.com/tensorflow/tensorflow\n[root@Jingfeng_redhat tensorflow]# vi RELEASE.md\n\n # Release 1.9.0\n## Major Features And Improvements\n * Updated docs for `tf.keras`: New Keras-based [get started](http://tensorflow.org/versions/r1.9/get_started),\n and [programmers guide page](http://tensorflow.org/versions/r1.9/programmers_guide/keras).\n* Update `tf.keras` to the Keras 2.1.6 API.\n....\n\nI modify the .tf_configure.bazelrc file, changing it to false (see below), and then clear the cache. But still get the same error.\n[root@Jingfeng_redhat tensorflow]# rm -rf  ~/.cache/\n[root@Jingfeng_redhat tensorflow]# vi .tf_configure.bazelrc\nbuild --action_env PYTHON_BIN_PATH=\"/usr/bin/python3.4\"\nbuild --action_env PYTHON_LIB_PATH=\"/usr/lib64/python3.4/site-packages\"\nbuild --python_path=\"/usr/bin/python3.4\"\nbuild --define with_jemalloc=true\nbuild:gcp --define with_gcp_support=false\nbuild:hdfs --define with_hdfs_support=true\nbuild:aws --define with_aws_support=true\nbuild --define with_kafka_support=true\nbuild:xla --define with_xla_support=true\nbuild:gdr --define with_gdr_support=true\nbuild:verbs --define with_verbs_support=true\nbuild --action_env TF_NEED_OPENCL_SYCL=\"0\"\nbuild --action_env TF_NEED_CUDA=\"1\"\nbuild --action_env CUDA_TOOLKIT_PATH=\"/usr/local/cuda\"\nbuild --action_env TF_CUDA_VERSION=\"9.0\"\nbuild --action_env CUDNN_INSTALL_PATH=\"/usr/local/cuda-9.0\"\nbuild --action_env TF_CUDNN_VERSION=\"7\"\nbuild --action_env TF_NCCL_VERSION=\"1\"\nbuild --action_env TF_CUDA_COMPUTE_CAPABILITIES=\"3.5,5.2\"\nbuild --action_env TF_CUDA_CLANG=\"0\"\nbuild --action_env GCC_HOST_COMPILER_PATH=\"/usr/bin/gcc\"\nbuild --config=cuda\ntest --config=cuda\nbuild --define grpc_no_ares=true\nbuild:opt --copt=-mcpu=native\nbuild:opt --define with_default_optimizations=true\nbuild --strip=always\n[root@Jingfeng_redhat tensorflow]# bazel build --config=opt --config=cuda //tensorflow/tools/pip_package:build_pip_package\nExtracting Bazel installation...\n................\nERROR: /root/.cache/bazel/_bazel_root/efb88f6336d9c4a18216fb94287b8d97/external/boringssl/BUILD:115:1: C++ compilation of rule '@boringssl//:crypto' failed (Exit 1)\nexternal/boringssl/src/crypto/digest_extra/digest_extra.c: In function 'EVP_get_digestbynid':\nexternal/boringssl/src/crypto/digest_extra/digest_extra.c:110:3: error: 'for' loop initial declarations are only allowed in C99 mode\nfor (unsigned i = 0; i < OPENSSL_ARRAY_SIZE(nid_to_digest_mapping); i++) {\n^\nexternal/boringssl/src/crypto/digest_extra/digest_extra.c:110:3: note: use option -std=c99 or -std=gnu99 to compile your code\nexternal/boringssl/src/crypto/digest_extra/digest_extra.c: In function 'cbs_to_md':\nexternal/boringssl/src/crypto/digest_extra/digest_extra.c:141:3: error: 'for' loop initial declarations are only allowed in C99 mode\nfor (size_t i = 0; i < OPENSSL_ARRAY_SIZE(kMDOIDs); i++) {\n^\nexternal/boringssl/src/crypto/digest_extra/digest_extra.c: In function 'EVP_marshal_digest_algorithm':\nexternal/boringssl/src/crypto/digest_extra/digest_extra.c:204:3: error: 'for' loop initial declarations are only allowed in C99 mode\nfor (size_t i = 0; i < OPENSSL_ARRAY_SIZE(kMDOIDs); i++) {\n^\nexternal/boringssl/src/crypto/digest_extra/digest_extra.c: In function 'EVP_get_digestbyname':\nexternal/boringssl/src/crypto/digest_extra/digest_extra.c:230:3: error: 'for' loop initial declarations are only allowed in C99 mode\nfor (unsigned i = 0; i < OPENSSL_ARRAY_SIZE(nid_to_digest_mapping); i++) {\n^\nTarget //tensorflow/tools/pip_package:build_pip_package failed to build\nUse --verbose_failures to see the command lines of failed build steps.\nINFO: Elapsed time: 57.111s, Critical Path: 0.81s\nFAILED: Build did NOT complete successfully\nHi @jayfurmanek  now, I am using the bazel 0.11.0. I also tried the version 0.15.0 (still the same error)\n[root@Jingfeng_redhat tensorflow]# bazel version\nBuild label: 0.11.0- (@non-git)\nBuild target: bazel-out/ppc-opt/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar\nBuild time: Fri Jul 13 14:25:29 +50491 (1531191651929)\nBuild timestamp: 1531191651929\nBuild timestamp as int: 1531191651929\nHere is the configuration info:\n[root@Jingfeng_redhat tensorflow]# ./configure\nWARNING: Running Bazel server needs to be killed, because the startup options are different.\nYou have bazel 0.11.0- (@non-git) installed.\nPlease specify the location of python. [Default is /root/anaconda3/bin/python]: /usr/bin/python3.4\nFound possible Python library paths:\n/usr/lib64/python3.4/site-packages\n/usr/lib/python3.4/site-packages\nPlease input the desired Python library path to use.  Default is [/usr/lib64/python3.4/site-packages]\nDo you wish to build TensorFlow with jemalloc as malloc support? [Y/n]: y\njemalloc as malloc support will be enabled for TensorFlow.\nDo you wish to build TensorFlow with Google Cloud Platform support? [Y/n]: n\nNo Google Cloud Platform support will be enabled for TensorFlow.\nDo you wish to build TensorFlow with Hadoop File System support? [Y/n]: n\nNo Hadoop File System support will be enabled for TensorFlow.\nDo you wish to build TensorFlow with Amazon AWS Platform support? [Y/n]: n\nNo Amazon AWS Platform support will be enabled for TensorFlow.\nDo you wish to build TensorFlow with Apache Kafka Platform support? [Y/n]: n\nNo Apache Kafka Platform support will be enabled for TensorFlow.\nDo you wish to build TensorFlow with XLA JIT support? [y/N]: n\nNo XLA JIT support will be enabled for TensorFlow.\nDo you wish to build TensorFlow with GDR support? [y/N]: n\nNo GDR support will be enabled for TensorFlow.\nDo you wish to build TensorFlow with VERBS support? [y/N]: n\nNo VERBS support will be enabled for TensorFlow.\nDo you wish to build TensorFlow with OpenCL SYCL support? [y/N]: n\nNo OpenCL SYCL support will be enabled for TensorFlow.\nDo you wish to build TensorFlow with CUDA support? [y/N]: y\nCUDA support will be enabled for TensorFlow.\nPlease specify the CUDA SDK version you want to use. [Leave empty to default to CUDA 9.0]:\nPlease specify the location where CUDA 9.0 toolkit is installed. Refer to README.md for more details. [Default is /usr/local/cuda]:\nPlease specify the cuDNN version you want to use. [Leave empty to default to cuDNN 7.0]:\nPlease specify the location where cuDNN 7 library is installed. Refer to README.md for more details. [Default is /usr/local/cuda]:\nDo you wish to build TensorFlow with TensorRT support? [y/N]: n\nNo TensorRT support will be enabled for TensorFlow.\nPlease specify the NCCL version you want to use. [Leave empty to default to NCCL 1.3]:\nPlease specify a list of comma-separated Cuda compute capabilities you want to build with.\nYou can find the compute capability of your device at: https://developer.nvidia.com/cuda-gpus.\nPlease note that each additional compute capability significantly increases your build time and binary size. [Default is: 3.5,5.2]\nDo you want to use clang as CUDA compiler? [y/N]: n\nnvcc will be used as CUDA compiler.\nPlease specify which gcc should be used by nvcc as the host compiler. [Default is /usr/bin/gcc]:\nDo you wish to build TensorFlow with MPI support? [y/N]: n\nNo MPI support will be enabled for TensorFlow.\nPlease specify optimization flags to use during compilation when bazel option \"--config=opt\" is specified [Default is -mcpu=native]:\nWould you like to interactively configure ./WORKSPACE for Android builds? [y/N]: n\nNot configuring the WORKSPACE for Android builds.\nPreconfigured Bazel build configs. You can use any of the below by adding \"--config=<>\" to your build command. See tools/bazel.rc for more details.\n--config=mkl         \t# Build with MKL support.\n--config=monolithic  \t# Config for mostly static monolithic build.\nConfiguration finished\n[root@Jingfeng_redhat tensorflow]#", "body": "Hi @wdirons \r\nI git clone the latest version. \r\ngit clone https://github.com/tensorflow/tensorflow\r\n[root@Jingfeng_redhat tensorflow]# vi RELEASE.md \r\n```\r\n\r\n # Release 1.9.0\r\n## Major Features And Improvements\r\n * Updated docs for `tf.keras`: New Keras-based [get started](http://tensorflow.org/versions/r1.9/get_started),\r\n and [programmers guide page](http://tensorflow.org/versions/r1.9/programmers_guide/keras).\r\n* Update `tf.keras` to the Keras 2.1.6 API.\r\n....\r\n```\r\n\r\nI modify the .tf_configure.bazelrc file, changing it to false (see below), and then clear the cache. But still get the same error. \r\n\r\n[root@Jingfeng_redhat tensorflow]# rm -rf  ~/.cache/\r\n[root@Jingfeng_redhat tensorflow]# vi .tf_configure.bazelrc\r\nbuild --action_env PYTHON_BIN_PATH=\"/usr/bin/python3.4\"\r\nbuild --action_env PYTHON_LIB_PATH=\"/usr/lib64/python3.4/site-packages\"\r\nbuild --python_path=\"/usr/bin/python3.4\"\r\nbuild --define with_jemalloc=true\r\nbuild:gcp --define with_gcp_support=false\r\nbuild:hdfs --define with_hdfs_support=true\r\nbuild:aws --define with_aws_support=true\r\nbuild --define with_kafka_support=true\r\nbuild:xla --define with_xla_support=true\r\nbuild:gdr --define with_gdr_support=true\r\nbuild:verbs --define with_verbs_support=true\r\nbuild --action_env TF_NEED_OPENCL_SYCL=\"0\"\r\nbuild --action_env TF_NEED_CUDA=\"1\"\r\nbuild --action_env CUDA_TOOLKIT_PATH=\"/usr/local/cuda\"\r\nbuild --action_env TF_CUDA_VERSION=\"9.0\"\r\nbuild --action_env CUDNN_INSTALL_PATH=\"/usr/local/cuda-9.0\"\r\nbuild --action_env TF_CUDNN_VERSION=\"7\"\r\nbuild --action_env TF_NCCL_VERSION=\"1\"\r\nbuild --action_env TF_CUDA_COMPUTE_CAPABILITIES=\"3.5,5.2\"\r\nbuild --action_env TF_CUDA_CLANG=\"0\"\r\nbuild --action_env GCC_HOST_COMPILER_PATH=\"/usr/bin/gcc\"\r\nbuild --config=cuda\r\ntest --config=cuda\r\nbuild --define grpc_no_ares=true\r\nbuild:opt --copt=-mcpu=native\r\nbuild:opt --define with_default_optimizations=true\r\nbuild --strip=always\r\n\r\n\r\n[root@Jingfeng_redhat tensorflow]# bazel build --config=opt --config=cuda //tensorflow/tools/pip_package:build_pip_package\r\nExtracting Bazel installation...\r\n................\r\nERROR: /root/.cache/bazel/_bazel_root/efb88f6336d9c4a18216fb94287b8d97/external/boringssl/BUILD:115:1: C++ compilation of rule '@boringssl//:crypto' failed (Exit 1)\r\nexternal/boringssl/src/crypto/digest_extra/digest_extra.c: In function 'EVP_get_digestbynid':\r\nexternal/boringssl/src/crypto/digest_extra/digest_extra.c:110:3: error: 'for' loop initial declarations are only allowed in C99 mode\r\n   for (unsigned i = 0; i < OPENSSL_ARRAY_SIZE(nid_to_digest_mapping); i++) {\r\n   ^\r\nexternal/boringssl/src/crypto/digest_extra/digest_extra.c:110:3: note: use option -std=c99 or -std=gnu99 to compile your code\r\nexternal/boringssl/src/crypto/digest_extra/digest_extra.c: In function 'cbs_to_md':\r\nexternal/boringssl/src/crypto/digest_extra/digest_extra.c:141:3: error: 'for' loop initial declarations are only allowed in C99 mode\r\n   for (size_t i = 0; i < OPENSSL_ARRAY_SIZE(kMDOIDs); i++) {\r\n   ^\r\nexternal/boringssl/src/crypto/digest_extra/digest_extra.c: In function 'EVP_marshal_digest_algorithm':\r\nexternal/boringssl/src/crypto/digest_extra/digest_extra.c:204:3: error: 'for' loop initial declarations are only allowed in C99 mode\r\n   for (size_t i = 0; i < OPENSSL_ARRAY_SIZE(kMDOIDs); i++) {\r\n   ^\r\nexternal/boringssl/src/crypto/digest_extra/digest_extra.c: In function 'EVP_get_digestbyname':\r\nexternal/boringssl/src/crypto/digest_extra/digest_extra.c:230:3: error: 'for' loop initial declarations are only allowed in C99 mode\r\n   for (unsigned i = 0; i < OPENSSL_ARRAY_SIZE(nid_to_digest_mapping); i++) {\r\n   ^\r\nTarget //tensorflow/tools/pip_package:build_pip_package failed to build\r\nUse --verbose_failures to see the command lines of failed build steps.\r\nINFO: Elapsed time: 57.111s, Critical Path: 0.81s\r\nFAILED: Build did NOT complete successfully\r\n\r\n\r\nHi @jayfurmanek  now, I am using the bazel 0.11.0. I also tried the version 0.15.0 (still the same error) \r\n[root@Jingfeng_redhat tensorflow]# bazel version\r\nBuild label: 0.11.0- (@non-git)\r\nBuild target: bazel-out/ppc-opt/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar\r\nBuild time: Fri Jul 13 14:25:29 +50491 (1531191651929)\r\nBuild timestamp: 1531191651929\r\nBuild timestamp as int: 1531191651929\r\n\r\n\r\nHere is the configuration info: \r\n[root@Jingfeng_redhat tensorflow]# ./configure \r\nWARNING: Running Bazel server needs to be killed, because the startup options are different.\r\nYou have bazel 0.11.0- (@non-git) installed.\r\nPlease specify the location of python. [Default is /root/anaconda3/bin/python]: /usr/bin/python3.4\r\n\r\n\r\nFound possible Python library paths:\r\n  /usr/lib64/python3.4/site-packages\r\n  /usr/lib/python3.4/site-packages\r\nPlease input the desired Python library path to use.  Default is [/usr/lib64/python3.4/site-packages]\r\n\r\nDo you wish to build TensorFlow with jemalloc as malloc support? [Y/n]: y\r\njemalloc as malloc support will be enabled for TensorFlow.\r\n\r\nDo you wish to build TensorFlow with Google Cloud Platform support? [Y/n]: n\r\nNo Google Cloud Platform support will be enabled for TensorFlow.\r\n\r\nDo you wish to build TensorFlow with Hadoop File System support? [Y/n]: n\r\nNo Hadoop File System support will be enabled for TensorFlow.\r\n\r\nDo you wish to build TensorFlow with Amazon AWS Platform support? [Y/n]: n\r\nNo Amazon AWS Platform support will be enabled for TensorFlow.\r\n\r\nDo you wish to build TensorFlow with Apache Kafka Platform support? [Y/n]: n\r\nNo Apache Kafka Platform support will be enabled for TensorFlow.\r\n\r\nDo you wish to build TensorFlow with XLA JIT support? [y/N]: n\r\nNo XLA JIT support will be enabled for TensorFlow.\r\n\r\nDo you wish to build TensorFlow with GDR support? [y/N]: n\r\nNo GDR support will be enabled for TensorFlow.\r\n\r\nDo you wish to build TensorFlow with VERBS support? [y/N]: n\r\nNo VERBS support will be enabled for TensorFlow.\r\n\r\nDo you wish to build TensorFlow with OpenCL SYCL support? [y/N]: n\r\nNo OpenCL SYCL support will be enabled for TensorFlow.\r\n\r\nDo you wish to build TensorFlow with CUDA support? [y/N]: y\r\nCUDA support will be enabled for TensorFlow.\r\n\r\nPlease specify the CUDA SDK version you want to use. [Leave empty to default to CUDA 9.0]: \r\n\r\n\r\nPlease specify the location where CUDA 9.0 toolkit is installed. Refer to README.md for more details. [Default is /usr/local/cuda]: \r\n\r\n\r\nPlease specify the cuDNN version you want to use. [Leave empty to default to cuDNN 7.0]: \r\n\r\n\r\nPlease specify the location where cuDNN 7 library is installed. Refer to README.md for more details. [Default is /usr/local/cuda]:\r\n\r\n\r\nDo you wish to build TensorFlow with TensorRT support? [y/N]: n\r\nNo TensorRT support will be enabled for TensorFlow.\r\n\r\n\r\nPlease specify the NCCL version you want to use. [Leave empty to default to NCCL 1.3]: \r\n\r\n\r\nPlease specify a list of comma-separated Cuda compute capabilities you want to build with.\r\nYou can find the compute capability of your device at: https://developer.nvidia.com/cuda-gpus.\r\nPlease note that each additional compute capability significantly increases your build time and binary size. [Default is: 3.5,5.2]\r\n\r\n\r\nDo you want to use clang as CUDA compiler? [y/N]: n\r\nnvcc will be used as CUDA compiler.\r\n\r\nPlease specify which gcc should be used by nvcc as the host compiler. [Default is /usr/bin/gcc]: \r\n\r\n\r\nDo you wish to build TensorFlow with MPI support? [y/N]: n\r\nNo MPI support will be enabled for TensorFlow.\r\n\r\nPlease specify optimization flags to use during compilation when bazel option \"--config=opt\" is specified [Default is -mcpu=native]: \r\n\r\n\r\nWould you like to interactively configure ./WORKSPACE for Android builds? [y/N]: n\r\nNot configuring the WORKSPACE for Android builds.\r\n\r\nPreconfigured Bazel build configs. You can use any of the below by adding \"--config=<>\" to your build command. See tools/bazel.rc for more details.\r\n\t--config=mkl         \t# Build with MKL support.\r\n\t--config=monolithic  \t# Config for mostly static monolithic build.\r\nConfiguration finished\r\n[root@Jingfeng_redhat tensorflow]# \r\n\r\n\r\n\r\n\r\n\r\n\r\n"}