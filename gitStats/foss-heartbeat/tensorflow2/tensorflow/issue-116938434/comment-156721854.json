{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/156721854", "html_url": "https://github.com/tensorflow/tensorflow/issues/221#issuecomment-156721854", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/221", "id": 156721854, "node_id": "MDEyOklzc3VlQ29tbWVudDE1NjcyMTg1NA==", "user": {"login": "vrv", "id": 463737, "node_id": "MDQ6VXNlcjQ2MzczNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/463737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vrv", "html_url": "https://github.com/vrv", "followers_url": "https://api.github.com/users/vrv/followers", "following_url": "https://api.github.com/users/vrv/following{/other_user}", "gists_url": "https://api.github.com/users/vrv/gists{/gist_id}", "starred_url": "https://api.github.com/users/vrv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vrv/subscriptions", "organizations_url": "https://api.github.com/users/vrv/orgs", "repos_url": "https://api.github.com/users/vrv/repos", "events_url": "https://api.github.com/users/vrv/events{/privacy}", "received_events_url": "https://api.github.com/users/vrv/received_events", "type": "User", "site_admin": false}, "created_at": "2015-11-14T17:29:09Z", "updated_at": "2015-11-14T17:29:09Z", "author_association": "CONTRIBUTOR", "body_html": "<p>matrix_inverse unfortunately is not yet implemented on GPU, but some of the other operations are, so I suspect there's some amount of memory copying.  MatrixInverse on CPU is just calling Eigen::FullPivLU: <div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/d6357a5849db980df51d00d8a9ff874cda2faeb3/tensorflow/core/kernels/matrix_inverse_op.cc#L50\">tensorflow/tensorflow/core/kernels/matrix_inverse_op.cc</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n         Line 50\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/d6357a5849db980df51d00d8a9ff874cda2faeb3\">d6357a5</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L50\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"50\"></td>\n          <td id=\"LC50\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> Eigen::FullPivLU&lt;Eigen::Matrix&lt;Scalar, Eigen::Dynamic, Eigen::Dynamic, </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n, so the optimizations probably have to be made at that level.</p>\n<p>(We also don't distribute our binary package using avx/avx2 optimizations so they can run on more platforms, so it's possible things might run faster when running from source and building with more optimizations for your platform).</p>", "body_text": "matrix_inverse unfortunately is not yet implemented on GPU, but some of the other operations are, so I suspect there's some amount of memory copying.  MatrixInverse on CPU is just calling Eigen::FullPivLU: \n  \n    \n      tensorflow/tensorflow/core/kernels/matrix_inverse_op.cc\n    \n    \n         Line 50\n      in\n      d6357a5\n    \n    \n    \n    \n\n        \n          \n           Eigen::FullPivLU<Eigen::Matrix<Scalar, Eigen::Dynamic, Eigen::Dynamic, \n        \n    \n  \n\n, so the optimizations probably have to be made at that level.\n(We also don't distribute our binary package using avx/avx2 optimizations so they can run on more platforms, so it's possible things might run faster when running from source and building with more optimizations for your platform).", "body": "matrix_inverse unfortunately is not yet implemented on GPU, but some of the other operations are, so I suspect there's some amount of memory copying.  MatrixInverse on CPU is just calling Eigen::FullPivLU: https://github.com/tensorflow/tensorflow/blob/d6357a5849db980df51d00d8a9ff874cda2faeb3/tensorflow/core/kernels/matrix_inverse_op.cc#L50, so the optimizations probably have to be made at that level.\n\n(We also don't distribute our binary package using avx/avx2 optimizations so they can run on more platforms, so it's possible things might run faster when running from source and building with more optimizations for your platform).\n"}