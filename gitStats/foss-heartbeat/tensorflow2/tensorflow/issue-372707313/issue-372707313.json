{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23173", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23173/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23173/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23173/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/23173", "id": 372707313, "node_id": "MDExOlB1bGxSZXF1ZXN0MjI0ODE5NjE0", "number": 23173, "title": "[Intel-MKL] Fold subdivmul based batchnorms onto convlution and biasadd", "user": {"login": "nammbash", "id": 38869685, "node_id": "MDQ6VXNlcjM4ODY5Njg1", "avatar_url": "https://avatars3.githubusercontent.com/u/38869685?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nammbash", "html_url": "https://github.com/nammbash", "followers_url": "https://api.github.com/users/nammbash/followers", "following_url": "https://api.github.com/users/nammbash/following{/other_user}", "gists_url": "https://api.github.com/users/nammbash/gists{/gist_id}", "starred_url": "https://api.github.com/users/nammbash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nammbash/subscriptions", "organizations_url": "https://api.github.com/users/nammbash/orgs", "repos_url": "https://api.github.com/users/nammbash/repos", "events_url": "https://api.github.com/users/nammbash/events{/privacy}", "received_events_url": "https://api.github.com/users/nammbash/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}], "state": "open", "locked": false, "assignee": {"login": "wt-huang", "id": 42785337, "node_id": "MDQ6VXNlcjQyNzg1MzM3", "avatar_url": "https://avatars0.githubusercontent.com/u/42785337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wt-huang", "html_url": "https://github.com/wt-huang", "followers_url": "https://api.github.com/users/wt-huang/followers", "following_url": "https://api.github.com/users/wt-huang/following{/other_user}", "gists_url": "https://api.github.com/users/wt-huang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wt-huang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wt-huang/subscriptions", "organizations_url": "https://api.github.com/users/wt-huang/orgs", "repos_url": "https://api.github.com/users/wt-huang/repos", "events_url": "https://api.github.com/users/wt-huang/events{/privacy}", "received_events_url": "https://api.github.com/users/wt-huang/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "wt-huang", "id": 42785337, "node_id": "MDQ6VXNlcjQyNzg1MzM3", "avatar_url": "https://avatars0.githubusercontent.com/u/42785337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wt-huang", "html_url": "https://github.com/wt-huang", "followers_url": "https://api.github.com/users/wt-huang/followers", "following_url": "https://api.github.com/users/wt-huang/following{/other_user}", "gists_url": "https://api.github.com/users/wt-huang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wt-huang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wt-huang/subscriptions", "organizations_url": "https://api.github.com/users/wt-huang/orgs", "repos_url": "https://api.github.com/users/wt-huang/repos", "events_url": "https://api.github.com/users/wt-huang/events{/privacy}", "received_events_url": "https://api.github.com/users/wt-huang/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-10-22T21:25:56Z", "updated_at": "2018-11-21T17:13:17Z", "closed_at": null, "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/23173", "html_url": "https://github.com/tensorflow/tensorflow/pull/23173", "diff_url": "https://github.com/tensorflow/tensorflow/pull/23173.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/23173.patch"}, "body_html": "<p>This PR folds BatchNorms that are of form Sub-RealDiv-Mul format into the Conv2d present before and BiasAdd node present after.</p>\n<pre>Before:\n---&gt;Conv2D ---&gt; Sub ---&gt; RealDiv ---&gt; Mul ---&gt; BiasAdd ---&gt;\n      ^          ^         ^           ^          ^\n    Const      Const      Const      Const      Const\n\nAfter:\n---&gt;Conv2D ---------------------------------&gt; BiasAdd ---&gt;\n      ^                                          ^\n  Const(New)                                 Const(New)\n</pre>\n<p>This optimization can be used in models such as Yolov2, Yolov3 where we see a  12 to 14% FP32 performance improvement while preserving the same mAP accuracy.</p>\n<p>Note: The input bias for the convolution2D node is set to zero in our calculation of Const(New) to Conv2D.</p>", "body_text": "This PR folds BatchNorms that are of form Sub-RealDiv-Mul format into the Conv2d present before and BiasAdd node present after.\nBefore:\n--->Conv2D ---> Sub ---> RealDiv ---> Mul ---> BiasAdd --->\n      ^          ^         ^           ^          ^\n    Const      Const      Const      Const      Const\n\nAfter:\n--->Conv2D ---------------------------------> BiasAdd --->\n      ^                                          ^\n  Const(New)                                 Const(New)\n\nThis optimization can be used in models such as Yolov2, Yolov3 where we see a  12 to 14% FP32 performance improvement while preserving the same mAP accuracy.\nNote: The input bias for the convolution2D node is set to zero in our calculation of Const(New) to Conv2D.", "body": "This PR folds BatchNorms that are of form Sub-RealDiv-Mul format into the Conv2d present before and BiasAdd node present after.\r\n\r\n<pre>\r\nBefore:\r\n--->Conv2D ---> Sub ---> RealDiv ---> Mul ---> BiasAdd --->\r\n      ^          ^         ^           ^          ^\r\n    Const      Const      Const      Const      Const\r\n\r\nAfter:\r\n--->Conv2D ---------------------------------> BiasAdd --->\r\n      ^                                          ^\r\n  Const(New)                                 Const(New)\r\n</pre>\r\nThis optimization can be used in models such as Yolov2, Yolov3 where we see a  12 to 14% FP32 performance improvement while preserving the same mAP accuracy.\r\n\r\nNote: The input bias for the convolution2D node is set to zero in our calculation of Const(New) to Conv2D. "}