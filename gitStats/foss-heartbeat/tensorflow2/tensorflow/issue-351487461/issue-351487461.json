{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21673", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21673/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21673/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21673/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21673", "id": 351487461, "node_id": "MDU6SXNzdWUzNTE0ODc0NjE=", "number": 21673, "title": "Feature Request: make grid image summary adapt to different channel number", "user": {"login": "AtlantixJJ", "id": 20163080, "node_id": "MDQ6VXNlcjIwMTYzMDgw", "avatar_url": "https://avatars1.githubusercontent.com/u/20163080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AtlantixJJ", "html_url": "https://github.com/AtlantixJJ", "followers_url": "https://api.github.com/users/AtlantixJJ/followers", "following_url": "https://api.github.com/users/AtlantixJJ/following{/other_user}", "gists_url": "https://api.github.com/users/AtlantixJJ/gists{/gist_id}", "starred_url": "https://api.github.com/users/AtlantixJJ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AtlantixJJ/subscriptions", "organizations_url": "https://api.github.com/users/AtlantixJJ/orgs", "repos_url": "https://api.github.com/users/AtlantixJJ/repos", "events_url": "https://api.github.com/users/AtlantixJJ/events{/privacy}", "received_events_url": "https://api.github.com/users/AtlantixJJ/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "tatianashp", "id": 986732, "node_id": "MDQ6VXNlcjk4NjczMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/986732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatianashp", "html_url": "https://github.com/tatianashp", "followers_url": "https://api.github.com/users/tatianashp/followers", "following_url": "https://api.github.com/users/tatianashp/following{/other_user}", "gists_url": "https://api.github.com/users/tatianashp/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatianashp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatianashp/subscriptions", "organizations_url": "https://api.github.com/users/tatianashp/orgs", "repos_url": "https://api.github.com/users/tatianashp/repos", "events_url": "https://api.github.com/users/tatianashp/events{/privacy}", "received_events_url": "https://api.github.com/users/tatianashp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tatianashp", "id": 986732, "node_id": "MDQ6VXNlcjk4NjczMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/986732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatianashp", "html_url": "https://github.com/tatianashp", "followers_url": "https://api.github.com/users/tatianashp/followers", "following_url": "https://api.github.com/users/tatianashp/following{/other_user}", "gists_url": "https://api.github.com/users/tatianashp/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatianashp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatianashp/subscriptions", "organizations_url": "https://api.github.com/users/tatianashp/orgs", "repos_url": "https://api.github.com/users/tatianashp/repos", "events_url": "https://api.github.com/users/tatianashp/events{/privacy}", "received_events_url": "https://api.github.com/users/tatianashp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-08-17T07:31:14Z", "updated_at": "2018-11-19T23:26:29Z", "closed_at": null, "author_association": "NONE", "body_html": "<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:<br>\nYes.</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:<br>\nLinux Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:<br>\nBinary</li>\n<li><strong>TensorFlow version (use command below)</strong>:<br>\n1.10.0</li>\n<li><strong>Python version</strong>:<br>\n3.6</li>\n<li><strong>Bazel version</strong>:<br>\nN/A</li>\n<li><strong>CUDA/cuDNN version</strong>:<br>\nN/A</li>\n<li><strong>GPU model and memory</strong>:<br>\nN/A</li>\n<li><strong>Exact command to reproduce</strong>:<br>\nN/A</li>\n<li><strong>Mobile device</strong>:<br>\nN/A</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>In image-to-image translation, sometimes we need to transform a grey image to a colored one and vice versa. In this case, image summary need to concatenate different images with different number of channels together. In tensorflow.contrib.gan standard library, this will produce a bug.</p>\n<p>I request to add an automatic mechanism to complete image channel, e.g. tile up gery image to have 3 channels. It's quite simple, and I write a workaround code. Hope this can help you add this feature.</p>\n<h3>Source code / logs</h3>\n<p>First, a compulsory function for converting channel number. Notice it's input is a 3D image (H, W, C).</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">convert_channel</span>(<span class=\"pl-smi\">image</span>):\n  H, W <span class=\"pl-k\">=</span> image.get_shape()[:<span class=\"pl-c1\">2</span>]\n  image <span class=\"pl-k\">=</span> array_ops.tile(image, [<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>, math_ops.maximum(<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">4</span> <span class=\"pl-k\">-</span> array_ops.shape(image)[<span class=\"pl-c1\">2</span>])])\n  image <span class=\"pl-k\">=</span> array_ops.slice(image, [<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>], [H, W, <span class=\"pl-c1\">3</span>])\n  <span class=\"pl-k\">return</span> image</pre></div>\n<p>Second, apply this before any concatenation of image summary.</p>\n<p>Thank you.</p>", "body_text": "Have I written custom code (as opposed to using a stock example script provided in TensorFlow):\nYes.\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nLinux Ubuntu 16.04\nTensorFlow installed from (source or binary):\nBinary\nTensorFlow version (use command below):\n1.10.0\nPython version:\n3.6\nBazel version:\nN/A\nCUDA/cuDNN version:\nN/A\nGPU model and memory:\nN/A\nExact command to reproduce:\nN/A\nMobile device:\nN/A\n\nDescribe the problem\nIn image-to-image translation, sometimes we need to transform a grey image to a colored one and vice versa. In this case, image summary need to concatenate different images with different number of channels together. In tensorflow.contrib.gan standard library, this will produce a bug.\nI request to add an automatic mechanism to complete image channel, e.g. tile up gery image to have 3 channels. It's quite simple, and I write a workaround code. Hope this can help you add this feature.\nSource code / logs\nFirst, a compulsory function for converting channel number. Notice it's input is a 3D image (H, W, C).\ndef convert_channel(image):\n  H, W = image.get_shape()[:2]\n  image = array_ops.tile(image, [1, 1, math_ops.maximum(1, 4 - array_ops.shape(image)[2])])\n  image = array_ops.slice(image, [0, 0, 0], [H, W, 3])\n  return image\nSecond, apply this before any concatenation of image summary.\nThank you.", "body": "- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nYes.\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nLinux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**:\r\nBinary\r\n- **TensorFlow version (use command below)**:\r\n1.10.0\r\n- **Python version**:\r\n3.6\r\n- **Bazel version**:\r\nN/A\r\n- **CUDA/cuDNN version**:\r\nN/A\r\n- **GPU model and memory**:\r\nN/A\r\n- **Exact command to reproduce**:\r\nN/A\r\n- **Mobile device**:\r\nN/A\r\n\r\n### Describe the problem\r\n\r\nIn image-to-image translation, sometimes we need to transform a grey image to a colored one and vice versa. In this case, image summary need to concatenate different images with different number of channels together. In tensorflow.contrib.gan standard library, this will produce a bug.\r\n\r\nI request to add an automatic mechanism to complete image channel, e.g. tile up gery image to have 3 channels. It's quite simple, and I write a workaround code. Hope this can help you add this feature.\r\n\r\n### Source code / logs\r\n\r\nFirst, a compulsory function for converting channel number. Notice it's input is a 3D image (H, W, C).\r\n\r\n```python\r\ndef convert_channel(image):\r\n  H, W = image.get_shape()[:2]\r\n  image = array_ops.tile(image, [1, 1, math_ops.maximum(1, 4 - array_ops.shape(image)[2])])\r\n  image = array_ops.slice(image, [0, 0, 0], [H, W, 3])\r\n  return image\r\n```\r\n\r\nSecond, apply this before any concatenation of image summary.\r\n\r\nThank you.\r\n\r\n"}