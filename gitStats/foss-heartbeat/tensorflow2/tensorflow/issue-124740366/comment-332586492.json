{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/332586492", "html_url": "https://github.com/tensorflow/tensorflow/issues/675#issuecomment-332586492", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/675", "id": 332586492, "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjU4NjQ5Mg==", "user": {"login": "candidj0", "id": 26007201, "node_id": "MDQ6VXNlcjI2MDA3MjAx", "avatar_url": "https://avatars0.githubusercontent.com/u/26007201?v=4", "gravatar_id": "", "url": "https://api.github.com/users/candidj0", "html_url": "https://github.com/candidj0", "followers_url": "https://api.github.com/users/candidj0/followers", "following_url": "https://api.github.com/users/candidj0/following{/other_user}", "gists_url": "https://api.github.com/users/candidj0/gists{/gist_id}", "starred_url": "https://api.github.com/users/candidj0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/candidj0/subscriptions", "organizations_url": "https://api.github.com/users/candidj0/orgs", "repos_url": "https://api.github.com/users/candidj0/repos", "events_url": "https://api.github.com/users/candidj0/events{/privacy}", "received_events_url": "https://api.github.com/users/candidj0/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-27T16:55:36Z", "updated_at": "2017-09-27T17:42:40Z", "author_association": "NONE", "body_html": "<p>Sorry <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=28891757\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/shaifugpt\">@shaifugpt</a>, try this one :</p>\n<pre><code>def jacobian(y, x, n):\n    y_list = tf.unstack(y, num = n)\n    jacobian_list = [[tf.gradients(y_, x)[0][i] for y_ in tf.unstack(y_list[i])] for i in range(n)] # list [grad(y0, x), grad(y1, x), ...]\n    return tf.stack(jacobian_list)\n</code></pre>\n<p>n is the batch size.</p>", "body_text": "Sorry @shaifugpt, try this one :\ndef jacobian(y, x, n):\n    y_list = tf.unstack(y, num = n)\n    jacobian_list = [[tf.gradients(y_, x)[0][i] for y_ in tf.unstack(y_list[i])] for i in range(n)] # list [grad(y0, x), grad(y1, x), ...]\n    return tf.stack(jacobian_list)\n\nn is the batch size.", "body": "Sorry @shaifugpt, try this one : \r\n``` \r\ndef jacobian(y, x, n):\r\n    y_list = tf.unstack(y, num = n)\r\n    jacobian_list = [[tf.gradients(y_, x)[0][i] for y_ in tf.unstack(y_list[i])] for i in range(n)] # list [grad(y0, x), grad(y1, x), ...]\r\n    return tf.stack(jacobian_list)\r\n```\r\nn is the batch size."}