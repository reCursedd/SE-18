{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/302792300", "html_url": "https://github.com/tensorflow/tensorflow/issues/675#issuecomment-302792300", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/675", "id": 302792300, "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjc5MjMwMA==", "user": {"login": "liber145", "id": 6804598, "node_id": "MDQ6VXNlcjY4MDQ1OTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/6804598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liber145", "html_url": "https://github.com/liber145", "followers_url": "https://api.github.com/users/liber145/followers", "following_url": "https://api.github.com/users/liber145/following{/other_user}", "gists_url": "https://api.github.com/users/liber145/gists{/gist_id}", "starred_url": "https://api.github.com/users/liber145/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liber145/subscriptions", "organizations_url": "https://api.github.com/users/liber145/orgs", "repos_url": "https://api.github.com/users/liber145/repos", "events_url": "https://api.github.com/users/liber145/events{/privacy}", "received_events_url": "https://api.github.com/users/liber145/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-19T19:34:12Z", "updated_at": "2017-05-19T19:37:39Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1217238\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/shoyer\">@shoyer</a> Hi. Thanks for your example to compute jocabian. Computing jocabian by gradients in an <code>for</code> iteration is quite slow. Is there a way to use <code>map_fn</code> method to accelerate computing?</p>\n<p>I tried <code>map_fn</code> in</p>\n<div class=\"highlight highlight-source-python\"><pre>y_flat <span class=\"pl-k\">=</span> tf.reshape(y, (<span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>,))\njacobian_flat <span class=\"pl-k\">=</span> tf.map_fn(fn, y_flat)\n\ny_flat <span class=\"pl-k\">=</span> tf.unstack(y, <span class=\"pl-v\">num</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">3</span>)\njacobian_flat <span class=\"pl-k\">=</span> tf.map_fn(fn, y_flat)\n\ny_flat <span class=\"pl-k\">=</span> tf.split(y, <span class=\"pl-c1\">3</span>)\njacobian_flat <span class=\"pl-k\">=</span> tf.map_fn(fn, y_flat)</pre></div>\n<p>But all of them can not work. Could you give me some examples for <code>tf.gradients</code> in <code>map_fn</code>?</p>", "body_text": "@shoyer Hi. Thanks for your example to compute jocabian. Computing jocabian by gradients in an for iteration is quite slow. Is there a way to use map_fn method to accelerate computing?\nI tried map_fn in\ny_flat = tf.reshape(y, (-1,))\njacobian_flat = tf.map_fn(fn, y_flat)\n\ny_flat = tf.unstack(y, num=3)\njacobian_flat = tf.map_fn(fn, y_flat)\n\ny_flat = tf.split(y, 3)\njacobian_flat = tf.map_fn(fn, y_flat)\nBut all of them can not work. Could you give me some examples for tf.gradients in map_fn?", "body": "@shoyer Hi. Thanks for your example to compute jocabian. Computing jocabian by gradients in an `for` iteration is quite slow. Is there a way to use `map_fn` method to accelerate computing?\r\n\r\nI tried `map_fn` in \r\n```python\r\ny_flat = tf.reshape(y, (-1,))\r\njacobian_flat = tf.map_fn(fn, y_flat)\r\n\r\ny_flat = tf.unstack(y, num=3)\r\njacobian_flat = tf.map_fn(fn, y_flat)\r\n\r\ny_flat = tf.split(y, 3)\r\njacobian_flat = tf.map_fn(fn, y_flat)\r\n```\r\nBut all of them can not work. Could you give me some examples for `tf.gradients` in `map_fn`?"}