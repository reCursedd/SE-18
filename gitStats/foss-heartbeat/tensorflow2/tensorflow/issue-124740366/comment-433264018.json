{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/433264018", "html_url": "https://github.com/tensorflow/tensorflow/issues/675#issuecomment-433264018", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/675", "id": 433264018, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzI2NDAxOA==", "user": {"login": "agarwal-ashish", "id": 19335798, "node_id": "MDQ6VXNlcjE5MzM1Nzk4", "avatar_url": "https://avatars3.githubusercontent.com/u/19335798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agarwal-ashish", "html_url": "https://github.com/agarwal-ashish", "followers_url": "https://api.github.com/users/agarwal-ashish/followers", "following_url": "https://api.github.com/users/agarwal-ashish/following{/other_user}", "gists_url": "https://api.github.com/users/agarwal-ashish/gists{/gist_id}", "starred_url": "https://api.github.com/users/agarwal-ashish/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agarwal-ashish/subscriptions", "organizations_url": "https://api.github.com/users/agarwal-ashish/orgs", "repos_url": "https://api.github.com/users/agarwal-ashish/repos", "events_url": "https://api.github.com/users/agarwal-ashish/events{/privacy}", "received_events_url": "https://api.github.com/users/agarwal-ashish/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-26T02:17:28Z", "updated_at": "2018-10-26T02:17:28Z", "author_association": "NONE", "body_html": "<blockquote>\n<blockquote>\n<p>There is now an experimental new approach to doing Jacobians here:<br>\n<a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/parallel_for/gradients.py#L28\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/parallel_for/gradients.py#L28</a></p>\n</blockquote>\n<p>Did anyone compare the performance of the new functionality and the previous solution posted by <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=7227349\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mholzel\">@mholzel</a> <a href=\"https://github.com/tensorflow/tensorflow/issues/675#issuecomment-362853672\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/675/hovercard\">here</a>? I am finding the new <code>jacobian</code> included in <code>gradients.py</code> way slower than <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=7227349\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mholzel\">@mholzel</a> solution...</p>\n</blockquote>\n<p>gradients_test.py in the same file has some benchmarks that show that pfor based jacobian generally works much faster than a while loop based one. Can you share your benchmark ?</p>", "body_text": "There is now an experimental new approach to doing Jacobians here:\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/parallel_for/gradients.py#L28\n\nDid anyone compare the performance of the new functionality and the previous solution posted by @mholzel here? I am finding the new jacobian included in gradients.py way slower than @mholzel solution...\n\ngradients_test.py in the same file has some benchmarks that show that pfor based jacobian generally works much faster than a while loop based one. Can you share your benchmark ?", "body": "> > There is now an experimental new approach to doing Jacobians here:\r\n> > https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/parallel_for/gradients.py#L28\r\n> \r\n> Did anyone compare the performance of the new functionality and the previous solution posted by @mholzel [here](https://github.com/tensorflow/tensorflow/issues/675#issuecomment-362853672)? I am finding the new `jacobian` included in `gradients.py` way slower than @mholzel solution...\r\n\r\ngradients_test.py in the same file has some benchmarks that show that pfor based jacobian generally works much faster than a while loop based one. Can you share your benchmark ? "}