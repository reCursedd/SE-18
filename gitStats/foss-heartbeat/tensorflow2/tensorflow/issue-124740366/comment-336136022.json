{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/336136022", "html_url": "https://github.com/tensorflow/tensorflow/issues/675#issuecomment-336136022", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/675", "id": 336136022, "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjEzNjAyMg==", "user": {"login": "candidj0", "id": 26007201, "node_id": "MDQ6VXNlcjI2MDA3MjAx", "avatar_url": "https://avatars0.githubusercontent.com/u/26007201?v=4", "gravatar_id": "", "url": "https://api.github.com/users/candidj0", "html_url": "https://github.com/candidj0", "followers_url": "https://api.github.com/users/candidj0/followers", "following_url": "https://api.github.com/users/candidj0/following{/other_user}", "gists_url": "https://api.github.com/users/candidj0/gists{/gist_id}", "starred_url": "https://api.github.com/users/candidj0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/candidj0/subscriptions", "organizations_url": "https://api.github.com/users/candidj0/orgs", "repos_url": "https://api.github.com/users/candidj0/repos", "events_url": "https://api.github.com/users/candidj0/events{/privacy}", "received_events_url": "https://api.github.com/users/candidj0/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-12T13:25:54Z", "updated_at": "2017-10-12T13:25:54Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=26734737\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/oborchers\">@oborchers</a> i don't check the time but maybe you can try :</p>\n<pre><code>def body(y, x, i):\n    n = tf.shape(y)[0]\n    loop_vars = [\n        tf.constant(0, tf.int32),\n        tf.TensorArray(tf.float32, size=n),\n    ]\n    _, jacobian = tf.while_loop(\n        lambda j, _: j &lt; n,\n        lambda j, result: (j+1, result.write(j, tf.gradients(y[j], x)[0][i])),\n        loop_vars)\n    return jacobian.stack()\n\ndef tf_jacobian(y, x, n):\n    loop_vars = [\n        tf.constant(0, tf.int32),\n        tf.TensorArray(tf.float32, size=n),\n    ]\n    _, jacobian = tf.while_loop(\n        lambda i, _: i &lt; n,\n        lambda i, result: (i+1, result.write(i, body(y[i], x, i))),\n        loop_vars)\n    return jacobian.stack()\n</code></pre>\n<p>jacobians =  tf_jacobian(y, x, n) where n is the batch size.</p>", "body_text": "@oborchers i don't check the time but maybe you can try :\ndef body(y, x, i):\n    n = tf.shape(y)[0]\n    loop_vars = [\n        tf.constant(0, tf.int32),\n        tf.TensorArray(tf.float32, size=n),\n    ]\n    _, jacobian = tf.while_loop(\n        lambda j, _: j < n,\n        lambda j, result: (j+1, result.write(j, tf.gradients(y[j], x)[0][i])),\n        loop_vars)\n    return jacobian.stack()\n\ndef tf_jacobian(y, x, n):\n    loop_vars = [\n        tf.constant(0, tf.int32),\n        tf.TensorArray(tf.float32, size=n),\n    ]\n    _, jacobian = tf.while_loop(\n        lambda i, _: i < n,\n        lambda i, result: (i+1, result.write(i, body(y[i], x, i))),\n        loop_vars)\n    return jacobian.stack()\n\njacobians =  tf_jacobian(y, x, n) where n is the batch size.", "body": "@oborchers i don't check the time but maybe you can try :\r\n\r\n```\r\ndef body(y, x, i):\r\n    n = tf.shape(y)[0]\r\n    loop_vars = [\r\n        tf.constant(0, tf.int32),\r\n        tf.TensorArray(tf.float32, size=n),\r\n    ]\r\n    _, jacobian = tf.while_loop(\r\n        lambda j, _: j < n,\r\n        lambda j, result: (j+1, result.write(j, tf.gradients(y[j], x)[0][i])),\r\n        loop_vars)\r\n    return jacobian.stack()\r\n\r\ndef tf_jacobian(y, x, n):\r\n    loop_vars = [\r\n        tf.constant(0, tf.int32),\r\n        tf.TensorArray(tf.float32, size=n),\r\n    ]\r\n    _, jacobian = tf.while_loop(\r\n        lambda i, _: i < n,\r\n        lambda i, result: (i+1, result.write(i, body(y[i], x, i))),\r\n        loop_vars)\r\n    return jacobian.stack()\r\n```\r\n\r\njacobians =  tf_jacobian(y, x, n) where n is the batch size."}