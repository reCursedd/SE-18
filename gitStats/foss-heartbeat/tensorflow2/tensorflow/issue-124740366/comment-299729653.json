{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/299729653", "html_url": "https://github.com/tensorflow/tensorflow/issues/675#issuecomment-299729653", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/675", "id": 299729653, "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTcyOTY1Mw==", "user": {"login": "harpone", "id": 5112840, "node_id": "MDQ6VXNlcjUxMTI4NDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/5112840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harpone", "html_url": "https://github.com/harpone", "followers_url": "https://api.github.com/users/harpone/followers", "following_url": "https://api.github.com/users/harpone/following{/other_user}", "gists_url": "https://api.github.com/users/harpone/gists{/gist_id}", "starred_url": "https://api.github.com/users/harpone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harpone/subscriptions", "organizations_url": "https://api.github.com/users/harpone/orgs", "repos_url": "https://api.github.com/users/harpone/repos", "events_url": "https://api.github.com/users/harpone/events{/privacy}", "received_events_url": "https://api.github.com/users/harpone/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-07T19:45:38Z", "updated_at": "2017-05-07T19:45:38Z", "author_association": "NONE", "body_html": "<p>Just a FYI for anyone who happens to stumble here looking for a <code>tf.jacobian</code>: this seems to work (props to <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=23068\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/yaroslavvb\">@yaroslavvb</a>):</p>\n<pre><code>N = 3\n\ntf.reset_default_graph()\n\nx = tf.placeholder(tf.float32, shape=[N])\ny = x ** 2 / 2\n\ny_list = tf.unstack(y)\njacobian_list = [tf.gradients(y_, x)[0] for y_ in y_list]  # list [grad(y0, x), grad(y1, x), ...]\njacobian = tf.stack(jacobian_list)\n\nsess = tf.Session()\n\nx_val = np.random.randn(N)\njacobian_val = sess.run(jacobian, feed_dict={x:x_val})\n\nprint(x_val)\nprint(jacobian_val)\n</code></pre>\n<p>Indeed seems pretty slow for bigger values of N... would be nice to get the <code>map_fn</code> method to work (if it's going to be faster).</p>", "body_text": "Just a FYI for anyone who happens to stumble here looking for a tf.jacobian: this seems to work (props to @yaroslavvb):\nN = 3\n\ntf.reset_default_graph()\n\nx = tf.placeholder(tf.float32, shape=[N])\ny = x ** 2 / 2\n\ny_list = tf.unstack(y)\njacobian_list = [tf.gradients(y_, x)[0] for y_ in y_list]  # list [grad(y0, x), grad(y1, x), ...]\njacobian = tf.stack(jacobian_list)\n\nsess = tf.Session()\n\nx_val = np.random.randn(N)\njacobian_val = sess.run(jacobian, feed_dict={x:x_val})\n\nprint(x_val)\nprint(jacobian_val)\n\nIndeed seems pretty slow for bigger values of N... would be nice to get the map_fn method to work (if it's going to be faster).", "body": "Just a FYI for anyone who happens to stumble here looking for a `tf.jacobian`: this seems to work (props to @yaroslavvb):\r\n\r\n```\r\nN = 3\r\n\r\ntf.reset_default_graph()\r\n\r\nx = tf.placeholder(tf.float32, shape=[N])\r\ny = x ** 2 / 2\r\n\r\ny_list = tf.unstack(y)\r\njacobian_list = [tf.gradients(y_, x)[0] for y_ in y_list]  # list [grad(y0, x), grad(y1, x), ...]\r\njacobian = tf.stack(jacobian_list)\r\n\r\nsess = tf.Session()\r\n\r\nx_val = np.random.randn(N)\r\njacobian_val = sess.run(jacobian, feed_dict={x:x_val})\r\n\r\nprint(x_val)\r\nprint(jacobian_val)\r\n```\r\nIndeed seems pretty slow for bigger values of N... would be nice to get the `map_fn` method to work (if it's going to be faster)."}