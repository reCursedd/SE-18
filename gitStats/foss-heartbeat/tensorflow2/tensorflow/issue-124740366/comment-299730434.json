{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/299730434", "html_url": "https://github.com/tensorflow/tensorflow/issues/675#issuecomment-299730434", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/675", "id": 299730434, "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTczMDQzNA==", "user": {"login": "shoyer", "id": 1217238, "node_id": "MDQ6VXNlcjEyMTcyMzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shoyer", "html_url": "https://github.com/shoyer", "followers_url": "https://api.github.com/users/shoyer/followers", "following_url": "https://api.github.com/users/shoyer/following{/other_user}", "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}", "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions", "organizations_url": "https://api.github.com/users/shoyer/orgs", "repos_url": "https://api.github.com/users/shoyer/repos", "events_url": "https://api.github.com/users/shoyer/events{/privacy}", "received_events_url": "https://api.github.com/users/shoyer/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-07T19:58:09Z", "updated_at": "2017-05-07T20:02:53Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5112840\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/harpone\">@harpone</a> oops -- good catch! Apologies for posting untested code :). (The version that I actually got working on Friday used a static loop, but then I mistakenly assumed <code>tf.map_fn</code> would simplify it.)</p>\n<p>This version works, but requires that <code>y</code> has statically known shape:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">jacobian</span>(<span class=\"pl-smi\">y</span>, <span class=\"pl-smi\">x</span>):\n  y_flat <span class=\"pl-k\">=</span> tf.reshape(y, (<span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>,))\n  jacobian_flat <span class=\"pl-k\">=</span> tf.stack(\n      [tf.gradients(y_i, x)[<span class=\"pl-c1\">0</span>] <span class=\"pl-k\">for</span> y_i <span class=\"pl-k\">in</span> tf.unstack(y_flat)])\n  <span class=\"pl-k\">return</span> tf.reshape(jacobian_flat, y.shape.concatenate(x.shape))</pre></div>", "body_text": "@harpone oops -- good catch! Apologies for posting untested code :). (The version that I actually got working on Friday used a static loop, but then I mistakenly assumed tf.map_fn would simplify it.)\nThis version works, but requires that y has statically known shape:\ndef jacobian(y, x):\n  y_flat = tf.reshape(y, (-1,))\n  jacobian_flat = tf.stack(\n      [tf.gradients(y_i, x)[0] for y_i in tf.unstack(y_flat)])\n  return tf.reshape(jacobian_flat, y.shape.concatenate(x.shape))", "body": "@harpone oops -- good catch! Apologies for posting untested code :). (The version that I actually got working on Friday used a static loop, but then I mistakenly assumed `tf.map_fn` would simplify it.)\r\n\r\nThis version works, but requires that `y` has statically known shape:\r\n```python\r\ndef jacobian(y, x):\r\n  y_flat = tf.reshape(y, (-1,))\r\n  jacobian_flat = tf.stack(\r\n      [tf.gradients(y_i, x)[0] for y_i in tf.unstack(y_flat)])\r\n  return tf.reshape(jacobian_flat, y.shape.concatenate(x.shape))\r\n```"}