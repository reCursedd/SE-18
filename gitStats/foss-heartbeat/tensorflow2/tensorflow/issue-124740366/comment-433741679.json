{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/433741679", "html_url": "https://github.com/tensorflow/tensorflow/issues/675#issuecomment-433741679", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/675", "id": 433741679, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzc0MTY3OQ==", "user": {"login": "GJBoth", "id": 32122273, "node_id": "MDQ6VXNlcjMyMTIyMjcz", "avatar_url": "https://avatars1.githubusercontent.com/u/32122273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GJBoth", "html_url": "https://github.com/GJBoth", "followers_url": "https://api.github.com/users/GJBoth/followers", "following_url": "https://api.github.com/users/GJBoth/following{/other_user}", "gists_url": "https://api.github.com/users/GJBoth/gists{/gist_id}", "starred_url": "https://api.github.com/users/GJBoth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GJBoth/subscriptions", "organizations_url": "https://api.github.com/users/GJBoth/orgs", "repos_url": "https://api.github.com/users/GJBoth/repos", "events_url": "https://api.github.com/users/GJBoth/events{/privacy}", "received_events_url": "https://api.github.com/users/GJBoth/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-28T21:09:54Z", "updated_at": "2018-10-28T21:09:54Z", "author_association": "NONE", "body_html": "<p>I threw together this function, it uses tf.map_fn and assumes a batch style input, but at least it works for batches. It's pretty high level but seems to adress some of the ideas if the conversation above:</p>\n<pre><code>def Jacobian(X, y):\n    J = tf.map_fn(lambda m: tf.gradients(y[:,:,m:m+1], X)[0], tf.range(tf.shape(y)[-1]), tf.float32)\n    J = tf.transpose(tf.squeeze(J), perm = [1,0,2])\n    return J\n```\n</code></pre>", "body_text": "I threw together this function, it uses tf.map_fn and assumes a batch style input, but at least it works for batches. It's pretty high level but seems to adress some of the ideas if the conversation above:\ndef Jacobian(X, y):\n    J = tf.map_fn(lambda m: tf.gradients(y[:,:,m:m+1], X)[0], tf.range(tf.shape(y)[-1]), tf.float32)\n    J = tf.transpose(tf.squeeze(J), perm = [1,0,2])\n    return J\n```", "body": "I threw together this function, it uses tf.map_fn and assumes a batch style input, but at least it works for batches. It's pretty high level but seems to adress some of the ideas if the conversation above:\r\n````\r\ndef Jacobian(X, y):\r\n    J = tf.map_fn(lambda m: tf.gradients(y[:,:,m:m+1], X)[0], tf.range(tf.shape(y)[-1]), tf.float32)\r\n    J = tf.transpose(tf.squeeze(J), perm = [1,0,2])\r\n    return J\r\n```"}