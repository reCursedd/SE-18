{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/110970892", "pull_request_review_id": 32178857, "id": 110970892, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMDk3MDg5Mg==", "diff_hunk": "@@ -2906,4 +2965,303 @@ REGISTER_KERNELS(double, int64);\n \n #undef REGISTER_KERNELS\n \n+\n+\n+\n+\n+\n+\n+\n+\n+\n+template <typename Device, typename T>\n+class ApplyRadamOp : public OpKernel {\n+ public:\n+  explicit ApplyRadamOp(OpKernelConstruction* ctx) : OpKernel(ctx) {\n+    OP_REQUIRES_OK(ctx, ctx->GetAttr(\"use_locking\", &use_exclusive_lock_));\n+  }\n+\n+  void Compute(OpKernelContext* ctx) override {\n+    auto locks = MaybeLockMutexesInOrder(ctx, use_exclusive_lock_, {0, 1, 2});\n+\n+    Tensor var;\n+    OP_REQUIRES_OK(ctx, GetInputTensor(ctx, 0, use_exclusive_lock_, &var));\n+    Tensor m;\n+    OP_REQUIRES_OK(ctx, GetInputTensor(ctx, 1, use_exclusive_lock_, &m));\n+    Tensor v;\n+    OP_REQUIRES_OK(ctx, GetInputTensor(ctx, 2, use_exclusive_lock_, &v));\n+    OP_REQUIRES(\n+        ctx, var.IsInitialized(),\n+        errors::FailedPrecondition(\n+            \"Attempting to use uninitialized variables: \", def().input(0)));\n+    OP_REQUIRES(\n+        ctx, m.IsInitialized(),\n+        errors::FailedPrecondition(\n+            \"Attempting to use uninitialized variables: \", def().input(1)));\n+    OP_REQUIRES(\n+        ctx, v.IsInitialized(),\n+        errors::FailedPrecondition(\n+            \"Attempting to use uninitialized variables: \", def().input(2)));\n+\n+    const Tensor& beta1_power = ctx->input(3);\n+    const Tensor& beta2_power = ctx->input(4);\n+    const Tensor& lr = ctx->input(5);\n+    const Tensor& beta1 = ctx->input(6);\n+    const Tensor& beta2 = ctx->input(7);\n+    const Tensor& epsilon = ctx->input(8);\n+    const Tensor& gamma = ctx->input(9);\n+", "path": "tensorflow/core/kernels/training_ops.cc", "position": 115, "original_position": 115, "commit_id": "ebd35938768ba8b483ed82c2f7233c7b5a608340", "original_commit_id": "484c9e8af2f9a074b0fe873dc9a61640b7e372af", "user": {"login": "drpngx", "id": 20959853, "node_id": "MDQ6VXNlcjIwOTU5ODUz", "avatar_url": "https://avatars1.githubusercontent.com/u/20959853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drpngx", "html_url": "https://github.com/drpngx", "followers_url": "https://api.github.com/users/drpngx/followers", "following_url": "https://api.github.com/users/drpngx/following{/other_user}", "gists_url": "https://api.github.com/users/drpngx/gists{/gist_id}", "starred_url": "https://api.github.com/users/drpngx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drpngx/subscriptions", "organizations_url": "https://api.github.com/users/drpngx/orgs", "repos_url": "https://api.github.com/users/drpngx/repos", "events_url": "https://api.github.com/users/drpngx/events{/privacy}", "received_events_url": "https://api.github.com/users/drpngx/received_events", "type": "User", "site_admin": false}, "body": "remove extra space", "created_at": "2017-04-11T17:54:09Z", "updated_at": "2017-04-12T18:37:13Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/8405#discussion_r110970892", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/8405", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/110970892"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/8405#discussion_r110970892"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/8405"}}, "body_html": "<p>remove extra space</p>", "body_text": "remove extra space"}