{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/110972644", "pull_request_review_id": 32178857, "id": 110972644, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMDk3MjY0NA==", "diff_hunk": "@@ -130,6 +130,80 @@ struct ApplyAdam<GPUDevice, T> {\n   }\n };\n \n+\n+\n+\n+template <typename T>\n+struct ApplyRadam<GPUDevice, T> {\n+  void operator()(const GPUDevice& d, typename TTypes<T>::Flat var,\n+                  typename TTypes<T>::Flat m, typename TTypes<T>::Flat v,\n+                  typename TTypes<T>::ConstScalar beta1_power,\n+                  typename TTypes<T>::ConstScalar beta2_power,\n+                  typename TTypes<T>::ConstScalar lr,\n+                  typename TTypes<T>::ConstScalar beta1,\n+                  typename TTypes<T>::ConstScalar beta2,\n+                  typename TTypes<T>::ConstScalar epsilon,\n+                  typename TTypes<T>::ConstScalar gamma,\n+                  typename TTypes<T>::ConstFlat grad) {\n+    Eigen::array<typename TTypes<T>::Tensor::Index, 1> bcast;\n+    bcast[0] = grad.dimension(0);\n+    Eigen::Sizes<1> single;\n+    const auto one = static_cast<T>(1.0);\n+    m.device(d) =\n+        m +\n+        (beta1.constant(one) - beta1).reshape(single).broadcast(bcast) *\n+            (grad - m);\n+    v.device(d) =\n+        v +\n+        (beta2.constant(one) - beta2).reshape(single).broadcast(bcast) *\n+            (grad.square() - v);\n+    var.device(d) -= (lr * (beta2_power.constant(one) - beta2_power).sqrt() /\n+                      (beta1_power.constant(one) - beta1_power))\n+                         .reshape(single)\n+                         .broadcast(bcast) *\n+                     ((gamma.constant(one) - gamma).reshape(single).broadcast(bcast) * m  +  (gamma).reshape(single).broadcast(bcast) * grad)", "path": "tensorflow/core/kernels/training_ops_gpu.cu.cc", "position": null, "original_position": 35, "commit_id": "ebd35938768ba8b483ed82c2f7233c7b5a608340", "original_commit_id": "484c9e8af2f9a074b0fe873dc9a61640b7e372af", "user": {"login": "drpngx", "id": 20959853, "node_id": "MDQ6VXNlcjIwOTU5ODUz", "avatar_url": "https://avatars1.githubusercontent.com/u/20959853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drpngx", "html_url": "https://github.com/drpngx", "followers_url": "https://api.github.com/users/drpngx/followers", "following_url": "https://api.github.com/users/drpngx/following{/other_user}", "gists_url": "https://api.github.com/users/drpngx/gists{/gist_id}", "starred_url": "https://api.github.com/users/drpngx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drpngx/subscriptions", "organizations_url": "https://api.github.com/users/drpngx/orgs", "repos_url": "https://api.github.com/users/drpngx/repos", "events_url": "https://api.github.com/users/drpngx/events{/privacy}", "received_events_url": "https://api.github.com/users/drpngx/received_events", "type": "User", "site_admin": false}, "body": "Fit in 80 chars", "created_at": "2017-04-11T18:00:59Z", "updated_at": "2017-04-12T18:37:13Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/8405#discussion_r110972644", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/8405", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/110972644"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/8405#discussion_r110972644"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/8405"}}, "body_html": "<p>Fit in 80 chars</p>", "body_text": "Fit in 80 chars"}