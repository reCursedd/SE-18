{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/305025710", "html_url": "https://github.com/tensorflow/tensorflow/issues/10003#issuecomment-305025710", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10003", "id": 305025710, "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTAyNTcxMA==", "user": {"login": "cfperez", "id": 2013379, "node_id": "MDQ6VXNlcjIwMTMzNzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/2013379?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cfperez", "html_url": "https://github.com/cfperez", "followers_url": "https://api.github.com/users/cfperez/followers", "following_url": "https://api.github.com/users/cfperez/following{/other_user}", "gists_url": "https://api.github.com/users/cfperez/gists{/gist_id}", "starred_url": "https://api.github.com/users/cfperez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cfperez/subscriptions", "organizations_url": "https://api.github.com/users/cfperez/orgs", "repos_url": "https://api.github.com/users/cfperez/repos", "events_url": "https://api.github.com/users/cfperez/events{/privacy}", "received_events_url": "https://api.github.com/users/cfperez/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-30T22:21:55Z", "updated_at": "2017-05-30T22:28:36Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Is the request for the equivalent of</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">from</span> functools <span class=\"pl-k\">import</span> partial\nsparse_multiply <span class=\"pl-k\">=</span> partial(tf.multiply, <span class=\"pl-v\">a_is_sparse</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>)</pre></div>\n<p>and similarly for <code>sparse_multiply_sparse</code>?</p>", "body_text": "Is the request for the equivalent of\nfrom functools import partial\nsparse_multiply = partial(tf.multiply, a_is_sparse=True)\nand similarly for sparse_multiply_sparse?", "body": "Is the request for the equivalent of\r\n```python\r\nfrom functools import partial\r\nsparse_multiply = partial(tf.multiply, a_is_sparse=True)\r\n```\r\nand similarly for `sparse_multiply_sparse`?"}