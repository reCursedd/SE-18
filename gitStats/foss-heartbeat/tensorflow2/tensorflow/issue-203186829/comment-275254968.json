{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/275254968", "html_url": "https://github.com/tensorflow/tensorflow/issues/7065#issuecomment-275254968", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7065", "id": 275254968, "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTI1NDk2OA==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-25T22:36:18Z", "updated_at": "2017-01-25T22:36:18Z", "author_association": "CONTRIBUTOR", "body_html": "<p>One drive-by observation: the setup with</p>\n<pre><code>input_images = tf.random_uniform(16, 224, 224, 3), maxval=255)\n</code></pre>\n<p>...might be slow because it's invoking the random number generator <strong>for every batch</strong>. In the PyTorch program, you run the RNG once, outside the timing loop (in the call to <code>np.random.randn()</code>), and reuse its results several times.</p>\n<p>The following might be a fairer comparison:</p>\n<pre><code>input_images = tf.Variable(tf.random_uniform((16, 224, 224, 3), maxval=255))\npreds = nets.vgg.vgg_16(input_images, is_training=False)[0]\nsess.run(tf.global_variable_initializer())\n# ...\n</code></pre>", "body_text": "One drive-by observation: the setup with\ninput_images = tf.random_uniform(16, 224, 224, 3), maxval=255)\n\n...might be slow because it's invoking the random number generator for every batch. In the PyTorch program, you run the RNG once, outside the timing loop (in the call to np.random.randn()), and reuse its results several times.\nThe following might be a fairer comparison:\ninput_images = tf.Variable(tf.random_uniform((16, 224, 224, 3), maxval=255))\npreds = nets.vgg.vgg_16(input_images, is_training=False)[0]\nsess.run(tf.global_variable_initializer())\n# ...", "body": "One drive-by observation: the setup with\r\n\r\n```\r\ninput_images = tf.random_uniform(16, 224, 224, 3), maxval=255)\r\n```\r\n\r\n...might be slow because it's invoking the random number generator **for every batch**. In the PyTorch program, you run the RNG once, outside the timing loop (in the call to `np.random.randn()`), and reuse its results several times.\r\n\r\nThe following might be a fairer comparison:\r\n\r\n```\r\ninput_images = tf.Variable(tf.random_uniform((16, 224, 224, 3), maxval=255))\r\npreds = nets.vgg.vgg_16(input_images, is_training=False)[0]\r\nsess.run(tf.global_variable_initializer())\r\n# ...\r\n```\r\n"}