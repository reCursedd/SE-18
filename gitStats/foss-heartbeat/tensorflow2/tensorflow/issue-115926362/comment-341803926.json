{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/341803926", "html_url": "https://github.com/tensorflow/tensorflow/issues/19#issuecomment-341803926", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19", "id": 341803926, "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTgwMzkyNg==", "user": {"login": "RockfordWei", "id": 22161723, "node_id": "MDQ6VXNlcjIyMTYxNzIz", "avatar_url": "https://avatars1.githubusercontent.com/u/22161723?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RockfordWei", "html_url": "https://github.com/RockfordWei", "followers_url": "https://api.github.com/users/RockfordWei/followers", "following_url": "https://api.github.com/users/RockfordWei/following{/other_user}", "gists_url": "https://api.github.com/users/RockfordWei/gists{/gist_id}", "starred_url": "https://api.github.com/users/RockfordWei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RockfordWei/subscriptions", "organizations_url": "https://api.github.com/users/RockfordWei/orgs", "repos_url": "https://api.github.com/users/RockfordWei/repos", "events_url": "https://api.github.com/users/RockfordWei/events{/privacy}", "received_events_url": "https://api.github.com/users/RockfordWei/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-03T19:29:24Z", "updated_at": "2017-11-03T19:29:24Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=8297740\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/tirrorex\">@tirrorex</a> Thanks for asking. However, PerfectlySoft currently doesn't have such a plan because Apple has already published CoreML framework which supports mobile application well enough. Perfect-TensorFlow is a Server Side Swift to maximize the power of the cloud computation and makes zero conflicts with Apple's strategy.</p>\n<p>However, you can still have a good try. Tips are right here: <a href=\"https://github.com/tensorflow/tensorflow/tree/master/tensorflow/examples/ios\">tensorflow ios examples</a></p>\n<p>This is a very old pod release for 1.1.x, which can help you build an iOS version of tensorflow framework, which is theoretically compatible with Perfect-TensorFlow by setting the customized framework into a dylib to call. Check Perfect-TensorFlow APIloader.swift for detail - it is using <code>dlopen()</code> and <code>dlsym()</code> to load TensorFlow binaries on demand.</p>\n<p>However, even it works, you may need to accept the fact that the old iOS framework example would like to cost your app an extra 300MB or even larger, so please make sure that you know exactly what you want and read some valuable CoreML articles before doing it.</p>\n<p>Thank you.</p>", "body_text": "@tirrorex Thanks for asking. However, PerfectlySoft currently doesn't have such a plan because Apple has already published CoreML framework which supports mobile application well enough. Perfect-TensorFlow is a Server Side Swift to maximize the power of the cloud computation and makes zero conflicts with Apple's strategy.\nHowever, you can still have a good try. Tips are right here: tensorflow ios examples\nThis is a very old pod release for 1.1.x, which can help you build an iOS version of tensorflow framework, which is theoretically compatible with Perfect-TensorFlow by setting the customized framework into a dylib to call. Check Perfect-TensorFlow APIloader.swift for detail - it is using dlopen() and dlsym() to load TensorFlow binaries on demand.\nHowever, even it works, you may need to accept the fact that the old iOS framework example would like to cost your app an extra 300MB or even larger, so please make sure that you know exactly what you want and read some valuable CoreML articles before doing it.\nThank you.", "body": "@tirrorex Thanks for asking. However, PerfectlySoft currently doesn't have such a plan because Apple has already published CoreML framework which supports mobile application well enough. Perfect-TensorFlow is a Server Side Swift to maximize the power of the cloud computation and makes zero conflicts with Apple's strategy.\r\n\r\n\r\nHowever, you can still have a good try. Tips are right here: [tensorflow ios examples](https://github.com/tensorflow/tensorflow/tree/master/tensorflow/examples/ios)\r\n\r\nThis is a very old pod release for 1.1.x, which can help you build an iOS version of tensorflow framework, which is theoretically compatible with Perfect-TensorFlow by setting the customized framework into a dylib to call. Check Perfect-TensorFlow APIloader.swift for detail - it is using `dlopen()` and `dlsym()` to load TensorFlow binaries on demand.\r\n\r\nHowever, even it works, you may need to accept the fact that the old iOS framework example would like to cost your app an extra 300MB or even larger, so please make sure that you know exactly what you want and read some valuable CoreML articles before doing it.\r\n\r\nThank you.\r\n\r\n"}