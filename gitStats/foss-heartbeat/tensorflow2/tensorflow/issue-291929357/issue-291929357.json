{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16456", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16456/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16456/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16456/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16456", "id": 291929357, "node_id": "MDU6SXNzdWUyOTE5MjkzNTc=", "number": 16456, "title": "'InputFnOps' object has no attribute 'receiver_tensors'", "user": {"login": "dwujellyfish", "id": 32270788, "node_id": "MDQ6VXNlcjMyMjcwNzg4", "avatar_url": "https://avatars3.githubusercontent.com/u/32270788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dwujellyfish", "html_url": "https://github.com/dwujellyfish", "followers_url": "https://api.github.com/users/dwujellyfish/followers", "following_url": "https://api.github.com/users/dwujellyfish/following{/other_user}", "gists_url": "https://api.github.com/users/dwujellyfish/gists{/gist_id}", "starred_url": "https://api.github.com/users/dwujellyfish/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dwujellyfish/subscriptions", "organizations_url": "https://api.github.com/users/dwujellyfish/orgs", "repos_url": "https://api.github.com/users/dwujellyfish/repos", "events_url": "https://api.github.com/users/dwujellyfish/events{/privacy}", "received_events_url": "https://api.github.com/users/dwujellyfish/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-26T15:07:52Z", "updated_at": "2018-02-12T22:11:17Z", "closed_at": "2018-02-12T22:11:17Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<p>==TensorFlow installed from (source or binary)==<br>\nSource<br>\n== Python version ==<br>\nPython 2.7.13<br>\n== cat /etc/issue ==<br>\nLinux orion 4.9.0-3-amd64 <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"115886302\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/1\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/1/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/1\">#1</a> SMP Debian 4.9.30-2+deb9u5 (2017-09-19) x86_64 GNU/Linux<br>\nVERSION_ID=\"9\"<br>\nVERSION=\"9 (stretch)\"<br>\n== are we in docker ==<br>\nNo<br>\n== compiler ==<br>\nc++ (Debian 6.3.0-18) 6.3.0 20170516<br>\nCopyright (C) 2016 Free Software Foundation, Inc.<br>\nThis is free software; see the source for copying conditions.  There is NO<br>\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.<br>\n== uname -a ==<br>\nLinux orion 4.9.0-3-amd64 <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"115886302\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/1\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/1/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/1\">#1</a> SMP Debian 4.9.30-2+deb9u5 (2017-09-19) x86_64 GNU/Linux<br>\n== check pips ==<br>\nnumpy (1.12.1)<br>\nprotobuf (3.5.1)<br>\ntensorflow (1.3.0)<br>\ntensorflow-tensorboard (0.1.8)<br>\ntensorflow-transform (0.3.1)<br>\n== check for virtualenv ==<br>\nTrue<br>\n== tensorflow import ==<br>\ntf.VERSION = 1.3.0<br>\ntf.GIT_VERSION = v1.3.0-rc2-20-g0787eee<br>\ntf.COMPILER_VERSION = v1.3.0-rc2-20-g0787eee<br>\nSanity check: array([1], dtype=int32)<br>\n== env ==<br>\nLD_LIBRARY_PATH is unset<br>\nDYLD_LIBRARY_PATH is unset</p>\n<h3>Describe the problem</h3>\n<p>I ran into some incompatibility issues running tf.estimator.DNNClassifier with tf.contrib.learn.InputFnOps and tf.contrib.learn.Experiment.<br>\nThere has been a separate <a href=\"https://github.com/tensorflow/transform/issues/36\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/transform/issues/36/hovercard\">solved issue</a>:<br>\nI have tried the bundle version, but it doesn't work for me:<br>\ntensorflow==1.3<br>\ntensorflow_transform==0.3.1<br>\nsix==1.10.0<br>\nHowever, if I switch to tf.contrib.learn.DNNClassifier, the issue go away.<br>\nIt is also suggested to use tf.estimator.DNNClassifier rather than tf.contrib.learn.DNNClassifier.  I would like to get tf.estimator.DNNClassifier work.</p>\n<h3>Source code / logs</h3>\n<pre><code>def build_estimator(config):\n    m = tf.estimator.DNNClassifier(\n   # m = tf.contrib.learn.DNNClassifier(\n    \t\t\t\t\tconfig=config,\n    \t\t\t\t\tfeature_columns=deep_columns,\n                        hidden_units=[100, 100, 100],\n                        n_classes=2,\n                        optimizer=tf.train.GradientDescentOptimizer(learning_rate=0.01)\n                        )\n    return m\n</code></pre>\n<pre><code>def json_serving_input_fn():\n\t\"\"\"Build the serving inputs.\"\"\"\n\tinputs = {}\n\tfor feat in INPUT_COLUMNS:\n\t\tinputs[feat.name] = tf.placeholder(shape=[None], dtype=feat.dtype)\n\n\tfeatures = {\n\t  key: tf.expand_dims(tensor, -1)\n\t  for key, tensor in inputs.iteritems()\n\t}\n\treturn tf.contrib.learn.InputFnOps(features, None, inputs)\n</code></pre>\n<pre><code>def _experiment_fn(run_config, hparams):\n    # num_epochs can control duration if train_steps isn't\n    # passed to Experiment\n    train_input = lambda: model.generate_input_fn(\n        hparams.train_files,\n        num_epochs=hparams.num_epochs,\n        batch_size=hparams.train_batch_size,\n    )\n    # Don't shuffle evaluation data\n    eval_input = lambda: model.generate_input_fn(\n        hparams.eval_files,\n        batch_size=hparams.eval_batch_size,\n        shuffle=False\n    )\n    return tf.contrib.learn.Experiment(\n        model.build_estimator(\n            config=run_config\n        )\n</code></pre>\n<p>Error message:<br>\nlocal/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py\", line 440, in export_savedmodel<br>\nserving_input_receiver.receiver_tensors,<br>\nAttributeError: 'InputFnOps' object has no attribute 'receiver_tensors'</p>", "body_text": "System information\n==TensorFlow installed from (source or binary)==\nSource\n== Python version ==\nPython 2.7.13\n== cat /etc/issue ==\nLinux orion 4.9.0-3-amd64 #1 SMP Debian 4.9.30-2+deb9u5 (2017-09-19) x86_64 GNU/Linux\nVERSION_ID=\"9\"\nVERSION=\"9 (stretch)\"\n== are we in docker ==\nNo\n== compiler ==\nc++ (Debian 6.3.0-18) 6.3.0 20170516\nCopyright (C) 2016 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n== uname -a ==\nLinux orion 4.9.0-3-amd64 #1 SMP Debian 4.9.30-2+deb9u5 (2017-09-19) x86_64 GNU/Linux\n== check pips ==\nnumpy (1.12.1)\nprotobuf (3.5.1)\ntensorflow (1.3.0)\ntensorflow-tensorboard (0.1.8)\ntensorflow-transform (0.3.1)\n== check for virtualenv ==\nTrue\n== tensorflow import ==\ntf.VERSION = 1.3.0\ntf.GIT_VERSION = v1.3.0-rc2-20-g0787eee\ntf.COMPILER_VERSION = v1.3.0-rc2-20-g0787eee\nSanity check: array([1], dtype=int32)\n== env ==\nLD_LIBRARY_PATH is unset\nDYLD_LIBRARY_PATH is unset\nDescribe the problem\nI ran into some incompatibility issues running tf.estimator.DNNClassifier with tf.contrib.learn.InputFnOps and tf.contrib.learn.Experiment.\nThere has been a separate solved issue:\nI have tried the bundle version, but it doesn't work for me:\ntensorflow==1.3\ntensorflow_transform==0.3.1\nsix==1.10.0\nHowever, if I switch to tf.contrib.learn.DNNClassifier, the issue go away.\nIt is also suggested to use tf.estimator.DNNClassifier rather than tf.contrib.learn.DNNClassifier.  I would like to get tf.estimator.DNNClassifier work.\nSource code / logs\ndef build_estimator(config):\n    m = tf.estimator.DNNClassifier(\n   # m = tf.contrib.learn.DNNClassifier(\n    \t\t\t\t\tconfig=config,\n    \t\t\t\t\tfeature_columns=deep_columns,\n                        hidden_units=[100, 100, 100],\n                        n_classes=2,\n                        optimizer=tf.train.GradientDescentOptimizer(learning_rate=0.01)\n                        )\n    return m\n\ndef json_serving_input_fn():\n\t\"\"\"Build the serving inputs.\"\"\"\n\tinputs = {}\n\tfor feat in INPUT_COLUMNS:\n\t\tinputs[feat.name] = tf.placeholder(shape=[None], dtype=feat.dtype)\n\n\tfeatures = {\n\t  key: tf.expand_dims(tensor, -1)\n\t  for key, tensor in inputs.iteritems()\n\t}\n\treturn tf.contrib.learn.InputFnOps(features, None, inputs)\n\ndef _experiment_fn(run_config, hparams):\n    # num_epochs can control duration if train_steps isn't\n    # passed to Experiment\n    train_input = lambda: model.generate_input_fn(\n        hparams.train_files,\n        num_epochs=hparams.num_epochs,\n        batch_size=hparams.train_batch_size,\n    )\n    # Don't shuffle evaluation data\n    eval_input = lambda: model.generate_input_fn(\n        hparams.eval_files,\n        batch_size=hparams.eval_batch_size,\n        shuffle=False\n    )\n    return tf.contrib.learn.Experiment(\n        model.build_estimator(\n            config=run_config\n        )\n\nError message:\nlocal/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py\", line 440, in export_savedmodel\nserving_input_receiver.receiver_tensors,\nAttributeError: 'InputFnOps' object has no attribute 'receiver_tensors'", "body": "\r\n### System information\r\n==TensorFlow installed from (source or binary)==\r\nSource\r\n== Python version ==\r\nPython 2.7.13\r\n== cat /etc/issue ==\r\nLinux orion 4.9.0-3-amd64 #1 SMP Debian 4.9.30-2+deb9u5 (2017-09-19) x86_64 GNU/Linux\r\nVERSION_ID=\"9\"\r\nVERSION=\"9 (stretch)\"\r\n== are we in docker ==\r\nNo\r\n== compiler ==\r\nc++ (Debian 6.3.0-18) 6.3.0 20170516\r\nCopyright (C) 2016 Free Software Foundation, Inc.\r\nThis is free software; see the source for copying conditions.  There is NO\r\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n== uname -a ==\r\nLinux orion 4.9.0-3-amd64 #1 SMP Debian 4.9.30-2+deb9u5 (2017-09-19) x86_64 GNU/Linux\r\n== check pips ==\r\nnumpy (1.12.1)\r\nprotobuf (3.5.1)\r\ntensorflow (1.3.0)\r\ntensorflow-tensorboard (0.1.8)\r\ntensorflow-transform (0.3.1)\r\n== check for virtualenv ==\r\nTrue\r\n== tensorflow import ==\r\ntf.VERSION = 1.3.0\r\ntf.GIT_VERSION = v1.3.0-rc2-20-g0787eee\r\ntf.COMPILER_VERSION = v1.3.0-rc2-20-g0787eee\r\nSanity check: array([1], dtype=int32)\r\n== env ==\r\nLD_LIBRARY_PATH is unset\r\nDYLD_LIBRARY_PATH is unset\r\n\r\n### Describe the problem\r\nI ran into some incompatibility issues running tf.estimator.DNNClassifier with tf.contrib.learn.InputFnOps and tf.contrib.learn.Experiment.  \r\nThere has been a separate [solved issue](https://github.com/tensorflow/transform/issues/36): \r\nI have tried the bundle version, but it doesn't work for me:\r\ntensorflow==1.3\r\ntensorflow_transform==0.3.1\r\nsix==1.10.0\r\nHowever, if I switch to tf.contrib.learn.DNNClassifier, the issue go away.\r\nIt is also suggested to use tf.estimator.DNNClassifier rather than tf.contrib.learn.DNNClassifier.  I would like to get tf.estimator.DNNClassifier work.\r\n\r\n### Source code / logs\r\n```\r\ndef build_estimator(config):\r\n    m = tf.estimator.DNNClassifier(\r\n   # m = tf.contrib.learn.DNNClassifier(\r\n    \t\t\t\t\tconfig=config,\r\n    \t\t\t\t\tfeature_columns=deep_columns,\r\n                        hidden_units=[100, 100, 100],\r\n                        n_classes=2,\r\n                        optimizer=tf.train.GradientDescentOptimizer(learning_rate=0.01)\r\n                        )\r\n    return m\r\n```\r\n```\r\ndef json_serving_input_fn():\r\n\t\"\"\"Build the serving inputs.\"\"\"\r\n\tinputs = {}\r\n\tfor feat in INPUT_COLUMNS:\r\n\t\tinputs[feat.name] = tf.placeholder(shape=[None], dtype=feat.dtype)\r\n\r\n\tfeatures = {\r\n\t  key: tf.expand_dims(tensor, -1)\r\n\t  for key, tensor in inputs.iteritems()\r\n\t}\r\n\treturn tf.contrib.learn.InputFnOps(features, None, inputs)\r\n```\r\n```\r\ndef _experiment_fn(run_config, hparams):\r\n    # num_epochs can control duration if train_steps isn't\r\n    # passed to Experiment\r\n    train_input = lambda: model.generate_input_fn(\r\n        hparams.train_files,\r\n        num_epochs=hparams.num_epochs,\r\n        batch_size=hparams.train_batch_size,\r\n    )\r\n    # Don't shuffle evaluation data\r\n    eval_input = lambda: model.generate_input_fn(\r\n        hparams.eval_files,\r\n        batch_size=hparams.eval_batch_size,\r\n        shuffle=False\r\n    )\r\n    return tf.contrib.learn.Experiment(\r\n        model.build_estimator(\r\n            config=run_config\r\n        )\r\n```\r\n\r\n\r\nError message:\r\nlocal/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py\", line 440, in export_savedmodel\r\n    serving_input_receiver.receiver_tensors,\r\nAttributeError: 'InputFnOps' object has no attribute 'receiver_tensors'\r\n"}