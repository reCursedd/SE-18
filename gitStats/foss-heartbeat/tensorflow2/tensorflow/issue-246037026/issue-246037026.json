{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11816", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11816/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11816/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11816/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/11816", "id": 246037026, "node_id": "MDU6SXNzdWUyNDYwMzcwMjY=", "number": 11816, "title": "Snappy related tests are failing", "user": {"login": "duane-ibm", "id": 20570859, "node_id": "MDQ6VXNlcjIwNTcwODU5", "avatar_url": "https://avatars3.githubusercontent.com/u/20570859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/duane-ibm", "html_url": "https://github.com/duane-ibm", "followers_url": "https://api.github.com/users/duane-ibm/followers", "following_url": "https://api.github.com/users/duane-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/duane-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/duane-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/duane-ibm/subscriptions", "organizations_url": "https://api.github.com/users/duane-ibm/orgs", "repos_url": "https://api.github.com/users/duane-ibm/repos", "events_url": "https://api.github.com/users/duane-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/duane-ibm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-27T13:20:07Z", "updated_at": "2017-07-27T16:33:17Z", "closed_at": null, "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: No</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: source</li>\n<li><strong>TensorFlow version (use command below)</strong>: 'v1.2.1-0-gb4957ff', '1.2.1'</li>\n<li><strong>Python version</strong>: 2.7.12</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.4.5</li>\n<li><strong>CUDA/cuDNN version</strong>: No GPU</li>\n<li><strong>GPU model and memory</strong>: No GPU</li>\n<li><strong>Exact command to reproduce</strong>: bazel test //tensorflow/core:lib_io_snappy_snappy_buffers_test</li>\n</ul>\n<h3>The problem:</h3>\n<p>While executing test <code>TEST(SnappyBuffers, MultipleWritesWithoutFlush)</code>. It fails when <code>Snappy_Uncompress()</code> method is called which internally calls <code>snappy::RawUncompress()</code>.<br>\nCompared the same on intel x86 where it works fine; However the data somehow gets lost on s390x.</p>\n<p>I am aware that Snappy behaves differently on s390x as compared to others.</p>\n<p>There is another test <code>//tensorflow/core:lib_io_table_test</code> which fails when snappy compress/uncompress is used.<br>\nWould like to know if the mentioned test-cases are used to test some complex functionality of TensorFlow? Can they be ignored?</p>\n<h3>Source code / logs</h3>\n<p>Running main() from test_main.cc<br>\n[==========] Running 5 tests from 1 test case.<br>\n[----------] Global test environment set-up.<br>\n[----------] 5 tests from SnappyBuffers<br>\n[ RUN      ] SnappyBuffers.MultipleWritesWithoutFlush<br>\n2017-07-27 12:25:34.898300: F tensorflow/core/lib/io/snappy/snappy_buffers_test.cc:148] Non-OK-status: TestMultipleWrites(10000, 10000, 10000, 10000, 2) status: Data loss: Snappy_Uncompress failed<br>\nexternal/bazel_tools/tools/test/test-setup.sh: line 159: 17664 Aborted                 (core dumped) \"${TEST_PATH}\" \"$@\"</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): No\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04\nTensorFlow installed from (source or binary): source\nTensorFlow version (use command below): 'v1.2.1-0-gb4957ff', '1.2.1'\nPython version: 2.7.12\nBazel version (if compiling from source): 0.4.5\nCUDA/cuDNN version: No GPU\nGPU model and memory: No GPU\nExact command to reproduce: bazel test //tensorflow/core:lib_io_snappy_snappy_buffers_test\n\nThe problem:\nWhile executing test TEST(SnappyBuffers, MultipleWritesWithoutFlush). It fails when Snappy_Uncompress() method is called which internally calls snappy::RawUncompress().\nCompared the same on intel x86 where it works fine; However the data somehow gets lost on s390x.\nI am aware that Snappy behaves differently on s390x as compared to others.\nThere is another test //tensorflow/core:lib_io_table_test which fails when snappy compress/uncompress is used.\nWould like to know if the mentioned test-cases are used to test some complex functionality of TensorFlow? Can they be ignored?\nSource code / logs\nRunning main() from test_main.cc\n[==========] Running 5 tests from 1 test case.\n[----------] Global test environment set-up.\n[----------] 5 tests from SnappyBuffers\n[ RUN      ] SnappyBuffers.MultipleWritesWithoutFlush\n2017-07-27 12:25:34.898300: F tensorflow/core/lib/io/snappy/snappy_buffers_test.cc:148] Non-OK-status: TestMultipleWrites(10000, 10000, 10000, 10000, 2) status: Data loss: Snappy_Uncompress failed\nexternal/bazel_tools/tools/test/test-setup.sh: line 159: 17664 Aborted                 (core dumped) \"${TEST_PATH}\" \"$@\"", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: 'v1.2.1-0-gb4957ff', '1.2.1'\r\n- **Python version**: 2.7.12\r\n- **Bazel version (if compiling from source)**: 0.4.5\r\n- **CUDA/cuDNN version**: No GPU\r\n- **GPU model and memory**: No GPU\r\n- **Exact command to reproduce**: bazel test //tensorflow/core:lib_io_snappy_snappy_buffers_test\r\n\r\n### The problem:\r\nWhile executing test `TEST(SnappyBuffers, MultipleWritesWithoutFlush)`. It fails when `Snappy_Uncompress()` method is called which internally calls `snappy::RawUncompress()`.\r\nCompared the same on intel x86 where it works fine; However the data somehow gets lost on s390x.\r\n\r\nI am aware that Snappy behaves differently on s390x as compared to others.\r\n\r\nThere is another test `//tensorflow/core:lib_io_table_test` which fails when snappy compress/uncompress is used.\r\nWould like to know if the mentioned test-cases are used to test some complex functionality of TensorFlow? Can they be ignored?\r\n\r\n### Source code / logs\r\nRunning main() from test_main.cc\r\n[==========] Running 5 tests from 1 test case.\r\n[----------] Global test environment set-up.\r\n[----------] 5 tests from SnappyBuffers\r\n[ RUN      ] SnappyBuffers.MultipleWritesWithoutFlush\r\n2017-07-27 12:25:34.898300: F tensorflow/core/lib/io/snappy/snappy_buffers_test.cc:148] Non-OK-status: TestMultipleWrites(10000, 10000, 10000, 10000, 2) status: Data loss: Snappy_Uncompress failed\r\nexternal/bazel_tools/tools/test/test-setup.sh: line 159: 17664 Aborted                 (core dumped) \"${TEST_PATH}\" \"$@\"\r\n"}