{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/194868496", "pull_request_review_id": 128029203, "id": 194868496, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDg2ODQ5Ng==", "diff_hunk": "@@ -119,139 +125,174 @@ class Conv2DFwd : public DnnOp {\n   //   src_data:    input data buffer of src\n   //   filter_data: input data buffer of filter (weights)\n   //   dst_data:    output data buffer of dst\n-  void Execute(T* src_data, T* filter_data, T* dst_data) {\n-    src_mem_->set_data_handle(static_cast<void*>(src_data));\n-    filter_mem_->set_data_handle(static_cast<void*>(filter_data));\n-    dst_mem_->set_data_handle(static_cast<void*>(dst_data));\n-    fwd_stream_->submit(fwd_primitives_);\n-\n-    // after exec, set data handle back\n-    src_mem_->set_data_handle(DummyData);\n-    filter_mem_->set_data_handle(DummyData);\n-    dst_mem_->set_data_handle(DummyData);\n+  void Execute(const T* src_data, const T* filter_data,\n+      const T* dst_data) {\n+    context_.src_mem->set_data_handle(\n+        static_cast<void*>(const_cast<T*>(src_data)));\n+    context_.filter_mem->set_data_handle(\n+        static_cast<void*>(const_cast<T*>(filter_data)));\n+    context_.dst_mem->set_data_handle(\n+        static_cast<void*>(const_cast<T*>(dst_data)));\n+    context_.fwd_stream->submit(context_.fwd_primitives);\n+\n+    // after execution, set data handle back\n+    context_.src_mem->set_data_handle(DummyData);\n+    context_.filter_mem->set_data_handle(DummyData);\n+    context_.dst_mem->set_data_handle(DummyData);\n \n     return;\n   }\n \n-  // expected memory format for this primitive instance\n-  memory::format src_fmt_;\n-  memory::format filter_fmt_;\n+  memory::format GetSrcMemoryFormat() const {\n+    return context_.src_fmt;\n+  }\n+\n+  memory::format GetFilterMemoryFormat() const {\n+    return context_.filter_fmt;\n+  }\n \n-  // convolution primitive\n-  std::shared_ptr<mkldnn::convolution_forward::primitive_desc> fwd_pd_;\n-  std::shared_ptr<mkldnn::primitive> conv_fwd_;\n+  std::shared_ptr<mkldnn::convolution_forward::primitive_desc>\n+  GetPrimitiveDesc() const {\n+    return context_.fwd_pd;\n+  }\n \n  private:\n-  void Setup(const ConvFwdDimensions& convFwdDims) {\n+  // Primitive reuse context for Conv2D Fwd op\n+  struct ConvFwdContext {\n+    // expected memory format for this primitive instance\n+    memory::format src_fmt;\n+    memory::format filter_fmt;\n+\n+    // MKLDNN memory\n+    std::shared_ptr<mkldnn::memory> src_mem;\n+    std::shared_ptr<mkldnn::memory> filter_mem;\n+    std::shared_ptr<mkldnn::memory> bias_mem;\n+    std::shared_ptr<mkldnn::memory> dst_mem;\n+\n+    // desc & prmitive desc\n+    std::shared_ptr<mkldnn::convolution_forward::desc> fwd_desc;\n+\n+    // memory desc\n+    std::shared_ptr<mkldnn::memory::desc> src_md;\n+    std::shared_ptr<mkldnn::memory::desc> filter_md;\n+    std::shared_ptr<mkldnn::memory::desc> bias_md;\n+    std::shared_ptr<mkldnn::memory::desc> dst_md;\n+\n+    // convolution primitive\n+    std::shared_ptr<mkldnn::convolution_forward::primitive_desc> fwd_pd;\n+    std::shared_ptr<mkldnn::primitive> conv_fwd;\n+\n+    std::shared_ptr<mkldnn::stream> fwd_stream;\n+    std::vector<mkldnn::primitive> fwd_primitives;\n+\n+    ConvFwdContext() :\n+       src_fmt(memory::format::any), filter_fmt(memory::format::any),\n+       src_mem(nullptr), filter_mem(nullptr), bias_mem(nullptr),\n+       dst_mem(nullptr), fwd_desc(nullptr),\n+       src_md(nullptr), filter_md(nullptr), bias_md(nullptr),\n+       fwd_pd(nullptr), conv_fwd(nullptr), fwd_stream(nullptr) {\n+    }\n+  } context_;\n+\n+  engine cpu_engine_ = engine(engine::cpu, 0);", "path": "tensorflow/core/kernels/mkl_conv_ops.cc", "position": null, "original_position": 165, "commit_id": "93413976b69c4cc92a8447abd198b2db60302376", "original_commit_id": "8cac34efddaa9bb01d3862fa30d95726ad512c32", "user": {"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}, "body": "Move the initialization to initializer list in constructor instead?", "created_at": "2018-06-12T19:56:11Z", "updated_at": "2018-06-12T21:24:19Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/19754#discussion_r194868496", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/19754", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/194868496"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/19754#discussion_r194868496"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/19754"}}, "body_html": "<p>Move the initialization to initializer list in constructor instead?</p>", "body_text": "Move the initialization to initializer list in constructor instead?"}