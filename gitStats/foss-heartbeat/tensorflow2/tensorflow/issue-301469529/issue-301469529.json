{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17360", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17360/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17360/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17360/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17360", "id": 301469529, "node_id": "MDU6SXNzdWUzMDE0Njk1Mjk=", "number": 17360, "title": "C++ api: use of op::Attrs methods in gradients", "user": {"login": "kbsriram", "id": 1495065, "node_id": "MDQ6VXNlcjE0OTUwNjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1495065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kbsriram", "html_url": "https://github.com/kbsriram", "followers_url": "https://api.github.com/users/kbsriram/followers", "following_url": "https://api.github.com/users/kbsriram/following{/other_user}", "gists_url": "https://api.github.com/users/kbsriram/gists{/gist_id}", "starred_url": "https://api.github.com/users/kbsriram/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kbsriram/subscriptions", "organizations_url": "https://api.github.com/users/kbsriram/orgs", "repos_url": "https://api.github.com/users/kbsriram/repos", "events_url": "https://api.github.com/users/kbsriram/events{/privacy}", "received_events_url": "https://api.github.com/users/kbsriram/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-01T16:26:37Z", "updated_at": "2018-03-07T01:17:02Z", "closed_at": "2018-03-07T01:17:02Z", "author_association": "CONTRIBUTOR", "body_html": "<p>The generated op::Attrs struct returns new instances on its chainable methods, and doesn't change the original object.</p>\n<p><div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/d7d7f4eea5f3a2e63e12c803d02f56726c0e0513/tensorflow/cc/framework/cc_op_gen.cc#L701\">tensorflow/tensorflow/cc/framework/cc_op_gen.cc</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n         Line 701\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/d7d7f4eea5f3a2e63e12c803d02f56726c0e0513\">d7d7f4e</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L701\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"701\"></td>\n          <td id=\"LC701\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-c1\">strings::StrAppend</span>(&amp;setters, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>      Attrs ret = *this;<span class=\"pl-cce\">\\n</span><span class=\"pl-pds\">\"</span></span>); </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<p>There are a few related issues e.g. <div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/6fdb9ad1baf7686a75f9e660178f7ac595e7fc2e/tensorflow/cc/gradients/nn_grad.cc#L164\">tensorflow/tensorflow/cc/gradients/nn_grad.cc</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n         Line 164\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/6fdb9ad1baf7686a75f9e660178f7ac595e7fc2e\">6fdb9ad</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L164\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"164\"></td>\n          <td id=\"LC164\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> grad_attrs.<span class=\"pl-c1\">DataFormat</span>(data_format); </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n where the code assumes the underlying object is being mutated and the parameters don't actually pass through.</p>\n<p>I guess there might be a couple of ways forward, depending on how Tensorflow prefers the C++ API:</p>\n<ol>\n<li>Decide the Attrs chaining methods mutate the underlying object and fix the code generation.</li>\n<li>Decide the Attrs chaining methods return new instances, and fix the uses.</li>\n</ol>\n<p>Suggestions?</p>\n<p>Fwiw if option 2, it might be nice to add TF_MUST_USE_RESULT to the generated API. (Unfortunately a <a href=\"https://gcc.gnu.org/bugzilla/show_bug.cgi?id=38172\" rel=\"nofollow\">long-standing bug in gcc</a> means this may be unreliable as an actual error across versions of gcc that contributors may use.)</p>\n<p>/cc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1450614\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/suharshs\">@suharshs</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=229914\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/keveman\">@keveman</a></p>", "body_text": "The generated op::Attrs struct returns new instances on its chainable methods, and doesn't change the original object.\n\n  \n    \n      tensorflow/tensorflow/cc/framework/cc_op_gen.cc\n    \n    \n         Line 701\n      in\n      d7d7f4e\n    \n    \n    \n    \n\n        \n          \n           strings::StrAppend(&setters, \"      Attrs ret = *this;\\n\"); \n        \n    \n  \n\n\nThere are a few related issues e.g. \n  \n    \n      tensorflow/tensorflow/cc/gradients/nn_grad.cc\n    \n    \n         Line 164\n      in\n      6fdb9ad\n    \n    \n    \n    \n\n        \n          \n           grad_attrs.DataFormat(data_format); \n        \n    \n  \n\n where the code assumes the underlying object is being mutated and the parameters don't actually pass through.\nI guess there might be a couple of ways forward, depending on how Tensorflow prefers the C++ API:\n\nDecide the Attrs chaining methods mutate the underlying object and fix the code generation.\nDecide the Attrs chaining methods return new instances, and fix the uses.\n\nSuggestions?\nFwiw if option 2, it might be nice to add TF_MUST_USE_RESULT to the generated API. (Unfortunately a long-standing bug in gcc means this may be unreliable as an actual error across versions of gcc that contributors may use.)\n/cc @suharshs @keveman", "body": "The generated op::Attrs struct returns new instances on its chainable methods, and doesn't change the original object.\r\n\r\nhttps://github.com/tensorflow/tensorflow/blob/d7d7f4eea5f3a2e63e12c803d02f56726c0e0513/tensorflow/cc/framework/cc_op_gen.cc#L701\r\n\r\nThere are a few related issues e.g. https://github.com/tensorflow/tensorflow/blob/6fdb9ad1baf7686a75f9e660178f7ac595e7fc2e/tensorflow/cc/gradients/nn_grad.cc#L164 where the code assumes the underlying object is being mutated and the parameters don't actually pass through.\r\n\r\nI guess there might be a couple of ways forward, depending on how Tensorflow prefers the C++ API:\r\n\r\n1. Decide the Attrs chaining methods mutate the underlying object and fix the code generation.\r\n2. Decide the Attrs chaining methods return new instances, and fix the uses.\r\n\r\nSuggestions?\r\n\r\nFwiw if option 2, it might be nice to add TF_MUST_USE_RESULT to the generated API. (Unfortunately a [long-standing bug in gcc](https://gcc.gnu.org/bugzilla/show_bug.cgi?id=38172) means this may be unreliable as an actual error across versions of gcc that contributors may use.)\r\n\r\n/cc @suharshs @keveman "}