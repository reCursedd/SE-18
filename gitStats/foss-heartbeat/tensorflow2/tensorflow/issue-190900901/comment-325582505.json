{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/325582505", "html_url": "https://github.com/tensorflow/tensorflow/issues/5773#issuecomment-325582505", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5773", "id": 325582505, "node_id": "MDEyOklzc3VlQ29tbWVudDMyNTU4MjUwNQ==", "user": {"login": "mzur", "id": 2457311, "node_id": "MDQ6VXNlcjI0NTczMTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/2457311?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mzur", "html_url": "https://github.com/mzur", "followers_url": "https://api.github.com/users/mzur/followers", "following_url": "https://api.github.com/users/mzur/following{/other_user}", "gists_url": "https://api.github.com/users/mzur/gists{/gist_id}", "starred_url": "https://api.github.com/users/mzur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mzur/subscriptions", "organizations_url": "https://api.github.com/users/mzur/orgs", "repos_url": "https://api.github.com/users/mzur/repos", "events_url": "https://api.github.com/users/mzur/events{/privacy}", "received_events_url": "https://api.github.com/users/mzur/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-29T07:45:44Z", "updated_at": "2017-08-29T07:45:44Z", "author_association": "NONE", "body_html": "<p>Can confirm that this issue still exists.</p>\n<p><strong>Environment info</strong></p>\n<p>System 1: Ubuntu 16.04.3, CUDA 8.0.61, cuDNN 4.0.7, TF v1.1.0<br>\nSystem 2: <code>tensorflow/tensorflow:latest-gpu</code> Docker container (with TF v1.3.0)<br>\nSystem 3: Ubuntu 16.04.3, TF v1.2.0 on CPU</p>\n<p><strong>Minimal reproducible example</strong></p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\nN <span class=\"pl-k\">=</span> <span class=\"pl-c1\">13</span>\nimg <span class=\"pl-k\">=</span> tf.cast(tf.random_uniform([<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">5097</span>, <span class=\"pl-c1\">7129</span>, <span class=\"pl-c1\">1</span>], <span class=\"pl-v\">minval</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0</span>, <span class=\"pl-v\">maxval</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">255</span>, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.int32), tf.uint8)\npatches <span class=\"pl-k\">=</span> tf.extract_image_patches(img, <span class=\"pl-v\">ksizes</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">1</span>, N, N, <span class=\"pl-c1\">1</span>], <span class=\"pl-v\">strides</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>], <span class=\"pl-v\">rates</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>], <span class=\"pl-v\">padding</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>SAME<span class=\"pl-pds\">'</span></span>)\nencode_image <span class=\"pl-k\">=</span> tf.image.encode_png(patches[<span class=\"pl-c1\">0</span>, :, :, <span class=\"pl-c1\">0</span>:<span class=\"pl-c1\">1</span>])\nwrite_file <span class=\"pl-k\">=</span> tf.write_file(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>output.png<span class=\"pl-pds\">'</span></span>, encode_image)\ntf.Session().run(write_file)</pre></div>\n<p>Output:</p>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/2457311/29810001-811d25aa-8c9e-11e7-9afd-9a4403d5c785.png\"><img src=\"https://user-images.githubusercontent.com/2457311/29810001-811d25aa-8c9e-11e7-9afd-9a4403d5c785.png\" alt=\"output\" style=\"max-width:100%;\"></a></p>\n<p>As <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=188116\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/shirriff\">@shirriff</a> said the result should be an image with random pixel values but the result varies depending on the patch size <code>N</code> and the image size. <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=88808\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/skye\">@skye</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6232317\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/gpapan\">@gpapan</a> Please reopen.</p>", "body_text": "Can confirm that this issue still exists.\nEnvironment info\nSystem 1: Ubuntu 16.04.3, CUDA 8.0.61, cuDNN 4.0.7, TF v1.1.0\nSystem 2: tensorflow/tensorflow:latest-gpu Docker container (with TF v1.3.0)\nSystem 3: Ubuntu 16.04.3, TF v1.2.0 on CPU\nMinimal reproducible example\nimport tensorflow as tf\n\nN = 13\nimg = tf.cast(tf.random_uniform([1, 5097, 7129, 1], minval=0, maxval=255, dtype=tf.int32), tf.uint8)\npatches = tf.extract_image_patches(img, ksizes=[1, N, N, 1], strides=[1, 1, 1, 1], rates=[1, 1, 1, 1], padding='SAME')\nencode_image = tf.image.encode_png(patches[0, :, :, 0:1])\nwrite_file = tf.write_file('output.png', encode_image)\ntf.Session().run(write_file)\nOutput:\n\nAs @shirriff said the result should be an image with random pixel values but the result varies depending on the patch size N and the image size. @skye @gpapan Please reopen.", "body": "Can confirm that this issue still exists.\r\n\r\n**Environment info**\r\n\r\nSystem 1: Ubuntu 16.04.3, CUDA 8.0.61, cuDNN 4.0.7, TF v1.1.0\r\nSystem 2: `tensorflow/tensorflow:latest-gpu` Docker container (with TF v1.3.0)\r\nSystem 3: Ubuntu 16.04.3, TF v1.2.0 on CPU\r\n\r\n**Minimal reproducible example**\r\n\r\n```python\r\nimport tensorflow as tf\r\n\r\nN = 13\r\nimg = tf.cast(tf.random_uniform([1, 5097, 7129, 1], minval=0, maxval=255, dtype=tf.int32), tf.uint8)\r\npatches = tf.extract_image_patches(img, ksizes=[1, N, N, 1], strides=[1, 1, 1, 1], rates=[1, 1, 1, 1], padding='SAME')\r\nencode_image = tf.image.encode_png(patches[0, :, :, 0:1])\r\nwrite_file = tf.write_file('output.png', encode_image)\r\ntf.Session().run(write_file)\r\n```\r\n\r\nOutput:\r\n\r\n![output](https://user-images.githubusercontent.com/2457311/29810001-811d25aa-8c9e-11e7-9afd-9a4403d5c785.png)\r\n\r\n\r\nAs @shirriff said the result should be an image with random pixel values but the result varies depending on the patch size `N` and the image size. @skye @gpapan Please reopen."}