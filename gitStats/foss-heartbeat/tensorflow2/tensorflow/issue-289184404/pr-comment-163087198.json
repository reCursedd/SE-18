{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/163087198", "pull_request_review_id": 90646912, "id": 163087198, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MzA4NzE5OA==", "diff_hunk": "@@ -0,0 +1,78 @@\n+/* Copyright 2015 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+\n+// See docs in ../ops/linalg_ops.cc.\n+\n+#include \"tensorflow/core/framework/kernel_def_builder.h\"\n+#include \"tensorflow/core/framework/op_kernel.h\"\n+#include \"tensorflow/core/framework/register_types.h\"\n+#include \"tensorflow/core/framework/tensor_shape.h\"\n+#include \"tensorflow/core/kernels/linalg_ops_common.h\"\n+#include \"tensorflow/core/lib/core/errors.h\"\n+#include \"tensorflow/core/platform/logging.h\"\n+#include \"tensorflow/core/platform/types.h\"\n+#include \"third_party/eigen3/Eigen/Core\"\n+#include \"third_party/eigen3/Eigen/LU\"\n+\n+namespace tensorflow {\n+\n+static const char kErrMsg[] =\n+    \"LU decomposition was not successful. The input might not be valid.\";\n+\n+template <class Scalar>\n+class LuOp : public LinearAlgebraOp<Scalar> {\n+ public:\n+  INHERIT_LINALG_TYPEDEFS(Scalar);\n+\n+  explicit LuOp(OpKernelConstruction* context) : Base(context) {}\n+\n+  TensorShapes GetOutputMatrixShapes(\n+      const TensorShapes& input_matrix_shapes) const final {\n+    int64 m = input_matrix_shapes[0].dim_size(0);  // input square matrix\n+    return TensorShapes({TensorShape({m, m}), TensorShape({m, m}),\n+                         TensorShape({m, m}), TensorShape({m, m})});\n+  }\n+\n+  void ComputeMatrix(OpKernelContext* context, const ConstMatrixMaps& inputs,\n+                     MatrixMaps* outputs) final {\n+    const ConstMatrixMap& input = inputs[0];\n+    if (input.rows() == 0) {\n+      return;\n+    }\n+\n+    // Perform the actual LU decomposition.\n+    Eigen::FullPivLU<", "path": "tensorflow/core/kernels/lu_op.cc", "position": null, "original_position": 56, "commit_id": "79e818bd280ca739a80873160cfec04c146c8702", "original_commit_id": "da534114d99338be8fbd533cd04549b78f4ef699", "user": {"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}, "body": "Eigen's fully pivoted LU decomposition is slow. I would recommend implementing only a partially pivoted LU factorization, which is usually sufficient in practice. this is also what the Scipy LU implementation does:\r\n\r\nhttps://docs.scipy.org/doc/scipy-0.14.0/reference/generated/scipy.linalg.lu.html\r\n\r\nThe corresponding Eigen class is PartialPivLU: https://bitbucket.org/eigen/eigen/src/5d5dd50b2eb656d71e7296f4d6bb1752bc3f8421/Eigen/src/LU/PartialPivLU.h?at=default&fileviewer=file-view-default#PartialPivLU.h-75 ", "created_at": "2018-01-22T22:25:07Z", "updated_at": "2018-03-09T07:20:33Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/16185#discussion_r163087198", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/16185", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/163087198"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/16185#discussion_r163087198"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/16185"}}, "body_html": "<p>Eigen's fully pivoted LU decomposition is slow. I would recommend implementing only a partially pivoted LU factorization, which is usually sufficient in practice. this is also what the Scipy LU implementation does:</p>\n<p><a href=\"https://docs.scipy.org/doc/scipy-0.14.0/reference/generated/scipy.linalg.lu.html\" rel=\"nofollow\">https://docs.scipy.org/doc/scipy-0.14.0/reference/generated/scipy.linalg.lu.html</a></p>\n<p>The corresponding Eigen class is PartialPivLU: <a href=\"https://bitbucket.org/eigen/eigen/src/5d5dd50b2eb656d71e7296f4d6bb1752bc3f8421/Eigen/src/LU/PartialPivLU.h?at=default&amp;fileviewer=file-view-default#PartialPivLU.h-75\" rel=\"nofollow\">https://bitbucket.org/eigen/eigen/src/5d5dd50b2eb656d71e7296f4d6bb1752bc3f8421/Eigen/src/LU/PartialPivLU.h?at=default&amp;fileviewer=file-view-default#PartialPivLU.h-75</a></p>", "body_text": "Eigen's fully pivoted LU decomposition is slow. I would recommend implementing only a partially pivoted LU factorization, which is usually sufficient in practice. this is also what the Scipy LU implementation does:\nhttps://docs.scipy.org/doc/scipy-0.14.0/reference/generated/scipy.linalg.lu.html\nThe corresponding Eigen class is PartialPivLU: https://bitbucket.org/eigen/eigen/src/5d5dd50b2eb656d71e7296f4d6bb1752bc3f8421/Eigen/src/LU/PartialPivLU.h?at=default&fileviewer=file-view-default#PartialPivLU.h-75"}