{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19457", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19457/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19457/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19457/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19457", "id": 325222234, "node_id": "MDU6SXNzdWUzMjUyMjIyMzQ=", "number": 19457, "title": "Slot variables used in an optimizer must have the same shape with the variable to be optimized?", "user": {"login": "jackonan", "id": 9108860, "node_id": "MDQ6VXNlcjkxMDg4NjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/9108860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackonan", "html_url": "https://github.com/jackonan", "followers_url": "https://api.github.com/users/jackonan/followers", "following_url": "https://api.github.com/users/jackonan/following{/other_user}", "gists_url": "https://api.github.com/users/jackonan/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackonan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackonan/subscriptions", "organizations_url": "https://api.github.com/users/jackonan/orgs", "repos_url": "https://api.github.com/users/jackonan/repos", "events_url": "https://api.github.com/users/jackonan/events{/privacy}", "received_events_url": "https://api.github.com/users/jackonan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "allenlavoie", "id": 3731025, "node_id": "MDQ6VXNlcjM3MzEwMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3731025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/allenlavoie", "html_url": "https://github.com/allenlavoie", "followers_url": "https://api.github.com/users/allenlavoie/followers", "following_url": "https://api.github.com/users/allenlavoie/following{/other_user}", "gists_url": "https://api.github.com/users/allenlavoie/gists{/gist_id}", "starred_url": "https://api.github.com/users/allenlavoie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/allenlavoie/subscriptions", "organizations_url": "https://api.github.com/users/allenlavoie/orgs", "repos_url": "https://api.github.com/users/allenlavoie/repos", "events_url": "https://api.github.com/users/allenlavoie/events{/privacy}", "received_events_url": "https://api.github.com/users/allenlavoie/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "allenlavoie", "id": 3731025, "node_id": "MDQ6VXNlcjM3MzEwMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3731025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/allenlavoie", "html_url": "https://github.com/allenlavoie", "followers_url": "https://api.github.com/users/allenlavoie/followers", "following_url": "https://api.github.com/users/allenlavoie/following{/other_user}", "gists_url": "https://api.github.com/users/allenlavoie/gists{/gist_id}", "starred_url": "https://api.github.com/users/allenlavoie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/allenlavoie/subscriptions", "organizations_url": "https://api.github.com/users/allenlavoie/orgs", "repos_url": "https://api.github.com/users/allenlavoie/repos", "events_url": "https://api.github.com/users/allenlavoie/events{/privacy}", "received_events_url": "https://api.github.com/users/allenlavoie/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 12, "created_at": "2018-05-22T09:57:50Z", "updated_at": "2018-11-14T19:18:51Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<p>Please go to Stack Overflow for help and support:</p>\n<p><a href=\"https://stackoverflow.com/questions/tagged/tensorflow\" rel=\"nofollow\">https://stackoverflow.com/questions/tagged/tensorflow</a></p>\n<p>If you open a GitHub issue, here is our policy:</p>\n<ol>\n<li>It must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).</li>\n<li>The form below must be filled out.</li>\n<li>It shouldn't be a TensorBoard issue. Those go <a href=\"https://github.com/tensorflow/tensorboard/issues\">here</a>.</li>\n</ol>\n<p><strong>Here's why we have that policy</strong>: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.</p>\n<hr>\n<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu, MacOS</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: source</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.4</li>\n<li><strong>Python version</strong>:  2.7.5</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.9.0</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: 4.8.5</li>\n<li><strong>CUDA/cuDNN version</strong>: 8</li>\n<li><strong>GPU model and memory</strong>: CPU</li>\n<li><strong>Exact command to reproduce</strong>: When a optimizer is created.</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I write a new optimizer to try some strategies for gradients apply. Some slots are used in the implementation. But I find that slots must have the same shape with the variables to be optimized. Otherwise, an error will be thrown out with message \"shape not match\" when I try to save model.</p>\n<p>The problem happens in version 1.4. I try the same code in version 1.2, it works correctly.</p>\n<p>So I want to figure out the reason.</p>\n<h3>Source code / logs</h3>\n<div class=\"highlight highlight-source-python\"><pre> <span class=\"pl-c1\">1</span> <span class=\"pl-k\">def</span> <span class=\"pl-en\">_create_slots</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>, <span class=\"pl-smi\">var_list</span>):\n <span class=\"pl-c1\">2</span>   <span class=\"pl-k\">for</span> v <span class=\"pl-k\">in</span> var_list:\n <span class=\"pl-c1\">3</span>     <span class=\"pl-k\">with</span> ops.colocate_with(v):\n <span class=\"pl-c1\">4</span>       dtype <span class=\"pl-k\">=</span> v.dtype.base_dtype\n <span class=\"pl-c1\">5</span>       v_shape <span class=\"pl-k\">=</span> v.get_shape()\n <span class=\"pl-c1\">6</span>       <span class=\"pl-k\">if</span> v_shape.is_fully_defined():\n <span class=\"pl-c1\">7</span>         init <span class=\"pl-k\">=</span> init_ops.constant_initializer(<span class=\"pl-c1\">self</span>._initial_accumulator_value, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>dtype)\n <span class=\"pl-c1\">8</span>       <span class=\"pl-k\">else</span>:                                  \n <span class=\"pl-c1\">9</span>         init_constant <span class=\"pl-k\">=</span> gen_array_ops.fill(array_ops.shape(v), <span class=\"pl-c1\">self</span>._initial_accumulator_value)\n<span class=\"pl-c1\">10</span>         init <span class=\"pl-k\">=</span> math_ops.cast(init_constant, dtype)\n<span class=\"pl-c1\">11</span> \n<span class=\"pl-c1\">12</span>     <span class=\"pl-c1\">self</span>._get_or_make_slot_with_initializer(\n<span class=\"pl-c1\">13</span>        v, init, v_shape, dtype, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>accumulator<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-c1\">self</span>._name)\n<span class=\"pl-c1\">14</span>     <span class=\"pl-c1\">self</span>._get_or_make_slot_with_initializer(\n<span class=\"pl-c1\">15</span>        v, init_ops.zeros_initializer(<span class=\"pl-c1\">self</span>._global_step.dtype),<span class=\"pl-k\">-</span>\n<span class=\"pl-c1\">16</span>        v_shape, <span class=\"pl-c1\">self</span>._global_step.dtype, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>accumulator_decay_power<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-c1\">self</span>._name)</pre></div>\n<p>In line 16, if I change 'v_shape' with other value, an error will be got. For example, v_shape=[512, 256], but only [512] is needed to create this slot.</p>", "body_text": "Please go to Stack Overflow for help and support:\nhttps://stackoverflow.com/questions/tagged/tensorflow\nIf you open a GitHub issue, here is our policy:\n\nIt must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).\nThe form below must be filled out.\nIt shouldn't be a TensorBoard issue. Those go here.\n\nHere's why we have that policy: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\n\nSystem information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu, MacOS\nTensorFlow installed from (source or binary): source\nTensorFlow version (use command below): 1.4\nPython version:  2.7.5\nBazel version (if compiling from source): 0.9.0\nGCC/Compiler version (if compiling from source): 4.8.5\nCUDA/cuDNN version: 8\nGPU model and memory: CPU\nExact command to reproduce: When a optimizer is created.\n\nDescribe the problem\nI write a new optimizer to try some strategies for gradients apply. Some slots are used in the implementation. But I find that slots must have the same shape with the variables to be optimized. Otherwise, an error will be thrown out with message \"shape not match\" when I try to save model.\nThe problem happens in version 1.4. I try the same code in version 1.2, it works correctly.\nSo I want to figure out the reason.\nSource code / logs\n 1 def _create_slots(self, var_list):\n 2   for v in var_list:\n 3     with ops.colocate_with(v):\n 4       dtype = v.dtype.base_dtype\n 5       v_shape = v.get_shape()\n 6       if v_shape.is_fully_defined():\n 7         init = init_ops.constant_initializer(self._initial_accumulator_value, dtype=dtype)\n 8       else:                                  \n 9         init_constant = gen_array_ops.fill(array_ops.shape(v), self._initial_accumulator_value)\n10         init = math_ops.cast(init_constant, dtype)\n11 \n12     self._get_or_make_slot_with_initializer(\n13        v, init, v_shape, dtype, \"accumulator\", self._name)\n14     self._get_or_make_slot_with_initializer(\n15        v, init_ops.zeros_initializer(self._global_step.dtype),-\n16        v_shape, self._global_step.dtype, \"accumulator_decay_power\", self._name)\nIn line 16, if I change 'v_shape' with other value, an error will be got. For example, v_shape=[512, 256], but only [512] is needed to create this slot.", "body": "Please go to Stack Overflow for help and support:\r\n\r\nhttps://stackoverflow.com/questions/tagged/tensorflow\r\n\r\nIf you open a GitHub issue, here is our policy:\r\n\r\n1. It must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).\r\n2. The form below must be filled out.\r\n3. It shouldn't be a TensorBoard issue. Those go [here](https://github.com/tensorflow/tensorboard/issues).\r\n\r\n**Here's why we have that policy**: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu, MacOS\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: 1.4\r\n- **Python version**:  2.7.5\r\n- **Bazel version (if compiling from source)**: 0.9.0\r\n- **GCC/Compiler version (if compiling from source)**: 4.8.5\r\n- **CUDA/cuDNN version**: 8\r\n- **GPU model and memory**: CPU\r\n- **Exact command to reproduce**: When a optimizer is created.\r\n\r\n### Describe the problem\r\n\r\nI write a new optimizer to try some strategies for gradients apply. Some slots are used in the implementation. But I find that slots must have the same shape with the variables to be optimized. Otherwise, an error will be thrown out with message \"shape not match\" when I try to save model.\r\n\r\nThe problem happens in version 1.4. I try the same code in version 1.2, it works correctly.\r\n\r\nSo I want to figure out the reason.\r\n\r\n### Source code / logs\r\n \r\n```python\r\n 1 def _create_slots(self, var_list):\r\n 2   for v in var_list:\r\n 3     with ops.colocate_with(v):\r\n 4       dtype = v.dtype.base_dtype\r\n 5       v_shape = v.get_shape()\r\n 6       if v_shape.is_fully_defined():\r\n 7         init = init_ops.constant_initializer(self._initial_accumulator_value, dtype=dtype)\r\n 8       else:                                  \r\n 9         init_constant = gen_array_ops.fill(array_ops.shape(v), self._initial_accumulator_value)\r\n10         init = math_ops.cast(init_constant, dtype)\r\n11 \r\n12     self._get_or_make_slot_with_initializer(\r\n13        v, init, v_shape, dtype, \"accumulator\", self._name)\r\n14     self._get_or_make_slot_with_initializer(\r\n15        v, init_ops.zeros_initializer(self._global_step.dtype),-\r\n16        v_shape, self._global_step.dtype, \"accumulator_decay_power\", self._name)\r\n```\r\n\r\nIn line 16, if I change 'v_shape' with other value, an error will be got. For example, v_shape=[512, 256], but only [512] is needed to create this slot. \r\n"}