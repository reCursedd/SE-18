{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/400986837", "html_url": "https://github.com/tensorflow/tensorflow/issues/19457#issuecomment-400986837", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19457", "id": 400986837, "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDk4NjgzNw==", "user": {"login": "candyzone", "id": 7778833, "node_id": "MDQ6VXNlcjc3Nzg4MzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/7778833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/candyzone", "html_url": "https://github.com/candyzone", "followers_url": "https://api.github.com/users/candyzone/followers", "following_url": "https://api.github.com/users/candyzone/following{/other_user}", "gists_url": "https://api.github.com/users/candyzone/gists{/gist_id}", "starred_url": "https://api.github.com/users/candyzone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/candyzone/subscriptions", "organizations_url": "https://api.github.com/users/candyzone/orgs", "repos_url": "https://api.github.com/users/candyzone/repos", "events_url": "https://api.github.com/users/candyzone/events{/privacy}", "received_events_url": "https://api.github.com/users/candyzone/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-28T10:17:35Z", "updated_at": "2018-06-28T10:17:35Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3731025\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/allenlavoie\">@allenlavoie</a> I met the same situation.<br>\nWhen the Variable is ParititonedVariable, it reproduces in UT</p>\n<pre><code>import tensorflow as tf\na=tf.get_variable(\"a\", [10],partitioner=tf.fixed_size_partitioner(2))\nopt = tf.train.XOptimizer()\ntrain_op = opt.minimize(a, name='minimize')\nsaver=tf.train.Saver()\n</code></pre>\n<p><code>XOptimizer</code> is new optimizer with slot which has the different shape with primary.</p>\n<p>Reason:<br>\n<a href=\"https://github.com/tensorflow/tensorflow/blob/r1.4/tensorflow/python/training/slot_creator.py#L81\">https://github.com/tensorflow/tensorflow/blob/r1.4/tensorflow/python/training/slot_creator.py#L81</a><br>\n<code>_create_slot_var</code> create slot and assign the primary's slice_info to slot's slice_info. In tf.train.Saver() API, it validates the shape and it casues <code>ValueError: Shapes must be equal rank, but are 0 and 1 for 'save/Assign_6' (op: 'Assign') with input shapes: [], [5].</code></p>\n<p>I think the \"slot support different shape with primary\" is reasonable. I will create a PR soon.</p>", "body_text": "@allenlavoie I met the same situation.\nWhen the Variable is ParititonedVariable, it reproduces in UT\nimport tensorflow as tf\na=tf.get_variable(\"a\", [10],partitioner=tf.fixed_size_partitioner(2))\nopt = tf.train.XOptimizer()\ntrain_op = opt.minimize(a, name='minimize')\nsaver=tf.train.Saver()\n\nXOptimizer is new optimizer with slot which has the different shape with primary.\nReason:\nhttps://github.com/tensorflow/tensorflow/blob/r1.4/tensorflow/python/training/slot_creator.py#L81\n_create_slot_var create slot and assign the primary's slice_info to slot's slice_info. In tf.train.Saver() API, it validates the shape and it casues ValueError: Shapes must be equal rank, but are 0 and 1 for 'save/Assign_6' (op: 'Assign') with input shapes: [], [5].\nI think the \"slot support different shape with primary\" is reasonable. I will create a PR soon.", "body": "@allenlavoie I met the same situation.\r\nWhen the Variable is ParititonedVariable, it reproduces in UT\r\n```\r\nimport tensorflow as tf\r\na=tf.get_variable(\"a\", [10],partitioner=tf.fixed_size_partitioner(2))\r\nopt = tf.train.XOptimizer()\r\ntrain_op = opt.minimize(a, name='minimize')\r\nsaver=tf.train.Saver()\r\n```\r\n`XOptimizer` is new optimizer with slot which has the different shape with primary.\r\n\r\nReason:\r\nhttps://github.com/tensorflow/tensorflow/blob/r1.4/tensorflow/python/training/slot_creator.py#L81\r\n`_create_slot_var` create slot and assign the primary's slice_info to slot's slice_info. In tf.train.Saver() API, it validates the shape and it casues `ValueError: Shapes must be equal rank, but are 0 and 1 for 'save/Assign_6' (op: 'Assign') with input shapes: [], [5].`\r\n\r\nI think the \"slot support different shape with primary\" is reasonable. I will create a PR soon.\r\n"}