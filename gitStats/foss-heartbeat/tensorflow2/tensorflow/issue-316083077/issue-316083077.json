{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18712", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18712/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18712/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18712/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18712", "id": 316083077, "node_id": "MDU6SXNzdWUzMTYwODMwNzc=", "number": 18712, "title": "tf.count_nonzero should support string tensors", "user": {"login": "adamcrume", "id": 1134533, "node_id": "MDQ6VXNlcjExMzQ1MzM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1134533?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamcrume", "html_url": "https://github.com/adamcrume", "followers_url": "https://api.github.com/users/adamcrume/followers", "following_url": "https://api.github.com/users/adamcrume/following{/other_user}", "gists_url": "https://api.github.com/users/adamcrume/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamcrume/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamcrume/subscriptions", "organizations_url": "https://api.github.com/users/adamcrume/orgs", "repos_url": "https://api.github.com/users/adamcrume/repos", "events_url": "https://api.github.com/users/adamcrume/events{/privacy}", "received_events_url": "https://api.github.com/users/adamcrume/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-04-20T00:15:44Z", "updated_at": "2018-04-23T22:33:34Z", "closed_at": "2018-04-23T06:51:42Z", "author_association": "CONTRIBUTOR", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: no</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: N/A</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: N/A</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.8</li>\n<li><strong>Python version</strong>: N/A</li>\n<li><strong>Bazel version (if compiling from source)</strong>: N/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: N/A</li>\n<li><strong>CUDA/cuDNN version</strong>: N/A</li>\n<li><strong>GPU model and memory</strong>: N/A</li>\n<li><strong>Exact command to reproduce</strong>: tf.count_nonzero(tf.constant([\"test\"]))</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>tf.count_nonzero should support string tensors, since tf.zeros and tf.zeros_like work with string tensors.</p>\n<h3>Source code / logs</h3>\n<p>tf.count_nonzero(tf.constant([\"test\"]))</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): no\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): N/A\nTensorFlow installed from (source or binary): N/A\nTensorFlow version (use command below): 1.8\nPython version: N/A\nBazel version (if compiling from source): N/A\nGCC/Compiler version (if compiling from source): N/A\nCUDA/cuDNN version: N/A\nGPU model and memory: N/A\nExact command to reproduce: tf.count_nonzero(tf.constant([\"test\"]))\n\nDescribe the problem\ntf.count_nonzero should support string tensors, since tf.zeros and tf.zeros_like work with string tensors.\nSource code / logs\ntf.count_nonzero(tf.constant([\"test\"]))", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: no\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: N/A\r\n- **TensorFlow installed from (source or binary)**: N/A\r\n- **TensorFlow version (use command below)**: 1.8\r\n- **Python version**: N/A\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: tf.count_nonzero(tf.constant([\"test\"]))\r\n\r\n### Describe the problem\r\ntf.count_nonzero should support string tensors, since tf.zeros and tf.zeros_like work with string tensors.\r\n\r\n### Source code / logs\r\ntf.count_nonzero(tf.constant([\"test\"]))"}