{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6475", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6475/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6475/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6475/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/6475", "id": 197368226, "node_id": "MDU6SXNzdWUxOTczNjgyMjY=", "number": 6475, "title": "Training with local variables is very slow in distributed tf", "user": {"login": "hellolovetiger", "id": 18715195, "node_id": "MDQ6VXNlcjE4NzE1MTk1", "avatar_url": "https://avatars0.githubusercontent.com/u/18715195?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hellolovetiger", "html_url": "https://github.com/hellolovetiger", "followers_url": "https://api.github.com/users/hellolovetiger/followers", "following_url": "https://api.github.com/users/hellolovetiger/following{/other_user}", "gists_url": "https://api.github.com/users/hellolovetiger/gists{/gist_id}", "starred_url": "https://api.github.com/users/hellolovetiger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hellolovetiger/subscriptions", "organizations_url": "https://api.github.com/users/hellolovetiger/orgs", "repos_url": "https://api.github.com/users/hellolovetiger/repos", "events_url": "https://api.github.com/users/hellolovetiger/events{/privacy}", "received_events_url": "https://api.github.com/users/hellolovetiger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-12-23T13:19:08Z", "updated_at": "2017-01-05T19:15:52Z", "closed_at": "2017-01-05T19:15:52Z", "author_association": "NONE", "body_html": "<p>I used local variables on worker tasks in a distributed RNN training. Every update go through 3 steps: 1) assign local variables on each worker with PS variables 2) training local variables in several loops/batches, and accumulate the gradients from each loop 3) apply the accumulated gradients to the PS variables. The first and second step is very slow: for step 1, it takes about 12 seconds; for step 2, every loop takes about 6 seconds. If I combine the three steps together (not use local variable and go through one batch data every update), it only takes about 0.7 second. So, I suspect that it is due to the bad performance of local variables.</p>\n<h3>Environment info</h3>\n<p>Ubuntu 14.04, CUDA 8.0, tensorflow 0.12.0-rc1</p>", "body_text": "I used local variables on worker tasks in a distributed RNN training. Every update go through 3 steps: 1) assign local variables on each worker with PS variables 2) training local variables in several loops/batches, and accumulate the gradients from each loop 3) apply the accumulated gradients to the PS variables. The first and second step is very slow: for step 1, it takes about 12 seconds; for step 2, every loop takes about 6 seconds. If I combine the three steps together (not use local variable and go through one batch data every update), it only takes about 0.7 second. So, I suspect that it is due to the bad performance of local variables.\nEnvironment info\nUbuntu 14.04, CUDA 8.0, tensorflow 0.12.0-rc1", "body": "I used local variables on worker tasks in a distributed RNN training. Every update go through 3 steps: 1) assign local variables on each worker with PS variables 2) training local variables in several loops/batches, and accumulate the gradients from each loop 3) apply the accumulated gradients to the PS variables. The first and second step is very slow: for step 1, it takes about 12 seconds; for step 2, every loop takes about 6 seconds. If I combine the three steps together (not use local variable and go through one batch data every update), it only takes about 0.7 second. So, I suspect that it is due to the bad performance of local variables. \r\n\r\n### Environment info\r\nUbuntu 14.04, CUDA 8.0, tensorflow 0.12.0-rc1"}