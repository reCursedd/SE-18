{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/343993593", "html_url": "https://github.com/tensorflow/tensorflow/issues/14518#issuecomment-343993593", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14518", "id": 343993593, "node_id": "MDEyOklzc3VlQ29tbWVudDM0Mzk5MzU5Mw==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-13T17:27:14Z", "updated_at": "2017-11-13T17:27:44Z", "author_association": "CONTRIBUTOR", "body_html": "<p>For example, if we required the data to fit into memory, something like the following would work:</p>\n<div class=\"highlight highlight-source-python\"><pre>x <span class=\"pl-k\">=</span> <span class=\"pl-c1\">...</span>      <span class=\"pl-c\"><span class=\"pl-c\">#</span> Tensor of shape [n, ...] containing all the feature values</span>\ny <span class=\"pl-k\">=</span> <span class=\"pl-c1\">...</span>      <span class=\"pl-c\"><span class=\"pl-c\">#</span> Tensor of shape [n] containing all the labels</span>\norder <span class=\"pl-k\">=</span> <span class=\"pl-c1\">...</span>  <span class=\"pl-c\"><span class=\"pl-c\">#</span> Tensor of shape [?] containing the desired order</span>\n\ndataset <span class=\"pl-k\">=</span> tf.data.Dataset.from_tensor_slices(order).map(<span class=\"pl-k\">lambda</span> <span class=\"pl-smi\">i</span>: (x[i], y[i]))</pre></div>", "body_text": "For example, if we required the data to fit into memory, something like the following would work:\nx = ...      # Tensor of shape [n, ...] containing all the feature values\ny = ...      # Tensor of shape [n] containing all the labels\norder = ...  # Tensor of shape [?] containing the desired order\n\ndataset = tf.data.Dataset.from_tensor_slices(order).map(lambda i: (x[i], y[i]))", "body": "For example, if we required the data to fit into memory, something like the following would work:\r\n\r\n```python\r\nx = ...      # Tensor of shape [n, ...] containing all the feature values\r\ny = ...      # Tensor of shape [n] containing all the labels\r\norder = ...  # Tensor of shape [?] containing the desired order\r\n\r\ndataset = tf.data.Dataset.from_tensor_slices(order).map(lambda i: (x[i], y[i]))"}