{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13827", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13827/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13827/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13827/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/13827", "id": 266711857, "node_id": "MDU6SXNzdWUyNjY3MTE4NTc=", "number": 13827, "title": "Tensorflow 1.3: tf.constant with dtype=[float32, float64, float16] may have inconsistent behavior.", "user": {"login": "Ouwen", "id": 5455421, "node_id": "MDQ6VXNlcjU0NTU0MjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5455421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ouwen", "html_url": "https://github.com/Ouwen", "followers_url": "https://api.github.com/users/Ouwen/followers", "following_url": "https://api.github.com/users/Ouwen/following{/other_user}", "gists_url": "https://api.github.com/users/Ouwen/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ouwen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ouwen/subscriptions", "organizations_url": "https://api.github.com/users/Ouwen/orgs", "repos_url": "https://api.github.com/users/Ouwen/repos", "events_url": "https://api.github.com/users/Ouwen/events{/privacy}", "received_events_url": "https://api.github.com/users/Ouwen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-10-19T03:47:14Z", "updated_at": "2017-12-21T15:19:12Z", "closed_at": "2017-12-21T15:19:12Z", "author_association": "CONTRIBUTOR", "body_html": "<h3>System information</h3>\n<ul>\n<li>\n<p><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: No</p>\n</li>\n<li>\n<p><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:<br>\nUbuntu 16.04 with docker running <code>gcr.io/tensorflow/tensorflow:latest</code></p>\n</li>\n<li>\n<p><strong>TensorFlow installed from (source or binary)</strong>: NA</p>\n</li>\n<li>\n<p><strong>TensorFlow version (use command below)</strong>: ('v1.3.0-rc2-20-g0787eee', '1.3.0')</p>\n</li>\n<li>\n<p><strong>Python version</strong>: 2.7</p>\n</li>\n<li>\n<p><strong>Bazel version (if compiling from source)</strong>: NA</p>\n</li>\n<li>\n<p><strong>CUDA/cuDNN version</strong>: NA</p>\n</li>\n<li>\n<p><strong>GPU model and memory</strong>: NA</p>\n</li>\n<li>\n<p><strong>Exact command to reproduce</strong>:</p>\n</li>\n</ul>\n<pre><code>// works\ntest = numpy.array([1,2,3,4,5,6, None], dtype=numpy.float32)\nsess = tf.Session()\nprint(sess.run(tf.constant(test, dtype=tf.float32)))\n</code></pre>\n<pre><code>// works\nsess = tf.Session()\nprint(sess.run(tf.constant([1, 2, 3, 4, 5, 6, None], dtype=tf.float16)))\n</code></pre>\n<pre><code>// returns error\nsess = tf.Session()\nprint(sess.run(tf.constant([1, 2, 3, 4, 5, 6, None], dtype=tf.float32)))\n// TypeError: Expected float32, got None of type '_Message' instead.\n</code></pre>\n<h3>Describe the problem</h3>\n<p>A tensorflow constant with None in array with dtype float32, float64 seem to throw an error. However, if they are first wrapped by a numpy array, none is accepted and turned into NaN. This behavior seems inconsistent.</p>", "body_text": "System information\n\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): No\n\n\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nUbuntu 16.04 with docker running gcr.io/tensorflow/tensorflow:latest\n\n\nTensorFlow installed from (source or binary): NA\n\n\nTensorFlow version (use command below): ('v1.3.0-rc2-20-g0787eee', '1.3.0')\n\n\nPython version: 2.7\n\n\nBazel version (if compiling from source): NA\n\n\nCUDA/cuDNN version: NA\n\n\nGPU model and memory: NA\n\n\nExact command to reproduce:\n\n\n// works\ntest = numpy.array([1,2,3,4,5,6, None], dtype=numpy.float32)\nsess = tf.Session()\nprint(sess.run(tf.constant(test, dtype=tf.float32)))\n\n// works\nsess = tf.Session()\nprint(sess.run(tf.constant([1, 2, 3, 4, 5, 6, None], dtype=tf.float16)))\n\n// returns error\nsess = tf.Session()\nprint(sess.run(tf.constant([1, 2, 3, 4, 5, 6, None], dtype=tf.float32)))\n// TypeError: Expected float32, got None of type '_Message' instead.\n\nDescribe the problem\nA tensorflow constant with None in array with dtype float32, float64 seem to throw an error. However, if they are first wrapped by a numpy array, none is accepted and turned into NaN. This behavior seems inconsistent.", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nUbuntu 16.04 with docker running `gcr.io/tensorflow/tensorflow:latest` \r\n\r\n- **TensorFlow installed from (source or binary)**: NA\r\n- **TensorFlow version (use command below)**: ('v1.3.0-rc2-20-g0787eee', '1.3.0')\r\n- **Python version**: 2.7\r\n- **Bazel version (if compiling from source)**: NA\r\n- **CUDA/cuDNN version**: NA\r\n- **GPU model and memory**: NA\r\n- **Exact command to reproduce**:\r\n\r\n```\r\n// works\r\ntest = numpy.array([1,2,3,4,5,6, None], dtype=numpy.float32)\r\nsess = tf.Session()\r\nprint(sess.run(tf.constant(test, dtype=tf.float32)))\r\n```\r\n\r\n```\r\n// works\r\nsess = tf.Session()\r\nprint(sess.run(tf.constant([1, 2, 3, 4, 5, 6, None], dtype=tf.float16)))\r\n```\r\n```\r\n// returns error\r\nsess = tf.Session()\r\nprint(sess.run(tf.constant([1, 2, 3, 4, 5, 6, None], dtype=tf.float32)))\r\n// TypeError: Expected float32, got None of type '_Message' instead.\r\n```\r\n\r\n### Describe the problem\r\nA tensorflow constant with None in array with dtype float32, float64 seem to throw an error. However, if they are first wrapped by a numpy array, none is accepted and turned into NaN. This behavior seems inconsistent."}