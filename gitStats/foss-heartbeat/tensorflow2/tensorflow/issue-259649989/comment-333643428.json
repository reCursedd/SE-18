{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/333643428", "html_url": "https://github.com/tensorflow/tensorflow/issues/13221#issuecomment-333643428", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13221", "id": 333643428, "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzY0MzQyOA==", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-02T19:44:47Z", "updated_at": "2017-10-02T19:44:47Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Nice investigation!</p>\n<p>So Const allocates memory during kernel construction rather than during <code>Compute</code> which makes it special. It might be better if <code>tf.zeros</code> called an op similar to <code>zeros_like</code> which <a href=\"https://github.com/tensorflow/tensorflow/blob/40eef4473bda90442bb55fcc67842f097c024580/tensorflow/core/kernels/constant_op.cc#L294\">allocates</a> memory during <code>Compute</code>.</p>\n<p>I was also surprised to see large memory allocations on CPU followed by Stream::ThenMemcpy, even though the entire network is inside <code>with (\"gpu..)</code> block. I'm guessing this is because const allocates the memory using MakeTensorFromProto which first creates zero array on CPU</p>\n<p>cc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=463737\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vrv\">@vrv</a> because of <a href=\"https://github.com/tensorflow/tensorflow/blob/a41b510f0358d1212d2c548d65c4b1c5e4aa01c0/tensorflow/core/framework/device_base.h#L209\">comments</a> on refactoring of MakeTensorFromProto</p>", "body_text": "Nice investigation!\nSo Const allocates memory during kernel construction rather than during Compute which makes it special. It might be better if tf.zeros called an op similar to zeros_like which allocates memory during Compute.\nI was also surprised to see large memory allocations on CPU followed by Stream::ThenMemcpy, even though the entire network is inside with (\"gpu..) block. I'm guessing this is because const allocates the memory using MakeTensorFromProto which first creates zero array on CPU\ncc @vrv because of comments on refactoring of MakeTensorFromProto", "body": "Nice investigation!\r\n\r\nSo Const allocates memory during kernel construction rather than during `Compute` which makes it special. It might be better if `tf.zeros` called an op similar to `zeros_like` which [allocates](https://github.com/tensorflow/tensorflow/blob/40eef4473bda90442bb55fcc67842f097c024580/tensorflow/core/kernels/constant_op.cc#L294) memory during `Compute`.\r\n\r\nI was also surprised to see large memory allocations on CPU followed by Stream::ThenMemcpy, even though the entire network is inside `with (\"gpu..)` block. I'm guessing this is because const allocates the memory using MakeTensorFromProto which first creates zero array on CPU\r\n\r\n\r\ncc @vrv because of [comments](https://github.com/tensorflow/tensorflow/blob/a41b510f0358d1212d2c548d65c4b1c5e4aa01c0/tensorflow/core/framework/device_base.h#L209) on refactoring of MakeTensorFromProto\r\n\r\n"}