{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/334616745", "html_url": "https://github.com/tensorflow/tensorflow/issues/13221#issuecomment-334616745", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13221", "id": 334616745, "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDYxNjc0NQ==", "user": {"login": "reedwm", "id": 6510203, "node_id": "MDQ6VXNlcjY1MTAyMDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/6510203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reedwm", "html_url": "https://github.com/reedwm", "followers_url": "https://api.github.com/users/reedwm/followers", "following_url": "https://api.github.com/users/reedwm/following{/other_user}", "gists_url": "https://api.github.com/users/reedwm/gists{/gist_id}", "starred_url": "https://api.github.com/users/reedwm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reedwm/subscriptions", "organizations_url": "https://api.github.com/users/reedwm/orgs", "repos_url": "https://api.github.com/users/reedwm/repos", "events_url": "https://api.github.com/users/reedwm/events{/privacy}", "received_events_url": "https://api.github.com/users/reedwm/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-05T23:10:28Z", "updated_at": "2017-10-05T23:10:28Z", "author_association": "MEMBER", "body_html": "<p>Caching the const op here would fix the issue, since it would only be cached once, instead of once per set of fetches.</p>\n<p>I think <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=23486130\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/tfboyd\">@tfboyd</a>'s benchmarks are <a href=\"https://github.com/tensorflow/benchmarks/tree/master/scripts/tf_cnn_benchmarks\">tf_cnn_benchmarks</a>, which does not use tf.zeros (if it did use a GPU const ops, we would have the same issue and use way too much memory). If we cannot cache the const op, perhaps we should write a microbenchmark testing tf.zeros itself. I would be happy to help.</p>", "body_text": "Caching the const op here would fix the issue, since it would only be cached once, instead of once per set of fetches.\nI think @tfboyd's benchmarks are tf_cnn_benchmarks, which does not use tf.zeros (if it did use a GPU const ops, we would have the same issue and use way too much memory). If we cannot cache the const op, perhaps we should write a microbenchmark testing tf.zeros itself. I would be happy to help.", "body": "Caching the const op here would fix the issue, since it would only be cached once, instead of once per set of fetches. \r\n\r\nI think @tfboyd's benchmarks are [tf_cnn_benchmarks](https://github.com/tensorflow/benchmarks/tree/master/scripts/tf_cnn_benchmarks), which does not use tf.zeros (if it did use a GPU const ops, we would have the same issue and use way too much memory). If we cannot cache the const op, perhaps we should write a microbenchmark testing tf.zeros itself. I would be happy to help."}