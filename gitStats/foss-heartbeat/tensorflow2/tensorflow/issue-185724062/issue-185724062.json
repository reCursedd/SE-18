{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5243", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5243/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5243/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5243/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/5243", "id": 185724062, "node_id": "MDU6SXNzdWUxODU3MjQwNjI=", "number": 5243, "title": "Bug with cifar10 ?", "user": {"login": "kushia", "id": 7816846, "node_id": "MDQ6VXNlcjc4MTY4NDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/7816846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kushia", "html_url": "https://github.com/kushia", "followers_url": "https://api.github.com/users/kushia/followers", "following_url": "https://api.github.com/users/kushia/following{/other_user}", "gists_url": "https://api.github.com/users/kushia/gists{/gist_id}", "starred_url": "https://api.github.com/users/kushia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kushia/subscriptions", "organizations_url": "https://api.github.com/users/kushia/orgs", "repos_url": "https://api.github.com/users/kushia/repos", "events_url": "https://api.github.com/users/kushia/events{/privacy}", "received_events_url": "https://api.github.com/users/kushia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2016-10-27T16:51:39Z", "updated_at": "2017-06-28T03:05:54Z", "closed_at": "2017-06-16T20:50:06Z", "author_association": "NONE", "body_html": "<p>Hi everyone,<br>\nI'm trying to make prediction with the cifar-10 model in /tensorflow/models/image/cifar10<br>\nBut it don't work.<br>\nHere is the code I tried :</p>\n<pre><code>from PIL import Image\nimport tensorflow as tf\nfrom tensorflow.models.image.cifar10 import cifar10\nimport itertools\nwidth = 24\nheight = 24\n\ncategories = [ \"airplane\",\"automobile\",\"bird\",\"cat\",\"deer\",\"dog\",\"frog\",\"horse\",\"ship\",\"truck\" ]\n\nfilename = \"toto.jpg\" # absolute path to input image\nim = Image.open(filename)\nim.save(filename, format='JPEG', subsampling=0, quality=100)\nx = tf.placeholder(tf.float32, [None, 24, 24, 3])\nlogits = cifar10.inference(x)\n_, top_k_pred = tf.nn.top_k(logits, k=5)\ninit_op = tf.initialize_all_variables()\nwith tf.Session() as sess:\n # Restore variables from training checkpoint.\n    input_img = tf.image.decode_jpeg(tf.read_file(filename), channels=3)\n    tf_cast = tf.cast(input_img, tf.float32)\n    float_image = tf.image.resize_image_with_crop_or_pad(tf_cast, height, width)\n    images = tf.expand_dims(float_image, 0)\n    i = images.eval()\n    print (i)\n    sess.run(init_op, feed_dict={x: i})\n    variable_averages = tf.train.ExponentialMovingAverage(\n        cifar10.MOVING_AVERAGE_DECAY)\n    variables_to_restore = variable_averages.variables_to_restore()\n    saver = tf.train.Saver(variables_to_restore)\n    ckpt = tf.train.get_checkpoint_state('/tmp/cifar10_train')\n    if ckpt and ckpt.model_checkpoint_path:\n        print(\"ckpt.model_checkpoint_path \", ckpt.model_checkpoint_path)\n        saver.restore(sess, ckpt.model_checkpoint_path)\n    else:\n        print('No checkpoint file found')\n        exit(0)\n    _, top_indices = sess.run([_, top_k_pred])\n    for key, value in enumerate(top_indices[0]):\n        print (categories[value] + \", \" + str(_[0][key]))\n</code></pre>\n<p>And here is the error I got :</p>\n<pre><code>InvalidArgumentError (see above for traceback): Assign requires shapes of both tensors to match. lhs shape= [18,384] rhs shape= [2304,384]\n     [[Node: save/Assign_5 = Assign[T=DT_FLOAT, _class=[\"loc:@local3/weights\"], use_locking=true, validate_shape=true, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](local3/weights, save/RestoreV2_5)]]\n</code></pre>\n<p>So, it seems than Tensorflow is not happy because the shape of the single image I want to predict [1,24,24,3] don't fit with the shape of a normal batch [128,24,24,3]<br>\nBut, for one single image, it's necessary like this.</p>\n<p>Maybe I miss something but I don't get it... Or maybe it's a bug ?<br>\nI already asked the question on stackoverflow in first place, here : <a href=\"http://stackoverflow.com/questions/40266275/tensorflow-and-cifar-10-testing-single-images#\" rel=\"nofollow\">http://stackoverflow.com/questions/40266275/tensorflow-and-cifar-10-testing-single-images#</a></p>\n<p>But since it could be a bug, and nobody answered, I post here..</p>\n<p>Thanks in advance!</p>", "body_text": "Hi everyone,\nI'm trying to make prediction with the cifar-10 model in /tensorflow/models/image/cifar10\nBut it don't work.\nHere is the code I tried :\nfrom PIL import Image\nimport tensorflow as tf\nfrom tensorflow.models.image.cifar10 import cifar10\nimport itertools\nwidth = 24\nheight = 24\n\ncategories = [ \"airplane\",\"automobile\",\"bird\",\"cat\",\"deer\",\"dog\",\"frog\",\"horse\",\"ship\",\"truck\" ]\n\nfilename = \"toto.jpg\" # absolute path to input image\nim = Image.open(filename)\nim.save(filename, format='JPEG', subsampling=0, quality=100)\nx = tf.placeholder(tf.float32, [None, 24, 24, 3])\nlogits = cifar10.inference(x)\n_, top_k_pred = tf.nn.top_k(logits, k=5)\ninit_op = tf.initialize_all_variables()\nwith tf.Session() as sess:\n # Restore variables from training checkpoint.\n    input_img = tf.image.decode_jpeg(tf.read_file(filename), channels=3)\n    tf_cast = tf.cast(input_img, tf.float32)\n    float_image = tf.image.resize_image_with_crop_or_pad(tf_cast, height, width)\n    images = tf.expand_dims(float_image, 0)\n    i = images.eval()\n    print (i)\n    sess.run(init_op, feed_dict={x: i})\n    variable_averages = tf.train.ExponentialMovingAverage(\n        cifar10.MOVING_AVERAGE_DECAY)\n    variables_to_restore = variable_averages.variables_to_restore()\n    saver = tf.train.Saver(variables_to_restore)\n    ckpt = tf.train.get_checkpoint_state('/tmp/cifar10_train')\n    if ckpt and ckpt.model_checkpoint_path:\n        print(\"ckpt.model_checkpoint_path \", ckpt.model_checkpoint_path)\n        saver.restore(sess, ckpt.model_checkpoint_path)\n    else:\n        print('No checkpoint file found')\n        exit(0)\n    _, top_indices = sess.run([_, top_k_pred])\n    for key, value in enumerate(top_indices[0]):\n        print (categories[value] + \", \" + str(_[0][key]))\n\nAnd here is the error I got :\nInvalidArgumentError (see above for traceback): Assign requires shapes of both tensors to match. lhs shape= [18,384] rhs shape= [2304,384]\n     [[Node: save/Assign_5 = Assign[T=DT_FLOAT, _class=[\"loc:@local3/weights\"], use_locking=true, validate_shape=true, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](local3/weights, save/RestoreV2_5)]]\n\nSo, it seems than Tensorflow is not happy because the shape of the single image I want to predict [1,24,24,3] don't fit with the shape of a normal batch [128,24,24,3]\nBut, for one single image, it's necessary like this.\nMaybe I miss something but I don't get it... Or maybe it's a bug ?\nI already asked the question on stackoverflow in first place, here : http://stackoverflow.com/questions/40266275/tensorflow-and-cifar-10-testing-single-images#\nBut since it could be a bug, and nobody answered, I post here..\nThanks in advance!", "body": "Hi everyone,\r\nI'm trying to make prediction with the cifar-10 model in /tensorflow/models/image/cifar10\r\nBut it don't work.\r\nHere is the code I tried : \r\n\r\n```\r\nfrom PIL import Image\r\nimport tensorflow as tf\r\nfrom tensorflow.models.image.cifar10 import cifar10\r\nimport itertools\r\nwidth = 24\r\nheight = 24\r\n\r\ncategories = [ \"airplane\",\"automobile\",\"bird\",\"cat\",\"deer\",\"dog\",\"frog\",\"horse\",\"ship\",\"truck\" ]\r\n\r\nfilename = \"toto.jpg\" # absolute path to input image\r\nim = Image.open(filename)\r\nim.save(filename, format='JPEG', subsampling=0, quality=100)\r\nx = tf.placeholder(tf.float32, [None, 24, 24, 3])\r\nlogits = cifar10.inference(x)\r\n_, top_k_pred = tf.nn.top_k(logits, k=5)\r\ninit_op = tf.initialize_all_variables()\r\nwith tf.Session() as sess:\r\n # Restore variables from training checkpoint.\r\n    input_img = tf.image.decode_jpeg(tf.read_file(filename), channels=3)\r\n    tf_cast = tf.cast(input_img, tf.float32)\r\n    float_image = tf.image.resize_image_with_crop_or_pad(tf_cast, height, width)\r\n    images = tf.expand_dims(float_image, 0)\r\n    i = images.eval()\r\n    print (i)\r\n    sess.run(init_op, feed_dict={x: i})\r\n    variable_averages = tf.train.ExponentialMovingAverage(\r\n        cifar10.MOVING_AVERAGE_DECAY)\r\n    variables_to_restore = variable_averages.variables_to_restore()\r\n    saver = tf.train.Saver(variables_to_restore)\r\n    ckpt = tf.train.get_checkpoint_state('/tmp/cifar10_train')\r\n    if ckpt and ckpt.model_checkpoint_path:\r\n        print(\"ckpt.model_checkpoint_path \", ckpt.model_checkpoint_path)\r\n        saver.restore(sess, ckpt.model_checkpoint_path)\r\n    else:\r\n        print('No checkpoint file found')\r\n        exit(0)\r\n    _, top_indices = sess.run([_, top_k_pred])\r\n    for key, value in enumerate(top_indices[0]):\r\n        print (categories[value] + \", \" + str(_[0][key]))\r\n```\r\n\r\nAnd here is the error I got : \r\n```\r\nInvalidArgumentError (see above for traceback): Assign requires shapes of both tensors to match. lhs shape= [18,384] rhs shape= [2304,384]\r\n     [[Node: save/Assign_5 = Assign[T=DT_FLOAT, _class=[\"loc:@local3/weights\"], use_locking=true, validate_shape=true, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](local3/weights, save/RestoreV2_5)]]\r\n```\r\n\r\nSo, it seems than Tensorflow is not happy because the shape of the single image I want to predict [1,24,24,3] don't fit with the shape of a normal batch [128,24,24,3]\r\nBut, for one single image, it's necessary like this.\r\n\r\nMaybe I miss something but I don't get it... Or maybe it's a bug ?\r\nI already asked the question on stackoverflow in first place, here : http://stackoverflow.com/questions/40266275/tensorflow-and-cifar-10-testing-single-images#\r\n\r\nBut since it could be a bug, and nobody answered, I post here..\r\n\r\nThanks in advance!\r\n"}