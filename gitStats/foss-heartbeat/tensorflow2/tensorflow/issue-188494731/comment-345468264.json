{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/345468264", "html_url": "https://github.com/tensorflow/tensorflow/issues/5516#issuecomment-345468264", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5516", "id": 345468264, "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTQ2ODI2NA==", "user": {"login": "aligokalppeker", "id": 3147731, "node_id": "MDQ6VXNlcjMxNDc3MzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3147731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aligokalppeker", "html_url": "https://github.com/aligokalppeker", "followers_url": "https://api.github.com/users/aligokalppeker/followers", "following_url": "https://api.github.com/users/aligokalppeker/following{/other_user}", "gists_url": "https://api.github.com/users/aligokalppeker/gists{/gist_id}", "starred_url": "https://api.github.com/users/aligokalppeker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aligokalppeker/subscriptions", "organizations_url": "https://api.github.com/users/aligokalppeker/orgs", "repos_url": "https://api.github.com/users/aligokalppeker/repos", "events_url": "https://api.github.com/users/aligokalppeker/events{/privacy}", "received_events_url": "https://api.github.com/users/aligokalppeker/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-18T20:16:37Z", "updated_at": "2017-11-18T20:17:59Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=23068\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/yaroslavvb\">@yaroslavvb</a> if you think the tf.data should close the %25 performance gap between other frameworks, i can try it. But how could you explain the 2x batch size difference between two frameworks ? Is there any hints, data pinning or something like that ?</p>\n<p>Excuse me but, my comparison is not between top-competitors(Caffe, Caffe2, CNTK, Theano etc..) of the arena. This is a Matlab based third party library not backed by an large scale company or community. Also Matlab is another computation platform which is heavier and slower according other native or managed platforms. I think this issue should be considered more seriously and any inspection regarding such a critical performance issue should not be handled case case but on the overall implementation of the TF library.</p>", "body_text": "@yaroslavvb if you think the tf.data should close the %25 performance gap between other frameworks, i can try it. But how could you explain the 2x batch size difference between two frameworks ? Is there any hints, data pinning or something like that ?\nExcuse me but, my comparison is not between top-competitors(Caffe, Caffe2, CNTK, Theano etc..) of the arena. This is a Matlab based third party library not backed by an large scale company or community. Also Matlab is another computation platform which is heavier and slower according other native or managed platforms. I think this issue should be considered more seriously and any inspection regarding such a critical performance issue should not be handled case case but on the overall implementation of the TF library.", "body": "@yaroslavvb if you think the tf.data should close the %25 performance gap between other frameworks, i can try it. But how could you explain the 2x batch size difference between two frameworks ? Is there any hints, data pinning or something like that ?\r\n\r\nExcuse me but, my comparison is not between top-competitors(Caffe, Caffe2, CNTK, Theano etc..) of the arena. This is a Matlab based third party library not backed by an large scale company or community. Also Matlab is another computation platform which is heavier and slower according other native or managed platforms. I think this issue should be considered more seriously and any inspection regarding such a critical performance issue should not be handled case case but on the overall implementation of the TF library."}