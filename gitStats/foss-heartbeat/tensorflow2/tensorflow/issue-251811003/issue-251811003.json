{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12466", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12466/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12466/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12466/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/12466", "id": 251811003, "node_id": "MDU6SXNzdWUyNTE4MTEwMDM=", "number": 12466, "title": "tensorflow contrib modules break when running in a pyc only environment", "user": {"login": "gotyaoi", "id": 2141918, "node_id": "MDQ6VXNlcjIxNDE5MTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/2141918?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gotyaoi", "html_url": "https://github.com/gotyaoi", "followers_url": "https://api.github.com/users/gotyaoi/followers", "following_url": "https://api.github.com/users/gotyaoi/following{/other_user}", "gists_url": "https://api.github.com/users/gotyaoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/gotyaoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gotyaoi/subscriptions", "organizations_url": "https://api.github.com/users/gotyaoi/orgs", "repos_url": "https://api.github.com/users/gotyaoi/repos", "events_url": "https://api.github.com/users/gotyaoi/events{/privacy}", "received_events_url": "https://api.github.com/users/gotyaoi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}, {"id": 473184161, "node_id": "MDU6TGFiZWw0NzMxODQxNjE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:support", "name": "type:support", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "annarev", "id": 22060313, "node_id": "MDQ6VXNlcjIyMDYwMzEz", "avatar_url": "https://avatars0.githubusercontent.com/u/22060313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/annarev", "html_url": "https://github.com/annarev", "followers_url": "https://api.github.com/users/annarev/followers", "following_url": "https://api.github.com/users/annarev/following{/other_user}", "gists_url": "https://api.github.com/users/annarev/gists{/gist_id}", "starred_url": "https://api.github.com/users/annarev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/annarev/subscriptions", "organizations_url": "https://api.github.com/users/annarev/orgs", "repos_url": "https://api.github.com/users/annarev/repos", "events_url": "https://api.github.com/users/annarev/events{/privacy}", "received_events_url": "https://api.github.com/users/annarev/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "annarev", "id": 22060313, "node_id": "MDQ6VXNlcjIyMDYwMzEz", "avatar_url": "https://avatars0.githubusercontent.com/u/22060313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/annarev", "html_url": "https://github.com/annarev", "followers_url": "https://api.github.com/users/annarev/followers", "following_url": "https://api.github.com/users/annarev/following{/other_user}", "gists_url": "https://api.github.com/users/annarev/gists{/gist_id}", "starred_url": "https://api.github.com/users/annarev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/annarev/subscriptions", "organizations_url": "https://api.github.com/users/annarev/orgs", "repos_url": "https://api.github.com/users/annarev/repos", "events_url": "https://api.github.com/users/annarev/events{/privacy}", "received_events_url": "https://api.github.com/users/annarev/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2017-08-22T01:16:57Z", "updated_at": "2018-01-19T22:15:48Z", "closed_at": "2018-01-19T22:15:48Z", "author_association": "NONE", "body_html": "<p>Please go to Stack Overflow for help and support:</p>\n<p><a href=\"https://stackoverflow.com/questions/tagged/tensorflow\" rel=\"nofollow\">https://stackoverflow.com/questions/tagged/tensorflow</a></p>\n<p>If you open a GitHub issue, here is our policy:</p>\n<ol>\n<li>It must be a bug or a feature request.</li>\n<li>The form below must be filled out.</li>\n<li>It shouldn't be a TensorBoard issue. Those go <a href=\"https://github.com/tensorflow/tensorboard/issues\">here</a>.</li>\n</ol>\n<p><strong>Here's why we have that policy</strong>: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.</p>\n<hr>\n<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:<br>\nNo</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:<br>\nAmazon Linux 2016.09</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:<br>\nbinary, no gpu, virtualenv method</li>\n<li><strong>TensorFlow version (use command below)</strong>:<br>\n1.2.1</li>\n<li><strong>Python version</strong>:<br>\n2.7.12</li>\n<li><strong>Bazel version (if compiling from source)</strong>:<br>\nN/A</li>\n<li><strong>CUDA/cuDNN version</strong>:<br>\nN/A</li>\n<li><strong>GPU model and memory</strong>:<br>\nN/A</li>\n<li><strong>Exact command to reproduce</strong>:<br>\npython -c \"from tensorflow.contrib.layers import fully_connected\"</li>\n</ul>\n<p>You can collect some of this information using our environment capture script:</p>\n<p><a href=\"https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\">https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh</a></p>\n<p>You can obtain the TensorFlow version with</p>\n<p>python -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"</p>\n<h3>Describe the problem</h3>\n<p>When building a python install for a disk space constrained environment, it's fairly common to first compile all .py files to .pyc files, and then only install the .pyc files, to save a few megabytes of space. When attempting this for tensorflow, it became unable to import it's contrib modules (traceback below). From some testing I did, this appears to be due to differing behavior in this snippet from the <code>get_path_to_datafile</code> function in <code>python/platform/resource_loader.py</code>: <code>data_files_path = _os.path.dirname(_inspect.getfile(_sys._getframe(1)))</code></p>\n<p>when the .py files are present, this snippet produces an absolute path. When only the .pyc files are present, it produces a relative path, which is then concatenated with another path, as the <code>get_path_to_datafile</code> function is called twice.</p>\n<h3>Source code / logs</h3>\n<pre><code>File \"./tensorflow/contrib/__init__.py\", line 27, in &lt;module&gt;\nFile \"./tensorflow/contrib/cudnn_rnn/__init__.py\", line 28, in &lt;module&gt;\nFile \"./tensorflow/contrib/cudnn_rnn/python/ops/cudnn_rnn_ops.py\", line 34, in &lt;module&gt;\nFile \"./tensorflow/contrib/util/loader.py\", line 55, in load_op_library\nFile \"./tensorflow/python/framework/load_library.py\", line 64, in load_op_library\nNotFoundError: ./tensorflow/contrib/util/./tensorflow/contrib/cudnn_rnn/python/ops/_cudnn_rnn_ops.so: cannot open shared object file: No such file or directory\n</code></pre>", "body_text": "Please go to Stack Overflow for help and support:\nhttps://stackoverflow.com/questions/tagged/tensorflow\nIf you open a GitHub issue, here is our policy:\n\nIt must be a bug or a feature request.\nThe form below must be filled out.\nIt shouldn't be a TensorBoard issue. Those go here.\n\nHere's why we have that policy: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\n\nSystem information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nNo\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nAmazon Linux 2016.09\nTensorFlow installed from (source or binary):\nbinary, no gpu, virtualenv method\nTensorFlow version (use command below):\n1.2.1\nPython version:\n2.7.12\nBazel version (if compiling from source):\nN/A\nCUDA/cuDNN version:\nN/A\nGPU model and memory:\nN/A\nExact command to reproduce:\npython -c \"from tensorflow.contrib.layers import fully_connected\"\n\nYou can collect some of this information using our environment capture script:\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\nYou can obtain the TensorFlow version with\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\nDescribe the problem\nWhen building a python install for a disk space constrained environment, it's fairly common to first compile all .py files to .pyc files, and then only install the .pyc files, to save a few megabytes of space. When attempting this for tensorflow, it became unable to import it's contrib modules (traceback below). From some testing I did, this appears to be due to differing behavior in this snippet from the get_path_to_datafile function in python/platform/resource_loader.py: data_files_path = _os.path.dirname(_inspect.getfile(_sys._getframe(1)))\nwhen the .py files are present, this snippet produces an absolute path. When only the .pyc files are present, it produces a relative path, which is then concatenated with another path, as the get_path_to_datafile function is called twice.\nSource code / logs\nFile \"./tensorflow/contrib/__init__.py\", line 27, in <module>\nFile \"./tensorflow/contrib/cudnn_rnn/__init__.py\", line 28, in <module>\nFile \"./tensorflow/contrib/cudnn_rnn/python/ops/cudnn_rnn_ops.py\", line 34, in <module>\nFile \"./tensorflow/contrib/util/loader.py\", line 55, in load_op_library\nFile \"./tensorflow/python/framework/load_library.py\", line 64, in load_op_library\nNotFoundError: ./tensorflow/contrib/util/./tensorflow/contrib/cudnn_rnn/python/ops/_cudnn_rnn_ops.so: cannot open shared object file: No such file or directory", "body": "Please go to Stack Overflow for help and support:\r\n\r\nhttps://stackoverflow.com/questions/tagged/tensorflow\r\n\r\nIf you open a GitHub issue, here is our policy:\r\n\r\n1. It must be a bug or a feature request.\r\n2. The form below must be filled out.\r\n3. It shouldn't be a TensorBoard issue. Those go [here](https://github.com/tensorflow/tensorboard/issues).\r\n\r\n**Here's why we have that policy**: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nNo\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nAmazon Linux 2016.09\r\n- **TensorFlow installed from (source or binary)**:\r\nbinary, no gpu, virtualenv method\r\n- **TensorFlow version (use command below)**:\r\n1.2.1\r\n- **Python version**: \r\n2.7.12\r\n- **Bazel version (if compiling from source)**:\r\nN/A\r\n- **CUDA/cuDNN version**:\r\nN/A\r\n- **GPU model and memory**:\r\nN/A\r\n- **Exact command to reproduce**:\r\npython -c \"from tensorflow.contrib.layers import fully_connected\"\r\n\r\nYou can collect some of this information using our environment capture script:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\nYou can obtain the TensorFlow version with\r\n\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n\r\n### Describe the problem\r\nWhen building a python install for a disk space constrained environment, it's fairly common to first compile all .py files to .pyc files, and then only install the .pyc files, to save a few megabytes of space. When attempting this for tensorflow, it became unable to import it's contrib modules (traceback below). From some testing I did, this appears to be due to differing behavior in this snippet from the `get_path_to_datafile` function in `python/platform/resource_loader.py`: `data_files_path = _os.path.dirname(_inspect.getfile(_sys._getframe(1)))`\r\n\r\nwhen the .py files are present, this snippet produces an absolute path. When only the .pyc files are present, it produces a relative path, which is then concatenated with another path, as the `get_path_to_datafile` function is called twice.\r\n\r\n### Source code / logs\r\n```\r\nFile \"./tensorflow/contrib/__init__.py\", line 27, in <module>\r\nFile \"./tensorflow/contrib/cudnn_rnn/__init__.py\", line 28, in <module>\r\nFile \"./tensorflow/contrib/cudnn_rnn/python/ops/cudnn_rnn_ops.py\", line 34, in <module>\r\nFile \"./tensorflow/contrib/util/loader.py\", line 55, in load_op_library\r\nFile \"./tensorflow/python/framework/load_library.py\", line 64, in load_op_library\r\nNotFoundError: ./tensorflow/contrib/util/./tensorflow/contrib/cudnn_rnn/python/ops/_cudnn_rnn_ops.so: cannot open shared object file: No such file or directory\r\n```"}