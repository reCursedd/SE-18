{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22534", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22534/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22534/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22534/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/22534", "id": 364008814, "node_id": "MDExOlB1bGxSZXF1ZXN0MjE4MzAxMzUx", "number": 22534, "title": "Performance optimization on SparseConcatOp.", "user": {"login": "lowintelligence", "id": 10669111, "node_id": "MDQ6VXNlcjEwNjY5MTEx", "avatar_url": "https://avatars0.githubusercontent.com/u/10669111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowintelligence", "html_url": "https://github.com/lowintelligence", "followers_url": "https://api.github.com/users/lowintelligence/followers", "following_url": "https://api.github.com/users/lowintelligence/following{/other_user}", "gists_url": "https://api.github.com/users/lowintelligence/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowintelligence/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowintelligence/subscriptions", "organizations_url": "https://api.github.com/users/lowintelligence/orgs", "repos_url": "https://api.github.com/users/lowintelligence/repos", "events_url": "https://api.github.com/users/lowintelligence/events{/privacy}", "received_events_url": "https://api.github.com/users/lowintelligence/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}], "state": "open", "locked": false, "assignee": {"login": "caisq", "id": 16824702, "node_id": "MDQ6VXNlcjE2ODI0NzAy", "avatar_url": "https://avatars2.githubusercontent.com/u/16824702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caisq", "html_url": "https://github.com/caisq", "followers_url": "https://api.github.com/users/caisq/followers", "following_url": "https://api.github.com/users/caisq/following{/other_user}", "gists_url": "https://api.github.com/users/caisq/gists{/gist_id}", "starred_url": "https://api.github.com/users/caisq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caisq/subscriptions", "organizations_url": "https://api.github.com/users/caisq/orgs", "repos_url": "https://api.github.com/users/caisq/repos", "events_url": "https://api.github.com/users/caisq/events{/privacy}", "received_events_url": "https://api.github.com/users/caisq/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "caisq", "id": 16824702, "node_id": "MDQ6VXNlcjE2ODI0NzAy", "avatar_url": "https://avatars2.githubusercontent.com/u/16824702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caisq", "html_url": "https://github.com/caisq", "followers_url": "https://api.github.com/users/caisq/followers", "following_url": "https://api.github.com/users/caisq/following{/other_user}", "gists_url": "https://api.github.com/users/caisq/gists{/gist_id}", "starred_url": "https://api.github.com/users/caisq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caisq/subscriptions", "organizations_url": "https://api.github.com/users/caisq/orgs", "repos_url": "https://api.github.com/users/caisq/repos", "events_url": "https://api.github.com/users/caisq/events{/privacy}", "received_events_url": "https://api.github.com/users/caisq/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-09-26T12:42:17Z", "updated_at": "2018-11-09T18:53:48Z", "closed_at": null, "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/22534", "html_url": "https://github.com/tensorflow/tensorflow/pull/22534", "diff_url": "https://github.com/tensorflow/tensorflow/pull/22534.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/22534.patch"}, "body_html": "<p>Previous 'SparseConcatOp' uses a reorder-concat-reorder implementation. In the 'Reorder' function, a sort would be performed, which decides that the overall complexity would be O(NlogN). In large (maybe rare but occurred in our production env) cases, time consumption is significant.</p>\n<p>This commit includes optimizations below:</p>\n<ul>\n<li>A quickpath for dim-0 concatenation. The reorder phase would not be done, which reaches O(N) complexity.</li>\n<li>Parallel implementation for concatenating and sorting phases, with a parallel quick sort implementation with Eigen threadpool.</li>\n<li>A naive dimension comparator used for sorting.</li>\n</ul>\n<p>Here is the performance comparison on my Mac Pro (i7-4770HQ @ 2.2GHz 4c8T, 16GB DDR3 1600) with the benchmarks in this commit:<br>\nThe benchmark uses 3D string tensor, the numbers 'BM_SparseConcat_X_Y_Z_T' in the the benchmark indicate 'X: valid points of each sparse; Y: number of input tensors; Z: concat dimension; T: number of threads'.<br>\nOld:<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/10669111/46080373-5d715e00-c1cc-11e8-92ae-d79da8e21c95.png\"><img src=\"https://user-images.githubusercontent.com/10669111/46080373-5d715e00-c1cc-11e8-92ae-d79da8e21c95.png\" alt=\"image\" style=\"max-width:100%;\"></a><br>\nNew:<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/10669111/46080385-65310280-c1cc-11e8-8663-b61aa7298e68.png\"><img src=\"https://user-images.githubusercontent.com/10669111/46080385-65310280-c1cc-11e8-8663-b61aa7298e68.png\" alt=\"image\" style=\"max-width:100%;\"></a></p>", "body_text": "Previous 'SparseConcatOp' uses a reorder-concat-reorder implementation. In the 'Reorder' function, a sort would be performed, which decides that the overall complexity would be O(NlogN). In large (maybe rare but occurred in our production env) cases, time consumption is significant.\nThis commit includes optimizations below:\n\nA quickpath for dim-0 concatenation. The reorder phase would not be done, which reaches O(N) complexity.\nParallel implementation for concatenating and sorting phases, with a parallel quick sort implementation with Eigen threadpool.\nA naive dimension comparator used for sorting.\n\nHere is the performance comparison on my Mac Pro (i7-4770HQ @ 2.2GHz 4c8T, 16GB DDR3 1600) with the benchmarks in this commit:\nThe benchmark uses 3D string tensor, the numbers 'BM_SparseConcat_X_Y_Z_T' in the the benchmark indicate 'X: valid points of each sparse; Y: number of input tensors; Z: concat dimension; T: number of threads'.\nOld:\n\nNew:", "body": "Previous 'SparseConcatOp' uses a reorder-concat-reorder implementation. In the 'Reorder' function, a sort would be performed, which decides that the overall complexity would be O(NlogN). In large (maybe rare but occurred in our production env) cases, time consumption is significant.\r\n\r\nThis commit includes optimizations below:\r\n  - A quickpath for dim-0 concatenation. The reorder phase would not be done, which reaches O(N) complexity.\r\n  - Parallel implementation for concatenating and sorting phases, with a parallel quick sort implementation with Eigen threadpool.\r\n  - A naive dimension comparator used for sorting.\r\n\r\nHere is the performance comparison on my Mac Pro (i7-4770HQ @ 2.2GHz 4c8T, 16GB DDR3 1600) with the benchmarks in this commit:\r\nThe benchmark uses 3D string tensor, the numbers 'BM_SparseConcat_X_Y_Z_T' in the the benchmark indicate 'X: valid points of each sparse; Y: number of input tensors; Z: concat dimension; T: number of threads'.\r\nOld:\r\n![image](https://user-images.githubusercontent.com/10669111/46080373-5d715e00-c1cc-11e8-92ae-d79da8e21c95.png)\r\nNew:\r\n![image](https://user-images.githubusercontent.com/10669111/46080385-65310280-c1cc-11e8-8663-b61aa7298e68.png)\r\n\r\n\r\n\r\n"}