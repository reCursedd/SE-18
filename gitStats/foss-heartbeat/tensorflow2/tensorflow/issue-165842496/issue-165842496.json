{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3332", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3332/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3332/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3332/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/3332", "id": 165842496, "node_id": "MDU6SXNzdWUxNjU4NDI0OTY=", "number": 3332, "title": "Feature Request: Support for depthwise convolution by groups", "user": {"login": "fculinovic", "id": 9268051, "node_id": "MDQ6VXNlcjkyNjgwNTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/9268051?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fculinovic", "html_url": "https://github.com/fculinovic", "followers_url": "https://api.github.com/users/fculinovic/followers", "following_url": "https://api.github.com/users/fculinovic/following{/other_user}", "gists_url": "https://api.github.com/users/fculinovic/gists{/gist_id}", "starred_url": "https://api.github.com/users/fculinovic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fculinovic/subscriptions", "organizations_url": "https://api.github.com/users/fculinovic/orgs", "repos_url": "https://api.github.com/users/fculinovic/repos", "events_url": "https://api.github.com/users/fculinovic/events{/privacy}", "received_events_url": "https://api.github.com/users/fculinovic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "open", "locked": false, "assignee": {"login": "chsigg", "id": 7523982, "node_id": "MDQ6VXNlcjc1MjM5ODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/7523982?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chsigg", "html_url": "https://github.com/chsigg", "followers_url": "https://api.github.com/users/chsigg/followers", "following_url": "https://api.github.com/users/chsigg/following{/other_user}", "gists_url": "https://api.github.com/users/chsigg/gists{/gist_id}", "starred_url": "https://api.github.com/users/chsigg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chsigg/subscriptions", "organizations_url": "https://api.github.com/users/chsigg/orgs", "repos_url": "https://api.github.com/users/chsigg/repos", "events_url": "https://api.github.com/users/chsigg/events{/privacy}", "received_events_url": "https://api.github.com/users/chsigg/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chsigg", "id": 7523982, "node_id": "MDQ6VXNlcjc1MjM5ODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/7523982?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chsigg", "html_url": "https://github.com/chsigg", "followers_url": "https://api.github.com/users/chsigg/followers", "following_url": "https://api.github.com/users/chsigg/following{/other_user}", "gists_url": "https://api.github.com/users/chsigg/gists{/gist_id}", "starred_url": "https://api.github.com/users/chsigg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chsigg/subscriptions", "organizations_url": "https://api.github.com/users/chsigg/orgs", "repos_url": "https://api.github.com/users/chsigg/repos", "events_url": "https://api.github.com/users/chsigg/events{/privacy}", "received_events_url": "https://api.github.com/users/chsigg/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 49, "created_at": "2016-07-15T17:50:40Z", "updated_at": "2018-11-09T08:36:05Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>As much as I have managed to follow the API section of tensorflow the depthwise_conv2d doesn't fulfill my thoughts on what I would like to do with the input/filters.</p>\n<pre><code>shape = (2,5,5,48,128)\ninitializer = tf.truncated_normal_initializer(stddev=1e-2)\nkernel = tf.get_variable(name='weights', shape=shape, initializer=initializer)\n</code></pre>\n<p>Considering the input is of shape (batch_size, 55, 55, 96),<br>\nthe function definition would be:</p>\n<pre><code>def depthwise_group_conv2d(input, filter, groups, strides, padding, name)\n</code></pre>\n<p>which would be able to do</p>\n<pre><code>conv = tf.nn.depthwise_group_conv2d(input, kernel, [48,48], strides, padding, name)\n</code></pre>\n<p>that would split the input depthwise into depths from given 'groups' parameter and perform the convolution with shared parameters (i.e. depths [:48] take weights[0] and depths[48:] take weights[1]) inside a group. Then the outputs of convolutions by groups would be concatenated depthwise.</p>\n<p>This would make it easier to define groups such as one used in AlexNet/CaffeNet architectures.</p>\n<p>Hopefully I have missed a certain feature already existing for making this easier.</p>\n<p>Best regards,<br>\nFilip</p>", "body_text": "As much as I have managed to follow the API section of tensorflow the depthwise_conv2d doesn't fulfill my thoughts on what I would like to do with the input/filters.\nshape = (2,5,5,48,128)\ninitializer = tf.truncated_normal_initializer(stddev=1e-2)\nkernel = tf.get_variable(name='weights', shape=shape, initializer=initializer)\n\nConsidering the input is of shape (batch_size, 55, 55, 96),\nthe function definition would be:\ndef depthwise_group_conv2d(input, filter, groups, strides, padding, name)\n\nwhich would be able to do\nconv = tf.nn.depthwise_group_conv2d(input, kernel, [48,48], strides, padding, name)\n\nthat would split the input depthwise into depths from given 'groups' parameter and perform the convolution with shared parameters (i.e. depths [:48] take weights[0] and depths[48:] take weights[1]) inside a group. Then the outputs of convolutions by groups would be concatenated depthwise.\nThis would make it easier to define groups such as one used in AlexNet/CaffeNet architectures.\nHopefully I have missed a certain feature already existing for making this easier.\nBest regards,\nFilip", "body": "As much as I have managed to follow the API section of tensorflow the depthwise_conv2d doesn't fulfill my thoughts on what I would like to do with the input/filters.\n\n```\nshape = (2,5,5,48,128)\ninitializer = tf.truncated_normal_initializer(stddev=1e-2)\nkernel = tf.get_variable(name='weights', shape=shape, initializer=initializer)\n```\n\nConsidering the input is of shape (batch_size, 55, 55, 96),\nthe function definition would be:\n\n```\ndef depthwise_group_conv2d(input, filter, groups, strides, padding, name)\n```\n\nwhich would be able to do\n\n```\nconv = tf.nn.depthwise_group_conv2d(input, kernel, [48,48], strides, padding, name)\n```\n\nthat would split the input depthwise into depths from given 'groups' parameter and perform the convolution with shared parameters (i.e. depths [:48] take weights[0] and depths[48:] take weights[1]) inside a group. Then the outputs of convolutions by groups would be concatenated depthwise.\n\nThis would make it easier to define groups such as one used in AlexNet/CaffeNet architectures.\n\nHopefully I have missed a certain feature already existing for making this easier.\n\nBest regards,\nFilip\n"}