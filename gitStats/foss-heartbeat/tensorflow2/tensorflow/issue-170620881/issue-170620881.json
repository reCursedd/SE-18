{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3748", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3748/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3748/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3748/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/3748", "id": 170620881, "node_id": "MDU6SXNzdWUxNzA2MjA4ODE=", "number": 3748, "title": "unexpected names in `NamedOutputs` tuples when using `outputs_collections` with some layers", "user": {"login": "florijanstamenkovic", "id": 7459588, "node_id": "MDQ6VXNlcjc0NTk1ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/7459588?v=4", "gravatar_id": "", "url": "https://api.github.com/users/florijanstamenkovic", "html_url": "https://github.com/florijanstamenkovic", "followers_url": "https://api.github.com/users/florijanstamenkovic/followers", "following_url": "https://api.github.com/users/florijanstamenkovic/following{/other_user}", "gists_url": "https://api.github.com/users/florijanstamenkovic/gists{/gist_id}", "starred_url": "https://api.github.com/users/florijanstamenkovic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/florijanstamenkovic/subscriptions", "organizations_url": "https://api.github.com/users/florijanstamenkovic/orgs", "repos_url": "https://api.github.com/users/florijanstamenkovic/repos", "events_url": "https://api.github.com/users/florijanstamenkovic/events{/privacy}", "received_events_url": "https://api.github.com/users/florijanstamenkovic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "martinwicke", "id": 577277, "node_id": "MDQ6VXNlcjU3NzI3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/577277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinwicke", "html_url": "https://github.com/martinwicke", "followers_url": "https://api.github.com/users/martinwicke/followers", "following_url": "https://api.github.com/users/martinwicke/following{/other_user}", "gists_url": "https://api.github.com/users/martinwicke/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinwicke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinwicke/subscriptions", "organizations_url": "https://api.github.com/users/martinwicke/orgs", "repos_url": "https://api.github.com/users/martinwicke/repos", "events_url": "https://api.github.com/users/martinwicke/events{/privacy}", "received_events_url": "https://api.github.com/users/martinwicke/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "martinwicke", "id": 577277, "node_id": "MDQ6VXNlcjU3NzI3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/577277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinwicke", "html_url": "https://github.com/martinwicke", "followers_url": "https://api.github.com/users/martinwicke/followers", "following_url": "https://api.github.com/users/martinwicke/following{/other_user}", "gists_url": "https://api.github.com/users/martinwicke/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinwicke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinwicke/subscriptions", "organizations_url": "https://api.github.com/users/martinwicke/orgs", "repos_url": "https://api.github.com/users/martinwicke/repos", "events_url": "https://api.github.com/users/martinwicke/events{/privacy}", "received_events_url": "https://api.github.com/users/martinwicke/received_events", "type": "User", "site_admin": false}, {"login": "sguada", "id": 1766524, "node_id": "MDQ6VXNlcjE3NjY1MjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1766524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sguada", "html_url": "https://github.com/sguada", "followers_url": "https://api.github.com/users/sguada/followers", "following_url": "https://api.github.com/users/sguada/following{/other_user}", "gists_url": "https://api.github.com/users/sguada/gists{/gist_id}", "starred_url": "https://api.github.com/users/sguada/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sguada/subscriptions", "organizations_url": "https://api.github.com/users/sguada/orgs", "repos_url": "https://api.github.com/users/sguada/repos", "events_url": "https://api.github.com/users/sguada/events{/privacy}", "received_events_url": "https://api.github.com/users/sguada/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2016-08-11T11:09:06Z", "updated_at": "2017-02-09T22:02:10Z", "closed_at": "2016-08-30T17:16:36Z", "author_association": "NONE", "body_html": "<p>We are getting unexpected names (they lack outer name scope) in <code>NamedOutputs</code> tuples added to collections using <code>tf.contrib.layers</code> <code>outputs_collections</code>. The following code demonstrates the issue:</p>\n<pre><code>import tensorflow as tf\nfrom tensorflow.contrib import slim\n\n\nwith tf.name_scope(\"train\"):\n    with slim.arg_scope([slim.fully_connected, slim.flatten],\n                        outputs_collections=tf.GraphKeys.ACTIVATIONS):\n        ph = tf.placeholder(tf.float32, [2, 2])\n        fc = slim.fully_connected(ph, 10)\n        flat = slim.flatten(ph)\n\n{print(\"name in tuple: \", no.name, \", tensor name:\", no.outputs.name)\n for no in tf.get_collection(tf.GraphKeys.ACTIVATIONS)}\n</code></pre>\n<p>The output is:</p>\n<pre><code>name in tuple:  fully_connected , tensor name: train/fully_connected/Relu:0\nname in tuple:  train/Flatten , tensor name: train/Flatten/Reshape:0\n</code></pre>\n<p>We have tracked the cause of this down in to <code>tf.contrib.layers</code>. For layers that use internal variables (fully_connected, conv2d, ...), final outputs are added to collections based on internal variable_scope name. Please see:</p>\n<p>tensorflow/tensorflow/contrib/layers/python/layers/layers.py lines 758, 835 (version 0.10, commit <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/1df3fb0b4ae5915364f09e233496e98a99a4a886/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/1df3fb0b4ae5915364f09e233496e98a99a4a886\"><tt>1df3fb0</tt></a>)</p>\n<p>It is our understanding that activation names generally fall under name_scopes, which is consistent with actual op names in the output above.</p>\n<p>This issue makes it impossible to retrieve items from collections filtered down with a name scope, an approach that we are trying to use for decoupling op creation and summarizing. It seems a valid use-case.</p>", "body_text": "We are getting unexpected names (they lack outer name scope) in NamedOutputs tuples added to collections using tf.contrib.layers outputs_collections. The following code demonstrates the issue:\nimport tensorflow as tf\nfrom tensorflow.contrib import slim\n\n\nwith tf.name_scope(\"train\"):\n    with slim.arg_scope([slim.fully_connected, slim.flatten],\n                        outputs_collections=tf.GraphKeys.ACTIVATIONS):\n        ph = tf.placeholder(tf.float32, [2, 2])\n        fc = slim.fully_connected(ph, 10)\n        flat = slim.flatten(ph)\n\n{print(\"name in tuple: \", no.name, \", tensor name:\", no.outputs.name)\n for no in tf.get_collection(tf.GraphKeys.ACTIVATIONS)}\n\nThe output is:\nname in tuple:  fully_connected , tensor name: train/fully_connected/Relu:0\nname in tuple:  train/Flatten , tensor name: train/Flatten/Reshape:0\n\nWe have tracked the cause of this down in to tf.contrib.layers. For layers that use internal variables (fully_connected, conv2d, ...), final outputs are added to collections based on internal variable_scope name. Please see:\ntensorflow/tensorflow/contrib/layers/python/layers/layers.py lines 758, 835 (version 0.10, commit 1df3fb0)\nIt is our understanding that activation names generally fall under name_scopes, which is consistent with actual op names in the output above.\nThis issue makes it impossible to retrieve items from collections filtered down with a name scope, an approach that we are trying to use for decoupling op creation and summarizing. It seems a valid use-case.", "body": "We are getting unexpected names (they lack outer name scope) in `NamedOutputs` tuples added to collections using `tf.contrib.layers` `outputs_collections`. The following code demonstrates the issue:\n\n```\nimport tensorflow as tf\nfrom tensorflow.contrib import slim\n\n\nwith tf.name_scope(\"train\"):\n    with slim.arg_scope([slim.fully_connected, slim.flatten],\n                        outputs_collections=tf.GraphKeys.ACTIVATIONS):\n        ph = tf.placeholder(tf.float32, [2, 2])\n        fc = slim.fully_connected(ph, 10)\n        flat = slim.flatten(ph)\n\n{print(\"name in tuple: \", no.name, \", tensor name:\", no.outputs.name)\n for no in tf.get_collection(tf.GraphKeys.ACTIVATIONS)}\n```\n\nThe output is:\n\n```\nname in tuple:  fully_connected , tensor name: train/fully_connected/Relu:0\nname in tuple:  train/Flatten , tensor name: train/Flatten/Reshape:0\n```\n\nWe have tracked the cause of this down in to `tf.contrib.layers`. For layers that use internal variables (fully_connected, conv2d, ...), final outputs are added to collections based on internal variable_scope name. Please see:\n\n tensorflow/tensorflow/contrib/layers/python/layers/layers.py lines 758, 835 (version 0.10, commit 1df3fb0b4ae5915364f09e233496e98a99a4a886)\n\nIt is our understanding that activation names generally fall under name_scopes, which is consistent with actual op names in the output above.\n\nThis issue makes it impossible to retrieve items from collections filtered down with a name scope, an approach that we are trying to use for decoupling op creation and summarizing. It seems a valid use-case.\n"}