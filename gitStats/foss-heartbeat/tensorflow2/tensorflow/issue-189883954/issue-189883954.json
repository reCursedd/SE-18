{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5652", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5652/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5652/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5652/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/5652", "id": 189883954, "node_id": "MDU6SXNzdWUxODk4ODM5NTQ=", "number": 5652, "title": "cifar10_multi_gpu_train.py breaks with more than 1 GPU", "user": {"login": "ptrendx", "id": 8398980, "node_id": "MDQ6VXNlcjgzOTg5ODA=", "avatar_url": "https://avatars1.githubusercontent.com/u/8398980?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptrendx", "html_url": "https://github.com/ptrendx", "followers_url": "https://api.github.com/users/ptrendx/followers", "following_url": "https://api.github.com/users/ptrendx/following{/other_user}", "gists_url": "https://api.github.com/users/ptrendx/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptrendx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptrendx/subscriptions", "organizations_url": "https://api.github.com/users/ptrendx/orgs", "repos_url": "https://api.github.com/users/ptrendx/repos", "events_url": "https://api.github.com/users/ptrendx/events{/privacy}", "received_events_url": "https://api.github.com/users/ptrendx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "joel-shor", "id": 6020988, "node_id": "MDQ6VXNlcjYwMjA5ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/6020988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joel-shor", "html_url": "https://github.com/joel-shor", "followers_url": "https://api.github.com/users/joel-shor/followers", "following_url": "https://api.github.com/users/joel-shor/following{/other_user}", "gists_url": "https://api.github.com/users/joel-shor/gists{/gist_id}", "starred_url": "https://api.github.com/users/joel-shor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joel-shor/subscriptions", "organizations_url": "https://api.github.com/users/joel-shor/orgs", "repos_url": "https://api.github.com/users/joel-shor/repos", "events_url": "https://api.github.com/users/joel-shor/events{/privacy}", "received_events_url": "https://api.github.com/users/joel-shor/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "joel-shor", "id": 6020988, "node_id": "MDQ6VXNlcjYwMjA5ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/6020988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joel-shor", "html_url": "https://github.com/joel-shor", "followers_url": "https://api.github.com/users/joel-shor/followers", "following_url": "https://api.github.com/users/joel-shor/following{/other_user}", "gists_url": "https://api.github.com/users/joel-shor/gists{/gist_id}", "starred_url": "https://api.github.com/users/joel-shor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joel-shor/subscriptions", "organizations_url": "https://api.github.com/users/joel-shor/orgs", "repos_url": "https://api.github.com/users/joel-shor/repos", "events_url": "https://api.github.com/users/joel-shor/events{/privacy}", "received_events_url": "https://api.github.com/users/joel-shor/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2016-11-16T23:32:51Z", "updated_at": "2017-02-27T22:44:53Z", "closed_at": "2017-02-27T22:44:53Z", "author_association": "CONTRIBUTOR", "body_html": "<h3>Environment info</h3>\n<p>Operating System: Ubuntu</p>\n<p>Installed version of CUDA and cuDNN: 8.0 and 5</p>\n<ol>\n<li>The commit hash (<code>git rev-parse HEAD</code>): <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/3d41cf77d624aeee0482f92121a9300b29db2809/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/3d41cf77d624aeee0482f92121a9300b29db2809\"><tt>3d41cf7</tt></a></li>\n<li>The output of <code>bazel version</code>:<br>\nBuild label: 0.3.2<br>\nBuild target: bazel-out/local-fastbuild/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar<br>\nBuild time: Fri Oct 7 17:25:10 2016 (1475861110)<br>\nBuild timestamp: 1475861110<br>\nBuild timestamp as int: 1475861110</li>\n</ol>\n<h3>If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)</h3>\n<p>python cifar10_multi_gpu_train.py --num_gpus=2</p>\n<p>Both cifar10_train.py and cifar10_multi_gpu_train.py (without specifying num_gpus, so running on a single GPU) work.</p>\n<h3>Logs or other output that would be helpful</h3>\n<p>I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally<br>\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so locally<br>\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally<br>\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally<br>\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally<br>\nFilling queue with 20000 CIFAR images before starting to train. This will take a few minutes.<br>\nFilling queue with 20000 CIFAR images before starting to train. This will take a few minutes.<br>\nTraceback (most recent call last):<br>\nFile \"cifar10_multi_gpu_train.py\", line 280, in <br>\ntf.app.run()<br>\nFile \"/data/github/tensorflow/_python_build/tensorflow/python/platform/app.py\", line 43, in run<br>\nsys.exit(main(sys.argv[:1] + flags_passthrough))<br>\nFile \"cifar10_multi_gpu_train.py\", line 276, in main<br>\ntrain()<br>\nFile \"cifar10_multi_gpu_train.py\", line 180, in train<br>\nloss = tower_loss(scope)<br>\nFile \"cifar10_multi_gpu_train.py\", line 92, in tower_loss<br>\nloss_averages_op = loss_averages.apply(losses + [total_loss])<br>\nFile \"/data/github/tensorflow/_python_build/tensorflow/python/training/moving_averages.py\", line 391, in apply<br>\nself._averages[var], var, decay, zero_debias=zero_debias))<br>\nFile \"/data/github/tensorflow/_python_build/tensorflow/python/training/moving_averages.py\", line 70, in assign_moving_average<br>\nupdate_delta = _zero_debias(variable, value, decay)<br>\nFile \"/data/github/tensorflow/_python_build/tensorflow/python/training/moving_averages.py\", line 177, in _zero_debias<br>\ntrainable=False)<br>\nFile \"/data/github/tensorflow/_python_build/tensorflow/python/ops/variable_scope.py\", line 1024, in get_variable<br>\ncustom_getter=custom_getter)<br>\nFile \"/data/github/tensorflow/_python_build/tensorflow/python/ops/variable_scope.py\", line 850, in get_variable<br>\ncustom_getter=custom_getter)<br>\nFile \"/data/github/tensorflow/_python_build/tensorflow/python/ops/variable_scope.py\", line 346, in get_variable<br>\nvalidate_shape=validate_shape)<br>\nFile \"/data/github/tensorflow/_python_build/tensorflow/python/ops/variable_scope.py\", line 331, in _true_getter<br>\ncaching_device=caching_device, validate_shape=validate_shape)<br>\nFile \"/data/github/tensorflow/_python_build/tensorflow/python/ops/variable_scope.py\", line 650, in _get_single_variable<br>\n\"VarScope?\" % name)<br>\nValueError: Variable tower_1/tower_1/conv1/weight_loss/avg/biased does not exist, or was not created with tf.get_variable(). Did you mean to set reuse=None in VarScope?</p>", "body_text": "Environment info\nOperating System: Ubuntu\nInstalled version of CUDA and cuDNN: 8.0 and 5\n\nThe commit hash (git rev-parse HEAD): 3d41cf7\nThe output of bazel version:\nBuild label: 0.3.2\nBuild target: bazel-out/local-fastbuild/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar\nBuild time: Fri Oct 7 17:25:10 2016 (1475861110)\nBuild timestamp: 1475861110\nBuild timestamp as int: 1475861110\n\nIf possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\npython cifar10_multi_gpu_train.py --num_gpus=2\nBoth cifar10_train.py and cifar10_multi_gpu_train.py (without specifying num_gpus, so running on a single GPU) work.\nLogs or other output that would be helpful\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally\nFilling queue with 20000 CIFAR images before starting to train. This will take a few minutes.\nFilling queue with 20000 CIFAR images before starting to train. This will take a few minutes.\nTraceback (most recent call last):\nFile \"cifar10_multi_gpu_train.py\", line 280, in \ntf.app.run()\nFile \"/data/github/tensorflow/_python_build/tensorflow/python/platform/app.py\", line 43, in run\nsys.exit(main(sys.argv[:1] + flags_passthrough))\nFile \"cifar10_multi_gpu_train.py\", line 276, in main\ntrain()\nFile \"cifar10_multi_gpu_train.py\", line 180, in train\nloss = tower_loss(scope)\nFile \"cifar10_multi_gpu_train.py\", line 92, in tower_loss\nloss_averages_op = loss_averages.apply(losses + [total_loss])\nFile \"/data/github/tensorflow/_python_build/tensorflow/python/training/moving_averages.py\", line 391, in apply\nself._averages[var], var, decay, zero_debias=zero_debias))\nFile \"/data/github/tensorflow/_python_build/tensorflow/python/training/moving_averages.py\", line 70, in assign_moving_average\nupdate_delta = _zero_debias(variable, value, decay)\nFile \"/data/github/tensorflow/_python_build/tensorflow/python/training/moving_averages.py\", line 177, in _zero_debias\ntrainable=False)\nFile \"/data/github/tensorflow/_python_build/tensorflow/python/ops/variable_scope.py\", line 1024, in get_variable\ncustom_getter=custom_getter)\nFile \"/data/github/tensorflow/_python_build/tensorflow/python/ops/variable_scope.py\", line 850, in get_variable\ncustom_getter=custom_getter)\nFile \"/data/github/tensorflow/_python_build/tensorflow/python/ops/variable_scope.py\", line 346, in get_variable\nvalidate_shape=validate_shape)\nFile \"/data/github/tensorflow/_python_build/tensorflow/python/ops/variable_scope.py\", line 331, in _true_getter\ncaching_device=caching_device, validate_shape=validate_shape)\nFile \"/data/github/tensorflow/_python_build/tensorflow/python/ops/variable_scope.py\", line 650, in _get_single_variable\n\"VarScope?\" % name)\nValueError: Variable tower_1/tower_1/conv1/weight_loss/avg/biased does not exist, or was not created with tf.get_variable(). Did you mean to set reuse=None in VarScope?", "body": "### Environment info\r\nOperating System: Ubuntu \r\n\r\nInstalled version of CUDA and cuDNN: 8.0 and 5\r\n\r\n1. The commit hash (`git rev-parse HEAD`): 3d41cf77d624aeee0482f92121a9300b29db2809\r\n2. The output of `bazel version`: \r\nBuild label: 0.3.2\r\nBuild target: bazel-out/local-fastbuild/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar\r\nBuild time: Fri Oct 7 17:25:10 2016 (1475861110)\r\nBuild timestamp: 1475861110\r\nBuild timestamp as int: 1475861110\r\n\r\n### If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\r\n\r\npython cifar10_multi_gpu_train.py --num_gpus=2\r\n\r\nBoth cifar10_train.py and cifar10_multi_gpu_train.py (without specifying num_gpus, so running on a single GPU) work.\r\n\r\n### Logs or other output that would be helpful\r\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally\r\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so locally\r\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally\r\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally\r\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally\r\nFilling queue with 20000 CIFAR images before starting to train. This will take a few minutes.\r\nFilling queue with 20000 CIFAR images before starting to train. This will take a few minutes.\r\nTraceback (most recent call last):\r\n  File \"cifar10_multi_gpu_train.py\", line 280, in <module>\r\n    tf.app.run()\r\n  File \"/data/github/tensorflow/_python_build/tensorflow/python/platform/app.py\", line 43, in run\r\n    sys.exit(main(sys.argv[:1] + flags_passthrough))\r\n  File \"cifar10_multi_gpu_train.py\", line 276, in main\r\n    train()\r\n  File \"cifar10_multi_gpu_train.py\", line 180, in train\r\n    loss = tower_loss(scope)\r\n  File \"cifar10_multi_gpu_train.py\", line 92, in tower_loss\r\n    loss_averages_op = loss_averages.apply(losses + [total_loss])\r\n  File \"/data/github/tensorflow/_python_build/tensorflow/python/training/moving_averages.py\", line 391, in apply\r\n    self._averages[var], var, decay, zero_debias=zero_debias))\r\n  File \"/data/github/tensorflow/_python_build/tensorflow/python/training/moving_averages.py\", line 70, in assign_moving_average\r\n    update_delta = _zero_debias(variable, value, decay)\r\n  File \"/data/github/tensorflow/_python_build/tensorflow/python/training/moving_averages.py\", line 177, in _zero_debias\r\n    trainable=False)\r\n  File \"/data/github/tensorflow/_python_build/tensorflow/python/ops/variable_scope.py\", line 1024, in get_variable\r\n    custom_getter=custom_getter)\r\n  File \"/data/github/tensorflow/_python_build/tensorflow/python/ops/variable_scope.py\", line 850, in get_variable\r\n    custom_getter=custom_getter)\r\n  File \"/data/github/tensorflow/_python_build/tensorflow/python/ops/variable_scope.py\", line 346, in get_variable\r\n    validate_shape=validate_shape)\r\n  File \"/data/github/tensorflow/_python_build/tensorflow/python/ops/variable_scope.py\", line 331, in _true_getter\r\n    caching_device=caching_device, validate_shape=validate_shape)\r\n  File \"/data/github/tensorflow/_python_build/tensorflow/python/ops/variable_scope.py\", line 650, in _get_single_variable\r\n    \"VarScope?\" % name)\r\nValueError: Variable tower_1/tower_1/conv1/weight_loss/avg/biased does not exist, or was not created with tf.get_variable(). Did you mean to set reuse=None in VarScope?"}