{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/170040584", "pull_request_review_id": 98633557, "id": 170040584, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDA0MDU4NA==", "diff_hunk": "@@ -1955,6 +2075,152 @@ inline void Sub(const float* input1_data, const Dims<4>& input1_dims,\n     }\n   }\n }\n+\n+// TODO(jiawen): We can implement BroadcastSub on buffers of arbitrary\n+// dimensionality if the runtime code does a single loop over one dimension\n+// that handles broadcasting as the base case. The code generator would then\n+// generate max(D1, D2) nested for loops.\n+// TODO(benoitjacob): BroadcastSub is intentionally duplicated from\n+// reference_ops.h. Once an optimized version is implemented and NdArrayDesc<T>\n+// is no longer referenced in this file, move NdArrayDesc<T> from types.h to\n+// reference_ops.h.\n+template <typename T>\n+void BroadcastSub(const T* input1_data, const Dims<4>& input1_dims,\n+                  const T* input2_data, const Dims<4>& input2_dims,\n+                  T output_activation_min, T output_activation_max,\n+                  T* output_data, const Dims<4>& output_dims) {\n+  gemmlowp::ScopedProfilingLabel label(\"BroadcastSub\");\n+\n+  NdArrayDesc<4> desc1;\n+  NdArrayDesc<4> desc2;\n+  NdArrayDescsForElementwiseBroadcast(input1_dims, input2_dims, &desc1, &desc2);\n+\n+  // In Tensorflow, the dimensions are canonically named (batch_number, row,\n+  // col, channel), with extents (batches, height, width, depth), with the\n+  // trailing dimension changing most rapidly (channels has the smallest stride,\n+  // typically 1 element).\n+  //\n+  // In generated C code, we store arrays with the dimensions reversed. The\n+  // first dimension has smallest stride.\n+  //\n+  // We name our variables by their Tensorflow convention, but generate C code\n+  // nesting loops such that the innermost loop has the smallest stride for the\n+  // best cache behavior.\n+  for (int b = 0; b < ArraySize(output_dims, 3); ++b) {\n+    for (int y = 0; y < ArraySize(output_dims, 2); ++y) {\n+      for (int x = 0; x < ArraySize(output_dims, 1); ++x) {\n+        for (int c = 0; c < ArraySize(output_dims, 0); ++c) {\n+          output_data[Offset(output_dims, c, x, y, b)] =\n+              ActivationFunctionWithMinMax(\n+                  input1_data[SubscriptToIndex(desc1, c, x, y, b)] -\n+                      input2_data[SubscriptToIndex(desc2, c, x, y, b)],\n+                  output_activation_min, output_activation_max);\n+        }\n+      }\n+    }\n+  }\n+}\n+\n+// legacy, for compatibility with old checked-in code", "path": "tensorflow/contrib/lite/kernels/internal/optimized/optimized_ops.h", "position": null, "original_position": 177, "commit_id": "09ab7fc83e3b2b66a2d1ff68ac6ad1b56a61fcd6", "original_commit_id": "672ec270f96144bca5e1d75d002421c1e9b49921", "user": {"login": "andrehentz", "id": 25754898, "node_id": "MDQ6VXNlcjI1NzU0ODk4", "avatar_url": "https://avatars3.githubusercontent.com/u/25754898?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrehentz", "html_url": "https://github.com/andrehentz", "followers_url": "https://api.github.com/users/andrehentz/followers", "following_url": "https://api.github.com/users/andrehentz/following{/other_user}", "gists_url": "https://api.github.com/users/andrehentz/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrehentz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrehentz/subscriptions", "organizations_url": "https://api.github.com/users/andrehentz/orgs", "repos_url": "https://api.github.com/users/andrehentz/repos", "events_url": "https://api.github.com/users/andrehentz/events{/privacy}", "received_events_url": "https://api.github.com/users/andrehentz/received_events", "type": "User", "site_admin": false}, "body": "same here for legacy (there are more of those in the other file)", "created_at": "2018-02-22T17:50:54Z", "updated_at": "2018-04-12T06:55:13Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/17123#discussion_r170040584", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/17123", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/170040584"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/17123#discussion_r170040584"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/17123"}}, "body_html": "<p>same here for legacy (there are more of those in the other file)</p>", "body_text": "same here for legacy (there are more of those in the other file)"}