{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/424437956", "html_url": "https://github.com/tensorflow/tensorflow/issues/19903#issuecomment-424437956", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19903", "id": 424437956, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDQzNzk1Ng==", "user": {"login": "jonasrauber", "id": 5837385, "node_id": "MDQ6VXNlcjU4MzczODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/5837385?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonasrauber", "html_url": "https://github.com/jonasrauber", "followers_url": "https://api.github.com/users/jonasrauber/followers", "following_url": "https://api.github.com/users/jonasrauber/following{/other_user}", "gists_url": "https://api.github.com/users/jonasrauber/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonasrauber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonasrauber/subscriptions", "organizations_url": "https://api.github.com/users/jonasrauber/orgs", "repos_url": "https://api.github.com/users/jonasrauber/repos", "events_url": "https://api.github.com/users/jonasrauber/events{/privacy}", "received_events_url": "https://api.github.com/users/jonasrauber/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-25T17:47:41Z", "updated_at": "2018-09-25T17:47:41Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=35045937\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/eddie-zhou\">@eddie-zhou</a> In principle I agree with the approach of <em>forcing explicit decisions</em> (though I guess most ML researchers prefer more practical defaults like <em>restoring everything</em>). But in the case here, TensorFlow is not actually forcing an explicit decision, it's defaulting to a non-intuitive behavior (restoring layer-params, but not batch-norm params) that can cause silent bugs that may go unnoticed for a while (in fact, I have seen this happening to several people in our group). In practice, people will not notice that they haven't restored the batch norm params and assume they did.</p>", "body_text": "@eddie-zhou In principle I agree with the approach of forcing explicit decisions (though I guess most ML researchers prefer more practical defaults like restoring everything). But in the case here, TensorFlow is not actually forcing an explicit decision, it's defaulting to a non-intuitive behavior (restoring layer-params, but not batch-norm params) that can cause silent bugs that may go unnoticed for a while (in fact, I have seen this happening to several people in our group). In practice, people will not notice that they haven't restored the batch norm params and assume they did.", "body": "@eddie-zhou In principle I agree with the approach of _forcing explicit decisions_ (though I guess most ML researchers prefer more practical defaults like _restoring everything_). But in the case here, TensorFlow is not actually forcing an explicit decision, it's defaulting to a non-intuitive behavior (restoring layer-params, but not batch-norm params) that can cause silent bugs that may go unnoticed for a while (in fact, I have seen this happening to several people in our group). In practice, people will not notice that they haven't restored the batch norm params and assume they did."}