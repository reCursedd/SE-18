{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/242262566", "html_url": "https://github.com/tensorflow/tensorflow/issues/1888#issuecomment-242262566", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1888", "id": 242262566, "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjI2MjU2Ng==", "user": {"login": "vrv", "id": 463737, "node_id": "MDQ6VXNlcjQ2MzczNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/463737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vrv", "html_url": "https://github.com/vrv", "followers_url": "https://api.github.com/users/vrv/followers", "following_url": "https://api.github.com/users/vrv/following{/other_user}", "gists_url": "https://api.github.com/users/vrv/gists{/gist_id}", "starred_url": "https://api.github.com/users/vrv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vrv/subscriptions", "organizations_url": "https://api.github.com/users/vrv/orgs", "repos_url": "https://api.github.com/users/vrv/repos", "events_url": "https://api.github.com/users/vrv/events{/privacy}", "received_events_url": "https://api.github.com/users/vrv/received_events", "type": "User", "site_admin": false}, "created_at": "2016-08-25T02:10:06Z", "updated_at": "2016-08-25T02:10:06Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1865411\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/gibiansky\">@gibiansky</a>, independently for another reason I essentially implemented option 2 in your first post earlier this week.  I haven't submitted it yet, but maybe it might work for you.  Concretely, what I did was:</p>\n<p>GPUOptions has a field called 'visible_gpu_devices', which is a comma-separated string.  It maps from \"visible\" devices to \"logical\" devices.  As an example, let's say the TensorFlow process has 8 GPUs visible to it.  One could pass visible_gpu_devices=\"5,3\", and it would map visible device 5 as \"/gpu:0\" and visible device 3 as \"/gpu:1\", and it would leave all other devices untouched / uninitialized.</p>\n<p>So it's basically like CUDA_VISIBLE_DEVICES, except CUDA_VISIBLE_DEVICES acts prior to the process starting, and controls what I would call 'physical GPUs' (e.g., what the driver reports) to \"visible GPUs\", which is the order that the process sees it, and this new option would allow one to remap from \"visible\" to \"logical\", with the default empty string meaning that the \"visible\" to \"logical\" map is one to one.</p>\n<p>Let me know if you think this satisfies this feature request and I can try to send it for review.</p>", "body_text": "@gibiansky, independently for another reason I essentially implemented option 2 in your first post earlier this week.  I haven't submitted it yet, but maybe it might work for you.  Concretely, what I did was:\nGPUOptions has a field called 'visible_gpu_devices', which is a comma-separated string.  It maps from \"visible\" devices to \"logical\" devices.  As an example, let's say the TensorFlow process has 8 GPUs visible to it.  One could pass visible_gpu_devices=\"5,3\", and it would map visible device 5 as \"/gpu:0\" and visible device 3 as \"/gpu:1\", and it would leave all other devices untouched / uninitialized.\nSo it's basically like CUDA_VISIBLE_DEVICES, except CUDA_VISIBLE_DEVICES acts prior to the process starting, and controls what I would call 'physical GPUs' (e.g., what the driver reports) to \"visible GPUs\", which is the order that the process sees it, and this new option would allow one to remap from \"visible\" to \"logical\", with the default empty string meaning that the \"visible\" to \"logical\" map is one to one.\nLet me know if you think this satisfies this feature request and I can try to send it for review.", "body": "@gibiansky, independently for another reason I essentially implemented option 2 in your first post earlier this week.  I haven't submitted it yet, but maybe it might work for you.  Concretely, what I did was:\n\nGPUOptions has a field called 'visible_gpu_devices', which is a comma-separated string.  It maps from \"visible\" devices to \"logical\" devices.  As an example, let's say the TensorFlow process has 8 GPUs visible to it.  One could pass visible_gpu_devices=\"5,3\", and it would map visible device 5 as \"/gpu:0\" and visible device 3 as \"/gpu:1\", and it would leave all other devices untouched / uninitialized.\n\nSo it's basically like CUDA_VISIBLE_DEVICES, except CUDA_VISIBLE_DEVICES acts prior to the process starting, and controls what I would call 'physical GPUs' (e.g., what the driver reports) to \"visible GPUs\", which is the order that the process sees it, and this new option would allow one to remap from \"visible\" to \"logical\", with the default empty string meaning that the \"visible\" to \"logical\" map is one to one.\n\nLet me know if you think this satisfies this feature request and I can try to send it for review.\n"}