{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/255186436", "html_url": "https://github.com/tensorflow/tensorflow/issues/4614#issuecomment-255186436", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4614", "id": 255186436, "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTE4NjQzNg==", "user": {"login": "aselle", "id": 326106, "node_id": "MDQ6VXNlcjMyNjEwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/326106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aselle", "html_url": "https://github.com/aselle", "followers_url": "https://api.github.com/users/aselle/followers", "following_url": "https://api.github.com/users/aselle/following{/other_user}", "gists_url": "https://api.github.com/users/aselle/gists{/gist_id}", "starred_url": "https://api.github.com/users/aselle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aselle/subscriptions", "organizations_url": "https://api.github.com/users/aselle/orgs", "repos_url": "https://api.github.com/users/aselle/repos", "events_url": "https://api.github.com/users/aselle/events{/privacy}", "received_events_url": "https://api.github.com/users/aselle/received_events", "type": "User", "site_admin": false}, "created_at": "2016-10-20T18:19:48Z", "updated_at": "2016-10-20T18:19:48Z", "author_association": "MEMBER", "body_html": "<p>You can definitely get the equivalent functionality using unique_with_counts()... in more detail...</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\ns<span class=\"pl-k\">=</span>tf.Session()\nx <span class=\"pl-k\">=</span> np.array([<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">7</span>, <span class=\"pl-c1\">8</span>, <span class=\"pl-c1\">8</span>])\n<span class=\"pl-c1\">print</span>(s.run(tf.cumsum(tf.pad(tf.unique_with_counts(x)[<span class=\"pl-c1\">2</span>],[[<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">0</span>]]))[:<span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>]))\n<span class=\"pl-c1\">print</span>(np.unique(x, <span class=\"pl-v\">return_index</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>)[<span class=\"pl-c1\">1</span>])</pre></div>\n<p>yields the output</p>\n<pre><code>[0 2 3 6 7]\n[0 2 3 6 7]\n</code></pre>", "body_text": "You can definitely get the equivalent functionality using unique_with_counts()... in more detail...\nimport tensorflow as tf\ns=tf.Session()\nx = np.array([1, 1, 2, 4, 4, 4, 7, 8, 8])\nprint(s.run(tf.cumsum(tf.pad(tf.unique_with_counts(x)[2],[[1,0]]))[:-1]))\nprint(np.unique(x, return_index=1)[1])\nyields the output\n[0 2 3 6 7]\n[0 2 3 6 7]", "body": "You can definitely get the equivalent functionality using unique_with_counts()... in more detail...\n\n``` python\nimport tensorflow as tf\ns=tf.Session()\nx = np.array([1, 1, 2, 4, 4, 4, 7, 8, 8])\nprint(s.run(tf.cumsum(tf.pad(tf.unique_with_counts(x)[2],[[1,0]]))[:-1]))\nprint(np.unique(x, return_index=1)[1])\n```\n\nyields the output\n\n```\n[0 2 3 6 7]\n[0 2 3 6 7]\n```\n"}