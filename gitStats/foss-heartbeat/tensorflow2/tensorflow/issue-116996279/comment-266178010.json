{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/266178010", "html_url": "https://github.com/tensorflow/tensorflow/issues/232#issuecomment-266178010", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/232", "id": 266178010, "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjE3ODAxMA==", "user": {"login": "vedhas", "id": 6374703, "node_id": "MDQ6VXNlcjYzNzQ3MDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/6374703?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vedhas", "html_url": "https://github.com/vedhas", "followers_url": "https://api.github.com/users/vedhas/followers", "following_url": "https://api.github.com/users/vedhas/following{/other_user}", "gists_url": "https://api.github.com/users/vedhas/gists{/gist_id}", "starred_url": "https://api.github.com/users/vedhas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vedhas/subscriptions", "organizations_url": "https://api.github.com/users/vedhas/orgs", "repos_url": "https://api.github.com/users/vedhas/repos", "events_url": "https://api.github.com/users/vedhas/events{/privacy}", "received_events_url": "https://api.github.com/users/vedhas/received_events", "type": "User", "site_admin": false}, "created_at": "2016-12-10T04:22:24Z", "updated_at": "2016-12-10T04:23:10Z", "author_association": "NONE", "body_html": "<p>I see typo in the post above, 'sessi' instead of 'sess'.</p>\n<p>I have run into same issue though, And here's my code:</p>\n<p>num_neurons = 200<br>\nnum_layers = 3<br>\ndropout = tf.placeholder(tf.float32)</p>\n<p>cell = rnn_cell.GRUCell(num_neurons)  # Or LSTMCell(num_neurons)<br>\ncell = rnn_cell.DropoutWrapper(cell, output_keep_prob=dropout)<br>\ncell = rnn_cell.MultiRNNCell([cell] * num_layers)</p>\n<p>#Simulating Time Steps<br>\nmax_length = Sz_Max_GST #Sz_Max_LLD<br>\n#Batch size x time steps x features.<br>\ndata = tf.placeholder(tf.float32, [None, max_length, Num_F_L])<br>\ntarget = tf.placeholder(tf.float32, [None, max_length, Num_G_L])<br>\noutput, state = tf.nn.dynamic_rnn(cell, data, dtype=tf.float32,sequence_length=mylength(data))<br>\nyLogits=tf.contrib.layers.linear(output,1)</p>\n<p>prediction=yLogits<br>\ncross_entropy = -tf.reduce_sum(target * tf.log(prediction))</p>\n<p>train_step=tf.train.AdamOptimizer(1e-3).minimize(cross_entropy)<br>\nsess=tf.Session()<br>\nsess.run(init)</p>", "body_text": "I see typo in the post above, 'sessi' instead of 'sess'.\nI have run into same issue though, And here's my code:\nnum_neurons = 200\nnum_layers = 3\ndropout = tf.placeholder(tf.float32)\ncell = rnn_cell.GRUCell(num_neurons)  # Or LSTMCell(num_neurons)\ncell = rnn_cell.DropoutWrapper(cell, output_keep_prob=dropout)\ncell = rnn_cell.MultiRNNCell([cell] * num_layers)\n#Simulating Time Steps\nmax_length = Sz_Max_GST #Sz_Max_LLD\n#Batch size x time steps x features.\ndata = tf.placeholder(tf.float32, [None, max_length, Num_F_L])\ntarget = tf.placeholder(tf.float32, [None, max_length, Num_G_L])\noutput, state = tf.nn.dynamic_rnn(cell, data, dtype=tf.float32,sequence_length=mylength(data))\nyLogits=tf.contrib.layers.linear(output,1)\nprediction=yLogits\ncross_entropy = -tf.reduce_sum(target * tf.log(prediction))\ntrain_step=tf.train.AdamOptimizer(1e-3).minimize(cross_entropy)\nsess=tf.Session()\nsess.run(init)", "body": "I see typo in the post above, 'sessi' instead of 'sess'. \r\n\r\nI have run into same issue though, And here's my code:\r\n\r\nnum_neurons = 200\r\nnum_layers = 3\r\ndropout = tf.placeholder(tf.float32)\r\n\r\ncell = rnn_cell.GRUCell(num_neurons)  # Or LSTMCell(num_neurons)\r\ncell = rnn_cell.DropoutWrapper(cell, output_keep_prob=dropout)\r\ncell = rnn_cell.MultiRNNCell([cell] * num_layers)\r\n\r\n#Simulating Time Steps\r\nmax_length = Sz_Max_GST #Sz_Max_LLD\r\n#Batch size x time steps x features.\r\ndata = tf.placeholder(tf.float32, [None, max_length, Num_F_L])\r\ntarget = tf.placeholder(tf.float32, [None, max_length, Num_G_L])\r\noutput, state = tf.nn.dynamic_rnn(cell, data, dtype=tf.float32,sequence_length=mylength(data))\r\nyLogits=tf.contrib.layers.linear(output,1)\r\n\r\nprediction=yLogits\r\ncross_entropy = -tf.reduce_sum(target * tf.log(prediction))\r\n\r\ntrain_step=tf.train.AdamOptimizer(1e-3).minimize(cross_entropy)\r\nsess=tf.Session()\r\nsess.run(init)"}