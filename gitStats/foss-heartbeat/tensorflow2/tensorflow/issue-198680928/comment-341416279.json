{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/341416279", "html_url": "https://github.com/tensorflow/tensorflow/issues/6633#issuecomment-341416279", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6633", "id": 341416279, "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTQxNjI3OQ==", "user": {"login": "alquraishi", "id": 5205204, "node_id": "MDQ6VXNlcjUyMDUyMDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/5205204?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alquraishi", "html_url": "https://github.com/alquraishi", "followers_url": "https://api.github.com/users/alquraishi/followers", "following_url": "https://api.github.com/users/alquraishi/following{/other_user}", "gists_url": "https://api.github.com/users/alquraishi/gists{/gist_id}", "starred_url": "https://api.github.com/users/alquraishi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alquraishi/subscriptions", "organizations_url": "https://api.github.com/users/alquraishi/orgs", "repos_url": "https://api.github.com/users/alquraishi/repos", "events_url": "https://api.github.com/users/alquraishi/events{/privacy}", "received_events_url": "https://api.github.com/users/alquraishi/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-02T13:11:59Z", "updated_at": "2017-11-02T13:11:59Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5117188\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/protoget\">@protoget</a> it appears that Keras does support this however, according to this <a href=\"https://groups.google.com/a/tensorflow.org/forum/#!searchin/discuss/alquraishi/discuss/Q4egUFzG_3I/IZ5NMQIxAQAJ\" rel=\"nofollow\">post</a>?</p>\n<p>Irrespective of the padding issue, if the input tensor changes in size (say due to bucketing so that from batch to batch the size of the input tensor is different), would the ops and layers defined in <code>cudnn_rnn.py</code> function correctly or not? I understand that they don't currently account for different sequence lengths within a batch, but are they at least able to deal with dynamically sized input tensors?</p>", "body_text": "@protoget it appears that Keras does support this however, according to this post?\nIrrespective of the padding issue, if the input tensor changes in size (say due to bucketing so that from batch to batch the size of the input tensor is different), would the ops and layers defined in cudnn_rnn.py function correctly or not? I understand that they don't currently account for different sequence lengths within a batch, but are they at least able to deal with dynamically sized input tensors?", "body": "@protoget it appears that Keras does support this however, according to this [post](https://groups.google.com/a/tensorflow.org/forum/#!searchin/discuss/alquraishi/discuss/Q4egUFzG_3I/IZ5NMQIxAQAJ)?\r\n\r\nIrrespective of the padding issue, if the input tensor changes in size (say due to bucketing so that from batch to batch the size of the input tensor is different), would the ops and layers defined in `cudnn_rnn.py` function correctly or not? I understand that they don't currently account for different sequence lengths within a batch, but are they at least able to deal with dynamically sized input tensors?"}