{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2196", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2196/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2196/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2196/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/2196", "id": 152630967, "node_id": "MDU6SXNzdWUxNTI2MzA5Njc=", "number": 2196, "title": "Tensorflow GRU cell error when fetching activations with variable sequence length", "user": {"login": "ushnish", "id": 3603839, "node_id": "MDQ6VXNlcjM2MDM4Mzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/3603839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ushnish", "html_url": "https://github.com/ushnish", "followers_url": "https://api.github.com/users/ushnish/followers", "following_url": "https://api.github.com/users/ushnish/following{/other_user}", "gists_url": "https://api.github.com/users/ushnish/gists{/gist_id}", "starred_url": "https://api.github.com/users/ushnish/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ushnish/subscriptions", "organizations_url": "https://api.github.com/users/ushnish/orgs", "repos_url": "https://api.github.com/users/ushnish/repos", "events_url": "https://api.github.com/users/ushnish/events{/privacy}", "received_events_url": "https://api.github.com/users/ushnish/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2016-05-02T19:56:57Z", "updated_at": "2016-05-16T16:21:47Z", "closed_at": "2016-05-16T16:21:47Z", "author_association": "NONE", "body_html": "<p>I want to run a GRU cell on some time series data to cluster them according to the activations in the last layer. I made one small change to the GRU cell implementation</p>\n<p>`def <strong>call</strong>(self, inputs, state, scope=None):<br>\n\"\"\"Gated recurrent unit (GRU) with nunits cells.\"\"\"<br>\nwith vs.variable_scope(scope or type(self).<strong>name</strong>):  # \"GRUCell\"<br>\nwith vs.variable_scope(\"Gates\"):  # Reset gate and update gate.<br>\n# We start with bias of 1.0 to not reset and not update.<br>\nr, u = array_ops.split(1, 2, linear([inputs, state], 2 * self._num_units, True, 1.0))<br>\nr, u = sigmoid(r), sigmoid(u)<br>\nwith vs.variable_scope(\"Candidate\"):<br>\nc = tanh(linear([inputs, r * state], self._num_units, True))<br>\nnew_h = u * state + (1 - u) * c</p>\n<h1>store the activations, everything else is the same</h1>\n<p>self.activations = [r,u,c]<br>\nreturn new_h, new_h`</p>\n<p>After this I concatenate the activations in the following manner before I return them in the script which calls this GRU cell</p>\n<p>`<a class=\"user-mention\" data-hovercard-type=\"organization\" data-hovercard-url=\"/orgs/Property/hovercard\" href=\"https://github.com/Property\">@Property</a><br>\ndef activations(self):<br>\nreturn self._activations</p>\n<p>@activations.setter<br>\ndef activations(self, activations_array):<br>\nprint \"PRINT THIS\"<br>\nconcactivations = tf.concat(concat_dim=0, values=activations_array, name='concat_activations')<br>\nself._activations = tf.reshape(tensor=concactivations, shape=[-1], name='flatten_activations')<br>\n`</p>\n<p>I invoke the GRU cell in the following manner</p>\n<p><code>outputs, state = rnn.rnn(cell=cell, inputs=x, initial_state=initial_state, sequence_length=s)</code></p>\n<p>Where <code>s</code> is an array of batch length with the number of timestamps in each element of the input batch.</p>\n<p>And finally I fetch using</p>\n<p><code>fetched = sess.run(fetches=cell.activations, feed_dict=feed_dict)</code></p>\n<p>When executing I get the following error</p>\n<p>Traceback (most recent call last): File \"xxx.py\", line 162, in fetched = sess.run(fetches=cell.activations, feed_dict=feed_dict) File \"/xxx/local/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 315, in run return self._run(None, fetches, feed_dict) File \"/xxx/local/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 511, in _run feed_dict_string) File \"/xxx/local/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 564, in _do_run target_list) File \"/xxx/local/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 588, in _do_call six.reraise(e_type, e_value, e_traceback) File \"/xxx/local/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 571, in _do_call return fn(*args) File \"/xxx/local/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 555, in _run_fn</p>\n<p>return tf_session.TF_Run(session, feed_dict, fetch_list, target_list) tensorflow.python.pywrap_tensorflow.StatusNotOK: Invalid argument: The tensor returned for RNN/cond_396/ClusterableGRUCell/flatten_activations:0 was not valid.</p>\n<p>Can someone give an insight as to how to fetch the activations from a GRU cell at the last step, with passing variable length sequences? Thanks.</p>", "body_text": "I want to run a GRU cell on some time series data to cluster them according to the activations in the last layer. I made one small change to the GRU cell implementation\n`def call(self, inputs, state, scope=None):\n\"\"\"Gated recurrent unit (GRU) with nunits cells.\"\"\"\nwith vs.variable_scope(scope or type(self).name):  # \"GRUCell\"\nwith vs.variable_scope(\"Gates\"):  # Reset gate and update gate.\n# We start with bias of 1.0 to not reset and not update.\nr, u = array_ops.split(1, 2, linear([inputs, state], 2 * self._num_units, True, 1.0))\nr, u = sigmoid(r), sigmoid(u)\nwith vs.variable_scope(\"Candidate\"):\nc = tanh(linear([inputs, r * state], self._num_units, True))\nnew_h = u * state + (1 - u) * c\nstore the activations, everything else is the same\nself.activations = [r,u,c]\nreturn new_h, new_h`\nAfter this I concatenate the activations in the following manner before I return them in the script which calls this GRU cell\n`@Property\ndef activations(self):\nreturn self._activations\n@activations.setter\ndef activations(self, activations_array):\nprint \"PRINT THIS\"\nconcactivations = tf.concat(concat_dim=0, values=activations_array, name='concat_activations')\nself._activations = tf.reshape(tensor=concactivations, shape=[-1], name='flatten_activations')\n`\nI invoke the GRU cell in the following manner\noutputs, state = rnn.rnn(cell=cell, inputs=x, initial_state=initial_state, sequence_length=s)\nWhere s is an array of batch length with the number of timestamps in each element of the input batch.\nAnd finally I fetch using\nfetched = sess.run(fetches=cell.activations, feed_dict=feed_dict)\nWhen executing I get the following error\nTraceback (most recent call last): File \"xxx.py\", line 162, in fetched = sess.run(fetches=cell.activations, feed_dict=feed_dict) File \"/xxx/local/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 315, in run return self._run(None, fetches, feed_dict) File \"/xxx/local/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 511, in _run feed_dict_string) File \"/xxx/local/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 564, in _do_run target_list) File \"/xxx/local/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 588, in _do_call six.reraise(e_type, e_value, e_traceback) File \"/xxx/local/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 571, in _do_call return fn(*args) File \"/xxx/local/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 555, in _run_fn\nreturn tf_session.TF_Run(session, feed_dict, fetch_list, target_list) tensorflow.python.pywrap_tensorflow.StatusNotOK: Invalid argument: The tensor returned for RNN/cond_396/ClusterableGRUCell/flatten_activations:0 was not valid.\nCan someone give an insight as to how to fetch the activations from a GRU cell at the last step, with passing variable length sequences? Thanks.", "body": "I want to run a GRU cell on some time series data to cluster them according to the activations in the last layer. I made one small change to the GRU cell implementation\n\n`def **call**(self, inputs, state, scope=None):\n\"\"\"Gated recurrent unit (GRU) with nunits cells.\"\"\"\nwith vs.variable_scope(scope or type(self).**name**):  # \"GRUCell\"\n  with vs.variable_scope(\"Gates\"):  # Reset gate and update gate.\n    # We start with bias of 1.0 to not reset and not update.\n    r, u = array_ops.split(1, 2, linear([inputs, state], 2 \\* self._num_units, True, 1.0))\n    r, u = sigmoid(r), sigmoid(u)\n  with vs.variable_scope(\"Candidate\"):\n    c = tanh(linear([inputs, r \\* state], self._num_units, True))\n  new_h = u \\* state + (1 - u) \\* c\n\n  # store the activations, everything else is the same\n  self.activations = [r,u,c]\nreturn new_h, new_h`\n\nAfter this I concatenate the activations in the following manner before I return them in the script which calls this GRU cell\n\n`@property\ndef activations(self):\n    return self._activations\n\n@activations.setter\ndef activations(self, activations_array):\n    print \"PRINT THIS\"  \n    concactivations = tf.concat(concat_dim=0, values=activations_array, name='concat_activations')\n    self._activations = tf.reshape(tensor=concactivations, shape=[-1], name='flatten_activations')\n `\n\nI invoke the GRU cell in the following manner\n\n`outputs, state = rnn.rnn(cell=cell, inputs=x, initial_state=initial_state, sequence_length=s)`\n\nWhere `s` is an array of batch length with the number of timestamps in each element of the input batch.\n\nAnd finally I fetch using\n\n`fetched = sess.run(fetches=cell.activations, feed_dict=feed_dict)`\n\nWhen executing I get the following error\n\nTraceback (most recent call last): File \"xxx.py\", line 162, in fetched = sess.run(fetches=cell.activations, feed_dict=feed_dict) File \"/xxx/local/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 315, in run return self._run(None, fetches, feed_dict) File \"/xxx/local/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 511, in _run feed_dict_string) File \"/xxx/local/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 564, in _do_run target_list) File \"/xxx/local/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 588, in _do_call six.reraise(e_type, e_value, e_traceback) File \"/xxx/local/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 571, in _do_call return fn(*args) File \"/xxx/local/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 555, in _run_fn\n\nreturn tf_session.TF_Run(session, feed_dict, fetch_list, target_list) tensorflow.python.pywrap_tensorflow.StatusNotOK: Invalid argument: The tensor returned for RNN/cond_396/ClusterableGRUCell/flatten_activations:0 was not valid.\n\nCan someone give an insight as to how to fetch the activations from a GRU cell at the last step, with passing variable length sequences? Thanks.\n"}