{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/414645802", "html_url": "https://github.com/tensorflow/tensorflow/issues/8220#issuecomment-414645802", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8220", "id": 414645802, "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDY0NTgwMg==", "user": {"login": "fengyuan777", "id": 35099096, "node_id": "MDQ6VXNlcjM1MDk5MDk2", "avatar_url": "https://avatars2.githubusercontent.com/u/35099096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fengyuan777", "html_url": "https://github.com/fengyuan777", "followers_url": "https://api.github.com/users/fengyuan777/followers", "following_url": "https://api.github.com/users/fengyuan777/following{/other_user}", "gists_url": "https://api.github.com/users/fengyuan777/gists{/gist_id}", "starred_url": "https://api.github.com/users/fengyuan777/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fengyuan777/subscriptions", "organizations_url": "https://api.github.com/users/fengyuan777/orgs", "repos_url": "https://api.github.com/users/fengyuan777/repos", "events_url": "https://api.github.com/users/fengyuan777/events{/privacy}", "received_events_url": "https://api.github.com/users/fengyuan777/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-21T11:44:25Z", "updated_at": "2018-08-21T11:51:45Z", "author_association": "NONE", "body_html": "<blockquote>\n<p>import numpy as np<br>\nimport tensorflow as tf<br>\nfrom multiprocessing import Process, Pool<br>\nimport os<br>\nimport time</p>\n</blockquote>\n<blockquote>\n<p>def run_proc(name, session):</p>\n</blockquote>\n<ul>\n<li>import tensorflow as tf</li>\n<li>\n<pre><code>    process_session = session\n</code></pre>\n</li>\n<li>\n<pre><code>    process_input = process_session.graph.get_tensor_by_name('input:0')\n</code></pre>\n</li>\n<li>\n<pre><code>    process_output = process_session.graph.get_tensor_by_name('output:0')\n</code></pre>\n</li>\n<li>\n<pre><code>    res = process_session.run(process_input, feed_dict={process_output: np.ones((10, 2))})\n</code></pre>\n</li>\n<li></li>\n</ul>\n<blockquote>\n<p>if <strong>name</strong> == '<strong>main</strong>':<br>\nimport tensorflow as tf<br>\nsession = tf.Session()<br>\nwith session.as_default():<br>\ninput = tf.placeholder(dtype=tf.float32, shape=[None, 2], name='input')<br>\ntmp = tf.ones(shape=[10, 2])<br>\nadd_output = tf.add(x=input, y=tmp, name='output')<br>\nprint('Parent process %s.' % os.getpid())<br>\np = Process(<br>\ntarget=run_proc,<br>\nargs=('test', session))<br>\nprint('Process will start.')<br>\np.start()<br>\np.join()<br>\nprint('Process end.')<br>\nit stucks when new process  start to run(<code>, feed_dict={</code>})</p>\n</blockquote>", "body_text": "import numpy as np\nimport tensorflow as tf\nfrom multiprocessing import Process, Pool\nimport os\nimport time\n\n\ndef run_proc(name, session):\n\n\nimport tensorflow as tf\n\n    process_session = session\n\n\n\n    process_input = process_session.graph.get_tensor_by_name('input:0')\n\n\n\n    process_output = process_session.graph.get_tensor_by_name('output:0')\n\n\n\n    res = process_session.run(process_input, feed_dict={process_output: np.ones((10, 2))})\n\n\n\n\n\nif name == 'main':\nimport tensorflow as tf\nsession = tf.Session()\nwith session.as_default():\ninput = tf.placeholder(dtype=tf.float32, shape=[None, 2], name='input')\ntmp = tf.ones(shape=[10, 2])\nadd_output = tf.add(x=input, y=tmp, name='output')\nprint('Parent process %s.' % os.getpid())\np = Process(\ntarget=run_proc,\nargs=('test', session))\nprint('Process will start.')\np.start()\np.join()\nprint('Process end.')\nit stucks when new process  start to run(, feed_dict={})", "body": "> import numpy as np\r\nimport tensorflow as tf\r\nfrom multiprocessing import Process, Pool\r\nimport os\r\nimport time\r\n\r\n>def run_proc(name, session):\r\n        \r\n\r\n- import tensorflow as tf\r\n-         process_session = session\r\n-         process_input = process_session.graph.get_tensor_by_name('input:0')\r\n-         process_output = process_session.graph.get_tensor_by_name('output:0')\r\n-         res = process_session.run(process_input, feed_dict={process_output: np.ones((10, 2))})\r\n- \r\n\r\n>if __name__ == '__main__':\r\n        import tensorflow as tf\r\n        session = tf.Session()\r\n        with session.as_default():\r\n            input = tf.placeholder(dtype=tf.float32, shape=[None, 2], name='input')\r\n            tmp = tf.ones(shape=[10, 2])\r\n            add_output = tf.add(x=input, y=tmp, name='output')\r\n        print('Parent process %s.' % os.getpid())\r\n        p = Process(\r\n            target=run_proc,\r\n            args=('test', session))\r\n        print('Process will start.')\r\n        p.start()\r\n    p.join()\r\n    print('Process end.')\r\n>it stucks when new process  start to run(```, feed_dict={```})"}