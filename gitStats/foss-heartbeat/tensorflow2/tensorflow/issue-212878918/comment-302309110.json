{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/302309110", "html_url": "https://github.com/tensorflow/tensorflow/issues/8220#issuecomment-302309110", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8220", "id": 302309110, "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjMwOTExMA==", "user": {"login": "suharshs", "id": 1450614, "node_id": "MDQ6VXNlcjE0NTA2MTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1450614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suharshs", "html_url": "https://github.com/suharshs", "followers_url": "https://api.github.com/users/suharshs/followers", "following_url": "https://api.github.com/users/suharshs/following{/other_user}", "gists_url": "https://api.github.com/users/suharshs/gists{/gist_id}", "starred_url": "https://api.github.com/users/suharshs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suharshs/subscriptions", "organizations_url": "https://api.github.com/users/suharshs/orgs", "repos_url": "https://api.github.com/users/suharshs/repos", "events_url": "https://api.github.com/users/suharshs/events{/privacy}", "received_events_url": "https://api.github.com/users/suharshs/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-18T06:01:43Z", "updated_at": "2017-05-18T06:01:51Z", "author_association": "MEMBER", "body_html": "<p>Update: I have looked into this a bit more, and have a couple more interesting repro cases :)<br>\nWorks:</p>\n<pre><code>run_session('0')\nrun_session('0')\n</code></pre>\n<p>Hangs:</p>\n<pre><code>  run_session('0')\n  p = mp.Process(target=run_session, args=('0'))\n  p.start()\n  p.join()\n</code></pre>\n<p>It looks like there is some shared python tensorflow state that interferes when a new python process is created (multiprocessing creates new python process whose state separation i am not to clear on). I plan to look into it very soon, but just wanted to provide an update in case that gives you any workarounds.</p>", "body_text": "Update: I have looked into this a bit more, and have a couple more interesting repro cases :)\nWorks:\nrun_session('0')\nrun_session('0')\n\nHangs:\n  run_session('0')\n  p = mp.Process(target=run_session, args=('0'))\n  p.start()\n  p.join()\n\nIt looks like there is some shared python tensorflow state that interferes when a new python process is created (multiprocessing creates new python process whose state separation i am not to clear on). I plan to look into it very soon, but just wanted to provide an update in case that gives you any workarounds.", "body": "Update: I have looked into this a bit more, and have a couple more interesting repro cases :)\r\nWorks:\r\n```\r\nrun_session('0')\r\nrun_session('0')\r\n```\r\n\r\nHangs:\r\n```\r\n  run_session('0')\r\n  p = mp.Process(target=run_session, args=('0'))\r\n  p.start()\r\n  p.join()\r\n```\r\n\r\nIt looks like there is some shared python tensorflow state that interferes when a new python process is created (multiprocessing creates new python process whose state separation i am not to clear on). I plan to look into it very soon, but just wanted to provide an update in case that gives you any workarounds."}