{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13686", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13686/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13686/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13686/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/13686", "id": 265264348, "node_id": "MDU6SXNzdWUyNjUyNjQzNDg=", "number": 13686, "title": "Documentation truncated_normal does not match implementation", "user": {"login": "mrTsjolder", "id": 3738082, "node_id": "MDQ6VXNlcjM3MzgwODI=", "avatar_url": "https://avatars2.githubusercontent.com/u/3738082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrTsjolder", "html_url": "https://github.com/mrTsjolder", "followers_url": "https://api.github.com/users/mrTsjolder/followers", "following_url": "https://api.github.com/users/mrTsjolder/following{/other_user}", "gists_url": "https://api.github.com/users/mrTsjolder/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrTsjolder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrTsjolder/subscriptions", "organizations_url": "https://api.github.com/users/mrTsjolder/orgs", "repos_url": "https://api.github.com/users/mrTsjolder/repos", "events_url": "https://api.github.com/users/mrTsjolder/events{/privacy}", "received_events_url": "https://api.github.com/users/mrTsjolder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "dr4b", "id": 5649718, "node_id": "MDQ6VXNlcjU2NDk3MTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/5649718?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dr4b", "html_url": "https://github.com/dr4b", "followers_url": "https://api.github.com/users/dr4b/followers", "following_url": "https://api.github.com/users/dr4b/following{/other_user}", "gists_url": "https://api.github.com/users/dr4b/gists{/gist_id}", "starred_url": "https://api.github.com/users/dr4b/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dr4b/subscriptions", "organizations_url": "https://api.github.com/users/dr4b/orgs", "repos_url": "https://api.github.com/users/dr4b/repos", "events_url": "https://api.github.com/users/dr4b/events{/privacy}", "received_events_url": "https://api.github.com/users/dr4b/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "dr4b", "id": 5649718, "node_id": "MDQ6VXNlcjU2NDk3MTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/5649718?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dr4b", "html_url": "https://github.com/dr4b", "followers_url": "https://api.github.com/users/dr4b/followers", "following_url": "https://api.github.com/users/dr4b/following{/other_user}", "gists_url": "https://api.github.com/users/dr4b/gists{/gist_id}", "starred_url": "https://api.github.com/users/dr4b/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dr4b/subscriptions", "organizations_url": "https://api.github.com/users/dr4b/orgs", "repos_url": "https://api.github.com/users/dr4b/repos", "events_url": "https://api.github.com/users/dr4b/events{/privacy}", "received_events_url": "https://api.github.com/users/dr4b/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2017-10-13T11:58:32Z", "updated_at": "2017-12-21T00:57:32Z", "closed_at": "2017-12-21T00:57:32Z", "author_association": "CONTRIBUTOR", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Nope</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux CentOS 7.3</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: v1.3.0-rc2-20-g0787eee 1.3.0</li>\n<li><strong>Python version</strong>: Python 3.6.1</li>\n<li><strong>Bazel version (if compiling from source)</strong>: N.A.</li>\n<li><strong>CUDA/cuDNN version</strong>: 8.0 / 6.0</li>\n<li><strong>GPU model and memory</strong>: Nvidia Tesla 12 GB</li>\n<li><strong>Exact command to reproduce</strong>: ?</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>The documentation of <code>tf.truncated_normal</code>[https://www.tensorflow.org/api_docs/python/tf/truncated_normal] contains the following line for its parameter <code>stddev</code>:</p>\n<blockquote>\n<p>The standard deviation of the truncated normal distribution.</p>\n</blockquote>\n<p>However, the example below shows that the truncated normal does not have the given standard deviation. This means that the documentation would be correct if it said</p>\n<blockquote>\n<p>The standard deviation of the normal distribution, before truncation.</p>\n</blockquote>\n<p>or if the standard deviation of the samples would be indeed the given standard deviation.</p>\n<h3>Source code / logs</h3>\n<pre><code>import numpy as np\nimport tensorflow as tf\n\n# standard deviation not 1\nwith tf.Session():\n    print(np.std(tf.truncated_normal([10000, ], stddev=1).eval()))\n\n# compared to scipy\nfrom scipy.stats import truncnorm\nprint(truncnorm(-2, 2, loc=0, scale=1).std())\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Nope\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux CentOS 7.3\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): v1.3.0-rc2-20-g0787eee 1.3.0\nPython version: Python 3.6.1\nBazel version (if compiling from source): N.A.\nCUDA/cuDNN version: 8.0 / 6.0\nGPU model and memory: Nvidia Tesla 12 GB\nExact command to reproduce: ?\n\nDescribe the problem\nThe documentation of tf.truncated_normal[https://www.tensorflow.org/api_docs/python/tf/truncated_normal] contains the following line for its parameter stddev:\n\nThe standard deviation of the truncated normal distribution.\n\nHowever, the example below shows that the truncated normal does not have the given standard deviation. This means that the documentation would be correct if it said\n\nThe standard deviation of the normal distribution, before truncation.\n\nor if the standard deviation of the samples would be indeed the given standard deviation.\nSource code / logs\nimport numpy as np\nimport tensorflow as tf\n\n# standard deviation not 1\nwith tf.Session():\n    print(np.std(tf.truncated_normal([10000, ], stddev=1).eval()))\n\n# compared to scipy\nfrom scipy.stats import truncnorm\nprint(truncnorm(-2, 2, loc=0, scale=1).std())", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Nope\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux CentOS 7.3\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: v1.3.0-rc2-20-g0787eee 1.3.0\r\n- **Python version**: Python 3.6.1\r\n- **Bazel version (if compiling from source)**: N.A.\r\n- **CUDA/cuDNN version**: 8.0 / 6.0\r\n- **GPU model and memory**: Nvidia Tesla 12 GB\r\n- **Exact command to reproduce**: ?\r\n\r\n### Describe the problem\r\nThe documentation of `tf.truncated_normal`[https://www.tensorflow.org/api_docs/python/tf/truncated_normal] contains the following line for its parameter `stddev`: \r\n\r\n> The standard deviation of the truncated normal distribution.\r\n\r\nHowever, the example below shows that the truncated normal does not have the given standard deviation. This means that the documentation would be correct if it said\r\n\r\n> The standard deviation of the normal distribution, before truncation.\r\n\r\nor if the standard deviation of the samples would be indeed the given standard deviation.\r\n\r\n### Source code / logs\r\n\r\n    import numpy as np\r\n    import tensorflow as tf\r\n\r\n    # standard deviation not 1\r\n    with tf.Session():\r\n        print(np.std(tf.truncated_normal([10000, ], stddev=1).eval()))\r\n\r\n    # compared to scipy\r\n    from scipy.stats import truncnorm\r\n    print(truncnorm(-2, 2, loc=0, scale=1).std())\r\n"}