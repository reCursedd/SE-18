{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/314318978", "html_url": "https://github.com/tensorflow/tensorflow/issues/5719#issuecomment-314318978", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5719", "id": 314318978, "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDMxODk3OA==", "user": {"login": "andrei-pokrovsky", "id": 11221446, "node_id": "MDQ6VXNlcjExMjIxNDQ2", "avatar_url": "https://avatars3.githubusercontent.com/u/11221446?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrei-pokrovsky", "html_url": "https://github.com/andrei-pokrovsky", "followers_url": "https://api.github.com/users/andrei-pokrovsky/followers", "following_url": "https://api.github.com/users/andrei-pokrovsky/following{/other_user}", "gists_url": "https://api.github.com/users/andrei-pokrovsky/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrei-pokrovsky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrei-pokrovsky/subscriptions", "organizations_url": "https://api.github.com/users/andrei-pokrovsky/orgs", "repos_url": "https://api.github.com/users/andrei-pokrovsky/repos", "events_url": "https://api.github.com/users/andrei-pokrovsky/events{/privacy}", "received_events_url": "https://api.github.com/users/andrei-pokrovsky/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-11T04:22:47Z", "updated_at": "2017-07-11T04:22:47Z", "author_association": "NONE", "body_html": "<p>You could use a GPU cuda radix sort sample that comes with standard CUDA distribution as a starting point for implementing topK (even though there's probably a simpler way to do it in CUDA)</p>", "body_text": "You could use a GPU cuda radix sort sample that comes with standard CUDA distribution as a starting point for implementing topK (even though there's probably a simpler way to do it in CUDA)", "body": "You could use a GPU cuda radix sort sample that comes with standard CUDA distribution as a starting point for implementing topK (even though there's probably a simpler way to do it in CUDA)"}