{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/406774858", "html_url": "https://github.com/tensorflow/tensorflow/issues/20919#issuecomment-406774858", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20919", "id": 406774858, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjc3NDg1OA==", "user": {"login": "hephaex", "id": 3781966, "node_id": "MDQ6VXNlcjM3ODE5NjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/3781966?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hephaex", "html_url": "https://github.com/hephaex", "followers_url": "https://api.github.com/users/hephaex/followers", "following_url": "https://api.github.com/users/hephaex/following{/other_user}", "gists_url": "https://api.github.com/users/hephaex/gists{/gist_id}", "starred_url": "https://api.github.com/users/hephaex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hephaex/subscriptions", "organizations_url": "https://api.github.com/users/hephaex/orgs", "repos_url": "https://api.github.com/users/hephaex/repos", "events_url": "https://api.github.com/users/hephaex/events{/privacy}", "received_events_url": "https://api.github.com/users/hephaex/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-21T06:37:39Z", "updated_at": "2018-07-21T06:37:39Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1162712\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/shashishekhar\">@shashishekhar</a><br>\nhere is my tensorflow/.tfl_configure.bazelrc</p>\n<pre><code>build --action_env PYTHON_BIN_PATH=\"/usr/local/bin/python\"\nbuild --action_env PYTHON_LIB_PATH=\"/usr/local/lib/python3.6/site-packages\"\nbuild --python_path=\"/usr/local/bin/python\"\nbuild --define with_jemalloc=true\nbuild --define with_gcp_support=true\nbuild --define with_hdfs_support=true\nbuild --define with_s3_support=true\nbuild:kafka --define with_kafka_support=true\nbuild --define with_xla_support=true\nbuild:gdr --define with_gdr_support=true\nbuild:verbs --define with_verbs_support=true\nbuild --action_env TF_NEED_OPENCL_SYCL=\"0\"\nbuild --action_env TF_NEED_CUDA=\"1\"\nbuild --action_env CUDA_TOOLKIT_PATH=\"/usr/local/cuda\"\nbuild --action_env TF_CUDA_VERSION=\"9.0\"\nbuild --action_env CUDNN_INSTALL_PATH=\"/usr/lib/x86_64-linux-gnu\"\nbuild --action_env TF_CUDNN_VERSION=\"7\"\nbuild --action_env TF_NCCL_VERSION=\"1\"\nbuild --action_env TF_CUDA_COMPUTE_CAPABILITIES=\"3.5,3.7,5.2,6.0,6.1,7.0\"\nbuild --action_env LD_LIBRARY_PATH=\"/usr/local/nvidia/lib:/usr/local/nvidia/lib64\"\nbuild --action_env TF_CUDA_CLANG=\"0\"\nbuild --action_env GCC_HOST_COMPILER_PATH=\"/usr/bin/gcc\"\nbuild --config=cuda\ntest --config=cuda\nbuild --define grpc_no_ares=true\nbuild:opt --copt=-march=x86-64\nbuild:opt --copt=-mavx\nbuild:opt --copt=-mavx2\nbuild:opt --copt=-mfma\nbuild:opt --copt=-mfpmath=both\nbuild:opt --copt=-msse4.1\nbuild:opt --copt=-msse4.2\nbuild:opt --host_copt=-march=native\nbuild:opt --define with_default_optimizations=true\nbuild --strip=always\n</code></pre>", "body_text": "@shashishekhar\nhere is my tensorflow/.tfl_configure.bazelrc\nbuild --action_env PYTHON_BIN_PATH=\"/usr/local/bin/python\"\nbuild --action_env PYTHON_LIB_PATH=\"/usr/local/lib/python3.6/site-packages\"\nbuild --python_path=\"/usr/local/bin/python\"\nbuild --define with_jemalloc=true\nbuild --define with_gcp_support=true\nbuild --define with_hdfs_support=true\nbuild --define with_s3_support=true\nbuild:kafka --define with_kafka_support=true\nbuild --define with_xla_support=true\nbuild:gdr --define with_gdr_support=true\nbuild:verbs --define with_verbs_support=true\nbuild --action_env TF_NEED_OPENCL_SYCL=\"0\"\nbuild --action_env TF_NEED_CUDA=\"1\"\nbuild --action_env CUDA_TOOLKIT_PATH=\"/usr/local/cuda\"\nbuild --action_env TF_CUDA_VERSION=\"9.0\"\nbuild --action_env CUDNN_INSTALL_PATH=\"/usr/lib/x86_64-linux-gnu\"\nbuild --action_env TF_CUDNN_VERSION=\"7\"\nbuild --action_env TF_NCCL_VERSION=\"1\"\nbuild --action_env TF_CUDA_COMPUTE_CAPABILITIES=\"3.5,3.7,5.2,6.0,6.1,7.0\"\nbuild --action_env LD_LIBRARY_PATH=\"/usr/local/nvidia/lib:/usr/local/nvidia/lib64\"\nbuild --action_env TF_CUDA_CLANG=\"0\"\nbuild --action_env GCC_HOST_COMPILER_PATH=\"/usr/bin/gcc\"\nbuild --config=cuda\ntest --config=cuda\nbuild --define grpc_no_ares=true\nbuild:opt --copt=-march=x86-64\nbuild:opt --copt=-mavx\nbuild:opt --copt=-mavx2\nbuild:opt --copt=-mfma\nbuild:opt --copt=-mfpmath=both\nbuild:opt --copt=-msse4.1\nbuild:opt --copt=-msse4.2\nbuild:opt --host_copt=-march=native\nbuild:opt --define with_default_optimizations=true\nbuild --strip=always", "body": "@shashishekhar \r\nhere is my tensorflow/.tfl_configure.bazelrc\r\n\r\n```\r\nbuild --action_env PYTHON_BIN_PATH=\"/usr/local/bin/python\"\r\nbuild --action_env PYTHON_LIB_PATH=\"/usr/local/lib/python3.6/site-packages\"\r\nbuild --python_path=\"/usr/local/bin/python\"\r\nbuild --define with_jemalloc=true\r\nbuild --define with_gcp_support=true\r\nbuild --define with_hdfs_support=true\r\nbuild --define with_s3_support=true\r\nbuild:kafka --define with_kafka_support=true\r\nbuild --define with_xla_support=true\r\nbuild:gdr --define with_gdr_support=true\r\nbuild:verbs --define with_verbs_support=true\r\nbuild --action_env TF_NEED_OPENCL_SYCL=\"0\"\r\nbuild --action_env TF_NEED_CUDA=\"1\"\r\nbuild --action_env CUDA_TOOLKIT_PATH=\"/usr/local/cuda\"\r\nbuild --action_env TF_CUDA_VERSION=\"9.0\"\r\nbuild --action_env CUDNN_INSTALL_PATH=\"/usr/lib/x86_64-linux-gnu\"\r\nbuild --action_env TF_CUDNN_VERSION=\"7\"\r\nbuild --action_env TF_NCCL_VERSION=\"1\"\r\nbuild --action_env TF_CUDA_COMPUTE_CAPABILITIES=\"3.5,3.7,5.2,6.0,6.1,7.0\"\r\nbuild --action_env LD_LIBRARY_PATH=\"/usr/local/nvidia/lib:/usr/local/nvidia/lib64\"\r\nbuild --action_env TF_CUDA_CLANG=\"0\"\r\nbuild --action_env GCC_HOST_COMPILER_PATH=\"/usr/bin/gcc\"\r\nbuild --config=cuda\r\ntest --config=cuda\r\nbuild --define grpc_no_ares=true\r\nbuild:opt --copt=-march=x86-64\r\nbuild:opt --copt=-mavx\r\nbuild:opt --copt=-mavx2\r\nbuild:opt --copt=-mfma\r\nbuild:opt --copt=-mfpmath=both\r\nbuild:opt --copt=-msse4.1\r\nbuild:opt --copt=-msse4.2\r\nbuild:opt --host_copt=-march=native\r\nbuild:opt --define with_default_optimizations=true\r\nbuild --strip=always\r\n```\r\n"}