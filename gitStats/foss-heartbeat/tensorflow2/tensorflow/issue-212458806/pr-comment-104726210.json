{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/104726210", "pull_request_review_id": 25575449, "id": 104726210, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNDcyNjIxMA==", "diff_hunk": "@@ -223,23 +223,25 @@ def fake():\n   TEST_IMAGES = 't10k-images-idx3-ubyte.gz'\n   TEST_LABELS = 't10k-labels-idx1-ubyte.gz'\n \n-  local_file = base.maybe_download(TRAIN_IMAGES, train_dir,\n-                                   SOURCE_URL + TRAIN_IMAGES)\n+  def download_local_file(fname):\n+    try:\n+      return base.maybe_download(fname, train_dir, SOURCE_URL + fname)", "path": "tensorflow/contrib/learn/python/learn/datasets/mnist.py", "position": 17, "original_position": 17, "commit_id": "207f2f4f718dd418d768331f4f57ab0f067773c7", "original_commit_id": "207f2f4f718dd418d768331f4f57ab0f067773c7", "user": {"login": "decentralion", "id": 1400023, "node_id": "MDQ6VXNlcjE0MDAwMjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1400023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/decentralion", "html_url": "https://github.com/decentralion", "followers_url": "https://api.github.com/users/decentralion/followers", "following_url": "https://api.github.com/users/decentralion/following{/other_user}", "gists_url": "https://api.github.com/users/decentralion/gists{/gist_id}", "starred_url": "https://api.github.com/users/decentralion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/decentralion/subscriptions", "organizations_url": "https://api.github.com/users/decentralion/orgs", "repos_url": "https://api.github.com/users/decentralion/repos", "events_url": "https://api.github.com/users/decentralion/events{/privacy}", "received_events_url": "https://api.github.com/users/decentralion/received_events", "type": "User", "site_admin": false}, "body": "We could make maybe_download take a filename, a directory, and either a URL or a list of URLs. if it gets a string (single url) behavior is same as present. if it gets an array of strings, then it tries them in sequence until successful. that way we can generalize the concept of multiple sources across the codebase in a backwards compatible way.", "created_at": "2017-03-07T17:23:08Z", "updated_at": "2017-03-07T17:23:08Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/8171#discussion_r104726210", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/8171", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/104726210"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/8171#discussion_r104726210"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/8171"}}, "body_html": "<p>We could make maybe_download take a filename, a directory, and either a URL or a list of URLs. if it gets a string (single url) behavior is same as present. if it gets an array of strings, then it tries them in sequence until successful. that way we can generalize the concept of multiple sources across the codebase in a backwards compatible way.</p>", "body_text": "We could make maybe_download take a filename, a directory, and either a URL or a list of URLs. if it gets a string (single url) behavior is same as present. if it gets an array of strings, then it tries them in sequence until successful. that way we can generalize the concept of multiple sources across the codebase in a backwards compatible way.", "in_reply_to_id": 104691096}