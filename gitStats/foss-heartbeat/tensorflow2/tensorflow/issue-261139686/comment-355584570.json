{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/355584570", "html_url": "https://github.com/tensorflow/tensorflow/issues/13351#issuecomment-355584570", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13351", "id": 355584570, "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTU4NDU3MA==", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-05T15:38:02Z", "updated_at": "2018-01-05T15:38:02Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Working this feature into existing client code is complicated, I wonder if it would be much simpler to add it as new functionality. Since dependent initialization has never worked in TF, this can be a new op, like VariableV5, which can eventually replace Variable.</p>\n<p>The example <a href=\"https://gist.github.com/yaroslavvb/d592394c0cedd32513f8fbb87ca05938\">here</a> worked for our code in OpenAI, and the idea there was to make variable reads have control dependency on \"safe-initializer\". \"Safe-initializer\" is an assign op that only runs when variable has not been initialized.</p>\n<p>PS, motivation for the breaking commit is <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"182611026\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/4920\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/4920/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/4920\">#4920</a></p>", "body_text": "Working this feature into existing client code is complicated, I wonder if it would be much simpler to add it as new functionality. Since dependent initialization has never worked in TF, this can be a new op, like VariableV5, which can eventually replace Variable.\nThe example here worked for our code in OpenAI, and the idea there was to make variable reads have control dependency on \"safe-initializer\". \"Safe-initializer\" is an assign op that only runs when variable has not been initialized.\nPS, motivation for the breaking commit is #4920", "body": "Working this feature into existing client code is complicated, I wonder if it would be much simpler to add it as new functionality. Since dependent initialization has never worked in TF, this can be a new op, like VariableV5, which can eventually replace Variable.\r\n\r\nThe example [here](https://gist.github.com/yaroslavvb/d592394c0cedd32513f8fbb87ca05938\r\n) worked for our code in OpenAI, and the idea there was to make variable reads have control dependency on \"safe-initializer\". \"Safe-initializer\" is an assign op that only runs when variable has not been initialized. \r\n\r\nPS, motivation for the breaking commit is https://github.com/tensorflow/tensorflow/issues/4920\r\n"}