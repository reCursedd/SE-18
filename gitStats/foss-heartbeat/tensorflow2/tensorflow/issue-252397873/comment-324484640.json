{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/324484640", "html_url": "https://github.com/tensorflow/tensorflow/issues/12536#issuecomment-324484640", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12536", "id": 324484640, "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDQ4NDY0MA==", "user": {"login": "eaplatanios", "id": 1294940, "node_id": "MDQ6VXNlcjEyOTQ5NDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1294940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eaplatanios", "html_url": "https://github.com/eaplatanios", "followers_url": "https://api.github.com/users/eaplatanios/followers", "following_url": "https://api.github.com/users/eaplatanios/following{/other_user}", "gists_url": "https://api.github.com/users/eaplatanios/gists{/gist_id}", "starred_url": "https://api.github.com/users/eaplatanios/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eaplatanios/subscriptions", "organizations_url": "https://api.github.com/users/eaplatanios/orgs", "repos_url": "https://api.github.com/users/eaplatanios/repos", "events_url": "https://api.github.com/users/eaplatanios/events{/privacy}", "received_events_url": "https://api.github.com/users/eaplatanios/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-23T22:50:57Z", "updated_at": "2017-08-23T22:50:57Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5061\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/alextp\">@alextp</a> I see. That sounds reasonable. I checked and can now verify that the buffers are not deallocated by the JVM. I guess my question now is whether or not it matters where those buffers live. I'm currently allocating them using Java DirectByteBuffers. Do you think that this may be causing a problem?</p>", "body_text": "@alextp I see. That sounds reasonable. I checked and can now verify that the buffers are not deallocated by the JVM. I guess my question now is whether or not it matters where those buffers live. I'm currently allocating them using Java DirectByteBuffers. Do you think that this may be causing a problem?", "body": "@alextp I see. That sounds reasonable. I checked and can now verify that the buffers are not deallocated by the JVM. I guess my question now is whether or not it matters where those buffers live. I'm currently allocating them using Java DirectByteBuffers. Do you think that this may be causing a problem?"}