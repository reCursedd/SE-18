{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/284800505", "html_url": "https://github.com/tensorflow/tensorflow/issues/8172#issuecomment-284800505", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8172", "id": 284800505, "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDgwMDUwNQ==", "user": {"login": "prb12", "id": 11547801, "node_id": "MDQ6VXNlcjExNTQ3ODAx", "avatar_url": "https://avatars1.githubusercontent.com/u/11547801?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prb12", "html_url": "https://github.com/prb12", "followers_url": "https://api.github.com/users/prb12/followers", "following_url": "https://api.github.com/users/prb12/following{/other_user}", "gists_url": "https://api.github.com/users/prb12/gists{/gist_id}", "starred_url": "https://api.github.com/users/prb12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prb12/subscriptions", "organizations_url": "https://api.github.com/users/prb12/orgs", "repos_url": "https://api.github.com/users/prb12/repos", "events_url": "https://api.github.com/users/prb12/events{/privacy}", "received_events_url": "https://api.github.com/users/prb12/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-07T17:46:55Z", "updated_at": "2017-03-07T17:46:55Z", "author_association": "MEMBER", "body_html": "<p>Yes, this is a bit of a mess with dynamic control flow.  Here's a workaround due to <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=463737\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vrv\">@vrv</a>.   Note the use of <code>var.read_value()</code> rather than <code>var.value()</code></p>\n<pre><code>def initialized_var(t):\n  var = tf.Variable(t)\n  is_var_init = tf.is_variable_initialized(var)\n  return var, tf.cond(is_var_init, lambda: var.read_value(),\n                      lambda: var._initializer_op.outputs[0])\n</code></pre>\n<p>Please let me know if this works for you.</p>", "body_text": "Yes, this is a bit of a mess with dynamic control flow.  Here's a workaround due to @vrv.   Note the use of var.read_value() rather than var.value()\ndef initialized_var(t):\n  var = tf.Variable(t)\n  is_var_init = tf.is_variable_initialized(var)\n  return var, tf.cond(is_var_init, lambda: var.read_value(),\n                      lambda: var._initializer_op.outputs[0])\n\nPlease let me know if this works for you.", "body": "Yes, this is a bit of a mess with dynamic control flow.  Here's a workaround due to @vrv.   Note the use of `var.read_value()` rather than `var.value()`\r\n\r\n```\r\ndef initialized_var(t):\r\n  var = tf.Variable(t)\r\n  is_var_init = tf.is_variable_initialized(var)\r\n  return var, tf.cond(is_var_init, lambda: var.read_value(),\r\n                      lambda: var._initializer_op.outputs[0])\r\n```\r\n\r\nPlease let me know if this works for you."}