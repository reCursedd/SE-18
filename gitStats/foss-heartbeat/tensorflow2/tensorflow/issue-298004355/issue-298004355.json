{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17093", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17093/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17093/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17093/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17093", "id": 298004355, "node_id": "MDU6SXNzdWUyOTgwMDQzNTU=", "number": 17093, "title": "enqueue inside while loop does not work as expected", "user": {"login": "gaohuazuo", "id": 10446514, "node_id": "MDQ6VXNlcjEwNDQ2NTE0", "avatar_url": "https://avatars0.githubusercontent.com/u/10446514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gaohuazuo", "html_url": "https://github.com/gaohuazuo", "followers_url": "https://api.github.com/users/gaohuazuo/followers", "following_url": "https://api.github.com/users/gaohuazuo/following{/other_user}", "gists_url": "https://api.github.com/users/gaohuazuo/gists{/gist_id}", "starred_url": "https://api.github.com/users/gaohuazuo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gaohuazuo/subscriptions", "organizations_url": "https://api.github.com/users/gaohuazuo/orgs", "repos_url": "https://api.github.com/users/gaohuazuo/repos", "events_url": "https://api.github.com/users/gaohuazuo/events{/privacy}", "received_events_url": "https://api.github.com/users/gaohuazuo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-02-17T13:20:12Z", "updated_at": "2018-10-03T00:30:02Z", "closed_at": "2018-02-23T07:34:48Z", "author_association": "CONTRIBUTOR", "body_html": "<p>VERSION 1.5.0-rc0<br>\nGIT_VERSION v1.3.0-rc1-7323-g8d5741f<br>\nCompiled from source</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">with</span> tf.device(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>cpu:0<span class=\"pl-pds\">'</span></span>):\n    x <span class=\"pl-k\">=</span> tf.contrib.framework.local_variable(<span class=\"pl-c1\">1024</span>)\n    q <span class=\"pl-k\">=</span> tf.FIFOQueue(<span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>, tf.int32, <span class=\"pl-v\">shapes</span><span class=\"pl-k\">=</span>[[]])\n\n    <span class=\"pl-k\">def</span> <span class=\"pl-en\">cond</span>(<span class=\"pl-smi\">_</span>):\n        remaining <span class=\"pl-k\">=</span> tf.assign_sub(x, <span class=\"pl-c1\">1</span>, <span class=\"pl-v\">use_locking</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>)\n        <span class=\"pl-k\">with</span> tf.control_dependencies([q.enqueue(remaining)]):\n            <span class=\"pl-k\">return</span> remaining <span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">0</span>\n\n    <span class=\"pl-k\">def</span> <span class=\"pl-en\">body</span>(<span class=\"pl-smi\">_</span>):\n        <span class=\"pl-k\">return</span> _\n\n    op <span class=\"pl-k\">=</span> tf.while_loop(cond, body, [tf.constant([])], <span class=\"pl-v\">parallel_iterations</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>, <span class=\"pl-v\">back_prop</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">False</span>).op\n\nx.initializer.run()\nop.run()\nq.dequeue_many(q.size()).eval()\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> array([0, 0, 0, ..., 0, 0, 0], dtype=int32)</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> expected: array([1023, 1022, 1021, ..., 2, 1, 0], dtype=int32)</span></pre></div>", "body_text": "VERSION 1.5.0-rc0\nGIT_VERSION v1.3.0-rc1-7323-g8d5741f\nCompiled from source\nwith tf.device('cpu:0'):\n    x = tf.contrib.framework.local_variable(1024)\n    q = tf.FIFOQueue(-1, tf.int32, shapes=[[]])\n\n    def cond(_):\n        remaining = tf.assign_sub(x, 1, use_locking=True)\n        with tf.control_dependencies([q.enqueue(remaining)]):\n            return remaining > 0\n\n    def body(_):\n        return _\n\n    op = tf.while_loop(cond, body, [tf.constant([])], parallel_iterations=1, back_prop=False).op\n\nx.initializer.run()\nop.run()\nq.dequeue_many(q.size()).eval()\n# array([0, 0, 0, ..., 0, 0, 0], dtype=int32)\n# expected: array([1023, 1022, 1021, ..., 2, 1, 0], dtype=int32)", "body": "VERSION 1.5.0-rc0\r\nGIT_VERSION v1.3.0-rc1-7323-g8d5741f\r\nCompiled from source\r\n\r\n```python\r\nwith tf.device('cpu:0'):\r\n    x = tf.contrib.framework.local_variable(1024)\r\n    q = tf.FIFOQueue(-1, tf.int32, shapes=[[]])\r\n\r\n    def cond(_):\r\n        remaining = tf.assign_sub(x, 1, use_locking=True)\r\n        with tf.control_dependencies([q.enqueue(remaining)]):\r\n            return remaining > 0\r\n\r\n    def body(_):\r\n        return _\r\n\r\n    op = tf.while_loop(cond, body, [tf.constant([])], parallel_iterations=1, back_prop=False).op\r\n\r\nx.initializer.run()\r\nop.run()\r\nq.dequeue_many(q.size()).eval()\r\n# array([0, 0, 0, ..., 0, 0, 0], dtype=int32)\r\n# expected: array([1023, 1022, 1021, ..., 2, 1, 0], dtype=int32)\r\n```"}