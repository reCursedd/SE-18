{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/314564023", "html_url": "https://github.com/tensorflow/tensorflow/issues/11431#issuecomment-314564023", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11431", "id": 314564023, "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDU2NDAyMw==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-11T20:37:14Z", "updated_at": "2017-07-11T20:37:14Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Switching to <code>array_ops.rank(a)</code> presumably fixes the problem because it's using the statically inferred rank from Python. I expect this would fail if, for some reason, <code>a</code> had a statically unknown rank (e.g. <code>a = tf.placeholder(tf.float32, shape=None)</code>).</p>\n<p>Given the type punning involved in the <a href=\"https://github.com/tensorflow/tensorflow/blob/99a38ffd9d77c55ca6d0c373c6d4b72686284ac5/tensorflow/core/framework/tensor_shape.h#L219\">implementation of <code>TensorShape::dims()</code></a>, I'm not totally surprised that it fails on a big-endian machine. Hopefully this provides a pointer to the correct solution.</p>", "body_text": "Switching to array_ops.rank(a) presumably fixes the problem because it's using the statically inferred rank from Python. I expect this would fail if, for some reason, a had a statically unknown rank (e.g. a = tf.placeholder(tf.float32, shape=None)).\nGiven the type punning involved in the implementation of TensorShape::dims(), I'm not totally surprised that it fails on a big-endian machine. Hopefully this provides a pointer to the correct solution.", "body": "Switching to `array_ops.rank(a)` presumably fixes the problem because it's using the statically inferred rank from Python. I expect this would fail if, for some reason, `a` had a statically unknown rank (e.g. `a = tf.placeholder(tf.float32, shape=None)`).\r\n\r\nGiven the type punning involved in the [implementation of `TensorShape::dims()`](https://github.com/tensorflow/tensorflow/blob/99a38ffd9d77c55ca6d0c373c6d4b72686284ac5/tensorflow/core/framework/tensor_shape.h#L219), I'm not totally surprised that it fails on a big-endian machine. Hopefully this provides a pointer to the correct solution."}