{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/328175578", "html_url": "https://github.com/tensorflow/tensorflow/issues/11431#issuecomment-328175578", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11431", "id": 328175578, "node_id": "MDEyOklzc3VlQ29tbWVudDMyODE3NTU3OA==", "user": {"login": "namrata-ibm", "id": 21953668, "node_id": "MDQ6VXNlcjIxOTUzNjY4", "avatar_url": "https://avatars3.githubusercontent.com/u/21953668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/namrata-ibm", "html_url": "https://github.com/namrata-ibm", "followers_url": "https://api.github.com/users/namrata-ibm/followers", "following_url": "https://api.github.com/users/namrata-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/namrata-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/namrata-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/namrata-ibm/subscriptions", "organizations_url": "https://api.github.com/users/namrata-ibm/orgs", "repos_url": "https://api.github.com/users/namrata-ibm/repos", "events_url": "https://api.github.com/users/namrata-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/namrata-ibm/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-08T18:10:18Z", "updated_at": "2017-09-08T18:18:29Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=192142\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mrry\">@mrry</a>, I had to use <code>tensor_util.constant_value(gen_array_ops.rank(a))</code> as <code> tf.contrib.util.constant_value(gen_array_ops.rank(a))</code> gave errors like tf, contrib modules missing. I assume the former is equivalent in v1.2.1.</p>\n<p>The same failure is seen with this too.  :(<br>\nThis change works on Intel x86 though.</p>\n<p>Little analysis:</p>\n<pre><code>(Pdb) p rank_a\narray(0, dtype=int32)\n(Pdb) p rank_a.shape\n()\n(Pdb) p rank_a.eval()\n*** AttributeError: AttributeError(\"'numpy.ndarray' object has no attribute 'eval'\",)\n(Pdb) p (gen_math_ops._range(0, rank_a, 1)).eval()\narray([], dtype=int32)\n\n(Pdb) p tensor_util.constant_value(gen_array_ops.rank(a))\narray(0, dtype=int32)\n</code></pre>\n<p>I could see calls made to <a href=\"https://github.com/tensorflow/tensorflow/blob/v1.2.1/tensorflow/python/framework/cpp_shape_inference.cc#L34\">cpp_shape_handler.cc/ProtoFromShapeHandle</a> . This implementation seems to be added after v0.10.0. Are these files involved during tensor object conversion from python to cpp? Do you see a possibility of loss of shape happening there? But I wonder why it doesn't occur for other operations and happens only for Range.</p>", "body_text": "@mrry, I had to use tensor_util.constant_value(gen_array_ops.rank(a)) as  tf.contrib.util.constant_value(gen_array_ops.rank(a)) gave errors like tf, contrib modules missing. I assume the former is equivalent in v1.2.1.\nThe same failure is seen with this too.  :(\nThis change works on Intel x86 though.\nLittle analysis:\n(Pdb) p rank_a\narray(0, dtype=int32)\n(Pdb) p rank_a.shape\n()\n(Pdb) p rank_a.eval()\n*** AttributeError: AttributeError(\"'numpy.ndarray' object has no attribute 'eval'\",)\n(Pdb) p (gen_math_ops._range(0, rank_a, 1)).eval()\narray([], dtype=int32)\n\n(Pdb) p tensor_util.constant_value(gen_array_ops.rank(a))\narray(0, dtype=int32)\n\nI could see calls made to cpp_shape_handler.cc/ProtoFromShapeHandle . This implementation seems to be added after v0.10.0. Are these files involved during tensor object conversion from python to cpp? Do you see a possibility of loss of shape happening there? But I wonder why it doesn't occur for other operations and happens only for Range.", "body": "@mrry, I had to use `tensor_util.constant_value(gen_array_ops.rank(a))` as ` tf.contrib.util.constant_value(gen_array_ops.rank(a))` gave errors like tf, contrib modules missing. I assume the former is equivalent in v1.2.1. \r\n\r\nThe same failure is seen with this too.  :( \r\nThis change works on Intel x86 though.\r\n\r\n\r\nLittle analysis:\r\n```\r\n(Pdb) p rank_a\r\narray(0, dtype=int32)\r\n(Pdb) p rank_a.shape\r\n()\r\n(Pdb) p rank_a.eval()\r\n*** AttributeError: AttributeError(\"'numpy.ndarray' object has no attribute 'eval'\",)\r\n(Pdb) p (gen_math_ops._range(0, rank_a, 1)).eval()\r\narray([], dtype=int32)\r\n\r\n(Pdb) p tensor_util.constant_value(gen_array_ops.rank(a))\r\narray(0, dtype=int32)\r\n```\r\n\r\nI could see calls made to [cpp_shape_handler.cc/ProtoFromShapeHandle](https://github.com/tensorflow/tensorflow/blob/v1.2.1/tensorflow/python/framework/cpp_shape_inference.cc#L34) . This implementation seems to be added after v0.10.0. Are these files involved during tensor object conversion from python to cpp? Do you see a possibility of loss of shape happening there? But I wonder why it doesn't occur for other operations and happens only for Range.\r\n"}