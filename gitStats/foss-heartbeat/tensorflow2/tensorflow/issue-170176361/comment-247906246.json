{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/247906246", "html_url": "https://github.com/tensorflow/tensorflow/issues/3710#issuecomment-247906246", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3710", "id": 247906246, "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzkwNjI0Ng==", "user": {"login": "zffchen78", "id": 7943790, "node_id": "MDQ6VXNlcjc5NDM3OTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/7943790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zffchen78", "html_url": "https://github.com/zffchen78", "followers_url": "https://api.github.com/users/zffchen78/followers", "following_url": "https://api.github.com/users/zffchen78/following{/other_user}", "gists_url": "https://api.github.com/users/zffchen78/gists{/gist_id}", "starred_url": "https://api.github.com/users/zffchen78/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zffchen78/subscriptions", "organizations_url": "https://api.github.com/users/zffchen78/orgs", "repos_url": "https://api.github.com/users/zffchen78/repos", "events_url": "https://api.github.com/users/zffchen78/events{/privacy}", "received_events_url": "https://api.github.com/users/zffchen78/received_events", "type": "User", "site_admin": false}, "created_at": "2016-09-19T03:36:03Z", "updated_at": "2016-09-19T03:36:03Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Your custom_op(x) is effectively computing element-wise y = log(1+e^x) for x in the inputs. By definition, tf.gradients(y, x) computes, since grad_ys=None by default, dy_i/dx_i = e^x / (1 + e^x)  = sigmoid(x). Since your test is giving x = [0, 1, 2, 3, 4, 5]. So,<br>\n[[ 0.5         0.7310586 ]<br>\n[ 0.88079709  0.95257413]<br>\n[ 0.98201376  0.99330717]]<br>\nis correct.</p>\n<p>When you specify custom_op_grad(x, grad) = grad, effectively, you are telling the backprop algorithm to pass through the error. Since grad_ys=None, effectively, these are 1.0.</p>", "body_text": "Your custom_op(x) is effectively computing element-wise y = log(1+e^x) for x in the inputs. By definition, tf.gradients(y, x) computes, since grad_ys=None by default, dy_i/dx_i = e^x / (1 + e^x)  = sigmoid(x). Since your test is giving x = [0, 1, 2, 3, 4, 5]. So,\n[[ 0.5         0.7310586 ]\n[ 0.88079709  0.95257413]\n[ 0.98201376  0.99330717]]\nis correct.\nWhen you specify custom_op_grad(x, grad) = grad, effectively, you are telling the backprop algorithm to pass through the error. Since grad_ys=None, effectively, these are 1.0.", "body": "Your custom_op(x) is effectively computing element-wise y = log(1+e^x) for x in the inputs. By definition, tf.gradients(y, x) computes, since grad_ys=None by default, dy_i/dx_i = e^x / (1 + e^x)  = sigmoid(x). Since your test is giving x = [0, 1, 2, 3, 4, 5]. So, \n[[ 0.5         0.7310586 ]\n [ 0.88079709  0.95257413]\n [ 0.98201376  0.99330717]]\nis correct.\n\nWhen you specify custom_op_grad(x, grad) = grad, effectively, you are telling the backprop algorithm to pass through the error. Since grad_ys=None, effectively, these are 1.0.\n"}