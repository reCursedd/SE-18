{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/144705827", "pull_request_review_id": 69404374, "id": 144705827, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDcwNTgyNw==", "diff_hunk": "@@ -247,6 +247,57 @@ shape: a length-2 vector of int64 representing the shape of the sparse\n   of tokens in a single input entry.\n )doc\");\n \n+REGISTER_OP(\"StringUTF8Split\")\n+    .Input(\"input: string\")\n+    .Input(\"delimiter: string\")\n+    .Output(\"indices: int64\")\n+    .Output(\"values: string\")\n+    .Output(\"shape: int64\")\n+    .Attr(\"skip_empty: bool = true\")\n+    .SetShapeFn([](InferenceContext* c) {\n+      ShapeHandle unused;\n+      TF_RETURN_IF_ERROR(c->WithRank(c->input(0), 1, &unused));\n+      TF_RETURN_IF_ERROR(c->WithRankAtMost(c->input(1), 1, &unused));\n+\n+      c->set_output(0, c->Matrix(InferenceContext::kUnknownDim, 2));\n+      c->set_output(1, c->Vector(InferenceContext::kUnknownDim));\n+      c->set_output(2, c->Vector(2));\n+      return Status::OK();\n+    })\n+    .Doc(R\"doc(\n+Split elements of `input` based on `delimiter` into a `SparseTensor`.\n+\n+Let N be the size of source (typically N will be the batch size). Split each\n+element of `input` based on `delimiter` and return a `SparseTensor`\n+containing the splitted tokens. Empty tokens are ignored.\n+\n+`delimiter` can be empty, or a string of split characters. If `delimiter` is an\n+ empty string, each element of `input` is split into individual single-UTF-8\n+ character strings, including splitting of UTF-8 multibyte sequences. Otherwise\n+ every character of `delimiter` is a potential split point.\n+\n+For example:\n+  N = 2, input[0] is 'hello world' and input[1] is 'a b c', then the output\n+  will be\n+\n+  indices = [0, 0;\n+             0, 1;\n+             1, 0;\n+             1, 1;\n+             1, 2]\n+  shape = [2, 3]\n+  values = ['hello', 'world', 'a', 'b', 'c']\n+\n+input: 1-D. Strings to split.\n+delimiter: 1-D. Delimiter characters (bytes), or empty string.", "path": "tensorflow/core/ops/string_ops.cc", "position": null, "original_position": 46, "commit_id": "95f2a5cf9d08d4ed07eb88057ead689ce61faa54", "original_commit_id": "5d767978be03a123d2b95fce16e060a5836074b9", "user": {"login": "yongtang", "id": 6932348, "node_id": "MDQ6VXNlcjY5MzIzNDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/6932348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yongtang", "html_url": "https://github.com/yongtang", "followers_url": "https://api.github.com/users/yongtang/followers", "following_url": "https://api.github.com/users/yongtang/following{/other_user}", "gists_url": "https://api.github.com/users/yongtang/gists{/gist_id}", "starred_url": "https://api.github.com/users/yongtang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yongtang/subscriptions", "organizations_url": "https://api.github.com/users/yongtang/orgs", "repos_url": "https://api.github.com/users/yongtang/repos", "events_url": "https://api.github.com/users/yongtang/events{/privacy}", "received_events_url": "https://api.github.com/users/yongtang/received_events", "type": "User", "site_admin": false}, "body": "Done.", "created_at": "2017-10-14T23:14:38Z", "updated_at": "2018-05-27T18:27:55Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/12971#discussion_r144705827", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/12971", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/144705827"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/12971#discussion_r144705827"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/12971"}}, "body_html": "<p>Done.</p>", "body_text": "Done.", "in_reply_to_id": 144673414}