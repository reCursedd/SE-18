{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/149553998", "pull_request_review_id": 74966567, "id": 149553998, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0OTU1Mzk5OA==", "diff_hunk": "@@ -117,11 +116,54 @@ class StringSplitOp : public OpKernel {\n       }\n     }\n   }\n+};\n+\n+class StringSplitOp : public StringSplitOpBase {\n+ public:\n+  explicit StringSplitOp(OpKernelConstruction* context)\n+      : StringSplitOpBase(context) {\n+    skip_empty_ = true;\n+    // By default skip_empty_ is true. We only get the value from attr if it is\n+    // available, so that it is backward compatible.\n+    context->GetAttr(\"skip_empty\", &skip_empty_);", "path": "tensorflow/core/kernels/string_split_op.cc", "position": null, "original_position": 67, "commit_id": "95f2a5cf9d08d4ed07eb88057ead689ce61faa54", "original_commit_id": "c3ae15f5b6674751a36a385346104c914b0a5c73", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "body": "It isn't obvious that `GetAttr` will not edit it's last argument when it returns an error.\r\nSo, let's restore the original behavior of:\r\n\r\n```c++\r\nexplicit StringSplitOp(OpKernelConstruction* context)\r\n  : StringSplitOpBase(context), skip_empty_(true) {\r\n  bool skip_empty;\r\n  if (context->GetAttr(\"skip_empty\", &skip_empty).ok()) {\r\n    skip_empty_ = skip_empty;\r\n  }\r\n```", "created_at": "2017-11-08T01:26:45Z", "updated_at": "2018-05-27T18:27:55Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/12971#discussion_r149553998", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/12971", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/149553998"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/12971#discussion_r149553998"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/12971"}}, "body_html": "<p>It isn't obvious that <code>GetAttr</code> will not edit it's last argument when it returns an error.<br>\nSo, let's restore the original behavior of:</p>\n<div class=\"highlight highlight-source-c++\"><pre><span class=\"pl-k\">explicit</span> <span class=\"pl-en\">StringSplitOp</span>(OpKernelConstruction* context)\n  : StringSplitOpBase(context), skip_empty_(<span class=\"pl-c1\">true</span>) {\n  <span class=\"pl-k\">bool</span> skip_empty;\n  <span class=\"pl-k\">if</span> (context-&gt;<span class=\"pl-c1\">GetAttr</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>skip_empty<span class=\"pl-pds\">\"</span></span>, &amp;skip_empty).<span class=\"pl-c1\">ok</span>()) {\n    skip_empty_ = skip_empty;\n  }</pre></div>", "body_text": "It isn't obvious that GetAttr will not edit it's last argument when it returns an error.\nSo, let's restore the original behavior of:\nexplicit StringSplitOp(OpKernelConstruction* context)\n  : StringSplitOpBase(context), skip_empty_(true) {\n  bool skip_empty;\n  if (context->GetAttr(\"skip_empty\", &skip_empty).ok()) {\n    skip_empty_ = skip_empty;\n  }"}