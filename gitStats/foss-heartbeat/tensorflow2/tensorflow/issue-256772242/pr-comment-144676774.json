{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/144676774", "pull_request_review_id": 69368959, "id": 144676774, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDY3Njc3NA==", "diff_hunk": "@@ -416,6 +417,119 @@ bool ConsumeNonWhitespace(StringPiece* s, StringPiece* val) {\n   }\n }\n \n+Status SplitUTF8(StringPiece text, const string& delim,\n+                 std::vector<string>* result) {\n+  // Bytes    Byte 1    Byte 2    Byte 3    Byte 4\n+  //   1     0xxxxxxx\n+  //   2     110xxxxx  10xxxxxx\n+  //   3     1110xxxx  10xxxxxx  10xxxxxx\n+  //   4     11110xxx  10xxxxxx  10xxxxxx  10xxxxxx\n+  result->clear();\n+  result->reserve(text.size());\n+  size_t off = 0, len = 0;\n+  bool advance = true;\n+  for (size_t i = 0; i < text.size(); ++i) {\n+    if (off == i) {\n+      if ((text[i] & 0x80) == 0x00) {\n+        string entry = text.substr(off, 1).ToString();\n+        if (delim == \"\") {\n+          // If delim is \"\" then always advance\n+          result->emplace_back(entry);\n+        } else if (delim != entry) {\n+          // If delim is not the current char, then advance only once\n+          if (advance) {\n+            advance = false;\n+            result->emplace_back(entry);\n+          } else {\n+            (*result)[result->size() - 1] =\n+                (*result)[result->size() - 1] + entry;\n+          }\n+        } else {\n+          // If delim is the current char, then set the advance but\n+          // not append the string.\n+          advance = true;\n+        }\n+        off++;\n+      } else if ((text[i] & 0xE0) == 0xC0) {\n+        len = 2;\n+      } else if ((text[i] & 0xF0) == 0xE0) {\n+        len = 3;\n+      } else if ((text[i] & 0xF8) == 0xF0) {\n+        len = 4;\n+      } else {\n+        result->clear();\n+        return errors::InvalidArgument(\"Invalid UTF8 encoding at position of \",\n+                                       i);\n+      }\n+    } else {\n+      if (TF_PREDICT_FALSE((text[i] & 0xC0) != 0x80)) {\n+        result->clear();\n+        return errors::InvalidArgument(\"Invalid UTF8 encoding at position of \",\n+                                       i);\n+      }\n+      if (off + len == i + 1) {\n+        string entry = text.substr(off, len).ToString();\n+        if (delim == \"\") {\n+          // If delim is \"\" then always advance\n+          result->emplace_back(entry);\n+        } else if (delim != entry) {\n+          // If delim is not the current char, then advance only once\n+          if (advance) {\n+            advance = false;\n+            result->emplace_back(entry);\n+          } else {\n+            (*result)[result->size() - 1] =\n+                (*result)[result->size() - 1] + entry;\n+          }\n+        } else {\n+          // If delim is the current char, then set the advance but\n+          // not append the string.\n+          advance = true;\n+        }\n+        off += len;\n+      }\n+    }\n+  }\n+  if (TF_PREDICT_FALSE(off < text.size())) {\n+    result->clear();\n+    return errors::InvalidArgument(\"Not enough characters for UTF8 encoding\");\n+  }\n+  return Status::OK();\n+}\n+\n+Status ValidUTF8(StringPiece text) {", "path": "tensorflow/core/lib/strings/str_util.cc", "position": null, "original_position": 92, "commit_id": "95f2a5cf9d08d4ed07eb88057ead689ce61faa54", "original_commit_id": "5d767978be03a123d2b95fce16e060a5836074b9", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "body": "It seems like this function is determining whether `text` is a valid UTF-8 character (as opposed to a valid string). Perhaps call this function so: `ValidUTF8Character` or something?", "created_at": "2017-10-13T23:43:00Z", "updated_at": "2018-05-27T18:27:55Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/12971#discussion_r144676774", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/12971", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/144676774"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/12971#discussion_r144676774"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/12971"}}, "body_html": "<p>It seems like this function is determining whether <code>text</code> is a valid UTF-8 character (as opposed to a valid string). Perhaps call this function so: <code>ValidUTF8Character</code> or something?</p>", "body_text": "It seems like this function is determining whether text is a valid UTF-8 character (as opposed to a valid string). Perhaps call this function so: ValidUTF8Character or something?"}