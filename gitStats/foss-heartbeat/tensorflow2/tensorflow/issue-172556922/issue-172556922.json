{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3965", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3965/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3965/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3965/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/3965", "id": 172556922, "node_id": "MDU6SXNzdWUxNzI1NTY5MjI=", "number": 3965, "title": "Conv2d issue with GPU", "user": {"login": "skolouri", "id": 18197151, "node_id": "MDQ6VXNlcjE4MTk3MTUx", "avatar_url": "https://avatars1.githubusercontent.com/u/18197151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skolouri", "html_url": "https://github.com/skolouri", "followers_url": "https://api.github.com/users/skolouri/followers", "following_url": "https://api.github.com/users/skolouri/following{/other_user}", "gists_url": "https://api.github.com/users/skolouri/gists{/gist_id}", "starred_url": "https://api.github.com/users/skolouri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skolouri/subscriptions", "organizations_url": "https://api.github.com/users/skolouri/orgs", "repos_url": "https://api.github.com/users/skolouri/repos", "events_url": "https://api.github.com/users/skolouri/events{/privacy}", "received_events_url": "https://api.github.com/users/skolouri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-08-22T21:15:37Z", "updated_at": "2016-08-22T23:38:38Z", "closed_at": "2016-08-22T23:38:38Z", "author_association": "NONE", "body_html": "<p>I have extracted the activations of a neural net at a certain layer with size [1,28,28,128] and I have a corresponding kernel that I want to convolve with these activations. The kernel shape is [3,3,128,256].<br>\nI am using:</p>\n<ul>\n<li>2 GTX-1080 GPUs</li>\n<li>Cuda-8.0 (The problem persists with Cuda-7.5 as well)</li>\n<li>Graphics Driver: NVIDIA-367</li>\n<li>Python 2.7</li>\n</ul>\n<p>When I perform 2D convolution using the CPU I get the correct answer but when I run it through the GPU I get all zeros. Note that, there is no ReLu operator involved here and the output should not be zero (as confirmed by the CPU output). In addition, I do not think this is a numerical precision error.</p>\n<p>I have included the codes, activations and the kernel files for reproducing the problem here:</p>\n<p><a href=\"https://github.com/skolouri/GTX-1080_CNN_Issue\">https://github.com/skolouri/GTX-1080_CNN_Issue</a></p>\n<h3>Environment info</h3>\n<p>Operating System: Linux 14.04</p>\n<p>Installed version of CUDA and cuDNN: Cuda-8.0.27 and cudNN-4.0.7</p>\n<h3>Steps to reproduce</h3>\n<p>The steps are included here:</p>\n<p><a href=\"https://github.com/skolouri/GTX-1080_CNN_Issue\">https://github.com/skolouri/GTX-1080_CNN_Issue</a></p>\n<h3>What have you tried?</h3>\n<ol>\n<li>I have tried Cuda-7.5</li>\n<li>CPU works fine, GPU returns all zeros!</li>\n</ol>", "body_text": "I have extracted the activations of a neural net at a certain layer with size [1,28,28,128] and I have a corresponding kernel that I want to convolve with these activations. The kernel shape is [3,3,128,256].\nI am using:\n\n2 GTX-1080 GPUs\nCuda-8.0 (The problem persists with Cuda-7.5 as well)\nGraphics Driver: NVIDIA-367\nPython 2.7\n\nWhen I perform 2D convolution using the CPU I get the correct answer but when I run it through the GPU I get all zeros. Note that, there is no ReLu operator involved here and the output should not be zero (as confirmed by the CPU output). In addition, I do not think this is a numerical precision error.\nI have included the codes, activations and the kernel files for reproducing the problem here:\nhttps://github.com/skolouri/GTX-1080_CNN_Issue\nEnvironment info\nOperating System: Linux 14.04\nInstalled version of CUDA and cuDNN: Cuda-8.0.27 and cudNN-4.0.7\nSteps to reproduce\nThe steps are included here:\nhttps://github.com/skolouri/GTX-1080_CNN_Issue\nWhat have you tried?\n\nI have tried Cuda-7.5\nCPU works fine, GPU returns all zeros!", "body": "I have extracted the activations of a neural net at a certain layer with size [1,28,28,128] and I have a corresponding kernel that I want to convolve with these activations. The kernel shape is [3,3,128,256]. \nI am using:\n- 2 GTX-1080 GPUs\n- Cuda-8.0 (The problem persists with Cuda-7.5 as well)\n- Graphics Driver: NVIDIA-367\n- Python 2.7\n\nWhen I perform 2D convolution using the CPU I get the correct answer but when I run it through the GPU I get all zeros. Note that, there is no ReLu operator involved here and the output should not be zero (as confirmed by the CPU output). In addition, I do not think this is a numerical precision error. \n\nI have included the codes, activations and the kernel files for reproducing the problem here: \n\nhttps://github.com/skolouri/GTX-1080_CNN_Issue\n### Environment info\n\nOperating System: Linux 14.04\n\nInstalled version of CUDA and cuDNN: Cuda-8.0.27 and cudNN-4.0.7\n### Steps to reproduce\n\nThe steps are included here:\n\nhttps://github.com/skolouri/GTX-1080_CNN_Issue\n### What have you tried?\n1. I have tried Cuda-7.5 \n2. CPU works fine, GPU returns all zeros! \n"}