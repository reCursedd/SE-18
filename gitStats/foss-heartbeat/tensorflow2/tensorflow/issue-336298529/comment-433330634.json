{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/433330634", "html_url": "https://github.com/tensorflow/tensorflow/issues/20348#issuecomment-433330634", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20348", "id": 433330634, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzMzMDYzNA==", "user": {"login": "piercus", "id": 156736, "node_id": "MDQ6VXNlcjE1NjczNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/156736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/piercus", "html_url": "https://github.com/piercus", "followers_url": "https://api.github.com/users/piercus/followers", "following_url": "https://api.github.com/users/piercus/following{/other_user}", "gists_url": "https://api.github.com/users/piercus/gists{/gist_id}", "starred_url": "https://api.github.com/users/piercus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/piercus/subscriptions", "organizations_url": "https://api.github.com/users/piercus/orgs", "repos_url": "https://api.github.com/users/piercus/repos", "events_url": "https://api.github.com/users/piercus/events{/privacy}", "received_events_url": "https://api.github.com/users/piercus/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-26T08:30:27Z", "updated_at": "2018-10-26T08:31:40Z", "author_association": "NONE", "body_html": "<p>I was blocked by this also on my side.<br>\nI'm sharing a dirty workaround here (might be useful to someone else), that is \"patching\" ffmpeg (no need to recompile tensorflow).</p>\n<p><strong>Warning</strong> this is dirty and this may broke your ffmpeg install so you should revert the patch after you did it</p>\n<h3>Save ffmpeg binary as <code>ffmpeg-unpatched</code></h3>\n<pre><code>ffmpeg_path=$(which ffmpeg)\nmv $ffmpeg_path ${ffmpeg_path}-unpatched\n</code></pre>\n<h3>Create a patched-ffmpeg script</h3>\n<p>save a file named <code>ffmpeg</code> somewhere in your <code>$PATH</code></p>\n<pre><code>#!/bin/bash\n\n# create a temporary file to put ffmpeg input\nrand=$(shuf -i1-100000 -n1)\nfilename=/tmp/$rand.ffmpegout\n\n# call ffmpeg and redirect stderr to temporary file\nffmpeg-unpatched \"$@\" &gt; /dev/null 2&gt; $filename\n\necho \"This ffmpeg is a bash script calling ffmpeg in order to patch it for tensorflow/issues/20348\"\n\n# output ffmpeg results in an order that is matching tensorflow expectations\ncat $filename | grep -A 100 \"Output\" &gt;&amp;2\ncat $filename | grep -A 1 \"Stream mapping\" &gt;&amp;2\ncat $filename | grep \"frame=\" &gt;&amp;2\n\n# Uncomment this line for bugfixing (to visualize your frames numbers line)\n# cat $filename | grep \"frame=\"\n\nrm -f $filename\n\nexit\n</code></pre>\n<h3>Run tensorflow again</h3>\n<p>now it should work</p>\n<h3>Revert</h3>\n<pre><code>mv ${ffmpeg_path}-unpatched $ffmpeg_path\n</code></pre>", "body_text": "I was blocked by this also on my side.\nI'm sharing a dirty workaround here (might be useful to someone else), that is \"patching\" ffmpeg (no need to recompile tensorflow).\nWarning this is dirty and this may broke your ffmpeg install so you should revert the patch after you did it\nSave ffmpeg binary as ffmpeg-unpatched\nffmpeg_path=$(which ffmpeg)\nmv $ffmpeg_path ${ffmpeg_path}-unpatched\n\nCreate a patched-ffmpeg script\nsave a file named ffmpeg somewhere in your $PATH\n#!/bin/bash\n\n# create a temporary file to put ffmpeg input\nrand=$(shuf -i1-100000 -n1)\nfilename=/tmp/$rand.ffmpegout\n\n# call ffmpeg and redirect stderr to temporary file\nffmpeg-unpatched \"$@\" > /dev/null 2> $filename\n\necho \"This ffmpeg is a bash script calling ffmpeg in order to patch it for tensorflow/issues/20348\"\n\n# output ffmpeg results in an order that is matching tensorflow expectations\ncat $filename | grep -A 100 \"Output\" >&2\ncat $filename | grep -A 1 \"Stream mapping\" >&2\ncat $filename | grep \"frame=\" >&2\n\n# Uncomment this line for bugfixing (to visualize your frames numbers line)\n# cat $filename | grep \"frame=\"\n\nrm -f $filename\n\nexit\n\nRun tensorflow again\nnow it should work\nRevert\nmv ${ffmpeg_path}-unpatched $ffmpeg_path", "body": "I was blocked by this also on my side.\r\nI'm sharing a dirty workaround here (might be useful to someone else), that is \"patching\" ffmpeg (no need to recompile tensorflow).\r\n\r\n**Warning** this is dirty and this may broke your ffmpeg install so you should revert the patch after you did it\r\n\r\n### Save ffmpeg binary as `ffmpeg-unpatched`\r\n```\r\nffmpeg_path=$(which ffmpeg)\r\nmv $ffmpeg_path ${ffmpeg_path}-unpatched\r\n```\r\n\r\n### Create a patched-ffmpeg script\r\n\r\nsave a file named `ffmpeg` somewhere in your `$PATH`\r\n\r\n\r\n```\r\n#!/bin/bash\r\n\r\n# create a temporary file to put ffmpeg input\r\nrand=$(shuf -i1-100000 -n1)\r\nfilename=/tmp/$rand.ffmpegout\r\n\r\n# call ffmpeg and redirect stderr to temporary file\r\nffmpeg-unpatched \"$@\" > /dev/null 2> $filename\r\n\r\necho \"This ffmpeg is a bash script calling ffmpeg in order to patch it for tensorflow/issues/20348\"\r\n\r\n# output ffmpeg results in an order that is matching tensorflow expectations\r\ncat $filename | grep -A 100 \"Output\" >&2\r\ncat $filename | grep -A 1 \"Stream mapping\" >&2\r\ncat $filename | grep \"frame=\" >&2\r\n\r\n# Uncomment this line for bugfixing (to visualize your frames numbers line)\r\n# cat $filename | grep \"frame=\"\r\n\r\nrm -f $filename\r\n\r\nexit\r\n```\r\n\r\n### Run tensorflow again\r\n\r\nnow it should work \r\n\r\n### Revert\r\n```\r\nmv ${ffmpeg_path}-unpatched $ffmpeg_path\r\n```"}