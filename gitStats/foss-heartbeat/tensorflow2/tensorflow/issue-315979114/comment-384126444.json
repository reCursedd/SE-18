{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/384126444", "html_url": "https://github.com/tensorflow/tensorflow/pull/18704#issuecomment-384126444", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18704", "id": 384126444, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDEyNjQ0NA==", "user": {"login": "sabbakumov", "id": 1623466, "node_id": "MDQ6VXNlcjE2MjM0NjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1623466?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sabbakumov", "html_url": "https://github.com/sabbakumov", "followers_url": "https://api.github.com/users/sabbakumov/followers", "following_url": "https://api.github.com/users/sabbakumov/following{/other_user}", "gists_url": "https://api.github.com/users/sabbakumov/gists{/gist_id}", "starred_url": "https://api.github.com/users/sabbakumov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sabbakumov/subscriptions", "organizations_url": "https://api.github.com/users/sabbakumov/orgs", "repos_url": "https://api.github.com/users/sabbakumov/repos", "events_url": "https://api.github.com/users/sabbakumov/events{/privacy}", "received_events_url": "https://api.github.com/users/sabbakumov/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-25T00:58:29Z", "updated_at": "2018-04-25T00:58:29Z", "author_association": "NONE", "body_html": "<p>In this place no. But what I want is to avoid all</p>\n<pre><code>const T&amp; Get() {\n  static T t;\n  return t;\n}\n</code></pre>\n<p>which is all around the codebase (T can be a non trivially destructible) despite the fact that global constructors and destructors are banned.<br>\nOne can change all that static objects to</p>\n<pre><code>const T&amp; Get() {\n  static T* t = new T;\n  return *t;\n}\n</code></pre>\n<p>but I propose a better alternative and would like tensorflow to adopt this pattern.</p>", "body_text": "In this place no. But what I want is to avoid all\nconst T& Get() {\n  static T t;\n  return t;\n}\n\nwhich is all around the codebase (T can be a non trivially destructible) despite the fact that global constructors and destructors are banned.\nOne can change all that static objects to\nconst T& Get() {\n  static T* t = new T;\n  return *t;\n}\n\nbut I propose a better alternative and would like tensorflow to adopt this pattern.", "body": "In this place no. But what I want is to avoid all\r\n```\r\nconst T& Get() {\r\n  static T t;\r\n  return t;\r\n}\r\n```\r\n\r\nwhich is all around the codebase (T can be a non trivially destructible) despite the fact that global constructors and destructors are banned.\r\nOne can change all that static objects to\r\n```\r\nconst T& Get() {\r\n  static T* t = new T;\r\n  return *t;\r\n}\r\n```\r\n\r\nbut I propose a better alternative and would like tensorflow to adopt this pattern."}