{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/299267745", "html_url": "https://github.com/tensorflow/tensorflow/issues/9662#issuecomment-299267745", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9662", "id": 299267745, "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTI2Nzc0NQ==", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-04T18:19:14Z", "updated_at": "2017-05-04T18:19:14Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6965430\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/PKUEcho\">@PKUEcho</a> : So you want to compile essentially an arbitrary binary that uses the C++ API for graph construction for Android?</p>\n<p>This seems more like a bazel question :), but the good news is that that the only difference between compiling for Android or for your host machine should be flags to bazel.</p>\n<p>I suppose you could do one of the following:</p>\n<ul>\n<li>\n<p>Modify <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/benchmark/benchmark_model.cc\"><code>benchmark.cc</code></a> with the code you want, and add <code>//tensorflow/cc:cc_ops</code> to the <code>deps</code> <a href=\"https://github.com/tensorflow/tensorflow/blob/bc456e361d49d1d89a74b80060c70efb51fd7d87/tensorflow/tools/benchmark/BUILD#L33\">section in the BUILD file</a>. And build the binary as per the instructions you pointed to. Those instructions show how to build any bazel target for Android.</p>\n</li>\n<li>\n<p>Compile the shared library for Android using something like:</p>\n</li>\n</ul>\n<pre><code>bazel build -c opt \\\n  --crosstool_top=//external:android/crosstool \\\n  --cpu=armeabi-v7a \\\n  --host_crosstool_top=@bazel_tools//tools/cpp:toolchain \\\n  tensorflow:libtensorflow_cc.so\n</code></pre>\n<p>This would be a shared library that you can link against in any native code you build for Android.</p>\n<p>Hope that helps.</p>", "body_text": "@PKUEcho : So you want to compile essentially an arbitrary binary that uses the C++ API for graph construction for Android?\nThis seems more like a bazel question :), but the good news is that that the only difference between compiling for Android or for your host machine should be flags to bazel.\nI suppose you could do one of the following:\n\n\nModify benchmark.cc with the code you want, and add //tensorflow/cc:cc_ops to the deps section in the BUILD file. And build the binary as per the instructions you pointed to. Those instructions show how to build any bazel target for Android.\n\n\nCompile the shared library for Android using something like:\n\n\nbazel build -c opt \\\n  --crosstool_top=//external:android/crosstool \\\n  --cpu=armeabi-v7a \\\n  --host_crosstool_top=@bazel_tools//tools/cpp:toolchain \\\n  tensorflow:libtensorflow_cc.so\n\nThis would be a shared library that you can link against in any native code you build for Android.\nHope that helps.", "body": "@PKUEcho : So you want to compile essentially an arbitrary binary that uses the C++ API for graph construction for Android?\r\n\r\nThis seems more like a bazel question :), but the good news is that that the only difference between compiling for Android or for your host machine should be flags to bazel.\r\n\r\nI suppose you could do one of the following:\r\n\r\n- Modify [`benchmark.cc`](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/benchmark/benchmark_model.cc) with the code you want, and add `//tensorflow/cc:cc_ops` to the `deps` [section in the BUILD file](https://github.com/tensorflow/tensorflow/blob/bc456e361d49d1d89a74b80060c70efb51fd7d87/tensorflow/tools/benchmark/BUILD#L33). And build the binary as per the instructions you pointed to. Those instructions show how to build any bazel target for Android.\r\n\r\n- Compile the shared library for Android using something like:\r\n```\r\nbazel build -c opt \\\r\n  --crosstool_top=//external:android/crosstool \\\r\n  --cpu=armeabi-v7a \\\r\n  --host_crosstool_top=@bazel_tools//tools/cpp:toolchain \\\r\n  tensorflow:libtensorflow_cc.so\r\n```\r\nThis would be a shared library that you can link against in any native code you build for Android.\r\n\r\nHope that helps.\r\n"}