{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9927", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9927/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9927/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9927/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9927", "id": 228913797, "node_id": "MDU6SXNzdWUyMjg5MTM3OTc=", "number": 9927, "title": "Some small problems with the RNN and seq2seq implementations", "user": {"login": "dugu9sword", "id": 6239743, "node_id": "MDQ6VXNlcjYyMzk3NDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/6239743?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dugu9sword", "html_url": "https://github.com/dugu9sword", "followers_url": "https://api.github.com/users/dugu9sword/followers", "following_url": "https://api.github.com/users/dugu9sword/following{/other_user}", "gists_url": "https://api.github.com/users/dugu9sword/gists{/gist_id}", "starred_url": "https://api.github.com/users/dugu9sword/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dugu9sword/subscriptions", "organizations_url": "https://api.github.com/users/dugu9sword/orgs", "repos_url": "https://api.github.com/users/dugu9sword/repos", "events_url": "https://api.github.com/users/dugu9sword/events{/privacy}", "received_events_url": "https://api.github.com/users/dugu9sword/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-05-16T04:42:56Z", "updated_at": "2018-11-09T23:05:19Z", "closed_at": "2018-11-09T23:05:19Z", "author_association": "NONE", "body_html": "<ol>\n<li>\n<p>In the class <code>AttentionCellWrapper</code> , <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/rnn/python/ops/rnn_cell.py#L1116\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/rnn/python/ops/rnn_cell.py#L1116</a>  , maybe the <code>lstm_output</code> should be replaced by some other token, since the wrapper is not specified for LSTM.</p>\n</li>\n<li>\n<p>In the class <code>Decoder</code>, <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/seq2seq/python/ops/decoder.py#L90\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/seq2seq/python/ops/decoder.py#L90</a> , I think the <code>step()</code> method should not return an output as an instance of <code>BasicDecoderOutput</code>. From an object-oriented-programming view, the <code>BasicDecoder</code> is an inheritance of <code>Decoder</code>, the basic class should not have access to something designed for the inherited class, the same problem exists in the <code>dynamic_decode</code> method.</p>\n</li>\n</ol>", "body_text": "In the class AttentionCellWrapper , https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/rnn/python/ops/rnn_cell.py#L1116  , maybe the lstm_output should be replaced by some other token, since the wrapper is not specified for LSTM.\n\n\nIn the class Decoder, https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/seq2seq/python/ops/decoder.py#L90 , I think the step() method should not return an output as an instance of BasicDecoderOutput. From an object-oriented-programming view, the BasicDecoder is an inheritance of Decoder, the basic class should not have access to something designed for the inherited class, the same problem exists in the dynamic_decode method.", "body": "1. In the class `AttentionCellWrapper` , https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/rnn/python/ops/rnn_cell.py#L1116  , maybe the `lstm_output` should be replaced by some other token, since the wrapper is not specified for LSTM.\r\n\r\n2.  In the class `Decoder`, https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/seq2seq/python/ops/decoder.py#L90 , I think the `step()` method should not return an output as an instance of `BasicDecoderOutput`. From an object-oriented-programming view, the `BasicDecoder` is an inheritance of `Decoder`, the basic class should not have access to something designed for the inherited class, the same problem exists in the `dynamic_decode` method."}