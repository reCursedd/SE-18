{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11812", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11812/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11812/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11812/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/11812", "id": 245990435, "node_id": "MDU6SXNzdWUyNDU5OTA0MzU=", "number": 11812, "title": "InternalError: Blas GEMM launch failed ", "user": {"login": "paolof89", "id": 11927903, "node_id": "MDQ6VXNlcjExOTI3OTAz", "avatar_url": "https://avatars1.githubusercontent.com/u/11927903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paolof89", "html_url": "https://github.com/paolof89", "followers_url": "https://api.github.com/users/paolof89/followers", "following_url": "https://api.github.com/users/paolof89/following{/other_user}", "gists_url": "https://api.github.com/users/paolof89/gists{/gist_id}", "starred_url": "https://api.github.com/users/paolof89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paolof89/subscriptions", "organizations_url": "https://api.github.com/users/paolof89/orgs", "repos_url": "https://api.github.com/users/paolof89/repos", "events_url": "https://api.github.com/users/paolof89/events{/privacy}", "received_events_url": "https://api.github.com/users/paolof89/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2017-07-27T10:07:15Z", "updated_at": "2018-08-17T16:17:08Z", "closed_at": "2018-02-03T01:32:24Z", "author_association": "NONE", "body_html": "<hr>\n<h3>System information</h3>\n<ul>\n<li>\n<p><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:<br>\nDistributor ID: Ubuntu<br>\nDescription:    Ubuntu 16.04.2 LTS<br>\nRelease:        16.04</p>\n</li>\n<li>\n<p><strong>TensorFlow installed from (source or binary)</strong>:<br>\npip3 install tensorflow-gpu</p>\n</li>\n<li>\n<p><strong>TensorFlow version (use command below)</strong>:<br>\nv1.2.0-5-g435cdfc 1.2.1</p>\n</li>\n<li>\n<p><strong>Python version</strong>:<br>\n3.5</p>\n</li>\n<li>\n<p><strong>CUDA/cuDNN version</strong>:<br>\nnvcc: NVIDIA (R) Cuda compiler driver<br>\nCopyright (c) 2005-2016 NVIDIA Corporation<br>\nBuilt on Tue_Jan_10_13:22:03_CST_2017<br>\nCuda compilation tools, release 8.0, V8.0.61</p>\n</li>\n<li>\n<p><strong>GPU model and memory</strong>:<br>\ndescription: 3D controller<br>\nproduct: GK210GL [Tesla K80]<br>\nvendor: NVIDIA Corporation<br>\nphysical id: 0<br>\nbus info: pci@99ba:00:00.0<br>\nversion: a1<br>\nwidth: 64 bits<br>\nclock: 33MHz<br>\ncapabilities: bus_master cap_list<br>\nconfiguration: driver=nvidia latency=0<br>\nresources: iomemory:100-ff iomemory:140-13f irq:24 memory:21000000-21ffffff<br>\nmemory:1000000000-13ffffffff memory:1400000000-1401ffffff</p>\n</li>\n<li>\n<p><strong>Code example</strong>:<br>\nestimator = KerasRegressor(build_fn=self.create_model_function,<br>\ninput_dim=self.input_dim, output_dim=self.output_dim,<br>\n**self.model_parameters)</p>\n</li>\n</ul>\n<p>param_grid = {'epochs': [5]<br>\n,'batch_size': [256]<br>\n,'neurons': [[10, 10, 10]]<br>\n,'dropout': [[0.0, 0.0]]}</p>\n<p>grid = GridSearchCV(estimator=estimator, param_grid=param_grid, n_jobs=-1)</p>\n<h3>Describe the problem</h3>\n<p>The InternalError occurred when I fit a sklearn.GridSearchCV object.<br>\nThe error occurred only if I use GPU and I I use GridSearch object. It works fine on CPU and on single model fitting (using Keras wrapper).</p>\n<h3>Error log</h3>\n<p>File \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/sklearn/model_selection/_search.py\", line 945, in fit<br>\nreturn self._fit(X, y, groups, ParameterGrid(self.param_grid))<br>\nFile \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/sklearn/model_selection/_search.py\", line 564, in _fit<br>\nfor parameters in parameter_iterable<br>\nFile \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/sklearn/externals/joblib/parallel.py\", line 728, in <strong>call</strong><br>\nn_jobs = self._initialize_backend()<br>\nFile \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/sklearn/externals/joblib/parallel.py\", line 540, in _initialize_backend<br>\n**self._backend_args)<br>\nFile \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/sklearn/externals/joblib/_parallel_backends.py\", line 311, in configure<br>\nself._pool = MemmapingPool(n_jobs, **backend_args)<br>\nFile \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/sklearn/externals/joblib/pool.py\", line 600, in <strong>init</strong><br>\nsuper(MemmapingPool, self).<strong>init</strong>(**poolargs)<br>\nFile \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/sklearn/externals/joblib/pool.py\", line 420, in <strong>init</strong><br>\nsuper(PicklingPool, self).<strong>init</strong>(**poolargs)<br>\nFile \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/multiprocessing/pool.py\", line 168, in <strong>init</strong><br>\nself._repopulate_pool()<br>\nFile \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/multiprocessing/pool.py\", line 233, in _repopulate_pool<br>\nw.start()<br>\nFile \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/multiprocessing/process.py\", line 105, in start<br>\nself._popen = self._Popen(self)<br>\nFile \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/multiprocessing/context.py\", line 267, in _Popen<br>\nreturn Popen(process_obj)<br>\nFile \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/multiprocessing/popen_fork.py\", line 20, in <strong>init</strong><br>\nself._launch(process_obj)<br>\nFile \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/multiprocessing/popen_fork.py\", line 74, in _launch<br>\ncode = process_obj._bootstrap()<br>\nFile \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/multiprocessing/process.py\", line 249, in _bootstrap<br>\nself.run()<br>\nFile \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/multiprocessing/process.py\", line 93, in run<br>\nself._target(*self._args, **self._kwargs)<br>\nFile \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/multiprocessing/pool.py\", line 119, in worker<br>\nresult = (True, func(*args, **kwds))<br>\nFile \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/sklearn/externals/joblib/_parallel_backends.py\", line 344, in <strong>call</strong><br>\nreturn self.func(*args, **kwargs)<br>\nFile \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/sklearn/externals/joblib/parallel.py\", line 131, in <strong>call</strong><br>\nreturn [func(*args, **kwargs) for func, args, kwargs in self.items]<br>\nFile \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/sklearn/externals/joblib/parallel.py\", line 131, in <br>\nreturn [func(*args, **kwargs) for func, args, kwargs in self.items]<br>\nFile \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/sklearn/model_selection/_validation.py\", line 238, in _fit_and_score<br>\nestimator.fit(X_train, y_train, **fit_params)<br>\nFile \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/keras/wrappers/scikit_learn.py\", line 136, in fit<br>\nself.model = self.build_fn(**self.filter_sk_params(self.build_fn))<br>\nFile \"/home/aateam/Amplifon/amplifon-adv-planning/src/libs/amplifon_objects.py\", line 176, in create_test_model<br>\nmodel.add(Dense(neurons[0], input_dim=input_dim, activation=last_activation))<br>\nFile \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/keras/models.py\", line 436, in add<br>\nlayer(x)<br>\nFile \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/keras/engine/topology.py\", line 596, in <strong>call</strong><br>\noutput = self.call(inputs, **kwargs)<br>\nFile \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/keras/layers/core.py\", line 838, in call<br>\noutput = K.dot(inputs, self.kernel)<br>\nFile \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/keras/backend/tensorflow_backend.py\", line 978, in dot<br>\nout = tf.matmul(x, y)<br>\nFile \"/home/aateam/.local/lib/python3.5/site-packages/tensorflow/python/ops/math_ops.py\", line 1816, in matmul<br>\na, b, transpose_a=transpose_a, transpose_b=transpose_b, name=name)<br>\nFile \"/home/aateam/.local/lib/python3.5/site-packages/tensorflow/python/ops/gen_math_ops.py\", line 1217, in _mat_mul<br>\ntranspose_b=transpose_b, name=name)<br>\nFile \"/home/aateam/.local/lib/python3.5/site-packages/tensorflow/python/framework/op_def_library.py\", line 767, in apply_op<br>\nop_def=op_def)<br>\nFile \"/home/aateam/.local/lib/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 2506, in create_op<br>\noriginal_op=self._default_original_op, op_def=op_def)<br>\nFile \"/home/aateam/.local/lib/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 1269, in <strong>init</strong><br>\nself._traceback = _extract_stack()</p>\n<p>InternalError (see above for traceback): Blas GEMM launch failed : a.shape=(256, 32), b.shape=(32, 10), m=256, n=10, k=32<br>\n[[Node: dense_1/MatMul = MatMul[T=DT_FLOAT, transpose_a=false, transpose_b=false, _device=\"/job:localhost/replica:0/task:0/gpu:0\"](_arg_dense_1_input_0_0/_15, dense_1/kernel/read)]]<br>\n[[Node: mul_1/_43 = _Recv<a href=\"\">client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device=\"/job:localhost/replica:0/task:0/gpu:0\", send_device_incarnation=1, tensor_name=\"edge_795_mul_1\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/cpu:0\"</a>]]</p>", "body_text": "System information\n\n\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nDistributor ID: Ubuntu\nDescription:    Ubuntu 16.04.2 LTS\nRelease:        16.04\n\n\nTensorFlow installed from (source or binary):\npip3 install tensorflow-gpu\n\n\nTensorFlow version (use command below):\nv1.2.0-5-g435cdfc 1.2.1\n\n\nPython version:\n3.5\n\n\nCUDA/cuDNN version:\nnvcc: NVIDIA (R) Cuda compiler driver\nCopyright (c) 2005-2016 NVIDIA Corporation\nBuilt on Tue_Jan_10_13:22:03_CST_2017\nCuda compilation tools, release 8.0, V8.0.61\n\n\nGPU model and memory:\ndescription: 3D controller\nproduct: GK210GL [Tesla K80]\nvendor: NVIDIA Corporation\nphysical id: 0\nbus info: pci@99ba:00:00.0\nversion: a1\nwidth: 64 bits\nclock: 33MHz\ncapabilities: bus_master cap_list\nconfiguration: driver=nvidia latency=0\nresources: iomemory:100-ff iomemory:140-13f irq:24 memory:21000000-21ffffff\nmemory:1000000000-13ffffffff memory:1400000000-1401ffffff\n\n\nCode example:\nestimator = KerasRegressor(build_fn=self.create_model_function,\ninput_dim=self.input_dim, output_dim=self.output_dim,\n**self.model_parameters)\n\n\nparam_grid = {'epochs': [5]\n,'batch_size': [256]\n,'neurons': [[10, 10, 10]]\n,'dropout': [[0.0, 0.0]]}\ngrid = GridSearchCV(estimator=estimator, param_grid=param_grid, n_jobs=-1)\nDescribe the problem\nThe InternalError occurred when I fit a sklearn.GridSearchCV object.\nThe error occurred only if I use GPU and I I use GridSearch object. It works fine on CPU and on single model fitting (using Keras wrapper).\nError log\nFile \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/sklearn/model_selection/_search.py\", line 945, in fit\nreturn self._fit(X, y, groups, ParameterGrid(self.param_grid))\nFile \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/sklearn/model_selection/_search.py\", line 564, in _fit\nfor parameters in parameter_iterable\nFile \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/sklearn/externals/joblib/parallel.py\", line 728, in call\nn_jobs = self._initialize_backend()\nFile \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/sklearn/externals/joblib/parallel.py\", line 540, in _initialize_backend\n**self._backend_args)\nFile \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/sklearn/externals/joblib/_parallel_backends.py\", line 311, in configure\nself._pool = MemmapingPool(n_jobs, **backend_args)\nFile \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/sklearn/externals/joblib/pool.py\", line 600, in init\nsuper(MemmapingPool, self).init(**poolargs)\nFile \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/sklearn/externals/joblib/pool.py\", line 420, in init\nsuper(PicklingPool, self).init(**poolargs)\nFile \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/multiprocessing/pool.py\", line 168, in init\nself._repopulate_pool()\nFile \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/multiprocessing/pool.py\", line 233, in _repopulate_pool\nw.start()\nFile \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/multiprocessing/process.py\", line 105, in start\nself._popen = self._Popen(self)\nFile \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/multiprocessing/context.py\", line 267, in _Popen\nreturn Popen(process_obj)\nFile \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/multiprocessing/popen_fork.py\", line 20, in init\nself._launch(process_obj)\nFile \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/multiprocessing/popen_fork.py\", line 74, in _launch\ncode = process_obj._bootstrap()\nFile \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/multiprocessing/process.py\", line 249, in _bootstrap\nself.run()\nFile \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/multiprocessing/process.py\", line 93, in run\nself._target(*self._args, **self._kwargs)\nFile \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/multiprocessing/pool.py\", line 119, in worker\nresult = (True, func(*args, **kwds))\nFile \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/sklearn/externals/joblib/_parallel_backends.py\", line 344, in call\nreturn self.func(*args, **kwargs)\nFile \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/sklearn/externals/joblib/parallel.py\", line 131, in call\nreturn [func(*args, **kwargs) for func, args, kwargs in self.items]\nFile \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/sklearn/externals/joblib/parallel.py\", line 131, in \nreturn [func(*args, **kwargs) for func, args, kwargs in self.items]\nFile \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/sklearn/model_selection/_validation.py\", line 238, in _fit_and_score\nestimator.fit(X_train, y_train, **fit_params)\nFile \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/keras/wrappers/scikit_learn.py\", line 136, in fit\nself.model = self.build_fn(**self.filter_sk_params(self.build_fn))\nFile \"/home/aateam/Amplifon/amplifon-adv-planning/src/libs/amplifon_objects.py\", line 176, in create_test_model\nmodel.add(Dense(neurons[0], input_dim=input_dim, activation=last_activation))\nFile \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/keras/models.py\", line 436, in add\nlayer(x)\nFile \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/keras/engine/topology.py\", line 596, in call\noutput = self.call(inputs, **kwargs)\nFile \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/keras/layers/core.py\", line 838, in call\noutput = K.dot(inputs, self.kernel)\nFile \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/keras/backend/tensorflow_backend.py\", line 978, in dot\nout = tf.matmul(x, y)\nFile \"/home/aateam/.local/lib/python3.5/site-packages/tensorflow/python/ops/math_ops.py\", line 1816, in matmul\na, b, transpose_a=transpose_a, transpose_b=transpose_b, name=name)\nFile \"/home/aateam/.local/lib/python3.5/site-packages/tensorflow/python/ops/gen_math_ops.py\", line 1217, in _mat_mul\ntranspose_b=transpose_b, name=name)\nFile \"/home/aateam/.local/lib/python3.5/site-packages/tensorflow/python/framework/op_def_library.py\", line 767, in apply_op\nop_def=op_def)\nFile \"/home/aateam/.local/lib/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 2506, in create_op\noriginal_op=self._default_original_op, op_def=op_def)\nFile \"/home/aateam/.local/lib/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 1269, in init\nself._traceback = _extract_stack()\nInternalError (see above for traceback): Blas GEMM launch failed : a.shape=(256, 32), b.shape=(32, 10), m=256, n=10, k=32\n[[Node: dense_1/MatMul = MatMul[T=DT_FLOAT, transpose_a=false, transpose_b=false, _device=\"/job:localhost/replica:0/task:0/gpu:0\"](_arg_dense_1_input_0_0/_15, dense_1/kernel/read)]]\n[[Node: mul_1/_43 = _Recvclient_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device=\"/job:localhost/replica:0/task:0/gpu:0\", send_device_incarnation=1, tensor_name=\"edge_795_mul_1\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/cpu:0\"]]", "body": "------------------------\r\n\r\n### System information\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nDistributor ID: Ubuntu\r\nDescription:    Ubuntu 16.04.2 LTS\r\nRelease:        16.04\r\n- **TensorFlow installed from (source or binary)**:\r\npip3 install tensorflow-gpu\r\n\r\n- **TensorFlow version (use command below)**:\r\nv1.2.0-5-g435cdfc 1.2.1\r\n\r\n- **Python version**: \r\n3.5\r\n\r\n- **CUDA/cuDNN version**:\r\nnvcc: NVIDIA (R) Cuda compiler driver\r\nCopyright (c) 2005-2016 NVIDIA Corporation\r\nBuilt on Tue_Jan_10_13:22:03_CST_2017\r\nCuda compilation tools, release 8.0, V8.0.61\r\n\r\n- **GPU model and memory**:\r\n description: 3D controller\r\n          product: GK210GL [Tesla K80]\r\n          vendor: NVIDIA Corporation\r\n          physical id: 0\r\n          bus info: pci@99ba:00:00.0\r\n          version: a1\r\n          width: 64 bits\r\n          clock: 33MHz\r\n          capabilities: bus_master cap_list\r\n          configuration: driver=nvidia latency=0\r\n          resources: iomemory:100-ff iomemory:140-13f irq:24 memory:21000000-21ffffff \r\n          memory:1000000000-13ffffffff memory:1400000000-1401ffffff\r\n\r\n- **Code example**:\r\nestimator = KerasRegressor(build_fn=self.create_model_function,\r\n                                   input_dim=self.input_dim, output_dim=self.output_dim,\r\n                                   **self.model_parameters)\r\n\r\nparam_grid = {'epochs': [5]\r\n              ,'batch_size': [256]\r\n              ,'neurons': [[10, 10, 10]]\r\n              ,'dropout': [[0.0, 0.0]]}\r\n\r\ngrid = GridSearchCV(estimator=estimator, param_grid=param_grid, n_jobs=-1)\r\n\r\n\r\n### Describe the problem\r\nThe InternalError occurred when I fit a sklearn.GridSearchCV object.\r\nThe error occurred only if I use GPU and I I use GridSearch object. It works fine on CPU and on single model fitting (using Keras wrapper).\r\n\r\n\r\n### Error log\r\nFile \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/sklearn/model_selection/_search.py\", line 945, in fit\r\n    return self._fit(X, y, groups, ParameterGrid(self.param_grid))\r\n  File \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/sklearn/model_selection/_search.py\", line 564, in _fit\r\n    for parameters in parameter_iterable\r\n  File \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/sklearn/externals/joblib/parallel.py\", line 728, in __call__\r\n    n_jobs = self._initialize_backend()\r\n  File \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/sklearn/externals/joblib/parallel.py\", line 540, in _initialize_backend\r\n    **self._backend_args)\r\n  File \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/sklearn/externals/joblib/_parallel_backends.py\", line 311, in configure\r\n    self._pool = MemmapingPool(n_jobs, **backend_args)\r\n  File \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/sklearn/externals/joblib/pool.py\", line 600, in __init__\r\n    super(MemmapingPool, self).__init__(**poolargs)\r\n  File \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/sklearn/externals/joblib/pool.py\", line 420, in __init__\r\n    super(PicklingPool, self).__init__(**poolargs)\r\n  File \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/multiprocessing/pool.py\", line 168, in __init__\r\n    self._repopulate_pool()\r\n  File \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/multiprocessing/pool.py\", line 233, in _repopulate_pool\r\n    w.start()\r\n  File \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/multiprocessing/process.py\", line 105, in start\r\n    self._popen = self._Popen(self)\r\n  File \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/multiprocessing/context.py\", line 267, in _Popen\r\n    return Popen(process_obj)\r\n  File \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/multiprocessing/popen_fork.py\", line 20, in __init__\r\n    self._launch(process_obj)\r\n  File \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/multiprocessing/popen_fork.py\", line 74, in _launch\r\n    code = process_obj._bootstrap()\r\n  File \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/multiprocessing/process.py\", line 249, in _bootstrap\r\n    self.run()\r\n  File \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/multiprocessing/process.py\", line 93, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/multiprocessing/pool.py\", line 119, in worker\r\n    result = (True, func(*args, **kwds))\r\n  File \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/sklearn/externals/joblib/_parallel_backends.py\", line 344, in __call__\r\n    return self.func(*args, **kwargs)\r\n  File \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/sklearn/externals/joblib/parallel.py\", line 131, in __call__\r\n    return [func(*args, **kwargs) for func, args, kwargs in self.items]\r\n  File \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/sklearn/externals/joblib/parallel.py\", line 131, in <listcomp>\r\n    return [func(*args, **kwargs) for func, args, kwargs in self.items]\r\n  File \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/sklearn/model_selection/_validation.py\", line 238, in _fit_and_score\r\n    estimator.fit(X_train, y_train, **fit_params)\r\n  File \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/keras/wrappers/scikit_learn.py\", line 136, in fit\r\n    self.model = self.build_fn(**self.filter_sk_params(self.build_fn))\r\n  File \"/home/aateam/Amplifon/amplifon-adv-planning/src/libs/amplifon_objects.py\", line 176, in create_test_model\r\n    model.add(Dense(neurons[0], input_dim=input_dim, activation=last_activation))\r\n  File \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/keras/models.py\", line 436, in add\r\n    layer(x)\r\n  File \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/keras/engine/topology.py\", line 596, in __call__\r\n    output = self.call(inputs, **kwargs)\r\n  File \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/keras/layers/core.py\", line 838, in call\r\n    output = K.dot(inputs, self.kernel)\r\n  File \"/home/aateam/.conda/envs/amplifon-dev3/lib/python3.5/site-packages/keras/backend/tensorflow_backend.py\", line 978, in dot\r\n    out = tf.matmul(x, y)\r\n  File \"/home/aateam/.local/lib/python3.5/site-packages/tensorflow/python/ops/math_ops.py\", line 1816, in matmul\r\n    a, b, transpose_a=transpose_a, transpose_b=transpose_b, name=name)\r\n  File \"/home/aateam/.local/lib/python3.5/site-packages/tensorflow/python/ops/gen_math_ops.py\", line 1217, in _mat_mul\r\n    transpose_b=transpose_b, name=name)\r\n  File \"/home/aateam/.local/lib/python3.5/site-packages/tensorflow/python/framework/op_def_library.py\", line 767, in apply_op\r\n    op_def=op_def)\r\n  File \"/home/aateam/.local/lib/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 2506, in create_op\r\n    original_op=self._default_original_op, op_def=op_def)\r\n  File \"/home/aateam/.local/lib/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 1269, in __init__\r\n    self._traceback = _extract_stack()\r\n\r\nInternalError (see above for traceback): Blas GEMM launch failed : a.shape=(256, 32), b.shape=(32, 10), m=256, n=10, k=32\r\n         [[Node: dense_1/MatMul = MatMul[T=DT_FLOAT, transpose_a=false, transpose_b=false, _device=\"/job:localhost/replica:0/task:0/gpu:0\"](_arg_dense_1_input_0_0/_15, dense_1/kernel/read)]]\r\n         [[Node: mul_1/_43 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device=\"/job:localhost/replica:0/task:0/gpu:0\", send_device_incarnation=1, tensor_name=\"edge_795_mul_1\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/cpu:0\"]()]]\r\n\r\n"}