{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/372505470", "html_url": "https://github.com/tensorflow/tensorflow/issues/17654#issuecomment-372505470", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17654", "id": 372505470, "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjUwNTQ3MA==", "user": {"login": "ozabluda", "id": 14060629, "node_id": "MDQ6VXNlcjE0MDYwNjI5", "avatar_url": "https://avatars3.githubusercontent.com/u/14060629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ozabluda", "html_url": "https://github.com/ozabluda", "followers_url": "https://api.github.com/users/ozabluda/followers", "following_url": "https://api.github.com/users/ozabluda/following{/other_user}", "gists_url": "https://api.github.com/users/ozabluda/gists{/gist_id}", "starred_url": "https://api.github.com/users/ozabluda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ozabluda/subscriptions", "organizations_url": "https://api.github.com/users/ozabluda/orgs", "repos_url": "https://api.github.com/users/ozabluda/repos", "events_url": "https://api.github.com/users/ozabluda/events{/privacy}", "received_events_url": "https://api.github.com/users/ozabluda/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-13T00:22:56Z", "updated_at": "2018-03-13T00:22:56Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Which documentation is it? As far as I can tell, the difference is entirely due to difference in padding. In the case of 1x1 input, the padded input looks like so:</p>\n<pre><code>0 0 0\n0 1 0\n0 0 0\n</code></pre>\n<p>but in case of 3x3 input, the padded input looks like so:</p>\n<pre><code>1 1 0 0\n1 1 0 0\n0 0 0 0\n0 0 0 0\n</code></pre>\n<p>while I expected it to look like so (and this is indeed how it is with <code>strides=1</code>):</p>\n<pre><code>0 0 0 0 \n0 1 1 0\n0 1 1 0\n0 0 0 0\n</code></pre>\n<p>An easy way to see it is by adding <code>w = np.power(2, w)</code></p>\n<p>The closest I see documentation-wise is</p>\n<blockquote>\n<p>padded_input is obtained by zero padding the input using an effective spatial filter shape of (spatial_filter_shape-1) * dilation_rate + 1 and output striding strides as described in the <a href=\"https://www.tensorflow.org/api_docs/python/tf/nn/convolution\" rel=\"nofollow\">comment here</a>.</p>\n</blockquote>\n<p><a href=\"https://www.tensorflow.org/api_docs/python/tf/nn/convolution\" rel=\"nofollow\">https://www.tensorflow.org/api_docs/python/tf/nn/convolution</a></p>\n<p>but that link is broken</p>", "body_text": "Which documentation is it? As far as I can tell, the difference is entirely due to difference in padding. In the case of 1x1 input, the padded input looks like so:\n0 0 0\n0 1 0\n0 0 0\n\nbut in case of 3x3 input, the padded input looks like so:\n1 1 0 0\n1 1 0 0\n0 0 0 0\n0 0 0 0\n\nwhile I expected it to look like so (and this is indeed how it is with strides=1):\n0 0 0 0 \n0 1 1 0\n0 1 1 0\n0 0 0 0\n\nAn easy way to see it is by adding w = np.power(2, w)\nThe closest I see documentation-wise is\n\npadded_input is obtained by zero padding the input using an effective spatial filter shape of (spatial_filter_shape-1) * dilation_rate + 1 and output striding strides as described in the comment here.\n\nhttps://www.tensorflow.org/api_docs/python/tf/nn/convolution\nbut that link is broken", "body": "Which documentation is it? As far as I can tell, the difference is entirely due to difference in padding. In the case of 1x1 input, the padded input looks like so:\r\n```\r\n0 0 0\r\n0 1 0\r\n0 0 0\r\n```\r\nbut in case of 3x3 input, the padded input looks like so:\r\n```\r\n1 1 0 0\r\n1 1 0 0\r\n0 0 0 0\r\n0 0 0 0\r\n```\r\nwhile I expected it to look like so (and this is indeed how it is with `strides=1`):\r\n```\r\n0 0 0 0 \r\n0 1 1 0\r\n0 1 1 0\r\n0 0 0 0\r\n```\r\nAn easy way to see it is by adding `w = np.power(2, w)`\r\n\r\nThe closest I see documentation-wise is\r\n>padded_input is obtained by zero padding the input using an effective spatial filter shape of (spatial_filter_shape-1) * dilation_rate + 1 and output striding strides as described in the [comment here](https://www.tensorflow.org/api_docs/python/tf/nn/convolution).\r\n\r\nhttps://www.tensorflow.org/api_docs/python/tf/nn/convolution\r\n\r\nbut that link is broken"}