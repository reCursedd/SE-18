{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21744", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21744/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21744/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21744/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21744", "id": 352316194, "node_id": "MDU6SXNzdWUzNTIzMTYxOTQ=", "number": 21744, "title": "Loading contrib ops in Windows via C API", "user": {"login": "adamAlnatsheh", "id": 29709248, "node_id": "MDQ6VXNlcjI5NzA5MjQ4", "avatar_url": "https://avatars2.githubusercontent.com/u/29709248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamAlnatsheh", "html_url": "https://github.com/adamAlnatsheh", "followers_url": "https://api.github.com/users/adamAlnatsheh/followers", "following_url": "https://api.github.com/users/adamAlnatsheh/following{/other_user}", "gists_url": "https://api.github.com/users/adamAlnatsheh/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamAlnatsheh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamAlnatsheh/subscriptions", "organizations_url": "https://api.github.com/users/adamAlnatsheh/orgs", "repos_url": "https://api.github.com/users/adamAlnatsheh/repos", "events_url": "https://api.github.com/users/adamAlnatsheh/events{/privacy}", "received_events_url": "https://api.github.com/users/adamAlnatsheh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "robieta", "id": 13089297, "node_id": "MDQ6VXNlcjEzMDg5Mjk3", "avatar_url": "https://avatars0.githubusercontent.com/u/13089297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robieta", "html_url": "https://github.com/robieta", "followers_url": "https://api.github.com/users/robieta/followers", "following_url": "https://api.github.com/users/robieta/following{/other_user}", "gists_url": "https://api.github.com/users/robieta/gists{/gist_id}", "starred_url": "https://api.github.com/users/robieta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robieta/subscriptions", "organizations_url": "https://api.github.com/users/robieta/orgs", "repos_url": "https://api.github.com/users/robieta/repos", "events_url": "https://api.github.com/users/robieta/events{/privacy}", "received_events_url": "https://api.github.com/users/robieta/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "robieta", "id": 13089297, "node_id": "MDQ6VXNlcjEzMDg5Mjk3", "avatar_url": "https://avatars0.githubusercontent.com/u/13089297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robieta", "html_url": "https://github.com/robieta", "followers_url": "https://api.github.com/users/robieta/followers", "following_url": "https://api.github.com/users/robieta/following{/other_user}", "gists_url": "https://api.github.com/users/robieta/gists{/gist_id}", "starred_url": "https://api.github.com/users/robieta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robieta/subscriptions", "organizations_url": "https://api.github.com/users/robieta/orgs", "repos_url": "https://api.github.com/users/robieta/repos", "events_url": "https://api.github.com/users/robieta/events{/privacy}", "received_events_url": "https://api.github.com/users/robieta/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-08-20T22:16:36Z", "updated_at": "2018-11-11T18:41:01Z", "closed_at": null, "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:<br>\nNo</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:<br>\nWindows 10</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>:<br>\nN/A</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:<br>\nbinary: <a href=\"https://storage.googleapis.com/tensorflow/libtensorflow/libtensorflow-cpu-windows-x86_64-1.10.0.zip\" rel=\"nofollow\">https://storage.googleapis.com/tensorflow/libtensorflow/libtensorflow-cpu-windows-x86_64-1.10.0.zip</a></li>\n<li><strong>TensorFlow version (use command below)</strong>:<br>\n1.10.0</li>\n<li><strong>Python version</strong>:<br>\n3.6.5</li>\n<li><strong>Bazel version (if compiling from source)</strong>:<br>\nN/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:<br>\nMSVC 14.15</li>\n<li><strong>CUDA/cuDNN version</strong>:<br>\nN/A</li>\n<li><strong>GPU model and memory</strong>:<br>\nN/A</li>\n<li><strong>Exact command to reproduce</strong>:<br>\ndescribed below</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I am trying to load and run a graph with contrib ops (specifically lstm ops) trained in python via the C API. On Linux and Mac, I am able to do this using <code>TF_LoadLibrary</code> and the <code>_lstm_ops.so</code> from the python wheel. However, doing the same on Windows yields an error status <code>&lt;path to _lstm_ops.dll&gt; not found</code>, and I am sure I entered the global path correctly (and thus am confused why the error seems to be with finding the library itself, not with registering the ops).  Is there something I am missing? Any tips/suggestions someone can provide?</p>\n<p>Further, is there a better/more supported way of doing this in general?</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nNo\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nWindows 10\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:\nN/A\nTensorFlow installed from (source or binary):\nbinary: https://storage.googleapis.com/tensorflow/libtensorflow/libtensorflow-cpu-windows-x86_64-1.10.0.zip\nTensorFlow version (use command below):\n1.10.0\nPython version:\n3.6.5\nBazel version (if compiling from source):\nN/A\nGCC/Compiler version (if compiling from source):\nMSVC 14.15\nCUDA/cuDNN version:\nN/A\nGPU model and memory:\nN/A\nExact command to reproduce:\ndescribed below\n\nDescribe the problem\nI am trying to load and run a graph with contrib ops (specifically lstm ops) trained in python via the C API. On Linux and Mac, I am able to do this using TF_LoadLibrary and the _lstm_ops.so from the python wheel. However, doing the same on Windows yields an error status <path to _lstm_ops.dll> not found, and I am sure I entered the global path correctly (and thus am confused why the error seems to be with finding the library itself, not with registering the ops).  Is there something I am missing? Any tips/suggestions someone can provide?\nFurther, is there a better/more supported way of doing this in general?", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nNo\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nWindows 10\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**:\r\nN/A\r\n- **TensorFlow installed from (source or binary)**:\r\nbinary: https://storage.googleapis.com/tensorflow/libtensorflow/libtensorflow-cpu-windows-x86_64-1.10.0.zip\r\n- **TensorFlow version (use command below)**:\r\n1.10.0\r\n- **Python version**:\r\n3.6.5\r\n- **Bazel version (if compiling from source)**:\r\nN/A\r\n- **GCC/Compiler version (if compiling from source)**:\r\nMSVC 14.15\r\n- **CUDA/cuDNN version**:\r\nN/A\r\n- **GPU model and memory**:\r\nN/A\r\n- **Exact command to reproduce**:\r\ndescribed below\r\n\r\n### Describe the problem\r\nI am trying to load and run a graph with contrib ops (specifically lstm ops) trained in python via the C API. On Linux and Mac, I am able to do this using `TF_LoadLibrary` and the `_lstm_ops.so` from the python wheel. However, doing the same on Windows yields an error status `<path to _lstm_ops.dll> not found`, and I am sure I entered the global path correctly (and thus am confused why the error seems to be with finding the library itself, not with registering the ops).  Is there something I am missing? Any tips/suggestions someone can provide?\r\n\r\nFurther, is there a better/more supported way of doing this in general?\r\n"}