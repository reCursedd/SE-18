{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/315030061", "html_url": "https://github.com/tensorflow/tensorflow/issues/6007#issuecomment-315030061", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6007", "id": 315030061, "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTAzMDA2MQ==", "user": {"login": "javidcf", "id": 1098280, "node_id": "MDQ6VXNlcjEwOTgyODA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1098280?v=4", "gravatar_id": "", "url": "https://api.github.com/users/javidcf", "html_url": "https://github.com/javidcf", "followers_url": "https://api.github.com/users/javidcf/followers", "following_url": "https://api.github.com/users/javidcf/following{/other_user}", "gists_url": "https://api.github.com/users/javidcf/gists{/gist_id}", "starred_url": "https://api.github.com/users/javidcf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/javidcf/subscriptions", "organizations_url": "https://api.github.com/users/javidcf/orgs", "repos_url": "https://api.github.com/users/javidcf/repos", "events_url": "https://api.github.com/users/javidcf/events{/privacy}", "received_events_url": "https://api.github.com/users/javidcf/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-13T09:49:54Z", "updated_at": "2017-07-13T09:49:54Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=59132\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/albertz\">@albertz</a> Thanks for the info. I guess the complete snippet to reuse an existing name scope would then be:</p>\n<pre><code>current_name_scope = tf.get_default_graph().get_name_scope()\nif len(current_name_scope) &gt; 0:\n    current_name_scope += \"/\"\nwith tf.name_scope(\"{}my_scope/\".format(current_name_scope)):\n    # ...\n</code></pre>\n<p>Although as you said <code>tf.variable_scope</code> / <code>tf.get_variable</code> work differently. In fact, if you do:</p>\n<pre><code>with tf.name_scope(\"a\"):  # or tf.variable_scope(\"a\")\n    pass\n\nwith tf.variable_scope(\"a\"):\n    v = tf.get_variable(\"v\", 0)\n    v2 = v * 2\n\nprint(v.op.name, v2.op.name)\n</code></pre>\n<p>You get <code>a/v a_1/mul</code>, which I think is rather confusing (I'd expect that everything I create within a scope actually ends up in the same scope).</p>", "body_text": "@albertz Thanks for the info. I guess the complete snippet to reuse an existing name scope would then be:\ncurrent_name_scope = tf.get_default_graph().get_name_scope()\nif len(current_name_scope) > 0:\n    current_name_scope += \"/\"\nwith tf.name_scope(\"{}my_scope/\".format(current_name_scope)):\n    # ...\n\nAlthough as you said tf.variable_scope / tf.get_variable work differently. In fact, if you do:\nwith tf.name_scope(\"a\"):  # or tf.variable_scope(\"a\")\n    pass\n\nwith tf.variable_scope(\"a\"):\n    v = tf.get_variable(\"v\", 0)\n    v2 = v * 2\n\nprint(v.op.name, v2.op.name)\n\nYou get a/v a_1/mul, which I think is rather confusing (I'd expect that everything I create within a scope actually ends up in the same scope).", "body": "@albertz Thanks for the info. I guess the complete snippet to reuse an existing name scope would then be:\r\n\r\n```\r\ncurrent_name_scope = tf.get_default_graph().get_name_scope()\r\nif len(current_name_scope) > 0:\r\n    current_name_scope += \"/\"\r\nwith tf.name_scope(\"{}my_scope/\".format(current_name_scope)):\r\n    # ...\r\n```\r\n\r\nAlthough as you said `tf.variable_scope` / `tf.get_variable` work differently. In fact, if you do:\r\n\r\n```\r\nwith tf.name_scope(\"a\"):  # or tf.variable_scope(\"a\")\r\n    pass\r\n\r\nwith tf.variable_scope(\"a\"):\r\n    v = tf.get_variable(\"v\", 0)\r\n    v2 = v * 2\r\n\r\nprint(v.op.name, v2.op.name)\r\n```\r\n\r\nYou get `a/v a_1/mul`, which I think is rather confusing (I'd expect that everything I create within a scope actually ends up in the same scope)."}