{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/268901400", "html_url": "https://github.com/tensorflow/tensorflow/issues/6007#issuecomment-268901400", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6007", "id": 268901400, "node_id": "MDEyOklzc3VlQ29tbWVudDI2ODkwMTQwMA==", "user": {"login": "lukaszkaiser", "id": 684901, "node_id": "MDQ6VXNlcjY4NDkwMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/684901?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukaszkaiser", "html_url": "https://github.com/lukaszkaiser", "followers_url": "https://api.github.com/users/lukaszkaiser/followers", "following_url": "https://api.github.com/users/lukaszkaiser/following{/other_user}", "gists_url": "https://api.github.com/users/lukaszkaiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukaszkaiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukaszkaiser/subscriptions", "organizations_url": "https://api.github.com/users/lukaszkaiser/orgs", "repos_url": "https://api.github.com/users/lukaszkaiser/repos", "events_url": "https://api.github.com/users/lukaszkaiser/events{/privacy}", "received_events_url": "https://api.github.com/users/lukaszkaiser/received_events", "type": "User", "site_admin": false}, "created_at": "2016-12-22T22:07:38Z", "updated_at": "2016-12-22T22:07:38Z", "author_association": "MEMBER", "body_html": "<p>I think there are 2 good ways to structure TF models.</p>\n<ul>\n<li>\n<p>The functional / scoping way. Everything is a function, create variables inside (don't worry about creating them beforehand). I use this a lot for research as it makes it super-easy to just put a new layer here and there. It is the basis of <a href=\"https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/slim\">tensorflow-slim</a> and there are many examples in the <a href=\"https://github.com/tensorflow/models/tree/master/slim\">slim models library</a>, e.g., take a look at <a href=\"https://github.com/tensorflow/models/blob/master/slim/nets/alexnet.py\">AlexNet</a>.</p>\n</li>\n<li>\n<p>The OO way. Every layer is an object, you need to define composition models. We're still working on putting it in core TF (see tf.layers implementation, a lot is there already). But, in essence, it's the same ideas as <a href=\"https://github.com/fchollet/keras\">Keras</a> and its conventions.</p>\n</li>\n</ul>\n<p>Hope that helps!</p>", "body_text": "I think there are 2 good ways to structure TF models.\n\n\nThe functional / scoping way. Everything is a function, create variables inside (don't worry about creating them beforehand). I use this a lot for research as it makes it super-easy to just put a new layer here and there. It is the basis of tensorflow-slim and there are many examples in the slim models library, e.g., take a look at AlexNet.\n\n\nThe OO way. Every layer is an object, you need to define composition models. We're still working on putting it in core TF (see tf.layers implementation, a lot is there already). But, in essence, it's the same ideas as Keras and its conventions.\n\n\nHope that helps!", "body": "I think there are 2 good ways to structure TF models.\r\n\r\n* The functional / scoping way. Everything is a function, create variables inside (don't worry about creating them beforehand). I use this a lot for research as it makes it super-easy to just put a new layer here and there. It is the basis of [tensorflow-slim](https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/slim) and there are many examples in the [slim models library](https://github.com/tensorflow/models/tree/master/slim), e.g., take a look at [AlexNet](https://github.com/tensorflow/models/blob/master/slim/nets/alexnet.py).\r\n\r\n* The OO way. Every layer is an object, you need to define composition models. We're still working on putting it in core TF (see tf.layers implementation, a lot is there already). But, in essence, it's the same ideas as [Keras](https://github.com/fchollet/keras) and its conventions.\r\n\r\nHope that helps!"}