{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/274352866", "html_url": "https://github.com/tensorflow/tensorflow/issues/3270#issuecomment-274352866", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3270", "id": 274352866, "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDM1Mjg2Ng==", "user": {"login": "chrisrn", "id": 12279420, "node_id": "MDQ6VXNlcjEyMjc5NDIw", "avatar_url": "https://avatars1.githubusercontent.com/u/12279420?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisrn", "html_url": "https://github.com/chrisrn", "followers_url": "https://api.github.com/users/chrisrn/followers", "following_url": "https://api.github.com/users/chrisrn/following{/other_user}", "gists_url": "https://api.github.com/users/chrisrn/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisrn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisrn/subscriptions", "organizations_url": "https://api.github.com/users/chrisrn/orgs", "repos_url": "https://api.github.com/users/chrisrn/repos", "events_url": "https://api.github.com/users/chrisrn/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisrn/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-22T19:28:34Z", "updated_at": "2017-01-31T19:48:00Z", "author_association": "NONE", "body_html": "<p>Same problem here. The restoration is working on both models but the results are bad. Take a look:</p>\n<pre><code>with tf.variable_scope('localization'):\n            binarylogits, _, softmax_weights, convoluted = inception.inference(images, num_classes, \n                                                                            restore_loc=True, restore_rec=False)  \n        \nnum_classes = 102\nwith tf.variable_scope('recognition'):\n            _, logits, _, _ = inception.inference(bbox_image, num_classes, \n                                                             restore_loc=False, restore_rec=True)  \n\nvariables_to_restore = tf.get_collection(\n            slim.variables.VARIABLES_TO_RESTORE)\nloc_varlist = {v.name[13:][:-2]: v \n                        for v in variables_to_restore if v.name[:12]=='localization'}\nrec_varlist = {v.name[12:][:-2]: v \n                        for v in variables_to_restore if v.name[:11]=='recognition'}\n        \nloc_saver = tf.train.Saver(var_list=loc_varlist)\nrec_saver = tf.train.Saver(var_list=rec_varlist)\n        \nloc_saver.restore(sess, FLAGS.localization_model_checkpoint_path)\nprint('%s: Pre-trained model restored from %s' %\n                    (datetime.now(), FLAGS.localization_model_checkpoint_path))\n\nrec_saver.restore(sess, FLAGS.recognition_model_checkpoint_path)\nprint('%s: Pre-trained model restored from %s' %\n                    (datetime.now(), FLAGS.recognition_model_checkpoint_path))\n</code></pre>\n<p>The recognition model doesn't give the results I am receiving when I run it without the localization model.</p>", "body_text": "Same problem here. The restoration is working on both models but the results are bad. Take a look:\nwith tf.variable_scope('localization'):\n            binarylogits, _, softmax_weights, convoluted = inception.inference(images, num_classes, \n                                                                            restore_loc=True, restore_rec=False)  \n        \nnum_classes = 102\nwith tf.variable_scope('recognition'):\n            _, logits, _, _ = inception.inference(bbox_image, num_classes, \n                                                             restore_loc=False, restore_rec=True)  \n\nvariables_to_restore = tf.get_collection(\n            slim.variables.VARIABLES_TO_RESTORE)\nloc_varlist = {v.name[13:][:-2]: v \n                        for v in variables_to_restore if v.name[:12]=='localization'}\nrec_varlist = {v.name[12:][:-2]: v \n                        for v in variables_to_restore if v.name[:11]=='recognition'}\n        \nloc_saver = tf.train.Saver(var_list=loc_varlist)\nrec_saver = tf.train.Saver(var_list=rec_varlist)\n        \nloc_saver.restore(sess, FLAGS.localization_model_checkpoint_path)\nprint('%s: Pre-trained model restored from %s' %\n                    (datetime.now(), FLAGS.localization_model_checkpoint_path))\n\nrec_saver.restore(sess, FLAGS.recognition_model_checkpoint_path)\nprint('%s: Pre-trained model restored from %s' %\n                    (datetime.now(), FLAGS.recognition_model_checkpoint_path))\n\nThe recognition model doesn't give the results I am receiving when I run it without the localization model.", "body": "Same problem here. The restoration is working on both models but the results are bad. Take a look:\r\n\r\n```\r\nwith tf.variable_scope('localization'):\r\n            binarylogits, _, softmax_weights, convoluted = inception.inference(images, num_classes, \r\n                                                                            restore_loc=True, restore_rec=False)  \r\n        \r\nnum_classes = 102\r\nwith tf.variable_scope('recognition'):\r\n            _, logits, _, _ = inception.inference(bbox_image, num_classes, \r\n                                                             restore_loc=False, restore_rec=True)  \r\n\r\nvariables_to_restore = tf.get_collection(\r\n            slim.variables.VARIABLES_TO_RESTORE)\r\nloc_varlist = {v.name[13:][:-2]: v \r\n                        for v in variables_to_restore if v.name[:12]=='localization'}\r\nrec_varlist = {v.name[12:][:-2]: v \r\n                        for v in variables_to_restore if v.name[:11]=='recognition'}\r\n        \r\nloc_saver = tf.train.Saver(var_list=loc_varlist)\r\nrec_saver = tf.train.Saver(var_list=rec_varlist)\r\n        \r\nloc_saver.restore(sess, FLAGS.localization_model_checkpoint_path)\r\nprint('%s: Pre-trained model restored from %s' %\r\n                    (datetime.now(), FLAGS.localization_model_checkpoint_path))\r\n\r\nrec_saver.restore(sess, FLAGS.recognition_model_checkpoint_path)\r\nprint('%s: Pre-trained model restored from %s' %\r\n                    (datetime.now(), FLAGS.recognition_model_checkpoint_path))\r\n```\r\n\r\nThe recognition model doesn't give the results I am receiving when I run it without the localization model."}