{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22286", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22286/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22286/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22286/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/22286", "id": 360487360, "node_id": "MDExOlB1bGxSZXF1ZXN0MjE1NzM2Mzgw", "number": 22286, "title": "[Intel MKL] Fixes for unit test failures", "user": {"login": "nhasabni", "id": 22304502, "node_id": "MDQ6VXNlcjIyMzA0NTAy", "avatar_url": "https://avatars0.githubusercontent.com/u/22304502?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nhasabni", "html_url": "https://github.com/nhasabni", "followers_url": "https://api.github.com/users/nhasabni/followers", "following_url": "https://api.github.com/users/nhasabni/following{/other_user}", "gists_url": "https://api.github.com/users/nhasabni/gists{/gist_id}", "starred_url": "https://api.github.com/users/nhasabni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nhasabni/subscriptions", "organizations_url": "https://api.github.com/users/nhasabni/orgs", "repos_url": "https://api.github.com/users/nhasabni/repos", "events_url": "https://api.github.com/users/nhasabni/events{/privacy}", "received_events_url": "https://api.github.com/users/nhasabni/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}, {"id": 987666414, "node_id": "MDU6TGFiZWw5ODc2NjY0MTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/ready%20to%20pull", "name": "ready to pull", "color": "2cd643", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "yifeif", "id": 1192265, "node_id": "MDQ6VXNlcjExOTIyNjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1192265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yifeif", "html_url": "https://github.com/yifeif", "followers_url": "https://api.github.com/users/yifeif/followers", "following_url": "https://api.github.com/users/yifeif/following{/other_user}", "gists_url": "https://api.github.com/users/yifeif/gists{/gist_id}", "starred_url": "https://api.github.com/users/yifeif/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yifeif/subscriptions", "organizations_url": "https://api.github.com/users/yifeif/orgs", "repos_url": "https://api.github.com/users/yifeif/repos", "events_url": "https://api.github.com/users/yifeif/events{/privacy}", "received_events_url": "https://api.github.com/users/yifeif/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "yifeif", "id": 1192265, "node_id": "MDQ6VXNlcjExOTIyNjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1192265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yifeif", "html_url": "https://github.com/yifeif", "followers_url": "https://api.github.com/users/yifeif/followers", "following_url": "https://api.github.com/users/yifeif/following{/other_user}", "gists_url": "https://api.github.com/users/yifeif/gists{/gist_id}", "starred_url": "https://api.github.com/users/yifeif/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yifeif/subscriptions", "organizations_url": "https://api.github.com/users/yifeif/orgs", "repos_url": "https://api.github.com/users/yifeif/repos", "events_url": "https://api.github.com/users/yifeif/events{/privacy}", "received_events_url": "https://api.github.com/users/yifeif/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 24, "created_at": "2018-09-15T00:01:58Z", "updated_at": "2018-09-27T20:06:42Z", "closed_at": "2018-09-27T20:06:41Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/22286", "html_url": "https://github.com/tensorflow/tensorflow/pull/22286", "diff_url": "https://github.com/tensorflow/tensorflow/pull/22286.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/22286.patch"}, "body_html": "<ol>\n<li>\n<p>Changes in partitioned_function_ops.cc are for passing<br>\nGlobal OpRegistry as default_registry in PartitionedFunction op</p>\n<p>This fix addresses failure in MKL layout pass when PartitionedFunction<br>\nop calls graph optimization passes. The problem was that the function<br>\nlibrary definition that is used to create function graph and corresponding<br>\nsubgraphs after partitioning did not use global OpRegistry as the<br>\ndefault OpRegistry used for look of operator names. Because of that,<br>\nstandard operators such as \"Const\" were not available to graph passes.</p>\n</li>\n<li>\n<p>Changes in mkl_cpu_allocator.h are to address failure in<br>\nmkl_cpu_allocator_test which was expecting that max_bytes_limits is returned<br>\nvia GetStats() in MKLCPUAllocator.</p>\n</li>\n</ol>", "body_text": "Changes in partitioned_function_ops.cc are for passing\nGlobal OpRegistry as default_registry in PartitionedFunction op\nThis fix addresses failure in MKL layout pass when PartitionedFunction\nop calls graph optimization passes. The problem was that the function\nlibrary definition that is used to create function graph and corresponding\nsubgraphs after partitioning did not use global OpRegistry as the\ndefault OpRegistry used for look of operator names. Because of that,\nstandard operators such as \"Const\" were not available to graph passes.\n\n\nChanges in mkl_cpu_allocator.h are to address failure in\nmkl_cpu_allocator_test which was expecting that max_bytes_limits is returned\nvia GetStats() in MKLCPUAllocator.", "body": "1) Changes in partitioned_function_ops.cc are for passing\r\n   Global OpRegistry as default_registry in PartitionedFunction op\r\n\r\n   This fix addresses failure in MKL layout pass when PartitionedFunction\r\n   op calls graph optimization passes. The problem was that the function\r\n   library definition that is used to create function graph and corresponding\r\n   subgraphs after partitioning did not use global OpRegistry as the\r\n   default OpRegistry used for look of operator names. Because of that,\r\n   standard operators such as \"Const\" were not available to graph passes.\r\n\r\n2) Changes in mkl_cpu_allocator.h are to address failure in\r\n   mkl_cpu_allocator_test which was expecting that max_bytes_limits is returned\r\n   via GetStats() in MKLCPUAllocator."}