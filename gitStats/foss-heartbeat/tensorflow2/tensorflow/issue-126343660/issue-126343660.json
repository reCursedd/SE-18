{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/757", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/757/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/757/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/757/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/757", "id": 126343660, "node_id": "MDU6SXNzdWUxMjYzNDM2NjA=", "number": 757, "title": "Tensor indexing issue", "user": {"login": "jayendra13", "id": 651057, "node_id": "MDQ6VXNlcjY1MTA1Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/651057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jayendra13", "html_url": "https://github.com/jayendra13", "followers_url": "https://api.github.com/users/jayendra13/followers", "following_url": "https://api.github.com/users/jayendra13/following{/other_user}", "gists_url": "https://api.github.com/users/jayendra13/gists{/gist_id}", "starred_url": "https://api.github.com/users/jayendra13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jayendra13/subscriptions", "organizations_url": "https://api.github.com/users/jayendra13/orgs", "repos_url": "https://api.github.com/users/jayendra13/repos", "events_url": "https://api.github.com/users/jayendra13/events{/privacy}", "received_events_url": "https://api.github.com/users/jayendra13/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-01-13T05:20:28Z", "updated_at": "2016-01-23T18:58:32Z", "closed_at": "2016-01-23T18:57:21Z", "author_association": "NONE", "body_html": "<p>How to make confusion matrix with tensorflow?<br>\nis it possible or is there any work-around for the<br>\nfollowing code</p>\n<pre><code>nb_classes = 4\nnb_samples = 10\na_ = np.random.randint(0, high=nb_classes, size=(nb_samples,))\nb_ = np.random.randint(0, high=nb_classes, size=(nb_samples,))\n\nconf_mat = tf.zeros([nb_classes, nb_classes], tf.int32)\n\nfor i in xrange(nb_samples):\n    #conf_mat[a[i]][b[i]] += 1\n    # above one gives error so I tried to use gather\n    # from https://github.com/tensorflow/tensorflow/issues/418\n    # but problem with it is that we can't set the values\n    # with gather\n    tf.gather(tf.gather(conf_mat, a[i]), b[i]) += 1\n\ninit = tf.initialize_all_variables()\nwith tf.Session as sess:\n    sess.run(init)\n    sess.run(conf_mat, feed_dict={a=a_, b=b_})\n</code></pre>\n<p>The error I am getting is</p>\n<pre><code>tf.gather(tf.gather(conf_mat, a[i]), b[i]) += 1\nSyntaxError: can't assign to function call\n</code></pre>", "body_text": "How to make confusion matrix with tensorflow?\nis it possible or is there any work-around for the\nfollowing code\nnb_classes = 4\nnb_samples = 10\na_ = np.random.randint(0, high=nb_classes, size=(nb_samples,))\nb_ = np.random.randint(0, high=nb_classes, size=(nb_samples,))\n\nconf_mat = tf.zeros([nb_classes, nb_classes], tf.int32)\n\nfor i in xrange(nb_samples):\n    #conf_mat[a[i]][b[i]] += 1\n    # above one gives error so I tried to use gather\n    # from https://github.com/tensorflow/tensorflow/issues/418\n    # but problem with it is that we can't set the values\n    # with gather\n    tf.gather(tf.gather(conf_mat, a[i]), b[i]) += 1\n\ninit = tf.initialize_all_variables()\nwith tf.Session as sess:\n    sess.run(init)\n    sess.run(conf_mat, feed_dict={a=a_, b=b_})\n\nThe error I am getting is\ntf.gather(tf.gather(conf_mat, a[i]), b[i]) += 1\nSyntaxError: can't assign to function call", "body": "How to make confusion matrix with tensorflow?\nis it possible or is there any work-around for the \nfollowing code\n\n```\nnb_classes = 4\nnb_samples = 10\na_ = np.random.randint(0, high=nb_classes, size=(nb_samples,))\nb_ = np.random.randint(0, high=nb_classes, size=(nb_samples,))\n\nconf_mat = tf.zeros([nb_classes, nb_classes], tf.int32)\n\nfor i in xrange(nb_samples):\n    #conf_mat[a[i]][b[i]] += 1\n    # above one gives error so I tried to use gather\n    # from https://github.com/tensorflow/tensorflow/issues/418\n    # but problem with it is that we can't set the values\n    # with gather\n    tf.gather(tf.gather(conf_mat, a[i]), b[i]) += 1\n\ninit = tf.initialize_all_variables()\nwith tf.Session as sess:\n    sess.run(init)\n    sess.run(conf_mat, feed_dict={a=a_, b=b_})\n```\n\nThe error I am getting is \n\n```\ntf.gather(tf.gather(conf_mat, a[i]), b[i]) += 1\nSyntaxError: can't assign to function call\n```\n"}