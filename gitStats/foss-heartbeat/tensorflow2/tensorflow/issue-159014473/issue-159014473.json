{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2715", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2715/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2715/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2715/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/2715", "id": 159014473, "node_id": "MDU6SXNzdWUxNTkwMTQ0NzM=", "number": 2715, "title": "error looking for libcudart.so.7.0 instead of 7.5 when building from sources (r0.9) even though configured to use cuda 7.5", "user": {"login": "memo", "id": 144230, "node_id": "MDQ6VXNlcjE0NDIzMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/144230?v=4", "gravatar_id": "", "url": "https://api.github.com/users/memo", "html_url": "https://github.com/memo", "followers_url": "https://api.github.com/users/memo/followers", "following_url": "https://api.github.com/users/memo/following{/other_user}", "gists_url": "https://api.github.com/users/memo/gists{/gist_id}", "starred_url": "https://api.github.com/users/memo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/memo/subscriptions", "organizations_url": "https://api.github.com/users/memo/orgs", "repos_url": "https://api.github.com/users/memo/repos", "events_url": "https://api.github.com/users/memo/events{/privacy}", "received_events_url": "https://api.github.com/users/memo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-06-07T20:17:07Z", "updated_at": "2016-06-07T20:54:09Z", "closed_at": "2016-06-07T20:45:30Z", "author_association": "CONTRIBUTOR", "body_html": "<h3>Summary</h3>\n<p>I've configured everything to use cuda 7.5 / cudnn 5.0.5. After building from source cc example is working fine with libcudart.so.7.5. However when I import tensorflow in python the import fails saying it's unable to load libcudart.so.7.0 - which doesn't and shouldn't exist on my system. I'm not sure why it's looking for that.</p>\n<h3>Environment info</h3>\n<p>Operating System: Linux 3.19.0-59-generic 14.04.1-Ubuntu</p>\n<p>Installed version of CUDA and cuDNN: 7.5.18 &amp; 5.0.5</p>\n<blockquote>\n<p>memo@MSA-Blade:~$ ls -l /usr/local/cuda/lib64/libcud*<br>\n-rw-r--r-- 1 root root   322936 Aug 15  2015 /usr/local/cuda/lib64/libcudadevrt.a<br>\nlrwxrwxrwx 1 root root       16 Aug 15  2015 /usr/local/cuda/lib64/libcudart.so -&gt; libcudart.so.7.5<br>\nlrwxrwxrwx 1 root root       19 Aug 15  2015 /usr/local/cuda/lib64/libcudart.so.7.5 -&gt; libcudart.so.7.5.18<br>\n-rwxr-xr-x 1 root root   383336 Aug 15  2015 /usr/local/cuda/lib64/libcudart.so.7.5.18<br>\n-rw-r--r-- 1 root root   720192 Aug 15  2015 /usr/local/cuda/lib64/libcudart_static.a<br>\n-rwxr-xr-x 1 root root 59909104 Jun  7 10:25 /usr/local/cuda/lib64/libcudnn.so<br>\n-rwxr-xr-x 1 root root 59909104 Jun  7 10:25 /usr/local/cuda/lib64/libcudnn.so.5<br>\n-rwxr-xr-x 1 root root 59909104 Jun  7 10:25 /usr/local/cuda/lib64/libcudnn.so.5.0.5<br>\n-rw-r--r-- 1 root root 58775484 Jun  7 10:25 /usr/local/cuda/lib64/libcudnn_static.a</p>\n</blockquote>\n<p>Note: nvcc is reporting v7.5.17 while installed is v7.5.18</p>\n<blockquote>\n<p>memo@MSA-Blade:<del>$ nvcc --version<br>\nnvcc: NVIDIA (R) Cuda compiler driver<br>\nCopyright (c) 2005-2015 NVIDIA Corporation<br>\nBuilt on Tue_Aug_11_14:27:32_CDT_2015<br>\nCuda compilation tools, release 7.5, V7.5.17<br>\nmemo@MSA-Blade:</del>$ which nvcc<br>\n/usr/local/cuda/bin/nvcc<br>\nmemo@MSA-Blade:<del>$ ls -l /usr/local/cuda<br>\nlrwxrwxrwx 1 root root 8 Jun  7 11:07 /usr/local/cuda -&gt; cuda-7.5<br>\nmemo@MSA-Blade:</del>$ head /usr/local/cuda/version.txt<br>\nCUDA Version 7.5.18</p>\n</blockquote>\n<p>If installed from sources, provide the commit hash:<br>\ntried master: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/a0085c8a689893a116be72ac83774c0cc3fa59f9/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/a0085c8a689893a116be72ac83774c0cc3fa59f9\"><tt>a0085c8</tt></a><br>\nand r0.9: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/f05f72ee8f6dd91491226fe82f020c00f9fb882d/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/f05f72ee8f6dd91491226fe82f020c00f9fb882d\"><tt>f05f72e</tt></a></p>\n<h3>Steps to reproduce</h3>\n<ol>\n<li>uninstalled tensorflow 0.7 and purged cuda 7.0/cudnn 4.0. In fact purged all instances of cuda (and restarted) before each attempt</li>\n<li>followed instructions exactly to install cuda 7.5 (from deb) and cudnn 5.0 (to /usr/local/cuda)</li>\n<li>reboot</li>\n<li>clone tensorflow repo</li>\n<li>./configure with no cloud platform support, gpu support</li>\n<li>build cc:tutorials_example_trainer (-c opt --config=cuda) -&gt; builds and <em>runs fine</em></li>\n</ol>\n<blockquote>\n<p>memo@MSA-Blade:~/DEV/tensorflow$ bazel-bin/tensorflow/cc/tutorials_example_trainer --use_gpu<br>\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcublas.so.7.5.18 locally<br>\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcudnn.so.5.0.5 locally<br>\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcufft.so.7.5.18 locally<br>\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcuda.so locally<br>\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcurand.so.7.5.18 locally<br>\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:924] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero<br>\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:102] Found device 0 with properties:<br>\nname: GeForce GTX 970M<br>\nmajor: 5 minor: 2 memoryClockRate (GHz) 1.038<br>\npciBusID 0000:01:00.0<br>\nTotal memory: 3.00GiB<br>\nFree memory: 2.60GiB<br>\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:126] DMA: 0<br>\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:136] 0:   Y<br>\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:807] Creating TensorFlow device (/gpu:0) -&gt; (device: 0, name: GeForce GTX 970M, pci bus id: 0000:01:00.0)<br>\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:807] Creating TensorFlow device (/gpu:0) -&gt; (device: 0, name: GeForce GTX 970M, pci bus id: 0000:01:00.0)<br>\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:807] Creating TensorFlow device (/gpu:0) -&gt; (device: 0, name: GeForce GTX 970M, pci bus id: 0000:01:00.0)<br>\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:807] Creating TensorFlow device (/gpu:0) -&gt; (device: 0, name: GeForce GTX 970M, pci bus id: 0000:01:00.0)<br>\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:807] Creating TensorFlow device (/gpu:0) -&gt; (device: 0, name: GeForce GTX 970M, pci bus id: 0000:01:00.0)<br>\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:807] Creating TensorFlow device (/gpu:0) -&gt; (device: 0, name: GeForce GTX 970M, pci bus id: 0000:01:00.0)<br>\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:807] Creating TensorFlow device (/gpu:0) -&gt; (device: 0, name: GeForce GTX 970M, pci bus id: 0000:01:00.0)<br>\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:807] Creating TensorFlow device (/gpu:0) -&gt; (device: 0, name: GeForce GTX 970M, pci bus id: 0000:01:00.0)<br>\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:807] Creating TensorFlow device (/gpu:0) -&gt; (device: 0, name: GeForce GTX 970M, pci bus id: 0000:01:00.0)<br>\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:807] Creating TensorFlow device (/gpu:0) -&gt; (device: 0, name: GeForce GTX 970M, pci bus id: 0000:01:00.0)</p>\n</blockquote>\n<ol>\n<li>build pip package (-c opt --config=cuda), wheel and sudo pip install -&gt; <em>FAILS ON IMPORT</em></li>\n</ol>\n<blockquote>\n<p>memo@MSA-Blade:<del>/DEV/tensorflow$ bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg<br>\nTue Jun 7 13:08:59 PDT 2016 : === Using tmpdir: /tmp/tmp.wuLJ2u2tY7<br>\n/tmp/tmp.wuLJ2u2tY7 <del>/DEV/tensorflow<br>\nTue Jun 7 13:09:00 PDT 2016 : === Building wheel<br>\n<del>/DEV/tensorflow<br>\nTue Jun 7 13:09:09 PDT 2016 : === Output wheel file is in: /tmp/tensorflow_pkg<br>\nmemo@MSA-Blade:</del>/DEV/tensorflow$ ls -al /tmp/tensorflow_pkg/<br>\ntotal 47820<br>\ndrwxrwxr-x  2 memo memo     4096 Jun  7 13:09 .<br>\ndrwxrwxrwt 15 root root   118784 Jun  7 13:09 ..<br>\n-rw-rw-r--  1 memo memo 48839608 Jun  7 13:09 tensorflow-0.9.0rc0-py2-none-any.whl<br>\nmemo@MSA-Blade:</del>/DEV/tensorflow$ sudo pip install /tmp/tensorflow_pkg/tensorflow-0.9.0rc0-py2-none-any.whl<br>\n[sudo] password for memo:<br>\nUnpacking /tmp/tensorflow_pkg/tensorflow-0.9.0rc0-py2-none-any.whl<br>\nRequirement already satisfied (use --upgrade to upgrade): numpy&gt;=1.8.2 in /usr/lib/python2.7/dist-packages (from tensorflow==0.9.0rc0)<br>\nRequirement already satisfied (use --upgrade to upgrade): protobuf==3.0.0b2 in /usr/local/lib/python2.7/dist-packages (from tensorflow==0.9.0rc0)<br>\nRequirement already satisfied (use --upgrade to upgrade): wheel in /usr/local/lib/python2.7/dist-packages (from tensorflow==0.9.0rc0)<br>\nRequirement already satisfied (use --upgrade to upgrade): six&gt;=1.10.0 in /usr/local/lib/python2.7/dist-packages (from tensorflow==0.9.0rc0)<br>\nInstalling collected packages: tensorflow<br>\nSuccessfully installed tensorflow<br>\nCleaning up...<br>\nmemo@MSA-Blade:</del>/DEV/tensorflow$ cd ..<br>\nmemo@MSA-Blade:~/DEV$ ipython<br>\nPython 2.7.11 |Anaconda 4.0.0 (64-bit)| (default, Dec  6 2015, 18:08:32)<br>\nType \"copyright\", \"credits\" or \"license\" for more information.</p>\n<p>IPython 4.1.2 -- An enhanced Interactive Python.<br>\n?         -&gt; Introduction and overview of IPython's features.<br>\n%quickref -&gt; Quick reference.<br>\nhelp      -&gt; Python's own help system.<br>\nobject?   -&gt; Details about 'object', use 'object??' for extra details.</p>\n<p>In [1]: import tensorflow<br>\nImportError                               Traceback (most recent call last)<br>\n in ()<br>\n----&gt; 1 import tensorflow</p>\n<p>/home/memo/anaconda2/lib/python2.7/site-packages/tensorflow/<strong>init</strong>.py in ()<br>\n21 from <strong>future</strong> import print_function<br>\n22<br>\n---&gt; 23 from tensorflow.python import *</p>\n<p>/home/memo/anaconda2/lib/python2.7/site-packages/tensorflow/python/<strong>init</strong>.py in ()<br>\n47<br>\n48 # Import things out of contrib<br>\n---&gt; 49 from tensorflow import contrib<br>\n50<br>\n51 # Framework</p>\n<p>/home/memo/anaconda2/lib/python2.7/site-packages/tensorflow/contrib/<strong>init</strong>.py in ()<br>\n21<br>\n22 # Add projects here, they will show up under tf.contrib.<br>\n---&gt; 23 from tensorflow.contrib import layers<br>\n24 from tensorflow.contrib import util</p>\n<p>/home/memo/anaconda2/lib/python2.7/site-packages/tensorflow/contrib/layers/<strong>init</strong>.py in ()<br>\n66 # pylint: disable=unused-import,wildcard-import<br>\n67 from tensorflow.contrib.layers.python.framework.tensor_util import *<br>\n---&gt; 68 from tensorflow.contrib.layers.python.layers import *</p>\n<p>/home/memo/anaconda2/lib/python2.7/site-packages/tensorflow/contrib/layers/python/layers/<strong>init</strong>.py in ()<br>\n20<br>\n21 # pylint: disable=wildcard-import<br>\n---&gt; 22 from tensorflow.contrib.layers.python.layers.initializers import *<br>\n23 from tensorflow.contrib.layers.python.layers.layers import *<br>\n24 from tensorflow.contrib.layers.python.layers.regularizers import *</p>\n<p>/home/memo/anaconda2/lib/python2.7/site-packages/tensorflow/contrib/layers/python/layers/initializers.py in ()<br>\n22<br>\n23 from tensorflow.python.framework import dtypes<br>\n---&gt; 24 from tensorflow.python.ops import random_ops<br>\n25<br>\n26</p>\n<p>/home/memo/anaconda2/lib/python2.7/site-packages/tensorflow/python/ops/random_ops.py in ()<br>\n21<br>\n22 from tensorflow.python.framework import dtypes<br>\n---&gt; 23 from tensorflow.python.framework import ops<br>\n24 from tensorflow.python.framework import tensor_shape<br>\n25 from tensorflow.python.framework import tensor_util</p>\n<p>/home/memo/anaconda2/lib/python2.7/site-packages/tensorflow/python/framework/ops.py in ()<br>\n37 from tensorflow.python.framework import registry<br>\n38 from tensorflow.python.framework import tensor_shape<br>\n---&gt; 39 from tensorflow.python.framework import versions<br>\n40 from tensorflow.python.util import compat<br>\n41 from tensorflow.python.platform import logging</p>\n<p>/home/memo/anaconda2/lib/python2.7/site-packages/tensorflow/python/framework/versions.py in ()<br>\n20 from <strong>future</strong> import print_function<br>\n21<br>\n---&gt; 22 from tensorflow.python import pywrap_tensorflow<br>\n23<br>\n24 <strong>version</strong> = pywrap_tensorflow.<strong>version</strong></p>\n<p>/home/memo/anaconda2/lib/python2.7/site-packages/tensorflow/python/pywrap_tensorflow.py in ()<br>\n26                 fp.close()<br>\n27             return _mod<br>\n---&gt; 28     _pywrap_tensorflow = swig_import_helper()<br>\n29     del swig_import_helper<br>\n30 else:</p>\n<p>/home/memo/anaconda2/lib/python2.7/site-packages/tensorflow/python/pywrap_tensorflow.py in swig_import_helper()<br>\n22         if fp is not None:<br>\n23             try:<br>\n---&gt; 24                 _mod = imp.load_module('_pywrap_tensorflow', fp, pathname, description)<br>\n25             finally:<br>\n26                 fp.close()</p>\n<p>ImportError: libcudart.so.7.0: cannot open shared object file: No such file or directory</p>\n</blockquote>\n<h3>What have you tried?</h3>\n<ol>\n<li>tried both master and r0.9 branches</li>\n<li>for cuda and cudnn version numbers tried keeping them system default (/usr/local/cuda is symlinked to /usr/local/cuda-7.5) AND tried giving explicit version numbers (cuda: 7.5, 7.5.18; cudnn: 5, 5.0.5 )</li>\n<li>If I purge Cuda 7.5 and only use cuda 7.0 / cudnn 4.0.7 it works fine.</li>\n</ol>\n<h3>Logs or other output that would be helpful</h3>", "body_text": "Summary\nI've configured everything to use cuda 7.5 / cudnn 5.0.5. After building from source cc example is working fine with libcudart.so.7.5. However when I import tensorflow in python the import fails saying it's unable to load libcudart.so.7.0 - which doesn't and shouldn't exist on my system. I'm not sure why it's looking for that.\nEnvironment info\nOperating System: Linux 3.19.0-59-generic 14.04.1-Ubuntu\nInstalled version of CUDA and cuDNN: 7.5.18 & 5.0.5\n\nmemo@MSA-Blade:~$ ls -l /usr/local/cuda/lib64/libcud*\n-rw-r--r-- 1 root root   322936 Aug 15  2015 /usr/local/cuda/lib64/libcudadevrt.a\nlrwxrwxrwx 1 root root       16 Aug 15  2015 /usr/local/cuda/lib64/libcudart.so -> libcudart.so.7.5\nlrwxrwxrwx 1 root root       19 Aug 15  2015 /usr/local/cuda/lib64/libcudart.so.7.5 -> libcudart.so.7.5.18\n-rwxr-xr-x 1 root root   383336 Aug 15  2015 /usr/local/cuda/lib64/libcudart.so.7.5.18\n-rw-r--r-- 1 root root   720192 Aug 15  2015 /usr/local/cuda/lib64/libcudart_static.a\n-rwxr-xr-x 1 root root 59909104 Jun  7 10:25 /usr/local/cuda/lib64/libcudnn.so\n-rwxr-xr-x 1 root root 59909104 Jun  7 10:25 /usr/local/cuda/lib64/libcudnn.so.5\n-rwxr-xr-x 1 root root 59909104 Jun  7 10:25 /usr/local/cuda/lib64/libcudnn.so.5.0.5\n-rw-r--r-- 1 root root 58775484 Jun  7 10:25 /usr/local/cuda/lib64/libcudnn_static.a\n\nNote: nvcc is reporting v7.5.17 while installed is v7.5.18\n\nmemo@MSA-Blade:$ nvcc --version\nnvcc: NVIDIA (R) Cuda compiler driver\nCopyright (c) 2005-2015 NVIDIA Corporation\nBuilt on Tue_Aug_11_14:27:32_CDT_2015\nCuda compilation tools, release 7.5, V7.5.17\nmemo@MSA-Blade:$ which nvcc\n/usr/local/cuda/bin/nvcc\nmemo@MSA-Blade:$ ls -l /usr/local/cuda\nlrwxrwxrwx 1 root root 8 Jun  7 11:07 /usr/local/cuda -> cuda-7.5\nmemo@MSA-Blade:$ head /usr/local/cuda/version.txt\nCUDA Version 7.5.18\n\nIf installed from sources, provide the commit hash:\ntried master: a0085c8\nand r0.9: f05f72e\nSteps to reproduce\n\nuninstalled tensorflow 0.7 and purged cuda 7.0/cudnn 4.0. In fact purged all instances of cuda (and restarted) before each attempt\nfollowed instructions exactly to install cuda 7.5 (from deb) and cudnn 5.0 (to /usr/local/cuda)\nreboot\nclone tensorflow repo\n./configure with no cloud platform support, gpu support\nbuild cc:tutorials_example_trainer (-c opt --config=cuda) -> builds and runs fine\n\n\nmemo@MSA-Blade:~/DEV/tensorflow$ bazel-bin/tensorflow/cc/tutorials_example_trainer --use_gpu\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcublas.so.7.5.18 locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcudnn.so.5.0.5 locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcufft.so.7.5.18 locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcuda.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcurand.so.7.5.18 locally\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:924] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:102] Found device 0 with properties:\nname: GeForce GTX 970M\nmajor: 5 minor: 2 memoryClockRate (GHz) 1.038\npciBusID 0000:01:00.0\nTotal memory: 3.00GiB\nFree memory: 2.60GiB\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:126] DMA: 0\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:136] 0:   Y\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:807] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 970M, pci bus id: 0000:01:00.0)\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:807] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 970M, pci bus id: 0000:01:00.0)\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:807] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 970M, pci bus id: 0000:01:00.0)\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:807] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 970M, pci bus id: 0000:01:00.0)\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:807] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 970M, pci bus id: 0000:01:00.0)\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:807] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 970M, pci bus id: 0000:01:00.0)\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:807] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 970M, pci bus id: 0000:01:00.0)\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:807] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 970M, pci bus id: 0000:01:00.0)\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:807] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 970M, pci bus id: 0000:01:00.0)\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:807] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 970M, pci bus id: 0000:01:00.0)\n\n\nbuild pip package (-c opt --config=cuda), wheel and sudo pip install -> FAILS ON IMPORT\n\n\nmemo@MSA-Blade:/DEV/tensorflow$ bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg\nTue Jun 7 13:08:59 PDT 2016 : === Using tmpdir: /tmp/tmp.wuLJ2u2tY7\n/tmp/tmp.wuLJ2u2tY7 /DEV/tensorflow\nTue Jun 7 13:09:00 PDT 2016 : === Building wheel\n/DEV/tensorflow\nTue Jun 7 13:09:09 PDT 2016 : === Output wheel file is in: /tmp/tensorflow_pkg\nmemo@MSA-Blade:/DEV/tensorflow$ ls -al /tmp/tensorflow_pkg/\ntotal 47820\ndrwxrwxr-x  2 memo memo     4096 Jun  7 13:09 .\ndrwxrwxrwt 15 root root   118784 Jun  7 13:09 ..\n-rw-rw-r--  1 memo memo 48839608 Jun  7 13:09 tensorflow-0.9.0rc0-py2-none-any.whl\nmemo@MSA-Blade:/DEV/tensorflow$ sudo pip install /tmp/tensorflow_pkg/tensorflow-0.9.0rc0-py2-none-any.whl\n[sudo] password for memo:\nUnpacking /tmp/tensorflow_pkg/tensorflow-0.9.0rc0-py2-none-any.whl\nRequirement already satisfied (use --upgrade to upgrade): numpy>=1.8.2 in /usr/lib/python2.7/dist-packages (from tensorflow==0.9.0rc0)\nRequirement already satisfied (use --upgrade to upgrade): protobuf==3.0.0b2 in /usr/local/lib/python2.7/dist-packages (from tensorflow==0.9.0rc0)\nRequirement already satisfied (use --upgrade to upgrade): wheel in /usr/local/lib/python2.7/dist-packages (from tensorflow==0.9.0rc0)\nRequirement already satisfied (use --upgrade to upgrade): six>=1.10.0 in /usr/local/lib/python2.7/dist-packages (from tensorflow==0.9.0rc0)\nInstalling collected packages: tensorflow\nSuccessfully installed tensorflow\nCleaning up...\nmemo@MSA-Blade:/DEV/tensorflow$ cd ..\nmemo@MSA-Blade:~/DEV$ ipython\nPython 2.7.11 |Anaconda 4.0.0 (64-bit)| (default, Dec  6 2015, 18:08:32)\nType \"copyright\", \"credits\" or \"license\" for more information.\nIPython 4.1.2 -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object', use 'object??' for extra details.\nIn [1]: import tensorflow\nImportError                               Traceback (most recent call last)\n in ()\n----> 1 import tensorflow\n/home/memo/anaconda2/lib/python2.7/site-packages/tensorflow/init.py in ()\n21 from future import print_function\n22\n---> 23 from tensorflow.python import *\n/home/memo/anaconda2/lib/python2.7/site-packages/tensorflow/python/init.py in ()\n47\n48 # Import things out of contrib\n---> 49 from tensorflow import contrib\n50\n51 # Framework\n/home/memo/anaconda2/lib/python2.7/site-packages/tensorflow/contrib/init.py in ()\n21\n22 # Add projects here, they will show up under tf.contrib.\n---> 23 from tensorflow.contrib import layers\n24 from tensorflow.contrib import util\n/home/memo/anaconda2/lib/python2.7/site-packages/tensorflow/contrib/layers/init.py in ()\n66 # pylint: disable=unused-import,wildcard-import\n67 from tensorflow.contrib.layers.python.framework.tensor_util import *\n---> 68 from tensorflow.contrib.layers.python.layers import *\n/home/memo/anaconda2/lib/python2.7/site-packages/tensorflow/contrib/layers/python/layers/init.py in ()\n20\n21 # pylint: disable=wildcard-import\n---> 22 from tensorflow.contrib.layers.python.layers.initializers import *\n23 from tensorflow.contrib.layers.python.layers.layers import *\n24 from tensorflow.contrib.layers.python.layers.regularizers import *\n/home/memo/anaconda2/lib/python2.7/site-packages/tensorflow/contrib/layers/python/layers/initializers.py in ()\n22\n23 from tensorflow.python.framework import dtypes\n---> 24 from tensorflow.python.ops import random_ops\n25\n26\n/home/memo/anaconda2/lib/python2.7/site-packages/tensorflow/python/ops/random_ops.py in ()\n21\n22 from tensorflow.python.framework import dtypes\n---> 23 from tensorflow.python.framework import ops\n24 from tensorflow.python.framework import tensor_shape\n25 from tensorflow.python.framework import tensor_util\n/home/memo/anaconda2/lib/python2.7/site-packages/tensorflow/python/framework/ops.py in ()\n37 from tensorflow.python.framework import registry\n38 from tensorflow.python.framework import tensor_shape\n---> 39 from tensorflow.python.framework import versions\n40 from tensorflow.python.util import compat\n41 from tensorflow.python.platform import logging\n/home/memo/anaconda2/lib/python2.7/site-packages/tensorflow/python/framework/versions.py in ()\n20 from future import print_function\n21\n---> 22 from tensorflow.python import pywrap_tensorflow\n23\n24 version = pywrap_tensorflow.version\n/home/memo/anaconda2/lib/python2.7/site-packages/tensorflow/python/pywrap_tensorflow.py in ()\n26                 fp.close()\n27             return _mod\n---> 28     _pywrap_tensorflow = swig_import_helper()\n29     del swig_import_helper\n30 else:\n/home/memo/anaconda2/lib/python2.7/site-packages/tensorflow/python/pywrap_tensorflow.py in swig_import_helper()\n22         if fp is not None:\n23             try:\n---> 24                 _mod = imp.load_module('_pywrap_tensorflow', fp, pathname, description)\n25             finally:\n26                 fp.close()\nImportError: libcudart.so.7.0: cannot open shared object file: No such file or directory\n\nWhat have you tried?\n\ntried both master and r0.9 branches\nfor cuda and cudnn version numbers tried keeping them system default (/usr/local/cuda is symlinked to /usr/local/cuda-7.5) AND tried giving explicit version numbers (cuda: 7.5, 7.5.18; cudnn: 5, 5.0.5 )\nIf I purge Cuda 7.5 and only use cuda 7.0 / cudnn 4.0.7 it works fine.\n\nLogs or other output that would be helpful", "body": "### Summary\n\nI've configured everything to use cuda 7.5 / cudnn 5.0.5. After building from source cc example is working fine with libcudart.so.7.5. However when I import tensorflow in python the import fails saying it's unable to load libcudart.so.7.0 - which doesn't and shouldn't exist on my system. I'm not sure why it's looking for that. \n### Environment info\n\nOperating System: Linux 3.19.0-59-generic 14.04.1-Ubuntu\n\nInstalled version of CUDA and cuDNN: 7.5.18 & 5.0.5\n\n> memo@MSA-Blade:~$ ls -l /usr/local/cuda/lib64/libcud*\n> -rw-r--r-- 1 root root   322936 Aug 15  2015 /usr/local/cuda/lib64/libcudadevrt.a\n> lrwxrwxrwx 1 root root       16 Aug 15  2015 /usr/local/cuda/lib64/libcudart.so -> libcudart.so.7.5\n> lrwxrwxrwx 1 root root       19 Aug 15  2015 /usr/local/cuda/lib64/libcudart.so.7.5 -> libcudart.so.7.5.18\n> -rwxr-xr-x 1 root root   383336 Aug 15  2015 /usr/local/cuda/lib64/libcudart.so.7.5.18\n> -rw-r--r-- 1 root root   720192 Aug 15  2015 /usr/local/cuda/lib64/libcudart_static.a\n> -rwxr-xr-x 1 root root 59909104 Jun  7 10:25 /usr/local/cuda/lib64/libcudnn.so\n> -rwxr-xr-x 1 root root 59909104 Jun  7 10:25 /usr/local/cuda/lib64/libcudnn.so.5\n> -rwxr-xr-x 1 root root 59909104 Jun  7 10:25 /usr/local/cuda/lib64/libcudnn.so.5.0.5\n> -rw-r--r-- 1 root root 58775484 Jun  7 10:25 /usr/local/cuda/lib64/libcudnn_static.a\n\nNote: nvcc is reporting v7.5.17 while installed is v7.5.18\n\n> memo@MSA-Blade:~$ nvcc --version\n> nvcc: NVIDIA (R) Cuda compiler driver\n> Copyright (c) 2005-2015 NVIDIA Corporation\n> Built on Tue_Aug_11_14:27:32_CDT_2015\n> Cuda compilation tools, release 7.5, V7.5.17\n> memo@MSA-Blade:~$ which nvcc\n> /usr/local/cuda/bin/nvcc\n> memo@MSA-Blade:~$ ls -l /usr/local/cuda\n> lrwxrwxrwx 1 root root 8 Jun  7 11:07 /usr/local/cuda -> cuda-7.5\n> memo@MSA-Blade:~$ head /usr/local/cuda/version.txt\n> CUDA Version 7.5.18\n\nIf installed from sources, provide the commit hash:\ntried master: a0085c8a689893a116be72ac83774c0cc3fa59f9\nand r0.9: f05f72ee8f6dd91491226fe82f020c00f9fb882d\n### Steps to reproduce\n1. uninstalled tensorflow 0.7 and purged cuda 7.0/cudnn 4.0. In fact purged all instances of cuda (and restarted) before each attempt\n2. followed instructions exactly to install cuda 7.5 (from deb) and cudnn 5.0 (to /usr/local/cuda)\n3. reboot\n4. clone tensorflow repo \n5. ./configure with no cloud platform support, gpu support \n6. build cc:tutorials_example_trainer (-c opt --config=cuda) -> builds and _runs fine_ \n\n> memo@MSA-Blade:~/DEV/tensorflow$ bazel-bin/tensorflow/cc/tutorials_example_trainer --use_gpu\n> I tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcublas.so.7.5.18 locally\n> I tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcudnn.so.5.0.5 locally\n> I tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcufft.so.7.5.18 locally\n> I tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcuda.so locally\n> I tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcurand.so.7.5.18 locally\n> I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:924] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n> I tensorflow/core/common_runtime/gpu/gpu_init.cc:102] Found device 0 with properties: \n> name: GeForce GTX 970M\n> major: 5 minor: 2 memoryClockRate (GHz) 1.038\n> pciBusID 0000:01:00.0\n> Total memory: 3.00GiB\n> Free memory: 2.60GiB\n> I tensorflow/core/common_runtime/gpu/gpu_init.cc:126] DMA: 0 \n> I tensorflow/core/common_runtime/gpu/gpu_init.cc:136] 0:   Y \n> I tensorflow/core/common_runtime/gpu/gpu_device.cc:807] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 970M, pci bus id: 0000:01:00.0)\n> I tensorflow/core/common_runtime/gpu/gpu_device.cc:807] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 970M, pci bus id: 0000:01:00.0)\n> I tensorflow/core/common_runtime/gpu/gpu_device.cc:807] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 970M, pci bus id: 0000:01:00.0)\n> I tensorflow/core/common_runtime/gpu/gpu_device.cc:807] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 970M, pci bus id: 0000:01:00.0)\n> I tensorflow/core/common_runtime/gpu/gpu_device.cc:807] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 970M, pci bus id: 0000:01:00.0)\n> I tensorflow/core/common_runtime/gpu/gpu_device.cc:807] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 970M, pci bus id: 0000:01:00.0)\n> I tensorflow/core/common_runtime/gpu/gpu_device.cc:807] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 970M, pci bus id: 0000:01:00.0)\n> I tensorflow/core/common_runtime/gpu/gpu_device.cc:807] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 970M, pci bus id: 0000:01:00.0)\n> I tensorflow/core/common_runtime/gpu/gpu_device.cc:807] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 970M, pci bus id: 0000:01:00.0)\n> I tensorflow/core/common_runtime/gpu/gpu_device.cc:807] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 970M, pci bus id: 0000:01:00.0)\n1. build pip package (-c opt --config=cuda), wheel and sudo pip install -> _FAILS ON IMPORT_\n\n> memo@MSA-Blade:~/DEV/tensorflow$ bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg\n> Tue Jun 7 13:08:59 PDT 2016 : === Using tmpdir: /tmp/tmp.wuLJ2u2tY7\n> /tmp/tmp.wuLJ2u2tY7 ~/DEV/tensorflow\n> Tue Jun 7 13:09:00 PDT 2016 : === Building wheel\n> ~/DEV/tensorflow\n> Tue Jun 7 13:09:09 PDT 2016 : === Output wheel file is in: /tmp/tensorflow_pkg\n> memo@MSA-Blade:~/DEV/tensorflow$ ls -al /tmp/tensorflow_pkg/\n> total 47820\n> drwxrwxr-x  2 memo memo     4096 Jun  7 13:09 .\n> drwxrwxrwt 15 root root   118784 Jun  7 13:09 ..\n> -rw-rw-r--  1 memo memo 48839608 Jun  7 13:09 tensorflow-0.9.0rc0-py2-none-any.whl\n> memo@MSA-Blade:~/DEV/tensorflow$ sudo pip install /tmp/tensorflow_pkg/tensorflow-0.9.0rc0-py2-none-any.whl \n> [sudo] password for memo: \n> Unpacking /tmp/tensorflow_pkg/tensorflow-0.9.0rc0-py2-none-any.whl\n> Requirement already satisfied (use --upgrade to upgrade): numpy>=1.8.2 in /usr/lib/python2.7/dist-packages (from tensorflow==0.9.0rc0)\n> Requirement already satisfied (use --upgrade to upgrade): protobuf==3.0.0b2 in /usr/local/lib/python2.7/dist-packages (from tensorflow==0.9.0rc0)\n> Requirement already satisfied (use --upgrade to upgrade): wheel in /usr/local/lib/python2.7/dist-packages (from tensorflow==0.9.0rc0)\n> Requirement already satisfied (use --upgrade to upgrade): six>=1.10.0 in /usr/local/lib/python2.7/dist-packages (from tensorflow==0.9.0rc0)\n> Installing collected packages: tensorflow\n> Successfully installed tensorflow\n> Cleaning up...\n> memo@MSA-Blade:~/DEV/tensorflow$ cd ..\n> memo@MSA-Blade:~/DEV$ ipython\n> Python 2.7.11 |Anaconda 4.0.0 (64-bit)| (default, Dec  6 2015, 18:08:32) \n> Type \"copyright\", \"credits\" or \"license\" for more information.\n> \n> IPython 4.1.2 -- An enhanced Interactive Python.\n> ?         -> Introduction and overview of IPython's features.\n> %quickref -> Quick reference.\n> help      -> Python's own help system.\n> object?   -> Details about 'object', use 'object??' for extra details.\n> \n> In [1]: import tensorflow\n> ImportError                               Traceback (most recent call last)\n> <ipython-input-1-a649b509054f> in <module>()\n> ----> 1 import tensorflow\n> \n> /home/memo/anaconda2/lib/python2.7/site-packages/tensorflow/**init**.py in <module>()\n>      21 from **future** import print_function\n>      22 \n> ---> 23 from tensorflow.python import *\n> \n> /home/memo/anaconda2/lib/python2.7/site-packages/tensorflow/python/**init**.py in <module>()\n>      47 \n>      48 # Import things out of contrib\n> ---> 49 from tensorflow import contrib\n>      50 \n>      51 # Framework\n> \n> /home/memo/anaconda2/lib/python2.7/site-packages/tensorflow/contrib/**init**.py in <module>()\n>      21 \n>      22 # Add projects here, they will show up under tf.contrib.\n> ---> 23 from tensorflow.contrib import layers\n>      24 from tensorflow.contrib import util\n> \n> /home/memo/anaconda2/lib/python2.7/site-packages/tensorflow/contrib/layers/**init**.py in <module>()\n>      66 # pylint: disable=unused-import,wildcard-import\n>      67 from tensorflow.contrib.layers.python.framework.tensor_util import *\n> ---> 68 from tensorflow.contrib.layers.python.layers import *\n> \n> /home/memo/anaconda2/lib/python2.7/site-packages/tensorflow/contrib/layers/python/layers/**init**.py in <module>()\n>      20 \n>      21 # pylint: disable=wildcard-import\n> ---> 22 from tensorflow.contrib.layers.python.layers.initializers import *\n>      23 from tensorflow.contrib.layers.python.layers.layers import *\n>      24 from tensorflow.contrib.layers.python.layers.regularizers import *\n> \n> /home/memo/anaconda2/lib/python2.7/site-packages/tensorflow/contrib/layers/python/layers/initializers.py in <module>()\n>      22 \n>      23 from tensorflow.python.framework import dtypes\n> ---> 24 from tensorflow.python.ops import random_ops\n>      25 \n>      26 \n> \n> /home/memo/anaconda2/lib/python2.7/site-packages/tensorflow/python/ops/random_ops.py in <module>()\n>      21 \n>      22 from tensorflow.python.framework import dtypes\n> ---> 23 from tensorflow.python.framework import ops\n>      24 from tensorflow.python.framework import tensor_shape\n>      25 from tensorflow.python.framework import tensor_util\n> \n> /home/memo/anaconda2/lib/python2.7/site-packages/tensorflow/python/framework/ops.py in <module>()\n>      37 from tensorflow.python.framework import registry\n>      38 from tensorflow.python.framework import tensor_shape\n> ---> 39 from tensorflow.python.framework import versions\n>      40 from tensorflow.python.util import compat\n>      41 from tensorflow.python.platform import logging\n> \n> /home/memo/anaconda2/lib/python2.7/site-packages/tensorflow/python/framework/versions.py in <module>()\n>      20 from **future** import print_function\n>      21 \n> ---> 22 from tensorflow.python import pywrap_tensorflow\n>      23 \n>      24 **version** = pywrap_tensorflow.**version**\n> \n> /home/memo/anaconda2/lib/python2.7/site-packages/tensorflow/python/pywrap_tensorflow.py in <module>()\n>      26                 fp.close()\n>      27             return _mod\n> ---> 28     _pywrap_tensorflow = swig_import_helper()\n>      29     del swig_import_helper\n>      30 else:\n> \n> /home/memo/anaconda2/lib/python2.7/site-packages/tensorflow/python/pywrap_tensorflow.py in swig_import_helper()\n>      22         if fp is not None:\n>      23             try:\n> ---> 24                 _mod = imp.load_module('_pywrap_tensorflow', fp, pathname, description)\n>      25             finally:\n>      26                 fp.close()\n> \n> ImportError: libcudart.so.7.0: cannot open shared object file: No such file or directory\n### What have you tried?\n1. tried both master and r0.9 branches\n2. for cuda and cudnn version numbers tried keeping them system default (/usr/local/cuda is symlinked to /usr/local/cuda-7.5) AND tried giving explicit version numbers (cuda: 7.5, 7.5.18; cudnn: 5, 5.0.5 )\n3. If I purge Cuda 7.5 and only use cuda 7.0 / cudnn 4.0.7 it works fine. \n### Logs or other output that would be helpful\n"}