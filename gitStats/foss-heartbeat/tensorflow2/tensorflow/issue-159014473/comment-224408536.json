{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/224408536", "html_url": "https://github.com/tensorflow/tensorflow/issues/2715#issuecomment-224408536", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2715", "id": 224408536, "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDQwODUzNg==", "user": {"login": "memo", "id": 144230, "node_id": "MDQ6VXNlcjE0NDIzMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/144230?v=4", "gravatar_id": "", "url": "https://api.github.com/users/memo", "html_url": "https://github.com/memo", "followers_url": "https://api.github.com/users/memo/followers", "following_url": "https://api.github.com/users/memo/following{/other_user}", "gists_url": "https://api.github.com/users/memo/gists{/gist_id}", "starred_url": "https://api.github.com/users/memo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/memo/subscriptions", "organizations_url": "https://api.github.com/users/memo/orgs", "repos_url": "https://api.github.com/users/memo/repos", "events_url": "https://api.github.com/users/memo/events{/privacy}", "received_events_url": "https://api.github.com/users/memo/received_events", "type": "User", "site_admin": false}, "created_at": "2016-06-07T20:45:30Z", "updated_at": "2016-06-07T20:54:09Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I just found and fixed the problem, and I'll post it here for other people. Problem is difference between 'sudo pip install' vs 'pip install' and in my case, the fact that I'm using anaconda.</p>\n<p>'sudo pip install' installs in system path (/usr/lib/python2.7/dist-packages or similar)<br>\n'pip install' installs in a user path (~/anaconda2/lib/python2.7/site-packages or similar. will be different if not using anaconda)</p>\n<p>Apparently this computer had tensorflow installed in both user and system paths. So 'sudo pip uninstall tensorflow' uninstalled tensorflow from the system path, but not the user path. I was installing the new tensorflow with 'sudo pip install' (into system path), but there already was a tensorflow (0.7) in user path. <em>That's</em> the version of tensorflow which was being imported, and thus getting the error.</p>\n<p>So I uninstalled all instances of tensorflow from both user path (pip uninstall tensorflow) and system path (sudo pip uninstall tensorflow). And reinstalled the one I compiled into user path only (pip install /tmp/tensorflow_pkg/tensorflow-0.9.0rc0-py2-none-any.whl), notice lack of 'sudo'.</p>\n<p>To see if tensorflow is already installed in system and/or user paths:<br>\n'pip show tensorflow' will show tensorflow version (if it exists) in user path<br>\n'sudo pip show tensorflow' will show tensorflow version (if it exists) in system path</p>", "body_text": "I just found and fixed the problem, and I'll post it here for other people. Problem is difference between 'sudo pip install' vs 'pip install' and in my case, the fact that I'm using anaconda.\n'sudo pip install' installs in system path (/usr/lib/python2.7/dist-packages or similar)\n'pip install' installs in a user path (~/anaconda2/lib/python2.7/site-packages or similar. will be different if not using anaconda)\nApparently this computer had tensorflow installed in both user and system paths. So 'sudo pip uninstall tensorflow' uninstalled tensorflow from the system path, but not the user path. I was installing the new tensorflow with 'sudo pip install' (into system path), but there already was a tensorflow (0.7) in user path. That's the version of tensorflow which was being imported, and thus getting the error.\nSo I uninstalled all instances of tensorflow from both user path (pip uninstall tensorflow) and system path (sudo pip uninstall tensorflow). And reinstalled the one I compiled into user path only (pip install /tmp/tensorflow_pkg/tensorflow-0.9.0rc0-py2-none-any.whl), notice lack of 'sudo'.\nTo see if tensorflow is already installed in system and/or user paths:\n'pip show tensorflow' will show tensorflow version (if it exists) in user path\n'sudo pip show tensorflow' will show tensorflow version (if it exists) in system path", "body": "I just found and fixed the problem, and I'll post it here for other people. Problem is difference between 'sudo pip install' vs 'pip install' and in my case, the fact that I'm using anaconda. \n\n'sudo pip install' installs in system path (/usr/lib/python2.7/dist-packages or similar)\n'pip install' installs in a user path (~/anaconda2/lib/python2.7/site-packages or similar. will be different if not using anaconda)\n\nApparently this computer had tensorflow installed in both user and system paths. So 'sudo pip uninstall tensorflow' uninstalled tensorflow from the system path, but not the user path. I was installing the new tensorflow with 'sudo pip install' (into system path), but there already was a tensorflow (0.7) in user path. _That's_ the version of tensorflow which was being imported, and thus getting the error. \n\nSo I uninstalled all instances of tensorflow from both user path (pip uninstall tensorflow) and system path (sudo pip uninstall tensorflow). And reinstalled the one I compiled into user path only (pip install /tmp/tensorflow_pkg/tensorflow-0.9.0rc0-py2-none-any.whl), notice lack of 'sudo'.\n\nTo see if tensorflow is already installed in system and/or user paths:\n'pip show tensorflow' will show tensorflow version (if it exists) in user path\n'sudo pip show tensorflow' will show tensorflow version (if it exists) in system path\n"}