{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/161753292", "html_url": "https://github.com/tensorflow/tensorflow/issues/10#issuecomment-161753292", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10", "id": 161753292, "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTc1MzI5Mg==", "user": {"login": "alonsovidales", "id": 1468785, "node_id": "MDQ6VXNlcjE0Njg3ODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1468785?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alonsovidales", "html_url": "https://github.com/alonsovidales", "followers_url": "https://api.github.com/users/alonsovidales/followers", "following_url": "https://api.github.com/users/alonsovidales/following{/other_user}", "gists_url": "https://api.github.com/users/alonsovidales/gists{/gist_id}", "starred_url": "https://api.github.com/users/alonsovidales/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alonsovidales/subscriptions", "organizations_url": "https://api.github.com/users/alonsovidales/orgs", "repos_url": "https://api.github.com/users/alonsovidales/repos", "events_url": "https://api.github.com/users/alonsovidales/events{/privacy}", "received_events_url": "https://api.github.com/users/alonsovidales/received_events", "type": "User", "site_admin": false}, "created_at": "2015-12-03T19:22:11Z", "updated_at": "2015-12-03T19:22:11Z", "author_association": "NONE", "body_html": "<p>I think that it would be possible to do a small workaround using a sh_binary to compile run swig like they are doing with the Python libs:<br>\n<a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/BUILD#L21\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/BUILD#L21</a><br>\nBut by the moment for the PoC I'm using an ugly MakeFile:<br>\n<a href=\"https://github.com/alonsovidales/tensorflow/blob/master/tensorflow/go/makefile\">https://github.com/alonsovidales/tensorflow/blob/master/tensorflow/go/makefile</a><br>\nAnd setting the flags for the linker here:<br>\n<a href=\"https://github.com/alonsovidales/tensorflow/blob/master/tensorflow/go/cgoflags.go\">https://github.com/alonsovidales/tensorflow/blob/master/tensorflow/go/cgoflags.go</a><br>\nAnd also a wrapper to access the C++ libraries from C:<br>\n<a href=\"https://github.com/alonsovidales/tensorflow/tree/master/tensorflow/go/wrapper\">https://github.com/alonsovidales/tensorflow/tree/master/tensorflow/go/wrapper</a><br>\nBut this is just for the prototype, I plan to move all to Bazel + SWIG :)</p>", "body_text": "I think that it would be possible to do a small workaround using a sh_binary to compile run swig like they are doing with the Python libs:\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/BUILD#L21\nBut by the moment for the PoC I'm using an ugly MakeFile:\nhttps://github.com/alonsovidales/tensorflow/blob/master/tensorflow/go/makefile\nAnd setting the flags for the linker here:\nhttps://github.com/alonsovidales/tensorflow/blob/master/tensorflow/go/cgoflags.go\nAnd also a wrapper to access the C++ libraries from C:\nhttps://github.com/alonsovidales/tensorflow/tree/master/tensorflow/go/wrapper\nBut this is just for the prototype, I plan to move all to Bazel + SWIG :)", "body": "I think that it would be possible to do a small workaround using a sh_binary to compile run swig like they are doing with the Python libs:\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/BUILD#L21\nBut by the moment for the PoC I'm using an ugly MakeFile:\nhttps://github.com/alonsovidales/tensorflow/blob/master/tensorflow/go/makefile\nAnd setting the flags for the linker here:\nhttps://github.com/alonsovidales/tensorflow/blob/master/tensorflow/go/cgoflags.go\nAnd also a wrapper to access the C++ libraries from C:\nhttps://github.com/alonsovidales/tensorflow/tree/master/tensorflow/go/wrapper\nBut this is just for the prototype, I plan to move all to Bazel + SWIG :)\n"}