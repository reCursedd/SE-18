{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23740", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23740/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23740/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23740/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/23740", "id": 380695084, "node_id": "MDU6SXNzdWUzODA2OTUwODQ=", "number": 23740, "title": "No TF import library to link custom operators on Windows", "user": {"login": "evgal", "id": 37838270, "node_id": "MDQ6VXNlcjM3ODM4Mjcw", "avatar_url": "https://avatars2.githubusercontent.com/u/37838270?v=4", "gravatar_id": "", "url": "https://api.github.com/users/evgal", "html_url": "https://github.com/evgal", "followers_url": "https://api.github.com/users/evgal/followers", "following_url": "https://api.github.com/users/evgal/following{/other_user}", "gists_url": "https://api.github.com/users/evgal/gists{/gist_id}", "starred_url": "https://api.github.com/users/evgal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/evgal/subscriptions", "organizations_url": "https://api.github.com/users/evgal/orgs", "repos_url": "https://api.github.com/users/evgal/repos", "events_url": "https://api.github.com/users/evgal/events{/privacy}", "received_events_url": "https://api.github.com/users/evgal/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false}], "state": "open", "locked": false, "assignee": {"login": "ymodak", "id": 42785357, "node_id": "MDQ6VXNlcjQyNzg1MzU3", "avatar_url": "https://avatars1.githubusercontent.com/u/42785357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ymodak", "html_url": "https://github.com/ymodak", "followers_url": "https://api.github.com/users/ymodak/followers", "following_url": "https://api.github.com/users/ymodak/following{/other_user}", "gists_url": "https://api.github.com/users/ymodak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ymodak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ymodak/subscriptions", "organizations_url": "https://api.github.com/users/ymodak/orgs", "repos_url": "https://api.github.com/users/ymodak/repos", "events_url": "https://api.github.com/users/ymodak/events{/privacy}", "received_events_url": "https://api.github.com/users/ymodak/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ymodak", "id": 42785357, "node_id": "MDQ6VXNlcjQyNzg1MzU3", "avatar_url": "https://avatars1.githubusercontent.com/u/42785357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ymodak", "html_url": "https://github.com/ymodak", "followers_url": "https://api.github.com/users/ymodak/followers", "following_url": "https://api.github.com/users/ymodak/following{/other_user}", "gists_url": "https://api.github.com/users/ymodak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ymodak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ymodak/subscriptions", "organizations_url": "https://api.github.com/users/ymodak/orgs", "repos_url": "https://api.github.com/users/ymodak/repos", "events_url": "https://api.github.com/users/ymodak/events{/privacy}", "received_events_url": "https://api.github.com/users/ymodak/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-11-14T13:21:01Z", "updated_at": "2018-11-14T23:34:38Z", "closed_at": null, "author_association": "NONE", "body_html": "<p><strong>System information</strong></p>\n<ul>\n<li>Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes</li>\n<li>OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10, 64 bits</li>\n<li>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: -</li>\n<li>TensorFlow installed from (source or binary): binary / pip</li>\n<li>TensorFlow version (use command below): 1.12</li>\n<li>Python version: 3.5</li>\n<li>Bazel version (if compiling from source): -</li>\n<li>GCC/Compiler version (if compiling from source): -</li>\n<li>CUDA/cuDNN version: -</li>\n<li>GPU model and memory: -</li>\n</ul>\n<p><strong>Describe the current behavior</strong></p>\n<p>The import library tensorflow\\python\\pywrap_tensorflow_internal.lib is missing. I tried to regenerate it myself from _pywrap_tensorflow_internal.pyd to build my custom operators, but<br>\ntf.load_op_library throws the exception tensorflow.python.framework.errors_impl.NotFoundError and does not find the library given in argument. The exception appears in TF_LoadLibrary.</p>\n<p><strong>Describe the expected behavior</strong></p>\n<p>In TF 1.8 the import library tensorflow\\python\\pywrap_tensorflow_internal.lib is present, but not in TF 1.12. This library is required to build custom operators.</p>\n<p>tf.load_op_library is working correctly with TensorFlow 1.8 on my configuration. The same custom operators rebuilt for TF 1.12 are not found by tf.load_op_library, although the paths of the dll given to tf.load_op_library are correct.</p>\n<p><strong>Other info / logs</strong></p>\n<p>Either there is a problem with tf.load_op_library in TF 1.12 contrary to TF 1.8, or there is a mistake in my process to generate the import library from the pyd file (the process is normally used for dll, not pyd).</p>\n<p>In all cases, the dll of the custom operator generated with the provided import library in TF 1.8 depends on _pywrap_tensorflow_internal.pyd, whereas the dll generated with my own import library for TF 1.12 depends on pywrap_tensorflow_internal.dll which is a non existing file.</p>\n<p>The simplest way to tackle this issue first seems to include again pywrap_tensorflow_internal.lib in the pip package to build custom operators on Windows.</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10, 64 bits\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: -\nTensorFlow installed from (source or binary): binary / pip\nTensorFlow version (use command below): 1.12\nPython version: 3.5\nBazel version (if compiling from source): -\nGCC/Compiler version (if compiling from source): -\nCUDA/cuDNN version: -\nGPU model and memory: -\n\nDescribe the current behavior\nThe import library tensorflow\\python\\pywrap_tensorflow_internal.lib is missing. I tried to regenerate it myself from _pywrap_tensorflow_internal.pyd to build my custom operators, but\ntf.load_op_library throws the exception tensorflow.python.framework.errors_impl.NotFoundError and does not find the library given in argument. The exception appears in TF_LoadLibrary.\nDescribe the expected behavior\nIn TF 1.8 the import library tensorflow\\python\\pywrap_tensorflow_internal.lib is present, but not in TF 1.12. This library is required to build custom operators.\ntf.load_op_library is working correctly with TensorFlow 1.8 on my configuration. The same custom operators rebuilt for TF 1.12 are not found by tf.load_op_library, although the paths of the dll given to tf.load_op_library are correct.\nOther info / logs\nEither there is a problem with tf.load_op_library in TF 1.12 contrary to TF 1.8, or there is a mistake in my process to generate the import library from the pyd file (the process is normally used for dll, not pyd).\nIn all cases, the dll of the custom operator generated with the provided import library in TF 1.8 depends on _pywrap_tensorflow_internal.pyd, whereas the dll generated with my own import library for TF 1.12 depends on pywrap_tensorflow_internal.dll which is a non existing file.\nThe simplest way to tackle this issue first seems to include again pywrap_tensorflow_internal.lib in the pip package to build custom operators on Windows.", "body": "**System information**\r\n- Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10, 64 bits\r\n- Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: -\r\n- TensorFlow installed from (source or binary): binary / pip\r\n- TensorFlow version (use command below): 1.12\r\n- Python version: 3.5\r\n- Bazel version (if compiling from source): -\r\n- GCC/Compiler version (if compiling from source): -\r\n- CUDA/cuDNN version: -\r\n- GPU model and memory: -\r\n\r\n**Describe the current behavior**\r\n\r\nThe import library tensorflow\\python\\pywrap_tensorflow_internal.lib is missing. I tried to regenerate it myself from _pywrap_tensorflow_internal.pyd to build my custom operators, but\r\ntf.load_op_library throws the exception tensorflow.python.framework.errors_impl.NotFoundError and does not find the library given in argument. The exception appears in TF_LoadLibrary.\r\n\r\n**Describe the expected behavior**\r\n\r\nIn TF 1.8 the import library tensorflow\\python\\pywrap_tensorflow_internal.lib is present, but not in TF 1.12. This library is required to build custom operators.\r\n\r\ntf.load_op_library is working correctly with TensorFlow 1.8 on my configuration. The same custom operators rebuilt for TF 1.12 are not found by tf.load_op_library, although the paths of the dll given to tf.load_op_library are correct.\r\n\r\n**Other info / logs**\r\n\r\nEither there is a problem with tf.load_op_library in TF 1.12 contrary to TF 1.8, or there is a mistake in my process to generate the import library from the pyd file (the process is normally used for dll, not pyd).\r\n\r\nIn all cases, the dll of the custom operator generated with the provided import library in TF 1.8 depends on _pywrap_tensorflow_internal.pyd, whereas the dll generated with my own import library for TF 1.12 depends on pywrap_tensorflow_internal.dll which is a non existing file.\r\n\r\nThe simplest way to tackle this issue first seems to include again pywrap_tensorflow_internal.lib in the pip package to build custom operators on Windows."}