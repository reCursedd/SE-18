{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/89087006", "pull_request_review_id": 9636091, "id": 89087006, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg5MDg3MDA2", "diff_hunk": "@@ -158,20 +147,110 @@ def _cudnn_install_basedir(repository_ctx):\n   return cudnn_install_path\n \n \n-def _cuda_version(repository_ctx):\n-  \"\"\"Detects the cuda version.\"\"\"\n-  if _TF_CUDA_VERSION in repository_ctx.os.environ:\n-    return repository_ctx.os.environ[_TF_CUDA_VERSION].strip()\n+_PREFIXES = {\n+    \"Linux\": \"lib\",\n+    \"Darwin\": \"lib\",\n+    \"Windows\": \"\",\n+}\n+\n+_EXTENSIONS = {\n+    \"Linux\": \"so\",\n+    \"Darwin\": \"dylib\",\n+    \"Windows\": \"lib\",\n+}\n+\n+def _lib_version(lib_name, repository_ctx, cpu_value, base_dir):\n+  \"\"\"Returns the version of the library parsed from its file name.\n+\n+  This method attempts to resolve the library to its canonical file, which\n+  contains the full version in the file name and then extracts the major and\n+  minor numbers from the version. For example, if the cublas library is\n+  resolved to libcublas.so.7.5.18, then this function returns \"7.5\".\n+\n+  Args:\n+    lib_name: The name of the library, such as \"cudart\"\n+    repository_ctx: The repository context.\n+    cpu_value: The name of the host operating system.\n+    base_dir: The base directory the library is installed under.\n+\n+  Returns:\n+    String containing the major and minor version numbers separated by a\n+    period.\n+  \"\"\"\n+  lib = _find_cuda_lib(lib_name, repository_ctx, cpu_value, base_dir)\n+  lib_path = lib.path\n+  basename = repository_ctx.path(lib_path).basename\n+\n+  if not cpu_value in _EXTENSIONS.keys():\n+    auto_configure_fail(\"Not supported CPU value %s\" % cpu_value)\n+  expected_basename = \"%s%s\" % (_PREFIXES[cpu_value], lib_name)\n+  extension = _EXTENSIONS[cpu_value]\n+  if basename == \"%s.%s\" % (expected_basename, extension):", "path": "third_party/gpus/cuda_configure.bzl", "position": null, "original_position": 77, "commit_id": "dfae1931365dae3354a8980829dfabcd59761232", "original_commit_id": "e72e2b3c39c7ddbafd944837bb864e2198d9d7ff", "user": {"login": "davidzchen", "id": 5283042, "node_id": "MDQ6VXNlcjUyODMwNDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "body": "Interesting. Thanks for the explanation!\r\n\r\nI have reimplemented the cuda and cudnn detection code to read the output of `nvcc --version` and `cudnn.h` to detect the versions instead and special-cased the names of the windows libraries.\r\n\r\nCan you try running it again?", "created_at": "2016-11-22T10:41:42Z", "updated_at": "2016-11-30T09:18:46Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/5494#discussion_r89087006", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/5494", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/89087006"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/5494#discussion_r89087006"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/5494"}}, "body_html": "<p>Interesting. Thanks for the explanation!</p>\n<p>I have reimplemented the cuda and cudnn detection code to read the output of <code>nvcc --version</code> and <code>cudnn.h</code> to detect the versions instead and special-cased the names of the windows libraries.</p>\n<p>Can you try running it again?</p>", "body_text": "Interesting. Thanks for the explanation!\nI have reimplemented the cuda and cudnn detection code to read the output of nvcc --version and cudnn.h to detect the versions instead and special-cased the names of the windows libraries.\nCan you try running it again?", "in_reply_to_id": 88654167}