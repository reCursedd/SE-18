{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/88860414", "pull_request_review_id": 9418945, "id": 88860414, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4ODYwNDE0", "diff_hunk": "@@ -158,20 +147,110 @@ def _cudnn_install_basedir(repository_ctx):\n   return cudnn_install_path\n \n \n-def _cuda_version(repository_ctx):\n-  \"\"\"Detects the cuda version.\"\"\"\n-  if _TF_CUDA_VERSION in repository_ctx.os.environ:\n-    return repository_ctx.os.environ[_TF_CUDA_VERSION].strip()\n+_PREFIXES = {\n+    \"Linux\": \"lib\",\n+    \"Darwin\": \"lib\",\n+    \"Windows\": \"\",\n+}\n+\n+_EXTENSIONS = {\n+    \"Linux\": \"so\",\n+    \"Darwin\": \"dylib\",\n+    \"Windows\": \"lib\",\n+}\n+\n+def _lib_version(lib_name, repository_ctx, cpu_value, base_dir):\n+  \"\"\"Returns the version of the library parsed from its file name.\n+\n+  This method attempts to resolve the library to its canonical file, which\n+  contains the full version in the file name and then extracts the major and\n+  minor numbers from the version. For example, if the cublas library is\n+  resolved to libcublas.so.7.5.18, then this function returns \"7.5\".\n+\n+  Args:\n+    lib_name: The name of the library, such as \"cudart\"\n+    repository_ctx: The repository context.\n+    cpu_value: The name of the host operating system.\n+    base_dir: The base directory the library is installed under.\n+\n+  Returns:\n+    String containing the major and minor version numbers separated by a\n+    period.\n+  \"\"\"\n+  lib = _find_cuda_lib(lib_name, repository_ctx, cpu_value, base_dir)\n+  lib_path = lib.path\n+  basename = repository_ctx.path(lib_path).basename\n+\n+  if not cpu_value in _EXTENSIONS.keys():\n+    auto_configure_fail(\"Not supported CPU value %s\" % cpu_value)\n+  expected_basename = \"%s%s\" % (_PREFIXES[cpu_value], lib_name)\n+  extension = _EXTENSIONS[cpu_value]\n+  if basename == \"%s.%s\" % (expected_basename, extension):", "path": "third_party/gpus/cuda_configure.bzl", "position": null, "original_position": 77, "commit_id": "dfae1931365dae3354a8980829dfabcd59761232", "original_commit_id": "e72e2b3c39c7ddbafd944837bb864e2198d9d7ff", "user": {"login": "meteorcloudy", "id": 4171702, "node_id": "MDQ6VXNlcjQxNzE3MDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/4171702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meteorcloudy", "html_url": "https://github.com/meteorcloudy", "followers_url": "https://api.github.com/users/meteorcloudy/followers", "following_url": "https://api.github.com/users/meteorcloudy/following{/other_user}", "gists_url": "https://api.github.com/users/meteorcloudy/gists{/gist_id}", "starred_url": "https://api.github.com/users/meteorcloudy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meteorcloudy/subscriptions", "organizations_url": "https://api.github.com/users/meteorcloudy/orgs", "repos_url": "https://api.github.com/users/meteorcloudy/repos", "events_url": "https://api.github.com/users/meteorcloudy/events{/privacy}", "received_events_url": "https://api.github.com/users/meteorcloudy/received_events", "type": "User", "site_admin": false}, "body": "The situation on Windows is a little bit complicated.\r\nBut basically, every `dll` file has a corresponding `lib` file.\r\nDuring linking time, we only need to link against the `lib` files, as long as the \"dll\" files are in PATH, the executable will run.\r\nAnd the `lib` files are non-versioned, they are just like `cuda.lib`, `cudann.lib` without version number. But the `dll` files are versioned, they are like `cudart32_80.dll`, `cudart64_80.dll`, `cudann64_5.dll`. When loading libraries in [dso_loader.cc](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/stream_executor/dso_loader.cc#L63), we are actually loading the dlls, so `GetCudaVersion()` and `GetCudnnVersion()` must return correct version number.\r\nBut the `lib` files specified in BUILD files have to be non-versioned.\r\n", "created_at": "2016-11-21T09:57:18Z", "updated_at": "2016-11-30T09:18:46Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/5494#discussion_r88860414", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/5494", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/88860414"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/5494#discussion_r88860414"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/5494"}}, "body_html": "<p>The situation on Windows is a little bit complicated.<br>\nBut basically, every <code>dll</code> file has a corresponding <code>lib</code> file.<br>\nDuring linking time, we only need to link against the <code>lib</code> files, as long as the \"dll\" files are in PATH, the executable will run.<br>\nAnd the <code>lib</code> files are non-versioned, they are just like <code>cuda.lib</code>, <code>cudann.lib</code> without version number. But the <code>dll</code> files are versioned, they are like <code>cudart32_80.dll</code>, <code>cudart64_80.dll</code>, <code>cudann64_5.dll</code>. When loading libraries in <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/stream_executor/dso_loader.cc#L63\">dso_loader.cc</a>, we are actually loading the dlls, so <code>GetCudaVersion()</code> and <code>GetCudnnVersion()</code> must return correct version number.<br>\nBut the <code>lib</code> files specified in BUILD files have to be non-versioned.</p>", "body_text": "The situation on Windows is a little bit complicated.\nBut basically, every dll file has a corresponding lib file.\nDuring linking time, we only need to link against the lib files, as long as the \"dll\" files are in PATH, the executable will run.\nAnd the lib files are non-versioned, they are just like cuda.lib, cudann.lib without version number. But the dll files are versioned, they are like cudart32_80.dll, cudart64_80.dll, cudann64_5.dll. When loading libraries in dso_loader.cc, we are actually loading the dlls, so GetCudaVersion() and GetCudnnVersion() must return correct version number.\nBut the lib files specified in BUILD files have to be non-versioned.", "in_reply_to_id": 88654167}