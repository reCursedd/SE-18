{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/89104554", "pull_request_review_id": 9653147, "id": 89104554, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg5MTA0NTU0", "diff_hunk": "@@ -158,20 +147,110 @@ def _cudnn_install_basedir(repository_ctx):\n   return cudnn_install_path\n \n \n-def _cuda_version(repository_ctx):\n-  \"\"\"Detects the cuda version.\"\"\"\n-  if _TF_CUDA_VERSION in repository_ctx.os.environ:\n-    return repository_ctx.os.environ[_TF_CUDA_VERSION].strip()\n+_PREFIXES = {\n+    \"Linux\": \"lib\",\n+    \"Darwin\": \"lib\",\n+    \"Windows\": \"\",\n+}\n+\n+_EXTENSIONS = {\n+    \"Linux\": \"so\",\n+    \"Darwin\": \"dylib\",\n+    \"Windows\": \"lib\",\n+}\n+\n+def _lib_version(lib_name, repository_ctx, cpu_value, base_dir):\n+  \"\"\"Returns the version of the library parsed from its file name.\n+\n+  This method attempts to resolve the library to its canonical file, which\n+  contains the full version in the file name and then extracts the major and\n+  minor numbers from the version. For example, if the cublas library is\n+  resolved to libcublas.so.7.5.18, then this function returns \"7.5\".\n+\n+  Args:\n+    lib_name: The name of the library, such as \"cudart\"\n+    repository_ctx: The repository context.\n+    cpu_value: The name of the host operating system.\n+    base_dir: The base directory the library is installed under.\n+\n+  Returns:\n+    String containing the major and minor version numbers separated by a\n+    period.\n+  \"\"\"\n+  lib = _find_cuda_lib(lib_name, repository_ctx, cpu_value, base_dir)\n+  lib_path = lib.path\n+  basename = repository_ctx.path(lib_path).basename\n+\n+  if not cpu_value in _EXTENSIONS.keys():\n+    auto_configure_fail(\"Not supported CPU value %s\" % cpu_value)\n+  expected_basename = \"%s%s\" % (_PREFIXES[cpu_value], lib_name)\n+  extension = _EXTENSIONS[cpu_value]\n+  if basename == \"%s.%s\" % (expected_basename, extension):", "path": "third_party/gpus/cuda_configure.bzl", "position": null, "original_position": 77, "commit_id": "dfae1931365dae3354a8980829dfabcd59761232", "original_commit_id": "e72e2b3c39c7ddbafd944837bb864e2198d9d7ff", "user": {"login": "meteorcloudy", "id": 4171702, "node_id": "MDQ6VXNlcjQxNzE3MDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/4171702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meteorcloudy", "html_url": "https://github.com/meteorcloudy", "followers_url": "https://api.github.com/users/meteorcloudy/followers", "following_url": "https://api.github.com/users/meteorcloudy/following{/other_user}", "gists_url": "https://api.github.com/users/meteorcloudy/gists{/gist_id}", "starred_url": "https://api.github.com/users/meteorcloudy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meteorcloudy/subscriptions", "organizations_url": "https://api.github.com/users/meteorcloudy/orgs", "repos_url": "https://api.github.com/users/meteorcloudy/repos", "events_url": "https://api.github.com/users/meteorcloudy/events{/privacy}", "received_events_url": "https://api.github.com/users/meteorcloudy/received_events", "type": "User", "site_admin": false}, "body": "Thanks David! The previous error is gone. Just two small problems.\r\n1. When finding nvcc_path in [`_cuda_version`](https://github.com/tensorflow/tensorflow/pull/5494/files#diff-27368da6eb4c2514a27a4d9733bc9b57R164), the nvcc executable has to end with `.exe`, otherwise skylark can't find it.\r\n2. The version numbers returned by parsing output of `nvcc --version` are `8.0` for cuda and `5` for cudnn, they don't have the `64_` prefix(We only support 64 bit on Windows, right?). I think we need to strip `.` in it and add `64_` as prefix, so that  `cudart64_80.dll`, `cudnn64_5.dll` can be loaded at runtime.", "created_at": "2016-11-22T12:25:29Z", "updated_at": "2016-11-30T09:18:46Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/5494#discussion_r89104554", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/5494", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/89104554"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/5494#discussion_r89104554"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/5494"}}, "body_html": "<p>Thanks David! The previous error is gone. Just two small problems.</p>\n<ol>\n<li>When finding nvcc_path in <a href=\"https://github.com/tensorflow/tensorflow/pull/5494/files#diff-27368da6eb4c2514a27a4d9733bc9b57R164\"><code>_cuda_version</code></a>, the nvcc executable has to end with <code>.exe</code>, otherwise skylark can't find it.</li>\n<li>The version numbers returned by parsing output of <code>nvcc --version</code> are <code>8.0</code> for cuda and <code>5</code> for cudnn, they don't have the <code>64_</code> prefix(We only support 64 bit on Windows, right?). I think we need to strip <code>.</code> in it and add <code>64_</code> as prefix, so that  <code>cudart64_80.dll</code>, <code>cudnn64_5.dll</code> can be loaded at runtime.</li>\n</ol>", "body_text": "Thanks David! The previous error is gone. Just two small problems.\n\nWhen finding nvcc_path in _cuda_version, the nvcc executable has to end with .exe, otherwise skylark can't find it.\nThe version numbers returned by parsing output of nvcc --version are 8.0 for cuda and 5 for cudnn, they don't have the 64_ prefix(We only support 64 bit on Windows, right?). I think we need to strip . in it and add 64_ as prefix, so that  cudart64_80.dll, cudnn64_5.dll can be loaded at runtime.", "in_reply_to_id": 88654167}