{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/59898978", "pull_request_review_id": null, "id": 59898978, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5ODk4OTc4", "diff_hunk": "@@ -297,29 +297,91 @@ def complex(real, imag, name=None):\n \n   Given a tensor `real` representing the real part of a complex number, and a\n   tensor `imag` representing the imaginary part of a complex number, this\n-  operation computes complex numbers elementwise of the form \\\\\\\\(a + bj\\\\\\\\),\n-  where *a* represents the `real` part and *b* represents the `imag` part.\n+  operation returns complex numbers elementwise of the form \\\\(a + bj\\\\), where\n+  *a* represents the `real` part and *b* represents the `imag` part.\n \n-  The input tensors `real` and `imag` must be the same shape.\n+  The input tensors `real` and `imag` must have the same shape.\n \n   For example:\n \n   ```\n   # tensor 'real' is [2.25, 3.25]\n   # tensor `imag` is [4.75, 5.75]\n-  tf.complex(real, imag) ==> [[2.25 + 4.74j], [3.25 + 5.75j]]\n+  tf.complex(real, imag) ==> [[2.25 + 4.75j], [3.25 + 5.75j]]\n   ```\n \n   Args:\n-    real: A `Tensor` of type `float`.\n-    imag: A `Tensor` of type `float`.\n+    real: A `Tensor`. Must be one of the following types: `float32`, `float64`.\n+    imag: A `Tensor`. Must have the same type as `real`.\n     name: A name for the operation (optional).\n \n   Returns:\n-    A `Tensor` of type `complex64`.\n+    A `Tensor` of type `complex64` or `complex128`.\n   \"\"\"\n   with ops.op_scope([real, imag], name, \"Complex\") as name:\n-    return gen_math_ops._complex(real, imag, name=name)\n+    input_types = (real.dtype, imag.dtype)\n+    if input_types == (dtypes.float64, dtypes.float64):\n+      Tout = dtypes.complex128\n+    elif input_types == (dtypes.float32, dtypes.float32):\n+      Tout = dtypes.complex64\n+    else:\n+      raise TypeError(\"Types of real and imag don't match: \"\n+                      \"{} {}\".format(real.dtype.name, imag.dtype.name))\n+    return gen_math_ops._complex(real, imag, Tout=Tout, name=name)\n+\n+\n+def real(in_, name=None):\n+  \"\"\"Returns the real part of a complex number.\n+\n+  Given a tensor `in` of complex numbers, this operation returns a tensor of\n+  type `float` or `double` that is the real part of each element in `in`. All\n+  elements in `in` must be complex numbers of the form \\\\(a + bj\\\\), where *a*\n+  is the real part returned by this operation and *b* is the imaginary part.\n+\n+  For example:\n+\n+  ```\n+  # tensor 'in' is [-2.25 + 4.75j, 3.25 + 5.75j]\n+  tf.real(in) ==> [-2.25, 3.25]\n+  ```\n+\n+  Args:\n+    in_: A `Tensor`. Must be one of the following types: `complex64`,\n+         `complex128`.\n+    name: A name for the operation (optional).\n+\n+  Returns:\n+    A `Tensor` of type `float` or `double`.\n+  \"\"\"\n+  with ops.op_scope([in_], name, \"Real\") as name:\n+    return gen_math_ops.real(in_, Tout=in_.dtype.real_dtype, name=name)\n+\n+\n+def imag(in_, name=None):", "path": "tensorflow/python/ops/math_ops.py", "position": null, "original_position": 72, "commit_id": "59030ecfc3cda55e2238598c646a8dd5e63a7472", "original_commit_id": "d15831798822ebf37148ac91239becea6f85675c", "user": {"login": "girving", "id": 70511, "node_id": "MDQ6VXNlcjcwNTEx", "avatar_url": "https://avatars1.githubusercontent.com/u/70511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/girving", "html_url": "https://github.com/girving", "followers_url": "https://api.github.com/users/girving/followers", "following_url": "https://api.github.com/users/girving/following{/other_user}", "gists_url": "https://api.github.com/users/girving/gists{/gist_id}", "starred_url": "https://api.github.com/users/girving/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/girving/subscriptions", "organizations_url": "https://api.github.com/users/girving/orgs", "repos_url": "https://api.github.com/users/girving/repos", "events_url": "https://api.github.com/users/girving/events{/privacy}", "received_events_url": "https://api.github.com/users/girving/received_events", "type": "User", "site_admin": false}, "body": "in_ -> value\n", "created_at": "2016-04-15T16:09:57Z", "updated_at": "2016-05-14T21:20:19Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/1929#discussion_r59898978", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/1929", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/59898978"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/1929#discussion_r59898978"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/1929"}}, "body_html": "<p>in_ -&gt; value</p>", "body_text": "in_ -> value"}