{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/353354471", "html_url": "https://github.com/tensorflow/tensorflow/issues/13433#issuecomment-353354471", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13433", "id": 353354471, "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzM1NDQ3MQ==", "user": {"login": "marek-krcal", "id": 26710141, "node_id": "MDQ6VXNlcjI2NzEwMTQx", "avatar_url": "https://avatars0.githubusercontent.com/u/26710141?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marek-krcal", "html_url": "https://github.com/marek-krcal", "followers_url": "https://api.github.com/users/marek-krcal/followers", "following_url": "https://api.github.com/users/marek-krcal/following{/other_user}", "gists_url": "https://api.github.com/users/marek-krcal/gists{/gist_id}", "starred_url": "https://api.github.com/users/marek-krcal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marek-krcal/subscriptions", "organizations_url": "https://api.github.com/users/marek-krcal/orgs", "repos_url": "https://api.github.com/users/marek-krcal/repos", "events_url": "https://api.github.com/users/marek-krcal/events{/privacy}", "received_events_url": "https://api.github.com/users/marek-krcal/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-21T13:46:37Z", "updated_at": "2017-12-21T14:24:43Z", "author_association": "NONE", "body_html": "<p>When using <code>var_zero = tf.contrib.framework.zero_initializer()</code> I am able to allocate roughly all the 12GB of the GPU memory. However, once I start filling that variable by data, I get \"ResourceExhaustedError: OOM...\". The error happens as long as my variable is roughly above 8GB:</p>\n<pre><code>dtype = 'float32'\nfeatures = np.ones((4000000,538),dtype)\nshape = features.shape\nprint(features.nbytes) #prints 8608000000\nfeatures_var = tf.Variable(tf.ones(shape,dtype=dtype),trainable=False,dtype=dtype)\nefficient_init = tf.contrib.framework.zero_initializer(features_var)\nprint('initializing data variable features_var by zeros')\nsess.run(efficient_init)\nsess.run(tf.assign(features_var[:1000,:],features[:1000,:]))\n</code></pre>\n<p>(The same error happens if I try to fill the features_var through an assignment from a placeholder.)<br>\nOnce I set the features to have the shape=(3900000,538), the error disappears.</p>\n<p>Having 8GB of data on GPU is already nice, but I am wondering if there is a way of how to make use of the remaining 4GB?</p>", "body_text": "When using var_zero = tf.contrib.framework.zero_initializer() I am able to allocate roughly all the 12GB of the GPU memory. However, once I start filling that variable by data, I get \"ResourceExhaustedError: OOM...\". The error happens as long as my variable is roughly above 8GB:\ndtype = 'float32'\nfeatures = np.ones((4000000,538),dtype)\nshape = features.shape\nprint(features.nbytes) #prints 8608000000\nfeatures_var = tf.Variable(tf.ones(shape,dtype=dtype),trainable=False,dtype=dtype)\nefficient_init = tf.contrib.framework.zero_initializer(features_var)\nprint('initializing data variable features_var by zeros')\nsess.run(efficient_init)\nsess.run(tf.assign(features_var[:1000,:],features[:1000,:]))\n\n(The same error happens if I try to fill the features_var through an assignment from a placeholder.)\nOnce I set the features to have the shape=(3900000,538), the error disappears.\nHaving 8GB of data on GPU is already nice, but I am wondering if there is a way of how to make use of the remaining 4GB?", "body": "When using `var_zero = tf.contrib.framework.zero_initializer()` I am able to allocate roughly all the 12GB of the GPU memory. However, once I start filling that variable by data, I get \"ResourceExhaustedError: OOM...\". The error happens as long as my variable is roughly above 8GB:\r\n```\r\ndtype = 'float32'\r\nfeatures = np.ones((4000000,538),dtype)\r\nshape = features.shape\r\nprint(features.nbytes) #prints 8608000000\r\nfeatures_var = tf.Variable(tf.ones(shape,dtype=dtype),trainable=False,dtype=dtype)\r\nefficient_init = tf.contrib.framework.zero_initializer(features_var)\r\nprint('initializing data variable features_var by zeros')\r\nsess.run(efficient_init)\r\nsess.run(tf.assign(features_var[:1000,:],features[:1000,:]))\r\n```\r\n(The same error happens if I try to fill the features_var through an assignment from a placeholder.)\r\nOnce I set the features to have the shape=(3900000,538), the error disappears.\r\n\r\nHaving 8GB of data on GPU is already nice, but I am wondering if there is a way of how to make use of the remaining 4GB?"}