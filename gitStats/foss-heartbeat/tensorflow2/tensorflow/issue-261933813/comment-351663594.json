{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/351663594", "html_url": "https://github.com/tensorflow/tensorflow/issues/13433#issuecomment-351663594", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13433", "id": 351663594, "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTY2MzU5NA==", "user": {"login": "alextp", "id": 5061, "node_id": "MDQ6VXNlcjUwNjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alextp", "html_url": "https://github.com/alextp", "followers_url": "https://api.github.com/users/alextp/followers", "following_url": "https://api.github.com/users/alextp/following{/other_user}", "gists_url": "https://api.github.com/users/alextp/gists{/gist_id}", "starred_url": "https://api.github.com/users/alextp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alextp/subscriptions", "organizations_url": "https://api.github.com/users/alextp/orgs", "repos_url": "https://api.github.com/users/alextp/repos", "events_url": "https://api.github.com/users/alextp/events{/privacy}", "received_events_url": "https://api.github.com/users/alextp/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-14T09:58:33Z", "updated_at": "2017-12-14T09:58:33Z", "author_association": "MEMBER", "body_html": "<div class=\"email-fragment\">Actually this situation has been improved and you should be able to\ninitialize a tf.Variable with a non-constant initializer without using\ntwice the memory. Constant initializers are troublesome (constants overall\nare quite broken in tf).</div>\n<span class=\"email-hidden-toggle\"><a href=\"#\">\u2026</a></span><div class=\"email-hidden-reply\">\n<div class=\"email-quoted-reply\">On Wed, Dec 13, 2017 at 5:10 PM, marek-krcal ***@***.***&gt; wrote:\n I agree with <a class=\"user-mention\" href=\"https://github.com/georgh\">@georgh</a> &lt;<a href=\"https://github.com/georgh\">https://github.com/georgh</a>&gt;:\n I believe my deep learning work is pretty down-to-earth but already two\n times in past several months I came across the urgent need of sending the\n training (and testing) dataset to the gpu memory.\n A simple minded way in Keras is seting up a large fixed embedding layer,\n but then a \"protobuf error\" appears when the size exceeds 2GB (the\n limitation seem artificial to me, but I admit, I don't see into the core of\n tensorflow at all).\n Then I tried to work in pure tensorflow in the sense of this post but it\n turns out that unless I use some hardly documented hack, I can use only\n half of the gpu memory (I don't understand why other dozens of people are\n not complaining here:)).\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n &lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"261933813\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/13433\" href=\"https://github.com/tensorflow/tensorflow/issues/13433#issuecomment-351456846\">#13433 (comment)</a>&gt;,\n or mute the thread\n &lt;<a href=\"https://github.com/notifications/unsubscribe-auth/AAATxS9tVEk9GCSKAkYA31lTLUYjnxcAks5tAAUigaJpZM4Pp-Qh\">https://github.com/notifications/unsubscribe-auth/AAATxS9tVEk9GCSKAkYA31lTLUYjnxcAks5tAAUigaJpZM4Pp-Qh</a>&gt;\n .\n</div>\n<div class=\"email-fragment\"></div>\n<div class=\"email-signature-reply\">-- \n - Alex</div>\n</div>", "body_text": "Actually this situation has been improved and you should be able to\ninitialize a tf.Variable with a non-constant initializer without using\ntwice the memory. Constant initializers are troublesome (constants overall\nare quite broken in tf).\n\u2026\nOn Wed, Dec 13, 2017 at 5:10 PM, marek-krcal ***@***.***> wrote:\n I agree with @georgh <https://github.com/georgh>:\n I believe my deep learning work is pretty down-to-earth but already two\n times in past several months I came across the urgent need of sending the\n training (and testing) dataset to the gpu memory.\n A simple minded way in Keras is seting up a large fixed embedding layer,\n but then a \"protobuf error\" appears when the size exceeds 2GB (the\n limitation seem artificial to me, but I admit, I don't see into the core of\n tensorflow at all).\n Then I tried to work in pure tensorflow in the sense of this post but it\n turns out that unless I use some hardly documented hack, I can use only\n half of the gpu memory (I don't understand why other dozens of people are\n not complaining here:)).\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#13433 (comment)>,\n or mute the thread\n <https://github.com/notifications/unsubscribe-auth/AAATxS9tVEk9GCSKAkYA31lTLUYjnxcAks5tAAUigaJpZM4Pp-Qh>\n .\n\n\n-- \n - Alex", "body": "Actually this situation has been improved and you should be able to\ninitialize a tf.Variable with a non-constant initializer without using\ntwice the memory. Constant initializers are troublesome (constants overall\nare quite broken in tf).\n\nOn Wed, Dec 13, 2017 at 5:10 PM, marek-krcal <notifications@github.com>\nwrote:\n\n> I agree with @georgh <https://github.com/georgh>:\n> I believe my deep learning work is pretty down-to-earth but already two\n> times in past several months I came across the urgent need of sending the\n> training (and testing) dataset to the gpu memory.\n> A simple minded way in Keras is seting up a large fixed embedding layer,\n> but then a \"protobuf error\" appears when the size exceeds 2GB (the\n> limitation seem artificial to me, but I admit, I don't see into the core of\n> tensorflow at all).\n> Then I tried to work in pure tensorflow in the sense of this post but it\n> turns out that unless I use some hardly documented hack, I can use only\n> half of the gpu memory (I don't understand why other dozens of people are\n> not complaining here:)).\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/tensorflow/issues/13433#issuecomment-351456846>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAATxS9tVEk9GCSKAkYA31lTLUYjnxcAks5tAAUigaJpZM4Pp-Qh>\n> .\n>\n\n\n\n-- \n - Alex\n"}