{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/397761204", "html_url": "https://github.com/tensorflow/tensorflow/issues/2625#issuecomment-397761204", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2625", "id": 397761204, "node_id": "MDEyOklzc3VlQ29tbWVudDM5Nzc2MTIwNA==", "user": {"login": "ppwwyyxx", "id": 1381301, "node_id": "MDQ6VXNlcjEzODEzMDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1381301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ppwwyyxx", "html_url": "https://github.com/ppwwyyxx", "followers_url": "https://api.github.com/users/ppwwyyxx/followers", "following_url": "https://api.github.com/users/ppwwyyxx/following{/other_user}", "gists_url": "https://api.github.com/users/ppwwyyxx/gists{/gist_id}", "starred_url": "https://api.github.com/users/ppwwyyxx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ppwwyyxx/subscriptions", "organizations_url": "https://api.github.com/users/ppwwyyxx/orgs", "repos_url": "https://api.github.com/users/ppwwyyxx/repos", "events_url": "https://api.github.com/users/ppwwyyxx/events{/privacy}", "received_events_url": "https://api.github.com/users/ppwwyyxx/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-15T22:49:02Z", "updated_at": "2018-06-15T22:49:02Z", "author_association": "CONTRIBUTOR", "body_html": "<p>This snippet might be related:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\ndata <span class=\"pl-k\">=</span> np.random.rand(<span class=\"pl-c1\">int</span>(<span class=\"pl-c1\">1e4</span>), <span class=\"pl-c1\">int</span>(<span class=\"pl-c1\">1e4</span>)) <span class=\"pl-k\">+</span> np.random.rand(<span class=\"pl-c1\">int</span>(<span class=\"pl-c1\">1e4</span>), <span class=\"pl-c1\">1</span>)\ndata <span class=\"pl-k\">=</span> data.astype(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>float32<span class=\"pl-pds\">'</span></span>)\nvec <span class=\"pl-k\">=</span> tf.placeholder(tf.float32, data.shape)\ns <span class=\"pl-k\">=</span> tf.reduce_sum(vec)\n<span class=\"pl-k\">with</span> tf.Session(<span class=\"pl-v\">config</span><span class=\"pl-k\">=</span>tf.ConfigProto(<span class=\"pl-v\">intra_op_parallelism_threads</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>)) <span class=\"pl-k\">as</span> sess:\n    np_sum <span class=\"pl-k\">=</span> np.sum(data)\n    tf_sum <span class=\"pl-k\">=</span> sess.run(s, <span class=\"pl-v\">feed_dict</span><span class=\"pl-k\">=</span>{vec: data})\n    diff <span class=\"pl-k\">=</span> <span class=\"pl-c1\">abs</span>(tf_sum <span class=\"pl-k\">-</span> np_sum)\n    <span class=\"pl-c1\">print</span>(diff, diff<span class=\"pl-k\">/</span><span class=\"pl-c1\">1e8</span>)   <span class=\"pl-c\"><span class=\"pl-c\">#</span> difference can be as large as 200656, when running with CPU.</span>\n\ndata <span class=\"pl-k\">=</span> data.astype(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>float64<span class=\"pl-pds\">'</span></span>)\nvec <span class=\"pl-k\">=</span> tf.placeholder(tf.float64, data.shape)\ns <span class=\"pl-k\">=</span> tf.reduce_sum(vec)\n<span class=\"pl-k\">with</span> tf.Session(<span class=\"pl-v\">config</span><span class=\"pl-k\">=</span>tf.ConfigProto(<span class=\"pl-v\">intra_op_parallelism_threads</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>)) <span class=\"pl-k\">as</span> sess:\n    np_sum <span class=\"pl-k\">=</span> np.sum(data)\n    tf_sum <span class=\"pl-k\">=</span> sess.run(s, <span class=\"pl-v\">feed_dict</span><span class=\"pl-k\">=</span>{vec: data})\n    diff <span class=\"pl-k\">=</span> <span class=\"pl-c1\">abs</span>(tf_sum <span class=\"pl-k\">-</span> np_sum)\n    <span class=\"pl-c1\">print</span>(diff, diff<span class=\"pl-k\">/</span><span class=\"pl-c1\">1e8</span>)</pre></div>", "body_text": "This snippet might be related:\nimport tensorflow as tf\nimport numpy as np\ndata = np.random.rand(int(1e4), int(1e4)) + np.random.rand(int(1e4), 1)\ndata = data.astype('float32')\nvec = tf.placeholder(tf.float32, data.shape)\ns = tf.reduce_sum(vec)\nwith tf.Session(config=tf.ConfigProto(intra_op_parallelism_threads=1)) as sess:\n    np_sum = np.sum(data)\n    tf_sum = sess.run(s, feed_dict={vec: data})\n    diff = abs(tf_sum - np_sum)\n    print(diff, diff/1e8)   # difference can be as large as 200656, when running with CPU.\n\ndata = data.astype('float64')\nvec = tf.placeholder(tf.float64, data.shape)\ns = tf.reduce_sum(vec)\nwith tf.Session(config=tf.ConfigProto(intra_op_parallelism_threads=1)) as sess:\n    np_sum = np.sum(data)\n    tf_sum = sess.run(s, feed_dict={vec: data})\n    diff = abs(tf_sum - np_sum)\n    print(diff, diff/1e8)", "body": "This snippet might be related:\r\n```python\r\nimport tensorflow as tf\r\nimport numpy as np\r\ndata = np.random.rand(int(1e4), int(1e4)) + np.random.rand(int(1e4), 1)\r\ndata = data.astype('float32')\r\nvec = tf.placeholder(tf.float32, data.shape)\r\ns = tf.reduce_sum(vec)\r\nwith tf.Session(config=tf.ConfigProto(intra_op_parallelism_threads=1)) as sess:\r\n    np_sum = np.sum(data)\r\n    tf_sum = sess.run(s, feed_dict={vec: data})\r\n    diff = abs(tf_sum - np_sum)\r\n    print(diff, diff/1e8)   # difference can be as large as 200656, when running with CPU.\r\n\r\ndata = data.astype('float64')\r\nvec = tf.placeholder(tf.float64, data.shape)\r\ns = tf.reduce_sum(vec)\r\nwith tf.Session(config=tf.ConfigProto(intra_op_parallelism_threads=1)) as sess:\r\n    np_sum = np.sum(data)\r\n    tf_sum = sess.run(s, feed_dict={vec: data})\r\n    diff = abs(tf_sum - np_sum)\r\n    print(diff, diff/1e8)\r\n```"}