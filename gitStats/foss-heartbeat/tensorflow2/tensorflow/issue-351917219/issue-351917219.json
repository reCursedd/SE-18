{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21716", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21716/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21716/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21716/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/21716", "id": 351917219, "node_id": "MDExOlB1bGxSZXF1ZXN0MjA5MzY4OTg1", "number": 21716, "title": "parallel_for: use absl wrapper and add converter for SoftplusGrad", "user": {"login": "artsobolev", "id": 434122, "node_id": "MDQ6VXNlcjQzNDEyMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/434122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artsobolev", "html_url": "https://github.com/artsobolev", "followers_url": "https://api.github.com/users/artsobolev/followers", "following_url": "https://api.github.com/users/artsobolev/following{/other_user}", "gists_url": "https://api.github.com/users/artsobolev/gists{/gist_id}", "starred_url": "https://api.github.com/users/artsobolev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artsobolev/subscriptions", "organizations_url": "https://api.github.com/users/artsobolev/orgs", "repos_url": "https://api.github.com/users/artsobolev/repos", "events_url": "https://api.github.com/users/artsobolev/events{/privacy}", "received_events_url": "https://api.github.com/users/artsobolev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}, {"id": 987666414, "node_id": "MDU6TGFiZWw5ODc2NjY0MTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/ready%20to%20pull", "name": "ready to pull", "color": "2cd643", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "protoget", "id": 5117188, "node_id": "MDQ6VXNlcjUxMTcxODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5117188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/protoget", "html_url": "https://github.com/protoget", "followers_url": "https://api.github.com/users/protoget/followers", "following_url": "https://api.github.com/users/protoget/following{/other_user}", "gists_url": "https://api.github.com/users/protoget/gists{/gist_id}", "starred_url": "https://api.github.com/users/protoget/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/protoget/subscriptions", "organizations_url": "https://api.github.com/users/protoget/orgs", "repos_url": "https://api.github.com/users/protoget/repos", "events_url": "https://api.github.com/users/protoget/events{/privacy}", "received_events_url": "https://api.github.com/users/protoget/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "protoget", "id": 5117188, "node_id": "MDQ6VXNlcjUxMTcxODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5117188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/protoget", "html_url": "https://github.com/protoget", "followers_url": "https://api.github.com/users/protoget/followers", "following_url": "https://api.github.com/users/protoget/following{/other_user}", "gists_url": "https://api.github.com/users/protoget/gists{/gist_id}", "starred_url": "https://api.github.com/users/protoget/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/protoget/subscriptions", "organizations_url": "https://api.github.com/users/protoget/orgs", "repos_url": "https://api.github.com/users/protoget/repos", "events_url": "https://api.github.com/users/protoget/events{/privacy}", "received_events_url": "https://api.github.com/users/protoget/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-08-19T16:49:49Z", "updated_at": "2018-09-05T21:40:06Z", "closed_at": "2018-09-05T21:40:06Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21716", "html_url": "https://github.com/tensorflow/tensorflow/pull/21716", "diff_url": "https://github.com/tensorflow/tensorflow/pull/21716.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/21716.patch"}, "body_html": "<p>Consider the following snippet</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">from</span> tensorflow.python.ops.parallel_for <span class=\"pl-k\">import</span> gradients\n\nx <span class=\"pl-k\">=</span> tf.placeholder(tf.float32, (<span class=\"pl-c1\">None</span>,))\ny <span class=\"pl-k\">=</span> tf.nn.softplus(x)\n\n<span class=\"pl-c1\">print</span>(gradients.jacobian(y, x))</pre></div>\n<p>On the current master it fails with</p>\n<pre><code>Traceback (most recent call last):\n  File \"test.py\", line 7, in &lt;module&gt;\n    print(gradients.jacobian(y, x))\n  File \"/Users/asobolev/dev/tensorflow/pfor_test/venv/lib/python3.6/site-packages/tensorflow/python/ops/parallel_for/gradients.py\", line 58, in jacobian\n    pfor_outputs = control_flow_ops.pfor(loop_fn, output_size)\n  File \"/Users/asobolev/dev/tensorflow/pfor_test/venv/lib/python3.6/site-packages/tensorflow/python/ops/parallel_for/control_flow_ops.py\", line 122, in pfor\n    outputs.append(converter.convert(loop_fn_output))\n  File \"/Users/asobolev/dev/tensorflow/pfor_test/venv/lib/python3.6/site-packages/tensorflow/python/ops/parallel_for/pfor.py\", line 1075, in convert\n    output = self._convert_helper(y)\n  File \"/Users/asobolev/dev/tensorflow/pfor_test/venv/lib/python3.6/site-packages/tensorflow/python/ops/parallel_for/pfor.py\", line 1214, in _convert_helper\n    if flags.FLAGS.op_conversion_fallback_to_while_loop:\n  File \"/Users/asobolev/dev/tensorflow/pfor_test/venv/lib/python3.6/site-packages/absl/flags/_flagvalues.py\", line 488, in __getattr__\n    raise _exceptions.UnparsedFlagAccessError(error_message)\nabsl.flags._exceptions.UnparsedFlagAccessError: Trying to access flag --op_conversion_fallback_to_while_loop before flags were parsed.\n</code></pre>\n<p>This is caused by the fact that no converter is registered for the <code>SoftplusGrad</code> op, and when parallel_for sees no converter defined, it tries to fall back to a while loop, if this is allowed with a special CLI flag. The problem, though, is that it uses raw <code>absl</code> call which requires one to first explicitly parse command line arguments. To mitigate that, one should use a flags wrapper from the <code>tensorflow.platform</code>, which is what I did.</p>\n<p>Also, this pull introduces a converter for <code>SoftplusGrad</code> in the same way as, say, <code>SigmoidGrad</code>.</p>", "body_text": "Consider the following snippet\nimport tensorflow as tf\nfrom tensorflow.python.ops.parallel_for import gradients\n\nx = tf.placeholder(tf.float32, (None,))\ny = tf.nn.softplus(x)\n\nprint(gradients.jacobian(y, x))\nOn the current master it fails with\nTraceback (most recent call last):\n  File \"test.py\", line 7, in <module>\n    print(gradients.jacobian(y, x))\n  File \"/Users/asobolev/dev/tensorflow/pfor_test/venv/lib/python3.6/site-packages/tensorflow/python/ops/parallel_for/gradients.py\", line 58, in jacobian\n    pfor_outputs = control_flow_ops.pfor(loop_fn, output_size)\n  File \"/Users/asobolev/dev/tensorflow/pfor_test/venv/lib/python3.6/site-packages/tensorflow/python/ops/parallel_for/control_flow_ops.py\", line 122, in pfor\n    outputs.append(converter.convert(loop_fn_output))\n  File \"/Users/asobolev/dev/tensorflow/pfor_test/venv/lib/python3.6/site-packages/tensorflow/python/ops/parallel_for/pfor.py\", line 1075, in convert\n    output = self._convert_helper(y)\n  File \"/Users/asobolev/dev/tensorflow/pfor_test/venv/lib/python3.6/site-packages/tensorflow/python/ops/parallel_for/pfor.py\", line 1214, in _convert_helper\n    if flags.FLAGS.op_conversion_fallback_to_while_loop:\n  File \"/Users/asobolev/dev/tensorflow/pfor_test/venv/lib/python3.6/site-packages/absl/flags/_flagvalues.py\", line 488, in __getattr__\n    raise _exceptions.UnparsedFlagAccessError(error_message)\nabsl.flags._exceptions.UnparsedFlagAccessError: Trying to access flag --op_conversion_fallback_to_while_loop before flags were parsed.\n\nThis is caused by the fact that no converter is registered for the SoftplusGrad op, and when parallel_for sees no converter defined, it tries to fall back to a while loop, if this is allowed with a special CLI flag. The problem, though, is that it uses raw absl call which requires one to first explicitly parse command line arguments. To mitigate that, one should use a flags wrapper from the tensorflow.platform, which is what I did.\nAlso, this pull introduces a converter for SoftplusGrad in the same way as, say, SigmoidGrad.", "body": "Consider the following snippet\r\n\r\n```python\r\nimport tensorflow as tf\r\nfrom tensorflow.python.ops.parallel_for import gradients\r\n\r\nx = tf.placeholder(tf.float32, (None,))\r\ny = tf.nn.softplus(x)\r\n\r\nprint(gradients.jacobian(y, x))\r\n```\r\n\r\nOn the current master it fails with\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 7, in <module>\r\n    print(gradients.jacobian(y, x))\r\n  File \"/Users/asobolev/dev/tensorflow/pfor_test/venv/lib/python3.6/site-packages/tensorflow/python/ops/parallel_for/gradients.py\", line 58, in jacobian\r\n    pfor_outputs = control_flow_ops.pfor(loop_fn, output_size)\r\n  File \"/Users/asobolev/dev/tensorflow/pfor_test/venv/lib/python3.6/site-packages/tensorflow/python/ops/parallel_for/control_flow_ops.py\", line 122, in pfor\r\n    outputs.append(converter.convert(loop_fn_output))\r\n  File \"/Users/asobolev/dev/tensorflow/pfor_test/venv/lib/python3.6/site-packages/tensorflow/python/ops/parallel_for/pfor.py\", line 1075, in convert\r\n    output = self._convert_helper(y)\r\n  File \"/Users/asobolev/dev/tensorflow/pfor_test/venv/lib/python3.6/site-packages/tensorflow/python/ops/parallel_for/pfor.py\", line 1214, in _convert_helper\r\n    if flags.FLAGS.op_conversion_fallback_to_while_loop:\r\n  File \"/Users/asobolev/dev/tensorflow/pfor_test/venv/lib/python3.6/site-packages/absl/flags/_flagvalues.py\", line 488, in __getattr__\r\n    raise _exceptions.UnparsedFlagAccessError(error_message)\r\nabsl.flags._exceptions.UnparsedFlagAccessError: Trying to access flag --op_conversion_fallback_to_while_loop before flags were parsed.\r\n```\r\n\r\nThis is caused by the fact that no converter is registered for the `SoftplusGrad` op, and when parallel_for sees no converter defined, it tries to fall back to a while loop, if this is allowed with a special CLI flag. The problem, though, is that it uses raw `absl` call which requires one to first explicitly parse command line arguments. To mitigate that, one should use a flags wrapper from the `tensorflow.platform`, which is what I did.\r\n\r\nAlso, this pull introduces a converter for `SoftplusGrad` in the same way as, say, `SigmoidGrad`."}