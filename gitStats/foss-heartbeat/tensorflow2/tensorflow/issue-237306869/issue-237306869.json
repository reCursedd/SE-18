{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10864", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10864/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10864/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10864/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/10864", "id": 237306869, "node_id": "MDU6SXNzdWUyMzczMDY4Njk=", "number": 10864, "title": "Feature Request: Sequence to Sequence Bucketing/Batching", "user": {"login": "RylanSchaeffer", "id": 8942987, "node_id": "MDQ6VXNlcjg5NDI5ODc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8942987?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RylanSchaeffer", "html_url": "https://github.com/RylanSchaeffer", "followers_url": "https://api.github.com/users/RylanSchaeffer/followers", "following_url": "https://api.github.com/users/RylanSchaeffer/following{/other_user}", "gists_url": "https://api.github.com/users/RylanSchaeffer/gists{/gist_id}", "starred_url": "https://api.github.com/users/RylanSchaeffer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RylanSchaeffer/subscriptions", "organizations_url": "https://api.github.com/users/RylanSchaeffer/orgs", "repos_url": "https://api.github.com/users/RylanSchaeffer/repos", "events_url": "https://api.github.com/users/RylanSchaeffer/events{/privacy}", "received_events_url": "https://api.github.com/users/RylanSchaeffer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-06-20T18:42:08Z", "updated_at": "2017-06-20T22:01:26Z", "closed_at": "2017-06-20T19:53:48Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: macOS Sierra Version 10.12.5</li>\n<li><strong>TensorFlow version (use command below)</strong>: v1.2.0-rc2-21-g12f033d 1.2.0</li>\n</ul>\n<h3>Describe the feature</h3>\n<p><code>tf.contrib.training.bucket_by_sequence_length()</code> and <code>tf.contrib.training.bucket()</code> are useful for creating batches of similar-length sequences for training dynamic RNNs. I'd like to be able to create batches of similar-length <code>(input sequence, output sequence)</code> pairs to train Sequence to Sequence models with dynamic encoders and dynamic decoders. I may be wrong, but as far as I can tell, there is no easy way to adapt either of the current bucketing functions to create batches like this. The seq2seq translate <a href=\"https://github.com/tensorflow/models/blob/master/tutorials/rnn/translate/seq2seq_model.py\">tutorial</a> relies on a method <code>def get_batch(self, data, bucket_id)</code> to get such batches, but I think it'd be nicer if TensorFlow had a built-in function that didn't rely on a custom implementation and that integrated nicely with FIFOQueues for reading data.</p>", "body_text": "System information\n\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): macOS Sierra Version 10.12.5\nTensorFlow version (use command below): v1.2.0-rc2-21-g12f033d 1.2.0\n\nDescribe the feature\ntf.contrib.training.bucket_by_sequence_length() and tf.contrib.training.bucket() are useful for creating batches of similar-length sequences for training dynamic RNNs. I'd like to be able to create batches of similar-length (input sequence, output sequence) pairs to train Sequence to Sequence models with dynamic encoders and dynamic decoders. I may be wrong, but as far as I can tell, there is no easy way to adapt either of the current bucketing functions to create batches like this. The seq2seq translate tutorial relies on a method def get_batch(self, data, bucket_id) to get such batches, but I think it'd be nicer if TensorFlow had a built-in function that didn't rely on a custom implementation and that integrated nicely with FIFOQueues for reading data.", "body": "### System information\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: macOS Sierra Version 10.12.5\r\n- **TensorFlow version (use command below)**: v1.2.0-rc2-21-g12f033d 1.2.0\r\n\r\n### Describe the feature\r\n`tf.contrib.training.bucket_by_sequence_length()` and `tf.contrib.training.bucket()` are useful for creating batches of similar-length sequences for training dynamic RNNs. I'd like to be able to create batches of similar-length `(input sequence, output sequence)` pairs to train Sequence to Sequence models with dynamic encoders and dynamic decoders. I may be wrong, but as far as I can tell, there is no easy way to adapt either of the current bucketing functions to create batches like this. The seq2seq translate [tutorial](https://github.com/tensorflow/models/blob/master/tutorials/rnn/translate/seq2seq_model.py) relies on a method `def get_batch(self, data, bucket_id)` to get such batches, but I think it'd be nicer if TensorFlow had a built-in function that didn't rely on a custom implementation and that integrated nicely with FIFOQueues for reading data."}