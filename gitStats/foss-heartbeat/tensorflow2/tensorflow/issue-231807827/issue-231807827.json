{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10251", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10251/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10251/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10251/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/10251", "id": 231807827, "node_id": "MDU6SXNzdWUyMzE4MDc4Mjc=", "number": 10251, "title": "Support for custom input producers", "user": {"login": "Androbin", "id": 16437156, "node_id": "MDQ6VXNlcjE2NDM3MTU2", "avatar_url": "https://avatars1.githubusercontent.com/u/16437156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Androbin", "html_url": "https://github.com/Androbin", "followers_url": "https://api.github.com/users/Androbin/followers", "following_url": "https://api.github.com/users/Androbin/following{/other_user}", "gists_url": "https://api.github.com/users/Androbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Androbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Androbin/subscriptions", "organizations_url": "https://api.github.com/users/Androbin/orgs", "repos_url": "https://api.github.com/users/Androbin/repos", "events_url": "https://api.github.com/users/Androbin/events{/privacy}", "received_events_url": "https://api.github.com/users/Androbin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-05-27T15:18:23Z", "updated_at": "2017-05-28T00:41:35Z", "closed_at": "2017-05-28T00:41:35Z", "author_association": "CONTRIBUTOR", "body_html": "<p>This is a request for custom functions to feed examples into input pipelines. Existing ops are designed to read pre-defined formats. Although it is entirely possible to pre-process all the data beforehand, I felt like it shouldn't be necessary, especially in realtime environments. It'd be more convenient to pass TensorFlow a lambda to use to generate the batches instead of pre-processing them into TFRecords or dealing with nasty IO or using the not scalable option of python dicts.</p>\n<p>[Please tell me if there already exists such a solution, I didn't find a way to do it.]</p>", "body_text": "This is a request for custom functions to feed examples into input pipelines. Existing ops are designed to read pre-defined formats. Although it is entirely possible to pre-process all the data beforehand, I felt like it shouldn't be necessary, especially in realtime environments. It'd be more convenient to pass TensorFlow a lambda to use to generate the batches instead of pre-processing them into TFRecords or dealing with nasty IO or using the not scalable option of python dicts.\n[Please tell me if there already exists such a solution, I didn't find a way to do it.]", "body": "This is a request for custom functions to feed examples into input pipelines. Existing ops are designed to read pre-defined formats. Although it is entirely possible to pre-process all the data beforehand, I felt like it shouldn't be necessary, especially in realtime environments. It'd be more convenient to pass TensorFlow a lambda to use to generate the batches instead of pre-processing them into TFRecords or dealing with nasty IO or using the not scalable option of python dicts.\r\n\r\n[Please tell me if there already exists such a solution, I didn't find a way to do it.]"}