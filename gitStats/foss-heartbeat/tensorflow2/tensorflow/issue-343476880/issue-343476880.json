{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21040", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21040/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21040/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21040/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21040", "id": 343476880, "node_id": "MDU6SXNzdWUzNDM0NzY4ODA=", "number": 21040, "title": "How to calculate backward pass with feeding custom gradients.", "user": {"login": "yoshi4241link", "id": 38642255, "node_id": "MDQ6VXNlcjM4NjQyMjU1", "avatar_url": "https://avatars1.githubusercontent.com/u/38642255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yoshi4241link", "html_url": "https://github.com/yoshi4241link", "followers_url": "https://api.github.com/users/yoshi4241link/followers", "following_url": "https://api.github.com/users/yoshi4241link/following{/other_user}", "gists_url": "https://api.github.com/users/yoshi4241link/gists{/gist_id}", "starred_url": "https://api.github.com/users/yoshi4241link/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yoshi4241link/subscriptions", "organizations_url": "https://api.github.com/users/yoshi4241link/orgs", "repos_url": "https://api.github.com/users/yoshi4241link/repos", "events_url": "https://api.github.com/users/yoshi4241link/events{/privacy}", "received_events_url": "https://api.github.com/users/yoshi4241link/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-07-23T03:38:28Z", "updated_at": "2018-07-23T03:40:44Z", "closed_at": "2018-07-23T03:40:44Z", "author_association": "NONE", "body_html": "<p>Currently I am replacing Pythorch's code with tensorflow implementation code.</p>\n<p>The reference code has the following line.</p>\n<h5></h5>\n<p>XXX.backward(grad_output, retain_graph=True)<br>\nYYY = input.grad.detach().sum(1).clone().clamp(min=0)</p>\n<h5></h5>\n<p>XXX corresponds to ResNet's N<em>N</em>C map before fc layers.<br>\nIn this code, the directly defined gradient is entered instead of the loss value in the calculation of the backward path.</p>\n<p>How can I describe this to implement with tensorflow?</p>", "body_text": "Currently I am replacing Pythorch's code with tensorflow implementation code.\nThe reference code has the following line.\n\nXXX.backward(grad_output, retain_graph=True)\nYYY = input.grad.detach().sum(1).clone().clamp(min=0)\n\nXXX corresponds to ResNet's NNC map before fc layers.\nIn this code, the directly defined gradient is entered instead of the loss value in the calculation of the backward path.\nHow can I describe this to implement with tensorflow?", "body": "Currently I am replacing Pythorch's code with tensorflow implementation code.\r\n\r\nThe reference code has the following line.\r\n#####\r\nXXX.backward(grad_output, retain_graph=True)\r\nYYY = input.grad.detach().sum(1).clone().clamp(min=0)\r\n#####\r\nXXX corresponds to ResNet's N*N*C map before fc layers.\r\nIn this code, the directly defined gradient is entered instead of the loss value in the calculation of the backward path.\r\n\r\nHow can I describe this to implement with tensorflow?"}