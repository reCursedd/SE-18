{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/241940282", "html_url": "https://github.com/tensorflow/tensorflow/issues/739#issuecomment-241940282", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/739", "id": 241940282, "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTk0MDI4Mg==", "user": {"login": "zplizzi", "id": 5598968, "node_id": "MDQ6VXNlcjU1OTg5Njg=", "avatar_url": "https://avatars0.githubusercontent.com/u/5598968?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zplizzi", "html_url": "https://github.com/zplizzi", "followers_url": "https://api.github.com/users/zplizzi/followers", "following_url": "https://api.github.com/users/zplizzi/following{/other_user}", "gists_url": "https://api.github.com/users/zplizzi/gists{/gist_id}", "starred_url": "https://api.github.com/users/zplizzi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zplizzi/subscriptions", "organizations_url": "https://api.github.com/users/zplizzi/orgs", "repos_url": "https://api.github.com/users/zplizzi/repos", "events_url": "https://api.github.com/users/zplizzi/events{/privacy}", "received_events_url": "https://api.github.com/users/zplizzi/received_events", "type": "User", "site_admin": false}, "created_at": "2016-08-24T02:27:50Z", "updated_at": "2016-08-24T02:27:50Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=19379953\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/isabel-schwende\">@isabel-schwende</a> I used Selective Search since, if I remember correctly, it's what was used in the original RCNN and Fast-RCNN papers. Not knowing much of anything about region proposal algorithms, I figured that was probably a good endorsement and haven't tried anything else. I'm not sure that the Python implementation is very good or fast, but I'd personally probably lean towards working on getting Faster-RCNN working vs trying to improve an external region proposal system.</p>", "body_text": "@isabel-schwende I used Selective Search since, if I remember correctly, it's what was used in the original RCNN and Fast-RCNN papers. Not knowing much of anything about region proposal algorithms, I figured that was probably a good endorsement and haven't tried anything else. I'm not sure that the Python implementation is very good or fast, but I'd personally probably lean towards working on getting Faster-RCNN working vs trying to improve an external region proposal system.", "body": "@isabel-schwende I used Selective Search since, if I remember correctly, it's what was used in the original RCNN and Fast-RCNN papers. Not knowing much of anything about region proposal algorithms, I figured that was probably a good endorsement and haven't tried anything else. I'm not sure that the Python implementation is very good or fast, but I'd personally probably lean towards working on getting Faster-RCNN working vs trying to improve an external region proposal system.\n"}