{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/400475765", "html_url": "https://github.com/tensorflow/tensorflow/pull/20284#issuecomment-400475765", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20284", "id": 400475765, "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDQ3NTc2NQ==", "user": {"login": "msarahan", "id": 38393, "node_id": "MDQ6VXNlcjM4Mzkz", "avatar_url": "https://avatars3.githubusercontent.com/u/38393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msarahan", "html_url": "https://github.com/msarahan", "followers_url": "https://api.github.com/users/msarahan/followers", "following_url": "https://api.github.com/users/msarahan/following{/other_user}", "gists_url": "https://api.github.com/users/msarahan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msarahan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msarahan/subscriptions", "organizations_url": "https://api.github.com/users/msarahan/orgs", "repos_url": "https://api.github.com/users/msarahan/repos", "events_url": "https://api.github.com/users/msarahan/events{/privacy}", "received_events_url": "https://api.github.com/users/msarahan/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-26T21:55:51Z", "updated_at": "2018-06-26T21:55:51Z", "author_association": "NONE", "body_html": "<p>Thank you for working on this!  I've been trying to use this for Anaconda's packages, too.  I'm having some difficulty with the hardcoding of paths, such as with cython: <a href=\"https://github.com/tensorflow/tensorflow/pull/20284/files#diff-c8176cf1a58a40560176239b30ef7e52R8\">https://github.com/tensorflow/tensorflow/pull/20284/files#diff-c8176cf1a58a40560176239b30ef7e52R8</a></p>\n<p>Is there a good way to have that be more dynamic?  For example, all of our build paths are relative to an environment variable, <code>$PREFIX</code>.  For you, this is probably <code>/usr</code> or maybe <code>/usr/local</code>.  For us, it can be anything, and essentially never <code>/usr</code>.  Perhaps we could use <code>$PREFIX</code> in the build files, and have it fall back to a default of <code>/usr</code> when it is not defined?</p>", "body_text": "Thank you for working on this!  I've been trying to use this for Anaconda's packages, too.  I'm having some difficulty with the hardcoding of paths, such as with cython: https://github.com/tensorflow/tensorflow/pull/20284/files#diff-c8176cf1a58a40560176239b30ef7e52R8\nIs there a good way to have that be more dynamic?  For example, all of our build paths are relative to an environment variable, $PREFIX.  For you, this is probably /usr or maybe /usr/local.  For us, it can be anything, and essentially never /usr.  Perhaps we could use $PREFIX in the build files, and have it fall back to a default of /usr when it is not defined?", "body": "Thank you for working on this!  I've been trying to use this for Anaconda's packages, too.  I'm having some difficulty with the hardcoding of paths, such as with cython: https://github.com/tensorflow/tensorflow/pull/20284/files#diff-c8176cf1a58a40560176239b30ef7e52R8\r\n\r\nIs there a good way to have that be more dynamic?  For example, all of our build paths are relative to an environment variable, ``$PREFIX``.  For you, this is probably ``/usr`` or maybe ``/usr/local``.  For us, it can be anything, and essentially never ``/usr``.  Perhaps we could use ``$PREFIX`` in the build files, and have it fall back to a default of ``/usr`` when it is not defined?"}