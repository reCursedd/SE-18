{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/400651168", "html_url": "https://github.com/tensorflow/tensorflow/pull/20284#issuecomment-400651168", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20284", "id": 400651168, "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDY1MTE2OA==", "user": {"login": "perfinion", "id": 363227, "node_id": "MDQ6VXNlcjM2MzIyNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/363227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/perfinion", "html_url": "https://github.com/perfinion", "followers_url": "https://api.github.com/users/perfinion/followers", "following_url": "https://api.github.com/users/perfinion/following{/other_user}", "gists_url": "https://api.github.com/users/perfinion/gists{/gist_id}", "starred_url": "https://api.github.com/users/perfinion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/perfinion/subscriptions", "organizations_url": "https://api.github.com/users/perfinion/orgs", "repos_url": "https://api.github.com/users/perfinion/repos", "events_url": "https://api.github.com/users/perfinion/events{/privacy}", "received_events_url": "https://api.github.com/users/perfinion/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-27T12:17:28Z", "updated_at": "2018-06-27T12:17:28Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=38393\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/msarahan\">@msarahan</a> for cython specifically, it used to prefix it with $PYTHON_BIN_PATH which made things not work on gentoo since we have a special thing to select which python version is the default. that has been reverted so looks like its really easy now.</p>\n<p>You dont need to bother with any of the generating stuff, the cmd= and copts and linkopts can all do make and bash variable expansion.<br>\n<a href=\"https://docs.bazel.build/versions/master/be/make-variables.html#make-var-substitution\" rel=\"nofollow\">https://docs.bazel.build/versions/master/be/make-variables.html#make-var-substitution</a><br>\n<a href=\"https://docs.bazel.build/versions/master/be/common-definitions.html#sh-tokenization\" rel=\"nofollow\">https://docs.bazel.build/versions/master/be/common-definitions.html#sh-tokenization</a></p>\n<p>You should be able to have just cython.BUILD with this:</p>\n<pre><code>genrule(\n    name = \"lncython\",\n    outs = [\"cython.py\"],\n    cmd = \"ln -s $$(which cython) $@\",\n)\n\nsh_binary(\n    name = \"cython_binary\",\n    srcs = [\"cython.py\"],\n    visibility = [\"//visibility:public\"],\n)\n</code></pre>\n<p>Alternatively, in .bazelrc set <code>build --define PREFIX=/usr</code> then use <code>cmd = \"ln -s $(PREFIX)/bin/cython\"</code><br>\nThe problem is if PREFIX is not defined it fails, I havent figured out yet how to make it default to a blank value.</p>\n<p>putting an <code>echo $${PREFIX}</code> inside cmd= does not work either but I think it should. That would be the best since we could use bash defaulting to do eg: \"${PREFIX:-/usr}/bin/cython\"</p>\n<p>In copts and linkopts you can probably do \"-I$(PREFIX)/include\".</p>", "body_text": "@msarahan for cython specifically, it used to prefix it with $PYTHON_BIN_PATH which made things not work on gentoo since we have a special thing to select which python version is the default. that has been reverted so looks like its really easy now.\nYou dont need to bother with any of the generating stuff, the cmd= and copts and linkopts can all do make and bash variable expansion.\nhttps://docs.bazel.build/versions/master/be/make-variables.html#make-var-substitution\nhttps://docs.bazel.build/versions/master/be/common-definitions.html#sh-tokenization\nYou should be able to have just cython.BUILD with this:\ngenrule(\n    name = \"lncython\",\n    outs = [\"cython.py\"],\n    cmd = \"ln -s $$(which cython) $@\",\n)\n\nsh_binary(\n    name = \"cython_binary\",\n    srcs = [\"cython.py\"],\n    visibility = [\"//visibility:public\"],\n)\n\nAlternatively, in .bazelrc set build --define PREFIX=/usr then use cmd = \"ln -s $(PREFIX)/bin/cython\"\nThe problem is if PREFIX is not defined it fails, I havent figured out yet how to make it default to a blank value.\nputting an echo $${PREFIX} inside cmd= does not work either but I think it should. That would be the best since we could use bash defaulting to do eg: \"${PREFIX:-/usr}/bin/cython\"\nIn copts and linkopts you can probably do \"-I$(PREFIX)/include\".", "body": "@msarahan for cython specifically, it used to prefix it with $PYTHON_BIN_PATH which made things not work on gentoo since we have a special thing to select which python version is the default. that has been reverted so looks like its really easy now.\r\n\r\nYou dont need to bother with any of the generating stuff, the cmd= and copts and linkopts can all do make and bash variable expansion.\r\nhttps://docs.bazel.build/versions/master/be/make-variables.html#make-var-substitution\r\nhttps://docs.bazel.build/versions/master/be/common-definitions.html#sh-tokenization\r\n\r\nYou should be able to have just cython.BUILD with this:\r\n```\r\ngenrule(\r\n    name = \"lncython\",\r\n    outs = [\"cython.py\"],\r\n    cmd = \"ln -s $$(which cython) $@\",\r\n)\r\n\r\nsh_binary(\r\n    name = \"cython_binary\",\r\n    srcs = [\"cython.py\"],\r\n    visibility = [\"//visibility:public\"],\r\n)\r\n```\r\n\r\nAlternatively, in .bazelrc set `build --define PREFIX=/usr` then use `cmd = \"ln -s $(PREFIX)/bin/cython\"`\r\nThe problem is if PREFIX is not defined it fails, I havent figured out yet how to make it default to a blank value.\r\n\r\nputting an `echo $${PREFIX}` inside cmd= does not work either but I think it should. That would be the best since we could use bash defaulting to do eg: \"${PREFIX:-/usr}/bin/cython\"\r\n\r\nIn copts and linkopts you can probably do \"-I$(PREFIX)/include\".\r\n"}