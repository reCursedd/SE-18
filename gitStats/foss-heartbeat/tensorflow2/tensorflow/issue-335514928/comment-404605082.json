{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/404605082", "html_url": "https://github.com/tensorflow/tensorflow/pull/20284#issuecomment-404605082", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20284", "id": 404605082, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDYwNTA4Mg==", "user": {"login": "perfinion", "id": 363227, "node_id": "MDQ6VXNlcjM2MzIyNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/363227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/perfinion", "html_url": "https://github.com/perfinion", "followers_url": "https://api.github.com/users/perfinion/followers", "following_url": "https://api.github.com/users/perfinion/following{/other_user}", "gists_url": "https://api.github.com/users/perfinion/gists{/gist_id}", "starred_url": "https://api.github.com/users/perfinion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/perfinion/subscriptions", "organizations_url": "https://api.github.com/users/perfinion/orgs", "repos_url": "https://api.github.com/users/perfinion/repos", "events_url": "https://api.github.com/users/perfinion/events{/privacy}", "received_events_url": "https://api.github.com/users/perfinion/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-12T18:22:27Z", "updated_at": "2018-07-12T18:22:27Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=577277\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/martinwicke\">@martinwicke</a><br>\nI could remove the whitelist, I thought it was safer to have but have no strong feelings either way. Could also remove it in the future if it ends up being a headache frequently. I was thinking later I could add a TF_SYSTEM_LIBS=\"all\" which would just enable the whole whitelist.</p>\n<p>When you add a new dep it will be bundled like things were in the past to start with. If unbundling it works (ie it has a release etc) then I or someone else from a distro can put together the unbundling rules.</p>\n<p>If you update a dep, in most cases nothing will be needed in the systemlibs side. The libs would have the same name so the compiler would find it just the same as before. Distro packages would need to keep track of the minimum versions of deps but that goes for any package. If the dep changes significantly then the BUILD file will need updating but should be much less than the non-systemlib BUILD files</p>", "body_text": "@martinwicke\nI could remove the whitelist, I thought it was safer to have but have no strong feelings either way. Could also remove it in the future if it ends up being a headache frequently. I was thinking later I could add a TF_SYSTEM_LIBS=\"all\" which would just enable the whole whitelist.\nWhen you add a new dep it will be bundled like things were in the past to start with. If unbundling it works (ie it has a release etc) then I or someone else from a distro can put together the unbundling rules.\nIf you update a dep, in most cases nothing will be needed in the systemlibs side. The libs would have the same name so the compiler would find it just the same as before. Distro packages would need to keep track of the minimum versions of deps but that goes for any package. If the dep changes significantly then the BUILD file will need updating but should be much less than the non-systemlib BUILD files", "body": "@martinwicke \r\nI could remove the whitelist, I thought it was safer to have but have no strong feelings either way. Could also remove it in the future if it ends up being a headache frequently. I was thinking later I could add a TF_SYSTEM_LIBS=\"all\" which would just enable the whole whitelist.\r\n\r\nWhen you add a new dep it will be bundled like things were in the past to start with. If unbundling it works (ie it has a release etc) then I or someone else from a distro can put together the unbundling rules.\r\n\r\nIf you update a dep, in most cases nothing will be needed in the systemlibs side. The libs would have the same name so the compiler would find it just the same as before. Distro packages would need to keep track of the minimum versions of deps but that goes for any package. If the dep changes significantly then the BUILD file will need updating but should be much less than the non-systemlib BUILD files\r\n"}