{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/400609908", "html_url": "https://github.com/tensorflow/tensorflow/pull/20284#issuecomment-400609908", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20284", "id": 400609908, "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDYwOTkwOA==", "user": {"login": "perfinion", "id": 363227, "node_id": "MDQ6VXNlcjM2MzIyNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/363227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/perfinion", "html_url": "https://github.com/perfinion", "followers_url": "https://api.github.com/users/perfinion/followers", "following_url": "https://api.github.com/users/perfinion/following{/other_user}", "gists_url": "https://api.github.com/users/perfinion/gists{/gist_id}", "starred_url": "https://api.github.com/users/perfinion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/perfinion/subscriptions", "organizations_url": "https://api.github.com/users/perfinion/orgs", "repos_url": "https://api.github.com/users/perfinion/repos", "events_url": "https://api.github.com/users/perfinion/events{/privacy}", "received_events_url": "https://api.github.com/users/perfinion/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-27T09:41:07Z", "updated_at": "2018-06-27T09:41:07Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=38393\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/msarahan\">@msarahan</a> yeah, the prefixing is something that I forsaw as problematic. Normal gentoo uses $ROOT=/, but we definitely do support both cross-compiling (eg $ROOT=/usr/arm-linux-gnu/) and also installing things as a whole alongside another distro/machine/whatever (eg $PREFIX=/home/jason/root/). Currently those cases are probably also broken.</p>\n<p>I was thinking to write some simple scripts like find-binary.sh and find-python.sh and change the genrule()'s to use those instead of directly cp'ing fixed paths. Once there are scripts then it would be quite easy to add extra logic per-distro or to search pkg-config for whatever flags. Not every distro puts binaries in the same place too so scripts would be more robust.</p>\n<p>About $PREFIX specifically, bazel strips basically everything from the environment currently. There are issues filed with the bazel team and it will eventually more variables. In the mean time you'd need to add something like build --action_env=PREFIX.</p>\n<p>This patch set is already getting pretty large so I think we should get this basic functionality merged in then later patchsets will be smaller and much easier to review :) Other than editing some paths in third_party/systemlibs/*.BUILD, has the rest mostly been working for you? If some of the core bits fail horribly for your case, that would probably warrant fixing first. You can look at the gentoo ebuilds for inspiration too but they aren't pretty yet: <a href=\"https://github.com/gentoo/gentoo/tree/master/sci-libs/tensorflow\">https://github.com/gentoo/gentoo/tree/master/sci-libs/tensorflow</a></p>", "body_text": "@msarahan yeah, the prefixing is something that I forsaw as problematic. Normal gentoo uses $ROOT=/, but we definitely do support both cross-compiling (eg $ROOT=/usr/arm-linux-gnu/) and also installing things as a whole alongside another distro/machine/whatever (eg $PREFIX=/home/jason/root/). Currently those cases are probably also broken.\nI was thinking to write some simple scripts like find-binary.sh and find-python.sh and change the genrule()'s to use those instead of directly cp'ing fixed paths. Once there are scripts then it would be quite easy to add extra logic per-distro or to search pkg-config for whatever flags. Not every distro puts binaries in the same place too so scripts would be more robust.\nAbout $PREFIX specifically, bazel strips basically everything from the environment currently. There are issues filed with the bazel team and it will eventually more variables. In the mean time you'd need to add something like build --action_env=PREFIX.\nThis patch set is already getting pretty large so I think we should get this basic functionality merged in then later patchsets will be smaller and much easier to review :) Other than editing some paths in third_party/systemlibs/*.BUILD, has the rest mostly been working for you? If some of the core bits fail horribly for your case, that would probably warrant fixing first. You can look at the gentoo ebuilds for inspiration too but they aren't pretty yet: https://github.com/gentoo/gentoo/tree/master/sci-libs/tensorflow", "body": "@msarahan yeah, the prefixing is something that I forsaw as problematic. Normal gentoo uses $ROOT=/, but we definitely do support both cross-compiling (eg $ROOT=/usr/arm-linux-gnu/) and also installing things as a whole alongside another distro/machine/whatever (eg $PREFIX=/home/jason/root/). Currently those cases are probably also broken. \r\n\r\nI was thinking to write some simple scripts like find-binary.sh and find-python.sh and change the genrule()'s to use those instead of directly cp'ing fixed paths. Once there are scripts then it would be quite easy to add extra logic per-distro or to search pkg-config for whatever flags. Not every distro puts binaries in the same place too so scripts would be more robust.\r\n\r\nAbout $PREFIX specifically, bazel strips basically everything from the environment currently. There are issues filed with the bazel team and it will eventually more variables. In the mean time you'd need to add something like build --action_env=PREFIX.\r\n\r\nThis patch set is already getting pretty large so I think we should get this basic functionality merged in then later patchsets will be smaller and much easier to review :) Other than editing some paths in third_party/systemlibs/*.BUILD, has the rest mostly been working for you? If some of the core bits fail horribly for your case, that would probably warrant fixing first. You can look at the gentoo ebuilds for inspiration too but they aren't pretty yet: https://github.com/gentoo/gentoo/tree/master/sci-libs/tensorflow\r\n"}