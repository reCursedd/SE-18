{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/238148962", "html_url": "https://github.com/tensorflow/tensorflow/pull/3671#issuecomment-238148962", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3671", "id": 238148962, "node_id": "MDEyOklzc3VlQ29tbWVudDIzODE0ODk2Mg==", "user": {"login": "xodus7", "id": 20853485, "node_id": "MDQ6VXNlcjIwODUzNDg1", "avatar_url": "https://avatars1.githubusercontent.com/u/20853485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xodus7", "html_url": "https://github.com/xodus7", "followers_url": "https://api.github.com/users/xodus7/followers", "following_url": "https://api.github.com/users/xodus7/following{/other_user}", "gists_url": "https://api.github.com/users/xodus7/gists{/gist_id}", "starred_url": "https://api.github.com/users/xodus7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xodus7/subscriptions", "organizations_url": "https://api.github.com/users/xodus7/orgs", "repos_url": "https://api.github.com/users/xodus7/repos", "events_url": "https://api.github.com/users/xodus7/events{/privacy}", "received_events_url": "https://api.github.com/users/xodus7/received_events", "type": "User", "site_admin": false}, "created_at": "2016-08-08T06:05:56Z", "updated_at": "2016-08-08T06:05:56Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5105569\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/suiyuan2009\">@suiyuan2009</a> I've tested it with good results on a custom character RNN using a modified GRU cell (as described in the appendix of the paper). Training performance was ~50% slower due to the 4 extra layer normalizations per cell, but the network converged much quicker and with a lower perplexity overall.</p>", "body_text": "@suiyuan2009 I've tested it with good results on a custom character RNN using a modified GRU cell (as described in the appendix of the paper). Training performance was ~50% slower due to the 4 extra layer normalizations per cell, but the network converged much quicker and with a lower perplexity overall.", "body": "@suiyuan2009 I've tested it with good results on a custom character RNN using a modified GRU cell (as described in the appendix of the paper). Training performance was ~50% slower due to the 4 extra layer normalizations per cell, but the network converged much quicker and with a lower perplexity overall.\n"}