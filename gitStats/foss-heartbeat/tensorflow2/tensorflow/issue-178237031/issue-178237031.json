{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4500", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4500/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4500/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4500/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/4500", "id": 178237031, "node_id": "MDU6SXNzdWUxNzgyMzcwMzE=", "number": 4500, "title": "Attempting to use uninitialized value lstm/LSTMCell/W_0 on Distributed TensorFlow", "user": {"login": "qingzew", "id": 3603171, "node_id": "MDQ6VXNlcjM2MDMxNzE=", "avatar_url": "https://avatars2.githubusercontent.com/u/3603171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qingzew", "html_url": "https://github.com/qingzew", "followers_url": "https://api.github.com/users/qingzew/followers", "following_url": "https://api.github.com/users/qingzew/following{/other_user}", "gists_url": "https://api.github.com/users/qingzew/gists{/gist_id}", "starred_url": "https://api.github.com/users/qingzew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qingzew/subscriptions", "organizations_url": "https://api.github.com/users/qingzew/orgs", "repos_url": "https://api.github.com/users/qingzew/repos", "events_url": "https://api.github.com/users/qingzew/events{/privacy}", "received_events_url": "https://api.github.com/users/qingzew/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2016-09-21T03:32:25Z", "updated_at": "2017-02-27T14:23:37Z", "closed_at": "2016-11-08T17:16:58Z", "author_association": "NONE", "body_html": "<p>On a cluster of Tensorflow, which has one ps server, and one worker:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">inference</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>, <span class=\"pl-smi\">inds</span>, <span class=\"pl-smi\">early_stops</span>):\n\n            <span class=\"pl-c1\">...</span>\n\n            <span class=\"pl-k\">with</span> tf.variable_scope(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>lstm_encoder<span class=\"pl-pds\">'</span></span>) <span class=\"pl-k\">as</span> scope:\n                initializer <span class=\"pl-k\">=</span> tf.random_uniform_initializer(<span class=\"pl-k\">-</span><span class=\"pl-c1\">0.08</span>, <span class=\"pl-c1\">0.08</span>)\n                lstm_cell <span class=\"pl-k\">=</span> tf.nn.rnn_cell.LSTMCell(<span class=\"pl-c1\">self</span>.hidden_units, <span class=\"pl-v\">initializer</span> <span class=\"pl-k\">=</span> initializer, <span class=\"pl-v\">state_is_tuple</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">True</span>)\n                <span class=\"pl-k\">if</span> <span class=\"pl-c1\">self</span>.is_training <span class=\"pl-k\">and</span> <span class=\"pl-c1\">self</span>.keep_prob <span class=\"pl-k\">&lt;</span> <span class=\"pl-c1\">1</span>:\n                    lstm_cell <span class=\"pl-k\">=</span> tf.nn.rnn_cell.DropoutWrapper(lstm_cell, <span class=\"pl-v\">output_keep_prob</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">self</span>.keep_prob)\n\n       <span class=\"pl-c1\">...</span></pre></div>\n<div class=\"highlight highlight-source-python\"><pre> <span class=\"pl-k\">with</span> tf.device(tf.train.replica_device_setter(<span class=\"pl-v\">worker_device</span> <span class=\"pl-k\">=</span>\n                                                          <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/job:worker/task:<span class=\"pl-c1\">%d</span><span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">%</span> <span class=\"pl-c1\">int</span>(os.environ[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>task_index<span class=\"pl-pds\">'</span></span>]), <span class=\"pl-v\">cluster</span> <span class=\"pl-k\">=</span> cluster)):\n                train_op, loss <span class=\"pl-k\">=</span> inference()</pre></div>\n<p>it turns out that:</p>\n<pre><code>tensorflow.python.framework.errors.FailedPreconditionError: Attempting to use uninitialized value sentiment/lstm_encoder/RNN/LSTMCell/W_0\n     [[Node: sentiment/lstm_encoder/RNN/LSTMCell/W_0_S8 = _Send[T=DT_FLOAT, client_terminated=false, recv_device=\"/job:worker/replica:0/task:0/gpu:0\", send_device=\"/job:ps/replica:0/task:0/gpu:0\", send_device_incarnation=-5768356229269645157, tensor_name=\"edge_226_sentiment/lstm_encoder/RNN/LSTMCell/W_0\", _device=\"/job:ps/replica:0/task:0/gpu:0\"](sentiment/lstm_encoder/RNN/LSTMCell/W_0)]]\n     [[Node: sentiment/lstm_encoder/RNN/LSTMCell/B/Assign_S4 = _Recv[client_terminated=false, recv_device=\"/job:worker/replica:0/task:0/gpu:0\", send_device=\"/job:ps/replica:0/task:0/gpu:0\", send_device_incarnation=-5768356229269645157, tensor_name=\"edge_214_sentiment/lstm_encoder/RNN/LSTMCell/B/Assign\", tensor_type=DT_FLOAT, _device=\"/job:worker/replica:0/task:0/gpu:0\"]()]]\n</code></pre>\n<p>I try to place variables on cpu or gpu, both of them did not work.</p>", "body_text": "On a cluster of Tensorflow, which has one ps server, and one worker:\ndef inference(self, inds, early_stops):\n\n            ...\n\n            with tf.variable_scope('lstm_encoder') as scope:\n                initializer = tf.random_uniform_initializer(-0.08, 0.08)\n                lstm_cell = tf.nn.rnn_cell.LSTMCell(self.hidden_units, initializer = initializer, state_is_tuple = True)\n                if self.is_training and self.keep_prob < 1:\n                    lstm_cell = tf.nn.rnn_cell.DropoutWrapper(lstm_cell, output_keep_prob = self.keep_prob)\n\n       ...\n with tf.device(tf.train.replica_device_setter(worker_device =\n                                                          '/job:worker/task:%d' % int(os.environ['task_index']), cluster = cluster)):\n                train_op, loss = inference()\nit turns out that:\ntensorflow.python.framework.errors.FailedPreconditionError: Attempting to use uninitialized value sentiment/lstm_encoder/RNN/LSTMCell/W_0\n     [[Node: sentiment/lstm_encoder/RNN/LSTMCell/W_0_S8 = _Send[T=DT_FLOAT, client_terminated=false, recv_device=\"/job:worker/replica:0/task:0/gpu:0\", send_device=\"/job:ps/replica:0/task:0/gpu:0\", send_device_incarnation=-5768356229269645157, tensor_name=\"edge_226_sentiment/lstm_encoder/RNN/LSTMCell/W_0\", _device=\"/job:ps/replica:0/task:0/gpu:0\"](sentiment/lstm_encoder/RNN/LSTMCell/W_0)]]\n     [[Node: sentiment/lstm_encoder/RNN/LSTMCell/B/Assign_S4 = _Recv[client_terminated=false, recv_device=\"/job:worker/replica:0/task:0/gpu:0\", send_device=\"/job:ps/replica:0/task:0/gpu:0\", send_device_incarnation=-5768356229269645157, tensor_name=\"edge_214_sentiment/lstm_encoder/RNN/LSTMCell/B/Assign\", tensor_type=DT_FLOAT, _device=\"/job:worker/replica:0/task:0/gpu:0\"]()]]\n\nI try to place variables on cpu or gpu, both of them did not work.", "body": "On a cluster of Tensorflow, which has one ps server, and one worker:\n\n``` python\ndef inference(self, inds, early_stops):\n\n            ...\n\n            with tf.variable_scope('lstm_encoder') as scope:\n                initializer = tf.random_uniform_initializer(-0.08, 0.08)\n                lstm_cell = tf.nn.rnn_cell.LSTMCell(self.hidden_units, initializer = initializer, state_is_tuple = True)\n                if self.is_training and self.keep_prob < 1:\n                    lstm_cell = tf.nn.rnn_cell.DropoutWrapper(lstm_cell, output_keep_prob = self.keep_prob)\n\n       ...\n```\n\n``` python\n with tf.device(tf.train.replica_device_setter(worker_device =\n                                                          '/job:worker/task:%d' % int(os.environ['task_index']), cluster = cluster)):\n                train_op, loss = inference()\n```\n\nit turns out that:\n\n```\ntensorflow.python.framework.errors.FailedPreconditionError: Attempting to use uninitialized value sentiment/lstm_encoder/RNN/LSTMCell/W_0\n     [[Node: sentiment/lstm_encoder/RNN/LSTMCell/W_0_S8 = _Send[T=DT_FLOAT, client_terminated=false, recv_device=\"/job:worker/replica:0/task:0/gpu:0\", send_device=\"/job:ps/replica:0/task:0/gpu:0\", send_device_incarnation=-5768356229269645157, tensor_name=\"edge_226_sentiment/lstm_encoder/RNN/LSTMCell/W_0\", _device=\"/job:ps/replica:0/task:0/gpu:0\"](sentiment/lstm_encoder/RNN/LSTMCell/W_0)]]\n     [[Node: sentiment/lstm_encoder/RNN/LSTMCell/B/Assign_S4 = _Recv[client_terminated=false, recv_device=\"/job:worker/replica:0/task:0/gpu:0\", send_device=\"/job:ps/replica:0/task:0/gpu:0\", send_device_incarnation=-5768356229269645157, tensor_name=\"edge_214_sentiment/lstm_encoder/RNN/LSTMCell/B/Assign\", tensor_type=DT_FLOAT, _device=\"/job:worker/replica:0/task:0/gpu:0\"]()]]\n```\n\nI try to place variables on cpu or gpu, both of them did not work.\n"}