{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11548", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11548/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11548/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11548/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/11548", "id": 243350253, "node_id": "MDU6SXNzdWUyNDMzNTAyNTM=", "number": 11548, "title": "Different behavior of tf.extract_image_patches and tf.nn.conv2d for certain padding/stride/filter size combinations", "user": {"login": "lballes", "id": 8748569, "node_id": "MDQ6VXNlcjg3NDg1Njk=", "avatar_url": "https://avatars1.githubusercontent.com/u/8748569?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lballes", "html_url": "https://github.com/lballes", "followers_url": "https://api.github.com/users/lballes/followers", "following_url": "https://api.github.com/users/lballes/following{/other_user}", "gists_url": "https://api.github.com/users/lballes/gists{/gist_id}", "starred_url": "https://api.github.com/users/lballes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lballes/subscriptions", "organizations_url": "https://api.github.com/users/lballes/orgs", "repos_url": "https://api.github.com/users/lballes/repos", "events_url": "https://api.github.com/users/lballes/events{/privacy}", "received_events_url": "https://api.github.com/users/lballes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "reedwm", "id": 6510203, "node_id": "MDQ6VXNlcjY1MTAyMDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/6510203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reedwm", "html_url": "https://github.com/reedwm", "followers_url": "https://api.github.com/users/reedwm/followers", "following_url": "https://api.github.com/users/reedwm/following{/other_user}", "gists_url": "https://api.github.com/users/reedwm/gists{/gist_id}", "starred_url": "https://api.github.com/users/reedwm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reedwm/subscriptions", "organizations_url": "https://api.github.com/users/reedwm/orgs", "repos_url": "https://api.github.com/users/reedwm/repos", "events_url": "https://api.github.com/users/reedwm/events{/privacy}", "received_events_url": "https://api.github.com/users/reedwm/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "reedwm", "id": 6510203, "node_id": "MDQ6VXNlcjY1MTAyMDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/6510203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reedwm", "html_url": "https://github.com/reedwm", "followers_url": "https://api.github.com/users/reedwm/followers", "following_url": "https://api.github.com/users/reedwm/following{/other_user}", "gists_url": "https://api.github.com/users/reedwm/gists{/gist_id}", "starred_url": "https://api.github.com/users/reedwm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reedwm/subscriptions", "organizations_url": "https://api.github.com/users/reedwm/orgs", "repos_url": "https://api.github.com/users/reedwm/repos", "events_url": "https://api.github.com/users/reedwm/events{/privacy}", "received_events_url": "https://api.github.com/users/reedwm/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2017-07-17T10:16:32Z", "updated_at": "2018-08-27T22:50:12Z", "closed_at": "2018-08-27T22:50:12Z", "author_association": "NONE", "body_html": "<p>Hi!</p>\n<p>I am trying to implement something using <code>tf.extract_image_patches</code> and ran into some troubles that made clear <code>tf.extract_image_patches</code> handles some combinations of padding, filter size and stride differently than <code>tf.nn.conv2d</code>. Since <code>tf.extract_image_patches</code> is conceptually a \"part\" of a convolution operation, I think this might be unintended behavior.</p>\n<p>Specifically, I implemented a \"manual\" version of a convolution operation using <code>tf.extract_image_patches</code></p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">manual_conv</span>(<span class=\"pl-smi\">input</span>, <span class=\"pl-smi\">filter</span>, <span class=\"pl-smi\">strides</span>, <span class=\"pl-smi\">padding</span>):\n  h_f, w_f, c_in, c_out <span class=\"pl-k\">=</span> <span class=\"pl-c1\">filter</span>.get_shape().as_list()\n  input_patches <span class=\"pl-k\">=</span> tf.extract_image_patches(<span class=\"pl-c1\">input</span>, <span class=\"pl-v\">ksizes</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">1</span>, h_f, w_f, <span class=\"pl-c1\">1</span> ], <span class=\"pl-v\">strides</span><span class=\"pl-k\">=</span>strides, <span class=\"pl-v\">rates</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>], <span class=\"pl-v\">padding</span><span class=\"pl-k\">=</span>padding)\n  filters_flat <span class=\"pl-k\">=</span> tf.reshape(<span class=\"pl-c1\">filter</span>, <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>[h_f<span class=\"pl-k\">*</span>w_f<span class=\"pl-k\">*</span>c_in, c_out])\n  <span class=\"pl-k\">return</span> tf.einsum(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>ijkl,lm-&gt;ijkm<span class=\"pl-pds\">\"</span></span>, input_patches, filters_flat)</pre></div>\n<p>and tested it like this</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> unittest\n<span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\n<span class=\"pl-k\">class</span> <span class=\"pl-en\">TestManualConvToyData</span>(<span class=\"pl-e\">unittest</span>.<span class=\"pl-e\">TestCase</span>):\n\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">runTest</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>):\n    m <span class=\"pl-k\">=</span> <span class=\"pl-c1\">32</span>\n    c_in <span class=\"pl-k\">=</span> <span class=\"pl-c1\">3</span>\n    c_out <span class=\"pl-k\">=</span> <span class=\"pl-c1\">16</span>\n\n    image_sizes <span class=\"pl-k\">=</span> [<span class=\"pl-c1\">127</span>, <span class=\"pl-c1\">64</span>]\n    filter_sizes <span class=\"pl-k\">=</span> [<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">5</span>, <span class=\"pl-c1\">11</span>]\n    strides <span class=\"pl-k\">=</span> [<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">30</span>]\n    paddings <span class=\"pl-k\">=</span> [<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>VALID<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>SAME<span class=\"pl-pds\">\"</span></span>]\n\n    <span class=\"pl-k\">for</span> fs <span class=\"pl-k\">in</span> filter_sizes:\n      <span class=\"pl-k\">for</span> stri <span class=\"pl-k\">in</span> strides:\n        <span class=\"pl-k\">for</span> imsize <span class=\"pl-k\">in</span> image_sizes: \n          <span class=\"pl-k\">for</span> pad <span class=\"pl-k\">in</span> paddings:\n            h <span class=\"pl-k\">=</span> w <span class=\"pl-k\">=</span> imsize\n            h_f <span class=\"pl-k\">=</span> w_f <span class=\"pl-k\">=</span> fs\n            <span class=\"pl-c1\">print</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Testing for<span class=\"pl-pds\">\"</span></span>, imsize, fs, stri, pad\n\n            tf.reset_default_graph()\n            X <span class=\"pl-k\">=</span> tf.constant(<span class=\"pl-c1\">1.0</span><span class=\"pl-k\">+</span>np.random.rand(m, h, w, c_in), tf.float32)\n            W <span class=\"pl-k\">=</span> tf.truncated_normal([h_f, w_f, c_in, c_out])\n\n            Z <span class=\"pl-k\">=</span> tf.nn.conv2d(X, W, <span class=\"pl-v\">strides</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">1</span>, stri, stri, <span class=\"pl-c1\">1</span>], <span class=\"pl-v\">padding</span><span class=\"pl-k\">=</span>pad)\n            Z_manual <span class=\"pl-k\">=</span> manual_conv(X, W, <span class=\"pl-v\">strides</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">1</span>, stri, stri, <span class=\"pl-c1\">1</span>], <span class=\"pl-v\">padding</span><span class=\"pl-k\">=</span>pad)\n\n            sess <span class=\"pl-k\">=</span> tf.Session()\n            sess.run(tf.global_variables_initializer())\n            Z_, Z_manual_ <span class=\"pl-k\">=</span> sess.run([Z, Z_manual])\n            <span class=\"pl-c1\">self</span>.assertEqual(Z_.shape, Z_manual_.shape)\n            <span class=\"pl-c1\">self</span>.assertTrue(np.allclose(Z_, Z_manual_, <span class=\"pl-v\">rtol</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1e-05</span>))\n            sess.close()</pre></div>\n<p>This test fails for some combinations of padding, filter size and stride. I think it has to do with the fact that <code>tf.extract_image_patches</code> tries to center patches if possible, as discussed in <a href=\"https://stackoverflow.com/questions/40731433/understanding-tf-extract-image-patches-for-extracting-patches-from-an-image\" rel=\"nofollow\">this</a> stackoverflow question.</p>\n<hr>\n<h3>System information</h3>\n<ul>\n<li>Ubuntu 16.04.</li>\n<li>Python 2.7.12</li>\n<li>tensorflow version 1.2.1 installed via pip (CPU only)</li>\n</ul>", "body_text": "Hi!\nI am trying to implement something using tf.extract_image_patches and ran into some troubles that made clear tf.extract_image_patches handles some combinations of padding, filter size and stride differently than tf.nn.conv2d. Since tf.extract_image_patches is conceptually a \"part\" of a convolution operation, I think this might be unintended behavior.\nSpecifically, I implemented a \"manual\" version of a convolution operation using tf.extract_image_patches\ndef manual_conv(input, filter, strides, padding):\n  h_f, w_f, c_in, c_out = filter.get_shape().as_list()\n  input_patches = tf.extract_image_patches(input, ksizes=[1, h_f, w_f, 1 ], strides=strides, rates=[1, 1, 1, 1], padding=padding)\n  filters_flat = tf.reshape(filter, shape=[h_f*w_f*c_in, c_out])\n  return tf.einsum(\"ijkl,lm->ijkm\", input_patches, filters_flat)\nand tested it like this\nimport unittest\nimport tensorflow as tf\n\nclass TestManualConvToyData(unittest.TestCase):\n\n  def runTest(self):\n    m = 32\n    c_in = 3\n    c_out = 16\n\n    image_sizes = [127, 64]\n    filter_sizes = [1, 2, 3, 5, 11]\n    strides = [1, 3, 4, 30]\n    paddings = [\"VALID\", \"SAME\"]\n\n    for fs in filter_sizes:\n      for stri in strides:\n        for imsize in image_sizes: \n          for pad in paddings:\n            h = w = imsize\n            h_f = w_f = fs\n            print \"Testing for\", imsize, fs, stri, pad\n\n            tf.reset_default_graph()\n            X = tf.constant(1.0+np.random.rand(m, h, w, c_in), tf.float32)\n            W = tf.truncated_normal([h_f, w_f, c_in, c_out])\n\n            Z = tf.nn.conv2d(X, W, strides=[1, stri, stri, 1], padding=pad)\n            Z_manual = manual_conv(X, W, strides=[1, stri, stri, 1], padding=pad)\n\n            sess = tf.Session()\n            sess.run(tf.global_variables_initializer())\n            Z_, Z_manual_ = sess.run([Z, Z_manual])\n            self.assertEqual(Z_.shape, Z_manual_.shape)\n            self.assertTrue(np.allclose(Z_, Z_manual_, rtol=1e-05))\n            sess.close()\nThis test fails for some combinations of padding, filter size and stride. I think it has to do with the fact that tf.extract_image_patches tries to center patches if possible, as discussed in this stackoverflow question.\n\nSystem information\n\nUbuntu 16.04.\nPython 2.7.12\ntensorflow version 1.2.1 installed via pip (CPU only)", "body": "Hi!\r\n\r\nI am trying to implement something using ``tf.extract_image_patches`` and ran into some troubles that made clear ``tf.extract_image_patches`` handles some combinations of padding, filter size and stride differently than ``tf.nn.conv2d``. Since ``tf.extract_image_patches`` is conceptually a \"part\" of a convolution operation, I think this might be unintended behavior. \r\n\r\nSpecifically, I implemented a \"manual\" version of a convolution operation using ``tf.extract_image_patches``\r\n\r\n```python\r\ndef manual_conv(input, filter, strides, padding):\r\n  h_f, w_f, c_in, c_out = filter.get_shape().as_list()\r\n  input_patches = tf.extract_image_patches(input, ksizes=[1, h_f, w_f, 1 ], strides=strides, rates=[1, 1, 1, 1], padding=padding)\r\n  filters_flat = tf.reshape(filter, shape=[h_f*w_f*c_in, c_out])\r\n  return tf.einsum(\"ijkl,lm->ijkm\", input_patches, filters_flat)\r\n```\r\n\r\nand tested it like this\r\n\r\n```python\r\nimport unittest\r\nimport tensorflow as tf\r\n\r\nclass TestManualConvToyData(unittest.TestCase):\r\n\r\n  def runTest(self):\r\n    m = 32\r\n    c_in = 3\r\n    c_out = 16\r\n\r\n    image_sizes = [127, 64]\r\n    filter_sizes = [1, 2, 3, 5, 11]\r\n    strides = [1, 3, 4, 30]\r\n    paddings = [\"VALID\", \"SAME\"]\r\n\r\n    for fs in filter_sizes:\r\n      for stri in strides:\r\n        for imsize in image_sizes: \r\n          for pad in paddings:\r\n            h = w = imsize\r\n            h_f = w_f = fs\r\n            print \"Testing for\", imsize, fs, stri, pad\r\n\r\n            tf.reset_default_graph()\r\n            X = tf.constant(1.0+np.random.rand(m, h, w, c_in), tf.float32)\r\n            W = tf.truncated_normal([h_f, w_f, c_in, c_out])\r\n\r\n            Z = tf.nn.conv2d(X, W, strides=[1, stri, stri, 1], padding=pad)\r\n            Z_manual = manual_conv(X, W, strides=[1, stri, stri, 1], padding=pad)\r\n\r\n            sess = tf.Session()\r\n            sess.run(tf.global_variables_initializer())\r\n            Z_, Z_manual_ = sess.run([Z, Z_manual])\r\n            self.assertEqual(Z_.shape, Z_manual_.shape)\r\n            self.assertTrue(np.allclose(Z_, Z_manual_, rtol=1e-05))\r\n            sess.close()\r\n ```\r\n\r\nThis test fails for some combinations of padding, filter size and stride. I think it has to do with the fact that ``tf.extract_image_patches`` tries to center patches if possible, as discussed in [this][1] stackoverflow question.\r\n\r\n[1]: https://stackoverflow.com/questions/40731433/understanding-tf-extract-image-patches-for-extracting-patches-from-an-image\r\n\r\n------------------------\r\n\r\n### System information\r\n- Ubuntu 16.04.\r\n- Python 2.7.12\r\n- tensorflow version 1.2.1 installed via pip (CPU only)"}