{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5122", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5122/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5122/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5122/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/5122", "id": 184566197, "node_id": "MDU6SXNzdWUxODQ1NjYxOTc=", "number": 5122, "title": "custom CUDA op example returns random values", "user": {"login": "AndreasMadsen", "id": 505333, "node_id": "MDQ6VXNlcjUwNTMzMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/505333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreasMadsen", "html_url": "https://github.com/AndreasMadsen", "followers_url": "https://api.github.com/users/AndreasMadsen/followers", "following_url": "https://api.github.com/users/AndreasMadsen/following{/other_user}", "gists_url": "https://api.github.com/users/AndreasMadsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreasMadsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreasMadsen/subscriptions", "organizations_url": "https://api.github.com/users/AndreasMadsen/orgs", "repos_url": "https://api.github.com/users/AndreasMadsen/repos", "events_url": "https://api.github.com/users/AndreasMadsen/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreasMadsen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-10-21T20:48:58Z", "updated_at": "2016-10-23T19:07:22Z", "closed_at": "2016-10-23T19:07:22Z", "author_association": "CONTRIBUTOR", "body_html": "<h3>What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?</h3>\n<p>Nothing</p>\n<h3>Environment info</h3>\n<p>Operating System:</p>\n<pre><code>$ uname -a\nLinux n-62-18-47 2.6.32-642.6.1.el6.x86_64 #1 SMP Wed Oct 5 08:48:31 CDT 2016 x86_64 x86_64 x86_64 GNU/Linux\n</code></pre>\n<p>Installed version of CUDA and cuDNN: CUDA: 8, cuDNN 5.1<br>\n(please attach the output of <code>ls -l /path/to/cuda/lib/libcud*</code>):</p>\n<pre><code>$ ls -l /appl/cuda/8.0/lib64/libcud*\n-rw-r--r-- 1 sebo root 560184 Sep  1 14:31 /appl/cuda/8.0/lib64/libcudadevrt.a\nlrwxrwxrwx 1 sebo root     16 Sep  1 14:31 /appl/cuda/8.0/lib64/libcudart.so -&gt; libcudart.so.8.0\nlrwxrwxrwx 1 sebo root     19 Sep  1 14:31 /appl/cuda/8.0/lib64/libcudart.so.8.0 -&gt; libcudart.so.8.0.27\n-rwxr-xr-x 1 sebo root 394472 Sep  1 14:31 /appl/cuda/8.0/lib64/libcudart.so.8.0.27\n-rw-r--r-- 1 sebo root 737516 Sep  1 14:31 /appl/cuda/8.0/lib64/libcudart_static.a\n</code></pre>\n<p>If installed from source, provide</p>\n<ol>\n<li>The commit hash (<code>git rev-parse HEAD</code>) <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/5a5a25ea3ebef623e07fb9a46419a9df377a37a5/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/5a5a25ea3ebef623e07fb9a46419a9df377a37a5\"><tt>5a5a25e</tt></a></li>\n<li>The output of <code>bazel version</code></li>\n</ol>\n<pre><code>$ bazel version\nBuild label: 0.3.2- (@non-git)\nBuild target: bazel-out/local-opt/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar\nBuild time: Fri Oct 21 15:09:04 2016 (1477062544)\nBuild timestamp: 1477062544\nBuild timestamp as int: 1477062544\n</code></pre>\n<h3>If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)</h3>\n<p>Using the CUDA example from: <a href=\"https://github.com/tensorflow/tensorflow/tree/r0.11/tensorflow/g3doc/how_tos/adding_an_op\">https://github.com/tensorflow/tensorflow/tree/r0.11/tensorflow/g3doc/how_tos/adding_an_op</a></p>\n<ol>\n<li>compile example</li>\n</ol>\n<pre><code>export TF_INC=/zhome/ff/2/77654/stdpy3/lib/python3.5/site-packages/tensorflow/include\n\nnvcc -std=c++11 -c -o cuda_op_kernel.cu.o cuda_op_kernel.cu.cc \\\n-I $TF_INC -D GOOGLE_CUDA=1 -x cu -Xcompiler -fPIC\n\ng++ -std=c++11 -shared -o cuda_op_kernel.so cuda_op_kernel.cc \\\ncuda_op_kernel.cu.o -I $TF_INC -fPIC -L /appl/cuda/8.0/lib64 -L /appl/cudnn/v5.1-prod/lib64 -lcudart\n</code></pre>\n<ol start=\"2\">\n<li>edit <code>tensorflow.g3doc.how_tos.adding_an_op import cuda_op</code> to <code>import cuda_op</code> in <code>cuda_op_test.py</code>.</li>\n</ol>\n<h3>What other attempted solutions have you tried?</h3>\n<ul>\n<li>I tried a non CUDA example, worked fine.</li>\n<li>I tried a diffrent cuda kernel (square operator) also failed.</li>\n<li>I added <code>printf</code> to the kernel launcher and made sure it was executed.</li>\n</ul>\n<h3>Logs or other output that would be helpful</h3>\n<p>(If logs are large, please upload as attachment or provide link).</p>\n<pre><code>CUDA_VISIBLE_DEVICES=3 python3 cuda_op_test.py\nI tensorflow/stream_executor/dso_loader.cc:125] successfully opened CUDA library libcurand.so.8.0 locally\nI tensorflow/stream_executor/dso_loader.cc:125] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:125] successfully opened CUDA library libcufft.so.8.0 locally\nI tensorflow/stream_executor/dso_loader.cc:125] successfully opened CUDA library libcudnn.so.5 locally\nI tensorflow/stream_executor/dso_loader.cc:125] successfully opened CUDA library libcublas.so.8.0 locally\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:944] Found device 0 with properties:\nname: Tesla K40c\nmajor: 3 minor: 5 memoryClockRate (GHz) 0.745\npciBusID 0000:02:00.0\nTotal memory: 11.25GiB\nFree memory: 11.15GiB\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:965] DMA: 0\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:975] 0:   Y\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:1034] Creating TensorFlow device (/gpu:0) -&gt; (device: 0, name: Tesla K40c, pci bus id: 0000:02:00.0)\nFailed to get the number of CUDA devices: CUDA driver version is insufficient for CUDA runtime version\nnot equal where =  (array([0, 1, 2, 3, 4]),)\nnot equal lhs =  [ 280541332  143397048 2031878174 1533025280 1612453930]\nnot equal rhs =  [6 5 4 3 2]\nF.\n======================================================================\nFAIL: test (__main__.AddOneTest)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"cuda_op_test.py\", line 31, in test\n    self.assertAllEqual(result.eval(), [6, 5, 4, 3, 2])\n  File \"/zhome/ff/2/77654/stdpy3/lib/python3.5/site-packages/tensorflow/python/framework/test_util.py\", line 499, in assertAllEqual\n    np.testing.assert_array_equal(a, b)\n  File \"/zhome/ff/2/77654/stdpy3/lib/python3.5/site-packages/numpy/testing/utils.py\", line 813, in assert_array_equal\n    verbose=verbose, header='Arrays are not equal')\n  File \"/zhome/ff/2/77654/stdpy3/lib/python3.5/site-packages/numpy/testing/utils.py\", line 739, in assert_array_compare\n    raise AssertionError(msg)\nAssertionError:\nArrays are not equal\n\n(mismatch 100.0%)\n x: array([ 280541332,  143397048, 2031878174, 1533025280, 1612453930], dtype=int32)\n y: array([6, 5, 4, 3, 2])\n\n----------------------------------------------------------------------\nRan 2 tests in 0.213s\n\nFAILED (failures=1)\n</code></pre>\n<hr>\n<p>It looks like the output just contains random memory. Perhaps the GPU memory isn't copied back to the host memory.</p>", "body_text": "What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?\nNothing\nEnvironment info\nOperating System:\n$ uname -a\nLinux n-62-18-47 2.6.32-642.6.1.el6.x86_64 #1 SMP Wed Oct 5 08:48:31 CDT 2016 x86_64 x86_64 x86_64 GNU/Linux\n\nInstalled version of CUDA and cuDNN: CUDA: 8, cuDNN 5.1\n(please attach the output of ls -l /path/to/cuda/lib/libcud*):\n$ ls -l /appl/cuda/8.0/lib64/libcud*\n-rw-r--r-- 1 sebo root 560184 Sep  1 14:31 /appl/cuda/8.0/lib64/libcudadevrt.a\nlrwxrwxrwx 1 sebo root     16 Sep  1 14:31 /appl/cuda/8.0/lib64/libcudart.so -> libcudart.so.8.0\nlrwxrwxrwx 1 sebo root     19 Sep  1 14:31 /appl/cuda/8.0/lib64/libcudart.so.8.0 -> libcudart.so.8.0.27\n-rwxr-xr-x 1 sebo root 394472 Sep  1 14:31 /appl/cuda/8.0/lib64/libcudart.so.8.0.27\n-rw-r--r-- 1 sebo root 737516 Sep  1 14:31 /appl/cuda/8.0/lib64/libcudart_static.a\n\nIf installed from source, provide\n\nThe commit hash (git rev-parse HEAD) 5a5a25e\nThe output of bazel version\n\n$ bazel version\nBuild label: 0.3.2- (@non-git)\nBuild target: bazel-out/local-opt/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar\nBuild time: Fri Oct 21 15:09:04 2016 (1477062544)\nBuild timestamp: 1477062544\nBuild timestamp as int: 1477062544\n\nIf possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\nUsing the CUDA example from: https://github.com/tensorflow/tensorflow/tree/r0.11/tensorflow/g3doc/how_tos/adding_an_op\n\ncompile example\n\nexport TF_INC=/zhome/ff/2/77654/stdpy3/lib/python3.5/site-packages/tensorflow/include\n\nnvcc -std=c++11 -c -o cuda_op_kernel.cu.o cuda_op_kernel.cu.cc \\\n-I $TF_INC -D GOOGLE_CUDA=1 -x cu -Xcompiler -fPIC\n\ng++ -std=c++11 -shared -o cuda_op_kernel.so cuda_op_kernel.cc \\\ncuda_op_kernel.cu.o -I $TF_INC -fPIC -L /appl/cuda/8.0/lib64 -L /appl/cudnn/v5.1-prod/lib64 -lcudart\n\n\nedit tensorflow.g3doc.how_tos.adding_an_op import cuda_op to import cuda_op in cuda_op_test.py.\n\nWhat other attempted solutions have you tried?\n\nI tried a non CUDA example, worked fine.\nI tried a diffrent cuda kernel (square operator) also failed.\nI added printf to the kernel launcher and made sure it was executed.\n\nLogs or other output that would be helpful\n(If logs are large, please upload as attachment or provide link).\nCUDA_VISIBLE_DEVICES=3 python3 cuda_op_test.py\nI tensorflow/stream_executor/dso_loader.cc:125] successfully opened CUDA library libcurand.so.8.0 locally\nI tensorflow/stream_executor/dso_loader.cc:125] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:125] successfully opened CUDA library libcufft.so.8.0 locally\nI tensorflow/stream_executor/dso_loader.cc:125] successfully opened CUDA library libcudnn.so.5 locally\nI tensorflow/stream_executor/dso_loader.cc:125] successfully opened CUDA library libcublas.so.8.0 locally\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:944] Found device 0 with properties:\nname: Tesla K40c\nmajor: 3 minor: 5 memoryClockRate (GHz) 0.745\npciBusID 0000:02:00.0\nTotal memory: 11.25GiB\nFree memory: 11.15GiB\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:965] DMA: 0\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:975] 0:   Y\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:1034] Creating TensorFlow device (/gpu:0) -> (device: 0, name: Tesla K40c, pci bus id: 0000:02:00.0)\nFailed to get the number of CUDA devices: CUDA driver version is insufficient for CUDA runtime version\nnot equal where =  (array([0, 1, 2, 3, 4]),)\nnot equal lhs =  [ 280541332  143397048 2031878174 1533025280 1612453930]\nnot equal rhs =  [6 5 4 3 2]\nF.\n======================================================================\nFAIL: test (__main__.AddOneTest)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"cuda_op_test.py\", line 31, in test\n    self.assertAllEqual(result.eval(), [6, 5, 4, 3, 2])\n  File \"/zhome/ff/2/77654/stdpy3/lib/python3.5/site-packages/tensorflow/python/framework/test_util.py\", line 499, in assertAllEqual\n    np.testing.assert_array_equal(a, b)\n  File \"/zhome/ff/2/77654/stdpy3/lib/python3.5/site-packages/numpy/testing/utils.py\", line 813, in assert_array_equal\n    verbose=verbose, header='Arrays are not equal')\n  File \"/zhome/ff/2/77654/stdpy3/lib/python3.5/site-packages/numpy/testing/utils.py\", line 739, in assert_array_compare\n    raise AssertionError(msg)\nAssertionError:\nArrays are not equal\n\n(mismatch 100.0%)\n x: array([ 280541332,  143397048, 2031878174, 1533025280, 1612453930], dtype=int32)\n y: array([6, 5, 4, 3, 2])\n\n----------------------------------------------------------------------\nRan 2 tests in 0.213s\n\nFAILED (failures=1)\n\n\nIt looks like the output just contains random memory. Perhaps the GPU memory isn't copied back to the host memory.", "body": "### What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?\n\nNothing\n### Environment info\n\nOperating System:\n\n```\n$ uname -a\nLinux n-62-18-47 2.6.32-642.6.1.el6.x86_64 #1 SMP Wed Oct 5 08:48:31 CDT 2016 x86_64 x86_64 x86_64 GNU/Linux\n```\n\nInstalled version of CUDA and cuDNN: CUDA: 8, cuDNN 5.1\n(please attach the output of `ls -l /path/to/cuda/lib/libcud*`):\n\n```\n$ ls -l /appl/cuda/8.0/lib64/libcud*\n-rw-r--r-- 1 sebo root 560184 Sep  1 14:31 /appl/cuda/8.0/lib64/libcudadevrt.a\nlrwxrwxrwx 1 sebo root     16 Sep  1 14:31 /appl/cuda/8.0/lib64/libcudart.so -> libcudart.so.8.0\nlrwxrwxrwx 1 sebo root     19 Sep  1 14:31 /appl/cuda/8.0/lib64/libcudart.so.8.0 -> libcudart.so.8.0.27\n-rwxr-xr-x 1 sebo root 394472 Sep  1 14:31 /appl/cuda/8.0/lib64/libcudart.so.8.0.27\n-rw-r--r-- 1 sebo root 737516 Sep  1 14:31 /appl/cuda/8.0/lib64/libcudart_static.a\n```\n\nIf installed from source, provide \n1. The commit hash (`git rev-parse HEAD`) 5a5a25ea3ebef623e07fb9a46419a9df377a37a5\n2. The output of `bazel version` \n\n```\n$ bazel version\nBuild label: 0.3.2- (@non-git)\nBuild target: bazel-out/local-opt/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar\nBuild time: Fri Oct 21 15:09:04 2016 (1477062544)\nBuild timestamp: 1477062544\nBuild timestamp as int: 1477062544\n```\n### If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\n\nUsing the CUDA example from: https://github.com/tensorflow/tensorflow/tree/r0.11/tensorflow/g3doc/how_tos/adding_an_op\n\n1) compile example\n\n```\nexport TF_INC=/zhome/ff/2/77654/stdpy3/lib/python3.5/site-packages/tensorflow/include\n\nnvcc -std=c++11 -c -o cuda_op_kernel.cu.o cuda_op_kernel.cu.cc \\\n-I $TF_INC -D GOOGLE_CUDA=1 -x cu -Xcompiler -fPIC\n\ng++ -std=c++11 -shared -o cuda_op_kernel.so cuda_op_kernel.cc \\\ncuda_op_kernel.cu.o -I $TF_INC -fPIC -L /appl/cuda/8.0/lib64 -L /appl/cudnn/v5.1-prod/lib64 -lcudart\n```\n\n2) edit `tensorflow.g3doc.how_tos.adding_an_op import cuda_op` to `import cuda_op` in `cuda_op_test.py`.\n### What other attempted solutions have you tried?\n- I tried a non CUDA example, worked fine.\n- I tried a diffrent cuda kernel (square operator) also failed.\n- I added `printf` to the kernel launcher and made sure it was executed.\n### Logs or other output that would be helpful\n\n(If logs are large, please upload as attachment or provide link).\n\n```\nCUDA_VISIBLE_DEVICES=3 python3 cuda_op_test.py\nI tensorflow/stream_executor/dso_loader.cc:125] successfully opened CUDA library libcurand.so.8.0 locally\nI tensorflow/stream_executor/dso_loader.cc:125] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:125] successfully opened CUDA library libcufft.so.8.0 locally\nI tensorflow/stream_executor/dso_loader.cc:125] successfully opened CUDA library libcudnn.so.5 locally\nI tensorflow/stream_executor/dso_loader.cc:125] successfully opened CUDA library libcublas.so.8.0 locally\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:944] Found device 0 with properties:\nname: Tesla K40c\nmajor: 3 minor: 5 memoryClockRate (GHz) 0.745\npciBusID 0000:02:00.0\nTotal memory: 11.25GiB\nFree memory: 11.15GiB\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:965] DMA: 0\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:975] 0:   Y\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:1034] Creating TensorFlow device (/gpu:0) -> (device: 0, name: Tesla K40c, pci bus id: 0000:02:00.0)\nFailed to get the number of CUDA devices: CUDA driver version is insufficient for CUDA runtime version\nnot equal where =  (array([0, 1, 2, 3, 4]),)\nnot equal lhs =  [ 280541332  143397048 2031878174 1533025280 1612453930]\nnot equal rhs =  [6 5 4 3 2]\nF.\n======================================================================\nFAIL: test (__main__.AddOneTest)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"cuda_op_test.py\", line 31, in test\n    self.assertAllEqual(result.eval(), [6, 5, 4, 3, 2])\n  File \"/zhome/ff/2/77654/stdpy3/lib/python3.5/site-packages/tensorflow/python/framework/test_util.py\", line 499, in assertAllEqual\n    np.testing.assert_array_equal(a, b)\n  File \"/zhome/ff/2/77654/stdpy3/lib/python3.5/site-packages/numpy/testing/utils.py\", line 813, in assert_array_equal\n    verbose=verbose, header='Arrays are not equal')\n  File \"/zhome/ff/2/77654/stdpy3/lib/python3.5/site-packages/numpy/testing/utils.py\", line 739, in assert_array_compare\n    raise AssertionError(msg)\nAssertionError:\nArrays are not equal\n\n(mismatch 100.0%)\n x: array([ 280541332,  143397048, 2031878174, 1533025280, 1612453930], dtype=int32)\n y: array([6, 5, 4, 3, 2])\n\n----------------------------------------------------------------------\nRan 2 tests in 0.213s\n\nFAILED (failures=1)\n```\n\n---\n\nIt looks like the output just contains random memory. Perhaps the GPU memory isn't copied back to the host memory.\n"}