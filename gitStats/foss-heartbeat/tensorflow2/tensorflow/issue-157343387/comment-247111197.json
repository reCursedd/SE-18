{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/247111197", "html_url": "https://github.com/tensorflow/tensorflow/issues/2559#issuecomment-247111197", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2559", "id": 247111197, "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzExMTE5Nw==", "user": {"login": "FlorinAndrei", "id": 901867, "node_id": "MDQ6VXNlcjkwMTg2Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/901867?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FlorinAndrei", "html_url": "https://github.com/FlorinAndrei", "followers_url": "https://api.github.com/users/FlorinAndrei/followers", "following_url": "https://api.github.com/users/FlorinAndrei/following{/other_user}", "gists_url": "https://api.github.com/users/FlorinAndrei/gists{/gist_id}", "starred_url": "https://api.github.com/users/FlorinAndrei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FlorinAndrei/subscriptions", "organizations_url": "https://api.github.com/users/FlorinAndrei/orgs", "repos_url": "https://api.github.com/users/FlorinAndrei/repos", "events_url": "https://api.github.com/users/FlorinAndrei/events{/privacy}", "received_events_url": "https://api.github.com/users/FlorinAndrei/received_events", "type": "User", "site_admin": false}, "created_at": "2016-09-14T18:32:15Z", "updated_at": "2016-09-14T18:33:43Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4576329\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/xpe\">@xpe</a> - Clone this repo <a href=\"https://github.com/FlorinAndrei/ml-setup\">https://github.com/FlorinAndrei/ml-setup</a> and checkout the ubuntu1604 branch. Then just follow the README and run the Ansible playbooks.</p>\n<p>The overview is this (look at the playbooks to fill in details such as extra packages to install):</p>\n<ul>\n<li>install Ubuntu 16.04</li>\n<li>install linux-headers, dkms, build-essentials, python development packages</li>\n<li>do a dist-upgrade</li>\n<li>enable ppa:graphics-drivers/ppa</li>\n<li>download and install CUDA 5, the ggc patch, and cuDNN, all from the runfiles\n<ul>\n<li>sh {{ packages_folder }}/{{ cuda_file }} --silent --toolkit --samples --verbose --override</li>\n<li>sh {{ packages_folder }}/{{ cuda_patch1_file }} --silent --accept-eula</li>\n<li>do the manual install for cuDNN</li>\n</ul>\n</li>\n<li>create CUDA_HOME and other env vars per CUDA docs</li>\n<li>apt-get install nvidia-370 (this must happen after CUDA; 370 is now the stable version of the Linux driver, no need to go back to 367)</li>\n<li>install Java from ppa:webupd8team/java and Bazel from <a href=\"http://storage.googleapis.com/bazel-apt\" rel=\"nofollow\">http://storage.googleapis.com/bazel-apt</a> per official docs</li>\n</ul>\n<p>This is where the Ansible playbooks stop. You could just run Ansible and it will take you this far. I have not automated the steps after that.</p>\n<p>The manual process after that is:</p>\n<ul>\n<li>clone TensorFlow repo, checkout the r0.10 branch (<strong>this is the crucial step</strong>; the master branch keeps failing, whereas r0.10 compiled on first try)</li>\n<li>run ./configure and accept default values except:\n<ul>\n<li>enable GPU</li>\n<li>CUDA version must be: 8.0 (autodetect doesn't work)</li>\n<li>compute capability: whatever it is that your card supports</li>\n</ul>\n</li>\n<li>bazel build -c opt --config=cuda //tensorflow/tools/pip_package:build_pip_package</li>\n<li>bazel-bin/tensorflow/tools/pip_package/build_pip_package $HOME</li>\n</ul>\n<p>And that should be it.</p>\n<p>I've tested some pretty complex models and I have not seen any strange failures this far.</p>", "body_text": "@xpe - Clone this repo https://github.com/FlorinAndrei/ml-setup and checkout the ubuntu1604 branch. Then just follow the README and run the Ansible playbooks.\nThe overview is this (look at the playbooks to fill in details such as extra packages to install):\n\ninstall Ubuntu 16.04\ninstall linux-headers, dkms, build-essentials, python development packages\ndo a dist-upgrade\nenable ppa:graphics-drivers/ppa\ndownload and install CUDA 5, the ggc patch, and cuDNN, all from the runfiles\n\nsh {{ packages_folder }}/{{ cuda_file }} --silent --toolkit --samples --verbose --override\nsh {{ packages_folder }}/{{ cuda_patch1_file }} --silent --accept-eula\ndo the manual install for cuDNN\n\n\ncreate CUDA_HOME and other env vars per CUDA docs\napt-get install nvidia-370 (this must happen after CUDA; 370 is now the stable version of the Linux driver, no need to go back to 367)\ninstall Java from ppa:webupd8team/java and Bazel from http://storage.googleapis.com/bazel-apt per official docs\n\nThis is where the Ansible playbooks stop. You could just run Ansible and it will take you this far. I have not automated the steps after that.\nThe manual process after that is:\n\nclone TensorFlow repo, checkout the r0.10 branch (this is the crucial step; the master branch keeps failing, whereas r0.10 compiled on first try)\nrun ./configure and accept default values except:\n\nenable GPU\nCUDA version must be: 8.0 (autodetect doesn't work)\ncompute capability: whatever it is that your card supports\n\n\nbazel build -c opt --config=cuda //tensorflow/tools/pip_package:build_pip_package\nbazel-bin/tensorflow/tools/pip_package/build_pip_package $HOME\n\nAnd that should be it.\nI've tested some pretty complex models and I have not seen any strange failures this far.", "body": "@xpe - Clone this repo https://github.com/FlorinAndrei/ml-setup and checkout the ubuntu1604 branch. Then just follow the README and run the Ansible playbooks.\n\nThe overview is this (look at the playbooks to fill in details such as extra packages to install):\n- install Ubuntu 16.04\n- install linux-headers, dkms, build-essentials, python development packages\n- do a dist-upgrade\n- enable ppa:graphics-drivers/ppa\n- download and install CUDA 5, the ggc patch, and cuDNN, all from the runfiles\n  - sh {{ packages_folder }}/{{ cuda_file }} --silent --toolkit --samples --verbose --override\n  - sh {{ packages_folder }}/{{ cuda_patch1_file }} --silent --accept-eula\n  - do the manual install for cuDNN\n- create CUDA_HOME and other env vars per CUDA docs\n- apt-get install nvidia-370 (this must happen after CUDA; 370 is now the stable version of the Linux driver, no need to go back to 367)\n- install Java from ppa:webupd8team/java and Bazel from http://storage.googleapis.com/bazel-apt per official docs\n\nThis is where the Ansible playbooks stop. You could just run Ansible and it will take you this far. I have not automated the steps after that.\n\nThe manual process after that is:\n- clone TensorFlow repo, checkout the r0.10 branch (**this is the crucial step**; the master branch keeps failing, whereas r0.10 compiled on first try)\n- run ./configure and accept default values except:\n  - enable GPU\n  - CUDA version must be: 8.0 (autodetect doesn't work)\n  - compute capability: whatever it is that your card supports\n- bazel build -c opt --config=cuda //tensorflow/tools/pip_package:build_pip_package\n- bazel-bin/tensorflow/tools/pip_package/build_pip_package $HOME\n\nAnd that should be it.\n\nI've tested some pretty complex models and I have not seen any strange failures this far.\n"}