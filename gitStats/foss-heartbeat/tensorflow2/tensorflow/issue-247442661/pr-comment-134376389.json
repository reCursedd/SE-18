{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/134376389", "pull_request_review_id": 57657814, "id": 134376389, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNDM3NjM4OQ==", "diff_hunk": "@@ -0,0 +1,61 @@\n+/* Copyright 2017 The TensorFlow Authors. All Rights Reserved.\n+\n+ Licensed under the Apache License, Version 2.0 (the \"License\");\n+ you may not use this file except in compliance with the License.\n+ You may obtain a copy of the License at\n+\n+ http://www.apache.org/licenses/LICENSE-2.0\n+\n+ Unless required by applicable law or agreed to in writing, software\n+ distributed under the License is distributed on an \"AS IS\" BASIS,\n+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ See the License for the specific language governing permissions and\n+ limitations under the License.\n+ ==============================================================================*/\n+\n+#include <string>\n+#include <vector>\n+\n+#include \"tensorflow/core/platform/init_main.h\"\n+#include \"tensorflow/core/platform/env.h\"\n+#include \"tensorflow/core/util/command_line_flags.h\"\n+#include \"tensorflow/core/lib/core/status.h\"\n+#include \"tensorflow/core/framework/op.h\"\n+#include \"tensorflow/java/src/gen/cc/op_generator.h\"\n+\n+namespace tensorflow {\n+namespace op_gen {\n+\n+const char kUsageHeader[] =\n+    \"\\n\\nGenerator of operation wrappers in Java.\\n\\n\"\n+    \"This executable generates wrappers for all operations registered in the\\n\"\n+    \"ops file it has been linked to (i.e. one of the /core/ops/*.o binaries).\\n\"\n+    \"Generated files are output to the path provided as an argument, under\\n\"\n+    \"their appropriate package and using a maven-style directory layout.\\n\\n\";\n+\n+}  // namespace op_gen\n+}  // namespace tensorflow\n+\n+int main(int argc, char* argv[]) {\n+  tensorflow::string ops_file;\n+  tensorflow::string output_dir;\n+  std::vector<tensorflow::Flag> flag_list = {\n+    tensorflow::Flag(\"file\", &ops_file,", "path": "tensorflow/java/src/gen/cc/op_gen_main.cc", "position": null, "original_position": 43, "commit_id": "daabbf01e8ae2075d472f332411b03f4d5bc6992", "original_commit_id": "8db5473bd0ec77a25b80a244f19272ce08ed5f66", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "body": "The use of the word \"file\" here seems a bit iffy since the notion of a \"file\" doesn't quite exist here. It is generating code for all the operations linked in.\r\n\r\nInstead of various magic constants embedded in the code, how about we have this tool take in the fully qualified package name as a flag instead? So something like:\r\n\r\n- `--output`: Root directory into which output files are generated\r\n- `--package`: Name of the package in which generated ops will be placed\r\n\r\nThen all the magic constants can be confined to the genrule implementation, which:\r\n(1) Adds `//tensorflow/core:` prefix to the `op_libs`\r\n(2) Strips `_ops` from `op_libs` and slaps on `org.tensorflow.op` as a prefix for the package name", "created_at": "2017-08-22T03:15:49Z", "updated_at": "2017-09-01T18:01:03Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/11973#discussion_r134376389", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11973", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/134376389"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/11973#discussion_r134376389"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11973"}}, "body_html": "<p>The use of the word \"file\" here seems a bit iffy since the notion of a \"file\" doesn't quite exist here. It is generating code for all the operations linked in.</p>\n<p>Instead of various magic constants embedded in the code, how about we have this tool take in the fully qualified package name as a flag instead? So something like:</p>\n<ul>\n<li><code>--output</code>: Root directory into which output files are generated</li>\n<li><code>--package</code>: Name of the package in which generated ops will be placed</li>\n</ul>\n<p>Then all the magic constants can be confined to the genrule implementation, which:<br>\n(1) Adds <code>//tensorflow/core:</code> prefix to the <code>op_libs</code><br>\n(2) Strips <code>_ops</code> from <code>op_libs</code> and slaps on <code>org.tensorflow.op</code> as a prefix for the package name</p>", "body_text": "The use of the word \"file\" here seems a bit iffy since the notion of a \"file\" doesn't quite exist here. It is generating code for all the operations linked in.\nInstead of various magic constants embedded in the code, how about we have this tool take in the fully qualified package name as a flag instead? So something like:\n\n--output: Root directory into which output files are generated\n--package: Name of the package in which generated ops will be placed\n\nThen all the magic constants can be confined to the genrule implementation, which:\n(1) Adds //tensorflow/core: prefix to the op_libs\n(2) Strips _ops from op_libs and slaps on org.tensorflow.op as a prefix for the package name"}