{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/134375093", "pull_request_review_id": 57657814, "id": 134375093, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNDM3NTA5Mw==", "diff_hunk": "@@ -0,0 +1,53 @@\n+# -*- Python -*-\n+\n+load(\"//tensorflow:tensorflow.bzl\", \"tf_copts\")\n+\n+# Given a list of \"ops_libs\" (a list of files in the core/ops directory\n+# without their .cc extensions), generate Java wrapper code for all operations\n+# found in the ops files.\n+# Then, combine all those source files into a single archive (.srcjar).", "path": "tensorflow/java/src/gen/gen_ops.bzl", "position": 8, "original_position": 8, "commit_id": "daabbf01e8ae2075d472f332411b03f4d5bc6992", "original_commit_id": "8db5473bd0ec77a25b80a244f19272ce08ed5f66", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "body": "Why do we need to combine these into a `.srcjar`? Can't we leave the generated files as-is and include those as sources in the `java_op_sources` BUILD rule? Is this because the `outs` in the `genrule` isn't \"static\" otherwise (i.e., depends on the execution of the binary?)", "created_at": "2017-08-22T02:59:59Z", "updated_at": "2017-09-01T18:01:03Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/11973#discussion_r134375093", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11973", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/134375093"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/11973#discussion_r134375093"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11973"}}, "body_html": "<p>Why do we need to combine these into a <code>.srcjar</code>? Can't we leave the generated files as-is and include those as sources in the <code>java_op_sources</code> BUILD rule? Is this because the <code>outs</code> in the <code>genrule</code> isn't \"static\" otherwise (i.e., depends on the execution of the binary?)</p>", "body_text": "Why do we need to combine these into a .srcjar? Can't we leave the generated files as-is and include those as sources in the java_op_sources BUILD rule? Is this because the outs in the genrule isn't \"static\" otherwise (i.e., depends on the execution of the binary?)"}