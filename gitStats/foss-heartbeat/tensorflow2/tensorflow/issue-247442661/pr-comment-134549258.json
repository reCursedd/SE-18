{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/134549258", "pull_request_review_id": 57853710, "id": 134549258, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNDU0OTI1OA==", "diff_hunk": "@@ -0,0 +1,53 @@\n+# -*- Python -*-\n+\n+load(\"//tensorflow:tensorflow.bzl\", \"tf_copts\")\n+\n+# Given a list of \"ops_libs\" (a list of files in the core/ops directory\n+# without their .cc extensions), generate Java wrapper code for all operations\n+# found in the ops files.\n+# Then, combine all those source files into a single archive (.srcjar).", "path": "tensorflow/java/src/gen/gen_ops.bzl", "position": 8, "original_position": 8, "commit_id": "daabbf01e8ae2075d472f332411b03f4d5bc6992", "original_commit_id": "8db5473bd0ec77a25b80a244f19272ce08ed5f66", "user": {"login": "karllessard", "id": 10109534, "node_id": "MDQ6VXNlcjEwMTA5NTM0", "avatar_url": "https://avatars3.githubusercontent.com/u/10109534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karllessard", "html_url": "https://github.com/karllessard", "followers_url": "https://api.github.com/users/karllessard/followers", "following_url": "https://api.github.com/users/karllessard/following{/other_user}", "gists_url": "https://api.github.com/users/karllessard/gists{/gist_id}", "starred_url": "https://api.github.com/users/karllessard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karllessard/subscriptions", "organizations_url": "https://api.github.com/users/karllessard/orgs", "repos_url": "https://api.github.com/users/karllessard/repos", "events_url": "https://api.github.com/users/karllessard/events{/privacy}", "received_events_url": "https://api.github.com/users/karllessard/received_events", "type": "User", "site_admin": false}, "body": "Exactly. It is not allowed to use wildcards (e.g. `ops/array/*.java`) in the `outs` argument of a `genrule` and since we don't know at the Bazel level which files are to be generated, we cannot list them statically neither.\r\n\r\nAlso, reading at the Java rules documentation site, it seems to be the right way doing it: \r\n\r\n> Source files of type .srcjar are unpacked and compiled. (This is useful if you need to generate a set of .java files with a genrule.) ", "created_at": "2017-08-22T17:31:11Z", "updated_at": "2017-09-01T18:01:03Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/11973#discussion_r134549258", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11973", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/134549258"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/11973#discussion_r134549258"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11973"}}, "body_html": "<p>Exactly. It is not allowed to use wildcards (e.g. <code>ops/array/*.java</code>) in the <code>outs</code> argument of a <code>genrule</code> and since we don't know at the Bazel level which files are to be generated, we cannot list them statically neither.</p>\n<p>Also, reading at the Java rules documentation site, it seems to be the right way doing it:</p>\n<blockquote>\n<p>Source files of type .srcjar are unpacked and compiled. (This is useful if you need to generate a set of .java files with a genrule.)</p>\n</blockquote>", "body_text": "Exactly. It is not allowed to use wildcards (e.g. ops/array/*.java) in the outs argument of a genrule and since we don't know at the Bazel level which files are to be generated, we cannot list them statically neither.\nAlso, reading at the Java rules documentation site, it seems to be the right way doing it:\n\nSource files of type .srcjar are unpacked and compiled. (This is useful if you need to generate a set of .java files with a genrule.)", "in_reply_to_id": 134375093}