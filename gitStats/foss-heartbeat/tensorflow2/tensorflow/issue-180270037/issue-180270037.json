{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4677", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4677/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4677/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4677/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/4677", "id": 180270037, "node_id": "MDU6SXNzdWUxODAyNzAwMzc=", "number": 4677, "title": "strided_slice unexpected behaviour", "user": {"login": "al626", "id": 19927736, "node_id": "MDQ6VXNlcjE5OTI3NzM2", "avatar_url": "https://avatars3.githubusercontent.com/u/19927736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/al626", "html_url": "https://github.com/al626", "followers_url": "https://api.github.com/users/al626/followers", "following_url": "https://api.github.com/users/al626/following{/other_user}", "gists_url": "https://api.github.com/users/al626/gists{/gist_id}", "starred_url": "https://api.github.com/users/al626/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/al626/subscriptions", "organizations_url": "https://api.github.com/users/al626/orgs", "repos_url": "https://api.github.com/users/al626/repos", "events_url": "https://api.github.com/users/al626/events{/privacy}", "received_events_url": "https://api.github.com/users/al626/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "aselle", "id": 326106, "node_id": "MDQ6VXNlcjMyNjEwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/326106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aselle", "html_url": "https://github.com/aselle", "followers_url": "https://api.github.com/users/aselle/followers", "following_url": "https://api.github.com/users/aselle/following{/other_user}", "gists_url": "https://api.github.com/users/aselle/gists{/gist_id}", "starred_url": "https://api.github.com/users/aselle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aselle/subscriptions", "organizations_url": "https://api.github.com/users/aselle/orgs", "repos_url": "https://api.github.com/users/aselle/repos", "events_url": "https://api.github.com/users/aselle/events{/privacy}", "received_events_url": "https://api.github.com/users/aselle/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "aselle", "id": 326106, "node_id": "MDQ6VXNlcjMyNjEwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/326106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aselle", "html_url": "https://github.com/aselle", "followers_url": "https://api.github.com/users/aselle/followers", "following_url": "https://api.github.com/users/aselle/following{/other_user}", "gists_url": "https://api.github.com/users/aselle/gists{/gist_id}", "starred_url": "https://api.github.com/users/aselle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aselle/subscriptions", "organizations_url": "https://api.github.com/users/aselle/orgs", "repos_url": "https://api.github.com/users/aselle/repos", "events_url": "https://api.github.com/users/aselle/events{/privacy}", "received_events_url": "https://api.github.com/users/aselle/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2016-09-30T10:20:45Z", "updated_at": "2016-10-03T16:59:49Z", "closed_at": "2016-10-03T16:59:49Z", "author_association": "NONE", "body_html": "<p>On commit <code>931ff427f3a55a9c6c734a4c325d6af1b53665c3</code>, the following happens when trying to slice a tensor with an invalid slice.</p>\n<div class=\"highlight highlight-source-python\"><pre>t <span class=\"pl-k\">=</span> tf.ones([<span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>])\nt[<span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">0</span>]\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> &lt;tf.Tensor 'strided_slice_10:0' shape=() dtype=float32&gt;</span>\nt[<span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">0</span>].eval()\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>0.0</span>\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Also when calling the function directly:</span>\ntf.strided_slice(t, [<span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">0</span>], [<span class=\"pl-c1\">5</span>, <span class=\"pl-c1\">1</span>], [<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>], <span class=\"pl-v\">shrink_axis_mask</span><span class=\"pl-k\">=</span><span class=\"pl-c1\"><span class=\"pl-k\">0b</span>11</span>).eval()\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>0.0</span>\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Note this is different to the numpy behaviour</span>\na <span class=\"pl-k\">=</span> np.ones([<span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>])\na[<span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">0</span>]\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> IndexError: index 4 is out of bounds for axis 0 with size 2</span></pre></div>\n<p>Also, calling <code>tf.strided_slice</code> directly sometimes results in core dumps when using it with nonsensical parameters:</p>\n<div class=\"highlight highlight-source-python\"><pre>t <span class=\"pl-k\">=</span> tf.ones([<span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>])\ntf.strided_slice(t, [<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>], [<span class=\"pl-c1\">100</span>, <span class=\"pl-c1\">100</span>], [<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>], <span class=\"pl-v\">shrink_axis_mask</span><span class=\"pl-k\">=</span><span class=\"pl-c1\"><span class=\"pl-k\">0b</span>11</span>)\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> &lt;tf.Tensor 'StridedSlice_1:0' shape=() dtype=float32&gt;</span>\ntf.strided_slice(t, [<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>], [<span class=\"pl-c1\">100</span>, <span class=\"pl-c1\">100</span>], [<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>], <span class=\"pl-v\">shrink_axis_mask</span><span class=\"pl-k\">=</span><span class=\"pl-c1\"><span class=\"pl-k\">0b</span>11</span>).eval()\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> F tensorflow/core/kernels/strided_slice_op.cc:307] Check failed: tmp.CopyFrom(input, final_shape)</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Aborted (core dumped)</span></pre></div>\n<h3>Environment info</h3>\n<p>Operating System:<br>\nUbuntu 14.04</p>\n<p>Installed version of CUDA and cuDNN:<br>\n(please attach the output of <code>ls -l /path/to/cuda/lib/libcud*</code>):</p>\n<pre><code>-rw-r--r-- 1 root root   322936 Aug 15  2015 /usr/local/cuda-7.5/lib64/libcudadevrt.a\nlrwxrwxrwx 1 root root       16 Aug 15  2015 /usr/local/cuda-7.5/lib64/libcudart.so -&gt; libcudart.so.7.5\nlrwxrwxrwx 1 root root       19 Aug 15  2015 /usr/local/cuda-7.5/lib64/libcudart.so.7.5 -&gt; libcudart.so.7.5.18\n-rwxr-xr-x 1 root root   383336 Aug 15  2015 /usr/local/cuda-7.5/lib64/libcudart.so.7.5.18\n-rw-r--r-- 1 root root   720192 Aug 15  2015 /usr/local/cuda-7.5/lib64/libcudart_static.a\nlrwxrwxrwx 1 root root       13 May 23 17:04 /usr/local/cuda-7.5/lib64/libcudnn.so -&gt; libcudnn.so.5\nlrwxrwxrwx 1 root root       17 May 23 17:03 /usr/local/cuda-7.5/lib64/libcudnn.so.5 -&gt; libcudnn.so.5.0.5\n-rwxr-xr-x 1 root root 59909104 May 23 17:02 /usr/local/cuda-7.5/lib64/libcudnn.so.5.0.5\n-rw-r--r-- 1 root root 58775484 May 23 17:02 /usr/local/cuda-7.5/lib64/libcudnn_static.a\n</code></pre>\n<p>If installed from source, provide</p>\n<ol>\n<li>The commit hash (<code>git rev-parse HEAD</code>)<br>\n<code>931ff427f3a55a9c6c734a4c325d6af1b53665c3</code></li>\n<li>The output of <code>bazel version</code></li>\n</ol>\n<pre><code>Build target: bazel-out/local-fastbuild/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar\nBuild time: Thu Jan 01 00:00:00 1970 (0)\nBuild timestamp: Thu Jan 01 00:00:00 1970 (0)\nBuild timestamp as int: 0\n</code></pre>", "body_text": "On commit 931ff427f3a55a9c6c734a4c325d6af1b53665c3, the following happens when trying to slice a tensor with an invalid slice.\nt = tf.ones([2, 3])\nt[4, 0]\n# <tf.Tensor 'strided_slice_10:0' shape=() dtype=float32>\nt[4, 0].eval()\n#0.0\n\n# Also when calling the function directly:\ntf.strided_slice(t, [4, 0], [5, 1], [1, 1], shrink_axis_mask=0b11).eval()\n#0.0\n\n# Note this is different to the numpy behaviour\na = np.ones([2, 3])\na[4, 0]\n# IndexError: index 4 is out of bounds for axis 0 with size 2\nAlso, calling tf.strided_slice directly sometimes results in core dumps when using it with nonsensical parameters:\nt = tf.ones([2, 3])\ntf.strided_slice(t, [0, 0], [100, 100], [1, 1], shrink_axis_mask=0b11)\n# <tf.Tensor 'StridedSlice_1:0' shape=() dtype=float32>\ntf.strided_slice(t, [0, 0], [100, 100], [1, 1], shrink_axis_mask=0b11).eval()\n# F tensorflow/core/kernels/strided_slice_op.cc:307] Check failed: tmp.CopyFrom(input, final_shape)\n# Aborted (core dumped)\nEnvironment info\nOperating System:\nUbuntu 14.04\nInstalled version of CUDA and cuDNN:\n(please attach the output of ls -l /path/to/cuda/lib/libcud*):\n-rw-r--r-- 1 root root   322936 Aug 15  2015 /usr/local/cuda-7.5/lib64/libcudadevrt.a\nlrwxrwxrwx 1 root root       16 Aug 15  2015 /usr/local/cuda-7.5/lib64/libcudart.so -> libcudart.so.7.5\nlrwxrwxrwx 1 root root       19 Aug 15  2015 /usr/local/cuda-7.5/lib64/libcudart.so.7.5 -> libcudart.so.7.5.18\n-rwxr-xr-x 1 root root   383336 Aug 15  2015 /usr/local/cuda-7.5/lib64/libcudart.so.7.5.18\n-rw-r--r-- 1 root root   720192 Aug 15  2015 /usr/local/cuda-7.5/lib64/libcudart_static.a\nlrwxrwxrwx 1 root root       13 May 23 17:04 /usr/local/cuda-7.5/lib64/libcudnn.so -> libcudnn.so.5\nlrwxrwxrwx 1 root root       17 May 23 17:03 /usr/local/cuda-7.5/lib64/libcudnn.so.5 -> libcudnn.so.5.0.5\n-rwxr-xr-x 1 root root 59909104 May 23 17:02 /usr/local/cuda-7.5/lib64/libcudnn.so.5.0.5\n-rw-r--r-- 1 root root 58775484 May 23 17:02 /usr/local/cuda-7.5/lib64/libcudnn_static.a\n\nIf installed from source, provide\n\nThe commit hash (git rev-parse HEAD)\n931ff427f3a55a9c6c734a4c325d6af1b53665c3\nThe output of bazel version\n\nBuild target: bazel-out/local-fastbuild/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar\nBuild time: Thu Jan 01 00:00:00 1970 (0)\nBuild timestamp: Thu Jan 01 00:00:00 1970 (0)\nBuild timestamp as int: 0", "body": "On commit `931ff427f3a55a9c6c734a4c325d6af1b53665c3`, the following happens when trying to slice a tensor with an invalid slice.\n\n``` python\nt = tf.ones([2, 3])\nt[4, 0]\n# <tf.Tensor 'strided_slice_10:0' shape=() dtype=float32>\nt[4, 0].eval()\n#0.0\n\n# Also when calling the function directly:\ntf.strided_slice(t, [4, 0], [5, 1], [1, 1], shrink_axis_mask=0b11).eval()\n#0.0\n\n# Note this is different to the numpy behaviour\na = np.ones([2, 3])\na[4, 0]\n# IndexError: index 4 is out of bounds for axis 0 with size 2\n```\n\nAlso, calling `tf.strided_slice` directly sometimes results in core dumps when using it with nonsensical parameters:\n\n``` python\nt = tf.ones([2, 3])\ntf.strided_slice(t, [0, 0], [100, 100], [1, 1], shrink_axis_mask=0b11)\n# <tf.Tensor 'StridedSlice_1:0' shape=() dtype=float32>\ntf.strided_slice(t, [0, 0], [100, 100], [1, 1], shrink_axis_mask=0b11).eval()\n# F tensorflow/core/kernels/strided_slice_op.cc:307] Check failed: tmp.CopyFrom(input, final_shape)\n# Aborted (core dumped)\n```\n### Environment info\n\nOperating System:\nUbuntu 14.04\n\nInstalled version of CUDA and cuDNN: \n(please attach the output of `ls -l /path/to/cuda/lib/libcud*`):\n\n```\n-rw-r--r-- 1 root root   322936 Aug 15  2015 /usr/local/cuda-7.5/lib64/libcudadevrt.a\nlrwxrwxrwx 1 root root       16 Aug 15  2015 /usr/local/cuda-7.5/lib64/libcudart.so -> libcudart.so.7.5\nlrwxrwxrwx 1 root root       19 Aug 15  2015 /usr/local/cuda-7.5/lib64/libcudart.so.7.5 -> libcudart.so.7.5.18\n-rwxr-xr-x 1 root root   383336 Aug 15  2015 /usr/local/cuda-7.5/lib64/libcudart.so.7.5.18\n-rw-r--r-- 1 root root   720192 Aug 15  2015 /usr/local/cuda-7.5/lib64/libcudart_static.a\nlrwxrwxrwx 1 root root       13 May 23 17:04 /usr/local/cuda-7.5/lib64/libcudnn.so -> libcudnn.so.5\nlrwxrwxrwx 1 root root       17 May 23 17:03 /usr/local/cuda-7.5/lib64/libcudnn.so.5 -> libcudnn.so.5.0.5\n-rwxr-xr-x 1 root root 59909104 May 23 17:02 /usr/local/cuda-7.5/lib64/libcudnn.so.5.0.5\n-rw-r--r-- 1 root root 58775484 May 23 17:02 /usr/local/cuda-7.5/lib64/libcudnn_static.a\n```\n\nIf installed from source, provide \n1. The commit hash (`git rev-parse HEAD`)\n   `931ff427f3a55a9c6c734a4c325d6af1b53665c3`\n2. The output of `bazel version`\n\n```\nBuild target: bazel-out/local-fastbuild/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar\nBuild time: Thu Jan 01 00:00:00 1970 (0)\nBuild timestamp: Thu Jan 01 00:00:00 1970 (0)\nBuild timestamp as int: 0\n```\n"}