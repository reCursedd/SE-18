{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/214442489", "html_url": "https://github.com/tensorflow/tensorflow/pull/664#issuecomment-214442489", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/664", "id": 214442489, "node_id": "MDEyOklzc3VlQ29tbWVudDIxNDQ0MjQ4OQ==", "user": {"login": "markb729", "id": 15279264, "node_id": "MDQ6VXNlcjE1Mjc5MjY0", "avatar_url": "https://avatars2.githubusercontent.com/u/15279264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markb729", "html_url": "https://github.com/markb729", "followers_url": "https://api.github.com/users/markb729/followers", "following_url": "https://api.github.com/users/markb729/following{/other_user}", "gists_url": "https://api.github.com/users/markb729/gists{/gist_id}", "starred_url": "https://api.github.com/users/markb729/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markb729/subscriptions", "organizations_url": "https://api.github.com/users/markb729/orgs", "repos_url": "https://api.github.com/users/markb729/repos", "events_url": "https://api.github.com/users/markb729/events{/privacy}", "received_events_url": "https://api.github.com/users/markb729/received_events", "type": "User", "site_admin": false}, "created_at": "2016-04-25T17:03:10Z", "updated_at": "2016-04-25T17:09:03Z", "author_association": "NONE", "body_html": "<p>Good work on the update.</p>\n<p>There may still be an issue with cudnn v5 when packaged/installed with pip.</p>\n<p>For both cudnn v4 and v5, the compile completes successfully. Invoking an example trainer,<br>\nbazel-bin/tensorflow/cc/tutorials_example_trainer, runs successfully with BOTH libraries:</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>I tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcublas.7.5.dylib locally<br>\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library <strong>libcudnn.4.dylib or ibcudnn.5.dylib</strong> locally<br>\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcufft.7.5.dylib locally<br>\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcuda.dylib locally<br>\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcurand.7.5.dylib locally<br>\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:883] OS X does not support NUMA - returning NUMA node zero<br>\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:102] Found device 0 with properties:<br>\nname: GeForce GTX 980 Ti<br>\nmajor: 5 minor: 2 memoryClockRate (GHz) 1.076<br>\n...<br>\n000001/000009 lambda = 2.000000 x = [0.894427 -0.447214] y = [1.788854 -0.894427]</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<p>However, when packaged and installed with pip, a compile with cudnn 4 works as expected but cudnn 5 will fail on load of the cudnn.5.dylib library:</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>import tensorflow as tf<br>\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcublas.7.5.dylib locally<br>\nSegmentation fault: 11</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<p>This is the point at which libcudnn.5.dylib loads. Since cudnn 5 works with the example trainer, the packaging must be breaking something, perhaps a misplaced non-versioned symlink? Odd that cudnn 4 works though. Perhaps a misplaced non-versioned symlink?</p>", "body_text": "Good work on the update.\nThere may still be an issue with cudnn v5 when packaged/installed with pip.\nFor both cudnn v4 and v5, the compile completes successfully. Invoking an example trainer,\nbazel-bin/tensorflow/cc/tutorials_example_trainer, runs successfully with BOTH libraries:\n\n\n\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcublas.7.5.dylib locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcudnn.4.dylib or ibcudnn.5.dylib locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcufft.7.5.dylib locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcuda.dylib locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcurand.7.5.dylib locally\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:883] OS X does not support NUMA - returning NUMA node zero\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:102] Found device 0 with properties:\nname: GeForce GTX 980 Ti\nmajor: 5 minor: 2 memoryClockRate (GHz) 1.076\n...\n000001/000009 lambda = 2.000000 x = [0.894427 -0.447214] y = [1.788854 -0.894427]\n\n\n\nHowever, when packaged and installed with pip, a compile with cudnn 4 works as expected but cudnn 5 will fail on load of the cudnn.5.dylib library:\n\n\n\nimport tensorflow as tf\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcublas.7.5.dylib locally\nSegmentation fault: 11\n\n\n\nThis is the point at which libcudnn.5.dylib loads. Since cudnn 5 works with the example trainer, the packaging must be breaking something, perhaps a misplaced non-versioned symlink? Odd that cudnn 4 works though. Perhaps a misplaced non-versioned symlink?", "body": "Good work on the update.\n\nThere may still be an issue with cudnn v5 when packaged/installed with pip.\n\nFor both cudnn v4 and v5, the compile completes successfully. Invoking an example trainer,\nbazel-bin/tensorflow/cc/tutorials_example_trainer, runs successfully with BOTH libraries:\n\n> > > I tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcublas.7.5.dylib locally\n> > > I tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library **libcudnn.4.dylib or ibcudnn.5.dylib** locally\n> > > I tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcufft.7.5.dylib locally\n> > > I tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcuda.dylib locally\n> > > I tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcurand.7.5.dylib locally\n> > > I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:883] OS X does not support NUMA - returning NUMA node zero\n> > > I tensorflow/core/common_runtime/gpu/gpu_init.cc:102] Found device 0 with properties:\n> > > name: GeForce GTX 980 Ti\n> > > major: 5 minor: 2 memoryClockRate (GHz) 1.076\n> > > ...\n> > > 000001/000009 lambda = 2.000000 x = [0.894427 -0.447214] y = [1.788854 -0.894427]\n\nHowever, when packaged and installed with pip, a compile with cudnn 4 works as expected but cudnn 5 will fail on load of the cudnn.5.dylib library:\n\n> > > import tensorflow as tf\n> > > I tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcublas.7.5.dylib locally\n> > > Segmentation fault: 11\n\nThis is the point at which libcudnn.5.dylib loads. Since cudnn 5 works with the example trainer, the packaging must be breaking something, perhaps a misplaced non-versioned symlink? Odd that cudnn 4 works though. Perhaps a misplaced non-versioned symlink? \n"}