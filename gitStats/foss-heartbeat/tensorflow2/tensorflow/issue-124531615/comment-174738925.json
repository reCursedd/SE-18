{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/174738925", "html_url": "https://github.com/tensorflow/tensorflow/pull/664#issuecomment-174738925", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/664", "id": 174738925, "node_id": "MDEyOklzc3VlQ29tbWVudDE3NDczODkyNQ==", "user": {"login": "NathanHowell", "id": 170829, "node_id": "MDQ6VXNlcjE3MDgyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/170829?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NathanHowell", "html_url": "https://github.com/NathanHowell", "followers_url": "https://api.github.com/users/NathanHowell/followers", "following_url": "https://api.github.com/users/NathanHowell/following{/other_user}", "gists_url": "https://api.github.com/users/NathanHowell/gists{/gist_id}", "starred_url": "https://api.github.com/users/NathanHowell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NathanHowell/subscriptions", "organizations_url": "https://api.github.com/users/NathanHowell/orgs", "repos_url": "https://api.github.com/users/NathanHowell/repos", "events_url": "https://api.github.com/users/NathanHowell/events{/privacy}", "received_events_url": "https://api.github.com/users/NathanHowell/received_events", "type": "User", "site_admin": false}, "created_at": "2016-01-26T00:08:08Z", "updated_at": "2016-01-26T00:33:38Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=10103420\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/elbamos\">@elbamos</a> I have a rebased/hacked up branch here: <a href=\"https://github.com/NathanHowell/tensorflow/tree/cuda_osx2\">https://github.com/NathanHowell/tensorflow/tree/cuda_osx2</a> (EDIT: cuda_osx3 is broken)</p>\n<p>It also needs a patch to Eigen, not sure if it's 100% correct but it at least builds and runs:</p>\n<pre><code>--- ./bazel-tensorflow/external/eigen_archive/eigen-eigen-c8e5d094f3a9/unsupported/Eigen/CXX11/src/Tensor/TensorIntDiv.h    2016-01-25 15:51:44.000000000 -0800\n+++ ./bazel-tensorflow/external/eigen_archive/eigen-eigen-c8e5d094f3a9/unsupported/Eigen/CXX11/src/Tensor/TensorIntDiv.h    2016-01-25 16:04:11.000000000 -0800\n@@ -98,7 +98,7 @@\n       return static_cast&lt;uint64_t&gt;((static_cast&lt;__uint128_t&gt;(1) &lt;&lt; (64+log_div)) / static_cast&lt;__uint128_t&gt;(divider) - (static_cast&lt;__uint128_t&gt;(1) &lt;&lt; 64) + 1);\n #else\n       const uint64_t shift = 1ULL &lt;&lt; log_div;\n-      TensorUInt128&lt;uint64_t, uint64_t&gt; result = (TensorUInt128&lt;uint64_t, static_val&lt;0&gt; &gt;(shift, 0) / TensorUInt128&lt;static_val&lt;0&gt;, uint64_t&gt;(divider) - TensorUInt128&lt;static_val&lt;1&gt;, static_val&lt;0&gt; &gt;(1, 0) + TensorUInt128&lt;static_val&lt;0&gt;, static_val&lt;1&gt; &gt;(1));\n+      TensorUInt128&lt;uint64_t, uint64_t&gt; result = (TensorUInt128&lt;uint64_t, static_val&lt;0&gt; &gt;(shift, 0) / TensorUInt128&lt;static_val&lt;0&gt;, uint64_t&gt;(static_cast&lt;uint64_t&gt;(divider)) - TensorUInt128&lt;static_val&lt;1&gt;, static_val&lt;0&gt; &gt;(1, 0) + TensorUInt128&lt;static_val&lt;0&gt;, static_val&lt;1&gt; &gt;(1));\n       return static_cast&lt;uint64_t&gt;(result);\n #endif\n     }\n</code></pre>", "body_text": "@elbamos I have a rebased/hacked up branch here: https://github.com/NathanHowell/tensorflow/tree/cuda_osx2 (EDIT: cuda_osx3 is broken)\nIt also needs a patch to Eigen, not sure if it's 100% correct but it at least builds and runs:\n--- ./bazel-tensorflow/external/eigen_archive/eigen-eigen-c8e5d094f3a9/unsupported/Eigen/CXX11/src/Tensor/TensorIntDiv.h    2016-01-25 15:51:44.000000000 -0800\n+++ ./bazel-tensorflow/external/eigen_archive/eigen-eigen-c8e5d094f3a9/unsupported/Eigen/CXX11/src/Tensor/TensorIntDiv.h    2016-01-25 16:04:11.000000000 -0800\n@@ -98,7 +98,7 @@\n       return static_cast<uint64_t>((static_cast<__uint128_t>(1) << (64+log_div)) / static_cast<__uint128_t>(divider) - (static_cast<__uint128_t>(1) << 64) + 1);\n #else\n       const uint64_t shift = 1ULL << log_div;\n-      TensorUInt128<uint64_t, uint64_t> result = (TensorUInt128<uint64_t, static_val<0> >(shift, 0) / TensorUInt128<static_val<0>, uint64_t>(divider) - TensorUInt128<static_val<1>, static_val<0> >(1, 0) + TensorUInt128<static_val<0>, static_val<1> >(1));\n+      TensorUInt128<uint64_t, uint64_t> result = (TensorUInt128<uint64_t, static_val<0> >(shift, 0) / TensorUInt128<static_val<0>, uint64_t>(static_cast<uint64_t>(divider)) - TensorUInt128<static_val<1>, static_val<0> >(1, 0) + TensorUInt128<static_val<0>, static_val<1> >(1));\n       return static_cast<uint64_t>(result);\n #endif\n     }", "body": "@elbamos I have a rebased/hacked up branch here: https://github.com/NathanHowell/tensorflow/tree/cuda_osx2 (EDIT: cuda_osx3 is broken)\n\nIt also needs a patch to Eigen, not sure if it's 100% correct but it at least builds and runs:\n\n```\n--- ./bazel-tensorflow/external/eigen_archive/eigen-eigen-c8e5d094f3a9/unsupported/Eigen/CXX11/src/Tensor/TensorIntDiv.h    2016-01-25 15:51:44.000000000 -0800\n+++ ./bazel-tensorflow/external/eigen_archive/eigen-eigen-c8e5d094f3a9/unsupported/Eigen/CXX11/src/Tensor/TensorIntDiv.h    2016-01-25 16:04:11.000000000 -0800\n@@ -98,7 +98,7 @@\n       return static_cast<uint64_t>((static_cast<__uint128_t>(1) << (64+log_div)) / static_cast<__uint128_t>(divider) - (static_cast<__uint128_t>(1) << 64) + 1);\n #else\n       const uint64_t shift = 1ULL << log_div;\n-      TensorUInt128<uint64_t, uint64_t> result = (TensorUInt128<uint64_t, static_val<0> >(shift, 0) / TensorUInt128<static_val<0>, uint64_t>(divider) - TensorUInt128<static_val<1>, static_val<0> >(1, 0) + TensorUInt128<static_val<0>, static_val<1> >(1));\n+      TensorUInt128<uint64_t, uint64_t> result = (TensorUInt128<uint64_t, static_val<0> >(shift, 0) / TensorUInt128<static_val<0>, uint64_t>(static_cast<uint64_t>(divider)) - TensorUInt128<static_val<1>, static_val<0> >(1, 0) + TensorUInt128<static_val<0>, static_val<1> >(1));\n       return static_cast<uint64_t>(result);\n #endif\n     }\n```\n"}