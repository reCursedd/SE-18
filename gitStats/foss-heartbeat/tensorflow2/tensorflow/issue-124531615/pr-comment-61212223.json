{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/61212223", "pull_request_review_id": null, "id": 61212223, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMjEyMjIz", "diff_hunk": "@@ -99,59 +111,82 @@ function CheckAndLinkToSrcTree {\n \n   # Link the output file to the source tree, avoiding self links if they are\n   # the same. This could happen if invoked from the source tree by accident.\n-  if [ ! $(readlink -f $PWD) == $(readlink -f $OUTPUTDIR/third_party/gpus/cuda) ]; then\n+  if [ ! $($READLINK_CMD -f $PWD) == $($READLINK_CMD -f $OUTPUTDIR/third_party/gpus/cuda) ]; then\n     mkdir -p $(dirname $OUTPUTDIR/third_party/gpus/cuda/$FILE)\n     ln -sf $PWD/$FILE $OUTPUTDIR/third_party/gpus/cuda/$FILE\n   fi\n }\n \n+OSNAME=`uname -s`\n+if [ \"$OSNAME\" == \"Linux\" ]; then\n+  CUDA_LIB_PATH=\"lib64\"\n+  CUDA_CUPTI_LIB_DIR=\"extras/CUPTI/lib64\"\n+  CUDA_RT_LIB_PATH=\"lib64/libcudart.so${TF_CUDA_EXT}\"\n+  CUDA_RT_LIB_STATIC_PATH=\"lib64/libcudart_static.a\"\n+  CUDA_BLAS_LIB_PATH=\"lib64/libcublas.so${TF_CUDA_EXT}\"\n+  CUDA_DNN_LIB_PATH=\"lib64/libcudnn.so${TF_CUDNN_EXT}\"\n+  CUDA_DNN_LIB_ALT_PATH=\"libcudnn.so${TF_CUDNN_EXT}\"\n+  CUDA_FFT_LIB_PATH=\"lib64/libcufft.so${TF_CUDA_EXT}\"\n+  CUDA_CUPTI_LIB_PATH=\"extras/CUPTI/lib64/libcupti.so${TF_CUDA_EXT}\"\n+  READLINK_CMD=\"readlink\"\n+elif [ \"$OSNAME\" == \"Darwin\" ]; then\n+  CUDA_LIB_PATH=\"lib\"\n+  CUDA_CUPTI_LIB_DIR=\"extras/CUPTI/lib\"\n+  CUDA_RT_LIB_PATH=\"lib/libcudart${TF_CUDA_EXT}.dylib\"\n+  CUDA_RT_LIB_STATIC_PATH=\"lib/libcudart_static.a\"\n+  CUDA_BLAS_LIB_PATH=\"lib/libcublas${TF_CUDA_EXT}.dylib\"\n+  CUDA_DNN_LIB_PATH=\"lib/libcudnn${TF_CUDNN_EXT}.dylib\"\n+  CUDA_DNN_LIB_ALT_PATH=\"libcudnn${TF_CUDNN_EXT}.dylib\"\n+  CUDA_FFT_LIB_PATH=\"lib/libcufft${TF_CUDA_EXT}.dylib\"\n+  CUDA_CUPTI_LIB_PATH=\"extras/CUPTI/lib/libcupti${TF_CUDA_EXT}.dylib\"\n+  READLINK_CMD=\"greadlink\"\n+fi\n+\n if [ \"$CHECK_ONLY\" == \"1\" ]; then\n   CheckAndLinkToSrcTree CudaError include/cuda.h\n   CheckAndLinkToSrcTree CudaError include/cublas.h\n   CheckAndLinkToSrcTree CudnnError include/cudnn.h\n   CheckAndLinkToSrcTree CudaError extras/CUPTI/include/cupti.h\n-  CheckAndLinkToSrcTree CudaError lib64/libcudart_static.a\n-  CheckAndLinkToSrcTree CudaError lib64/libcublas.so$TF_CUDA_VERSION\n-  CheckAndLinkToSrcTree CudnnError lib64/libcudnn.so$TF_CUDNN_VERSION\n-  CheckAndLinkToSrcTree CudaError lib64/libcudart.so$TF_CUDA_VERSION\n-  CheckAndLinkToSrcTree CudaError lib64/libcufft.so$TF_CUDA_VERSION\n-  CheckAndLinkToSrcTree CudaError extras/CUPTI/lib64/libcupti.so$TF_CUDA_VERSION\n+  CheckAndLinkToSrcTree CudaError $CUDA_RT_LIB_STATIC_PATH\n+  CheckAndLinkToSrcTree CudaError $CUDA_BLAS_LIB_PATH\n+  CheckAndLinkToSrcTree CudnnError $CUDA_DNN_LIB_PATH\n+  CheckAndLinkToSrcTree CudaError $CUDA_RT_LIB_PATH\n+  CheckAndLinkToSrcTree CudaError $CUDA_FFT_LIB_PATH\n+  CheckAndLinkToSrcTree CudaError $CUDA_CUPTI_LIB_PATH\n   exit 0\n fi\n \n # Actually configure the source tree for TensorFlow's canonical view of Cuda\n # libraries.\n \n-if test ! -e ${CUDA_TOOLKIT_PATH}/lib64/libcudart.so$TF_CUDA_VERSION; then\n-  CudaError \"cannot find ${CUDA_TOOLKIT_PATH}/lib64/libcudart.so$TF_CUDA_VERSION\"\n+if test ! -e ${CUDA_TOOLKIT_PATH}/${CUDA_RT_LIB_PATH}; then\n+  CudaError \"cannot find ${CUDA_TOOLKIT_PATH}/${CUDA_RT_LIB_PATH}\"\n fi\n \n-if test ! -e ${CUDA_TOOLKIT_PATH}/extras/CUPTI/lib64/libcupti.so$TF_CUDA_VERSION; then\n-  CudaError \"cannot find ${CUDA_TOOLKIT_PATH}/extras/CUPTI/lib64/libcupti.so$TF_CUDA_VERSION\"\n+if test ! -e ${CUDA_TOOLKIT_PATH}/${CUDA_CUPTI_LIB_PATH}; then\n+  CudaError \"cannot find ${CUDA_TOOLKIT_PATH}/${CUDA_CUPTI_LIB_PATH}\"\n fi\n \n-if test ! -d ${CUDNN_INSTALL_PATH}; then\n-  CudnnError \"cannot find dir: ${CUDNN_INSTALL_PATH}\"\n+if test ! -d ${CUDNN_INSTALL_BASEDIR}; then\n+  CudnnError \"cannot find dir: ${CUDNN_INSTALL_BASEDIR}\"\n fi\n \n # Locate cudnn.h\n-if test -e ${CUDNN_INSTALL_PATH}/cudnn.h; then\n-  CUDNN_HEADER_PATH=${CUDNN_INSTALL_PATH}\n-elif test -e ${CUDNN_INSTALL_PATH}/include/cudnn.h; then\n-  CUDNN_HEADER_PATH=${CUDNN_INSTALL_PATH}/include\n-elif test -e /usr/include/cudnn.h; then\n-  CUDNN_HEADER_PATH=/usr/include", "path": "third_party/gpus/cuda/cuda_config.sh", "position": null, "original_position": 104, "commit_id": "e11c8b3dbd6ee4f3f4b3030916ec8efe356b34b3", "original_commit_id": "16b20ecc6bfb5360f66353b9899cbd4ce2180bf3", "user": {"login": "ville-k", "id": 101231, "node_id": "MDQ6VXNlcjEwMTIzMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/101231?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ville-k", "html_url": "https://github.com/ville-k", "followers_url": "https://api.github.com/users/ville-k/followers", "following_url": "https://api.github.com/users/ville-k/following{/other_user}", "gists_url": "https://api.github.com/users/ville-k/gists{/gist_id}", "starred_url": "https://api.github.com/users/ville-k/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ville-k/subscriptions", "organizations_url": "https://api.github.com/users/ville-k/orgs", "repos_url": "https://api.github.com/users/ville-k/repos", "events_url": "https://api.github.com/users/ville-k/events{/privacy}", "received_events_url": "https://api.github.com/users/ville-k/received_events", "type": "User", "site_admin": false}, "body": "@vrv should be fixed now .\n", "created_at": "2016-04-27T06:59:45Z", "updated_at": "2016-04-27T06:59:45Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/664#discussion_r61212223", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/664", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/61212223"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/664#discussion_r61212223"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/664"}}, "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=463737\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vrv\">@vrv</a> should be fixed now .</p>", "body_text": "@vrv should be fixed now ."}