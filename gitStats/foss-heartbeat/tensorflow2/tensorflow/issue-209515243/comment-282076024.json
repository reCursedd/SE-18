{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/282076024", "html_url": "https://github.com/tensorflow/tensorflow/issues/7784#issuecomment-282076024", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7784", "id": 282076024, "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjA3NjAyNA==", "user": {"login": "poxvoculi", "id": 15676913, "node_id": "MDQ6VXNlcjE1Njc2OTEz", "avatar_url": "https://avatars2.githubusercontent.com/u/15676913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poxvoculi", "html_url": "https://github.com/poxvoculi", "followers_url": "https://api.github.com/users/poxvoculi/followers", "following_url": "https://api.github.com/users/poxvoculi/following{/other_user}", "gists_url": "https://api.github.com/users/poxvoculi/gists{/gist_id}", "starred_url": "https://api.github.com/users/poxvoculi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poxvoculi/subscriptions", "organizations_url": "https://api.github.com/users/poxvoculi/orgs", "repos_url": "https://api.github.com/users/poxvoculi/repos", "events_url": "https://api.github.com/users/poxvoculi/events{/privacy}", "received_events_url": "https://api.github.com/users/poxvoculi/received_events", "type": "User", "site_admin": false}, "created_at": "2017-02-23T18:21:22Z", "updated_at": "2017-02-23T18:21:22Z", "author_association": "MEMBER", "body_html": "<p>OK, thanks for posting <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=25343161\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mahatosourav91\">@mahatosourav91</a>, this program reproduces the first error, which is:</p>\n<p><code>ValueError: Tensor conversion requested dtype float64 for Tensor with dtype float32: 'Tensor(\"sub_1:0\", shape=(), dtype=float32)' </code></p>\n<p>My understanding is that numpy by default will create an array of float64, and many parts of TF will require float32.  The logic path hit in this example can't force a conversion, so it's an error.  Changing the type of the argument as follows will get past that error:</p>\n<p><code>x = np.array([[random.random() for i in range(198)] for j in range(2384)], dtype=np.float32) </code></p>\n<p>The next error hit is</p>\n<p><code>InvalidArgumentError (see above for traceback): assertion failed: [] [Condition x &lt;= y did not hold element-wise: x = ] [assert_less_equal/x:0] [200] [y = ] [strided_slice_1:0] [128]</code></p>\n<p>I'm still looking into that one.</p>", "body_text": "OK, thanks for posting @mahatosourav91, this program reproduces the first error, which is:\nValueError: Tensor conversion requested dtype float64 for Tensor with dtype float32: 'Tensor(\"sub_1:0\", shape=(), dtype=float32)' \nMy understanding is that numpy by default will create an array of float64, and many parts of TF will require float32.  The logic path hit in this example can't force a conversion, so it's an error.  Changing the type of the argument as follows will get past that error:\nx = np.array([[random.random() for i in range(198)] for j in range(2384)], dtype=np.float32) \nThe next error hit is\nInvalidArgumentError (see above for traceback): assertion failed: [] [Condition x <= y did not hold element-wise: x = ] [assert_less_equal/x:0] [200] [y = ] [strided_slice_1:0] [128]\nI'm still looking into that one.", "body": "OK, thanks for posting @mahatosourav91, this program reproduces the first error, which is:\r\n\r\n`ValueError: Tensor conversion requested dtype float64 for Tensor with dtype float32: 'Tensor(\"sub_1:0\", shape=(), dtype=float32)'\r\n`\r\n\r\nMy understanding is that numpy by default will create an array of float64, and many parts of TF will require float32.  The logic path hit in this example can't force a conversion, so it's an error.  Changing the type of the argument as follows will get past that error:\r\n\r\n`x = np.array([[random.random() for i in range(198)] for j in range(2384)], dtype=np.float32) `\r\n\r\nThe next error hit is \r\n\r\n`InvalidArgumentError (see above for traceback): assertion failed: [] [Condition x <= y did not hold element-wise: x = ] [assert_less_equal/x:0] [200] [y = ] [strided_slice_1:0] [128]`\r\n\r\nI'm still looking into that one."}