{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18037", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18037/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18037/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18037/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18037", "id": 309198849, "node_id": "MDU6SXNzdWUzMDkxOTg4NDk=", "number": 18037, "title": "tf.sparse_tensor_dense_matmul makes small errors with tf.float32 matrices on GPU", "user": {"login": "Palazor", "id": 16420775, "node_id": "MDQ6VXNlcjE2NDIwNzc1", "avatar_url": "https://avatars2.githubusercontent.com/u/16420775?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Palazor", "html_url": "https://github.com/Palazor", "followers_url": "https://api.github.com/users/Palazor/followers", "following_url": "https://api.github.com/users/Palazor/following{/other_user}", "gists_url": "https://api.github.com/users/Palazor/gists{/gist_id}", "starred_url": "https://api.github.com/users/Palazor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Palazor/subscriptions", "organizations_url": "https://api.github.com/users/Palazor/orgs", "repos_url": "https://api.github.com/users/Palazor/repos", "events_url": "https://api.github.com/users/Palazor/events{/privacy}", "received_events_url": "https://api.github.com/users/Palazor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "chsigg", "id": 7523982, "node_id": "MDQ6VXNlcjc1MjM5ODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/7523982?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chsigg", "html_url": "https://github.com/chsigg", "followers_url": "https://api.github.com/users/chsigg/followers", "following_url": "https://api.github.com/users/chsigg/following{/other_user}", "gists_url": "https://api.github.com/users/chsigg/gists{/gist_id}", "starred_url": "https://api.github.com/users/chsigg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chsigg/subscriptions", "organizations_url": "https://api.github.com/users/chsigg/orgs", "repos_url": "https://api.github.com/users/chsigg/repos", "events_url": "https://api.github.com/users/chsigg/events{/privacy}", "received_events_url": "https://api.github.com/users/chsigg/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chsigg", "id": 7523982, "node_id": "MDQ6VXNlcjc1MjM5ODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/7523982?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chsigg", "html_url": "https://github.com/chsigg", "followers_url": "https://api.github.com/users/chsigg/followers", "following_url": "https://api.github.com/users/chsigg/following{/other_user}", "gists_url": "https://api.github.com/users/chsigg/gists{/gist_id}", "starred_url": "https://api.github.com/users/chsigg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chsigg/subscriptions", "organizations_url": "https://api.github.com/users/chsigg/orgs", "repos_url": "https://api.github.com/users/chsigg/repos", "events_url": "https://api.github.com/users/chsigg/events{/privacy}", "received_events_url": "https://api.github.com/users/chsigg/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-03-28T02:28:30Z", "updated_at": "2018-11-19T23:25:08Z", "closed_at": null, "author_association": "NONE", "body_html": "<hr>\n<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes, simple short code</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: both Ubuntu 14.04 / Centos 7</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: pip binary on Ubuntu, source  on Centos</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.4.1</li>\n<li><strong>Python version</strong>: 3.5.2</li>\n<li><strong>Bazel version (if compiling from source)</strong>: release 0.8.1</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: 4.8.5</li>\n<li><strong>CUDA/cuDNN version</strong>: 6.0.21</li>\n<li><strong>GPU model and memory</strong>: GTX 750 / GTX 1080</li>\n<li><strong>Exact command to reproduce</strong>: tf.sparse_tensor_dense_matmul</li>\n</ul>\n<h3>Describe the problem</h3>\n<ol>\n<li>Given a sparse tensor sp and a dense tensor mat, both of tf.float32,</li>\n<li>Compute thier product with tf.sparse_tensor_dense_matmul(sp, mat),</li>\n<li>The product varies slightly.</li>\n</ol>\n<h3>Source code / logs</h3>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n\ns <span class=\"pl-k\">=</span> tf.Session()\n\nnum <span class=\"pl-k\">=</span> <span class=\"pl-c1\">10</span>\ndim <span class=\"pl-k\">=</span> <span class=\"pl-c1\">10</span>\ntotal_out <span class=\"pl-k\">=</span> <span class=\"pl-c1\">100</span>\n\nindices <span class=\"pl-k\">=</span> [\n    [<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">0</span>],\n    [<span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">0</span>],\n    [<span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">0</span>],\n    [<span class=\"pl-c1\">5</span>, <span class=\"pl-c1\">0</span>], [<span class=\"pl-c1\">5</span>, <span class=\"pl-c1\">1</span>], [<span class=\"pl-c1\">5</span>, <span class=\"pl-c1\">2</span>],\n    [<span class=\"pl-c1\">6</span>, <span class=\"pl-c1\">0</span>], [<span class=\"pl-c1\">6</span>, <span class=\"pl-c1\">1</span>], [<span class=\"pl-c1\">6</span>, <span class=\"pl-c1\">2</span>], [<span class=\"pl-c1\">6</span>, <span class=\"pl-c1\">3</span>], [<span class=\"pl-c1\">6</span>, <span class=\"pl-c1\">4</span>], [<span class=\"pl-c1\">6</span>, <span class=\"pl-c1\">7</span>],\n    [<span class=\"pl-c1\">7</span>, <span class=\"pl-c1\">0</span>], [<span class=\"pl-c1\">7</span>, <span class=\"pl-c1\">1</span>], [<span class=\"pl-c1\">7</span>, <span class=\"pl-c1\">2</span>], [<span class=\"pl-c1\">7</span>, <span class=\"pl-c1\">7</span>], [<span class=\"pl-c1\">7</span>, <span class=\"pl-c1\">8</span>],\n    [<span class=\"pl-c1\">8</span>, <span class=\"pl-c1\">0</span>],\n    [<span class=\"pl-c1\">9</span>, <span class=\"pl-c1\">0</span>], [<span class=\"pl-c1\">9</span>, <span class=\"pl-c1\">1</span>], [<span class=\"pl-c1\">9</span>, <span class=\"pl-c1\">2</span>], [<span class=\"pl-c1\">9</span>, <span class=\"pl-c1\">7</span>]\n]\nvalues <span class=\"pl-k\">=</span> np.array([<span class=\"pl-c1\">1.0</span>] <span class=\"pl-k\">*</span> <span class=\"pl-c1\">len</span>(indices), np.float32)\nfeature <span class=\"pl-k\">=</span> tf.SparseTensor(indices, values, [tf.cast(num, tf.int64), tf.cast(dim, tf.int64)])\n\ndense <span class=\"pl-k\">=</span> tf.sparse_tensor_to_dense(feature, <span class=\"pl-v\">validate_indices</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">False</span>)\nmat <span class=\"pl-k\">=</span> tf.contrib.stateless.stateless_random_uniform([dim, total_out], <span class=\"pl-v\">seed</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>], <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.float32)\nprod <span class=\"pl-k\">=</span> tf.sparse_tensor_dense_matmul(feature, mat)\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> prod2 = tf.sparse_matmul(dense, mat, False, True, True, False, name='cross_sum')</span>\n\nT <span class=\"pl-k\">=</span> [<span class=\"pl-s\"><span class=\"pl-pds\">'</span>dense<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>mat<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>prod<span class=\"pl-pds\">'</span></span>]\nresults <span class=\"pl-k\">=</span> s.run([dense, mat, prod])\n\ncomp0 <span class=\"pl-k\">=</span> []\ncomp1 <span class=\"pl-k\">=</span> []\n<span class=\"pl-k\">for</span> i, r <span class=\"pl-k\">in</span> <span class=\"pl-c1\">enumerate</span>(results):\n    <span class=\"pl-k\">try</span>:\n        comp0.append(np.sum(np.load(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>npy_<span class=\"pl-c1\">{}</span>.npy<span class=\"pl-pds\">'</span></span>.format(T[i]))) <span class=\"pl-k\">-</span> np.sum(r))\n        comp1.append(np.load(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>npy_<span class=\"pl-c1\">{}</span>.npy<span class=\"pl-pds\">'</span></span>.format(T[i])) <span class=\"pl-k\">-</span> r)\n    <span class=\"pl-k\">except</span>:\n        np.save(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>npy_<span class=\"pl-c1\">{}</span>.npy<span class=\"pl-pds\">'</span></span>.format(T[i]), r)\n<span class=\"pl-k\">for</span> i <span class=\"pl-k\">in</span> <span class=\"pl-c1\">range</span>(<span class=\"pl-c1\">len</span>(comp0)):\n    <span class=\"pl-c1\">print</span>(T[i])\n    <span class=\"pl-c1\">print</span>(comp0[i])\n    <span class=\"pl-c1\">print</span>(comp1[i])\n    <span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span><span class=\"pl-cce\">\\n</span><span class=\"pl-pds\">'</span></span>)</pre></div>\n<p>Run the code several times, you will see that the product will vary slightly. like this:</p>\n<pre><code>dense\n0.0\n[[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]]\n\n\nmat\n0.0\n[[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n  0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n  0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n  0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n  0. 0. 0. 0.]\n...\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n  0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n  0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n  0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n  0. 0. 0. 0.]]\n\n\nprod\n0.0\n[[ 0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   2.3841858e-07 -4.7683716e-07  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n  -4.7683716e-07  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   2.3841858e-07  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  4.7683716e-07  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00 -2.3841858e-07\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  4.7683716e-07  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  2.3841858e-07  2.3841858e-07  0.0000000e+00\n   0.0000000e+00  2.3841858e-07  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  2.3841858e-07\n  -2.3841858e-07  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n  -2.3841858e-07  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00 -2.3841858e-07  0.0000000e+00\n  -2.3841858e-07  4.7683716e-07  0.0000000e+00  0.0000000e+00\n   0.0000000e+00 -2.3841858e-07  2.3841858e-07  0.0000000e+00\n   2.3841858e-07  0.0000000e+00  4.7683716e-07  2.3841858e-07\n   0.0000000e+00  4.7683716e-07  2.3841858e-07  4.7683716e-07\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  2.3841858e-07\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00]\n [ 0.0000000e+00  0.0000000e+00  0.0000000e+00  2.3841858e-07\n   2.3841858e-07  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  2.3841858e-07  0.0000000e+00\n   0.0000000e+00 -2.3841858e-07  2.3841858e-07  0.0000000e+00\n   0.0000000e+00 -2.3841858e-07  0.0000000e+00 -2.3841858e-07\n   0.0000000e+00  2.3841858e-07  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00 -2.3841858e-07\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  4.7683716e-07\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  2.3841858e-07  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00 -2.3841858e-07  0.0000000e+00  0.0000000e+00\n   0.0000000e+00 -4.7683716e-07  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  2.3841858e-07]\n [ 0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00]\n...\n]\n</code></pre>\n<p>This only happens on GPU with float32. It should be a bug I guess.</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes, simple short code\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): both Ubuntu 14.04 / Centos 7\nTensorFlow installed from (source or binary): pip binary on Ubuntu, source  on Centos\nTensorFlow version (use command below): 1.4.1\nPython version: 3.5.2\nBazel version (if compiling from source): release 0.8.1\nGCC/Compiler version (if compiling from source): 4.8.5\nCUDA/cuDNN version: 6.0.21\nGPU model and memory: GTX 750 / GTX 1080\nExact command to reproduce: tf.sparse_tensor_dense_matmul\n\nDescribe the problem\n\nGiven a sparse tensor sp and a dense tensor mat, both of tf.float32,\nCompute thier product with tf.sparse_tensor_dense_matmul(sp, mat),\nThe product varies slightly.\n\nSource code / logs\nimport tensorflow as tf\nimport numpy as np\n\ns = tf.Session()\n\nnum = 10\ndim = 10\ntotal_out = 100\n\nindices = [\n    [1, 0],\n    [2, 0],\n    [3, 0],\n    [5, 0], [5, 1], [5, 2],\n    [6, 0], [6, 1], [6, 2], [6, 3], [6, 4], [6, 7],\n    [7, 0], [7, 1], [7, 2], [7, 7], [7, 8],\n    [8, 0],\n    [9, 0], [9, 1], [9, 2], [9, 7]\n]\nvalues = np.array([1.0] * len(indices), np.float32)\nfeature = tf.SparseTensor(indices, values, [tf.cast(num, tf.int64), tf.cast(dim, tf.int64)])\n\ndense = tf.sparse_tensor_to_dense(feature, validate_indices=False)\nmat = tf.contrib.stateless.stateless_random_uniform([dim, total_out], seed=[1, 2], dtype=tf.float32)\nprod = tf.sparse_tensor_dense_matmul(feature, mat)\n# prod2 = tf.sparse_matmul(dense, mat, False, True, True, False, name='cross_sum')\n\nT = ['dense', 'mat', 'prod']\nresults = s.run([dense, mat, prod])\n\ncomp0 = []\ncomp1 = []\nfor i, r in enumerate(results):\n    try:\n        comp0.append(np.sum(np.load('npy_{}.npy'.format(T[i]))) - np.sum(r))\n        comp1.append(np.load('npy_{}.npy'.format(T[i])) - r)\n    except:\n        np.save('npy_{}.npy'.format(T[i]), r)\nfor i in range(len(comp0)):\n    print(T[i])\n    print(comp0[i])\n    print(comp1[i])\n    print('\\n')\nRun the code several times, you will see that the product will vary slightly. like this:\ndense\n0.0\n[[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]]\n\n\nmat\n0.0\n[[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n  0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n  0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n  0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n  0. 0. 0. 0.]\n...\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n  0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n  0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n  0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n  0. 0. 0. 0.]]\n\n\nprod\n0.0\n[[ 0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   2.3841858e-07 -4.7683716e-07  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n  -4.7683716e-07  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   2.3841858e-07  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  4.7683716e-07  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00 -2.3841858e-07\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  4.7683716e-07  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  2.3841858e-07  2.3841858e-07  0.0000000e+00\n   0.0000000e+00  2.3841858e-07  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  2.3841858e-07\n  -2.3841858e-07  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n  -2.3841858e-07  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00 -2.3841858e-07  0.0000000e+00\n  -2.3841858e-07  4.7683716e-07  0.0000000e+00  0.0000000e+00\n   0.0000000e+00 -2.3841858e-07  2.3841858e-07  0.0000000e+00\n   2.3841858e-07  0.0000000e+00  4.7683716e-07  2.3841858e-07\n   0.0000000e+00  4.7683716e-07  2.3841858e-07  4.7683716e-07\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  2.3841858e-07\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00]\n [ 0.0000000e+00  0.0000000e+00  0.0000000e+00  2.3841858e-07\n   2.3841858e-07  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  2.3841858e-07  0.0000000e+00\n   0.0000000e+00 -2.3841858e-07  2.3841858e-07  0.0000000e+00\n   0.0000000e+00 -2.3841858e-07  0.0000000e+00 -2.3841858e-07\n   0.0000000e+00  2.3841858e-07  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00 -2.3841858e-07\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  4.7683716e-07\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  2.3841858e-07  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00 -2.3841858e-07  0.0000000e+00  0.0000000e+00\n   0.0000000e+00 -4.7683716e-07  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  2.3841858e-07]\n [ 0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00]\n...\n]\n\nThis only happens on GPU with float32. It should be a bug I guess.", "body": "-----------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes, simple short code\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: both Ubuntu 14.04 / Centos 7\r\n- **TensorFlow installed from (source or binary)**: pip binary on Ubuntu, source  on Centos\r\n- **TensorFlow version (use command below)**: 1.4.1\r\n- **Python version**: 3.5.2\r\n- **Bazel version (if compiling from source)**: release 0.8.1\r\n- **GCC/Compiler version (if compiling from source)**: 4.8.5\r\n- **CUDA/cuDNN version**: 6.0.21\r\n- **GPU model and memory**: GTX 750 / GTX 1080\r\n- **Exact command to reproduce**: tf.sparse_tensor_dense_matmul\r\n\r\n### Describe the problem\r\n1. Given a sparse tensor sp and a dense tensor mat, both of tf.float32,\r\n2. Compute thier product with tf.sparse_tensor_dense_matmul(sp, mat),\r\n3. The product varies slightly.\r\n\r\n### Source code / logs\r\n``` python\r\nimport tensorflow as tf\r\nimport numpy as np\r\n\r\ns = tf.Session()\r\n\r\nnum = 10\r\ndim = 10\r\ntotal_out = 100\r\n\r\nindices = [\r\n    [1, 0],\r\n    [2, 0],\r\n    [3, 0],\r\n    [5, 0], [5, 1], [5, 2],\r\n    [6, 0], [6, 1], [6, 2], [6, 3], [6, 4], [6, 7],\r\n    [7, 0], [7, 1], [7, 2], [7, 7], [7, 8],\r\n    [8, 0],\r\n    [9, 0], [9, 1], [9, 2], [9, 7]\r\n]\r\nvalues = np.array([1.0] * len(indices), np.float32)\r\nfeature = tf.SparseTensor(indices, values, [tf.cast(num, tf.int64), tf.cast(dim, tf.int64)])\r\n\r\ndense = tf.sparse_tensor_to_dense(feature, validate_indices=False)\r\nmat = tf.contrib.stateless.stateless_random_uniform([dim, total_out], seed=[1, 2], dtype=tf.float32)\r\nprod = tf.sparse_tensor_dense_matmul(feature, mat)\r\n# prod2 = tf.sparse_matmul(dense, mat, False, True, True, False, name='cross_sum')\r\n\r\nT = ['dense', 'mat', 'prod']\r\nresults = s.run([dense, mat, prod])\r\n\r\ncomp0 = []\r\ncomp1 = []\r\nfor i, r in enumerate(results):\r\n    try:\r\n        comp0.append(np.sum(np.load('npy_{}.npy'.format(T[i]))) - np.sum(r))\r\n        comp1.append(np.load('npy_{}.npy'.format(T[i])) - r)\r\n    except:\r\n        np.save('npy_{}.npy'.format(T[i]), r)\r\nfor i in range(len(comp0)):\r\n    print(T[i])\r\n    print(comp0[i])\r\n    print(comp1[i])\r\n    print('\\n')\r\n```\r\nRun the code several times, you will see that the product will vary slightly. like this:\r\n```\r\ndense\r\n0.0\r\n[[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\r\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\r\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\r\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\r\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\r\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\r\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\r\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\r\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\r\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]]\r\n\r\n\r\nmat\r\n0.0\r\n[[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\r\n  0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\r\n  0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\r\n  0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\r\n  0. 0. 0. 0.]\r\n...\r\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\r\n  0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\r\n  0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\r\n  0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\r\n  0. 0. 0. 0.]]\r\n\r\n\r\nprod\r\n0.0\r\n[[ 0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   2.3841858e-07 -4.7683716e-07  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n  -4.7683716e-07  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   2.3841858e-07  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  4.7683716e-07  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00 -2.3841858e-07\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  4.7683716e-07  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  2.3841858e-07  2.3841858e-07  0.0000000e+00\r\n   0.0000000e+00  2.3841858e-07  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  2.3841858e-07\r\n  -2.3841858e-07  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n  -2.3841858e-07  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00 -2.3841858e-07  0.0000000e+00\r\n  -2.3841858e-07  4.7683716e-07  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00 -2.3841858e-07  2.3841858e-07  0.0000000e+00\r\n   2.3841858e-07  0.0000000e+00  4.7683716e-07  2.3841858e-07\r\n   0.0000000e+00  4.7683716e-07  2.3841858e-07  4.7683716e-07\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  2.3841858e-07\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00]\r\n [ 0.0000000e+00  0.0000000e+00  0.0000000e+00  2.3841858e-07\r\n   2.3841858e-07  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  2.3841858e-07  0.0000000e+00\r\n   0.0000000e+00 -2.3841858e-07  2.3841858e-07  0.0000000e+00\r\n   0.0000000e+00 -2.3841858e-07  0.0000000e+00 -2.3841858e-07\r\n   0.0000000e+00  2.3841858e-07  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00 -2.3841858e-07\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  4.7683716e-07\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  2.3841858e-07  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00 -2.3841858e-07  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00 -4.7683716e-07  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  2.3841858e-07]\r\n [ 0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00\r\n   0.0000000e+00  0.0000000e+00  0.0000000e+00  0.0000000e+00]\r\n...\r\n]\r\n```\r\nThis only happens on GPU with float32. It should be a bug I guess.\r\n"}