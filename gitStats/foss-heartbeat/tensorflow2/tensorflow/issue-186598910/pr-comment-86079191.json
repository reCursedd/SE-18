{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/86079191", "pull_request_review_id": 6754677, "id": 86079191, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2MDc5MTkx", "diff_hunk": "@@ -119,4 +119,34 @@ class ReadFileOp : public OpKernel {\n \n REGISTER_KERNEL_BUILDER(Name(\"ReadFile\").Device(DEVICE_CPU), ReadFileOp);\n \n+class WriteFileOp : public OpKernel {\n+  public:\n+    using OpKernel::OpKernel;\n+    void Compute(OpKernelContext* context) override {\n+\t    const Tensor* filename_input;\n+\t    const Tensor* contents_input;\n+\t    Tensor* output = nullptr;\n+\t    OP_REQUIRES_OK(context, context->input(\"filename\", &filename_input));\n+\t    OP_REQUIRES_OK(context, context->input(\"contents\", &contents_input));\n+\t    OP_REQUIRES(context, TensorShapeUtils::IsScalar(filename_input->shape()),\n+\t\t\t    errors::InvalidArgument(\n+\t\t\t\t    \"Input filename tensor must be scalar, but had shape: \",\n+\t\t\t\t    filename_input->shape().DebugString()));\n+\t    OP_REQUIRES(context, TensorShapeUtils::IsScalar(contents_input->shape()),\n+\t\t\t    errors::InvalidArgument(\n+\t\t\t\t    \"Contents tensor must be scalar, but had shape: \",\n+\t\t\t\t    contents_input->shape().DebugString()));\n+\t    OP_REQUIRES_OK(context, context->allocate_output(\"output\", TensorShape({}),\n+\t\t\t\t    &output));\n+\t    if(WriteStringToFile(context->env(),\n+\t\t\t\t    filename_input->scalar<string>()(),\n+\t\t\t\t    contents_input->scalar<string>()()).ok()) {\n+\t    \toutput->scalar<int>()(0) = 0;\n+\t    } else {\n+\t    \toutput->scalar<int>()(0) = -1;", "path": "tensorflow/core/kernels/whole_file_read_ops.cc", "position": null, "original_position": 28, "commit_id": "118a13c1166ca6a9e5ba7181eb07ce2565de35b9", "original_commit_id": "31cc10d14fcd097ed9cefb7580b6f01a646823f0", "user": {"login": "concretevitamin", "id": 592670, "node_id": "MDQ6VXNlcjU5MjY3MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/592670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/concretevitamin", "html_url": "https://github.com/concretevitamin", "followers_url": "https://api.github.com/users/concretevitamin/followers", "following_url": "https://api.github.com/users/concretevitamin/following{/other_user}", "gists_url": "https://api.github.com/users/concretevitamin/gists{/gist_id}", "starred_url": "https://api.github.com/users/concretevitamin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/concretevitamin/subscriptions", "organizations_url": "https://api.github.com/users/concretevitamin/orgs", "repos_url": "https://api.github.com/users/concretevitamin/repos", "events_url": "https://api.github.com/users/concretevitamin/events{/privacy}", "received_events_url": "https://api.github.com/users/concretevitamin/received_events", "type": "User", "site_admin": false}, "body": "On second thought, I think it'll be less burden on user of this Op just throw an error if the write is unsuccessful.  (Otherwise every responsible caller of this Op need to do something like `tf.assert_equal(tf.write_file(...), 0)`.)\n\nLet's get rid of the output, and do `OP_REQUIRES_OK(context, WriteStringToFile(...))` directly here (when it fails, a nice stack trace will be printed out). \n", "created_at": "2016-11-02T06:22:36Z", "updated_at": "2016-11-03T04:02:54Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/5330#discussion_r86079191", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/5330", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/86079191"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/5330#discussion_r86079191"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/5330"}}, "body_html": "<p>On second thought, I think it'll be less burden on user of this Op just throw an error if the write is unsuccessful.  (Otherwise every responsible caller of this Op need to do something like <code>tf.assert_equal(tf.write_file(...), 0)</code>.)</p>\n<p>Let's get rid of the output, and do <code>OP_REQUIRES_OK(context, WriteStringToFile(...))</code> directly here (when it fails, a nice stack trace will be printed out).</p>", "body_text": "On second thought, I think it'll be less burden on user of this Op just throw an error if the write is unsuccessful.  (Otherwise every responsible caller of this Op need to do something like tf.assert_equal(tf.write_file(...), 0).)\nLet's get rid of the output, and do OP_REQUIRES_OK(context, WriteStringToFile(...)) directly here (when it fails, a nice stack trace will be printed out)."}