{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22775", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22775/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22775/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22775/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/22775", "id": 367329517, "node_id": "MDU6SXNzdWUzNjczMjk1MTc=", "number": 22775, "title": "Keras cannot get gradient for using only one output from multi-outputs in another model", "user": {"login": "ybsave", "id": 26417094, "node_id": "MDQ6VXNlcjI2NDE3MDk0", "avatar_url": "https://avatars0.githubusercontent.com/u/26417094?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ybsave", "html_url": "https://github.com/ybsave", "followers_url": "https://api.github.com/users/ybsave/followers", "following_url": "https://api.github.com/users/ybsave/following{/other_user}", "gists_url": "https://api.github.com/users/ybsave/gists{/gist_id}", "starred_url": "https://api.github.com/users/ybsave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ybsave/subscriptions", "organizations_url": "https://api.github.com/users/ybsave/orgs", "repos_url": "https://api.github.com/users/ybsave/repos", "events_url": "https://api.github.com/users/ybsave/events{/privacy}", "received_events_url": "https://api.github.com/users/ybsave/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}, {"login": "harshini-gadige", "id": 42781361, "node_id": "MDQ6VXNlcjQyNzgxMzYx", "avatar_url": "https://avatars1.githubusercontent.com/u/42781361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harshini-gadige", "html_url": "https://github.com/harshini-gadige", "followers_url": "https://api.github.com/users/harshini-gadige/followers", "following_url": "https://api.github.com/users/harshini-gadige/following{/other_user}", "gists_url": "https://api.github.com/users/harshini-gadige/gists{/gist_id}", "starred_url": "https://api.github.com/users/harshini-gadige/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harshini-gadige/subscriptions", "organizations_url": "https://api.github.com/users/harshini-gadige/orgs", "repos_url": "https://api.github.com/users/harshini-gadige/repos", "events_url": "https://api.github.com/users/harshini-gadige/events{/privacy}", "received_events_url": "https://api.github.com/users/harshini-gadige/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-10-05T18:57:04Z", "updated_at": "2018-10-15T19:35:35Z", "closed_at": "2018-10-15T19:35:35Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Y</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Windows 10</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>: N/A</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:  binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.11.0-dev20180823</li>\n<li><strong>Python version</strong>: 3.6</li>\n<li><strong>Bazel version (if compiling from source)</strong>: N/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: N/A</li>\n<li><strong>CUDA/cuDNN version</strong>: 9.0 / 7</li>\n<li><strong>GPU model and memory</strong>: Quadro M4000</li>\n<li><strong>Exact command to reproduce</strong>: N/A</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I build one keras model with two outputs. I want to build another model that is exactly just a part of the existing model by using only one output. However, it shows the error message as</p>\n<pre><code>ValueError: An operation has `None` for gradient. Please make sure that all of your ops have a gradient defined (i.e. are differentiable). Common ops without gradient: K.argmax, K.round, K.eval.\n</code></pre>\n<h3>Source code / logs</h3>\n<p>Example codes are shown below</p>\n<pre><code>def get_test0_net():\n  data_input = keras.Input(shape=(4, 4, 3))\n  x0 = Conv2D(3, 3, padding='same')(data_input)\n  x1 = Conv2D(3, 3, padding='same')(data_input)\n  return keras.Model(inputs=data_input, outputs=[x0, x1])\n  \ndef test0():\n  model = get_test0_net()\n\n  batch_in = np.ones((1,4,4,3))\n  batch_out = [np.zeros((1,4,4,3)), np.zeros((1,4,4,3))]\n\n    # the original model can train without problem\n#  model.compile(loss='mse', optimizer='adam')\n#  model.train_on_batch(batch_in, batch_out)\n  \n  data_input = keras.Input(shape=(4, 4, 3))\n  out = model(data_input)[0]\n  new_model = keras.Model(data_input, out)\n  new_model.compile(loss='mse', optimizer='adam')\n  new_model.train_on_batch(batch_in, batch_out[0])\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Y\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A\nTensorFlow installed from (source or binary):  binary\nTensorFlow version (use command below): 1.11.0-dev20180823\nPython version: 3.6\nBazel version (if compiling from source): N/A\nGCC/Compiler version (if compiling from source): N/A\nCUDA/cuDNN version: 9.0 / 7\nGPU model and memory: Quadro M4000\nExact command to reproduce: N/A\n\nDescribe the problem\nI build one keras model with two outputs. I want to build another model that is exactly just a part of the existing model by using only one output. However, it shows the error message as\nValueError: An operation has `None` for gradient. Please make sure that all of your ops have a gradient defined (i.e. are differentiable). Common ops without gradient: K.argmax, K.round, K.eval.\n\nSource code / logs\nExample codes are shown below\ndef get_test0_net():\n  data_input = keras.Input(shape=(4, 4, 3))\n  x0 = Conv2D(3, 3, padding='same')(data_input)\n  x1 = Conv2D(3, 3, padding='same')(data_input)\n  return keras.Model(inputs=data_input, outputs=[x0, x1])\n  \ndef test0():\n  model = get_test0_net()\n\n  batch_in = np.ones((1,4,4,3))\n  batch_out = [np.zeros((1,4,4,3)), np.zeros((1,4,4,3))]\n\n    # the original model can train without problem\n#  model.compile(loss='mse', optimizer='adam')\n#  model.train_on_batch(batch_in, batch_out)\n  \n  data_input = keras.Input(shape=(4, 4, 3))\n  out = model(data_input)[0]\n  new_model = keras.Model(data_input, out)\n  new_model.compile(loss='mse', optimizer='adam')\n  new_model.train_on_batch(batch_in, batch_out[0])", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Y\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 10\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**: N/A\r\n- **TensorFlow installed from (source or binary)**:  binary\r\n- **TensorFlow version (use command below)**: 1.11.0-dev20180823\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: 9.0 / 7\r\n- **GPU model and memory**: Quadro M4000\r\n- **Exact command to reproduce**: N/A\r\n\r\n### Describe the problem\r\nI build one keras model with two outputs. I want to build another model that is exactly just a part of the existing model by using only one output. However, it shows the error message as\r\n\r\n    ValueError: An operation has `None` for gradient. Please make sure that all of your ops have a gradient defined (i.e. are differentiable). Common ops without gradient: K.argmax, K.round, K.eval.\r\n\r\n### Source code / logs\r\nExample codes are shown below\r\n\r\n\tdef get_test0_net():\r\n\t  data_input = keras.Input(shape=(4, 4, 3))\r\n\t  x0 = Conv2D(3, 3, padding='same')(data_input)\r\n\t  x1 = Conv2D(3, 3, padding='same')(data_input)\r\n\t  return keras.Model(inputs=data_input, outputs=[x0, x1])\r\n\t  \r\n\tdef test0():\r\n\t  model = get_test0_net()\r\n\r\n\t  batch_in = np.ones((1,4,4,3))\r\n\t  batch_out = [np.zeros((1,4,4,3)), np.zeros((1,4,4,3))]\r\n\r\n        # the original model can train without problem\r\n\t#  model.compile(loss='mse', optimizer='adam')\r\n\t#  model.train_on_batch(batch_in, batch_out)\r\n\t  \r\n\t  data_input = keras.Input(shape=(4, 4, 3))\r\n\t  out = model(data_input)[0]\r\n\t  new_model = keras.Model(data_input, out)\r\n\t  new_model.compile(loss='mse', optimizer='adam')\r\n\t  new_model.train_on_batch(batch_in, batch_out[0])"}