{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15157", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15157/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15157/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15157/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15157", "id": 279777914, "node_id": "MDU6SXNzdWUyNzk3Nzc5MTQ=", "number": 15157, "title": "Feature: GANEstimator allow passing of namedtuples", "user": {"login": "sleighsoft", "id": 9438971, "node_id": "MDQ6VXNlcjk0Mzg5NzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/9438971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sleighsoft", "html_url": "https://github.com/sleighsoft", "followers_url": "https://api.github.com/users/sleighsoft/followers", "following_url": "https://api.github.com/users/sleighsoft/following{/other_user}", "gists_url": "https://api.github.com/users/sleighsoft/gists{/gist_id}", "starred_url": "https://api.github.com/users/sleighsoft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sleighsoft/subscriptions", "organizations_url": "https://api.github.com/users/sleighsoft/orgs", "repos_url": "https://api.github.com/users/sleighsoft/repos", "events_url": "https://api.github.com/users/sleighsoft/events{/privacy}", "received_events_url": "https://api.github.com/users/sleighsoft/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "joel-shor", "id": 6020988, "node_id": "MDQ6VXNlcjYwMjA5ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/6020988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joel-shor", "html_url": "https://github.com/joel-shor", "followers_url": "https://api.github.com/users/joel-shor/followers", "following_url": "https://api.github.com/users/joel-shor/following{/other_user}", "gists_url": "https://api.github.com/users/joel-shor/gists{/gist_id}", "starred_url": "https://api.github.com/users/joel-shor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joel-shor/subscriptions", "organizations_url": "https://api.github.com/users/joel-shor/orgs", "repos_url": "https://api.github.com/users/joel-shor/repos", "events_url": "https://api.github.com/users/joel-shor/events{/privacy}", "received_events_url": "https://api.github.com/users/joel-shor/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "joel-shor", "id": 6020988, "node_id": "MDQ6VXNlcjYwMjA5ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/6020988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joel-shor", "html_url": "https://github.com/joel-shor", "followers_url": "https://api.github.com/users/joel-shor/followers", "following_url": "https://api.github.com/users/joel-shor/following{/other_user}", "gists_url": "https://api.github.com/users/joel-shor/gists{/gist_id}", "starred_url": "https://api.github.com/users/joel-shor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joel-shor/subscriptions", "organizations_url": "https://api.github.com/users/joel-shor/orgs", "repos_url": "https://api.github.com/users/joel-shor/repos", "events_url": "https://api.github.com/users/joel-shor/events{/privacy}", "received_events_url": "https://api.github.com/users/joel-shor/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2017-12-06T14:44:17Z", "updated_at": "2017-12-08T18:15:34Z", "closed_at": "2017-12-08T18:15:24Z", "author_association": "CONTRIBUTOR", "body_html": "<p>In the current <code>GANEstimator</code> implementation in <code>train.py</code> <code>gan_model(..)</code> both <code>real_data</code> as well as <code>generator_inputs</code> is converted to tensors with either <code>_convert_tensor_or_l_or_d</code> or <code>ops.convert_to_tensor</code>. This prevents the user from using own data structures like <code>namedtuples</code> to pass information between the <code>generator</code> and <code>discriminator</code>.</p>\n<p>In the current implementation when passing a <code>namedtuple</code> the result will be a <code>list</code> with all name information being lost.</p>\n<p>I propose to either extend the tensor conversion to exclude namedtuples from them or to remove them entirely.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6020988\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/joel-shor\">@joel-shor</a> Do you think that is a good idea? I am currently passing logits as well as sample_id from a dynamic_decoding around and I would like to keep the meaning of these across loss_fn and discriminator_fn.</p>\n<ol>\n<li>I could remove the conversions entirely. This would introduce breaking changes.</li>\n<li>I could exclude namedtuples from the conversion.</li>\n<li>Idk yet??</li>\n</ol>\n<p>I would create a PR for any of them if we find a suitable solution.</p>", "body_text": "In the current GANEstimator implementation in train.py gan_model(..) both real_data as well as generator_inputs is converted to tensors with either _convert_tensor_or_l_or_d or ops.convert_to_tensor. This prevents the user from using own data structures like namedtuples to pass information between the generator and discriminator.\nIn the current implementation when passing a namedtuple the result will be a list with all name information being lost.\nI propose to either extend the tensor conversion to exclude namedtuples from them or to remove them entirely.\n@joel-shor Do you think that is a good idea? I am currently passing logits as well as sample_id from a dynamic_decoding around and I would like to keep the meaning of these across loss_fn and discriminator_fn.\n\nI could remove the conversions entirely. This would introduce breaking changes.\nI could exclude namedtuples from the conversion.\nIdk yet??\n\nI would create a PR for any of them if we find a suitable solution.", "body": "In the current `GANEstimator` implementation in `train.py` `gan_model(..)` both `real_data` as well as `generator_inputs` is converted to tensors with either `_convert_tensor_or_l_or_d` or `ops.convert_to_tensor`. This prevents the user from using own data structures like `namedtuples` to pass information between the `generator` and `discriminator`.\r\n\r\nIn the current implementation when passing a `namedtuple` the result will be a `list` with all name information being lost.\r\n\r\nI propose to either extend the tensor conversion to exclude namedtuples from them or to remove them entirely.\r\n\r\n@joel-shor Do you think that is a good idea? I am currently passing logits as well as sample_id from a dynamic_decoding around and I would like to keep the meaning of these across loss_fn and discriminator_fn.\r\n\r\n1. I could remove the conversions entirely. This would introduce breaking changes.\r\n2. I could exclude namedtuples from the conversion.\r\n3. Idk yet??\r\n\r\nI would create a PR for any of them if we find a suitable solution. "}