{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23128", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23128/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23128/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23128/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/23128", "id": 372207644, "node_id": "MDU6SXNzdWUzNzIyMDc2NDQ=", "number": 23128, "title": "Difference in higher order tf.gradients()", "user": {"login": "GJBoth", "id": 32122273, "node_id": "MDQ6VXNlcjMyMTIyMjcz", "avatar_url": "https://avatars1.githubusercontent.com/u/32122273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GJBoth", "html_url": "https://github.com/GJBoth", "followers_url": "https://api.github.com/users/GJBoth/followers", "following_url": "https://api.github.com/users/GJBoth/following{/other_user}", "gists_url": "https://api.github.com/users/GJBoth/gists{/gist_id}", "starred_url": "https://api.github.com/users/GJBoth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GJBoth/subscriptions", "organizations_url": "https://api.github.com/users/GJBoth/orgs", "repos_url": "https://api.github.com/users/GJBoth/repos", "events_url": "https://api.github.com/users/GJBoth/events{/privacy}", "received_events_url": "https://api.github.com/users/GJBoth/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097547147, "node_id": "MDU6TGFiZWwxMDk3NTQ3MTQ3", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:ops", "name": "comp:ops", "color": "0052cc", "default": false}, {"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "ymodak", "id": 42785357, "node_id": "MDQ6VXNlcjQyNzg1MzU3", "avatar_url": "https://avatars1.githubusercontent.com/u/42785357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ymodak", "html_url": "https://github.com/ymodak", "followers_url": "https://api.github.com/users/ymodak/followers", "following_url": "https://api.github.com/users/ymodak/following{/other_user}", "gists_url": "https://api.github.com/users/ymodak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ymodak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ymodak/subscriptions", "organizations_url": "https://api.github.com/users/ymodak/orgs", "repos_url": "https://api.github.com/users/ymodak/repos", "events_url": "https://api.github.com/users/ymodak/events{/privacy}", "received_events_url": "https://api.github.com/users/ymodak/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ymodak", "id": 42785357, "node_id": "MDQ6VXNlcjQyNzg1MzU3", "avatar_url": "https://avatars1.githubusercontent.com/u/42785357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ymodak", "html_url": "https://github.com/ymodak", "followers_url": "https://api.github.com/users/ymodak/followers", "following_url": "https://api.github.com/users/ymodak/following{/other_user}", "gists_url": "https://api.github.com/users/ymodak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ymodak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ymodak/subscriptions", "organizations_url": "https://api.github.com/users/ymodak/orgs", "repos_url": "https://api.github.com/users/ymodak/repos", "events_url": "https://api.github.com/users/ymodak/events{/privacy}", "received_events_url": "https://api.github.com/users/ymodak/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-10-20T12:44:00Z", "updated_at": "2018-11-06T18:39:14Z", "closed_at": "2018-11-06T18:39:14Z", "author_association": "NONE", "body_html": "<p><strong>System information</strong></p>\n<ul>\n<li>OS: OS X 10.13.6</li>\n<li>TensorFlow installed from (source or binary): Anaconda</li>\n<li>TensorFlow version (use command below): 1.11</li>\n<li>Python version: 3.6.6</li>\n<li>Have I written custom code: No</li>\n<li>Bazel version: N/A</li>\n<li>CUDA/cuDNN version: N/A</li>\n<li>GPU model and memory: N/A</li>\n<li>Exact command to reproduce: See below.</li>\n<li>Mobile device: N/A</li>\n</ul>\n<p><strong>Describe the current behavior</strong><br>\nI have a cost function based on the derivative of the output of the network c w.r.t to the inputs of the network x and t.  I wish to replace x and t by one input tensor X=[x,t]. To test my code, I have the written the following function which returns the gradients:</p>\n<p>`def cost_diffusion_test(x, t, X ,c):<br>\nc_t = tf.gradients(c, t)[0]<br>\nc_x = tf.gradients(c, x)[0]<br>\nc_xx = tf.gradients(c_x, x)[0]</p>\n<pre><code>dc = tf.gradients(c, X)[0]\nd2c = tf.gradients(dc[:, 0:1], X)[0]\n\nreturn c_t, c_x, c_xx, dc, d2c`\n</code></pre>\n<p>c_t and dc[:,1:2], c_x and dc[:,0:1] are the same as expected through np.array_equal(). c_xx and d2c[:,0:1] are not. When I study the difference d2c[:,0:1]-c_xx the I observe many zeros and a few terms on the order of e-08. Intriguingly, the maximum and minimum difference is 5.9604645e-08. If this would be a tensorflow-&gt; numpy error, why is the first order derivative correct?</p>\n<p><strong>Describe the expected behavior</strong><br>\nnp.array_equal(d2c[:,0:1], c_xx)==True</p>", "body_text": "System information\n\nOS: OS X 10.13.6\nTensorFlow installed from (source or binary): Anaconda\nTensorFlow version (use command below): 1.11\nPython version: 3.6.6\nHave I written custom code: No\nBazel version: N/A\nCUDA/cuDNN version: N/A\nGPU model and memory: N/A\nExact command to reproduce: See below.\nMobile device: N/A\n\nDescribe the current behavior\nI have a cost function based on the derivative of the output of the network c w.r.t to the inputs of the network x and t.  I wish to replace x and t by one input tensor X=[x,t]. To test my code, I have the written the following function which returns the gradients:\n`def cost_diffusion_test(x, t, X ,c):\nc_t = tf.gradients(c, t)[0]\nc_x = tf.gradients(c, x)[0]\nc_xx = tf.gradients(c_x, x)[0]\ndc = tf.gradients(c, X)[0]\nd2c = tf.gradients(dc[:, 0:1], X)[0]\n\nreturn c_t, c_x, c_xx, dc, d2c`\n\nc_t and dc[:,1:2], c_x and dc[:,0:1] are the same as expected through np.array_equal(). c_xx and d2c[:,0:1] are not. When I study the difference d2c[:,0:1]-c_xx the I observe many zeros and a few terms on the order of e-08. Intriguingly, the maximum and minimum difference is 5.9604645e-08. If this would be a tensorflow-> numpy error, why is the first order derivative correct?\nDescribe the expected behavior\nnp.array_equal(d2c[:,0:1], c_xx)==True", "body": "**System information**\r\n\r\n- OS: OS X 10.13.6\r\n- TensorFlow installed from (source or binary): Anaconda\r\n- TensorFlow version (use command below): 1.11\r\n- Python version: 3.6.6\r\n- Have I written custom code: No\r\n- Bazel version: N/A\r\n- CUDA/cuDNN version: N/A\r\n- GPU model and memory: N/A\r\n- Exact command to reproduce: See below.\r\n- Mobile device: N/A\r\n\r\n**Describe the current behavior**\r\nI have a cost function based on the derivative of the output of the network c w.r.t to the inputs of the network x and t.  I wish to replace x and t by one input tensor X=[x,t]. To test my code, I have the written the following function which returns the gradients:\r\n\r\n`def cost_diffusion_test(x, t, X ,c):\r\n    c_t = tf.gradients(c, t)[0]\r\n    c_x = tf.gradients(c, x)[0]\r\n    c_xx = tf.gradients(c_x, x)[0]\r\n\r\n    dc = tf.gradients(c, X)[0]\r\n    d2c = tf.gradients(dc[:, 0:1], X)[0]\r\n\r\n    return c_t, c_x, c_xx, dc, d2c`\r\n\r\nc_t and dc[:,1:2], c_x and dc[:,0:1] are the same as expected through np.array_equal(). c_xx and d2c[:,0:1] are not. When I study the difference d2c[:,0:1]-c_xx the I observe many zeros and a few terms on the order of e-08. Intriguingly, the maximum and minimum difference is 5.9604645e-08. If this would be a tensorflow-> numpy error, why is the first order derivative correct?\r\n\r\n**Describe the expected behavior**\r\nnp.array_equal(d2c[:,0:1], c_xx)==True\r\n"}