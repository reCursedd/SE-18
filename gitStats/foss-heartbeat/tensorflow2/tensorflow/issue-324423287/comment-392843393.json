{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/392843393", "html_url": "https://github.com/tensorflow/tensorflow/issues/19385#issuecomment-392843393", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19385", "id": 392843393, "node_id": "MDEyOklzc3VlQ29tbWVudDM5Mjg0MzM5Mw==", "user": {"login": "allenlavoie", "id": 3731025, "node_id": "MDQ6VXNlcjM3MzEwMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3731025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/allenlavoie", "html_url": "https://github.com/allenlavoie", "followers_url": "https://api.github.com/users/allenlavoie/followers", "following_url": "https://api.github.com/users/allenlavoie/following{/other_user}", "gists_url": "https://api.github.com/users/allenlavoie/gists{/gist_id}", "starred_url": "https://api.github.com/users/allenlavoie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/allenlavoie/subscriptions", "organizations_url": "https://api.github.com/users/allenlavoie/orgs", "repos_url": "https://api.github.com/users/allenlavoie/repos", "events_url": "https://api.github.com/users/allenlavoie/events{/privacy}", "received_events_url": "https://api.github.com/users/allenlavoie/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-29T16:34:37Z", "updated_at": "2018-05-29T16:34:37Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5061\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/alextp\">@alextp</a> want to take a look (at the GradientTape issue; the original leak has been plugged)?</p>\n<p>FWIW it doesn't look like a PyObject leak (or at least the test decorators don't see one), and I can reproduce it without a Model (nightly builds, Python 2.7 and 3.6 rather than just 3 this time):</p>\n<pre><code>import tensorflow as tf\ntf.enable_eager_execution()\n\nlayer = tf.keras.layers.Dense(5)\ninputs = tf.zeros([32, 100], tf.float32)\n\nfor i in range(1000000):\n  with tf.GradientTape() as tape:\n    layer(inputs)\n</code></pre>", "body_text": "@alextp want to take a look (at the GradientTape issue; the original leak has been plugged)?\nFWIW it doesn't look like a PyObject leak (or at least the test decorators don't see one), and I can reproduce it without a Model (nightly builds, Python 2.7 and 3.6 rather than just 3 this time):\nimport tensorflow as tf\ntf.enable_eager_execution()\n\nlayer = tf.keras.layers.Dense(5)\ninputs = tf.zeros([32, 100], tf.float32)\n\nfor i in range(1000000):\n  with tf.GradientTape() as tape:\n    layer(inputs)", "body": "@alextp want to take a look (at the GradientTape issue; the original leak has been plugged)?\r\n\r\nFWIW it doesn't look like a PyObject leak (or at least the test decorators don't see one), and I can reproduce it without a Model (nightly builds, Python 2.7 and 3.6 rather than just 3 this time):\r\n\r\n```\r\nimport tensorflow as tf\r\ntf.enable_eager_execution()\r\n\r\nlayer = tf.keras.layers.Dense(5)\r\ninputs = tf.zeros([32, 100], tf.float32)\r\n\r\nfor i in range(1000000):\r\n  with tf.GradientTape() as tape:\r\n    layer(inputs)\r\n```\r\n"}