{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/403402412", "html_url": "https://github.com/tensorflow/tensorflow/issues/20588#issuecomment-403402412", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20588", "id": 403402412, "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzQwMjQxMg==", "user": {"login": "Bocharick", "id": 6680697, "node_id": "MDQ6VXNlcjY2ODA2OTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/6680697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bocharick", "html_url": "https://github.com/Bocharick", "followers_url": "https://api.github.com/users/Bocharick/followers", "following_url": "https://api.github.com/users/Bocharick/following{/other_user}", "gists_url": "https://api.github.com/users/Bocharick/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bocharick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bocharick/subscriptions", "organizations_url": "https://api.github.com/users/Bocharick/orgs", "repos_url": "https://api.github.com/users/Bocharick/repos", "events_url": "https://api.github.com/users/Bocharick/events{/privacy}", "received_events_url": "https://api.github.com/users/Bocharick/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-09T08:33:09Z", "updated_at": "2018-07-09T08:33:09Z", "author_association": "NONE", "body_html": "<p>I've made some tests on my multi gpu machine. and found some strange (for me) behavior.</p>\n<ol>\n<li>If i set</li>\n</ol>\n<blockquote>\n<p>distribution = tf.contrib.distribute.MirroredStrategy([\"/device:GPU:0\"])</p>\n</blockquote>\n<p>OR</p>\n<blockquote>\n<p>distribution = tf.contrib.distribute.MirroredStrategy(num_gpus=1)</p>\n</blockquote>\n<p>It has an error, which I had earlier.</p>\n<ol start=\"2\">\n<li>If i set this parameter as &gt;=2 it works fine. <strong>BUT!</strong> It works on my single-gpu machine with this parameter, but it lost half of data. If I set num_gpus=4, i lost 3/4 of my data on my single-gpu machine.<br>\nI've tested it on 4-gpu machine, set this parameter as 40. So it work, but 36/40 of data was never saw by model.<br>\nI hope this is unexpected behavior.<br>\nAnd why it's not working with num_gpus==1 (It's both not working on single-gpu machine and on multi-gpu machine)?</li>\n</ol>", "body_text": "I've made some tests on my multi gpu machine. and found some strange (for me) behavior.\n\nIf i set\n\n\ndistribution = tf.contrib.distribute.MirroredStrategy([\"/device:GPU:0\"])\n\nOR\n\ndistribution = tf.contrib.distribute.MirroredStrategy(num_gpus=1)\n\nIt has an error, which I had earlier.\n\nIf i set this parameter as >=2 it works fine. BUT! It works on my single-gpu machine with this parameter, but it lost half of data. If I set num_gpus=4, i lost 3/4 of my data on my single-gpu machine.\nI've tested it on 4-gpu machine, set this parameter as 40. So it work, but 36/40 of data was never saw by model.\nI hope this is unexpected behavior.\nAnd why it's not working with num_gpus==1 (It's both not working on single-gpu machine and on multi-gpu machine)?", "body": "I've made some tests on my multi gpu machine. and found some strange (for me) behavior.\r\n1) If i set \r\n\r\n> distribution = tf.contrib.distribute.MirroredStrategy([\"/device:GPU:0\"])\r\n\r\nOR\r\n\r\n> distribution = tf.contrib.distribute.MirroredStrategy(num_gpus=1)\r\n\r\nIt has an error, which I had earlier.\r\n\r\n2) If i set this parameter as >=2 it works fine. **BUT!** It works on my single-gpu machine with this parameter, but it lost half of data. If I set num_gpus=4, i lost 3/4 of my data on my single-gpu machine.\r\nI've tested it on 4-gpu machine, set this parameter as 40. So it work, but 36/40 of data was never saw by model.\r\nI hope this is unexpected behavior.\r\nAnd why it's not working with num_gpus==1 (It's both not working on single-gpu machine and on multi-gpu machine)?"}