{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/132810848", "pull_request_review_id": 55937007, "id": 132810848, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMjgxMDg0OA==", "diff_hunk": "@@ -2386,6 +2387,88 @@ def where(condition, x=None, y=None, name=None):\n     raise ValueError(\"x and y must both be non-None or both be None.\")\n \n \n+# pylint: disable=redefined-builtin,protected-access\n+def reshape(tensor, shape, name=None):\n+  \"\"\"Reshapes a tensor.\n+\n+  Given `tensor`, this operation returns a tensor that has the same values\n+  as `tensor` with shape `shape`.\n+\n+  If one component of `shape` is the special value -1, the size of that dimension\n+  is computed so that the total size remains constant.  In particular, a `shape`\n+  of `[-1]` flattens into 1-D.  At most one component of `shape` can be -1.\n+\n+  If `shape` is 1-D or higher, then the operation returns a tensor with shape\n+  `shape` filled with the values of `tensor`. In this case, the number of elements\n+  implied by `shape` must be the same as the number of elements in `tensor`.\n+\n+  For example:\n+\n+  ```\n+  # tensor 't' is [1, 2, 3, 4, 5, 6, 7, 8, 9]\n+  # tensor 't' has shape [9]\n+  reshape(t, [3, 3]) ==> [[1, 2, 3],\n+                          [4, 5, 6],\n+                          [7, 8, 9]]\n+\n+  # tensor 't' is [[[1, 1], [2, 2]],\n+  #                [[3, 3], [4, 4]]]\n+  # tensor 't' has shape [2, 2, 2]\n+  reshape(t, [2, 4]) ==> [[1, 1, 2, 2],\n+                          [3, 3, 4, 4]]\n+\n+  # tensor 't' is [[[1, 1, 1],\n+  #                 [2, 2, 2]],\n+  #                [[3, 3, 3],\n+  #                 [4, 4, 4]],\n+  #                [[5, 5, 5],\n+  #                 [6, 6, 6]]]\n+  # tensor 't' has shape [3, 2, 3]\n+  # pass '[-1]' to flatten 't'\n+  reshape(t, [-1]) ==> [1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 6]\n+\n+  # Dimension can be used\n+  reshape(t, [3, tf.Dimension(3)]) ==> [[1, 2, 3],\n+                                        [4, 5, 6],\n+                                        [7, 8, 9]]\n+\n+  # -1 can also be used to infer the shape\n+\n+  # -1 is inferred to be 9:\n+  reshape(t, [2, -1]) ==> [[1, 1, 1, 2, 2, 2, 3, 3, 3],\n+                           [4, 4, 4, 5, 5, 5, 6, 6, 6]]\n+  # -1 is inferred to be 2:\n+  reshape(t, [-1, 9]) ==> [[1, 1, 1, 2, 2, 2, 3, 3, 3],\n+                           [4, 4, 4, 5, 5, 5, 6, 6, 6]]\n+  # -1 is inferred to be 3:\n+  reshape(t, [ 2, -1, 3]) ==> [[[1, 1, 1],\n+                                [2, 2, 2],\n+                                [3, 3, 3]],\n+                               [[4, 4, 4],\n+                                [5, 5, 5],\n+                                [6, 6, 6]]]\n+\n+  # tensor 't' is [7]\n+  # shape `[]` reshapes to a scalar\n+  reshape(t, []) ==> 7\n+  ```\n+\n+  Args:\n+    tensor: A `Tensor`.\n+    shape: A `Tensor`. Must be one of the following types: `int32`, `int64`.\n+      Defines the shape of the output tensor.\n+    name: A name for the operation (optional).\n+\n+  Returns:\n+    A `Tensor`. Has the same type as `tensor`.\n+  \"\"\"\n+  if hasattr(shape, \"__len__\") and len(shape) <= 8:", "path": "tensorflow/python/ops/array_ops.py", "position": 87, "original_position": 87, "commit_id": "3a45e877aede713ae0ed4384b2549e596336c028", "original_commit_id": "3a45e877aede713ae0ed4384b2549e596336c028", "user": {"login": "facaiy", "id": 1112263, "node_id": "MDQ6VXNlcjExMTIyNjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1112263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facaiy", "html_url": "https://github.com/facaiy", "followers_url": "https://api.github.com/users/facaiy/followers", "following_url": "https://api.github.com/users/facaiy/following{/other_user}", "gists_url": "https://api.github.com/users/facaiy/gists{/gist_id}", "starred_url": "https://api.github.com/users/facaiy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facaiy/subscriptions", "organizations_url": "https://api.github.com/users/facaiy/orgs", "repos_url": "https://api.github.com/users/facaiy/repos", "events_url": "https://api.github.com/users/facaiy/events{/privacy}", "received_events_url": "https://api.github.com/users/facaiy/received_events", "type": "User", "site_admin": false}, "body": "Should we raise an exception when `len(shape) > 8`?", "created_at": "2017-08-12T06:28:35Z", "updated_at": "2017-08-12T06:28:35Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/12127#discussion_r132810848", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/12127", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/132810848"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/12127#discussion_r132810848"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/12127"}}, "body_html": "<p>Should we raise an exception when <code>len(shape) &gt; 8</code>?</p>", "body_text": "Should we raise an exception when len(shape) > 8?"}