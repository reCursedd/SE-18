{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/438085411", "html_url": "https://github.com/tensorflow/tensorflow/issues/23643#issuecomment-438085411", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23643", "id": 438085411, "node_id": "MDEyOklzc3VlQ29tbWVudDQzODA4NTQxMQ==", "user": {"login": "feihugis", "id": 5057740, "node_id": "MDQ6VXNlcjUwNTc3NDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/5057740?v=4", "gravatar_id": "", "url": "https://api.github.com/users/feihugis", "html_url": "https://github.com/feihugis", "followers_url": "https://api.github.com/users/feihugis/followers", "following_url": "https://api.github.com/users/feihugis/following{/other_user}", "gists_url": "https://api.github.com/users/feihugis/gists{/gist_id}", "starred_url": "https://api.github.com/users/feihugis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/feihugis/subscriptions", "organizations_url": "https://api.github.com/users/feihugis/orgs", "repos_url": "https://api.github.com/users/feihugis/repos", "events_url": "https://api.github.com/users/feihugis/events{/privacy}", "received_events_url": "https://api.github.com/users/feihugis/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-13T00:45:48Z", "updated_at": "2018-11-13T01:06:11Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=20789469\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/iohara\">@iohara</a> It seems to be caused by repeatedly initializing <code>dataset_A</code> when generating <code>dataset_B</code>. The following two solutions may walk around your problem:</p>\n<ol>\n<li>cache <code>dataset_A</code></li>\n</ol>\n<pre><code>import tensorflow as tf\nfrom tensorflow.data import Dataset\ntf.enable_eager_execution()\n\ndataset_A = Dataset.range(10).shuffle(10)\ndataset_A.cache()\ndataset_B = dataset_A.map(lambda x: x * 2)\ndataset = Dataset.zip((dataset_A, dataset_B))\nfor data_A, data_B in dataset:\n    print(data_A, data_B)\n</code></pre>\n<ol start=\"2\">\n<li>set a seed for <code>shuffle()</code></li>\n</ol>\n<pre><code>import tensorflow as tf\nfrom tensorflow.data import Dataset\ntf.enable_eager_execution()\n\ndataset_A = Dataset.range(10).shuffle(10, seed=1234)\ndataset_B = dataset_A.map(lambda x: x * 2)\ndataset = Dataset.zip((dataset_A, dataset_B))\nfor data_A, data_B in dataset:\n    print(data_A, data_B)\n</code></pre>", "body_text": "@iohara It seems to be caused by repeatedly initializing dataset_A when generating dataset_B. The following two solutions may walk around your problem:\n\ncache dataset_A\n\nimport tensorflow as tf\nfrom tensorflow.data import Dataset\ntf.enable_eager_execution()\n\ndataset_A = Dataset.range(10).shuffle(10)\ndataset_A.cache()\ndataset_B = dataset_A.map(lambda x: x * 2)\ndataset = Dataset.zip((dataset_A, dataset_B))\nfor data_A, data_B in dataset:\n    print(data_A, data_B)\n\n\nset a seed for shuffle()\n\nimport tensorflow as tf\nfrom tensorflow.data import Dataset\ntf.enable_eager_execution()\n\ndataset_A = Dataset.range(10).shuffle(10, seed=1234)\ndataset_B = dataset_A.map(lambda x: x * 2)\ndataset = Dataset.zip((dataset_A, dataset_B))\nfor data_A, data_B in dataset:\n    print(data_A, data_B)", "body": "@iohara It seems to be caused by repeatedly initializing `dataset_A` when generating `dataset_B`. The following two solutions may walk around your problem:\r\n\r\n1. cache `dataset_A`\r\n```\r\nimport tensorflow as tf\r\nfrom tensorflow.data import Dataset\r\ntf.enable_eager_execution()\r\n\r\ndataset_A = Dataset.range(10).shuffle(10)\r\ndataset_A.cache()\r\ndataset_B = dataset_A.map(lambda x: x * 2)\r\ndataset = Dataset.zip((dataset_A, dataset_B))\r\nfor data_A, data_B in dataset:\r\n    print(data_A, data_B)\r\n```\r\n\r\n2. set a seed for `shuffle()`  \r\n```\r\nimport tensorflow as tf\r\nfrom tensorflow.data import Dataset\r\ntf.enable_eager_execution()\r\n\r\ndataset_A = Dataset.range(10).shuffle(10, seed=1234)\r\ndataset_B = dataset_A.map(lambda x: x * 2)\r\ndataset = Dataset.zip((dataset_A, dataset_B))\r\nfor data_A, data_B in dataset:\r\n    print(data_A, data_B)\r\n```\r\n\r\n"}