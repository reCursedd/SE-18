{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/279537184", "html_url": "https://github.com/tensorflow/tensorflow/issues/7306#issuecomment-279537184", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7306", "id": 279537184, "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTUzNzE4NA==", "user": {"login": "mawah", "id": 17458994, "node_id": "MDQ6VXNlcjE3NDU4OTk0", "avatar_url": "https://avatars3.githubusercontent.com/u/17458994?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mawah", "html_url": "https://github.com/mawah", "followers_url": "https://api.github.com/users/mawah/followers", "following_url": "https://api.github.com/users/mawah/following{/other_user}", "gists_url": "https://api.github.com/users/mawah/gists{/gist_id}", "starred_url": "https://api.github.com/users/mawah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mawah/subscriptions", "organizations_url": "https://api.github.com/users/mawah/orgs", "repos_url": "https://api.github.com/users/mawah/repos", "events_url": "https://api.github.com/users/mawah/events{/privacy}", "received_events_url": "https://api.github.com/users/mawah/received_events", "type": "User", "site_admin": false}, "created_at": "2017-02-13T22:02:04Z", "updated_at": "2017-02-13T22:02:04Z", "author_association": "NONE", "body_html": "<p>Thanks again <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=192142\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mrry\">@mrry</a>. This certainly cleared up something for me. The following fails (regardless of whether the filepath is relative or absolute, and I did double-check that the file is still present):</p>\n<pre><code>import tensorflow as tf\nwith tf.gfile.Open('labels.txt', 'r') as f:\n    print(type(f))\n    print(f.tell())\n---------------------------------------------------------------------------\n&lt;class 'tensorflow.python.platform.gfile.GFile'&gt;\nAttributeError                            Traceback (most recent call last)\n&lt;ipython-input-6-f2213a8e47cc&gt; in &lt;module&gt;()\n      3 \n      4 with tf.gfile.Open('labels.txt', 'r') as f:\n----&gt; 5     print(f.tell())\n\nC:\\Anaconda\\envs\\py35\\lib\\site-packages\\tensorflow\\python\\lib\\io\\file_io.py in tell(self)\n    140       raise errors.PermissionDeniedError(None, None,\n    141                                          \"File isn't open for reading\")\n--&gt; 142     return self._read_buf.Tell()\n    143 \n    144   def __enter__(self):\n\nAttributeError: 'NoneType' object has no attribute 'Tell'\n</code></pre>\n<p>...which fully explains the origin of the OutOfRangeError on attempting to read from the file. (Unsurprisingly, I got that error again if I simply tried to read from <code>f</code> one character at a time.)</p>\n<p>Any idea why <code>tf.gfile.Open()</code> would return an object of class <code>tensorflow.python.platform.gfile.GFile</code> and <code>_read_check_passed</code> set to true, but still have <code>_read_buf=None</code>?</p>", "body_text": "Thanks again @mrry. This certainly cleared up something for me. The following fails (regardless of whether the filepath is relative or absolute, and I did double-check that the file is still present):\nimport tensorflow as tf\nwith tf.gfile.Open('labels.txt', 'r') as f:\n    print(type(f))\n    print(f.tell())\n---------------------------------------------------------------------------\n<class 'tensorflow.python.platform.gfile.GFile'>\nAttributeError                            Traceback (most recent call last)\n<ipython-input-6-f2213a8e47cc> in <module>()\n      3 \n      4 with tf.gfile.Open('labels.txt', 'r') as f:\n----> 5     print(f.tell())\n\nC:\\Anaconda\\envs\\py35\\lib\\site-packages\\tensorflow\\python\\lib\\io\\file_io.py in tell(self)\n    140       raise errors.PermissionDeniedError(None, None,\n    141                                          \"File isn't open for reading\")\n--> 142     return self._read_buf.Tell()\n    143 \n    144   def __enter__(self):\n\nAttributeError: 'NoneType' object has no attribute 'Tell'\n\n...which fully explains the origin of the OutOfRangeError on attempting to read from the file. (Unsurprisingly, I got that error again if I simply tried to read from f one character at a time.)\nAny idea why tf.gfile.Open() would return an object of class tensorflow.python.platform.gfile.GFile and _read_check_passed set to true, but still have _read_buf=None?", "body": "Thanks again @mrry. This certainly cleared up something for me. The following fails (regardless of whether the filepath is relative or absolute, and I did double-check that the file is still present):\r\n```\r\nimport tensorflow as tf\r\nwith tf.gfile.Open('labels.txt', 'r') as f:\r\n    print(type(f))\r\n    print(f.tell())\r\n---------------------------------------------------------------------------\r\n<class 'tensorflow.python.platform.gfile.GFile'>\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-6-f2213a8e47cc> in <module>()\r\n      3 \r\n      4 with tf.gfile.Open('labels.txt', 'r') as f:\r\n----> 5     print(f.tell())\r\n\r\nC:\\Anaconda\\envs\\py35\\lib\\site-packages\\tensorflow\\python\\lib\\io\\file_io.py in tell(self)\r\n    140       raise errors.PermissionDeniedError(None, None,\r\n    141                                          \"File isn't open for reading\")\r\n--> 142     return self._read_buf.Tell()\r\n    143 \r\n    144   def __enter__(self):\r\n\r\nAttributeError: 'NoneType' object has no attribute 'Tell'\r\n```\r\n...which fully explains the origin of the OutOfRangeError on attempting to read from the file. (Unsurprisingly, I got that error again if I simply tried to read from `f` one character at a time.)\r\n\r\nAny idea why `tf.gfile.Open()` would return an object of class `tensorflow.python.platform.gfile.GFile` and `_read_check_passed` set to true, but still have `_read_buf=None`?"}