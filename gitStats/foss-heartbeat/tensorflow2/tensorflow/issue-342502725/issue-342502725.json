{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20942", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20942/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20942/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20942/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20942", "id": 342502725, "node_id": "MDU6SXNzdWUzNDI1MDI3MjU=", "number": 20942, "title": "tf.contrib.factorization.KMeansClustering training on CPU and not GPU", "user": {"login": "kevintrankt", "id": 17175069, "node_id": "MDQ6VXNlcjE3MTc1MDY5", "avatar_url": "https://avatars3.githubusercontent.com/u/17175069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevintrankt", "html_url": "https://github.com/kevintrankt", "followers_url": "https://api.github.com/users/kevintrankt/followers", "following_url": "https://api.github.com/users/kevintrankt/following{/other_user}", "gists_url": "https://api.github.com/users/kevintrankt/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevintrankt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevintrankt/subscriptions", "organizations_url": "https://api.github.com/users/kevintrankt/orgs", "repos_url": "https://api.github.com/users/kevintrankt/repos", "events_url": "https://api.github.com/users/kevintrankt/events{/privacy}", "received_events_url": "https://api.github.com/users/kevintrankt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 996845227, "node_id": "MDU6TGFiZWw5OTY4NDUyMjc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:dist-strat", "name": "comp:dist-strat", "color": "0052cc", "default": false}, {"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "yuefengz", "id": 1647833, "node_id": "MDQ6VXNlcjE2NDc4MzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1647833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuefengz", "html_url": "https://github.com/yuefengz", "followers_url": "https://api.github.com/users/yuefengz/followers", "following_url": "https://api.github.com/users/yuefengz/following{/other_user}", "gists_url": "https://api.github.com/users/yuefengz/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuefengz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuefengz/subscriptions", "organizations_url": "https://api.github.com/users/yuefengz/orgs", "repos_url": "https://api.github.com/users/yuefengz/repos", "events_url": "https://api.github.com/users/yuefengz/events{/privacy}", "received_events_url": "https://api.github.com/users/yuefengz/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "yuefengz", "id": 1647833, "node_id": "MDQ6VXNlcjE2NDc4MzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1647833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuefengz", "html_url": "https://github.com/yuefengz", "followers_url": "https://api.github.com/users/yuefengz/followers", "following_url": "https://api.github.com/users/yuefengz/following{/other_user}", "gists_url": "https://api.github.com/users/yuefengz/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuefengz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuefengz/subscriptions", "organizations_url": "https://api.github.com/users/yuefengz/orgs", "repos_url": "https://api.github.com/users/yuefengz/repos", "events_url": "https://api.github.com/users/yuefengz/events{/privacy}", "received_events_url": "https://api.github.com/users/yuefengz/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 17, "created_at": "2018-07-18T21:43:11Z", "updated_at": "2018-11-01T02:46:12Z", "closed_at": "2018-11-01T02:46:12Z", "author_association": "NONE", "body_html": "<p>I am currently running tensorflow-gpu 1.9 avx2 with cuda 9.2. When I train the model below, I notice that my CPU usage is 99% but my Tesla M60 usage is at 0%.</p>\n<pre><code>def input_fn():\n    return tf.train.limit_epochs(tf.convert_to_tensor(points, dtype=tf.float32), num_epochs=1)\n\nkmeans = tf.contrib.factorization.KMeansClustering(num_clusters=num_clusters, use_mini_batch=False)\nnum_iterations = 20\n\nprevious_centers = None\nfor _ in range(num_iterations):\n    kmeans.train(input_fn)\n    cluster_centers = kmeans.cluster_centers()\n    print('score:', kmeans.score(input_fn))\n\n# map the input points to their clusters\ncluster_indices = list(kmeans.predict_cluster_index(input_fn))\n</code></pre>\n<p>`</p>", "body_text": "I am currently running tensorflow-gpu 1.9 avx2 with cuda 9.2. When I train the model below, I notice that my CPU usage is 99% but my Tesla M60 usage is at 0%.\ndef input_fn():\n    return tf.train.limit_epochs(tf.convert_to_tensor(points, dtype=tf.float32), num_epochs=1)\n\nkmeans = tf.contrib.factorization.KMeansClustering(num_clusters=num_clusters, use_mini_batch=False)\nnum_iterations = 20\n\nprevious_centers = None\nfor _ in range(num_iterations):\n    kmeans.train(input_fn)\n    cluster_centers = kmeans.cluster_centers()\n    print('score:', kmeans.score(input_fn))\n\n# map the input points to their clusters\ncluster_indices = list(kmeans.predict_cluster_index(input_fn))\n\n`", "body": "I am currently running tensorflow-gpu 1.9 avx2 with cuda 9.2. When I train the model below, I notice that my CPU usage is 99% but my Tesla M60 usage is at 0%. \r\n\r\n\r\n\r\n    def input_fn():\r\n        return tf.train.limit_epochs(tf.convert_to_tensor(points, dtype=tf.float32), num_epochs=1)\r\n\r\n    kmeans = tf.contrib.factorization.KMeansClustering(num_clusters=num_clusters, use_mini_batch=False)\r\n    num_iterations = 20\r\n\r\n    previous_centers = None\r\n    for _ in range(num_iterations):\r\n        kmeans.train(input_fn)\r\n        cluster_centers = kmeans.cluster_centers()\r\n        print('score:', kmeans.score(input_fn))\r\n\r\n    # map the input points to their clusters\r\n    cluster_indices = list(kmeans.predict_cluster_index(input_fn))\r\n\r\n`"}