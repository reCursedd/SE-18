{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/258977399", "html_url": "https://github.com/tensorflow/tensorflow/issues/5409#issuecomment-258977399", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5409", "id": 258977399, "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODk3NzM5OQ==", "user": {"login": "juraj-bicikl", "id": 22090096, "node_id": "MDQ6VXNlcjIyMDkwMDk2", "avatar_url": "https://avatars1.githubusercontent.com/u/22090096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/juraj-bicikl", "html_url": "https://github.com/juraj-bicikl", "followers_url": "https://api.github.com/users/juraj-bicikl/followers", "following_url": "https://api.github.com/users/juraj-bicikl/following{/other_user}", "gists_url": "https://api.github.com/users/juraj-bicikl/gists{/gist_id}", "starred_url": "https://api.github.com/users/juraj-bicikl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/juraj-bicikl/subscriptions", "organizations_url": "https://api.github.com/users/juraj-bicikl/orgs", "repos_url": "https://api.github.com/users/juraj-bicikl/repos", "events_url": "https://api.github.com/users/juraj-bicikl/events{/privacy}", "received_events_url": "https://api.github.com/users/juraj-bicikl/received_events", "type": "User", "site_admin": false}, "created_at": "2016-11-07T22:02:57Z", "updated_at": "2016-11-07T22:02:57Z", "author_association": "NONE", "body_html": "<p>So far, I have been using TF_OperationOutputType in the context of building a tensorflow<br>\ngraph. The function is useful when the type of the next node in the graph has to match<br>\nthe type of one of the previous nodes. The function enables me to figure out the type<br>\nthat I have to assign to the new node.</p>\n<p>For example, when implementing Adam optimizer, I have to define<br>\ntwo new variables (per each variable over which we optimize the cost) to keep track<br>\nof the mean and variance of the gradient. To create those \"Variable\" nodes, I have to know<br>\nthe type, and for that I use TF_OperationOutputType.</p>\n<p>I haven't yet encountered a situation where it was important to me to distinguish<br>\nbetween DT_FLOAT and DT_FLOAT_REF, or DT_DOUBLE and DT_DOUBLE_REF.<br>\nCurrently I am not aware of the case where this could be useful.</p>", "body_text": "So far, I have been using TF_OperationOutputType in the context of building a tensorflow\ngraph. The function is useful when the type of the next node in the graph has to match\nthe type of one of the previous nodes. The function enables me to figure out the type\nthat I have to assign to the new node.\nFor example, when implementing Adam optimizer, I have to define\ntwo new variables (per each variable over which we optimize the cost) to keep track\nof the mean and variance of the gradient. To create those \"Variable\" nodes, I have to know\nthe type, and for that I use TF_OperationOutputType.\nI haven't yet encountered a situation where it was important to me to distinguish\nbetween DT_FLOAT and DT_FLOAT_REF, or DT_DOUBLE and DT_DOUBLE_REF.\nCurrently I am not aware of the case where this could be useful.", "body": "So far, I have been using TF_OperationOutputType in the context of building a tensorflow \ngraph. The function is useful when the type of the next node in the graph has to match \nthe type of one of the previous nodes. The function enables me to figure out the type \nthat I have to assign to the new node. \n\nFor example, when implementing Adam optimizer, I have to define\ntwo new variables (per each variable over which we optimize the cost) to keep track\nof the mean and variance of the gradient. To create those \"Variable\" nodes, I have to know\nthe type, and for that I use TF_OperationOutputType. \n\nI haven't yet encountered a situation where it was important to me to distinguish \nbetween DT_FLOAT and DT_FLOAT_REF, or DT_DOUBLE and DT_DOUBLE_REF. \nCurrently I am not aware of the case where this could be useful.\n"}