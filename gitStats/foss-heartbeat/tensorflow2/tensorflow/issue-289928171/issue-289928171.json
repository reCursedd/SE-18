{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16238", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16238/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16238/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16238/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16238", "id": 289928171, "node_id": "MDU6SXNzdWUyODk5MjgxNzE=", "number": 16238, "title": "//tensorflow/contrib/gan:losses_impl_test fails with AssertionError ", "user": {"login": "namrata-ibm", "id": 21953668, "node_id": "MDQ6VXNlcjIxOTUzNjY4", "avatar_url": "https://avatars3.githubusercontent.com/u/21953668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/namrata-ibm", "html_url": "https://github.com/namrata-ibm", "followers_url": "https://api.github.com/users/namrata-ibm/followers", "following_url": "https://api.github.com/users/namrata-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/namrata-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/namrata-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/namrata-ibm/subscriptions", "organizations_url": "https://api.github.com/users/namrata-ibm/orgs", "repos_url": "https://api.github.com/users/namrata-ibm/repos", "events_url": "https://api.github.com/users/namrata-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/namrata-ibm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "yifeif", "id": 1192265, "node_id": "MDQ6VXNlcjExOTIyNjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1192265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yifeif", "html_url": "https://github.com/yifeif", "followers_url": "https://api.github.com/users/yifeif/followers", "following_url": "https://api.github.com/users/yifeif/following{/other_user}", "gists_url": "https://api.github.com/users/yifeif/gists{/gist_id}", "starred_url": "https://api.github.com/users/yifeif/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yifeif/subscriptions", "organizations_url": "https://api.github.com/users/yifeif/orgs", "repos_url": "https://api.github.com/users/yifeif/repos", "events_url": "https://api.github.com/users/yifeif/events{/privacy}", "received_events_url": "https://api.github.com/users/yifeif/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "yifeif", "id": 1192265, "node_id": "MDQ6VXNlcjExOTIyNjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1192265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yifeif", "html_url": "https://github.com/yifeif", "followers_url": "https://api.github.com/users/yifeif/followers", "following_url": "https://api.github.com/users/yifeif/following{/other_user}", "gists_url": "https://api.github.com/users/yifeif/gists{/gist_id}", "starred_url": "https://api.github.com/users/yifeif/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yifeif/subscriptions", "organizations_url": "https://api.github.com/users/yifeif/orgs", "repos_url": "https://api.github.com/users/yifeif/repos", "events_url": "https://api.github.com/users/yifeif/events{/privacy}", "received_events_url": "https://api.github.com/users/yifeif/received_events", "type": "User", "site_admin": false}, {"login": "joel-shor", "id": 6020988, "node_id": "MDQ6VXNlcjYwMjA5ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/6020988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joel-shor", "html_url": "https://github.com/joel-shor", "followers_url": "https://api.github.com/users/joel-shor/followers", "following_url": "https://api.github.com/users/joel-shor/following{/other_user}", "gists_url": "https://api.github.com/users/joel-shor/gists{/gist_id}", "starred_url": "https://api.github.com/users/joel-shor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joel-shor/subscriptions", "organizations_url": "https://api.github.com/users/joel-shor/orgs", "repos_url": "https://api.github.com/users/joel-shor/repos", "events_url": "https://api.github.com/users/joel-shor/events{/privacy}", "received_events_url": "https://api.github.com/users/joel-shor/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-01-19T10:25:54Z", "updated_at": "2018-01-26T05:31:42Z", "closed_at": "2018-01-26T05:31:42Z", "author_association": "CONTRIBUTOR", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: No</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu 16.04  s390x</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: Source</li>\n<li><strong>TensorFlow version (use command below)</strong>: v1.4.1</li>\n<li><strong>Python version</strong>: 2.7.12</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.7.0</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: 5.4.0</li>\n<li><strong>CUDA/cuDNN version</strong>: No GPU</li>\n<li><strong>GPU model and memory</strong>: NA</li>\n<li><strong>Exact command to reproduce</strong>: bazel test -c opt //tensorflow/contrib/gan:losses_impl_test</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>One of the sub-test <code>test_stable_global_norm_unchanged</code> fails on s390x with<br>\n<code>AssertionError: 110.709068 != 110.709084 +/- 0.000010</code></p>\n<p>Seems like a minor difference, so I tried changing the tolerance slightly as below:</p>\n<pre><code>-        self.assertNear(gnorm_np, precond_gnorm_np, 1e-5)\n+        self.assertNear(gnorm_np, precond_gnorm_np, 2e-5)\n</code></pre>\n<p>with this the test is passing.</p>\n<p>Is it ok to create a PR with this change? Could you please share your thoughts on this.</p>\n<h3>Source code / logs</h3>\n<pre><code>.......................F..................................................................................\n======================================================================\nFAIL: test_stable_global_norm_unchanged (__main__.CombineAdversarialLossTest)\nTest that preconditioning doesn't change global norm value.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/test/.cache/bazel/_bazel_test/774d974934abfb88e6e5d6a13042805c/execroot/org_tensorflow/bazel-out/local-opt/bin/tensorflow/contrib/gan/losses_impl_test.runfiles/org_tensorflow/tensorflow/contrib/gan/python/losses/python/losses_impl_test.py\", line 602, in test_stable_global_norm_unchanged\n    self.assertNear(gnorm_np, precond_gnorm_np, 1e-5)\n  File \"/home/test/.cache/bazel/_bazel_test/774d974934abfb88e6e5d6a13042805c/execroot/org_tensorflow/bazel-out/local-opt/bin/tensorflow/contrib/gan/losses_impl_test.runfiles/org_tensorflow/tensorflow/python/framework/test_util.py\", line 879, in assertNear\n    if msg is not None else \"\"))\nAssertionError: 110.709068 != 110.709084 +/- 0.000010\n\n----------------------------------------------------------------------\nRan 106 tests in 9.119s\n\nFAILED (failures=1)\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): No\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04  s390x\nTensorFlow installed from (source or binary): Source\nTensorFlow version (use command below): v1.4.1\nPython version: 2.7.12\nBazel version (if compiling from source): 0.7.0\nGCC/Compiler version (if compiling from source): 5.4.0\nCUDA/cuDNN version: No GPU\nGPU model and memory: NA\nExact command to reproduce: bazel test -c opt //tensorflow/contrib/gan:losses_impl_test\n\nDescribe the problem\nOne of the sub-test test_stable_global_norm_unchanged fails on s390x with\nAssertionError: 110.709068 != 110.709084 +/- 0.000010\nSeems like a minor difference, so I tried changing the tolerance slightly as below:\n-        self.assertNear(gnorm_np, precond_gnorm_np, 1e-5)\n+        self.assertNear(gnorm_np, precond_gnorm_np, 2e-5)\n\nwith this the test is passing.\nIs it ok to create a PR with this change? Could you please share your thoughts on this.\nSource code / logs\n.......................F..................................................................................\n======================================================================\nFAIL: test_stable_global_norm_unchanged (__main__.CombineAdversarialLossTest)\nTest that preconditioning doesn't change global norm value.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/test/.cache/bazel/_bazel_test/774d974934abfb88e6e5d6a13042805c/execroot/org_tensorflow/bazel-out/local-opt/bin/tensorflow/contrib/gan/losses_impl_test.runfiles/org_tensorflow/tensorflow/contrib/gan/python/losses/python/losses_impl_test.py\", line 602, in test_stable_global_norm_unchanged\n    self.assertNear(gnorm_np, precond_gnorm_np, 1e-5)\n  File \"/home/test/.cache/bazel/_bazel_test/774d974934abfb88e6e5d6a13042805c/execroot/org_tensorflow/bazel-out/local-opt/bin/tensorflow/contrib/gan/losses_impl_test.runfiles/org_tensorflow/tensorflow/python/framework/test_util.py\", line 879, in assertNear\n    if msg is not None else \"\"))\nAssertionError: 110.709068 != 110.709084 +/- 0.000010\n\n----------------------------------------------------------------------\nRan 106 tests in 9.119s\n\nFAILED (failures=1)", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04  s390x\r\n- **TensorFlow installed from (source or binary)**: Source\r\n- **TensorFlow version (use command below)**: v1.4.1\r\n- **Python version**: 2.7.12\r\n- **Bazel version (if compiling from source)**: 0.7.0\r\n- **GCC/Compiler version (if compiling from source)**: 5.4.0\r\n- **CUDA/cuDNN version**: No GPU\r\n- **GPU model and memory**: NA\r\n- **Exact command to reproduce**: bazel test -c opt //tensorflow/contrib/gan:losses_impl_test\r\n\r\n### Describe the problem\r\nOne of the sub-test `test_stable_global_norm_unchanged` fails on s390x with \r\n`AssertionError: 110.709068 != 110.709084 +/- 0.000010`\r\n\r\nSeems like a minor difference, so I tried changing the tolerance slightly as below:\r\n```\r\n-        self.assertNear(gnorm_np, precond_gnorm_np, 1e-5)\r\n+        self.assertNear(gnorm_np, precond_gnorm_np, 2e-5)\r\n```\r\nwith this the test is passing.\r\n\r\nIs it ok to create a PR with this change? Could you please share your thoughts on this.\r\n\r\n### Source code / logs\r\n```\r\n.......................F..................................................................................\r\n======================================================================\r\nFAIL: test_stable_global_norm_unchanged (__main__.CombineAdversarialLossTest)\r\nTest that preconditioning doesn't change global norm value.\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/test/.cache/bazel/_bazel_test/774d974934abfb88e6e5d6a13042805c/execroot/org_tensorflow/bazel-out/local-opt/bin/tensorflow/contrib/gan/losses_impl_test.runfiles/org_tensorflow/tensorflow/contrib/gan/python/losses/python/losses_impl_test.py\", line 602, in test_stable_global_norm_unchanged\r\n    self.assertNear(gnorm_np, precond_gnorm_np, 1e-5)\r\n  File \"/home/test/.cache/bazel/_bazel_test/774d974934abfb88e6e5d6a13042805c/execroot/org_tensorflow/bazel-out/local-opt/bin/tensorflow/contrib/gan/losses_impl_test.runfiles/org_tensorflow/tensorflow/python/framework/test_util.py\", line 879, in assertNear\r\n    if msg is not None else \"\"))\r\nAssertionError: 110.709068 != 110.709084 +/- 0.000010\r\n\r\n----------------------------------------------------------------------\r\nRan 106 tests in 9.119s\r\n\r\nFAILED (failures=1)\r\n```\r\n\r\n"}