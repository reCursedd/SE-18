{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/217884839", "html_url": "https://github.com/tensorflow/tensorflow/pull/1631#issuecomment-217884839", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1631", "id": 217884839, "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzg4NDgzOQ==", "user": {"login": "dauba-dauba", "id": 12388137, "node_id": "MDQ6VXNlcjEyMzg4MTM3", "avatar_url": "https://avatars2.githubusercontent.com/u/12388137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dauba-dauba", "html_url": "https://github.com/dauba-dauba", "followers_url": "https://api.github.com/users/dauba-dauba/followers", "following_url": "https://api.github.com/users/dauba-dauba/following{/other_user}", "gists_url": "https://api.github.com/users/dauba-dauba/gists{/gist_id}", "starred_url": "https://api.github.com/users/dauba-dauba/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dauba-dauba/subscriptions", "organizations_url": "https://api.github.com/users/dauba-dauba/orgs", "repos_url": "https://api.github.com/users/dauba-dauba/repos", "events_url": "https://api.github.com/users/dauba-dauba/events{/privacy}", "received_events_url": "https://api.github.com/users/dauba-dauba/received_events", "type": "User", "site_admin": false}, "created_at": "2016-05-09T14:44:17Z", "updated_at": "2016-05-09T14:49:13Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I've been attempting to use this patch locally to see if I could manually work around the issues in protobuf. I've run into issues with Xcode 7 where object files built using the bazel cc_library rule can't be linked into an iOS simulator application due to metadata that's now being written into the object files. Going back to the bazel iOS example (<a href=\"http://bazel.io/docs/tutorial/ios-app.html\" rel=\"nofollow\">http://bazel.io/docs/tutorial/ios-app.html</a>) and adding some C++ code, I found that I was only able to get it to build properly if the C++ was added using an objc_library rule, not a cc_library rule.</p>\n<p>I note that this patch currently only defines a cc_library rule for the tensorflow code. Does it also need to define an objc_library rule for the benefit of the simulator?</p>\n<p>Edit: Explanation of Xcode 7's new object file metadata: <a href=\"https://karp.id.au/a/2015/09/15/xcode-7s-new-linker-rules/\" rel=\"nofollow\">https://karp.id.au/a/2015/09/15/xcode-7s-new-linker-rules/</a></p>", "body_text": "I've been attempting to use this patch locally to see if I could manually work around the issues in protobuf. I've run into issues with Xcode 7 where object files built using the bazel cc_library rule can't be linked into an iOS simulator application due to metadata that's now being written into the object files. Going back to the bazel iOS example (http://bazel.io/docs/tutorial/ios-app.html) and adding some C++ code, I found that I was only able to get it to build properly if the C++ was added using an objc_library rule, not a cc_library rule.\nI note that this patch currently only defines a cc_library rule for the tensorflow code. Does it also need to define an objc_library rule for the benefit of the simulator?\nEdit: Explanation of Xcode 7's new object file metadata: https://karp.id.au/a/2015/09/15/xcode-7s-new-linker-rules/", "body": "I've been attempting to use this patch locally to see if I could manually work around the issues in protobuf. I've run into issues with Xcode 7 where object files built using the bazel cc_library rule can't be linked into an iOS simulator application due to metadata that's now being written into the object files. Going back to the bazel iOS example (http://bazel.io/docs/tutorial/ios-app.html) and adding some C++ code, I found that I was only able to get it to build properly if the C++ was added using an objc_library rule, not a cc_library rule.\n\nI note that this patch currently only defines a cc_library rule for the tensorflow code. Does it also need to define an objc_library rule for the benefit of the simulator?\n\nEdit: Explanation of Xcode 7's new object file metadata: https://karp.id.au/a/2015/09/15/xcode-7s-new-linker-rules/\n"}