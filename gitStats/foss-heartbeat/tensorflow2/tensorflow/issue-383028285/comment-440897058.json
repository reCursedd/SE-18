{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/440897058", "html_url": "https://github.com/tensorflow/tensorflow/issues/23899#issuecomment-440897058", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23899", "id": 440897058, "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDg5NzA1OA==", "user": {"login": "wangwenjing", "id": 6176821, "node_id": "MDQ6VXNlcjYxNzY4MjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/6176821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wangwenjing", "html_url": "https://github.com/wangwenjing", "followers_url": "https://api.github.com/users/wangwenjing/followers", "following_url": "https://api.github.com/users/wangwenjing/following{/other_user}", "gists_url": "https://api.github.com/users/wangwenjing/gists{/gist_id}", "starred_url": "https://api.github.com/users/wangwenjing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wangwenjing/subscriptions", "organizations_url": "https://api.github.com/users/wangwenjing/orgs", "repos_url": "https://api.github.com/users/wangwenjing/repos", "events_url": "https://api.github.com/users/wangwenjing/events{/privacy}", "received_events_url": "https://api.github.com/users/wangwenjing/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-22T02:50:55Z", "updated_at": "2018-11-22T02:50:55Z", "author_association": "NONE", "body_html": "<blockquote>\n<p>What\u2019s the function definition? You could also try namespace to ensure you are calling the right function.</p>\n</blockquote>\n<p>Hi jefhai, It's the \"simple\" example in folder lite/examples/ios/. I didn't add any my code except the path for  non-founded header files. Then I run the example and error occurred.  I found the <strong>declaration of Verifier:VerifyVector has 3 parameters in flatbuffers.h of tensorflow_lite.frame(v1.10.1) as follows:</strong><br>\n// Common code between vectors and strings.<br>\nbool VerifyVector(const uint8_t *vec, size_t elem_size,<br>\nconst uint8_t **end) const {<br>\n// Check we can read the size field.<br>\nif (!Verify&lt;uoffset_t&gt;(vec)) return false;<br>\n// Check the whole array. If this is a string, the byte past the array<br>\n// must be 0.<br>\nauto size = ReadScalar&lt;uoffset_t&gt;(vec);<br>\nauto max_elems = FLATBUFFERS_MAX_BUFFER_SIZE / elem_size;<br>\nif (!Check(size &lt; max_elems))<br>\nreturn false;  // Protect against byte_size overflowing.<br>\nauto byte_size = sizeof(size) + elem_size * size;<br>\n*end = vec + byte_size;<br>\nreturn Verify(vec, byte_size);<br>\n}</p>\n<p><strong>But the caller in schema_generated.h pass only one param:</strong><br>\nconst flatbuffers::Vector&lt;int64_t&gt; *<strong>zero_point()</strong> const {<br>\nreturn GetPointer&lt;const flatbuffers::Vector&lt;int64_t&gt; *&gt;(VT_ZERO_POINT);<br>\n}<br>\nbool Verify(flatbuffers::Verifier &amp;verifier) const {<br>\nreturn VerifyTableStart(verifier) &amp;&amp;<br>\nVerifyOffset(verifier, VT_MIN) &amp;&amp;<br>\nverifier.VerifyVector(min()) &amp;&amp;<br>\nVerifyOffset(verifier, VT_MAX) &amp;&amp;<br>\nverifier.VerifyVector(max()) &amp;&amp;<br>\nVerifyOffset(verifier, VT_SCALE) &amp;&amp;<br>\nverifier.VerifyVector(scale()) &amp;&amp;<br>\nVerifyOffset(verifier, VT_ZERO_POINT) &amp;&amp;<br>\nverifier.VerifyVector(<strong>zero_point()</strong>) &amp;&amp;<br>\nverifier.EndTable();<br>\n}</p>", "body_text": "What\u2019s the function definition? You could also try namespace to ensure you are calling the right function.\n\nHi jefhai, It's the \"simple\" example in folder lite/examples/ios/. I didn't add any my code except the path for  non-founded header files. Then I run the example and error occurred.  I found the declaration of Verifier:VerifyVector has 3 parameters in flatbuffers.h of tensorflow_lite.frame(v1.10.1) as follows:\n// Common code between vectors and strings.\nbool VerifyVector(const uint8_t *vec, size_t elem_size,\nconst uint8_t **end) const {\n// Check we can read the size field.\nif (!Verify<uoffset_t>(vec)) return false;\n// Check the whole array. If this is a string, the byte past the array\n// must be 0.\nauto size = ReadScalar<uoffset_t>(vec);\nauto max_elems = FLATBUFFERS_MAX_BUFFER_SIZE / elem_size;\nif (!Check(size < max_elems))\nreturn false;  // Protect against byte_size overflowing.\nauto byte_size = sizeof(size) + elem_size * size;\n*end = vec + byte_size;\nreturn Verify(vec, byte_size);\n}\nBut the caller in schema_generated.h pass only one param:\nconst flatbuffers::Vector<int64_t> *zero_point() const {\nreturn GetPointer<const flatbuffers::Vector<int64_t> *>(VT_ZERO_POINT);\n}\nbool Verify(flatbuffers::Verifier &verifier) const {\nreturn VerifyTableStart(verifier) &&\nVerifyOffset(verifier, VT_MIN) &&\nverifier.VerifyVector(min()) &&\nVerifyOffset(verifier, VT_MAX) &&\nverifier.VerifyVector(max()) &&\nVerifyOffset(verifier, VT_SCALE) &&\nverifier.VerifyVector(scale()) &&\nVerifyOffset(verifier, VT_ZERO_POINT) &&\nverifier.VerifyVector(zero_point()) &&\nverifier.EndTable();\n}", "body": "> What\u2019s the function definition? You could also try namespace to ensure you are calling the right function.\r\n\r\nHi jefhai, It's the \"simple\" example in folder lite/examples/ios/. I didn't add any my code except the path for  non-founded header files. Then I run the example and error occurred.  I found the **declaration of Verifier:VerifyVector has 3 parameters in flatbuffers.h of tensorflow_lite.frame(v1.10.1) as follows:**\r\n// Common code between vectors and strings.\r\n  bool VerifyVector(const uint8_t *vec, size_t elem_size,\r\n                    const uint8_t **end) const {\r\n    // Check we can read the size field.\r\n    if (!Verify<uoffset_t>(vec)) return false;\r\n    // Check the whole array. If this is a string, the byte past the array\r\n    // must be 0.\r\n    auto size = ReadScalar<uoffset_t>(vec);\r\n    auto max_elems = FLATBUFFERS_MAX_BUFFER_SIZE / elem_size;\r\n    if (!Check(size < max_elems))\r\n      return false;  // Protect against byte_size overflowing.\r\n    auto byte_size = sizeof(size) + elem_size * size;\r\n    *end = vec + byte_size;\r\n    return Verify(vec, byte_size);\r\n  }\r\n\r\n**But the caller in schema_generated.h pass only one param:**\r\n const flatbuffers::Vector<int64_t> ***zero_point()** const {\r\n    return GetPointer<const flatbuffers::Vector<int64_t> *>(VT_ZERO_POINT);\r\n  }\r\n  bool Verify(flatbuffers::Verifier &verifier) const {\r\n    return VerifyTableStart(verifier) &&\r\n           VerifyOffset(verifier, VT_MIN) &&\r\n           verifier.VerifyVector(min()) &&\r\n           VerifyOffset(verifier, VT_MAX) &&\r\n           verifier.VerifyVector(max()) &&\r\n           VerifyOffset(verifier, VT_SCALE) &&\r\n           verifier.VerifyVector(scale()) &&\r\n           VerifyOffset(verifier, VT_ZERO_POINT) &&\r\n           verifier.VerifyVector(**zero_point()**) &&\r\n           verifier.EndTable();\r\n  }"}