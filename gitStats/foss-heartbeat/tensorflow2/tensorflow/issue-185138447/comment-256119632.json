{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/256119632", "html_url": "https://github.com/tensorflow/tensorflow/pull/5194#issuecomment-256119632", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5194", "id": 256119632, "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjExOTYzMg==", "user": {"login": "igormq", "id": 623536, "node_id": "MDQ6VXNlcjYyMzUzNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/623536?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igormq", "html_url": "https://github.com/igormq", "followers_url": "https://api.github.com/users/igormq/followers", "following_url": "https://api.github.com/users/igormq/following{/other_user}", "gists_url": "https://api.github.com/users/igormq/gists{/gist_id}", "starred_url": "https://api.github.com/users/igormq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igormq/subscriptions", "organizations_url": "https://api.github.com/users/igormq/orgs", "repos_url": "https://api.github.com/users/igormq/repos", "events_url": "https://api.github.com/users/igormq/events{/privacy}", "received_events_url": "https://api.github.com/users/igormq/received_events", "type": "User", "site_admin": false}, "created_at": "2016-10-25T18:17:50Z", "updated_at": "2016-10-25T22:34:34Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Hi, <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=11528067\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Jihadik\">@Jihadik</a>.</p>\n<p>If you try this piece of code</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n<span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>A B B * B * B, where * means blank</span>\nabb_b_b <span class=\"pl-k\">=</span> np.array([[<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>], [<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">0</span>], [<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">0</span>], [<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span>], [<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">0</span>], [<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span>], [<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">0</span>]]) <span class=\"pl-c\"><span class=\"pl-c\">#</span> One hot encoding</span>\nabb_b_b <span class=\"pl-k\">=</span> abb_b_b[<span class=\"pl-c1\">None</span>, :, :].transpose((<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">0</span>,<span class=\"pl-c1\">2</span>)) <span class=\"pl-c\"><span class=\"pl-c\">#</span> Added batch axis and transpose (it's time major notation)</span>\nseq_len <span class=\"pl-k\">=</span> [<span class=\"pl-c1\">7</span>]\n\nsess <span class=\"pl-k\">=</span> tf.InteractiveSession()\nmerge <span class=\"pl-k\">=</span> tf.sparse_tensor_to_dense(tf.nn.ctc_greedy_decoder(abb_b_b, seq_len)[<span class=\"pl-c1\">0</span>][<span class=\"pl-c1\">0</span>]).eval()\nnon_merge <span class=\"pl-k\">=</span> tf.sparse_tensor_to_dense(tf.nn.ctc_greedy_decoder(abb_b_b, seq_len, <span class=\"pl-v\">merge_repeated</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">False</span>)[<span class=\"pl-c1\">0</span>][<span class=\"pl-c1\">0</span>]).eval()\n\n<span class=\"pl-c1\">print</span>(merge)\n<span class=\"pl-c1\">print</span>(non_merge)</pre></div>\n<p>you'll get this output</p>\n<div class=\"highlight highlight-source-python\"><pre>[[<span class=\"pl-c1\">0</span> <span class=\"pl-c1\">1</span> <span class=\"pl-c1\">1</span> <span class=\"pl-c1\">1</span>]] <span class=\"pl-c\"><span class=\"pl-c\">#</span> Which means ABBB</span>\n[[<span class=\"pl-c1\">0</span> <span class=\"pl-c1\">1</span> <span class=\"pl-c1\">1</span> <span class=\"pl-c1\">1</span> <span class=\"pl-c1\">1</span>]] <span class=\"pl-c\"><span class=\"pl-c\">#</span> Which means ABBBB. There is a extra 1 in the docs!</span></pre></div>\n<p>So, the docs seems to have a problem, but not only the problem that you've point to. If you look at <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/util/ctc/ctc_decoder.h#L88\">this</a> line of code, you can see that if <code>merge_repeated = False</code>, then the greedy decoder will only append to output the maximum target if it isn't blank. In case of <code>merge_repeated=True</code>, the maximum target will only be appended to output if it isn't the blank label and if it isn't equal the previous label.</p>\n<p>Look at the comment <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/ctc_ops.py#L184\">here</a>. As you can see, there is a typo. Instead of * <code>A B B B B B</code> if <code>merge_repeated=False</code>., it should be * <code>A B B B B</code> if <code>merge_repeated=False</code>.</p>\n<p>So, I recommend you to change your PR to fix this typo too! :)</p>", "body_text": "Hi, @Jihadik.\nIf you try this piece of code\nimport numpy as np\nimport tensorflow as tf\n\n#A B B * B * B, where * means blank\nabb_b_b = np.array([[1, 0, 0], [0, 1, 0], [0, 1, 0], [0, 0, 1], [0, 1, 0], [0, 0, 1], [0, 1, 0]]) # One hot encoding\nabb_b_b = abb_b_b[None, :, :].transpose((1,0,2)) # Added batch axis and transpose (it's time major notation)\nseq_len = [7]\n\nsess = tf.InteractiveSession()\nmerge = tf.sparse_tensor_to_dense(tf.nn.ctc_greedy_decoder(abb_b_b, seq_len)[0][0]).eval()\nnon_merge = tf.sparse_tensor_to_dense(tf.nn.ctc_greedy_decoder(abb_b_b, seq_len, merge_repeated=False)[0][0]).eval()\n\nprint(merge)\nprint(non_merge)\nyou'll get this output\n[[0 1 1 1]] # Which means ABBB\n[[0 1 1 1 1]] # Which means ABBBB. There is a extra 1 in the docs!\nSo, the docs seems to have a problem, but not only the problem that you've point to. If you look at this line of code, you can see that if merge_repeated = False, then the greedy decoder will only append to output the maximum target if it isn't blank. In case of merge_repeated=True, the maximum target will only be appended to output if it isn't the blank label and if it isn't equal the previous label.\nLook at the comment here. As you can see, there is a typo. Instead of * A B B B B B if merge_repeated=False., it should be * A B B B B if merge_repeated=False.\nSo, I recommend you to change your PR to fix this typo too! :)", "body": "Hi, @Jihadik.\n\nIf you try this piece of code\n\n``` python\nimport numpy as np\nimport tensorflow as tf\n\n#A B B * B * B, where * means blank\nabb_b_b = np.array([[1, 0, 0], [0, 1, 0], [0, 1, 0], [0, 0, 1], [0, 1, 0], [0, 0, 1], [0, 1, 0]]) # One hot encoding\nabb_b_b = abb_b_b[None, :, :].transpose((1,0,2)) # Added batch axis and transpose (it's time major notation)\nseq_len = [7]\n\nsess = tf.InteractiveSession()\nmerge = tf.sparse_tensor_to_dense(tf.nn.ctc_greedy_decoder(abb_b_b, seq_len)[0][0]).eval()\nnon_merge = tf.sparse_tensor_to_dense(tf.nn.ctc_greedy_decoder(abb_b_b, seq_len, merge_repeated=False)[0][0]).eval()\n\nprint(merge)\nprint(non_merge)\n```\n\nyou'll get this output\n\n``` python\n[[0 1 1 1]] # Which means ABBB\n[[0 1 1 1 1]] # Which means ABBBB. There is a extra 1 in the docs!\n```\n\nSo, the docs seems to have a problem, but not only the problem that you've point to. If you look at [this](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/util/ctc/ctc_decoder.h#L88) line of code, you can see that if `merge_repeated = False`, then the greedy decoder will only append to output the maximum target if it isn't blank. In case of `merge_repeated=True`, the maximum target will only be appended to output if it isn't the blank label and if it isn't equal the previous label. \n\nLook at the comment [here](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/ctc_ops.py#L184). As you can see, there is a typo. Instead of \\* `A B B B B B` if `merge_repeated=False`., it should be \\* `A B B B B` if `merge_repeated=False`.\n\nSo, I recommend you to change your PR to fix this typo too! :)\n"}