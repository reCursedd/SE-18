{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/252485059", "html_url": "https://github.com/tensorflow/tensorflow/issues/4842#issuecomment-252485059", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4842", "id": 252485059, "node_id": "MDEyOklzc3VlQ29tbWVudDI1MjQ4NTA1OQ==", "user": {"login": "zakizhou", "id": 19201532, "node_id": "MDQ6VXNlcjE5MjAxNTMy", "avatar_url": "https://avatars0.githubusercontent.com/u/19201532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zakizhou", "html_url": "https://github.com/zakizhou", "followers_url": "https://api.github.com/users/zakizhou/followers", "following_url": "https://api.github.com/users/zakizhou/following{/other_user}", "gists_url": "https://api.github.com/users/zakizhou/gists{/gist_id}", "starred_url": "https://api.github.com/users/zakizhou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zakizhou/subscriptions", "organizations_url": "https://api.github.com/users/zakizhou/orgs", "repos_url": "https://api.github.com/users/zakizhou/repos", "events_url": "https://api.github.com/users/zakizhou/events{/privacy}", "received_events_url": "https://api.github.com/users/zakizhou/received_events", "type": "User", "site_admin": false}, "created_at": "2016-10-09T12:58:29Z", "updated_at": "2016-10-09T12:59:51Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3890218\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/xuhuapeng\">@xuhuapeng</a><br>\nThe <code>cnn_1.py</code> in your git repo is modified from the original file in the official tutorial of  TF right?  If you have a close look at its original code, you will find no <code>placeholder</code>s in it which means the input of the model is the second way(<code>readings from files</code> not <code>feeding</code>) according to  <a href=\"https://www.tensorflow.org/versions/r0.11/how_tos/reading_data/index.html\" rel=\"nofollow\">this</a>, as a result, you can't feed any data to this model.<br>\nSince cifar10 is not a small dataset like mnist, <code>placeholder</code> is not suitable for this kind of large datasets, personally I think  reading inputs from files is the best way to train it. If you still want to use <code>placeholder</code>  you'd better write a <code>next_batch</code> method in <code>mnist</code> for cifar10 so as to feed the <code>placeholder</code></p>", "body_text": "@xuhuapeng\nThe cnn_1.py in your git repo is modified from the original file in the official tutorial of  TF right?  If you have a close look at its original code, you will find no placeholders in it which means the input of the model is the second way(readings from files not feeding) according to  this, as a result, you can't feed any data to this model.\nSince cifar10 is not a small dataset like mnist, placeholder is not suitable for this kind of large datasets, personally I think  reading inputs from files is the best way to train it. If you still want to use placeholder  you'd better write a next_batch method in mnist for cifar10 so as to feed the placeholder", "body": "@xuhuapeng \nThe `cnn_1.py` in your git repo is modified from the original file in the official tutorial of  TF right?  If you have a close look at its original code, you will find no `placeholder`s in it which means the input of the model is the second way(`readings from files` not `feeding`) according to  [this](https://www.tensorflow.org/versions/r0.11/how_tos/reading_data/index.html), as a result, you can't feed any data to this model.\nSince cifar10 is not a small dataset like mnist, `placeholder` is not suitable for this kind of large datasets, personally I think  reading inputs from files is the best way to train it. If you still want to use `placeholder`  you'd better write a `next_batch` method in `mnist` for cifar10 so as to feed the `placeholder`\n"}