{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/106966755", "pull_request_review_id": 27901342, "id": 106966755, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNjk2Njc1NQ==", "diff_hunk": "@@ -715,6 +771,83 @@ def _ConstructAndTestGradient(self,\n     print(\"%s gradient error = \" % func_name, err)\n     self.assertLess(err, err_margin)\n \n+  def _ConstructAndTestSecondGradient(self,\n+                                      pool_func,\n+                                      input_sizes,\n+                                      output_sizes,\n+                                      window_rows,\n+                                      window_cols,\n+                                      row_stride,\n+                                      col_stride,\n+                                      padding,\n+                                      data_format,\n+                                      use_gpu,\n+                                      x_init_value=None):\n+    \"\"\"Verifies the gradients of gradients of the pooling function.\n+\n+    Args:\n+      pool_func: Function to be called, co.MaxPool, co.AvgPool,\n+        or the Lua version.\n+      input_sizes: Input tensor dimensions.\n+      output_sizes: Output tensor dimensions.\n+      window_rows: kernel size in row dim\n+      window_cols: kernel size in col dim\n+      row_stride: Row Stride.\n+      col_stride: Col Stride.\n+      padding: Padding type.\n+      data_format: Data format.\n+      use_gpu: whether we are running on GPU\n+      x_init_value: Values to be passed to the gradient checker.\n+    \"\"\"\n+    assert input_sizes[0] == output_sizes[0]\n+    assert input_sizes[3] == output_sizes[3]\n+    total_size = 1\n+    for s in input_sizes:\n+      total_size *= s\n+    # Initializes the input tensor with array containing incrementing\n+    # numbers from 1.\n+    x = [f * 1.0 for f in range(1, total_size + 1)]\n+    with self.test_session(use_gpu=use_gpu):\n+      input_tensor = constant_op.constant(x, shape=input_sizes, name=\"input\")\n+      if pool_func == nn_ops.avg_pool:\n+        func_name = \"avg_pool\"\n+        err_margin = 1e-3", "path": "tensorflow/python/kernel_tests/pooling_ops_test.py", "position": null, "original_position": 139, "commit_id": "44449164baa4a004f69b5975a23c6335bc09797f", "original_commit_id": "3fdc5a2152162c0854194b3a84e4f2f89296e1a7", "user": {"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}, "body": "s/margin/tolerance/", "created_at": "2017-03-20T17:37:46Z", "updated_at": "2017-03-28T04:33:24Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/6664#discussion_r106966755", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/6664", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/106966755"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/6664#discussion_r106966755"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/6664"}}, "body_html": "<p>s/margin/tolerance/</p>", "body_text": "s/margin/tolerance/"}