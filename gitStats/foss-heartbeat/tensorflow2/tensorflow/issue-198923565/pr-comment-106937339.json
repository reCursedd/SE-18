{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/106937339", "pull_request_review_id": 27882337, "id": 106937339, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNjkzNzMzOQ==", "diff_hunk": "@@ -403,12 +364,260 @@ class MaxPoolingGradOp<Eigen::GpuDevice, T> : public OpKernel {\n   bool use_dnn_;\n };\n \n-REGISTER_KERNEL_BUILDER(\n-    Name(\"MaxPoolGrad\").Device(DEVICE_GPU).TypeConstraint<float>(\"T\"),\n-    MaxPoolingGradOp<Eigen::GpuDevice, float>);\n-REGISTER_KERNEL_BUILDER(\n-    Name(\"MaxPoolGrad\").Device(DEVICE_GPU).TypeConstraint<Eigen::half>(\"T\"),\n-    MaxPoolingGradOp<Eigen::GpuDevice, Eigen::half>);\n+#endif  // GOOGLE_CUDA\n+\n+// The operation to compute gradient of MaxPool gradients.\n+// It takes three inputs:\n+//   - The original input tensor\n+//   - The original output tensor\n+//   - Backprop tensor for output gradients\n+// It produces one output: backprop tensor for output gradient.\n+template <class Device, class T>\n+class MaxPoolingGradGradOp : public OpKernel {\n+ public:\n+  explicit MaxPoolingGradGradOp(OpKernelConstruction* context)\n+      : OpKernel(context) {\n+    string data_format;\n+    OP_REQUIRES_OK(context, context->GetAttr(\"data_format\", &data_format));\n+    OP_REQUIRES(context, FormatFromString(data_format, &data_format_),\n+                errors::InvalidArgument(\"Invalid data format\"));\n+    OP_REQUIRES(\n+        context, data_format_ == FORMAT_NHWC,\n+        errors::InvalidArgument(\n+            \"Default MaxPoolinGradGradOp only supports NHWC \",", "path": "tensorflow/core/kernels/maxpooling_op.cc", "position": null, "original_position": 110, "commit_id": "44449164baa4a004f69b5975a23c6335bc09797f", "original_commit_id": "3fdc5a2152162c0854194b3a84e4f2f89296e1a7", "user": {"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}, "body": "s/Poolin/Pooling/", "created_at": "2017-03-20T15:48:39Z", "updated_at": "2017-03-28T04:33:24Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/6664#discussion_r106937339", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/6664", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/106937339"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/6664#discussion_r106937339"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/6664"}}, "body_html": "<p>s/Poolin/Pooling/</p>", "body_text": "s/Poolin/Pooling/"}