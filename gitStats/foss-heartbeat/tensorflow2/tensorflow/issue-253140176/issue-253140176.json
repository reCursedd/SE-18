{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12628", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12628/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12628/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12628/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/12628", "id": 253140176, "node_id": "MDU6SXNzdWUyNTMxNDAxNzY=", "number": 12628, "title": "tf.layers.conv2d does not accept higher dimension tensor", "user": {"login": "DeckerCHAN", "id": 1845937, "node_id": "MDQ6VXNlcjE4NDU5Mzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1845937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DeckerCHAN", "html_url": "https://github.com/DeckerCHAN", "followers_url": "https://api.github.com/users/DeckerCHAN/followers", "following_url": "https://api.github.com/users/DeckerCHAN/following{/other_user}", "gists_url": "https://api.github.com/users/DeckerCHAN/gists{/gist_id}", "starred_url": "https://api.github.com/users/DeckerCHAN/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DeckerCHAN/subscriptions", "organizations_url": "https://api.github.com/users/DeckerCHAN/orgs", "repos_url": "https://api.github.com/users/DeckerCHAN/repos", "events_url": "https://api.github.com/users/DeckerCHAN/events{/privacy}", "received_events_url": "https://api.github.com/users/DeckerCHAN/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-27T04:21:56Z", "updated_at": "2017-08-28T17:18:27Z", "closed_at": "2017-08-28T17:18:27Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Win10 x64</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: pip install</li>\n<li><strong>TensorFlow version (use command below)</strong>: r1.3</li>\n<li><strong>Python version</strong>:  3.5 amd 64</li>\n<li><strong>Bazel version (if compiling from source)</strong>: Used binary</li>\n<li><strong>CUDA/cuDNN version</strong>: CUDA 8.0 + CuDNN 6.0</li>\n<li><strong>GPU model and memory</strong>:  GeForce GTX 1070 8.00GiB</li>\n</ul>\n<p>I am trying to feed a <code>tf.layers.conv2d</code> with tensor shape [batch_size, size_i_want_to_separate, width, height, channels] but I received <code>ValueError: Input 0 of layer conv2d_1 is incompatible with the layer: expected ndim=4, found ndim=5. Full shape received: [1, 4, 640, 377, 3]</code>. I think it is OK to feed layer with high dimension as long as last three dimension is image.</p>\n<p>If it is impossible to add this feature, may I try to merge first two dimensions together and feed it to conv2d layer. Then separate it to origin form but maintain the order? How to do it?</p>", "body_text": "System information\n\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Win10 x64\nTensorFlow installed from (source or binary): pip install\nTensorFlow version (use command below): r1.3\nPython version:  3.5 amd 64\nBazel version (if compiling from source): Used binary\nCUDA/cuDNN version: CUDA 8.0 + CuDNN 6.0\nGPU model and memory:  GeForce GTX 1070 8.00GiB\n\nI am trying to feed a tf.layers.conv2d with tensor shape [batch_size, size_i_want_to_separate, width, height, channels] but I received ValueError: Input 0 of layer conv2d_1 is incompatible with the layer: expected ndim=4, found ndim=5. Full shape received: [1, 4, 640, 377, 3]. I think it is OK to feed layer with high dimension as long as last three dimension is image.\nIf it is impossible to add this feature, may I try to merge first two dimensions together and feed it to conv2d layer. Then separate it to origin form but maintain the order? How to do it?", "body": "### System information\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Win10 x64\r\n- **TensorFlow installed from (source or binary)**: pip install\r\n- **TensorFlow version (use command below)**: r1.3\r\n- **Python version**:  3.5 amd 64\r\n- **Bazel version (if compiling from source)**: Used binary\r\n- **CUDA/cuDNN version**: CUDA 8.0 + CuDNN 6.0\r\n- **GPU model and memory**:  GeForce GTX 1070 8.00GiB\r\n\r\nI am trying to feed a ```tf.layers.conv2d``` with tensor shape [batch_size, size_i_want_to_separate, width, height, channels] but I received ```ValueError: Input 0 of layer conv2d_1 is incompatible with the layer: expected ndim=4, found ndim=5. Full shape received: [1, 4, 640, 377, 3]```. I think it is OK to feed layer with high dimension as long as last three dimension is image.\r\n\r\nIf it is impossible to add this feature, may I try to merge first two dimensions together and feed it to conv2d layer. Then separate it to origin form but maintain the order? How to do it?   \r\n"}