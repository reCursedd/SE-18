{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19733", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19733/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19733/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19733/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19733", "id": 328900636, "node_id": "MDU6SXNzdWUzMjg5MDA2MzY=", "number": 19733, "title": "TensorArray performance on GPU is poor.", "user": {"login": "ytdu", "id": 7380587, "node_id": "MDQ6VXNlcjczODA1ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/7380587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ytdu", "html_url": "https://github.com/ytdu", "followers_url": "https://api.github.com/users/ytdu/followers", "following_url": "https://api.github.com/users/ytdu/following{/other_user}", "gists_url": "https://api.github.com/users/ytdu/gists{/gist_id}", "starred_url": "https://api.github.com/users/ytdu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ytdu/subscriptions", "organizations_url": "https://api.github.com/users/ytdu/orgs", "repos_url": "https://api.github.com/users/ytdu/repos", "events_url": "https://api.github.com/users/ytdu/events{/privacy}", "received_events_url": "https://api.github.com/users/ytdu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2018-06-04T03:58:13Z", "updated_at": "2018-11-15T19:01:57Z", "closed_at": null, "author_association": "NONE", "body_html": "<hr>\n<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: source</li>\n<li><strong>TensorFlow version (use command below)</strong>: 'v1.8.0-7-g3b85959' 1.8.0</li>\n<li><strong>Python version</strong>: 3.5</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.13.1</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: 4.9.3</li>\n<li><strong>CUDA/cuDNN version</strong>: 9.0/7</li>\n<li><strong>GPU model and memory</strong>: TITAN X (Pascal) 12GB</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>Hi, I've found <code>TensorArrayScatterV3</code> op to be the bottleneck of my model, and it seems like TensorArray.scatter is really slow on GPU.<br>\nI compared 'tf.TensorArray.scatter' with <code>tf.scatter_update</code> on CPU/GPU, with the following code:</p>\n<pre><code>import time\nimport tensorflow as tf\n\nwith tf.device('/gpu:0'):\n    t = tf.Variable(tf.random_normal([100000, 100]))\n    ta = tf.TensorArray(tf.float32, size=100000, element_shape=[100])\n    perm = tf.random_shuffle(tf.range(100000, dtype=tf.int32))\n    for i in range(1000):\n        idx = perm[i*100: (i+1)*100]\n        v = tf.random_normal([100, 100])\n        t = tf.scatter_update(t, idx, v)\n        ta = ta.scatter(idx, v)\n    o1 = tf.gather(t, idx[:10])\n    o2 = ta.gather(idx[:10])\n\nsess_config = tf.ConfigProto()\nsess_config.allow_soft_placement = True\nsess = tf.Session(config=sess_config)\nsess.run([tf.global_variables_initializer()])\n\ntotal_time_tensor_scatter = 0.\ntotal_time_tensorarray_scatter = 0.\nfor i in range(100):\n    start_time = time.time()\n    sess.run([o1])\n    total_time_tensor_scatter += time.time() - start_time\n    start_time = time.time()\n    sess.run([o2])\n    total_time_tensorarray_scatter += time.time() - start_time\nprint('total_time_tensor_scatter', total_time_tensor_scatter)\nprint('total_time_tensorarray_scatter', total_time_tensorarray_scatter)\n</code></pre>\n<p>The results are like:<br>\nOn CPU:</p>\n<pre><code>total_time_tensor_scatter 8.333731889724731\ntotal_time_tensorarray_scatter 19.28065252304077\n</code></pre>\n<p>On GPU:</p>\n<pre><code>total_time_tensor_scatter 8.216091632843018\ntotal_time_tensorarray_scatter 82.21394562721252\n</code></pre>\n<p>It seems like TensorArray scatter is slower than tensor scatter on CPU, and it is much slower on GPU.</p>\n<p>By the way, the timeline on GPU is like:<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/7380587/40897557-4f5f2e2e-67ee-11e8-82ba-298c6c74241d.png\"><img src=\"https://user-images.githubusercontent.com/7380587/40897557-4f5f2e2e-67ee-11e8-82ba-298c6c74241d.png\" alt=\"image\" style=\"max-width:100%;\"></a></p>\n<p>Is it intrinsic for TensorArray or not?<br>\nCan it be optimized further?</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04\nTensorFlow installed from (source or binary): source\nTensorFlow version (use command below): 'v1.8.0-7-g3b85959' 1.8.0\nPython version: 3.5\nBazel version (if compiling from source): 0.13.1\nGCC/Compiler version (if compiling from source): 4.9.3\nCUDA/cuDNN version: 9.0/7\nGPU model and memory: TITAN X (Pascal) 12GB\nExact command to reproduce:\n\nDescribe the problem\nHi, I've found TensorArrayScatterV3 op to be the bottleneck of my model, and it seems like TensorArray.scatter is really slow on GPU.\nI compared 'tf.TensorArray.scatter' with tf.scatter_update on CPU/GPU, with the following code:\nimport time\nimport tensorflow as tf\n\nwith tf.device('/gpu:0'):\n    t = tf.Variable(tf.random_normal([100000, 100]))\n    ta = tf.TensorArray(tf.float32, size=100000, element_shape=[100])\n    perm = tf.random_shuffle(tf.range(100000, dtype=tf.int32))\n    for i in range(1000):\n        idx = perm[i*100: (i+1)*100]\n        v = tf.random_normal([100, 100])\n        t = tf.scatter_update(t, idx, v)\n        ta = ta.scatter(idx, v)\n    o1 = tf.gather(t, idx[:10])\n    o2 = ta.gather(idx[:10])\n\nsess_config = tf.ConfigProto()\nsess_config.allow_soft_placement = True\nsess = tf.Session(config=sess_config)\nsess.run([tf.global_variables_initializer()])\n\ntotal_time_tensor_scatter = 0.\ntotal_time_tensorarray_scatter = 0.\nfor i in range(100):\n    start_time = time.time()\n    sess.run([o1])\n    total_time_tensor_scatter += time.time() - start_time\n    start_time = time.time()\n    sess.run([o2])\n    total_time_tensorarray_scatter += time.time() - start_time\nprint('total_time_tensor_scatter', total_time_tensor_scatter)\nprint('total_time_tensorarray_scatter', total_time_tensorarray_scatter)\n\nThe results are like:\nOn CPU:\ntotal_time_tensor_scatter 8.333731889724731\ntotal_time_tensorarray_scatter 19.28065252304077\n\nOn GPU:\ntotal_time_tensor_scatter 8.216091632843018\ntotal_time_tensorarray_scatter 82.21394562721252\n\nIt seems like TensorArray scatter is slower than tensor scatter on CPU, and it is much slower on GPU.\nBy the way, the timeline on GPU is like:\n\nIs it intrinsic for TensorArray or not?\nCan it be optimized further?", "body": "\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: 'v1.8.0-7-g3b85959' 1.8.0\r\n- **Python version**: 3.5\r\n- **Bazel version (if compiling from source)**: 0.13.1\r\n- **GCC/Compiler version (if compiling from source)**: 4.9.3\r\n- **CUDA/cuDNN version**: 9.0/7\r\n- **GPU model and memory**: TITAN X (Pascal) 12GB\r\n- **Exact command to reproduce**:\r\n\r\n### Describe the problem\r\nHi, I've found `TensorArrayScatterV3` op to be the bottleneck of my model, and it seems like TensorArray.scatter is really slow on GPU.\r\nI compared 'tf.TensorArray.scatter' with `tf.scatter_update` on CPU/GPU, with the following code:\r\n```\r\nimport time\r\nimport tensorflow as tf\r\n\r\nwith tf.device('/gpu:0'):\r\n    t = tf.Variable(tf.random_normal([100000, 100]))\r\n    ta = tf.TensorArray(tf.float32, size=100000, element_shape=[100])\r\n    perm = tf.random_shuffle(tf.range(100000, dtype=tf.int32))\r\n    for i in range(1000):\r\n        idx = perm[i*100: (i+1)*100]\r\n        v = tf.random_normal([100, 100])\r\n        t = tf.scatter_update(t, idx, v)\r\n        ta = ta.scatter(idx, v)\r\n    o1 = tf.gather(t, idx[:10])\r\n    o2 = ta.gather(idx[:10])\r\n\r\nsess_config = tf.ConfigProto()\r\nsess_config.allow_soft_placement = True\r\nsess = tf.Session(config=sess_config)\r\nsess.run([tf.global_variables_initializer()])\r\n\r\ntotal_time_tensor_scatter = 0.\r\ntotal_time_tensorarray_scatter = 0.\r\nfor i in range(100):\r\n    start_time = time.time()\r\n    sess.run([o1])\r\n    total_time_tensor_scatter += time.time() - start_time\r\n    start_time = time.time()\r\n    sess.run([o2])\r\n    total_time_tensorarray_scatter += time.time() - start_time\r\nprint('total_time_tensor_scatter', total_time_tensor_scatter)\r\nprint('total_time_tensorarray_scatter', total_time_tensorarray_scatter)\r\n```\r\nThe results are like:\r\nOn CPU:\r\n```\r\ntotal_time_tensor_scatter 8.333731889724731\r\ntotal_time_tensorarray_scatter 19.28065252304077\r\n```\r\nOn GPU:\r\n```\r\ntotal_time_tensor_scatter 8.216091632843018\r\ntotal_time_tensorarray_scatter 82.21394562721252\r\n```\r\nIt seems like TensorArray scatter is slower than tensor scatter on CPU, and it is much slower on GPU.\r\n\r\nBy the way, the timeline on GPU is like:\r\n![image](https://user-images.githubusercontent.com/7380587/40897557-4f5f2e2e-67ee-11e8-82ba-298c6c74241d.png)\r\n\r\nIs it intrinsic for TensorArray or not?\r\nCan it be optimized further?"}