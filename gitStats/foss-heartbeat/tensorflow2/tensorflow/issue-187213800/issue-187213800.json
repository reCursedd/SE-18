{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5389", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5389/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5389/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5389/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/5389", "id": 187213800, "node_id": "MDU6SXNzdWUxODcyMTM4MDA=", "number": 5389, "title": "[minor enhancement] Absolute vs. Relative import", "user": {"login": "zafartahirov", "id": 4216323, "node_id": "MDQ6VXNlcjQyMTYzMjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/4216323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zafartahirov", "html_url": "https://github.com/zafartahirov", "followers_url": "https://api.github.com/users/zafartahirov/followers", "following_url": "https://api.github.com/users/zafartahirov/following{/other_user}", "gists_url": "https://api.github.com/users/zafartahirov/gists{/gist_id}", "starred_url": "https://api.github.com/users/zafartahirov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zafartahirov/subscriptions", "organizations_url": "https://api.github.com/users/zafartahirov/orgs", "repos_url": "https://api.github.com/users/zafartahirov/repos", "events_url": "https://api.github.com/users/zafartahirov/events{/privacy}", "received_events_url": "https://api.github.com/users/zafartahirov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-11-03T23:05:48Z", "updated_at": "2016-11-03T23:48:47Z", "closed_at": "2016-11-03T23:20:28Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I am raising a question if absolute imports should be changed to relative -- even if not in all the files, but at least in the files that have to be grouped together.<br>\nAccording to <a href=\"https://www.python.org/dev/peps/pep-0328/#rationale-for-relative-imports\" rel=\"nofollow\">PEP 328</a>:</p>\n<blockquote>\n<p>... the most important [usage case ...] is being able to rearrange the structure of large packages without having to edit sub-packages. In addition, a module inside a package can't easily import itself without relative imports.</p>\n</blockquote>\n<p>I understand that absolute imports help avoid \"shadowing\" of the modules/methods with the same names, but if the naming convention of the relative imports is enforced to be protected (<code>_name</code>), the problem could be mitigated.</p>", "body_text": "I am raising a question if absolute imports should be changed to relative -- even if not in all the files, but at least in the files that have to be grouped together.\nAccording to PEP 328:\n\n... the most important [usage case ...] is being able to rearrange the structure of large packages without having to edit sub-packages. In addition, a module inside a package can't easily import itself without relative imports.\n\nI understand that absolute imports help avoid \"shadowing\" of the modules/methods with the same names, but if the naming convention of the relative imports is enforced to be protected (_name), the problem could be mitigated.", "body": "I am raising a question if absolute imports should be changed to relative -- even if not in all the files, but at least in the files that have to be grouped together.\r\nAccording to [PEP 328](https://www.python.org/dev/peps/pep-0328/#rationale-for-relative-imports):\r\n> ... the most important [usage case ...] is being able to rearrange the structure of large packages without having to edit sub-packages. In addition, a module inside a package can't easily import itself without relative imports.\r\n\r\nI understand that absolute imports help avoid \"shadowing\" of the modules/methods with the same names, but if the naming convention of the relative imports is enforced to be protected (`_name`), the problem could be mitigated."}