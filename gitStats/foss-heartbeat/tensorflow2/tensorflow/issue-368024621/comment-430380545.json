{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/430380545", "html_url": "https://github.com/tensorflow/tensorflow/issues/22825#issuecomment-430380545", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22825", "id": 430380545, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDM4MDU0NQ==", "user": {"login": "wt-huang", "id": 42785337, "node_id": "MDQ6VXNlcjQyNzg1MzM3", "avatar_url": "https://avatars0.githubusercontent.com/u/42785337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wt-huang", "html_url": "https://github.com/wt-huang", "followers_url": "https://api.github.com/users/wt-huang/followers", "following_url": "https://api.github.com/users/wt-huang/following{/other_user}", "gists_url": "https://api.github.com/users/wt-huang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wt-huang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wt-huang/subscriptions", "organizations_url": "https://api.github.com/users/wt-huang/orgs", "repos_url": "https://api.github.com/users/wt-huang/repos", "events_url": "https://api.github.com/users/wt-huang/events{/privacy}", "received_events_url": "https://api.github.com/users/wt-huang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-16T20:03:20Z", "updated_at": "2018-10-16T20:03:20Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1018780\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vipinpillai\">@vipinpillai</a> <code>tf.gradients(cross_entropy_mean, arg1)</code> returns the gradient of cross_entropy_mean with respect to each tensor in arg1. You would need to define the shape for arg1 such that its elements are included in <code>cross_entropy_mean</code>. Also, the LHS should match with the arg1 shape as well.</p>\n<p>After fixing <code>tf.gradients(cross_entropy_mean, arg1)</code>, you should be able to use <code>tf.nn.lrn</code> to get the gradient for lrn as per PR <a href=\"https://github.com/tensorflow/tensorflow/pull/13987\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/tensorflow/tensorflow/pull/13987/hovercard\">13987</a>.</p>", "body_text": "@vipinpillai tf.gradients(cross_entropy_mean, arg1) returns the gradient of cross_entropy_mean with respect to each tensor in arg1. You would need to define the shape for arg1 such that its elements are included in cross_entropy_mean. Also, the LHS should match with the arg1 shape as well.\nAfter fixing tf.gradients(cross_entropy_mean, arg1), you should be able to use tf.nn.lrn to get the gradient for lrn as per PR 13987.", "body": "@vipinpillai `tf.gradients(cross_entropy_mean, arg1)` returns the gradient of cross_entropy_mean with respect to each tensor in arg1. You would need to define the shape for arg1 such that its elements are included in `cross_entropy_mean`. Also, the LHS should match with the arg1 shape as well.\r\n\r\nAfter fixing `tf.gradients(cross_entropy_mean, arg1)`, you should be able to use `tf.nn.lrn` to get the gradient for lrn as per PR [13987](https://github.com/tensorflow/tensorflow/pull/13987). "}