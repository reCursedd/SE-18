{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7452", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7452/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7452/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7452/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/7452", "id": 207043331, "node_id": "MDU6SXNzdWUyMDcwNDMzMzE=", "number": 7452, "title": "Bugs in TensorFlowYoloDetector", "user": {"login": "AndreyRub", "id": 10506299, "node_id": "MDQ6VXNlcjEwNTA2Mjk5", "avatar_url": "https://avatars0.githubusercontent.com/u/10506299?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreyRub", "html_url": "https://github.com/AndreyRub", "followers_url": "https://api.github.com/users/AndreyRub/followers", "following_url": "https://api.github.com/users/AndreyRub/following{/other_user}", "gists_url": "https://api.github.com/users/AndreyRub/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreyRub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreyRub/subscriptions", "organizations_url": "https://api.github.com/users/AndreyRub/orgs", "repos_url": "https://api.github.com/users/AndreyRub/repos", "events_url": "https://api.github.com/users/AndreyRub/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreyRub/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "andrewharp", "id": 3376817, "node_id": "MDQ6VXNlcjMzNzY4MTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/3376817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewharp", "html_url": "https://github.com/andrewharp", "followers_url": "https://api.github.com/users/andrewharp/followers", "following_url": "https://api.github.com/users/andrewharp/following{/other_user}", "gists_url": "https://api.github.com/users/andrewharp/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewharp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewharp/subscriptions", "organizations_url": "https://api.github.com/users/andrewharp/orgs", "repos_url": "https://api.github.com/users/andrewharp/repos", "events_url": "https://api.github.com/users/andrewharp/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewharp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "andrewharp", "id": 3376817, "node_id": "MDQ6VXNlcjMzNzY4MTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/3376817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewharp", "html_url": "https://github.com/andrewharp", "followers_url": "https://api.github.com/users/andrewharp/followers", "following_url": "https://api.github.com/users/andrewharp/following{/other_user}", "gists_url": "https://api.github.com/users/andrewharp/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewharp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewharp/subscriptions", "organizations_url": "https://api.github.com/users/andrewharp/orgs", "repos_url": "https://api.github.com/users/andrewharp/repos", "events_url": "https://api.github.com/users/andrewharp/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewharp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2017-02-12T11:04:20Z", "updated_at": "2017-02-14T03:19:52Z", "closed_at": "2017-02-14T03:19:52Z", "author_association": "NONE", "body_html": "<h3>What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?</h3>\n<p>None</p>\n<h3>Environment info</h3>\n<p>Operating System: Windows 10</p>\n<p>Installed version of CUDA and cuDNN:<br>\n(please attach the output of <code>ls -l /path/to/cuda/lib/libcud*</code>):<br>\nC:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v8.0</p>\n<p>If installed from source, provide</p>\n<ol>\n<li>The commit hash (<code>git rev-parse HEAD</code>)<br>\n<a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/099ef38a99d069b9a1f6d09a289b2df69eaee276/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/099ef38a99d069b9a1f6d09a289b2df69eaee276\"><tt>099ef38</tt></a></li>\n<li>The output of <code>bazel version</code><br>\nBuild label: 0.4.2<br>\nBuild target: bazel-out/local-fastbuild/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar<br>\nBuild time: Wed Dec 7 18:47:13 2016 (1481136433)<br>\nBuild timestamp: 1481136433<br>\nBuild timestamp as int: 1481136433</li>\n</ol>\n<hr>\n<p>It looks like there are bugs in <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/android/src/org/tensorflow/demo/TensorFlowYoloDetector.java\">TensorfFlowYoloDetector</a>.</p>\n<ol>\n<li><strong>The confidence calculation is broken</strong><br>\nIn line 218:</li>\n</ol>\n<p><code> final float confidence = output[offset + 4];</code></p>\n<p>Should be</p>\n<p><code> final float confidence = expit( output[offset + 4] );</code></p>\n<p>You can see line 42 at <a href=\"https://github.com/thtrieu/darkflow/blob/master/net/yolov2/test.py\">DarkFlow file</a></p>\n<ol start=\"2\">\n<li><strong>The RGB values might be read as BGR in line 152:</strong></li>\n</ol>\n<pre><code>    for (int i = 0; i &lt; intValues.length; ++i) {\n      floatValues[i * 3 + 0] = (intValues[i] &amp; 0xFF) / 255.0f;\n      floatValues[i * 3 + 1] = ((intValues[i] &gt;&gt; 8) &amp; 0xFF) / 255.0f;\n      floatValues[i * 3 + 2] = ((intValues[i] &gt;&gt; 16) &amp; 0xFF) / 255.0f;\n    }\n</code></pre>\n<p>Unless there is a bug in DarkFlow, in order to have the same results, one must change to:</p>\n<pre><code>    for (int i = 0; i &lt; intValues.length; ++i) {\n      floatValues[i * 3 + 2] = (intValues[i] &amp; 0xFF) / 255.0f;\n      floatValues[i * 3 + 1] = ((intValues[i] &gt;&gt; 8) &amp; 0xFF) / 255.0f;\n      floatValues[i * 3 + 0] = ((intValues[i] &gt;&gt; 16) &amp; 0xFF) / 255.0f;\n    }\n</code></pre>\n<ol start=\"3\">\n<li><strong>The NMS calculation is completely different from DarkFlow and DarkNet</strong><br>\nSee line 242, it just return top K results, without any non-maximum suppression</li>\n</ol>\n<p>Here is the code from the file:</p>\n<pre><code>    final ArrayList&lt;Recognition&gt; recognitions = new ArrayList&lt;Recognition&gt;();\n    for (int i = 0; i &lt; Math.min(pq.size(), MAX_RESULTS); ++i) {\n      recognitions.add(pq.poll());\n    }\n</code></pre>\n<p>Here is the correct code from <a href=\"https://github.com/thtrieu/darkflow/blob/master/net/yolov2/test.py\">DarkFlow, line 52</a>:</p>\n<pre><code>\t# non max suppress boxes\n\tfor c in range(C):\n\t\tfor i in range(len(boxes)):\n\t\t\tboxes[i].class_num = c\n\t\tboxes = sorted(boxes, key = prob_compare)\n\t\tfor i in range(len(boxes)):\n\t\t\tboxi = boxes[i]\n\t\t\tif boxi.probs[c] == 0: continue\n\t\t\tfor j in range(i + 1, len(boxes)):\n\t\t\t\tboxj = boxes[j]\n\t\t\t\tif box_iou(boxi, boxj) &gt;= .4:\n\t\t\t\t\tboxes[j].probs[c] = 0.\n</code></pre>", "body_text": "What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?\nNone\nEnvironment info\nOperating System: Windows 10\nInstalled version of CUDA and cuDNN:\n(please attach the output of ls -l /path/to/cuda/lib/libcud*):\nC:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v8.0\nIf installed from source, provide\n\nThe commit hash (git rev-parse HEAD)\n099ef38\nThe output of bazel version\nBuild label: 0.4.2\nBuild target: bazel-out/local-fastbuild/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar\nBuild time: Wed Dec 7 18:47:13 2016 (1481136433)\nBuild timestamp: 1481136433\nBuild timestamp as int: 1481136433\n\n\nIt looks like there are bugs in TensorfFlowYoloDetector.\n\nThe confidence calculation is broken\nIn line 218:\n\n final float confidence = output[offset + 4];\nShould be\n final float confidence = expit( output[offset + 4] );\nYou can see line 42 at DarkFlow file\n\nThe RGB values might be read as BGR in line 152:\n\n    for (int i = 0; i < intValues.length; ++i) {\n      floatValues[i * 3 + 0] = (intValues[i] & 0xFF) / 255.0f;\n      floatValues[i * 3 + 1] = ((intValues[i] >> 8) & 0xFF) / 255.0f;\n      floatValues[i * 3 + 2] = ((intValues[i] >> 16) & 0xFF) / 255.0f;\n    }\n\nUnless there is a bug in DarkFlow, in order to have the same results, one must change to:\n    for (int i = 0; i < intValues.length; ++i) {\n      floatValues[i * 3 + 2] = (intValues[i] & 0xFF) / 255.0f;\n      floatValues[i * 3 + 1] = ((intValues[i] >> 8) & 0xFF) / 255.0f;\n      floatValues[i * 3 + 0] = ((intValues[i] >> 16) & 0xFF) / 255.0f;\n    }\n\n\nThe NMS calculation is completely different from DarkFlow and DarkNet\nSee line 242, it just return top K results, without any non-maximum suppression\n\nHere is the code from the file:\n    final ArrayList<Recognition> recognitions = new ArrayList<Recognition>();\n    for (int i = 0; i < Math.min(pq.size(), MAX_RESULTS); ++i) {\n      recognitions.add(pq.poll());\n    }\n\nHere is the correct code from DarkFlow, line 52:\n\t# non max suppress boxes\n\tfor c in range(C):\n\t\tfor i in range(len(boxes)):\n\t\t\tboxes[i].class_num = c\n\t\tboxes = sorted(boxes, key = prob_compare)\n\t\tfor i in range(len(boxes)):\n\t\t\tboxi = boxes[i]\n\t\t\tif boxi.probs[c] == 0: continue\n\t\t\tfor j in range(i + 1, len(boxes)):\n\t\t\t\tboxj = boxes[j]\n\t\t\t\tif box_iou(boxi, boxj) >= .4:\n\t\t\t\t\tboxes[j].probs[c] = 0.", "body": "### What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?\r\nNone\r\n\r\n### Environment info\r\nOperating System: Windows 10\r\n\r\nInstalled version of CUDA and cuDNN: \r\n(please attach the output of `ls -l /path/to/cuda/lib/libcud*`):\r\nC:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v8.0\r\n\r\nIf installed from source, provide \r\n\r\n1. The commit hash (`git rev-parse HEAD`)\r\n099ef38a99d069b9a1f6d09a289b2df69eaee276\r\n2. The output of `bazel version`\r\nBuild label: 0.4.2\r\nBuild target: bazel-out/local-fastbuild/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar\r\nBuild time: Wed Dec 7 18:47:13 2016 (1481136433)\r\nBuild timestamp: 1481136433\r\nBuild timestamp as int: 1481136433\r\n\r\n----\r\nIt looks like there are bugs in [TensorfFlowYoloDetector](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/android/src/org/tensorflow/demo/TensorFlowYoloDetector.java).\r\n\r\n1. **The confidence calculation is broken**\r\nIn line 218: \r\n\r\n` final float confidence = output[offset + 4];`\r\n\r\nShould be \r\n\r\n` final float confidence = expit( output[offset + 4] );`\r\n\r\nYou can see line 42 at [DarkFlow file](https://github.com/thtrieu/darkflow/blob/master/net/yolov2/test.py)\r\n\r\n2. **The RGB values might be read as BGR in line 152:**\r\n```\r\n    for (int i = 0; i < intValues.length; ++i) {\r\n      floatValues[i * 3 + 0] = (intValues[i] & 0xFF) / 255.0f;\r\n      floatValues[i * 3 + 1] = ((intValues[i] >> 8) & 0xFF) / 255.0f;\r\n      floatValues[i * 3 + 2] = ((intValues[i] >> 16) & 0xFF) / 255.0f;\r\n    }\r\n```\r\n\r\nUnless there is a bug in DarkFlow, in order to have the same results, one must change to:\r\n```\r\n    for (int i = 0; i < intValues.length; ++i) {\r\n      floatValues[i * 3 + 2] = (intValues[i] & 0xFF) / 255.0f;\r\n      floatValues[i * 3 + 1] = ((intValues[i] >> 8) & 0xFF) / 255.0f;\r\n      floatValues[i * 3 + 0] = ((intValues[i] >> 16) & 0xFF) / 255.0f;\r\n    }\r\n```\r\n\r\n3. **The NMS calculation is completely different from DarkFlow and DarkNet**\r\nSee line 242, it just return top K results, without any non-maximum suppression\r\n\r\nHere is the code from the file:\r\n```\r\n    final ArrayList<Recognition> recognitions = new ArrayList<Recognition>();\r\n    for (int i = 0; i < Math.min(pq.size(), MAX_RESULTS); ++i) {\r\n      recognitions.add(pq.poll());\r\n    }\r\n```\r\n\r\n\r\nHere is the correct code from [DarkFlow, line 52](https://github.com/thtrieu/darkflow/blob/master/net/yolov2/test.py):\r\n```\r\n\t# non max suppress boxes\r\n\tfor c in range(C):\r\n\t\tfor i in range(len(boxes)):\r\n\t\t\tboxes[i].class_num = c\r\n\t\tboxes = sorted(boxes, key = prob_compare)\r\n\t\tfor i in range(len(boxes)):\r\n\t\t\tboxi = boxes[i]\r\n\t\t\tif boxi.probs[c] == 0: continue\r\n\t\t\tfor j in range(i + 1, len(boxes)):\r\n\t\t\t\tboxj = boxes[j]\r\n\t\t\t\tif box_iou(boxi, boxj) >= .4:\r\n\t\t\t\t\tboxes[j].probs[c] = 0.\r\n```"}