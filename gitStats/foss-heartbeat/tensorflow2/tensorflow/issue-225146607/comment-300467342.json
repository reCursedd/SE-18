{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/300467342", "html_url": "https://github.com/tensorflow/tensorflow/issues/9517#issuecomment-300467342", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9517", "id": 300467342, "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDQ2NzM0Mg==", "user": {"login": "jhaux", "id": 9572598, "node_id": "MDQ6VXNlcjk1NzI1OTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/9572598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhaux", "html_url": "https://github.com/jhaux", "followers_url": "https://api.github.com/users/jhaux/followers", "following_url": "https://api.github.com/users/jhaux/following{/other_user}", "gists_url": "https://api.github.com/users/jhaux/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhaux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhaux/subscriptions", "organizations_url": "https://api.github.com/users/jhaux/orgs", "repos_url": "https://api.github.com/users/jhaux/repos", "events_url": "https://api.github.com/users/jhaux/events{/privacy}", "received_events_url": "https://api.github.com/users/jhaux/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-10T12:31:29Z", "updated_at": "2017-05-10T12:31:29Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Hey everybody,</p>\n<p>Any news on this topic?<br>\nI would be happy to supply a pull request, but I am not sure, my extensions of the code meet possible guidelines. Also I am not sure if my testing was sufficient. If you want you can have a look at <a href=\"https://github.com/jhaux/tensorflow/blob/master/tensorflow/contrib/layers/python/layers/layers.py\">my fork of the tensorflow repository</a>, where the changes can be found in all layers and getters, where I thought the <code>variable_device</code> keyword might make sense, e.g. where variables are created or fetched. Those include:</p>\n<ul>\n<li><code>bias_add</code></li>\n<li><code>convolution</code></li>\n<li><code>convolution2d_in_plane</code></li>\n<li><code>convolution2d_transpose</code></li>\n<li><code>_model_variable_getter</code></li>\n<li><code>_build_variable_getter</code></li>\n<li><code>fully_connected</code></li>\n<li><code>separable_convolution2d</code></li>\n</ul>\n<p>The changes should be backward compatible as only kwargs with default values = <code>None</code> are used.<br>\nI also added Documentation in the docstring:<br>\n<code>variable_device: Device where the variables of the layer (e.g. weights and biases) should be placed, e.g. /cpu:0</code></p>\n<p>I think this approach is more intuitive than using a <code>variable_scope</code> with a <code>custom getter</code>.</p>", "body_text": "Hey everybody,\nAny news on this topic?\nI would be happy to supply a pull request, but I am not sure, my extensions of the code meet possible guidelines. Also I am not sure if my testing was sufficient. If you want you can have a look at my fork of the tensorflow repository, where the changes can be found in all layers and getters, where I thought the variable_device keyword might make sense, e.g. where variables are created or fetched. Those include:\n\nbias_add\nconvolution\nconvolution2d_in_plane\nconvolution2d_transpose\n_model_variable_getter\n_build_variable_getter\nfully_connected\nseparable_convolution2d\n\nThe changes should be backward compatible as only kwargs with default values = None are used.\nI also added Documentation in the docstring:\nvariable_device: Device where the variables of the layer (e.g. weights and biases) should be placed, e.g. /cpu:0\nI think this approach is more intuitive than using a variable_scope with a custom getter.", "body": "Hey everybody,\r\n\r\nAny news on this topic? \r\nI would be happy to supply a pull request, but I am not sure, my extensions of the code meet possible guidelines. Also I am not sure if my testing was sufficient. If you want you can have a look at [my fork of the tensorflow repository](https://github.com/jhaux/tensorflow/blob/master/tensorflow/contrib/layers/python/layers/layers.py), where the changes can be found in all layers and getters, where I thought the `variable_device` keyword might make sense, e.g. where variables are created or fetched. Those include:\r\n\r\n- `bias_add`\r\n- `convolution`\r\n- `convolution2d_in_plane`\r\n- `convolution2d_transpose`\r\n- `_model_variable_getter`\r\n- `_build_variable_getter`\r\n- `fully_connected`\r\n- `separable_convolution2d`\r\n\r\nThe changes should be backward compatible as only kwargs with default values = `None` are used.\r\nI also added Documentation in the docstring:\r\n`variable_device: Device where the variables of the layer (e.g. weights and biases) should be placed, e.g. /cpu:0`\r\n\r\nI think this approach is more intuitive than using a `variable_scope` with a `custom getter`."}