{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/314656331", "html_url": "https://github.com/tensorflow/tensorflow/issues/11427#issuecomment-314656331", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11427", "id": 314656331, "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDY1NjMzMQ==", "user": {"login": "lakshayg", "id": 7976315, "node_id": "MDQ6VXNlcjc5NzYzMTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/7976315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lakshayg", "html_url": "https://github.com/lakshayg", "followers_url": "https://api.github.com/users/lakshayg/followers", "following_url": "https://api.github.com/users/lakshayg/following{/other_user}", "gists_url": "https://api.github.com/users/lakshayg/gists{/gist_id}", "starred_url": "https://api.github.com/users/lakshayg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lakshayg/subscriptions", "organizations_url": "https://api.github.com/users/lakshayg/orgs", "repos_url": "https://api.github.com/users/lakshayg/repos", "events_url": "https://api.github.com/users/lakshayg/events{/privacy}", "received_events_url": "https://api.github.com/users/lakshayg/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-12T05:47:34Z", "updated_at": "2017-07-12T05:47:34Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I tried this code snippet and it works perfectly fine on my machine with tf v1.2.1. Let me know if I'm missing something.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\nA <span class=\"pl-k\">=</span> tf.constant([[<span class=\"pl-c1\">0.1</span>, <span class=\"pl-c1\">0.2</span>, <span class=\"pl-c1\">0.5</span>], [<span class=\"pl-c1\">0.3</span>, <span class=\"pl-c1\">0.1</span>, <span class=\"pl-c1\">0.2</span>]])\nA <span class=\"pl-k\">=</span> tf.nn.softmax(A)\n\npenalize <span class=\"pl-k\">=</span> tf.matmul(A, tf.transpose(A)) <span class=\"pl-k\">-</span> tf.diag(tf.ones(<span class=\"pl-c1\">2</span>))\nresult1 <span class=\"pl-k\">=</span> tf.reduce_sum(tf.square(penalize))\nresult2 <span class=\"pl-k\">=</span> tf.square(tf.norm(penalize))\n\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n    <span class=\"pl-c1\">print</span>(sess.run(result1))\n    <span class=\"pl-c1\">print</span>(sess.run(result2))</pre></div>\n<p>When I said that you should prefer tf.reduce_sum(...) over tf.square(...), I meant that you should prefer <code>result = tf.reduce_sum(tf.square(penalize))</code> over <code>result = tf.square(tf.norm(penalize))</code></p>", "body_text": "I tried this code snippet and it works perfectly fine on my machine with tf v1.2.1. Let me know if I'm missing something.\nimport tensorflow as tf\n\nA = tf.constant([[0.1, 0.2, 0.5], [0.3, 0.1, 0.2]])\nA = tf.nn.softmax(A)\n\npenalize = tf.matmul(A, tf.transpose(A)) - tf.diag(tf.ones(2))\nresult1 = tf.reduce_sum(tf.square(penalize))\nresult2 = tf.square(tf.norm(penalize))\n\nwith tf.Session() as sess:\n    print(sess.run(result1))\n    print(sess.run(result2))\nWhen I said that you should prefer tf.reduce_sum(...) over tf.square(...), I meant that you should prefer result = tf.reduce_sum(tf.square(penalize)) over result = tf.square(tf.norm(penalize))", "body": "I tried this code snippet and it works perfectly fine on my machine with tf v1.2.1. Let me know if I'm missing something.\r\n\r\n```python\r\nimport tensorflow as tf\r\n\r\nA = tf.constant([[0.1, 0.2, 0.5], [0.3, 0.1, 0.2]])\r\nA = tf.nn.softmax(A)\r\n\r\npenalize = tf.matmul(A, tf.transpose(A)) - tf.diag(tf.ones(2))\r\nresult1 = tf.reduce_sum(tf.square(penalize))\r\nresult2 = tf.square(tf.norm(penalize))\r\n\r\nwith tf.Session() as sess:\r\n    print(sess.run(result1))\r\n    print(sess.run(result2))\r\n```\r\n\r\nWhen I said that you should prefer tf.reduce_sum(...) over tf.square(...), I meant that you should prefer `result = tf.reduce_sum(tf.square(penalize))` over `result = tf.square(tf.norm(penalize))`"}