{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8801", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8801/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8801/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8801/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/8801", "id": 217851620, "node_id": "MDU6SXNzdWUyMTc4NTE2MjA=", "number": 8801, "title": "[Tensorflow]RuntimeError: Graph is finalized and cannot be modified.", "user": {"login": "pengjingg", "id": 25976861, "node_id": "MDQ6VXNlcjI1OTc2ODYx", "avatar_url": "https://avatars3.githubusercontent.com/u/25976861?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pengjingg", "html_url": "https://github.com/pengjingg", "followers_url": "https://api.github.com/users/pengjingg/followers", "following_url": "https://api.github.com/users/pengjingg/following{/other_user}", "gists_url": "https://api.github.com/users/pengjingg/gists{/gist_id}", "starred_url": "https://api.github.com/users/pengjingg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pengjingg/subscriptions", "organizations_url": "https://api.github.com/users/pengjingg/orgs", "repos_url": "https://api.github.com/users/pengjingg/repos", "events_url": "https://api.github.com/users/pengjingg/events{/privacy}", "received_events_url": "https://api.github.com/users/pengjingg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473184161, "node_id": "MDU6TGFiZWw0NzMxODQxNjE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:support", "name": "type:support", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-29T11:55:21Z", "updated_at": "2017-03-30T19:27:27Z", "closed_at": "2017-03-30T19:27:25Z", "author_association": "NONE", "body_html": "<h3>Environment info</h3>\n<p>Operating System:<br>\nUbuntu 14.04<br>\ncuda 8.0 + cudnn 5.1</p>\n<p>I'm running a Cifar-10 tutorial from [https://www.tensorflow.org/tutorials/deep_cnn]<br>\nAnd I modified the code a lot.<br>\nSpecifically, I want the model can evaluate simultaneously while training, thus I can get a curve of precision. And I don't have ideal how the cifar10_eval.py and checkpoints work out. So I added an evaluation function to train( ) in cifar10_train.py, and I tried to run the evaluation function every 100 global_step. And then I got this:</p>\n<pre><code>    RuntimeError: Graph is finalized and cannot be modified.\n</code></pre>\n<p>Here is my evaluation function in cifar10.py:</p>\n<pre><code>  def evaluation():\n    images_e, labels_e = inputs(eval_data=True)\n    logits_e = inference(images_e)\n    correct_pred = tf.equal(tf.argmax(logits_e, 1), tf.argmax(labels_e, 1))\n    accuracy = tf.reduce_mean(tf.cast(correct_pred, tf.float32))\n    print('%s: accuracy @ 1 = %.3f' % (datetime.now(), accuracy))\n    tf.summary.scalar('accuracy', accuracy)\n</code></pre>\n<p>And here is the call (the last few lines) :</p>\n<pre><code>   def after_run(self, run_context, run_values):\n    if self._step % FLAGS.log_frequency == 0:\n      current_time = time.time()\n      duration = current_time - self._start_time\n      self._start_time = current_time\n\n      loss_value = run_values.results\n      examples_per_sec = FLAGS.log_frequency * FLAGS.batch_size / duration\n      sec_per_batch = float(duration / FLAGS.log_frequency)\n\n      format_str = ('%s: step %d, loss = %.2f (%.1f examples/sec; %.3f '\n                    'sec/batch)')\n      print (format_str % (datetime.now(), self._step, loss_value,\n                           examples_per_sec, sec_per_batch))\n    if self._step % EVAL_STEP == 0: \n      print('evaluation\\n')\n      cifar10.evaluation()\n</code></pre>\n<p>I don't know how to solve it. I do searched the Internet before but there is no similar situation. Is this caused by I called inference() twice in one global_step or else? Any suggestions would be helpful. Thank you!</p>", "body_text": "Environment info\nOperating System:\nUbuntu 14.04\ncuda 8.0 + cudnn 5.1\nI'm running a Cifar-10 tutorial from [https://www.tensorflow.org/tutorials/deep_cnn]\nAnd I modified the code a lot.\nSpecifically, I want the model can evaluate simultaneously while training, thus I can get a curve of precision. And I don't have ideal how the cifar10_eval.py and checkpoints work out. So I added an evaluation function to train( ) in cifar10_train.py, and I tried to run the evaluation function every 100 global_step. And then I got this:\n    RuntimeError: Graph is finalized and cannot be modified.\n\nHere is my evaluation function in cifar10.py:\n  def evaluation():\n    images_e, labels_e = inputs(eval_data=True)\n    logits_e = inference(images_e)\n    correct_pred = tf.equal(tf.argmax(logits_e, 1), tf.argmax(labels_e, 1))\n    accuracy = tf.reduce_mean(tf.cast(correct_pred, tf.float32))\n    print('%s: accuracy @ 1 = %.3f' % (datetime.now(), accuracy))\n    tf.summary.scalar('accuracy', accuracy)\n\nAnd here is the call (the last few lines) :\n   def after_run(self, run_context, run_values):\n    if self._step % FLAGS.log_frequency == 0:\n      current_time = time.time()\n      duration = current_time - self._start_time\n      self._start_time = current_time\n\n      loss_value = run_values.results\n      examples_per_sec = FLAGS.log_frequency * FLAGS.batch_size / duration\n      sec_per_batch = float(duration / FLAGS.log_frequency)\n\n      format_str = ('%s: step %d, loss = %.2f (%.1f examples/sec; %.3f '\n                    'sec/batch)')\n      print (format_str % (datetime.now(), self._step, loss_value,\n                           examples_per_sec, sec_per_batch))\n    if self._step % EVAL_STEP == 0: \n      print('evaluation\\n')\n      cifar10.evaluation()\n\nI don't know how to solve it. I do searched the Internet before but there is no similar situation. Is this caused by I called inference() twice in one global_step or else? Any suggestions would be helpful. Thank you!", "body": "### Environment info\r\nOperating System:\r\nUbuntu 14.04  \r\ncuda 8.0 + cudnn 5.1\r\n\r\nI'm running a Cifar-10 tutorial from [https://www.tensorflow.org/tutorials/deep_cnn]\r\nAnd I modified the code a lot.\r\nSpecifically, I want the model can evaluate simultaneously while training, thus I can get a curve of precision. And I don't have ideal how the cifar10_eval.py and checkpoints work out. So I added an evaluation function to train( ) in cifar10_train.py, and I tried to run the evaluation function every 100 global_step. And then I got this:\r\n\r\n        RuntimeError: Graph is finalized and cannot be modified.\r\n\r\nHere is my evaluation function in cifar10.py:\r\n\r\n      def evaluation():\r\n        images_e, labels_e = inputs(eval_data=True)\r\n        logits_e = inference(images_e)\r\n        correct_pred = tf.equal(tf.argmax(logits_e, 1), tf.argmax(labels_e, 1))\r\n        accuracy = tf.reduce_mean(tf.cast(correct_pred, tf.float32))\r\n        print('%s: accuracy @ 1 = %.3f' % (datetime.now(), accuracy))\r\n        tf.summary.scalar('accuracy', accuracy)\r\n\r\nAnd here is the call (the last few lines) :\r\n\r\n       def after_run(self, run_context, run_values):\r\n        if self._step % FLAGS.log_frequency == 0:\r\n          current_time = time.time()\r\n          duration = current_time - self._start_time\r\n          self._start_time = current_time\r\n\r\n          loss_value = run_values.results\r\n          examples_per_sec = FLAGS.log_frequency * FLAGS.batch_size / duration\r\n          sec_per_batch = float(duration / FLAGS.log_frequency)\r\n\r\n          format_str = ('%s: step %d, loss = %.2f (%.1f examples/sec; %.3f '\r\n                        'sec/batch)')\r\n          print (format_str % (datetime.now(), self._step, loss_value,\r\n                               examples_per_sec, sec_per_batch))\r\n        if self._step % EVAL_STEP == 0: \r\n          print('evaluation\\n')\r\n          cifar10.evaluation()\r\n\r\nI don't know how to solve it. I do searched the Internet before but there is no similar situation. Is this caused by I called inference() twice in one global_step or else? Any suggestions would be helpful. Thank you!\r\n"}