{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/297645455", "html_url": "https://github.com/tensorflow/tensorflow/pull/7555#issuecomment-297645455", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7555", "id": 297645455, "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzY0NTQ1NQ==", "user": {"login": "thesuperzapper", "id": 5735406, "node_id": "MDQ6VXNlcjU3MzU0MDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/5735406?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thesuperzapper", "html_url": "https://github.com/thesuperzapper", "followers_url": "https://api.github.com/users/thesuperzapper/followers", "following_url": "https://api.github.com/users/thesuperzapper/following{/other_user}", "gists_url": "https://api.github.com/users/thesuperzapper/gists{/gist_id}", "starred_url": "https://api.github.com/users/thesuperzapper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thesuperzapper/subscriptions", "organizations_url": "https://api.github.com/users/thesuperzapper/orgs", "repos_url": "https://api.github.com/users/thesuperzapper/repos", "events_url": "https://api.github.com/users/thesuperzapper/events{/privacy}", "received_events_url": "https://api.github.com/users/thesuperzapper/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-27T08:15:38Z", "updated_at": "2017-04-27T08:16:08Z", "author_association": "CONTRIBUTOR", "body_html": "<p><em>Note: I added the same fix to <code>tensorflow/python/estimators/estimator.py</code>.</em></p>\n<p>This pull request simply allows us to write int-type values in the summary file.</p>\n<p>A side effect of this pull request will be <strong>writing the value of 'global_step' at 'global_step'</strong> -- a useless piece of information -- this is because 'global_step' is inside the <a href=\"https://github.com/tensorflow/tensorflow/blob/1a1527ab1fcffd94f692b1301fdbe87903ce7bdb/tensorflow/contrib/learn/python/learn/estimators/estimator.py#L841\">'eval_results'</a> &amp; <a href=\"https://github.com/tensorflow/tensorflow/blob/1a1527ab1fcffd94f692b1301fdbe87903ce7bdb/tensorflow/contrib/learn/python/learn/estimators/estimator.py#L330\">'dictionary'</a> objects, (Which would not previously have been written by <a href=\"https://github.com/tensorflow/tensorflow/blob/1a1527ab1fcffd94f692b1301fdbe87903ce7bdb/tensorflow/contrib/learn/python/learn/estimators/estimator.py#L316\"><code>_write_dict_to_summary</code></a> because 'global_step' is an int type, as seen in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"208015445\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/7554\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/7554/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/7554\">#7554</a>)</p>\n<p>Therefore, we probably should remove the 'global_step' key from the 'eval_results' dictionary. (Or filter it in <code>_write_dict_to_summary</code>), otherwise 'global_step' by 'global_step' is displayed in TensorBoard.</p>\n<p>But also note that we return the 'eval_results' dictionary in <a href=\"https://github.com/tensorflow/tensorflow/blob/1a1527ab1fcffd94f692b1301fdbe87903ce7bdb/tensorflow/contrib/learn/python/learn/estimators/estimator.py#L853\"> <code>_evaluate_model</code></a>. Therefore, I would like some advice on the best way of removing/filtering the 'global_step' key, so that we don't break this return, or refactor stuff unnecessarily.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=577277\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/martinwicke\">@martinwicke</a></p>", "body_text": "Note: I added the same fix to tensorflow/python/estimators/estimator.py.\nThis pull request simply allows us to write int-type values in the summary file.\nA side effect of this pull request will be writing the value of 'global_step' at 'global_step' -- a useless piece of information -- this is because 'global_step' is inside the 'eval_results' & 'dictionary' objects, (Which would not previously have been written by _write_dict_to_summary because 'global_step' is an int type, as seen in #7554)\nTherefore, we probably should remove the 'global_step' key from the 'eval_results' dictionary. (Or filter it in _write_dict_to_summary), otherwise 'global_step' by 'global_step' is displayed in TensorBoard.\nBut also note that we return the 'eval_results' dictionary in  _evaluate_model. Therefore, I would like some advice on the best way of removing/filtering the 'global_step' key, so that we don't break this return, or refactor stuff unnecessarily.\n@martinwicke", "body": "_Note: I added the same fix to `tensorflow/python/estimators/estimator.py`._\r\n\r\nThis pull request simply allows us to write int-type values in the summary file.\r\n\r\nA side effect of this pull request will be **writing the value of 'global_step' at 'global_step'** -- a useless piece of information -- this is because 'global_step' is inside the ['eval_results'](https://github.com/tensorflow/tensorflow/blob/1a1527ab1fcffd94f692b1301fdbe87903ce7bdb/tensorflow/contrib/learn/python/learn/estimators/estimator.py#L841) & ['dictionary'](https://github.com/tensorflow/tensorflow/blob/1a1527ab1fcffd94f692b1301fdbe87903ce7bdb/tensorflow/contrib/learn/python/learn/estimators/estimator.py#L330) objects, (Which would not previously have been written by [`_write_dict_to_summary`](https://github.com/tensorflow/tensorflow/blob/1a1527ab1fcffd94f692b1301fdbe87903ce7bdb/tensorflow/contrib/learn/python/learn/estimators/estimator.py#L316) because 'global_step' is an int type, as seen in #7554)\r\n\r\nTherefore, we probably should remove the 'global_step' key from the 'eval_results' dictionary. (Or filter it in `_write_dict_to_summary`), otherwise 'global_step' by 'global_step' is displayed in TensorBoard. \r\n\r\nBut also note that we return the 'eval_results' dictionary in [ `_evaluate_model`](https://github.com/tensorflow/tensorflow/blob/1a1527ab1fcffd94f692b1301fdbe87903ce7bdb/tensorflow/contrib/learn/python/learn/estimators/estimator.py#L853). Therefore, I would like some advice on the best way of removing/filtering the 'global_step' key, so that we don't break this return, or refactor stuff unnecessarily.\r\n\r\n@martinwicke "}