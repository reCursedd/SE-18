{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/188444789", "pull_request_review_id": 120422537, "id": 188444789, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODQ0NDc4OQ==", "diff_hunk": "@@ -811,6 +853,55 @@ class MklConcatOp : public OpKernel {\n         output_tensor->flat<uint8>().data(),\n         output_tensor->flat<uint8>().size() * sizeof(uint8));\n   }\n+\n+  // This method finds the most commom format accross all MKL inputs\n+  // Inputs:\n+  //   1. input_shapes: shapes of input (MKL) tensors.\n+  //   2. concat_dim: concat dimension.\n+  // Outputs:\n+  //   1. is_reorder_needed is set to true if inputs have difference formats\n+  //      It is set to false otherwise.\n+  //   2. concat_dim_size is the size of concat_dim.\n+  // Return:\n+  //   return the common MKL format.\n+  memory::format FindMklCommonFormat(const MklDnnShapeList& input_shapes,\n+      int concat_dim, bool* is_reorder_needed, int64* concat_dim_size) {\n+    *is_reorder_needed = false;\n+    *concat_dim_size = 0;\n+    std::unordered_map<memory::format, int> occurrence_map;\n+    if (input_shapes.size() == 0)\n+      return memory::format::any;\n+\n+    // Compute ocurrences of each format of all inputs.\n+    for (int k=0; k <input_shapes.size(); k++) {\n+      auto src_dims = TFShapeToMklDnnDims(input_shapes[k].GetTfShape());\n+      *concat_dim_size += src_dims[concat_dim];\n+      memory::format fmt = (memory::format)", "path": "tensorflow/core/kernels/mkl_concat_op.cc", "position": null, "original_position": 231, "commit_id": "ef2e9db5feec86433018506a3fbccd05f13d096a", "original_commit_id": "dd772a64ea6a7fc10668cb6ef78facf37a754921", "user": {"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}, "body": "Please use C++ style cast, or make the value type of the map memory::format.", "created_at": "2018-05-15T21:38:50Z", "updated_at": "2018-05-16T17:52:25Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/19065#discussion_r188444789", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/19065", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/188444789"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/19065#discussion_r188444789"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/19065"}}, "body_html": "<p>Please use C++ style cast, or make the value type of the map memory::format.</p>", "body_text": "Please use C++ style cast, or make the value type of the map memory::format."}