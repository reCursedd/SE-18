{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/271054189", "html_url": "https://github.com/tensorflow/tensorflow/issues/6702#issuecomment-271054189", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6702", "id": 271054189, "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTA1NDE4OQ==", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-07T01:52:53Z", "updated_at": "2017-01-07T01:53:58Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Can you give a more complete reproducible example? I tried running your code on some synthetic data, and couldn't reproduce.</p>\n<p>In particular, the function read_single_cossmo_example executes to completion. Do you mean that the problem happens on session.run on tensors created in that function?</p>\n<p>Also, deadlock scenarios are typically low CPU usage -- you end up with every thread waiting on a mutex, and those don't take any CPU.</p>\n<p>Some possibilities:</p>\n<ol>\n<li>\n<p>Parse example is inefficient and if you wait long enough, it'll produce the answer. One way to tease out inefficiencies is to use google profiling tools to get CPU profile, like is done in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"193706605\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/6116\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/6116/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/6116\">#6116</a></p>\n</li>\n<li>\n<p>There's some bug in parse example which causes things to go into an infinite loop. In this case it would be useful to get the example which causes this condition. Also, perhaps you can <code>gdb attach -p &lt;pid&gt;</code> to the hanging process and do <code>bt</code> to see which function it is hanging in. If you compile with -c dbg, it'll give you line numbers as well, although it can make everything 10x slower and harder to reproduce</p>\n</li>\n</ol>", "body_text": "Can you give a more complete reproducible example? I tried running your code on some synthetic data, and couldn't reproduce.\nIn particular, the function read_single_cossmo_example executes to completion. Do you mean that the problem happens on session.run on tensors created in that function?\nAlso, deadlock scenarios are typically low CPU usage -- you end up with every thread waiting on a mutex, and those don't take any CPU.\nSome possibilities:\n\n\nParse example is inefficient and if you wait long enough, it'll produce the answer. One way to tease out inefficiencies is to use google profiling tools to get CPU profile, like is done in #6116\n\n\nThere's some bug in parse example which causes things to go into an infinite loop. In this case it would be useful to get the example which causes this condition. Also, perhaps you can gdb attach -p <pid> to the hanging process and do bt to see which function it is hanging in. If you compile with -c dbg, it'll give you line numbers as well, although it can make everything 10x slower and harder to reproduce", "body": "Can you give a more complete reproducible example? I tried running your code on some synthetic data, and couldn't reproduce.\r\n\r\nIn particular, the function read_single_cossmo_example executes to completion. Do you mean that the problem happens on session.run on tensors created in that function?\r\n\r\nAlso, deadlock scenarios are typically low CPU usage -- you end up with every thread waiting on a mutex, and those don't take any CPU.\r\n\r\nSome possibilities:\r\n\r\n1. Parse example is inefficient and if you wait long enough, it'll produce the answer. One way to tease out inefficiencies is to use google profiling tools to get CPU profile, like is done in https://github.com/tensorflow/tensorflow/issues/6116\r\n\r\n2. There's some bug in parse example which causes things to go into an infinite loop. In this case it would be useful to get the example which causes this condition. Also, perhaps you can `gdb attach -p <pid>` to the hanging process and do `bt` to see which function it is hanging in. If you compile with -c dbg, it'll give you line numbers as well, although it can make everything 10x slower and harder to reproduce"}