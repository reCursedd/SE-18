{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/317051783", "html_url": "https://github.com/tensorflow/tensorflow/issues/11660#issuecomment-317051783", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11660", "id": 317051783, "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzA1MTc4Mw==", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-21T16:46:11Z", "updated_at": "2017-07-21T16:46:11Z", "author_association": "MEMBER", "body_html": "<p>I am perhaps misunderstanding, but isn't the point of the backup workers to provide a tradeoff between waiting for replicas and consuming all data (so, the step proceeds when K of the N workers have updates, where the number of backup workers is (N-K)). If you want data from all the workers to apply, then increase the number of workers and set backup workers to zero (i.e., set <a href=\"https://www.tensorflow.org/api_docs/python/tf/train/SyncReplicasOptimizer#__init__\" rel=\"nofollow\"><code>replicas_to_aggregate</code> and leave <code>total_num_replicas</code> as None</a>.)</p>\n<p>Or am I missing something?</p>", "body_text": "I am perhaps misunderstanding, but isn't the point of the backup workers to provide a tradeoff between waiting for replicas and consuming all data (so, the step proceeds when K of the N workers have updates, where the number of backup workers is (N-K)). If you want data from all the workers to apply, then increase the number of workers and set backup workers to zero (i.e., set replicas_to_aggregate and leave total_num_replicas as None.)\nOr am I missing something?", "body": "I am perhaps misunderstanding, but isn't the point of the backup workers to provide a tradeoff between waiting for replicas and consuming all data (so, the step proceeds when K of the N workers have updates, where the number of backup workers is (N-K)). If you want data from all the workers to apply, then increase the number of workers and set backup workers to zero (i.e., set [`replicas_to_aggregate` and leave `total_num_replicas` as None](https://www.tensorflow.org/api_docs/python/tf/train/SyncReplicasOptimizer#__init__).)\r\n\r\nOr am I missing something?"}