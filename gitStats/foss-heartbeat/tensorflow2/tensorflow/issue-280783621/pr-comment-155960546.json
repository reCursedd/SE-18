{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/155960546", "pull_request_review_id": 82362724, "id": 155960546, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NTk2MDU0Ng==", "diff_hunk": "@@ -0,0 +1,222 @@\n+/* Copyright 2017 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+\n+#define EIGEN_USE_THREADS\n+\n+#include \"tensorflow/core/framework/op_kernel.h\"\n+#include \"tensorflow/core/framework/register_types.h\"\n+#include \"tensorflow/core/framework/tensor.h\"\n+#include \"tensorflow/core/framework/types.h\"\n+#include \"third_party/eigen3/unsupported/Eigen/CXX11/Tensor\"\n+\n+namespace tensorflow {\n+\n+typedef Eigen::ThreadPoolDevice CPUDevice;\n+\n+template <typename T>\n+class BroadcastToOp : public OpKernel {\n+ public:\n+  explicit BroadcastToOp(OpKernelConstruction* ctx) : OpKernel(ctx) {}\n+\n+  void Compute(OpKernelContext* ctx) override {\n+    const Tensor& input_tensor = ctx->input(0);\n+    const TensorShape& input_shape = input_tensor.shape();\n+\n+    const Tensor& shape_tensor = ctx->input(1);\n+\n+    TensorShape output_shape;\n+    OP_REQUIRES_OK(ctx,\n+                   ctx->op_kernel().MakeShape(shape_tensor, &output_shape));\n+\n+    Tensor* output_tensor = nullptr;\n+    OP_REQUIRES_OK(ctx, ctx->allocate_output(0, output_shape, &output_tensor));\n+\n+#define BROADCAST_SHAPE(broadcast, reshape, NDIMS, input_shape, output_shape) \\\n+  for (int i = 0; i < NDIMS; i++) {                                           \\\n+    OP_REQUIRES(ctx, (broadcast[i] % reshape[i] == 0),                        \\\n+                errors::InvalidArgument(\"invalid shape to broadcast from \",   \\\n+                                        input_shape.DebugString(), \" to \",    \\\n+                                        output_shape.DebugString()));         \\\n+    broadcast[i] = broadcast[i] / reshape[i];                                 \\\n+  }\n+\n+    switch (output_shape.dims()) {\n+      case 1: {\n+        auto reshape = AsEigenDSizesWithPrefix<1>(input_shape);\n+        auto broadcast = output_shape.AsEigenDSizes<1>();\n+\n+        BROADCAST_SHAPE(broadcast, reshape, 1, input_shape, output_shape);\n+\n+        auto output = output_tensor->tensor<T, 1>();\n+        switch (input_shape.dims()) {", "path": "tensorflow/core/kernels/broadcast_to_op.cc", "position": null, "original_position": 63, "commit_id": "9ec1539c35a0b94afdc89b2fb96a6cd856b962f8", "original_commit_id": "c8bf2f89be96847c7d848b457bebe316d0de4d58", "user": {"login": "alextp", "id": 5061, "node_id": "MDQ6VXNlcjUwNjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alextp", "html_url": "https://github.com/alextp", "followers_url": "https://api.github.com/users/alextp/followers", "following_url": "https://api.github.com/users/alextp/following{/other_user}", "gists_url": "https://api.github.com/users/alextp/gists{/gist_id}", "starred_url": "https://api.github.com/users/alextp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alextp/subscriptions", "organizations_url": "https://api.github.com/users/alextp/orgs", "repos_url": "https://api.github.com/users/alextp/repos", "events_url": "https://api.github.com/users/alextp/events{/privacy}", "received_events_url": "https://api.github.com/users/alextp/received_events", "type": "User", "site_admin": false}, "body": "Not allowing broadcasting from a scalar?", "created_at": "2017-12-10T21:17:26Z", "updated_at": "2018-04-12T01:49:10Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/15243#discussion_r155960546", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/15243", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/155960546"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/15243#discussion_r155960546"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/15243"}}, "body_html": "<p>Not allowing broadcasting from a scalar?</p>", "body_text": "Not allowing broadcasting from a scalar?"}