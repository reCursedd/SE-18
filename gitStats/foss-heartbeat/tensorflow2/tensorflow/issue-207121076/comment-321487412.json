{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/321487412", "html_url": "https://github.com/tensorflow/tensorflow/issues/7456#issuecomment-321487412", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7456", "id": 321487412, "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTQ4NzQxMg==", "user": {"login": "scenarios", "id": 15104876, "node_id": "MDQ6VXNlcjE1MTA0ODc2", "avatar_url": "https://avatars2.githubusercontent.com/u/15104876?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scenarios", "html_url": "https://github.com/scenarios", "followers_url": "https://api.github.com/users/scenarios/followers", "following_url": "https://api.github.com/users/scenarios/following{/other_user}", "gists_url": "https://api.github.com/users/scenarios/gists{/gist_id}", "starred_url": "https://api.github.com/users/scenarios/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scenarios/subscriptions", "organizations_url": "https://api.github.com/users/scenarios/orgs", "repos_url": "https://api.github.com/users/scenarios/repos", "events_url": "https://api.github.com/users/scenarios/events{/privacy}", "received_events_url": "https://api.github.com/users/scenarios/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-10T08:31:43Z", "updated_at": "2017-08-10T08:31:43Z", "author_association": "NONE", "body_html": "<p>Ok, it finally got solved.<br>\nIn my case, The bug is pear to pear data access between gpu0 and gpu1,2,3 doesn't work. This abnormalty can be verified with \"simpleP2P\" test. The test reports an \"verification error\" with nan in my case. But the reason behind this behaviour could be various. For me, it's because there's a conflict of virtual memory existing between one of my cpu and gpu0, which can be  solved by simply disabling the VT-d function. After that, the simplep2p test got pased and NAN problem for the training disapeared.</p>", "body_text": "Ok, it finally got solved.\nIn my case, The bug is pear to pear data access between gpu0 and gpu1,2,3 doesn't work. This abnormalty can be verified with \"simpleP2P\" test. The test reports an \"verification error\" with nan in my case. But the reason behind this behaviour could be various. For me, it's because there's a conflict of virtual memory existing between one of my cpu and gpu0, which can be  solved by simply disabling the VT-d function. After that, the simplep2p test got pased and NAN problem for the training disapeared.", "body": "Ok, it finally got solved.\r\nIn my case, The bug is pear to pear data access between gpu0 and gpu1,2,3 doesn't work. This abnormalty can be verified with \"simpleP2P\" test. The test reports an \"verification error\" with nan in my case. But the reason behind this behaviour could be various. For me, it's because there's a conflict of virtual memory existing between one of my cpu and gpu0, which can be  solved by simply disabling the VT-d function. After that, the simplep2p test got pased and NAN problem for the training disapeared."}