{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/218431114", "html_url": "https://github.com/tensorflow/tensorflow/issues/2264#issuecomment-218431114", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2264", "id": 218431114, "node_id": "MDEyOklzc3VlQ29tbWVudDIxODQzMTExNA==", "user": {"login": "petamem", "id": 2607711, "node_id": "MDQ6VXNlcjI2MDc3MTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/2607711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petamem", "html_url": "https://github.com/petamem", "followers_url": "https://api.github.com/users/petamem/followers", "following_url": "https://api.github.com/users/petamem/following{/other_user}", "gists_url": "https://api.github.com/users/petamem/gists{/gist_id}", "starred_url": "https://api.github.com/users/petamem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petamem/subscriptions", "organizations_url": "https://api.github.com/users/petamem/orgs", "repos_url": "https://api.github.com/users/petamem/repos", "events_url": "https://api.github.com/users/petamem/events{/privacy}", "received_events_url": "https://api.github.com/users/petamem/received_events", "type": "User", "site_admin": false}, "created_at": "2016-05-11T11:19:57Z", "updated_at": "2016-05-11T11:19:57Z", "author_association": "NONE", "body_html": "<p>Ok. In order to test the hypothesis that I could mitigate the error by disabling the Intel P530 GPU, I disabled it in the BIOS. lspci henceforth does not list it, so for the OS it should look like there is only one GPU - the M2000M - present.</p>\n<p>Unfortunately, the error remains the same (GPU just uses slightly more memory because the frame buffer):</p>\n<pre><code>&gt;&gt;&gt; sess = tf.Session()\nE tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:887] could not open file to read NUMA node: /sys/bus/pci/devices/0000:01:00.0/numa_node\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:102] Found device 0 with properties: \nname: Quadro M2000M\nmajor: 5 minor: 0 memoryClockRate (GHz) 1.137\npciBusID 0000:01:00.0\nTotal memory: 4.00GiB\nFree memory: 3.68GiB\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:126] DMA: 0 \nI tensorflow/core/common_runtime/gpu/gpu_init.cc:136] 0:   Y \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:755] Creating TensorFlow device (/gpu:0) -&gt; (device: 0, name: Quadro M2000M, pci bus id: 0000:01:00.0)\nF tensorflow/core/common_runtime/gpu/process_state.cc:155] Check failed: numa_node &gt;= 0 (-1 vs. 0)\n</code></pre>\n<p>Which leads me to the conclusion, that there must be some own OS-independent GPU detection routine present. Not sure if this is a good thing.</p>\n<p>Any ETA for the fix? I could try hacking common_runtime/gpu/gpu_device as suggested, but if there's soon a fix, that'd be probably moot.</p>", "body_text": "Ok. In order to test the hypothesis that I could mitigate the error by disabling the Intel P530 GPU, I disabled it in the BIOS. lspci henceforth does not list it, so for the OS it should look like there is only one GPU - the M2000M - present.\nUnfortunately, the error remains the same (GPU just uses slightly more memory because the frame buffer):\n>>> sess = tf.Session()\nE tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:887] could not open file to read NUMA node: /sys/bus/pci/devices/0000:01:00.0/numa_node\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:102] Found device 0 with properties: \nname: Quadro M2000M\nmajor: 5 minor: 0 memoryClockRate (GHz) 1.137\npciBusID 0000:01:00.0\nTotal memory: 4.00GiB\nFree memory: 3.68GiB\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:126] DMA: 0 \nI tensorflow/core/common_runtime/gpu/gpu_init.cc:136] 0:   Y \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:755] Creating TensorFlow device (/gpu:0) -> (device: 0, name: Quadro M2000M, pci bus id: 0000:01:00.0)\nF tensorflow/core/common_runtime/gpu/process_state.cc:155] Check failed: numa_node >= 0 (-1 vs. 0)\n\nWhich leads me to the conclusion, that there must be some own OS-independent GPU detection routine present. Not sure if this is a good thing.\nAny ETA for the fix? I could try hacking common_runtime/gpu/gpu_device as suggested, but if there's soon a fix, that'd be probably moot.", "body": "Ok. In order to test the hypothesis that I could mitigate the error by disabling the Intel P530 GPU, I disabled it in the BIOS. lspci henceforth does not list it, so for the OS it should look like there is only one GPU - the M2000M - present.\n\nUnfortunately, the error remains the same (GPU just uses slightly more memory because the frame buffer):\n\n```\n>>> sess = tf.Session()\nE tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:887] could not open file to read NUMA node: /sys/bus/pci/devices/0000:01:00.0/numa_node\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:102] Found device 0 with properties: \nname: Quadro M2000M\nmajor: 5 minor: 0 memoryClockRate (GHz) 1.137\npciBusID 0000:01:00.0\nTotal memory: 4.00GiB\nFree memory: 3.68GiB\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:126] DMA: 0 \nI tensorflow/core/common_runtime/gpu/gpu_init.cc:136] 0:   Y \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:755] Creating TensorFlow device (/gpu:0) -> (device: 0, name: Quadro M2000M, pci bus id: 0000:01:00.0)\nF tensorflow/core/common_runtime/gpu/process_state.cc:155] Check failed: numa_node >= 0 (-1 vs. 0)\n```\n\nWhich leads me to the conclusion, that there must be some own OS-independent GPU detection routine present. Not sure if this is a good thing.\n\nAny ETA for the fix? I could try hacking common_runtime/gpu/gpu_device as suggested, but if there's soon a fix, that'd be probably moot.\n"}