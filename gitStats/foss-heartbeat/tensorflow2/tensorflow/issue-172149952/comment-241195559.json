{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/241195559", "html_url": "https://github.com/tensorflow/tensorflow/issues/3926#issuecomment-241195559", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3926", "id": 241195559, "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTE5NTU1OQ==", "user": {"login": "kalle", "id": 370192, "node_id": "MDQ6VXNlcjM3MDE5Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/370192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kalle", "html_url": "https://github.com/kalle", "followers_url": "https://api.github.com/users/kalle/followers", "following_url": "https://api.github.com/users/kalle/following{/other_user}", "gists_url": "https://api.github.com/users/kalle/gists{/gist_id}", "starred_url": "https://api.github.com/users/kalle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kalle/subscriptions", "organizations_url": "https://api.github.com/users/kalle/orgs", "repos_url": "https://api.github.com/users/kalle/repos", "events_url": "https://api.github.com/users/kalle/events{/privacy}", "received_events_url": "https://api.github.com/users/kalle/received_events", "type": "User", "site_admin": false}, "created_at": "2016-08-20T11:58:17Z", "updated_at": "2016-08-20T11:58:17Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=23068\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/yaroslavvb\">@yaroslavvb</a> I was too quick when I said it was the same result (I must have forgotten to save the file of something). When I set <code>is_training=True</code> I get the same result when doing the inference with the restored net.</p>\n<p>But I still don't understand the purpose of the <code>is_training</code> parameter since setting it to <code>False</code> essentially throws away the learned mean and variance, replace them with 0.0 and 1.0 and then do the normalization. If this is the intended behavior of <code>is_training</code> (but the doc string indicates that it isn't) perhaps it should be called <code>use_learned_data</code> instead.</p>", "body_text": "@yaroslavvb I was too quick when I said it was the same result (I must have forgotten to save the file of something). When I set is_training=True I get the same result when doing the inference with the restored net.\nBut I still don't understand the purpose of the is_training parameter since setting it to False essentially throws away the learned mean and variance, replace them with 0.0 and 1.0 and then do the normalization. If this is the intended behavior of is_training (but the doc string indicates that it isn't) perhaps it should be called use_learned_data instead.", "body": "@yaroslavvb I was too quick when I said it was the same result (I must have forgotten to save the file of something). When I set `is_training=True` I get the same result when doing the inference with the restored net.\n\nBut I still don't understand the purpose of the `is_training` parameter since setting it to `False` essentially throws away the learned mean and variance, replace them with 0.0 and 1.0 and then do the normalization. If this is the intended behavior of `is_training` (but the doc string indicates that it isn't) perhaps it should be called `use_learned_data` instead.\n"}