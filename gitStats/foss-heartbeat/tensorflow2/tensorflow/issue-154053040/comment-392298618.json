{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/392298618", "html_url": "https://github.com/tensorflow/tensorflow/issues/2308#issuecomment-392298618", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2308", "id": 392298618, "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjI5ODYxOA==", "user": {"login": "gaceladri", "id": 7850682, "node_id": "MDQ6VXNlcjc4NTA2ODI=", "avatar_url": "https://avatars0.githubusercontent.com/u/7850682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gaceladri", "html_url": "https://github.com/gaceladri", "followers_url": "https://api.github.com/users/gaceladri/followers", "following_url": "https://api.github.com/users/gaceladri/following{/other_user}", "gists_url": "https://api.github.com/users/gaceladri/gists{/gist_id}", "starred_url": "https://api.github.com/users/gaceladri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gaceladri/subscriptions", "organizations_url": "https://api.github.com/users/gaceladri/orgs", "repos_url": "https://api.github.com/users/gaceladri/repos", "events_url": "https://api.github.com/users/gaceladri/events{/privacy}", "received_events_url": "https://api.github.com/users/gaceladri/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-27T01:24:44Z", "updated_at": "2018-06-03T18:41:02Z", "author_association": "NONE", "body_html": "<p>Hi <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=461519\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/petrbel\">@petrbel</a>,</p>\n<p>Thanks for your response, I have just seen this paper which could be some approximation</p>\n<pre><code>def scan(fn, elems, init):\n  elem_ta = TensorArray(dtype=elems.dtype).unstack(elems)\n  result_ta = TensorArray(dtype=init.dtype)\n  n = elem_ta.size()\n  def pred(i, a, ta):\n    return i &lt; n\n  def body(i, a, ta):\n    a_out = fn(a, elem_ta.read(i))\n    ta = ta.write(i, a_out)\n    return (i + 1, a_out, ta)\n    _, _, r = while_loop(pred, body, (0, init, result_ta))\n  return r.stack()\n</code></pre>\n<p>From this paper<br>\n\"Dynamic Control Flow in Large-Scale Machine Learning\"<br>\n<a href=\"https://arxiv.org/abs/1805.01772\" rel=\"nofollow\">https://arxiv.org/abs/1805.01772</a><br>\nRegards.</p>", "body_text": "Hi @petrbel,\nThanks for your response, I have just seen this paper which could be some approximation\ndef scan(fn, elems, init):\n  elem_ta = TensorArray(dtype=elems.dtype).unstack(elems)\n  result_ta = TensorArray(dtype=init.dtype)\n  n = elem_ta.size()\n  def pred(i, a, ta):\n    return i < n\n  def body(i, a, ta):\n    a_out = fn(a, elem_ta.read(i))\n    ta = ta.write(i, a_out)\n    return (i + 1, a_out, ta)\n    _, _, r = while_loop(pred, body, (0, init, result_ta))\n  return r.stack()\n\nFrom this paper\n\"Dynamic Control Flow in Large-Scale Machine Learning\"\nhttps://arxiv.org/abs/1805.01772\nRegards.", "body": "Hi @petrbel, \r\n\r\nThanks for your response, I have just seen this paper which could be some approximation \r\n\r\n```\r\ndef scan(fn, elems, init):\r\n  elem_ta = TensorArray(dtype=elems.dtype).unstack(elems)\r\n  result_ta = TensorArray(dtype=init.dtype)\r\n  n = elem_ta.size()\r\n  def pred(i, a, ta):\r\n    return i < n\r\n  def body(i, a, ta):\r\n    a_out = fn(a, elem_ta.read(i))\r\n    ta = ta.write(i, a_out)\r\n    return (i + 1, a_out, ta)\r\n    _, _, r = while_loop(pred, body, (0, init, result_ta))\r\n  return r.stack()\r\n```\r\n\r\nFrom this paper \r\n\"Dynamic Control Flow in Large-Scale Machine Learning\"\r\nhttps://arxiv.org/abs/1805.01772\r\nRegards."}