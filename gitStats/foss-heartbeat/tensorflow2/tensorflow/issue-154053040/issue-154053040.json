{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2308", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2308/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2308/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2308/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/2308", "id": 154053040, "node_id": "MDU6SXNzdWUxNTQwNTMwNDA=", "number": 2308, "title": "Theano-like scan non-sequences", "user": {"login": "petrbel", "id": 461519, "node_id": "MDQ6VXNlcjQ2MTUxOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/461519?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrbel", "html_url": "https://github.com/petrbel", "followers_url": "https://api.github.com/users/petrbel/followers", "following_url": "https://api.github.com/users/petrbel/following{/other_user}", "gists_url": "https://api.github.com/users/petrbel/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrbel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrbel/subscriptions", "organizations_url": "https://api.github.com/users/petrbel/orgs", "repos_url": "https://api.github.com/users/petrbel/repos", "events_url": "https://api.github.com/users/petrbel/events{/privacy}", "received_events_url": "https://api.github.com/users/petrbel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2016-05-10T16:42:43Z", "updated_at": "2018-06-03T18:41:02Z", "closed_at": "2016-05-12T14:14:16Z", "author_association": "NONE", "body_html": "<p>It would be nice to add some functionality that allows passing non-sequences to <code>scan</code> function (introduced in 0.8.0). <a href=\"http://deeplearning.net/software/theano/library/scan.html\" rel=\"nofollow\">Theano implements this feature</a> and it is very useful.</p>\n<p>The suggested usage could be (pseudocode):</p>\n<div class=\"highlight highlight-source-python\"><pre>scan(<span class=\"pl-v\">fn</span><span class=\"pl-k\">=</span><span class=\"pl-k\">lambda</span> <span class=\"pl-smi\">state</span>, <span class=\"pl-smi\">c1</span>, <span class=\"pl-smi\">c2</span>, <span class=\"pl-smi\">el</span>: state<span class=\"pl-k\">+</span>c1<span class=\"pl-k\">+</span>c2<span class=\"pl-k\">+</span>el,\n     <span class=\"pl-v\">elems</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">10</span>,<span class=\"pl-c1\">20</span>,<span class=\"pl-c1\">30</span>],\n     <span class=\"pl-v\">initializer</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">0</span>],\n     <span class=\"pl-v\">non_sequences</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>])</pre></div>\n<p>The first argument could be the last output (state), then all <code>non_sequences</code> could be passed and, finally, the current input <code>el</code>. The pseudocode above would produce the following operations:</p>\n<pre><code>0 +1+2+10 =&gt; 13\n13+1+2+20 =&gt; 26\n26+1+2+30 =&gt; 59\n</code></pre>\n<p>Unfortunatelly I haven't found any hack that would achieve the same behavior (especially when <code>non_sequences</code> contain objects other than tensors, such as <code>GruCells</code>). Maybe there is some, in that case I would really appreciate some hint :)</p>\n<p>I believe that this, together with <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"153826732\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/2294\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/2294/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/2294\">#2294</a>, would help developers to write their scans equally effectively as they do in theno.</p>", "body_text": "It would be nice to add some functionality that allows passing non-sequences to scan function (introduced in 0.8.0). Theano implements this feature and it is very useful.\nThe suggested usage could be (pseudocode):\nscan(fn=lambda state, c1, c2, el: state+c1+c2+el,\n     elems=[10,20,30],\n     initializer=[0],\n     non_sequences=[1, 2])\nThe first argument could be the last output (state), then all non_sequences could be passed and, finally, the current input el. The pseudocode above would produce the following operations:\n0 +1+2+10 => 13\n13+1+2+20 => 26\n26+1+2+30 => 59\n\nUnfortunatelly I haven't found any hack that would achieve the same behavior (especially when non_sequences contain objects other than tensors, such as GruCells). Maybe there is some, in that case I would really appreciate some hint :)\nI believe that this, together with #2294, would help developers to write their scans equally effectively as they do in theno.", "body": "It would be nice to add some functionality that allows passing non-sequences to `scan` function (introduced in 0.8.0). [Theano implements this feature](http://deeplearning.net/software/theano/library/scan.html) and it is very useful.\n\nThe suggested usage could be (pseudocode):\n\n``` python\nscan(fn=lambda state, c1, c2, el: state+c1+c2+el,\n     elems=[10,20,30],\n     initializer=[0],\n     non_sequences=[1, 2])\n```\n\nThe first argument could be the last output (state), then all `non_sequences` could be passed and, finally, the current input `el`. The pseudocode above would produce the following operations:\n\n```\n0 +1+2+10 => 13\n13+1+2+20 => 26\n26+1+2+30 => 59\n```\n\nUnfortunatelly I haven't found any hack that would achieve the same behavior (especially when `non_sequences` contain objects other than tensors, such as `GruCells`). Maybe there is some, in that case I would really appreciate some hint :)\n\nI believe that this, together with #2294, would help developers to write their scans equally effectively as they do in theno.\n"}