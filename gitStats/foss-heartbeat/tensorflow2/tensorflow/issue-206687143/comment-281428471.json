{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/281428471", "html_url": "https://github.com/tensorflow/tensorflow/issues/7403#issuecomment-281428471", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7403", "id": 281428471, "node_id": "MDEyOklzc3VlQ29tbWVudDI4MTQyODQ3MQ==", "user": {"login": "persiyanov", "id": 3997997, "node_id": "MDQ6VXNlcjM5OTc5OTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/3997997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/persiyanov", "html_url": "https://github.com/persiyanov", "followers_url": "https://api.github.com/users/persiyanov/followers", "following_url": "https://api.github.com/users/persiyanov/following{/other_user}", "gists_url": "https://api.github.com/users/persiyanov/gists{/gist_id}", "starred_url": "https://api.github.com/users/persiyanov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/persiyanov/subscriptions", "organizations_url": "https://api.github.com/users/persiyanov/orgs", "repos_url": "https://api.github.com/users/persiyanov/repos", "events_url": "https://api.github.com/users/persiyanov/events{/privacy}", "received_events_url": "https://api.github.com/users/persiyanov/received_events", "type": "User", "site_admin": false}, "created_at": "2017-02-21T18:12:04Z", "updated_at": "2017-02-21T18:17:49Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=70511\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/girving\">@girving</a> sry, in your example if <code>f</code> is just function from R to R^2. That's ok, the derivative is correct. But in softmax case, second output is a hack, as I suppose, for better efficiency (there is a fused implementation in C++ core). Why can we simply consider it as an operator from some space K to K^2?</p>", "body_text": "@girving sry, in your example if f is just function from R to R^2. That's ok, the derivative is correct. But in softmax case, second output is a hack, as I suppose, for better efficiency (there is a fused implementation in C++ core). Why can we simply consider it as an operator from some space K to K^2?", "body": "@girving sry, in your example if `f` is just function from R to R^2. That's ok, the derivative is correct. But in softmax case, second output is a hack, as I suppose, for better efficiency (there is a fused implementation in C++ core). Why can we simply consider it as an operator from some space K to K^2?"}