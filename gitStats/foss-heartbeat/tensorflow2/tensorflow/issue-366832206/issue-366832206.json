{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22732", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22732/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22732/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22732/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/22732", "id": 366832206, "node_id": "MDU6SXNzdWUzNjY4MzIyMDY=", "number": 22732, "title": "CNN.Model pruning: no gain in speeding up of inference", "user": {"login": "NikishinRoman", "id": 9195919, "node_id": "MDQ6VXNlcjkxOTU5MTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9195919?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NikishinRoman", "html_url": "https://github.com/NikishinRoman", "followers_url": "https://api.github.com/users/NikishinRoman/followers", "following_url": "https://api.github.com/users/NikishinRoman/following{/other_user}", "gists_url": "https://api.github.com/users/NikishinRoman/gists{/gist_id}", "starred_url": "https://api.github.com/users/NikishinRoman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NikishinRoman/subscriptions", "organizations_url": "https://api.github.com/users/NikishinRoman/orgs", "repos_url": "https://api.github.com/users/NikishinRoman/repos", "events_url": "https://api.github.com/users/NikishinRoman/events{/privacy}", "received_events_url": "https://api.github.com/users/NikishinRoman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "suyoggupta", "id": 41447211, "node_id": "MDQ6VXNlcjQxNDQ3MjEx", "avatar_url": "https://avatars0.githubusercontent.com/u/41447211?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suyoggupta", "html_url": "https://github.com/suyoggupta", "followers_url": "https://api.github.com/users/suyoggupta/followers", "following_url": "https://api.github.com/users/suyoggupta/following{/other_user}", "gists_url": "https://api.github.com/users/suyoggupta/gists{/gist_id}", "starred_url": "https://api.github.com/users/suyoggupta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suyoggupta/subscriptions", "organizations_url": "https://api.github.com/users/suyoggupta/orgs", "repos_url": "https://api.github.com/users/suyoggupta/repos", "events_url": "https://api.github.com/users/suyoggupta/events{/privacy}", "received_events_url": "https://api.github.com/users/suyoggupta/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "suyoggupta", "id": 41447211, "node_id": "MDQ6VXNlcjQxNDQ3MjEx", "avatar_url": "https://avatars0.githubusercontent.com/u/41447211?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suyoggupta", "html_url": "https://github.com/suyoggupta", "followers_url": "https://api.github.com/users/suyoggupta/followers", "following_url": "https://api.github.com/users/suyoggupta/following{/other_user}", "gists_url": "https://api.github.com/users/suyoggupta/gists{/gist_id}", "starred_url": "https://api.github.com/users/suyoggupta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suyoggupta/subscriptions", "organizations_url": "https://api.github.com/users/suyoggupta/orgs", "repos_url": "https://api.github.com/users/suyoggupta/repos", "events_url": "https://api.github.com/users/suyoggupta/events{/privacy}", "received_events_url": "https://api.github.com/users/suyoggupta/received_events", "type": "User", "site_admin": false}, {"login": "ymodak", "id": 42785357, "node_id": "MDQ6VXNlcjQyNzg1MzU3", "avatar_url": "https://avatars1.githubusercontent.com/u/42785357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ymodak", "html_url": "https://github.com/ymodak", "followers_url": "https://api.github.com/users/ymodak/followers", "following_url": "https://api.github.com/users/ymodak/following{/other_user}", "gists_url": "https://api.github.com/users/ymodak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ymodak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ymodak/subscriptions", "organizations_url": "https://api.github.com/users/ymodak/orgs", "repos_url": "https://api.github.com/users/ymodak/repos", "events_url": "https://api.github.com/users/ymodak/events{/privacy}", "received_events_url": "https://api.github.com/users/ymodak/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-10-04T14:58:02Z", "updated_at": "2018-10-07T06:53:52Z", "closed_at": "2018-10-07T06:53:36Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:N/A</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:Windows 7</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>:N/A</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:pip install</li>\n<li><strong>TensorFlow version (use command below)</strong>:1.10.1</li>\n<li><strong>Python version</strong>:3.6</li>\n<li><strong>Bazel version (if compiling from source)</strong>:N/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:N/A</li>\n<li><strong>CUDA/cuDNN version</strong>:use CPU</li>\n<li><strong>GPU model and memory</strong>:N/A</li>\n<li><strong>Exact command to reproduce</strong>:N/A</li>\n</ul>\n<p>I implemented iterative pruning of a convolutional neural network using the example tensorflow <strong>/tensorflow/contrib/model_pruning/</strong> in order to increase the speed of inference .<br>\nThe result of the procedure is an increase in the number of zero weight values(increase sparcity), which are still stored in dense tensors. I do not see a gain in speed.<br>\nHow can I eliminate null weights used in convolutional layers from calculations? Can I remove  conv  filter knowing its sparseness?<br>\nPlease give some recomendation on these issues.</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):N/A\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):Windows 7\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:N/A\nTensorFlow installed from (source or binary):pip install\nTensorFlow version (use command below):1.10.1\nPython version:3.6\nBazel version (if compiling from source):N/A\nGCC/Compiler version (if compiling from source):N/A\nCUDA/cuDNN version:use CPU\nGPU model and memory:N/A\nExact command to reproduce:N/A\n\nI implemented iterative pruning of a convolutional neural network using the example tensorflow /tensorflow/contrib/model_pruning/ in order to increase the speed of inference .\nThe result of the procedure is an increase in the number of zero weight values(increase sparcity), which are still stored in dense tensors. I do not see a gain in speed.\nHow can I eliminate null weights used in convolutional layers from calculations? Can I remove  conv  filter knowing its sparseness?\nPlease give some recomendation on these issues.", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:N/A\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:Windows 7\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**:N/A\r\n- **TensorFlow installed from (source or binary)**:pip install\r\n- **TensorFlow version (use command below)**:1.10.1\r\n- **Python version**:3.6\r\n- **Bazel version (if compiling from source)**:N/A\r\n- **GCC/Compiler version (if compiling from source)**:N/A\r\n- **CUDA/cuDNN version**:use CPU\r\n- **GPU model and memory**:N/A\r\n- **Exact command to reproduce**:N/A\r\n\r\n\r\nI implemented iterative pruning of a convolutional neural network using the example tensorflow **/tensorflow/contrib/model_pruning/** in order to increase the speed of inference .\r\nThe result of the procedure is an increase in the number of zero weight values(increase sparcity), which are still stored in dense tensors. I do not see a gain in speed.\r\nHow can I eliminate null weights used in convolutional layers from calculations? Can I remove  conv  filter knowing its sparseness?\r\nPlease give some recomendation on these issues.\r\n"}