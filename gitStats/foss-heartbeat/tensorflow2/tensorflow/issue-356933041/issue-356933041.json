{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22062", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22062/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22062/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22062/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/22062", "id": 356933041, "node_id": "MDU6SXNzdWUzNTY5MzMwNDE=", "number": 22062, "title": "Keras load_model crash for custom layer using tf.gather", "user": {"login": "ybsave", "id": 26417094, "node_id": "MDQ6VXNlcjI2NDE3MDk0", "avatar_url": "https://avatars0.githubusercontent.com/u/26417094?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ybsave", "html_url": "https://github.com/ybsave", "followers_url": "https://api.github.com/users/ybsave/followers", "following_url": "https://api.github.com/users/ybsave/following{/other_user}", "gists_url": "https://api.github.com/users/ybsave/gists{/gist_id}", "starred_url": "https://api.github.com/users/ybsave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ybsave/subscriptions", "organizations_url": "https://api.github.com/users/ybsave/orgs", "repos_url": "https://api.github.com/users/ybsave/repos", "events_url": "https://api.github.com/users/ybsave/events{/privacy}", "received_events_url": "https://api.github.com/users/ybsave/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 12, "created_at": "2018-09-04T18:51:16Z", "updated_at": "2018-09-11T20:07:39Z", "closed_at": "2018-09-05T17:55:20Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:Y</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:Windows 10</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>: N/A</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.11.0-dev20180823</li>\n<li><strong>Python version</strong>: 3.6</li>\n<li><strong>Bazel version (if compiling from source)</strong>: N/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: N/A</li>\n<li><strong>CUDA/cuDNN version</strong>: 9.0/7</li>\n<li><strong>GPU model and memory</strong>: Nvidia Quadro 4000</li>\n<li><strong>Exact command to reproduce</strong>: N/A</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>When having a custom layer using tf.gather, the model could be built successfully and run without problem. I can save that model successfully; however, when loading the model, the error occurs. If no tf.gather custom layer used, there is no problem. Is this a bug or a mis-use?</p>\n<p>My codes are:</p>\n<pre><code>def test_lambda_layer():\n  data_input = keras.Input(shape=(1,4,5), dtype=float)\n  mask = [0,1,1,0,1]\n  valid_out_idx = np.nonzero(mask)[0]\n  x = Lambda(lambda t: tf.gather(t, valid_out_idx, axis=-1))(data_input)\n  x = Conv2D(5, 1, use_bias=False, kernel_initializer='ones', trainable=False)(x)\n  model = keras.Model(inputs=data_input, outputs=x)\n  model.summary()\n\n  data = np.ones((1,1,4,5), dtype=float)\n  print(model.predict(data))\n\n  model.save('test.h5')\n\n  new_model = keras.models.load_model('test.h5')\n  new_model.summary()\n\n  print(new_model.predict(data))\n</code></pre>\n<p>The error message is:</p>\n<pre><code>Traceback (most recent call last):\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\tensor_util.py\", line 527, in make_tensor_proto\n\tstr_values = [compat.as_bytes(x) for x in proto_values]\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\tensor_util.py\", line 527, in &lt;listcomp&gt;\n\tstr_values = [compat.as_bytes(x) for x in proto_values]\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\util\\compat.py\", line 61, in as_bytes\n\t(bytes_or_text,))\nTypeError: Expected binary or unicode string, got {'type': 'ndarray', 'value': [1, 2, 4]}\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"test_keras.py\", line 31, in &lt;module&gt;\n\tmain()\n  File \"test_keras.py\", line 28, in main\n\ttest_lambda_layer()\n  File \"test_keras.py\", line 16, in test_lambda_layer\n\tnew_model = keras.models.load_model('test.h5')\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\saving.py\", line 230, in load_model\n\tmodel = model_from_config(model_config, custom_objects=custom_objects)\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\saving.py\", line 310, in model_from_config\n\treturn deserialize(config, custom_objects=custom_objects)\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\layers\\serialization.py\", line 64, in deserialize\n\tprintable_module_name='layer')\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\utils\\generic_utils.py\", line 173, in deserialize_keras_object\n\tlist(custom_objects.items())))\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\network.py\", line 1302, in from_config\n\tprocess_node(layer, node_data)\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\network.py\", line 1260, in process_node\n\tlayer(input_tensors[0], **kwargs)\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\base_layer.py\", line 770, in __call__\n\toutputs = self.call(inputs, *args, **kwargs)\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\layers\\core.py\", line 716, in call\n\treturn self.function(inputs, **arguments)\n  File \"test_keras.py\", line 5, in &lt;lambda&gt;\n\tx = Lambda(lambda t: tf.gather(t, valid_out_idx, axis=-1))(data_input)\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\ops\\array_ops.py\", line 2650, in gather\n\treturn gen_array_ops.gather_v2(params, indices, axis, name=name)\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\ops\\gen_array_ops.py\", line 3804, in gather_v2\n\t\"GatherV2\", params=params, indices=indices, axis=axis, name=name)\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\op_def_library.py\", line 513, in _apply_op_helper\n\traise err\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\op_def_library.py\", line 510, in _apply_op_helper\n\tpreferred_dtype=default_dtype)\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 1127, in internal_convert_to_tensor\n\tret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\constant_op.py\", line 228, in _constant_tensor_conversion_function\n\treturn constant(v, dtype=dtype, name=name)\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\constant_op.py\", line 207, in constant\n\tvalue, dtype=dtype, shape=shape, verify_shape=verify_shape))\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\tensor_util.py\", line 531, in make_tensor_proto\n\t\"supported type.\" % (type(values), values))\nTypeError: Failed to convert object of type &lt;class 'dict'&gt; to Tensor. Contents: {'type': 'ndarray', 'value': [1, 2, 4]}. Consider casting elements to a supported type.\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):Y\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):Windows 10\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): 1.11.0-dev20180823\nPython version: 3.6\nBazel version (if compiling from source): N/A\nGCC/Compiler version (if compiling from source): N/A\nCUDA/cuDNN version: 9.0/7\nGPU model and memory: Nvidia Quadro 4000\nExact command to reproduce: N/A\n\nDescribe the problem\nWhen having a custom layer using tf.gather, the model could be built successfully and run without problem. I can save that model successfully; however, when loading the model, the error occurs. If no tf.gather custom layer used, there is no problem. Is this a bug or a mis-use?\nMy codes are:\ndef test_lambda_layer():\n  data_input = keras.Input(shape=(1,4,5), dtype=float)\n  mask = [0,1,1,0,1]\n  valid_out_idx = np.nonzero(mask)[0]\n  x = Lambda(lambda t: tf.gather(t, valid_out_idx, axis=-1))(data_input)\n  x = Conv2D(5, 1, use_bias=False, kernel_initializer='ones', trainable=False)(x)\n  model = keras.Model(inputs=data_input, outputs=x)\n  model.summary()\n\n  data = np.ones((1,1,4,5), dtype=float)\n  print(model.predict(data))\n\n  model.save('test.h5')\n\n  new_model = keras.models.load_model('test.h5')\n  new_model.summary()\n\n  print(new_model.predict(data))\n\nThe error message is:\nTraceback (most recent call last):\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\tensor_util.py\", line 527, in make_tensor_proto\n\tstr_values = [compat.as_bytes(x) for x in proto_values]\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\tensor_util.py\", line 527, in <listcomp>\n\tstr_values = [compat.as_bytes(x) for x in proto_values]\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\util\\compat.py\", line 61, in as_bytes\n\t(bytes_or_text,))\nTypeError: Expected binary or unicode string, got {'type': 'ndarray', 'value': [1, 2, 4]}\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"test_keras.py\", line 31, in <module>\n\tmain()\n  File \"test_keras.py\", line 28, in main\n\ttest_lambda_layer()\n  File \"test_keras.py\", line 16, in test_lambda_layer\n\tnew_model = keras.models.load_model('test.h5')\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\saving.py\", line 230, in load_model\n\tmodel = model_from_config(model_config, custom_objects=custom_objects)\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\saving.py\", line 310, in model_from_config\n\treturn deserialize(config, custom_objects=custom_objects)\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\layers\\serialization.py\", line 64, in deserialize\n\tprintable_module_name='layer')\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\utils\\generic_utils.py\", line 173, in deserialize_keras_object\n\tlist(custom_objects.items())))\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\network.py\", line 1302, in from_config\n\tprocess_node(layer, node_data)\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\network.py\", line 1260, in process_node\n\tlayer(input_tensors[0], **kwargs)\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\base_layer.py\", line 770, in __call__\n\toutputs = self.call(inputs, *args, **kwargs)\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\layers\\core.py\", line 716, in call\n\treturn self.function(inputs, **arguments)\n  File \"test_keras.py\", line 5, in <lambda>\n\tx = Lambda(lambda t: tf.gather(t, valid_out_idx, axis=-1))(data_input)\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\ops\\array_ops.py\", line 2650, in gather\n\treturn gen_array_ops.gather_v2(params, indices, axis, name=name)\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\ops\\gen_array_ops.py\", line 3804, in gather_v2\n\t\"GatherV2\", params=params, indices=indices, axis=axis, name=name)\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\op_def_library.py\", line 513, in _apply_op_helper\n\traise err\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\op_def_library.py\", line 510, in _apply_op_helper\n\tpreferred_dtype=default_dtype)\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 1127, in internal_convert_to_tensor\n\tret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\constant_op.py\", line 228, in _constant_tensor_conversion_function\n\treturn constant(v, dtype=dtype, name=name)\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\constant_op.py\", line 207, in constant\n\tvalue, dtype=dtype, shape=shape, verify_shape=verify_shape))\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\tensor_util.py\", line 531, in make_tensor_proto\n\t\"supported type.\" % (type(values), values))\nTypeError: Failed to convert object of type <class 'dict'> to Tensor. Contents: {'type': 'ndarray', 'value': [1, 2, 4]}. Consider casting elements to a supported type.", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:Y\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:Windows 10\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**: N/A\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.11.0-dev20180823\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: 9.0/7\r\n- **GPU model and memory**: Nvidia Quadro 4000\r\n- **Exact command to reproduce**: N/A\r\n\r\n### Describe the problem\r\nWhen having a custom layer using tf.gather, the model could be built successfully and run without problem. I can save that model successfully; however, when loading the model, the error occurs. If no tf.gather custom layer used, there is no problem. Is this a bug or a mis-use?\r\n\r\nMy codes are:\r\n\r\n\tdef test_lambda_layer():\r\n\t  data_input = keras.Input(shape=(1,4,5), dtype=float)\r\n\t  mask = [0,1,1,0,1]\r\n\t  valid_out_idx = np.nonzero(mask)[0]\r\n\t  x = Lambda(lambda t: tf.gather(t, valid_out_idx, axis=-1))(data_input)\r\n\t  x = Conv2D(5, 1, use_bias=False, kernel_initializer='ones', trainable=False)(x)\r\n\t  model = keras.Model(inputs=data_input, outputs=x)\r\n\t  model.summary()\r\n\r\n\t  data = np.ones((1,1,4,5), dtype=float)\r\n\t  print(model.predict(data))\r\n\r\n\t  model.save('test.h5')\r\n\r\n\t  new_model = keras.models.load_model('test.h5')\r\n\t  new_model.summary()\r\n\r\n\t  print(new_model.predict(data))\r\n\r\nThe error message is:\r\n\r\n\tTraceback (most recent call last):\r\n\t  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\tensor_util.py\", line 527, in make_tensor_proto\r\n\t\tstr_values = [compat.as_bytes(x) for x in proto_values]\r\n\t  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\tensor_util.py\", line 527, in <listcomp>\r\n\t\tstr_values = [compat.as_bytes(x) for x in proto_values]\r\n\t  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\util\\compat.py\", line 61, in as_bytes\r\n\t\t(bytes_or_text,))\r\n\tTypeError: Expected binary or unicode string, got {'type': 'ndarray', 'value': [1, 2, 4]}\r\n\r\n\tDuring handling of the above exception, another exception occurred:\r\n\r\n\tTraceback (most recent call last):\r\n\t  File \"test_keras.py\", line 31, in <module>\r\n\t\tmain()\r\n\t  File \"test_keras.py\", line 28, in main\r\n\t\ttest_lambda_layer()\r\n\t  File \"test_keras.py\", line 16, in test_lambda_layer\r\n\t\tnew_model = keras.models.load_model('test.h5')\r\n\t  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\saving.py\", line 230, in load_model\r\n\t\tmodel = model_from_config(model_config, custom_objects=custom_objects)\r\n\t  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\saving.py\", line 310, in model_from_config\r\n\t\treturn deserialize(config, custom_objects=custom_objects)\r\n\t  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\layers\\serialization.py\", line 64, in deserialize\r\n\t\tprintable_module_name='layer')\r\n\t  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\utils\\generic_utils.py\", line 173, in deserialize_keras_object\r\n\t\tlist(custom_objects.items())))\r\n\t  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\network.py\", line 1302, in from_config\r\n\t\tprocess_node(layer, node_data)\r\n\t  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\network.py\", line 1260, in process_node\r\n\t\tlayer(input_tensors[0], **kwargs)\r\n\t  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\base_layer.py\", line 770, in __call__\r\n\t\toutputs = self.call(inputs, *args, **kwargs)\r\n\t  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\layers\\core.py\", line 716, in call\r\n\t\treturn self.function(inputs, **arguments)\r\n\t  File \"test_keras.py\", line 5, in <lambda>\r\n\t\tx = Lambda(lambda t: tf.gather(t, valid_out_idx, axis=-1))(data_input)\r\n\t  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\ops\\array_ops.py\", line 2650, in gather\r\n\t\treturn gen_array_ops.gather_v2(params, indices, axis, name=name)\r\n\t  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\ops\\gen_array_ops.py\", line 3804, in gather_v2\r\n\t\t\"GatherV2\", params=params, indices=indices, axis=axis, name=name)\r\n\t  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\op_def_library.py\", line 513, in _apply_op_helper\r\n\t\traise err\r\n\t  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\op_def_library.py\", line 510, in _apply_op_helper\r\n\t\tpreferred_dtype=default_dtype)\r\n\t  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 1127, in internal_convert_to_tensor\r\n\t\tret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\r\n\t  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\constant_op.py\", line 228, in _constant_tensor_conversion_function\r\n\t\treturn constant(v, dtype=dtype, name=name)\r\n\t  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\constant_op.py\", line 207, in constant\r\n\t\tvalue, dtype=dtype, shape=shape, verify_shape=verify_shape))\r\n\t  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\tensor_util.py\", line 531, in make_tensor_proto\r\n\t\t\"supported type.\" % (type(values), values))\r\n\tTypeError: Failed to convert object of type <class 'dict'> to Tensor. Contents: {'type': 'ndarray', 'value': [1, 2, 4]}. Consider casting elements to a supported type."}