{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/419164700", "html_url": "https://github.com/tensorflow/tensorflow/issues/22062#issuecomment-419164700", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22062", "id": 419164700, "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTE2NDcwMA==", "user": {"login": "ybsave", "id": 26417094, "node_id": "MDQ6VXNlcjI2NDE3MDk0", "avatar_url": "https://avatars0.githubusercontent.com/u/26417094?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ybsave", "html_url": "https://github.com/ybsave", "followers_url": "https://api.github.com/users/ybsave/followers", "following_url": "https://api.github.com/users/ybsave/following{/other_user}", "gists_url": "https://api.github.com/users/ybsave/gists{/gist_id}", "starred_url": "https://api.github.com/users/ybsave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ybsave/subscriptions", "organizations_url": "https://api.github.com/users/ybsave/orgs", "repos_url": "https://api.github.com/users/ybsave/repos", "events_url": "https://api.github.com/users/ybsave/events{/privacy}", "received_events_url": "https://api.github.com/users/ybsave/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-06T16:50:03Z", "updated_at": "2018-09-06T16:50:03Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3731025\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/allenlavoie\">@allenlavoie</a> Thank you for your quick response. I tested several combinations, and still cannot find anyone to work.</p>\n<p>If I remove the definition of \"from_config\" function and define the custom layer as</p>\n<pre><code>class IndexLayer(Layer):\n  def __init__(self, valid_idx, **kwargs):\n\tself.valid_idx = valid_idx\n\tsuper(IndexLayer, self).__init__(**kwargs)\n\n  def build(self, input_shape):\n\tsuper(IndexLayer, self).build(input_shape)\n\n  def call(self, inputs):\n\treturn tf.gather(inputs, self.valid_idx, axis=-1)\n\n  def get_config(self):\n\tbase_config = super(IndexLayer, self).get_config()\n\tbase_config['valid_idx'] = self.valid_idx\n\treturn base_config\n\ndef test_lambda_layer():\n  data_input = keras.Input(shape=(1,4,5), dtype=float)\n  mask = [0,1,1,0,1]\n  x = IndexLayer(np.nonzero(mask)[0])(data_input)\n  x = Conv2D(5, 1, use_bias=False, kernel_initializer='ones',\n\t\t\t trainable=False)(x)\n  model = keras.Model(inputs=data_input, outputs=x)\n  model.summary()\n\n  data = np.ones((1,1,4,5), dtype=float)\n  print(model.predict(data))\n\n  model.save('test.h5')\n#  model.save_weights('./weights')\n\n  new_model = keras.models.load_model('test.h5', custom_objects={'IndexLayer':IndexLayer})\n#  new_model = keras.Model(inputs=data_input, outputs=x)\n#  new_model.load_weights('./weights')\n  new_model.summary()\n\n  print(new_model.predict(data))\n</code></pre>\n<p>The error message is</p>\n<pre><code>  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\tensor_util.py\", line 527, in make_tensor_proto\n\tstr_values = [compat.as_bytes(x) for x in proto_values]\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\tensor_util.py\", line 527, in &lt;listcomp&gt;\n\tstr_values = [compat.as_bytes(x) for x in proto_values]\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\util\\compat.py\", line 61, in as_bytes\n\t(bytes_or_text,))\nTypeError: Expected binary or unicode string, got {'type': 'ndarray', 'value': [1, 2, 4]}\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"test_keras.py\", line 341, in &lt;module&gt;\n\tmain()\n  File \"test_keras.py\", line 338, in main\n\ttest_lambda_layer()\n  File \"test_keras.py\", line 324, in test_lambda_layer\n\tcustom_objects={'IndexLayer':IndexLayer})\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\saving.py\", line 230, in load_model\n\tmodel = model_from_config(model_config, custom_objects=custom_objects)\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\saving.py\", line 310, in model_from_config\n\treturn deserialize(config, custom_objects=custom_objects)\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\layers\\serialization.py\", line 64, in deserialize\n\tprintable_module_name='layer')\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\utils\\generic_utils.py\", line 173, in deserialize_keras_object\n\tlist(custom_objects.items())))\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\network.py\", line 1302, in from_config\n\tprocess_node(layer, node_data)\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\network.py\", line 1260, in process_node\n\tlayer(input_tensors[0], **kwargs)\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\base_layer.py\", line 770, in __call__\n\toutputs = self.call(inputs, *args, **kwargs)\n  File \"test_keras.py\", line 284, in call\n\treturn tf.gather(inputs, self.valid_idx, axis=-1)\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\ops\\array_ops.py\", line 2650, in gather\n\treturn gen_array_ops.gather_v2(params, indices, axis, name=name)\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\ops\\gen_array_ops.py\", line 3804, in gather_v2\n\t\"GatherV2\", params=params, indices=indices, axis=axis, name=name)\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\op_def_library.py\", line 513, in _apply_op_helper\n\traise err\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\op_def_library.py\", line 510, in _apply_op_helper\n\tpreferred_dtype=default_dtype)\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 1127, in internal_convert_to_tensor\n\tret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\constant_op.py\", line 228, in _constant_tensor_conversion_function\n\treturn constant(v, dtype=dtype, name=name)\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\constant_op.py\", line 207, in constant\n\tvalue, dtype=dtype, shape=shape, verify_shape=verify_shape))\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\tensor_util.py\", line 531, in make_tensor_proto\n\t\"supported type.\" % (type(values), values))\nTypeError: Failed to convert object of type &lt;class 'dict'&gt; to Tensor. Contents: {'type': 'ndarray', 'value': [1, 2, 4]}. Consider casting elements to a supported type.\n</code></pre>\n<p>If I add \"<a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3434126\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/staticmethod\">@staticmethod</a>\" and defined the \"from_config\" function, as</p>\n<pre><code>@staticmethod\ndef from_config(cls, config):\n  return cls(**config)\n</code></pre>\n<p>the error message is</p>\n<pre><code>Traceback (most recent call last):\n  File \"test_keras.py\", line 343, in &lt;module&gt;\n\tmain()\n  File \"test_keras.py\", line 340, in main\n\ttest_lambda_layer()\n  File \"test_keras.py\", line 326, in test_lambda_layer\n\tcustom_objects={'IndexLayer':IndexLayer})\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\saving.py\", line 230, in load_model\n\tmodel = model_from_config(model_config, custom_objects=custom_objects)\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\saving.py\", line 310, in model_from_config\n\treturn deserialize(config, custom_objects=custom_objects)\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\layers\\serialization.py\", line 64, in deserialize\n\tprintable_module_name='layer')\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\utils\\generic_utils.py\", line 173, in deserialize_keras_object\n\tlist(custom_objects.items())))\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\network.py\", line 1292, in from_config\n\tprocess_layer(layer_data)\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\network.py\", line 1278, in process_layer\n\tlayer = deserialize_layer(layer_data, custom_objects=custom_objects)\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\layers\\serialization.py\", line 64, in deserialize\n\tprintable_module_name='layer')\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\utils\\generic_utils.py\", line 175, in deserialize_keras_object\n\treturn cls.from_config(config['config'])\nTypeError: from_config() missing 1 required positional argument: 'config'\n</code></pre>\n<p>If I add \"<a class=\"user-mention\" data-hovercard-type=\"organization\" data-hovercard-url=\"/orgs/classmethod/hovercard\" href=\"https://github.com/classmethod\">@classmethod</a>\" and defined the \"from_config\" function, the error would be the same as not defining \"from_config\".</p>\n<p>As shown in my codes, I also tested to use \"save_weights\" and \"load_weights\". Those would work successfully. However, the \"load_model\" always crashed. :(</p>", "body_text": "@allenlavoie Thank you for your quick response. I tested several combinations, and still cannot find anyone to work.\nIf I remove the definition of \"from_config\" function and define the custom layer as\nclass IndexLayer(Layer):\n  def __init__(self, valid_idx, **kwargs):\n\tself.valid_idx = valid_idx\n\tsuper(IndexLayer, self).__init__(**kwargs)\n\n  def build(self, input_shape):\n\tsuper(IndexLayer, self).build(input_shape)\n\n  def call(self, inputs):\n\treturn tf.gather(inputs, self.valid_idx, axis=-1)\n\n  def get_config(self):\n\tbase_config = super(IndexLayer, self).get_config()\n\tbase_config['valid_idx'] = self.valid_idx\n\treturn base_config\n\ndef test_lambda_layer():\n  data_input = keras.Input(shape=(1,4,5), dtype=float)\n  mask = [0,1,1,0,1]\n  x = IndexLayer(np.nonzero(mask)[0])(data_input)\n  x = Conv2D(5, 1, use_bias=False, kernel_initializer='ones',\n\t\t\t trainable=False)(x)\n  model = keras.Model(inputs=data_input, outputs=x)\n  model.summary()\n\n  data = np.ones((1,1,4,5), dtype=float)\n  print(model.predict(data))\n\n  model.save('test.h5')\n#  model.save_weights('./weights')\n\n  new_model = keras.models.load_model('test.h5', custom_objects={'IndexLayer':IndexLayer})\n#  new_model = keras.Model(inputs=data_input, outputs=x)\n#  new_model.load_weights('./weights')\n  new_model.summary()\n\n  print(new_model.predict(data))\n\nThe error message is\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\tensor_util.py\", line 527, in make_tensor_proto\n\tstr_values = [compat.as_bytes(x) for x in proto_values]\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\tensor_util.py\", line 527, in <listcomp>\n\tstr_values = [compat.as_bytes(x) for x in proto_values]\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\util\\compat.py\", line 61, in as_bytes\n\t(bytes_or_text,))\nTypeError: Expected binary or unicode string, got {'type': 'ndarray', 'value': [1, 2, 4]}\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"test_keras.py\", line 341, in <module>\n\tmain()\n  File \"test_keras.py\", line 338, in main\n\ttest_lambda_layer()\n  File \"test_keras.py\", line 324, in test_lambda_layer\n\tcustom_objects={'IndexLayer':IndexLayer})\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\saving.py\", line 230, in load_model\n\tmodel = model_from_config(model_config, custom_objects=custom_objects)\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\saving.py\", line 310, in model_from_config\n\treturn deserialize(config, custom_objects=custom_objects)\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\layers\\serialization.py\", line 64, in deserialize\n\tprintable_module_name='layer')\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\utils\\generic_utils.py\", line 173, in deserialize_keras_object\n\tlist(custom_objects.items())))\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\network.py\", line 1302, in from_config\n\tprocess_node(layer, node_data)\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\network.py\", line 1260, in process_node\n\tlayer(input_tensors[0], **kwargs)\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\base_layer.py\", line 770, in __call__\n\toutputs = self.call(inputs, *args, **kwargs)\n  File \"test_keras.py\", line 284, in call\n\treturn tf.gather(inputs, self.valid_idx, axis=-1)\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\ops\\array_ops.py\", line 2650, in gather\n\treturn gen_array_ops.gather_v2(params, indices, axis, name=name)\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\ops\\gen_array_ops.py\", line 3804, in gather_v2\n\t\"GatherV2\", params=params, indices=indices, axis=axis, name=name)\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\op_def_library.py\", line 513, in _apply_op_helper\n\traise err\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\op_def_library.py\", line 510, in _apply_op_helper\n\tpreferred_dtype=default_dtype)\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 1127, in internal_convert_to_tensor\n\tret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\constant_op.py\", line 228, in _constant_tensor_conversion_function\n\treturn constant(v, dtype=dtype, name=name)\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\constant_op.py\", line 207, in constant\n\tvalue, dtype=dtype, shape=shape, verify_shape=verify_shape))\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\tensor_util.py\", line 531, in make_tensor_proto\n\t\"supported type.\" % (type(values), values))\nTypeError: Failed to convert object of type <class 'dict'> to Tensor. Contents: {'type': 'ndarray', 'value': [1, 2, 4]}. Consider casting elements to a supported type.\n\nIf I add \"@staticmethod\" and defined the \"from_config\" function, as\n@staticmethod\ndef from_config(cls, config):\n  return cls(**config)\n\nthe error message is\nTraceback (most recent call last):\n  File \"test_keras.py\", line 343, in <module>\n\tmain()\n  File \"test_keras.py\", line 340, in main\n\ttest_lambda_layer()\n  File \"test_keras.py\", line 326, in test_lambda_layer\n\tcustom_objects={'IndexLayer':IndexLayer})\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\saving.py\", line 230, in load_model\n\tmodel = model_from_config(model_config, custom_objects=custom_objects)\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\saving.py\", line 310, in model_from_config\n\treturn deserialize(config, custom_objects=custom_objects)\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\layers\\serialization.py\", line 64, in deserialize\n\tprintable_module_name='layer')\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\utils\\generic_utils.py\", line 173, in deserialize_keras_object\n\tlist(custom_objects.items())))\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\network.py\", line 1292, in from_config\n\tprocess_layer(layer_data)\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\network.py\", line 1278, in process_layer\n\tlayer = deserialize_layer(layer_data, custom_objects=custom_objects)\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\layers\\serialization.py\", line 64, in deserialize\n\tprintable_module_name='layer')\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\utils\\generic_utils.py\", line 175, in deserialize_keras_object\n\treturn cls.from_config(config['config'])\nTypeError: from_config() missing 1 required positional argument: 'config'\n\nIf I add \"@classmethod\" and defined the \"from_config\" function, the error would be the same as not defining \"from_config\".\nAs shown in my codes, I also tested to use \"save_weights\" and \"load_weights\". Those would work successfully. However, the \"load_model\" always crashed. :(", "body": "@allenlavoie Thank you for your quick response. I tested several combinations, and still cannot find anyone to work. \r\n\r\nIf I remove the definition of \"from_config\" function and define the custom layer as\r\n\r\n\tclass IndexLayer(Layer):\r\n\t  def __init__(self, valid_idx, **kwargs):\r\n\t\tself.valid_idx = valid_idx\r\n\t\tsuper(IndexLayer, self).__init__(**kwargs)\r\n\r\n\t  def build(self, input_shape):\r\n\t\tsuper(IndexLayer, self).build(input_shape)\r\n\r\n\t  def call(self, inputs):\r\n\t\treturn tf.gather(inputs, self.valid_idx, axis=-1)\r\n\r\n\t  def get_config(self):\r\n\t\tbase_config = super(IndexLayer, self).get_config()\r\n\t\tbase_config['valid_idx'] = self.valid_idx\r\n\t\treturn base_config\r\n\r\n\tdef test_lambda_layer():\r\n\t  data_input = keras.Input(shape=(1,4,5), dtype=float)\r\n\t  mask = [0,1,1,0,1]\r\n\t  x = IndexLayer(np.nonzero(mask)[0])(data_input)\r\n\t  x = Conv2D(5, 1, use_bias=False, kernel_initializer='ones',\r\n\t\t\t\t trainable=False)(x)\r\n\t  model = keras.Model(inputs=data_input, outputs=x)\r\n\t  model.summary()\r\n\r\n\t  data = np.ones((1,1,4,5), dtype=float)\r\n\t  print(model.predict(data))\r\n\r\n\t  model.save('test.h5')\r\n\t#  model.save_weights('./weights')\r\n\r\n\t  new_model = keras.models.load_model('test.h5', custom_objects={'IndexLayer':IndexLayer})\r\n\t#  new_model = keras.Model(inputs=data_input, outputs=x)\r\n\t#  new_model.load_weights('./weights')\r\n\t  new_model.summary()\r\n\r\n\t  print(new_model.predict(data))\r\n\r\nThe error message is\r\n\r\n\t  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\tensor_util.py\", line 527, in make_tensor_proto\r\n\t\tstr_values = [compat.as_bytes(x) for x in proto_values]\r\n\t  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\tensor_util.py\", line 527, in <listcomp>\r\n\t\tstr_values = [compat.as_bytes(x) for x in proto_values]\r\n\t  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\util\\compat.py\", line 61, in as_bytes\r\n\t\t(bytes_or_text,))\r\n\tTypeError: Expected binary or unicode string, got {'type': 'ndarray', 'value': [1, 2, 4]}\r\n\r\n\tDuring handling of the above exception, another exception occurred:\r\n\r\n\tTraceback (most recent call last):\r\n\t  File \"test_keras.py\", line 341, in <module>\r\n\t\tmain()\r\n\t  File \"test_keras.py\", line 338, in main\r\n\t\ttest_lambda_layer()\r\n\t  File \"test_keras.py\", line 324, in test_lambda_layer\r\n\t\tcustom_objects={'IndexLayer':IndexLayer})\r\n\t  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\saving.py\", line 230, in load_model\r\n\t\tmodel = model_from_config(model_config, custom_objects=custom_objects)\r\n\t  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\saving.py\", line 310, in model_from_config\r\n\t\treturn deserialize(config, custom_objects=custom_objects)\r\n\t  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\layers\\serialization.py\", line 64, in deserialize\r\n\t\tprintable_module_name='layer')\r\n\t  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\utils\\generic_utils.py\", line 173, in deserialize_keras_object\r\n\t\tlist(custom_objects.items())))\r\n\t  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\network.py\", line 1302, in from_config\r\n\t\tprocess_node(layer, node_data)\r\n\t  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\network.py\", line 1260, in process_node\r\n\t\tlayer(input_tensors[0], **kwargs)\r\n\t  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\base_layer.py\", line 770, in __call__\r\n\t\toutputs = self.call(inputs, *args, **kwargs)\r\n\t  File \"test_keras.py\", line 284, in call\r\n\t\treturn tf.gather(inputs, self.valid_idx, axis=-1)\r\n\t  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\ops\\array_ops.py\", line 2650, in gather\r\n\t\treturn gen_array_ops.gather_v2(params, indices, axis, name=name)\r\n\t  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\ops\\gen_array_ops.py\", line 3804, in gather_v2\r\n\t\t\"GatherV2\", params=params, indices=indices, axis=axis, name=name)\r\n\t  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\op_def_library.py\", line 513, in _apply_op_helper\r\n\t\traise err\r\n\t  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\op_def_library.py\", line 510, in _apply_op_helper\r\n\t\tpreferred_dtype=default_dtype)\r\n\t  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 1127, in internal_convert_to_tensor\r\n\t\tret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\r\n\t  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\constant_op.py\", line 228, in _constant_tensor_conversion_function\r\n\t\treturn constant(v, dtype=dtype, name=name)\r\n\t  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\constant_op.py\", line 207, in constant\r\n\t\tvalue, dtype=dtype, shape=shape, verify_shape=verify_shape))\r\n\t  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\tensor_util.py\", line 531, in make_tensor_proto\r\n\t\t\"supported type.\" % (type(values), values))\r\n\tTypeError: Failed to convert object of type <class 'dict'> to Tensor. Contents: {'type': 'ndarray', 'value': [1, 2, 4]}. Consider casting elements to a supported type.\r\n\r\nIf I add \"@staticmethod\" and defined the \"from_config\" function, as\r\n\r\n    @staticmethod\r\n    def from_config(cls, config):\r\n      return cls(**config)\r\n\r\nthe error message is\r\n\r\n\tTraceback (most recent call last):\r\n\t  File \"test_keras.py\", line 343, in <module>\r\n\t\tmain()\r\n\t  File \"test_keras.py\", line 340, in main\r\n\t\ttest_lambda_layer()\r\n\t  File \"test_keras.py\", line 326, in test_lambda_layer\r\n\t\tcustom_objects={'IndexLayer':IndexLayer})\r\n\t  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\saving.py\", line 230, in load_model\r\n\t\tmodel = model_from_config(model_config, custom_objects=custom_objects)\r\n\t  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\saving.py\", line 310, in model_from_config\r\n\t\treturn deserialize(config, custom_objects=custom_objects)\r\n\t  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\layers\\serialization.py\", line 64, in deserialize\r\n\t\tprintable_module_name='layer')\r\n\t  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\utils\\generic_utils.py\", line 173, in deserialize_keras_object\r\n\t\tlist(custom_objects.items())))\r\n\t  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\network.py\", line 1292, in from_config\r\n\t\tprocess_layer(layer_data)\r\n\t  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\network.py\", line 1278, in process_layer\r\n\t\tlayer = deserialize_layer(layer_data, custom_objects=custom_objects)\r\n\t  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\layers\\serialization.py\", line 64, in deserialize\r\n\t\tprintable_module_name='layer')\r\n\t  File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\keras\\utils\\generic_utils.py\", line 175, in deserialize_keras_object\r\n\t\treturn cls.from_config(config['config'])\r\n\tTypeError: from_config() missing 1 required positional argument: 'config'\r\n\r\nIf I add \"@classmethod\" and defined the \"from_config\" function, the error would be the same as not defining \"from_config\". \r\n\r\nAs shown in my codes, I also tested to use \"save_weights\" and \"load_weights\". Those would work successfully. However, the \"load_model\" always crashed. :("}