{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/262951969", "html_url": "https://github.com/tensorflow/tensorflow/issues/5742#issuecomment-262951969", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5742", "id": 262951969, "node_id": "MDEyOklzc3VlQ29tbWVudDI2Mjk1MTk2OQ==", "user": {"login": "masanao-miyamoto", "id": 14864021, "node_id": "MDQ6VXNlcjE0ODY0MDIx", "avatar_url": "https://avatars2.githubusercontent.com/u/14864021?v=4", "gravatar_id": "", "url": "https://api.github.com/users/masanao-miyamoto", "html_url": "https://github.com/masanao-miyamoto", "followers_url": "https://api.github.com/users/masanao-miyamoto/followers", "following_url": "https://api.github.com/users/masanao-miyamoto/following{/other_user}", "gists_url": "https://api.github.com/users/masanao-miyamoto/gists{/gist_id}", "starred_url": "https://api.github.com/users/masanao-miyamoto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/masanao-miyamoto/subscriptions", "organizations_url": "https://api.github.com/users/masanao-miyamoto/orgs", "repos_url": "https://api.github.com/users/masanao-miyamoto/repos", "events_url": "https://api.github.com/users/masanao-miyamoto/events{/privacy}", "received_events_url": "https://api.github.com/users/masanao-miyamoto/received_events", "type": "User", "site_admin": false}, "created_at": "2016-11-25T12:51:33Z", "updated_at": "2016-11-25T12:51:33Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=8059551\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/civilman628\">@civilman628</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=319796\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/panovr\">@panovr</a> I changed two lines.</p>\n<div class=\"highlight highlight-source-diff\"><pre> 91     if scale:\n 92       gamma = variables.variable('gamma',\n 93                                  params_shape,\n<span class=\"pl-md\"><span class=\"pl-md\">-</span> 94                                  initializer=tf.ones_initializer,</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span> 94                                  initializer=tf.ones_initializer(),</span>\n 95                                  trainable=trainable,\n 96                                  restore=restore)\n 97     # Create moving_mean and moving_variance add them to\n 98     # GraphKeys.MOVING_AVERAGE_VARIABLES collections.\n 99     moving_collections = [moving_vars, tf.GraphKeys.MOVING_AVERAGE_VARIABLES]\n100     moving_mean = variables.variable('moving_mean',\n101                                      params_shape,\n102                                      initializer=tf.zeros_initializer,\n103                                      trainable=False,\n104                                      restore=restore,\n105                                      collections=moving_collections)\n106     moving_variance = variables.variable('moving_variance',\n107                                          params_shape,\n<span class=\"pl-md\"><span class=\"pl-md\">-</span> 108                                          initializer=tf.ones_initializer,</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span> 108                                          initializer=tf.ones_initializer(),</span>\n109                                          trainable=False,\n110                                          restore=restore,\n111                                          collections=moving_collections)</pre></div>", "body_text": "@civilman628 @panovr I changed two lines.\n 91     if scale:\n 92       gamma = variables.variable('gamma',\n 93                                  params_shape,\n- 94                                  initializer=tf.ones_initializer,\n+ 94                                  initializer=tf.ones_initializer(),\n 95                                  trainable=trainable,\n 96                                  restore=restore)\n 97     # Create moving_mean and moving_variance add them to\n 98     # GraphKeys.MOVING_AVERAGE_VARIABLES collections.\n 99     moving_collections = [moving_vars, tf.GraphKeys.MOVING_AVERAGE_VARIABLES]\n100     moving_mean = variables.variable('moving_mean',\n101                                      params_shape,\n102                                      initializer=tf.zeros_initializer,\n103                                      trainable=False,\n104                                      restore=restore,\n105                                      collections=moving_collections)\n106     moving_variance = variables.variable('moving_variance',\n107                                          params_shape,\n- 108                                          initializer=tf.ones_initializer,\n+ 108                                          initializer=tf.ones_initializer(),\n109                                          trainable=False,\n110                                          restore=restore,\n111                                          collections=moving_collections)", "body": "@civilman628 @panovr I changed two lines. \r\n\r\n``` diff \r\n 91     if scale:\r\n 92       gamma = variables.variable('gamma',\r\n 93                                  params_shape,\r\n- 94                                  initializer=tf.ones_initializer,\r\n+ 94                                  initializer=tf.ones_initializer(),\r\n 95                                  trainable=trainable,\r\n 96                                  restore=restore)\r\n 97     # Create moving_mean and moving_variance add them to\r\n 98     # GraphKeys.MOVING_AVERAGE_VARIABLES collections.\r\n 99     moving_collections = [moving_vars, tf.GraphKeys.MOVING_AVERAGE_VARIABLES]\r\n100     moving_mean = variables.variable('moving_mean',\r\n101                                      params_shape,\r\n102                                      initializer=tf.zeros_initializer,\r\n103                                      trainable=False,\r\n104                                      restore=restore,\r\n105                                      collections=moving_collections)\r\n106     moving_variance = variables.variable('moving_variance',\r\n107                                          params_shape,\r\n- 108                                          initializer=tf.ones_initializer,\r\n+ 108                                          initializer=tf.ones_initializer(),\r\n109                                          trainable=False,\r\n110                                          restore=restore,\r\n111                                          collections=moving_collections)\r\n```"}