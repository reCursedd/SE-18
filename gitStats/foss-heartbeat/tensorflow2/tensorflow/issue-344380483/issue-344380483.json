{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21124", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21124/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21124/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21124/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21124", "id": 344380483, "node_id": "MDU6SXNzdWUzNDQzODA0ODM=", "number": 21124, "title": "The mobilenet predict results are different", "user": {"login": "longchr123", "id": 15262666, "node_id": "MDQ6VXNlcjE1MjYyNjY2", "avatar_url": "https://avatars0.githubusercontent.com/u/15262666?v=4", "gravatar_id": "", "url": "https://api.github.com/users/longchr123", "html_url": "https://github.com/longchr123", "followers_url": "https://api.github.com/users/longchr123/followers", "following_url": "https://api.github.com/users/longchr123/following{/other_user}", "gists_url": "https://api.github.com/users/longchr123/gists{/gist_id}", "starred_url": "https://api.github.com/users/longchr123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/longchr123/subscriptions", "organizations_url": "https://api.github.com/users/longchr123/orgs", "repos_url": "https://api.github.com/users/longchr123/repos", "events_url": "https://api.github.com/users/longchr123/events{/privacy}", "received_events_url": "https://api.github.com/users/longchr123/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "bignamehyp", "id": 3474655, "node_id": "MDQ6VXNlcjM0NzQ2NTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3474655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bignamehyp", "html_url": "https://github.com/bignamehyp", "followers_url": "https://api.github.com/users/bignamehyp/followers", "following_url": "https://api.github.com/users/bignamehyp/following{/other_user}", "gists_url": "https://api.github.com/users/bignamehyp/gists{/gist_id}", "starred_url": "https://api.github.com/users/bignamehyp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bignamehyp/subscriptions", "organizations_url": "https://api.github.com/users/bignamehyp/orgs", "repos_url": "https://api.github.com/users/bignamehyp/repos", "events_url": "https://api.github.com/users/bignamehyp/events{/privacy}", "received_events_url": "https://api.github.com/users/bignamehyp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bignamehyp", "id": 3474655, "node_id": "MDQ6VXNlcjM0NzQ2NTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3474655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bignamehyp", "html_url": "https://github.com/bignamehyp", "followers_url": "https://api.github.com/users/bignamehyp/followers", "following_url": "https://api.github.com/users/bignamehyp/following{/other_user}", "gists_url": "https://api.github.com/users/bignamehyp/gists{/gist_id}", "starred_url": "https://api.github.com/users/bignamehyp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bignamehyp/subscriptions", "organizations_url": "https://api.github.com/users/bignamehyp/orgs", "repos_url": "https://api.github.com/users/bignamehyp/repos", "events_url": "https://api.github.com/users/bignamehyp/events{/privacy}", "received_events_url": "https://api.github.com/users/bignamehyp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2018-07-25T10:12:48Z", "updated_at": "2018-07-28T06:30:27Z", "closed_at": "2018-07-28T06:30:27Z", "author_association": "NONE", "body_html": "<p><strong>Problem Description:</strong></p>\n<p>I meet a very strange problem,the problem is that:<br>\nMy job is train a pb file that can predict face's five key points,he network model is mobilenet v2,when I trained to get a small loss pb file, the loss is about 0.7,that's ok,no problem.But when I predict with trained pb file, there's a problem. When the input image shape is [100,224,224,3], get the output is [100,10],(ten means five key point coordinates),that's ok, the output is accurate,tes is right,but when I change input image shape[1,224,224,3](there's only one input image),the output [1,10] is different from privous result,the two cases of  input[0] is the same, but output[0] is different,  the input shape is  [100,224,224,3] more accurate, why?</p>\n<p>the exact coordinates of output[0]:<br>\n[38 46 71 54 62 70 26 81 56 88]</p>\n<p>input shape [100,224,224,3], get input[0]:<br>\n[39.381622 45.988384 73.15548  55.10713  64.56505  70.48474  29.348461<br>\n82.159615 53.589706 87.59885 ]</p>\n<p>input shape [1,224,224,3],get input[0]:<br>\n[[40.17595  47.69543  85.54374  50.631523 64.47522  71.54203  36.73784<br>\n85.07918  79.665985 87.313995]]</p>\n<p>the exact coordinates of output[0]:<br>\n[39 46 88 35 76 65 51 80 94 70]</p>\n<p>input shape [100,224,224,3], get input[0]:<br>\n[38.898895 45.90179  86.28276  34.750797 76.82557  65.86458  51.15553<br>\n79.85125  95.181885 70.00042 ]</p>\n<p>input shape [1,224,224,3],get input[0]:<br>\n[[39.191376 46.032986 88.266106 39.030933 72.28544  64.2173   49.861656<br>\n80.540855 94.46614  74.561905]]</p>\n<hr>\n<p>System information<br>\nLinux Ubuntu 16.04:<br>\nTensorFlow installed from source:<br>\nTensorFlow version 1.8.0:<br>\nPython version:3.6:<br>\nBazel version 0.11.1:<br>\nGCC/Compiler version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.10) :<br>\nCUDA/cuDNN 9.0/7.0.5:<br>\nGPU 1060-6G:</p>", "body_text": "Problem Description:\nI meet a very strange problem,the problem is that:\nMy job is train a pb file that can predict face's five key points,he network model is mobilenet v2,when I trained to get a small loss pb file, the loss is about 0.7,that's ok,no problem.But when I predict with trained pb file, there's a problem. When the input image shape is [100,224,224,3], get the output is [100,10],(ten means five key point coordinates),that's ok, the output is accurate,tes is right,but when I change input image shape[1,224,224,3](there's only one input image),the output [1,10] is different from privous result,the two cases of  input[0] is the same, but output[0] is different,  the input shape is  [100,224,224,3] more accurate, why?\nthe exact coordinates of output[0]:\n[38 46 71 54 62 70 26 81 56 88]\ninput shape [100,224,224,3], get input[0]:\n[39.381622 45.988384 73.15548  55.10713  64.56505  70.48474  29.348461\n82.159615 53.589706 87.59885 ]\ninput shape [1,224,224,3],get input[0]:\n[[40.17595  47.69543  85.54374  50.631523 64.47522  71.54203  36.73784\n85.07918  79.665985 87.313995]]\nthe exact coordinates of output[0]:\n[39 46 88 35 76 65 51 80 94 70]\ninput shape [100,224,224,3], get input[0]:\n[38.898895 45.90179  86.28276  34.750797 76.82557  65.86458  51.15553\n79.85125  95.181885 70.00042 ]\ninput shape [1,224,224,3],get input[0]:\n[[39.191376 46.032986 88.266106 39.030933 72.28544  64.2173   49.861656\n80.540855 94.46614  74.561905]]\n\nSystem information\nLinux Ubuntu 16.04:\nTensorFlow installed from source:\nTensorFlow version 1.8.0:\nPython version:3.6:\nBazel version 0.11.1:\nGCC/Compiler version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.10) :\nCUDA/cuDNN 9.0/7.0.5:\nGPU 1060-6G:", "body": "**Problem Description:**\r\n\r\nI meet a very strange problem,the problem is that:\r\nMy job is train a pb file that can predict face's five key points,he network model is mobilenet v2,when I trained to get a small loss pb file, the loss is about 0.7,that's ok,no problem.But when I predict with trained pb file, there's a problem. When the input image shape is [100,224,224,3], get the output is [100,10],(ten means five key point coordinates),that's ok, the output is accurate,tes is right,but when I change input image shape[1,224,224,3](there's only one input image),the output [1,10] is different from privous result,the two cases of  input[0] is the same, but output[0] is different,  the input shape is  [100,224,224,3] more accurate, why? \r\n\r\nthe exact coordinates of output[0]:\r\n[38 46 71 54 62 70 26 81 56 88]\r\n\r\ninput shape [100,224,224,3], get input[0]:\r\n[39.381622 45.988384 73.15548  55.10713  64.56505  70.48474  29.348461\r\n 82.159615 53.589706 87.59885 ]\r\n\r\ninput shape [1,224,224,3],get input[0]:\r\n[[40.17595  47.69543  85.54374  50.631523 64.47522  71.54203  36.73784\r\n  85.07918  79.665985 87.313995]]\r\n\r\n\r\nthe exact coordinates of output[0]:\r\n[39 46 88 35 76 65 51 80 94 70]\r\n\r\ninput shape [100,224,224,3], get input[0]:\r\n[38.898895 45.90179  86.28276  34.750797 76.82557  65.86458  51.15553\r\n 79.85125  95.181885 70.00042 ]\r\n\r\ninput shape [1,224,224,3],get input[0]:\r\n[[39.191376 46.032986 88.266106 39.030933 72.28544  64.2173   49.861656\r\n  80.540855 94.46614  74.561905]]\r\n\r\n-------------------------------------\r\n\r\nSystem information\r\nLinux Ubuntu 16.04:\r\nTensorFlow installed from source:\r\nTensorFlow version 1.8.0:\r\nPython version:3.6:\r\nBazel version 0.11.1:\r\nGCC/Compiler version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.10) :\r\nCUDA/cuDNN 9.0/7.0.5:\r\nGPU 1060-6G:\r\n"}