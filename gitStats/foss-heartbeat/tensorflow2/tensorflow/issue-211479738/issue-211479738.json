{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8021", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8021/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8021/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8021/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/8021", "id": 211479738, "node_id": "MDU6SXNzdWUyMTE0Nzk3Mzg=", "number": 8021, "title": "pywrap_tensorflow.list_devices() allocates all available memory (on all GPU devices)", "user": {"login": "garibarba", "id": 13115728, "node_id": "MDQ6VXNlcjEzMTE1NzI4", "avatar_url": "https://avatars3.githubusercontent.com/u/13115728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garibarba", "html_url": "https://github.com/garibarba", "followers_url": "https://api.github.com/users/garibarba/followers", "following_url": "https://api.github.com/users/garibarba/following{/other_user}", "gists_url": "https://api.github.com/users/garibarba/gists{/gist_id}", "starred_url": "https://api.github.com/users/garibarba/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garibarba/subscriptions", "organizations_url": "https://api.github.com/users/garibarba/orgs", "repos_url": "https://api.github.com/users/garibarba/repos", "events_url": "https://api.github.com/users/garibarba/events{/privacy}", "received_events_url": "https://api.github.com/users/garibarba/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-03-02T18:39:24Z", "updated_at": "2017-03-06T20:58:43Z", "closed_at": "2017-03-03T23:27:52Z", "author_association": "NONE", "body_html": "<h3>Environment info</h3>\n<p>Operating System:<br>\nUbuntu 14.04.5 LTS<br>\nPython 3.4.3</p>\n<p>Installed version of CUDA and cuDNN:<br>\n(please attach the output of <code>ls -l /path/to/cuda/lib/libcud*</code>):<br>\nlibcudadevrt.a  libcudart.so.8.0     libcudart_static.a  libcudnn.so.5      libcudnn_static.a<br>\nlibcudart.so    libcudart.so.8.0.61  libcudnn.so         libcudnn.so.5.1.5</p>\n<p>If installed from binary pip package, provide:</p>\n<ol>\n<li>A link to the pip package you installed:<br>\n<code>pip install tensorflow-gpu</code></li>\n<li>The output from <code>python -c \"import tensorflow; print(tensorflow.__version__)\"</code>.</li>\n</ol>\n<pre><code>I tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcublas.so.8.0 locally\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcudnn.so.5 locally\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcufft.so.8.0 locally\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcurand.so.8.0 locally\n1.0.0\n</code></pre>\n<h3>If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)</h3>\n<pre><code>from tensorflow.python import pywrap_tensorflow\npywrap_tensorflow.list_devices()\n</code></pre>\n<p>I have tried this locally on a system with two Quadro K620 and another system with one TITAN X.</p>", "body_text": "Environment info\nOperating System:\nUbuntu 14.04.5 LTS\nPython 3.4.3\nInstalled version of CUDA and cuDNN:\n(please attach the output of ls -l /path/to/cuda/lib/libcud*):\nlibcudadevrt.a  libcudart.so.8.0     libcudart_static.a  libcudnn.so.5      libcudnn_static.a\nlibcudart.so    libcudart.so.8.0.61  libcudnn.so         libcudnn.so.5.1.5\nIf installed from binary pip package, provide:\n\nA link to the pip package you installed:\npip install tensorflow-gpu\nThe output from python -c \"import tensorflow; print(tensorflow.__version__)\".\n\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcublas.so.8.0 locally\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcudnn.so.5 locally\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcufft.so.8.0 locally\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcurand.so.8.0 locally\n1.0.0\n\nIf possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\nfrom tensorflow.python import pywrap_tensorflow\npywrap_tensorflow.list_devices()\n\nI have tried this locally on a system with two Quadro K620 and another system with one TITAN X.", "body": "### Environment info\r\nOperating System:\r\nUbuntu 14.04.5 LTS\r\nPython 3.4.3\r\n\r\nInstalled version of CUDA and cuDNN: \r\n(please attach the output of `ls -l /path/to/cuda/lib/libcud*`):\r\nlibcudadevrt.a  libcudart.so.8.0     libcudart_static.a  libcudnn.so.5      libcudnn_static.a\r\nlibcudart.so    libcudart.so.8.0.61  libcudnn.so         libcudnn.so.5.1.5\r\n\r\nIf installed from binary pip package, provide:\r\n\r\n1. A link to the pip package you installed:\r\n`pip install tensorflow-gpu`\r\n2. The output from `python -c \"import tensorflow; print(tensorflow.__version__)\"`.\r\n```\r\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcublas.so.8.0 locally\r\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcudnn.so.5 locally\r\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcufft.so.8.0 locally\r\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcuda.so.1 locally\r\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcurand.so.8.0 locally\r\n1.0.0\r\n```\r\n\r\n### If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\r\n```\r\nfrom tensorflow.python import pywrap_tensorflow\r\npywrap_tensorflow.list_devices()\r\n```\r\n\r\nI have tried this locally on a system with two Quadro K620 and another system with one TITAN X."}