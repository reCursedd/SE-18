{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7585", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7585/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7585/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7585/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/7585", "id": 208180749, "node_id": "MDU6SXNzdWUyMDgxODA3NDk=", "number": 7585, "title": "Invalid argument error from tf.gather_nd after upgrade to r1.0", "user": {"login": "kaufManu", "id": 5639197, "node_id": "MDQ6VXNlcjU2MzkxOTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/5639197?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kaufManu", "html_url": "https://github.com/kaufManu", "followers_url": "https://api.github.com/users/kaufManu/followers", "following_url": "https://api.github.com/users/kaufManu/following{/other_user}", "gists_url": "https://api.github.com/users/kaufManu/gists{/gist_id}", "starred_url": "https://api.github.com/users/kaufManu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kaufManu/subscriptions", "organizations_url": "https://api.github.com/users/kaufManu/orgs", "repos_url": "https://api.github.com/users/kaufManu/repos", "events_url": "https://api.github.com/users/kaufManu/events{/privacy}", "received_events_url": "https://api.github.com/users/kaufManu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 19, "created_at": "2017-02-16T16:52:45Z", "updated_at": "2017-06-16T21:54:00Z", "closed_at": "2017-06-16T21:53:48Z", "author_association": "NONE", "body_html": "<p>I just upgraded to r1.0 and ran into an issue which I find hard to dissect further. The issue did not occur before when I was using version r0.12. The error message is the following:</p>\n<pre><code>InvalidArgumentError (see above for traceback): Must have updates.shape = indices.shape[:IXDIM] + params_shape[IXDIM:], got updates.shape [1,4,1700], indices.shape [1,4,2], params_shape [1,73,1700]\n\t [[Node: gradients/GatherNd_5_grad/ScatterNd = ScatterNd[T=DT_FLOAT, Tindices=DT_INT32, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](GatherNd_5/indices/_77, gradients/AddN_9/_79, gradients/GatherNd_5_grad/Shape)]]\n</code></pre>\n<p>and the stack trace tells me it stems from the last of the following lines:</p>\n<pre><code>def positional(visible):\n    \"\"\"\n    :param visible: a tensor of size (batch_size, input_dim, sequence_length) representing the sequence to be optimized\n    \"\"\"\n    FEET = np.array([4, 5, 8, 9])\n    feet_idx = np.array([range(i, i+3) for i in FEET*3])\n    batch_size = visible.get_shape()[0].value\n    dim = visible.get_shape()[1].value\n    seq_length = visible.get_shape()[2].value\n    idx_x, idx_y, idx_z = feet_idx[:, 0], feet_idx[:, 1], feet_idx[:, 2]\n    idx_x_t = [[[j, i] for i in idx_x] for j in range(batch_size)]\n    idx_y_t = [[[j, i] for i in idx_y] for j in range(batch_size)]\n    v_feet_x = tf.gather_nd(visible, idx_x_t)\n    v_feet_y = tf.gather_nd(visible, idx_y_t) #  stack trace points here\n    ...\n</code></pre>\n<p>This function is called to calculate a cost function which is used during an optimization procedure. See below for a minimum working example.  The error, as far as I can tell from the stack trace, does not happen when the graph is built, but when the computation is executed, which is why I'm not sure how I can further narrow down the problem.</p>\n<h3>Environment info</h3>\n<p>Operating System: Ubuntu 14.04, x64</p>\n<p>Installed version of CUDA and cuDNN: 8.0 and cuDNN 5.1</p>\n<pre><code>-rw-r--r-- 1 root root   556000 Jan 27 00:48 /usr/local/cuda/lib64/libcudadevrt.a\nlrwxrwxrwx 1 root root       16 Jan 27 00:51 /usr/local/cuda/lib64/libcudart.so -&gt; libcudart.so.8.0\nlrwxrwxrwx 1 root root       19 Jan 27 00:51 /usr/local/cuda/lib64/libcudart.so.8.0 -&gt; libcudart.so.8.0.61\n-rw-r--r-- 1 root root   415432 Jan 27 00:48 /usr/local/cuda/lib64/libcudart.so.8.0.61\n-rw-r--r-- 1 root root   775162 Jan 27 00:48 /usr/local/cuda/lib64/libcudart_static.a\nlrwxrwxrwx 1 root root       13 Nov 30 11:39 /usr/local/cuda/lib64/libcudnn.so -&gt; libcudnn.so.5\nlrwxrwxrwx 1 root root       17 Nov 30 11:39 /usr/local/cuda/lib64/libcudnn.so.5 -&gt; libcudnn.so.5.1.5\n-rwxr-xr-x 1 root root 79337624 Nov 30 11:39 /usr/local/cuda/lib64/libcudnn.so.5.1.5\n-rw-r--r-- 1 root root 69756172 Nov 30 11:39 /usr/local/cuda/lib64/libcudnn_static.a\n</code></pre>\n<p>Installed from source from revision <code>16485a3fb5ffcbaa244e55c388e43279d2770982</code> using bazel 0.4.4</p>\n<pre><code>Build label: 0.4.4\nBuild target: bazel-out/local-fastbuild/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar\nBuild time: Wed Feb 1 18:54:21 2017 (1485975261)\nBuild timestamp: 1485975261\nBuild timestamp as int: 1485975261\n</code></pre>\n<h3>Minimum working example</h3>\n<pre><code>import tensorflow as tf\nimport numpy as np\n\ndef get_costs(velos, seq_length):\n    velo_diff = tf.subtract(tf.slice(velos, [0, 0, 1], [-1, -1, seq_length-1]),\n                            tf.slice(velos, [0, 0, 0], [-1, -1, seq_length-1]))\n    velo_diff_sq = tf.multiply(velo_diff, velo_diff)\n    return tf.reduce_mean(velo_diff_sq)\n\n\ndef positional(visible):\n    \"\"\"\n    :param visible: a tensor of size (batch_size, input_dim, sequence_length) representing the sequence to be optimized\n    \"\"\"\n    FEET = np.array([4, 5, 8, 9])\n    feet_idx = np.array([range(i, i+3) for i in FEET*3])\n    batch_size = visible.get_shape()[0].value\n    dim = visible.get_shape()[1].value\n    seq_length = visible.get_shape()[2].value\n    idx_x, idx_y, idx_z = feet_idx[:, 0], feet_idx[:, 1], feet_idx[:, 2]\n    idx_x_t = [[[j, i] for i in idx_x] for j in range(batch_size)]\n    idx_y_t = [[[j, i] for i in idx_y] for j in range(batch_size)]\n    v_feet_x = tf.gather_nd(visible, idx_x_t)\n    v_feet_y = tf.gather_nd(visible, idx_y_t)\n    return get_costs(v_feet_y, seq_length)\n\n\nvisible = tf.Variable(np.reshape(np.arange(365), [1, 73, 5]), dtype=tf.float32)\ncost_op = positional(visible)\ntrain_op = tf.train.AdamOptimizer(0.01).minimize(cost_op)\nwith tf.Session() as sess:\n    sess.run(tf.global_variables_initializer())\n    sess.run([train_op])\n</code></pre>", "body_text": "I just upgraded to r1.0 and ran into an issue which I find hard to dissect further. The issue did not occur before when I was using version r0.12. The error message is the following:\nInvalidArgumentError (see above for traceback): Must have updates.shape = indices.shape[:IXDIM] + params_shape[IXDIM:], got updates.shape [1,4,1700], indices.shape [1,4,2], params_shape [1,73,1700]\n\t [[Node: gradients/GatherNd_5_grad/ScatterNd = ScatterNd[T=DT_FLOAT, Tindices=DT_INT32, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](GatherNd_5/indices/_77, gradients/AddN_9/_79, gradients/GatherNd_5_grad/Shape)]]\n\nand the stack trace tells me it stems from the last of the following lines:\ndef positional(visible):\n    \"\"\"\n    :param visible: a tensor of size (batch_size, input_dim, sequence_length) representing the sequence to be optimized\n    \"\"\"\n    FEET = np.array([4, 5, 8, 9])\n    feet_idx = np.array([range(i, i+3) for i in FEET*3])\n    batch_size = visible.get_shape()[0].value\n    dim = visible.get_shape()[1].value\n    seq_length = visible.get_shape()[2].value\n    idx_x, idx_y, idx_z = feet_idx[:, 0], feet_idx[:, 1], feet_idx[:, 2]\n    idx_x_t = [[[j, i] for i in idx_x] for j in range(batch_size)]\n    idx_y_t = [[[j, i] for i in idx_y] for j in range(batch_size)]\n    v_feet_x = tf.gather_nd(visible, idx_x_t)\n    v_feet_y = tf.gather_nd(visible, idx_y_t) #  stack trace points here\n    ...\n\nThis function is called to calculate a cost function which is used during an optimization procedure. See below for a minimum working example.  The error, as far as I can tell from the stack trace, does not happen when the graph is built, but when the computation is executed, which is why I'm not sure how I can further narrow down the problem.\nEnvironment info\nOperating System: Ubuntu 14.04, x64\nInstalled version of CUDA and cuDNN: 8.0 and cuDNN 5.1\n-rw-r--r-- 1 root root   556000 Jan 27 00:48 /usr/local/cuda/lib64/libcudadevrt.a\nlrwxrwxrwx 1 root root       16 Jan 27 00:51 /usr/local/cuda/lib64/libcudart.so -> libcudart.so.8.0\nlrwxrwxrwx 1 root root       19 Jan 27 00:51 /usr/local/cuda/lib64/libcudart.so.8.0 -> libcudart.so.8.0.61\n-rw-r--r-- 1 root root   415432 Jan 27 00:48 /usr/local/cuda/lib64/libcudart.so.8.0.61\n-rw-r--r-- 1 root root   775162 Jan 27 00:48 /usr/local/cuda/lib64/libcudart_static.a\nlrwxrwxrwx 1 root root       13 Nov 30 11:39 /usr/local/cuda/lib64/libcudnn.so -> libcudnn.so.5\nlrwxrwxrwx 1 root root       17 Nov 30 11:39 /usr/local/cuda/lib64/libcudnn.so.5 -> libcudnn.so.5.1.5\n-rwxr-xr-x 1 root root 79337624 Nov 30 11:39 /usr/local/cuda/lib64/libcudnn.so.5.1.5\n-rw-r--r-- 1 root root 69756172 Nov 30 11:39 /usr/local/cuda/lib64/libcudnn_static.a\n\nInstalled from source from revision 16485a3fb5ffcbaa244e55c388e43279d2770982 using bazel 0.4.4\nBuild label: 0.4.4\nBuild target: bazel-out/local-fastbuild/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar\nBuild time: Wed Feb 1 18:54:21 2017 (1485975261)\nBuild timestamp: 1485975261\nBuild timestamp as int: 1485975261\n\nMinimum working example\nimport tensorflow as tf\nimport numpy as np\n\ndef get_costs(velos, seq_length):\n    velo_diff = tf.subtract(tf.slice(velos, [0, 0, 1], [-1, -1, seq_length-1]),\n                            tf.slice(velos, [0, 0, 0], [-1, -1, seq_length-1]))\n    velo_diff_sq = tf.multiply(velo_diff, velo_diff)\n    return tf.reduce_mean(velo_diff_sq)\n\n\ndef positional(visible):\n    \"\"\"\n    :param visible: a tensor of size (batch_size, input_dim, sequence_length) representing the sequence to be optimized\n    \"\"\"\n    FEET = np.array([4, 5, 8, 9])\n    feet_idx = np.array([range(i, i+3) for i in FEET*3])\n    batch_size = visible.get_shape()[0].value\n    dim = visible.get_shape()[1].value\n    seq_length = visible.get_shape()[2].value\n    idx_x, idx_y, idx_z = feet_idx[:, 0], feet_idx[:, 1], feet_idx[:, 2]\n    idx_x_t = [[[j, i] for i in idx_x] for j in range(batch_size)]\n    idx_y_t = [[[j, i] for i in idx_y] for j in range(batch_size)]\n    v_feet_x = tf.gather_nd(visible, idx_x_t)\n    v_feet_y = tf.gather_nd(visible, idx_y_t)\n    return get_costs(v_feet_y, seq_length)\n\n\nvisible = tf.Variable(np.reshape(np.arange(365), [1, 73, 5]), dtype=tf.float32)\ncost_op = positional(visible)\ntrain_op = tf.train.AdamOptimizer(0.01).minimize(cost_op)\nwith tf.Session() as sess:\n    sess.run(tf.global_variables_initializer())\n    sess.run([train_op])", "body": "I just upgraded to r1.0 and ran into an issue which I find hard to dissect further. The issue did not occur before when I was using version r0.12. The error message is the following:\r\n\r\n```\r\nInvalidArgumentError (see above for traceback): Must have updates.shape = indices.shape[:IXDIM] + params_shape[IXDIM:], got updates.shape [1,4,1700], indices.shape [1,4,2], params_shape [1,73,1700]\r\n\t [[Node: gradients/GatherNd_5_grad/ScatterNd = ScatterNd[T=DT_FLOAT, Tindices=DT_INT32, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](GatherNd_5/indices/_77, gradients/AddN_9/_79, gradients/GatherNd_5_grad/Shape)]]\r\n```\r\n\r\nand the stack trace tells me it stems from the last of the following lines:\r\n\r\n```\r\ndef positional(visible):\r\n    \"\"\"\r\n    :param visible: a tensor of size (batch_size, input_dim, sequence_length) representing the sequence to be optimized\r\n    \"\"\"\r\n    FEET = np.array([4, 5, 8, 9])\r\n    feet_idx = np.array([range(i, i+3) for i in FEET*3])\r\n    batch_size = visible.get_shape()[0].value\r\n    dim = visible.get_shape()[1].value\r\n    seq_length = visible.get_shape()[2].value\r\n    idx_x, idx_y, idx_z = feet_idx[:, 0], feet_idx[:, 1], feet_idx[:, 2]\r\n    idx_x_t = [[[j, i] for i in idx_x] for j in range(batch_size)]\r\n    idx_y_t = [[[j, i] for i in idx_y] for j in range(batch_size)]\r\n    v_feet_x = tf.gather_nd(visible, idx_x_t)\r\n    v_feet_y = tf.gather_nd(visible, idx_y_t) #  stack trace points here\r\n    ...\r\n```\r\nThis function is called to calculate a cost function which is used during an optimization procedure. See below for a minimum working example.  The error, as far as I can tell from the stack trace, does not happen when the graph is built, but when the computation is executed, which is why I'm not sure how I can further narrow down the problem.\r\n\r\n### Environment info\r\nOperating System: Ubuntu 14.04, x64\r\n\r\nInstalled version of CUDA and cuDNN: 8.0 and cuDNN 5.1\r\n```\r\n-rw-r--r-- 1 root root   556000 Jan 27 00:48 /usr/local/cuda/lib64/libcudadevrt.a\r\nlrwxrwxrwx 1 root root       16 Jan 27 00:51 /usr/local/cuda/lib64/libcudart.so -> libcudart.so.8.0\r\nlrwxrwxrwx 1 root root       19 Jan 27 00:51 /usr/local/cuda/lib64/libcudart.so.8.0 -> libcudart.so.8.0.61\r\n-rw-r--r-- 1 root root   415432 Jan 27 00:48 /usr/local/cuda/lib64/libcudart.so.8.0.61\r\n-rw-r--r-- 1 root root   775162 Jan 27 00:48 /usr/local/cuda/lib64/libcudart_static.a\r\nlrwxrwxrwx 1 root root       13 Nov 30 11:39 /usr/local/cuda/lib64/libcudnn.so -> libcudnn.so.5\r\nlrwxrwxrwx 1 root root       17 Nov 30 11:39 /usr/local/cuda/lib64/libcudnn.so.5 -> libcudnn.so.5.1.5\r\n-rwxr-xr-x 1 root root 79337624 Nov 30 11:39 /usr/local/cuda/lib64/libcudnn.so.5.1.5\r\n-rw-r--r-- 1 root root 69756172 Nov 30 11:39 /usr/local/cuda/lib64/libcudnn_static.a\r\n```\r\nInstalled from source from revision `16485a3fb5ffcbaa244e55c388e43279d2770982` using bazel 0.4.4\r\n\r\n```\r\nBuild label: 0.4.4\r\nBuild target: bazel-out/local-fastbuild/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar\r\nBuild time: Wed Feb 1 18:54:21 2017 (1485975261)\r\nBuild timestamp: 1485975261\r\nBuild timestamp as int: 1485975261\r\n```\r\n\r\n### Minimum working example\r\n\r\n```\r\nimport tensorflow as tf\r\nimport numpy as np\r\n\r\ndef get_costs(velos, seq_length):\r\n    velo_diff = tf.subtract(tf.slice(velos, [0, 0, 1], [-1, -1, seq_length-1]),\r\n                            tf.slice(velos, [0, 0, 0], [-1, -1, seq_length-1]))\r\n    velo_diff_sq = tf.multiply(velo_diff, velo_diff)\r\n    return tf.reduce_mean(velo_diff_sq)\r\n\r\n\r\ndef positional(visible):\r\n    \"\"\"\r\n    :param visible: a tensor of size (batch_size, input_dim, sequence_length) representing the sequence to be optimized\r\n    \"\"\"\r\n    FEET = np.array([4, 5, 8, 9])\r\n    feet_idx = np.array([range(i, i+3) for i in FEET*3])\r\n    batch_size = visible.get_shape()[0].value\r\n    dim = visible.get_shape()[1].value\r\n    seq_length = visible.get_shape()[2].value\r\n    idx_x, idx_y, idx_z = feet_idx[:, 0], feet_idx[:, 1], feet_idx[:, 2]\r\n    idx_x_t = [[[j, i] for i in idx_x] for j in range(batch_size)]\r\n    idx_y_t = [[[j, i] for i in idx_y] for j in range(batch_size)]\r\n    v_feet_x = tf.gather_nd(visible, idx_x_t)\r\n    v_feet_y = tf.gather_nd(visible, idx_y_t)\r\n    return get_costs(v_feet_y, seq_length)\r\n\r\n\r\nvisible = tf.Variable(np.reshape(np.arange(365), [1, 73, 5]), dtype=tf.float32)\r\ncost_op = positional(visible)\r\ntrain_op = tf.train.AdamOptimizer(0.01).minimize(cost_op)\r\nwith tf.Session() as sess:\r\n    sess.run(tf.global_variables_initializer())\r\n    sess.run([train_op])\r\n```\r\n"}