{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/384959595", "html_url": "https://github.com/tensorflow/tensorflow/issues/14897#issuecomment-384959595", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14897", "id": 384959595, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDk1OTU5NQ==", "user": {"login": "wizyoung", "id": 13296106, "node_id": "MDQ6VXNlcjEzMjk2MTA2", "avatar_url": "https://avatars3.githubusercontent.com/u/13296106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wizyoung", "html_url": "https://github.com/wizyoung", "followers_url": "https://api.github.com/users/wizyoung/followers", "following_url": "https://api.github.com/users/wizyoung/following{/other_user}", "gists_url": "https://api.github.com/users/wizyoung/gists{/gist_id}", "starred_url": "https://api.github.com/users/wizyoung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wizyoung/subscriptions", "organizations_url": "https://api.github.com/users/wizyoung/orgs", "repos_url": "https://api.github.com/users/wizyoung/repos", "events_url": "https://api.github.com/users/wizyoung/events{/privacy}", "received_events_url": "https://api.github.com/users/wizyoung/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-27T12:46:01Z", "updated_at": "2018-04-28T03:23:35Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=21365017\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/GuitarmonYz\">@GuitarmonYz</a>  Actually it's not a bug of TensorFlow but a feature of Python. <code>[lstm]*2</code> may not behave as you expect. The list it creates contains two elements referring to the <strong>same</strong> lstm cell instance instead of two separate ones. Here is an example:</p>\n<div class=\"highlight highlight-source-shell\"><pre>&gt;&gt;&gt; l = [{<span class=\"pl-s\"><span class=\"pl-pds\">'</span>a<span class=\"pl-pds\">'</span></span>: 1}] <span class=\"pl-k\">*</span> 4\n&gt;&gt;&gt; l\n[{<span class=\"pl-s\"><span class=\"pl-pds\">'</span>a<span class=\"pl-pds\">'</span></span>: 1}, {<span class=\"pl-s\"><span class=\"pl-pds\">'</span>a<span class=\"pl-pds\">'</span></span>: 1}, {<span class=\"pl-s\"><span class=\"pl-pds\">'</span>a<span class=\"pl-pds\">'</span></span>: 1}, {<span class=\"pl-s\"><span class=\"pl-pds\">'</span>a<span class=\"pl-pds\">'</span></span>: 1}]\n&gt;&gt;&gt; l[0][<span class=\"pl-s\"><span class=\"pl-pds\">'</span>a<span class=\"pl-pds\">'</span></span>] = 2\n&gt;&gt;&gt; l\n[{<span class=\"pl-s\"><span class=\"pl-pds\">'</span>a<span class=\"pl-pds\">'</span></span>: 2}, {<span class=\"pl-s\"><span class=\"pl-pds\">'</span>a<span class=\"pl-pds\">'</span></span>: 2}, {<span class=\"pl-s\"><span class=\"pl-pds\">'</span>a<span class=\"pl-pds\">'</span></span>: 2}, {<span class=\"pl-s\"><span class=\"pl-pds\">'</span>a<span class=\"pl-pds\">'</span></span>: 2}]\n&gt;&gt;&gt; ll = [{<span class=\"pl-s\"><span class=\"pl-pds\">'</span>a<span class=\"pl-pds\">'</span></span>: 1} <span class=\"pl-k\">for</span> <span class=\"pl-smi\">_</span> <span class=\"pl-k\">in</span> range(4)]\n&gt;&gt;&gt; ll\n[{<span class=\"pl-s\"><span class=\"pl-pds\">'</span>a<span class=\"pl-pds\">'</span></span>: 1}, {<span class=\"pl-s\"><span class=\"pl-pds\">'</span>a<span class=\"pl-pds\">'</span></span>: 1}, {<span class=\"pl-s\"><span class=\"pl-pds\">'</span>a<span class=\"pl-pds\">'</span></span>: 1}, {<span class=\"pl-s\"><span class=\"pl-pds\">'</span>a<span class=\"pl-pds\">'</span></span>: 1}]\n&gt;&gt;&gt; ll[0][<span class=\"pl-s\"><span class=\"pl-pds\">'</span>a<span class=\"pl-pds\">'</span></span>] = 2\n&gt;&gt;&gt; ll\n[{<span class=\"pl-s\"><span class=\"pl-pds\">'</span>a<span class=\"pl-pds\">'</span></span>: 2}, {<span class=\"pl-s\"><span class=\"pl-pds\">'</span>a<span class=\"pl-pds\">'</span></span>: 1}, {<span class=\"pl-s\"><span class=\"pl-pds\">'</span>a<span class=\"pl-pds\">'</span></span>: 1}, {<span class=\"pl-s\"><span class=\"pl-pds\">'</span>a<span class=\"pl-pds\">'</span></span>: 1}]</pre></div>\n<p>So using list comprehension or for loop is the correct way to create separate RNN instances in  <code>MultiRNNCell</code>.</p>", "body_text": "@GuitarmonYz  Actually it's not a bug of TensorFlow but a feature of Python. [lstm]*2 may not behave as you expect. The list it creates contains two elements referring to the same lstm cell instance instead of two separate ones. Here is an example:\n>>> l = [{'a': 1}] * 4\n>>> l\n[{'a': 1}, {'a': 1}, {'a': 1}, {'a': 1}]\n>>> l[0]['a'] = 2\n>>> l\n[{'a': 2}, {'a': 2}, {'a': 2}, {'a': 2}]\n>>> ll = [{'a': 1} for _ in range(4)]\n>>> ll\n[{'a': 1}, {'a': 1}, {'a': 1}, {'a': 1}]\n>>> ll[0]['a'] = 2\n>>> ll\n[{'a': 2}, {'a': 1}, {'a': 1}, {'a': 1}]\nSo using list comprehension or for loop is the correct way to create separate RNN instances in  MultiRNNCell.", "body": "@GuitarmonYz  Actually it's not a bug of TensorFlow but a feature of Python. `[lstm]*2` may not behave as you expect. The list it creates contains two elements referring to the **same** lstm cell instance instead of two separate ones. Here is an example:\r\n```shell\r\n>>> l = [{'a': 1}] * 4\r\n>>> l\r\n[{'a': 1}, {'a': 1}, {'a': 1}, {'a': 1}]\r\n>>> l[0]['a'] = 2\r\n>>> l\r\n[{'a': 2}, {'a': 2}, {'a': 2}, {'a': 2}]\r\n>>> ll = [{'a': 1} for _ in range(4)]\r\n>>> ll\r\n[{'a': 1}, {'a': 1}, {'a': 1}, {'a': 1}]\r\n>>> ll[0]['a'] = 2\r\n>>> ll\r\n[{'a': 2}, {'a': 1}, {'a': 1}, {'a': 1}]\r\n```\r\nSo using list comprehension or for loop is the correct way to create separate RNN instances in  `MultiRNNCell`.  "}