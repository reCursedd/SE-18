{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19567", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19567/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19567/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19567/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19567", "id": 326700789, "node_id": "MDU6SXNzdWUzMjY3MDA3ODk=", "number": 19567, "title": "[BUG] max_pooling1d can not run in GPU ", "user": {"login": "simon-moloco", "id": 25159955, "node_id": "MDQ6VXNlcjI1MTU5OTU1", "avatar_url": "https://avatars3.githubusercontent.com/u/25159955?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simon-moloco", "html_url": "https://github.com/simon-moloco", "followers_url": "https://api.github.com/users/simon-moloco/followers", "following_url": "https://api.github.com/users/simon-moloco/following{/other_user}", "gists_url": "https://api.github.com/users/simon-moloco/gists{/gist_id}", "starred_url": "https://api.github.com/users/simon-moloco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simon-moloco/subscriptions", "organizations_url": "https://api.github.com/users/simon-moloco/orgs", "repos_url": "https://api.github.com/users/simon-moloco/repos", "events_url": "https://api.github.com/users/simon-moloco/events{/privacy}", "received_events_url": "https://api.github.com/users/simon-moloco/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "robieta", "id": 13089297, "node_id": "MDQ6VXNlcjEzMDg5Mjk3", "avatar_url": "https://avatars0.githubusercontent.com/u/13089297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robieta", "html_url": "https://github.com/robieta", "followers_url": "https://api.github.com/users/robieta/followers", "following_url": "https://api.github.com/users/robieta/following{/other_user}", "gists_url": "https://api.github.com/users/robieta/gists{/gist_id}", "starred_url": "https://api.github.com/users/robieta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robieta/subscriptions", "organizations_url": "https://api.github.com/users/robieta/orgs", "repos_url": "https://api.github.com/users/robieta/repos", "events_url": "https://api.github.com/users/robieta/events{/privacy}", "received_events_url": "https://api.github.com/users/robieta/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "robieta", "id": 13089297, "node_id": "MDQ6VXNlcjEzMDg5Mjk3", "avatar_url": "https://avatars0.githubusercontent.com/u/13089297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robieta", "html_url": "https://github.com/robieta", "followers_url": "https://api.github.com/users/robieta/followers", "following_url": "https://api.github.com/users/robieta/following{/other_user}", "gists_url": "https://api.github.com/users/robieta/gists{/gist_id}", "starred_url": "https://api.github.com/users/robieta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robieta/subscriptions", "organizations_url": "https://api.github.com/users/robieta/orgs", "repos_url": "https://api.github.com/users/robieta/repos", "events_url": "https://api.github.com/users/robieta/events{/privacy}", "received_events_url": "https://api.github.com/users/robieta/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-05-26T01:49:47Z", "updated_at": "2018-11-14T19:19:23Z", "closed_at": null, "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.6.0</li>\n<li><strong>Python version</strong>: 2.71.0</li>\n<li><strong>Bazel version (if compiling from source)</strong>:</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:</li>\n<li><strong>CUDA/cuDNN version</strong>:  9.0/7102</li>\n<li><strong>GPU model and memory</strong>: 3x GeForce GTX 1080 at 8G</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I have a rank-2 tensor, say a 1024*512 tensor, and I want to apply 1D max pooling. If I run in CPU, codes work great. However, If I run in GPU, codes will throw exceptions like the following.</p>\n<pre><code>2018-05-25 18:28:34.272767: E tensorflow/stream_executor/cuda/cuda_dnn.cc:396] Loaded runtime CuDNN library: 7102 (compatibility version 7100) but source was compiled with 7005 (compatibility version 7000).  If using a binary install, upgrade your CuDNN library to match.  If building from sources, make sure the library loaded at runtime matches a compatible version specified during compile configuration.\n2018-05-25 18:28:34.273613: W ./tensorflow/stream_executor/stream.h:2018] attempting to perform DNN operation using StreamExecutor without DNN support\nTraceback (most recent call last):\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py\", line 355, in train\n    loss = self._train_model(input_fn, hooks, saving_listeners)\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py\", line 903, in _train_model\n    _, loss = mon_sess.run([estimator_spec.train_op, estimator_spec.loss])\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/training/monitored_session.py\", line 546, in run\n    run_metadata=run_metadata)\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/training/monitored_session.py\", line 1022, in run\n    run_metadata=run_metadata)\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/training/monitored_session.py\", line 1113, in run\n    raise six.reraise(*original_exc_info)\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/training/monitored_session.py\", line 1098, in run\n    return self._sess.run(*args, **kwargs)\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/training/monitored_session.py\", line 1170, in run\n    run_metadata=run_metadata)\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/training/monitored_session.py\", line 950, in run\n    return self._sess.run(*args, **kwargs)\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 905, in run\n    run_metadata_ptr)\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 1140, in _run\n    feed_dict_tensor, options, run_metadata)\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 1321, in _do_run\n    run_metadata)\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 1340, in _do_call\n    raise type(e)(node_def, op, message)\ntensorflow.python.framework.errors_impl.InternalError: cudnn PoolForward launch failed\n\t [[Node: dnn/input_from_feature_columns_2/max_pooling1d/MaxPool = MaxPool[T=DT_FLOAT, data_format=\"NCHW\", ksize=[1, 1, 1, 3], padding=\"SAME\", strides=[1, 1, 1, 3], _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](dnn/input_from_feature_columns_2/max_pooling1d/MaxPool-0-TransposeNHWCToNCHW-LayoutOptimizer)]]\n\t [[Node: dnn/gradients/dnn/input_from_feature_columns_2/input_layer/b_media_appbundle_format_embedding/b_media_appbundle_format_embedding_weights_grad/Select_1/_313 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:CPU:0\", send_device=\"/job:localhost/replica:0/task:0/device:GPU:0\", send_device_incarnation=1, tensor_name=\"edge_1344_...d/Select_1\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"]()]]\n\nCaused by op u'dnn/input_from_feature_columns_2/max_pooling1d/MaxPool', defined at:\n  File \"/usr/lib/python2.7/runpy.py\", line 174, in _run_module_as_main\n    \"__main__\", fname, loader, pkg_name)\n  File \"/usr/lib/python2.7/runpy.py\", line 72, in _run_code\n    exec code in run_globals\n  File \"/data2/jenkins/src/marvel2/python/moloco/deploy/models/tf_dnn/training/main/task.py\", line 66, in &lt;module&gt;\n    tf.app.run()\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/platform/app.py\", line 126, in run\n    _sys.exit(main(argv))\n  File \"/data2/jenkins/src/marvel2/python/moloco/deploy/models/tf_dnn/training/main/task.py\", line 61, in main\n    t.train_eval()\n  File \"/data2/jenkins/src/marvel2/python/moloco/learn/training/trainer.py\", line 127, in train_eval\n    self.model.train_eval(config, model_dir, train_data, eval_data)\n  File \"/data2/jenkins/src/marvel2/python/moloco/learn/models/tf_deep.py\", line 170, in train_eval\n    training.train_and_evaluate(m, train_spec, eval_spec)\n  File \"/data2/jenkins/src/marvel2/python/moloco/learn/estimators/training.py\", line 401, in train_and_evaluate\n    executor.run_local()\n  File \"/data2/jenkins/src/marvel2/python/moloco/learn/estimators/training.py\", line 572, in run_local\n    self._estimator.train(input_fn=self._train_spec.input_fn, max_steps=max_steps, hooks=train_hooks)\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py\", line 355, in train\n    loss = self._train_model(input_fn, hooks, saving_listeners)\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py\", line 824, in _train_model\n    features, labels, model_fn_lib.ModeKeys.TRAIN, self.config)\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py\", line 805, in _call_model_fn\n    model_fn_results = self._model_fn(features=features, **kwargs)\n  File \"/data2/jenkins/src/marvel2/python/moloco/learn/estimators/dnn.py\", line 466, in _model_fn\n    config=config)\n  File \"/data2/jenkins/src/marvel2/python/moloco/learn/estimators/dnn.py\", line 224, in _dnn_model_fn\n    last_layer_feats=ll_feats.values())\n  File \"/data2/jenkins/src/marvel2/python/moloco/learn/estimators/logit_ops.py\", line 301, in build_dnn_logits\n    last_layer_feats=last_layer_feats)\n  File \"/data2/jenkins/src/marvel2/python/moloco/learn/estimators/logit_ops.py\", line 206, in build_hidden_layers\n    net = apply_pooling(net, pooling, pooling_size, pooling_stride)\n  File \"/data2/jenkins/src/marvel2/python/moloco/learn/estimators/logit_ops.py\", line 343, in apply_pooling\n    o = tf.layers.max_pooling1d(o, pooling_size, strides=pooling_stride, padding=\"same\")\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/layers/pooling.py\", line 231, in max_pooling1d\n    return layer.apply(inputs)\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/layers/base.py\", line 825, in apply\n    return self.__call__(inputs, *args, **kwargs)\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/layers/base.py\", line 714, in __call__\n    outputs = self.call(inputs, *args, **kwargs)\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/layers/pooling.py\", line 86, in call\n    data_format=data_format)\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/ops/nn_ops.py\", line 2144, in max_pool\n    name=name)\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/ops/gen_nn_ops.py\", line 4587, in max_pool\n    data_format=data_format, name=name)\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py\", line 787, in _apply_op_helper\n    op_def=op_def)\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 3290, in create_op\n    op_def=op_def)\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1654, in __init__\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\n\nInternalError (see above for traceback): cudnn PoolForward launch failed\n\t [[Node: dnn/input_from_feature_columns_2/max_pooling1d/MaxPool = MaxPool[T=DT_FLOAT, data_format=\"NCHW\", ksize=[1, 1, 1, 3], padding=\"SAME\", strides=[1, 1, 1, 3], _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](dnn/input_from_feature_columns_2/max_pooling1d/MaxPool-0-TransposeNHWCToNCHW-LayoutOptimizer)]]\n\t [[Node: dnn/gradients/dnn/input_from_feature_columns_2/input_layer/b_media_appbundle_format_embedding/b_media_appbundle_format_embedding_weights_grad/Select_1/_313 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:CPU:0\", send_device=\"/job:localhost/replica:0/task:0/device:GPU:0\", send_device_incarnation=1, tensor_name=\"edge_1344_...d/Select_1\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"]()]]\n\nINFO:root:RETURN CODES: 1\n</code></pre>\n<h3>Source code / logs</h3>\n<p>Here are my codes:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">apply_pooling</span>(<span class=\"pl-smi\">inputs</span>, <span class=\"pl-smi\">pooling</span>, <span class=\"pl-smi\">pooling_size</span>, <span class=\"pl-smi\">pooling_stride</span>):\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"\"\"</span>Apply pooling operations on inputs tensor.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">  Args:</span>\n<span class=\"pl-s\">    inputs: A tensor with at least 3 rank.</span>\n<span class=\"pl-s\">    pooling: When not `None`, `max` means max pooling, and `average` means average pooling.</span>\n<span class=\"pl-s\">    pooling_size: The pooling size in all spatial dimensions.</span>\n<span class=\"pl-s\">    pooling_stride: The stride operation size in all spatial dimensions.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">  Returns:</span>\n<span class=\"pl-s\">    A tensors after applying for pooling strategy.</span>\n<span class=\"pl-s\">  <span class=\"pl-pds\">\"\"\"</span></span>\n  <span class=\"pl-k\">if</span> pooling <span class=\"pl-k\">is</span> <span class=\"pl-c1\">None</span> <span class=\"pl-k\">or</span> pooling <span class=\"pl-k\">==</span> Pooling.<span class=\"pl-c1\">NONE</span>:\n    <span class=\"pl-k\">return</span> inputs\n\n  <span class=\"pl-c\"><span class=\"pl-c\">#</span> Expand dimension if inputs has not enough rank</span>\n  ndims <span class=\"pl-k\">=</span> <span class=\"pl-c1\">len</span>(inputs.get_shape().as_list())\n  <span class=\"pl-k\">if</span> ndims <span class=\"pl-k\">==</span> <span class=\"pl-c1\">1</span>:\n    <span class=\"pl-k\">raise</span> <span class=\"pl-c1\">ValueError</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>inputs must be at least rank 2. Given it's <span class=\"pl-c1\">{}</span><span class=\"pl-pds\">\"</span></span>.format(ndims))\n  o <span class=\"pl-k\">=</span> inputs\n  <span class=\"pl-k\">if</span> ndims <span class=\"pl-k\">==</span> <span class=\"pl-c1\">2</span>:\n    o <span class=\"pl-k\">=</span> tf.expand_dims(o, <span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>)\n  <span class=\"pl-c\"><span class=\"pl-c\">#</span> <span class=\"pl-k\">TODO</span>: fix the issue of not being able to run pooling in GPU</span>\n  <span class=\"pl-k\">if</span> pooling <span class=\"pl-k\">==</span> Pooling.<span class=\"pl-c1\">MAX</span>:\n    o <span class=\"pl-k\">=</span> tf.layers.max_pooling1d(o, pooling_size, <span class=\"pl-v\">strides</span><span class=\"pl-k\">=</span>pooling_stride, <span class=\"pl-v\">padding</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>same<span class=\"pl-pds\">\"</span></span>)\n  <span class=\"pl-k\">elif</span> pooling <span class=\"pl-k\">==</span> Pooling.<span class=\"pl-c1\">AVERAGE</span>:\n    o <span class=\"pl-k\">=</span> tf.layers.average_pooling1d(o, pooling_size, <span class=\"pl-v\">strides</span><span class=\"pl-k\">=</span>pooling_stride, <span class=\"pl-v\">padding</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>same<span class=\"pl-pds\">\"</span></span>)\n  <span class=\"pl-k\">else</span>:\n    <span class=\"pl-k\">raise</span> <span class=\"pl-c1\">ValueError</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Unsupported pooling strategy: <span class=\"pl-c1\">{}</span><span class=\"pl-pds\">\"</span></span>.format(pooling))\n  <span class=\"pl-c\"><span class=\"pl-c\">#</span> Squeeze dimenion if necessary</span>\n  <span class=\"pl-k\">if</span> ndims <span class=\"pl-k\">==</span> <span class=\"pl-c1\">2</span>:\n    o <span class=\"pl-k\">=</span> tf.squeeze(o, <span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>)\n  <span class=\"pl-k\">return</span> o</pre></div>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): 1.6.0\nPython version: 2.71.0\nBazel version (if compiling from source):\nGCC/Compiler version (if compiling from source):\nCUDA/cuDNN version:  9.0/7102\nGPU model and memory: 3x GeForce GTX 1080 at 8G\nExact command to reproduce:\n\nDescribe the problem\nI have a rank-2 tensor, say a 1024*512 tensor, and I want to apply 1D max pooling. If I run in CPU, codes work great. However, If I run in GPU, codes will throw exceptions like the following.\n2018-05-25 18:28:34.272767: E tensorflow/stream_executor/cuda/cuda_dnn.cc:396] Loaded runtime CuDNN library: 7102 (compatibility version 7100) but source was compiled with 7005 (compatibility version 7000).  If using a binary install, upgrade your CuDNN library to match.  If building from sources, make sure the library loaded at runtime matches a compatible version specified during compile configuration.\n2018-05-25 18:28:34.273613: W ./tensorflow/stream_executor/stream.h:2018] attempting to perform DNN operation using StreamExecutor without DNN support\nTraceback (most recent call last):\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py\", line 355, in train\n    loss = self._train_model(input_fn, hooks, saving_listeners)\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py\", line 903, in _train_model\n    _, loss = mon_sess.run([estimator_spec.train_op, estimator_spec.loss])\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/training/monitored_session.py\", line 546, in run\n    run_metadata=run_metadata)\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/training/monitored_session.py\", line 1022, in run\n    run_metadata=run_metadata)\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/training/monitored_session.py\", line 1113, in run\n    raise six.reraise(*original_exc_info)\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/training/monitored_session.py\", line 1098, in run\n    return self._sess.run(*args, **kwargs)\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/training/monitored_session.py\", line 1170, in run\n    run_metadata=run_metadata)\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/training/monitored_session.py\", line 950, in run\n    return self._sess.run(*args, **kwargs)\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 905, in run\n    run_metadata_ptr)\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 1140, in _run\n    feed_dict_tensor, options, run_metadata)\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 1321, in _do_run\n    run_metadata)\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 1340, in _do_call\n    raise type(e)(node_def, op, message)\ntensorflow.python.framework.errors_impl.InternalError: cudnn PoolForward launch failed\n\t [[Node: dnn/input_from_feature_columns_2/max_pooling1d/MaxPool = MaxPool[T=DT_FLOAT, data_format=\"NCHW\", ksize=[1, 1, 1, 3], padding=\"SAME\", strides=[1, 1, 1, 3], _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](dnn/input_from_feature_columns_2/max_pooling1d/MaxPool-0-TransposeNHWCToNCHW-LayoutOptimizer)]]\n\t [[Node: dnn/gradients/dnn/input_from_feature_columns_2/input_layer/b_media_appbundle_format_embedding/b_media_appbundle_format_embedding_weights_grad/Select_1/_313 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:CPU:0\", send_device=\"/job:localhost/replica:0/task:0/device:GPU:0\", send_device_incarnation=1, tensor_name=\"edge_1344_...d/Select_1\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"]()]]\n\nCaused by op u'dnn/input_from_feature_columns_2/max_pooling1d/MaxPool', defined at:\n  File \"/usr/lib/python2.7/runpy.py\", line 174, in _run_module_as_main\n    \"__main__\", fname, loader, pkg_name)\n  File \"/usr/lib/python2.7/runpy.py\", line 72, in _run_code\n    exec code in run_globals\n  File \"/data2/jenkins/src/marvel2/python/moloco/deploy/models/tf_dnn/training/main/task.py\", line 66, in <module>\n    tf.app.run()\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/platform/app.py\", line 126, in run\n    _sys.exit(main(argv))\n  File \"/data2/jenkins/src/marvel2/python/moloco/deploy/models/tf_dnn/training/main/task.py\", line 61, in main\n    t.train_eval()\n  File \"/data2/jenkins/src/marvel2/python/moloco/learn/training/trainer.py\", line 127, in train_eval\n    self.model.train_eval(config, model_dir, train_data, eval_data)\n  File \"/data2/jenkins/src/marvel2/python/moloco/learn/models/tf_deep.py\", line 170, in train_eval\n    training.train_and_evaluate(m, train_spec, eval_spec)\n  File \"/data2/jenkins/src/marvel2/python/moloco/learn/estimators/training.py\", line 401, in train_and_evaluate\n    executor.run_local()\n  File \"/data2/jenkins/src/marvel2/python/moloco/learn/estimators/training.py\", line 572, in run_local\n    self._estimator.train(input_fn=self._train_spec.input_fn, max_steps=max_steps, hooks=train_hooks)\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py\", line 355, in train\n    loss = self._train_model(input_fn, hooks, saving_listeners)\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py\", line 824, in _train_model\n    features, labels, model_fn_lib.ModeKeys.TRAIN, self.config)\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py\", line 805, in _call_model_fn\n    model_fn_results = self._model_fn(features=features, **kwargs)\n  File \"/data2/jenkins/src/marvel2/python/moloco/learn/estimators/dnn.py\", line 466, in _model_fn\n    config=config)\n  File \"/data2/jenkins/src/marvel2/python/moloco/learn/estimators/dnn.py\", line 224, in _dnn_model_fn\n    last_layer_feats=ll_feats.values())\n  File \"/data2/jenkins/src/marvel2/python/moloco/learn/estimators/logit_ops.py\", line 301, in build_dnn_logits\n    last_layer_feats=last_layer_feats)\n  File \"/data2/jenkins/src/marvel2/python/moloco/learn/estimators/logit_ops.py\", line 206, in build_hidden_layers\n    net = apply_pooling(net, pooling, pooling_size, pooling_stride)\n  File \"/data2/jenkins/src/marvel2/python/moloco/learn/estimators/logit_ops.py\", line 343, in apply_pooling\n    o = tf.layers.max_pooling1d(o, pooling_size, strides=pooling_stride, padding=\"same\")\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/layers/pooling.py\", line 231, in max_pooling1d\n    return layer.apply(inputs)\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/layers/base.py\", line 825, in apply\n    return self.__call__(inputs, *args, **kwargs)\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/layers/base.py\", line 714, in __call__\n    outputs = self.call(inputs, *args, **kwargs)\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/layers/pooling.py\", line 86, in call\n    data_format=data_format)\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/ops/nn_ops.py\", line 2144, in max_pool\n    name=name)\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/ops/gen_nn_ops.py\", line 4587, in max_pool\n    data_format=data_format, name=name)\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py\", line 787, in _apply_op_helper\n    op_def=op_def)\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 3290, in create_op\n    op_def=op_def)\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1654, in __init__\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\n\nInternalError (see above for traceback): cudnn PoolForward launch failed\n\t [[Node: dnn/input_from_feature_columns_2/max_pooling1d/MaxPool = MaxPool[T=DT_FLOAT, data_format=\"NCHW\", ksize=[1, 1, 1, 3], padding=\"SAME\", strides=[1, 1, 1, 3], _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](dnn/input_from_feature_columns_2/max_pooling1d/MaxPool-0-TransposeNHWCToNCHW-LayoutOptimizer)]]\n\t [[Node: dnn/gradients/dnn/input_from_feature_columns_2/input_layer/b_media_appbundle_format_embedding/b_media_appbundle_format_embedding_weights_grad/Select_1/_313 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:CPU:0\", send_device=\"/job:localhost/replica:0/task:0/device:GPU:0\", send_device_incarnation=1, tensor_name=\"edge_1344_...d/Select_1\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"]()]]\n\nINFO:root:RETURN CODES: 1\n\nSource code / logs\nHere are my codes:\ndef apply_pooling(inputs, pooling, pooling_size, pooling_stride):\n  \"\"\"Apply pooling operations on inputs tensor.\n\n  Args:\n    inputs: A tensor with at least 3 rank.\n    pooling: When not `None`, `max` means max pooling, and `average` means average pooling.\n    pooling_size: The pooling size in all spatial dimensions.\n    pooling_stride: The stride operation size in all spatial dimensions.\n\n  Returns:\n    A tensors after applying for pooling strategy.\n  \"\"\"\n  if pooling is None or pooling == Pooling.NONE:\n    return inputs\n\n  # Expand dimension if inputs has not enough rank\n  ndims = len(inputs.get_shape().as_list())\n  if ndims == 1:\n    raise ValueError(\"inputs must be at least rank 2. Given it's {}\".format(ndims))\n  o = inputs\n  if ndims == 2:\n    o = tf.expand_dims(o, -1)\n  # TODO: fix the issue of not being able to run pooling in GPU\n  if pooling == Pooling.MAX:\n    o = tf.layers.max_pooling1d(o, pooling_size, strides=pooling_stride, padding=\"same\")\n  elif pooling == Pooling.AVERAGE:\n    o = tf.layers.average_pooling1d(o, pooling_size, strides=pooling_stride, padding=\"same\")\n  else:\n    raise ValueError(\"Unsupported pooling strategy: {}\".format(pooling))\n  # Squeeze dimenion if necessary\n  if ndims == 2:\n    o = tf.squeeze(o, -1)\n  return o", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.6.0\r\n- **Python version**: 2.71.0\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**:  9.0/7102\r\n- **GPU model and memory**: 3x GeForce GTX 1080 at 8G\r\n- **Exact command to reproduce**: \r\n\r\n### Describe the problem\r\n\r\nI have a rank-2 tensor, say a 1024*512 tensor, and I want to apply 1D max pooling. If I run in CPU, codes work great. However, If I run in GPU, codes will throw exceptions like the following.\r\n\r\n```\r\n2018-05-25 18:28:34.272767: E tensorflow/stream_executor/cuda/cuda_dnn.cc:396] Loaded runtime CuDNN library: 7102 (compatibility version 7100) but source was compiled with 7005 (compatibility version 7000).  If using a binary install, upgrade your CuDNN library to match.  If building from sources, make sure the library loaded at runtime matches a compatible version specified during compile configuration.\r\n2018-05-25 18:28:34.273613: W ./tensorflow/stream_executor/stream.h:2018] attempting to perform DNN operation using StreamExecutor without DNN support\r\nTraceback (most recent call last):\r\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py\", line 355, in train\r\n    loss = self._train_model(input_fn, hooks, saving_listeners)\r\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py\", line 903, in _train_model\r\n    _, loss = mon_sess.run([estimator_spec.train_op, estimator_spec.loss])\r\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/training/monitored_session.py\", line 546, in run\r\n    run_metadata=run_metadata)\r\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/training/monitored_session.py\", line 1022, in run\r\n    run_metadata=run_metadata)\r\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/training/monitored_session.py\", line 1113, in run\r\n    raise six.reraise(*original_exc_info)\r\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/training/monitored_session.py\", line 1098, in run\r\n    return self._sess.run(*args, **kwargs)\r\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/training/monitored_session.py\", line 1170, in run\r\n    run_metadata=run_metadata)\r\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/training/monitored_session.py\", line 950, in run\r\n    return self._sess.run(*args, **kwargs)\r\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 905, in run\r\n    run_metadata_ptr)\r\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 1140, in _run\r\n    feed_dict_tensor, options, run_metadata)\r\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 1321, in _do_run\r\n    run_metadata)\r\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 1340, in _do_call\r\n    raise type(e)(node_def, op, message)\r\ntensorflow.python.framework.errors_impl.InternalError: cudnn PoolForward launch failed\r\n\t [[Node: dnn/input_from_feature_columns_2/max_pooling1d/MaxPool = MaxPool[T=DT_FLOAT, data_format=\"NCHW\", ksize=[1, 1, 1, 3], padding=\"SAME\", strides=[1, 1, 1, 3], _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](dnn/input_from_feature_columns_2/max_pooling1d/MaxPool-0-TransposeNHWCToNCHW-LayoutOptimizer)]]\r\n\t [[Node: dnn/gradients/dnn/input_from_feature_columns_2/input_layer/b_media_appbundle_format_embedding/b_media_appbundle_format_embedding_weights_grad/Select_1/_313 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:CPU:0\", send_device=\"/job:localhost/replica:0/task:0/device:GPU:0\", send_device_incarnation=1, tensor_name=\"edge_1344_...d/Select_1\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"]()]]\r\n\r\nCaused by op u'dnn/input_from_feature_columns_2/max_pooling1d/MaxPool', defined at:\r\n  File \"/usr/lib/python2.7/runpy.py\", line 174, in _run_module_as_main\r\n    \"__main__\", fname, loader, pkg_name)\r\n  File \"/usr/lib/python2.7/runpy.py\", line 72, in _run_code\r\n    exec code in run_globals\r\n  File \"/data2/jenkins/src/marvel2/python/moloco/deploy/models/tf_dnn/training/main/task.py\", line 66, in <module>\r\n    tf.app.run()\r\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/platform/app.py\", line 126, in run\r\n    _sys.exit(main(argv))\r\n  File \"/data2/jenkins/src/marvel2/python/moloco/deploy/models/tf_dnn/training/main/task.py\", line 61, in main\r\n    t.train_eval()\r\n  File \"/data2/jenkins/src/marvel2/python/moloco/learn/training/trainer.py\", line 127, in train_eval\r\n    self.model.train_eval(config, model_dir, train_data, eval_data)\r\n  File \"/data2/jenkins/src/marvel2/python/moloco/learn/models/tf_deep.py\", line 170, in train_eval\r\n    training.train_and_evaluate(m, train_spec, eval_spec)\r\n  File \"/data2/jenkins/src/marvel2/python/moloco/learn/estimators/training.py\", line 401, in train_and_evaluate\r\n    executor.run_local()\r\n  File \"/data2/jenkins/src/marvel2/python/moloco/learn/estimators/training.py\", line 572, in run_local\r\n    self._estimator.train(input_fn=self._train_spec.input_fn, max_steps=max_steps, hooks=train_hooks)\r\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py\", line 355, in train\r\n    loss = self._train_model(input_fn, hooks, saving_listeners)\r\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py\", line 824, in _train_model\r\n    features, labels, model_fn_lib.ModeKeys.TRAIN, self.config)\r\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py\", line 805, in _call_model_fn\r\n    model_fn_results = self._model_fn(features=features, **kwargs)\r\n  File \"/data2/jenkins/src/marvel2/python/moloco/learn/estimators/dnn.py\", line 466, in _model_fn\r\n    config=config)\r\n  File \"/data2/jenkins/src/marvel2/python/moloco/learn/estimators/dnn.py\", line 224, in _dnn_model_fn\r\n    last_layer_feats=ll_feats.values())\r\n  File \"/data2/jenkins/src/marvel2/python/moloco/learn/estimators/logit_ops.py\", line 301, in build_dnn_logits\r\n    last_layer_feats=last_layer_feats)\r\n  File \"/data2/jenkins/src/marvel2/python/moloco/learn/estimators/logit_ops.py\", line 206, in build_hidden_layers\r\n    net = apply_pooling(net, pooling, pooling_size, pooling_stride)\r\n  File \"/data2/jenkins/src/marvel2/python/moloco/learn/estimators/logit_ops.py\", line 343, in apply_pooling\r\n    o = tf.layers.max_pooling1d(o, pooling_size, strides=pooling_stride, padding=\"same\")\r\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/layers/pooling.py\", line 231, in max_pooling1d\r\n    return layer.apply(inputs)\r\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/layers/base.py\", line 825, in apply\r\n    return self.__call__(inputs, *args, **kwargs)\r\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/layers/base.py\", line 714, in __call__\r\n    outputs = self.call(inputs, *args, **kwargs)\r\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/layers/pooling.py\", line 86, in call\r\n    data_format=data_format)\r\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/ops/nn_ops.py\", line 2144, in max_pool\r\n    name=name)\r\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/ops/gen_nn_ops.py\", line 4587, in max_pool\r\n    data_format=data_format, name=name)\r\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py\", line 787, in _apply_op_helper\r\n    op_def=op_def)\r\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 3290, in create_op\r\n    op_def=op_def)\r\n  File \"/var/lib/jenkins/venvs/gpumoloco/local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1654, in __init__\r\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\r\n\r\nInternalError (see above for traceback): cudnn PoolForward launch failed\r\n\t [[Node: dnn/input_from_feature_columns_2/max_pooling1d/MaxPool = MaxPool[T=DT_FLOAT, data_format=\"NCHW\", ksize=[1, 1, 1, 3], padding=\"SAME\", strides=[1, 1, 1, 3], _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](dnn/input_from_feature_columns_2/max_pooling1d/MaxPool-0-TransposeNHWCToNCHW-LayoutOptimizer)]]\r\n\t [[Node: dnn/gradients/dnn/input_from_feature_columns_2/input_layer/b_media_appbundle_format_embedding/b_media_appbundle_format_embedding_weights_grad/Select_1/_313 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:CPU:0\", send_device=\"/job:localhost/replica:0/task:0/device:GPU:0\", send_device_incarnation=1, tensor_name=\"edge_1344_...d/Select_1\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"]()]]\r\n\r\nINFO:root:RETURN CODES: 1\r\n```\r\n\r\n\r\n### Source code / logs\r\n\r\nHere are my codes:\r\n\r\n```python\r\ndef apply_pooling(inputs, pooling, pooling_size, pooling_stride):\r\n  \"\"\"Apply pooling operations on inputs tensor.\r\n\r\n  Args:\r\n    inputs: A tensor with at least 3 rank.\r\n    pooling: When not `None`, `max` means max pooling, and `average` means average pooling.\r\n    pooling_size: The pooling size in all spatial dimensions.\r\n    pooling_stride: The stride operation size in all spatial dimensions.\r\n\r\n  Returns:\r\n    A tensors after applying for pooling strategy.\r\n  \"\"\"\r\n  if pooling is None or pooling == Pooling.NONE:\r\n    return inputs\r\n\r\n  # Expand dimension if inputs has not enough rank\r\n  ndims = len(inputs.get_shape().as_list())\r\n  if ndims == 1:\r\n    raise ValueError(\"inputs must be at least rank 2. Given it's {}\".format(ndims))\r\n  o = inputs\r\n  if ndims == 2:\r\n    o = tf.expand_dims(o, -1)\r\n  # TODO: fix the issue of not being able to run pooling in GPU\r\n  if pooling == Pooling.MAX:\r\n    o = tf.layers.max_pooling1d(o, pooling_size, strides=pooling_stride, padding=\"same\")\r\n  elif pooling == Pooling.AVERAGE:\r\n    o = tf.layers.average_pooling1d(o, pooling_size, strides=pooling_stride, padding=\"same\")\r\n  else:\r\n    raise ValueError(\"Unsupported pooling strategy: {}\".format(pooling))\r\n  # Squeeze dimenion if necessary\r\n  if ndims == 2:\r\n    o = tf.squeeze(o, -1)\r\n  return o\r\n```"}