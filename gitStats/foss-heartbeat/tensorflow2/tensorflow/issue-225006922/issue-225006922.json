{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9508", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9508/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9508/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9508/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9508", "id": 225006922, "node_id": "MDU6SXNzdWUyMjUwMDY5MjI=", "number": 9508, "title": "Problem running Tensorflow graph using C++ API", "user": {"login": "umairalipathan", "id": 23360886, "node_id": "MDQ6VXNlcjIzMzYwODg2", "avatar_url": "https://avatars1.githubusercontent.com/u/23360886?v=4", "gravatar_id": "", "url": "https://api.github.com/users/umairalipathan", "html_url": "https://github.com/umairalipathan", "followers_url": "https://api.github.com/users/umairalipathan/followers", "following_url": "https://api.github.com/users/umairalipathan/following{/other_user}", "gists_url": "https://api.github.com/users/umairalipathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/umairalipathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/umairalipathan/subscriptions", "organizations_url": "https://api.github.com/users/umairalipathan/orgs", "repos_url": "https://api.github.com/users/umairalipathan/repos", "events_url": "https://api.github.com/users/umairalipathan/events{/privacy}", "received_events_url": "https://api.github.com/users/umairalipathan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-28T07:58:39Z", "updated_at": "2017-04-28T14:16:32Z", "closed_at": "2017-04-28T14:16:32Z", "author_association": "NONE", "body_html": "<p>I have retrained Inception-v3 model using (Tensorflow) Python API, and saved a standalone Graph in .pb form. I have also used a dropout layer before the final layer. I can successfully run inference on the graph in python. The code to generate predictions in python is as follows:<br>\n<code>softmax_tensor = sess.graph.get_tensor_by_name('final_layer/final_result/Softmax:0') predictions = sess.run(softmax_tensor, { 'DecodeJpeg/contents:0': image_data, 'final_layer/dropout/Placeholder:0': 1.})</code><br>\nThe C++ counterpart of the python code is as follows:<br>\n<code> string input_layer = \"Mul\"; string output_layer = \"final_layer/dropout/Placeholder:0\"; Status run_status = session-&gt;Run({{input_layer, resized_tensor}}, {output_layer}, {}, &amp;outputs);</code></p>\n<p>The C++ code ends up with the following error message:<br>\n<code>Running model failed: Invalid argument: You must feed a value for placeholder tensor 'final_layer/dropout/Placeholder'</code></p>\n<p>What should I change in the above C++ code to remove this error?</p>", "body_text": "I have retrained Inception-v3 model using (Tensorflow) Python API, and saved a standalone Graph in .pb form. I have also used a dropout layer before the final layer. I can successfully run inference on the graph in python. The code to generate predictions in python is as follows:\nsoftmax_tensor = sess.graph.get_tensor_by_name('final_layer/final_result/Softmax:0') predictions = sess.run(softmax_tensor, { 'DecodeJpeg/contents:0': image_data, 'final_layer/dropout/Placeholder:0': 1.})\nThe C++ counterpart of the python code is as follows:\n string input_layer = \"Mul\"; string output_layer = \"final_layer/dropout/Placeholder:0\"; Status run_status = session->Run({{input_layer, resized_tensor}}, {output_layer}, {}, &outputs);\nThe C++ code ends up with the following error message:\nRunning model failed: Invalid argument: You must feed a value for placeholder tensor 'final_layer/dropout/Placeholder'\nWhat should I change in the above C++ code to remove this error?", "body": "I have retrained Inception-v3 model using (Tensorflow) Python API, and saved a standalone Graph in .pb form. I have also used a dropout layer before the final layer. I can successfully run inference on the graph in python. The code to generate predictions in python is as follows:\r\n`softmax_tensor = sess.graph.get_tensor_by_name('final_layer/final_result/Softmax:0')\r\npredictions = sess.run(softmax_tensor, { 'DecodeJpeg/contents:0': image_data, 'final_layer/dropout/Placeholder:0': 1.})`\r\nThe C++ counterpart of the python code is as follows:\r\n` string input_layer = \"Mul\";\r\n  string output_layer = \"final_layer/dropout/Placeholder:0\";\r\n  Status run_status = session->Run({{input_layer, resized_tensor}},\r\n                                   {output_layer}, {}, &outputs);`\r\n\r\nThe C++ code ends up with the following error message:\r\n`Running model failed: Invalid argument: You must feed a value for placeholder tensor 'final_layer/dropout/Placeholder'`\r\n\r\nWhat should I change in the above C++ code to remove this error?"}