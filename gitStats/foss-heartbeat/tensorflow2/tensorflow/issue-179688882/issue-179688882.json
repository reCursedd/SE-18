{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4613", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4613/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4613/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4613/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/4613", "id": 179688882, "node_id": "MDU6SXNzdWUxNzk2ODg4ODI=", "number": 4613, "title": "Maybe there should be an argument 'unique' in the function `tf.where()`", "user": {"login": "yzsatgithub", "id": 10882352, "node_id": "MDQ6VXNlcjEwODgyMzUy", "avatar_url": "https://avatars0.githubusercontent.com/u/10882352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yzsatgithub", "html_url": "https://github.com/yzsatgithub", "followers_url": "https://api.github.com/users/yzsatgithub/followers", "following_url": "https://api.github.com/users/yzsatgithub/following{/other_user}", "gists_url": "https://api.github.com/users/yzsatgithub/gists{/gist_id}", "starred_url": "https://api.github.com/users/yzsatgithub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yzsatgithub/subscriptions", "organizations_url": "https://api.github.com/users/yzsatgithub/orgs", "repos_url": "https://api.github.com/users/yzsatgithub/repos", "events_url": "https://api.github.com/users/yzsatgithub/events{/privacy}", "received_events_url": "https://api.github.com/users/yzsatgithub/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-09-28T06:17:12Z", "updated_at": "2016-10-15T08:44:48Z", "closed_at": "2016-10-15T08:44:48Z", "author_association": "NONE", "body_html": "<p>There IS the case where we wanna find the first position of the <code>True</code> element in a tensor.<br>\nsuppose there is a tensor <code>a</code> like this:</p>\n<pre><code>[array([[[ True, False],\n        [False, False]],\n\n       [[False,  True],\n        [ True, False]],\n\n       [[False, False],\n        [False,  True]],\n\n       [[False, False],\n        [ True, False]]], dtype=bool)\n</code></pre>\n<p>and u run <code>tf.where(a)</code>, u will get:</p>\n<pre><code> array([[0, 0, 0],\n       [1, 0, 1],\n       [1, 1, 0],\n       [2, 1, 1],\n       [3, 1, 0]])]\n</code></pre>\n<p>But we sometimes want a result like this:</p>\n<pre><code> array([[0, 0, 0],\n       [1, 0, 1],\n       [2, 1, 1],\n       [3, 1, 0]])]\n\n</code></pre>\n<p>which show us the index of first <code>True</code> element instead of all <code>True</code> elements.</p>\n<p>I suppose the function <code>tf.where()</code> might as well add an argument <code>unique</code> , indicating whether u wanna show all true element positions or the first one. And the default value of <code>unique</code> should be False.<br>\nthe prototype might be like this:</p>\n<pre><code>tf.where(input, unique=False, name=None)\n</code></pre>\n<p>and for the requirements shown above, i might run something like this:</p>\n<pre><code>tf.where(a, unique = True)\n</code></pre>", "body_text": "There IS the case where we wanna find the first position of the True element in a tensor.\nsuppose there is a tensor a like this:\n[array([[[ True, False],\n        [False, False]],\n\n       [[False,  True],\n        [ True, False]],\n\n       [[False, False],\n        [False,  True]],\n\n       [[False, False],\n        [ True, False]]], dtype=bool)\n\nand u run tf.where(a), u will get:\n array([[0, 0, 0],\n       [1, 0, 1],\n       [1, 1, 0],\n       [2, 1, 1],\n       [3, 1, 0]])]\n\nBut we sometimes want a result like this:\n array([[0, 0, 0],\n       [1, 0, 1],\n       [2, 1, 1],\n       [3, 1, 0]])]\n\n\nwhich show us the index of first True element instead of all True elements.\nI suppose the function tf.where() might as well add an argument unique , indicating whether u wanna show all true element positions or the first one. And the default value of unique should be False.\nthe prototype might be like this:\ntf.where(input, unique=False, name=None)\n\nand for the requirements shown above, i might run something like this:\ntf.where(a, unique = True)", "body": "There IS the case where we wanna find the first position of the `True` element in a tensor.\nsuppose there is a tensor `a` like this:\n\n```\n[array([[[ True, False],\n        [False, False]],\n\n       [[False,  True],\n        [ True, False]],\n\n       [[False, False],\n        [False,  True]],\n\n       [[False, False],\n        [ True, False]]], dtype=bool)\n```\n\nand u run `tf.where(a)`, u will get:\n\n```\n array([[0, 0, 0],\n       [1, 0, 1],\n       [1, 1, 0],\n       [2, 1, 1],\n       [3, 1, 0]])]\n```\n\nBut we sometimes want a result like this:\n\n```\n array([[0, 0, 0],\n       [1, 0, 1],\n       [2, 1, 1],\n       [3, 1, 0]])]\n\n```\n\nwhich show us the index of first `True` element instead of all `True` elements.\n\nI suppose the function `tf.where()` might as well add an argument `unique` , indicating whether u wanna show all true element positions or the first one. And the default value of `unique` should be False. \nthe prototype might be like this:\n\n```\ntf.where(input, unique=False, name=None)\n```\n\nand for the requirements shown above, i might run something like this:\n\n```\ntf.where(a, unique = True)\n```\n"}