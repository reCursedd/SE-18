{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4251", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4251/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4251/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4251/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/4251", "id": 175517908, "node_id": "MDU6SXNzdWUxNzU1MTc5MDg=", "number": 4251, "title": "pip installation 0.10.0 requires cuDNN v5, not cuDNN v4", "user": {"login": "jakubsimanek", "id": 9354428, "node_id": "MDQ6VXNlcjkzNTQ0Mjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/9354428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubsimanek", "html_url": "https://github.com/jakubsimanek", "followers_url": "https://api.github.com/users/jakubsimanek/followers", "following_url": "https://api.github.com/users/jakubsimanek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubsimanek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubsimanek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubsimanek/subscriptions", "organizations_url": "https://api.github.com/users/jakubsimanek/orgs", "repos_url": "https://api.github.com/users/jakubsimanek/repos", "events_url": "https://api.github.com/users/jakubsimanek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubsimanek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2016-09-07T14:31:07Z", "updated_at": "2017-03-21T04:27:01Z", "closed_at": "2016-09-08T00:58:12Z", "author_association": "NONE", "body_html": "<p><a href=\"https://www.tensorflow.org/versions/r0.10/get_started/os_setup.html#pip-installation\" rel=\"nofollow\">Download and Setup, Pip installation instructions for 0.10.0</a> say that <code>Ubuntu/Linux 64-bit, GPU enabled, Python 2.7</code> version <code>Requires CUDA toolkit 7.5 and CuDNN v4.</code>,</p>\n<p>That setup results in:</p>\n<p><code>E tensorflow/stream_executor/cuda/cuda_dnn.cc:347] Loaded runtime CuDNN library: 4007 (compatibility version 4000) but source was compiled with 5103 (compatibility version 5100).  If using a binary install, upgrade your CuDNN library to match.  If building from sources, make sure the library loaded at runtime matches a compatible version specified during compile configuration.</code></p>\n<p>Edit Sep 9, 2016: as <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1447589\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vinaynath\">@vinaynath</a> pointed out, <code>cudnn-7.5-linux-x64-v5.1.tgz</code> should be installed for CUDA 7.5<br>\n<strong>Installation of cuDNN v5 (<code>cudnn-7.5-linux-x64-v5.1.tgz</code><del><code>cudnn-8.0-linux-x64-v5.1</code></del>) resolves the problem.</strong><br>\nI think the instructions need an update to <code>Requires CUDA toolkit 7.5 and CuDNN v5.</code>.</p>\n<h3>Environment info</h3>\n<p>Operating System: Ubuntu 14.04.4 LTS (GNU/Linux 3.19.0-68-generic x86_64)</p>\n<p>Installed version of CUDA and cuDNN: CUDA 7.5, cuDNN v4 (<code>cudnn-7.0-linux-x64-v4.0</code>)<br>\n(please attach the output of <code>ls -l /path/to/cuda/lib/libcud*</code>):</p>\n<pre><code>$ ls -l /usr/local/cuda/lib/libcud*\n-rw-r--r-- 1 root root 189170 Jul 25 11:00 /usr/local/cuda/lib/libcudadevrt.a\nlrwxrwxrwx 1 root root     16 Jul 25 11:00 /usr/local/cuda/lib/libcudart.so -&gt; libcudart.so.7.5\nlrwxrwxrwx 1 root root     19 Jul 25 11:00 /usr/local/cuda/lib/libcudart.so.7.5 -&gt; libcudart.so.7.5.18\n-rwxr-xr-x 1 root root 311596 Jul 25 11:00 /usr/local/cuda/lib/libcudart.so.7.5.18\n-rw-r--r-- 1 root root 558020 Jul 25 11:00 /usr/local/cuda/lib/libcudart_static.a\n</code></pre>\n<ol>\n<li>A link to the pip package you installed: <code>https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.10.0-cp27-none-linux_x86_64.whl</code></li>\n<li>The output from <code>python -c \"import tensorflow; print(tensorflow.__version__)\"</code>.</li>\n</ol>\n<pre><code>$ python -c \"import tensorflow; print(tensorflow.__version__)\"\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcurand.so locally\n0.10.0\n</code></pre>\n<h3>If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)</h3>\n<pre><code>$ python -m tensorflow.models.image.mnist.convolutional\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcurand.so locally\nExtracting data/train-images-idx3-ubyte.gz\nExtracting data/train-labels-idx1-ubyte.gz\nExtracting data/t10k-images-idx3-ubyte.gz\nExtracting data/t10k-labels-idx1-ubyte.gz\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:925] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:102] Found device 0 with properties:\nname: GRID K2\nmajor: 3 minor: 0 memoryClockRate (GHz) 0.745\npciBusID 0000:00:04.0\nTotal memory: 3.44GiB\nFree memory: 3.41GiB\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:126] DMA: 0\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:136] 0:   Y\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:838] Creating TensorFlow device (/gpu:0) -&gt; (device: 0, name: GRID K2, pci bus id: 0000:00:04.0)\nInitialized!\nE tensorflow/stream_executor/cuda/cuda_dnn.cc:347] Loaded runtime CuDNN library: 4007 (compatibility version 4000) but source was compiled with 5103 (compatibility version 5100).  If using a binary install, upgrade your CuDNN library to match.  If building from sources, make sure the library loaded at runtime matches a compatible version specified during compile configuration.\nF tensorflow/core/kernels/conv_ops.cc:457] Check failed: stream-&gt;parent()-&gt;GetConvolveAlgorithms(&amp;algorithms)\nAborted (core dumped)\n</code></pre>", "body_text": "Download and Setup, Pip installation instructions for 0.10.0 say that Ubuntu/Linux 64-bit, GPU enabled, Python 2.7 version Requires CUDA toolkit 7.5 and CuDNN v4.,\nThat setup results in:\nE tensorflow/stream_executor/cuda/cuda_dnn.cc:347] Loaded runtime CuDNN library: 4007 (compatibility version 4000) but source was compiled with 5103 (compatibility version 5100).  If using a binary install, upgrade your CuDNN library to match.  If building from sources, make sure the library loaded at runtime matches a compatible version specified during compile configuration.\nEdit Sep 9, 2016: as @vinaynath pointed out, cudnn-7.5-linux-x64-v5.1.tgz should be installed for CUDA 7.5\nInstallation of cuDNN v5 (cudnn-7.5-linux-x64-v5.1.tgzcudnn-8.0-linux-x64-v5.1) resolves the problem.\nI think the instructions need an update to Requires CUDA toolkit 7.5 and CuDNN v5..\nEnvironment info\nOperating System: Ubuntu 14.04.4 LTS (GNU/Linux 3.19.0-68-generic x86_64)\nInstalled version of CUDA and cuDNN: CUDA 7.5, cuDNN v4 (cudnn-7.0-linux-x64-v4.0)\n(please attach the output of ls -l /path/to/cuda/lib/libcud*):\n$ ls -l /usr/local/cuda/lib/libcud*\n-rw-r--r-- 1 root root 189170 Jul 25 11:00 /usr/local/cuda/lib/libcudadevrt.a\nlrwxrwxrwx 1 root root     16 Jul 25 11:00 /usr/local/cuda/lib/libcudart.so -> libcudart.so.7.5\nlrwxrwxrwx 1 root root     19 Jul 25 11:00 /usr/local/cuda/lib/libcudart.so.7.5 -> libcudart.so.7.5.18\n-rwxr-xr-x 1 root root 311596 Jul 25 11:00 /usr/local/cuda/lib/libcudart.so.7.5.18\n-rw-r--r-- 1 root root 558020 Jul 25 11:00 /usr/local/cuda/lib/libcudart_static.a\n\n\nA link to the pip package you installed: https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.10.0-cp27-none-linux_x86_64.whl\nThe output from python -c \"import tensorflow; print(tensorflow.__version__)\".\n\n$ python -c \"import tensorflow; print(tensorflow.__version__)\"\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcurand.so locally\n0.10.0\n\nIf possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\n$ python -m tensorflow.models.image.mnist.convolutional\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcurand.so locally\nExtracting data/train-images-idx3-ubyte.gz\nExtracting data/train-labels-idx1-ubyte.gz\nExtracting data/t10k-images-idx3-ubyte.gz\nExtracting data/t10k-labels-idx1-ubyte.gz\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:925] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:102] Found device 0 with properties:\nname: GRID K2\nmajor: 3 minor: 0 memoryClockRate (GHz) 0.745\npciBusID 0000:00:04.0\nTotal memory: 3.44GiB\nFree memory: 3.41GiB\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:126] DMA: 0\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:136] 0:   Y\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:838] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GRID K2, pci bus id: 0000:00:04.0)\nInitialized!\nE tensorflow/stream_executor/cuda/cuda_dnn.cc:347] Loaded runtime CuDNN library: 4007 (compatibility version 4000) but source was compiled with 5103 (compatibility version 5100).  If using a binary install, upgrade your CuDNN library to match.  If building from sources, make sure the library loaded at runtime matches a compatible version specified during compile configuration.\nF tensorflow/core/kernels/conv_ops.cc:457] Check failed: stream->parent()->GetConvolveAlgorithms(&algorithms)\nAborted (core dumped)", "body": "[Download and Setup, Pip installation instructions for 0.10.0](https://www.tensorflow.org/versions/r0.10/get_started/os_setup.html#pip-installation) say that `Ubuntu/Linux 64-bit, GPU enabled, Python 2.7` version `Requires CUDA toolkit 7.5 and CuDNN v4.`,\n\nThat setup results in:\n\n`E tensorflow/stream_executor/cuda/cuda_dnn.cc:347] Loaded runtime CuDNN library: 4007 (compatibility version 4000) but source was compiled with 5103 (compatibility version 5100).  If using a binary install, upgrade your CuDNN library to match.  If building from sources, make sure the library loaded at runtime matches a compatible version specified during compile configuration.`\n\nEdit Sep 9, 2016: as @vinaynath pointed out, `cudnn-7.5-linux-x64-v5.1.tgz` should be installed for CUDA 7.5\n**Installation of cuDNN v5 (`cudnn-7.5-linux-x64-v5.1.tgz`~~`cudnn-8.0-linux-x64-v5.1`~~) resolves the problem.**\nI think the instructions need an update to `Requires CUDA toolkit 7.5 and CuDNN v5.`.\n### Environment info\n\nOperating System: Ubuntu 14.04.4 LTS (GNU/Linux 3.19.0-68-generic x86_64)\n\nInstalled version of CUDA and cuDNN: CUDA 7.5, cuDNN v4 (`cudnn-7.0-linux-x64-v4.0`)\n(please attach the output of `ls -l /path/to/cuda/lib/libcud*`):\n\n```\n$ ls -l /usr/local/cuda/lib/libcud*\n-rw-r--r-- 1 root root 189170 Jul 25 11:00 /usr/local/cuda/lib/libcudadevrt.a\nlrwxrwxrwx 1 root root     16 Jul 25 11:00 /usr/local/cuda/lib/libcudart.so -> libcudart.so.7.5\nlrwxrwxrwx 1 root root     19 Jul 25 11:00 /usr/local/cuda/lib/libcudart.so.7.5 -> libcudart.so.7.5.18\n-rwxr-xr-x 1 root root 311596 Jul 25 11:00 /usr/local/cuda/lib/libcudart.so.7.5.18\n-rw-r--r-- 1 root root 558020 Jul 25 11:00 /usr/local/cuda/lib/libcudart_static.a\n```\n1. A link to the pip package you installed: `https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.10.0-cp27-none-linux_x86_64.whl`\n2. The output from `python -c \"import tensorflow; print(tensorflow.__version__)\"`.\n\n```\n$ python -c \"import tensorflow; print(tensorflow.__version__)\"\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcurand.so locally\n0.10.0\n```\n### If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\n\n```\n$ python -m tensorflow.models.image.mnist.convolutional\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcurand.so locally\nExtracting data/train-images-idx3-ubyte.gz\nExtracting data/train-labels-idx1-ubyte.gz\nExtracting data/t10k-images-idx3-ubyte.gz\nExtracting data/t10k-labels-idx1-ubyte.gz\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:925] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:102] Found device 0 with properties:\nname: GRID K2\nmajor: 3 minor: 0 memoryClockRate (GHz) 0.745\npciBusID 0000:00:04.0\nTotal memory: 3.44GiB\nFree memory: 3.41GiB\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:126] DMA: 0\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:136] 0:   Y\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:838] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GRID K2, pci bus id: 0000:00:04.0)\nInitialized!\nE tensorflow/stream_executor/cuda/cuda_dnn.cc:347] Loaded runtime CuDNN library: 4007 (compatibility version 4000) but source was compiled with 5103 (compatibility version 5100).  If using a binary install, upgrade your CuDNN library to match.  If building from sources, make sure the library loaded at runtime matches a compatible version specified during compile configuration.\nF tensorflow/core/kernels/conv_ops.cc:457] Check failed: stream->parent()->GetConvolveAlgorithms(&algorithms)\nAborted (core dumped)\n```\n"}