{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/272774958", "html_url": "https://github.com/tensorflow/tensorflow/pull/6689#issuecomment-272774958", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6689", "id": 272774958, "node_id": "MDEyOklzc3VlQ29tbWVudDI3Mjc3NDk1OA==", "user": {"login": "Nayana-ibm", "id": 20816038, "node_id": "MDQ6VXNlcjIwODE2MDM4", "avatar_url": "https://avatars0.githubusercontent.com/u/20816038?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nayana-ibm", "html_url": "https://github.com/Nayana-ibm", "followers_url": "https://api.github.com/users/Nayana-ibm/followers", "following_url": "https://api.github.com/users/Nayana-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/Nayana-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nayana-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nayana-ibm/subscriptions", "organizations_url": "https://api.github.com/users/Nayana-ibm/orgs", "repos_url": "https://api.github.com/users/Nayana-ibm/repos", "events_url": "https://api.github.com/users/Nayana-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/Nayana-ibm/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-16T05:07:13Z", "updated_at": "2017-01-16T05:07:13Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=20959853\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/drpngx\">@drpngx</a><br>\nDecode_raw_op test was failing on big endian due to following assert:</p>\n<pre><code>OP_REQUIRES(\n        context,\n        little_endian_ == ::tensorflow::port::kLittleEndian || sizeof(T) == 1,\n        errors::Unimplemented(\"Unimplemented support for little_endian=\",\n                              little_endian_ ? \"true\" : \"false\"));\n</code></pre>\n<p>With our PR, we tried to remove the above assert assuming that type of data and the system match.<br>\nHowever, as <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=144114\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/rohan100jain\">@rohan100jain</a> commented,  we could think of above patch. Through if condition, assert will be skipped only on big endian and would not hamper original functionality.</p>\n<p>Can you think of better way to handle the above scenario?</p>", "body_text": "@drpngx\nDecode_raw_op test was failing on big endian due to following assert:\nOP_REQUIRES(\n        context,\n        little_endian_ == ::tensorflow::port::kLittleEndian || sizeof(T) == 1,\n        errors::Unimplemented(\"Unimplemented support for little_endian=\",\n                              little_endian_ ? \"true\" : \"false\"));\n\nWith our PR, we tried to remove the above assert assuming that type of data and the system match.\nHowever, as @rohan100jain commented,  we could think of above patch. Through if condition, assert will be skipped only on big endian and would not hamper original functionality.\nCan you think of better way to handle the above scenario?", "body": "@drpngx \r\nDecode_raw_op test was failing on big endian due to following assert:\r\n\r\n```\r\nOP_REQUIRES(\r\n        context,\r\n        little_endian_ == ::tensorflow::port::kLittleEndian || sizeof(T) == 1,\r\n        errors::Unimplemented(\"Unimplemented support for little_endian=\",\r\n                              little_endian_ ? \"true\" : \"false\"));\r\n```\r\n\r\nWith our PR, we tried to remove the above assert assuming that type of data and the system match. \r\nHowever, as @rohan100jain commented,  we could think of above patch. Through if condition, assert will be skipped only on big endian and would not hamper original functionality. \r\n\r\nCan you think of better way to handle the above scenario?"}