{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/228325268", "pull_request_review_id": 167665863, "id": 228325268, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyODMyNTI2OA==", "diff_hunk": "@@ -815,6 +885,121 @@ class MklLayoutRewritePass : public GraphOptimizationPass {\n     return n;\n   }\n \n+  // Return a node that can be fused with input node 'n'\n+  //\n+  // @return tuple. If we can find such nodes, the first\n+  // element of the tuple is a true. Otherwise, it's false.\n+  std::tuple<bool, std::vector<Node *>, const MklLayoutRewritePass::FusionInfo>\n+      CheckForNodeFusion(Node *n) const;\n+\n+  // Fuse nodes in the vector \"nodes\"\n+  Status FuseNode(std::unique_ptr<Graph> *g, std::vector<Node *> &nodes,\n+                  const MklLayoutRewritePass::FusionInfo fi);\n+\n+  static Status FuseTransposeMklOpTranspose(\n+      std::unique_ptr<Graph> *g, std::vector<Node *> &nodes,\n+      std::function<void(const Node *, NodeBuilder *nb, bool)> copy_attrs,\n+      string data_format);\n+\n+  static bool CheckForTranspose(const Node *node, std::vector<int> perm) {\n+    //\n+    // Check node node, to see if it's \"Transpose\"\n+    //\n+    if (node->type_string() != \"Transpose\")\n+      return false;\n+\n+    //\n+    // Check if has out control edge. If true, this is a training graph.\n+    // Currently we focus on inference and do no fusion in training.\n+    //\n+    for (const Edge *e : node->out_edges()) {\n+      if (e->IsControlEdge()) {\n+        return false;\n+      }\n+    }\n+\n+    //\n+    // If \"Transpose\" has input control edges, don't fuse on it.\n+    //\n+    for (const Edge *e : node->in_edges()) {\n+      if (e->IsControlEdge()) {\n+        return false;\n+      }\n+    }\n+\n+    //\n+    // If \"Transpose\" has multiple output data edges, also don't fuse it.\n+    //\n+    if (node->num_outputs() > 1 || node->out_edges().size() > 1)\n+      return false;\n+\n+    // Check \"perm\" attribute, make sure it's what we want.\n+    //\n+    for (const Edge *e : node->in_edges()) {\n+      if (!e->IsControlEdge()) {\n+        const Node *perm_node = e->src();\n+\n+        const int kPermTensorIndex = 1;\n+        if (perm_node->type_string() == \"Const\" && e->dst_input() == kPermTensorIndex) {\n+          // we find the \"perm\" node, now try to retrieve its value.\n+          const TensorProto *proto = nullptr;\n+          CHECK_EQ(GetNodeAttr(perm_node->def(), \"value\", &proto).ok(), true);", "path": "tensorflow/core/graph/mkl_layout_pass.cc", "position": 192, "original_position": 183, "commit_id": "88b2369fe7c4451c63ff0599f7477897dabff2e0", "original_commit_id": "4f9d57337b71fe0ab3f25696db456e6a446ef54a", "user": {"login": "penpornk", "id": 38085909, "node_id": "MDQ6VXNlcjM4MDg1OTA5", "avatar_url": "https://avatars3.githubusercontent.com/u/38085909?v=4", "gravatar_id": "", "url": "https://api.github.com/users/penpornk", "html_url": "https://github.com/penpornk", "followers_url": "https://api.github.com/users/penpornk/followers", "following_url": "https://api.github.com/users/penpornk/following{/other_user}", "gists_url": "https://api.github.com/users/penpornk/gists{/gist_id}", "starred_url": "https://api.github.com/users/penpornk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/penpornk/subscriptions", "organizations_url": "https://api.github.com/users/penpornk/orgs", "repos_url": "https://api.github.com/users/penpornk/repos", "events_url": "https://api.github.com/users/penpornk/events{/privacy}", "received_events_url": "https://api.github.com/users/penpornk/received_events", "type": "User", "site_admin": false}, "body": "```suggestion\r\n          CHECK(GetNodeAttr(perm_node->def(), \"value\", &proto).ok());\r\n```", "created_at": "2018-10-25T20:35:24Z", "updated_at": "2018-11-14T06:34:27Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/23152#discussion_r228325268", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/23152", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/228325268"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/23152#discussion_r228325268"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/23152"}}, "body_html": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center text-gray\">\n        Suggested change <span class=\"d-inline-block lh-condensed px-1 rounded-1 border border-green\">Beta</span>\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by the pull request author or assignees.\">\n          <svg class=\"hide-sm octicon octicon-info\" viewBox=\"0 0 14 16\" version=\"1.1\" width=\"14\" height=\"16\">\n            <path fill-rule=\"evenodd\" d=\"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z\"></path>\n          </svg>\n        </span>\n      </div>\n      <div class=\"flex-auto text-right text-gray\">\n        <a href=\"https://www.research.net/r/SuggestedChanges\" target=\"_blank\">Give us feedback</a>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0\">\n        <tbody><tr class=\"border-0\">\n          <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"952\"></td>\n          <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">          <span class=\"pl-en x x-first x-last\">CHECK_EQ</span>(GetNodeAttr(perm_node-&gt;<span class=\"pl-en\">def</span>(), \"value\", &amp;proto).ok()<span class=\"x x-first x-last\">, true</span>);</td>\n        </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"952\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">          <span class=\"pl-en x x-first x-last\">CHECK</span>(GetNodeAttr(perm_node-&gt;<span class=\"pl-en\">def</span>(), \"value\", &amp;proto).ok());</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "body_text": "Suggested change Beta\n        \n          \n            \n          \n        \n      \n      \n        Give us feedback\n      \n    \n    \n      \n        \n          \n                    CHECK_EQ(GetNodeAttr(perm_node->def(), \"value\", &proto).ok(), true);\n        \n          \n            \n                      CHECK(GetNodeAttr(perm_node->def(), \"value\", &proto).ok());"}