{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/229572163", "pull_request_review_id": 170102510, "id": 229572163, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyOTU3MjE2Mw==", "diff_hunk": "@@ -2729,65 +2719,70 @@ Status MklLayoutRewritePass::FuseNode(\n \n std::tuple<bool, std::vector<Node*>, const MklLayoutRewritePass::FusionInfo>\n MklLayoutRewritePass::CheckForNodeFusion(Node* a) const {\n-  bool found_pattern = false;\n-  std::vector<Node*> nodes;\n   const FusionInfo* fi_ptr = nullptr;\n \n   for (auto fi = finfo_.begin(); fi != finfo_.end(); ++fi) {\n-    assert(fi->ops.size() == fi->node_checkers.size());\n-    nodes.clear();\n     fi_ptr = &*fi;\n     //\n     // Make sure node \"a\" and its succeding nodes (b, c ...), match the pattern\n     // defined in fusion info (ops[0], ops[1], ...),\n     // aka. \"a->b->c\" matches \"op1->op2->op3\"\n     //\n \n-    // Initialize \"current_node\" as node \"a\".\n-    Node* current_node = a;\n-    for (auto node_index = 0; node_index < fi->node_checkers.size();\n-         ++node_index) {\n-      // Make sure current node meet the requirement of corresponding node\n-      // checker.\n-      auto check_node = fi->node_checkers[node_index];\n-      if (current_node == nullptr ||\n-          (check_node && check_node(current_node) == false)) {\n-        found_pattern = false;\n-        nodes.clear();\n-        break;\n-      }\n+    std::stack<Node *, std::vector<Node *>> work_stack;\n+    std::set<Node *> visited_nodes;\n+    auto node_checker = fi->node_checkers.begin();\n+\n+    Node *current_node = nullptr;\n+    if (a != nullptr) {\n+      work_stack.push(a);\n+    }\n \n-      // Add current_node to \"fusion_nodes\":\n-      nodes.push_back(current_node);\n+    while (!work_stack.empty()) {\n+      current_node = work_stack.top();\n \n-      // If current node is not the last node we want to check, check next node.\n-      if (node_index != fi->node_checkers.size() - 1) {\n-        // Find current node's direct descendant, which will be used in next\n-        // iteration.\n-        auto check_next_node = fi->node_checkers[node_index + 1];\n-        for (const Edge* e : current_node->out_edges()) {\n+      if ((*node_checker)(current_node)){\n+        if (node_checker == (fi->node_checkers.end() - 1)) {\n+          // We find a match, break and return.\n+          std::vector<Node *> nodes;\n+          while (!work_stack.empty()) {\n+            nodes.insert(nodes.begin(), work_stack.top());\n+            work_stack.pop();\n+          }\n+          \n+          return make_tuple(true, nodes, *fi_ptr);\n+        }\n+\n+        bool all_succ_has_been_visited = true;\n+        for (const Edge *e : current_node->out_edges()) {\n           if (!e->IsControlEdge()) {\n-            Node* candidate_node = e->dst();\n+            Node *candidate_node = e->dst();\n \n-            if (check_next_node(candidate_node) == false) {\n-              current_node = nullptr;\n-            } else {\n-              current_node = candidate_node;\n+            // If the candidate node has not been visited, push it to stack.\n+            if (visited_nodes.find(candidate_node) == visited_nodes.end()) {\n+              work_stack.push(candidate_node);\n+              ++ node_checker;\n+              all_succ_has_been_visited = false;\n               break;\n             }\n+\n+            // All successor nodes of current node has been visited (no match found),\n+            // pop the stack and mark current node as \"visited\".\n+            if (all_succ_has_been_visited) {\n+              visited_nodes.insert(current_node);\n+              work_stack.pop();\n+              -- node_checker;\n+            }\n           }\n         }\n       } else {\n-        found_pattern = true;\n+        // current node doesn't match, just break and stack will help us roll back.\n+        break;", "path": "tensorflow/core/graph/mkl_layout_pass.cc", "position": null, "original_position": 300, "commit_id": "88b2369fe7c4451c63ff0599f7477897dabff2e0", "original_commit_id": "1d94242feccdb2afd3583c0332de090eab2f3811", "user": {"login": "wenxizhu", "id": 33611326, "node_id": "MDQ6VXNlcjMzNjExMzI2", "avatar_url": "https://avatars1.githubusercontent.com/u/33611326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wenxizhu", "html_url": "https://github.com/wenxizhu", "followers_url": "https://api.github.com/users/wenxizhu/followers", "following_url": "https://api.github.com/users/wenxizhu/following{/other_user}", "gists_url": "https://api.github.com/users/wenxizhu/gists{/gist_id}", "starred_url": "https://api.github.com/users/wenxizhu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wenxizhu/subscriptions", "organizations_url": "https://api.github.com/users/wenxizhu/orgs", "repos_url": "https://api.github.com/users/wenxizhu/repos", "events_url": "https://api.github.com/users/wenxizhu/events{/privacy}", "received_events_url": "https://api.github.com/users/wenxizhu/received_events", "type": "User", "site_admin": false}, "body": "And there is a subtle bug in the if statement when `node_checker` returns true case. The nested level of stack pop was also wrong, it should be after the for loop, rather than in the loop. Fixed now.", "created_at": "2018-10-31T06:02:47Z", "updated_at": "2018-11-14T06:34:27Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/23152#discussion_r229572163", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/23152", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/229572163"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/23152#discussion_r229572163"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/23152"}}, "body_html": "<p>And there is a subtle bug in the if statement when <code>node_checker</code> returns true case. The nested level of stack pop was also wrong, it should be after the for loop, rather than in the loop. Fixed now.</p>", "body_text": "And there is a subtle bug in the if statement when node_checker returns true case. The nested level of stack pop was also wrong, it should be after the for loop, rather than in the loop. Fixed now.", "in_reply_to_id": 229525167}