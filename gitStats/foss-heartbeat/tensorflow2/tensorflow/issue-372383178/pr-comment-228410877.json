{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/228410877", "pull_request_review_id": 168677771, "id": 228410877, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyODQxMDg3Nw==", "diff_hunk": "@@ -815,6 +885,121 @@ class MklLayoutRewritePass : public GraphOptimizationPass {\n     return n;\n   }\n \n+  // Return a node that can be fused with input node 'n'\n+  //\n+  // @return tuple. If we can find such nodes, the first\n+  // element of the tuple is a true. Otherwise, it's false.\n+  std::tuple<bool, std::vector<Node *>, const MklLayoutRewritePass::FusionInfo>\n+      CheckForNodeFusion(Node *n) const;\n+\n+  // Fuse nodes in the vector \"nodes\"\n+  Status FuseNode(std::unique_ptr<Graph> *g, std::vector<Node *> &nodes,\n+                  const MklLayoutRewritePass::FusionInfo fi);\n+\n+  static Status FuseTransposeMklOpTranspose(\n+      std::unique_ptr<Graph> *g, std::vector<Node *> &nodes,\n+      std::function<void(const Node *, NodeBuilder *nb, bool)> copy_attrs,\n+      string data_format);\n+\n+  static bool CheckForTranspose(const Node *node, std::vector<int> perm) {\n+    //\n+    // Check node node, to see if it's \"Transpose\"\n+    //\n+    if (node->type_string() != \"Transpose\")\n+      return false;\n+\n+    //\n+    // Check if has out control edge. If true, this is a training graph.\n+    // Currently we focus on inference and do no fusion in training.\n+    //\n+    for (const Edge *e : node->out_edges()) {\n+      if (e->IsControlEdge()) {\n+        return false;\n+      }\n+    }\n+\n+    //\n+    // If \"Transpose\" has input control edges, don't fuse on it.\n+    //\n+    for (const Edge *e : node->in_edges()) {\n+      if (e->IsControlEdge()) {\n+        return false;\n+      }\n+    }\n+\n+    //\n+    // If \"Transpose\" has multiple output data edges, also don't fuse it.\n+    //\n+    if (node->num_outputs() > 1 || node->out_edges().size() > 1)\n+      return false;\n+\n+    // Check \"perm\" attribute, make sure it's what we want.\n+    //\n+    for (const Edge *e : node->in_edges()) {\n+      if (!e->IsControlEdge()) {\n+        const Node *perm_node = e->src();\n+\n+        const int kPermTensorIndex = 1;\n+        if (perm_node->type_string() == \"Const\" && e->dst_input() == kPermTensorIndex) {\n+          // we find the \"perm\" node, now try to retrieve its value.\n+          const TensorProto *proto = nullptr;\n+          CHECK_EQ(GetNodeAttr(perm_node->def(), \"value\", &proto).ok(), true);\n+\n+          DataType type;\n+          GetNodeAttr(perm_node->def(), \"dtype\", &type);\n+\n+          //\n+          // Here we directly access to the \"tensor_context\", rather than\n+          // \"int_val\". This is because we find \"int_val\" is\n+          // not set properly under some circumstances.", "path": "tensorflow/core/graph/mkl_layout_pass.cc", "position": 199, "original_position": 191, "commit_id": "88b2369fe7c4451c63ff0599f7477897dabff2e0", "original_commit_id": "4f9d57337b71fe0ab3f25696db456e6a446ef54a", "user": {"login": "wenxizhu", "id": 33611326, "node_id": "MDQ6VXNlcjMzNjExMzI2", "avatar_url": "https://avatars1.githubusercontent.com/u/33611326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wenxizhu", "html_url": "https://github.com/wenxizhu", "followers_url": "https://api.github.com/users/wenxizhu/followers", "following_url": "https://api.github.com/users/wenxizhu/following{/other_user}", "gists_url": "https://api.github.com/users/wenxizhu/gists{/gist_id}", "starred_url": "https://api.github.com/users/wenxizhu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wenxizhu/subscriptions", "organizations_url": "https://api.github.com/users/wenxizhu/orgs", "repos_url": "https://api.github.com/users/wenxizhu/repos", "events_url": "https://api.github.com/users/wenxizhu/events{/privacy}", "received_events_url": "https://api.github.com/users/wenxizhu/received_events", "type": "User", "site_admin": false}, "body": "@penpornk according to my observation, in keras-based models, all \"transpose\" ops' int_val/int64_val/float_val... are not set entirely (all zero), so I have to parse the raw tensor data from \"tensor_context\" here myself. This is what I called \"some circumstance\" above. I don't think it's a desired behavior, and I will fire a bug to discuss about it.", "created_at": "2018-10-26T05:44:57Z", "updated_at": "2018-11-14T06:34:27Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/23152#discussion_r228410877", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/23152", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/228410877"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/23152#discussion_r228410877"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/23152"}}, "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=38085909\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/penpornk\">@penpornk</a> according to my observation, in keras-based models, all \"transpose\" ops' int_val/int64_val/float_val... are not set entirely (all zero), so I have to parse the raw tensor data from \"tensor_context\" here myself. This is what I called \"some circumstance\" above. I don't think it's a desired behavior, and I will fire a bug to discuss about it.</p>", "body_text": "@penpornk according to my observation, in keras-based models, all \"transpose\" ops' int_val/int64_val/float_val... are not set entirely (all zero), so I have to parse the raw tensor data from \"tensor_context\" here myself. This is what I called \"some circumstance\" above. I don't think it's a desired behavior, and I will fire a bug to discuss about it.", "in_reply_to_id": 228331485}