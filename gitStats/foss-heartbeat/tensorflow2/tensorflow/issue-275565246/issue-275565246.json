{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14739", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14739/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14739/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14739/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14739", "id": 275565246, "node_id": "MDU6SXNzdWUyNzU1NjUyNDY=", "number": 14739, "title": "Eager: Warn with invalid policy", "user": {"login": "malmaud", "id": 987837, "node_id": "MDQ6VXNlcjk4NzgzNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/987837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/malmaud", "html_url": "https://github.com/malmaud", "followers_url": "https://api.github.com/users/malmaud/followers", "following_url": "https://api.github.com/users/malmaud/following{/other_user}", "gists_url": "https://api.github.com/users/malmaud/gists{/gist_id}", "starred_url": "https://api.github.com/users/malmaud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/malmaud/subscriptions", "organizations_url": "https://api.github.com/users/malmaud/orgs", "repos_url": "https://api.github.com/users/malmaud/repos", "events_url": "https://api.github.com/users/malmaud/events{/privacy}", "received_events_url": "https://api.github.com/users/malmaud/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2017-11-21T02:31:54Z", "updated_at": "2017-12-02T09:39:46Z", "closed_at": "2017-12-02T09:39:46Z", "author_association": "CONTRIBUTOR", "body_html": "<p>If a user accidentally writes <code>tfe.enable_eager_execution(tfe.DEVICE_PLACEMENT_WARN)</code> instead of the correct <code>tfe.enable_eager_execution(device_policy=tfe.DEVICE_PLACEMENT_WARN)</code>, they won't get an error until later in their program.</p>\n<p>For example, <code>tfe.num_gpus()</code> after  the incorrect enable call produces</p>\n<pre><code>---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\n&lt;ipython-input-8-71d6509178f5&gt; in &lt;module&gt;()\n----&gt; 1 tfe.num_gpus()\n\n~/anaconda3/lib/python3.6/site-packages/tensorflow/python/eager/context.py in num_gpus()\n    458     The number of available GPU devices.\n    459   \"\"\"\n--&gt; 460   return context().num_gpus()\n\n~/anaconda3/lib/python3.6/site-packages/tensorflow/python/eager/context.py in num_gpus(self)\n    286   def num_gpus(self):\n    287     \"\"\"The number of GPUs available to execute operations.\"\"\"\n--&gt; 288     self._initialize_handle_and_devices()\n    289     return self._num_gpus\n    290 \n\n~/anaconda3/lib/python3.6/site-packages/tensorflow/python/eager/context.py in _initialize_handle_and_devices(self)\n    121         with errors.raise_exception_on_not_ok_status() as status:\n    122           if self._config is not None:\n--&gt; 123             config_str = self._config.SerializeToString()\n    124             pywrap_tensorflow.TFE_ContextOptionsSetConfig(\n    125                 opts, config_str, len(config_str), status)\n\nAttributeError: 'int' object has no attribute 'SerializeToString'\n</code></pre>\n<p>I'd think it makes more sense to throw an error immediately after the incorrect <code>enable_eager_execution</code>.</p>\n<p>This is on <code>master</code> (<a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/ab00df9b0b74910ca738e6ee850982f62ad42e55/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/ab00df9b0b74910ca738e6ee850982f62ad42e55\"><tt>ab00df9</tt></a>).</p>", "body_text": "If a user accidentally writes tfe.enable_eager_execution(tfe.DEVICE_PLACEMENT_WARN) instead of the correct tfe.enable_eager_execution(device_policy=tfe.DEVICE_PLACEMENT_WARN), they won't get an error until later in their program.\nFor example, tfe.num_gpus() after  the incorrect enable call produces\n---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\n<ipython-input-8-71d6509178f5> in <module>()\n----> 1 tfe.num_gpus()\n\n~/anaconda3/lib/python3.6/site-packages/tensorflow/python/eager/context.py in num_gpus()\n    458     The number of available GPU devices.\n    459   \"\"\"\n--> 460   return context().num_gpus()\n\n~/anaconda3/lib/python3.6/site-packages/tensorflow/python/eager/context.py in num_gpus(self)\n    286   def num_gpus(self):\n    287     \"\"\"The number of GPUs available to execute operations.\"\"\"\n--> 288     self._initialize_handle_and_devices()\n    289     return self._num_gpus\n    290 \n\n~/anaconda3/lib/python3.6/site-packages/tensorflow/python/eager/context.py in _initialize_handle_and_devices(self)\n    121         with errors.raise_exception_on_not_ok_status() as status:\n    122           if self._config is not None:\n--> 123             config_str = self._config.SerializeToString()\n    124             pywrap_tensorflow.TFE_ContextOptionsSetConfig(\n    125                 opts, config_str, len(config_str), status)\n\nAttributeError: 'int' object has no attribute 'SerializeToString'\n\nI'd think it makes more sense to throw an error immediately after the incorrect enable_eager_execution.\nThis is on master (ab00df9).", "body": "If a user accidentally writes `tfe.enable_eager_execution(tfe.DEVICE_PLACEMENT_WARN)` instead of the correct `tfe.enable_eager_execution(device_policy=tfe.DEVICE_PLACEMENT_WARN)`, they won't get an error until later in their program.\r\n\r\nFor example, `tfe.num_gpus()` after  the incorrect enable call produces\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-8-71d6509178f5> in <module>()\r\n----> 1 tfe.num_gpus()\r\n\r\n~/anaconda3/lib/python3.6/site-packages/tensorflow/python/eager/context.py in num_gpus()\r\n    458     The number of available GPU devices.\r\n    459   \"\"\"\r\n--> 460   return context().num_gpus()\r\n\r\n~/anaconda3/lib/python3.6/site-packages/tensorflow/python/eager/context.py in num_gpus(self)\r\n    286   def num_gpus(self):\r\n    287     \"\"\"The number of GPUs available to execute operations.\"\"\"\r\n--> 288     self._initialize_handle_and_devices()\r\n    289     return self._num_gpus\r\n    290 \r\n\r\n~/anaconda3/lib/python3.6/site-packages/tensorflow/python/eager/context.py in _initialize_handle_and_devices(self)\r\n    121         with errors.raise_exception_on_not_ok_status() as status:\r\n    122           if self._config is not None:\r\n--> 123             config_str = self._config.SerializeToString()\r\n    124             pywrap_tensorflow.TFE_ContextOptionsSetConfig(\r\n    125                 opts, config_str, len(config_str), status)\r\n\r\nAttributeError: 'int' object has no attribute 'SerializeToString'\r\n```\r\n\r\nI'd think it makes more sense to throw an error immediately after the incorrect `enable_eager_execution`. \r\n\r\nThis is on `master` (ab00df9)."}