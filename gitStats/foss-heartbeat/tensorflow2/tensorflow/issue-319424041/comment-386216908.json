{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/386216908", "html_url": "https://github.com/tensorflow/tensorflow/issues/19017#issuecomment-386216908", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19017", "id": 386216908, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjIxNjkwOA==", "user": {"login": "sleepfin", "id": 7370869, "node_id": "MDQ6VXNlcjczNzA4Njk=", "avatar_url": "https://avatars1.githubusercontent.com/u/7370869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sleepfin", "html_url": "https://github.com/sleepfin", "followers_url": "https://api.github.com/users/sleepfin/followers", "following_url": "https://api.github.com/users/sleepfin/following{/other_user}", "gists_url": "https://api.github.com/users/sleepfin/gists{/gist_id}", "starred_url": "https://api.github.com/users/sleepfin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sleepfin/subscriptions", "organizations_url": "https://api.github.com/users/sleepfin/orgs", "repos_url": "https://api.github.com/users/sleepfin/repos", "events_url": "https://api.github.com/users/sleepfin/events{/privacy}", "received_events_url": "https://api.github.com/users/sleepfin/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-03T07:52:45Z", "updated_at": "2018-05-03T07:52:45Z", "author_association": "NONE", "body_html": "<p>Well, I made some more experiments. If I change the size of <code>a</code> and <code>b</code>, I find that <code>Matmul</code> can somehow overlap with <code>MEMCPYH2D</code><br>\nWhen <code>a</code> and <code>b</code> are 512 x 512</p>\n<pre><code>import tensorflow as tf\nimport os\n\nfrom tensorflow.python.client import timeline\n\ntrain_ops = []\nendpoints = []\n\nwith tf.device('/GPU:0'):\n  a = tf.random_normal(shape=(512, 512), name='a')\n  b = tf.random_normal(shape=(512, 512), name='b')\n  for i in range(10):\n    a = tf.matmul(a, b, name='matmul_a_b_%s' % i)\n    endpoints.append(a)\n\nfor i in range(len(endpoints)):\n  with tf.device('/CPU:0'):\n    memcpy_d2h = tf.identity(endpoints[i])\n  with tf.device('/GPU:0'):\n    memcpy_h2d = tf.identity(memcpy_d2h)\n  train_ops.append(memcpy_h2d.op)\n\n\nwith tf.Session() as sess:\n  sess.run(tf.global_variables_initializer())\n  for i in range(10):\n    run_options = tf.RunOptions(trace_level=tf.RunOptions.FULL_TRACE)\n    run_metadata = tf.RunMetadata()\n    sess.run(train_ops, options=run_options, run_metadata=run_metadata)\n    trace_filename = os.path.join('/tmp/delete_me/trace', 'trace-%d.json' % i)\n    if not tf.gfile.Exists(os.path.dirname(trace_filename)):\n      os.makedirs(os.path.dirname(trace_filename))\n    trace = timeline.Timeline(step_stats=run_metadata.step_stats)\n    with tf.gfile.Open(trace_filename, 'w') as trace_file:\n      trace_file.write(trace.generate_chrome_trace_format(show_memory=False))\n</code></pre>\n<p>Timeline is:<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/7370869/39565097-54d615ca-4ee9-11e8-9066-b45e4cc7ffcf.png\"><img src=\"https://user-images.githubusercontent.com/7370869/39565097-54d615ca-4ee9-11e8-9066-b45e4cc7ffcf.png\" alt=\"image\" style=\"max-width:100%;\"></a></p>\n<p>When When <code>a</code> and <code>b</code> are 256 x 256:</p>\n<pre><code>  a = tf.random_normal(shape=(256, 256), name='a')\n  b = tf.random_normal(shape=(256, 256), name='b')\n</code></pre>\n<p>Timeline is:<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/7370869/39565157-8817f1a6-4ee9-11e8-9cf2-021d5edcdf65.png\"><img src=\"https://user-images.githubusercontent.com/7370869/39565157-8817f1a6-4ee9-11e8-9cf2-021d5edcdf65.png\" alt=\"image\" style=\"max-width:100%;\"></a></p>", "body_text": "Well, I made some more experiments. If I change the size of a and b, I find that Matmul can somehow overlap with MEMCPYH2D\nWhen a and b are 512 x 512\nimport tensorflow as tf\nimport os\n\nfrom tensorflow.python.client import timeline\n\ntrain_ops = []\nendpoints = []\n\nwith tf.device('/GPU:0'):\n  a = tf.random_normal(shape=(512, 512), name='a')\n  b = tf.random_normal(shape=(512, 512), name='b')\n  for i in range(10):\n    a = tf.matmul(a, b, name='matmul_a_b_%s' % i)\n    endpoints.append(a)\n\nfor i in range(len(endpoints)):\n  with tf.device('/CPU:0'):\n    memcpy_d2h = tf.identity(endpoints[i])\n  with tf.device('/GPU:0'):\n    memcpy_h2d = tf.identity(memcpy_d2h)\n  train_ops.append(memcpy_h2d.op)\n\n\nwith tf.Session() as sess:\n  sess.run(tf.global_variables_initializer())\n  for i in range(10):\n    run_options = tf.RunOptions(trace_level=tf.RunOptions.FULL_TRACE)\n    run_metadata = tf.RunMetadata()\n    sess.run(train_ops, options=run_options, run_metadata=run_metadata)\n    trace_filename = os.path.join('/tmp/delete_me/trace', 'trace-%d.json' % i)\n    if not tf.gfile.Exists(os.path.dirname(trace_filename)):\n      os.makedirs(os.path.dirname(trace_filename))\n    trace = timeline.Timeline(step_stats=run_metadata.step_stats)\n    with tf.gfile.Open(trace_filename, 'w') as trace_file:\n      trace_file.write(trace.generate_chrome_trace_format(show_memory=False))\n\nTimeline is:\n\nWhen When a and b are 256 x 256:\n  a = tf.random_normal(shape=(256, 256), name='a')\n  b = tf.random_normal(shape=(256, 256), name='b')\n\nTimeline is:", "body": "Well, I made some more experiments. If I change the size of `a` and `b`, I find that `Matmul` can somehow overlap with `MEMCPYH2D`\r\nWhen `a` and `b` are 512 x 512\r\n```\r\nimport tensorflow as tf\r\nimport os\r\n\r\nfrom tensorflow.python.client import timeline\r\n\r\ntrain_ops = []\r\nendpoints = []\r\n\r\nwith tf.device('/GPU:0'):\r\n  a = tf.random_normal(shape=(512, 512), name='a')\r\n  b = tf.random_normal(shape=(512, 512), name='b')\r\n  for i in range(10):\r\n    a = tf.matmul(a, b, name='matmul_a_b_%s' % i)\r\n    endpoints.append(a)\r\n\r\nfor i in range(len(endpoints)):\r\n  with tf.device('/CPU:0'):\r\n    memcpy_d2h = tf.identity(endpoints[i])\r\n  with tf.device('/GPU:0'):\r\n    memcpy_h2d = tf.identity(memcpy_d2h)\r\n  train_ops.append(memcpy_h2d.op)\r\n\r\n\r\nwith tf.Session() as sess:\r\n  sess.run(tf.global_variables_initializer())\r\n  for i in range(10):\r\n    run_options = tf.RunOptions(trace_level=tf.RunOptions.FULL_TRACE)\r\n    run_metadata = tf.RunMetadata()\r\n    sess.run(train_ops, options=run_options, run_metadata=run_metadata)\r\n    trace_filename = os.path.join('/tmp/delete_me/trace', 'trace-%d.json' % i)\r\n    if not tf.gfile.Exists(os.path.dirname(trace_filename)):\r\n      os.makedirs(os.path.dirname(trace_filename))\r\n    trace = timeline.Timeline(step_stats=run_metadata.step_stats)\r\n    with tf.gfile.Open(trace_filename, 'w') as trace_file:\r\n      trace_file.write(trace.generate_chrome_trace_format(show_memory=False))\r\n```\r\n\r\nTimeline is:\r\n![image](https://user-images.githubusercontent.com/7370869/39565097-54d615ca-4ee9-11e8-9066-b45e4cc7ffcf.png)\r\n\r\nWhen When `a` and `b` are 256 x 256:\r\n```\r\n  a = tf.random_normal(shape=(256, 256), name='a')\r\n  b = tf.random_normal(shape=(256, 256), name='b')\r\n```\r\nTimeline is:\r\n![image](https://user-images.githubusercontent.com/7370869/39565157-8817f1a6-4ee9-11e8-9cf2-021d5edcdf65.png)\r\n\r\n"}