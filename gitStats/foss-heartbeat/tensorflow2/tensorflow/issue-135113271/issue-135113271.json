{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1216", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1216/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1216/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1216/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/1216", "id": 135113271, "node_id": "MDU6SXNzdWUxMzUxMTMyNzE=", "number": 1216, "title": "Android demo fails to build due to protobuf visibility error", "user": {"login": "petewarden", "id": 161459, "node_id": "MDQ6VXNlcjE2MTQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/161459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petewarden", "html_url": "https://github.com/petewarden", "followers_url": "https://api.github.com/users/petewarden/followers", "following_url": "https://api.github.com/users/petewarden/following{/other_user}", "gists_url": "https://api.github.com/users/petewarden/gists{/gist_id}", "starred_url": "https://api.github.com/users/petewarden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petewarden/subscriptions", "organizations_url": "https://api.github.com/users/petewarden/orgs", "repos_url": "https://api.github.com/users/petewarden/repos", "events_url": "https://api.github.com/users/petewarden/events{/privacy}", "received_events_url": "https://api.github.com/users/petewarden/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2016-02-20T19:41:25Z", "updated_at": "2016-02-22T07:31:25Z", "closed_at": "2016-02-20T21:36:48Z", "author_association": "MEMBER", "body_html": "<p>When running the instructions to build the Android demo with the latest open-source repo, a protobuf visibility error causes the build to fail.</p>\n<p>Steps to reproduce:</p>\n<ul>\n<li>On an Ubuntu system, git clone the repo following the install instructions.</li>\n<li>Run <code>bazel build //tensorflow/examples/android:tensorflow_demo</code>.</li>\n</ul>\n<p>Results:</p>\n<pre><code>ERROR: /usr/local/google/home/petewarden/projects/tensorflow/tensorflow/core/BUILD:77:1: Target '//google/protobuf:cc_wkt_protos' is not visible from target '//tensorflow/core:protos_all_cc'. Check the visibility declaration of the former target if you think the dependency is legitimate.\n</code></pre>\n<p>Notes:<br>\nI think this might be a protobuf Bazel rule problem. I was able to fix it by patching google/protobuf/protobuf.bzl like so:</p>\n<pre><code>+++ b/protobuf.bzl\n@@ -132,6 +132,11 @@ def cc_proto_library(\n   if include != None:\n     includes = [include]\n\n+  if \"visibility\" in kargs:\n+    visibility = kargs[\"visibility\"]\n+  else:\n+    visibility = None\n+\n   if internal_bootstrap_hack:\n     # For pre-checked-in generated files, we add the internal_bootstrap_hack\n     # which will skip the codegen action.\n@@ -141,6 +146,7 @@ def cc_proto_library(\n         deps=[s + \"_genproto\" for s in deps],\n         includes=includes,\n         protoc=protoc,\n+        visibility=visibility,\n     )\n     # An empty cc_library to make rule dependency consistent.\n     native.cc_library(\n@@ -157,6 +163,7 @@ def cc_proto_library(\n       protoc=protoc,\n       gen_cc=1,\n       outs=outs,\n+      visibility=visibility,\n   )\n\n   if default_runtime and not default_runtime in cc_libs:\n</code></pre>", "body_text": "When running the instructions to build the Android demo with the latest open-source repo, a protobuf visibility error causes the build to fail.\nSteps to reproduce:\n\nOn an Ubuntu system, git clone the repo following the install instructions.\nRun bazel build //tensorflow/examples/android:tensorflow_demo.\n\nResults:\nERROR: /usr/local/google/home/petewarden/projects/tensorflow/tensorflow/core/BUILD:77:1: Target '//google/protobuf:cc_wkt_protos' is not visible from target '//tensorflow/core:protos_all_cc'. Check the visibility declaration of the former target if you think the dependency is legitimate.\n\nNotes:\nI think this might be a protobuf Bazel rule problem. I was able to fix it by patching google/protobuf/protobuf.bzl like so:\n+++ b/protobuf.bzl\n@@ -132,6 +132,11 @@ def cc_proto_library(\n   if include != None:\n     includes = [include]\n\n+  if \"visibility\" in kargs:\n+    visibility = kargs[\"visibility\"]\n+  else:\n+    visibility = None\n+\n   if internal_bootstrap_hack:\n     # For pre-checked-in generated files, we add the internal_bootstrap_hack\n     # which will skip the codegen action.\n@@ -141,6 +146,7 @@ def cc_proto_library(\n         deps=[s + \"_genproto\" for s in deps],\n         includes=includes,\n         protoc=protoc,\n+        visibility=visibility,\n     )\n     # An empty cc_library to make rule dependency consistent.\n     native.cc_library(\n@@ -157,6 +163,7 @@ def cc_proto_library(\n       protoc=protoc,\n       gen_cc=1,\n       outs=outs,\n+      visibility=visibility,\n   )\n\n   if default_runtime and not default_runtime in cc_libs:", "body": "When running the instructions to build the Android demo with the latest open-source repo, a protobuf visibility error causes the build to fail.\n\nSteps to reproduce:\n- On an Ubuntu system, git clone the repo following the install instructions.\n- Run `bazel build //tensorflow/examples/android:tensorflow_demo`.\n\nResults:\n\n```\nERROR: /usr/local/google/home/petewarden/projects/tensorflow/tensorflow/core/BUILD:77:1: Target '//google/protobuf:cc_wkt_protos' is not visible from target '//tensorflow/core:protos_all_cc'. Check the visibility declaration of the former target if you think the dependency is legitimate.\n```\n\nNotes:\nI think this might be a protobuf Bazel rule problem. I was able to fix it by patching google/protobuf/protobuf.bzl like so:\n\n```\n+++ b/protobuf.bzl\n@@ -132,6 +132,11 @@ def cc_proto_library(\n   if include != None:\n     includes = [include]\n\n+  if \"visibility\" in kargs:\n+    visibility = kargs[\"visibility\"]\n+  else:\n+    visibility = None\n+\n   if internal_bootstrap_hack:\n     # For pre-checked-in generated files, we add the internal_bootstrap_hack\n     # which will skip the codegen action.\n@@ -141,6 +146,7 @@ def cc_proto_library(\n         deps=[s + \"_genproto\" for s in deps],\n         includes=includes,\n         protoc=protoc,\n+        visibility=visibility,\n     )\n     # An empty cc_library to make rule dependency consistent.\n     native.cc_library(\n@@ -157,6 +163,7 @@ def cc_proto_library(\n       protoc=protoc,\n       gen_cc=1,\n       outs=outs,\n+      visibility=visibility,\n   )\n\n   if default_runtime and not default_runtime in cc_libs:\n```\n"}