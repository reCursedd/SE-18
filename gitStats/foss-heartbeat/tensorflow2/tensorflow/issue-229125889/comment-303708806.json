{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/303708806", "html_url": "https://github.com/tensorflow/tensorflow/issues/9939#issuecomment-303708806", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9939", "id": 303708806, "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzcwODgwNg==", "user": {"login": "EdeMeijer", "id": 5758565, "node_id": "MDQ6VXNlcjU3NTg1NjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/5758565?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdeMeijer", "html_url": "https://github.com/EdeMeijer", "followers_url": "https://api.github.com/users/EdeMeijer/followers", "following_url": "https://api.github.com/users/EdeMeijer/following{/other_user}", "gists_url": "https://api.github.com/users/EdeMeijer/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdeMeijer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdeMeijer/subscriptions", "organizations_url": "https://api.github.com/users/EdeMeijer/orgs", "repos_url": "https://api.github.com/users/EdeMeijer/repos", "events_url": "https://api.github.com/users/EdeMeijer/events{/privacy}", "received_events_url": "https://api.github.com/users/EdeMeijer/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-24T12:28:20Z", "updated_at": "2017-05-24T12:28:20Z", "author_association": "NONE", "body_html": "<p>I did a quick debugging session, and it seems the issue was introduced in <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/1e3e5d424eaa6332314f8ad1d54089eb0f9e02e7/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/1e3e5d424eaa6332314f8ad1d54089eb0f9e02e7\"><tt>1e3e5d4</tt></a> by adding a dictionary named <code>LAYER_NAME_UIDS</code> as a graph collection. I'm not sure on the internals, but my feeling is that collections are not meant for dictionaries, only for ops, as the serialization code apparently expects to be able to access a <code>name</code> property on all collection entries.</p>\n<p>The dictionary serves as a global (or technically graph-local) store for tracking counters per base name to make unique names. As a proof of concept I defined <code>layer_name_uids</code> globally as a struct and just used that without using collections, and this fixed the graph serialization issue.</p>\n<p>I hope someone with more in-depth knowledge on this code could take a look. Maybe <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=710255\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/fchollet\">@fchollet</a> who authored the commit in question?</p>", "body_text": "I did a quick debugging session, and it seems the issue was introduced in 1e3e5d4 by adding a dictionary named LAYER_NAME_UIDS as a graph collection. I'm not sure on the internals, but my feeling is that collections are not meant for dictionaries, only for ops, as the serialization code apparently expects to be able to access a name property on all collection entries.\nThe dictionary serves as a global (or technically graph-local) store for tracking counters per base name to make unique names. As a proof of concept I defined layer_name_uids globally as a struct and just used that without using collections, and this fixed the graph serialization issue.\nI hope someone with more in-depth knowledge on this code could take a look. Maybe @fchollet who authored the commit in question?", "body": "I did a quick debugging session, and it seems the issue was introduced in https://github.com/tensorflow/tensorflow/commit/1e3e5d424eaa6332314f8ad1d54089eb0f9e02e7 by adding a dictionary named `LAYER_NAME_UIDS` as a graph collection. I'm not sure on the internals, but my feeling is that collections are not meant for dictionaries, only for ops, as the serialization code apparently expects to be able to access a `name` property on all collection entries.\r\n\r\nThe dictionary serves as a global (or technically graph-local) store for tracking counters per base name to make unique names. As a proof of concept I defined `layer_name_uids` globally as a struct and just used that without using collections, and this fixed the graph serialization issue.\r\n\r\nI hope someone with more in-depth knowledge on this code could take a look. Maybe @fchollet who authored the commit in question?"}