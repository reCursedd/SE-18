{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15415", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15415/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15415/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15415/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15415", "id": 282619648, "node_id": "MDU6SXNzdWUyODI2MTk2NDg=", "number": 15415, "title": "sparse_multiclass_hinge_loss() error", "user": {"login": "axelurbiz", "id": 22867844, "node_id": "MDQ6VXNlcjIyODY3ODQ0", "avatar_url": "https://avatars0.githubusercontent.com/u/22867844?v=4", "gravatar_id": "", "url": "https://api.github.com/users/axelurbiz", "html_url": "https://github.com/axelurbiz", "followers_url": "https://api.github.com/users/axelurbiz/followers", "following_url": "https://api.github.com/users/axelurbiz/following{/other_user}", "gists_url": "https://api.github.com/users/axelurbiz/gists{/gist_id}", "starred_url": "https://api.github.com/users/axelurbiz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/axelurbiz/subscriptions", "organizations_url": "https://api.github.com/users/axelurbiz/orgs", "repos_url": "https://api.github.com/users/axelurbiz/repos", "events_url": "https://api.github.com/users/axelurbiz/events{/privacy}", "received_events_url": "https://api.github.com/users/axelurbiz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-16T12:10:12Z", "updated_at": "2017-12-19T11:53:22Z", "closed_at": "2017-12-19T11:53:22Z", "author_association": "NONE", "body_html": "<p>Hello,</p>\n<p>I'm getting the error below using <code>sparse_multiclass_hinge_loss()</code>. Any hints would be highly appreciated.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n<span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\nx <span class=\"pl-k\">=</span> np.random.uniform(<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-v\">size</span> <span class=\"pl-k\">=</span> (<span class=\"pl-c1\">100</span>, <span class=\"pl-c1\">5</span>))\ny <span class=\"pl-k\">=</span> np.random.choice(<span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">100</span>) \ny <span class=\"pl-k\">=</span> y.reshape(<span class=\"pl-c1\">100</span>, <span class=\"pl-c1\">1</span>)\n\nX <span class=\"pl-k\">=</span> tf.placeholder(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>float32<span class=\"pl-pds\">\"</span></span>, [<span class=\"pl-c1\">None</span>, <span class=\"pl-c1\">5</span>])\nY <span class=\"pl-k\">=</span> tf.placeholder(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>int32<span class=\"pl-pds\">\"</span></span>, [<span class=\"pl-c1\">None</span>, <span class=\"pl-c1\">1</span>])\n\nweights <span class=\"pl-k\">=</span> {<span class=\"pl-s\"><span class=\"pl-pds\">'</span>w<span class=\"pl-pds\">'</span></span>: tf.Variable(tf.random_uniform([<span class=\"pl-c1\">5</span>, <span class=\"pl-c1\">3</span>]))}\nbiases <span class=\"pl-k\">=</span> {<span class=\"pl-s\"><span class=\"pl-pds\">'</span>b<span class=\"pl-pds\">'</span></span>: tf.Variable(tf.zeros([<span class=\"pl-c1\">3</span>]))}\n\nlogits <span class=\"pl-k\">=</span> tf.add(tf.matmul(X, weights[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>w<span class=\"pl-pds\">'</span></span>]), biases[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>b<span class=\"pl-pds\">'</span></span>])\n\nloss <span class=\"pl-k\">=</span> tf.reduce_mean(tf.contrib.kernel_methods.sparse_multiclass_hinge_loss(<span class=\"pl-v\">logits</span><span class=\"pl-k\">=</span>logits, <span class=\"pl-v\">labels</span><span class=\"pl-k\">=</span>Y))\n\ninit <span class=\"pl-k\">=</span> tf.global_variables_initializer()\n\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n    sess.run(init)\n    res <span class=\"pl-k\">=</span> sess.run(loss, <span class=\"pl-v\">feed_dict</span><span class=\"pl-k\">=</span>{X: x, Y: y}) \n\n\nres</pre></div>\n<p>make_tensor_proto(values, dtype, shape, verify_shape)<br>\n369   else:<br>\n370     if values is None:<br>\n--&gt; 371       raise ValueError(\"None values not supported.\")<br>\n372     # if dtype is provided, forces numpy array to be the type<br>\n373     # provided if possible.</p>\n<p>ValueError: None values not supported.</p>", "body_text": "Hello,\nI'm getting the error below using sparse_multiclass_hinge_loss(). Any hints would be highly appreciated.\nimport numpy as np\nimport tensorflow as tf\n\nx = np.random.uniform(0, 1, size = (100, 5))\ny = np.random.choice(3, 100) \ny = y.reshape(100, 1)\n\nX = tf.placeholder(\"float32\", [None, 5])\nY = tf.placeholder(\"int32\", [None, 1])\n\nweights = {'w': tf.Variable(tf.random_uniform([5, 3]))}\nbiases = {'b': tf.Variable(tf.zeros([3]))}\n\nlogits = tf.add(tf.matmul(X, weights['w']), biases['b'])\n\nloss = tf.reduce_mean(tf.contrib.kernel_methods.sparse_multiclass_hinge_loss(logits=logits, labels=Y))\n\ninit = tf.global_variables_initializer()\n\nwith tf.Session() as sess:\n    sess.run(init)\n    res = sess.run(loss, feed_dict={X: x, Y: y}) \n\n\nres\nmake_tensor_proto(values, dtype, shape, verify_shape)\n369   else:\n370     if values is None:\n--> 371       raise ValueError(\"None values not supported.\")\n372     # if dtype is provided, forces numpy array to be the type\n373     # provided if possible.\nValueError: None values not supported.", "body": "Hello, \r\n\r\nI'm getting the error below using `sparse_multiclass_hinge_loss()`. Any hints would be highly appreciated.\r\n\r\n```python\r\nimport numpy as np\r\nimport tensorflow as tf\r\n\r\nx = np.random.uniform(0, 1, size = (100, 5))\r\ny = np.random.choice(3, 100) \r\ny = y.reshape(100, 1)\r\n\r\nX = tf.placeholder(\"float32\", [None, 5])\r\nY = tf.placeholder(\"int32\", [None, 1])\r\n\r\nweights = {'w': tf.Variable(tf.random_uniform([5, 3]))}\r\nbiases = {'b': tf.Variable(tf.zeros([3]))}\r\n\r\nlogits = tf.add(tf.matmul(X, weights['w']), biases['b'])\r\n\r\nloss = tf.reduce_mean(tf.contrib.kernel_methods.sparse_multiclass_hinge_loss(logits=logits, labels=Y))\r\n\r\ninit = tf.global_variables_initializer()\r\n\r\nwith tf.Session() as sess:\r\n    sess.run(init)\r\n    res = sess.run(loss, feed_dict={X: x, Y: y}) \r\n\r\n\r\nres\r\n```\r\n make_tensor_proto(values, dtype, shape, verify_shape)\r\n    369   else:\r\n    370     if values is None:\r\n--> 371       raise ValueError(\"None values not supported.\")\r\n    372     # if dtype is provided, forces numpy array to be the type\r\n    373     # provided if possible.\r\n\r\nValueError: None values not supported.\r\n\r\n\r\n"}