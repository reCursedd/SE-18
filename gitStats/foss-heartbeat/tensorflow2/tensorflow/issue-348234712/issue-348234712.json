{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21433", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21433/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21433/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21433/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21433", "id": 348234712, "node_id": "MDU6SXNzdWUzNDgyMzQ3MTI=", "number": 21433, "title": "Shape mismatch after sampling", "user": {"login": "akloss", "id": 33923616, "node_id": "MDQ6VXNlcjMzOTIzNjE2", "avatar_url": "https://avatars1.githubusercontent.com/u/33923616?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akloss", "html_url": "https://github.com/akloss", "followers_url": "https://api.github.com/users/akloss/followers", "following_url": "https://api.github.com/users/akloss/following{/other_user}", "gists_url": "https://api.github.com/users/akloss/gists{/gist_id}", "starred_url": "https://api.github.com/users/akloss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akloss/subscriptions", "organizations_url": "https://api.github.com/users/akloss/orgs", "repos_url": "https://api.github.com/users/akloss/repos", "events_url": "https://api.github.com/users/akloss/events{/privacy}", "received_events_url": "https://api.github.com/users/akloss/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "jvdillon", "id": 1137078, "node_id": "MDQ6VXNlcjExMzcwNzg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1137078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jvdillon", "html_url": "https://github.com/jvdillon", "followers_url": "https://api.github.com/users/jvdillon/followers", "following_url": "https://api.github.com/users/jvdillon/following{/other_user}", "gists_url": "https://api.github.com/users/jvdillon/gists{/gist_id}", "starred_url": "https://api.github.com/users/jvdillon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jvdillon/subscriptions", "organizations_url": "https://api.github.com/users/jvdillon/orgs", "repos_url": "https://api.github.com/users/jvdillon/repos", "events_url": "https://api.github.com/users/jvdillon/events{/privacy}", "received_events_url": "https://api.github.com/users/jvdillon/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jvdillon", "id": 1137078, "node_id": "MDQ6VXNlcjExMzcwNzg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1137078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jvdillon", "html_url": "https://github.com/jvdillon", "followers_url": "https://api.github.com/users/jvdillon/followers", "following_url": "https://api.github.com/users/jvdillon/following{/other_user}", "gists_url": "https://api.github.com/users/jvdillon/gists{/gist_id}", "starred_url": "https://api.github.com/users/jvdillon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jvdillon/subscriptions", "organizations_url": "https://api.github.com/users/jvdillon/orgs", "repos_url": "https://api.github.com/users/jvdillon/repos", "events_url": "https://api.github.com/users/jvdillon/events{/privacy}", "received_events_url": "https://api.github.com/users/jvdillon/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-08-07T09:13:54Z", "updated_at": "2018-10-16T17:25:54Z", "closed_at": "2018-10-16T17:25:54Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Ubuntu 16.04</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>: N/A</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary (pip install tensorflow-gpu)</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.9 ('v1.9.0-0-g25c197e023', '1.9.0')</li>\n<li><strong>Python version</strong>: 2.7</li>\n<li><strong>Bazel version (if compiling from source)</strong>: N/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: N/A</li>\n<li><strong>CUDA/cuDNN version</strong>: 9 / 7</li>\n<li><strong>GPU model and memory</strong>:  Nvidia Titan Xp (12 Gb)</li>\n<li><strong>Exact command to reproduce</strong>: see below</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>Since I upgraded from version 1.8 to 1.9, there seems to be an issue with the shape of tensors sampled from <code>tf.contrib.distributions.MultivariateNormalDiag.sample()</code> using the sample_shape argument: While <code>get_shape()</code> indicates that the output tensor is shaped as [sample_shape, dim] (where dim is the dimensionality of the distribution), using this tensor in <code>tf.multiply()</code> results in an output with transposed shape, whereas <code>tf.add()</code> throws an 'Incompatible shapes' error.</p>\n<p>The error seems to indicate that a transpose operation is being used on the sampled tensor:</p>\n<pre><code>InvalidArgumentError (see above for traceback): Incompatible shapes: [100,5] vs. [5,100]\n\t [[Node: add_4 = Add[T=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](ones_12, MultivariateNormalDiag_4/sample/affine_linear_operator/forward/DistributionShape_1/undo_make_batch_of_event_sample_matrices/rotate_transpose/transpose)]]\n\t [[Node: add_4/_3 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:CPU:0\", send_device=\"/job:localhost/replica:0/task:0/device:GPU:0\", send_device_incarnation=1, tensor_name=\"edge_14_add_4\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"]()]]\n</code></pre>\n<p>On version 1.9, the code below outputs</p>\n<pre><code>sampled shape  (100, 5)\nnormal multiply  (100, 5)\nmultiply sampling output  (5, 100)\n</code></pre>\n<p>If I downgrade to 1.8 again, I get the expected</p>\n<pre><code>sampled shape  (100, 5)\nnormal multiply  (100, 5)\nmultiply sampling output  (100, 5)\n</code></pre>\n<h3>Source code / logs</h3>\n<pre><code>import tensorflow as tf\n\na = tf.ones([100, 5])\nb = tf.ones([100, 5])\nsam = tf.contrib.distributions.MultivariateNormalDiag(\n                loc=[0., 0., 0., 0., 0.],\n                scale_diag=[1., 1., 1., 1., 1.])\nc = sam.sample(sample_shape=[100])\n\nmul1 = tf.multiply(a, b)\nmul2 = tf.multiply(a, c)\nadd = a + c\n\n\nsess = tf.Session()\ninit = tf.initialize_all_variables()\nsess.run(init)\nval_c = c.eval(session=sess)\nval_1 = mul1.eval(session=sess)\nval_2 = mul2.eval(session=sess)\n# this throws an error:\n# val_3 = add.eval(session=sess)\n\nprint 'sampled shape ', val_c.shape\nprint 'normal multiply ', val_1.shape\nprint 'multiply sampling output ', val_2.shape\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 16.04\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A\nTensorFlow installed from (source or binary): binary (pip install tensorflow-gpu)\nTensorFlow version (use command below): 1.9 ('v1.9.0-0-g25c197e023', '1.9.0')\nPython version: 2.7\nBazel version (if compiling from source): N/A\nGCC/Compiler version (if compiling from source): N/A\nCUDA/cuDNN version: 9 / 7\nGPU model and memory:  Nvidia Titan Xp (12 Gb)\nExact command to reproduce: see below\n\nDescribe the problem\nSince I upgraded from version 1.8 to 1.9, there seems to be an issue with the shape of tensors sampled from tf.contrib.distributions.MultivariateNormalDiag.sample() using the sample_shape argument: While get_shape() indicates that the output tensor is shaped as [sample_shape, dim] (where dim is the dimensionality of the distribution), using this tensor in tf.multiply() results in an output with transposed shape, whereas tf.add() throws an 'Incompatible shapes' error.\nThe error seems to indicate that a transpose operation is being used on the sampled tensor:\nInvalidArgumentError (see above for traceback): Incompatible shapes: [100,5] vs. [5,100]\n\t [[Node: add_4 = Add[T=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](ones_12, MultivariateNormalDiag_4/sample/affine_linear_operator/forward/DistributionShape_1/undo_make_batch_of_event_sample_matrices/rotate_transpose/transpose)]]\n\t [[Node: add_4/_3 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:CPU:0\", send_device=\"/job:localhost/replica:0/task:0/device:GPU:0\", send_device_incarnation=1, tensor_name=\"edge_14_add_4\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"]()]]\n\nOn version 1.9, the code below outputs\nsampled shape  (100, 5)\nnormal multiply  (100, 5)\nmultiply sampling output  (5, 100)\n\nIf I downgrade to 1.8 again, I get the expected\nsampled shape  (100, 5)\nnormal multiply  (100, 5)\nmultiply sampling output  (100, 5)\n\nSource code / logs\nimport tensorflow as tf\n\na = tf.ones([100, 5])\nb = tf.ones([100, 5])\nsam = tf.contrib.distributions.MultivariateNormalDiag(\n                loc=[0., 0., 0., 0., 0.],\n                scale_diag=[1., 1., 1., 1., 1.])\nc = sam.sample(sample_shape=[100])\n\nmul1 = tf.multiply(a, b)\nmul2 = tf.multiply(a, c)\nadd = a + c\n\n\nsess = tf.Session()\ninit = tf.initialize_all_variables()\nsess.run(init)\nval_c = c.eval(session=sess)\nval_1 = mul1.eval(session=sess)\nval_2 = mul2.eval(session=sess)\n# this throws an error:\n# val_3 = add.eval(session=sess)\n\nprint 'sampled shape ', val_c.shape\nprint 'normal multiply ', val_1.shape\nprint 'multiply sampling output ', val_2.shape", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 16.04\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**: N/A\r\n- **TensorFlow installed from (source or binary)**: binary (pip install tensorflow-gpu)\r\n- **TensorFlow version (use command below)**: 1.9 ('v1.9.0-0-g25c197e023', '1.9.0')\r\n- **Python version**: 2.7\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: 9 / 7\r\n- **GPU model and memory**:  Nvidia Titan Xp (12 Gb)\r\n- **Exact command to reproduce**: see below\r\n\r\n\r\n### Describe the problem\r\nSince I upgraded from version 1.8 to 1.9, there seems to be an issue with the shape of tensors sampled from `tf.contrib.distributions.MultivariateNormalDiag.sample()` using the sample_shape argument: While `get_shape()` indicates that the output tensor is shaped as [sample_shape, dim] (where dim is the dimensionality of the distribution), using this tensor in `tf.multiply()` results in an output with transposed shape, whereas `tf.add()` throws an 'Incompatible shapes' error.\r\n\r\nThe error seems to indicate that a transpose operation is being used on the sampled tensor:\r\n```\r\nInvalidArgumentError (see above for traceback): Incompatible shapes: [100,5] vs. [5,100]\r\n\t [[Node: add_4 = Add[T=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](ones_12, MultivariateNormalDiag_4/sample/affine_linear_operator/forward/DistributionShape_1/undo_make_batch_of_event_sample_matrices/rotate_transpose/transpose)]]\r\n\t [[Node: add_4/_3 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:CPU:0\", send_device=\"/job:localhost/replica:0/task:0/device:GPU:0\", send_device_incarnation=1, tensor_name=\"edge_14_add_4\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"]()]]\r\n```\r\n\r\nOn version 1.9, the code below outputs\r\n```\r\nsampled shape  (100, 5)\r\nnormal multiply  (100, 5)\r\nmultiply sampling output  (5, 100)\r\n``` \r\n If I downgrade to 1.8 again, I get the expected\r\n```\r\nsampled shape  (100, 5)\r\nnormal multiply  (100, 5)\r\nmultiply sampling output  (100, 5)\r\n```\r\n\r\n### Source code / logs\r\n```\r\nimport tensorflow as tf\r\n\r\na = tf.ones([100, 5])\r\nb = tf.ones([100, 5])\r\nsam = tf.contrib.distributions.MultivariateNormalDiag(\r\n                loc=[0., 0., 0., 0., 0.],\r\n                scale_diag=[1., 1., 1., 1., 1.])\r\nc = sam.sample(sample_shape=[100])\r\n\r\nmul1 = tf.multiply(a, b)\r\nmul2 = tf.multiply(a, c)\r\nadd = a + c\r\n\r\n\r\nsess = tf.Session()\r\ninit = tf.initialize_all_variables()\r\nsess.run(init)\r\nval_c = c.eval(session=sess)\r\nval_1 = mul1.eval(session=sess)\r\nval_2 = mul2.eval(session=sess)\r\n# this throws an error:\r\n# val_3 = add.eval(session=sess)\r\n\r\nprint 'sampled shape ', val_c.shape\r\nprint 'normal multiply ', val_1.shape\r\nprint 'multiply sampling output ', val_2.shape\r\n```\r\n\r\n"}