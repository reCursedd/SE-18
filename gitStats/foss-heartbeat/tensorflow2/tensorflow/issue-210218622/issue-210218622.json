{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7876", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7876/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7876/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7876/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/7876", "id": 210218622, "node_id": "MDU6SXNzdWUyMTAyMTg2MjI=", "number": 7876, "title": "Import meta graph followed by save overwrites the previous checkpoints", "user": {"login": "ramnath-k", "id": 2484842, "node_id": "MDQ6VXNlcjI0ODQ4NDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/2484842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ramnath-k", "html_url": "https://github.com/ramnath-k", "followers_url": "https://api.github.com/users/ramnath-k/followers", "following_url": "https://api.github.com/users/ramnath-k/following{/other_user}", "gists_url": "https://api.github.com/users/ramnath-k/gists{/gist_id}", "starred_url": "https://api.github.com/users/ramnath-k/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ramnath-k/subscriptions", "organizations_url": "https://api.github.com/users/ramnath-k/orgs", "repos_url": "https://api.github.com/users/ramnath-k/repos", "events_url": "https://api.github.com/users/ramnath-k/events{/privacy}", "received_events_url": "https://api.github.com/users/ramnath-k/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "allenlavoie", "id": 3731025, "node_id": "MDQ6VXNlcjM3MzEwMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3731025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/allenlavoie", "html_url": "https://github.com/allenlavoie", "followers_url": "https://api.github.com/users/allenlavoie/followers", "following_url": "https://api.github.com/users/allenlavoie/following{/other_user}", "gists_url": "https://api.github.com/users/allenlavoie/gists{/gist_id}", "starred_url": "https://api.github.com/users/allenlavoie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/allenlavoie/subscriptions", "organizations_url": "https://api.github.com/users/allenlavoie/orgs", "repos_url": "https://api.github.com/users/allenlavoie/repos", "events_url": "https://api.github.com/users/allenlavoie/events{/privacy}", "received_events_url": "https://api.github.com/users/allenlavoie/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "allenlavoie", "id": 3731025, "node_id": "MDQ6VXNlcjM3MzEwMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3731025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/allenlavoie", "html_url": "https://github.com/allenlavoie", "followers_url": "https://api.github.com/users/allenlavoie/followers", "following_url": "https://api.github.com/users/allenlavoie/following{/other_user}", "gists_url": "https://api.github.com/users/allenlavoie/gists{/gist_id}", "starred_url": "https://api.github.com/users/allenlavoie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/allenlavoie/subscriptions", "organizations_url": "https://api.github.com/users/allenlavoie/orgs", "repos_url": "https://api.github.com/users/allenlavoie/repos", "events_url": "https://api.github.com/users/allenlavoie/events{/privacy}", "received_events_url": "https://api.github.com/users/allenlavoie/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2017-02-25T07:37:53Z", "updated_at": "2018-10-31T18:34:29Z", "closed_at": "2018-10-31T18:06:05Z", "author_association": "NONE", "body_html": "<p>NOTE: Only file GitHub issues for bugs and feature requests.  All other topics will be closed.</p>\n<p>For general support from the community, see <a href=\"https://stackoverflow.com/questions/tagged/tensorflow\" rel=\"nofollow\">StackOverflow</a>.<br>\nTo make bugs and feature requests more easy to find and organize, we close issues that are deemed<br>\nout of scope for GitHub Issues and point people to StackOverflow.</p>\n<p>For bugs or installation issues, please provide the following information.<br>\nThe more information you provide, the more easily we will be able to offer<br>\nhelp and advice.</p>\n<h3>What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?</h3>\n<h3>Environment info</h3>\n<p>Operating System: Ubuntu 14.04</p>\n<p>Installed version of CUDA and cuDNN:<br>\n(please attach the output of <code>ls -l /path/to/cuda/lib/libcud*</code>): using CPU version of tensorflow 1.0.0</p>\n<p>If installed from binary pip package, provide:</p>\n<ol>\n<li>A link to the pip package you installed: pip install tensorflow</li>\n<li>The output from <code>python -c \"import tensorflow; print(tensorflow.__version__)\"</code>. 1.0.0</li>\n</ol>\n<p>If installed from source, provide</p>\n<ol>\n<li>The commit hash (<code>git rev-parse HEAD</code>)</li>\n<li>The output of <code>bazel version</code></li>\n</ol>\n<h3>If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)</h3>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\ngraph <span class=\"pl-k\">=</span> tf.Graph()\n<span class=\"pl-k\">with</span> graph.as_default():\n    initializer <span class=\"pl-k\">=</span> tf.random_uniform_initializer(<span class=\"pl-v\">minval</span><span class=\"pl-k\">=</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">0.5</span>, <span class=\"pl-v\">maxval</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0.5</span>, <span class=\"pl-v\">seed</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">42</span>, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.float32)\n    var1 <span class=\"pl-k\">=</span> tf.get_variable(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>var1<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">1</span>,), <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.float32, <span class=\"pl-v\">initializer</span><span class=\"pl-k\">=</span>initializer)\n    saver <span class=\"pl-k\">=</span> tf.train.Saver(tf.trainable_variables(), <span class=\"pl-v\">max_to_keep</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">20</span>)\n    init_op <span class=\"pl-k\">=</span> tf.global_variables_initializer()\n    graph.finalize()\n\n<span class=\"pl-k\">with</span> tf.Session(<span class=\"pl-v\">graph</span><span class=\"pl-k\">=</span>graph) <span class=\"pl-k\">as</span> sess:\n    sess.run(init_op)\n    saver.save(sess, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>sample_graph<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">global_step</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0</span>)\n\ngraph <span class=\"pl-k\">=</span> tf.Graph()\n<span class=\"pl-k\">with</span> tf.Session(<span class=\"pl-v\">graph</span><span class=\"pl-k\">=</span>graph) <span class=\"pl-k\">as</span> sess:\n    saver <span class=\"pl-k\">=</span> tf.train.import_meta_graph(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>sample_graph-0.meta<span class=\"pl-pds\">'</span></span>)\n    saver.restore(sess, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>./sample_graph-0<span class=\"pl-pds\">'</span></span>)\n    saver.save(sess, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>sample_graph<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">global_step</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>)\n    <span class=\"pl-c1\">print</span>(saver.last_checkpoints) <span class=\"pl-c\"><span class=\"pl-c\">#</span> lists only ['sample_graph-1'] does not preserve the previous checkpoint sample_graph-0</span></pre></div>\n<p>Essentially I am checkpointing a graph and then importing it. On trying to save the next checkpoint, the saver overwrites the previous checkpoint in the checkpoint file (the actual meta, index and data files are not overwritten) and only the last saved checkpoint is present in the <code>checkpoint</code> file. Is this the intended behavior? Is there any way to preserve the checkpoints across multiple saves of the graph.</p>\n<h3>What other attempted solutions have you tried?</h3>\n<h3>Logs or other output that would be helpful</h3>\n<p>(If logs are large, please upload as attachment or provide link).</p>", "body_text": "NOTE: Only file GitHub issues for bugs and feature requests.  All other topics will be closed.\nFor general support from the community, see StackOverflow.\nTo make bugs and feature requests more easy to find and organize, we close issues that are deemed\nout of scope for GitHub Issues and point people to StackOverflow.\nFor bugs or installation issues, please provide the following information.\nThe more information you provide, the more easily we will be able to offer\nhelp and advice.\nWhat related GitHub issues or StackOverflow threads have you found by searching the web for your problem?\nEnvironment info\nOperating System: Ubuntu 14.04\nInstalled version of CUDA and cuDNN:\n(please attach the output of ls -l /path/to/cuda/lib/libcud*): using CPU version of tensorflow 1.0.0\nIf installed from binary pip package, provide:\n\nA link to the pip package you installed: pip install tensorflow\nThe output from python -c \"import tensorflow; print(tensorflow.__version__)\". 1.0.0\n\nIf installed from source, provide\n\nThe commit hash (git rev-parse HEAD)\nThe output of bazel version\n\nIf possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\nimport tensorflow as tf\n\ngraph = tf.Graph()\nwith graph.as_default():\n    initializer = tf.random_uniform_initializer(minval=-0.5, maxval=0.5, seed=42, dtype=tf.float32)\n    var1 = tf.get_variable('var1', shape=(1,), dtype=tf.float32, initializer=initializer)\n    saver = tf.train.Saver(tf.trainable_variables(), max_to_keep=20)\n    init_op = tf.global_variables_initializer()\n    graph.finalize()\n\nwith tf.Session(graph=graph) as sess:\n    sess.run(init_op)\n    saver.save(sess, 'sample_graph', global_step=0)\n\ngraph = tf.Graph()\nwith tf.Session(graph=graph) as sess:\n    saver = tf.train.import_meta_graph('sample_graph-0.meta')\n    saver.restore(sess, './sample_graph-0')\n    saver.save(sess, 'sample_graph', global_step=1)\n    print(saver.last_checkpoints) # lists only ['sample_graph-1'] does not preserve the previous checkpoint sample_graph-0\nEssentially I am checkpointing a graph and then importing it. On trying to save the next checkpoint, the saver overwrites the previous checkpoint in the checkpoint file (the actual meta, index and data files are not overwritten) and only the last saved checkpoint is present in the checkpoint file. Is this the intended behavior? Is there any way to preserve the checkpoints across multiple saves of the graph.\nWhat other attempted solutions have you tried?\nLogs or other output that would be helpful\n(If logs are large, please upload as attachment or provide link).", "body": "NOTE: Only file GitHub issues for bugs and feature requests.  All other topics will be closed.\r\n\r\nFor general support from the community, see [StackOverflow](https://stackoverflow.com/questions/tagged/tensorflow).\r\nTo make bugs and feature requests more easy to find and organize, we close issues that are deemed\r\nout of scope for GitHub Issues and point people to StackOverflow.\r\n\r\nFor bugs or installation issues, please provide the following information.\r\nThe more information you provide, the more easily we will be able to offer\r\nhelp and advice.\r\n\r\n### What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?\r\n\r\n### Environment info\r\nOperating System: Ubuntu 14.04\r\n\r\nInstalled version of CUDA and cuDNN: \r\n(please attach the output of `ls -l /path/to/cuda/lib/libcud*`): using CPU version of tensorflow 1.0.0\r\n\r\nIf installed from binary pip package, provide:\r\n\r\n1. A link to the pip package you installed: pip install tensorflow\r\n2. The output from `python -c \"import tensorflow; print(tensorflow.__version__)\"`. 1.0.0\r\n\r\nIf installed from source, provide \r\n\r\n1. The commit hash (`git rev-parse HEAD`)\r\n2. The output of `bazel version`\r\n\r\n### If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\r\n```python\r\nimport tensorflow as tf\r\n\r\ngraph = tf.Graph()\r\nwith graph.as_default():\r\n    initializer = tf.random_uniform_initializer(minval=-0.5, maxval=0.5, seed=42, dtype=tf.float32)\r\n    var1 = tf.get_variable('var1', shape=(1,), dtype=tf.float32, initializer=initializer)\r\n    saver = tf.train.Saver(tf.trainable_variables(), max_to_keep=20)\r\n    init_op = tf.global_variables_initializer()\r\n    graph.finalize()\r\n\r\nwith tf.Session(graph=graph) as sess:\r\n    sess.run(init_op)\r\n    saver.save(sess, 'sample_graph', global_step=0)\r\n\r\ngraph = tf.Graph()\r\nwith tf.Session(graph=graph) as sess:\r\n    saver = tf.train.import_meta_graph('sample_graph-0.meta')\r\n    saver.restore(sess, './sample_graph-0')\r\n    saver.save(sess, 'sample_graph', global_step=1)\r\n    print(saver.last_checkpoints) # lists only ['sample_graph-1'] does not preserve the previous checkpoint sample_graph-0\r\n```\r\nEssentially I am checkpointing a graph and then importing it. On trying to save the next checkpoint, the saver overwrites the previous checkpoint in the checkpoint file (the actual meta, index and data files are not overwritten) and only the last saved checkpoint is present in the `checkpoint` file. Is this the intended behavior? Is there any way to preserve the checkpoints across multiple saves of the graph.\r\n\r\n### What other attempted solutions have you tried?\r\n\r\n\r\n### Logs or other output that would be helpful\r\n(If logs are large, please upload as attachment or provide link).\r\n"}