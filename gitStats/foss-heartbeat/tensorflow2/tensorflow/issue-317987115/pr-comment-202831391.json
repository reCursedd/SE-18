{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/202831391", "pull_request_review_id": 137605248, "id": 202831391, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjgzMTM5MQ==", "diff_hunk": "@@ -446,3 +447,99 @@ def _compute_gradients(tensor, var_list):\n       grad if grad is not None else array_ops.zeros_like(var)\n       for var, grad in zip(var_list, grads)\n   ]\n+\n+\n+\n+class SklearnRidgeInterface:\n+  \"\"\"Wrapper allowing a 'sklearn.linear_model.Ridge' optimizer to operate in a 'tf.Session'.\n+\n+  This optimizer minimizes the linear least squares problem\n+  with l2 regularization using the sklearn.linear_model.Ridge\n+  solver. It minimizes the following loss:\n+\n+    argmin_{W, b} L(X, y) = (y - WX - b)^2 + l|W|\n+\n+  Where l is a hyperparameter. \n+\n+  Example:\n+\n+  ```python\n+\n+  W = tf.Variable(1., dtype=tf.float32)\n+  b = tf.Variable(0., dtype=tf.float32)\n+\n+  X = tf.placeholder(tf.float32, [100, 1])\n+  y = tf.placeholder(tf.float32, [100, 1])\n+\n+  optimizer = SklearnRidgeInterface(X, y, [W, b])\n+\n+  x_train = np.linspace(0, 100, num=100)\n+  y_train = 2 * x + 5\n+\n+  with tf.Session() as session:\n+    optimizer.minimize(session, feed_dict={X: x_train, y: y_train})\n+\n+  # W should be approximately 2 and b should be approximately 5\n+  ```\n+\n+  Args:\n+      X: A tf.placeholder with shape=[n_samples, n_features] acting as\n+        the input to the Ridge solver.\n+      y: A tf.placeholder with shape=[n_samples] or [n_samples, n_targets]\n+        acting as the target variable to optimize towards.\n+      var_list: A list in order of [Weights, biases] that are to be \n+        updated during the optimization \n+      **optimizer_kwargs: kwargs to pass to the Ridge model as hyperparameters.\n+  \"\"\"\n+  def __init__(self, X, y, var_list, **optimizer_kwargs):\n+      self.X = X\n+      self.y = y\n+      self.optimizer_kwargs = optimizer_kwargs\n+\n+      if var_list is None:\n+          self._vars = variables.trainable_variables()\n+      else:\n+          self._vars = list(var_list)\n+            \n+      self._update_placeholders = [\n+          array_ops.placeholder(var.dtype) for var in self._vars\n+      ]\n+\n+      self._var_updates = [\n+          var.assign(array_ops.reshape(placeholder, _get_shape_tuple(var)))\n+          for var, placeholder in zip(self._vars, self._update_placeholders)\n+      ]\n+\n+\n+  def minimize(self, session=None, feed_dict=None, **run_kwargs):\n+    \"\"\"\n+    Minimizes a l2-regularized linear least squares problem.\n+\n+    Args:\n+      session: A `tf.Session` instance.\n+      feed_dict: The training feed dict to be passed into `session.run`. \n+      **run_kwargs: kwargs to pass into `session.run`.\n+    \n+    \"\"\"\n+    session = session or ops.get_default_session()\n+    feed_dict = feed_dict or {}\n+\n+    initial_values = [session.run(self.X, feed_dict=feed_dict), session.run(self.y, feed_dict=feed_dict)]\n+\n+    var_vals = self._minimize(", "path": "tensorflow/contrib/opt/python/training/external_optimizer.py", "position": null, "original_position": 105, "commit_id": "de8ef5f66d85186ceddedffe7f4c01ea89ec04f8", "original_commit_id": "eb34bf15dde93daed5c96f1e16223ff02d41a436", "user": {"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}, "body": "this fits on a single line", "created_at": "2018-07-16T21:31:53Z", "updated_at": "2018-08-06T09:03:22Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/18900#discussion_r202831391", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/18900", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/202831391"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/18900#discussion_r202831391"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/18900"}}, "body_html": "<p>this fits on a single line</p>", "body_text": "this fits on a single line"}