{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15168", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15168/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15168/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15168/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/15168", "id": 279898254, "node_id": "MDExOlB1bGxSZXF1ZXN0MTU2ODMzNDcz", "number": 15168, "title": "Adding reading op for hadoop sequence file format (very basic version though).", "user": {"login": "rosun82", "id": 6566533, "node_id": "MDQ6VXNlcjY1NjY1MzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/6566533?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rosun82", "html_url": "https://github.com/rosun82", "followers_url": "https://api.github.com/users/rosun82/followers", "following_url": "https://api.github.com/users/rosun82/following{/other_user}", "gists_url": "https://api.github.com/users/rosun82/gists{/gist_id}", "starred_url": "https://api.github.com/users/rosun82/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rosun82/subscriptions", "organizations_url": "https://api.github.com/users/rosun82/orgs", "repos_url": "https://api.github.com/users/rosun82/repos", "events_url": "https://api.github.com/users/rosun82/events{/privacy}", "received_events_url": "https://api.github.com/users/rosun82/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}, {"id": 474725938, "node_id": "MDU6TGFiZWw0NzQ3MjU5Mzg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stalled", "name": "stalled", "color": "d4c5f9", "default": false}, {"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "caisq", "id": 16824702, "node_id": "MDQ6VXNlcjE2ODI0NzAy", "avatar_url": "https://avatars2.githubusercontent.com/u/16824702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caisq", "html_url": "https://github.com/caisq", "followers_url": "https://api.github.com/users/caisq/followers", "following_url": "https://api.github.com/users/caisq/following{/other_user}", "gists_url": "https://api.github.com/users/caisq/gists{/gist_id}", "starred_url": "https://api.github.com/users/caisq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caisq/subscriptions", "organizations_url": "https://api.github.com/users/caisq/orgs", "repos_url": "https://api.github.com/users/caisq/repos", "events_url": "https://api.github.com/users/caisq/events{/privacy}", "received_events_url": "https://api.github.com/users/caisq/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "caisq", "id": 16824702, "node_id": "MDQ6VXNlcjE2ODI0NzAy", "avatar_url": "https://avatars2.githubusercontent.com/u/16824702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caisq", "html_url": "https://github.com/caisq", "followers_url": "https://api.github.com/users/caisq/followers", "following_url": "https://api.github.com/users/caisq/following{/other_user}", "gists_url": "https://api.github.com/users/caisq/gists{/gist_id}", "starred_url": "https://api.github.com/users/caisq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caisq/subscriptions", "organizations_url": "https://api.github.com/users/caisq/orgs", "repos_url": "https://api.github.com/users/caisq/repos", "events_url": "https://api.github.com/users/caisq/events{/privacy}", "received_events_url": "https://api.github.com/users/caisq/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 12, "created_at": "2017-12-06T20:38:03Z", "updated_at": "2018-04-22T18:32:10Z", "closed_at": "2018-04-22T18:29:35Z", "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/15168", "html_url": "https://github.com/tensorflow/tensorflow/pull/15168", "diff_url": "https://github.com/tensorflow/tensorflow/pull/15168.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/15168.patch"}, "body_html": "<p>This CL allows tensorflow to be able to read tf.Example stored in Hadoop sequence file, which is the one of the well supported output format in the Hadoop eco system (comparing to recordio or sstable).</p>\n<p>This enables one to write Hadoop mapreduce in the familiar way, producing tf.Example, storing them into standard output format (on S3 for example), and invoke tensorflow, avoiding the expensive, and sometimes confusing step of converting from Hadoop format into recordio.</p>\n<p>To keep things simple, there are some limitations in this implementation:</p>\n<ol>\n<li>\n<p>no compressed sequence file (not a big issue if the records are already serialized protos)</p>\n</li>\n<li>\n<p>SEQ5 or SEQ6 format.</p>\n</li>\n<li>\n<p>The value in the sequence file must be encoded using org.apache.hadoop.io.BytesWritable, no text or other format, as the primary goal is to read tf.Example protos stored therein.</p>\n</li>\n</ol>\n<p>Please help me to get this into tensorflow. Thank you.</p>", "body_text": "This CL allows tensorflow to be able to read tf.Example stored in Hadoop sequence file, which is the one of the well supported output format in the Hadoop eco system (comparing to recordio or sstable).\nThis enables one to write Hadoop mapreduce in the familiar way, producing tf.Example, storing them into standard output format (on S3 for example), and invoke tensorflow, avoiding the expensive, and sometimes confusing step of converting from Hadoop format into recordio.\nTo keep things simple, there are some limitations in this implementation:\n\n\nno compressed sequence file (not a big issue if the records are already serialized protos)\n\n\nSEQ5 or SEQ6 format.\n\n\nThe value in the sequence file must be encoded using org.apache.hadoop.io.BytesWritable, no text or other format, as the primary goal is to read tf.Example protos stored therein.\n\n\nPlease help me to get this into tensorflow. Thank you.", "body": "This CL allows tensorflow to be able to read tf.Example stored in Hadoop sequence file, which is the one of the well supported output format in the Hadoop eco system (comparing to recordio or sstable).\n\nThis enables one to write Hadoop mapreduce in the familiar way, producing tf.Example, storing them into standard output format (on S3 for example), and invoke tensorflow, avoiding the expensive, and sometimes confusing step of converting from Hadoop format into recordio.\n\nTo keep things simple, there are some limitations in this implementation:\n\n1. no compressed sequence file (not a big issue if the records are already serialized protos)\n\n2. SEQ5 or SEQ6 format.\n\n3. The value in the sequence file must be encoded using org.apache.hadoop.io.BytesWritable, no text or other format, as the primary goal is to read tf.Example protos stored therein.\n\nPlease help me to get this into tensorflow. Thank you.\n"}