{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/293431390", "html_url": "https://github.com/tensorflow/tensorflow/issues/7880#issuecomment-293431390", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7880", "id": 293431390, "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzQzMTM5MA==", "user": {"login": "suharshs", "id": 1450614, "node_id": "MDQ6VXNlcjE0NTA2MTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1450614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suharshs", "html_url": "https://github.com/suharshs", "followers_url": "https://api.github.com/users/suharshs/followers", "following_url": "https://api.github.com/users/suharshs/following{/other_user}", "gists_url": "https://api.github.com/users/suharshs/gists{/gist_id}", "starred_url": "https://api.github.com/users/suharshs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suharshs/subscriptions", "organizations_url": "https://api.github.com/users/suharshs/orgs", "repos_url": "https://api.github.com/users/suharshs/repos", "events_url": "https://api.github.com/users/suharshs/events{/privacy}", "received_events_url": "https://api.github.com/users/suharshs/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-11T23:41:55Z", "updated_at": "2017-04-11T23:41:55Z", "author_association": "MEMBER", "body_html": "<p>Hi all,<br>\nA peek operation on concurrent queues is inherently racy since there can be multiple consumers (one consumer peeks while the other consumer takes). It seems ill-advised to add a method to queues that only works in the single consumer case.<br>\nAdditionally, peek may be defined differently (or add a lot of complexity) for non FIFO queues.<br>\nIf you share your use cases, we may be able to try to find more workarounds.<br>\nThanks!</p>", "body_text": "Hi all,\nA peek operation on concurrent queues is inherently racy since there can be multiple consumers (one consumer peeks while the other consumer takes). It seems ill-advised to add a method to queues that only works in the single consumer case.\nAdditionally, peek may be defined differently (or add a lot of complexity) for non FIFO queues.\nIf you share your use cases, we may be able to try to find more workarounds.\nThanks!", "body": "Hi all,\r\nA peek operation on concurrent queues is inherently racy since there can be multiple consumers (one consumer peeks while the other consumer takes). It seems ill-advised to add a method to queues that only works in the single consumer case.\r\nAdditionally, peek may be defined differently (or add a lot of complexity) for non FIFO queues.\r\nIf you share your use cases, we may be able to try to find more workarounds.\r\nThanks!"}