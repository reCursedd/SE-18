{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23033", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23033/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23033/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23033/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/23033", "id": 370870585, "node_id": "MDU6SXNzdWUzNzA4NzA1ODU=", "number": 23033, "title": "Cannot calculate tf.gradients wrt embedding_matrix", "user": {"login": "yifannieudem", "id": 25521604, "node_id": "MDQ6VXNlcjI1NTIxNjA0", "avatar_url": "https://avatars3.githubusercontent.com/u/25521604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yifannieudem", "html_url": "https://github.com/yifannieudem", "followers_url": "https://api.github.com/users/yifannieudem/followers", "following_url": "https://api.github.com/users/yifannieudem/following{/other_user}", "gists_url": "https://api.github.com/users/yifannieudem/gists{/gist_id}", "starred_url": "https://api.github.com/users/yifannieudem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yifannieudem/subscriptions", "organizations_url": "https://api.github.com/users/yifannieudem/orgs", "repos_url": "https://api.github.com/users/yifannieudem/repos", "events_url": "https://api.github.com/users/yifannieudem/events{/privacy}", "received_events_url": "https://api.github.com/users/yifannieudem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "wt-huang", "id": 42785337, "node_id": "MDQ6VXNlcjQyNzg1MzM3", "avatar_url": "https://avatars0.githubusercontent.com/u/42785337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wt-huang", "html_url": "https://github.com/wt-huang", "followers_url": "https://api.github.com/users/wt-huang/followers", "following_url": "https://api.github.com/users/wt-huang/following{/other_user}", "gists_url": "https://api.github.com/users/wt-huang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wt-huang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wt-huang/subscriptions", "organizations_url": "https://api.github.com/users/wt-huang/orgs", "repos_url": "https://api.github.com/users/wt-huang/repos", "events_url": "https://api.github.com/users/wt-huang/events{/privacy}", "received_events_url": "https://api.github.com/users/wt-huang/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "wt-huang", "id": 42785337, "node_id": "MDQ6VXNlcjQyNzg1MzM3", "avatar_url": "https://avatars0.githubusercontent.com/u/42785337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wt-huang", "html_url": "https://github.com/wt-huang", "followers_url": "https://api.github.com/users/wt-huang/followers", "following_url": "https://api.github.com/users/wt-huang/following{/other_user}", "gists_url": "https://api.github.com/users/wt-huang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wt-huang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wt-huang/subscriptions", "organizations_url": "https://api.github.com/users/wt-huang/orgs", "repos_url": "https://api.github.com/users/wt-huang/repos", "events_url": "https://api.github.com/users/wt-huang/events{/privacy}", "received_events_url": "https://api.github.com/users/wt-huang/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-10-17T02:19:46Z", "updated_at": "2018-11-02T00:54:18Z", "closed_at": "2018-11-02T00:54:18Z", "author_association": "NONE", "body_html": "<p>Please go to Stack Overflow for help and support:</p>\n<p><a href=\"https://stackoverflow.com/questions/tagged/tensorflow\" rel=\"nofollow\">https://stackoverflow.com/questions/tagged/tensorflow</a></p>\n<p>If you open a GitHub issue, here is our policy:</p>\n<ol>\n<li>It must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).</li>\n<li>The form below must be filled out.</li>\n<li>It shouldn't be a TensorBoard issue. Those go <a href=\"https://github.com/tensorflow/tensorboard/issues\">here</a>.</li>\n</ol>\n<p><strong>Here's why we have that policy</strong>: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.</p>\n<hr>\n<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Debian 8.1</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>:</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: v1.3.0-rc2-20-g0787eee 1.3.0</li>\n<li><strong>Python version</strong>: 3.6.3</li>\n<li><strong>Bazel version (if compiling from source)</strong>:</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:</li>\n<li><strong>CUDA/cuDNN version</strong>:  8/6.0.21</li>\n<li><strong>GPU model and memory</strong>: Titan Xp</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<p>You can collect some of this information using our environment capture script:</p>\n<p><a href=\"https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\">https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh</a></p>\n<p>You can obtain the TensorFlow version with:</p>\n<div class=\"highlight highlight-source-shell\"><pre>python -c <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)<span class=\"pl-pds\">\"</span></span></pre></div>\n<h3>Describe the problem</h3>\n<p>Describe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.<br>\nI used tensorflow to implement an end-to-end lambdaRank retrieval model. There are 3 modules: rep_module, inter_module, and L2R_module. The embeddings (emb_mat) was defined in L2R_module, and pass as params to rep_module and inter_module: So the aggregating L2R module will have:</p>\n<p>self.emb_mat = tf.get_variable(\"emb_mat\",<br>\nshape=[self.vocab_size, self.emb_dim], dtype=tf.float32)<br>\nself.rep_mod = RepModule(...., emb_mat=self.emb_mat)<br>\nself.inter_mod = InterModule(..., emb_mat=self.emb_mat)<br>\nThe goal is to let the emb_mat shared by both rep and inter modules, and learn it jointly with those 2 modules. This L2R module will output a batch of scores: score=(Batch_size, 1)</p>\n<p>Then I have a another higher-level lambdaRank module to calculate the gradients by hand (I cannot use built-in off the self optimizer, since I have to get the grads and multiply that with the things in lambda rank). I have a _jacobian(y, x) function as follows:</p>\n<p>def _jacobian(self, y_flat, x):<br>\n\"\"\"<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"124740366\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/675\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/675/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/675\">#675</a><br>\nfor ranknet and lambdarank<br>\n\"\"\"</p>\n<pre><code>loop_vars = [\n    tf.constant(0, tf.int32),\n    tf.TensorArray(tf.float32, size=self.batch_size),\n]\n\n_, jacobian = tf.while_loop(\n    lambda j, _: j &lt; self.batch_size,\n    lambda j, result: (j + 1, result.write(j, tf.gradients(y_flat[j], x))),\n    loop_vars)\n\nreturn jacobian.stack()  \n</code></pre>\n<p>which will calculate the grad of each element of y wrt x, and reassemble them together. I can get Jacobians of all score wrt all other variables(model parameters, if I use a fixed embedding, so emb_mat is no longer in trainable_variables()) except the emb_mat. My other variables are like tf.layers.. variables like</p>\n<p>tf.Variable 'conv1/conv1d/kernel:0' shape=(3, 300, 256) dtype=float32_ref,<br>\nbut it cannot calculate the gradients wrt the emb_mat. It returned something like : TypeError: Failed to convert object of type &lt;class 'list'&gt; to Tensor. Contents: [&lt;tensorflow.python.framework.ops.IndexedSlices object at 0x7f025e161f28&gt;] and TypeError: Expected binary or unicode string, got &lt;tensorflow.python.framework.ops.IndexedSlices object at 0x7f025e161f28&gt;<br>\nThe whole traceback is attached in logs section</p>\n<h3>Source code / logs</h3>\n<p>Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.<br>\nClass L2R_Model(object):<br>\n.....<br>\nself.emb_mat = tf.get_variable(\"emb_mat\",<br>\nshape=[self.vocab_size, self.emb_dim], dtype=tf.float32,<br>\ninitializer=tf.orthogonal_initializer(1.0))<br>\nself.rep_mod = RepModule(...., emb_mat=self.emb_mat)<br>\nself.inter_mod = InterModule(..., emb_mat=self.emb_mat)</p>\n<p>def _jacobian(self, y_flat, x):<br>\n\"\"\"<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"124740366\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/675\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/675/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/675\">#675</a><br>\nfor ranknet and lambdarank<br>\n\"\"\"</p>\n<pre><code>    loop_vars = [\n        tf.constant(0, tf.int32),\n        tf.TensorArray(tf.float32, size=self.batch_size),\n    ]\n\n    _, jacobian = tf.while_loop(\n        lambda j, _: j &lt; self.batch_size,\n        lambda j, result: (j + 1, result.write(j, tf.gradients(y_flat[j], x))),\n        loop_vars)\n\n    return jacobian.stack()\n</code></pre>\n<p>Traceback (most recent call last):<br>\nFile \"/u/nieyifan/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/tensor_util.py\", line 460, in make_tensor_proto<br>\nstr_values = [compat.as_bytes(x) for x in proto_values]<br>\nFile \"/u/nieyifan/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/tensor_util.py\", line 460, in <br>\nstr_values = [compat.as_bytes(x) for x in proto_values]<br>\nFile \"/u/nieyifan/anaconda3/lib/python3.6/site-packages/tensorflow/python/util/compat.py\", line 65, in as_bytes<br>\n(bytes_or_text,))<br>\nTypeError: Expected binary or unicode string, got &lt;tensorflow.python.framework.ops.IndexedSlices object at 0x7f025e161f28&gt;</p>\n<p>During handling of the above exception, another exception occurred:</p>\n<p>Traceback (most recent call last):<br>\nFile \"main_lambda.py\", line 234, in <br>\ndebug()<br>\nFile \"main_lambda.py\", line 230, in debug<br>\ninter_param_dict=inter_param_dict, resume=r_flag)<br>\nFile \"/u/nieyifan/projects/L2R_RM/L2R_LambdaRank.py\", line 25, in <strong>init</strong><br>\nself.loss, self.num_pairs, self.score, self.train_op = self._build_model()<br>\nFile \"/u/nieyifan/projects/L2R_RM/L2R_LambdaRank.py\", line 215, in _build_model<br>\ngrads = [self._get_derivative(score, Wk, lambda_ij) for Wk in vars]<br>\nFile \"/u/nieyifan/projects/L2R_RM/L2R_LambdaRank.py\", line 215, in <br>\ngrads = [self._get_derivative(score, Wk, lambda_ij) for Wk in vars]<br>\nFile \"/u/nieyifan/projects/L2R_RM/L2R_LambdaRank.py\", line 112, in _get_derivative<br>\ndsi_dWk = self._jacobian(score, Wk)  # (BS, )<br>\nFile \"/u/nieyifan/projects/L2R_RM/L2R_LambdaRank.py\", line 98, in _jacobian<br>\nloop_vars)<br>\nFile \"/u/nieyifan/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 2775, in while_loop<br>\nresult = context.BuildLoop(cond, body, loop_vars, shape_invariants)<br>\nFile \"/u/nieyifan/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 2604, in BuildLoop<br>\npred, body, original_loop_vars, loop_vars, shape_invariants)<br>\nFile \"/u/nieyifan/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 2554, in _BuildLoop<br>\nbody_result = body(*packed_vars_for_body)<br>\nFile \"/u/nieyifan/projects/L2R_RM/L2R_LambdaRank.py\", line 97, in <br>\nlambda j, result: (j + 1, result.write(j, tf.gradients(y_flat[j], x))),<br>\nFile \"/u/nieyifan/anaconda3/lib/python3.6/site-packages/tensorflow/python/util/tf_should_use.py\", line 175, in wrapped<br>\nreturn _add_should_use_warning(fn(*args, **kwargs))<br>\nFile \"/u/nieyifan/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/tensor_array_ops.py\", line 302, in write<br>\nvalue = ops.convert_to_tensor(value, name=\"value\")<br>\nFile \"/u/nieyifan/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 611, in convert_to_tensor<br>\nas_ref=False)<br>\nFile \"/u/nieyifan/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 676, in internal_convert_to_tensor<br>\nret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)<br>\nFile \"/u/nieyifan/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/constant_op.py\", line 121, in _constant_tensor_conversion_function<br>\nreturn constant(v, dtype=dtype, name=name)<br>\nFile \"/u/nieyifan/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/constant_op.py\", line 102, in constant<br>\ntensor_util.make_tensor_proto(value, dtype=dtype, shape=shape, verify_shape=verify_shape))<br>\nFile \"/u/nieyifan/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/tensor_util.py\", line 464, in make_tensor_proto<br>\n\"supported type.\" % (type(values), values))<br>\nTypeError: Failed to convert object of type &lt;class 'list'&gt; to Tensor. Contents: [&lt;tensorflow.python.framework.ops.IndexedSlices object at 0x7f025e161f28&gt;]. Consider casting elements to a supported type.</p>", "body_text": "Please go to Stack Overflow for help and support:\nhttps://stackoverflow.com/questions/tagged/tensorflow\nIf you open a GitHub issue, here is our policy:\n\nIt must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).\nThe form below must be filled out.\nIt shouldn't be a TensorBoard issue. Those go here.\n\nHere's why we have that policy: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\n\nSystem information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Debian 8.1\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): v1.3.0-rc2-20-g0787eee 1.3.0\nPython version: 3.6.3\nBazel version (if compiling from source):\nGCC/Compiler version (if compiling from source):\nCUDA/cuDNN version:  8/6.0.21\nGPU model and memory: Titan Xp\nExact command to reproduce:\n\nYou can collect some of this information using our environment capture script:\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\nYou can obtain the TensorFlow version with:\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\nDescribe the problem\nDescribe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.\nI used tensorflow to implement an end-to-end lambdaRank retrieval model. There are 3 modules: rep_module, inter_module, and L2R_module. The embeddings (emb_mat) was defined in L2R_module, and pass as params to rep_module and inter_module: So the aggregating L2R module will have:\nself.emb_mat = tf.get_variable(\"emb_mat\",\nshape=[self.vocab_size, self.emb_dim], dtype=tf.float32)\nself.rep_mod = RepModule(...., emb_mat=self.emb_mat)\nself.inter_mod = InterModule(..., emb_mat=self.emb_mat)\nThe goal is to let the emb_mat shared by both rep and inter modules, and learn it jointly with those 2 modules. This L2R module will output a batch of scores: score=(Batch_size, 1)\nThen I have a another higher-level lambdaRank module to calculate the gradients by hand (I cannot use built-in off the self optimizer, since I have to get the grads and multiply that with the things in lambda rank). I have a _jacobian(y, x) function as follows:\ndef _jacobian(self, y_flat, x):\n\"\"\"\n#675\nfor ranknet and lambdarank\n\"\"\"\nloop_vars = [\n    tf.constant(0, tf.int32),\n    tf.TensorArray(tf.float32, size=self.batch_size),\n]\n\n_, jacobian = tf.while_loop(\n    lambda j, _: j < self.batch_size,\n    lambda j, result: (j + 1, result.write(j, tf.gradients(y_flat[j], x))),\n    loop_vars)\n\nreturn jacobian.stack()  \n\nwhich will calculate the grad of each element of y wrt x, and reassemble them together. I can get Jacobians of all score wrt all other variables(model parameters, if I use a fixed embedding, so emb_mat is no longer in trainable_variables()) except the emb_mat. My other variables are like tf.layers.. variables like\ntf.Variable 'conv1/conv1d/kernel:0' shape=(3, 300, 256) dtype=float32_ref,\nbut it cannot calculate the gradients wrt the emb_mat. It returned something like : TypeError: Failed to convert object of type <class 'list'> to Tensor. Contents: [<tensorflow.python.framework.ops.IndexedSlices object at 0x7f025e161f28>] and TypeError: Expected binary or unicode string, got <tensorflow.python.framework.ops.IndexedSlices object at 0x7f025e161f28>\nThe whole traceback is attached in logs section\nSource code / logs\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.\nClass L2R_Model(object):\n.....\nself.emb_mat = tf.get_variable(\"emb_mat\",\nshape=[self.vocab_size, self.emb_dim], dtype=tf.float32,\ninitializer=tf.orthogonal_initializer(1.0))\nself.rep_mod = RepModule(...., emb_mat=self.emb_mat)\nself.inter_mod = InterModule(..., emb_mat=self.emb_mat)\ndef _jacobian(self, y_flat, x):\n\"\"\"\n#675\nfor ranknet and lambdarank\n\"\"\"\n    loop_vars = [\n        tf.constant(0, tf.int32),\n        tf.TensorArray(tf.float32, size=self.batch_size),\n    ]\n\n    _, jacobian = tf.while_loop(\n        lambda j, _: j < self.batch_size,\n        lambda j, result: (j + 1, result.write(j, tf.gradients(y_flat[j], x))),\n        loop_vars)\n\n    return jacobian.stack()\n\nTraceback (most recent call last):\nFile \"/u/nieyifan/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/tensor_util.py\", line 460, in make_tensor_proto\nstr_values = [compat.as_bytes(x) for x in proto_values]\nFile \"/u/nieyifan/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/tensor_util.py\", line 460, in \nstr_values = [compat.as_bytes(x) for x in proto_values]\nFile \"/u/nieyifan/anaconda3/lib/python3.6/site-packages/tensorflow/python/util/compat.py\", line 65, in as_bytes\n(bytes_or_text,))\nTypeError: Expected binary or unicode string, got <tensorflow.python.framework.ops.IndexedSlices object at 0x7f025e161f28>\nDuring handling of the above exception, another exception occurred:\nTraceback (most recent call last):\nFile \"main_lambda.py\", line 234, in \ndebug()\nFile \"main_lambda.py\", line 230, in debug\ninter_param_dict=inter_param_dict, resume=r_flag)\nFile \"/u/nieyifan/projects/L2R_RM/L2R_LambdaRank.py\", line 25, in init\nself.loss, self.num_pairs, self.score, self.train_op = self._build_model()\nFile \"/u/nieyifan/projects/L2R_RM/L2R_LambdaRank.py\", line 215, in _build_model\ngrads = [self._get_derivative(score, Wk, lambda_ij) for Wk in vars]\nFile \"/u/nieyifan/projects/L2R_RM/L2R_LambdaRank.py\", line 215, in \ngrads = [self._get_derivative(score, Wk, lambda_ij) for Wk in vars]\nFile \"/u/nieyifan/projects/L2R_RM/L2R_LambdaRank.py\", line 112, in _get_derivative\ndsi_dWk = self._jacobian(score, Wk)  # (BS, )\nFile \"/u/nieyifan/projects/L2R_RM/L2R_LambdaRank.py\", line 98, in _jacobian\nloop_vars)\nFile \"/u/nieyifan/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 2775, in while_loop\nresult = context.BuildLoop(cond, body, loop_vars, shape_invariants)\nFile \"/u/nieyifan/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 2604, in BuildLoop\npred, body, original_loop_vars, loop_vars, shape_invariants)\nFile \"/u/nieyifan/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 2554, in _BuildLoop\nbody_result = body(*packed_vars_for_body)\nFile \"/u/nieyifan/projects/L2R_RM/L2R_LambdaRank.py\", line 97, in \nlambda j, result: (j + 1, result.write(j, tf.gradients(y_flat[j], x))),\nFile \"/u/nieyifan/anaconda3/lib/python3.6/site-packages/tensorflow/python/util/tf_should_use.py\", line 175, in wrapped\nreturn _add_should_use_warning(fn(*args, **kwargs))\nFile \"/u/nieyifan/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/tensor_array_ops.py\", line 302, in write\nvalue = ops.convert_to_tensor(value, name=\"value\")\nFile \"/u/nieyifan/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 611, in convert_to_tensor\nas_ref=False)\nFile \"/u/nieyifan/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 676, in internal_convert_to_tensor\nret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\nFile \"/u/nieyifan/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/constant_op.py\", line 121, in _constant_tensor_conversion_function\nreturn constant(v, dtype=dtype, name=name)\nFile \"/u/nieyifan/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/constant_op.py\", line 102, in constant\ntensor_util.make_tensor_proto(value, dtype=dtype, shape=shape, verify_shape=verify_shape))\nFile \"/u/nieyifan/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/tensor_util.py\", line 464, in make_tensor_proto\n\"supported type.\" % (type(values), values))\nTypeError: Failed to convert object of type <class 'list'> to Tensor. Contents: [<tensorflow.python.framework.ops.IndexedSlices object at 0x7f025e161f28>]. Consider casting elements to a supported type.", "body": "Please go to Stack Overflow for help and support:\r\n\r\nhttps://stackoverflow.com/questions/tagged/tensorflow\r\n\r\nIf you open a GitHub issue, here is our policy:\r\n\r\n1. It must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).\r\n2. The form below must be filled out.\r\n3. It shouldn't be a TensorBoard issue. Those go [here](https://github.com/tensorflow/tensorboard/issues).\r\n\r\n**Here's why we have that policy**: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Debian 8.1\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**:\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: v1.3.0-rc2-20-g0787eee 1.3.0\r\n- **Python version**: 3.6.3\r\n- **Bazel version (if compiling from source)**: \r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**:  8/6.0.21\r\n- **GPU model and memory**: Titan Xp\r\n- **Exact command to reproduce**: \r\n\r\nYou can collect some of this information using our environment capture script:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\nYou can obtain the TensorFlow version with:\r\n\r\n```bash\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n```\r\n\r\n### Describe the problem\r\nDescribe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.\r\nI used tensorflow to implement an end-to-end lambdaRank retrieval model. There are 3 modules: rep_module, inter_module, and L2R_module. The embeddings (emb_mat) was defined in L2R_module, and pass as params to rep_module and inter_module: So the aggregating L2R module will have:\r\n\r\nself.emb_mat = tf.get_variable(\"emb_mat\",\r\n        shape=[self.vocab_size, self.emb_dim], dtype=tf.float32)\r\nself.rep_mod = RepModule(...., emb_mat=self.emb_mat)\r\nself.inter_mod = InterModule(..., emb_mat=self.emb_mat)\r\nThe goal is to let the emb_mat shared by both rep and inter modules, and learn it jointly with those 2 modules. This L2R module will output a batch of scores: score=(Batch_size, 1)\r\n\r\nThen I have a another higher-level lambdaRank module to calculate the gradients by hand (I cannot use built-in off the self optimizer, since I have to get the grads and multiply that with the things in lambda rank). I have a _jacobian(y, x) function as follows:\r\n\r\n  def _jacobian(self, y_flat, x):\r\n    \"\"\"\r\n    https://github.com/tensorflow/tensorflow/issues/675\r\n    for ranknet and lambdarank\r\n    \"\"\"\r\n\r\n    loop_vars = [\r\n        tf.constant(0, tf.int32),\r\n        tf.TensorArray(tf.float32, size=self.batch_size),\r\n    ]\r\n\r\n    _, jacobian = tf.while_loop(\r\n        lambda j, _: j < self.batch_size,\r\n        lambda j, result: (j + 1, result.write(j, tf.gradients(y_flat[j], x))),\r\n        loop_vars)\r\n\r\n    return jacobian.stack()  \r\nwhich will calculate the grad of each element of y wrt x, and reassemble them together. I can get Jacobians of all score wrt all other variables(model parameters, if I use a fixed embedding, so emb_mat is no longer in trainable_variables()) except the emb_mat. My other variables are like tf.layers.. variables like\r\n\r\ntf.Variable 'conv1/conv1d/kernel:0' shape=(3, 300, 256) dtype=float32_ref,\r\nbut it cannot calculate the gradients wrt the emb_mat. It returned something like : TypeError: Failed to convert object of type <class 'list'> to Tensor. Contents: [<tensorflow.python.framework.ops.IndexedSlices object at 0x7f025e161f28>] and TypeError: Expected binary or unicode string, got <tensorflow.python.framework.ops.IndexedSlices object at 0x7f025e161f28>\r\nThe whole traceback is attached in logs section\r\n### Source code / logs\r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.\r\nClass L2R_Model(object):\r\n    .....\r\n    self.emb_mat = tf.get_variable(\"emb_mat\",\r\n            shape=[self.vocab_size, self.emb_dim], dtype=tf.float32,\r\n            initializer=tf.orthogonal_initializer(1.0))\r\n    self.rep_mod = RepModule(...., emb_mat=self.emb_mat)\r\n    self.inter_mod = InterModule(..., emb_mat=self.emb_mat)\r\n\r\ndef _jacobian(self, y_flat, x):\r\n        \"\"\"\r\n        https://github.com/tensorflow/tensorflow/issues/675\r\n        for ranknet and lambdarank\r\n        \"\"\"\r\n\r\n        loop_vars = [\r\n            tf.constant(0, tf.int32),\r\n            tf.TensorArray(tf.float32, size=self.batch_size),\r\n        ]\r\n\r\n        _, jacobian = tf.while_loop(\r\n            lambda j, _: j < self.batch_size,\r\n            lambda j, result: (j + 1, result.write(j, tf.gradients(y_flat[j], x))),\r\n            loop_vars)\r\n\r\n        return jacobian.stack()\r\n\r\nTraceback (most recent call last):\r\n  File \"/u/nieyifan/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/tensor_util.py\", line 460, in make_tensor_proto\r\n    str_values = [compat.as_bytes(x) for x in proto_values]\r\n  File \"/u/nieyifan/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/tensor_util.py\", line 460, in <listcomp>\r\n    str_values = [compat.as_bytes(x) for x in proto_values]\r\n  File \"/u/nieyifan/anaconda3/lib/python3.6/site-packages/tensorflow/python/util/compat.py\", line 65, in as_bytes\r\n    (bytes_or_text,))\r\nTypeError: Expected binary or unicode string, got <tensorflow.python.framework.ops.IndexedSlices object at 0x7f025e161f28>\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"main_lambda.py\", line 234, in <module>\r\n    debug()\r\n  File \"main_lambda.py\", line 230, in debug\r\n    inter_param_dict=inter_param_dict, resume=r_flag)\r\n  File \"/u/nieyifan/projects/L2R_RM/L2R_LambdaRank.py\", line 25, in __init__\r\n    self.loss, self.num_pairs, self.score, self.train_op = self._build_model()\r\n  File \"/u/nieyifan/projects/L2R_RM/L2R_LambdaRank.py\", line 215, in _build_model\r\n    grads = [self._get_derivative(score, Wk, lambda_ij) for Wk in vars]\r\n  File \"/u/nieyifan/projects/L2R_RM/L2R_LambdaRank.py\", line 215, in <listcomp>\r\n    grads = [self._get_derivative(score, Wk, lambda_ij) for Wk in vars]\r\n  File \"/u/nieyifan/projects/L2R_RM/L2R_LambdaRank.py\", line 112, in _get_derivative\r\n    dsi_dWk = self._jacobian(score, Wk)  # (BS, )\r\n  File \"/u/nieyifan/projects/L2R_RM/L2R_LambdaRank.py\", line 98, in _jacobian\r\n    loop_vars)\r\n  File \"/u/nieyifan/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 2775, in while_loop\r\n    result = context.BuildLoop(cond, body, loop_vars, shape_invariants)\r\n  File \"/u/nieyifan/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 2604, in BuildLoop\r\n    pred, body, original_loop_vars, loop_vars, shape_invariants)\r\n  File \"/u/nieyifan/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 2554, in _BuildLoop\r\n    body_result = body(*packed_vars_for_body)\r\n  File \"/u/nieyifan/projects/L2R_RM/L2R_LambdaRank.py\", line 97, in <lambda>\r\n    lambda j, result: (j + 1, result.write(j, tf.gradients(y_flat[j], x))),\r\n  File \"/u/nieyifan/anaconda3/lib/python3.6/site-packages/tensorflow/python/util/tf_should_use.py\", line 175, in wrapped\r\n    return _add_should_use_warning(fn(*args, **kwargs))\r\n  File \"/u/nieyifan/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/tensor_array_ops.py\", line 302, in write\r\n    value = ops.convert_to_tensor(value, name=\"value\")\r\n  File \"/u/nieyifan/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 611, in convert_to_tensor\r\n    as_ref=False)\r\n  File \"/u/nieyifan/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 676, in internal_convert_to_tensor\r\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\r\n  File \"/u/nieyifan/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/constant_op.py\", line 121, in _constant_tensor_conversion_function\r\n    return constant(v, dtype=dtype, name=name)\r\n  File \"/u/nieyifan/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/constant_op.py\", line 102, in constant\r\n    tensor_util.make_tensor_proto(value, dtype=dtype, shape=shape, verify_shape=verify_shape))\r\n  File \"/u/nieyifan/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/tensor_util.py\", line 464, in make_tensor_proto\r\n    \"supported type.\" % (type(values), values))\r\nTypeError: Failed to convert object of type <class 'list'> to Tensor. Contents: [<tensorflow.python.framework.ops.IndexedSlices object at 0x7f025e161f28>]. Consider casting elements to a supported type."}