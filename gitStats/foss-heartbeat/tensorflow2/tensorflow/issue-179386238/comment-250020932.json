{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/250020932", "html_url": "https://github.com/tensorflow/tensorflow/issues/4593#issuecomment-250020932", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4593", "id": 250020932, "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDAyMDkzMg==", "user": {"login": "concretevitamin", "id": 592670, "node_id": "MDQ6VXNlcjU5MjY3MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/592670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/concretevitamin", "html_url": "https://github.com/concretevitamin", "followers_url": "https://api.github.com/users/concretevitamin/followers", "following_url": "https://api.github.com/users/concretevitamin/following{/other_user}", "gists_url": "https://api.github.com/users/concretevitamin/gists{/gist_id}", "starred_url": "https://api.github.com/users/concretevitamin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/concretevitamin/subscriptions", "organizations_url": "https://api.github.com/users/concretevitamin/orgs", "repos_url": "https://api.github.com/users/concretevitamin/repos", "events_url": "https://api.github.com/users/concretevitamin/events{/privacy}", "received_events_url": "https://api.github.com/users/concretevitamin/received_events", "type": "User", "site_admin": false}, "created_at": "2016-09-27T22:44:37Z", "updated_at": "2016-09-27T22:44:37Z", "author_association": "CONTRIBUTOR", "body_html": "<p>As far as I can tell, this is exactly the semantics of the two ops.</p>\n<div class=\"highlight highlight-source-python\"><pre>v <span class=\"pl-k\">=</span> tf.constant(np.arange(<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">5</span>))\n<span class=\"pl-c1\">print</span> tf.cumsum(tf.reverse(v,[<span class=\"pl-c1\">True</span>]),<span class=\"pl-v\">reverse</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>).eval()\n<span class=\"pl-c1\">print</span> tf.reverse(tf.cumsum(tf.reverse(v,[<span class=\"pl-c1\">True</span>])),[<span class=\"pl-c1\">True</span>]).eval()</pre></div>\n<p>prints</p>\n<pre><code>[10  6  3  1  0]\n[10 10  9  7  4]\n</code></pre>", "body_text": "As far as I can tell, this is exactly the semantics of the two ops.\nv = tf.constant(np.arange(0, 5))\nprint tf.cumsum(tf.reverse(v,[True]),reverse=True).eval()\nprint tf.reverse(tf.cumsum(tf.reverse(v,[True])),[True]).eval()\nprints\n[10  6  3  1  0]\n[10 10  9  7  4]", "body": "As far as I can tell, this is exactly the semantics of the two ops.\n\n``` python\nv = tf.constant(np.arange(0, 5))\nprint tf.cumsum(tf.reverse(v,[True]),reverse=True).eval()\nprint tf.reverse(tf.cumsum(tf.reverse(v,[True])),[True]).eval()\n```\n\nprints\n\n```\n[10  6  3  1  0]\n[10 10  9  7  4]\n```\n"}