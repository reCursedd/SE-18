{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/292196369", "html_url": "https://github.com/tensorflow/tensorflow/issues/7958#issuecomment-292196369", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7958", "id": 292196369, "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjE5NjM2OQ==", "user": {"login": "s1ddok", "id": 6384566, "node_id": "MDQ6VXNlcjYzODQ1NjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/6384566?v=4", "gravatar_id": "", "url": "https://api.github.com/users/s1ddok", "html_url": "https://github.com/s1ddok", "followers_url": "https://api.github.com/users/s1ddok/followers", "following_url": "https://api.github.com/users/s1ddok/following{/other_user}", "gists_url": "https://api.github.com/users/s1ddok/gists{/gist_id}", "starred_url": "https://api.github.com/users/s1ddok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/s1ddok/subscriptions", "organizations_url": "https://api.github.com/users/s1ddok/orgs", "repos_url": "https://api.github.com/users/s1ddok/repos", "events_url": "https://api.github.com/users/s1ddok/events{/privacy}", "received_events_url": "https://api.github.com/users/s1ddok/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-06T14:42:55Z", "updated_at": "2017-04-06T14:42:55Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=192171\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/sschaetz\">@sschaetz</a> good to see this. The goal is to of course shuffle the data one time only and then encode verything in one pass. Apple has a good example on how to implement Inception_v3, so basically all the ideas of the best performance can be gained from there.</p>\n<p>There is also a rendering library called <code>bgfx</code>, it is an abstract API for GPU backends, I built a game engine on that one back in the day. Abstraction layer like that one could help to switch backends seamlessly.</p>", "body_text": "@sschaetz good to see this. The goal is to of course shuffle the data one time only and then encode verything in one pass. Apple has a good example on how to implement Inception_v3, so basically all the ideas of the best performance can be gained from there.\nThere is also a rendering library called bgfx, it is an abstract API for GPU backends, I built a game engine on that one back in the day. Abstraction layer like that one could help to switch backends seamlessly.", "body": "@sschaetz good to see this. The goal is to of course shuffle the data one time only and then encode verything in one pass. Apple has a good example on how to implement Inception_v3, so basically all the ideas of the best performance can be gained from there.\r\n\r\nThere is also a rendering library called `bgfx`, it is an abstract API for GPU backends, I built a game engine on that one back in the day. Abstraction layer like that one could help to switch backends seamlessly."}