{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/292193459", "html_url": "https://github.com/tensorflow/tensorflow/issues/7958#issuecomment-292193459", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7958", "id": 292193459, "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjE5MzQ1OQ==", "user": {"login": "sschaetz", "id": 192171, "node_id": "MDQ6VXNlcjE5MjE3MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/192171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sschaetz", "html_url": "https://github.com/sschaetz", "followers_url": "https://api.github.com/users/sschaetz/followers", "following_url": "https://api.github.com/users/sschaetz/following{/other_user}", "gists_url": "https://api.github.com/users/sschaetz/gists{/gist_id}", "starred_url": "https://api.github.com/users/sschaetz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sschaetz/subscriptions", "organizations_url": "https://api.github.com/users/sschaetz/orgs", "repos_url": "https://api.github.com/users/sschaetz/repos", "events_url": "https://api.github.com/users/sschaetz/events{/privacy}", "received_events_url": "https://api.github.com/users/sschaetz/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-06T14:33:43Z", "updated_at": "2017-04-06T14:33:43Z", "author_association": "NONE", "body_html": "<p>We started with MPS integration into Tensorflow <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/ButterflyNetwork/tensorflow/commit/86b3137d50f4096c1ff996eb05dcce2d0993e936\"><img src=\"https://github.com/ButterflyNetwork/tensorflow/commit/86b3137d50f4096c1ff996eb05dcce2d0993e936\" alt=\"here\" style=\"max-width:100%;\"></a>. We focused on the 2D convolution operation. This is a summary of what we did:</p>\n<ul>\n<li>created a generic iOS test-bench that generates test data using Python/Tensorflow on the host, ships the data to a phone app, runs the MPS equivalent operation  and compares the result (note that MPS runs on mobile devices exclusively) (<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/ButterflyNetwork/tensorflow/blob/mps-conv2d-prototype/tensorflow/contrib/ios_examples/mps/README.md\"><img src=\"https://github.com/ButterflyNetwork/tensorflow/blob/mps-conv2d-prototype/tensorflow/contrib/ios_examples/mps/README.md\" alt=\"readme\" style=\"max-width:100%;\"></a>, <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/ButterflyNetwork/tensorflow/blob/mps-conv2d-prototype/tensorflow/contrib/ios_examples/mps/mps-test/prepare_data.py\"><img src=\"https://github.com/ButterflyNetwork/tensorflow/blob/mps-conv2d-prototype/tensorflow/contrib/ios_examples/mps/mps-test/prepare_data.py\" alt=\"test-data script\" style=\"max-width:100%;\"></a>, <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/ButterflyNetwork/tensorflow/blob/mps-conv2d-prototype/tensorflow/contrib/ios_examples/mps/mps-test/mps-testTests/mps_testTests.mm\"><img src=\"https://github.com/ButterflyNetwork/tensorflow/blob/mps-conv2d-prototype/tensorflow/contrib/ios_examples/mps/mps-test/mps-testTests/mps_testTests.mm\" alt=\"unit test\" style=\"max-width:100%;\"></a>)</li>\n<li>implemented a MPS conv2d prototype (<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/ButterflyNetwork/tensorflow/blob/mps-conv2d-prototype/tensorflow/core/user_ops/mps_conv.mm\"><img src=\"https://github.com/ButterflyNetwork/tensorflow/blob/mps-conv2d-prototype/tensorflow/core/user_ops/mps_conv.mm\" alt=\"code\" style=\"max-width:100%;\"></a>) - due to MPS esoteric data format it is somewhat tricky to implement a generic conv2d operation (data shuffling is necessary); with temporary images and chaining multiple conv2d operations we expect that this can be avoided but this prototype is not capable of doing that</li>\n</ul>\n<p>We show that MPS can be used for conv2D but as mentioned here we need some infrastructure for calling Metal, sending Metal GPU memory (and temporary images) between nodes to get full performance. This is why at this time we are not ready to upstream these changes.</p>\n<p>The proposed MTLPP library looks great - we would love to see something like this integrated. We are working on a similar wrapper library that wraps CUDA, OpenCL, Metal called <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/sschaetz/aura\"><img src=\"https://github.com/sschaetz/aura\" alt=\"Aura\" style=\"max-width:100%;\"></a> - if TF allowed us to switch the GPU backend under the hood we would be all set.</p>", "body_text": "We started with MPS integration into Tensorflow . We focused on the 2D convolution operation. This is a summary of what we did:\n\ncreated a generic iOS test-bench that generates test data using Python/Tensorflow on the host, ships the data to a phone app, runs the MPS equivalent operation  and compares the result (note that MPS runs on mobile devices exclusively) (, , )\nimplemented a MPS conv2d prototype () - due to MPS esoteric data format it is somewhat tricky to implement a generic conv2d operation (data shuffling is necessary); with temporary images and chaining multiple conv2d operations we expect that this can be avoided but this prototype is not capable of doing that\n\nWe show that MPS can be used for conv2D but as mentioned here we need some infrastructure for calling Metal, sending Metal GPU memory (and temporary images) between nodes to get full performance. This is why at this time we are not ready to upstream these changes.\nThe proposed MTLPP library looks great - we would love to see something like this integrated. We are working on a similar wrapper library that wraps CUDA, OpenCL, Metal called  - if TF allowed us to switch the GPU backend under the hood we would be all set.", "body": "We started with MPS integration into Tensorflow ![here](https://github.com/ButterflyNetwork/tensorflow/commit/86b3137d50f4096c1ff996eb05dcce2d0993e936). We focused on the 2D convolution operation. This is a summary of what we did:\r\n\r\n- created a generic iOS test-bench that generates test data using Python/Tensorflow on the host, ships the data to a phone app, runs the MPS equivalent operation  and compares the result (note that MPS runs on mobile devices exclusively) (![readme](https://github.com/ButterflyNetwork/tensorflow/blob/mps-conv2d-prototype/tensorflow/contrib/ios_examples/mps/README.md), ![test-data script](https://github.com/ButterflyNetwork/tensorflow/blob/mps-conv2d-prototype/tensorflow/contrib/ios_examples/mps/mps-test/prepare_data.py), ![unit test](https://github.com/ButterflyNetwork/tensorflow/blob/mps-conv2d-prototype/tensorflow/contrib/ios_examples/mps/mps-test/mps-testTests/mps_testTests.mm))\r\n- implemented a MPS conv2d prototype (![code](https://github.com/ButterflyNetwork/tensorflow/blob/mps-conv2d-prototype/tensorflow/core/user_ops/mps_conv.mm)) - due to MPS esoteric data format it is somewhat tricky to implement a generic conv2d operation (data shuffling is necessary); with temporary images and chaining multiple conv2d operations we expect that this can be avoided but this prototype is not capable of doing that\r\n\r\nWe show that MPS can be used for conv2D but as mentioned here we need some infrastructure for calling Metal, sending Metal GPU memory (and temporary images) between nodes to get full performance. This is why at this time we are not ready to upstream these changes. \r\n\r\nThe proposed MTLPP library looks great - we would love to see something like this integrated. We are working on a similar wrapper library that wraps CUDA, OpenCL, Metal called ![Aura](https://github.com/sschaetz/aura) - if TF allowed us to switch the GPU backend under the hood we would be all set."}