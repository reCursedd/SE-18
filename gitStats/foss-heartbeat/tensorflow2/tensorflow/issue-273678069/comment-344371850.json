{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/344371850", "html_url": "https://github.com/tensorflow/tensorflow/issues/14529#issuecomment-344371850", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14529", "id": 344371850, "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDM3MTg1MA==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-14T19:33:50Z", "updated_at": "2017-11-14T19:33:50Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Thanks for the suggestion! The difficulty here is that <code>Dataset.from_generator()</code> takes an arbitrary Python function as the generator, and there is no standard way to time out a Python function while it's running. It will depend on the particular library that you're using and what threads, file handles, etc. it uses. I'm going to close this issue, because I don't think it would be feasible to implement this feature reliably, and it ought to be possible to implement any specific approach in user code.</p>\n<p>There are a few suggestions for ways to time out a function call in <a href=\"https://stackoverflow.com/q/492519/3574081\" rel=\"nofollow\">this Stack Overflow question</a>, and you should be able to apply the appropriate one in your Python code.</p>", "body_text": "Thanks for the suggestion! The difficulty here is that Dataset.from_generator() takes an arbitrary Python function as the generator, and there is no standard way to time out a Python function while it's running. It will depend on the particular library that you're using and what threads, file handles, etc. it uses. I'm going to close this issue, because I don't think it would be feasible to implement this feature reliably, and it ought to be possible to implement any specific approach in user code.\nThere are a few suggestions for ways to time out a function call in this Stack Overflow question, and you should be able to apply the appropriate one in your Python code.", "body": "Thanks for the suggestion! The difficulty here is that `Dataset.from_generator()` takes an arbitrary Python function as the generator, and there is no standard way to time out a Python function while it's running. It will depend on the particular library that you're using and what threads, file handles, etc. it uses. I'm going to close this issue, because I don't think it would be feasible to implement this feature reliably, and it ought to be possible to implement any specific approach in user code.\r\n\r\nThere are a few suggestions for ways to time out a function call in [this Stack Overflow question](https://stackoverflow.com/q/492519/3574081), and you should be able to apply the appropriate one in your Python code."}