{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/262917335", "html_url": "https://github.com/tensorflow/tensorflow/issues/5745#issuecomment-262917335", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5745", "id": 262917335, "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjkxNzMzNQ==", "user": {"login": "DavidNorman", "id": 606831, "node_id": "MDQ6VXNlcjYwNjgzMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/606831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DavidNorman", "html_url": "https://github.com/DavidNorman", "followers_url": "https://api.github.com/users/DavidNorman/followers", "following_url": "https://api.github.com/users/DavidNorman/following{/other_user}", "gists_url": "https://api.github.com/users/DavidNorman/gists{/gist_id}", "starred_url": "https://api.github.com/users/DavidNorman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DavidNorman/subscriptions", "organizations_url": "https://api.github.com/users/DavidNorman/orgs", "repos_url": "https://api.github.com/users/DavidNorman/repos", "events_url": "https://api.github.com/users/DavidNorman/events{/privacy}", "received_events_url": "https://api.github.com/users/DavidNorman/received_events", "type": "User", "site_admin": false}, "created_at": "2016-11-25T09:41:36Z", "updated_at": "2016-11-25T09:41:36Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Incidentally, while I agree that the \"out_edges() == 1\" check prevents ambiguity, it nevertheless introduces the situation where the generator node ends up on none of the devices that it feeds.</p>\n<p>I suppose that occasionally this might be the right thing to do (perhaps DevA-&gt;DevB, DevA-&gt;DevC are fast for IO, but DevB-&gt;DevC is slow, so putting a constant on A when the consumers are on B and C is good).</p>\n<p>However, in the case where a constant feeds two nodes, both on the same device, then surely the constant should be on the same device.   I will create a more sophisticated diff with that idea.</p>", "body_text": "Incidentally, while I agree that the \"out_edges() == 1\" check prevents ambiguity, it nevertheless introduces the situation where the generator node ends up on none of the devices that it feeds.\nI suppose that occasionally this might be the right thing to do (perhaps DevA->DevB, DevA->DevC are fast for IO, but DevB->DevC is slow, so putting a constant on A when the consumers are on B and C is good).\nHowever, in the case where a constant feeds two nodes, both on the same device, then surely the constant should be on the same device.   I will create a more sophisticated diff with that idea.", "body": "Incidentally, while I agree that the \"out_edges() == 1\" check prevents ambiguity, it nevertheless introduces the situation where the generator node ends up on none of the devices that it feeds.\r\n\r\nI suppose that occasionally this might be the right thing to do (perhaps DevA->DevB, DevA->DevC are fast for IO, but DevB->DevC is slow, so putting a constant on A when the consumers are on B and C is good).\r\n\r\nHowever, in the case where a constant feeds two nodes, both on the same device, then surely the constant should be on the same device.   I will create a more sophisticated diff with that idea."}