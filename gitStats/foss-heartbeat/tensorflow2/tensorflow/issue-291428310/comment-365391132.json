{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/365391132", "html_url": "https://github.com/tensorflow/tensorflow/issues/16385#issuecomment-365391132", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16385", "id": 365391132, "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTM5MTEzMg==", "user": {"login": "random-residual", "id": 14348792, "node_id": "MDQ6VXNlcjE0MzQ4Nzky", "avatar_url": "https://avatars1.githubusercontent.com/u/14348792?v=4", "gravatar_id": "", "url": "https://api.github.com/users/random-residual", "html_url": "https://github.com/random-residual", "followers_url": "https://api.github.com/users/random-residual/followers", "following_url": "https://api.github.com/users/random-residual/following{/other_user}", "gists_url": "https://api.github.com/users/random-residual/gists{/gist_id}", "starred_url": "https://api.github.com/users/random-residual/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/random-residual/subscriptions", "organizations_url": "https://api.github.com/users/random-residual/orgs", "repos_url": "https://api.github.com/users/random-residual/repos", "events_url": "https://api.github.com/users/random-residual/events{/privacy}", "received_events_url": "https://api.github.com/users/random-residual/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-13T20:18:06Z", "updated_at": "2018-02-13T20:18:06Z", "author_association": "NONE", "body_html": "<p>It seems that SageMaker's TensorFlow version is '1.4.0'. I suppose that means I am stuck with this until they update the version?</p>\n<p>I ended up writing a custom estimator in TensorFlow with Keras layers, i.e.:</p>\n<p><code>python first_hidden_layer = tf.keras.layers.Dense(128, activation='relu', name='first-layer')(features[INPUT_TENSOR_NAME])</code></p>\n<p>However I noticed that when I trained on SageMaker's infrastructure it would give me a dimension mismatch if my labels were one-hot encoded, I have to just use label encoding. I think this follows how the pre-made TensorFlow estimators work. However I had no problem using one-hot encoding in Keras to train locally, but did have a problem locally training the estimator with Keras with encoded labels:</p>\n<p><code>Tensor conversion requested dtype int64 for Tensor with dtype float32</code></p>\n<p>Currently I am going to stick to the custom estimators. Thanks for responding.</p>", "body_text": "It seems that SageMaker's TensorFlow version is '1.4.0'. I suppose that means I am stuck with this until they update the version?\nI ended up writing a custom estimator in TensorFlow with Keras layers, i.e.:\npython first_hidden_layer = tf.keras.layers.Dense(128, activation='relu', name='first-layer')(features[INPUT_TENSOR_NAME])\nHowever I noticed that when I trained on SageMaker's infrastructure it would give me a dimension mismatch if my labels were one-hot encoded, I have to just use label encoding. I think this follows how the pre-made TensorFlow estimators work. However I had no problem using one-hot encoding in Keras to train locally, but did have a problem locally training the estimator with Keras with encoded labels:\nTensor conversion requested dtype int64 for Tensor with dtype float32\nCurrently I am going to stick to the custom estimators. Thanks for responding.", "body": "It seems that SageMaker's TensorFlow version is '1.4.0'. I suppose that means I am stuck with this until they update the version?\r\n\r\nI ended up writing a custom estimator in TensorFlow with Keras layers, i.e.:\r\n\r\n```python first_hidden_layer = tf.keras.layers.Dense(128, activation='relu', name='first-layer')(features[INPUT_TENSOR_NAME])```\r\n\r\nHowever I noticed that when I trained on SageMaker's infrastructure it would give me a dimension mismatch if my labels were one-hot encoded, I have to just use label encoding. I think this follows how the pre-made TensorFlow estimators work. However I had no problem using one-hot encoding in Keras to train locally, but did have a problem locally training the estimator with Keras with encoded labels:\r\n\r\n```Tensor conversion requested dtype int64 for Tensor with dtype float32```\r\n\r\nCurrently I am going to stick to the custom estimators. Thanks for responding. "}