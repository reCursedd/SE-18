{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5137", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5137/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5137/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5137/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/5137", "id": 184636006, "node_id": "MDU6SXNzdWUxODQ2MzYwMDY=", "number": 5137, "title": "tf.train.batch does not work with tf.train.string_input_producer", "user": {"login": "kdubovikov", "id": 832185, "node_id": "MDQ6VXNlcjgzMjE4NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/832185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kdubovikov", "html_url": "https://github.com/kdubovikov", "followers_url": "https://api.github.com/users/kdubovikov/followers", "following_url": "https://api.github.com/users/kdubovikov/following{/other_user}", "gists_url": "https://api.github.com/users/kdubovikov/gists{/gist_id}", "starred_url": "https://api.github.com/users/kdubovikov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kdubovikov/subscriptions", "organizations_url": "https://api.github.com/users/kdubovikov/orgs", "repos_url": "https://api.github.com/users/kdubovikov/repos", "events_url": "https://api.github.com/users/kdubovikov/events{/privacy}", "received_events_url": "https://api.github.com/users/kdubovikov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586558, "node_id": "MDU6TGFiZWw0MDQ1ODY1NTg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:community%20support", "name": "stat:community support", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-10-22T15:20:11Z", "updated_at": "2017-06-14T02:02:00Z", "closed_at": "2017-06-14T02:02:00Z", "author_association": "NONE", "body_html": "<p>When I try to batch results from <code>tf.train.string_input_producer</code> nothing happens and timeouts occur on a regular basis. Identical code is located at <a href=\"https://www.tensorflow.org/versions/r0.11/how_tos/reading_data/index.html#batching\" rel=\"nofollow\">tensorflow documentation</a>. Please see the code below.</p>\n<h3>Environment info</h3>\n<p>Operating System:<br>\nElementaryOS Freya</p>\n<p>Installed version of CUDA and cuDNN:<br>\n(please attach the output of <code>ls -l /path/to/cuda/lib/libcud*</code>):</p>\n<pre><code> ~ \ue0b0  ls -l /usr/local/cuda-7.5/lib64/libcud*\n\n-rw-r--r-- 1 root root 322936 \u0430\u0432\u0433.  15  2015 /usr/local/cuda-7.5/lib64/libcudadevrt.a\nlrwxrwxrwx 1 root root     16 \u0430\u0432\u0433.  15  2015 /usr/local/cuda-7.5/lib64/libcudart.so -&gt; libcudart.so.7.5\nlrwxrwxrwx 1 root root     19 \u0430\u0432\u0433.  15  2015 /usr/local/cuda-7.5/lib64/libcudart.so.7.5 -&gt; libcudart.so.7.5.18\n-rwxr-xr-x 1 root root 383336 \u0430\u0432\u0433.  15  2015 /usr/local/cuda-7.5/lib64/libcudart.so.7.5.18\n-rw-r--r-- 1 root root 720192 \u0430\u0432\u0433.  15  2015 /usr/local/cuda-7.5/lib64/libcudart_static.a\n</code></pre>\n<p>If installed from binary pip package, provide:</p>\n<ol>\n<li>A link to the pip package you installed: <a href=\"https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.11.0rc0-cp35-cp35m-linux_x86_64.whl\" rel=\"nofollow\">https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.11.0rc0-cp35-cp35m-linux_x86_64.whl</a></li>\n<li>The output from <code>python -c \"import tensorflow; print(tensorflow.__version__)\"</code>.</li>\n</ol>\n<pre><code> ~ \ue0b0 python -c \"import tensorflow; print(tensorflow.__version__)\"\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcurand.so locally\n0.11.0rc0\n</code></pre>\n<h3>If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)</h3>\n<pre><code>import tensorflow as tf\n\ndef load_png(input_queue):\n    reader = tf.WholeFileReader()\n    _, data = reader.read(input_queue)\n    data = tf.image.decode_png(data)\n    data.set_shape([28, 28, 3])\n    return data\n\ntf.reset_default_graph()\nconfig = tf.ConfigProto()\n# config.operation_timeout_in_ms=100000\n\ntrain_dataset = notMNISTDataset(url='http://yaroslavvb.com/upload/notMNIST/', \n                    filename='notMNIST_large.tar.gz',\n                   num_classes=10)\n\nfilenames = glob.glob(train_dataset._data_folder + '/**/*.png', recursive=True)\nfilename_queue = tf.train.string_input_producer(filenames, name='filename_queue', shuffle=False, capacity=100)\ndata = train_dataset._load_png(filename_queue)\n\n# all breaks when we try to batch Reader results\nlabel_batch = tf.train.batch([data],\n                              batch_size=5,\n                              capacity=100,\n                              allow_smaller_final_batch=True, \n                              name='batch_queue')\n\nwith tf.Session(config=config) as sess:\n    print(\"Starting session\")\n    tf.initialize_local_variables().run()\n    coordinator = tf.train.Coordinator()\n\n    while not coordinator.should_stop():  \n        print(\"Running batch reading op\")\n        threads = tf.train.start_queue_runners(coord=coordinator)\n        b = sess.run([label_batch])\n        print(b)\n\n    print(\"Requesting stop...\")\n    coordinator.request_stop()\n    coordinator.join(threads)\n</code></pre>\n<h3>What other attempted solutions have you tried?</h3>\n<p>Variations of this code from SO</p>", "body_text": "When I try to batch results from tf.train.string_input_producer nothing happens and timeouts occur on a regular basis. Identical code is located at tensorflow documentation. Please see the code below.\nEnvironment info\nOperating System:\nElementaryOS Freya\nInstalled version of CUDA and cuDNN:\n(please attach the output of ls -l /path/to/cuda/lib/libcud*):\n ~ \ue0b0  ls -l /usr/local/cuda-7.5/lib64/libcud*\n\n-rw-r--r-- 1 root root 322936 \u0430\u0432\u0433.  15  2015 /usr/local/cuda-7.5/lib64/libcudadevrt.a\nlrwxrwxrwx 1 root root     16 \u0430\u0432\u0433.  15  2015 /usr/local/cuda-7.5/lib64/libcudart.so -> libcudart.so.7.5\nlrwxrwxrwx 1 root root     19 \u0430\u0432\u0433.  15  2015 /usr/local/cuda-7.5/lib64/libcudart.so.7.5 -> libcudart.so.7.5.18\n-rwxr-xr-x 1 root root 383336 \u0430\u0432\u0433.  15  2015 /usr/local/cuda-7.5/lib64/libcudart.so.7.5.18\n-rw-r--r-- 1 root root 720192 \u0430\u0432\u0433.  15  2015 /usr/local/cuda-7.5/lib64/libcudart_static.a\n\nIf installed from binary pip package, provide:\n\nA link to the pip package you installed: https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.11.0rc0-cp35-cp35m-linux_x86_64.whl\nThe output from python -c \"import tensorflow; print(tensorflow.__version__)\".\n\n ~ \ue0b0 python -c \"import tensorflow; print(tensorflow.__version__)\"\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcurand.so locally\n0.11.0rc0\n\nIf possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\nimport tensorflow as tf\n\ndef load_png(input_queue):\n    reader = tf.WholeFileReader()\n    _, data = reader.read(input_queue)\n    data = tf.image.decode_png(data)\n    data.set_shape([28, 28, 3])\n    return data\n\ntf.reset_default_graph()\nconfig = tf.ConfigProto()\n# config.operation_timeout_in_ms=100000\n\ntrain_dataset = notMNISTDataset(url='http://yaroslavvb.com/upload/notMNIST/', \n                    filename='notMNIST_large.tar.gz',\n                   num_classes=10)\n\nfilenames = glob.glob(train_dataset._data_folder + '/**/*.png', recursive=True)\nfilename_queue = tf.train.string_input_producer(filenames, name='filename_queue', shuffle=False, capacity=100)\ndata = train_dataset._load_png(filename_queue)\n\n# all breaks when we try to batch Reader results\nlabel_batch = tf.train.batch([data],\n                              batch_size=5,\n                              capacity=100,\n                              allow_smaller_final_batch=True, \n                              name='batch_queue')\n\nwith tf.Session(config=config) as sess:\n    print(\"Starting session\")\n    tf.initialize_local_variables().run()\n    coordinator = tf.train.Coordinator()\n\n    while not coordinator.should_stop():  \n        print(\"Running batch reading op\")\n        threads = tf.train.start_queue_runners(coord=coordinator)\n        b = sess.run([label_batch])\n        print(b)\n\n    print(\"Requesting stop...\")\n    coordinator.request_stop()\n    coordinator.join(threads)\n\nWhat other attempted solutions have you tried?\nVariations of this code from SO", "body": "When I try to batch results from `tf.train.string_input_producer` nothing happens and timeouts occur on a regular basis. Identical code is located at [tensorflow documentation](https://www.tensorflow.org/versions/r0.11/how_tos/reading_data/index.html#batching). Please see the code below.\n### Environment info\n\nOperating System:\nElementaryOS Freya\n\nInstalled version of CUDA and cuDNN: \n(please attach the output of `ls -l /path/to/cuda/lib/libcud*`):\n\n```\n ~ \ue0b0  ls -l /usr/local/cuda-7.5/lib64/libcud*\n\n-rw-r--r-- 1 root root 322936 \u0430\u0432\u0433.  15  2015 /usr/local/cuda-7.5/lib64/libcudadevrt.a\nlrwxrwxrwx 1 root root     16 \u0430\u0432\u0433.  15  2015 /usr/local/cuda-7.5/lib64/libcudart.so -> libcudart.so.7.5\nlrwxrwxrwx 1 root root     19 \u0430\u0432\u0433.  15  2015 /usr/local/cuda-7.5/lib64/libcudart.so.7.5 -> libcudart.so.7.5.18\n-rwxr-xr-x 1 root root 383336 \u0430\u0432\u0433.  15  2015 /usr/local/cuda-7.5/lib64/libcudart.so.7.5.18\n-rw-r--r-- 1 root root 720192 \u0430\u0432\u0433.  15  2015 /usr/local/cuda-7.5/lib64/libcudart_static.a\n```\n\nIf installed from binary pip package, provide:\n1. A link to the pip package you installed: https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.11.0rc0-cp35-cp35m-linux_x86_64.whl\n2. The output from `python -c \"import tensorflow; print(tensorflow.__version__)\"`.\n\n```\n ~ \ue0b0 python -c \"import tensorflow; print(tensorflow.__version__)\"\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcurand.so locally\n0.11.0rc0\n```\n### If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\n\n```\nimport tensorflow as tf\n\ndef load_png(input_queue):\n    reader = tf.WholeFileReader()\n    _, data = reader.read(input_queue)\n    data = tf.image.decode_png(data)\n    data.set_shape([28, 28, 3])\n    return data\n\ntf.reset_default_graph()\nconfig = tf.ConfigProto()\n# config.operation_timeout_in_ms=100000\n\ntrain_dataset = notMNISTDataset(url='http://yaroslavvb.com/upload/notMNIST/', \n                    filename='notMNIST_large.tar.gz',\n                   num_classes=10)\n\nfilenames = glob.glob(train_dataset._data_folder + '/**/*.png', recursive=True)\nfilename_queue = tf.train.string_input_producer(filenames, name='filename_queue', shuffle=False, capacity=100)\ndata = train_dataset._load_png(filename_queue)\n\n# all breaks when we try to batch Reader results\nlabel_batch = tf.train.batch([data],\n                              batch_size=5,\n                              capacity=100,\n                              allow_smaller_final_batch=True, \n                              name='batch_queue')\n\nwith tf.Session(config=config) as sess:\n    print(\"Starting session\")\n    tf.initialize_local_variables().run()\n    coordinator = tf.train.Coordinator()\n\n    while not coordinator.should_stop():  \n        print(\"Running batch reading op\")\n        threads = tf.train.start_queue_runners(coord=coordinator)\n        b = sess.run([label_batch])\n        print(b)\n\n    print(\"Requesting stop...\")\n    coordinator.request_stop()\n    coordinator.join(threads)\n```\n### What other attempted solutions have you tried?\n\nVariations of this code from SO\n"}