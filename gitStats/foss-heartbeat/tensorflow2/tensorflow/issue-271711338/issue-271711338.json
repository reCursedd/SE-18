{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14310", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14310/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14310/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14310/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/14310", "id": 271711338, "node_id": "MDExOlB1bGxSZXF1ZXN0MTUxMDI2MDcz", "number": 14310, "title": "ONNX Support (Run ONNX nodes using TF)", "user": {"login": "tjingrant", "id": 6410074, "node_id": "MDQ6VXNlcjY0MTAwNzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/6410074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tjingrant", "html_url": "https://github.com/tjingrant", "followers_url": "https://api.github.com/users/tjingrant/followers", "following_url": "https://api.github.com/users/tjingrant/following{/other_user}", "gists_url": "https://api.github.com/users/tjingrant/gists{/gist_id}", "starred_url": "https://api.github.com/users/tjingrant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tjingrant/subscriptions", "organizations_url": "https://api.github.com/users/tjingrant/orgs", "repos_url": "https://api.github.com/users/tjingrant/repos", "events_url": "https://api.github.com/users/tjingrant/events{/privacy}", "received_events_url": "https://api.github.com/users/tjingrant/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "jhseu", "id": 170179, "node_id": "MDQ6VXNlcjE3MDE3OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/170179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhseu", "html_url": "https://github.com/jhseu", "followers_url": "https://api.github.com/users/jhseu/followers", "following_url": "https://api.github.com/users/jhseu/following{/other_user}", "gists_url": "https://api.github.com/users/jhseu/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhseu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhseu/subscriptions", "organizations_url": "https://api.github.com/users/jhseu/orgs", "repos_url": "https://api.github.com/users/jhseu/repos", "events_url": "https://api.github.com/users/jhseu/events{/privacy}", "received_events_url": "https://api.github.com/users/jhseu/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jhseu", "id": 170179, "node_id": "MDQ6VXNlcjE3MDE3OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/170179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhseu", "html_url": "https://github.com/jhseu", "followers_url": "https://api.github.com/users/jhseu/followers", "following_url": "https://api.github.com/users/jhseu/following{/other_user}", "gists_url": "https://api.github.com/users/jhseu/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhseu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhseu/subscriptions", "organizations_url": "https://api.github.com/users/jhseu/orgs", "repos_url": "https://api.github.com/users/jhseu/repos", "events_url": "https://api.github.com/users/jhseu/events{/privacy}", "received_events_url": "https://api.github.com/users/jhseu/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2017-11-07T05:07:40Z", "updated_at": "2017-11-17T00:00:15Z", "closed_at": "2017-11-16T23:57:02Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/14310", "html_url": "https://github.com/tensorflow/tensorflow/pull/14310", "diff_url": "https://github.com/tensorflow/tensorflow/pull/14310.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/14310.patch"}, "body_html": "<p>As per <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"256068792\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/12888\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/12888/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/12888\">#12888</a>.</p>\n<p>Authors of ONNX-TF package: Arpith Jacob, Tian Jin, Gheorghe-Teodor Bercea from IBM Research.</p>\n<h2>Objective</h2>\n<p>We are porting a subset of our package of ONNX-TF from here <a href=\"https://github.com/tjingrant/onnx-tf\">https://github.com/tjingrant/onnx-tf</a>. Specifically, we want to enable users to do the following:</p>\n<pre><code>import tensorflow as tf\nimport numpy as np\nfrom onnx import helper\nfrom onnx.onnx_pb2 import TensorProto\n\nX = np.random.randn(3, 2).astype(np.float32)\nY_ref = np.clip(X, 0, np.inf)\n\nnode_def = helper.make_node(\n  \"Relu\", [\"X\"], [\"X\"])\n\ngraph_def = helper.make_graph(\n  [node_def],\n  name=\"test\",\n  inputs=[helper.make_tensor_value_info(\"X\", TensorProto.FLOAT, [3, 2])],\n  outputs=[helper.make_tensor_value_info(\"X\", TensorProto.FLOAT, [3, 2])])\n\ninput_dict, output_dict = tf.contrib.onnx.prepare(helper.make_model(graph_def))\nwith tf.Session() as sess:\n  out = sess.run(output_dict['X'], feed_dict={input_dict['X']: X})\n\nnp.testing.assert_almost_equal(out, Y_ref)\n</code></pre>\n<h2>Current support for ONNX:</h2>\n<p>This implementation passes all the backend tests here <a href=\"https://github.com/onnx/onnx/blob/master/onnx/backend/test.py\">https://github.com/onnx/onnx/blob/master/onnx/backend/test.py</a> except for RNN. It supports all the models in the ONNX model zoo (<a href=\"https://github.com/onnx/models\">https://github.com/onnx/models</a>).</p>\n<h2>What we will be doing:</h2>\n<p>We are still working on fixing some of the tests as well as clearing as many TODO's as we can.<br>\nThe ONNX RNN API changed very recently and we may do another PR for RNN support.</p>\n<h2>We'd like your opinions:</h2>\n<p>We have not imported the ONNX package dependency (<a href=\"https://github.com/onnx/onnx\">https://github.com/onnx/onnx</a>) as we'd like to get TF team's opinion regarding whether/how we should import ONNX package dependency. The benefit is that we can check for the legality of ONNX node/graph declaration. Also we need a bunch of Proto definition like GraphProto/TensorProto.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4835305\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/arpith-jacob\">@arpith-jacob</a>, <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1168486\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/doru1004\">@doru1004</a></p>", "body_text": "As per #12888.\nAuthors of ONNX-TF package: Arpith Jacob, Tian Jin, Gheorghe-Teodor Bercea from IBM Research.\nObjective\nWe are porting a subset of our package of ONNX-TF from here https://github.com/tjingrant/onnx-tf. Specifically, we want to enable users to do the following:\nimport tensorflow as tf\nimport numpy as np\nfrom onnx import helper\nfrom onnx.onnx_pb2 import TensorProto\n\nX = np.random.randn(3, 2).astype(np.float32)\nY_ref = np.clip(X, 0, np.inf)\n\nnode_def = helper.make_node(\n  \"Relu\", [\"X\"], [\"X\"])\n\ngraph_def = helper.make_graph(\n  [node_def],\n  name=\"test\",\n  inputs=[helper.make_tensor_value_info(\"X\", TensorProto.FLOAT, [3, 2])],\n  outputs=[helper.make_tensor_value_info(\"X\", TensorProto.FLOAT, [3, 2])])\n\ninput_dict, output_dict = tf.contrib.onnx.prepare(helper.make_model(graph_def))\nwith tf.Session() as sess:\n  out = sess.run(output_dict['X'], feed_dict={input_dict['X']: X})\n\nnp.testing.assert_almost_equal(out, Y_ref)\n\nCurrent support for ONNX:\nThis implementation passes all the backend tests here https://github.com/onnx/onnx/blob/master/onnx/backend/test.py except for RNN. It supports all the models in the ONNX model zoo (https://github.com/onnx/models).\nWhat we will be doing:\nWe are still working on fixing some of the tests as well as clearing as many TODO's as we can.\nThe ONNX RNN API changed very recently and we may do another PR for RNN support.\nWe'd like your opinions:\nWe have not imported the ONNX package dependency (https://github.com/onnx/onnx) as we'd like to get TF team's opinion regarding whether/how we should import ONNX package dependency. The benefit is that we can check for the legality of ONNX node/graph declaration. Also we need a bunch of Proto definition like GraphProto/TensorProto.\n@arpith-jacob, @doru1004", "body": "As per https://github.com/tensorflow/tensorflow/issues/12888.\r\n\r\nAuthors of ONNX-TF package: Arpith Jacob, Tian Jin, Gheorghe-Teodor Bercea from IBM Research.\r\n\r\n## Objective\r\nWe are porting a subset of our package of ONNX-TF from here https://github.com/tjingrant/onnx-tf. Specifically, we want to enable users to do the following:\r\n```\r\nimport tensorflow as tf\r\nimport numpy as np\r\nfrom onnx import helper\r\nfrom onnx.onnx_pb2 import TensorProto\r\n\r\nX = np.random.randn(3, 2).astype(np.float32)\r\nY_ref = np.clip(X, 0, np.inf)\r\n\r\nnode_def = helper.make_node(\r\n  \"Relu\", [\"X\"], [\"X\"])\r\n\r\ngraph_def = helper.make_graph(\r\n  [node_def],\r\n  name=\"test\",\r\n  inputs=[helper.make_tensor_value_info(\"X\", TensorProto.FLOAT, [3, 2])],\r\n  outputs=[helper.make_tensor_value_info(\"X\", TensorProto.FLOAT, [3, 2])])\r\n\r\ninput_dict, output_dict = tf.contrib.onnx.prepare(helper.make_model(graph_def))\r\nwith tf.Session() as sess:\r\n  out = sess.run(output_dict['X'], feed_dict={input_dict['X']: X})\r\n\r\nnp.testing.assert_almost_equal(out, Y_ref)\r\n```\r\n## Current support for ONNX:\r\nThis implementation passes all the backend tests here https://github.com/onnx/onnx/blob/master/onnx/backend/test.py except for RNN. It supports all the models in the ONNX model zoo (https://github.com/onnx/models).\r\n\r\n## What we will be doing:\r\nWe are still working on fixing some of the tests as well as clearing as many TODO's as we can.\r\nThe ONNX RNN API changed very recently and we may do another PR for RNN support.\r\n\r\n## We'd like your opinions:\r\nWe have not imported the ONNX package dependency (https://github.com/onnx/onnx) as we'd like to get TF team's opinion regarding whether/how we should import ONNX package dependency. The benefit is that we can check for the legality of ONNX node/graph declaration. Also we need a bunch of Proto definition like GraphProto/TensorProto.\r\n\r\n@arpith-jacob, @doru1004"}