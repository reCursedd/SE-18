{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/409680703", "html_url": "https://github.com/tensorflow/tensorflow/issues/21213#issuecomment-409680703", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21213", "id": 409680703, "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTY4MDcwMw==", "user": {"login": "jdduke", "id": 479117, "node_id": "MDQ6VXNlcjQ3OTExNw==", "avatar_url": "https://avatars2.githubusercontent.com/u/479117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdduke", "html_url": "https://github.com/jdduke", "followers_url": "https://api.github.com/users/jdduke/followers", "following_url": "https://api.github.com/users/jdduke/following{/other_user}", "gists_url": "https://api.github.com/users/jdduke/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdduke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdduke/subscriptions", "organizations_url": "https://api.github.com/users/jdduke/orgs", "repos_url": "https://api.github.com/users/jdduke/repos", "events_url": "https://api.github.com/users/jdduke/events{/privacy}", "received_events_url": "https://api.github.com/users/jdduke/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-01T18:43:57Z", "updated_at": "2018-08-01T18:43:57Z", "author_association": "MEMBER", "body_html": "<p>So, eventually the string Tensors will actually take byte arrays (see also <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/java/src/main/java/org/tensorflow/Tensor.java#L83\">TensorFlow's Java Tensor class</a>). Eventually we'll relax <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/lite/java/src/main/java/org/tensorflow/lite/Tensor.java#L182\">this type check</a> in TensorFlow Lite's Java Tensor class, but doing so will also require some additional work to interpret the byte array as a String, rather than as a uint8 array (Tensor dimensions for String types have a very different connotation than the dimensions of the uint8 Tensor type).</p>\n<p>If you did write a custom op, it would probably be a custom input op which converts a uint8 input Tensor to a String Tensor. Even then, the Java API doesn't support dynamically sized outputs, so there's some additional work required there (all of which is actively being worked on and should be supported in the near future).</p>", "body_text": "So, eventually the string Tensors will actually take byte arrays (see also TensorFlow's Java Tensor class). Eventually we'll relax this type check in TensorFlow Lite's Java Tensor class, but doing so will also require some additional work to interpret the byte array as a String, rather than as a uint8 array (Tensor dimensions for String types have a very different connotation than the dimensions of the uint8 Tensor type).\nIf you did write a custom op, it would probably be a custom input op which converts a uint8 input Tensor to a String Tensor. Even then, the Java API doesn't support dynamically sized outputs, so there's some additional work required there (all of which is actively being worked on and should be supported in the near future).", "body": "So, eventually the string Tensors will actually take byte arrays (see also [TensorFlow's Java Tensor class](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/java/src/main/java/org/tensorflow/Tensor.java#L83)). Eventually we'll relax [this type check](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/lite/java/src/main/java/org/tensorflow/lite/Tensor.java#L182) in TensorFlow Lite's Java Tensor class, but doing so will also require some additional work to interpret the byte array as a String, rather than as a uint8 array (Tensor dimensions for String types have a very different connotation than the dimensions of the uint8 Tensor type).\r\n\r\nIf you did write a custom op, it would probably be a custom input op which converts a uint8 input Tensor to a String Tensor. Even then, the Java API doesn't support dynamically sized outputs, so there's some additional work required there (all of which is actively being worked on and should be supported in the near future).\r\n"}