{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17184", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17184/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17184/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17184/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17184", "id": 299192684, "node_id": "MDU6SXNzdWUyOTkxOTI2ODQ=", "number": 17184, "title": "Error Creating Predictor from Core Estimator", "user": {"login": "jacky-liang", "id": 1132177, "node_id": "MDQ6VXNlcjExMzIxNzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1132177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jacky-liang", "html_url": "https://github.com/jacky-liang", "followers_url": "https://api.github.com/users/jacky-liang/followers", "following_url": "https://api.github.com/users/jacky-liang/following{/other_user}", "gists_url": "https://api.github.com/users/jacky-liang/gists{/gist_id}", "starred_url": "https://api.github.com/users/jacky-liang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jacky-liang/subscriptions", "organizations_url": "https://api.github.com/users/jacky-liang/orgs", "repos_url": "https://api.github.com/users/jacky-liang/repos", "events_url": "https://api.github.com/users/jacky-liang/events{/privacy}", "received_events_url": "https://api.github.com/users/jacky-liang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-22T01:38:44Z", "updated_at": "2018-02-22T02:08:24Z", "closed_at": "2018-02-22T02:08:24Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Windows 10</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: Binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.5.0</li>\n<li><strong>Python version</strong>:  3.5.3</li>\n<li><strong>Bazel version (if compiling from source)</strong>: n/a</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: n/a</li>\n<li><strong>CUDA/cuDNN version</strong>: 9.0.176</li>\n<li><strong>GPU model and memory</strong>: Titan V, 12288 MB</li>\n<li><strong>Exact command to reproduce</strong>: See below</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>Creating a Predictor object by calling <code>from_estimator</code> results in the following error:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-ii\">----</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">5</span> est_pred<span class=\"pl-k\">=</span> predictor.from_estimator(est, serving_input_receiver_fn)\n\nc:\\<span class=\"pl-ii\">libraries\\python35\\lib\\site-packages\\tensorflow\\contrib\\predictor\\predictor_factories.py in from_estimator(estimator, serving_input_receiver_fn, output_key, graph)</span>\n     <span class=\"pl-c1\">86</span>       <span class=\"pl-bu\">`Estimator`</span>.\n     <span class=\"pl-c1\">87</span>   <span class=\"pl-s\"><span class=\"pl-pds\">\"\"\"</span></span>\n<span class=\"pl-s\">---&gt; 88   if isinstance(estimator, estimator.Estimator):</span>\n<span class=\"pl-s\">     89     raise TypeError('Espected estimator to be of type '</span>\n<span class=\"pl-s\">     90                     'tf.python.estimator.Estimator, but got type '</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">AttributeError: 'Estimator' object has no attribute 'Estimator'</span></pre></div>\n<h3>Source code / logs</h3>\n<p>To reproduce this error:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">from</span> tensorflow.contrib <span class=\"pl-k\">import</span> predictor\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">model_fn</span>(<span class=\"pl-smi\">features</span>, <span class=\"pl-smi\">labels</span>, <span class=\"pl-smi\">mode</span>):\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> this will trigger other errors once the type check is passed</span>\n    <span class=\"pl-k\">return</span> <span class=\"pl-c1\">None</span>\nest <span class=\"pl-k\">=</span> tf.estimator.Estimator(<span class=\"pl-v\">model_fn</span><span class=\"pl-k\">=</span>model_fn)\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">serving_input_receiver_fn</span>():\n    inputs <span class=\"pl-k\">=</span> {<span class=\"pl-s\"><span class=\"pl-pds\">'</span>X<span class=\"pl-pds\">'</span></span>: tf.placeholder(<span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">None</span>, <span class=\"pl-c1\">1</span>], <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.float32)}\n    <span class=\"pl-k\">return</span> tf.estimator.export.ServingInputReceiver(inputs, inputs)\n\nest_pred <span class=\"pl-k\">=</span> predictor.from_estimator(est , serving_input_receiver_fn)</pre></div>\n<p>It appears the type check on predictor_factories.py's line 88 has a typo, since <code>estimator</code> is overridden by the function argument.</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10\nTensorFlow installed from (source or binary): Binary\nTensorFlow version (use command below): 1.5.0\nPython version:  3.5.3\nBazel version (if compiling from source): n/a\nGCC/Compiler version (if compiling from source): n/a\nCUDA/cuDNN version: 9.0.176\nGPU model and memory: Titan V, 12288 MB\nExact command to reproduce: See below\n\nDescribe the problem\nCreating a Predictor object by calling from_estimator results in the following error:\n----> 5 est_pred= predictor.from_estimator(est, serving_input_receiver_fn)\n\nc:\\libraries\\python35\\lib\\site-packages\\tensorflow\\contrib\\predictor\\predictor_factories.py in from_estimator(estimator, serving_input_receiver_fn, output_key, graph)\n     86       `Estimator`.\n     87   \"\"\"\n---> 88   if isinstance(estimator, estimator.Estimator):\n     89     raise TypeError('Espected estimator to be of type '\n     90                     'tf.python.estimator.Estimator, but got type '\n\nAttributeError: 'Estimator' object has no attribute 'Estimator'\nSource code / logs\nTo reproduce this error:\nimport tensorflow as tf\nfrom tensorflow.contrib import predictor\n\ndef model_fn(features, labels, mode):\n    # this will trigger other errors once the type check is passed\n    return None\nest = tf.estimator.Estimator(model_fn=model_fn)\n\ndef serving_input_receiver_fn():\n    inputs = {'X': tf.placeholder(shape=[None, 1], dtype=tf.float32)}\n    return tf.estimator.export.ServingInputReceiver(inputs, inputs)\n\nest_pred = predictor.from_estimator(est , serving_input_receiver_fn)\nIt appears the type check on predictor_factories.py's line 88 has a typo, since estimator is overridden by the function argument.", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 10\r\n- **TensorFlow installed from (source or binary)**: Binary\r\n- **TensorFlow version (use command below)**: 1.5.0\r\n- **Python version**:  3.5.3\r\n- **Bazel version (if compiling from source)**: n/a\r\n- **GCC/Compiler version (if compiling from source)**: n/a\r\n- **CUDA/cuDNN version**: 9.0.176\r\n- **GPU model and memory**: Titan V, 12288 MB\r\n- **Exact command to reproduce**: See below\r\n\r\n### Describe the problem\r\nCreating a Predictor object by calling `from_estimator` results in the following error:\r\n\r\n```python\r\n----> 5 est_pred= predictor.from_estimator(est, serving_input_receiver_fn)\r\n\r\nc:\\libraries\\python35\\lib\\site-packages\\tensorflow\\contrib\\predictor\\predictor_factories.py in from_estimator(estimator, serving_input_receiver_fn, output_key, graph)\r\n     86       `Estimator`.\r\n     87   \"\"\"\r\n---> 88   if isinstance(estimator, estimator.Estimator):\r\n     89     raise TypeError('Espected estimator to be of type '\r\n     90                     'tf.python.estimator.Estimator, but got type '\r\n\r\nAttributeError: 'Estimator' object has no attribute 'Estimator'\r\n```\r\n\r\n### Source code / logs\r\nTo reproduce this error:\r\n```python\r\nimport tensorflow as tf\r\nfrom tensorflow.contrib import predictor\r\n\r\ndef model_fn(features, labels, mode):\r\n    # this will trigger other errors once the type check is passed\r\n    return None\r\nest = tf.estimator.Estimator(model_fn=model_fn)\r\n\r\ndef serving_input_receiver_fn():\r\n    inputs = {'X': tf.placeholder(shape=[None, 1], dtype=tf.float32)}\r\n    return tf.estimator.export.ServingInputReceiver(inputs, inputs)\r\n\r\nest_pred = predictor.from_estimator(est , serving_input_receiver_fn)\r\n```\r\n\r\nIt appears the type check on predictor_factories.py's line 88 has a typo, since ```estimator``` is overridden by the function argument. \r\n"}