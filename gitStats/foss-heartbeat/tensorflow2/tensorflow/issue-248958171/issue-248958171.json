{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12132", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12132/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12132/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12132/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/12132", "id": 248958171, "node_id": "MDU6SXNzdWUyNDg5NTgxNzE=", "number": 12132, "title": "slim.separable_conv2d is too slow", "user": {"login": "BKZero", "id": 18680778, "node_id": "MDQ6VXNlcjE4NjgwNzc4", "avatar_url": "https://avatars2.githubusercontent.com/u/18680778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BKZero", "html_url": "https://github.com/BKZero", "followers_url": "https://api.github.com/users/BKZero/followers", "following_url": "https://api.github.com/users/BKZero/following{/other_user}", "gists_url": "https://api.github.com/users/BKZero/gists{/gist_id}", "starred_url": "https://api.github.com/users/BKZero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BKZero/subscriptions", "organizations_url": "https://api.github.com/users/BKZero/orgs", "repos_url": "https://api.github.com/users/BKZero/repos", "events_url": "https://api.github.com/users/BKZero/events{/privacy}", "received_events_url": "https://api.github.com/users/BKZero/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "robieta", "id": 13089297, "node_id": "MDQ6VXNlcjEzMDg5Mjk3", "avatar_url": "https://avatars0.githubusercontent.com/u/13089297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robieta", "html_url": "https://github.com/robieta", "followers_url": "https://api.github.com/users/robieta/followers", "following_url": "https://api.github.com/users/robieta/following{/other_user}", "gists_url": "https://api.github.com/users/robieta/gists{/gist_id}", "starred_url": "https://api.github.com/users/robieta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robieta/subscriptions", "organizations_url": "https://api.github.com/users/robieta/orgs", "repos_url": "https://api.github.com/users/robieta/repos", "events_url": "https://api.github.com/users/robieta/events{/privacy}", "received_events_url": "https://api.github.com/users/robieta/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "robieta", "id": 13089297, "node_id": "MDQ6VXNlcjEzMDg5Mjk3", "avatar_url": "https://avatars0.githubusercontent.com/u/13089297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robieta", "html_url": "https://github.com/robieta", "followers_url": "https://api.github.com/users/robieta/followers", "following_url": "https://api.github.com/users/robieta/following{/other_user}", "gists_url": "https://api.github.com/users/robieta/gists{/gist_id}", "starred_url": "https://api.github.com/users/robieta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robieta/subscriptions", "organizations_url": "https://api.github.com/users/robieta/orgs", "repos_url": "https://api.github.com/users/robieta/repos", "events_url": "https://api.github.com/users/robieta/events{/privacy}", "received_events_url": "https://api.github.com/users/robieta/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 25, "created_at": "2017-08-09T08:41:36Z", "updated_at": "2018-11-14T19:13:23Z", "closed_at": null, "author_association": "NONE", "body_html": "<hr>\n<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: custom, yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu 14.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: from pip</li>\n<li><strong>TensorFlow version (use command below)</strong>: ('v1.2.0-5-g435cdfc', '1.2.1')</li>\n<li><strong>Python version</strong>: python2.7</li>\n<li><strong>Bazel version (if compiling from source)</strong>: -</li>\n<li><strong>CUDA/cuDNN version</strong>: CPU version, no CUDA</li>\n<li><strong>GPU model and memory</strong>: CPU version, no CUDA</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>the depthwise+pointwise structure is faster than the traditional convolution layer theoretically, but the implemetation of tensorflow make it slower. it doesn't make sense.<br>\nhere is part of my network defination:<br>\n#net = slim.conv2d(net, 32, [3, 3], scope='conv1-2')<br>\n#end_points['conv1-2'] = net<br>\nnet = slim.separable_conv2d(net,None,[3,3],depth_multiplier=1,stride=1,rate=1,normalizer_fn=slim.batch_norm,scope='conv1-2-depthwise')<br>\nend_points['conv1-2-depthwise'] = net<br>\nnet = slim.conv2d(net, depth(32), [1, 1], stride=1, normalizer_fn=slim.batch_norm, scope='conv1-2-pointwise')<br>\nend_points['conv1-2-pointwise'] = net</p>\n<pre><code>net = slim.max_pool2d(net, [2, 2], 2, scope='pool1')\nend_points['pool1'] = net # 58*58\n\n#net = slim.conv2d(net, 48, [3, 3], padding='VALID', scope='conv2')\n#end_points['conv2'] = net\nnet = slim.separable_conv2d(net,None,[3,3],depth_multiplier=1,stride=1,rate=1,normalizer_fn=slim.batch_norm,scope='conv2-depthwise')\nend_points['conv2-depthwise'] = net\nnet = slim.conv2d(net, depth(48), [1, 1], stride=1, normalizer_fn=slim.batch_norm, scope='conv2-pointwise')\nend_points['conv2-pointwise'] = net\n\nnet = slim.max_pool2d(net, [2, 2], 2, scope='pool2')\nend_points['pool2'] = net # 28*28\n</code></pre>\n<p>i just change the network defination<br>\nfrom:<br>\nnet = slim.conv2d(net, 32, [3, 3], scope='conv1-2')<br>\nend_points['conv1-2'] = net<br>\nto:<br>\nnet = slim.separable_conv2d(net,None,[3,3],depth_multiplier=1,stride=1,<br>\nrate=1,normalizer_fn=slim.batch_norm,scope='conv1-2-depthwise')<br>\nend_points['conv1-2-depthwise'] = net<br>\nnet = slim.conv2d(net, depth(32), [1, 1], stride=1, normalizer_fn=slim.batch_norm,<br>\nscope='conv1-2-pointwise')<br>\nend_points['conv1-2-pointwise'] = net<br>\ni do not think i am doing something wrong. so where the problem is?</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): custom, yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 14.04\nTensorFlow installed from (source or binary): from pip\nTensorFlow version (use command below): ('v1.2.0-5-g435cdfc', '1.2.1')\nPython version: python2.7\nBazel version (if compiling from source): -\nCUDA/cuDNN version: CPU version, no CUDA\nGPU model and memory: CPU version, no CUDA\nExact command to reproduce:\n\nDescribe the problem\nthe depthwise+pointwise structure is faster than the traditional convolution layer theoretically, but the implemetation of tensorflow make it slower. it doesn't make sense.\nhere is part of my network defination:\n#net = slim.conv2d(net, 32, [3, 3], scope='conv1-2')\n#end_points['conv1-2'] = net\nnet = slim.separable_conv2d(net,None,[3,3],depth_multiplier=1,stride=1,rate=1,normalizer_fn=slim.batch_norm,scope='conv1-2-depthwise')\nend_points['conv1-2-depthwise'] = net\nnet = slim.conv2d(net, depth(32), [1, 1], stride=1, normalizer_fn=slim.batch_norm, scope='conv1-2-pointwise')\nend_points['conv1-2-pointwise'] = net\nnet = slim.max_pool2d(net, [2, 2], 2, scope='pool1')\nend_points['pool1'] = net # 58*58\n\n#net = slim.conv2d(net, 48, [3, 3], padding='VALID', scope='conv2')\n#end_points['conv2'] = net\nnet = slim.separable_conv2d(net,None,[3,3],depth_multiplier=1,stride=1,rate=1,normalizer_fn=slim.batch_norm,scope='conv2-depthwise')\nend_points['conv2-depthwise'] = net\nnet = slim.conv2d(net, depth(48), [1, 1], stride=1, normalizer_fn=slim.batch_norm, scope='conv2-pointwise')\nend_points['conv2-pointwise'] = net\n\nnet = slim.max_pool2d(net, [2, 2], 2, scope='pool2')\nend_points['pool2'] = net # 28*28\n\ni just change the network defination\nfrom:\nnet = slim.conv2d(net, 32, [3, 3], scope='conv1-2')\nend_points['conv1-2'] = net\nto:\nnet = slim.separable_conv2d(net,None,[3,3],depth_multiplier=1,stride=1,\nrate=1,normalizer_fn=slim.batch_norm,scope='conv1-2-depthwise')\nend_points['conv1-2-depthwise'] = net\nnet = slim.conv2d(net, depth(32), [1, 1], stride=1, normalizer_fn=slim.batch_norm,\nscope='conv1-2-pointwise')\nend_points['conv1-2-pointwise'] = net\ni do not think i am doing something wrong. so where the problem is?", "body": "------------------------\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: custom, yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 14.04\r\n- **TensorFlow installed from (source or binary)**: from pip\r\n- **TensorFlow version (use command below)**: ('v1.2.0-5-g435cdfc', '1.2.1')\r\n- **Python version**: python2.7\r\n- **Bazel version (if compiling from source)**: -\r\n- **CUDA/cuDNN version**: CPU version, no CUDA\r\n- **GPU model and memory**: CPU version, no CUDA\r\n- **Exact command to reproduce**:\r\n\r\n### Describe the problem\r\nthe depthwise+pointwise structure is faster than the traditional convolution layer theoretically, but the implemetation of tensorflow make it slower. it doesn't make sense.\r\nhere is part of my network defination:\r\n#net = slim.conv2d(net, 32, [3, 3], scope='conv1-2')\r\n    #end_points['conv1-2'] = net\r\n    net = slim.separable_conv2d(net,None,[3,3],depth_multiplier=1,stride=1,rate=1,normalizer_fn=slim.batch_norm,scope='conv1-2-depthwise')\r\n    end_points['conv1-2-depthwise'] = net\r\n    net = slim.conv2d(net, depth(32), [1, 1], stride=1, normalizer_fn=slim.batch_norm, scope='conv1-2-pointwise')\r\n    end_points['conv1-2-pointwise'] = net\r\n\r\n    net = slim.max_pool2d(net, [2, 2], 2, scope='pool1')\r\n    end_points['pool1'] = net # 58*58\r\n\r\n    #net = slim.conv2d(net, 48, [3, 3], padding='VALID', scope='conv2')\r\n    #end_points['conv2'] = net\r\n    net = slim.separable_conv2d(net,None,[3,3],depth_multiplier=1,stride=1,rate=1,normalizer_fn=slim.batch_norm,scope='conv2-depthwise')\r\n    end_points['conv2-depthwise'] = net\r\n    net = slim.conv2d(net, depth(48), [1, 1], stride=1, normalizer_fn=slim.batch_norm, scope='conv2-pointwise')\r\n    end_points['conv2-pointwise'] = net\r\n\r\n    net = slim.max_pool2d(net, [2, 2], 2, scope='pool2')\r\n    end_points['pool2'] = net # 28*28\r\n\r\ni just change the network defination \r\nfrom: \r\nnet = slim.conv2d(net, 32, [3, 3], scope='conv1-2')\r\nend_points['conv1-2'] = net\r\nto:\r\nnet = slim.separable_conv2d(net,None,[3,3],depth_multiplier=1,stride=1,\r\n         rate=1,normalizer_fn=slim.batch_norm,scope='conv1-2-depthwise')\r\nend_points['conv1-2-depthwise'] = net\r\nnet = slim.conv2d(net, depth(32), [1, 1], stride=1, normalizer_fn=slim.batch_norm, \r\n         scope='conv1-2-pointwise')\r\nend_points['conv1-2-pointwise'] = net\r\ni do not think i am doing something wrong. so where the problem is?\r\n"}