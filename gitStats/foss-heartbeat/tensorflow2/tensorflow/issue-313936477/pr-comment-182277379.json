{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/182277379", "pull_request_review_id": 113041249, "id": 182277379, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjI3NzM3OQ==", "diff_hunk": "@@ -147,21 +147,21 @@ Status MetaOptimizer::Optimize(Cluster* cluster, const GrapplerItem& item,\n         \"pruning\",    \"function\",      \"constfold\",  \"layout\",\n         \"memory\",     \"autoparallel\",  \"arithmetic\", \"loop\",\n         \"dependency\", \"debug_stripper\"};\n-    std::vector<string> custom_optimizer_names;\n-    for (const auto& optimizer_name : cfg_.optimizers()) {\n-      if (available_optimizers.find(optimizer_name) !=\n+    std::vector<tensorflow::RewriterConfig_CustomGraphOptimizer> custom_optimizer_list;\n+    for (const auto& optimizer : cfg_.custom_optimizers()) {\n+      if (available_optimizers.find(optimizer.name()) !=\n           available_optimizers.end()) {\n-        optimizers.push_back(NewOptimizer(optimizer_name));\n+        optimizers.push_back(NewOptimizer(optimizer.name()));\n       } else {\n-        custom_optimizer_names.push_back(optimizer_name);\n+        custom_optimizer_list.push_back(optimizer);\n       }\n     }\n     // Now run the custom optimizers.\n-    for (const auto& optimizer_name : custom_optimizer_names) {\n+    for (const auto& optimizer : custom_optimizer_list) {", "path": "tensorflow/core/grappler/optimizers/meta_optimizer.cc", "position": null, "original_position": 29, "commit_id": "786672211460e1312c8bc9aec4c096a05cf4272d", "original_commit_id": "f8c236bfd652fd39d76488df9ab4ef15b55766a2", "user": {"login": "benoitsteiner", "id": 6969686, "node_id": "MDQ6VXNlcjY5Njk2ODY=", "avatar_url": "https://avatars0.githubusercontent.com/u/6969686?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benoitsteiner", "html_url": "https://github.com/benoitsteiner", "followers_url": "https://api.github.com/users/benoitsteiner/followers", "following_url": "https://api.github.com/users/benoitsteiner/following{/other_user}", "gists_url": "https://api.github.com/users/benoitsteiner/gists{/gist_id}", "starred_url": "https://api.github.com/users/benoitsteiner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benoitsteiner/subscriptions", "organizations_url": "https://api.github.com/users/benoitsteiner/orgs", "repos_url": "https://api.github.com/users/benoitsteiner/repos", "events_url": "https://api.github.com/users/benoitsteiner/events{/privacy}", "received_events_url": "https://api.github.com/users/benoitsteiner/received_events", "type": "User", "site_admin": false}, "body": "I think it would be best to simply add an extra loop at the end to go over the optimizers listed in 'cfg_.custom_optimizers()' and add them to the mix. This will ensure that they're run last, and therefore that you'll have a constant folded and layout optimized model to start with.", "created_at": "2018-04-18T00:12:05Z", "updated_at": "2018-04-18T19:30:53Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/18479#discussion_r182277379", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/18479", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/182277379"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/18479#discussion_r182277379"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/18479"}}, "body_html": "<p>I think it would be best to simply add an extra loop at the end to go over the optimizers listed in 'cfg_.custom_optimizers()' and add them to the mix. This will ensure that they're run last, and therefore that you'll have a constant folded and layout optimized model to start with.</p>", "body_text": "I think it would be best to simply add an extra loop at the end to go over the optimizers listed in 'cfg_.custom_optimizers()' and add them to the mix. This will ensure that they're run last, and therefore that you'll have a constant folded and layout optimized model to start with."}