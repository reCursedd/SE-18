{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/142707585", "pull_request_review_id": 67108691, "id": 142707585, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjcwNzU4NQ==", "diff_hunk": "@@ -304,13 +307,102 @@ def _get_effective_padding_node_input(stride, padding,\n   return stride * effective_padding_output + padding\n \n \n-def compute_receptive_field_from_graph_def(graph_def, input_node, output_node):\n-  \"\"\"Computes receptive field (RF) parameters from a GraphDef object.\n+class ReceptiveField:\n+  \"\"\"\n+  Receptive field of a convolutional neural network.\n+\n+  Args:\n+    size: Receptive field size.\n+    stride: Effective stride.\n+    padding: Effective padding.\n+  \"\"\"\n+  def __init__(self, size, stride, padding):\n+    self.size = np.asarray(size)\n+    self.stride = np.asarray(stride)\n+    self.padding = np.asarray(padding)\n+\n+  def compute_input_center_coordinates(self, x, axis=None):\n+    \"\"\"\n+    Computes the center of the receptive field that generated a feature.\n+\n+    Args:\n+      x: An array of feature coordinates with shape `(..., d)`, where `d` is the\n+        number of dimensions of the coordinates.\n+      axis: The dimensions for which to compute the input center coordinates.\n+        If `None` (the default), compute the input center coordinates for all\n+        dimensions.\n+\n+    Returns:\n+      y: Center of the receptive field that generated the features.\n+\n+    Raises:\n+      ValueError: If the number of dimensions of the feature coordinates does\n+        not match the number of elements in `axis`.\n+    \"\"\"\n+    # Use all dimensions\n+    if axis is None:\n+      axis = range(self.size.size)\n+    # Ensure axis is a list because tuples have different indexing behavior\n+    axis = list(axis)\n+    x = np.asarray(x)\n+    if x.shape[-1] != len(axis):\n+      raise ValueError(\"Dimensionality of the feature coordinates `x` (%d) \"\n+                       \"does not match dimensionality of `axis` (%d)\" %\n+                       (x.shape[-1], len(axis)))\n+    return - self.padding[axis] + x * self.stride[axis] + \\\n+      (self.size[axis] - 1) / 2\n+\n+  def compute_feature_coordinates(self, y, axis=None):\n+    \"\"\"\n+    Computes the position of a feature given the center of a receptive field.\n+\n+    Args:\n+      y: An array of input center coordinates with shape `(..., d)`, where `d`\n+        is the number of dimensions of the coordinates.\n+      axis: The dimensions for which to compute the feature coordinates.\n+        If `None` (the default), compute the feature coordinates for all\n+        dimensions.\n+\n+    Returns:\n+      x: Coordinates of the features.\n+\n+    Raises:\n+      ValueError: If the number of dimensions of the input center coordinates\n+        does not match the number of elements in `axis`.\n+    \"\"\"\n+    # Use all dimensions\n+    if axis is None:\n+      axis = range(self.size.size)\n+    # Ensure axis is a list because tuples have different indexing behavior", "path": "tensorflow/contrib/receptive_field/python/util/receptive_field.py", "position": null, "original_position": 101, "commit_id": "302207948bbc186a7d99813869313fefbfe8f256", "original_commit_id": "ea026849754d18bed25c14ff7d713d031b75cedc", "user": {"login": "andrefaraujo", "id": 6316419, "node_id": "MDQ6VXNlcjYzMTY0MTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6316419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrefaraujo", "html_url": "https://github.com/andrefaraujo", "followers_url": "https://api.github.com/users/andrefaraujo/followers", "following_url": "https://api.github.com/users/andrefaraujo/following{/other_user}", "gists_url": "https://api.github.com/users/andrefaraujo/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrefaraujo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrefaraujo/subscriptions", "organizations_url": "https://api.github.com/users/andrefaraujo/orgs", "repos_url": "https://api.github.com/users/andrefaraujo/repos", "events_url": "https://api.github.com/users/andrefaraujo/events{/privacy}", "received_events_url": "https://api.github.com/users/andrefaraujo/received_events", "type": "User", "site_admin": false}, "body": "missing period.", "created_at": "2017-10-04T15:36:06Z", "updated_at": "2017-10-08T15:58:35Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/13239#discussion_r142707585", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/13239", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/142707585"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/13239#discussion_r142707585"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/13239"}}, "body_html": "<p>missing period.</p>", "body_text": "missing period."}