{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17881", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17881/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17881/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17881/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17881", "id": 307111627, "node_id": "MDU6SXNzdWUzMDcxMTE2Mjc=", "number": 17881, "title": "TensortRT Invalid data type: 'int32' when converting TF Object Detection graph", "user": {"login": "louisquinn", "id": 5274490, "node_id": "MDQ6VXNlcjUyNzQ0OTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/5274490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/louisquinn", "html_url": "https://github.com/louisquinn", "followers_url": "https://api.github.com/users/louisquinn/followers", "following_url": "https://api.github.com/users/louisquinn/following{/other_user}", "gists_url": "https://api.github.com/users/louisquinn/gists{/gist_id}", "starred_url": "https://api.github.com/users/louisquinn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/louisquinn/subscriptions", "organizations_url": "https://api.github.com/users/louisquinn/orgs", "repos_url": "https://api.github.com/users/louisquinn/repos", "events_url": "https://api.github.com/users/louisquinn/events{/privacy}", "received_events_url": "https://api.github.com/users/louisquinn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "petewarden", "id": 161459, "node_id": "MDQ6VXNlcjE2MTQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/161459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petewarden", "html_url": "https://github.com/petewarden", "followers_url": "https://api.github.com/users/petewarden/followers", "following_url": "https://api.github.com/users/petewarden/following{/other_user}", "gists_url": "https://api.github.com/users/petewarden/gists{/gist_id}", "starred_url": "https://api.github.com/users/petewarden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petewarden/subscriptions", "organizations_url": "https://api.github.com/users/petewarden/orgs", "repos_url": "https://api.github.com/users/petewarden/repos", "events_url": "https://api.github.com/users/petewarden/events{/privacy}", "received_events_url": "https://api.github.com/users/petewarden/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "petewarden", "id": 161459, "node_id": "MDQ6VXNlcjE2MTQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/161459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petewarden", "html_url": "https://github.com/petewarden", "followers_url": "https://api.github.com/users/petewarden/followers", "following_url": "https://api.github.com/users/petewarden/following{/other_user}", "gists_url": "https://api.github.com/users/petewarden/gists{/gist_id}", "starred_url": "https://api.github.com/users/petewarden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petewarden/subscriptions", "organizations_url": "https://api.github.com/users/petewarden/orgs", "repos_url": "https://api.github.com/users/petewarden/repos", "events_url": "https://api.github.com/users/petewarden/events{/privacy}", "received_events_url": "https://api.github.com/users/petewarden/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2018-03-21T03:44:42Z", "updated_at": "2018-05-11T05:39:07Z", "closed_at": "2018-05-03T00:47:28Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes see gist (change line 6 to object detection frozen inference graph path): <a href=\"https://gist.github.com/louisquinn/0c6729a32e87e899ece317de84d02acc\">https://gist.github.com/louisquinn/0c6729a32e87e899ece317de84d02acc</a></li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: Source</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.7</li>\n<li><strong>Python version</strong>: 3.5</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.11.1</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: 5.4.0</li>\n<li><strong>CUDA/cuDNN version</strong>: CUDA 9.0 / cuDNN 7.1</li>\n<li><strong>GPU model and memory</strong>: GTX 1080 8GB</li>\n<li><strong>Exact command to reproduce</strong>: See gist (change line 6 to object detection frozen inference graph path): <a href=\"https://gist.github.com/louisquinn/0c6729a32e87e899ece317de84d02acc\">https://gist.github.com/louisquinn/0c6729a32e87e899ece317de84d02acc</a></li>\n</ul>\n<h3>Describe the problem</h3>\n<p>Getting the following error when calling <code>trt.create_inference_graph</code> (see line 18 of gist):<br>\n<code>tensorflow/contrib/tensorrt/convert/convert_nodes.cc:2503] Non-OK-status: ConvertDType(tf_dtype, &amp;dtype) status: Invalid argument: Unsupported data type int32</code></p>\n<p>Is int32 not supported by TensorRT, not yet implemented in the Tensorflow wrap, or am I doing something incorrect? This happens with all pre-trained TF Object Detection models.</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes see gist (change line 6 to object detection frozen inference graph path): https://gist.github.com/louisquinn/0c6729a32e87e899ece317de84d02acc\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): 16.04\nTensorFlow installed from (source or binary): Source\nTensorFlow version (use command below): 1.7\nPython version: 3.5\nBazel version (if compiling from source): 0.11.1\nGCC/Compiler version (if compiling from source): 5.4.0\nCUDA/cuDNN version: CUDA 9.0 / cuDNN 7.1\nGPU model and memory: GTX 1080 8GB\nExact command to reproduce: See gist (change line 6 to object detection frozen inference graph path): https://gist.github.com/louisquinn/0c6729a32e87e899ece317de84d02acc\n\nDescribe the problem\nGetting the following error when calling trt.create_inference_graph (see line 18 of gist):\ntensorflow/contrib/tensorrt/convert/convert_nodes.cc:2503] Non-OK-status: ConvertDType(tf_dtype, &dtype) status: Invalid argument: Unsupported data type int32\nIs int32 not supported by TensorRT, not yet implemented in the Tensorflow wrap, or am I doing something incorrect? This happens with all pre-trained TF Object Detection models.", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes see gist (change line 6 to object detection frozen inference graph path): https://gist.github.com/louisquinn/0c6729a32e87e899ece317de84d02acc\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: 16.04\r\n- **TensorFlow installed from (source or binary)**: Source\r\n- **TensorFlow version (use command below)**: 1.7\r\n- **Python version**: 3.5\r\n- **Bazel version (if compiling from source)**: 0.11.1\r\n- **GCC/Compiler version (if compiling from source)**: 5.4.0\r\n- **CUDA/cuDNN version**: CUDA 9.0 / cuDNN 7.1\r\n- **GPU model and memory**: GTX 1080 8GB\r\n- **Exact command to reproduce**: See gist (change line 6 to object detection frozen inference graph path): https://gist.github.com/louisquinn/0c6729a32e87e899ece317de84d02acc\r\n\r\n### Describe the problem\r\nGetting the following error when calling `trt.create_inference_graph` (see line 18 of gist):\r\n`tensorflow/contrib/tensorrt/convert/convert_nodes.cc:2503] Non-OK-status: ConvertDType(tf_dtype, &dtype) status: Invalid argument: Unsupported data type int32`\r\n\r\nIs int32 not supported by TensorRT, not yet implemented in the Tensorflow wrap, or am I doing something incorrect? This happens with all pre-trained TF Object Detection models. "}