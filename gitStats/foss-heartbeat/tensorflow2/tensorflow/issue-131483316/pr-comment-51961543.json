{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/51961543", "pull_request_review_id": null, "id": 51961543, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTYxNTQz", "diff_hunk": "@@ -0,0 +1,204 @@\n+#!/usr/bin/env bash\n+# Copyright 2016 Google Inc. All Rights Reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ==============================================================================\n+#\n+# Usage:\n+#   ci_parameterized_build.sh\n+#\n+# The script obeys the following required environment variables:\n+#   TF_BUILD_CONTAINER_TYPE:   (CPU | GPU | ANDROID)\n+#   TF_BUILD_PYTHON_VERSION:   (PYTHON2 | PYTHON3)\n+#   TF_BUILD_IS_OPT:           (NO_OPT | OPT)\n+#   TF_BUILD_IS_PIP:           (NO_PIP | PIP)\n+#\n+# Note: certain combinations of parameter values are regarded\n+# as invalid and will cause the script to exit with code 0. For example:\n+#   NO_OPT & PIP     (PIP builds should always use OPT)\n+#   ANDROID & PIP    (Android and PIP builds are mutually exclusive)\n+#\n+# Additionally, the script follows the directions of optional environment\n+# variables:\n+#   TF_BUILD_DRY_RUN:  If it is set to any non-empty value that is not \"0\",\n+#                      the script will just generate and print the final\n+#                      command, but not actually run it.\n+#   TF_BUILD_APPEND_CI_DOCKER_EXTRA_PARAMS:\n+#                      String appended to the content of CI_DOCKER_EXTRA_PARAMS\n+#   TF_BUILD_APPEND_ARGUMENTS:\n+#                      Additional command line arguments for the bazel,\n+#                      pip.sh or android.sh command\n+#   TF_BUILD_BAZEL_TARGET:\n+#                      Used to override the default bazel build target:\n+#                      //tensorflow/...\n+#\n+# This script can be used by Jenkins parameterized / matrix builds.\n+\n+# Helper function: Convert to lower case\n+to_lower () {\n+  echo \"$1\" | tr '[:upper:]' '[:lower:]'\n+}\n+\n+# Helper function: Strip leading and trailing whitespaces\n+str_strip () {\n+  echo -e \"$1\" | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'\n+}\n+\n+\n+##########################################################\n+# Default configuration\n+CI_BUILD_DIR=\"tensorflow/tools/ci_build\"\n+\n+# Command to call when Docker is available\n+DOCKER_MAIN_CMD=\"${CI_BUILD_DIR}/ci_build.sh\"\n+# Command to call when Docker is unavailable\n+NO_DOCKER_MAIN_CMD=\"${CI_BUILD_DIR}/builds/configured\"\n+\n+# Additional option flags to apply when Docker is unavailable (e.g., on Mac)\n+NO_DOCKER_OPT_FLAG=\"-j 1 --genrule_strategy=standalone \"\\\n+\"--linkopt=-headerpad_max_install_names\"\n+\n+BAZEL_CMD=\"bazel test\"\n+PIP_CMD=\"${CI_BUILD_DIR}/builds/pip.sh\"\n+ANDROID_CMD=\"${CI_BUILD_DIR}/builds/android.sh\"\n+\n+BAZEL_TARGET=\"//tensorflow/...\"\n+##########################################################\n+\n+# Convert all the required environment variables to lower case\n+TF_BUILD_CONTAINER_TYPE=$(to_lower ${TF_BUILD_CONTAINER_TYPE})\n+TF_BUILD_PYTHON_VERSION=$(to_lower ${TF_BUILD_PYTHON_VERSION})\n+TF_BUILD_IS_OPT=$(to_lower ${TF_BUILD_IS_OPT})\n+TF_BUILD_IS_PIP=$(to_lower ${TF_BUILD_IS_PIP})\n+\n+# Print parameter values\n+echo \"Required build parameters:\"\n+echo \"  TF_BUILD_CONTAINER_TYPE=${TF_BUILD_CONTAINER_TYPE}\"\n+echo \"  TF_BUILD_PYTHON_VERSION=${TF_BUILD_PYTHON_VERSION}\"\n+echo \"  TF_BUILD_IS_OPT=${TF_BUILD_IS_OPT}\"\n+echo \"  TF_BUILD_IS_PIP=${TF_BUILD_IS_PIP}\"\n+echo \"Optional build parameters:\"\n+echo \"  TF_BUILD_DRY_RUN=${TF_BUILD_DRY_RUN}\"\n+echo \"  TF_BUILD_APPEND_CI_DOCKER_EXTRA_PARAMS=\"\\\n+\"${TF_BUILD_APPEND_CI_DOCKER_EXTRA_PARAMS}\"\n+echo \"  TF_BUILD_APPEND_ARGUMENTS=${TF_BUILD_APPEND_ARGUMENTS}\"\n+echo \"  TF_BUILD_BAZEL_TARGET=${TF_BUILD_BAZEL_TARGET}\"\n+\n+# Process container type\n+CTYPE=${TF_BUILD_CONTAINER_TYPE}\n+OPT_FLAG=\"\"\n+if [[ ${CTYPE} == \"cpu\" ]]; then\n+  :\n+elif [[ ${CTYPE} == \"gpu\" ]]; then\n+  OPT_FLAG=\"--config=cuda\"\n+elif [[ ${CTYPE} == \"android\" ]]; then\n+  :\n+else\n+  echo \"Unrecognized value in TF_BUILD_CONTAINER_TYPE: \"\\\n+\"\\\"${TF_BUILD_CONTAINER_TYPE}\\\"\"\n+  exit 1\n+fi\n+\n+EXTRA_PARAMS=\"\"\n+\n+# Determine if Docker is available\n+MAIN_CMD=${DOCKER_MAIN_CMD}\n+if [[ -z \"$(which docker)\" ]]; then\n+  echo \"It appears that Docker is not available on this system. \"\\\n+\"Will perform build without Docker.\"\n+  echo \"In addition, the additional option flags will be applied to the build:\"\n+  echo \"  ${NO_DOCKER_OPT_FLAG}\"\n+  MAIN_CMD=${NO_DOCKER_MAIN_CMD}\n+  OPT_FLAG=\"${OPT_FLAG} ${NO_DOCKER_OPT_FLAG}\"\n+\n+elif [[ ${CTYPE} == \"gpu\" ]]; then  # Docker GPU: Map devices and libraries\n+  CUDA_DEVICES=$(ls /dev/nvidia* | xargs -I{} echo '--device {}:{}' | xargs)", "path": "tensorflow/tools/ci_build/ci_parameterized_build.sh", "position": null, "original_position": 125, "commit_id": "84a6dfd7f28b29ddd513811ef48d7ed82b2d7e65", "original_commit_id": "64a334fb6f71fb9d30e0baa35d8e8681be404159", "user": {"login": "jendap", "id": 567848, "node_id": "MDQ6VXNlcjU2Nzg0OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/567848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jendap", "html_url": "https://github.com/jendap", "followers_url": "https://api.github.com/users/jendap/followers", "following_url": "https://api.github.com/users/jendap/following{/other_user}", "gists_url": "https://api.github.com/users/jendap/gists{/gist_id}", "starred_url": "https://api.github.com/users/jendap/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jendap/subscriptions", "organizations_url": "https://api.github.com/users/jendap/orgs", "repos_url": "https://api.github.com/users/jendap/repos", "events_url": "https://api.github.com/users/jendap/events{/privacy}", "received_events_url": "https://api.github.com/users/jendap/received_events", "type": "User", "site_admin": false}, "body": "You do not have to do this. It is already in ci_build.sh\n", "created_at": "2016-02-05T00:38:25Z", "updated_at": "2016-02-05T21:48:51Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/998#discussion_r51961543", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/998", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/51961543"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/998#discussion_r51961543"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/998"}}, "body_html": "<p>You do not have to do this. It is already in ci_build.sh</p>", "body_text": "You do not have to do this. It is already in ci_build.sh"}