{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/315810461", "html_url": "https://github.com/tensorflow/tensorflow/issues/11195#issuecomment-315810461", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11195", "id": 315810461, "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTgxMDQ2MQ==", "user": {"login": "vrv", "id": 463737, "node_id": "MDQ6VXNlcjQ2MzczNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/463737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vrv", "html_url": "https://github.com/vrv", "followers_url": "https://api.github.com/users/vrv/followers", "following_url": "https://api.github.com/users/vrv/following{/other_user}", "gists_url": "https://api.github.com/users/vrv/gists{/gist_id}", "starred_url": "https://api.github.com/users/vrv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vrv/subscriptions", "organizations_url": "https://api.github.com/users/vrv/orgs", "repos_url": "https://api.github.com/users/vrv/repos", "events_url": "https://api.github.com/users/vrv/events{/privacy}", "received_events_url": "https://api.github.com/users/vrv/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-17T16:44:39Z", "updated_at": "2017-07-17T16:44:39Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Reposting what I said on another PR, so it's centralized in one place.  This is a good feature request for a flags library.</p>\n<p>Some background is probably warranted though: TF's flags library is an API port of an internal flags library at Google that I believe predated argparse. The flags library's existence is solely to make it easier to opensource internal code, since flags.py's API is used throughout Google internally. But argparse is more than sufficient for most opensource use cases, so I would like to avoid changing the existing flags API, even to enhance it.</p>\n<p>Furthermore, I believe there are efforts to opensource the internal flags library, which already has this feature of marking flags as required via an explicit call to mark flags as required, and rather than introduce a new API that is incompatible with the internal one, I think it would be a good idea to wait for that library to be released. If it's the case that several months go by and that library is not released, let's revisit this PR and perhaps plan to make it API compatible with that library.</p>\n<p>I'm following up with the authors internally to see whether we should go ahead and add the API to the tf version in the short term.</p>", "body_text": "Reposting what I said on another PR, so it's centralized in one place.  This is a good feature request for a flags library.\nSome background is probably warranted though: TF's flags library is an API port of an internal flags library at Google that I believe predated argparse. The flags library's existence is solely to make it easier to opensource internal code, since flags.py's API is used throughout Google internally. But argparse is more than sufficient for most opensource use cases, so I would like to avoid changing the existing flags API, even to enhance it.\nFurthermore, I believe there are efforts to opensource the internal flags library, which already has this feature of marking flags as required via an explicit call to mark flags as required, and rather than introduce a new API that is incompatible with the internal one, I think it would be a good idea to wait for that library to be released. If it's the case that several months go by and that library is not released, let's revisit this PR and perhaps plan to make it API compatible with that library.\nI'm following up with the authors internally to see whether we should go ahead and add the API to the tf version in the short term.", "body": "Reposting what I said on another PR, so it's centralized in one place.  This is a good feature request for a flags library.\r\n\r\nSome background is probably warranted though: TF's flags library is an API port of an internal flags library at Google that I believe predated argparse. The flags library's existence is solely to make it easier to opensource internal code, since flags.py's API is used throughout Google internally. But argparse is more than sufficient for most opensource use cases, so I would like to avoid changing the existing flags API, even to enhance it.\r\n\r\nFurthermore, I believe there are efforts to opensource the internal flags library, which already has this feature of marking flags as required via an explicit call to mark flags as required, and rather than introduce a new API that is incompatible with the internal one, I think it would be a good idea to wait for that library to be released. If it's the case that several months go by and that library is not released, let's revisit this PR and perhaps plan to make it API compatible with that library.\r\n\r\nI'm following up with the authors internally to see whether we should go ahead and add the API to the tf version in the short term."}