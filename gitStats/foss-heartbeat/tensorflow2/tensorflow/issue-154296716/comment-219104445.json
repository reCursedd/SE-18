{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/219104445", "html_url": "https://github.com/tensorflow/tensorflow/issues/2328#issuecomment-219104445", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2328", "id": 219104445, "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTEwNDQ0NQ==", "user": {"login": "vladfi1", "id": 691536, "node_id": "MDQ6VXNlcjY5MTUzNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/691536?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vladfi1", "html_url": "https://github.com/vladfi1", "followers_url": "https://api.github.com/users/vladfi1/followers", "following_url": "https://api.github.com/users/vladfi1/following{/other_user}", "gists_url": "https://api.github.com/users/vladfi1/gists{/gist_id}", "starred_url": "https://api.github.com/users/vladfi1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vladfi1/subscriptions", "organizations_url": "https://api.github.com/users/vladfi1/orgs", "repos_url": "https://api.github.com/users/vladfi1/repos", "events_url": "https://api.github.com/users/vladfi1/events{/privacy}", "received_events_url": "https://api.github.com/users/vladfi1/received_events", "type": "User", "site_admin": false}, "created_at": "2016-05-13T17:16:03Z", "updated_at": "2016-05-13T17:16:03Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6673605\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/rdadolf\">@rdadolf</a> I don't see why type errors become logical errors - they'll just point to the nested object instead of the root. In any case, the current behavior allows both python objects and tensors, just not mixed - I assume this is done with an implicit call to <code>convert_to_tensor</code>, so any improvements to <code>convert_to_tensor</code> should carry over to all its use-sites.</p>", "body_text": "@rdadolf I don't see why type errors become logical errors - they'll just point to the nested object instead of the root. In any case, the current behavior allows both python objects and tensors, just not mixed - I assume this is done with an implicit call to convert_to_tensor, so any improvements to convert_to_tensor should carry over to all its use-sites.", "body": "@rdadolf I don't see why type errors become logical errors - they'll just point to the nested object instead of the root. In any case, the current behavior allows both python objects and tensors, just not mixed - I assume this is done with an implicit call to `convert_to_tensor`, so any improvements to `convert_to_tensor` should carry over to all its use-sites.\n"}