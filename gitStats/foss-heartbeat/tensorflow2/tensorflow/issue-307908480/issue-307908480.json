{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17944", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17944/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17944/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17944/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17944", "id": 307908480, "node_id": "MDU6SXNzdWUzMDc5MDg0ODA=", "number": 17944, "title": "App getting crashed while using USB Camera", "user": {"login": "deval1491", "id": 29880536, "node_id": "MDQ6VXNlcjI5ODgwNTM2", "avatar_url": "https://avatars3.githubusercontent.com/u/29880536?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deval1491", "html_url": "https://github.com/deval1491", "followers_url": "https://api.github.com/users/deval1491/followers", "following_url": "https://api.github.com/users/deval1491/following{/other_user}", "gists_url": "https://api.github.com/users/deval1491/gists{/gist_id}", "starred_url": "https://api.github.com/users/deval1491/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deval1491/subscriptions", "organizations_url": "https://api.github.com/users/deval1491/orgs", "repos_url": "https://api.github.com/users/deval1491/repos", "events_url": "https://api.github.com/users/deval1491/events{/privacy}", "received_events_url": "https://api.github.com/users/deval1491/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 750616506, "node_id": "MDU6TGFiZWw3NTA2MTY1MDY=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:lite", "name": "comp:lite", "color": "0052cc", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "miaout17", "id": 22063, "node_id": "MDQ6VXNlcjIyMDYz", "avatar_url": "https://avatars0.githubusercontent.com/u/22063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miaout17", "html_url": "https://github.com/miaout17", "followers_url": "https://api.github.com/users/miaout17/followers", "following_url": "https://api.github.com/users/miaout17/following{/other_user}", "gists_url": "https://api.github.com/users/miaout17/gists{/gist_id}", "starred_url": "https://api.github.com/users/miaout17/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miaout17/subscriptions", "organizations_url": "https://api.github.com/users/miaout17/orgs", "repos_url": "https://api.github.com/users/miaout17/repos", "events_url": "https://api.github.com/users/miaout17/events{/privacy}", "received_events_url": "https://api.github.com/users/miaout17/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "miaout17", "id": 22063, "node_id": "MDQ6VXNlcjIyMDYz", "avatar_url": "https://avatars0.githubusercontent.com/u/22063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miaout17", "html_url": "https://github.com/miaout17", "followers_url": "https://api.github.com/users/miaout17/followers", "following_url": "https://api.github.com/users/miaout17/following{/other_user}", "gists_url": "https://api.github.com/users/miaout17/gists{/gist_id}", "starred_url": "https://api.github.com/users/miaout17/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miaout17/subscriptions", "organizations_url": "https://api.github.com/users/miaout17/orgs", "repos_url": "https://api.github.com/users/miaout17/repos", "events_url": "https://api.github.com/users/miaout17/events{/privacy}", "received_events_url": "https://api.github.com/users/miaout17/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 12, "created_at": "2018-03-23T05:37:18Z", "updated_at": "2018-08-06T21:12:32Z", "closed_at": "2018-08-06T21:12:32Z", "author_association": "NONE", "body_html": "<p>OS Platform and Distribution: Ubuntu 14.04<br>\nTensorFlow installed from: Git cloned<br>\nTensorFlow version: N/A<br>\nBazel version: Build label: 0.11.1<br>\nCUDA/cuDNN version: N/A<br>\nGPU model and memory: x86 8GB RAM<br>\nExact command to reproduce: bazel build --cxxopt=--std=c++11 //tensorflow/contrib/lite/java/demo/app/src/main:TfLiteCameraDemo --config android --cpu=x86_64 --fat_apk_cpu=x86_64</p>\n<p>I think i am getting camera id null. is it because tensorflow uses camera2? if yes then how do i fix this issue?</p>\n<pre><code>03-23 05:21:14.646  2282  2282 W /system/bin/hwservicemanager: getTransport: Cannot find entry android.hardware.configstore@1.0::ISurfaceFlingerConfigs/default in either framework or device manifest.\n03-23 05:21:14.647 19595 19613 I com.example.android.tflitecamerademo: android::hardware::configstore::V1_0::ISurfaceFlingerConfigs::hasWideColorDisplay retrieved: 0\n03-23 05:21:14.647 19595 19613 I OpenGLRenderer: Initialized EGL, version 1.4\n03-23 05:21:14.647 19595 19613 D OpenGLRenderer: Swap behavior 2\n03-23 05:21:14.647 19595 19595 I RenderThread: type=1400 audit(0.0:310): avc: denied { map } for path=2F69393135202864656C6574656429 dev=\"tmpfs\" ino=918453 scontext=u:r:untrusted_app_25:s0:c512,c768 tcontext=u:object_r:untrusted_app_25_tmpfs:s0:c512,c768 tclass=file permissive=1\n03-23 05:21:14.651 19595 19595 I CameraManagerGlobal: Connecting to camera service\n03-23 05:21:14.652 19595 19595 D AndroidRuntime: Shutting down VM\n--------- beginning of crash\n03-23 05:21:14.652 19595 19595 E AndroidRuntime: FATAL EXCEPTION: main\n03-23 05:21:14.652 19595 19595 E AndroidRuntime: Process: com.example.android.tflitecamerademo, PID: 19595\n03-23 05:21:14.652 19595 19595 E AndroidRuntime: java.lang.IllegalArgumentException: cameraId was null\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.hardware.camera2.CameraManager.openCameraForUid(CameraManager.java:457)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.hardware.camera2.CameraManager.openCamera(CameraManager.java:433)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at com.example.android.tflitecamerademo.Camera2BasicFragment.openCamera(Camera2BasicFragment.java:479)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at com.example.android.tflitecamerademo.Camera2BasicFragment.access$000(Camera2BasicFragment.java:69)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at com.example.android.tflitecamerademo.Camera2BasicFragment$1.onSurfaceTextureAvailable(Camera2BasicFragment.java:102)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.TextureView.getHardwareLayer(TextureView.java:390)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.TextureView.draw(TextureView.java:339)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.updateDisplayListIfDirty(View.java:18142)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.draw(View.java:18920)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewGroup.drawChild(ViewGroup.java:4236)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewGroup.dispatchDraw(ViewGroup.java:4022)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.updateDisplayListIfDirty(View.java:18133)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.draw(View.java:18920)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewGroup.drawChild(ViewGroup.java:4236)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewGroup.dispatchDraw(ViewGroup.java:4022)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.draw(View.java:19195)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.updateDisplayListIfDirty(View.java:18142)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.draw(View.java:18920)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewGroup.drawChild(ViewGroup.java:4236)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewGroup.dispatchDraw(ViewGroup.java:4022)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.updateDisplayListIfDirty(View.java:18133)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.draw(View.java:18920)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewGroup.drawChild(ViewGroup.java:4236)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewGroup.dispatchDraw(ViewGroup.java:4022)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.updateDisplayListIfDirty(View.java:18133)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.draw(View.java:18920)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewGroup.drawChild(ViewGroup.java:4236)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewGroup.dispatchDraw(ViewGroup.java:4022)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.draw(View.java:19195)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.updateDisplayListIfDirty(View.java:18142)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.draw(View.java:18920)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewGroup.drawChild(ViewGroup.java:4236)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewGroup.dispatchDraw(ViewGroup.java:4022)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.updateDisplayListIfDirty(View.java:18133)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.draw(View.java:18920)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewGroup.drawChild(ViewGroup.java:4236)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewGroup.dispatchDraw(ViewGroup.java:4022)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.updateDisplayListIfDirty(View.java:18133)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.draw(View.java:18920)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewGroup.drawChild(ViewGroup.java:4236)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewGroup.dispatchDraw(ViewGroup.java:4022)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.draw(View.java:19195)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at com.android.internal.policy.DecorView.draw(DecorView.java:788)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.updateDisplayListIfDirty(View.java:18142)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ThreadedRenderer.updateViewTreeDisplayList(ThreadedRenderer.java:669)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ThreadedRenderer.updateRootDisplayList(ThreadedRenderer.java:675)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ThreadedRenderer.draw(ThreadedRenderer.java:783)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewRootImpl.draw(ViewRootImpl.java:2992)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewRootImpl.performDraw(ViewRootImpl.java:2806)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewRootImpl.performTraversals(ViewRootImpl.java:2359)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewRootImpl.doTraversal(ViewRootImpl.java:1392)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewRootImpl$TraversalRunnable.run(ViewRootImpl.java:6752)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.Choreographer$CallbackRecord.run(Choreographer.java:911)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.Choreographer.doCallbacks(Choreographer.java:723)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.Choreographer.doFrame(Choreographer.java:658)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:897)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.os.Handler.handleCallback(Handler.java:790)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.os.Handler.dispatchMessage(Handler.java:99)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.os.Looper.loop(Looper.java:164)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.app.ActivityThread.main(ActivityThread.java:6494)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at java.lang.reflect.Method.invoke(Native Method)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:438)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:807)\n03-23 05:21:14.653 15691 16933 W ActivityManager:   Force finishing activity com.example.android.tflitecamerademo/.CameraActivity\n03-23 05:21:14.654 15691 16933 W ActivityManager:   Force finishing activity com.android.settings/.Settings\n03-23 05:21:14.655 15691 16933 I ActivityManager: Killing 16856:com.google.android.partnersetup/u0a23 (adj 906): empty #17\n03-23 05:21:14.655 15691 15712 W system_server: kill(-16856, 9) failed: No such process\n03-23 05:21:14.656  2503  2503 D CRASHLOG: sdcard_allowed : Current crashlog mode is NOMINAL MODE - SDCard storage disabled.\n03-23 05:21:14.659 15691 18236 I ActivityManager: START u0 {act=android.intent.action.MAIN cat=[android.intent.category.HOME] flg=0x10000100 cmp=com.android.support.car.lenspicker/.LensPickerTrampolineActivity} from uid 0\n03-23 05:21:14.660 19595 19595 I Process : Sending signal. PID: 19595 SIG: 9\n03-23 05:21:14.674 15691 15758 W InputDispatcher: channel '656c0d6 com.example.android.tflitecamerademo/com.example.android.tflitecamerademo.CameraActivity (server)' ~ Consumer closed input channel or an error occurred.  events=0x9\n03-23 05:21:14.674 15691 15758 E InputDispatcher: channel '656c0d6 com.example.android.tflitecamerademo/com.example.android.tflitecamerademo.CameraActivity (server)' ~ Channel is unrecoverably broken and will be disposed!\n03-23 05:21:14.674 15691 16917 I ActivityManager: Process com.example.android.tflitecamerademo (pid 19595) has died: vis  +99TOP\n03-23 05:21:14.674 15691 16480 I WindowManager: WIN DEATH: Window{656c0d6 u0 com.example.android.tflitecamerademo/com.example.android.tflitecamerademo.CameraActivity}\n03-23 05:21:14.674 15691 16480 W InputDispatcher: Attempted to unregister already unregistered input channel '656c0d6 com.example.android.tflitecamerademo/com.example.android.tflitecamerademo.CameraActivity (server)'\n03-23 05:21:14.676 15691 15717 W ActivityManager: setHasOverlayUi called on unknown pid: 19595\n03-23 05:21:14.681 15691 18187 I ActivityManager: START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10000000 pkg=com.android.settings cmp=com.android.settings/.Settings} from uid 10048\n</code></pre>", "body_text": "OS Platform and Distribution: Ubuntu 14.04\nTensorFlow installed from: Git cloned\nTensorFlow version: N/A\nBazel version: Build label: 0.11.1\nCUDA/cuDNN version: N/A\nGPU model and memory: x86 8GB RAM\nExact command to reproduce: bazel build --cxxopt=--std=c++11 //tensorflow/contrib/lite/java/demo/app/src/main:TfLiteCameraDemo --config android --cpu=x86_64 --fat_apk_cpu=x86_64\nI think i am getting camera id null. is it because tensorflow uses camera2? if yes then how do i fix this issue?\n03-23 05:21:14.646  2282  2282 W /system/bin/hwservicemanager: getTransport: Cannot find entry android.hardware.configstore@1.0::ISurfaceFlingerConfigs/default in either framework or device manifest.\n03-23 05:21:14.647 19595 19613 I com.example.android.tflitecamerademo: android::hardware::configstore::V1_0::ISurfaceFlingerConfigs::hasWideColorDisplay retrieved: 0\n03-23 05:21:14.647 19595 19613 I OpenGLRenderer: Initialized EGL, version 1.4\n03-23 05:21:14.647 19595 19613 D OpenGLRenderer: Swap behavior 2\n03-23 05:21:14.647 19595 19595 I RenderThread: type=1400 audit(0.0:310): avc: denied { map } for path=2F69393135202864656C6574656429 dev=\"tmpfs\" ino=918453 scontext=u:r:untrusted_app_25:s0:c512,c768 tcontext=u:object_r:untrusted_app_25_tmpfs:s0:c512,c768 tclass=file permissive=1\n03-23 05:21:14.651 19595 19595 I CameraManagerGlobal: Connecting to camera service\n03-23 05:21:14.652 19595 19595 D AndroidRuntime: Shutting down VM\n--------- beginning of crash\n03-23 05:21:14.652 19595 19595 E AndroidRuntime: FATAL EXCEPTION: main\n03-23 05:21:14.652 19595 19595 E AndroidRuntime: Process: com.example.android.tflitecamerademo, PID: 19595\n03-23 05:21:14.652 19595 19595 E AndroidRuntime: java.lang.IllegalArgumentException: cameraId was null\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.hardware.camera2.CameraManager.openCameraForUid(CameraManager.java:457)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.hardware.camera2.CameraManager.openCamera(CameraManager.java:433)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at com.example.android.tflitecamerademo.Camera2BasicFragment.openCamera(Camera2BasicFragment.java:479)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at com.example.android.tflitecamerademo.Camera2BasicFragment.access$000(Camera2BasicFragment.java:69)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at com.example.android.tflitecamerademo.Camera2BasicFragment$1.onSurfaceTextureAvailable(Camera2BasicFragment.java:102)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.TextureView.getHardwareLayer(TextureView.java:390)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.TextureView.draw(TextureView.java:339)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.updateDisplayListIfDirty(View.java:18142)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.draw(View.java:18920)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewGroup.drawChild(ViewGroup.java:4236)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewGroup.dispatchDraw(ViewGroup.java:4022)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.updateDisplayListIfDirty(View.java:18133)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.draw(View.java:18920)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewGroup.drawChild(ViewGroup.java:4236)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewGroup.dispatchDraw(ViewGroup.java:4022)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.draw(View.java:19195)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.updateDisplayListIfDirty(View.java:18142)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.draw(View.java:18920)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewGroup.drawChild(ViewGroup.java:4236)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewGroup.dispatchDraw(ViewGroup.java:4022)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.updateDisplayListIfDirty(View.java:18133)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.draw(View.java:18920)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewGroup.drawChild(ViewGroup.java:4236)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewGroup.dispatchDraw(ViewGroup.java:4022)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.updateDisplayListIfDirty(View.java:18133)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.draw(View.java:18920)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewGroup.drawChild(ViewGroup.java:4236)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewGroup.dispatchDraw(ViewGroup.java:4022)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.draw(View.java:19195)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.updateDisplayListIfDirty(View.java:18142)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.draw(View.java:18920)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewGroup.drawChild(ViewGroup.java:4236)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewGroup.dispatchDraw(ViewGroup.java:4022)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.updateDisplayListIfDirty(View.java:18133)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.draw(View.java:18920)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewGroup.drawChild(ViewGroup.java:4236)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewGroup.dispatchDraw(ViewGroup.java:4022)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.updateDisplayListIfDirty(View.java:18133)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.draw(View.java:18920)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewGroup.drawChild(ViewGroup.java:4236)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewGroup.dispatchDraw(ViewGroup.java:4022)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.draw(View.java:19195)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at com.android.internal.policy.DecorView.draw(DecorView.java:788)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.updateDisplayListIfDirty(View.java:18142)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ThreadedRenderer.updateViewTreeDisplayList(ThreadedRenderer.java:669)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ThreadedRenderer.updateRootDisplayList(ThreadedRenderer.java:675)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ThreadedRenderer.draw(ThreadedRenderer.java:783)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewRootImpl.draw(ViewRootImpl.java:2992)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewRootImpl.performDraw(ViewRootImpl.java:2806)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewRootImpl.performTraversals(ViewRootImpl.java:2359)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewRootImpl.doTraversal(ViewRootImpl.java:1392)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewRootImpl$TraversalRunnable.run(ViewRootImpl.java:6752)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.Choreographer$CallbackRecord.run(Choreographer.java:911)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.Choreographer.doCallbacks(Choreographer.java:723)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.Choreographer.doFrame(Choreographer.java:658)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:897)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.os.Handler.handleCallback(Handler.java:790)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.os.Handler.dispatchMessage(Handler.java:99)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.os.Looper.loop(Looper.java:164)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.app.ActivityThread.main(ActivityThread.java:6494)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at java.lang.reflect.Method.invoke(Native Method)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:438)\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:807)\n03-23 05:21:14.653 15691 16933 W ActivityManager:   Force finishing activity com.example.android.tflitecamerademo/.CameraActivity\n03-23 05:21:14.654 15691 16933 W ActivityManager:   Force finishing activity com.android.settings/.Settings\n03-23 05:21:14.655 15691 16933 I ActivityManager: Killing 16856:com.google.android.partnersetup/u0a23 (adj 906): empty #17\n03-23 05:21:14.655 15691 15712 W system_server: kill(-16856, 9) failed: No such process\n03-23 05:21:14.656  2503  2503 D CRASHLOG: sdcard_allowed : Current crashlog mode is NOMINAL MODE - SDCard storage disabled.\n03-23 05:21:14.659 15691 18236 I ActivityManager: START u0 {act=android.intent.action.MAIN cat=[android.intent.category.HOME] flg=0x10000100 cmp=com.android.support.car.lenspicker/.LensPickerTrampolineActivity} from uid 0\n03-23 05:21:14.660 19595 19595 I Process : Sending signal. PID: 19595 SIG: 9\n03-23 05:21:14.674 15691 15758 W InputDispatcher: channel '656c0d6 com.example.android.tflitecamerademo/com.example.android.tflitecamerademo.CameraActivity (server)' ~ Consumer closed input channel or an error occurred.  events=0x9\n03-23 05:21:14.674 15691 15758 E InputDispatcher: channel '656c0d6 com.example.android.tflitecamerademo/com.example.android.tflitecamerademo.CameraActivity (server)' ~ Channel is unrecoverably broken and will be disposed!\n03-23 05:21:14.674 15691 16917 I ActivityManager: Process com.example.android.tflitecamerademo (pid 19595) has died: vis  +99TOP\n03-23 05:21:14.674 15691 16480 I WindowManager: WIN DEATH: Window{656c0d6 u0 com.example.android.tflitecamerademo/com.example.android.tflitecamerademo.CameraActivity}\n03-23 05:21:14.674 15691 16480 W InputDispatcher: Attempted to unregister already unregistered input channel '656c0d6 com.example.android.tflitecamerademo/com.example.android.tflitecamerademo.CameraActivity (server)'\n03-23 05:21:14.676 15691 15717 W ActivityManager: setHasOverlayUi called on unknown pid: 19595\n03-23 05:21:14.681 15691 18187 I ActivityManager: START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10000000 pkg=com.android.settings cmp=com.android.settings/.Settings} from uid 10048", "body": "OS Platform and Distribution: Ubuntu 14.04\r\nTensorFlow installed from: Git cloned\r\nTensorFlow version: N/A\r\nBazel version: Build label: 0.11.1\r\nCUDA/cuDNN version: N/A\r\nGPU model and memory: x86 8GB RAM\r\nExact command to reproduce: bazel build --cxxopt=--std=c++11 //tensorflow/contrib/lite/java/demo/app/src/main:TfLiteCameraDemo --config android --cpu=x86_64 --fat_apk_cpu=x86_64\r\n\r\nI think i am getting camera id null. is it because tensorflow uses camera2? if yes then how do i fix this issue?\r\n\r\n```\r\n03-23 05:21:14.646  2282  2282 W /system/bin/hwservicemanager: getTransport: Cannot find entry android.hardware.configstore@1.0::ISurfaceFlingerConfigs/default in either framework or device manifest.\r\n03-23 05:21:14.647 19595 19613 I com.example.android.tflitecamerademo: android::hardware::configstore::V1_0::ISurfaceFlingerConfigs::hasWideColorDisplay retrieved: 0\r\n03-23 05:21:14.647 19595 19613 I OpenGLRenderer: Initialized EGL, version 1.4\r\n03-23 05:21:14.647 19595 19613 D OpenGLRenderer: Swap behavior 2\r\n03-23 05:21:14.647 19595 19595 I RenderThread: type=1400 audit(0.0:310): avc: denied { map } for path=2F69393135202864656C6574656429 dev=\"tmpfs\" ino=918453 scontext=u:r:untrusted_app_25:s0:c512,c768 tcontext=u:object_r:untrusted_app_25_tmpfs:s0:c512,c768 tclass=file permissive=1\r\n03-23 05:21:14.651 19595 19595 I CameraManagerGlobal: Connecting to camera service\r\n03-23 05:21:14.652 19595 19595 D AndroidRuntime: Shutting down VM\r\n--------- beginning of crash\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime: FATAL EXCEPTION: main\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime: Process: com.example.android.tflitecamerademo, PID: 19595\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime: java.lang.IllegalArgumentException: cameraId was null\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.hardware.camera2.CameraManager.openCameraForUid(CameraManager.java:457)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.hardware.camera2.CameraManager.openCamera(CameraManager.java:433)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at com.example.android.tflitecamerademo.Camera2BasicFragment.openCamera(Camera2BasicFragment.java:479)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at com.example.android.tflitecamerademo.Camera2BasicFragment.access$000(Camera2BasicFragment.java:69)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at com.example.android.tflitecamerademo.Camera2BasicFragment$1.onSurfaceTextureAvailable(Camera2BasicFragment.java:102)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.TextureView.getHardwareLayer(TextureView.java:390)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.TextureView.draw(TextureView.java:339)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.updateDisplayListIfDirty(View.java:18142)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.draw(View.java:18920)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewGroup.drawChild(ViewGroup.java:4236)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewGroup.dispatchDraw(ViewGroup.java:4022)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.updateDisplayListIfDirty(View.java:18133)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.draw(View.java:18920)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewGroup.drawChild(ViewGroup.java:4236)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewGroup.dispatchDraw(ViewGroup.java:4022)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.draw(View.java:19195)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.updateDisplayListIfDirty(View.java:18142)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.draw(View.java:18920)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewGroup.drawChild(ViewGroup.java:4236)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewGroup.dispatchDraw(ViewGroup.java:4022)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.updateDisplayListIfDirty(View.java:18133)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.draw(View.java:18920)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewGroup.drawChild(ViewGroup.java:4236)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewGroup.dispatchDraw(ViewGroup.java:4022)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.updateDisplayListIfDirty(View.java:18133)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.draw(View.java:18920)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewGroup.drawChild(ViewGroup.java:4236)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewGroup.dispatchDraw(ViewGroup.java:4022)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.draw(View.java:19195)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.updateDisplayListIfDirty(View.java:18142)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.draw(View.java:18920)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewGroup.drawChild(ViewGroup.java:4236)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewGroup.dispatchDraw(ViewGroup.java:4022)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.updateDisplayListIfDirty(View.java:18133)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.draw(View.java:18920)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewGroup.drawChild(ViewGroup.java:4236)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewGroup.dispatchDraw(ViewGroup.java:4022)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.updateDisplayListIfDirty(View.java:18133)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.draw(View.java:18920)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewGroup.drawChild(ViewGroup.java:4236)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewGroup.dispatchDraw(ViewGroup.java:4022)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.draw(View.java:19195)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at com.android.internal.policy.DecorView.draw(DecorView.java:788)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.View.updateDisplayListIfDirty(View.java:18142)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ThreadedRenderer.updateViewTreeDisplayList(ThreadedRenderer.java:669)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ThreadedRenderer.updateRootDisplayList(ThreadedRenderer.java:675)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ThreadedRenderer.draw(ThreadedRenderer.java:783)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewRootImpl.draw(ViewRootImpl.java:2992)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewRootImpl.performDraw(ViewRootImpl.java:2806)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewRootImpl.performTraversals(ViewRootImpl.java:2359)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewRootImpl.doTraversal(ViewRootImpl.java:1392)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.ViewRootImpl$TraversalRunnable.run(ViewRootImpl.java:6752)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.Choreographer$CallbackRecord.run(Choreographer.java:911)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.Choreographer.doCallbacks(Choreographer.java:723)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.Choreographer.doFrame(Choreographer.java:658)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:897)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.os.Handler.handleCallback(Handler.java:790)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.os.Handler.dispatchMessage(Handler.java:99)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.os.Looper.loop(Looper.java:164)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at android.app.ActivityThread.main(ActivityThread.java:6494)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at java.lang.reflect.Method.invoke(Native Method)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:438)\r\n03-23 05:21:14.652 19595 19595 E AndroidRuntime:        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:807)\r\n03-23 05:21:14.653 15691 16933 W ActivityManager:   Force finishing activity com.example.android.tflitecamerademo/.CameraActivity\r\n03-23 05:21:14.654 15691 16933 W ActivityManager:   Force finishing activity com.android.settings/.Settings\r\n03-23 05:21:14.655 15691 16933 I ActivityManager: Killing 16856:com.google.android.partnersetup/u0a23 (adj 906): empty #17\r\n03-23 05:21:14.655 15691 15712 W system_server: kill(-16856, 9) failed: No such process\r\n03-23 05:21:14.656  2503  2503 D CRASHLOG: sdcard_allowed : Current crashlog mode is NOMINAL MODE - SDCard storage disabled.\r\n03-23 05:21:14.659 15691 18236 I ActivityManager: START u0 {act=android.intent.action.MAIN cat=[android.intent.category.HOME] flg=0x10000100 cmp=com.android.support.car.lenspicker/.LensPickerTrampolineActivity} from uid 0\r\n03-23 05:21:14.660 19595 19595 I Process : Sending signal. PID: 19595 SIG: 9\r\n03-23 05:21:14.674 15691 15758 W InputDispatcher: channel '656c0d6 com.example.android.tflitecamerademo/com.example.android.tflitecamerademo.CameraActivity (server)' ~ Consumer closed input channel or an error occurred.  events=0x9\r\n03-23 05:21:14.674 15691 15758 E InputDispatcher: channel '656c0d6 com.example.android.tflitecamerademo/com.example.android.tflitecamerademo.CameraActivity (server)' ~ Channel is unrecoverably broken and will be disposed!\r\n03-23 05:21:14.674 15691 16917 I ActivityManager: Process com.example.android.tflitecamerademo (pid 19595) has died: vis  +99TOP\r\n03-23 05:21:14.674 15691 16480 I WindowManager: WIN DEATH: Window{656c0d6 u0 com.example.android.tflitecamerademo/com.example.android.tflitecamerademo.CameraActivity}\r\n03-23 05:21:14.674 15691 16480 W InputDispatcher: Attempted to unregister already unregistered input channel '656c0d6 com.example.android.tflitecamerademo/com.example.android.tflitecamerademo.CameraActivity (server)'\r\n03-23 05:21:14.676 15691 15717 W ActivityManager: setHasOverlayUi called on unknown pid: 19595\r\n03-23 05:21:14.681 15691 18187 I ActivityManager: START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10000000 pkg=com.android.settings cmp=com.android.settings/.Settings} from uid 10048\r\n```"}