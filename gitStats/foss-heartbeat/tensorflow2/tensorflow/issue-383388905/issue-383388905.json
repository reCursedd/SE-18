{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23916", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23916/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23916/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23916/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/23916", "id": 383388905, "node_id": "MDU6SXNzdWUzODMzODg5MDU=", "number": 23916, "title": "tensorflow1.2/1.4 gpu with dbg version Eigen::GpuDevice::memory fail", "user": {"login": "zhenxin8916", "id": 7650719, "node_id": "MDQ6VXNlcjc2NTA3MTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/7650719?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhenxin8916", "html_url": "https://github.com/zhenxin8916", "followers_url": "https://api.github.com/users/zhenxin8916/followers", "following_url": "https://api.github.com/users/zhenxin8916/following{/other_user}", "gists_url": "https://api.github.com/users/zhenxin8916/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhenxin8916/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhenxin8916/subscriptions", "organizations_url": "https://api.github.com/users/zhenxin8916/orgs", "repos_url": "https://api.github.com/users/zhenxin8916/repos", "events_url": "https://api.github.com/users/zhenxin8916/events{/privacy}", "received_events_url": "https://api.github.com/users/zhenxin8916/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-11-22T05:46:52Z", "updated_at": "2018-11-22T05:46:52Z", "closed_at": null, "author_association": "NONE", "body_html": "<p><em>Please make sure that this is a bug. As per our <a href=\"https://github.com/tensorflow/tensorflow/blob/master/ISSUES.md\">GitHub Policy</a>, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template</em></p>\n<p><strong>System information</strong></p>\n<ul>\n<li>Have I written custom code (as opposed to using a stock example script provided in TensorFlow):</li>\n<li>OS Platform and Distribution (e.g., Linux Ubuntu 16.04): 14.04 or 16.04</li>\n<li>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:</li>\n<li>TensorFlow installed from (source or binary): source code build with gpu and dbg</li>\n<li>TensorFlow version (use command below): 1.2 or 1.4</li>\n<li>Python version: 2.7</li>\n<li>Bazel version (if compiling from source): 0.45 or 0.54</li>\n<li>GCC/Compiler version (if compiling from source): 4.8</li>\n<li>CUDA/cuDNN version: 8.0/5.1 or 8.0/6.0</li>\n<li>GPU model and memory:</li>\n</ul>\n<p>You can collect some of this information using our environment capture <a href=\"https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\">script</a><br>\nYou can also obtain the TensorFlow version with<br>\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"</p>\n<p><strong>Describe the current behavior</strong></p>\n<h2>I build the tensorflow1.4 with gpu and -c dbg version, but when run test code or some example, meet cuda memcpy failed, but if you build with -c opt and work normally and no issue found.<br>\nI have already test with ubu14+ tensorflow1.4, or ubu16 with tensorflow1.2/1.4, both of them are failed, the faild log as below, can you give me some help.</h2>\n<p>jensen <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=24974594\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ubu16\">@ubu16</a> alexnet_imagenet$ python myalexnet_forward.py<br>\nWARNING:tensorflow:From /usr/local/lib/python2.7/dist-packages/tensorflow/python/util/tf_should_use.py:170: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.<br>\nInstructions for updating:<br>\nUse <code>tf.global_variables_initializer</code> instead.<br>\n2018-11-22 13:01:42.430751: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.<br>\n2018-11-22 13:01:42.430780: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.<br>\n2018-11-22 13:01:42.430787: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.<br>\n2018-11-22 13:01:42.851315: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:893] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero<br>\n2018-11-22 13:01:42.851638: I tensorflow/core/common_runtime/gpu/gpu_device.cc:940] Found device 0 with properties:<br>\nname: GeForce GTX 750 Ti<br>\nmajor: 5 minor: 0 memoryClockRate (GHz) 1.1105<br>\npciBusID 0000:01:00.0<br>\nTotal memory: 1.96GiB<br>\nFree memory: 1.92GiB<br>\n2018-11-22 13:01:42.851683: I tensorflow/core/common_runtime/gpu/gpu_device.cc:961] DMA: 0<br>\n2018-11-22 13:01:42.851698: I tensorflow/core/common_runtime/gpu/gpu_device.cc:971] 0:   Y<br>\n2018-11-22 13:01:42.851725: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1030] Creating TensorFlow device (/gpu:0) -&gt; (device: 0, name: GeForce GTX 750 Ti, pci bus id: 0000:01:00.0)<br>\ntenpython: external/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceCuda.h:218: void Eigen::GpuDevice::memcpy(void*, const void*, std::size_t) const: Assertion `err == cudaSuccess' failed.<br>\nAborted (core dumped)</p>\n<hr>\n<p><strong>Describe the expected behavior</strong></p>\n<p>work normally with bazel -c dbg and bazel -c opt.</p>\n<p><strong>Code to reproduce the issue</strong><br>\nProvide a reproducible test case that is the bare minimum necessary to generate the problem.</p>\n<p><strong>Other info / logs</strong><br>\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.</p>", "body_text": "Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template\nSystem information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): 14.04 or 16.04\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:\nTensorFlow installed from (source or binary): source code build with gpu and dbg\nTensorFlow version (use command below): 1.2 or 1.4\nPython version: 2.7\nBazel version (if compiling from source): 0.45 or 0.54\nGCC/Compiler version (if compiling from source): 4.8\nCUDA/cuDNN version: 8.0/5.1 or 8.0/6.0\nGPU model and memory:\n\nYou can collect some of this information using our environment capture script\nYou can also obtain the TensorFlow version with\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\nDescribe the current behavior\nI build the tensorflow1.4 with gpu and -c dbg version, but when run test code or some example, meet cuda memcpy failed, but if you build with -c opt and work normally and no issue found.\nI have already test with ubu14+ tensorflow1.4, or ubu16 with tensorflow1.2/1.4, both of them are failed, the faild log as below, can you give me some help.\njensen @ubu16 alexnet_imagenet$ python myalexnet_forward.py\nWARNING:tensorflow:From /usr/local/lib/python2.7/dist-packages/tensorflow/python/util/tf_should_use.py:170: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.\nInstructions for updating:\nUse tf.global_variables_initializer instead.\n2018-11-22 13:01:42.430751: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.\n2018-11-22 13:01:42.430780: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\n2018-11-22 13:01:42.430787: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\n2018-11-22 13:01:42.851315: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:893] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n2018-11-22 13:01:42.851638: I tensorflow/core/common_runtime/gpu/gpu_device.cc:940] Found device 0 with properties:\nname: GeForce GTX 750 Ti\nmajor: 5 minor: 0 memoryClockRate (GHz) 1.1105\npciBusID 0000:01:00.0\nTotal memory: 1.96GiB\nFree memory: 1.92GiB\n2018-11-22 13:01:42.851683: I tensorflow/core/common_runtime/gpu/gpu_device.cc:961] DMA: 0\n2018-11-22 13:01:42.851698: I tensorflow/core/common_runtime/gpu/gpu_device.cc:971] 0:   Y\n2018-11-22 13:01:42.851725: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1030] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 750 Ti, pci bus id: 0000:01:00.0)\ntenpython: external/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceCuda.h:218: void Eigen::GpuDevice::memcpy(void*, const void*, std::size_t) const: Assertion `err == cudaSuccess' failed.\nAborted (core dumped)\n\nDescribe the expected behavior\nwork normally with bazel -c dbg and bazel -c opt.\nCode to reproduce the issue\nProvide a reproducible test case that is the bare minimum necessary to generate the problem.\nOther info / logs\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.", "body": "<em>Please make sure that this is a bug. As per our [GitHub Policy](https://github.com/tensorflow/tensorflow/blob/master/ISSUES.md), we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template</em>\r\n\r\n**System information**\r\n- Have I written custom code (as opposed to using a stock example script provided in TensorFlow):\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04): 14.04 or 16.04\r\n- Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:\r\n- TensorFlow installed from (source or binary): source code build with gpu and dbg\r\n- TensorFlow version (use command below): 1.2 or 1.4\r\n- Python version: 2.7\r\n- Bazel version (if compiling from source): 0.45 or 0.54\r\n- GCC/Compiler version (if compiling from source): 4.8\r\n- CUDA/cuDNN version: 8.0/5.1 or 8.0/6.0\r\n- GPU model and memory:\r\n\r\n\r\nYou can collect some of this information using our environment capture [script](https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh)\r\nYou can also obtain the TensorFlow version with\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n\r\n**Describe the current behavior**\r\n\r\nI build the tensorflow1.4 with gpu and -c dbg version, but when run test code or some example, meet cuda memcpy failed, but if you build with -c opt and work normally and no issue found.\r\nI have already test with ubu14+ tensorflow1.4, or ubu16 with tensorflow1.2/1.4, both of them are failed, the faild log as below, can you give me some help.\r\n------\r\njensen @ubu16 alexnet_imagenet$ python myalexnet_forward.py \r\nWARNING:tensorflow:From /usr/local/lib/python2.7/dist-packages/tensorflow/python/util/tf_should_use.py:170: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.\r\nInstructions for updating:\r\nUse `tf.global_variables_initializer` instead.\r\n2018-11-22 13:01:42.430751: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.\r\n2018-11-22 13:01:42.430780: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\r\n2018-11-22 13:01:42.430787: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\r\n2018-11-22 13:01:42.851315: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:893] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\r\n2018-11-22 13:01:42.851638: I tensorflow/core/common_runtime/gpu/gpu_device.cc:940] Found device 0 with properties: \r\nname: GeForce GTX 750 Ti\r\nmajor: 5 minor: 0 memoryClockRate (GHz) 1.1105\r\npciBusID 0000:01:00.0\r\nTotal memory: 1.96GiB\r\nFree memory: 1.92GiB\r\n2018-11-22 13:01:42.851683: I tensorflow/core/common_runtime/gpu/gpu_device.cc:961] DMA: 0 \r\n2018-11-22 13:01:42.851698: I tensorflow/core/common_runtime/gpu/gpu_device.cc:971] 0:   Y \r\n2018-11-22 13:01:42.851725: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1030] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 750 Ti, pci bus id: 0000:01:00.0)\r\ntenpython: external/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorDeviceCuda.h:218: void Eigen::GpuDevice::memcpy(void*, const void*, std::size_t) const: Assertion `err == cudaSuccess' failed.\r\nAborted (core dumped)\r\n\r\n------\r\n\r\n**Describe the expected behavior**\r\n\r\nwork normally with bazel -c dbg and bazel -c opt.\r\n\r\n**Code to reproduce the issue**\r\nProvide a reproducible test case that is the bare minimum necessary to generate the problem.\r\n\r\n**Other info / logs**\r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.\r\n"}