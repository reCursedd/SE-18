{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2935", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2935/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2935/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2935/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/2935", "id": 160949778, "node_id": "MDU6SXNzdWUxNjA5NDk3Nzg=", "number": 2935, "title": "Exception when trying to use TensorFlowDNNClassifier with Scikit-Learn model_selection.cross_val_score", "user": {"login": "opticverge", "id": 1736451, "node_id": "MDQ6VXNlcjE3MzY0NTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1736451?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opticverge", "html_url": "https://github.com/opticverge", "followers_url": "https://api.github.com/users/opticverge/followers", "following_url": "https://api.github.com/users/opticverge/following{/other_user}", "gists_url": "https://api.github.com/users/opticverge/gists{/gist_id}", "starred_url": "https://api.github.com/users/opticverge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opticverge/subscriptions", "organizations_url": "https://api.github.com/users/opticverge/orgs", "repos_url": "https://api.github.com/users/opticverge/repos", "events_url": "https://api.github.com/users/opticverge/events{/privacy}", "received_events_url": "https://api.github.com/users/opticverge/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ilblackdragon", "id": 175486, "node_id": "MDQ6VXNlcjE3NTQ4Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/175486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilblackdragon", "html_url": "https://github.com/ilblackdragon", "followers_url": "https://api.github.com/users/ilblackdragon/followers", "following_url": "https://api.github.com/users/ilblackdragon/following{/other_user}", "gists_url": "https://api.github.com/users/ilblackdragon/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilblackdragon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilblackdragon/subscriptions", "organizations_url": "https://api.github.com/users/ilblackdragon/orgs", "repos_url": "https://api.github.com/users/ilblackdragon/repos", "events_url": "https://api.github.com/users/ilblackdragon/events{/privacy}", "received_events_url": "https://api.github.com/users/ilblackdragon/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ilblackdragon", "id": 175486, "node_id": "MDQ6VXNlcjE3NTQ4Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/175486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilblackdragon", "html_url": "https://github.com/ilblackdragon", "followers_url": "https://api.github.com/users/ilblackdragon/followers", "following_url": "https://api.github.com/users/ilblackdragon/following{/other_user}", "gists_url": "https://api.github.com/users/ilblackdragon/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilblackdragon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilblackdragon/subscriptions", "organizations_url": "https://api.github.com/users/ilblackdragon/orgs", "repos_url": "https://api.github.com/users/ilblackdragon/repos", "events_url": "https://api.github.com/users/ilblackdragon/events{/privacy}", "received_events_url": "https://api.github.com/users/ilblackdragon/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2016-06-17T18:36:53Z", "updated_at": "2016-07-10T20:01:57Z", "closed_at": "2016-07-10T19:59:48Z", "author_association": "NONE", "body_html": "<p>I am attempting to use cross_val_score with the TensorFlowDNNClassifier (I know it is deprecated) from Scikit-Learn. I used cross_val_score seamlessly with the original skflow wrapper which allowed me to use evolutionary computing to evolve the parameters of the TensorFlowDNNClassifier.</p>\n<p>It appears that when a clone of the TensorFlowDNNClassifier is initialised for the number of folds specified in cross_val_score, the hidden_units argument is not included as the estimator.get_params() function within clone in sklearn/base.py does not retrieve the value set against _dnn_hidden_units.</p>\n<p>The classifiers/regressors of Scikit-Learn take the approach of assigning the input parameters a default value which allows for a lot of flexibility. Instead of requiring the user to provide the structure of their DNN through the hidden_units parameter perhaps a default value should be provided so that the classifier can be cloned when the classifier is passed to cross_val_score.</p>\n<p>Given that the objective of Skflow was to integrate tensorflow into the Scikit-learn pipeline it would be ideal to turn hidden_units into a key word argument.</p>\n<h3>Environment info</h3>\n<p>Operating System:<br>\nLinux Mint 17.2 Cinnamon 64 bit</p>\n<p>Installed version of CUDA and cuDNN:<br>\nNot relevant</p>\n<p>If installed from binary pip package, provide:</p>\n<ol>\n<li>Which pip package you installed.<br>\npip3 install <a href=\"https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.9.0rc0-cp35-cp35m-linux_x86_64.whl\" rel=\"nofollow\">https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.9.0rc0-cp35-cp35m-linux_x86_64.whl</a></li>\n<li>The output from <code>python -c \"import tensorflow; print(tensorflow.__version__)\"</code>.<br>\n0.9.0rc0</li>\n</ol>\n<p>python - 3.5.1<br>\nscikit-learn - 0.18.dev0<br>\ntensorflow - 0.9.0rc0<br>\nscipy - 0.17.1<br>\nnumpy - 1.11.0</p>\n<h3>Steps to reproduce</h3>\n<ol>\n<li>Code provided</li>\n</ol>\n<pre><code>from sklearn import datasets, model_selection\nfrom tensorflow.contrib import learn\nimport traceback\n\nif __name__ == '__main__':\n    try:\n\n        iris = datasets.load_iris()\n\n        X_train, X_test, y_train, y_test = model_selection.train_test_split(iris.data, iris.target, test_size=0.2, random_state=42)\n\n        kwargs = {\n            \"n_classes\":3,\n            \"optimizer\" : \"Adam\",\n            \"hidden_units\" : [10, 20, 10],\n            \"steps\": 250\n        }\n\n        classifier = learn.TensorFlowDNNClassifier(**kwargs)\n\n        scores = model_selection.cross_val_score(\n            classifier,\n            X_train,\n            y_train,\n            scoring=\"accuracy\"\n        )\n\n        print('Accuracy: {0:f}'.format(scores))\n\n    except:\n        print(traceback.format_exc())\n</code></pre>\n<h3>Logs or other output that would be helpful</h3>\n<pre><code>Traceback (most recent call last):\n  File \"/home/thirdoctet/Development/projects/python/scikit-evolution/skevolve/tests/tensorflow_classification.py\", line 47, in &lt;module&gt;\n    scoring=\"accuracy\"\n  File \"/usr/local/lib/python3.5/site-packages/sklearn/model_selection/_validation.py\", line 167, in cross_val_score\n    for train, test in cv.split(X, y, labels))\n  File \"/usr/local/lib/python3.5/site-packages/sklearn/externals/joblib/parallel.py\", line 800, in __call__\n    while self.dispatch_one_batch(iterator):\n  File \"/usr/local/lib/python3.5/site-packages/sklearn/externals/joblib/parallel.py\", line 653, in dispatch_one_batch\n    tasks = BatchedCalls(itertools.islice(iterator, batch_size))\n  File \"/usr/local/lib/python3.5/site-packages/sklearn/externals/joblib/parallel.py\", line 68, in __init__\n    self.items = list(iterator_slice)\n  File \"/usr/local/lib/python3.5/site-packages/sklearn/model_selection/_validation.py\", line 167, in &lt;genexpr&gt;\n    for train, test in cv.split(X, y, labels))\n  File \"/usr/local/lib/python3.5/site-packages/sklearn/base.py\", line 57, in clone\n    new_object = klass(**new_object_params)\n  File \"/usr/local/lib/python3.5/site-packages/tensorflow/contrib/learn/python/learn/estimators/base.py\", line 452, in __init__\n    super(DeprecatedMixin, self).__init__(*args, **kwargs)\nTypeError: __init__() missing 1 required positional argument: 'hidden_units'\n</code></pre>", "body_text": "I am attempting to use cross_val_score with the TensorFlowDNNClassifier (I know it is deprecated) from Scikit-Learn. I used cross_val_score seamlessly with the original skflow wrapper which allowed me to use evolutionary computing to evolve the parameters of the TensorFlowDNNClassifier.\nIt appears that when a clone of the TensorFlowDNNClassifier is initialised for the number of folds specified in cross_val_score, the hidden_units argument is not included as the estimator.get_params() function within clone in sklearn/base.py does not retrieve the value set against _dnn_hidden_units.\nThe classifiers/regressors of Scikit-Learn take the approach of assigning the input parameters a default value which allows for a lot of flexibility. Instead of requiring the user to provide the structure of their DNN through the hidden_units parameter perhaps a default value should be provided so that the classifier can be cloned when the classifier is passed to cross_val_score.\nGiven that the objective of Skflow was to integrate tensorflow into the Scikit-learn pipeline it would be ideal to turn hidden_units into a key word argument.\nEnvironment info\nOperating System:\nLinux Mint 17.2 Cinnamon 64 bit\nInstalled version of CUDA and cuDNN:\nNot relevant\nIf installed from binary pip package, provide:\n\nWhich pip package you installed.\npip3 install https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.9.0rc0-cp35-cp35m-linux_x86_64.whl\nThe output from python -c \"import tensorflow; print(tensorflow.__version__)\".\n0.9.0rc0\n\npython - 3.5.1\nscikit-learn - 0.18.dev0\ntensorflow - 0.9.0rc0\nscipy - 0.17.1\nnumpy - 1.11.0\nSteps to reproduce\n\nCode provided\n\nfrom sklearn import datasets, model_selection\nfrom tensorflow.contrib import learn\nimport traceback\n\nif __name__ == '__main__':\n    try:\n\n        iris = datasets.load_iris()\n\n        X_train, X_test, y_train, y_test = model_selection.train_test_split(iris.data, iris.target, test_size=0.2, random_state=42)\n\n        kwargs = {\n            \"n_classes\":3,\n            \"optimizer\" : \"Adam\",\n            \"hidden_units\" : [10, 20, 10],\n            \"steps\": 250\n        }\n\n        classifier = learn.TensorFlowDNNClassifier(**kwargs)\n\n        scores = model_selection.cross_val_score(\n            classifier,\n            X_train,\n            y_train,\n            scoring=\"accuracy\"\n        )\n\n        print('Accuracy: {0:f}'.format(scores))\n\n    except:\n        print(traceback.format_exc())\n\nLogs or other output that would be helpful\nTraceback (most recent call last):\n  File \"/home/thirdoctet/Development/projects/python/scikit-evolution/skevolve/tests/tensorflow_classification.py\", line 47, in <module>\n    scoring=\"accuracy\"\n  File \"/usr/local/lib/python3.5/site-packages/sklearn/model_selection/_validation.py\", line 167, in cross_val_score\n    for train, test in cv.split(X, y, labels))\n  File \"/usr/local/lib/python3.5/site-packages/sklearn/externals/joblib/parallel.py\", line 800, in __call__\n    while self.dispatch_one_batch(iterator):\n  File \"/usr/local/lib/python3.5/site-packages/sklearn/externals/joblib/parallel.py\", line 653, in dispatch_one_batch\n    tasks = BatchedCalls(itertools.islice(iterator, batch_size))\n  File \"/usr/local/lib/python3.5/site-packages/sklearn/externals/joblib/parallel.py\", line 68, in __init__\n    self.items = list(iterator_slice)\n  File \"/usr/local/lib/python3.5/site-packages/sklearn/model_selection/_validation.py\", line 167, in <genexpr>\n    for train, test in cv.split(X, y, labels))\n  File \"/usr/local/lib/python3.5/site-packages/sklearn/base.py\", line 57, in clone\n    new_object = klass(**new_object_params)\n  File \"/usr/local/lib/python3.5/site-packages/tensorflow/contrib/learn/python/learn/estimators/base.py\", line 452, in __init__\n    super(DeprecatedMixin, self).__init__(*args, **kwargs)\nTypeError: __init__() missing 1 required positional argument: 'hidden_units'", "body": "I am attempting to use cross_val_score with the TensorFlowDNNClassifier (I know it is deprecated) from Scikit-Learn. I used cross_val_score seamlessly with the original skflow wrapper which allowed me to use evolutionary computing to evolve the parameters of the TensorFlowDNNClassifier. \n\nIt appears that when a clone of the TensorFlowDNNClassifier is initialised for the number of folds specified in cross_val_score, the hidden_units argument is not included as the estimator.get_params() function within clone in sklearn/base.py does not retrieve the value set against _dnn_hidden_units. \n\nThe classifiers/regressors of Scikit-Learn take the approach of assigning the input parameters a default value which allows for a lot of flexibility. Instead of requiring the user to provide the structure of their DNN through the hidden_units parameter perhaps a default value should be provided so that the classifier can be cloned when the classifier is passed to cross_val_score.\n\nGiven that the objective of Skflow was to integrate tensorflow into the Scikit-learn pipeline it would be ideal to turn hidden_units into a key word argument.\n### Environment info\n\nOperating System:\nLinux Mint 17.2 Cinnamon 64 bit\n\nInstalled version of CUDA and cuDNN: \nNot relevant\n\nIf installed from binary pip package, provide:\n1. Which pip package you installed.\n   pip3 install https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.9.0rc0-cp35-cp35m-linux_x86_64.whl\n2. The output from `python -c \"import tensorflow; print(tensorflow.__version__)\"`.\n   0.9.0rc0\n\npython - 3.5.1\nscikit-learn - 0.18.dev0\ntensorflow - 0.9.0rc0\nscipy - 0.17.1\nnumpy - 1.11.0\n### Steps to reproduce\n1. Code provided\n\n```\nfrom sklearn import datasets, model_selection\nfrom tensorflow.contrib import learn\nimport traceback\n\nif __name__ == '__main__':\n    try:\n\n        iris = datasets.load_iris()\n\n        X_train, X_test, y_train, y_test = model_selection.train_test_split(iris.data, iris.target, test_size=0.2, random_state=42)\n\n        kwargs = {\n            \"n_classes\":3,\n            \"optimizer\" : \"Adam\",\n            \"hidden_units\" : [10, 20, 10],\n            \"steps\": 250\n        }\n\n        classifier = learn.TensorFlowDNNClassifier(**kwargs)\n\n        scores = model_selection.cross_val_score(\n            classifier,\n            X_train,\n            y_train,\n            scoring=\"accuracy\"\n        )\n\n        print('Accuracy: {0:f}'.format(scores))\n\n    except:\n        print(traceback.format_exc())\n```\n### Logs or other output that would be helpful\n\n```\nTraceback (most recent call last):\n  File \"/home/thirdoctet/Development/projects/python/scikit-evolution/skevolve/tests/tensorflow_classification.py\", line 47, in <module>\n    scoring=\"accuracy\"\n  File \"/usr/local/lib/python3.5/site-packages/sklearn/model_selection/_validation.py\", line 167, in cross_val_score\n    for train, test in cv.split(X, y, labels))\n  File \"/usr/local/lib/python3.5/site-packages/sklearn/externals/joblib/parallel.py\", line 800, in __call__\n    while self.dispatch_one_batch(iterator):\n  File \"/usr/local/lib/python3.5/site-packages/sklearn/externals/joblib/parallel.py\", line 653, in dispatch_one_batch\n    tasks = BatchedCalls(itertools.islice(iterator, batch_size))\n  File \"/usr/local/lib/python3.5/site-packages/sklearn/externals/joblib/parallel.py\", line 68, in __init__\n    self.items = list(iterator_slice)\n  File \"/usr/local/lib/python3.5/site-packages/sklearn/model_selection/_validation.py\", line 167, in <genexpr>\n    for train, test in cv.split(X, y, labels))\n  File \"/usr/local/lib/python3.5/site-packages/sklearn/base.py\", line 57, in clone\n    new_object = klass(**new_object_params)\n  File \"/usr/local/lib/python3.5/site-packages/tensorflow/contrib/learn/python/learn/estimators/base.py\", line 452, in __init__\n    super(DeprecatedMixin, self).__init__(*args, **kwargs)\nTypeError: __init__() missing 1 required positional argument: 'hidden_units'\n```\n"}