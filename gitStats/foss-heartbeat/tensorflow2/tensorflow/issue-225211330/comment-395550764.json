{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/395550764", "html_url": "https://github.com/tensorflow/tensorflow/issues/9525#issuecomment-395550764", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9525", "id": 395550764, "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTU1MDc2NA==", "user": {"login": "JosephIWB", "id": 38196441, "node_id": "MDQ6VXNlcjM4MTk2NDQx", "avatar_url": "https://avatars2.githubusercontent.com/u/38196441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JosephIWB", "html_url": "https://github.com/JosephIWB", "followers_url": "https://api.github.com/users/JosephIWB/followers", "following_url": "https://api.github.com/users/JosephIWB/following{/other_user}", "gists_url": "https://api.github.com/users/JosephIWB/gists{/gist_id}", "starred_url": "https://api.github.com/users/JosephIWB/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JosephIWB/subscriptions", "organizations_url": "https://api.github.com/users/JosephIWB/orgs", "repos_url": "https://api.github.com/users/JosephIWB/repos", "events_url": "https://api.github.com/users/JosephIWB/events{/privacy}", "received_events_url": "https://api.github.com/users/JosephIWB/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-07T20:16:31Z", "updated_at": "2018-06-07T20:16:31Z", "author_association": "NONE", "body_html": "<p>Hi,</p>\n<p>I need to load a model on a \"plugin\" for a c++ program, the codes is basically a header which calculates a matrix and returns it to the main program. There I need to:</p>\n<ol>\n<li>select the gpu on which to load the model, no other gpu should be seen by tensorflow, this needs to be done on runtime, as the gpu_id is a parameter of the constructor of the class which runs the tensorflow model.</li>\n<li>load the model and run.</li>\n</ol>\n<p>the main program uses opencv functions imread, imencode and imwrite, the latter causing segfault if including tensorflow headers and linking dynamically tensorflow_cc and tensorflow_framework.</p>\n<p>Doing a monolithic build disables the ability to hide gpu devices from tensorflow session, otherwise it runs smoothly.</p>\n<p>I compiled using master, a particular commit of 1.8 and r1.9. (not all at the same time, and I tried all of them in the same machine)</p>\n<p>Configure:<br>\ncuda 8.0,<br>\ncudnn 7.1.</p>\n<p>Bazel command:<br>\nbazel build -c opt --copt=-mavx --copt=-mavx2 --copt=-mfma --copt=-mfpmath=both --copt=-msse4.2 //tensorflow:libtensorflow_cc.so</p>\n<p>My problems:</p>\n<ol>\n<li>using tensorflow headers and opencv imwrite, imread and imencode doens't work unless you use monolithic build.</li>\n<li>using monolithic build disables setting gpu visible devices, which is a very important issue for some, as it needs protocol buffer symbols, linking libprotobuf doesn't work.</li>\n</ol>\n<p>Possible solutions: (may break other things)</p>\n<ol>\n<li>Posible fix:<br>\nsomeone in another issue suggested doing a change around line 41 in thirdparty/jpeg/jpeg.BUILD. \"-fPIC\" is needed as the result of \"-fvisibility\".<br>\n\"//conditions:default\": [<br>\n\"-fvisibility=hidden -fPIC\"<br>\n],<br>\nThis enables the use of opencv imread, imwrite and imencode, but it probably breaks other things.</li>\n</ol>", "body_text": "Hi,\nI need to load a model on a \"plugin\" for a c++ program, the codes is basically a header which calculates a matrix and returns it to the main program. There I need to:\n\nselect the gpu on which to load the model, no other gpu should be seen by tensorflow, this needs to be done on runtime, as the gpu_id is a parameter of the constructor of the class which runs the tensorflow model.\nload the model and run.\n\nthe main program uses opencv functions imread, imencode and imwrite, the latter causing segfault if including tensorflow headers and linking dynamically tensorflow_cc and tensorflow_framework.\nDoing a monolithic build disables the ability to hide gpu devices from tensorflow session, otherwise it runs smoothly.\nI compiled using master, a particular commit of 1.8 and r1.9. (not all at the same time, and I tried all of them in the same machine)\nConfigure:\ncuda 8.0,\ncudnn 7.1.\nBazel command:\nbazel build -c opt --copt=-mavx --copt=-mavx2 --copt=-mfma --copt=-mfpmath=both --copt=-msse4.2 //tensorflow:libtensorflow_cc.so\nMy problems:\n\nusing tensorflow headers and opencv imwrite, imread and imencode doens't work unless you use monolithic build.\nusing monolithic build disables setting gpu visible devices, which is a very important issue for some, as it needs protocol buffer symbols, linking libprotobuf doesn't work.\n\nPossible solutions: (may break other things)\n\nPosible fix:\nsomeone in another issue suggested doing a change around line 41 in thirdparty/jpeg/jpeg.BUILD. \"-fPIC\" is needed as the result of \"-fvisibility\".\n\"//conditions:default\": [\n\"-fvisibility=hidden -fPIC\"\n],\nThis enables the use of opencv imread, imwrite and imencode, but it probably breaks other things.", "body": "Hi,\r\n\r\nI need to load a model on a \"plugin\" for a c++ program, the codes is basically a header which calculates a matrix and returns it to the main program. There I need to:\r\n1) select the gpu on which to load the model, no other gpu should be seen by tensorflow, this needs to be done on runtime, as the gpu_id is a parameter of the constructor of the class which runs the tensorflow model.\r\n2) load the model and run.\r\n\r\nthe main program uses opencv functions imread, imencode and imwrite, the latter causing segfault if including tensorflow headers and linking dynamically tensorflow_cc and tensorflow_framework.\r\n\r\nDoing a monolithic build disables the ability to hide gpu devices from tensorflow session, otherwise it runs smoothly.\r\n\r\nI compiled using master, a particular commit of 1.8 and r1.9. (not all at the same time, and I tried all of them in the same machine)\r\n\r\nConfigure:\r\ncuda 8.0,\r\ncudnn 7.1.\r\n\r\nBazel command:\r\nbazel build -c opt --copt=-mavx --copt=-mavx2 --copt=-mfma --copt=-mfpmath=both --copt=-msse4.2 //tensorflow:libtensorflow_cc.so\r\n\r\nMy problems:\r\n1) using tensorflow headers and opencv imwrite, imread and imencode doens't work unless you use monolithic build.\r\n2) using monolithic build disables setting gpu visible devices, which is a very important issue for some, as it needs protocol buffer symbols, linking libprotobuf doesn't work.\r\n\r\nPossible solutions: (may break other things)\r\n1) Posible fix:\r\nsomeone in another issue suggested doing a change around line 41 in thirdparty/jpeg/jpeg.BUILD. \"-fPIC\" is needed as the result of \"-fvisibility\".\r\n\"//conditions:default\": [\r\n\"-fvisibility=hidden -fPIC\"\r\n],\r\nThis enables the use of opencv imread, imwrite and imencode, but it probably breaks other things.\r\n\r\n\r\n\r\n"}