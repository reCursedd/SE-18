{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/344190934", "html_url": "https://github.com/tensorflow/tensorflow/issues/12475#issuecomment-344190934", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12475", "id": 344190934, "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDE5MDkzNA==", "user": {"login": "ahoereth", "id": 3015996, "node_id": "MDQ6VXNlcjMwMTU5OTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/3015996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahoereth", "html_url": "https://github.com/ahoereth", "followers_url": "https://api.github.com/users/ahoereth/followers", "following_url": "https://api.github.com/users/ahoereth/following{/other_user}", "gists_url": "https://api.github.com/users/ahoereth/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahoereth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahoereth/subscriptions", "organizations_url": "https://api.github.com/users/ahoereth/orgs", "repos_url": "https://api.github.com/users/ahoereth/repos", "events_url": "https://api.github.com/users/ahoereth/events{/privacy}", "received_events_url": "https://api.github.com/users/ahoereth/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-14T09:06:51Z", "updated_at": "2017-11-14T09:07:00Z", "author_association": "NONE", "body_html": "<p>Probably relevant, an issue I am running into with big matrices:</p>\n<blockquote>\n<p>The GPU implementation is optimized to use 32 bit indexing, so give a friendly error to the programmer early on if they exceed.</p>\n</blockquote>\n<p><div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/ce02c770fb269e5e607da459bde4f580ef108137/tensorflow/core/kernels/sparse_tensor_dense_matmul_op.cc#L96-L114\">tensorflow/tensorflow/core/kernels/sparse_tensor_dense_matmul_op.cc</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 96 to 114\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/ce02c770fb269e5e607da459bde4f580ef108137\">ce02c77</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L96\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"96\"></td>\n          <td id=\"LC96\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">if</span> (std::is_same&lt;Device, GPUDevice&gt;::value) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L97\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"97\"></td>\n          <td id=\"LC97\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-c\"><span class=\"pl-c\">//</span> The GPU implementation is optimized to use 32 bit indexing, so</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L98\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"98\"></td>\n          <td id=\"LC98\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-c\"><span class=\"pl-c\">//</span> give a friendly error to the programmer early on if they</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L99\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"99\"></td>\n          <td id=\"LC99\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-c\"><span class=\"pl-c\">//</span> exceed.</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L100\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"100\"></td>\n          <td id=\"LC100\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-k\">const</span> <span class=\"pl-k\">int</span> int32max = std::numeric_limits&lt;<span class=\"pl-k\">int</span>&gt;::<span class=\"pl-c1\">max</span>(); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L101\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"101\"></td>\n          <td id=\"LC101\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-c1\">OP_REQUIRES</span>( </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L102\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"102\"></td>\n          <td id=\"LC102\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">       ctx, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L103\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"103\"></td>\n          <td id=\"LC103\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">       (<span class=\"pl-c1\">FastBoundsCheck</span>(inner_left, int32max) &amp;&amp; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L104\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"104\"></td>\n          <td id=\"LC104\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">        <span class=\"pl-c1\">FastBoundsCheck</span>(inner_right, int32max) &amp;&amp; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L105\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"105\"></td>\n          <td id=\"LC105\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">        <span class=\"pl-c1\">FastBoundsCheck</span>(outer_left, int32max) &amp;&amp; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L106\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"106\"></td>\n          <td id=\"LC106\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">        <span class=\"pl-c1\">FastBoundsCheck</span>(outer_right, int32max) &amp;&amp; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L107\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"107\"></td>\n          <td id=\"LC107\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">        <span class=\"pl-c1\">FastBoundsCheck</span>(b-&gt;<span class=\"pl-c1\">NumElements</span>(), int32max) &amp;&amp; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L108\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"108\"></td>\n          <td id=\"LC108\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">        <span class=\"pl-c1\">FastBoundsCheck</span>(outer_left * outer_right, int32max) &amp;&amp; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L109\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"109\"></td>\n          <td id=\"LC109\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">        <span class=\"pl-c1\">FastBoundsCheck</span>(a_values-&gt;<span class=\"pl-c1\">NumElements</span>(), int32max)), </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L110\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"110\"></td>\n          <td id=\"LC110\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">       <span class=\"pl-c1\">errors::InvalidArgument</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Cannot use GPU for &gt; 2^31 entry inputs<span class=\"pl-pds\">\"</span></span>)); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L111\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"111\"></td>\n          <td id=\"LC111\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-c1\">OP_REQUIRES</span>(ctx, <span class=\"pl-c1\">FastBoundsCheck</span>(nnz * outer_right, int32max), </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L112\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"112\"></td>\n          <td id=\"LC112\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">               <span class=\"pl-c1\">errors::InvalidArgument</span>( </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L113\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"113\"></td>\n          <td id=\"LC113\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">                   <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Cannot use GPU when output.shape[1] * nnz(a) &gt; 2^31<span class=\"pl-pds\">\"</span></span>)); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L114\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"114\"></td>\n          <td id=\"LC114\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> } </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>", "body_text": "Probably relevant, an issue I am running into with big matrices:\n\nThe GPU implementation is optimized to use 32 bit indexing, so give a friendly error to the programmer early on if they exceed.\n\n\n  \n    \n      tensorflow/tensorflow/core/kernels/sparse_tensor_dense_matmul_op.cc\n    \n    \n        Lines 96 to 114\n      in\n      ce02c77\n    \n    \n    \n    \n\n        \n          \n           if (std::is_same<Device, GPUDevice>::value) { \n        \n\n        \n          \n             // The GPU implementation is optimized to use 32 bit indexing, so \n        \n\n        \n          \n             // give a friendly error to the programmer early on if they \n        \n\n        \n          \n             // exceed. \n        \n\n        \n          \n             const int int32max = std::numeric_limits<int>::max(); \n        \n\n        \n          \n             OP_REQUIRES( \n        \n\n        \n          \n                 ctx, \n        \n\n        \n          \n                 (FastBoundsCheck(inner_left, int32max) && \n        \n\n        \n          \n                  FastBoundsCheck(inner_right, int32max) && \n        \n\n        \n          \n                  FastBoundsCheck(outer_left, int32max) && \n        \n\n        \n          \n                  FastBoundsCheck(outer_right, int32max) && \n        \n\n        \n          \n                  FastBoundsCheck(b->NumElements(), int32max) && \n        \n\n        \n          \n                  FastBoundsCheck(outer_left * outer_right, int32max) && \n        \n\n        \n          \n                  FastBoundsCheck(a_values->NumElements(), int32max)), \n        \n\n        \n          \n                 errors::InvalidArgument(\"Cannot use GPU for > 2^31 entry inputs\")); \n        \n\n        \n          \n             OP_REQUIRES(ctx, FastBoundsCheck(nnz * outer_right, int32max), \n        \n\n        \n          \n                         errors::InvalidArgument( \n        \n\n        \n          \n                             \"Cannot use GPU when output.shape[1] * nnz(a) > 2^31\")); \n        \n\n        \n          \n           }", "body": "Probably relevant, an issue I am running into with big matrices:\r\n\r\n> The GPU implementation is optimized to use 32 bit indexing, so give a friendly error to the programmer early on if they exceed.\r\n\r\nhttps://github.com/tensorflow/tensorflow/blob/ce02c770fb269e5e607da459bde4f580ef108137/tensorflow/core/kernels/sparse_tensor_dense_matmul_op.cc#L96-L114"}