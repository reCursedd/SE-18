{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1539", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1539/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1539/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1539/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/1539", "id": 141753240, "node_id": "MDU6SXNzdWUxNDE3NTMyNDA=", "number": 1539, "title": "[clang+CUDA] No ZeroesLike[DT_BOOL] kernel", "user": {"login": "jlebar", "id": 150663, "node_id": "MDQ6VXNlcjE1MDY2Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/150663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlebar", "html_url": "https://github.com/jlebar", "followers_url": "https://api.github.com/users/jlebar/followers", "following_url": "https://api.github.com/users/jlebar/following{/other_user}", "gists_url": "https://api.github.com/users/jlebar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlebar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlebar/subscriptions", "organizations_url": "https://api.github.com/users/jlebar/orgs", "repos_url": "https://api.github.com/users/jlebar/repos", "events_url": "https://api.github.com/users/jlebar/events{/privacy}", "received_events_url": "https://api.github.com/users/jlebar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 23, "created_at": "2016-03-18T02:01:26Z", "updated_at": "2018-02-08T01:35:22Z", "closed_at": null, "author_association": "MEMBER", "body_html": "<p>I'm working on getting tensorflow to build its GPU code with clang.</p>\n<p>I have a hacked up crosstool, a hacked up clang (for std::complex support), and some minor changes to eigen (which are awaiting review).  The branch is at jlebar/tensorflow@cuda-clang, but checking that out isn't sufficient, because you need to customize some paths to make crosstool happy.  Anyway you don't have my WIP compiler changes, so you won't get very far.  :)</p>\n<p>Having said all that, I'm trying to get the tensorflow tests to pass, while I wait for tra@ to hopefully figure out the crosstool business.  I'm looking at this one</p>\n<pre><code>$ bazel test -c opt --config=cuda_clang //tensorflow/core:ops_array_grad_test \n</code></pre>\n<p>, which fails with</p>\n<pre><code>E tensorflow/core/common_runtime/executor.cc:332] Executor failed to create kernel. Not found: No registered 'ZerosLike' OpKernel for GPU devices compatible with node n4 = ZerosLike[T=DT_BOOL](n1)\n     [[Node: n4 = ZerosLike[T=DT_BOOL](n1)]]\nF tensorflow/core/ops/array_grad_test.cc:365] Check failed: ::tensorflow::Status::OK() == (sess-&gt;Run({{\"x:0\", x}, {\"dims:0\", dims}, {\"dy:0\", dy}}, {\"dx:0\", \"dx:1\"}, {}, &amp;out)) (OK vs. Not found: No registered 'ZerosLike' OpKernel for GPU devices compatible with node n4 = ZerosLike[T=DT_BOOL](n1)\n     [[Node: n4 = ZerosLike[T=DT_BOOL](n1)]]\n     [[Node: dx = SymbolicGradient[Tin=[DT_FLOAT, DT_BOOL, DT_FLOAT], Tout=[DT_FLOAT, DT_BOOL], f=Reverse[T=DT_FLOAT], _device=\"/job:localhost/replica:0/task:0/gpu:0\"](_recv_x_0/_2, _recv_dims_0/_4, _recv_dy_0/_6)]]\n     [[Node: dx/_8 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device=\"/job:localhost/replica:0/task:0/gpu:0\", send_device_incarnation=1, tensor_name=\"edge_14_dx\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/cpu:0\"]()]])\nexternal/bazel_tools/tools/test/test-setup.sh: line 52: 106730 Aborted                 (core dumped) \"$@\"\n</code></pre>\n<p>Looking through the code, it seems that there's no zeroing kernel for bools, so I'm not sure how this is supposed to work?  The obvious change to add a kernel, <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/jlebar/tensorflow/commit/286c1647cca9ebcdbce4497995c794d4b0c55633/hovercard\" href=\"https://github.com/jlebar/tensorflow/commit/286c1647cca9ebcdbce4497995c794d4b0c55633\">jlebar/tensorflow@<tt>286c164</tt></a>, doesn't work -- we seem to invoke the new kernel, but the whole program just silently dies.</p>\n<p>I'm pretty confused by what's going on here, what with the To32Bit functor being applied to an array of doubles (?) and so on.  Any pointers would be very much appreciated.</p>", "body_text": "I'm working on getting tensorflow to build its GPU code with clang.\nI have a hacked up crosstool, a hacked up clang (for std::complex support), and some minor changes to eigen (which are awaiting review).  The branch is at jlebar/tensorflow@cuda-clang, but checking that out isn't sufficient, because you need to customize some paths to make crosstool happy.  Anyway you don't have my WIP compiler changes, so you won't get very far.  :)\nHaving said all that, I'm trying to get the tensorflow tests to pass, while I wait for tra@ to hopefully figure out the crosstool business.  I'm looking at this one\n$ bazel test -c opt --config=cuda_clang //tensorflow/core:ops_array_grad_test \n\n, which fails with\nE tensorflow/core/common_runtime/executor.cc:332] Executor failed to create kernel. Not found: No registered 'ZerosLike' OpKernel for GPU devices compatible with node n4 = ZerosLike[T=DT_BOOL](n1)\n     [[Node: n4 = ZerosLike[T=DT_BOOL](n1)]]\nF tensorflow/core/ops/array_grad_test.cc:365] Check failed: ::tensorflow::Status::OK() == (sess->Run({{\"x:0\", x}, {\"dims:0\", dims}, {\"dy:0\", dy}}, {\"dx:0\", \"dx:1\"}, {}, &out)) (OK vs. Not found: No registered 'ZerosLike' OpKernel for GPU devices compatible with node n4 = ZerosLike[T=DT_BOOL](n1)\n     [[Node: n4 = ZerosLike[T=DT_BOOL](n1)]]\n     [[Node: dx = SymbolicGradient[Tin=[DT_FLOAT, DT_BOOL, DT_FLOAT], Tout=[DT_FLOAT, DT_BOOL], f=Reverse[T=DT_FLOAT], _device=\"/job:localhost/replica:0/task:0/gpu:0\"](_recv_x_0/_2, _recv_dims_0/_4, _recv_dy_0/_6)]]\n     [[Node: dx/_8 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device=\"/job:localhost/replica:0/task:0/gpu:0\", send_device_incarnation=1, tensor_name=\"edge_14_dx\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/cpu:0\"]()]])\nexternal/bazel_tools/tools/test/test-setup.sh: line 52: 106730 Aborted                 (core dumped) \"$@\"\n\nLooking through the code, it seems that there's no zeroing kernel for bools, so I'm not sure how this is supposed to work?  The obvious change to add a kernel, jlebar/tensorflow@286c164, doesn't work -- we seem to invoke the new kernel, but the whole program just silently dies.\nI'm pretty confused by what's going on here, what with the To32Bit functor being applied to an array of doubles (?) and so on.  Any pointers would be very much appreciated.", "body": "I'm working on getting tensorflow to build its GPU code with clang.\n\nI have a hacked up crosstool, a hacked up clang (for std::complex support), and some minor changes to eigen (which are awaiting review).  The branch is at jlebar/tensorflow@cuda-clang, but checking that out isn't sufficient, because you need to customize some paths to make crosstool happy.  Anyway you don't have my WIP compiler changes, so you won't get very far.  :)\n\nHaving said all that, I'm trying to get the tensorflow tests to pass, while I wait for tra@ to hopefully figure out the crosstool business.  I'm looking at this one\n\n```\n$ bazel test -c opt --config=cuda_clang //tensorflow/core:ops_array_grad_test \n```\n\n, which fails with\n\n```\nE tensorflow/core/common_runtime/executor.cc:332] Executor failed to create kernel. Not found: No registered 'ZerosLike' OpKernel for GPU devices compatible with node n4 = ZerosLike[T=DT_BOOL](n1)\n     [[Node: n4 = ZerosLike[T=DT_BOOL](n1)]]\nF tensorflow/core/ops/array_grad_test.cc:365] Check failed: ::tensorflow::Status::OK() == (sess->Run({{\"x:0\", x}, {\"dims:0\", dims}, {\"dy:0\", dy}}, {\"dx:0\", \"dx:1\"}, {}, &out)) (OK vs. Not found: No registered 'ZerosLike' OpKernel for GPU devices compatible with node n4 = ZerosLike[T=DT_BOOL](n1)\n     [[Node: n4 = ZerosLike[T=DT_BOOL](n1)]]\n     [[Node: dx = SymbolicGradient[Tin=[DT_FLOAT, DT_BOOL, DT_FLOAT], Tout=[DT_FLOAT, DT_BOOL], f=Reverse[T=DT_FLOAT], _device=\"/job:localhost/replica:0/task:0/gpu:0\"](_recv_x_0/_2, _recv_dims_0/_4, _recv_dy_0/_6)]]\n     [[Node: dx/_8 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device=\"/job:localhost/replica:0/task:0/gpu:0\", send_device_incarnation=1, tensor_name=\"edge_14_dx\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/cpu:0\"]()]])\nexternal/bazel_tools/tools/test/test-setup.sh: line 52: 106730 Aborted                 (core dumped) \"$@\"\n```\n\nLooking through the code, it seems that there's no zeroing kernel for bools, so I'm not sure how this is supposed to work?  The obvious change to add a kernel, jlebar/tensorflow@286c1647cca9ebcdbce4497995c794d4b0c55633, doesn't work -- we seem to invoke the new kernel, but the whole program just silently dies.\n\nI'm pretty confused by what's going on here, what with the To32Bit functor being applied to an array of doubles (?) and so on.  Any pointers would be very much appreciated.\n"}