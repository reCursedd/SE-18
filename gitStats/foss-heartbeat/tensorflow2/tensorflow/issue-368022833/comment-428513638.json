{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/428513638", "html_url": "https://github.com/tensorflow/tensorflow/issues/22824#issuecomment-428513638", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22824", "id": 428513638, "node_id": "MDEyOklzc3VlQ29tbWVudDQyODUxMzYzOA==", "user": {"login": "xinyu-Naturali", "id": 43464505, "node_id": "MDQ6VXNlcjQzNDY0NTA1", "avatar_url": "https://avatars3.githubusercontent.com/u/43464505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xinyu-Naturali", "html_url": "https://github.com/xinyu-Naturali", "followers_url": "https://api.github.com/users/xinyu-Naturali/followers", "following_url": "https://api.github.com/users/xinyu-Naturali/following{/other_user}", "gists_url": "https://api.github.com/users/xinyu-Naturali/gists{/gist_id}", "starred_url": "https://api.github.com/users/xinyu-Naturali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xinyu-Naturali/subscriptions", "organizations_url": "https://api.github.com/users/xinyu-Naturali/orgs", "repos_url": "https://api.github.com/users/xinyu-Naturali/repos", "events_url": "https://api.github.com/users/xinyu-Naturali/events{/privacy}", "received_events_url": "https://api.github.com/users/xinyu-Naturali/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-10T10:01:58Z", "updated_at": "2018-10-10T10:51:23Z", "author_association": "NONE", "body_html": "<p>To provide an example that caused it to fail. I first subclassed model as follows:</p>\n<pre><code>class LanguageModel(tf.keras.Model):\n    def __init__(self, \n             vocal_size=15003, \n             embedding_size=512\n             input_len=64)\n        self.embedding = Embedding(vocal_size, embedding_size, \n                              input_length=input_len)\n        self.lstm = LSTM(hidden_size, return_sequences=True)\n        self.dense = Dense(vocal_size, activation='softmax')\n\n    def call(self, inputs, training=False):\n        emb_out = self.embedding(inputs)\n        lstm_out = self.lstm(embrace_out)\n        res = self.dense(lstm_out)\n        if (training)\n            ''' shouldn't use the last dense as we want to do sampling'''\n            return lstm_out\n        return res\n</code></pre>\n<p>Then the part to train the model as below</p>\n<pre><code>sampled_loss = SampledSoftmax(num_sampled, vocal_size, \n               model.dense.kernel, model.dense.bias,\n               hidden_size)\n\nmodel.compile(optimizer=tf.train.RMSPropOptimizer(lr),\n              loss=sampled_loss)\n</code></pre>\n<p>It would fail however I play around with it, because model.dense.kernel is not accessible as by the time of compiling the model, dense layer has not been initialized in call method. Error message as below:</p>\n<pre><code>Traceback (most recent call last):\n  File \"/usr/lib/python3.5/runpy.py\", line 184, in _run_module_as_main\n    \"__main__\", mod_spec)\n  File \"/usr/lib/python3.5/runpy.py\", line 85, in _run_code\n    exec(code, run_globals)\n  File \"/home/wuxinyu/workspace/nlu/lm/main.py\", line 72, in &lt;module&gt;\n    train_main()\n  File \"/home/wuxinyu/workspace/nlu/lm/main.py\", line 64, in train_main\n    train_model.build_lm_model()\n  File \"/home/wuxinyu/workspace/nlu/lm/main.py\", line 26, in build_lm_model\nself.model.dense.kernel,\nAttributeError: 'Dense' object has no attribute 'kernel'\n</code></pre>", "body_text": "To provide an example that caused it to fail. I first subclassed model as follows:\nclass LanguageModel(tf.keras.Model):\n    def __init__(self, \n             vocal_size=15003, \n             embedding_size=512\n             input_len=64)\n        self.embedding = Embedding(vocal_size, embedding_size, \n                              input_length=input_len)\n        self.lstm = LSTM(hidden_size, return_sequences=True)\n        self.dense = Dense(vocal_size, activation='softmax')\n\n    def call(self, inputs, training=False):\n        emb_out = self.embedding(inputs)\n        lstm_out = self.lstm(embrace_out)\n        res = self.dense(lstm_out)\n        if (training)\n            ''' shouldn't use the last dense as we want to do sampling'''\n            return lstm_out\n        return res\n\nThen the part to train the model as below\nsampled_loss = SampledSoftmax(num_sampled, vocal_size, \n               model.dense.kernel, model.dense.bias,\n               hidden_size)\n\nmodel.compile(optimizer=tf.train.RMSPropOptimizer(lr),\n              loss=sampled_loss)\n\nIt would fail however I play around with it, because model.dense.kernel is not accessible as by the time of compiling the model, dense layer has not been initialized in call method. Error message as below:\nTraceback (most recent call last):\n  File \"/usr/lib/python3.5/runpy.py\", line 184, in _run_module_as_main\n    \"__main__\", mod_spec)\n  File \"/usr/lib/python3.5/runpy.py\", line 85, in _run_code\n    exec(code, run_globals)\n  File \"/home/wuxinyu/workspace/nlu/lm/main.py\", line 72, in <module>\n    train_main()\n  File \"/home/wuxinyu/workspace/nlu/lm/main.py\", line 64, in train_main\n    train_model.build_lm_model()\n  File \"/home/wuxinyu/workspace/nlu/lm/main.py\", line 26, in build_lm_model\nself.model.dense.kernel,\nAttributeError: 'Dense' object has no attribute 'kernel'", "body": "To provide an example that caused it to fail. I first subclassed model as follows:\r\n\r\n    class LanguageModel(tf.keras.Model):\r\n        def __init__(self, \r\n                 vocal_size=15003, \r\n                 embedding_size=512\r\n                 input_len=64)\r\n            self.embedding = Embedding(vocal_size, embedding_size, \r\n                                  input_length=input_len)\r\n            self.lstm = LSTM(hidden_size, return_sequences=True)\r\n            self.dense = Dense(vocal_size, activation='softmax')\r\n\r\n        def call(self, inputs, training=False):\r\n            emb_out = self.embedding(inputs)\r\n            lstm_out = self.lstm(embrace_out)\r\n            res = self.dense(lstm_out)\r\n            if (training)\r\n                ''' shouldn't use the last dense as we want to do sampling'''\r\n                return lstm_out\r\n            return res\r\n\r\nThen the part to train the model as below\r\n\r\n    sampled_loss = SampledSoftmax(num_sampled, vocal_size, \r\n                   model.dense.kernel, model.dense.bias,\r\n                   hidden_size)\r\n\r\n    model.compile(optimizer=tf.train.RMSPropOptimizer(lr),\r\n                  loss=sampled_loss)\r\n\r\nIt would fail however I play around with it, because model.dense.kernel is not accessible as by the time of compiling the model, dense layer has not been initialized in call method. Error message as below:\r\n\r\n    Traceback (most recent call last):\r\n      File \"/usr/lib/python3.5/runpy.py\", line 184, in _run_module_as_main\r\n        \"__main__\", mod_spec)\r\n      File \"/usr/lib/python3.5/runpy.py\", line 85, in _run_code\r\n        exec(code, run_globals)\r\n      File \"/home/wuxinyu/workspace/nlu/lm/main.py\", line 72, in <module>\r\n        train_main()\r\n      File \"/home/wuxinyu/workspace/nlu/lm/main.py\", line 64, in train_main\r\n        train_model.build_lm_model()\r\n      File \"/home/wuxinyu/workspace/nlu/lm/main.py\", line 26, in build_lm_model\r\n    self.model.dense.kernel,\r\n    AttributeError: 'Dense' object has no attribute 'kernel'\r\n\r\n\r\n"}