{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6769", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6769/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6769/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6769/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/6769", "id": 199844341, "node_id": "MDU6SXNzdWUxOTk4NDQzNDE=", "number": 6769, "title": "TF Learn TypeError: DataType float64 for attr 'T' not in list of allowed values: float32, float16", "user": {"login": "wangli0519", "id": 7196183, "node_id": "MDQ6VXNlcjcxOTYxODM=", "avatar_url": "https://avatars3.githubusercontent.com/u/7196183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wangli0519", "html_url": "https://github.com/wangli0519", "followers_url": "https://api.github.com/users/wangli0519/followers", "following_url": "https://api.github.com/users/wangli0519/following{/other_user}", "gists_url": "https://api.github.com/users/wangli0519/gists{/gist_id}", "starred_url": "https://api.github.com/users/wangli0519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wangli0519/subscriptions", "organizations_url": "https://api.github.com/users/wangli0519/orgs", "repos_url": "https://api.github.com/users/wangli0519/repos", "events_url": "https://api.github.com/users/wangli0519/events{/privacy}", "received_events_url": "https://api.github.com/users/wangli0519/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-01-10T15:02:29Z", "updated_at": "2017-02-14T16:31:34Z", "closed_at": "2017-01-10T19:08:31Z", "author_association": "NONE", "body_html": "<p>NOTE: Only file GitHub issues for bugs and feature requests.  All other topics will be closed.</p>\n<p>For general support from the community, see <a href=\"https://stackoverflow.com/questions/tagged/tensorflow\" rel=\"nofollow\">StackOverflow</a>.<br>\nTo make bugs and feature requests more easy to find and organize, we close issues that are deemed<br>\nout of scope for GitHub Issues and point people to StackOverflow.</p>\n<p>For bugs or installation issues, please provide the following information.<br>\nThe more information you provide, the more easily we will be able to offer<br>\nhelp and advice.</p>\n<h3>What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?</h3>\n<p>tf.cast()</p>\n<h3>Environment info</h3>\n<p>Operating System:<br>\nmasOSSierra<br>\njupyter notebook<br>\ntensforflow v0.12.1</p>\n<p>Installed version of CUDA and cuDNN:<br>\n(please attach the output of <code>ls -l /path/to/cuda/lib/libcud*</code>):<br>\nNo</p>\n<p>If installed from binary pip package, provide:</p>\n<ol>\n<li>A link to the pip package you installed: pip install tensorflow</li>\n<li>The output from <code>python -c \"import tensorflow; print(tensorflow.__version__)\"</code>.tensforflow v0.12.1</li>\n</ol>\n<p>If installed from source, provide</p>\n<ol>\n<li>The commit hash (<code>git rev-parse HEAD</code>)</li>\n<li>The output of <code>bazel version</code></li>\n</ol>\n<h3>If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)</h3>\n<p>I try to run the examples of MNIST from this repository with tensorflow learn, but to read in data with Pandas and use sklearn StrandardScale to scale the data beforehand.<br>\n<a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/learn/mnist.py\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/learn/mnist.py</a></p>\n<h3>What other attempted solutions have you tried?</h3>\n<p>try to cast DataFrame into float32 with<br>\nX_train = X_train.astype(np.float32)<br>\ntry to cast each column with<br>\ntf.cast(col, tf.float32)<br>\nbut after use feature_columns = learn.infer_real_valued_columns_from_input(X_train)<br>\nfeature_columns dtype just turn to tf.float64<br>\n(tried and didn't find attribute from source code that I can change dtype here)</p>\n<h3>Logs or other output that would be helpful</h3>\n<p>(If logs are large, please upload as attachment or provide link).</p>\n<hr>\n<p>TypeError                                 Traceback (most recent call last)<br>\n in ()<br>\n----&gt; 1 classifier.fit(X_train, y_train, batch_size=100, steps=20000) #, monitors=[validation_monitor])</p>\n<p>/usr/local/lib/python2.7/site-packages/tensorflow/python/util/deprecation.pyc in new_func(*args, **kwargs)<br>\n189             _call_location(), decorator_utils.get_qualified_name(func),<br>\n190             func.<strong>module</strong>, arg_name, date, instructions)<br>\n--&gt; 191       return func(*args, **kwargs)<br>\n192     new_func.<strong>doc</strong> = _add_deprecated_arg_notice_to_docstring(<br>\n193         func.<strong>doc</strong>, date, instructions)</p>\n<p>/usr/local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.pyc in fit(self, x, y, input_fn, steps, batch_size, monitors, max_steps)<br>\n353                              steps=steps,<br>\n354                              monitors=monitors,<br>\n--&gt; 355                              max_steps=max_steps)<br>\n356     logging.info('Loss for final step: %s.', loss)<br>\n357     return self</p>\n<p>/usr/local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.pyc in _train_model(self, input_fn, steps, feed_fn, init_op, init_feed_fn, init_fn, device_fn, monitors, log_every_steps, fail_on_nan_loss, max_steps)<br>\n697       # cases, but will soon be deleted after the subclasses are updated.<br>\n698       # TODO(b/32664904): Update subclasses and delete the else-statement.<br>\n--&gt; 699       train_ops = self._get_train_ops(features, labels)<br>\n700       if isinstance(train_ops, model_fn_lib.ModelFnOps):  # Default signature<br>\n701         train_op = train_ops.train_op</p>\n<p>/usr/local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.pyc in _get_train_ops(self, features, labels)<br>\n1050       <code>ModelFnOps</code> object.<br>\n1051     \"\"\"<br>\n-&gt; 1052     return self._call_model_fn(features, labels, model_fn_lib.ModeKeys.TRAIN)<br>\n1053<br>\n1054   def _get_eval_ops(self, features, labels, metrics):</p>\n<p>/usr/local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.pyc in _call_model_fn(self, features, labels, mode)<br>\n1019                                           params=self.params)<br>\n1020       else:<br>\n-&gt; 1021         model_fn_results = self._model_fn(features, labels, mode=mode)<br>\n1022     else:<br>\n1023       model_fn_results = self._model_fn(features, labels)</p>\n<p> in conv_model(feature, target, mode)<br>\n10                                     activation_fn=tf.nn.relu)<br>\n11<br>\n---&gt; 12         h_pool1 = max_pool_2x2(h_conv1)<br>\n13<br>\n14     with tf.variable_scope('conv_layer2'):</p>\n<p> in max_pool_2x2(tensor_in)<br>\n1 def max_pool_2x2(tensor_in):<br>\n----&gt; 2     return tf.nn.max_pool(tensor_in, ksize=[1,2,2,1], strides=[1,2,2,1], padding='SAME')</p>\n<p>/usr/local/lib/python2.7/site-packages/tensorflow/python/ops/nn_ops.pyc in max_pool(value, ksize, strides, padding, data_format, name)<br>\n1615                                 padding=padding,<br>\n1616                                 data_format=data_format,<br>\n-&gt; 1617                                 name=name)<br>\n1618<br>\n1619</p>\n<p>/usr/local/lib/python2.7/site-packages/tensorflow/python/ops/gen_nn_ops.pyc in _max_pool(input, ksize, strides, padding, data_format, name)<br>\n1596   result = _op_def_lib.apply_op(\"MaxPool\", input=input, ksize=ksize,<br>\n1597                                 strides=strides, padding=padding,<br>\n-&gt; 1598                                 data_format=data_format, name=name)<br>\n1599   return result<br>\n1600</p>\n<p>/usr/local/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.pyc in apply_op(self, op_type_name, name, **keywords)<br>\n580             for base_type in base_types:<br>\n581               _SatisfiesTypeConstraint(base_type,<br>\n--&gt; 582                                        _Attr(op_def, input_arg.type_attr))<br>\n583             attrs[input_arg.type_attr] = attr_value<br>\n584             inferred_from[input_arg.type_attr] = input_name</p>\n<p>/usr/local/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.pyc in _SatisfiesTypeConstraint(dtype, attr_def)<br>\n58           \"DataType %s for attr '%s' not in list of allowed values: %s\" %<br>\n59           (dtypes.as_dtype(dtype).name, attr_def.name,<br>\n---&gt; 60            \", \".join(dtypes.as_dtype(x).name for x in allowed_list)))<br>\n61<br>\n62</p>\n<p>TypeError: DataType float64 for attr 'T' not in list of allowed values: float32, float16</p>\n<p>Many thanks.</p>", "body_text": "NOTE: Only file GitHub issues for bugs and feature requests.  All other topics will be closed.\nFor general support from the community, see StackOverflow.\nTo make bugs and feature requests more easy to find and organize, we close issues that are deemed\nout of scope for GitHub Issues and point people to StackOverflow.\nFor bugs or installation issues, please provide the following information.\nThe more information you provide, the more easily we will be able to offer\nhelp and advice.\nWhat related GitHub issues or StackOverflow threads have you found by searching the web for your problem?\ntf.cast()\nEnvironment info\nOperating System:\nmasOSSierra\njupyter notebook\ntensforflow v0.12.1\nInstalled version of CUDA and cuDNN:\n(please attach the output of ls -l /path/to/cuda/lib/libcud*):\nNo\nIf installed from binary pip package, provide:\n\nA link to the pip package you installed: pip install tensorflow\nThe output from python -c \"import tensorflow; print(tensorflow.__version__)\".tensforflow v0.12.1\n\nIf installed from source, provide\n\nThe commit hash (git rev-parse HEAD)\nThe output of bazel version\n\nIf possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\nI try to run the examples of MNIST from this repository with tensorflow learn, but to read in data with Pandas and use sklearn StrandardScale to scale the data beforehand.\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/learn/mnist.py\nWhat other attempted solutions have you tried?\ntry to cast DataFrame into float32 with\nX_train = X_train.astype(np.float32)\ntry to cast each column with\ntf.cast(col, tf.float32)\nbut after use feature_columns = learn.infer_real_valued_columns_from_input(X_train)\nfeature_columns dtype just turn to tf.float64\n(tried and didn't find attribute from source code that I can change dtype here)\nLogs or other output that would be helpful\n(If logs are large, please upload as attachment or provide link).\n\nTypeError                                 Traceback (most recent call last)\n in ()\n----> 1 classifier.fit(X_train, y_train, batch_size=100, steps=20000) #, monitors=[validation_monitor])\n/usr/local/lib/python2.7/site-packages/tensorflow/python/util/deprecation.pyc in new_func(*args, **kwargs)\n189             _call_location(), decorator_utils.get_qualified_name(func),\n190             func.module, arg_name, date, instructions)\n--> 191       return func(*args, **kwargs)\n192     new_func.doc = _add_deprecated_arg_notice_to_docstring(\n193         func.doc, date, instructions)\n/usr/local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.pyc in fit(self, x, y, input_fn, steps, batch_size, monitors, max_steps)\n353                              steps=steps,\n354                              monitors=monitors,\n--> 355                              max_steps=max_steps)\n356     logging.info('Loss for final step: %s.', loss)\n357     return self\n/usr/local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.pyc in _train_model(self, input_fn, steps, feed_fn, init_op, init_feed_fn, init_fn, device_fn, monitors, log_every_steps, fail_on_nan_loss, max_steps)\n697       # cases, but will soon be deleted after the subclasses are updated.\n698       # TODO(b/32664904): Update subclasses and delete the else-statement.\n--> 699       train_ops = self._get_train_ops(features, labels)\n700       if isinstance(train_ops, model_fn_lib.ModelFnOps):  # Default signature\n701         train_op = train_ops.train_op\n/usr/local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.pyc in _get_train_ops(self, features, labels)\n1050       ModelFnOps object.\n1051     \"\"\"\n-> 1052     return self._call_model_fn(features, labels, model_fn_lib.ModeKeys.TRAIN)\n1053\n1054   def _get_eval_ops(self, features, labels, metrics):\n/usr/local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.pyc in _call_model_fn(self, features, labels, mode)\n1019                                           params=self.params)\n1020       else:\n-> 1021         model_fn_results = self._model_fn(features, labels, mode=mode)\n1022     else:\n1023       model_fn_results = self._model_fn(features, labels)\n in conv_model(feature, target, mode)\n10                                     activation_fn=tf.nn.relu)\n11\n---> 12         h_pool1 = max_pool_2x2(h_conv1)\n13\n14     with tf.variable_scope('conv_layer2'):\n in max_pool_2x2(tensor_in)\n1 def max_pool_2x2(tensor_in):\n----> 2     return tf.nn.max_pool(tensor_in, ksize=[1,2,2,1], strides=[1,2,2,1], padding='SAME')\n/usr/local/lib/python2.7/site-packages/tensorflow/python/ops/nn_ops.pyc in max_pool(value, ksize, strides, padding, data_format, name)\n1615                                 padding=padding,\n1616                                 data_format=data_format,\n-> 1617                                 name=name)\n1618\n1619\n/usr/local/lib/python2.7/site-packages/tensorflow/python/ops/gen_nn_ops.pyc in _max_pool(input, ksize, strides, padding, data_format, name)\n1596   result = _op_def_lib.apply_op(\"MaxPool\", input=input, ksize=ksize,\n1597                                 strides=strides, padding=padding,\n-> 1598                                 data_format=data_format, name=name)\n1599   return result\n1600\n/usr/local/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.pyc in apply_op(self, op_type_name, name, **keywords)\n580             for base_type in base_types:\n581               _SatisfiesTypeConstraint(base_type,\n--> 582                                        _Attr(op_def, input_arg.type_attr))\n583             attrs[input_arg.type_attr] = attr_value\n584             inferred_from[input_arg.type_attr] = input_name\n/usr/local/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.pyc in _SatisfiesTypeConstraint(dtype, attr_def)\n58           \"DataType %s for attr '%s' not in list of allowed values: %s\" %\n59           (dtypes.as_dtype(dtype).name, attr_def.name,\n---> 60            \", \".join(dtypes.as_dtype(x).name for x in allowed_list)))\n61\n62\nTypeError: DataType float64 for attr 'T' not in list of allowed values: float32, float16\nMany thanks.", "body": "NOTE: Only file GitHub issues for bugs and feature requests.  All other topics will be closed.\r\n\r\nFor general support from the community, see [StackOverflow](https://stackoverflow.com/questions/tagged/tensorflow).\r\nTo make bugs and feature requests more easy to find and organize, we close issues that are deemed\r\nout of scope for GitHub Issues and point people to StackOverflow.\r\n\r\nFor bugs or installation issues, please provide the following information.\r\nThe more information you provide, the more easily we will be able to offer\r\nhelp and advice.\r\n\r\n### What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?\r\ntf.cast()\r\n\r\n### Environment info\r\nOperating System: \r\nmasOSSierra\r\njupyter notebook  \r\ntensforflow v0.12.1\r\n\r\nInstalled version of CUDA and cuDNN: \r\n(please attach the output of `ls -l /path/to/cuda/lib/libcud*`):\r\nNo\r\n\r\nIf installed from binary pip package, provide:\r\n\r\n1. A link to the pip package you installed: pip install tensorflow\r\n2. The output from `python -c \"import tensorflow; print(tensorflow.__version__)\"`.tensforflow v0.12.1\r\n\r\nIf installed from source, provide \r\n\r\n1. The commit hash (`git rev-parse HEAD`)\r\n2. The output of `bazel version`\r\n\r\n### If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\r\nI try to run the examples of MNIST from this repository with tensorflow learn, but to read in data with Pandas and use sklearn StrandardScale to scale the data beforehand.\r\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/learn/mnist.py\r\n\r\n### What other attempted solutions have you tried?\r\ntry to cast DataFrame into float32 with\r\nX_train = X_train.astype(np.float32)\r\ntry to cast each column with\r\ntf.cast(col, tf.float32)\r\nbut after use feature_columns = learn.infer_real_valued_columns_from_input(X_train)\r\nfeature_columns dtype just turn to tf.float64\r\n(tried and didn't find attribute from source code that I can change dtype here)\r\n\r\n### Logs or other output that would be helpful\r\n(If logs are large, please upload as attachment or provide link).\r\n\r\n\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-102-1fdec574ca0f> in <module>()\r\n----> 1 classifier.fit(X_train, y_train, batch_size=100, steps=20000) #, monitors=[validation_monitor])\r\n\r\n/usr/local/lib/python2.7/site-packages/tensorflow/python/util/deprecation.pyc in new_func(*args, **kwargs)\r\n    189             _call_location(), decorator_utils.get_qualified_name(func),\r\n    190             func.__module__, arg_name, date, instructions)\r\n--> 191       return func(*args, **kwargs)\r\n    192     new_func.__doc__ = _add_deprecated_arg_notice_to_docstring(\r\n    193         func.__doc__, date, instructions)\r\n\r\n/usr/local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.pyc in fit(self, x, y, input_fn, steps, batch_size, monitors, max_steps)\r\n    353                              steps=steps,\r\n    354                              monitors=monitors,\r\n--> 355                              max_steps=max_steps)\r\n    356     logging.info('Loss for final step: %s.', loss)\r\n    357     return self\r\n\r\n/usr/local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.pyc in _train_model(self, input_fn, steps, feed_fn, init_op, init_feed_fn, init_fn, device_fn, monitors, log_every_steps, fail_on_nan_loss, max_steps)\r\n    697       # cases, but will soon be deleted after the subclasses are updated.\r\n    698       # TODO(b/32664904): Update subclasses and delete the else-statement.\r\n--> 699       train_ops = self._get_train_ops(features, labels)\r\n    700       if isinstance(train_ops, model_fn_lib.ModelFnOps):  # Default signature\r\n    701         train_op = train_ops.train_op\r\n\r\n/usr/local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.pyc in _get_train_ops(self, features, labels)\r\n   1050       `ModelFnOps` object.\r\n   1051     \"\"\"\r\n-> 1052     return self._call_model_fn(features, labels, model_fn_lib.ModeKeys.TRAIN)\r\n   1053 \r\n   1054   def _get_eval_ops(self, features, labels, metrics):\r\n\r\n/usr/local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.pyc in _call_model_fn(self, features, labels, mode)\r\n   1019                                           params=self.params)\r\n   1020       else:\r\n-> 1021         model_fn_results = self._model_fn(features, labels, mode=mode)\r\n   1022     else:\r\n   1023       model_fn_results = self._model_fn(features, labels)\r\n\r\n<ipython-input-96-18f3ebce1f4a> in conv_model(feature, target, mode)\r\n     10                                     activation_fn=tf.nn.relu)\r\n     11 \r\n---> 12         h_pool1 = max_pool_2x2(h_conv1)\r\n     13 \r\n     14     with tf.variable_scope('conv_layer2'):\r\n\r\n<ipython-input-95-7b3697815c2b> in max_pool_2x2(tensor_in)\r\n      1 def max_pool_2x2(tensor_in):\r\n----> 2     return tf.nn.max_pool(tensor_in, ksize=[1,2,2,1], strides=[1,2,2,1], padding='SAME')\r\n\r\n/usr/local/lib/python2.7/site-packages/tensorflow/python/ops/nn_ops.pyc in max_pool(value, ksize, strides, padding, data_format, name)\r\n   1615                                 padding=padding,\r\n   1616                                 data_format=data_format,\r\n-> 1617                                 name=name)\r\n   1618 \r\n   1619 \r\n\r\n/usr/local/lib/python2.7/site-packages/tensorflow/python/ops/gen_nn_ops.pyc in _max_pool(input, ksize, strides, padding, data_format, name)\r\n   1596   result = _op_def_lib.apply_op(\"MaxPool\", input=input, ksize=ksize,\r\n   1597                                 strides=strides, padding=padding,\r\n-> 1598                                 data_format=data_format, name=name)\r\n   1599   return result\r\n   1600 \r\n\r\n/usr/local/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.pyc in apply_op(self, op_type_name, name, **keywords)\r\n    580             for base_type in base_types:\r\n    581               _SatisfiesTypeConstraint(base_type,\r\n--> 582                                        _Attr(op_def, input_arg.type_attr))\r\n    583             attrs[input_arg.type_attr] = attr_value\r\n    584             inferred_from[input_arg.type_attr] = input_name\r\n\r\n/usr/local/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.pyc in _SatisfiesTypeConstraint(dtype, attr_def)\r\n     58           \"DataType %s for attr '%s' not in list of allowed values: %s\" %\r\n     59           (dtypes.as_dtype(dtype).name, attr_def.name,\r\n---> 60            \", \".join(dtypes.as_dtype(x).name for x in allowed_list)))\r\n     61 \r\n     62 \r\n\r\nTypeError: DataType float64 for attr 'T' not in list of allowed values: float32, float16\r\n\r\n\r\nMany thanks."}