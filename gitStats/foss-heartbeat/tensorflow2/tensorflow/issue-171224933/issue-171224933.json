{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3821", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3821/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3821/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3821/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/3821", "id": 171224933, "node_id": "MDU6SXNzdWUxNzEyMjQ5MzM=", "number": 3821, "title": "Tensorflow Checkpoint and CKPT is not working and does not give any readable error.", "user": {"login": "ghost", "id": 10137, "node_id": "MDQ6VXNlcjEwMTM3", "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-08-15T17:59:16Z", "updated_at": "2016-08-26T20:05:52Z", "closed_at": "2016-08-26T20:05:31Z", "author_association": "NONE", "body_html": "<h3>Environment info</h3>\n<p>Operating System:</p>\n<p>Mac OSX El Capitan</p>\n<p>If installed from binary pip package, provide:</p>\n<ol>\n<li>Which pip package you installed.</li>\n</ol>\n<p>The latest version of Tensorflow</p>\n<ol>\n<li>The output from <code>python -c \"import tensorflow; print(tensorflow.__version__)\"</code>.</li>\n</ol>\n<p>0.10.0rc0</p>\n<h3>Steps to reproduce</h3>\n<p>I have trained a convolutional model through the main program and stored it into a checkpoint and ckpt file. The problem lies in the evaluation program. The ckpt file seems to not output anything but a bunch of errors. The program does not complete either.</p>\n<p>The code for main is:</p>\n<pre><code>import Input\nimport Process\n\nimport time\nimport numpy as np\n\nimport tensorflow as tf\nfrom datetime import datetime\n\nFLAGS = tf.app.flags.FLAGS\n\ndef train():\n    with tf.Session() as sess:\n        images, labels = Process.inputs()\n\n        forward_propgation_results = Process.forward_propagation(images)\n\n        train_loss, cost = Process.error(forward_propgation_results, labels)\n\n        image_summary_t = tf.image_summary(images.name, images, max_images = 2)\n\n        summary_op = tf.merge_all_summaries()\n\n        init = tf.initialize_all_variables()\n\n        saver = tf.train.Saver()\n\n        sess.run(init)\n\n        saver = tf.train.Saver(tf.all_variables())\n\n        tf.train.start_queue_runners(sess = sess)\n\n        train_dir = \"/Users/Zanhuang/Desktop/NNP/model.ckpt\"\n\n        summary_writer = tf.train.SummaryWriter(train_dir, sess.graph)\n\n        for step in range(100):\n            start_time = time.time()\n            print(sess.run([train_loss, cost]))\n            duration = time.time() - start_time\n            if step % 1 == 0:\n                num_examples_per_step = FLAGS.batch_size\n                examples_per_sec = num_examples_per_step / duration\n                sec_per_batch = float(duration)\n\n                format_str = ('%s: step %d, (%.1f examples/sec; %.3f ''sec/batch)')\n                print (format_str % (datetime.now(), step, examples_per_sec, sec_per_batch))\n\n                summary_str = sess.run(summary_op)\n                summary_writer.add_summary(summary_str, step)\n\n                if step % 2 == 0:\n                    checkpoint_path = train_dir\n                    saver.save(sess, checkpoint_path, global_step = step)\n\n\ndef main(argv = None):\n    train()\n\nif __name__ == '__main__':\n  tf.app.run()\n</code></pre>\n<p>and the eval is</p>\n<pre><code>import tensorflow as tf\n\nimport main\nimport Process\nimport Input\n\neval_dir = \"/Users/Zanhuang/Desktop/NNP/model.ckpt-98\"\ncheckpoint_dir = \"/Users/Zanhuang/Desktop/NNP/checkpoint\"\n\n\ndef evaluate():\n  with tf.Graph().as_default() as g:\n    images, labels = Process.eval_inputs()\n    forward_propgation_results = Process.forward_propagation(images)\n    init_op = tf.initialize_all_variables()\n    saver = tf.train.Saver()\n    top_k_op = tf.nn.in_top_k(forward_propgation_results, labels, 1)\n\n  with tf.Session(graph = g) as sess:\n    tf.train.start_queue_runners(sess = sess)\n    sess.run(init_op)\n    saver.restore(sess, eval_dir)\n    for i in range(100):\n        print(sess.run(top_k_op))\n\ndef main(argv = None):\n    evaluate()\n\nif __name__ == '__main__':\n  tf.app.run()\n</code></pre>\n<h3>What have you tried?</h3>\n<ol>\n<li>I tried initializing the variables before running the queue's but that only removed the errors. The errors also do not point to any problem thats in the code.</li>\n</ol>\n<h3>Logs or other output that would be helpful</h3>\n<p>(If logs are large, please upload as attachment).</p>\n<p>The output is:</p>\n<p><a href=\"https://github.com/tensorflow/tensorflow/files/418658/error.txt\">error.txt</a></p>", "body_text": "Environment info\nOperating System:\nMac OSX El Capitan\nIf installed from binary pip package, provide:\n\nWhich pip package you installed.\n\nThe latest version of Tensorflow\n\nThe output from python -c \"import tensorflow; print(tensorflow.__version__)\".\n\n0.10.0rc0\nSteps to reproduce\nI have trained a convolutional model through the main program and stored it into a checkpoint and ckpt file. The problem lies in the evaluation program. The ckpt file seems to not output anything but a bunch of errors. The program does not complete either.\nThe code for main is:\nimport Input\nimport Process\n\nimport time\nimport numpy as np\n\nimport tensorflow as tf\nfrom datetime import datetime\n\nFLAGS = tf.app.flags.FLAGS\n\ndef train():\n    with tf.Session() as sess:\n        images, labels = Process.inputs()\n\n        forward_propgation_results = Process.forward_propagation(images)\n\n        train_loss, cost = Process.error(forward_propgation_results, labels)\n\n        image_summary_t = tf.image_summary(images.name, images, max_images = 2)\n\n        summary_op = tf.merge_all_summaries()\n\n        init = tf.initialize_all_variables()\n\n        saver = tf.train.Saver()\n\n        sess.run(init)\n\n        saver = tf.train.Saver(tf.all_variables())\n\n        tf.train.start_queue_runners(sess = sess)\n\n        train_dir = \"/Users/Zanhuang/Desktop/NNP/model.ckpt\"\n\n        summary_writer = tf.train.SummaryWriter(train_dir, sess.graph)\n\n        for step in range(100):\n            start_time = time.time()\n            print(sess.run([train_loss, cost]))\n            duration = time.time() - start_time\n            if step % 1 == 0:\n                num_examples_per_step = FLAGS.batch_size\n                examples_per_sec = num_examples_per_step / duration\n                sec_per_batch = float(duration)\n\n                format_str = ('%s: step %d, (%.1f examples/sec; %.3f ''sec/batch)')\n                print (format_str % (datetime.now(), step, examples_per_sec, sec_per_batch))\n\n                summary_str = sess.run(summary_op)\n                summary_writer.add_summary(summary_str, step)\n\n                if step % 2 == 0:\n                    checkpoint_path = train_dir\n                    saver.save(sess, checkpoint_path, global_step = step)\n\n\ndef main(argv = None):\n    train()\n\nif __name__ == '__main__':\n  tf.app.run()\n\nand the eval is\nimport tensorflow as tf\n\nimport main\nimport Process\nimport Input\n\neval_dir = \"/Users/Zanhuang/Desktop/NNP/model.ckpt-98\"\ncheckpoint_dir = \"/Users/Zanhuang/Desktop/NNP/checkpoint\"\n\n\ndef evaluate():\n  with tf.Graph().as_default() as g:\n    images, labels = Process.eval_inputs()\n    forward_propgation_results = Process.forward_propagation(images)\n    init_op = tf.initialize_all_variables()\n    saver = tf.train.Saver()\n    top_k_op = tf.nn.in_top_k(forward_propgation_results, labels, 1)\n\n  with tf.Session(graph = g) as sess:\n    tf.train.start_queue_runners(sess = sess)\n    sess.run(init_op)\n    saver.restore(sess, eval_dir)\n    for i in range(100):\n        print(sess.run(top_k_op))\n\ndef main(argv = None):\n    evaluate()\n\nif __name__ == '__main__':\n  tf.app.run()\n\nWhat have you tried?\n\nI tried initializing the variables before running the queue's but that only removed the errors. The errors also do not point to any problem thats in the code.\n\nLogs or other output that would be helpful\n(If logs are large, please upload as attachment).\nThe output is:\nerror.txt", "body": "### Environment info\n\nOperating System:\n\nMac OSX El Capitan\n\nIf installed from binary pip package, provide:\n1. Which pip package you installed.\n\nThe latest version of Tensorflow\n1. The output from `python -c \"import tensorflow; print(tensorflow.__version__)\"`.\n\n0.10.0rc0\n### Steps to reproduce\n\nI have trained a convolutional model through the main program and stored it into a checkpoint and ckpt file. The problem lies in the evaluation program. The ckpt file seems to not output anything but a bunch of errors. The program does not complete either.\n\nThe code for main is:\n\n```\nimport Input\nimport Process\n\nimport time\nimport numpy as np\n\nimport tensorflow as tf\nfrom datetime import datetime\n\nFLAGS = tf.app.flags.FLAGS\n\ndef train():\n    with tf.Session() as sess:\n        images, labels = Process.inputs()\n\n        forward_propgation_results = Process.forward_propagation(images)\n\n        train_loss, cost = Process.error(forward_propgation_results, labels)\n\n        image_summary_t = tf.image_summary(images.name, images, max_images = 2)\n\n        summary_op = tf.merge_all_summaries()\n\n        init = tf.initialize_all_variables()\n\n        saver = tf.train.Saver()\n\n        sess.run(init)\n\n        saver = tf.train.Saver(tf.all_variables())\n\n        tf.train.start_queue_runners(sess = sess)\n\n        train_dir = \"/Users/Zanhuang/Desktop/NNP/model.ckpt\"\n\n        summary_writer = tf.train.SummaryWriter(train_dir, sess.graph)\n\n        for step in range(100):\n            start_time = time.time()\n            print(sess.run([train_loss, cost]))\n            duration = time.time() - start_time\n            if step % 1 == 0:\n                num_examples_per_step = FLAGS.batch_size\n                examples_per_sec = num_examples_per_step / duration\n                sec_per_batch = float(duration)\n\n                format_str = ('%s: step %d, (%.1f examples/sec; %.3f ''sec/batch)')\n                print (format_str % (datetime.now(), step, examples_per_sec, sec_per_batch))\n\n                summary_str = sess.run(summary_op)\n                summary_writer.add_summary(summary_str, step)\n\n                if step % 2 == 0:\n                    checkpoint_path = train_dir\n                    saver.save(sess, checkpoint_path, global_step = step)\n\n\ndef main(argv = None):\n    train()\n\nif __name__ == '__main__':\n  tf.app.run()\n```\n\nand the eval is \n\n```\nimport tensorflow as tf\n\nimport main\nimport Process\nimport Input\n\neval_dir = \"/Users/Zanhuang/Desktop/NNP/model.ckpt-98\"\ncheckpoint_dir = \"/Users/Zanhuang/Desktop/NNP/checkpoint\"\n\n\ndef evaluate():\n  with tf.Graph().as_default() as g:\n    images, labels = Process.eval_inputs()\n    forward_propgation_results = Process.forward_propagation(images)\n    init_op = tf.initialize_all_variables()\n    saver = tf.train.Saver()\n    top_k_op = tf.nn.in_top_k(forward_propgation_results, labels, 1)\n\n  with tf.Session(graph = g) as sess:\n    tf.train.start_queue_runners(sess = sess)\n    sess.run(init_op)\n    saver.restore(sess, eval_dir)\n    for i in range(100):\n        print(sess.run(top_k_op))\n\ndef main(argv = None):\n    evaluate()\n\nif __name__ == '__main__':\n  tf.app.run()\n```\n### What have you tried?\n1. I tried initializing the variables before running the queue's but that only removed the errors. The errors also do not point to any problem thats in the code.\n### Logs or other output that would be helpful\n\n(If logs are large, please upload as attachment).\n\nThe output is:\n\n[error.txt](https://github.com/tensorflow/tensorflow/files/418658/error.txt)\n"}