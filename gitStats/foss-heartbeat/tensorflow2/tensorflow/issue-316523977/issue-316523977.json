{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18761", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18761/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18761/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18761/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18761", "id": 316523977, "node_id": "MDU6SXNzdWUzMTY1MjM5Nzc=", "number": 18761, "title": "Tensor Hub generated model- Coreml conversions issue", "user": {"login": "johnyquest7", "id": 22123236, "node_id": "MDQ6VXNlcjIyMTIzMjM2", "avatar_url": "https://avatars2.githubusercontent.com/u/22123236?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johnyquest7", "html_url": "https://github.com/johnyquest7", "followers_url": "https://api.github.com/users/johnyquest7/followers", "following_url": "https://api.github.com/users/johnyquest7/following{/other_user}", "gists_url": "https://api.github.com/users/johnyquest7/gists{/gist_id}", "starred_url": "https://api.github.com/users/johnyquest7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johnyquest7/subscriptions", "organizations_url": "https://api.github.com/users/johnyquest7/orgs", "repos_url": "https://api.github.com/users/johnyquest7/repos", "events_url": "https://api.github.com/users/johnyquest7/events{/privacy}", "received_events_url": "https://api.github.com/users/johnyquest7/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-21T20:46:12Z", "updated_at": "2018-04-22T05:34:34Z", "closed_at": "2018-04-22T04:23:21Z", "author_association": "NONE", "body_html": "<p>I am trying to convert a tensor flow model created using tensor flow hub using the following code. Base model used for the model was inceptionv3</p>\n<p>`</p>\n<p>import tensorflow as tf<br>\ntf_model_path = 'Inception_v3_US_output_graph.pb'<br>\nwith open(tf_model_path, 'rb') as f:<br>\nserialized = f.read()<br>\ntf.reset_default_graph()<br>\noriginal_gdef = tf.GraphDef()<br>\noriginal_gdef.ParseFromString(serialized)</p>\n<p>with tf.Graph().as_default() as g:<br>\ntf.import_graph_def(original_gdef, name='')<br>\nops = g.get_operations()<br>\nN = len(ops)<br>\nfor i in [0,1,2,N-3,N-2,N-1]:<br>\nprint('\\n\\nop id {} : op type: \"{}\"'.format(str(i), ops[i].type));<br>\nprint('input(s):'),<br>\nfor x in ops[i].inputs:<br>\nprint(\"name = {}, shape: {}, \".format(x.name, x.get_shape())),<br>\nprint('\\noutput(s):'),<br>\nfor x in ops[i].outputs:<br>\nprint(\"name = {}, shape: {},\".format(x.name, x.get_shape())),`</p>\n<p><strong>This generated following output</strong></p>\n<blockquote>\n<p>op id 0 : op type: \"Placeholder\"<br>\ninput(s):</p>\n</blockquote>\n<blockquote>\n<p>output(s):<br>\nname = Placeholder:0, shape: (?, 224, 224, 3),</p>\n</blockquote>\n<blockquote>\n<p>op id 1 : op type: \"Const\"<br>\ninput(s):</p>\n</blockquote>\n<blockquote>\n<p>output(s):<br>\nname = module/conv0/weights:0, shape: (3, 3, 3, 32),</p>\n</blockquote>\n<blockquote>\n<p>op id 2 : op type: \"Const\"<br>\ninput(s):</p>\n</blockquote>\n<blockquote>\n<p>output(s):<br>\nname = module/conv0_bn/gamma:0, shape: (32,),</p>\n</blockquote>\n<blockquote>\n<p>op id 3236 : op type: \"MatMul\"<br>\ninput(s):<br>\nname = input/BottleneckInputPlaceholder:0, shape: (?, 1056),<br>\nname = final_retrain_ops/weights/final_weights/read:0, shape: (1056, 2),</p>\n</blockquote>\n<blockquote>\n<p>output(s):<br>\nname = final_retrain_ops/Wx_plus_b/MatMul:0, shape: (?, 2),</p>\n</blockquote>\n<blockquote>\n<p>op id 3237 : op type: \"Add\"<br>\ninput(s):<br>\nname = final_retrain_ops/Wx_plus_b/MatMul:0, shape: (?, 2),<br>\nname = final_retrain_ops/biases/final_biases/read:0, shape: (2,),</p>\n</blockquote>\n<blockquote>\n<p>output(s):<br>\nname = final_retrain_ops/Wx_plus_b/add:0, shape: (?, 2),</p>\n</blockquote>\n<blockquote>\n<p>op id 3238 : op type: \"Softmax\"<br>\ninput(s):<br>\nname = final_retrain_ops/Wx_plus_b/add:0, shape: (?, 2),</p>\n</blockquote>\n<blockquote>\n<p>output(s):<br>\nname = final_result:0, shape: (?, 2),</p>\n</blockquote>\n<p><strong>Then I tried to convert this to a coreml model using the following code</strong></p>\n<p>`import tfcoreml</p>\n<p>input_tensor_shapes = {\"Placeholder:0\":[1,224,224,3]} # batch size is 1</p>\n<p>image_input_name = ['Placeholder:0']</p>\n<p>coreml_model_file = 'Inception_v3_US_output_graph.pb'</p>\n<p>output_tensor_names = ['final_result:0']</p>\n<p>class_labels = 'Inception_v3_US_output_labels.txt'</p>\n<p>coreml_model = tfcoreml.convert(<br>\ntf_model_path=tf_model_path,<br>\nmlmodel_path=coreml_model_file,<br>\ninput_name_shape_dict=input_tensor_shapes,<br>\noutput_feature_names=output_tensor_names,<br>\nimage_input_names = image_input_name,<br>\nclass_labels = class_labels)`</p>\n<p><strong>But ended up getting the following error. Following are the last few lines of the error message</strong></p>\n<blockquote>\n<p>2308/3239: Converting op name: Placeholder ( type:  Placeholder )<br>\nSkipping name of placeholder<br>\n2309/3239: Converting op name: module_apply_default/hub_input/Mul ( type:  Mul )<br>\n2310/3239: Converting op name: module_apply_default/hub_input/Sub ( type:  Sub )<br>\n2311/3239: Converting op name: module_apply_default/conv0/Conv2D ( type:  Conv2D )<br>\n2312/3239: Converting op name: module_apply_default/conv0_bn/FusedBatchNorm ( type:  FusedBatchNorm )<br>\n2313/3239: Converting op name: module_apply_default/cell_stem_1/Relu ( type:  Relu )<br>\n2314/3239: Converting op name: module_apply_default/cell_stem_1/Pad ( type:  Pad )<br>\n2315/3239: Converting op name: module_apply_default/cell_stem_1/strided_slice ( type:  StridedSlice )</p>\n</blockquote>\n<hr>\n<blockquote>\n<p>AssertionError                            Traceback (most recent call last)<br>\n in ()<br>\n18         output_feature_names=output_tensor_names,<br>\n19         image_input_names = image_input_name,<br>\n---&gt; 20         class_labels = class_labels)</p>\n</blockquote>\n<blockquote>\n<p>~/tfcoreml/tf-coreml/tfcoreml/_tf_coreml_converter.py in convert(tf_model_path, mlmodel_path, output_feature_names, input_name_shape_dict, image_input_names, is_bgr, red_bias, green_bias, blue_bias, gray_bias, image_scale, class_labels, predicted_feature_name, predicted_probabilities_output)<br>\n491       class_labels=class_labels,<br>\n492       predicted_feature_name=predicted_feature_name,<br>\n--&gt; 493       predicted_probabilities_output=predicted_probabilities_output)</p>\n</blockquote>\n<blockquote>\n<p>~/tfcoreml/tf-coreml/tfcoreml/_tf_coreml_converter.py in _convert_pb_to_mlmodel(tf_model_path, mlmodel_path, output_feature_names, input_name_shape_dict, image_input_names, is_bgr, red_bias, green_bias, blue_bias, gray_bias, image_scale, class_labels, predicted_feature_name, predicted_probabilities_output)<br>\n289   context.input_feed_dict = input_feed_dict<br>\n290   context.skip_ops = skip_ops<br>\n--&gt; 291   convert_ops_to_layers(context)<br>\n292   sess.close()<br>\n293</p>\n</blockquote>\n<blockquote>\n<p>~/tfcoreml/tf-coreml/tfcoreml/_ops_to_layers.py in convert_ops_to_layers(context)<br>\n146         print('%d/%d: Converting op name: %s ( type:  %s )' % (<br>\n147             i+1, len(context.all_ops), op.name, op.type))<br>\n--&gt; 148         translator(op, context)<br>\n149       connect_skipped_ops(context)</p>\n</blockquote>\n<blockquote>\n<p>~/tfcoreml/tf-coreml/tfcoreml/_layers.py in strided_slice(op, context)<br>\n1184     skip(op,context)<br>\n1185   else:<br>\n-&gt; 1186     assert False, 'Strided Slice case not handled'<br>\n1187   context.translated[output_name] = True<br>\n1188</p>\n</blockquote>\n<h1>AssertionError: Strided Slice case not handled</h1>\n<p>How can I fix this?</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=7546478\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/aseemw\">@aseemw</a></p>", "body_text": "I am trying to convert a tensor flow model created using tensor flow hub using the following code. Base model used for the model was inceptionv3\n`\nimport tensorflow as tf\ntf_model_path = 'Inception_v3_US_output_graph.pb'\nwith open(tf_model_path, 'rb') as f:\nserialized = f.read()\ntf.reset_default_graph()\noriginal_gdef = tf.GraphDef()\noriginal_gdef.ParseFromString(serialized)\nwith tf.Graph().as_default() as g:\ntf.import_graph_def(original_gdef, name='')\nops = g.get_operations()\nN = len(ops)\nfor i in [0,1,2,N-3,N-2,N-1]:\nprint('\\n\\nop id {} : op type: \"{}\"'.format(str(i), ops[i].type));\nprint('input(s):'),\nfor x in ops[i].inputs:\nprint(\"name = {}, shape: {}, \".format(x.name, x.get_shape())),\nprint('\\noutput(s):'),\nfor x in ops[i].outputs:\nprint(\"name = {}, shape: {},\".format(x.name, x.get_shape())),`\nThis generated following output\n\nop id 0 : op type: \"Placeholder\"\ninput(s):\n\n\noutput(s):\nname = Placeholder:0, shape: (?, 224, 224, 3),\n\n\nop id 1 : op type: \"Const\"\ninput(s):\n\n\noutput(s):\nname = module/conv0/weights:0, shape: (3, 3, 3, 32),\n\n\nop id 2 : op type: \"Const\"\ninput(s):\n\n\noutput(s):\nname = module/conv0_bn/gamma:0, shape: (32,),\n\n\nop id 3236 : op type: \"MatMul\"\ninput(s):\nname = input/BottleneckInputPlaceholder:0, shape: (?, 1056),\nname = final_retrain_ops/weights/final_weights/read:0, shape: (1056, 2),\n\n\noutput(s):\nname = final_retrain_ops/Wx_plus_b/MatMul:0, shape: (?, 2),\n\n\nop id 3237 : op type: \"Add\"\ninput(s):\nname = final_retrain_ops/Wx_plus_b/MatMul:0, shape: (?, 2),\nname = final_retrain_ops/biases/final_biases/read:0, shape: (2,),\n\n\noutput(s):\nname = final_retrain_ops/Wx_plus_b/add:0, shape: (?, 2),\n\n\nop id 3238 : op type: \"Softmax\"\ninput(s):\nname = final_retrain_ops/Wx_plus_b/add:0, shape: (?, 2),\n\n\noutput(s):\nname = final_result:0, shape: (?, 2),\n\nThen I tried to convert this to a coreml model using the following code\n`import tfcoreml\ninput_tensor_shapes = {\"Placeholder:0\":[1,224,224,3]} # batch size is 1\nimage_input_name = ['Placeholder:0']\ncoreml_model_file = 'Inception_v3_US_output_graph.pb'\noutput_tensor_names = ['final_result:0']\nclass_labels = 'Inception_v3_US_output_labels.txt'\ncoreml_model = tfcoreml.convert(\ntf_model_path=tf_model_path,\nmlmodel_path=coreml_model_file,\ninput_name_shape_dict=input_tensor_shapes,\noutput_feature_names=output_tensor_names,\nimage_input_names = image_input_name,\nclass_labels = class_labels)`\nBut ended up getting the following error. Following are the last few lines of the error message\n\n2308/3239: Converting op name: Placeholder ( type:  Placeholder )\nSkipping name of placeholder\n2309/3239: Converting op name: module_apply_default/hub_input/Mul ( type:  Mul )\n2310/3239: Converting op name: module_apply_default/hub_input/Sub ( type:  Sub )\n2311/3239: Converting op name: module_apply_default/conv0/Conv2D ( type:  Conv2D )\n2312/3239: Converting op name: module_apply_default/conv0_bn/FusedBatchNorm ( type:  FusedBatchNorm )\n2313/3239: Converting op name: module_apply_default/cell_stem_1/Relu ( type:  Relu )\n2314/3239: Converting op name: module_apply_default/cell_stem_1/Pad ( type:  Pad )\n2315/3239: Converting op name: module_apply_default/cell_stem_1/strided_slice ( type:  StridedSlice )\n\n\n\nAssertionError                            Traceback (most recent call last)\n in ()\n18         output_feature_names=output_tensor_names,\n19         image_input_names = image_input_name,\n---> 20         class_labels = class_labels)\n\n\n~/tfcoreml/tf-coreml/tfcoreml/_tf_coreml_converter.py in convert(tf_model_path, mlmodel_path, output_feature_names, input_name_shape_dict, image_input_names, is_bgr, red_bias, green_bias, blue_bias, gray_bias, image_scale, class_labels, predicted_feature_name, predicted_probabilities_output)\n491       class_labels=class_labels,\n492       predicted_feature_name=predicted_feature_name,\n--> 493       predicted_probabilities_output=predicted_probabilities_output)\n\n\n~/tfcoreml/tf-coreml/tfcoreml/_tf_coreml_converter.py in _convert_pb_to_mlmodel(tf_model_path, mlmodel_path, output_feature_names, input_name_shape_dict, image_input_names, is_bgr, red_bias, green_bias, blue_bias, gray_bias, image_scale, class_labels, predicted_feature_name, predicted_probabilities_output)\n289   context.input_feed_dict = input_feed_dict\n290   context.skip_ops = skip_ops\n--> 291   convert_ops_to_layers(context)\n292   sess.close()\n293\n\n\n~/tfcoreml/tf-coreml/tfcoreml/_ops_to_layers.py in convert_ops_to_layers(context)\n146         print('%d/%d: Converting op name: %s ( type:  %s )' % (\n147             i+1, len(context.all_ops), op.name, op.type))\n--> 148         translator(op, context)\n149       connect_skipped_ops(context)\n\n\n~/tfcoreml/tf-coreml/tfcoreml/_layers.py in strided_slice(op, context)\n1184     skip(op,context)\n1185   else:\n-> 1186     assert False, 'Strided Slice case not handled'\n1187   context.translated[output_name] = True\n1188\n\nAssertionError: Strided Slice case not handled\nHow can I fix this?\n@aseemw", "body": "I am trying to convert a tensor flow model created using tensor flow hub using the following code. Base model used for the model was inceptionv3\r\n\r\n`\r\n\r\nimport tensorflow as tf\r\ntf_model_path = 'Inception_v3_US_output_graph.pb'\r\nwith open(tf_model_path, 'rb') as f:\r\n    serialized = f.read()\r\ntf.reset_default_graph()\r\noriginal_gdef = tf.GraphDef()\r\noriginal_gdef.ParseFromString(serialized)\r\n\r\n\r\nwith tf.Graph().as_default() as g:\r\n    tf.import_graph_def(original_gdef, name='')\r\n    ops = g.get_operations()\r\n    N = len(ops)\r\n    for i in [0,1,2,N-3,N-2,N-1]:\r\n        print('\\n\\nop id {} : op type: \"{}\"'.format(str(i), ops[i].type));\r\n        print('input(s):'),\r\n        for x in ops[i].inputs:\r\n            print(\"name = {}, shape: {}, \".format(x.name, x.get_shape())),\r\n        print('\\noutput(s):'),\r\n        for x in ops[i].outputs:\r\n            print(\"name = {}, shape: {},\".format(x.name, x.get_shape())),`\r\n\r\n**This generated following output** \r\n\r\n> op id 0 : op type: \"Placeholder\"\r\ninput(s):\r\n\r\n>output(s):\r\nname = Placeholder:0, shape: (?, 224, 224, 3),\r\n\r\n\r\n>op id 1 : op type: \"Const\"\r\ninput(s):\r\n\r\n>output(s):\r\nname = module/conv0/weights:0, shape: (3, 3, 3, 32),\r\n\r\n\r\n>op id 2 : op type: \"Const\"\r\ninput(s):\r\n\r\n>output(s):\r\nname = module/conv0_bn/gamma:0, shape: (32,),\r\n\r\n\r\n>op id 3236 : op type: \"MatMul\"\r\ninput(s):\r\n>name = input/BottleneckInputPlaceholder:0, shape: (?, 1056), \r\nname = final_retrain_ops/weights/final_weights/read:0, shape: (1056, 2), \r\n\r\n>output(s):\r\nname = final_retrain_ops/Wx_plus_b/MatMul:0, shape: (?, 2),\r\n\r\n\r\n>op id 3237 : op type: \"Add\"\r\ninput(s):\r\n>name = final_retrain_ops/Wx_plus_b/MatMul:0, shape: (?, 2), \r\n>name = final_retrain_ops/biases/final_biases/read:0, shape: (2,), \r\n\r\n>output(s):\r\n>name = final_retrain_ops/Wx_plus_b/add:0, shape: (?, 2),\r\n\r\n\r\n>op id 3238 : op type: \"Softmax\"\r\ninput(s):\r\n>name = final_retrain_ops/Wx_plus_b/add:0, shape: (?, 2), \r\n\r\n>output(s):\r\nname = final_result:0, shape: (?, 2),\r\n\r\n**Then I tried to convert this to a coreml model using the following code** \r\n\r\n`import tfcoreml\r\n\r\ninput_tensor_shapes = {\"Placeholder:0\":[1,224,224,3]} # batch size is 1\r\n\r\nimage_input_name = ['Placeholder:0']\r\n\r\ncoreml_model_file = 'Inception_v3_US_output_graph.pb'\r\n\r\noutput_tensor_names = ['final_result:0']\r\n\r\nclass_labels = 'Inception_v3_US_output_labels.txt'\r\n\r\n\r\ncoreml_model = tfcoreml.convert(\r\n        tf_model_path=tf_model_path,\r\n        mlmodel_path=coreml_model_file,\r\n        input_name_shape_dict=input_tensor_shapes,\r\n        output_feature_names=output_tensor_names,\r\n        image_input_names = image_input_name,\r\n        class_labels = class_labels)`\r\n\r\n**But ended up getting the following error. Following are the last few lines of the error message** \r\n\r\n> 2308/3239: Converting op name: Placeholder ( type:  Placeholder )\r\nSkipping name of placeholder\r\n2309/3239: Converting op name: module_apply_default/hub_input/Mul ( type:  Mul )\r\n2310/3239: Converting op name: module_apply_default/hub_input/Sub ( type:  Sub )\r\n2311/3239: Converting op name: module_apply_default/conv0/Conv2D ( type:  Conv2D )\r\n2312/3239: Converting op name: module_apply_default/conv0_bn/FusedBatchNorm ( type:  FusedBatchNorm )\r\n2313/3239: Converting op name: module_apply_default/cell_stem_1/Relu ( type:  Relu )\r\n2314/3239: Converting op name: module_apply_default/cell_stem_1/Pad ( type:  Pad )\r\n2315/3239: Converting op name: module_apply_default/cell_stem_1/strided_slice ( type:  StridedSlice )\r\n---------------------------------------------------------------------------\r\n>AssertionError                            Traceback (most recent call last)\r\n<ipython-input-8-5c93b11d7780> in <module>()\r\n     18         output_feature_names=output_tensor_names,\r\n     19         image_input_names = image_input_name,\r\n---> 20         class_labels = class_labels)\r\n\r\n>~/tfcoreml/tf-coreml/tfcoreml/_tf_coreml_converter.py in convert(tf_model_path, mlmodel_path, output_feature_names, input_name_shape_dict, image_input_names, is_bgr, red_bias, green_bias, blue_bias, gray_bias, image_scale, class_labels, predicted_feature_name, predicted_probabilities_output)\r\n    491       class_labels=class_labels,\r\n    492       predicted_feature_name=predicted_feature_name,\r\n--> 493       predicted_probabilities_output=predicted_probabilities_output)\r\n\r\n>~/tfcoreml/tf-coreml/tfcoreml/_tf_coreml_converter.py in _convert_pb_to_mlmodel(tf_model_path, mlmodel_path, output_feature_names, input_name_shape_dict, image_input_names, is_bgr, red_bias, green_bias, blue_bias, gray_bias, image_scale, class_labels, predicted_feature_name, predicted_probabilities_output)\r\n    289   context.input_feed_dict = input_feed_dict\r\n    290   context.skip_ops = skip_ops\r\n--> 291   convert_ops_to_layers(context)\r\n    292   sess.close()\r\n    293 \r\n\r\n>~/tfcoreml/tf-coreml/tfcoreml/_ops_to_layers.py in convert_ops_to_layers(context)\r\n    146         print('%d/%d: Converting op name: %s ( type:  %s )' % (\r\n    147             i+1, len(context.all_ops), op.name, op.type))\r\n--> 148         translator(op, context)\r\n    149       connect_skipped_ops(context)\r\n\r\n>~/tfcoreml/tf-coreml/tfcoreml/_layers.py in strided_slice(op, context)\r\n   1184     skip(op,context)\r\n   1185   else:\r\n-> 1186     assert False, 'Strided Slice case not handled'\r\n   1187   context.translated[output_name] = True\r\n   1188 \r\n\r\n# AssertionError: Strided Slice case not handled\r\n\r\nHow can I fix this?\r\n\r\n@aseemw"}