{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11363", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11363/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11363/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11363/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/11363", "id": 241373370, "node_id": "MDU6SXNzdWUyNDEzNzMzNzA=", "number": 11363, "title": "tf.parse_single_example parses labels incorrectly", "user": {"login": "EddieGao98", "id": 23271048, "node_id": "MDQ6VXNlcjIzMjcxMDQ4", "avatar_url": "https://avatars3.githubusercontent.com/u/23271048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EddieGao98", "html_url": "https://github.com/EddieGao98", "followers_url": "https://api.github.com/users/EddieGao98/followers", "following_url": "https://api.github.com/users/EddieGao98/following{/other_user}", "gists_url": "https://api.github.com/users/EddieGao98/gists{/gist_id}", "starred_url": "https://api.github.com/users/EddieGao98/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EddieGao98/subscriptions", "organizations_url": "https://api.github.com/users/EddieGao98/orgs", "repos_url": "https://api.github.com/users/EddieGao98/repos", "events_url": "https://api.github.com/users/EddieGao98/events{/privacy}", "received_events_url": "https://api.github.com/users/EddieGao98/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-07-07T20:34:57Z", "updated_at": "2018-10-01T09:35:18Z", "closed_at": "2017-07-14T04:20:57Z", "author_association": "NONE", "body_html": "<hr>\n<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes, but only slightly--I'm using the Inception v3 framework but made some minor modifications to the inception_eval.py code (none around the image processing script)</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: Binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.1.0</li>\n<li><strong>Python version</strong>: 3.5</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.5.1</li>\n<li><strong>CUDA/cuDNN version</strong>: 8.0.61</li>\n<li><strong>GPU model and memory</strong>: Cirrus Logic GD 5446, 16GB</li>\n<li><strong>Exact command to reproduce</strong>: bazel-bin/inception/imagenet_eval --checkpoint_dir=$HOME/train --eval_dir=$HOME/eval</li>\n</ul>\n<p>You can collect some of this information using our environment capture script:</p>\n<p><a href=\"https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\">https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh</a></p>\n<p>You can obtain the TensorFlow version with</p>\n<p>python -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"</p>\n<h3>Describe the problem</h3>\n<p>The parse_single_example function in parsing_ops.py seems to be incorrectly parsing encoded protobufs written into a TFRecord. Specifically, I have been trying to classify images into categories labelled \"1\", \"2\", \"3\", and \"4\". Up until the point in my neural network where the images and associated label are turned into a protobuf serialized image, the labels associated with the images are correct--tf.train.Feature successfully turns each label into an associated integer consistently matching the label. However, after being serialized and then written to a TFRecord and compressed, and then decoded through tf.parse_single_example, the label for each image becomes some random integer between 1 and 9 and no longer matches the label number, with no discernable pattern.</p>\n<p>I've traced the issue through the Inception code, and this problem is not happening in Inception--the bug is somewhere between my images are converted from a jpeg with labels to a serialized protobuf through tf.train.Example(features=tf.train.Features(features)) and when the protobuf is decoded through tf.parse_single_example. The label in outputs created by outputs = _parse_single_example_raw within tf.parse_single_example is already incorrect, and the int64 object for each label, created by passing label values into tf.train.Feature(int64_list=tf.train.Int64List(value=label)), that is passed into tf.train.Example(features=tf.train.Features(features)) to create the serialized protobuf that is parsed by tf.parse_single_example still correctly matches the original labels. Therefore, the problem must be happening somewhere between the serialization and the parsing, both of which occur within tensorflow.</p>\n<p>EDIT/UPDATE: Upon further examination, the bug seems to occur in some combination of when the image is serialized and when it is written to a TFRecord. I used protoc to manually compile example.proto and used that to manually parse parse the protobufs created by calling tf.train.Example on a Features tensor and encoding them with the SerializeToString method of the example.proto, and while the image/class/text and filename seemed to be correct, the label was missing. After the encoded protobufs are written to a TFRecord, compressed, and then parsed from the TFRecord through, tf.parse_single_example, and they are incorrect--the image/class/label seems to be missing, the image/class/text is no longer correct either, even though it was correct before being passed in, and the beginning of the protobuf has some really wonky encoding going on that example.proto's ParseFromString doesn't seem to be able to read and convert into a string. Additionally, I tried decoding the protobufs parsed from the TFRecord with tf.parse_single_example from latin1 manually, and the labels were still incorrect and matched the incorrect labels from using example.proto's ParseFromString, indicating that the problem isn't happening in the decoding. The parsed protobufs created by image_processing.py have been attached below.</p>\n<p>FURTHER EDIT: Issue has been updated to reflect new information</p>\n<h3>Source code / logs</h3>\n<p>The relevant inception code that calls the aformentioned tensorflow functions is shown below:</p>\n<p><strong>For serializing images+labels into a protobuf</strong>:</p>\n<pre><code>def _convert_to_example(filename, image_buffer, label, text, height, width):\n  \"\"\"Build an Example proto for an example.\n\n  Args:\n    filename: string, path to an image file, e.g., '/path/to/example.JPG'\n    image_buffer: string, JPEG encoding of RGB image\n    label: integer, identifier for the ground truth for the network\n    text: string, unique human-readable, e.g. 'dog'\n    height: integer, image height in pixels\n    width: integer, image width in pixels\n  Returns:\n    Example proto\n  \"\"\"\n\n  colorspace = 'RGB'\n  channels = 3\n  image_format = 'JPEG'\n\n  example = tf.train.Example(features=tf.train.Features(feature={\n      'image/height': _int64_feature(height),\n      'image/width': _int64_feature(width),\n      'image/colorspace': _bytes_feature(tf.compat.as_bytes(colorspace)),\n      'image/channels': _int64_feature(channels),\n      'image/class/label': _int64_feature(label),\n      'image/class/text': _bytes_feature(tf.compat.as_bytes(text)),\n      'image/format': _bytes_feature(tf.compat.as_bytes(image_format)),\n      'image/filename': _bytes_feature(tf.compat.as_bytes(os.path.basename(filename))),\n      'image/encoded': _bytes_feature(tf.compat.as_bytes(image_buffer))}))\n  return example\n</code></pre>\n<pre><code>def _int64_feature(value):\n  \"\"\"Wrapper for inserting int64 features into Example proto.\"\"\"\n  if not isinstance(value, list):\n    value = [value]\n  return tf.train.Feature(int64_list=tf.train.Int64List(value=value))\n</code></pre>\n<p><strong>For parsing a protobuf</strong></p>\n<pre><code>\ndef parse_example_proto(example_serialized):\n  \"\"\"Parses an Example proto containing a training example of an image.\n\n  The output of the build_image_data.py image preprocessing script is a dataset\n  containing serialized Example protocol buffers. Each Example proto contains\n  the following fields:\n\n    image/height: 462\n    image/width: 581\n    image/colorspace: 'RGB'\n    image/channels: 3\n    image/class/label: 615\n    image/class/synset: 'n03623198'\n    image/class/text: 'knee pad'\n    image/object/bbox/xmin: 0.1\n    image/object/bbox/xmax: 0.9\n    image/object/bbox/ymin: 0.2\n    image/object/bbox/ymax: 0.6\n    image/object/bbox/label: 615\n    image/format: 'JPEG'\n    image/filename: 'ILSVRC2012_val_00041207.JPEG'\n    image/encoded: &lt;JPEG encoded string&gt;\n\n   Args:\n     example_serialized: scalar Tensor tf.string containing a serialized\n       Example protocol buffer.\n\n   Returns:\n     image_buffer: Tensor tf.string containing the contents of a JPEG file.\n     label: Tensor tf.int32 containing the label.\n     bbox: 3-D float Tensor of bounding boxes arranged [1, num_boxes, coords]\n       where each coordinate is [0, 1) and the coordinates are arranged as\n       [ymin, xmin, ymax, xmax].\n     text: Tensor tf.string containing the human-readable label.\n   \"\"\"\n   # Dense features in Example proto.\n   feature_map = {\n       'image/encoded': tf.FixedLenFeature([], dtype=tf.string,\n                                           default_value=''),\n       'image/class/label': tf.FixedLenFeature([1], dtype=tf.int64,\n                                               default_value=-1),\n       'image/class/text': tf.FixedLenFeature([], dtype=tf.string,\n                                              default_value=''),\n   }\n   sparse_float32 = tf.VarLenFeature(dtype=tf.float32)\n  # Sparse features in Example proto.\n   feature_map.update(\n       {k: sparse_float32 for k in ['image/object/bbox/xmin',\n                                    'image/object/bbox/ymin',\n                                    'image/object/bbox/xmax',\n                                    'image/object/bbox/ymax']})\n\n   features = tf.parse_single_example(example_serialized, feature_map)\n   label = tf.cast(features['image/class/label'], dtype=tf.int32)\n\n   xmin = tf.expand_dims(features['image/object/bbox/xmin'].values, 0)\n   ymin = tf.expand_dims(features['image/object/bbox/ymin'].values, 0)\n   xmax = tf.expand_dims(features['image/object/bbox/xmax'].values, 0)\n   ymax = tf.expand_dims(features['image/object/bbox/ymax'].values, 0)\n\n   # Note that we impose an ordering of (y, x) just to make life difficult.\n   bbox = tf.concat(axis=0, values=[ymin, xmin, ymax, xmax])\n\n   # Force the variable number of bounding boxes into the shape\n   # [1, num_boxes, coords].\n   bbox = tf.expand_dims(bbox, 0)\n   bbox = tf.transpose(bbox, [0, 2, 1])\n\n   return features['image/encoded'], label, bbox, features['image/class/text']\n</code></pre>\n<p><strong>Protobufs created by parsing from byte-encoded protobufs compressed and written to a TFRecord and then uncompressed and read with tf.parse_single_example, and decoded with example.proto's ParseFromString</strong>:</p>\n<pre><code>\ufffd\ufffd\n\ufffd\t\nimage/encoded\ufffd\ufffd\t\n\ufffd\t\n\ufffd\t\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdJFIF\ufffd\ufffd\ufffd\ufffd\ufffd,\ufffd,\ufffd\ufffd\ufffd\ufffd\ufffdC\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdC\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\t\n\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd}\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd!1A\ufffd\ufffdQa\ufffd\"q\ufffd2\ufffd\ufffd#B\ufffd\ufffd\ufffdR\ufffd\ufffd$3br\ufffd\t\n\ufffd\ufffd\ufffd\ufffd\ufffd%&amp;'()*456789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\t\n\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdw\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd!1\ufffd\ufffdAQ\ufffdaq\ufffd\"2\ufffdB\ufffd\ufffd\ufffd\ufffd\t#3R\ufffd\ufffdbr\ufffd\n\ufffd%\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdn_\ufffd\ufffd\ufffd\ufffd\ufffd\u07cb\ufffd\ufffd~;|\ufffd\ufffd\n&lt;g\ufffd\ufffd\ufffd\ufffd\ufffd!\ufffd_\ufffd\ufffd\ufffd\ufffd\ufffdW\ufffdZo\ufffd\ufffd\ufffdo\n\ufffd[x\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd)\ufffd\ufffd\ufffd\ufffd\ufffd&gt;)|I\ufffd-\ufffdk~)\ufffd\ufffd\ufffd[_\ufffd^(\ufffdm\ufffd\ufffd\ufffd\ufffd\ufffd/\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdb\ufffd\ufffd\ufffdF\ufffd\ufffd\ufffd\ufffdu\u06db\ufffd}4Y\ufffd]k\ufffdk\ufffd\u066dM\ufffd\ufffd\ufffd\ufffd\ufffdP\ufffd\ufffd\ufffd\n\ufffd\n\fimage/height\ufffd\ufffd\ufffd\ufffd\n\ufffd\ufffd\n\ufffd\n\ufffdimage/class/label\ufffd\ufffd\ufffd\ufffd\n\ufffd\ufffd\n\ufffd\n\ufffdimage/class/text\ufffd\ufffd\n\ufffd\n\ufffd6\n\ufffd\n\ufffdimage/channels\ufffd\ufffd\ufffd\ufffd\n\ufffd\ufffd\n\ufffd\n\ufffdimage/width\ufffd\ufffd\ufffd\ufffd\n\ufffd\ufffd\n\ufffd\n\ufffdimage/filename\ufffd\ufffd\n\t\n\ufffd368.png\n\ufffd\n\fimage/format\n\ufffd\n\ufffdJPEG\n\ufffd\n\ufffdimage/colorspace\ufffd\ufffd\n\ufffd\n\ufffdRGB\n\n\ufffd\ufffd\n\ufffd\n\nimage/encoded\ufffd\ufffd\n\n\ufffd\t\n\ufffd\t\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdJFIF\ufffd\ufffd\ufffd\ufffd\ufffd,\ufffd,\ufffd\ufffd\ufffd\ufffd\ufffdC\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdC\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\t\n\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd}\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd!1A\ufffd\ufffdQa\ufffd\"q\ufffd2\ufffd\ufffd#B\ufffd\ufffd\ufffdR\ufffd\ufffd$3br\ufffd\t\n\ufffd\ufffd\ufffd\ufffd\ufffd%&amp;'()*456789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\t\n\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdw\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd!1\ufffd\ufffdAQ\ufffdaq\ufffd\"2\ufffdB\ufffd\ufffd\ufffd\ufffd\t#3R\ufffd\ufffdbr\ufffd\n#\ufffd2\ufffd\ufffd?\ufffd\ufffd\ufffd,\ufffd\ufffd\ufffd\ufffd,\ufffd\ufffd\ufffd\ufffdN\ufffd\ufffd\ufffd\ufffd\ufffd%|\ufffd\ufffd\ufffdS'\ufffd\ufffd\ufffd;\u01bf\ufffd\ufffdj/\ufffd~\ufffd\ufffdn\ufffd\ufffd\u068f\u014dF\ufffd\ufffdW^\ufffd\ufffd\u05c2\ufffd\ufffd\ufffdwD\u0563\ufffd\ufffd\u23cc-u\ufffd\ud89a\udeeb\ufffd6\ufffdh^\ufffd\ufffd\ufffdR\ufffd\ufffdr\ufffd\ufffdE\ufffd?\ufffd\ufffd(\ufffd\ufffd\ufffd\ufffd\n\ufffd\n\ufffdimage/colorspace\ufffd\ufffd\n\ufffd\n\ufffdRGB\n\ufffd\n\ufffdimage/channels\ufffd\ufffd\ufffd\ufffd\n\ufffd\ufffd\n\ufffd\n\ufffdimage/width\ufffd\ufffd\ufffd\ufffd\n\ufffd\ufffd\n\ufffd\n\fimage/height\ufffd\ufffd\ufffd\ufffd\n\ufffd\ufffd\n\ufffd\n\ufffdimage/class/label\ufffd\ufffd\ufffd\ufffd\n\ufffd\ufffd\n\ufffd\n\ufffdimage/filename\ufffd\f\n\n\n\n5852.png\n\ufffd\n\fimage/format\n\ufffd\n\ufffdJPEG\n\ufffd\n\ufffdimage/class/text\ufffd\ufffd\n\ufffd\n\ufffd5\n\n\ufffd\f\n\ufffd\n\nimage/encoded\ufffd\ufffd\n\n\ufffd\n\n\ufffd\n\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdJFIF\ufffd\ufffd\ufffd\ufffd\ufffd,\ufffd,\ufffd\ufffd\ufffd\ufffd\ufffdC\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdC\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\t\n\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd}\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd!1A\ufffd\ufffdQa\ufffd\"q\ufffd2\ufffd\ufffd#B\ufffd\ufffd\ufffdR\ufffd\ufffd$3br\ufffd\t\n\ufffd\ufffd\ufffd\ufffd\ufffd%&amp;'()*456789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\t\n\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdw\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd!1\ufffd\ufffdAQ\ufffdaq\ufffd\"2\ufffdB\ufffd\ufffd\ufffd\ufffd\t#3R\ufffd\ufffdbr\ufffd\n]\ufffdCk\ufffdKq\ufffd\ufffd;\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdn\ufffdd\ufffd\ufffd!\ufffd\ufffd\ufffd\ufffdm_R{}J(\ufffd\ufffdkv\ufffd\ufffd?\ufffd\ufffd(\ufffd\ufffdS\ufffd\n\ufffd]oP\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\n\ufffd\n\ufffdimage/colorspace\ufffd\ufffd\n\ufffd\n\ufffdRGB\n\ufffd\n\ufffdimage/channels\ufffd\ufffd\ufffd\ufffd\n\ufffd\ufffd\n\ufffd\n\ufffdimage/width\ufffd\ufffd\ufffd\ufffd\n\ufffd\ufffd\n\ufffd\n\fimage/height\ufffd\ufffd\ufffd\ufffd\n\ufffd\ufffd\n\ufffd\n\ufffdimage/class/label\ufffd\ufffd\ufffd\ufffd\n\ufffd\ufffd\n\ufffd\n\ufffdimage/filename\ufffd\f\n\n\n\n7602.png\n\ufffd\n\fimage/format\n\ufffd\n\ufffdJPEG\n\ufffd\n\ufffdimage/class/text\ufffd\ufffd\n\ufffd\n\ufffd5\n\n\ufffd\t\n\ufffd\ufffd\nimage/encoded\ufffd\ufffd\ufffd\n\ufffd\ufffd\n\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdJFIF\ufffd\ufffd\ufffd\ufffd\ufffd,\ufffd,\ufffd\ufffd\ufffd\ufffd\ufffdC\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdC\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\t\n\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd}\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd!1A\ufffd\ufffdQa\ufffd\"q\ufffd2\ufffd\ufffd#B\ufffd\ufffd\ufffdR\ufffd\ufffd$3br\ufffd\t\n\ufffd\ufffd\ufffd\ufffd\ufffd%&amp;'()*456789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\t\n\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdw\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd!1\ufffd\ufffdAQ\ufffdaq\ufffd\"2\ufffdB\ufffd\ufffd\ufffd\ufffd\t#3R\ufffd\ufffdbr\ufffd\n\ufffd$4\ufffd%\ufffd\ufffd\ufffd\ufffd\ufffd&amp;'()*56789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\f\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd?\ufffd\ufffd\ufffd?\ufffd\ufffdO\ufffd\t\ufffd\ufffd\ufffdx\ufffd\ufffd\n\ufffd\ufffd^|\ufffd\ufffd\ufffd&lt;\t\ufffdj~\ufffd\u053e(\ufffd\ufffd\ufffdz\ufffd\ufffdl|\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd^j:\ufffd\ufffd\ufffdG\ufffd\ufffd\ufffdL\ufffd\ufffd(\ufffd\ufffd\u016a\ufffd\ufffd\ufffd\ufffdY\ufffd\ufffdL&amp;\ufffd\ufffd\ufffd\ufffd.~,\ufffd\ufffd\ufffd\ufffd\f\ufffd\ufffd_\ufffdQ\ufffd\ufffd\ufffd\ufffd\fw\ufffd\ufffd\ufffd&gt;\ufffd\ufffd&lt;t\ufffdK{r\ufffdTo\ufffd|R\ufffdI\ufffd{n\ufffd\ufffd[Aht\ufffd\\\ufffd{\ufffd0\ufffd\ufffd\ufffd\\\ufffd\ufffdO\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd&gt;+\ufffdO\ufffd5\ufffdT\ufffd\ufffd\ufffd_\t&gt;!\ufffd\ufffd\u15cbc\ufffdn\ufffd\ufffdNO\ufffd\ufffd\ufffd\u011a\ufffd\ufffdu\u4c3dEE\ufffd\ufffd]WJ\ufffd[[\ufffdE[\ufffd\ufffds*\ufffdp\ufffd\ufffdWs\ufffd?\ufffdz\ufffd\ufffd/\ufffd\ufffd\ufffd\ufffd&amp;\ufffd\ufffd,\ufffd\ufffd\ufffd_\ufffd\ufffd\ufffd\ufffdz\ufffd\"C\ufffdx\ufffd_\ufffd&lt;A}\ufffd\ufffd\ufffd\ufffd\ufffd\u0231\ufffdj\ufffd\ufffd\ufffd[[\ufffd\ufffd\ufffd`\ufffdH\ufffdxj\ufffd+\ufffd\ufffd\ufffd\ufffd\ufffdA\ufffdC\ufffdh?\ufffdS\ufffd+\ufffdkv\ufffd5\ufffd\ufffd\ufffd\ufffd\ufffds\ufffd\ufffdjZ\ufffd\ufffd\ufffd\ufffd\ufffd\u054f\ufffd~\ufffdk2A\ufffd\ufffd\ufffd(\ue9f3\ufffdt\ufffdWUx\ufffdI%\ufffd\ufffda\ufffd_0Kk[\ufffdc\ufffdWh\ufffd\ufffd\ufffd(\ufffd\ufffd\ufffd\ufffd\n\ufffd\n\ufffdimage/colorspace\ufffd\ufffd\n\ufffd\n\ufffdRGB\n\ufffd\n\ufffdimage/channels\ufffd\ufffd\ufffd\ufffd\n\ufffd\ufffd\n\ufffd\n\ufffdimage/width\ufffd\ufffd\ufffd\ufffd\n\ufffd\ufffd\n\ufffd\n\fimage/height\ufffd\ufffd\ufffd\ufffd\n\ufffd\ufffd\n\ufffd\n\ufffdimage/class/label\ufffd\ufffd\ufffd\ufffd\n\ufffd\ufffd\n\ufffd\n\ufffdimage/filename\ufffd\ufffd\n\t\n\ufffd663.png\n\ufffd\n\fimage/format\n\ufffd\n\ufffdJPEG\n\ufffd\n\ufffdimage/class/text\ufffd\ufffd\n\ufffd\n\ufffd1\n\n\ufffd\f\n\ufffd\ufffd\nimage/encoded\ufffd\ufffd\ufffd\n\ufffd\ufffd\n\ufffd\n\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdJFIF\ufffd\ufffd\ufffd\ufffd\ufffd,\ufffd,\ufffd\ufffd\ufffd\ufffd\ufffdC\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdC\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\t\n\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd}\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd!1A\ufffd\ufffdQa\ufffd\"q\ufffd2\ufffd\ufffd#B\ufffd\ufffd\ufffdR\ufffd\ufffd$3br\ufffd\t\n\ufffd\ufffd\ufffd\ufffd\ufffd%&amp;'()*456789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\t\n\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdw\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd!1\ufffd\ufffdAQ\ufffdaq\ufffd\"2\ufffdB\ufffd\ufffd\ufffd\ufffd\t#3R\ufffd\ufffdbr\ufffd\n\ufffd$4\ufffd%\ufffd\ufffd\ufffd\ufffd\ufffd&amp;'()*56789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\f\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd?\ufffd\ufffd\ufffd?\ufffd\ufffd\ufffd\ufffda\ufffd\ufffd6#\ufffd\n\ufffd\u057e\ufffd\ufffd+7\ufffdM\ufffd\ufffd\ufffd&amp;\ufffd\ufffd\ufffd\ufffd[\ufffd\ufffd\ufffd[\ufffd\ufffd\ufffd[\ufffd\ufffd\ufffd?\ufffdG\ufffd\ufffd\ufffdcP\ufffdK\ufffd\ufffd)i\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdqk\ufffdj\ufffd\ufffd\u03edM\u0fc6:u\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd&gt;'\ufffd\ufffdi\ufffd[\ufffd\ufffd\ufffdu\ufffd\ufffd\\\ufffd\ufffd{\ufffd\ufffd\ufffd_\ufffdN_\ufffd{\ufffd\t\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdM\ufffd\ufffd\ufffd\ufffd~+\u057c'a\ufffd\t\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdO\ufffdj:\ufffd\ufffd\ufffdA\ufffd\ufffd\ufffdX\ufffd\ufffd\ufffd\ufffd=gA\ufffd\ufffd\ufffd\ufffd#\ufffd\ufffdF\ufffd\ufffd\ufffd\ufffd-#\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd*\ufffd\ufffd\ufffd\ufffd:\ufffd\ufffdF?\ufffd:\ufffd\ufffdO\ufffd\ufffd\ufffdm?\ufffd3\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd7\ufffd\ufffd\ufffd\ufffd:\ufffd\ufffd4=3\ufffd\ufffd\u010f\ufffd\ufffd\ufffd\ufffd%^Z\ufffd\ufffd\ufffd\ufffd#\ufffd\ufffd\ufffd\ufffd&gt;![\ufffd\ufffdMk\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdj\ufffd\ufffd\ufffd\u07c7\ufffdY\ufffdm\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdP\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\t\ufffd\ufffd\ufffd\ufffd\n\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdv\ufffdVW\ufffd\ufffd\ufffd\ufffd\ufffdu\ufffdh\ufffd\ufffd6\ufffdP2K\ufffd\ufffd\ufffdb\ufffd\ufffd\ufffd\ufffd?\ufffd\ufffd\ufffd\ufffdjW\ufffd\ufffd\ufffd\ufffd_\ufffd\ufffd\ufffd?\ufffdY\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd?e\ufffd\ufffd\ufffd\ufffd\ufffdrXx{\ufffdO\ufffdu\ufffd\ufffd\ufffd\ufffdbX\u0268\ufffdk\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdkC\ufffd\ufffdh\ufffd\ufffd;+Y4\ufffd\ufffd\ufffd:\u043cK\ufffd\ufffd\ufffdO{w\ufffd\ufffd\ufffd\ufffd\ufffdu[+I\ufffd\ufffd\ufffd\ufffd\ufffd=\ufffd\ufffd\u00cdhx\ufffd\ufffd\ufffd&lt;Y\ufffd/\ufffd\ufffdY\ufffdF\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0585\ufffd\u044c\ufffdY\ufffdSC\ufffd\ufffd\ufffd\ufffd\ufffd&amp;(\ufffd\ufffd\ufffd\ufffd&amp;c\ufffdfDm\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdC~\ufffdW\ufffdj\ufffd\ufffd\ufffd&lt;|f\ufffd\u0769[I\ufffd\ufffd\u068f\ufffd\ufffd\ufffd7\ufffd\ufffd}o,\ufffd}\ufffd\ufffd\ufffd\ufffd]\ufffd\ufffd\\\u05ae\"\ufffd\ufffd*\ufffd\ufffdL\ufffd\ufffdZ=&gt;\ufffd\ufffd\ufffd\ufffd\ufffd4\ufffd\ufffd\ufffd?\ufffd\ufffd/\ufffd-\ufffd\ufffd\ufffd\u06ff\u00bf\ufffd\ufffd\ufffda\ufffd\ufffdk\u00da\ufffd\ufffd\ufffd\ufffdbo\ufffd\ufffd\ufffdK\ufffd\ufffdU\ufffdtk\ufffd\n\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdtMC\ufffd\ufffd\ufffd\ufffd\ufffd~\ufffd\ufffd\u069ek\ufffd\ufffd\ufffd\ufffd\ufffdu\u00ef\ufffd\ufffd|W\ufffdi\ufffd)\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd^\ufffd\ufffdu\ufffd\ufffd\ufffd\ufffd-\ufffdP\ufffd\ufffd\ufffd\n\ufffd\n\ufffdimage/class/text\ufffd\ufffd\n\ufffd\n\ufffd3\n\ufffd\n\fimage/height\ufffd\ufffd\ufffd\ufffd\n\ufffd\ufffd\n\ufffd\n\ufffdimage/class/label\ufffd\ufffd\ufffd\ufffd\n\ufffd\ufffd\n\ufffd\n\ufffdimage/colorspace\ufffd\ufffd\n\ufffd\n\ufffdRGB\n\ufffd\n\ufffdimage/filename\ufffd\f\n\n\n\n7763.png\n\ufffd\n\fimage/format\n\ufffd\n\ufffdJPEG\n\ufffd\n\ufffdimage/channels\ufffd\ufffd\ufffd\ufffd\n\ufffd\ufffd\n\ufffd\n\ufffdimage/width\ufffd\ufffd\ufffd\ufffd\n\ufffd\ufffd\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes, but only slightly--I'm using the Inception v3 framework but made some minor modifications to the inception_eval.py code (none around the image processing script)\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux 16.04\nTensorFlow installed from (source or binary): Binary\nTensorFlow version (use command below): 1.1.0\nPython version: 3.5\nBazel version (if compiling from source): 0.5.1\nCUDA/cuDNN version: 8.0.61\nGPU model and memory: Cirrus Logic GD 5446, 16GB\nExact command to reproduce: bazel-bin/inception/imagenet_eval --checkpoint_dir=$HOME/train --eval_dir=$HOME/eval\n\nYou can collect some of this information using our environment capture script:\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\nYou can obtain the TensorFlow version with\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\nDescribe the problem\nThe parse_single_example function in parsing_ops.py seems to be incorrectly parsing encoded protobufs written into a TFRecord. Specifically, I have been trying to classify images into categories labelled \"1\", \"2\", \"3\", and \"4\". Up until the point in my neural network where the images and associated label are turned into a protobuf serialized image, the labels associated with the images are correct--tf.train.Feature successfully turns each label into an associated integer consistently matching the label. However, after being serialized and then written to a TFRecord and compressed, and then decoded through tf.parse_single_example, the label for each image becomes some random integer between 1 and 9 and no longer matches the label number, with no discernable pattern.\nI've traced the issue through the Inception code, and this problem is not happening in Inception--the bug is somewhere between my images are converted from a jpeg with labels to a serialized protobuf through tf.train.Example(features=tf.train.Features(features)) and when the protobuf is decoded through tf.parse_single_example. The label in outputs created by outputs = _parse_single_example_raw within tf.parse_single_example is already incorrect, and the int64 object for each label, created by passing label values into tf.train.Feature(int64_list=tf.train.Int64List(value=label)), that is passed into tf.train.Example(features=tf.train.Features(features)) to create the serialized protobuf that is parsed by tf.parse_single_example still correctly matches the original labels. Therefore, the problem must be happening somewhere between the serialization and the parsing, both of which occur within tensorflow.\nEDIT/UPDATE: Upon further examination, the bug seems to occur in some combination of when the image is serialized and when it is written to a TFRecord. I used protoc to manually compile example.proto and used that to manually parse parse the protobufs created by calling tf.train.Example on a Features tensor and encoding them with the SerializeToString method of the example.proto, and while the image/class/text and filename seemed to be correct, the label was missing. After the encoded protobufs are written to a TFRecord, compressed, and then parsed from the TFRecord through, tf.parse_single_example, and they are incorrect--the image/class/label seems to be missing, the image/class/text is no longer correct either, even though it was correct before being passed in, and the beginning of the protobuf has some really wonky encoding going on that example.proto's ParseFromString doesn't seem to be able to read and convert into a string. Additionally, I tried decoding the protobufs parsed from the TFRecord with tf.parse_single_example from latin1 manually, and the labels were still incorrect and matched the incorrect labels from using example.proto's ParseFromString, indicating that the problem isn't happening in the decoding. The parsed protobufs created by image_processing.py have been attached below.\nFURTHER EDIT: Issue has been updated to reflect new information\nSource code / logs\nThe relevant inception code that calls the aformentioned tensorflow functions is shown below:\nFor serializing images+labels into a protobuf:\ndef _convert_to_example(filename, image_buffer, label, text, height, width):\n  \"\"\"Build an Example proto for an example.\n\n  Args:\n    filename: string, path to an image file, e.g., '/path/to/example.JPG'\n    image_buffer: string, JPEG encoding of RGB image\n    label: integer, identifier for the ground truth for the network\n    text: string, unique human-readable, e.g. 'dog'\n    height: integer, image height in pixels\n    width: integer, image width in pixels\n  Returns:\n    Example proto\n  \"\"\"\n\n  colorspace = 'RGB'\n  channels = 3\n  image_format = 'JPEG'\n\n  example = tf.train.Example(features=tf.train.Features(feature={\n      'image/height': _int64_feature(height),\n      'image/width': _int64_feature(width),\n      'image/colorspace': _bytes_feature(tf.compat.as_bytes(colorspace)),\n      'image/channels': _int64_feature(channels),\n      'image/class/label': _int64_feature(label),\n      'image/class/text': _bytes_feature(tf.compat.as_bytes(text)),\n      'image/format': _bytes_feature(tf.compat.as_bytes(image_format)),\n      'image/filename': _bytes_feature(tf.compat.as_bytes(os.path.basename(filename))),\n      'image/encoded': _bytes_feature(tf.compat.as_bytes(image_buffer))}))\n  return example\n\ndef _int64_feature(value):\n  \"\"\"Wrapper for inserting int64 features into Example proto.\"\"\"\n  if not isinstance(value, list):\n    value = [value]\n  return tf.train.Feature(int64_list=tf.train.Int64List(value=value))\n\nFor parsing a protobuf\n\ndef parse_example_proto(example_serialized):\n  \"\"\"Parses an Example proto containing a training example of an image.\n\n  The output of the build_image_data.py image preprocessing script is a dataset\n  containing serialized Example protocol buffers. Each Example proto contains\n  the following fields:\n\n    image/height: 462\n    image/width: 581\n    image/colorspace: 'RGB'\n    image/channels: 3\n    image/class/label: 615\n    image/class/synset: 'n03623198'\n    image/class/text: 'knee pad'\n    image/object/bbox/xmin: 0.1\n    image/object/bbox/xmax: 0.9\n    image/object/bbox/ymin: 0.2\n    image/object/bbox/ymax: 0.6\n    image/object/bbox/label: 615\n    image/format: 'JPEG'\n    image/filename: 'ILSVRC2012_val_00041207.JPEG'\n    image/encoded: <JPEG encoded string>\n\n   Args:\n     example_serialized: scalar Tensor tf.string containing a serialized\n       Example protocol buffer.\n\n   Returns:\n     image_buffer: Tensor tf.string containing the contents of a JPEG file.\n     label: Tensor tf.int32 containing the label.\n     bbox: 3-D float Tensor of bounding boxes arranged [1, num_boxes, coords]\n       where each coordinate is [0, 1) and the coordinates are arranged as\n       [ymin, xmin, ymax, xmax].\n     text: Tensor tf.string containing the human-readable label.\n   \"\"\"\n   # Dense features in Example proto.\n   feature_map = {\n       'image/encoded': tf.FixedLenFeature([], dtype=tf.string,\n                                           default_value=''),\n       'image/class/label': tf.FixedLenFeature([1], dtype=tf.int64,\n                                               default_value=-1),\n       'image/class/text': tf.FixedLenFeature([], dtype=tf.string,\n                                              default_value=''),\n   }\n   sparse_float32 = tf.VarLenFeature(dtype=tf.float32)\n  # Sparse features in Example proto.\n   feature_map.update(\n       {k: sparse_float32 for k in ['image/object/bbox/xmin',\n                                    'image/object/bbox/ymin',\n                                    'image/object/bbox/xmax',\n                                    'image/object/bbox/ymax']})\n\n   features = tf.parse_single_example(example_serialized, feature_map)\n   label = tf.cast(features['image/class/label'], dtype=tf.int32)\n\n   xmin = tf.expand_dims(features['image/object/bbox/xmin'].values, 0)\n   ymin = tf.expand_dims(features['image/object/bbox/ymin'].values, 0)\n   xmax = tf.expand_dims(features['image/object/bbox/xmax'].values, 0)\n   ymax = tf.expand_dims(features['image/object/bbox/ymax'].values, 0)\n\n   # Note that we impose an ordering of (y, x) just to make life difficult.\n   bbox = tf.concat(axis=0, values=[ymin, xmin, ymax, xmax])\n\n   # Force the variable number of bounding boxes into the shape\n   # [1, num_boxes, coords].\n   bbox = tf.expand_dims(bbox, 0)\n   bbox = tf.transpose(bbox, [0, 2, 1])\n\n   return features['image/encoded'], label, bbox, features['image/class/text']\n\nProtobufs created by parsing from byte-encoded protobufs compressed and written to a TFRecord and then uncompressed and read with tf.parse_single_example, and decoded with example.proto's ParseFromString:\n\ufffd\ufffd\n\ufffd\t\nimage/encoded\ufffd\ufffd\t\n\ufffd\t\n\ufffd\t\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdJFIF\ufffd\ufffd\ufffd\ufffd\ufffd,\ufffd,\ufffd\ufffd\ufffd\ufffd\ufffdC\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdC\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\t\n\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd}\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd!1A\ufffd\ufffdQa\ufffd\"q\ufffd2\ufffd\ufffd#B\ufffd\ufffd\ufffdR\ufffd\ufffd$3br\ufffd\t\n\ufffd\ufffd\ufffd\ufffd\ufffd%&'()*456789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\t\n\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdw\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd!1\ufffd\ufffdAQ\ufffdaq\ufffd\"2\ufffdB\ufffd\ufffd\ufffd\ufffd\t#3R\ufffd\ufffdbr\ufffd\n\ufffd%\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdn_\ufffd\ufffd\ufffd\ufffd\ufffd\u07cb\ufffd\ufffd~;|\ufffd\ufffd\n<g\ufffd\ufffd\ufffd\ufffd\ufffd!\ufffd_\ufffd\ufffd\ufffd\ufffd\ufffdW\ufffdZo\ufffd\ufffd\ufffdo\n\ufffd[x\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd)\ufffd\ufffd\ufffd\ufffd\ufffd>)|I\ufffd-\ufffdk~)\ufffd\ufffd\ufffd[_\ufffd^(\ufffdm\ufffd\ufffd\ufffd\ufffd\ufffd/\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdb\ufffd\ufffd\ufffdF\ufffd\ufffd\ufffd\ufffdu\u06db\ufffd}4Y\ufffd]k\ufffdk\ufffd\u066dM\ufffd\ufffd\ufffd\ufffd\ufffdP\ufffd\ufffd\ufffd\n\ufffd\nimage/height\ufffd\ufffd\ufffd\ufffd\n\ufffd\ufffd\n\ufffd\n\ufffdimage/class/label\ufffd\ufffd\ufffd\ufffd\n\ufffd\ufffd\n\ufffd\n\ufffdimage/class/text\ufffd\ufffd\n\ufffd\n\ufffd6\n\ufffd\n\ufffdimage/channels\ufffd\ufffd\ufffd\ufffd\n\ufffd\ufffd\n\ufffd\n\ufffdimage/width\ufffd\ufffd\ufffd\ufffd\n\ufffd\ufffd\n\ufffd\n\ufffdimage/filename\ufffd\ufffd\n\t\n\ufffd368.png\n\ufffd\nimage/format\n\ufffd\n\ufffdJPEG\n\ufffd\n\ufffdimage/colorspace\ufffd\ufffd\n\ufffd\n\ufffdRGB\n\n\ufffd\ufffd\n\ufffd\n\nimage/encoded\ufffd\ufffd\n\n\ufffd\t\n\ufffd\t\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdJFIF\ufffd\ufffd\ufffd\ufffd\ufffd,\ufffd,\ufffd\ufffd\ufffd\ufffd\ufffdC\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdC\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\t\n\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd}\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd!1A\ufffd\ufffdQa\ufffd\"q\ufffd2\ufffd\ufffd#B\ufffd\ufffd\ufffdR\ufffd\ufffd$3br\ufffd\t\n\ufffd\ufffd\ufffd\ufffd\ufffd%&'()*456789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\t\n\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdw\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd!1\ufffd\ufffdAQ\ufffdaq\ufffd\"2\ufffdB\ufffd\ufffd\ufffd\ufffd\t#3R\ufffd\ufffdbr\ufffd\n#\ufffd2\ufffd\ufffd?\ufffd\ufffd\ufffd,\ufffd\ufffd\ufffd\ufffd,\ufffd\ufffd\ufffd\ufffdN\ufffd\ufffd\ufffd\ufffd\ufffd%|\ufffd\ufffd\ufffdS'\ufffd\ufffd\ufffd;\u01bf\ufffd\ufffdj/\ufffd~\ufffd\ufffdn\ufffd\ufffd\u068f\u014dF\ufffd\ufffdW^\ufffd\ufffd\u05c2\ufffd\ufffd\ufffdwD\u0563\ufffd\ufffd\u23cc-u\ufffd\ud89a\udeeb\ufffd6\ufffdh^\ufffd\ufffd\ufffdR\ufffd\ufffdr\ufffd\ufffdE\ufffd?\ufffd\ufffd(\ufffd\ufffd\ufffd\ufffd\n\ufffd\n\ufffdimage/colorspace\ufffd\ufffd\n\ufffd\n\ufffdRGB\n\ufffd\n\ufffdimage/channels\ufffd\ufffd\ufffd\ufffd\n\ufffd\ufffd\n\ufffd\n\ufffdimage/width\ufffd\ufffd\ufffd\ufffd\n\ufffd\ufffd\n\ufffd\nimage/height\ufffd\ufffd\ufffd\ufffd\n\ufffd\ufffd\n\ufffd\n\ufffdimage/class/label\ufffd\ufffd\ufffd\ufffd\n\ufffd\ufffd\n\ufffd\n\ufffdimage/filename\ufffd\n\n\n\n5852.png\n\ufffd\nimage/format\n\ufffd\n\ufffdJPEG\n\ufffd\n\ufffdimage/class/text\ufffd\ufffd\n\ufffd\n\ufffd5\n\n\ufffd\n\ufffd\n\nimage/encoded\ufffd\ufffd\n\n\ufffd\n\n\ufffd\n\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdJFIF\ufffd\ufffd\ufffd\ufffd\ufffd,\ufffd,\ufffd\ufffd\ufffd\ufffd\ufffdC\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdC\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\t\n\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd}\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd!1A\ufffd\ufffdQa\ufffd\"q\ufffd2\ufffd\ufffd#B\ufffd\ufffd\ufffdR\ufffd\ufffd$3br\ufffd\t\n\ufffd\ufffd\ufffd\ufffd\ufffd%&'()*456789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\t\n\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdw\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd!1\ufffd\ufffdAQ\ufffdaq\ufffd\"2\ufffdB\ufffd\ufffd\ufffd\ufffd\t#3R\ufffd\ufffdbr\ufffd\n]\ufffdCk\ufffdKq\ufffd\ufffd;\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdn\ufffdd\ufffd\ufffd!\ufffd\ufffd\ufffd\ufffdm_R{}J(\ufffd\ufffdkv\ufffd\ufffd?\ufffd\ufffd(\ufffd\ufffdS\ufffd\n\ufffd]oP\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\n\ufffd\n\ufffdimage/colorspace\ufffd\ufffd\n\ufffd\n\ufffdRGB\n\ufffd\n\ufffdimage/channels\ufffd\ufffd\ufffd\ufffd\n\ufffd\ufffd\n\ufffd\n\ufffdimage/width\ufffd\ufffd\ufffd\ufffd\n\ufffd\ufffd\n\ufffd\nimage/height\ufffd\ufffd\ufffd\ufffd\n\ufffd\ufffd\n\ufffd\n\ufffdimage/class/label\ufffd\ufffd\ufffd\ufffd\n\ufffd\ufffd\n\ufffd\n\ufffdimage/filename\ufffd\n\n\n\n7602.png\n\ufffd\nimage/format\n\ufffd\n\ufffdJPEG\n\ufffd\n\ufffdimage/class/text\ufffd\ufffd\n\ufffd\n\ufffd5\n\n\ufffd\t\n\ufffd\ufffd\nimage/encoded\ufffd\ufffd\ufffd\n\ufffd\ufffd\n\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdJFIF\ufffd\ufffd\ufffd\ufffd\ufffd,\ufffd,\ufffd\ufffd\ufffd\ufffd\ufffdC\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdC\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\t\n\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd}\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd!1A\ufffd\ufffdQa\ufffd\"q\ufffd2\ufffd\ufffd#B\ufffd\ufffd\ufffdR\ufffd\ufffd$3br\ufffd\t\n\ufffd\ufffd\ufffd\ufffd\ufffd%&'()*456789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\t\n\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdw\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd!1\ufffd\ufffdAQ\ufffdaq\ufffd\"2\ufffdB\ufffd\ufffd\ufffd\ufffd\t#3R\ufffd\ufffdbr\ufffd\n\ufffd$4\ufffd%\ufffd\ufffd\ufffd\ufffd\ufffd&'()*56789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd?\ufffd\ufffd\ufffd?\ufffd\ufffdO\ufffd\t\ufffd\ufffd\ufffdx\ufffd\ufffd\n\ufffd\ufffd^|\ufffd\ufffd\ufffd<\t\ufffdj~\ufffd\u053e(\ufffd\ufffd\ufffdz\ufffd\ufffdl|\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd^j:\ufffd\ufffd\ufffdG\ufffd\ufffd\ufffdL\ufffd\ufffd(\ufffd\ufffd\u016a\ufffd\ufffd\ufffd\ufffdY\ufffd\ufffdL&\ufffd\ufffd\ufffd\ufffd.~,\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd_\ufffdQ\ufffd\ufffd\ufffd\ufffdw\ufffd\ufffd\ufffd>\ufffd\ufffd<t\ufffdK{r\ufffdTo\ufffd|R\ufffdI\ufffd{n\ufffd\ufffd[Aht\ufffd\\\ufffd{\ufffd0\ufffd\ufffd\ufffd\\\ufffd\ufffdO\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd>+\ufffdO\ufffd5\ufffdT\ufffd\ufffd\ufffd_\t>!\ufffd\ufffd\u15cbc\ufffdn\ufffd\ufffdNO\ufffd\ufffd\ufffd\u011a\ufffd\ufffdu\u4c3dEE\ufffd\ufffd]WJ\ufffd[[\ufffdE[\ufffd\ufffds*\ufffdp\ufffd\ufffdWs\ufffd?\ufffdz\ufffd\ufffd/\ufffd\ufffd\ufffd\ufffd&\ufffd\ufffd,\ufffd\ufffd\ufffd_\ufffd\ufffd\ufffd\ufffdz\ufffd\"C\ufffdx\ufffd_\ufffd<A}\ufffd\ufffd\ufffd\ufffd\ufffd\u0231\ufffdj\ufffd\ufffd\ufffd[[\ufffd\ufffd\ufffd`\ufffdH\ufffdxj\ufffd+\ufffd\ufffd\ufffd\ufffd\ufffdA\ufffdC\ufffdh?\ufffdS\ufffd+\ufffdkv\ufffd5\ufffd\ufffd\ufffd\ufffd\ufffds\ufffd\ufffdjZ\ufffd\ufffd\ufffd\ufffd\ufffd\u054f\ufffd~\ufffdk2A\ufffd\ufffd\ufffd(\ue9f3\ufffdt\ufffdWUx\ufffdI%\ufffd\ufffda\ufffd_0Kk[\ufffdc\ufffdWh\ufffd\ufffd\ufffd(\ufffd\ufffd\ufffd\ufffd\n\ufffd\n\ufffdimage/colorspace\ufffd\ufffd\n\ufffd\n\ufffdRGB\n\ufffd\n\ufffdimage/channels\ufffd\ufffd\ufffd\ufffd\n\ufffd\ufffd\n\ufffd\n\ufffdimage/width\ufffd\ufffd\ufffd\ufffd\n\ufffd\ufffd\n\ufffd\nimage/height\ufffd\ufffd\ufffd\ufffd\n\ufffd\ufffd\n\ufffd\n\ufffdimage/class/label\ufffd\ufffd\ufffd\ufffd\n\ufffd\ufffd\n\ufffd\n\ufffdimage/filename\ufffd\ufffd\n\t\n\ufffd663.png\n\ufffd\nimage/format\n\ufffd\n\ufffdJPEG\n\ufffd\n\ufffdimage/class/text\ufffd\ufffd\n\ufffd\n\ufffd1\n\n\ufffd\n\ufffd\ufffd\nimage/encoded\ufffd\ufffd\ufffd\n\ufffd\ufffd\n\ufffd\n\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdJFIF\ufffd\ufffd\ufffd\ufffd\ufffd,\ufffd,\ufffd\ufffd\ufffd\ufffd\ufffdC\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdC\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\t\n\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd}\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd!1A\ufffd\ufffdQa\ufffd\"q\ufffd2\ufffd\ufffd#B\ufffd\ufffd\ufffdR\ufffd\ufffd$3br\ufffd\t\n\ufffd\ufffd\ufffd\ufffd\ufffd%&'()*456789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\t\n\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdw\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd!1\ufffd\ufffdAQ\ufffdaq\ufffd\"2\ufffdB\ufffd\ufffd\ufffd\ufffd\t#3R\ufffd\ufffdbr\ufffd\n\ufffd$4\ufffd%\ufffd\ufffd\ufffd\ufffd\ufffd&'()*56789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd?\ufffd\ufffd\ufffd?\ufffd\ufffd\ufffd\ufffda\ufffd\ufffd6#\ufffd\n\ufffd\u057e\ufffd\ufffd+7\ufffdM\ufffd\ufffd\ufffd&\ufffd\ufffd\ufffd\ufffd[\ufffd\ufffd\ufffd[\ufffd\ufffd\ufffd[\ufffd\ufffd\ufffd?\ufffdG\ufffd\ufffd\ufffdcP\ufffdK\ufffd\ufffd)i\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdqk\ufffdj\ufffd\ufffd\u03edM\u0fc6:u\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd>'\ufffd\ufffdi\ufffd[\ufffd\ufffd\ufffdu\ufffd\ufffd\\\ufffd\ufffd{\ufffd\ufffd\ufffd_\ufffdN_\ufffd{\ufffd\t\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdM\ufffd\ufffd\ufffd\ufffd~+\u057c'a\ufffd\t\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdO\ufffdj:\ufffd\ufffd\ufffdA\ufffd\ufffd\ufffdX\ufffd\ufffd\ufffd\ufffd=gA\ufffd\ufffd\ufffd\ufffd#\ufffd\ufffdF\ufffd\ufffd\ufffd\ufffd-#\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd*\ufffd\ufffd\ufffd\ufffd:\ufffd\ufffdF?\ufffd:\ufffd\ufffdO\ufffd\ufffd\ufffdm?\ufffd3\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd7\ufffd\ufffd\ufffd\ufffd:\ufffd\ufffd4=3\ufffd\ufffd\u010f\ufffd\ufffd\ufffd\ufffd%^Z\ufffd\ufffd\ufffd\ufffd#\ufffd\ufffd\ufffd\ufffd>![\ufffd\ufffdMk\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdj\ufffd\ufffd\ufffd\u07c7\ufffdY\ufffdm\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdP\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\t\ufffd\ufffd\ufffd\ufffd\n\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdv\ufffdVW\ufffd\ufffd\ufffd\ufffd\ufffdu\ufffdh\ufffd\ufffd6\ufffdP2K\ufffd\ufffd\ufffdb\ufffd\ufffd\ufffd\ufffd?\ufffd\ufffd\ufffd\ufffdjW\ufffd\ufffd\ufffd\ufffd_\ufffd\ufffd\ufffd?\ufffdY\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd?e\ufffd\ufffd\ufffd\ufffd\ufffdrXx{\ufffdO\ufffdu\ufffd\ufffd\ufffd\ufffdbX\u0268\ufffdk\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdkC\ufffd\ufffdh\ufffd\ufffd;+Y4\ufffd\ufffd\ufffd:\u043cK\ufffd\ufffd\ufffdO{w\ufffd\ufffd\ufffd\ufffd\ufffdu[+I\ufffd\ufffd\ufffd\ufffd\ufffd=\ufffd\ufffd\u00cdhx\ufffd\ufffd\ufffd<Y\ufffd/\ufffd\ufffdY\ufffdF\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0585\ufffd\u044c\ufffdY\ufffdSC\ufffd\ufffd\ufffd\ufffd\ufffd&(\ufffd\ufffd\ufffd\ufffd&c\ufffdfDm\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdC~\ufffdW\ufffdj\ufffd\ufffd\ufffd<|f\ufffd\u0769[I\ufffd\ufffd\u068f\ufffd\ufffd\ufffd7\ufffd\ufffd}o,\ufffd}\ufffd\ufffd\ufffd\ufffd]\ufffd\ufffd\\\u05ae\"\ufffd\ufffd*\ufffd\ufffdL\ufffd\ufffdZ=>\ufffd\ufffd\ufffd\ufffd\ufffd4\ufffd\ufffd\ufffd?\ufffd\ufffd/\ufffd-\ufffd\ufffd\ufffd\u06ff\u00bf\ufffd\ufffd\ufffda\ufffd\ufffdk\u00da\ufffd\ufffd\ufffd\ufffdbo\ufffd\ufffd\ufffdK\ufffd\ufffdU\ufffdtk\ufffd\n\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdtMC\ufffd\ufffd\ufffd\ufffd\ufffd~\ufffd\ufffd\u069ek\ufffd\ufffd\ufffd\ufffd\ufffdu\u00ef\ufffd\ufffd|W\ufffdi\ufffd)\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd^\ufffd\ufffdu\ufffd\ufffd\ufffd\ufffd-\ufffdP\ufffd\ufffd\ufffd\n\ufffd\n\ufffdimage/class/text\ufffd\ufffd\n\ufffd\n\ufffd3\n\ufffd\nimage/height\ufffd\ufffd\ufffd\ufffd\n\ufffd\ufffd\n\ufffd\n\ufffdimage/class/label\ufffd\ufffd\ufffd\ufffd\n\ufffd\ufffd\n\ufffd\n\ufffdimage/colorspace\ufffd\ufffd\n\ufffd\n\ufffdRGB\n\ufffd\n\ufffdimage/filename\ufffd\n\n\n\n7763.png\n\ufffd\nimage/format\n\ufffd\n\ufffdJPEG\n\ufffd\n\ufffdimage/channels\ufffd\ufffd\ufffd\ufffd\n\ufffd\ufffd\n\ufffd\n\ufffdimage/width\ufffd\ufffd\ufffd\ufffd\n\ufffd\ufffd", "body": "------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes, but only slightly--I'm using the Inception v3 framework but made some minor modifications to the inception_eval.py code (none around the image processing script)\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux 16.04\r\n- **TensorFlow installed from (source or binary)**: Binary\r\n- **TensorFlow version (use command below)**: 1.1.0\r\n- **Python version**: 3.5\r\n- **Bazel version (if compiling from source)**: 0.5.1\r\n- **CUDA/cuDNN version**: 8.0.61\r\n- **GPU model and memory**: Cirrus Logic GD 5446, 16GB\r\n- **Exact command to reproduce**: bazel-bin/inception/imagenet_eval --checkpoint_dir=$HOME/train --eval_dir=$HOME/eval\r\n\r\nYou can collect some of this information using our environment capture script:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\nYou can obtain the TensorFlow version with\r\n\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n\r\n### Describe the problem\r\n\r\nThe parse_single_example function in parsing_ops.py seems to be incorrectly parsing encoded protobufs written into a TFRecord. Specifically, I have been trying to classify images into categories labelled \"1\", \"2\", \"3\", and \"4\". Up until the point in my neural network where the images and associated label are turned into a protobuf serialized image, the labels associated with the images are correct--tf.train.Feature successfully turns each label into an associated integer consistently matching the label. However, after being serialized and then written to a TFRecord and compressed, and then decoded through tf.parse_single_example, the label for each image becomes some random integer between 1 and 9 and no longer matches the label number, with no discernable pattern.\r\n\r\nI've traced the issue through the Inception code, and this problem is not happening in Inception--the bug is somewhere between my images are converted from a jpeg with labels to a serialized protobuf through tf.train.Example(features=tf.train.Features(features)) and when the protobuf is decoded through tf.parse_single_example. The label in outputs created by outputs = _parse_single_example_raw within tf.parse_single_example is already incorrect, and the int64 object for each label, created by passing label values into tf.train.Feature(int64_list=tf.train.Int64List(value=label)), that is passed into tf.train.Example(features=tf.train.Features(features)) to create the serialized protobuf that is parsed by tf.parse_single_example still correctly matches the original labels. Therefore, the problem must be happening somewhere between the serialization and the parsing, both of which occur within tensorflow.\r\n\r\nEDIT/UPDATE: Upon further examination, the bug seems to occur in some combination of when the image is serialized and when it is written to a TFRecord. I used protoc to manually compile example.proto and used that to manually parse parse the protobufs created by calling tf.train.Example on a Features tensor and encoding them with the SerializeToString method of the example.proto, and while the image/class/text and filename seemed to be correct, the label was missing. After the encoded protobufs are written to a TFRecord, compressed, and then parsed from the TFRecord through, tf.parse_single_example, and they are incorrect--the image/class/label seems to be missing, the image/class/text is no longer correct either, even though it was correct before being passed in, and the beginning of the protobuf has some really wonky encoding going on that example.proto's ParseFromString doesn't seem to be able to read and convert into a string. Additionally, I tried decoding the protobufs parsed from the TFRecord with tf.parse_single_example from latin1 manually, and the labels were still incorrect and matched the incorrect labels from using example.proto's ParseFromString, indicating that the problem isn't happening in the decoding. The parsed protobufs created by image_processing.py have been attached below. \r\n\r\nFURTHER EDIT: Issue has been updated to reflect new information\r\n\r\n### Source code / logs\r\n\r\nThe relevant inception code that calls the aformentioned tensorflow functions is shown below:\r\n\r\n**For serializing images+labels into a protobuf**:\r\n\r\n```\r\ndef _convert_to_example(filename, image_buffer, label, text, height, width):\r\n  \"\"\"Build an Example proto for an example.\r\n\r\n  Args:\r\n    filename: string, path to an image file, e.g., '/path/to/example.JPG'\r\n    image_buffer: string, JPEG encoding of RGB image\r\n    label: integer, identifier for the ground truth for the network\r\n    text: string, unique human-readable, e.g. 'dog'\r\n    height: integer, image height in pixels\r\n    width: integer, image width in pixels\r\n  Returns:\r\n    Example proto\r\n  \"\"\"\r\n\r\n  colorspace = 'RGB'\r\n  channels = 3\r\n  image_format = 'JPEG'\r\n\r\n  example = tf.train.Example(features=tf.train.Features(feature={\r\n      'image/height': _int64_feature(height),\r\n      'image/width': _int64_feature(width),\r\n      'image/colorspace': _bytes_feature(tf.compat.as_bytes(colorspace)),\r\n      'image/channels': _int64_feature(channels),\r\n      'image/class/label': _int64_feature(label),\r\n      'image/class/text': _bytes_feature(tf.compat.as_bytes(text)),\r\n      'image/format': _bytes_feature(tf.compat.as_bytes(image_format)),\r\n      'image/filename': _bytes_feature(tf.compat.as_bytes(os.path.basename(filename))),\r\n      'image/encoded': _bytes_feature(tf.compat.as_bytes(image_buffer))}))\r\n  return example\r\n```\r\n\r\n```\r\ndef _int64_feature(value):\r\n  \"\"\"Wrapper for inserting int64 features into Example proto.\"\"\"\r\n  if not isinstance(value, list):\r\n    value = [value]\r\n  return tf.train.Feature(int64_list=tf.train.Int64List(value=value))\r\n```\r\n\r\n**For parsing a protobuf**\r\n```\r\n\r\ndef parse_example_proto(example_serialized):\r\n  \"\"\"Parses an Example proto containing a training example of an image.\r\n\r\n  The output of the build_image_data.py image preprocessing script is a dataset\r\n  containing serialized Example protocol buffers. Each Example proto contains\r\n  the following fields:\r\n\r\n    image/height: 462\r\n    image/width: 581\r\n    image/colorspace: 'RGB'\r\n    image/channels: 3\r\n    image/class/label: 615\r\n    image/class/synset: 'n03623198'\r\n    image/class/text: 'knee pad'\r\n    image/object/bbox/xmin: 0.1\r\n    image/object/bbox/xmax: 0.9\r\n    image/object/bbox/ymin: 0.2\r\n    image/object/bbox/ymax: 0.6\r\n    image/object/bbox/label: 615\r\n    image/format: 'JPEG'\r\n    image/filename: 'ILSVRC2012_val_00041207.JPEG'\r\n    image/encoded: <JPEG encoded string>\r\n\r\n   Args:\r\n     example_serialized: scalar Tensor tf.string containing a serialized\r\n       Example protocol buffer.\r\n\r\n   Returns:\r\n     image_buffer: Tensor tf.string containing the contents of a JPEG file.\r\n     label: Tensor tf.int32 containing the label.\r\n     bbox: 3-D float Tensor of bounding boxes arranged [1, num_boxes, coords]\r\n       where each coordinate is [0, 1) and the coordinates are arranged as\r\n       [ymin, xmin, ymax, xmax].\r\n     text: Tensor tf.string containing the human-readable label.\r\n   \"\"\"\r\n   # Dense features in Example proto.\r\n   feature_map = {\r\n       'image/encoded': tf.FixedLenFeature([], dtype=tf.string,\r\n                                           default_value=''),\r\n       'image/class/label': tf.FixedLenFeature([1], dtype=tf.int64,\r\n                                               default_value=-1),\r\n       'image/class/text': tf.FixedLenFeature([], dtype=tf.string,\r\n                                              default_value=''),\r\n   }\r\n   sparse_float32 = tf.VarLenFeature(dtype=tf.float32)\r\n  # Sparse features in Example proto.\r\n   feature_map.update(\r\n       {k: sparse_float32 for k in ['image/object/bbox/xmin',\r\n                                    'image/object/bbox/ymin',\r\n                                    'image/object/bbox/xmax',\r\n                                    'image/object/bbox/ymax']})\r\n\r\n   features = tf.parse_single_example(example_serialized, feature_map)\r\n   label = tf.cast(features['image/class/label'], dtype=tf.int32)\r\n\r\n   xmin = tf.expand_dims(features['image/object/bbox/xmin'].values, 0)\r\n   ymin = tf.expand_dims(features['image/object/bbox/ymin'].values, 0)\r\n   xmax = tf.expand_dims(features['image/object/bbox/xmax'].values, 0)\r\n   ymax = tf.expand_dims(features['image/object/bbox/ymax'].values, 0)\r\n\r\n   # Note that we impose an ordering of (y, x) just to make life difficult.\r\n   bbox = tf.concat(axis=0, values=[ymin, xmin, ymax, xmax])\r\n\r\n   # Force the variable number of bounding boxes into the shape\r\n   # [1, num_boxes, coords].\r\n   bbox = tf.expand_dims(bbox, 0)\r\n   bbox = tf.transpose(bbox, [0, 2, 1])\r\n\r\n   return features['image/encoded'], label, bbox, features['image/class/text']\r\n```\r\n\r\n**Protobufs created by parsing from byte-encoded protobufs compressed and written to a TFRecord and then uncompressed and read with tf.parse_single_example, and decoded with example.proto's ParseFromString**:\r\n```\r\n\ufffd\u000b\r\n\ufffd\t\r\nimage/encoded\u0012\ufffd\t\r\n\ufffd\t\r\n\ufffd\t\ufffd\ufffd\ufffd\ufffd\ufffd\u0010JFIF\ufffd\u0001\u0001\u0001\u0001,\u0001,\ufffd\ufffd\ufffd\ufffd\ufffdC\ufffd\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\ufffd\ufffd\ufffdC\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\ufffd\ufffd\ufffd\ufffd\u001c\ufffd\u001c\u0003\u0001\"\ufffd\u0002\u0011\u0001\u0003\u0011\u0001\ufffd\ufffd\ufffd\u001f\ufffd\ufffd\u0001\u0005\u0001\u0001\u0001\u0001\u0001\u0001\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0001\u0002\u0003\u0004\u0005\u0006\t\r\n\u000b\ufffd\ufffd\ufffd\ufffd\u0010\ufffd\u0002\u0001\u0003\u0003\u0002\u0004\u0003\u0005\u0005\u0004\u0004\ufffd\ufffd\u0001}\u0001\u0002\u0003\ufffd\u0004\u0011\u0005\u0012!1A\u0006\u0013Qa\u0007\"q\u00142\ufffd\ufffd#B\ufffd\ufffd\u0015R\ufffd\ufffd$3br\ufffd\t\r\n\u0016\u0017\u0018\u0019\u001a%&'()*456789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u001f\u0001\ufffd\u0003\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0001\u0002\u0003\u0004\u0005\u0006\t\r\n\u000b\ufffd\ufffd\ufffd\ufffd\u0011\ufffd\u0002\u0001\u0002\u0004\u0004\u0003\u0004\u0007\u0005\u0004\u0004\ufffd\u0001\u0002w\ufffd\u0001\u0002\u0003\u0011\u0004\u0005!1\u0006\u0012AQ\u0007aq\u0013\"2\u0014B\ufffd\ufffd\ufffd\ufffd\t#3R\ufffd\u0015br\ufffd\r\n\ufffd%\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdn_\ufffd\u007f\ufffd\ufffd\ufffd\u07cb\ufffd\u0010~;|\u001e\ufffd\r\n<g\ufffd\ufffd\ufffd\u000f\ufffd!\ufffd_\ufffd\ufffd\u0011\ufffd\ufffdW\ufffdZo\ufffd\ufffd\ufffdo\r\n\ufffd[x\u0003\ufffd\ufffd\ufffd\ufffd\ufffd)\ufffd\ufffd\ufffd\ufffd\ufffd>)|I\ufffd-\ufffdk~)\ufffd\u0017\ufffd[_\ufffd^(\ufffdm\ufffd\ufffd\ufffd\u0013\ufffd/\ufffd\ufffd\ufffd\u000f\u000e\ufffdb\ufffd\ufffd\ufffdF\ufffd\ufffd\u001a\ufffdu\u06db\ufffd}4Y\ufffd]k\ufffdk\u0007\u066dM\ufffd\ufffd\ufffd\ufffd\u0014P\u0007\ufffd\ufffd\r\n\u0015\r\n\fimage/height\u0012\u0005\u001a\u0003\r\n\u0001\u001c\r\n\u001a\r\n\u0011image/class/label\u0012\u0005\u001a\u0003\r\n\u0001\u0007\r\n\u0019\r\n\u0010image/class/text\u0012\u0005\r\n\u0003\r\n\u00016\r\n\u0017\r\n\u000eimage/channels\u0012\u0005\u001a\u0003\r\n\u0001\u0003\r\n\u0014\r\n\u000bimage/width\u0012\u0005\u001a\u0003\r\n\u0001\u001c\r\n\u001d\r\n\u000eimage/filename\u0012\u000b\r\n\t\r\n\u0007368.png\r\n\u0018\r\n\fimage/format\r\n\u0006\r\n\u0004JPEG\r\n\u001b\r\n\u0010image/colorspace\u0012\u0007\r\n\u0005\r\n\u0003RGB\r\n\r\n\ufffd\u000b\r\n\ufffd\r\n\r\nimage/encoded\u0012\ufffd\r\n\r\n\ufffd\t\r\n\ufffd\t\ufffd\ufffd\ufffd\ufffd\ufffd\u0010JFIF\ufffd\u0001\u0001\u0001\u0001,\u0001,\ufffd\ufffd\ufffd\ufffd\ufffdC\ufffd\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\ufffd\ufffd\ufffdC\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\ufffd\ufffd\ufffd\ufffd\u001c\ufffd\u001c\u0003\u0001\"\ufffd\u0002\u0011\u0001\u0003\u0011\u0001\ufffd\ufffd\ufffd\u001f\ufffd\ufffd\u0001\u0005\u0001\u0001\u0001\u0001\u0001\u0001\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0001\u0002\u0003\u0004\u0005\u0006\t\r\n\u000b\ufffd\ufffd\ufffd\ufffd\u0010\ufffd\u0002\u0001\u0003\u0003\u0002\u0004\u0003\u0005\u0005\u0004\u0004\ufffd\ufffd\u0001}\u0001\u0002\u0003\ufffd\u0004\u0011\u0005\u0012!1A\u0006\u0013Qa\u0007\"q\u00142\ufffd\ufffd#B\ufffd\ufffd\u0015R\ufffd\ufffd$3br\ufffd\t\r\n\u0016\u0017\u0018\u0019\u001a%&'()*456789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u001f\u0001\ufffd\u0003\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0001\u0002\u0003\u0004\u0005\u0006\t\r\n\u000b\ufffd\ufffd\ufffd\ufffd\u0011\ufffd\u0002\u0001\u0002\u0004\u0004\u0003\u0004\u0007\u0005\u0004\u0004\ufffd\u0001\u0002w\ufffd\u0001\u0002\u0003\u0011\u0004\u0005!1\u0006\u0012AQ\u0007aq\u0013\"2\u0014B\ufffd\ufffd\ufffd\ufffd\t#3R\ufffd\u0015br\ufffd\r\n#\ufffd2\ufffd\ufffd?\ufffd\u000f\ufffd,\ufffd\ufffd\u000f\ufffd,\ufffd\ufffd\u001f\ufffdN\ufffd\ufffd\ufffd\ufffd\ufffd%|\u007f\ufffd\ufffdS'\ufffd\ufffd\ufffd;\u01bf\u001a\ufffdj/\ufffd~\u0007\ufffdn\u0013\ufffd\u068f\u014dF\ufffd\ufffdW^\u001e\ufffd\u05c2\ufffd\ufffd\ufffdwD\u0563\ufffd\ufffd\u23cc-u\ufffd\ud89a\udeeb\ufffd6\ufffdh^\u0019\ufffd\ufffdR\ufffd\ufffdr\ufffd\ufffdE\ufffd?\ufffd\ufffd(\ufffd\u000f\ufffd\ufffd\r\n\u001b\r\n\u0010image/colorspace\u0012\u0007\r\n\u0005\r\n\u0003RGB\r\n\u0017\r\n\u000eimage/channels\u0012\u0005\u001a\u0003\r\n\u0001\u0003\r\n\u0014\r\n\u000bimage/width\u0012\u0005\u001a\u0003\r\n\u0001\u001c\r\n\u0015\r\n\fimage/height\u0012\u0005\u001a\u0003\r\n\u0001\u001c\r\n\u001a\r\n\u0011image/class/label\u0012\u0005\u001a\u0003\r\n\u0001\u0006\r\n\u001e\r\n\u000eimage/filename\u0012\f\r\n\r\n\r\n\r\n5852.png\r\n\u0018\r\n\fimage/format\r\n\u0006\r\n\u0004JPEG\r\n\u0019\r\n\u0010image/class/text\u0012\u0005\r\n\u0003\r\n\u00015\r\n\r\n\ufffd\f\r\n\ufffd\r\n\r\nimage/encoded\u0012\ufffd\r\n\r\n\ufffd\r\n\r\n\ufffd\r\n\ufffd\ufffd\ufffd\ufffd\ufffd\u0010JFIF\ufffd\u0001\u0001\u0001\u0001,\u0001,\ufffd\ufffd\ufffd\ufffd\ufffdC\ufffd\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\ufffd\ufffd\ufffdC\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\ufffd\ufffd\ufffd\ufffd\u001c\ufffd\u001c\u0003\u0001\"\ufffd\u0002\u0011\u0001\u0003\u0011\u0001\ufffd\ufffd\ufffd\u001f\ufffd\ufffd\u0001\u0005\u0001\u0001\u0001\u0001\u0001\u0001\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0001\u0002\u0003\u0004\u0005\u0006\t\r\n\u000b\ufffd\ufffd\ufffd\ufffd\u0010\ufffd\u0002\u0001\u0003\u0003\u0002\u0004\u0003\u0005\u0005\u0004\u0004\ufffd\ufffd\u0001}\u0001\u0002\u0003\ufffd\u0004\u0011\u0005\u0012!1A\u0006\u0013Qa\u0007\"q\u00142\ufffd\ufffd#B\ufffd\ufffd\u0015R\ufffd\ufffd$3br\ufffd\t\r\n\u0016\u0017\u0018\u0019\u001a%&'()*456789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u001f\u0001\ufffd\u0003\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0001\u0002\u0003\u0004\u0005\u0006\t\r\n\u000b\ufffd\ufffd\ufffd\ufffd\u0011\ufffd\u0002\u0001\u0002\u0004\u0004\u0003\u0004\u0007\u0005\u0004\u0004\ufffd\u0001\u0002w\ufffd\u0001\u0002\u0003\u0011\u0004\u0005!1\u0006\u0012AQ\u0007aq\u0013\"2\u0014B\ufffd\ufffd\ufffd\ufffd\t#3R\ufffd\u0015br\ufffd\r\n]\ufffdCk\u001aKq\ufffd\ufffd;\ufffd\u0003\ufffd\u000e\ufffd\ufffd\u001f\ufffdn\ufffdd\ufffd\ufffd!\ufffd\ufffd\ufffd\ufffdm_R{}J(\ufffd\ufffdkv\ufffd\ufffd?\ufffd\ufffd(\u0003\ufffdS\ufffd\r\n\u000e]oP\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\r\n\u001b\r\n\u0010image/colorspace\u0012\u0007\r\n\u0005\r\n\u0003RGB\r\n\u0017\r\n\u000eimage/channels\u0012\u0005\u001a\u0003\r\n\u0001\u0003\r\n\u0014\r\n\u000bimage/width\u0012\u0005\u001a\u0003\r\n\u0001\u001c\r\n\u0015\r\n\fimage/height\u0012\u0005\u001a\u0003\r\n\u0001\u001c\r\n\u001a\r\n\u0011image/class/label\u0012\u0005\u001a\u0003\r\n\u0001\u0006\r\n\u001e\r\n\u000eimage/filename\u0012\f\r\n\r\n\r\n\r\n7602.png\r\n\u0018\r\n\fimage/format\r\n\u0006\r\n\u0004JPEG\r\n\u0019\r\n\u0010image/class/text\u0012\u0005\r\n\u0003\r\n\u00015\r\n\r\n\ufffd\t\r\n\ufffd\u0007\r\nimage/encoded\u0012\ufffd\u0007\r\n\ufffd\u0007\r\n\ufffd\u0007\ufffd\ufffd\ufffd\ufffd\ufffd\u0010JFIF\ufffd\u0001\u0001\u0001\u0001,\u0001,\ufffd\ufffd\ufffd\ufffd\ufffdC\ufffd\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\ufffd\ufffd\ufffdC\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\ufffd\ufffd\ufffd\ufffd\u001c\ufffd\u001c\u0003\u0001\"\ufffd\u0002\u0011\u0001\u0003\u0011\u0001\ufffd\ufffd\ufffd\u001f\ufffd\ufffd\u0001\u0005\u0001\u0001\u0001\u0001\u0001\u0001\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0001\u0002\u0003\u0004\u0005\u0006\t\r\n\u000b\ufffd\ufffd\ufffd\ufffd\u0010\ufffd\u0002\u0001\u0003\u0003\u0002\u0004\u0003\u0005\u0005\u0004\u0004\ufffd\ufffd\u0001}\u0001\u0002\u0003\ufffd\u0004\u0011\u0005\u0012!1A\u0006\u0013Qa\u0007\"q\u00142\ufffd\ufffd#B\ufffd\ufffd\u0015R\ufffd\ufffd$3br\ufffd\t\r\n\u0016\u0017\u0018\u0019\u001a%&'()*456789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u001f\u0001\ufffd\u0003\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0001\u0002\u0003\u0004\u0005\u0006\t\r\n\u000b\ufffd\ufffd\ufffd\ufffd\u0011\ufffd\u0002\u0001\u0002\u0004\u0004\u0003\u0004\u0007\u0005\u0004\u0004\ufffd\u0001\u0002w\ufffd\u0001\u0002\u0003\u0011\u0004\u0005!1\u0006\u0012AQ\u0007aq\u0013\"2\u0014B\ufffd\ufffd\ufffd\ufffd\t#3R\ufffd\u0015br\ufffd\r\n\u0016$4\ufffd%\ufffd\u0017\u0018\u0019\u001a&'()*56789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\f\u0003\u0001\ufffd\u0002\u0011\u0003\u0011\ufffd?\ufffd\ufffd\ufffd?\ufffd\ufffdO\ufffd\t\ufffd\ufffd\u0015x\ufffd\ufffd\r\n\u0015\ufffd^|\u001f\ufffd\ufffd<\t\ufffdj~\u001f\u053e(\ufffd\u0017\ufffdz\ufffd\ufffdl|\u001f\ufffd\ufffd\ufffd\ufffd\ufffd\u001a\u0006\ufffd\ufffd^j:\ufffd\ufffd\ufffdG\ufffd\ufffd\ufffdL\ufffd\ufffd(\ufffd\ufffd\u016a\ufffd\u0013\ufffd\u0010Y\ufffd\ufffdL&\ufffd\ufffd\ufffd\ufffd.~,\ufffd\ufffd\ufffd\ufffd\f\ufffd\ufffd_\ufffdQ\ufffd\ufffd\u000b\ufffd\fw\ufffd\ufffd\ufffd>\ufffd\ufffd<t\u001bK{r\ufffdTo\u0011|R\ufffdI\u001c{n\ufffd\ufffd[Aht\ufffd\\\u001b{\ufffd0\ufffd\u0005\ufffd\\\u0003\ufffdO\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0005>+\ufffdO\ufffd5\ufffdT\ufffd\ufffd\ufffd_\t>!\ufffd\ufffd\u15cbc\ufffdn\ufffd\ufffdNO\u0013\ufffd\u000b\u011a\ufffd\ufffdu\u4c3dEE\ufffd\ufffd]WJ\ufffd[[\ufffdE[\ufffd\u0004s*\ufffdp\u0007\ufffdWs\ufffd?\ufffdz\ufffd\ufffd/\ufffd\u007f\u0010\ufffd&\ufffd\u0011,\u001a\ufffd\ufffd_\u001c\ufffd\ufffd\ufffdz\ufffd\"C\ufffdx\ufffd_\ufffd<A}\u0012\ufffd\u001c\u0016\ufffd\u0231\ufffdj\u0012\ufffd\ufffd[[\ufffd\ufffd\u0019`\ufffdH\ufffdxj\ufffd+\ufffd\ufffd\ufffd\ufffd\ufffdA\ufffdC\ufffdh?\ufffdS\ufffd+\ufffdkv\u001a5\ufffd\ufffd\ufffd\u0010\ufffds\ufffd\ufffdjZ\ufffd\ufffd\ufffd\u0005\ufffd\u054f\ufffd~\u0011k2A\u0010\ufffd\ufffd(\ue9f3\ufffdt\ufffdWUx\ufffdI%\ufffd\ufffda\ufffd_0Kk[\ufffdc\ufffdWh\ufffd\u0002\ufffd(\ufffd\u000f\ufffd\ufffd\r\n\u001b\r\n\u0010image/colorspace\u0012\u0007\r\n\u0005\r\n\u0003RGB\r\n\u0017\r\n\u000eimage/channels\u0012\u0005\u001a\u0003\r\n\u0001\u0003\r\n\u0014\r\n\u000bimage/width\u0012\u0005\u001a\u0003\r\n\u0001\u001c\r\n\u0015\r\n\fimage/height\u0012\u0005\u001a\u0003\r\n\u0001\u001c\r\n\u001a\r\n\u0011image/class/label\u0012\u0005\u001a\u0003\r\n\u0001\u0002\r\n\u001d\r\n\u000eimage/filename\u0012\u000b\r\n\t\r\n\u0007663.png\r\n\u0018\r\n\fimage/format\r\n\u0006\r\n\u0004JPEG\r\n\u0019\r\n\u0010image/class/text\u0012\u0005\r\n\u0003\r\n\u00011\r\n\r\n\ufffd\f\r\n\ufffd\u000b\r\nimage/encoded\u0012\ufffd\u000b\r\n\ufffd\u000b\r\n\ufffd\r\n\ufffd\ufffd\ufffd\ufffd\ufffd\u0010JFIF\ufffd\u0001\u0001\u0001\u0001,\u0001,\ufffd\ufffd\ufffd\ufffd\ufffdC\ufffd\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\ufffd\ufffd\ufffdC\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\ufffd\ufffd\ufffd\ufffd\u001c\ufffd\u001c\u0003\u0001\"\ufffd\u0002\u0011\u0001\u0003\u0011\u0001\ufffd\ufffd\ufffd\u001f\ufffd\ufffd\u0001\u0005\u0001\u0001\u0001\u0001\u0001\u0001\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0001\u0002\u0003\u0004\u0005\u0006\t\r\n\u000b\ufffd\ufffd\ufffd\ufffd\u0010\ufffd\u0002\u0001\u0003\u0003\u0002\u0004\u0003\u0005\u0005\u0004\u0004\ufffd\ufffd\u0001}\u0001\u0002\u0003\ufffd\u0004\u0011\u0005\u0012!1A\u0006\u0013Qa\u0007\"q\u00142\ufffd\ufffd#B\ufffd\ufffd\u0015R\ufffd\ufffd$3br\ufffd\t\r\n\u0016\u0017\u0018\u0019\u001a%&'()*456789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u001f\u0001\ufffd\u0003\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0001\u0002\u0003\u0004\u0005\u0006\t\r\n\u000b\ufffd\ufffd\ufffd\ufffd\u0011\ufffd\u0002\u0001\u0002\u0004\u0004\u0003\u0004\u0007\u0005\u0004\u0004\ufffd\u0001\u0002w\ufffd\u0001\u0002\u0003\u0011\u0004\u0005!1\u0006\u0012AQ\u0007aq\u0013\"2\u0014B\ufffd\ufffd\ufffd\ufffd\t#3R\ufffd\u0015br\ufffd\r\n\u0016$4\ufffd%\ufffd\u0017\u0018\u0019\u001a&'()*56789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\f\u0003\u0001\ufffd\u0002\u0011\u0003\u0011\ufffd?\ufffd\ufffd\ufffd?\ufffd\ufffd\ufffd\u007fa\u001f\ufffd6#\ufffd\r\n\ufffd\u057e\u0013\ufffd+7\ufffdM\ufffd\ufffd\u0005&\ufffd\ufffd\ufffd\ufffd[\ufffd\u001f\ufffd[\ufffd\ufffd\ufffd[\ufffd\u001f\ufffd?\ufffdG\ufffd\u007f\ufffdcP\ufffdK\ufffd\ufffd)i\ufffd\u001b\ufffd\ufffd\ufffd\ufffdqk\ufffdj\ufffd\ufffd\u03edM\u0fc6:u\ufffd\ufffd \ufffd\u0016\ufffd\ufffd\u0005\ufffd\u0016>'\ufffd\u0010i\ufffd[\ufffd\ufffd\ufffdu\ufffd\u0003\\\ufffd\ufffd{\ufffd\ufffd\ufffd_\ufffdN_\ufffd{\ufffd\t\ufffd\ufffd\ufffd\ufffd\ufffd\u0007\ufffdM\ufffd\ufffd\u000e\ufffd~+\u057c'a\ufffd\t\ufffd\ufffd\u000b\ufffd\u001d\ufffd\ufffd\ufffd\u0017\ufffdO\u0007j:\ufffd\ufffd\ufffdA\ufffd\ufffd\u007fX\ufffd\u000b\u001b\ufffd=gA\ufffd\ufffd\ufffd\ufffd#\ufffd\u001aF\ufffd\ufffd\u001b\u0019-#\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u001d*\ufffd\ufffd\ufffd\ufffd:\ufffd\ufffdF?\ufffd:\ufffd\ufffdO\ufffd\ufffd\u007fm?\ufffd3\ufffd\ufffd\ufffd\u0016\u0013\ufffd\u000f\ufffd\ufffd\ufffd\u0010\ufffd\ufffd\ufffd7\ufffd\u007f\ufffd\ufffd:\ufffd\u00114=3\ufffd\u007f\u010f\ufffd\u007f\u0012\ufffd%^Z\ufffd\ufffd\ufffd\ufffd#\ufffd\ufffd\ufffd\ufffd>![\ufffd\ufffdMk\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdj\ufffd\ufffd\ufffd\u07c7\ufffdY\ufffdm\ufffd\u001b\u0001\ufffd\ufffd\ufffd\u0015\ufffd\ufffd\ufffdP\u0007\ufffd\ufffd\u0012\ufffd\ufffd\t\ufffd\ufffd\u0007\ufffd\r\n\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdv\u0017VW\ufffd\ufffd\ufffd\ufffd\ufffdu\ufffdh\ufffd\ufffd6\ufffdP2K\ufffd\ufffd\ufffdb\ufffd\ufffd\ufffd\ufffd?\ufffd\ufffd\u007f\ufffdjW\ufffd\u007f\ufffd\u0016_\u0019\ufffd\ufffd?\ufffdY\ufffd\ufffd\u001f\ufffd\ufffd\ufffd\ufffd?e\ufffd\ufffd\ufffd\ufffd\ufffdrXx{\ufffdO\ufffdu\ufffd\u000e\ufffd\ufffdbX\u0268\ufffdk\u0016\ufffd\ufffd\u001f\u0014\ufffdkC\ufffd\ufffdh\ufffd\ufffd;+Y4\ufffd\ufffd\ufffd:\u043cK\ufffd\u001f\ufffdO{w\ufffd\ufffd\ufffd\ufffd\ufffdu[+I\ufffd\u001f\ufffd\ufffd\ufffd=\ufffd\ufffd\u00cdhx\ufffd\ufffd\ufffd<Y\ufffd/\u0010\ufffdY\ufffdF\ufffd\ufffd\ufffd\u0011\ufffd\u001e\u0017\u0585\ufffd\u044c\ufffdY\ufffdSC\ufffd\ufffd\ufffd\u0016\ufffd&(\ufffd\ufffd\ufffd\u007f&c\u001cfDm\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u001d\ufffdC~\ufffdW\ufffdj\u007f\u001e\ufffd<|f\ufffd\u0769[I\u0014\ufffd\u068f\ufffd\ufffd\u001e7\ufffd\ufffd}o,\u001a}\ufffd\ufffd\u0004\ufffd]\ufffd\ufffd\\\u05ae\"\ufffd\u001d*\ufffd\ufffdL\ufffd\ufffdZ=>\ufffd\ufffd\ufffd\ufffd\ufffd4\ufffd\ufffd\ufffd?\ufffd\ufffd/\ufffd-\ufffd\ufffd\ufffd\u06ff\u00bf\u0007\ufffd\ufffda\ufffd\ufffdk\u00da\ufffd\ufffd\ufffd\ufffdbo\ufffd\ufffd\ufffdK\ufffd\ufffdU\ufffdtk\ufffd\r\n\u000f\ufffd\ufffd\ufffd\ufffd\ufffdtMC\ufffd\ufffd\u0003\ufffd\ufffd~\u001d\ufffd\u069ek\u000f\ufffd\ufffd\u0011\ufffdu\u00ef\ufffd\ufffd|W\ufffdi\ufffd)\ufffd\ufffd\ufffd\u0017\ufffd\ufffd^\ufffd\ufffdu\ufffd\u0017\u001f\ufffd-\u0014P\u0007\ufffd\ufffd\r\n\u0019\r\n\u0010image/class/text\u0012\u0005\r\n\u0003\r\n\u00013\r\n\u0015\r\n\fimage/height\u0012\u0005\u001a\u0003\r\n\u0001\u001c\r\n\u001a\r\n\u0011image/class/label\u0012\u0005\u001a\u0003\r\n\u0001\u0004\r\n\u001b\r\n\u0010image/colorspace\u0012\u0007\r\n\u0005\r\n\u0003RGB\r\n\u001e\r\n\u000eimage/filename\u0012\f\r\n\r\n\r\n\r\n7763.png\r\n\u0018\r\n\fimage/format\r\n\u0006\r\n\u0004JPEG\r\n\u0017\r\n\u000eimage/channels\u0012\u0005\u001a\u0003\r\n\u0001\u0003\r\n\u0014\r\n\u000bimage/width\u0012\u0005\u001a\u0003\r\n\u0001\u001c\r\n```"}