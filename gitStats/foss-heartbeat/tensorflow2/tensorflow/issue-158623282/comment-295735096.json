{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/295735096", "html_url": "https://github.com/tensorflow/tensorflow/issues/2682#issuecomment-295735096", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2682", "id": 295735096, "node_id": "MDEyOklzc3VlQ29tbWVudDI5NTczNTA5Ng==", "user": {"login": "WihanB", "id": 19494315, "node_id": "MDQ6VXNlcjE5NDk0MzE1", "avatar_url": "https://avatars1.githubusercontent.com/u/19494315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WihanB", "html_url": "https://github.com/WihanB", "followers_url": "https://api.github.com/users/WihanB/followers", "following_url": "https://api.github.com/users/WihanB/following{/other_user}", "gists_url": "https://api.github.com/users/WihanB/gists{/gist_id}", "starred_url": "https://api.github.com/users/WihanB/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WihanB/subscriptions", "organizations_url": "https://api.github.com/users/WihanB/orgs", "repos_url": "https://api.github.com/users/WihanB/repos", "events_url": "https://api.github.com/users/WihanB/events{/privacy}", "received_events_url": "https://api.github.com/users/WihanB/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-20T13:18:14Z", "updated_at": "2017-04-20T13:18:14Z", "author_association": "NONE", "body_html": "<p>I was attempting to implement HF optimisation and Saddle Free Newton. These algorithms are doable in a FFN framework. Unfortunately for RNN's as discussed in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"192612459\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/5985\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/5985/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/5985\">#5985</a> it is currently not possible to calculate second order derivatives from DynamicRNN's due to the use of a while loop. The current workaround would be to use StaticRNN. However, the while loop second derivative issue seems to be the major issue when attempting to implement a general Hessian Free optimisation algorithm or any other general second order method which requires Hessian Vector Products.</p>", "body_text": "I was attempting to implement HF optimisation and Saddle Free Newton. These algorithms are doable in a FFN framework. Unfortunately for RNN's as discussed in #5985 it is currently not possible to calculate second order derivatives from DynamicRNN's due to the use of a while loop. The current workaround would be to use StaticRNN. However, the while loop second derivative issue seems to be the major issue when attempting to implement a general Hessian Free optimisation algorithm or any other general second order method which requires Hessian Vector Products.", "body": "I was attempting to implement HF optimisation and Saddle Free Newton. These algorithms are doable in a FFN framework. Unfortunately for RNN's as discussed in #5985 it is currently not possible to calculate second order derivatives from DynamicRNN's due to the use of a while loop. The current workaround would be to use StaticRNN. However, the while loop second derivative issue seems to be the major issue when attempting to implement a general Hessian Free optimisation algorithm or any other general second order method which requires Hessian Vector Products."}