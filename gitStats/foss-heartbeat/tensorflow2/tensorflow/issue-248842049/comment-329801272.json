{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/329801272", "html_url": "https://github.com/tensorflow/tensorflow/issues/12118#issuecomment-329801272", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12118", "id": 329801272, "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTgwMTI3Mg==", "user": {"login": "eaplatanios", "id": 1294940, "node_id": "MDQ6VXNlcjEyOTQ5NDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1294940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eaplatanios", "html_url": "https://github.com/eaplatanios", "followers_url": "https://api.github.com/users/eaplatanios/followers", "following_url": "https://api.github.com/users/eaplatanios/following{/other_user}", "gists_url": "https://api.github.com/users/eaplatanios/gists{/gist_id}", "starred_url": "https://api.github.com/users/eaplatanios/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eaplatanios/subscriptions", "organizations_url": "https://api.github.com/users/eaplatanios/orgs", "repos_url": "https://api.github.com/users/eaplatanios/repos", "events_url": "https://api.github.com/users/eaplatanios/events{/privacy}", "received_events_url": "https://api.github.com/users/eaplatanios/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-15T14:37:42Z", "updated_at": "2017-09-15T14:37:42Z", "author_association": "CONTRIBUTOR", "body_html": "<div class=\"email-fragment\"><a class=\"user-mention\" href=\"https://github.com/iganichev\">@iganichev</a> how would I pass it using only the function name? Doesn't the SetAttrProto method expect a proto-serialized form of the function? If I only pass the name it wouldn't know it's referring to a function, right? Or does it infer that from the attribute type?\n\nAlso, I noticed that for the eager API, a complete AttrValueMap is created for the function (i.e., passed along with its name).</div>\n<span class=\"email-hidden-toggle\"><a href=\"#\">\u2026</a></span><div class=\"email-hidden-reply\">\n<div class=\"email-quoted-reply\">On Sep 15, 2017, 10:28 AM -0400, Igor Ganichev ***@***.***&gt;, wrote:\n <a class=\"user-mention\" href=\"https://github.com/eaplatanios\">@eaplatanios</a> It might happen work in the other order, but adding the function to graph first is definitely the logical one.\n I believe you only need the function's name. You can definitely get it from the FunctionDef, but if you already have the name, you don't need to retrieve the FunctionDef.\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub, or mute the thread.</div>\n<div class=\"email-fragment\"></div>\n</div>", "body_text": "@iganichev how would I pass it using only the function name? Doesn't the SetAttrProto method expect a proto-serialized form of the function? If I only pass the name it wouldn't know it's referring to a function, right? Or does it infer that from the attribute type?\n\nAlso, I noticed that for the eager API, a complete AttrValueMap is created for the function (i.e., passed along with its name).\n\u2026\nOn Sep 15, 2017, 10:28 AM -0400, Igor Ganichev ***@***.***>, wrote:\n @eaplatanios It might happen work in the other order, but adding the function to graph first is definitely the logical one.\n I believe you only need the function's name. You can definitely get it from the FunctionDef, but if you already have the name, you don't need to retrieve the FunctionDef.\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub, or mute the thread.", "body": "@iganichev how would I pass it using only the function name? Doesn't the SetAttrProto method expect a proto-serialized form of the function? If I only pass the name it wouldn't know it's referring to a function, right? Or does it infer that from the attribute type?\n\nAlso, I noticed that for the eager API, a complete AttrValueMap is created for the function (i.e., passed along with its name).\n\nOn Sep 15, 2017, 10:28 AM -0400, Igor Ganichev <notifications@github.com>, wrote:\n> @eaplatanios It might happen work in the other order, but adding the function to graph first is definitely the logical one.\n> I believe you only need the function's name. You can definitely get it from the FunctionDef, but if you already have the name, you don't need to retrieve the FunctionDef.\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n"}