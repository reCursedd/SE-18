{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/328214247", "html_url": "https://github.com/tensorflow/tensorflow/issues/12118#issuecomment-328214247", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12118", "id": 328214247, "node_id": "MDEyOklzc3VlQ29tbWVudDMyODIxNDI0Nw==", "user": {"login": "eaplatanios", "id": 1294940, "node_id": "MDQ6VXNlcjEyOTQ5NDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1294940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eaplatanios", "html_url": "https://github.com/eaplatanios", "followers_url": "https://api.github.com/users/eaplatanios/followers", "following_url": "https://api.github.com/users/eaplatanios/following{/other_user}", "gists_url": "https://api.github.com/users/eaplatanios/gists{/gist_id}", "starred_url": "https://api.github.com/users/eaplatanios/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eaplatanios/subscriptions", "organizations_url": "https://api.github.com/users/eaplatanios/orgs", "repos_url": "https://api.github.com/users/eaplatanios/repos", "events_url": "https://api.github.com/users/eaplatanios/events{/privacy}", "received_events_url": "https://api.github.com/users/eaplatanios/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-08T21:08:15Z", "updated_at": "2017-09-08T21:08:15Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=9123400\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/iganichev\">@iganichev</a> Thanks a lot Igor! I have already started using your API and it looks great. :) I only have a few questions:</p>\n<ol>\n<li>When converting a graph to a GraphDef using the C API, does it take into account functions that have been added to that graph? If not, I could always add them on my side after creating a GraphDef using the C API.</li>\n<li>If I close a <code>TF_Function</code> object, the function is still usable in graphs that it was previously added in, right?</li>\n<li>It would be nice to have an <code>ImportFunctionDef</code> function.</li>\n<li>It would be nice to have a <code>GraphGetFunctions</code> function that returns all functions defined in a graph.</li>\n</ol>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=88808\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/skye\">@skye</a> It seems like this API can serve as the interface for yet unimplemented gradients in the C++ side. What do you think?</p>", "body_text": "@iganichev Thanks a lot Igor! I have already started using your API and it looks great. :) I only have a few questions:\n\nWhen converting a graph to a GraphDef using the C API, does it take into account functions that have been added to that graph? If not, I could always add them on my side after creating a GraphDef using the C API.\nIf I close a TF_Function object, the function is still usable in graphs that it was previously added in, right?\nIt would be nice to have an ImportFunctionDef function.\nIt would be nice to have a GraphGetFunctions function that returns all functions defined in a graph.\n\n@skye It seems like this API can serve as the interface for yet unimplemented gradients in the C++ side. What do you think?", "body": "@iganichev Thanks a lot Igor! I have already started using your API and it looks great. :) I only have a few questions:\r\n1. When converting a graph to a GraphDef using the C API, does it take into account functions that have been added to that graph? If not, I could always add them on my side after creating a GraphDef using the C API.\r\n2. If I close a `TF_Function` object, the function is still usable in graphs that it was previously added in, right?\r\n3. It would be nice to have an `ImportFunctionDef` function.\r\n4. It would be nice to have a `GraphGetFunctions` function that returns all functions defined in a graph.\r\n\r\n@skye It seems like this API can serve as the interface for yet unimplemented gradients in the C++ side. What do you think?\r\n"}