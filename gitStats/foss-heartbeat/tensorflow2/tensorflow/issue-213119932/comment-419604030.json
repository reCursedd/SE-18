{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/419604030", "html_url": "https://github.com/tensorflow/tensorflow/issues/8246#issuecomment-419604030", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8246", "id": 419604030, "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTYwNDAzMA==", "user": {"login": "jhultman", "id": 27909223, "node_id": "MDQ6VXNlcjI3OTA5MjIz", "avatar_url": "https://avatars3.githubusercontent.com/u/27909223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhultman", "html_url": "https://github.com/jhultman", "followers_url": "https://api.github.com/users/jhultman/followers", "following_url": "https://api.github.com/users/jhultman/following{/other_user}", "gists_url": "https://api.github.com/users/jhultman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhultman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhultman/subscriptions", "organizations_url": "https://api.github.com/users/jhultman/orgs", "repos_url": "https://api.github.com/users/jhultman/repos", "events_url": "https://api.github.com/users/jhultman/events{/privacy}", "received_events_url": "https://api.github.com/users/jhultman/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-08T01:48:13Z", "updated_at": "2018-09-08T01:48:13Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1410927\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/sachinruk\">@sachinruk</a> have you found a good solution for that use case? I would love to hear about it. In the meantime, if your scenario permits tf.py_func you can try my simple solution below.</p>\n<pre><code>import tensorflow as tf\nimport numpy as np\n\ndef tf_repeat(arr, repeats):\n    return tf.py_func(np.repeat, [arr, repeats], tf.float32)\n\narr = np.float32([4, 2, 3, 5])\nrepeats = np.int32([2, 3, 0, 2])\n\nwith tf.Session() as sess:\n    out = sess.run(tf_repeat(arr, repeats))\n    print(out)\n\n&gt;&gt;&gt; [4. 4. 2. 2. 2. 5. 5.]\n</code></pre>", "body_text": "@sachinruk have you found a good solution for that use case? I would love to hear about it. In the meantime, if your scenario permits tf.py_func you can try my simple solution below.\nimport tensorflow as tf\nimport numpy as np\n\ndef tf_repeat(arr, repeats):\n    return tf.py_func(np.repeat, [arr, repeats], tf.float32)\n\narr = np.float32([4, 2, 3, 5])\nrepeats = np.int32([2, 3, 0, 2])\n\nwith tf.Session() as sess:\n    out = sess.run(tf_repeat(arr, repeats))\n    print(out)\n\n>>> [4. 4. 2. 2. 2. 5. 5.]", "body": "@sachinruk have you found a good solution for that use case? I would love to hear about it. In the meantime, if your scenario permits tf.py_func you can try my simple solution below.\r\n\r\n```\r\nimport tensorflow as tf\r\nimport numpy as np\r\n\r\ndef tf_repeat(arr, repeats):\r\n    return tf.py_func(np.repeat, [arr, repeats], tf.float32)\r\n\r\narr = np.float32([4, 2, 3, 5])\r\nrepeats = np.int32([2, 3, 0, 2])\r\n\r\nwith tf.Session() as sess:\r\n    out = sess.run(tf_repeat(arr, repeats))\r\n    print(out)\r\n\r\n>>> [4. 4. 2. 2. 2. 5. 5.]\r\n```"}