{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/93359667", "pull_request_review_id": 13885043, "id": 93359667, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkzMzU5NjY3", "diff_hunk": "@@ -109,14 +109,29 @@ int64 MinLogLevel() {\n   }\n }\n \n+int64 MinLogLevelFromEnv() {\n+  const char* tf_env_var_val = getenv(\"TF_CPP_MIN_LOG_LEVEL\");\n+  return LogLevelStrToInt(tf_env_var_val);\n+}\n+\n+int64 MinVLogLevelFromEnv() {\n+  const char* tf_env_var_val = getenv(\"TF_CPP_MIN_VLOG_LEVEL\");", "path": "tensorflow/core/platform/default/logging.cc", "position": 45, "original_position": 21, "commit_id": "6952e9fcbecf4f620b2e424066db6f3c8f399731", "original_commit_id": "d9b3e3d72281dbe7ea6ef784af7067107b945c8e", "user": {"login": "vrv", "id": 463737, "node_id": "MDQ6VXNlcjQ2MzczNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/463737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vrv", "html_url": "https://github.com/vrv", "followers_url": "https://api.github.com/users/vrv/followers", "following_url": "https://api.github.com/users/vrv/following{/other_user}", "gists_url": "https://api.github.com/users/vrv/gists{/gist_id}", "starred_url": "https://api.github.com/users/vrv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vrv/subscriptions", "organizations_url": "https://api.github.com/users/vrv/orgs", "repos_url": "https://api.github.com/users/vrv/repos", "events_url": "https://api.github.com/users/vrv/events{/privacy}", "received_events_url": "https://api.github.com/users/vrv/received_events", "type": "User", "site_admin": false}, "body": "Oh, we need to add a TODO here that this currently doesn't work for values not in [1,2,3], so VLOG(4) statements will never print.\r\n\r\nIdeally, we'd use safe_strto32 in core/lib/strings/numbers.h, but we don't want to add that dependency into the platform logging library since it would bring in StringPiece and a bunch of other code, so we'd need some simple, sanitizing version of string to integer.  I don't know, maybe std::stoi could be used here safely.\r\n", "created_at": "2016-12-21T01:26:05Z", "updated_at": "2016-12-21T04:34:53Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/6375#discussion_r93359667", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/6375", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/93359667"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/6375#discussion_r93359667"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/6375"}}, "body_html": "<p>Oh, we need to add a TODO here that this currently doesn't work for values not in [1,2,3], so VLOG(4) statements will never print.</p>\n<p>Ideally, we'd use safe_strto32 in core/lib/strings/numbers.h, but we don't want to add that dependency into the platform logging library since it would bring in StringPiece and a bunch of other code, so we'd need some simple, sanitizing version of string to integer.  I don't know, maybe std::stoi could be used here safely.</p>", "body_text": "Oh, we need to add a TODO here that this currently doesn't work for values not in [1,2,3], so VLOG(4) statements will never print.\nIdeally, we'd use safe_strto32 in core/lib/strings/numbers.h, but we don't want to add that dependency into the platform logging library since it would bring in StringPiece and a bunch of other code, so we'd need some simple, sanitizing version of string to integer.  I don't know, maybe std::stoi could be used here safely."}