{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/301900134", "html_url": "https://github.com/tensorflow/tensorflow/issues/9931#issuecomment-301900134", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9931", "id": 301900134, "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTkwMDEzNA==", "user": {"login": "galeone", "id": 8427788, "node_id": "MDQ6VXNlcjg0Mjc3ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/8427788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/galeone", "html_url": "https://github.com/galeone", "followers_url": "https://api.github.com/users/galeone/followers", "following_url": "https://api.github.com/users/galeone/following{/other_user}", "gists_url": "https://api.github.com/users/galeone/gists{/gist_id}", "starred_url": "https://api.github.com/users/galeone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/galeone/subscriptions", "organizations_url": "https://api.github.com/users/galeone/orgs", "repos_url": "https://api.github.com/users/galeone/repos", "events_url": "https://api.github.com/users/galeone/events{/privacy}", "received_events_url": "https://api.github.com/users/galeone/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-16T20:08:11Z", "updated_at": "2017-05-16T20:08:11Z", "author_association": "NONE", "body_html": "<p>I'll be happy to contribute! In the next days, as soon as I have time, I'm going to give a better look.</p>\n<p>However, since every <code>size</code> argument of every function requires an <code>int32</code>, why the <code>.Shape()</code> method returns a <code>[]int64</code>? I mean, it seems not coherent. The documentation talks about int32 almost everywhere and this int64 just makes operations like the creation of a new tensor with a predefined shape (like the noise in my previous example) a problem because of the required casts.<br>\nIsn't just better to use an int32 everywhere and thus avoid the problem? I'm pretty sure that no one will create a tensor with a dimension &gt; 2^32 -1</p>", "body_text": "I'll be happy to contribute! In the next days, as soon as I have time, I'm going to give a better look.\nHowever, since every size argument of every function requires an int32, why the .Shape() method returns a []int64? I mean, it seems not coherent. The documentation talks about int32 almost everywhere and this int64 just makes operations like the creation of a new tensor with a predefined shape (like the noise in my previous example) a problem because of the required casts.\nIsn't just better to use an int32 everywhere and thus avoid the problem? I'm pretty sure that no one will create a tensor with a dimension > 2^32 -1", "body": "I'll be happy to contribute! In the next days, as soon as I have time, I'm going to give a better look.\r\n\r\nHowever, since every `size` argument of every function requires an `int32`, why the `.Shape()` method returns a `[]int64`? I mean, it seems not coherent. The documentation talks about int32 almost everywhere and this int64 just makes operations like the creation of a new tensor with a predefined shape (like the noise in my previous example) a problem because of the required casts.\r\nIsn't just better to use an int32 everywhere and thus avoid the problem? I'm pretty sure that no one will create a tensor with a dimension > 2^32 -1"}