{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/301891326", "html_url": "https://github.com/tensorflow/tensorflow/issues/9931#issuecomment-301891326", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9931", "id": 301891326, "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTg5MTMyNg==", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-16T19:33:41Z", "updated_at": "2017-05-16T19:33:41Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=8427788\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/galeone\">@galeone</a> : I'm probably misusing the phrase \"builder pattern\" :), but yeah, it does want you to check for errors. If you'd like to contribute or suggest some changes to <code>scope.go</code> or other files to help improve documentation, we'd be more than happy to look at them.</p>\n<p>Regarding point 3: It isn't that the kernel isn't registered, it's that the operation requires that the <code>size</code> argument be an int32 Tensor (see <a href=\"https://godoc.org/github.com/tensorflow/tensorflow/tensorflow/go/op#ResizeNearestNeighbor\" rel=\"nofollow\">godoc</a>).</p>\n<p>Between <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/7d785f1e18af9d22d940f18aac6e8c9ffd268b22/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/7d785f1e18af9d22d940f18aac6e8c9ffd268b22\"><tt>7d785f1</tt></a> and a fix I'm about to make on the Go side, you shouldn't see any segfaults in the C API - but you may see a nil-pointer dereference in Go (because <code>Scope.AddOperation</code> will return nil and an error after the fix).</p>\n<p>Hope that helps (the fix should be in sometime tomorrow I think)</p>", "body_text": "@galeone : I'm probably misusing the phrase \"builder pattern\" :), but yeah, it does want you to check for errors. If you'd like to contribute or suggest some changes to scope.go or other files to help improve documentation, we'd be more than happy to look at them.\nRegarding point 3: It isn't that the kernel isn't registered, it's that the operation requires that the size argument be an int32 Tensor (see godoc).\nBetween 7d785f1 and a fix I'm about to make on the Go side, you shouldn't see any segfaults in the C API - but you may see a nil-pointer dereference in Go (because Scope.AddOperation will return nil and an error after the fix).\nHope that helps (the fix should be in sometime tomorrow I think)", "body": "@galeone : I'm probably misusing the phrase \"builder pattern\" :), but yeah, it does want you to check for errors. If you'd like to contribute or suggest some changes to `scope.go` or other files to help improve documentation, we'd be more than happy to look at them.\r\n\r\nRegarding point 3: It isn't that the kernel isn't registered, it's that the operation requires that the `size` argument be an int32 Tensor (see [godoc](https://godoc.org/github.com/tensorflow/tensorflow/tensorflow/go/op#ResizeNearestNeighbor)).\r\n\r\nBetween 7d785f1e18af9d22d940f18aac6e8c9ffd268b22 and a fix I'm about to make on the Go side, you shouldn't see any segfaults in the C API - but you may see a nil-pointer dereference in Go (because `Scope.AddOperation` will return nil and an error after the fix).\r\n\r\nHope that helps (the fix should be in sometime tomorrow I think)"}