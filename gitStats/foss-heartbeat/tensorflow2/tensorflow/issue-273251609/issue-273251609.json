{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14502", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14502/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14502/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14502/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14502", "id": 273251609, "node_id": "MDU6SXNzdWUyNzMyNTE2MDk=", "number": 14502, "title": "Estimator does not not support sparse jobs", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "martinwicke", "id": 577277, "node_id": "MDQ6VXNlcjU3NzI3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/577277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinwicke", "html_url": "https://github.com/martinwicke", "followers_url": "https://api.github.com/users/martinwicke/followers", "following_url": "https://api.github.com/users/martinwicke/following{/other_user}", "gists_url": "https://api.github.com/users/martinwicke/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinwicke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinwicke/subscriptions", "organizations_url": "https://api.github.com/users/martinwicke/orgs", "repos_url": "https://api.github.com/users/martinwicke/repos", "events_url": "https://api.github.com/users/martinwicke/events{/privacy}", "received_events_url": "https://api.github.com/users/martinwicke/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "martinwicke", "id": 577277, "node_id": "MDQ6VXNlcjU3NzI3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/577277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinwicke", "html_url": "https://github.com/martinwicke", "followers_url": "https://api.github.com/users/martinwicke/followers", "following_url": "https://api.github.com/users/martinwicke/following{/other_user}", "gists_url": "https://api.github.com/users/martinwicke/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinwicke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinwicke/subscriptions", "organizations_url": "https://api.github.com/users/martinwicke/orgs", "repos_url": "https://api.github.com/users/martinwicke/repos", "events_url": "https://api.github.com/users/martinwicke/events{/privacy}", "received_events_url": "https://api.github.com/users/martinwicke/received_events", "type": "User", "site_admin": false}, {"login": "xiejw", "id": 1184671, "node_id": "MDQ6VXNlcjExODQ2NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1184671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xiejw", "html_url": "https://github.com/xiejw", "followers_url": "https://api.github.com/users/xiejw/followers", "following_url": "https://api.github.com/users/xiejw/following{/other_user}", "gists_url": "https://api.github.com/users/xiejw/gists{/gist_id}", "starred_url": "https://api.github.com/users/xiejw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xiejw/subscriptions", "organizations_url": "https://api.github.com/users/xiejw/orgs", "repos_url": "https://api.github.com/users/xiejw/repos", "events_url": "https://api.github.com/users/xiejw/events{/privacy}", "received_events_url": "https://api.github.com/users/xiejw/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2017-11-12T18:04:38Z", "updated_at": "2018-01-14T02:55:03Z", "closed_at": "2018-01-14T02:55:03Z", "author_association": "CONTRIBUTOR", "body_html": "<p>You need sparse jobs (<a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/8177edd7700ccbe0c831e680a1acb5275819d762/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/8177edd7700ccbe0c831e680a1acb5275819d762\"><tt>8177edd</tt></a>) if you want async training to proceed without having all workers available.</p>\n<p>This currently doesn't work because estimator <a href=\"https://github.com/tensorflow/tensorflow/blob/9ff1aebc2b3dcb07f15b92c0a58027b0438f502a/tensorflow/python/estimator/run_config.py#L379\">uses json</a> to dump values into <code>TF_CONFIG</code> env var, and json does not allow numeric keys. <code>json.dumps</code> automatically converts numeric keys into strings.</p>\n<p>However, clusterspec for sparse job must have integers like <code>{\"local\": {37: \"localhost:0\"}}</code> and will crash if we have <code>\"37\"</code> instead of <code>37</code>.</p>\n<p>Suggestion 1: Modify sparse job support to allow strings as task indices</p>\n<p>Suggestion 2: use pickle + base16 encoding to transmit these values</p>\n<p>Base16 is shell-friendly, it allows you to copy paste the value into \"export TF_....\" in terminal</p>\n<pre><code> # saving\n cluster_config = {'cluster': cluster_spec, 'task': task_spec}\n pickle_string = pickle.dumps(sparse_cluster_config)\n pickle_string_encoded = base64.b16encode(pickle_string)\n pickle_string_encoded = pickle_string_encoded.decode('ascii')\n export_command = \"export TF_PICKLE_BASE16=%s\"%(pickle_string_encoded,)\n os.system(export_command)\n\n# loading\nconfig_dict = pickle.loads(base64.b16decode(os.environ[\"TF_PICKLE_BASE16\"]))\nconfig.task_type = config_dict[\"task\"][\"type\"]\nconfig.task_id = config_dict[\"task\"][\"index\"]\nconfig.cluster_spec = config_dict[\"cluster\"]\nreturn config\n</code></pre>\n<p>cc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=19293677\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ispirmustafa\">@ispirmustafa</a></p>", "body_text": "You need sparse jobs (8177edd) if you want async training to proceed without having all workers available.\nThis currently doesn't work because estimator uses json to dump values into TF_CONFIG env var, and json does not allow numeric keys. json.dumps automatically converts numeric keys into strings.\nHowever, clusterspec for sparse job must have integers like {\"local\": {37: \"localhost:0\"}} and will crash if we have \"37\" instead of 37.\nSuggestion 1: Modify sparse job support to allow strings as task indices\nSuggestion 2: use pickle + base16 encoding to transmit these values\nBase16 is shell-friendly, it allows you to copy paste the value into \"export TF_....\" in terminal\n # saving\n cluster_config = {'cluster': cluster_spec, 'task': task_spec}\n pickle_string = pickle.dumps(sparse_cluster_config)\n pickle_string_encoded = base64.b16encode(pickle_string)\n pickle_string_encoded = pickle_string_encoded.decode('ascii')\n export_command = \"export TF_PICKLE_BASE16=%s\"%(pickle_string_encoded,)\n os.system(export_command)\n\n# loading\nconfig_dict = pickle.loads(base64.b16decode(os.environ[\"TF_PICKLE_BASE16\"]))\nconfig.task_type = config_dict[\"task\"][\"type\"]\nconfig.task_id = config_dict[\"task\"][\"index\"]\nconfig.cluster_spec = config_dict[\"cluster\"]\nreturn config\n\ncc @ispirmustafa", "body": "You need sparse jobs (https://github.com/tensorflow/tensorflow/commit/8177edd7700ccbe0c831e680a1acb5275819d762) if you want async training to proceed without having all workers available.\r\n\r\nThis currently doesn't work because estimator [uses json](https://github.com/tensorflow/tensorflow/blob/9ff1aebc2b3dcb07f15b92c0a58027b0438f502a/tensorflow/python/estimator/run_config.py#L379) to dump values into `TF_CONFIG` env var, and json does not allow numeric keys. `json.dumps` automatically converts numeric keys into strings.\r\n\r\nHowever, clusterspec for sparse job must have integers like `{\"local\": {37: \"localhost:0\"}}` and will crash if we have `\"37\"` instead of `37`.\r\n\r\nSuggestion 1: Modify sparse job support to allow strings as task indices\r\n\r\nSuggestion 2: use pickle + base16 encoding to transmit these values\r\n\r\nBase16 is shell-friendly, it allows you to copy paste the value into \"export TF_....\" in terminal\r\n\r\n```\r\n # saving\r\n cluster_config = {'cluster': cluster_spec, 'task': task_spec}\r\n pickle_string = pickle.dumps(sparse_cluster_config)\r\n pickle_string_encoded = base64.b16encode(pickle_string)\r\n pickle_string_encoded = pickle_string_encoded.decode('ascii')\r\n export_command = \"export TF_PICKLE_BASE16=%s\"%(pickle_string_encoded,)\r\n os.system(export_command)\r\n\r\n# loading\r\nconfig_dict = pickle.loads(base64.b16decode(os.environ[\"TF_PICKLE_BASE16\"]))\r\nconfig.task_type = config_dict[\"task\"][\"type\"]\r\nconfig.task_id = config_dict[\"task\"][\"index\"]\r\nconfig.cluster_spec = config_dict[\"cluster\"]\r\nreturn config\r\n```\r\n\r\ncc @ispirmustafa "}