{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/361038878", "html_url": "https://github.com/tensorflow/tensorflow/issues/14573#issuecomment-361038878", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14573", "id": 361038878, "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTAzODg3OA==", "user": {"login": "chhwang", "id": 8018170, "node_id": "MDQ6VXNlcjgwMTgxNzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/8018170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chhwang", "html_url": "https://github.com/chhwang", "followers_url": "https://api.github.com/users/chhwang/followers", "following_url": "https://api.github.com/users/chhwang/following{/other_user}", "gists_url": "https://api.github.com/users/chhwang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chhwang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chhwang/subscriptions", "organizations_url": "https://api.github.com/users/chhwang/orgs", "repos_url": "https://api.github.com/users/chhwang/repos", "events_url": "https://api.github.com/users/chhwang/events{/privacy}", "received_events_url": "https://api.github.com/users/chhwang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-28T05:10:53Z", "updated_at": "2018-01-28T05:10:53Z", "author_association": "NONE", "body_html": "<p>I've just tested whether this issue is still valid in the latest master, and I still face the same error message.<br>\nFollowing is my updated Dockerfile that builds the current latest master (<a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/f68404bdd10a4b6ef2a50439efac4614de024636/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/f68404bdd10a4b6ef2a50439efac4614de024636\"><tt>f68404b</tt></a>), and I add <code>--incompatible_load_argument_is_label=false</code> option in the build command to bypass an orthogonal issue <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"283346623\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/15492\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/15492/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/15492\">#15492</a>. Building this Dockerfile successes only if I enable the commented <code>RUN</code> commands that remove the erroneous building targets.</p>\n<div class=\"highlight highlight-source-dockerfile\"><pre><span class=\"pl-k\">FROM</span> nvidia/cuda:8.0-cudnn6-devel-ubuntu16.04\n<span class=\"pl-k\">MAINTAINER</span> Changho Hwang &lt;ch.hwang128@gmail.com&gt;\n\n<span class=\"pl-k\">ENV</span> LD_LIBRARY_PATH=<span class=\"pl-s\">\"/usr/local/lib:/usr/local/cuda/lib64:${LD_LIBRARY_PATH}\"</span> \\\n    PATH=<span class=\"pl-s\">\"/usr/local/cuda/bin:${PATH}\"</span>\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Install preliminaries</span>\n<span class=\"pl-k\">RUN</span> apt-get update &amp;&amp; apt-get install -y --no-install-recommends \\\n        build-essential \\\n        curl \\\n        libfreetype6-dev \\\n        libpng12-dev \\\n        libzmq3-dev \\\n        pkg-config \\\n        python-dev \\\n        python-pip \\\n        python-numpy \\\n        python-wheel \\\n        rsync \\\n        software-properties-common \\\n        unzip \\\n        git \\\n        mlocate \\\n        wget\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Python dependencies - need to install setuptools first</span>\n<span class=\"pl-k\">RUN</span> pip --no-cache-dir install setuptools\n<span class=\"pl-k\">RUN</span> pip --no-cache-dir install \\\n        six \\\n        numpy \\\n        wheel\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Install Bazel</span>\n<span class=\"pl-k\">RUN</span> apt-get install -y openjdk-8-jdk\n<span class=\"pl-k\">RUN</span> echo <span class=\"pl-s\">\"deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8\"</span> | tee /etc/apt/sources.list.d/bazel.list\n<span class=\"pl-k\">RUN</span> curl https://bazel.build/bazel-release.pub.gpg | apt-key add -\n<span class=\"pl-k\">RUN</span> apt-get update &amp;&amp; \\\n    apt-get install -y --no-install-recommends bazel &amp;&amp; \\\n    apt-get upgrade -y bazel\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Environment to install TensorFlow</span>\n<span class=\"pl-k\">ENV</span> PYTHON_BIN_PATH=<span class=\"pl-s\">\"/usr/bin/python\"</span> \\\n    PYTHON_LIB_PATH=<span class=\"pl-s\">\"/usr/local/lib/python2.7/dist-packages\"</span> \\\n    TF_NEED_JEMALLOC=<span class=\"pl-s\">\"1\"</span> \\\n    TF_NEED_GCP=<span class=\"pl-s\">\"0\"</span> \\\n    TF_NEED_HDFS=<span class=\"pl-s\">\"0\"</span> \\\n    TF_ENABLE_XLA=<span class=\"pl-s\">\"0\"</span> \\\n    TF_NEED_VERBS=<span class=\"pl-s\">\"0\"</span> \\\n    TF_NEED_OPENCL=<span class=\"pl-s\">\"0\"</span> \\\n    TF_NEED_CUDA=<span class=\"pl-s\">\"1\"</span> \\\n    TF_CUDA_CLANG=<span class=\"pl-s\">\"0\"</span> \\\n    TF_CUDA_VERSION=<span class=\"pl-s\">\"8.0\"</span> \\\n    CUDA_TOOLKIT_PATH=<span class=\"pl-s\">\"/usr/local/cuda\"</span> \\\n    GCC_HOST_COMPILER_PATH=<span class=\"pl-s\">\"/usr/bin/gcc\"</span> \\\n    TF_CUDNN_VERSION=<span class=\"pl-s\">\"6\"</span> \\\n    CUDNN_INSTALL_PATH=<span class=\"pl-s\">\"/usr/local/cuda\"</span> \\\n    TF_CUDA_COMPUTE_CAPABILITIES=<span class=\"pl-s\">\"6.1\"</span> \\\n    TF_NEED_MPI=<span class=\"pl-s\">\"0\"</span> \\\n    TF_NEED_GDR=<span class=\"pl-s\">\"0\"</span> \\\n    TF_NEED_S3=<span class=\"pl-s\">\"0\"</span>\n\n<span class=\"pl-k\">RUN</span> updatedb\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Download TensorFlow</span>\n<span class=\"pl-k\">RUN</span> git clone https://github.com/tensorflow/tensorflow &amp;&amp; \\\n    cd /tensorflow &amp;&amp; \\\n    git checkout f68404b\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Bug bypassing: issue #14573</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>RUN sed -i '/toco/s/^/#/' tensorflow/tensorflow/tools/pip_package/BUILD</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>RUN sed -i '/toco/s/^/#/' tensorflow/tensorflow/tools/pip_package/build_pip_package.sh</span>\n\n<span class=\"pl-k\">RUN</span> ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Bug bypassing: issue #15492</span>\n<span class=\"pl-k\">RUN</span> cd /tensorflow &amp;&amp; \\\n    ./configure &amp;&amp; \\\n    LD_LIBRARY_PATH=<span class=\"pl-s\">\"/usr/local/cuda/lib64/stubs:${LD_LIBRARY_PATH}\"</span> \\\n    bazel build --config=opt --config=cuda \\\n                --incompatible_load_argument_is_label=false \\\n                //tensorflow/tools/pip_package:build_pip_package &amp;&amp; \\\n    mkdir /pip_pkg &amp;&amp; \\\n    bazel-bin/tensorflow/tools/pip_package/build_pip_package /pip_pkg\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Install TensorFlow and remove temporal files</span>\n<span class=\"pl-k\">RUN</span> pip --no-cache-dir install --upgrade /pip_pkg/tensorflow-*.whl &amp;&amp; \\\n    rm -rf /pip_pkg /root/.cache\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> TensorBoard</span>\n<span class=\"pl-k\">EXPOSE</span> 6006</pre></div>", "body_text": "I've just tested whether this issue is still valid in the latest master, and I still face the same error message.\nFollowing is my updated Dockerfile that builds the current latest master (f68404b), and I add --incompatible_load_argument_is_label=false option in the build command to bypass an orthogonal issue #15492. Building this Dockerfile successes only if I enable the commented RUN commands that remove the erroneous building targets.\nFROM nvidia/cuda:8.0-cudnn6-devel-ubuntu16.04\nMAINTAINER Changho Hwang <ch.hwang128@gmail.com>\n\nENV LD_LIBRARY_PATH=\"/usr/local/lib:/usr/local/cuda/lib64:${LD_LIBRARY_PATH}\" \\\n    PATH=\"/usr/local/cuda/bin:${PATH}\"\n\n# Install preliminaries\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        build-essential \\\n        curl \\\n        libfreetype6-dev \\\n        libpng12-dev \\\n        libzmq3-dev \\\n        pkg-config \\\n        python-dev \\\n        python-pip \\\n        python-numpy \\\n        python-wheel \\\n        rsync \\\n        software-properties-common \\\n        unzip \\\n        git \\\n        mlocate \\\n        wget\n\n# Python dependencies - need to install setuptools first\nRUN pip --no-cache-dir install setuptools\nRUN pip --no-cache-dir install \\\n        six \\\n        numpy \\\n        wheel\n\n# Install Bazel\nRUN apt-get install -y openjdk-8-jdk\nRUN echo \"deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8\" | tee /etc/apt/sources.list.d/bazel.list\nRUN curl https://bazel.build/bazel-release.pub.gpg | apt-key add -\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends bazel && \\\n    apt-get upgrade -y bazel\n\n# Environment to install TensorFlow\nENV PYTHON_BIN_PATH=\"/usr/bin/python\" \\\n    PYTHON_LIB_PATH=\"/usr/local/lib/python2.7/dist-packages\" \\\n    TF_NEED_JEMALLOC=\"1\" \\\n    TF_NEED_GCP=\"0\" \\\n    TF_NEED_HDFS=\"0\" \\\n    TF_ENABLE_XLA=\"0\" \\\n    TF_NEED_VERBS=\"0\" \\\n    TF_NEED_OPENCL=\"0\" \\\n    TF_NEED_CUDA=\"1\" \\\n    TF_CUDA_CLANG=\"0\" \\\n    TF_CUDA_VERSION=\"8.0\" \\\n    CUDA_TOOLKIT_PATH=\"/usr/local/cuda\" \\\n    GCC_HOST_COMPILER_PATH=\"/usr/bin/gcc\" \\\n    TF_CUDNN_VERSION=\"6\" \\\n    CUDNN_INSTALL_PATH=\"/usr/local/cuda\" \\\n    TF_CUDA_COMPUTE_CAPABILITIES=\"6.1\" \\\n    TF_NEED_MPI=\"0\" \\\n    TF_NEED_GDR=\"0\" \\\n    TF_NEED_S3=\"0\"\n\nRUN updatedb\n\n# Download TensorFlow\nRUN git clone https://github.com/tensorflow/tensorflow && \\\n    cd /tensorflow && \\\n    git checkout f68404b\n\n# Bug bypassing: issue #14573\n#RUN sed -i '/toco/s/^/#/' tensorflow/tensorflow/tools/pip_package/BUILD\n#RUN sed -i '/toco/s/^/#/' tensorflow/tensorflow/tools/pip_package/build_pip_package.sh\n\nRUN ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1\n\n# Bug bypassing: issue #15492\nRUN cd /tensorflow && \\\n    ./configure && \\\n    LD_LIBRARY_PATH=\"/usr/local/cuda/lib64/stubs:${LD_LIBRARY_PATH}\" \\\n    bazel build --config=opt --config=cuda \\\n                --incompatible_load_argument_is_label=false \\\n                //tensorflow/tools/pip_package:build_pip_package && \\\n    mkdir /pip_pkg && \\\n    bazel-bin/tensorflow/tools/pip_package/build_pip_package /pip_pkg\n\n# Install TensorFlow and remove temporal files\nRUN pip --no-cache-dir install --upgrade /pip_pkg/tensorflow-*.whl && \\\n    rm -rf /pip_pkg /root/.cache\n\n# TensorBoard\nEXPOSE 6006", "body": "I've just tested whether this issue is still valid in the latest master, and I still face the same error message.\r\nFollowing is my updated Dockerfile that builds the current latest master (tensorflow/tensorflow@f68404bdd10a4b6ef2a50439efac4614de024636), and I add `--incompatible_load_argument_is_label=false` option in the build command to bypass an orthogonal issue #15492. Building this Dockerfile successes only if I enable the commented `RUN` commands that remove the erroneous building targets.\r\n```dockerfile\r\nFROM nvidia/cuda:8.0-cudnn6-devel-ubuntu16.04\r\nMAINTAINER Changho Hwang <ch.hwang128@gmail.com>\r\n\r\nENV LD_LIBRARY_PATH=\"/usr/local/lib:/usr/local/cuda/lib64:${LD_LIBRARY_PATH}\" \\\r\n    PATH=\"/usr/local/cuda/bin:${PATH}\"\r\n\r\n# Install preliminaries\r\nRUN apt-get update && apt-get install -y --no-install-recommends \\\r\n        build-essential \\\r\n        curl \\\r\n        libfreetype6-dev \\\r\n        libpng12-dev \\\r\n        libzmq3-dev \\\r\n        pkg-config \\\r\n        python-dev \\\r\n        python-pip \\\r\n        python-numpy \\\r\n        python-wheel \\\r\n        rsync \\\r\n        software-properties-common \\\r\n        unzip \\\r\n        git \\\r\n        mlocate \\\r\n        wget\r\n\r\n# Python dependencies - need to install setuptools first\r\nRUN pip --no-cache-dir install setuptools\r\nRUN pip --no-cache-dir install \\\r\n        six \\\r\n        numpy \\\r\n        wheel\r\n\r\n# Install Bazel\r\nRUN apt-get install -y openjdk-8-jdk\r\nRUN echo \"deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8\" | tee /etc/apt/sources.list.d/bazel.list\r\nRUN curl https://bazel.build/bazel-release.pub.gpg | apt-key add -\r\nRUN apt-get update && \\\r\n    apt-get install -y --no-install-recommends bazel && \\\r\n    apt-get upgrade -y bazel\r\n\r\n# Environment to install TensorFlow\r\nENV PYTHON_BIN_PATH=\"/usr/bin/python\" \\\r\n    PYTHON_LIB_PATH=\"/usr/local/lib/python2.7/dist-packages\" \\\r\n    TF_NEED_JEMALLOC=\"1\" \\\r\n    TF_NEED_GCP=\"0\" \\\r\n    TF_NEED_HDFS=\"0\" \\\r\n    TF_ENABLE_XLA=\"0\" \\\r\n    TF_NEED_VERBS=\"0\" \\\r\n    TF_NEED_OPENCL=\"0\" \\\r\n    TF_NEED_CUDA=\"1\" \\\r\n    TF_CUDA_CLANG=\"0\" \\\r\n    TF_CUDA_VERSION=\"8.0\" \\\r\n    CUDA_TOOLKIT_PATH=\"/usr/local/cuda\" \\\r\n    GCC_HOST_COMPILER_PATH=\"/usr/bin/gcc\" \\\r\n    TF_CUDNN_VERSION=\"6\" \\\r\n    CUDNN_INSTALL_PATH=\"/usr/local/cuda\" \\\r\n    TF_CUDA_COMPUTE_CAPABILITIES=\"6.1\" \\\r\n    TF_NEED_MPI=\"0\" \\\r\n    TF_NEED_GDR=\"0\" \\\r\n    TF_NEED_S3=\"0\"\r\n\r\nRUN updatedb\r\n\r\n# Download TensorFlow\r\nRUN git clone https://github.com/tensorflow/tensorflow && \\\r\n    cd /tensorflow && \\\r\n    git checkout f68404b\r\n\r\n# Bug bypassing: issue #14573\r\n#RUN sed -i '/toco/s/^/#/' tensorflow/tensorflow/tools/pip_package/BUILD\r\n#RUN sed -i '/toco/s/^/#/' tensorflow/tensorflow/tools/pip_package/build_pip_package.sh\r\n\r\nRUN ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1\r\n\r\n# Bug bypassing: issue #15492\r\nRUN cd /tensorflow && \\\r\n    ./configure && \\\r\n    LD_LIBRARY_PATH=\"/usr/local/cuda/lib64/stubs:${LD_LIBRARY_PATH}\" \\\r\n    bazel build --config=opt --config=cuda \\\r\n                --incompatible_load_argument_is_label=false \\\r\n                //tensorflow/tools/pip_package:build_pip_package && \\\r\n    mkdir /pip_pkg && \\\r\n    bazel-bin/tensorflow/tools/pip_package/build_pip_package /pip_pkg\r\n\r\n# Install TensorFlow and remove temporal files\r\nRUN pip --no-cache-dir install --upgrade /pip_pkg/tensorflow-*.whl && \\\r\n    rm -rf /pip_pkg /root/.cache\r\n\r\n# TensorBoard\r\nEXPOSE 6006\r\n```"}