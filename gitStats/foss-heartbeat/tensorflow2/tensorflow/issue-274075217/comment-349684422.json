{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/349684422", "html_url": "https://github.com/tensorflow/tensorflow/issues/14573#issuecomment-349684422", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14573", "id": 349684422, "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTY4NDQyMg==", "user": {"login": "chhwang", "id": 8018170, "node_id": "MDQ6VXNlcjgwMTgxNzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/8018170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chhwang", "html_url": "https://github.com/chhwang", "followers_url": "https://api.github.com/users/chhwang/followers", "following_url": "https://api.github.com/users/chhwang/following{/other_user}", "gists_url": "https://api.github.com/users/chhwang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chhwang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chhwang/subscriptions", "organizations_url": "https://api.github.com/users/chhwang/orgs", "repos_url": "https://api.github.com/users/chhwang/repos", "events_url": "https://api.github.com/users/chhwang/events{/privacy}", "received_events_url": "https://api.github.com/users/chhwang/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-06T16:01:22Z", "updated_at": "2017-12-08T07:46:53Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=32465472\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/angersson\">@angersson</a> Here is my Dockerfile. My Docker version is 17.09.0-ce.</p>\n<p>If I enable the commented \"RUN\"s, the build success.</p>\n<div class=\"highlight highlight-source-dockerfile\"><pre><span class=\"pl-k\">FROM</span> nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04\n<span class=\"pl-k\">MAINTAINER</span> Changho Hwang &lt;ch.hwang128@gmail.com&gt;\n\n<span class=\"pl-k\">ENV</span> LD_LIBRARY_PATH=<span class=\"pl-s\">\"/usr/local/lib:/usr/local/cuda/lib64:${LD_LIBRARY_PATH}\"</span> \\\n    PATH=<span class=\"pl-s\">\"/usr/local/cuda/bin:${PATH}\"</span>\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Install preliminaries</span>\n<span class=\"pl-k\">RUN</span> apt-get update &amp;&amp; apt-get install -y --no-install-recommends \\\n        build-essential \\\n        curl \\\n        libfreetype6-dev \\\n        libpng12-dev \\\n        libzmq3-dev \\\n        pkg-config \\\n        python3 \\\n        python3-dev \\\n        python3-pip \\\n        python3-numpy \\\n        python3-wheel \\\n        rsync \\\n        software-properties-common \\\n        unzip \\\n        git \\\n        mlocate \\\n        wget\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Python dependencies - need to install setuptools first</span>\n<span class=\"pl-k\">RUN</span> pip3 --no-cache-dir install setuptools\n<span class=\"pl-k\">RUN</span> pip3 --no-cache-dir install \\\n        six \\\n        numpy \\\n        wheel\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Install Bazel</span>\n<span class=\"pl-k\">RUN</span> apt-get install -y openjdk-8-jdk\n<span class=\"pl-k\">RUN</span> echo <span class=\"pl-s\">\"deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8\"</span> | tee /etc/apt/sources.list.d/bazel.list\n<span class=\"pl-k\">RUN</span> curl https://bazel.build/bazel-release.pub.gpg | apt-key add -\n<span class=\"pl-k\">RUN</span> apt-get update &amp;&amp; \\\n    apt-get install -y --no-install-recommends bazel &amp;&amp; \\\n    apt-get upgrade -y bazel\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Environment to install TensorFlow</span>\n<span class=\"pl-k\">ENV</span> PYTHON_BIN_PATH=<span class=\"pl-s\">\"/usr/bin/python3\"</span> \\\n    PYTHON_LIB_PATH=<span class=\"pl-s\">\"/usr/local/lib/python3.5/dist-packages\"</span> \\\n    TF_NEED_JEMALLOC=<span class=\"pl-s\">\"1\"</span> \\\n    TF_NEED_GCP=<span class=\"pl-s\">\"0\"</span> \\\n    TF_NEED_HDFS=<span class=\"pl-s\">\"0\"</span> \\\n    TF_ENABLE_XLA=<span class=\"pl-s\">\"0\"</span> \\\n    TF_NEED_VERBS=<span class=\"pl-s\">\"0\"</span> \\\n    TF_NEED_OPENCL=<span class=\"pl-s\">\"0\"</span> \\\n    TF_NEED_CUDA=<span class=\"pl-s\">\"1\"</span> \\\n    TF_CUDA_CLANG=<span class=\"pl-s\">\"0\"</span> \\\n    TF_CUDA_VERSION=<span class=\"pl-s\">\"9.0\"</span> \\\n    CUDA_TOOLKIT_PATH=<span class=\"pl-s\">\"/usr/local/cuda\"</span> \\\n    GCC_HOST_COMPILER_PATH=<span class=\"pl-s\">\"/usr/bin/gcc\"</span> \\\n    TF_CUDNN_VERSION=<span class=\"pl-s\">\"7\"</span> \\\n    CUDNN_INSTALL_PATH=<span class=\"pl-s\">\"/usr/local/cuda\"</span> \\\n    TF_CUDA_COMPUTE_CAPABILITIES=<span class=\"pl-s\">\"6.1\"</span> \\\n    TF_NEED_MPI=<span class=\"pl-s\">\"0\"</span> \\\n    TF_NEED_GDR=<span class=\"pl-s\">\"0\"</span> \\\n    TF_NEED_S3=<span class=\"pl-s\">\"0\"</span>\n\n<span class=\"pl-k\">RUN</span> updatedb\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Download and install TensorFlow</span>\n<span class=\"pl-k\">RUN</span> ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1\n<span class=\"pl-k\">RUN</span> git clone https://github.com/tensorflow/tensorflow\n<span class=\"pl-k\">RUN</span> cd /tensorflow &amp;&amp; git checkout 31b79e4\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> For bug bypassing: issue #14573</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>RUN sed -i '/toco/s/^/#/' tensorflow/tensorflow/tools/pip_package/BUILD</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>RUN sed -i '/toco/s/^/#/' tensorflow/tensorflow/tools/pip_package/build_pip_package.sh</span>\n\n<span class=\"pl-k\">RUN</span> ln -s /usr/bin/python3 /usr/bin/python\n<span class=\"pl-k\">RUN</span> cd /tensorflow &amp;&amp; \\\n    ./configure &amp;&amp; \\\n    LD_LIBRARY_PATH=<span class=\"pl-s\">\"/usr/local/cuda/lib64/stubs:${LD_LIBRARY_PATH}\"</span> \\\n    bazel build --config=opt --config=cuda \\\n                //tensorflow/tools/pip_package:build_pip_package &amp;&amp; \\\n    mkdir /pip_pkg &amp;&amp; \\\n    bazel-bin/tensorflow/tools/pip_package/build_pip_package /pip_pkg\n\n<span class=\"pl-k\">RUN</span> pip3 --no-cache-dir install --upgrade /pip_pkg/tensorflow-*.whl &amp;&amp; \\\n    rm -rf /pip_pkg /root/.cache /tensorflow\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> TensorBoard</span>\n<span class=\"pl-k\">EXPOSE</span> 6006</pre></div>\n<p>This prints out a long error message starting with:</p>\n<pre><code>ERROR: /tensorflow/tensorflow/contrib/lite/toco/BUILD:311:1: Linking of rule '//tensorflow/contrib/lite/toco:toco' fail\ned (Exit 1)\n/usr/bin/ld: warning: libcuda.so.1, needed by bazel-out/k8-py3-opt/bin/_solib_local/_U_S_Stensorflow_Scontrib_Slite_Sto\nco_Ctoco___Utensorflow/libtensorflow_framework.so, not found (try using -rpath or -rpath-link)\nbazel-out/k8-py3-opt/bin/_solib_local/_U_S_Stensorflow_Scontrib_Slite_Stoco_Ctoco___Utensorflow/libtensorflow_framework\n.so: undefined reference to `cuMemFree_v2'\n</code></pre>\n<p>I also tried to build the current master (<a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/480563e173e0f2fd7e108ada339ea8bc2c37b493/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/480563e173e0f2fd7e108ada339ea8bc2c37b493\"><tt>480563e</tt></a>), but it fails with another error, maybe not related with this issue. The error message is:</p>\n<pre><code>10 errors detected in the compilation of \"/root/.cache/bazel/_bazel_root/68a62076e91007a7908bc42a32e4cff9/execroot/org_tensorflow/tmp37f_7470eca8858f65d2/tmpxft_00005dc5_00000000-6_resampler_ops_gpu.cu.cpp1.ii\".\nERROR: /tensorflow/tensorflow/contrib/resampler/BUILD:51:1: output 'tensorflow/contrib/resampler/_objs/python/ops/_resampler_ops_gpu/tensorflow/contrib/resampler/kernels/resampler_ops_gpu.cu.pic.o' was not created\nERROR: /tensorflow/tensorflow/contrib/resampler/BUILD:51:1: not all outputs were created or valid\nTarget //tensorflow/tools/pip_package:build_pip_package failed to build\n</code></pre>", "body_text": "@angersson Here is my Dockerfile. My Docker version is 17.09.0-ce.\nIf I enable the commented \"RUN\"s, the build success.\nFROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04\nMAINTAINER Changho Hwang <ch.hwang128@gmail.com>\n\nENV LD_LIBRARY_PATH=\"/usr/local/lib:/usr/local/cuda/lib64:${LD_LIBRARY_PATH}\" \\\n    PATH=\"/usr/local/cuda/bin:${PATH}\"\n\n# Install preliminaries\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        build-essential \\\n        curl \\\n        libfreetype6-dev \\\n        libpng12-dev \\\n        libzmq3-dev \\\n        pkg-config \\\n        python3 \\\n        python3-dev \\\n        python3-pip \\\n        python3-numpy \\\n        python3-wheel \\\n        rsync \\\n        software-properties-common \\\n        unzip \\\n        git \\\n        mlocate \\\n        wget\n\n# Python dependencies - need to install setuptools first\nRUN pip3 --no-cache-dir install setuptools\nRUN pip3 --no-cache-dir install \\\n        six \\\n        numpy \\\n        wheel\n\n# Install Bazel\nRUN apt-get install -y openjdk-8-jdk\nRUN echo \"deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8\" | tee /etc/apt/sources.list.d/bazel.list\nRUN curl https://bazel.build/bazel-release.pub.gpg | apt-key add -\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends bazel && \\\n    apt-get upgrade -y bazel\n\n# Environment to install TensorFlow\nENV PYTHON_BIN_PATH=\"/usr/bin/python3\" \\\n    PYTHON_LIB_PATH=\"/usr/local/lib/python3.5/dist-packages\" \\\n    TF_NEED_JEMALLOC=\"1\" \\\n    TF_NEED_GCP=\"0\" \\\n    TF_NEED_HDFS=\"0\" \\\n    TF_ENABLE_XLA=\"0\" \\\n    TF_NEED_VERBS=\"0\" \\\n    TF_NEED_OPENCL=\"0\" \\\n    TF_NEED_CUDA=\"1\" \\\n    TF_CUDA_CLANG=\"0\" \\\n    TF_CUDA_VERSION=\"9.0\" \\\n    CUDA_TOOLKIT_PATH=\"/usr/local/cuda\" \\\n    GCC_HOST_COMPILER_PATH=\"/usr/bin/gcc\" \\\n    TF_CUDNN_VERSION=\"7\" \\\n    CUDNN_INSTALL_PATH=\"/usr/local/cuda\" \\\n    TF_CUDA_COMPUTE_CAPABILITIES=\"6.1\" \\\n    TF_NEED_MPI=\"0\" \\\n    TF_NEED_GDR=\"0\" \\\n    TF_NEED_S3=\"0\"\n\nRUN updatedb\n\n# Download and install TensorFlow\nRUN ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1\nRUN git clone https://github.com/tensorflow/tensorflow\nRUN cd /tensorflow && git checkout 31b79e4\n\n# For bug bypassing: issue #14573\n#RUN sed -i '/toco/s/^/#/' tensorflow/tensorflow/tools/pip_package/BUILD\n#RUN sed -i '/toco/s/^/#/' tensorflow/tensorflow/tools/pip_package/build_pip_package.sh\n\nRUN ln -s /usr/bin/python3 /usr/bin/python\nRUN cd /tensorflow && \\\n    ./configure && \\\n    LD_LIBRARY_PATH=\"/usr/local/cuda/lib64/stubs:${LD_LIBRARY_PATH}\" \\\n    bazel build --config=opt --config=cuda \\\n                //tensorflow/tools/pip_package:build_pip_package && \\\n    mkdir /pip_pkg && \\\n    bazel-bin/tensorflow/tools/pip_package/build_pip_package /pip_pkg\n\nRUN pip3 --no-cache-dir install --upgrade /pip_pkg/tensorflow-*.whl && \\\n    rm -rf /pip_pkg /root/.cache /tensorflow\n\n# TensorBoard\nEXPOSE 6006\nThis prints out a long error message starting with:\nERROR: /tensorflow/tensorflow/contrib/lite/toco/BUILD:311:1: Linking of rule '//tensorflow/contrib/lite/toco:toco' fail\ned (Exit 1)\n/usr/bin/ld: warning: libcuda.so.1, needed by bazel-out/k8-py3-opt/bin/_solib_local/_U_S_Stensorflow_Scontrib_Slite_Sto\nco_Ctoco___Utensorflow/libtensorflow_framework.so, not found (try using -rpath or -rpath-link)\nbazel-out/k8-py3-opt/bin/_solib_local/_U_S_Stensorflow_Scontrib_Slite_Stoco_Ctoco___Utensorflow/libtensorflow_framework\n.so: undefined reference to `cuMemFree_v2'\n\nI also tried to build the current master (480563e), but it fails with another error, maybe not related with this issue. The error message is:\n10 errors detected in the compilation of \"/root/.cache/bazel/_bazel_root/68a62076e91007a7908bc42a32e4cff9/execroot/org_tensorflow/tmp37f_7470eca8858f65d2/tmpxft_00005dc5_00000000-6_resampler_ops_gpu.cu.cpp1.ii\".\nERROR: /tensorflow/tensorflow/contrib/resampler/BUILD:51:1: output 'tensorflow/contrib/resampler/_objs/python/ops/_resampler_ops_gpu/tensorflow/contrib/resampler/kernels/resampler_ops_gpu.cu.pic.o' was not created\nERROR: /tensorflow/tensorflow/contrib/resampler/BUILD:51:1: not all outputs were created or valid\nTarget //tensorflow/tools/pip_package:build_pip_package failed to build", "body": "@angersson Here is my Dockerfile. My Docker version is 17.09.0-ce.\r\n\r\nIf I enable the commented \"RUN\"s, the build success.\r\n\r\n ```dockerfile\r\nFROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04\r\nMAINTAINER Changho Hwang <ch.hwang128@gmail.com>\r\n\r\nENV LD_LIBRARY_PATH=\"/usr/local/lib:/usr/local/cuda/lib64:${LD_LIBRARY_PATH}\" \\\r\n     PATH=\"/usr/local/cuda/bin:${PATH}\"\r\n\r\n# Install preliminaries\r\nRUN apt-get update && apt-get install -y --no-install-recommends \\\r\n         build-essential \\\r\n         curl \\\r\n         libfreetype6-dev \\\r\n         libpng12-dev \\\r\n         libzmq3-dev \\\r\n         pkg-config \\\r\n         python3 \\\r\n         python3-dev \\\r\n         python3-pip \\\r\n         python3-numpy \\\r\n         python3-wheel \\\r\n         rsync \\\r\n         software-properties-common \\\r\n         unzip \\\r\n         git \\\r\n         mlocate \\\r\n         wget\r\n\r\n# Python dependencies - need to install setuptools first\r\nRUN pip3 --no-cache-dir install setuptools\r\nRUN pip3 --no-cache-dir install \\\r\n         six \\\r\n         numpy \\\r\n         wheel\r\n\r\n# Install Bazel\r\nRUN apt-get install -y openjdk-8-jdk\r\nRUN echo \"deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8\" | tee /etc/apt/sources.list.d/bazel.list\r\nRUN curl https://bazel.build/bazel-release.pub.gpg | apt-key add -\r\nRUN apt-get update && \\\r\n     apt-get install -y --no-install-recommends bazel && \\\r\n     apt-get upgrade -y bazel\r\n\r\n# Environment to install TensorFlow\r\nENV PYTHON_BIN_PATH=\"/usr/bin/python3\" \\\r\n     PYTHON_LIB_PATH=\"/usr/local/lib/python3.5/dist-packages\" \\\r\n     TF_NEED_JEMALLOC=\"1\" \\\r\n     TF_NEED_GCP=\"0\" \\\r\n     TF_NEED_HDFS=\"0\" \\\r\n     TF_ENABLE_XLA=\"0\" \\\r\n     TF_NEED_VERBS=\"0\" \\\r\n     TF_NEED_OPENCL=\"0\" \\\r\n     TF_NEED_CUDA=\"1\" \\\r\n     TF_CUDA_CLANG=\"0\" \\\r\n     TF_CUDA_VERSION=\"9.0\" \\\r\n     CUDA_TOOLKIT_PATH=\"/usr/local/cuda\" \\\r\n     GCC_HOST_COMPILER_PATH=\"/usr/bin/gcc\" \\\r\n     TF_CUDNN_VERSION=\"7\" \\\r\n     CUDNN_INSTALL_PATH=\"/usr/local/cuda\" \\\r\n     TF_CUDA_COMPUTE_CAPABILITIES=\"6.1\" \\\r\n     TF_NEED_MPI=\"0\" \\\r\n     TF_NEED_GDR=\"0\" \\\r\n     TF_NEED_S3=\"0\"\r\n\r\nRUN updatedb\r\n\r\n# Download and install TensorFlow\r\nRUN ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1\r\nRUN git clone https://github.com/tensorflow/tensorflow\r\nRUN cd /tensorflow && git checkout 31b79e4\r\n\r\n# For bug bypassing: issue #14573\r\n#RUN sed -i '/toco/s/^/#/' tensorflow/tensorflow/tools/pip_package/BUILD\r\n#RUN sed -i '/toco/s/^/#/' tensorflow/tensorflow/tools/pip_package/build_pip_package.sh\r\n\r\nRUN ln -s /usr/bin/python3 /usr/bin/python\r\nRUN cd /tensorflow && \\\r\n     ./configure && \\\r\n     LD_LIBRARY_PATH=\"/usr/local/cuda/lib64/stubs:${LD_LIBRARY_PATH}\" \\\r\n     bazel build --config=opt --config=cuda \\\r\n                 //tensorflow/tools/pip_package:build_pip_package && \\\r\n     mkdir /pip_pkg && \\\r\n     bazel-bin/tensorflow/tools/pip_package/build_pip_package /pip_pkg\r\n\r\nRUN pip3 --no-cache-dir install --upgrade /pip_pkg/tensorflow-*.whl && \\\r\n     rm -rf /pip_pkg /root/.cache /tensorflow\r\n\r\n# TensorBoard\r\nEXPOSE 6006\r\n```\r\n\r\nThis prints out a long error message starting with:\r\n\r\n```\r\nERROR: /tensorflow/tensorflow/contrib/lite/toco/BUILD:311:1: Linking of rule '//tensorflow/contrib/lite/toco:toco' fail\r\ned (Exit 1)\r\n/usr/bin/ld: warning: libcuda.so.1, needed by bazel-out/k8-py3-opt/bin/_solib_local/_U_S_Stensorflow_Scontrib_Slite_Sto\r\nco_Ctoco___Utensorflow/libtensorflow_framework.so, not found (try using -rpath or -rpath-link)\r\nbazel-out/k8-py3-opt/bin/_solib_local/_U_S_Stensorflow_Scontrib_Slite_Stoco_Ctoco___Utensorflow/libtensorflow_framework\r\n.so: undefined reference to `cuMemFree_v2'\r\n```\r\n\r\nI also tried to build the current master (tensorflow/tensorflow@480563e173e0f2fd7e108ada339ea8bc2c37b493), but it fails with another error, maybe not related with this issue. The error message is:\r\n\r\n```\r\n10 errors detected in the compilation of \"/root/.cache/bazel/_bazel_root/68a62076e91007a7908bc42a32e4cff9/execroot/org_tensorflow/tmp37f_7470eca8858f65d2/tmpxft_00005dc5_00000000-6_resampler_ops_gpu.cu.cpp1.ii\".\r\nERROR: /tensorflow/tensorflow/contrib/resampler/BUILD:51:1: output 'tensorflow/contrib/resampler/_objs/python/ops/_resampler_ops_gpu/tensorflow/contrib/resampler/kernels/resampler_ops_gpu.cu.pic.o' was not created\r\nERROR: /tensorflow/tensorflow/contrib/resampler/BUILD:51:1: not all outputs were created or valid\r\nTarget //tensorflow/tools/pip_package:build_pip_package failed to build\r\n```"}