{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/107986504", "pull_request_review_id": 28996074, "id": 107986504, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNzk4NjUwNA==", "diff_hunk": "@@ -662,6 +663,69 @@ def testShapeEquals(self):\n     self.assertFalse(tensor_util.ShapeEquals(t, [1, 4]))\n     self.assertFalse(tensor_util.ShapeEquals(t, [4]))\n \n+  def testMockArray(self):\n+    class MockArray(object):\n+      def __init__(self, array):\n+        self.array = array\n+\n+      def __array__(self, dtype=None):\n+        return np.asarray(self.array, dtype)\n+\n+    ma = MockArray(np.array([10, 20, 30]))\n+    t = tensor_util.make_tensor_proto(ma)\n+    if sys.byteorder == \"big\":  \n+      self.assertProtoEquals(\"\"\"  \n+        dtype: DT_INT64  \n+        tensor_shape { dim { size: 3 } }  \n+        tensor_content: \"\\000\\000\\000\\000\\000\\000\\000\\\\n\\000\\000\\000\\000\\000\\000\\000\\024\\000\\000\\000\\000\\000\\000\\000\\036\"  \n+        \"\"\", t)  \n+    else:  \n+      self.assertProtoEquals(\"\"\"\n+        dtype: DT_INT64\n+        tensor_shape { dim { size: 3 } }\n+        tensor_content: \"\\\\n\\000\\000\\000\\000\\000\\000\\000\\024\\000\\000\\000\\000\\000\\000\\000\\036\\000\\000\\000\\000\\000\\000\\000\"\n+        \"\"\", t)\n+    a = tensor_util.MakeNdarray(t)\n+    self.assertEquals(np.int64, a.dtype)\n+    self.assertAllClose(np.array([10, 20, 30], dtype=np.int64), a)\n+\n+  def testSeries(self):\n+    df = pd.Series([10, 20, 30])\n+    t = tensor_util.make_tensor_proto(df)\n+    if sys.byteorder == \"big\":  \n+      self.assertProtoEquals(\"\"\"  \n+        dtype: DT_INT64  \n+        tensor_shape { dim { size: 3 } }  \n+        tensor_content: \"\\000\\000\\000\\000\\000\\000\\000\\\\n\\000\\000\\000\\000\\000\\000\\000\\024\\000\\000\\000\\000\\000\\000\\000\\036\"  \n+        \"\"\", t)  \n+    else:  \n+      self.assertProtoEquals(\"\"\"\n+        dtype: DT_INT64\n+        tensor_shape { dim { size: 3 } }\n+        tensor_content: \"\\\\n\\000\\000\\000\\000\\000\\000\\000\\024\\000\\000\\000\\000\\000\\000\\000\\036\\000\\000\\000\\000\\000\\000\\000\"\n+        \"\"\", t)\n+    a = tensor_util.MakeNdarray(t)\n+    self.assertEquals(np.int64, a.dtype)\n+    self.assertAllClose(np.array([10, 20, 30], dtype=np.int64), a)\n+\n+  def testDataFrame(self):\n+    df = pd.DataFrame({'A': [10], 'B': [20], 'C': [30]})", "path": "tensorflow/python/framework/tensor_util_test.py", "position": null, "original_position": 58, "commit_id": "dbca4f78380d56c0b144daa058decaea2bbf55ff", "original_commit_id": "189744b722b83f1ae5d2086c96d25525cf1cbd89", "user": {"login": "alextp", "id": 5061, "node_id": "MDQ6VXNlcjUwNjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alextp", "html_url": "https://github.com/alextp", "followers_url": "https://api.github.com/users/alextp/followers", "following_url": "https://api.github.com/users/alextp/following{/other_user}", "gists_url": "https://api.github.com/users/alextp/gists{/gist_id}", "starred_url": "https://api.github.com/users/alextp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alextp/subscriptions", "organizations_url": "https://api.github.com/users/alextp/orgs", "repos_url": "https://api.github.com/users/alextp/repos", "events_url": "https://api.github.com/users/alextp/events{/privacy}", "received_events_url": "https://api.github.com/users/alextp/received_events", "type": "User", "site_admin": false}, "body": "Let's test only a generic object with the __array__ method and comment that this supports pandas.", "created_at": "2017-03-24T19:51:22Z", "updated_at": "2017-03-25T21:31:22Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/8638#discussion_r107986504", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/8638", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/107986504"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/8638#discussion_r107986504"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/8638"}}, "body_html": "<p>Let's test only a generic object with the <strong>array</strong> method and comment that this supports pandas.</p>", "body_text": "Let's test only a generic object with the array method and comment that this supports pandas."}