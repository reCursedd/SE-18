{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/86476813", "pull_request_review_id": 7135163, "id": 86476813, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2NDc2ODEz", "diff_hunk": "@@ -677,14 +677,58 @@ bool Tensor::CanUseDMA() const {\n #undef CASE\n \n namespace {\n+// Print from left dim to right dim recursively.\n template <typename T>\n-string SummarizeArray(int64 limit, int64 num_elts, const char* data) {\n+void PrintOneDim(int dim_index, gtl::InlinedVector<int64, 4> shape, int64 limit, \n+                 int shape_size, T* data, int64* data_index, string* result) {\n+  if (*data_index >= limit) return;  \n+  int64 element_count = shape[dim_index];\n+  // We have reached the right-most dimension of the tensor.\n+  if (dim_index == shape_size - 1) {\n+    for (int64 i = 0; i < element_count; i++) {\n+      if (*data_index >= limit) return;\n+      if (i > 0) strings::StrAppend(result, \" \");\n+      strings::StrAppend(result, data[(*data_index)++]);\n+    }\n+    return;\n+  }  \n+  // Loop every element of one dim.\n+  for (int64 i = 0; i < element_count; i++) {\n+    bool flag = false;\n+    if (*data_index < limit) {\n+      strings::StrAppend(result, \"[\");\n+      flag = true;\n+    }\n+    // As for each element, print the sub-dim.\n+    PrintOneDim(dim_index + 1, shape, limit, shape_size,\n+                data, data_index, result);\n+    if (*data_index < limit || flag) {\n+      strings::StrAppend(result, \"]\");\n+      flag = false;\n+    }\n+  }\n+}\n+\n+template <typename T>\n+string SummarizeArray(int64 limit, int64 num_elts, const TensorShape& tensor_shape, \n+                      const char* data) {\n   string ret;\n   const T* array = reinterpret_cast<const T*>(data);\n-  for (int64 i = 0; i < limit; ++i) {\n-    if (i > 0) strings::StrAppend(&ret, \" \");\n-    strings::StrAppend(&ret, array[i]);\n+\n+  int64 data_index = 0;", "path": "tensorflow/core/framework/tensor.cc", "position": null, "original_position": 46, "commit_id": "383e9a44dbdf2f455470a61c35432f10ae24c9db", "original_commit_id": "61bfac2c7c75c734ef2ba3f9058ca33da05fd1a8", "user": {"login": "drpngx", "id": 20959853, "node_id": "MDQ6VXNlcjIwOTU5ODUz", "avatar_url": "https://avatars1.githubusercontent.com/u/20959853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drpngx", "html_url": "https://github.com/drpngx", "followers_url": "https://api.github.com/users/drpngx/followers", "following_url": "https://api.github.com/users/drpngx/following{/other_user}", "gists_url": "https://api.github.com/users/drpngx/gists{/gist_id}", "starred_url": "https://api.github.com/users/drpngx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drpngx/subscriptions", "organizations_url": "https://api.github.com/users/drpngx/orgs", "repos_url": "https://api.github.com/users/drpngx/repos", "events_url": "https://api.github.com/users/drpngx/events{/privacy}", "received_events_url": "https://api.github.com/users/drpngx/received_events", "type": "User", "site_admin": false}, "body": "Move this after if (shape.empty()) {...}\n\nThanks!\n", "created_at": "2016-11-04T01:43:53Z", "updated_at": "2016-11-04T02:16:01Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/5026#discussion_r86476813", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/5026", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/86476813"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/5026#discussion_r86476813"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/5026"}}, "body_html": "<p>Move this after if (shape.empty()) {...}</p>\n<p>Thanks!</p>", "body_text": "Move this after if (shape.empty()) {...}\nThanks!"}