{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7372", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7372/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7372/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7372/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/7372", "id": 206372650, "node_id": "MDU6SXNzdWUyMDYzNzI2NTA=", "number": 7372, "title": "`Estimator.evaluate` froze", "user": {"login": "bxshi", "id": 1314883, "node_id": "MDQ6VXNlcjEzMTQ4ODM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1314883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bxshi", "html_url": "https://github.com/bxshi", "followers_url": "https://api.github.com/users/bxshi/followers", "following_url": "https://api.github.com/users/bxshi/following{/other_user}", "gists_url": "https://api.github.com/users/bxshi/gists{/gist_id}", "starred_url": "https://api.github.com/users/bxshi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bxshi/subscriptions", "organizations_url": "https://api.github.com/users/bxshi/orgs", "repos_url": "https://api.github.com/users/bxshi/repos", "events_url": "https://api.github.com/users/bxshi/events{/privacy}", "received_events_url": "https://api.github.com/users/bxshi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-09T00:53:09Z", "updated_at": "2018-01-07T23:54:08Z", "closed_at": "2017-02-09T01:09:54Z", "author_association": "NONE", "body_html": "<h3>Environment info</h3>\n<p>Operating System:</p>\n<p><code>Linux 3.13.0-107-generic #154-Ubuntu SMP Tue Dec 20 09:57:27 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux</code></p>\n<p>Installed version of CUDA and cuDNN:</p>\n<p><code>None</code></p>\n<p>If installed from source, provide</p>\n<ol>\n<li>The commit hash (<code>git rev-parse HEAD</code>)</li>\n</ol>\n<p><code>a7338d74be3b07968dd2c2a94167db7b9ae1a9f8</code></p>\n<ol start=\"2\">\n<li>The output of <code>bazel version</code></li>\n</ol>\n<h3>If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)</h3>\n<p>I implement a customized function for an Estimator class and run fit and evaluate with the Estimator model. The training works fine but it will stops at <code>evaluate</code> with around 220% CPU usage.</p>\n<p>The following is a script to reproduce the similar problem. If you comment the <code>evaluate</code> function, this example script works fine, otherwise it will freeze at that part.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">from</span> tensorflow.contrib.layers.python.layers.optimizers <span class=\"pl-k\">import</span> optimize_loss\n<span class=\"pl-k\">from</span> tensorflow.contrib.learn.python.learn.estimators <span class=\"pl-k\">import</span> model_fn\n<span class=\"pl-k\">from</span> tensorflow.contrib.learn.python.learn.estimators.estimator <span class=\"pl-k\">import</span> Estimator\n<span class=\"pl-k\">from</span> tensorflow.python <span class=\"pl-k\">import</span> debug <span class=\"pl-k\">as</span> tf_debug\n<span class=\"pl-k\">from</span> tensorflow.python.framework <span class=\"pl-k\">import</span> ops\n\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">main</span>(<span class=\"pl-smi\">_</span>):\n    hooks <span class=\"pl-k\">=</span> [tf_debug.LocalCLIDebugHook()]\n\n    <span class=\"pl-k\">def</span> <span class=\"pl-en\">func</span>(<span class=\"pl-smi\">features</span>, <span class=\"pl-smi\">targets</span>, <span class=\"pl-smi\">mode</span>, <span class=\"pl-smi\">params</span>):\n        idx <span class=\"pl-k\">=</span> tf.concat([features[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>a<span class=\"pl-pds\">'</span></span>], features[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>b<span class=\"pl-pds\">'</span></span>]], <span class=\"pl-v\">axis</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>)\n\n        embedding <span class=\"pl-k\">=</span> tf.get_variable(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>embed<span class=\"pl-pds\">\"</span></span>, [<span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">20</span>], <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.float32)\n\n        pred <span class=\"pl-k\">=</span> tf.reduce_sum(tf.nn.embedding_lookup(embedding, idx))\n\n        train_op <span class=\"pl-k\">=</span> optimize_loss(<span class=\"pl-v\">loss</span><span class=\"pl-k\">=</span>pred,\n                                 <span class=\"pl-v\">global_step</span><span class=\"pl-k\">=</span>tf.train.get_global_step(),\n                                 <span class=\"pl-v\">learning_rate</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0.001</span>,\n                                 <span class=\"pl-v\">optimizer</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>Adam<span class=\"pl-pds\">'</span></span>,\n                                 <span class=\"pl-v\">variables</span><span class=\"pl-k\">=</span>tf.trainable_variables(),\n                                 <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>training_loss_optimizer<span class=\"pl-pds\">\"</span></span>)\n\n        eval_metric_dict <span class=\"pl-k\">=</span> <span class=\"pl-c1\">dict</span>()\n        eval_metric_dict[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>metric<span class=\"pl-pds\">'</span></span>] <span class=\"pl-k\">=</span> pred\n\n        <span class=\"pl-k\">return</span> model_fn.ModelFnOps(<span class=\"pl-v\">mode</span><span class=\"pl-k\">=</span>mode,\n                                   <span class=\"pl-v\">predictions</span><span class=\"pl-k\">=</span>pred,\n                                   <span class=\"pl-v\">loss</span><span class=\"pl-k\">=</span>pred,\n                                   <span class=\"pl-v\">train_op</span><span class=\"pl-k\">=</span>train_op,\n                                   <span class=\"pl-v\">eval_metric_ops</span><span class=\"pl-k\">=</span>eval_metric_dict)\n\n    model <span class=\"pl-k\">=</span> Estimator(func, <span class=\"pl-v\">params</span><span class=\"pl-k\">=</span>{})\n\n    model.fit(\n        <span class=\"pl-v\">input_fn</span><span class=\"pl-k\">=</span><span class=\"pl-k\">lambda</span>: (\n            {<span class=\"pl-s\"><span class=\"pl-pds\">'</span>a<span class=\"pl-pds\">'</span></span>: ops.convert_to_tensor([[<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">5</span>]]), <span class=\"pl-s\"><span class=\"pl-pds\">'</span>b<span class=\"pl-pds\">'</span></span>: ops.convert_to_tensor([[<span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">5</span>]])},\n            <span class=\"pl-c1\">None</span>), <span class=\"pl-v\">max_steps</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">10</span>, <span class=\"pl-v\">monitors</span><span class=\"pl-k\">=</span>hooks)\n    model.evaluate(\n         <span class=\"pl-v\">input_fn</span><span class=\"pl-k\">=</span><span class=\"pl-k\">lambda</span>: (\n             {<span class=\"pl-s\"><span class=\"pl-pds\">'</span>a<span class=\"pl-pds\">'</span></span>: ops.convert_to_tensor([[<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">5</span>]]), <span class=\"pl-s\"><span class=\"pl-pds\">'</span>b<span class=\"pl-pds\">'</span></span>: ops.convert_to_tensor([[<span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">5</span>]])},\n             <span class=\"pl-c1\">None</span>))\n\n\n<span class=\"pl-k\">if</span> <span class=\"pl-c1\">__name__</span> <span class=\"pl-k\">==</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>__main__<span class=\"pl-pds\">\"</span></span>:\n    tf.app.run()\n</pre></div>\n<h3>Logs or other output that would be helpful</h3>\n<p>If I press <code>ctrl + c</code>, the stack info are:</p>\n<pre><code>WARNING:tensorflow:Using temporary folder as model directory: /tmp/tmp5jemyudd\n\n\n1q^CTraceback (most recent call last):\n  File \"estimator_test.py\", line 48, in &lt;module&gt;\n    tf.app.run()\n  File \"/data/bshi/py3env/lib/python3.4/site-packages/tensorflow/python/platform/app.py\", line 44, in run\n    _sys.exit(main(_sys.argv[:1] + flags_passthrough))\n  File \"estimator_test.py\", line 42, in main\n    input_fn=lambda: (\n  File \"/data/bshi/py3env/lib/python3.4/site-packages/tensorflow/python/util/deprecation.py\", line 281, in new_func\n    return func(*args, **kwargs)\n  File \"/data/bshi/py3env/lib/python3.4/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 507, in evaluate\n    log_progress=log_progress)\n  File \"/data/bshi/py3env/lib/python3.4/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 825, in _evaluate_model\n    config=config_pb2.ConfigProto(allow_soft_placement=True))\n  File \"/data/bshi/py3env/lib/python3.4/site-packages/tensorflow/contrib/training/python/training/evaluation.py\", line 442, in evaluate_once\n    session.run(eval_ops, feed_dict)\n  File \"/data/bshi/py3env/lib/python3.4/site-packages/tensorflow/python/training/monitored_session.py\", line 469, in run\n    run_metadata=run_metadata)\n  File \"/data/bshi/py3env/lib/python3.4/site-packages/tensorflow/python/training/monitored_session.py\", line 793, in run\n    run_metadata=run_metadata)\n  File \"/data/bshi/py3env/lib/python3.4/site-packages/tensorflow/python/training/monitored_session.py\", line 751, in run\n    return self._sess.run(*args, **kwargs)\n  File \"/data/bshi/py3env/lib/python3.4/site-packages/tensorflow/python/training/monitored_session.py\", line 898, in run\n    run_metadata=run_metadata)\n  File \"/data/bshi/py3env/lib/python3.4/site-packages/tensorflow/python/training/monitored_session.py\", line 751, in run\n    return self._sess.run(*args, **kwargs)\n  File \"/data/bshi/py3env/lib/python3.4/site-packages/tensorflow/python/client/session.py\", line 767, in run\n    run_metadata_ptr)\n  File \"/data/bshi/py3env/lib/python3.4/site-packages/tensorflow/python/client/session.py\", line 965, in _run\n    feed_dict_string, options, run_metadata)\n  File \"/data/bshi/py3env/lib/python3.4/site-packages/tensorflow/python/client/session.py\", line 1015, in _do_run\n    target_list, options, run_metadata)\n  File \"/data/bshi/py3env/lib/python3.4/site-packages/tensorflow/python/client/session.py\", line 1022, in _do_call\n    return fn(*args)\n  File \"/data/bshi/py3env/lib/python3.4/site-packages/tensorflow/python/client/session.py\", line 1004, in _run_fn\n    status, run_metadata)\nKeyboardInterrupt\n^C\u23ce\n</code></pre>", "body_text": "Environment info\nOperating System:\nLinux 3.13.0-107-generic #154-Ubuntu SMP Tue Dec 20 09:57:27 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux\nInstalled version of CUDA and cuDNN:\nNone\nIf installed from source, provide\n\nThe commit hash (git rev-parse HEAD)\n\na7338d74be3b07968dd2c2a94167db7b9ae1a9f8\n\nThe output of bazel version\n\nIf possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\nI implement a customized function for an Estimator class and run fit and evaluate with the Estimator model. The training works fine but it will stops at evaluate with around 220% CPU usage.\nThe following is a script to reproduce the similar problem. If you comment the evaluate function, this example script works fine, otherwise it will freeze at that part.\nimport tensorflow as tf\nfrom tensorflow.contrib.layers.python.layers.optimizers import optimize_loss\nfrom tensorflow.contrib.learn.python.learn.estimators import model_fn\nfrom tensorflow.contrib.learn.python.learn.estimators.estimator import Estimator\nfrom tensorflow.python import debug as tf_debug\nfrom tensorflow.python.framework import ops\n\n\ndef main(_):\n    hooks = [tf_debug.LocalCLIDebugHook()]\n\n    def func(features, targets, mode, params):\n        idx = tf.concat([features['a'], features['b']], axis=1)\n\n        embedding = tf.get_variable(\"embed\", [10, 20], dtype=tf.float32)\n\n        pred = tf.reduce_sum(tf.nn.embedding_lookup(embedding, idx))\n\n        train_op = optimize_loss(loss=pred,\n                                 global_step=tf.train.get_global_step(),\n                                 learning_rate=0.001,\n                                 optimizer='Adam',\n                                 variables=tf.trainable_variables(),\n                                 name=\"training_loss_optimizer\")\n\n        eval_metric_dict = dict()\n        eval_metric_dict['metric'] = pred\n\n        return model_fn.ModelFnOps(mode=mode,\n                                   predictions=pred,\n                                   loss=pred,\n                                   train_op=train_op,\n                                   eval_metric_ops=eval_metric_dict)\n\n    model = Estimator(func, params={})\n\n    model.fit(\n        input_fn=lambda: (\n            {'a': ops.convert_to_tensor([[1, 2, 3, 4, 5]]), 'b': ops.convert_to_tensor([[2, 3, 4, 3, 5]])},\n            None), max_steps=10, monitors=hooks)\n    model.evaluate(\n         input_fn=lambda: (\n             {'a': ops.convert_to_tensor([[1, 2, 3, 4, 5]]), 'b': ops.convert_to_tensor([[2, 3, 4, 3, 5]])},\n             None))\n\n\nif __name__ == \"__main__\":\n    tf.app.run()\n\nLogs or other output that would be helpful\nIf I press ctrl + c, the stack info are:\nWARNING:tensorflow:Using temporary folder as model directory: /tmp/tmp5jemyudd\n\n\n1q^CTraceback (most recent call last):\n  File \"estimator_test.py\", line 48, in <module>\n    tf.app.run()\n  File \"/data/bshi/py3env/lib/python3.4/site-packages/tensorflow/python/platform/app.py\", line 44, in run\n    _sys.exit(main(_sys.argv[:1] + flags_passthrough))\n  File \"estimator_test.py\", line 42, in main\n    input_fn=lambda: (\n  File \"/data/bshi/py3env/lib/python3.4/site-packages/tensorflow/python/util/deprecation.py\", line 281, in new_func\n    return func(*args, **kwargs)\n  File \"/data/bshi/py3env/lib/python3.4/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 507, in evaluate\n    log_progress=log_progress)\n  File \"/data/bshi/py3env/lib/python3.4/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 825, in _evaluate_model\n    config=config_pb2.ConfigProto(allow_soft_placement=True))\n  File \"/data/bshi/py3env/lib/python3.4/site-packages/tensorflow/contrib/training/python/training/evaluation.py\", line 442, in evaluate_once\n    session.run(eval_ops, feed_dict)\n  File \"/data/bshi/py3env/lib/python3.4/site-packages/tensorflow/python/training/monitored_session.py\", line 469, in run\n    run_metadata=run_metadata)\n  File \"/data/bshi/py3env/lib/python3.4/site-packages/tensorflow/python/training/monitored_session.py\", line 793, in run\n    run_metadata=run_metadata)\n  File \"/data/bshi/py3env/lib/python3.4/site-packages/tensorflow/python/training/monitored_session.py\", line 751, in run\n    return self._sess.run(*args, **kwargs)\n  File \"/data/bshi/py3env/lib/python3.4/site-packages/tensorflow/python/training/monitored_session.py\", line 898, in run\n    run_metadata=run_metadata)\n  File \"/data/bshi/py3env/lib/python3.4/site-packages/tensorflow/python/training/monitored_session.py\", line 751, in run\n    return self._sess.run(*args, **kwargs)\n  File \"/data/bshi/py3env/lib/python3.4/site-packages/tensorflow/python/client/session.py\", line 767, in run\n    run_metadata_ptr)\n  File \"/data/bshi/py3env/lib/python3.4/site-packages/tensorflow/python/client/session.py\", line 965, in _run\n    feed_dict_string, options, run_metadata)\n  File \"/data/bshi/py3env/lib/python3.4/site-packages/tensorflow/python/client/session.py\", line 1015, in _do_run\n    target_list, options, run_metadata)\n  File \"/data/bshi/py3env/lib/python3.4/site-packages/tensorflow/python/client/session.py\", line 1022, in _do_call\n    return fn(*args)\n  File \"/data/bshi/py3env/lib/python3.4/site-packages/tensorflow/python/client/session.py\", line 1004, in _run_fn\n    status, run_metadata)\nKeyboardInterrupt\n^C\u23ce", "body": "### Environment info\r\nOperating System:\r\n\r\n`Linux 3.13.0-107-generic #154-Ubuntu SMP Tue Dec 20 09:57:27 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux`\r\n\r\nInstalled version of CUDA and cuDNN: \r\n\r\n`None`\r\n\r\nIf installed from source, provide \r\n\r\n1. The commit hash (`git rev-parse HEAD`)\r\n\r\n`a7338d74be3b07968dd2c2a94167db7b9ae1a9f8`\r\n\r\n2. The output of `bazel version`\r\n\r\n### If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\r\n\r\nI implement a customized function for an Estimator class and run fit and evaluate with the Estimator model. The training works fine but it will stops at `evaluate` with around 220% CPU usage.\r\n\r\nThe following is a script to reproduce the similar problem. If you comment the `evaluate` function, this example script works fine, otherwise it will freeze at that part. \r\n\r\n```python\r\nimport tensorflow as tf\r\nfrom tensorflow.contrib.layers.python.layers.optimizers import optimize_loss\r\nfrom tensorflow.contrib.learn.python.learn.estimators import model_fn\r\nfrom tensorflow.contrib.learn.python.learn.estimators.estimator import Estimator\r\nfrom tensorflow.python import debug as tf_debug\r\nfrom tensorflow.python.framework import ops\r\n\r\n\r\ndef main(_):\r\n    hooks = [tf_debug.LocalCLIDebugHook()]\r\n\r\n    def func(features, targets, mode, params):\r\n        idx = tf.concat([features['a'], features['b']], axis=1)\r\n\r\n        embedding = tf.get_variable(\"embed\", [10, 20], dtype=tf.float32)\r\n\r\n        pred = tf.reduce_sum(tf.nn.embedding_lookup(embedding, idx))\r\n\r\n        train_op = optimize_loss(loss=pred,\r\n                                 global_step=tf.train.get_global_step(),\r\n                                 learning_rate=0.001,\r\n                                 optimizer='Adam',\r\n                                 variables=tf.trainable_variables(),\r\n                                 name=\"training_loss_optimizer\")\r\n\r\n        eval_metric_dict = dict()\r\n        eval_metric_dict['metric'] = pred\r\n\r\n        return model_fn.ModelFnOps(mode=mode,\r\n                                   predictions=pred,\r\n                                   loss=pred,\r\n                                   train_op=train_op,\r\n                                   eval_metric_ops=eval_metric_dict)\r\n\r\n    model = Estimator(func, params={})\r\n\r\n    model.fit(\r\n        input_fn=lambda: (\r\n            {'a': ops.convert_to_tensor([[1, 2, 3, 4, 5]]), 'b': ops.convert_to_tensor([[2, 3, 4, 3, 5]])},\r\n            None), max_steps=10, monitors=hooks)\r\n    model.evaluate(\r\n         input_fn=lambda: (\r\n             {'a': ops.convert_to_tensor([[1, 2, 3, 4, 5]]), 'b': ops.convert_to_tensor([[2, 3, 4, 3, 5]])},\r\n             None))\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    tf.app.run()\r\n\r\n```\r\n\r\n### Logs or other output that would be helpful\r\n\r\nIf I press `ctrl + c`, the stack info are:\r\n\r\n```\r\nWARNING:tensorflow:Using temporary folder as model directory: /tmp/tmp5jemyudd\r\n\r\n\r\n1q^CTraceback (most recent call last):\r\n  File \"estimator_test.py\", line 48, in <module>\r\n    tf.app.run()\r\n  File \"/data/bshi/py3env/lib/python3.4/site-packages/tensorflow/python/platform/app.py\", line 44, in run\r\n    _sys.exit(main(_sys.argv[:1] + flags_passthrough))\r\n  File \"estimator_test.py\", line 42, in main\r\n    input_fn=lambda: (\r\n  File \"/data/bshi/py3env/lib/python3.4/site-packages/tensorflow/python/util/deprecation.py\", line 281, in new_func\r\n    return func(*args, **kwargs)\r\n  File \"/data/bshi/py3env/lib/python3.4/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 507, in evaluate\r\n    log_progress=log_progress)\r\n  File \"/data/bshi/py3env/lib/python3.4/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 825, in _evaluate_model\r\n    config=config_pb2.ConfigProto(allow_soft_placement=True))\r\n  File \"/data/bshi/py3env/lib/python3.4/site-packages/tensorflow/contrib/training/python/training/evaluation.py\", line 442, in evaluate_once\r\n    session.run(eval_ops, feed_dict)\r\n  File \"/data/bshi/py3env/lib/python3.4/site-packages/tensorflow/python/training/monitored_session.py\", line 469, in run\r\n    run_metadata=run_metadata)\r\n  File \"/data/bshi/py3env/lib/python3.4/site-packages/tensorflow/python/training/monitored_session.py\", line 793, in run\r\n    run_metadata=run_metadata)\r\n  File \"/data/bshi/py3env/lib/python3.4/site-packages/tensorflow/python/training/monitored_session.py\", line 751, in run\r\n    return self._sess.run(*args, **kwargs)\r\n  File \"/data/bshi/py3env/lib/python3.4/site-packages/tensorflow/python/training/monitored_session.py\", line 898, in run\r\n    run_metadata=run_metadata)\r\n  File \"/data/bshi/py3env/lib/python3.4/site-packages/tensorflow/python/training/monitored_session.py\", line 751, in run\r\n    return self._sess.run(*args, **kwargs)\r\n  File \"/data/bshi/py3env/lib/python3.4/site-packages/tensorflow/python/client/session.py\", line 767, in run\r\n    run_metadata_ptr)\r\n  File \"/data/bshi/py3env/lib/python3.4/site-packages/tensorflow/python/client/session.py\", line 965, in _run\r\n    feed_dict_string, options, run_metadata)\r\n  File \"/data/bshi/py3env/lib/python3.4/site-packages/tensorflow/python/client/session.py\", line 1015, in _do_run\r\n    target_list, options, run_metadata)\r\n  File \"/data/bshi/py3env/lib/python3.4/site-packages/tensorflow/python/client/session.py\", line 1022, in _do_call\r\n    return fn(*args)\r\n  File \"/data/bshi/py3env/lib/python3.4/site-packages/tensorflow/python/client/session.py\", line 1004, in _run_fn\r\n    status, run_metadata)\r\nKeyboardInterrupt\r\n^C\u23ce\r\n```\r\n"}