{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17625", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17625/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17625/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17625/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17625", "id": 304139941, "node_id": "MDU6SXNzdWUzMDQxMzk5NDE=", "number": 17625, "title": "tf.layers.batch_normalization shape bug", "user": {"login": "ppwwyyxx", "id": 1381301, "node_id": "MDQ6VXNlcjEzODEzMDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1381301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ppwwyyxx", "html_url": "https://github.com/ppwwyyxx", "followers_url": "https://api.github.com/users/ppwwyyxx/followers", "following_url": "https://api.github.com/users/ppwwyyxx/following{/other_user}", "gists_url": "https://api.github.com/users/ppwwyyxx/gists{/gist_id}", "starred_url": "https://api.github.com/users/ppwwyyxx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ppwwyyxx/subscriptions", "organizations_url": "https://api.github.com/users/ppwwyyxx/orgs", "repos_url": "https://api.github.com/users/ppwwyyxx/repos", "events_url": "https://api.github.com/users/ppwwyyxx/events{/privacy}", "received_events_url": "https://api.github.com/users/ppwwyyxx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "cy89", "id": 29663194, "node_id": "MDQ6VXNlcjI5NjYzMTk0", "avatar_url": "https://avatars0.githubusercontent.com/u/29663194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cy89", "html_url": "https://github.com/cy89", "followers_url": "https://api.github.com/users/cy89/followers", "following_url": "https://api.github.com/users/cy89/following{/other_user}", "gists_url": "https://api.github.com/users/cy89/gists{/gist_id}", "starred_url": "https://api.github.com/users/cy89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cy89/subscriptions", "organizations_url": "https://api.github.com/users/cy89/orgs", "repos_url": "https://api.github.com/users/cy89/repos", "events_url": "https://api.github.com/users/cy89/events{/privacy}", "received_events_url": "https://api.github.com/users/cy89/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cy89", "id": 29663194, "node_id": "MDQ6VXNlcjI5NjYzMTk0", "avatar_url": "https://avatars0.githubusercontent.com/u/29663194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cy89", "html_url": "https://github.com/cy89", "followers_url": "https://api.github.com/users/cy89/followers", "following_url": "https://api.github.com/users/cy89/following{/other_user}", "gists_url": "https://api.github.com/users/cy89/gists{/gist_id}", "starred_url": "https://api.github.com/users/cy89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cy89/subscriptions", "organizations_url": "https://api.github.com/users/cy89/orgs", "repos_url": "https://api.github.com/users/cy89/repos", "events_url": "https://api.github.com/users/cy89/events{/privacy}", "received_events_url": "https://api.github.com/users/cy89/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 12, "created_at": "2018-03-11T08:26:29Z", "updated_at": "2018-06-14T20:15:44Z", "closed_at": "2018-06-14T20:15:44Z", "author_association": "CONTRIBUTOR", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: ubuntu 16.04 / archlinux</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:binary</li>\n<li><strong>TensorFlow version (use command below)</strong>:v1.6.0-0-gd2e24b6039 1.6.0</li>\n<li><strong>Python version</strong>: 3.6</li>\n<li><strong>Bazel version (if compiling from source)</strong>:</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:</li>\n<li><strong>CUDA/cuDNN version</strong>:</li>\n<li><strong>GPU model and memory</strong>:</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<div class=\"highlight highlight-source-python\"><pre>x <span class=\"pl-k\">=</span> tf.placeholder(tf.float32, [<span class=\"pl-c1\">100</span>,<span class=\"pl-c1\">100</span>,<span class=\"pl-c1\">100</span>,<span class=\"pl-c1\">100</span>])\ny <span class=\"pl-k\">=</span> tf.layers.batch_normalization(x, <span class=\"pl-v\">axis</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>, <span class=\"pl-v\">renorm</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>, <span class=\"pl-v\">training</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>, <span class=\"pl-v\">virtual_batch_size</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">2</span>)</pre></div>\n<p>It throws:</p>\n<pre><code>ValueError: Dimension 1 in both shapes must be equal, but are 1 and 50. Shapes are [1,1,100,1,1] and [1,50,100,1,1]. for 'batch_normalization/AssignMovingAvg' (op: 'AssignSub') with input shapes:\n[1,1,100,1,1], [1,50,100,1,1].\n</code></pre>\n<p>However,</p>\n<div class=\"highlight highlight-source-python\"><pre>x <span class=\"pl-k\">=</span> tf.placeholder(tf.float32, [<span class=\"pl-c1\">None</span>,<span class=\"pl-c1\">100</span>,<span class=\"pl-c1\">100</span>,<span class=\"pl-c1\">100</span>])\ny <span class=\"pl-k\">=</span> tf.layers.batch_normalization(x, <span class=\"pl-v\">axis</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>, <span class=\"pl-v\">renorm</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>, <span class=\"pl-v\">training</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>, <span class=\"pl-v\">virtual_batch_size</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">2</span>)</pre></div>\n<p>works fine.</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): ubuntu 16.04 / archlinux\nTensorFlow installed from (source or binary):binary\nTensorFlow version (use command below):v1.6.0-0-gd2e24b6039 1.6.0\nPython version: 3.6\nBazel version (if compiling from source):\nGCC/Compiler version (if compiling from source):\nCUDA/cuDNN version:\nGPU model and memory:\nExact command to reproduce:\n\nx = tf.placeholder(tf.float32, [100,100,100,100])\ny = tf.layers.batch_normalization(x, axis=1, renorm=True, training=True, virtual_batch_size=2)\nIt throws:\nValueError: Dimension 1 in both shapes must be equal, but are 1 and 50. Shapes are [1,1,100,1,1] and [1,50,100,1,1]. for 'batch_normalization/AssignMovingAvg' (op: 'AssignSub') with input shapes:\n[1,1,100,1,1], [1,50,100,1,1].\n\nHowever,\nx = tf.placeholder(tf.float32, [None,100,100,100])\ny = tf.layers.batch_normalization(x, axis=1, renorm=True, training=True, virtual_batch_size=2)\nworks fine.", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: ubuntu 16.04 / archlinux\r\n- **TensorFlow installed from (source or binary)**:binary\r\n- **TensorFlow version (use command below)**:v1.6.0-0-gd2e24b6039 1.6.0\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**:\r\n- **GPU model and memory**:\r\n- **Exact command to reproduce**:\r\n```python\r\nx = tf.placeholder(tf.float32, [100,100,100,100])\r\ny = tf.layers.batch_normalization(x, axis=1, renorm=True, training=True, virtual_batch_size=2)\r\n```\r\nIt throws:\r\n```\r\nValueError: Dimension 1 in both shapes must be equal, but are 1 and 50. Shapes are [1,1,100,1,1] and [1,50,100,1,1]. for 'batch_normalization/AssignMovingAvg' (op: 'AssignSub') with input shapes:\r\n[1,1,100,1,1], [1,50,100,1,1].\r\n```\r\nHowever, \r\n```python\r\nx = tf.placeholder(tf.float32, [None,100,100,100])\r\ny = tf.layers.batch_normalization(x, axis=1, renorm=True, training=True, virtual_batch_size=2)\r\n```\r\nworks fine."}