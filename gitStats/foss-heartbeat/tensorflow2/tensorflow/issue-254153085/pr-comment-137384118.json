{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/137384118", "pull_request_review_id": 61044544, "id": 137384118, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzM4NDExOA==", "diff_hunk": "@@ -259,7 +259,7 @@ def _streaming_confusion_matrix(labels, predictions, num_classes, weights=None):\n     update_op: An operation that increments the confusion matrix.\n   \"\"\"\n   # Local variable to accumulate the predictions in the confusion matrix.\n-  cm_dtype = dtypes.int64 if weights is not None else dtypes.float64\n+  cm_dtype = dtypes.float64 if weights is not None else dtypes.int64", "path": "tensorflow/python/ops/metrics_impl.py", "position": null, "original_position": 5, "commit_id": "e2a98faff959c79ebab7097ab189495e393949f9", "original_commit_id": "1b16f84d93ed022f4bcc7ca7a486e1f6920ffb06", "user": {"login": "taion", "id": 3112159, "node_id": "MDQ6VXNlcjMxMTIxNTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/3112159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taion", "html_url": "https://github.com/taion", "followers_url": "https://api.github.com/users/taion/followers", "following_url": "https://api.github.com/users/taion/following{/other_user}", "gists_url": "https://api.github.com/users/taion/gists{/gist_id}", "starred_url": "https://api.github.com/users/taion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taion/subscriptions", "organizations_url": "https://api.github.com/users/taion/orgs", "repos_url": "https://api.github.com/users/taion/repos", "events_url": "https://api.github.com/users/taion/events{/privacy}", "received_events_url": "https://api.github.com/users/taion/received_events", "type": "User", "site_admin": false}, "body": "This was the initial implementation per https://github.com/tensorflow/tensorflow/pull/12714/commits/4b521d0992fbdd7d9f18a708111e2501689f7994. @alextp explicitly asked for it to be changed to the current implementation per https://github.com/tensorflow/tensorflow/pull/12714/commits/4b521d0992fbdd7d9f18a708111e2501689f7994#r137026663.\r\n\r\nI'd be happy to change it back to my original implementation (with the FIXME?), but please confirm that this is as desired.\r\n\r\nIn some moral sense, `int64` probably is more correct with no weights (or with integer weights), but I share your concerns about API breakage. Just want to confirm this given the specific earlier request to use `int64` in the no-weights case.", "created_at": "2017-09-06T20:41:50Z", "updated_at": "2017-09-07T18:03:10Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/12714#discussion_r137384118", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/12714", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/137384118"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/12714#discussion_r137384118"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/12714"}}, "body_html": "<p>This was the initial implementation per <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/4b521d0992fbdd7d9f18a708111e2501689f7994/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/4b521d0992fbdd7d9f18a708111e2501689f7994\"><tt>4b521d0</tt></a>. <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5061\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/alextp\">@alextp</a> explicitly asked for it to be changed to the current implementation per <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/4b521d0992fbdd7d9f18a708111e2501689f7994#r137026663/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/4b521d0992fbdd7d9f18a708111e2501689f7994#r137026663\"><tt>4b521d0</tt>#r137026663</a>.</p>\n<p>I'd be happy to change it back to my original implementation (with the FIXME?), but please confirm that this is as desired.</p>\n<p>In some moral sense, <code>int64</code> probably is more correct with no weights (or with integer weights), but I share your concerns about API breakage. Just want to confirm this given the specific earlier request to use <code>int64</code> in the no-weights case.</p>", "body_text": "This was the initial implementation per 4b521d0. @alextp explicitly asked for it to be changed to the current implementation per 4b521d0#r137026663.\nI'd be happy to change it back to my original implementation (with the FIXME?), but please confirm that this is as desired.\nIn some moral sense, int64 probably is more correct with no weights (or with integer weights), but I share your concerns about API breakage. Just want to confirm this given the specific earlier request to use int64 in the no-weights case.", "in_reply_to_id": 137379606}