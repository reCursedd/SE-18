{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/327313616", "html_url": "https://github.com/tensorflow/tensorflow/pull/12714#issuecomment-327313616", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12714", "id": 327313616, "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzMxMzYxNg==", "user": {"login": "taion", "id": 3112159, "node_id": "MDQ6VXNlcjMxMTIxNTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/3112159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taion", "html_url": "https://github.com/taion", "followers_url": "https://api.github.com/users/taion/followers", "following_url": "https://api.github.com/users/taion/following{/other_user}", "gists_url": "https://api.github.com/users/taion/gists{/gist_id}", "starred_url": "https://api.github.com/users/taion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taion/subscriptions", "organizations_url": "https://api.github.com/users/taion/orgs", "repos_url": "https://api.github.com/users/taion/repos", "events_url": "https://api.github.com/users/taion/events{/privacy}", "received_events_url": "https://api.github.com/users/taion/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-05T21:49:21Z", "updated_at": "2017-09-05T21:49:21Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Anyway, be aware that if you have any internal consumers of <code>_streaming_confusion_matrix</code> without weights in Python 2 that divide by integers (e.g. for building a streaming normalized confusion matrix metric), this would constitute a bit of a breaking change in practice, as in the no-weights case, the confusion matrix tensors will now be of type <code>int64</code> rather than <code>float64</code> as before.</p>", "body_text": "Anyway, be aware that if you have any internal consumers of _streaming_confusion_matrix without weights in Python 2 that divide by integers (e.g. for building a streaming normalized confusion matrix metric), this would constitute a bit of a breaking change in practice, as in the no-weights case, the confusion matrix tensors will now be of type int64 rather than float64 as before.", "body": "Anyway, be aware that if you have any internal consumers of `_streaming_confusion_matrix` without weights in Python 2 that divide by integers (e.g. for building a streaming normalized confusion matrix metric), this would constitute a bit of a breaking change in practice, as in the no-weights case, the confusion matrix tensors will now be of type `int64` rather than `float64` as before."}