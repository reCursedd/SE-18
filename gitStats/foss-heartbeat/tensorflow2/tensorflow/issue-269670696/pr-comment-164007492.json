{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/164007492", "pull_request_review_id": 91717378, "id": 164007492, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NDAwNzQ5Mg==", "diff_hunk": "@@ -0,0 +1,321 @@\n+/* Copyright 2017 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+\n+#include \"tensorflow/core/kernels/dataset.h\"\n+\n+#include \"tensorflow/core/framework/tensor.h\"\n+\n+#include \"src-cpp/rdkafkacpp.h\"\n+\n+namespace tensorflow {\n+\n+class KafkaDatasetOp : public DatasetOpKernel {\n+ public:\n+  using DatasetOpKernel::DatasetOpKernel;\n+\n+  void MakeDataset(OpKernelContext* ctx, DatasetBase** output) override {\n+    const Tensor* topics_tensor;\n+    OP_REQUIRES_OK(ctx, ctx->input(\"topics\", &topics_tensor));\n+    OP_REQUIRES(\n+        ctx, topics_tensor->dims() <= 1,\n+        errors::InvalidArgument(\"`topics` must be a scalar or a vector.\"));\n+\n+    std::vector<string> topics;\n+    topics.reserve(topics_tensor->NumElements());\n+    for (int i = 0; i < topics_tensor->NumElements(); ++i) {\n+      topics.push_back(topics_tensor->flat<string>()(i));\n+    }\n+\n+    std::string servers = \"\";\n+    OP_REQUIRES_OK(ctx,\n+                   ParseScalarArgument<std::string>(ctx, \"servers\", &servers));\n+    std::string group = \"\";\n+    OP_REQUIRES_OK(ctx, ParseScalarArgument<std::string>(ctx, \"group\", &group));\n+    bool eof = false;\n+    OP_REQUIRES_OK(ctx, ParseScalarArgument<bool>(ctx, \"eof\", &eof));\n+    int64 timeout = -1;\n+    OP_REQUIRES_OK(ctx, ParseScalarArgument<int64>(ctx, \"timeout\", &timeout));\n+    OP_REQUIRES(ctx, (timeout > 0),\n+                errors::InvalidArgument(\n+                    \"Timeout value should be large than 0, got \", timeout));\n+    *output = new Dataset(ctx, std::move(topics), servers, group, eof, timeout);\n+  }\n+\n+ private:\n+  class Dataset : public GraphDatasetBase {\n+   public:\n+    Dataset(OpKernelContext* ctx, std::vector<string> topics,\n+            const string& servers, const string& group, const bool eof,\n+            const int64 timeout)\n+        : GraphDatasetBase(ctx),\n+          topics_(std::move(topics)),\n+          servers_(servers),\n+          group_(group),\n+          eof_(eof),\n+          timeout_(timeout) {}\n+\n+    std::unique_ptr<IteratorBase> MakeIterator(\n+        const string& prefix) const override {\n+      return std::unique_ptr<IteratorBase>(\n+          new Iterator({this, strings::StrCat(prefix, \"::TextLine\")}));", "path": "tensorflow/contrib/kafka/kernels/kafka_dataset_ops.cc", "position": null, "original_position": 72, "commit_id": "5825de14a1c9bc89ab48c19860d4e048e2cceb78", "original_commit_id": "cc74f0d389be6fdf6fb908ab39f2d93052a8e039", "user": {"login": "jhseu", "id": 170179, "node_id": "MDQ6VXNlcjE3MDE3OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/170179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhseu", "html_url": "https://github.com/jhseu", "followers_url": "https://api.github.com/users/jhseu/followers", "following_url": "https://api.github.com/users/jhseu/following{/other_user}", "gists_url": "https://api.github.com/users/jhseu/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhseu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhseu/subscriptions", "organizations_url": "https://api.github.com/users/jhseu/orgs", "repos_url": "https://api.github.com/users/jhseu/repos", "events_url": "https://api.github.com/users/jhseu/events{/privacy}", "received_events_url": "https://api.github.com/users/jhseu/received_events", "type": "User", "site_admin": false}, "body": "Kafka instead of TextLine?", "created_at": "2018-01-26T00:25:45Z", "updated_at": "2018-01-26T03:22:40Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/14098#discussion_r164007492", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/14098", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/164007492"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/14098#discussion_r164007492"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/14098"}}, "body_html": "<p>Kafka instead of TextLine?</p>", "body_text": "Kafka instead of TextLine?"}