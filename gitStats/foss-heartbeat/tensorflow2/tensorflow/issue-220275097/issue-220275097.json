{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9050", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9050/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9050/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9050/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9050", "id": 220275097, "node_id": "MDU6SXNzdWUyMjAyNzUwOTc=", "number": 9050, "title": "How to execute distributed training where each node has multiple workers", "user": {"login": "renganxu", "id": 3160803, "node_id": "MDQ6VXNlcjMxNjA4MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3160803?v=4", "gravatar_id": "", "url": "https://api.github.com/users/renganxu", "html_url": "https://github.com/renganxu", "followers_url": "https://api.github.com/users/renganxu/followers", "following_url": "https://api.github.com/users/renganxu/following{/other_user}", "gists_url": "https://api.github.com/users/renganxu/gists{/gist_id}", "starred_url": "https://api.github.com/users/renganxu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/renganxu/subscriptions", "organizations_url": "https://api.github.com/users/renganxu/orgs", "repos_url": "https://api.github.com/users/renganxu/repos", "events_url": "https://api.github.com/users/renganxu/events{/privacy}", "received_events_url": "https://api.github.com/users/renganxu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-07T17:14:55Z", "updated_at": "2017-04-07T17:18:18Z", "closed_at": "2017-04-07T17:18:18Z", "author_association": "NONE", "body_html": "<p>Hi, what is the command to run distributed training on multiple nodes where each node has multiple GPUs.<br>\nThe example in <a href=\"https://github.com/tensorflow/models/tree/master/inception\">https://github.com/tensorflow/models/tree/master/inception</a> only shows the case where each node has 1 GPU/1 worker. In my cluster, each node has 4 GPUs which should require 4 workers.</p>\n<p>I tried the following command:<br>\non <strong>node 0</strong>:<br>\nbazel-bin/inception/imagenet_distributed_train <br>\n--batch_size=32 <br>\n--data_dir=$HOME/imagenet-data <br>\n--job_name='worker' <br>\n--task_id=0 <br>\n--ps_hosts='ps0.example.com:2222' <br>\n--worker_hosts='worker0.example.com:2222,worker0.example.com:2222,worker0.example.com:2222,worker0.example.com:2222,worker1.example.com:2222,worker1.example.com:2222,worker1.example.com:2222,worker1.example.com:2222' &amp;<br>\n......</p>\n<p>bazel-bin/inception/imagenet_distributed_train <br>\n--batch_size=32 <br>\n--data_dir=$HOME/imagenet-data <br>\n--job_name='worker' <br>\n--task_id=3 <br>\n--ps_hosts='ps0.example.com:2222' <br>\n--worker_hosts='worker0.example.com:2222,worker0.example.com:2222,worker0.example.com:2222,worker0.example.com:2222,worker1.example.com:2222,worker1.example.com:2222,worker1.example.com:2222,worker1.example.com:2222'</p>\n<p>on <strong>node 1</strong>:<br>\nbazel-bin/inception/imagenet_distributed_train <br>\n--batch_size=32 <br>\n--data_dir=$HOME/imagenet-data <br>\n--job_name='worker' <br>\n--task_id=4 <br>\n--ps_hosts='ps0.example.com:2222' <br>\n--worker_hosts='worker0.example.com:2222,worker0.example.com:2222,worker0.example.com:2222,worker0.example.com:2222,worker1.example.com:2222,worker1.example.com:2222,worker1.example.com:2222,worker1.example.com:2222' &amp;<br>\n......</p>\n<p>bazel-bin/inception/imagenet_distributed_train <br>\n--batch_size=32 <br>\n--data_dir=$HOME/imagenet-data <br>\n--job_name='worker' <br>\n--task_id=7 <br>\n--ps_hosts='ps0.example.com:2222' <br>\n--worker_hosts='worker0.example.com:2222,worker0.example.com:2222,worker0.example.com:2222,worker0.example.com:2222,worker1.example.com:2222,worker1.example.com:2222,worker1.example.com:2222,worker1.example.com:2222'</p>\n<p>Note that there is &amp; at the end of each command so that they can be executed in parallel, but it has out of GPU memory error.</p>\n<p>I also tried to use only 1 worker in each node and each worker uses 4 GPU:<br>\non <strong>node 0</strong>:<br>\nbazel-bin/inception/imagenet_distributed_train <br>\n--batch_size=32 <br>\n--data_dir=$HOME/imagenet-data <br>\n--job_name='worker' <br>\n--gpus=4<br>\n--task_id=0 <br>\n--ps_hosts='ps0.example.com:2222' <br>\n--worker_hosts='worker0.example.com:2222,worker1.example.com:2222'</p>\n<p>on <strong>node 1</strong>:<br>\nbazel-bin/inception/imagenet_distributed_train <br>\n--batch_size=32 <br>\n--data_dir=$HOME/imagenet-data <br>\n--job_name='worker' <br>\n--gpus=4<br>\n--task_id=1 <br>\n--ps_hosts='ps0.example.com:2222' <br>\n--worker_hosts='worker0.example.com:2222,worker1.example.com:2222'</p>\n<p>But in the end each node only uses 1 GPU.</p>\n<p>So what is the exact command I should use? Thanks.</p>", "body_text": "Hi, what is the command to run distributed training on multiple nodes where each node has multiple GPUs.\nThe example in https://github.com/tensorflow/models/tree/master/inception only shows the case where each node has 1 GPU/1 worker. In my cluster, each node has 4 GPUs which should require 4 workers.\nI tried the following command:\non node 0:\nbazel-bin/inception/imagenet_distributed_train \n--batch_size=32 \n--data_dir=$HOME/imagenet-data \n--job_name='worker' \n--task_id=0 \n--ps_hosts='ps0.example.com:2222' \n--worker_hosts='worker0.example.com:2222,worker0.example.com:2222,worker0.example.com:2222,worker0.example.com:2222,worker1.example.com:2222,worker1.example.com:2222,worker1.example.com:2222,worker1.example.com:2222' &\n......\nbazel-bin/inception/imagenet_distributed_train \n--batch_size=32 \n--data_dir=$HOME/imagenet-data \n--job_name='worker' \n--task_id=3 \n--ps_hosts='ps0.example.com:2222' \n--worker_hosts='worker0.example.com:2222,worker0.example.com:2222,worker0.example.com:2222,worker0.example.com:2222,worker1.example.com:2222,worker1.example.com:2222,worker1.example.com:2222,worker1.example.com:2222'\non node 1:\nbazel-bin/inception/imagenet_distributed_train \n--batch_size=32 \n--data_dir=$HOME/imagenet-data \n--job_name='worker' \n--task_id=4 \n--ps_hosts='ps0.example.com:2222' \n--worker_hosts='worker0.example.com:2222,worker0.example.com:2222,worker0.example.com:2222,worker0.example.com:2222,worker1.example.com:2222,worker1.example.com:2222,worker1.example.com:2222,worker1.example.com:2222' &\n......\nbazel-bin/inception/imagenet_distributed_train \n--batch_size=32 \n--data_dir=$HOME/imagenet-data \n--job_name='worker' \n--task_id=7 \n--ps_hosts='ps0.example.com:2222' \n--worker_hosts='worker0.example.com:2222,worker0.example.com:2222,worker0.example.com:2222,worker0.example.com:2222,worker1.example.com:2222,worker1.example.com:2222,worker1.example.com:2222,worker1.example.com:2222'\nNote that there is & at the end of each command so that they can be executed in parallel, but it has out of GPU memory error.\nI also tried to use only 1 worker in each node and each worker uses 4 GPU:\non node 0:\nbazel-bin/inception/imagenet_distributed_train \n--batch_size=32 \n--data_dir=$HOME/imagenet-data \n--job_name='worker' \n--gpus=4\n--task_id=0 \n--ps_hosts='ps0.example.com:2222' \n--worker_hosts='worker0.example.com:2222,worker1.example.com:2222'\non node 1:\nbazel-bin/inception/imagenet_distributed_train \n--batch_size=32 \n--data_dir=$HOME/imagenet-data \n--job_name='worker' \n--gpus=4\n--task_id=1 \n--ps_hosts='ps0.example.com:2222' \n--worker_hosts='worker0.example.com:2222,worker1.example.com:2222'\nBut in the end each node only uses 1 GPU.\nSo what is the exact command I should use? Thanks.", "body": "Hi, what is the command to run distributed training on multiple nodes where each node has multiple GPUs.\r\nThe example in https://github.com/tensorflow/models/tree/master/inception only shows the case where each node has 1 GPU/1 worker. In my cluster, each node has 4 GPUs which should require 4 workers.\r\n\r\nI tried the following command:\r\non **node 0**:\r\nbazel-bin/inception/imagenet_distributed_train \\\r\n--batch_size=32 \\\r\n--data_dir=$HOME/imagenet-data \\\r\n--job_name='worker' \\\r\n--task_id=0 \\\r\n--ps_hosts='ps0.example.com:2222' \\\r\n--worker_hosts='worker0.example.com:2222,worker0.example.com:2222,worker0.example.com:2222,worker0.example.com:2222,worker1.example.com:2222,worker1.example.com:2222,worker1.example.com:2222,worker1.example.com:2222' &\r\n......\r\n\r\nbazel-bin/inception/imagenet_distributed_train \\\r\n--batch_size=32 \\\r\n--data_dir=$HOME/imagenet-data \\\r\n--job_name='worker' \\\r\n--task_id=3 \\\r\n--ps_hosts='ps0.example.com:2222' \\\r\n--worker_hosts='worker0.example.com:2222,worker0.example.com:2222,worker0.example.com:2222,worker0.example.com:2222,worker1.example.com:2222,worker1.example.com:2222,worker1.example.com:2222,worker1.example.com:2222'\r\n\r\non **node 1**:\r\nbazel-bin/inception/imagenet_distributed_train \\\r\n--batch_size=32 \\\r\n--data_dir=$HOME/imagenet-data \\\r\n--job_name='worker' \\\r\n--task_id=4 \\\r\n--ps_hosts='ps0.example.com:2222' \\\r\n--worker_hosts='worker0.example.com:2222,worker0.example.com:2222,worker0.example.com:2222,worker0.example.com:2222,worker1.example.com:2222,worker1.example.com:2222,worker1.example.com:2222,worker1.example.com:2222' &\r\n......\r\n\r\nbazel-bin/inception/imagenet_distributed_train \\\r\n--batch_size=32 \\\r\n--data_dir=$HOME/imagenet-data \\\r\n--job_name='worker' \\\r\n--task_id=7 \\\r\n--ps_hosts='ps0.example.com:2222' \\\r\n--worker_hosts='worker0.example.com:2222,worker0.example.com:2222,worker0.example.com:2222,worker0.example.com:2222,worker1.example.com:2222,worker1.example.com:2222,worker1.example.com:2222,worker1.example.com:2222'\r\n\r\nNote that there is & at the end of each command so that they can be executed in parallel, but it has out of GPU memory error.\r\n\r\nI also tried to use only 1 worker in each node and each worker uses 4 GPU:\r\non **node 0**:\r\nbazel-bin/inception/imagenet_distributed_train \\\r\n--batch_size=32 \\\r\n--data_dir=$HOME/imagenet-data \\\r\n--job_name='worker' \\\r\n--gpus=4\r\n--task_id=0 \\\r\n--ps_hosts='ps0.example.com:2222' \\\r\n--worker_hosts='worker0.example.com:2222,worker1.example.com:2222'\r\n\r\non **node 1**:\r\nbazel-bin/inception/imagenet_distributed_train \\\r\n--batch_size=32 \\\r\n--data_dir=$HOME/imagenet-data \\\r\n--job_name='worker' \\\r\n--gpus=4\r\n--task_id=1 \\\r\n--ps_hosts='ps0.example.com:2222' \\\r\n--worker_hosts='worker0.example.com:2222,worker1.example.com:2222'\r\n\r\nBut in the end each node only uses 1 GPU. \r\n\r\nSo what is the exact command I should use? Thanks.\r\n"}