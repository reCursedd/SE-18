{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/325362763", "html_url": "https://github.com/tensorflow/tensorflow/issues/12512#issuecomment-325362763", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12512", "id": 325362763, "node_id": "MDEyOklzc3VlQ29tbWVudDMyNTM2Mjc2Mw==", "user": {"login": "alanhdu", "id": 1914111, "node_id": "MDQ6VXNlcjE5MTQxMTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1914111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alanhdu", "html_url": "https://github.com/alanhdu", "followers_url": "https://api.github.com/users/alanhdu/followers", "following_url": "https://api.github.com/users/alanhdu/following{/other_user}", "gists_url": "https://api.github.com/users/alanhdu/gists{/gist_id}", "starred_url": "https://api.github.com/users/alanhdu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alanhdu/subscriptions", "organizations_url": "https://api.github.com/users/alanhdu/orgs", "repos_url": "https://api.github.com/users/alanhdu/repos", "events_url": "https://api.github.com/users/alanhdu/events{/privacy}", "received_events_url": "https://api.github.com/users/alanhdu/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-28T14:05:08Z", "updated_at": "2017-08-28T14:05:08Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=184424\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ali01\">@ali01</a> I'm happy to create a question on StackOverflow too, but:</p>\n<p>I'm using built-in layers from Tensorflow <code>tf.layers.dense</code> and <code>tf.contrib.rnn.LayerNormBasicLSTMCell</code> on perfectly normal data and am getting garbage output (all <code>NaN</code>s). How is that not a bug? If there's a numerical stability problem here, it almost certainly exists inside the Tensorflow codebase.</p>", "body_text": "@ali01 I'm happy to create a question on StackOverflow too, but:\nI'm using built-in layers from Tensorflow tf.layers.dense and tf.contrib.rnn.LayerNormBasicLSTMCell on perfectly normal data and am getting garbage output (all NaNs). How is that not a bug? If there's a numerical stability problem here, it almost certainly exists inside the Tensorflow codebase.", "body": "@ali01 I'm happy to create a question on StackOverflow too, but:\r\n\r\nI'm using built-in layers from Tensorflow `tf.layers.dense` and `tf.contrib.rnn.LayerNormBasicLSTMCell` on perfectly normal data and am getting garbage output (all `NaN`s). How is that not a bug? If there's a numerical stability problem here, it almost certainly exists inside the Tensorflow codebase."}