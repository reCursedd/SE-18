{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21242", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21242/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21242/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21242/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/21242", "id": 345735431, "node_id": "MDExOlB1bGxSZXF1ZXN0MjA0Nzg3MDk4", "number": 21242, "title": "The method of open addressing is not quadratic probing", "user": {"login": "wangershi", "id": 33387561, "node_id": "MDQ6VXNlcjMzMzg3NTYx", "avatar_url": "https://avatars1.githubusercontent.com/u/33387561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wangershi", "html_url": "https://github.com/wangershi", "followers_url": "https://api.github.com/users/wangershi/followers", "following_url": "https://api.github.com/users/wangershi/following{/other_user}", "gists_url": "https://api.github.com/users/wangershi/gists{/gist_id}", "starred_url": "https://api.github.com/users/wangershi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wangershi/subscriptions", "organizations_url": "https://api.github.com/users/wangershi/orgs", "repos_url": "https://api.github.com/users/wangershi/repos", "events_url": "https://api.github.com/users/wangershi/events{/privacy}", "received_events_url": "https://api.github.com/users/wangershi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390482148, "node_id": "MDU6TGFiZWwzOTA0ODIxNDg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/awaiting%20review", "name": "awaiting review", "color": "fef2c0", "default": false}, {"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "case540", "id": 1299636, "node_id": "MDQ6VXNlcjEyOTk2MzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1299636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/case540", "html_url": "https://github.com/case540", "followers_url": "https://api.github.com/users/case540/followers", "following_url": "https://api.github.com/users/case540/following{/other_user}", "gists_url": "https://api.github.com/users/case540/gists{/gist_id}", "starred_url": "https://api.github.com/users/case540/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/case540/subscriptions", "organizations_url": "https://api.github.com/users/case540/orgs", "repos_url": "https://api.github.com/users/case540/repos", "events_url": "https://api.github.com/users/case540/events{/privacy}", "received_events_url": "https://api.github.com/users/case540/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "case540", "id": 1299636, "node_id": "MDQ6VXNlcjEyOTk2MzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1299636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/case540", "html_url": "https://github.com/case540", "followers_url": "https://api.github.com/users/case540/followers", "following_url": "https://api.github.com/users/case540/following{/other_user}", "gists_url": "https://api.github.com/users/case540/gists{/gist_id}", "starred_url": "https://api.github.com/users/case540/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/case540/subscriptions", "organizations_url": "https://api.github.com/users/case540/orgs", "repos_url": "https://api.github.com/users/case540/repos", "events_url": "https://api.github.com/users/case540/events{/privacy}", "received_events_url": "https://api.github.com/users/case540/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-07-30T12:24:58Z", "updated_at": "2018-08-03T04:58:50Z", "closed_at": "2018-08-03T04:58:39Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21242", "html_url": "https://github.com/tensorflow/tensorflow/pull/21242", "diff_url": "https://github.com/tensorflow/tensorflow/pull/21242.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/21242.patch"}, "body_html": "<p>There are three method in open addressing: linear probing, quadratic probing and double hashing, they have such functions:<br>\nlinear probing: h(k, i) = (h'(k) + i) mod m   (eq.1)<br>\nquadratic probing: h(k, i) = (h'(k) + c1 * i + c2 * i^2) mod m  (eq.2)<br>\nlinear probing: h(k, i) = (h1(k) + i * h2(k)) mod m  (eq.3)<br>\nThe difference between linear probing and quadratic probing is that there are quadratic component in quadratic probing, c2 * i^2.<br>\nBut I can't see it in NextIndex():</p>\n<pre><code>inline size_t NextIndex(size_t i, uint32 num_probes) const {\n    // Quadratic probing.\n    return (i + num_probes) &amp; mask_;\n  }\n</code></pre>\n<p>The num_probes is the number of probe, like i in eq.1, so I think NextIndex() is the implement of eq.1. But all the comments said this is quadratic probing, so I add quadratic component in NextIndex().</p>\n<p>Besides, the coefficient of quadratic component I choose is random, c1 and c2 is set manually, maybe other numbers are better.</p>", "body_text": "There are three method in open addressing: linear probing, quadratic probing and double hashing, they have such functions:\nlinear probing: h(k, i) = (h'(k) + i) mod m   (eq.1)\nquadratic probing: h(k, i) = (h'(k) + c1 * i + c2 * i^2) mod m  (eq.2)\nlinear probing: h(k, i) = (h1(k) + i * h2(k)) mod m  (eq.3)\nThe difference between linear probing and quadratic probing is that there are quadratic component in quadratic probing, c2 * i^2.\nBut I can't see it in NextIndex():\ninline size_t NextIndex(size_t i, uint32 num_probes) const {\n    // Quadratic probing.\n    return (i + num_probes) & mask_;\n  }\n\nThe num_probes is the number of probe, like i in eq.1, so I think NextIndex() is the implement of eq.1. But all the comments said this is quadratic probing, so I add quadratic component in NextIndex().\nBesides, the coefficient of quadratic component I choose is random, c1 and c2 is set manually, maybe other numbers are better.", "body": "There are three method in open addressing: linear probing, quadratic probing and double hashing, they have such functions:\r\nlinear probing: h(k, i) = (h'(k) + i) mod m   (eq.1)\r\nquadratic probing: h(k, i) = (h'(k) + c1 * i + c2 * i^2) mod m  (eq.2)\r\nlinear probing: h(k, i) = (h1(k) + i * h2(k)) mod m  (eq.3)\r\nThe difference between linear probing and quadratic probing is that there are quadratic component in quadratic probing, c2 * i^2.\r\nBut I can't see it in NextIndex():\r\n```\r\ninline size_t NextIndex(size_t i, uint32 num_probes) const {\r\n    // Quadratic probing.\r\n    return (i + num_probes) & mask_;\r\n  }\r\n```\r\nThe num_probes is the number of probe, like i in eq.1, so I think NextIndex() is the implement of eq.1. But all the comments said this is quadratic probing, so I add quadratic component in NextIndex().\r\n\r\nBesides, the coefficient of quadratic component I choose is random, c1 and c2 is set manually, maybe other numbers are better."}