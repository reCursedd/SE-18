{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/287440473", "html_url": "https://github.com/tensorflow/tensorflow/issues/6727#issuecomment-287440473", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6727", "id": 287440473, "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzQ0MDQ3Mw==", "user": {"login": "gmacleod", "id": 469690, "node_id": "MDQ6VXNlcjQ2OTY5MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/469690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gmacleod", "html_url": "https://github.com/gmacleod", "followers_url": "https://api.github.com/users/gmacleod/followers", "following_url": "https://api.github.com/users/gmacleod/following{/other_user}", "gists_url": "https://api.github.com/users/gmacleod/gists{/gist_id}", "starred_url": "https://api.github.com/users/gmacleod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gmacleod/subscriptions", "organizations_url": "https://api.github.com/users/gmacleod/orgs", "repos_url": "https://api.github.com/users/gmacleod/repos", "events_url": "https://api.github.com/users/gmacleod/events{/privacy}", "received_events_url": "https://api.github.com/users/gmacleod/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-17T18:48:05Z", "updated_at": "2017-03-17T18:48:05Z", "author_association": "NONE", "body_html": "<p>I just found a workaround to what might be the same issue in Tensorflow 0.12.1. Maybe it will be helpful here.</p>\n<p>ValidationMonitor did not support the x=...y=... input, and when using input_fn, I found it would loop forever the first time it tried to run the monitor during a fit() call. The log output looked like it was calculating the validation metrics over and over in an infinite loop.</p>\n<p>After looking at the source for ValidationMonitor I found a parameter eval_steps that defaulted to None. In other places in the contrib.learn codebase 'None' implies 'forever', so I tried adding eval_steps=1 to the constructor, and now it works as advertised.</p>\n<p>e.g.</p>\n<pre><code>        validation_monitor = tf.contrib.learn.monitors.ValidationMonitor(\n            input_fn=lambda: input_function(test_data, test_labels),\n            eval_steps=1,  # Try adding this\n            metrics=validation_metrics,\n            every_n_steps=10,\n        )   \n\n        estimator.fit(\n            input_fn=lambda: input_function(training_data, training_labels),\n            steps=training_epochs,\n            monitors=[validation_monitor],\n        ) \n</code></pre>\n<p>Hope that helps!</p>", "body_text": "I just found a workaround to what might be the same issue in Tensorflow 0.12.1. Maybe it will be helpful here.\nValidationMonitor did not support the x=...y=... input, and when using input_fn, I found it would loop forever the first time it tried to run the monitor during a fit() call. The log output looked like it was calculating the validation metrics over and over in an infinite loop.\nAfter looking at the source for ValidationMonitor I found a parameter eval_steps that defaulted to None. In other places in the contrib.learn codebase 'None' implies 'forever', so I tried adding eval_steps=1 to the constructor, and now it works as advertised.\ne.g.\n        validation_monitor = tf.contrib.learn.monitors.ValidationMonitor(\n            input_fn=lambda: input_function(test_data, test_labels),\n            eval_steps=1,  # Try adding this\n            metrics=validation_metrics,\n            every_n_steps=10,\n        )   \n\n        estimator.fit(\n            input_fn=lambda: input_function(training_data, training_labels),\n            steps=training_epochs,\n            monitors=[validation_monitor],\n        ) \n\nHope that helps!", "body": "I just found a workaround to what might be the same issue in Tensorflow 0.12.1. Maybe it will be helpful here.\r\n\r\nValidationMonitor did not support the x=...y=... input, and when using input_fn, I found it would loop forever the first time it tried to run the monitor during a fit() call. The log output looked like it was calculating the validation metrics over and over in an infinite loop.\r\n\r\nAfter looking at the source for ValidationMonitor I found a parameter eval_steps that defaulted to None. In other places in the contrib.learn codebase 'None' implies 'forever', so I tried adding eval_steps=1 to the constructor, and now it works as advertised.\r\n\r\ne.g.\r\n```\r\n        validation_monitor = tf.contrib.learn.monitors.ValidationMonitor(\r\n            input_fn=lambda: input_function(test_data, test_labels),\r\n            eval_steps=1,  # Try adding this\r\n            metrics=validation_metrics,\r\n            every_n_steps=10,\r\n        )   \r\n\r\n        estimator.fit(\r\n            input_fn=lambda: input_function(training_data, training_labels),\r\n            steps=training_epochs,\r\n            monitors=[validation_monitor],\r\n        ) \r\n```\r\n\r\nHope that helps!"}