{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6727", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6727/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6727/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6727/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/6727", "id": 199434284, "node_id": "MDU6SXNzdWUxOTk0MzQyODQ=", "number": 6727, "title": " tf.contrib.learn.monitors.ValidationMonitor hangs when passed input_fn parameter", "user": {"login": "krautt", "id": 16465842, "node_id": "MDQ6VXNlcjE2NDY1ODQy", "avatar_url": "https://avatars1.githubusercontent.com/u/16465842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krautt", "html_url": "https://github.com/krautt", "followers_url": "https://api.github.com/users/krautt/followers", "following_url": "https://api.github.com/users/krautt/following{/other_user}", "gists_url": "https://api.github.com/users/krautt/gists{/gist_id}", "starred_url": "https://api.github.com/users/krautt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krautt/subscriptions", "organizations_url": "https://api.github.com/users/krautt/orgs", "repos_url": "https://api.github.com/users/krautt/repos", "events_url": "https://api.github.com/users/krautt/events{/privacy}", "received_events_url": "https://api.github.com/users/krautt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2017-01-08T17:31:40Z", "updated_at": "2017-06-10T05:42:01Z", "closed_at": "2017-03-20T15:23:38Z", "author_association": "NONE", "body_html": "<p>Hello!<br>\nI have been working my way through the  tf.contrib.learn <a href=\"https://www.tensorflow.org/tutorials/\" rel=\"nofollow\">tutorials</a> and have been attempting to integrate the tf.contrib.learn.monitors.ValidationMonitor into the 'deep' classifier in wide_n_deep.py as shown below.</p>\n<h3>What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?  I searched both Github and Stakeoverflow with the terms 'tensorflow,' 'input_fn,' and 'validationmonitor' but wasn't able to find anyone else who reported similar issues.</h3>\n<h3>Environment info</h3>\n<p>Operating System:  I ran this on Ubuntu Server 16.04 on a physical I7 with a GTX1080 gpu when i noticed the problem.  I know that i was using the GPU on the original physical box from previous tests, and because during the hang the nvidia_smi command showed considerable load on the GPU.  I was able to replicate the problem with CPU on a 16.04 VM as well.</p>\n<p>Installed version of CUDA and cuDNN:</p>\n<pre><code>/home/andersonjas/libcudnn5-dev_5.1.5-1+cuda8.0_amd64.deb\n/home/andersonjas/libcudnn5_5.1.5-1+cuda8.0_amd64.deb\n</code></pre>\n<p>If installed from binary pip package, provide:</p>\n<ol>\n<li>A link to the pip package you installed:<br>\nfrom Anaconda 2.7 64 bit package:</li>\n</ol>\n<pre><code>pip install tensorflow\n</code></pre>\n<ol start=\"2\">\n<li>The output from <code>python -c \"import tensorflow; print(tensorflow.__version__)\"</code>.</li>\n</ol>\n<pre><code>andersonjas@ubuntu:~$ python -c \"import tensorflow; print(tensorflow.__version__)\"\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so.5 locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally\n0.11.head\n\n</code></pre>\n<p>If installed from source, provide</p>\n<ol>\n<li>The commit hash (<code>git rev-parse HEAD</code>)</li>\n<li>The output of <code>bazel version</code></li>\n</ol>\n<h3>If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)</h3>\n<div class=\"highlight highlight-source-python\"><pre>validation_monitor <span class=\"pl-k\">=</span> tf.contrib.learn.monitors.ValidationMonitor(<span class=\"pl-v\">input_fn</span><span class=\"pl-k\">=</span><span class=\"pl-k\">lambda</span>:input_fn(df_test), \n                       <span class=\"pl-v\">every_n_steps</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">50</span>)\nm.fit(<span class=\"pl-v\">input_fn</span><span class=\"pl-k\">=</span><span class=\"pl-k\">lambda</span>: input_fn(df_train), <span class=\"pl-v\">steps</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">151</span>,<span class=\"pl-v\">monitors</span><span class=\"pl-k\">=</span>[validation_monitor])</pre></div>\n<p>Doing this in a jupyter notebool causes the code to hang indefinitely.  To make completely sure that i don't have a bug in my own code i can make the following change:</p>\n<div class=\"highlight highlight-source-python\"><pre>validation_monitor <span class=\"pl-k\">=</span> tf.contrib.learn.monitors.ValidationMonitor(<span class=\"pl-v\">input_fn</span><span class=\"pl-k\">=</span><span class=\"pl-k\">lambda</span>:input_fn(df_test), \n                       <span class=\"pl-v\">every_n_steps</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">50</span>)\nm.fit(<span class=\"pl-v\">input_fn</span><span class=\"pl-k\">=</span><span class=\"pl-k\">lambda</span>: input_fn(df_train), <span class=\"pl-v\">steps</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">151</span>) <span class=\"pl-c\"><span class=\"pl-c\">#</span>,monitors=[validation_monitor])</span></pre></div>\n<p>and then the code executes fine.</p>\n<h3>What other attempted solutions have you tried?</h3>\n<p>I also built an input_fn interface to the iris and boston housing price predictor code code, each showed similar 'hangs'</p>\n<h3>Logs or other output that would be helpful</h3>\n<p>(If logs are large, please upload as attachment or provide link).</p>\n<p>As a noob, i'm learning that esoteric error messages are a luxury :-),  in this case the code just hangs indefinitely.</p>", "body_text": "Hello!\nI have been working my way through the  tf.contrib.learn tutorials and have been attempting to integrate the tf.contrib.learn.monitors.ValidationMonitor into the 'deep' classifier in wide_n_deep.py as shown below.\nWhat related GitHub issues or StackOverflow threads have you found by searching the web for your problem?  I searched both Github and Stakeoverflow with the terms 'tensorflow,' 'input_fn,' and 'validationmonitor' but wasn't able to find anyone else who reported similar issues.\nEnvironment info\nOperating System:  I ran this on Ubuntu Server 16.04 on a physical I7 with a GTX1080 gpu when i noticed the problem.  I know that i was using the GPU on the original physical box from previous tests, and because during the hang the nvidia_smi command showed considerable load on the GPU.  I was able to replicate the problem with CPU on a 16.04 VM as well.\nInstalled version of CUDA and cuDNN:\n/home/andersonjas/libcudnn5-dev_5.1.5-1+cuda8.0_amd64.deb\n/home/andersonjas/libcudnn5_5.1.5-1+cuda8.0_amd64.deb\n\nIf installed from binary pip package, provide:\n\nA link to the pip package you installed:\nfrom Anaconda 2.7 64 bit package:\n\npip install tensorflow\n\n\nThe output from python -c \"import tensorflow; print(tensorflow.__version__)\".\n\nandersonjas@ubuntu:~$ python -c \"import tensorflow; print(tensorflow.__version__)\"\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so.5 locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally\n0.11.head\n\n\nIf installed from source, provide\n\nThe commit hash (git rev-parse HEAD)\nThe output of bazel version\n\nIf possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\nvalidation_monitor = tf.contrib.learn.monitors.ValidationMonitor(input_fn=lambda:input_fn(df_test), \n                       every_n_steps=50)\nm.fit(input_fn=lambda: input_fn(df_train), steps=151,monitors=[validation_monitor])\nDoing this in a jupyter notebool causes the code to hang indefinitely.  To make completely sure that i don't have a bug in my own code i can make the following change:\nvalidation_monitor = tf.contrib.learn.monitors.ValidationMonitor(input_fn=lambda:input_fn(df_test), \n                       every_n_steps=50)\nm.fit(input_fn=lambda: input_fn(df_train), steps=151) #,monitors=[validation_monitor])\nand then the code executes fine.\nWhat other attempted solutions have you tried?\nI also built an input_fn interface to the iris and boston housing price predictor code code, each showed similar 'hangs'\nLogs or other output that would be helpful\n(If logs are large, please upload as attachment or provide link).\nAs a noob, i'm learning that esoteric error messages are a luxury :-),  in this case the code just hangs indefinitely.", "body": "Hello!\r\nI have been working my way through the  tf.contrib.learn [tutorials](https://www.tensorflow.org/tutorials/) and have been attempting to integrate the tf.contrib.learn.monitors.ValidationMonitor into the 'deep' classifier in wide_n_deep.py as shown below.\r\n\r\n\r\n### What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?  I searched both Github and Stakeoverflow with the terms 'tensorflow,' 'input_fn,' and 'validationmonitor' but wasn't able to find anyone else who reported similar issues.\r\n\r\n### Environment info\r\nOperating System:  I ran this on Ubuntu Server 16.04 on a physical I7 with a GTX1080 gpu when i noticed the problem.  I know that i was using the GPU on the original physical box from previous tests, and because during the hang the nvidia_smi command showed considerable load on the GPU.  I was able to replicate the problem with CPU on a 16.04 VM as well.\r\n\r\nInstalled version of CUDA and cuDNN: \r\n```\r\n/home/andersonjas/libcudnn5-dev_5.1.5-1+cuda8.0_amd64.deb\r\n/home/andersonjas/libcudnn5_5.1.5-1+cuda8.0_amd64.deb\r\n```\r\n\r\nIf installed from binary pip package, provide:\r\n\r\n1. A link to the pip package you installed:\r\nfrom Anaconda 2.7 64 bit package:\r\n```\r\npip install tensorflow\r\n```\r\n2. The output from `python -c \"import tensorflow; print(tensorflow.__version__)\"`.\r\n\r\n```\r\nandersonjas@ubuntu:~$ python -c \"import tensorflow; print(tensorflow.__version__)\"\r\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally\r\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so.5 locally\r\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally\r\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally\r\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally\r\n0.11.head\r\n\r\n```\r\nIf installed from source, provide \r\n\r\n1. The commit hash (`git rev-parse HEAD`)\r\n2. The output of `bazel version`\r\n\r\n### If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\r\n\r\n```python\r\nvalidation_monitor = tf.contrib.learn.monitors.ValidationMonitor(input_fn=lambda:input_fn(df_test), \r\n                       every_n_steps=50)\r\nm.fit(input_fn=lambda: input_fn(df_train), steps=151,monitors=[validation_monitor])\r\n```\r\n\r\nDoing this in a jupyter notebool causes the code to hang indefinitely.  To make completely sure that i don't have a bug in my own code i can make the following change:\r\n\r\n```python\r\nvalidation_monitor = tf.contrib.learn.monitors.ValidationMonitor(input_fn=lambda:input_fn(df_test), \r\n                       every_n_steps=50)\r\nm.fit(input_fn=lambda: input_fn(df_train), steps=151) #,monitors=[validation_monitor])\r\n```\r\n\r\nand then the code executes fine.\r\n\r\n### What other attempted solutions have you tried?\r\nI also built an input_fn interface to the iris and boston housing price predictor code code, each showed similar 'hangs'\r\n\r\n### Logs or other output that would be helpful\r\n(If logs are large, please upload as attachment or provide link).\r\n\r\nAs a noob, i'm learning that esoteric error messages are a luxury :-),  in this case the code just hangs indefinitely.\r\n"}