{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/438658133", "html_url": "https://github.com/tensorflow/tensorflow/issues/10155#issuecomment-438658133", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10155", "id": 438658133, "node_id": "MDEyOklzc3VlQ29tbWVudDQzODY1ODEzMw==", "user": {"login": "drumpi", "id": 12821471, "node_id": "MDQ6VXNlcjEyODIxNDcx", "avatar_url": "https://avatars1.githubusercontent.com/u/12821471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drumpi", "html_url": "https://github.com/drumpi", "followers_url": "https://api.github.com/users/drumpi/followers", "following_url": "https://api.github.com/users/drumpi/following{/other_user}", "gists_url": "https://api.github.com/users/drumpi/gists{/gist_id}", "starred_url": "https://api.github.com/users/drumpi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drumpi/subscriptions", "organizations_url": "https://api.github.com/users/drumpi/orgs", "repos_url": "https://api.github.com/users/drumpi/repos", "events_url": "https://api.github.com/users/drumpi/events{/privacy}", "received_events_url": "https://api.github.com/users/drumpi/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-14T13:17:12Z", "updated_at": "2018-11-14T13:17:12Z", "author_association": "NONE", "body_html": "<p>I have a similar issue. I try to load a variable and train with Adam which had not been trainable in the previous model. For example I try to load: \"graph/logits/conv/biases\" but \"graph/logits/conv/biases/Adam\" is loaded too, which does not exist in my checkpoint and results in an error.</p>\n<p>I am wondering why there is no name check in this line  (Amirtha1189 mentioned above) in file \"tensorflow/python/training/warm_start_util.py\" :</p>\n<pre><code>        list_of_vars += ops.get_collection(ops.GraphKeys.GLOBAL_VARIABLES,\n                                           scope=v)\n</code></pre>\n<p>If it would be:</p>\n<pre><code>        for i in ops.get_collection(ops.GraphKeys.GLOBAL_VARIABLES,\n                                           scope=v):\n            if v == i.name:\n                list_of_vars += i \n</code></pre>\n<p>instead.</p>\n<p>The utility variabels (Adam, ExponentialMovingAverage) would be excluded. And there would still be the option to get them by passing in the whole name.</p>", "body_text": "I have a similar issue. I try to load a variable and train with Adam which had not been trainable in the previous model. For example I try to load: \"graph/logits/conv/biases\" but \"graph/logits/conv/biases/Adam\" is loaded too, which does not exist in my checkpoint and results in an error.\nI am wondering why there is no name check in this line  (Amirtha1189 mentioned above) in file \"tensorflow/python/training/warm_start_util.py\" :\n        list_of_vars += ops.get_collection(ops.GraphKeys.GLOBAL_VARIABLES,\n                                           scope=v)\n\nIf it would be:\n        for i in ops.get_collection(ops.GraphKeys.GLOBAL_VARIABLES,\n                                           scope=v):\n            if v == i.name:\n                list_of_vars += i \n\ninstead.\nThe utility variabels (Adam, ExponentialMovingAverage) would be excluded. And there would still be the option to get them by passing in the whole name.", "body": "I have a similar issue. I try to load a variable and train with Adam which had not been trainable in the previous model. For example I try to load: \"graph/logits/conv/biases\" but \"graph/logits/conv/biases/Adam\" is loaded too, which does not exist in my checkpoint and results in an error.\r\n\r\nI am wondering why there is no name check in this line  (Amirtha1189 mentioned above) in file \"tensorflow/python/training/warm_start_util.py\" :\r\n```\r\n        list_of_vars += ops.get_collection(ops.GraphKeys.GLOBAL_VARIABLES,\r\n                                           scope=v)\r\n```\r\nIf it would be:\r\n```\r\n        for i in ops.get_collection(ops.GraphKeys.GLOBAL_VARIABLES,\r\n                                           scope=v):\r\n            if v == i.name:\r\n                list_of_vars += i \r\n```\r\ninstead. \r\n\r\nThe utility variabels (Adam, ExponentialMovingAverage) would be excluded. And there would still be the option to get them by passing in the whole name."}