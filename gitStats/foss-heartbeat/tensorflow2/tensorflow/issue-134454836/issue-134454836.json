{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1158", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1158/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1158/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1158/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/1158", "id": 134454836, "node_id": "MDU6SXNzdWUxMzQ0NTQ4MzY=", "number": 1158, "title": "Kernel version vs DSO version mismatch when running example after bazel build", "user": {"login": "hemanthdv", "id": 8747166, "node_id": "MDQ6VXNlcjg3NDcxNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/8747166?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hemanthdv", "html_url": "https://github.com/hemanthdv", "followers_url": "https://api.github.com/users/hemanthdv/followers", "following_url": "https://api.github.com/users/hemanthdv/following{/other_user}", "gists_url": "https://api.github.com/users/hemanthdv/gists{/gist_id}", "starred_url": "https://api.github.com/users/hemanthdv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hemanthdv/subscriptions", "organizations_url": "https://api.github.com/users/hemanthdv/orgs", "repos_url": "https://api.github.com/users/hemanthdv/repos", "events_url": "https://api.github.com/users/hemanthdv/events{/privacy}", "received_events_url": "https://api.github.com/users/hemanthdv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 284463744, "node_id": "MDU6TGFiZWwyODQ0NjM3NDQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cuda", "name": "cuda", "color": "f7c6c7", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-02-18T01:34:11Z", "updated_at": "2018-02-05T07:03:18Z", "closed_at": "2016-02-18T03:01:14Z", "author_association": "NONE", "body_html": "<p>After successful bazel build, running into error when executing example with gpu. Please suggest on how to resolve. The GPU has been used with MathConvNet (another deep learning package) without this error.</p>\n<h2>Log:</h2>\n<p><code>bazel-bin/tensorflow/cc/tutorials_example_trainer --use_gpu I tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcublas.so locally I tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcudnn.so locally I tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcufft.so locally I tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcuda.so locally I tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcurand.so locally E tensorflow/stream_executor/cuda/cuda_driver.cc:481] failed call to cuInit: CUDA_ERROR_NO_DEVICE I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:114] retrieving CUDA diagnostic information for host: en4113750l I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:121] hostname: en4113750l I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:146] libcuda reported version is: 352.63 I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:257] driver version file contents: \"\"\"NVRM version: NVIDIA UNIX x86_64 Kernel Module  352.55  Thu Oct  8 15:18:00 PDT 2015 GCC version:  gcc version 4.8.4 (Ubuntu 4.8.4-2ubuntu1~14.04)  \"\"\" I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:150] kernel reported version is: 352.55 E tensorflow/stream_executor/cuda/cuda_diagnostics.cc:229] kernel version 352.55 does not match DSO version 352.63 -- cannot find working devices in this configuration I tensorflow/core/common_runtime/gpu/gpu_init.cc:126] DMA:  F tensorflow/cc/tutorials/example_trainer.cc:116] Check failed: ::tensorflow::Status::OK() == (session-&gt;Run({{\"x\", x}}, {\"y:0\", \"y_normalized:0\"}, {}, &amp;outputs)) (OK vs. Invalid argument: Cannot assign a device to node 'Const/_2': Could not satisfy explicit device specification '/gpu:0' [[Node: Const/_2 = Const[dtype=DT_INT32, value=Tensor&lt;type: int32 shape: [] values: 0&gt;, _device=\"/gpu:0\"]()]]) F tensorflow/cc/tutorials/example_trainer.cc:116] Check failed: ::tensorflow::Status::OK() == (session-&gt;Run({{\"x\", x}}, {\"y:0\", \"y_normalized:0\"}, {}, &amp;outputs)) (OK vs. Invalid argument: Cannot assign a device to node 'Const/_2': Could not satisfy explicit device specification '/gpu:0' [[Node: Const/_2 = Const[dtype=DT_INT32, value=Tensor&lt;type: int32 shape: [] values: 0&gt;, _device=\"/gpu:0\"]()]]) F tensorflow/cc/tutorials/example_trainer.cc:116] Check failed: ::tensorflow::Status::OK() == (session-&gt;Run({{\"x\", x}}, {\"y:0\", \"y_normalized:0\"}, {}, &amp;outputs)) (OK vs. Invalid argument: Cannot assign a device to node 'Const/_2': Could not satisfy explicit device specification '/gpu:0' [[Node: Const/_2 = Const[dtype=DT_INT32, value=Tensor&lt;type: int32 shape: [] values: 0&gt;, _device=\"/gpu:0\"]()]]) Aborted (core dumped)</code></p>\n<h2>Specifications:</h2>\n<p>Ubuntu LTS 14.04<br>\nTitan X GPU<br>\nCUDA 7.5</p>", "body_text": "After successful bazel build, running into error when executing example with gpu. Please suggest on how to resolve. The GPU has been used with MathConvNet (another deep learning package) without this error.\nLog:\nbazel-bin/tensorflow/cc/tutorials_example_trainer --use_gpu I tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcublas.so locally I tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcudnn.so locally I tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcufft.so locally I tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcuda.so locally I tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcurand.so locally E tensorflow/stream_executor/cuda/cuda_driver.cc:481] failed call to cuInit: CUDA_ERROR_NO_DEVICE I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:114] retrieving CUDA diagnostic information for host: en4113750l I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:121] hostname: en4113750l I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:146] libcuda reported version is: 352.63 I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:257] driver version file contents: \"\"\"NVRM version: NVIDIA UNIX x86_64 Kernel Module  352.55  Thu Oct  8 15:18:00 PDT 2015 GCC version:  gcc version 4.8.4 (Ubuntu 4.8.4-2ubuntu1~14.04)  \"\"\" I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:150] kernel reported version is: 352.55 E tensorflow/stream_executor/cuda/cuda_diagnostics.cc:229] kernel version 352.55 does not match DSO version 352.63 -- cannot find working devices in this configuration I tensorflow/core/common_runtime/gpu/gpu_init.cc:126] DMA:  F tensorflow/cc/tutorials/example_trainer.cc:116] Check failed: ::tensorflow::Status::OK() == (session->Run({{\"x\", x}}, {\"y:0\", \"y_normalized:0\"}, {}, &outputs)) (OK vs. Invalid argument: Cannot assign a device to node 'Const/_2': Could not satisfy explicit device specification '/gpu:0' [[Node: Const/_2 = Const[dtype=DT_INT32, value=Tensor<type: int32 shape: [] values: 0>, _device=\"/gpu:0\"]()]]) F tensorflow/cc/tutorials/example_trainer.cc:116] Check failed: ::tensorflow::Status::OK() == (session->Run({{\"x\", x}}, {\"y:0\", \"y_normalized:0\"}, {}, &outputs)) (OK vs. Invalid argument: Cannot assign a device to node 'Const/_2': Could not satisfy explicit device specification '/gpu:0' [[Node: Const/_2 = Const[dtype=DT_INT32, value=Tensor<type: int32 shape: [] values: 0>, _device=\"/gpu:0\"]()]]) F tensorflow/cc/tutorials/example_trainer.cc:116] Check failed: ::tensorflow::Status::OK() == (session->Run({{\"x\", x}}, {\"y:0\", \"y_normalized:0\"}, {}, &outputs)) (OK vs. Invalid argument: Cannot assign a device to node 'Const/_2': Could not satisfy explicit device specification '/gpu:0' [[Node: Const/_2 = Const[dtype=DT_INT32, value=Tensor<type: int32 shape: [] values: 0>, _device=\"/gpu:0\"]()]]) Aborted (core dumped)\nSpecifications:\nUbuntu LTS 14.04\nTitan X GPU\nCUDA 7.5", "body": "After successful bazel build, running into error when executing example with gpu. Please suggest on how to resolve. The GPU has been used with MathConvNet (another deep learning package) without this error.\n## Log:\n\n`bazel-bin/tensorflow/cc/tutorials_example_trainer --use_gpu\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcuda.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcurand.so locally\nE tensorflow/stream_executor/cuda/cuda_driver.cc:481] failed call to cuInit: CUDA_ERROR_NO_DEVICE\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:114] retrieving CUDA diagnostic information for host: en4113750l\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:121] hostname: en4113750l\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:146] libcuda reported version is: 352.63\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:257] driver version file contents: \"\"\"NVRM version: NVIDIA UNIX x86_64 Kernel Module  352.55  Thu Oct  8 15:18:00 PDT 2015\nGCC version:  gcc version 4.8.4 (Ubuntu 4.8.4-2ubuntu1~14.04) \n\"\"\"\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:150] kernel reported version is: 352.55\nE tensorflow/stream_executor/cuda/cuda_diagnostics.cc:229] kernel version 352.55 does not match DSO version 352.63 -- cannot find working devices in this configuration\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:126] DMA: \nF tensorflow/cc/tutorials/example_trainer.cc:116] Check failed: ::tensorflow::Status::OK() == (session->Run({{\"x\", x}}, {\"y:0\", \"y_normalized:0\"}, {}, &outputs)) (OK vs. Invalid argument: Cannot assign a device to node 'Const/_2': Could not satisfy explicit device specification '/gpu:0'\n     [[Node: Const/_2 = Const[dtype=DT_INT32, value=Tensor<type: int32 shape: [] values: 0>, _device=\"/gpu:0\"]()]])\nF tensorflow/cc/tutorials/example_trainer.cc:116] Check failed: ::tensorflow::Status::OK() == (session->Run({{\"x\", x}}, {\"y:0\", \"y_normalized:0\"}, {}, &outputs)) (OK vs. Invalid argument: Cannot assign a device to node 'Const/_2': Could not satisfy explicit device specification '/gpu:0'\n     [[Node: Const/_2 = Const[dtype=DT_INT32, value=Tensor<type: int32 shape: [] values: 0>, _device=\"/gpu:0\"]()]])\nF tensorflow/cc/tutorials/example_trainer.cc:116] Check failed: ::tensorflow::Status::OK() == (session->Run({{\"x\", x}}, {\"y:0\", \"y_normalized:0\"}, {}, &outputs)) (OK vs. Invalid argument: Cannot assign a device to node 'Const/_2': Could not satisfy explicit device specification '/gpu:0'\n     [[Node: Const/_2 = Const[dtype=DT_INT32, value=Tensor<type: int32 shape: [] values: 0>, _device=\"/gpu:0\"]()]])\nAborted (core dumped)`\n## Specifications:\n\nUbuntu LTS 14.04\nTitan X GPU\nCUDA 7.5\n"}