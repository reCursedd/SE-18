{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/163038033", "html_url": "https://github.com/tensorflow/tensorflow/issues/449#issuecomment-163038033", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/449", "id": 163038033, "node_id": "MDEyOklzc3VlQ29tbWVudDE2MzAzODAzMw==", "user": {"login": "girving", "id": 70511, "node_id": "MDQ6VXNlcjcwNTEx", "avatar_url": "https://avatars1.githubusercontent.com/u/70511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/girving", "html_url": "https://github.com/girving", "followers_url": "https://api.github.com/users/girving/followers", "following_url": "https://api.github.com/users/girving/following{/other_user}", "gists_url": "https://api.github.com/users/girving/gists{/gist_id}", "starred_url": "https://api.github.com/users/girving/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/girving/subscriptions", "organizations_url": "https://api.github.com/users/girving/orgs", "repos_url": "https://api.github.com/users/girving/repos", "events_url": "https://api.github.com/users/girving/events{/privacy}", "received_events_url": "https://api.github.com/users/girving/received_events", "type": "User", "site_admin": false}, "created_at": "2015-12-08T22:27:25Z", "updated_at": "2015-12-08T22:27:25Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I have this fixed at the kernel level, so it won't crash anymore.  However, I could also fix it at the shape inference level so it throws a Python exception at graph construction time.  To do this, I'd need to make <code>tf.Dimension</code> insist on nonnegative input.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=463737\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vrv\">@vrv</a>: Do you think that's wise?  I'd be a bit worried that negative dimensions are used somewhere, but it's currently a bit inconsistent that C++ <code>TensorShape</code> requires nonnegative but Python <code>TensorShape</code> does not.</p>", "body_text": "I have this fixed at the kernel level, so it won't crash anymore.  However, I could also fix it at the shape inference level so it throws a Python exception at graph construction time.  To do this, I'd need to make tf.Dimension insist on nonnegative input.\n@vrv: Do you think that's wise?  I'd be a bit worried that negative dimensions are used somewhere, but it's currently a bit inconsistent that C++ TensorShape requires nonnegative but Python TensorShape does not.", "body": "I have this fixed at the kernel level, so it won't crash anymore.  However, I could also fix it at the shape inference level so it throws a Python exception at graph construction time.  To do this, I'd need to make `tf.Dimension` insist on nonnegative input.\n\n@vrv: Do you think that's wise?  I'd be a bit worried that negative dimensions are used somewhere, but it's currently a bit inconsistent that C++ `TensorShape` requires nonnegative but Python `TensorShape` does not.\n"}