{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18531", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18531/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18531/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18531/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18531", "id": 314411841, "node_id": "MDU6SXNzdWUzMTQ0MTE4NDE=", "number": 18531, "title": "Issues running tensorflow-GPU: Couldn't open CUDA library libcuda.so.1.", "user": {"login": "TomBall1410", "id": 11526384, "node_id": "MDQ6VXNlcjExNTI2Mzg0", "avatar_url": "https://avatars2.githubusercontent.com/u/11526384?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TomBall1410", "html_url": "https://github.com/TomBall1410", "followers_url": "https://api.github.com/users/TomBall1410/followers", "following_url": "https://api.github.com/users/TomBall1410/following{/other_user}", "gists_url": "https://api.github.com/users/TomBall1410/gists{/gist_id}", "starred_url": "https://api.github.com/users/TomBall1410/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TomBall1410/subscriptions", "organizations_url": "https://api.github.com/users/TomBall1410/orgs", "repos_url": "https://api.github.com/users/TomBall1410/repos", "events_url": "https://api.github.com/users/TomBall1410/events{/privacy}", "received_events_url": "https://api.github.com/users/TomBall1410/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586558, "node_id": "MDU6TGFiZWw0MDQ1ODY1NTg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:community%20support", "name": "stat:community support", "color": "f4b400", "default": false}, {"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-04-15T12:34:18Z", "updated_at": "2018-05-29T14:29:24Z", "closed_at": "2018-05-29T14:29:24Z", "author_association": "NONE", "body_html": "<p>Have I written custom code: No<br>\nOS Platform and Distribution: Scientific Linux release 6.9 (Carbon)<br>\nTensorFlow installed from: wheel<br>\nTensorFlow version: 0.11.0rc0<br>\nBazel version: N/A<br>\nCUDA/cuDNN version: 7.5 / N/A<br>\nGPU model and memory: Tesla K20m 5GB<br>\nExact command to reproduce: Error occurs when importing tensorflow</p>\n<p>I am having issues running tensorflow-gpu on the cluster computer at my university. There are a number of Tesla K20m GPUs available.</p>\n<p>The system only has CUDA 7.5 installed so I installed tensorflow in a conda environment using a wheel from version 0.11 which supports CUDA 7.5. I also needed to use the dirty trick posted <a href=\"https://stackoverflow.com/questions/33655731/error-while-importing-tensorflow-in-python2-7-in-ubuntu-12-04-glibc-2-17-not-f?utm_medium=organic&amp;utm_source=google_rich_qa&amp;utm_campaign=google_rich_qa\" rel=\"nofollow\">here</a> to get this wheel to work, as we have GLIC_2.12 installed. However I don't think the above is causing the problem I am now facing.</p>\n<p>When I try and run Tensorflow I get the following error:</p>\n<pre><code>I tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] Couldn't open CUDA library libcudnn.so. LD_LIBRARY_PATH: /cm/shared/apps/cuda/7.5/lib64:/cm/shared/apps/cuda/7.5/targets/x86_64-linux/lib\nI tensorflow/stream_executor/cuda/cuda_dnn.cc:3448] Unable to load cuDNN DSO\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] Couldn't open CUDA library libcuda.so.1. LD_LIBRARY_PATH: /its/home/tjb32/new-tensorflow-workspace/glib-download/libc6_2.17/lib/x86_64-linux-gnu/:/its/home/tjb32/new-tensorflow-workspace/glib-download/libc6_2.17/usr/lib64/:/cm/shared/apps/cuda/7.5/lib64:/cm/shared/apps/cuda/7.5/targets/x86_64-linux/lib\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:160] hostname: node152\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:185] libcuda reported version is: Not found: was unable to find libcuda.so DSO loaded into this program\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:189] kernel reported version is: Permission denied: could not open driver version path for reading: /proc/driver/nvidia/version\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1080] LD_LIBRARY_PATH: /its/home/tjb32/new-tensorflow-workspace/glib-download/libc6_2.17/lib/x86_64-linux-gnu/:/its/home/tjb32/new-tensorflow-workspace/glib-download/libc6_2.17/usr/lib64/:/cm/shared/apps/cuda/7.5/lib64:/cm/shared/apps/cuda/7.5/targets/x86_64-linux/lib\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1081] failed to find libcuda.so on this system: Failed precondition: could not dlopen DSO: libcuda.so.1; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcurand.so locally\nE tensorflow/stream_executor/cuda/cuda_driver.cc:491] failed call to cuInit: CUDA_ERROR_NO_DEVICE\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:140] kernel driver does not appear to be running on this host (node152): /proc/driver/nvidia/version does not exist\n\n</code></pre>\n<p>I know cuDNN isn't installed on the system, but it seems the fatal error is the fact the tenorflow cannot find libcuda.so.1.</p>\n<p>Running <code>locate libcuda*</code> on a login node returns the following: <code>/usr/lib64/nvidia/libcuda.so /usr/lib64/nvidia/libcuda.so.1 /usr/lib64/nvidia/libcuda.so.384.98</code></p>\n<p>I can also find libcuda.so if I navigate to the <code>/cm/shared/apps/conda/7.5/lib64/stubs</code>.</p>\n<p>However if I add <code>locate libcuda*</code> to the job I submit to the GPU queue it returns nothing. So adding the <code>/usr/lib64/nvidia</code> to my path does not solve the issue. It seems that the GPU nodes do not have access to llibcuda.so leading CUDA to believe there is no GPU device.</p>\n<p>Am I missing some additional configuration that I need to do to get Tensorflow working? Or is this more likely an issue with the underlying CUDA installation that I will need to get an system admin to help with?</p>", "body_text": "Have I written custom code: No\nOS Platform and Distribution: Scientific Linux release 6.9 (Carbon)\nTensorFlow installed from: wheel\nTensorFlow version: 0.11.0rc0\nBazel version: N/A\nCUDA/cuDNN version: 7.5 / N/A\nGPU model and memory: Tesla K20m 5GB\nExact command to reproduce: Error occurs when importing tensorflow\nI am having issues running tensorflow-gpu on the cluster computer at my university. There are a number of Tesla K20m GPUs available.\nThe system only has CUDA 7.5 installed so I installed tensorflow in a conda environment using a wheel from version 0.11 which supports CUDA 7.5. I also needed to use the dirty trick posted here to get this wheel to work, as we have GLIC_2.12 installed. However I don't think the above is causing the problem I am now facing.\nWhen I try and run Tensorflow I get the following error:\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] Couldn't open CUDA library libcudnn.so. LD_LIBRARY_PATH: /cm/shared/apps/cuda/7.5/lib64:/cm/shared/apps/cuda/7.5/targets/x86_64-linux/lib\nI tensorflow/stream_executor/cuda/cuda_dnn.cc:3448] Unable to load cuDNN DSO\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] Couldn't open CUDA library libcuda.so.1. LD_LIBRARY_PATH: /its/home/tjb32/new-tensorflow-workspace/glib-download/libc6_2.17/lib/x86_64-linux-gnu/:/its/home/tjb32/new-tensorflow-workspace/glib-download/libc6_2.17/usr/lib64/:/cm/shared/apps/cuda/7.5/lib64:/cm/shared/apps/cuda/7.5/targets/x86_64-linux/lib\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:160] hostname: node152\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:185] libcuda reported version is: Not found: was unable to find libcuda.so DSO loaded into this program\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:189] kernel reported version is: Permission denied: could not open driver version path for reading: /proc/driver/nvidia/version\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1080] LD_LIBRARY_PATH: /its/home/tjb32/new-tensorflow-workspace/glib-download/libc6_2.17/lib/x86_64-linux-gnu/:/its/home/tjb32/new-tensorflow-workspace/glib-download/libc6_2.17/usr/lib64/:/cm/shared/apps/cuda/7.5/lib64:/cm/shared/apps/cuda/7.5/targets/x86_64-linux/lib\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1081] failed to find libcuda.so on this system: Failed precondition: could not dlopen DSO: libcuda.so.1; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcurand.so locally\nE tensorflow/stream_executor/cuda/cuda_driver.cc:491] failed call to cuInit: CUDA_ERROR_NO_DEVICE\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:140] kernel driver does not appear to be running on this host (node152): /proc/driver/nvidia/version does not exist\n\n\nI know cuDNN isn't installed on the system, but it seems the fatal error is the fact the tenorflow cannot find libcuda.so.1.\nRunning locate libcuda* on a login node returns the following: /usr/lib64/nvidia/libcuda.so /usr/lib64/nvidia/libcuda.so.1 /usr/lib64/nvidia/libcuda.so.384.98\nI can also find libcuda.so if I navigate to the /cm/shared/apps/conda/7.5/lib64/stubs.\nHowever if I add locate libcuda* to the job I submit to the GPU queue it returns nothing. So adding the /usr/lib64/nvidia to my path does not solve the issue. It seems that the GPU nodes do not have access to llibcuda.so leading CUDA to believe there is no GPU device.\nAm I missing some additional configuration that I need to do to get Tensorflow working? Or is this more likely an issue with the underlying CUDA installation that I will need to get an system admin to help with?", "body": "Have I written custom code: No\r\nOS Platform and Distribution: Scientific Linux release 6.9 (Carbon)\r\nTensorFlow installed from: wheel\r\nTensorFlow version: 0.11.0rc0\r\nBazel version: N/A\r\nCUDA/cuDNN version: 7.5 / N/A\r\nGPU model and memory: Tesla K20m 5GB\r\nExact command to reproduce: Error occurs when importing tensorflow \r\n\r\nI am having issues running tensorflow-gpu on the cluster computer at my university. There are a number of Tesla K20m GPUs available. \r\n \r\nThe system only has CUDA 7.5 installed so I installed tensorflow in a conda environment using a wheel from version 0.11 which supports CUDA 7.5. I also needed to use the dirty trick posted [here](https://stackoverflow.com/questions/33655731/error-while-importing-tensorflow-in-python2-7-in-ubuntu-12-04-glibc-2-17-not-f?utm_medium=organic&utm_source=google_rich_qa&utm_campaign=google_rich_qa) to get this wheel to work, as we have GLIC_2.12 installed. However I don't think the above is causing the problem I am now facing. \r\n\r\nWhen I try and run Tensorflow I get the following error:\r\n\r\n```\r\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcublas.so locally\r\nI tensorflow/stream_executor/dso_loader.cc:105] Couldn't open CUDA library libcudnn.so. LD_LIBRARY_PATH: /cm/shared/apps/cuda/7.5/lib64:/cm/shared/apps/cuda/7.5/targets/x86_64-linux/lib\r\nI tensorflow/stream_executor/cuda/cuda_dnn.cc:3448] Unable to load cuDNN DSO\r\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcufft.so locally\r\nI tensorflow/stream_executor/dso_loader.cc:105] Couldn't open CUDA library libcuda.so.1. LD_LIBRARY_PATH: /its/home/tjb32/new-tensorflow-workspace/glib-download/libc6_2.17/lib/x86_64-linux-gnu/:/its/home/tjb32/new-tensorflow-workspace/glib-download/libc6_2.17/usr/lib64/:/cm/shared/apps/cuda/7.5/lib64:/cm/shared/apps/cuda/7.5/targets/x86_64-linux/lib\r\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:160] hostname: node152\r\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:185] libcuda reported version is: Not found: was unable to find libcuda.so DSO loaded into this program\r\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:189] kernel reported version is: Permission denied: could not open driver version path for reading: /proc/driver/nvidia/version\r\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1080] LD_LIBRARY_PATH: /its/home/tjb32/new-tensorflow-workspace/glib-download/libc6_2.17/lib/x86_64-linux-gnu/:/its/home/tjb32/new-tensorflow-workspace/glib-download/libc6_2.17/usr/lib64/:/cm/shared/apps/cuda/7.5/lib64:/cm/shared/apps/cuda/7.5/targets/x86_64-linux/lib\r\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1081] failed to find libcuda.so on this system: Failed precondition: could not dlopen DSO: libcuda.so.1; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory\r\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcurand.so locally\r\nE tensorflow/stream_executor/cuda/cuda_driver.cc:491] failed call to cuInit: CUDA_ERROR_NO_DEVICE\r\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:140] kernel driver does not appear to be running on this host (node152): /proc/driver/nvidia/version does not exist\r\n\r\n```\r\n\r\nI know cuDNN isn't installed on the system, but it seems the fatal error is the fact the tenorflow cannot find libcuda.so.1.\r\n\r\nRunning `locate libcuda*` on a login node returns the following: `/usr/lib64/nvidia/libcuda.so\r\n/usr/lib64/nvidia/libcuda.so.1\r\n/usr/lib64/nvidia/libcuda.so.384.98`\r\n\r\nI can also find libcuda.so if I navigate to the `/cm/shared/apps/conda/7.5/lib64/stubs`. \r\n\r\nHowever if I add `locate libcuda*` to the job I submit to the GPU queue it returns nothing. So adding the `/usr/lib64/nvidia` to my path does not solve the issue. It seems that the GPU nodes do not have access to llibcuda.so leading CUDA to believe there is no GPU device. \r\n\r\nAm I missing some additional configuration that I need to do to get Tensorflow working? Or is this more likely an issue with the underlying CUDA installation that I will need to get an system admin to help with?\r\n\r\n"}