{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/163754255", "html_url": "https://github.com/tensorflow/tensorflow/issues/3#issuecomment-163754255", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3", "id": 163754255, "node_id": "MDEyOklzc3VlQ29tbWVudDE2Mzc1NDI1NQ==", "user": {"login": "kovasb", "id": 184241, "node_id": "MDQ6VXNlcjE4NDI0MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/184241?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kovasb", "html_url": "https://github.com/kovasb", "followers_url": "https://api.github.com/users/kovasb/followers", "following_url": "https://api.github.com/users/kovasb/following{/other_user}", "gists_url": "https://api.github.com/users/kovasb/gists{/gist_id}", "starred_url": "https://api.github.com/users/kovasb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kovasb/subscriptions", "organizations_url": "https://api.github.com/users/kovasb/orgs", "repos_url": "https://api.github.com/users/kovasb/repos", "events_url": "https://api.github.com/users/kovasb/events{/privacy}", "received_events_url": "https://api.github.com/users/kovasb/received_events", "type": "User", "site_admin": false}, "created_at": "2015-12-10T21:26:47Z", "updated_at": "2015-12-10T21:26:47Z", "author_association": "NONE", "body_html": "<p>I don't fully grasp the architecture/order of operations, but could one populate the gradients using python, while still calling into the C++ code via a bridge?</p>\n<p>Alternatively: Run the python code once to generate the gradients for every op, serialize all those gradients to a file, and then other runtimes can read them off and register them?</p>", "body_text": "I don't fully grasp the architecture/order of operations, but could one populate the gradients using python, while still calling into the C++ code via a bridge?\nAlternatively: Run the python code once to generate the gradients for every op, serialize all those gradients to a file, and then other runtimes can read them off and register them?", "body": "I don't fully grasp the architecture/order of operations, but could one populate the gradients using python, while still calling into the C++ code via a bridge?\n\nAlternatively: Run the python code once to generate the gradients for every op, serialize all those gradients to a file, and then other runtimes can read them off and register them?\n"}