{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/409059390", "html_url": "https://github.com/tensorflow/tensorflow/issues/21230#issuecomment-409059390", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21230", "id": 409059390, "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTA1OTM5MA==", "user": {"login": "pcub", "id": 7065417, "node_id": "MDQ6VXNlcjcwNjU0MTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7065417?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcub", "html_url": "https://github.com/pcub", "followers_url": "https://api.github.com/users/pcub/followers", "following_url": "https://api.github.com/users/pcub/following{/other_user}", "gists_url": "https://api.github.com/users/pcub/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcub/subscriptions", "organizations_url": "https://api.github.com/users/pcub/orgs", "repos_url": "https://api.github.com/users/pcub/repos", "events_url": "https://api.github.com/users/pcub/events{/privacy}", "received_events_url": "https://api.github.com/users/pcub/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-31T00:59:25Z", "updated_at": "2018-07-31T01:35:28Z", "author_association": "NONE", "body_html": "<p>thanks <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=25754898\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/andrehentz\">@andrehentz</a> ,</p>\n<ol>\n<li>The link you provided seems exactly same as what tensorflow object detection api offers. My model structure is different from the tf model zoo models. e.g.,</li>\n</ol>\n<pre><code>with tf.name_scope(\"conv0\"):\n        layers['conv0'] = conv_layer(layers['input'], weights['conv0'], biases['conv0'], s=2)\n...\n\n</code></pre>\n<p>this is part of how my model is generated and end of this kind of code, I added multiclass_non_max_suppression function (obtained from tf api).<br>\nis there any way to manually add this functionality in tf-lite?</p>\n<ol start=\"2\">\n<li>in export_tflite_ssd_graph, there is add_postprocessing flag to add custom op. in pipeline.config code there is</li>\n</ol>\n<pre><code>post_processing {\n      batch_non_max_suppression {\n        score_threshold: 1e-8\n        iou_threshold: 0.6\n        max_detections_per_class: 100\n        max_total_detections: 100\n      }\n      score_converter: SIGMOID\n    }\n</code></pre>\n<p>it seems, batch_non_max_suppression eventually use tf.image.non_max_suppression right?<br>\nbut the function multiclass_non_max_suppression that I use also uses tf.image.non_max_suppression inside it.</p>\n<p>thanks,</p>", "body_text": "thanks @andrehentz ,\n\nThe link you provided seems exactly same as what tensorflow object detection api offers. My model structure is different from the tf model zoo models. e.g.,\n\nwith tf.name_scope(\"conv0\"):\n        layers['conv0'] = conv_layer(layers['input'], weights['conv0'], biases['conv0'], s=2)\n...\n\n\nthis is part of how my model is generated and end of this kind of code, I added multiclass_non_max_suppression function (obtained from tf api).\nis there any way to manually add this functionality in tf-lite?\n\nin export_tflite_ssd_graph, there is add_postprocessing flag to add custom op. in pipeline.config code there is\n\npost_processing {\n      batch_non_max_suppression {\n        score_threshold: 1e-8\n        iou_threshold: 0.6\n        max_detections_per_class: 100\n        max_total_detections: 100\n      }\n      score_converter: SIGMOID\n    }\n\nit seems, batch_non_max_suppression eventually use tf.image.non_max_suppression right?\nbut the function multiclass_non_max_suppression that I use also uses tf.image.non_max_suppression inside it.\nthanks,", "body": "thanks @andrehentz ,\r\n1. The link you provided seems exactly same as what tensorflow object detection api offers. My model structure is different from the tf model zoo models. e.g.,\r\n```\r\nwith tf.name_scope(\"conv0\"):\r\n        layers['conv0'] = conv_layer(layers['input'], weights['conv0'], biases['conv0'], s=2)\r\n...\r\n\r\n```\r\nthis is part of how my model is generated and end of this kind of code, I added multiclass_non_max_suppression function (obtained from tf api). \r\nis there any way to manually add this functionality in tf-lite?\r\n\r\n2. in export_tflite_ssd_graph, there is add_postprocessing flag to add custom op. in pipeline.config code there is \r\n\r\n```\r\npost_processing {\r\n      batch_non_max_suppression {\r\n        score_threshold: 1e-8\r\n        iou_threshold: 0.6\r\n        max_detections_per_class: 100\r\n        max_total_detections: 100\r\n      }\r\n      score_converter: SIGMOID\r\n    }\r\n```\r\nit seems, batch_non_max_suppression eventually use tf.image.non_max_suppression right?\r\nbut the function multiclass_non_max_suppression that I use also uses tf.image.non_max_suppression inside it.\r\n\r\nthanks,"}