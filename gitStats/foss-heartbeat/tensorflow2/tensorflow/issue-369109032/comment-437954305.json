{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/437954305", "html_url": "https://github.com/tensorflow/tensorflow/issues/22897#issuecomment-437954305", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22897", "id": 437954305, "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzk1NDMwNQ==", "user": {"login": "aselle", "id": 326106, "node_id": "MDQ6VXNlcjMyNjEwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/326106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aselle", "html_url": "https://github.com/aselle", "followers_url": "https://api.github.com/users/aselle/followers", "following_url": "https://api.github.com/users/aselle/following{/other_user}", "gists_url": "https://api.github.com/users/aselle/gists{/gist_id}", "starred_url": "https://api.github.com/users/aselle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aselle/subscriptions", "organizations_url": "https://api.github.com/users/aselle/orgs", "repos_url": "https://api.github.com/users/aselle/repos", "events_url": "https://api.github.com/users/aselle/events{/privacy}", "received_events_url": "https://api.github.com/users/aselle/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-12T16:57:31Z", "updated_at": "2018-11-12T16:57:31Z", "author_association": "MEMBER", "body_html": "<p>The version in tf-nightly does work ( I verified it ).<br>\nMany people on this thread are saying \"they have the same problem\" as the original issue. This is not the case as @notibus' original issue was that the converter was not running at all maybe... but it is hard to tell because it is not a reproducible test case since I do not have your pb file. Try my example below.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=32252431\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/cjr0106\">@cjr0106</a>'s issue was that the model is not supported or the arguments are wrong (but <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=32252431\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/cjr0106\">@cjr0106</a> would need to post what they ran exactly and what model for us to help).</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=9158995\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/CreateChance\">@CreateChance</a>'s issue has to do with an improper input shape because you are using a wrong command line<br>\n<em>--input_shape=0,0,0,3</em><br>\nShape 0 is not valid. Use a real shape.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=40169177\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/RenanSch\">@RenanSch</a>, tf-nightly has the fix.</p>\n<p>If you want to verify you have a working Windows converter and python interpreter path run the below python script. It makes a simple tensorflow model, converts it to tflite and runs it in tflite It should produce a tensor of all 2's</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Make a simple model</span>\na <span class=\"pl-k\">=</span> tf.placeholder(<span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">4</span>,<span class=\"pl-c1\">4</span>,<span class=\"pl-c1\">3</span>), <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.float32)\nc <span class=\"pl-k\">=</span> a<span class=\"pl-k\">+</span>a\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Convert the model to tflite (and write a tflite file for fun)</span>\nsess<span class=\"pl-k\">=</span>tf.Session()\nlite <span class=\"pl-k\">=</span> tf.contrib.lite.TFLiteConverter.from_session(sess, [a],[c]).convert()\n<span class=\"pl-k\">with</span> <span class=\"pl-c1\">open</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>simple_model.tflite<span class=\"pl-pds\">\"</span></span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>wb<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">as</span> fp:\n  fp.write(lite)\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Now Run the model</span>\nwoot <span class=\"pl-k\">=</span> tf.contrib.lite.Interpreter(<span class=\"pl-v\">model_path</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>simple_model.tflite<span class=\"pl-pds\">\"</span></span>)\n<span class=\"pl-c1\">input</span> <span class=\"pl-k\">=</span> woot.get_input_details()[<span class=\"pl-c1\">0</span>]\nwoot.allocate_tensors()\nwoot.set_tensor(<span class=\"pl-c1\">input</span>[<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>index<span class=\"pl-pds\">\"</span></span>], np.ones(<span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>np.float32,<span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">4</span>,<span class=\"pl-c1\">4</span>,<span class=\"pl-c1\">3</span>)))\nwoot.invoke()\n<span class=\"pl-c1\">print</span>(woot.get_tensor(woot.get_output_details()[<span class=\"pl-c1\">0</span>][<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>index<span class=\"pl-pds\">\"</span></span>]))\n</pre></div>", "body_text": "The version in tf-nightly does work ( I verified it ).\nMany people on this thread are saying \"they have the same problem\" as the original issue. This is not the case as @notibus' original issue was that the converter was not running at all maybe... but it is hard to tell because it is not a reproducible test case since I do not have your pb file. Try my example below.\n@cjr0106's issue was that the model is not supported or the arguments are wrong (but @cjr0106 would need to post what they ran exactly and what model for us to help).\n@CreateChance's issue has to do with an improper input shape because you are using a wrong command line\n--input_shape=0,0,0,3\nShape 0 is not valid. Use a real shape.\n@RenanSch, tf-nightly has the fix.\nIf you want to verify you have a working Windows converter and python interpreter path run the below python script. It makes a simple tensorflow model, converts it to tflite and runs it in tflite It should produce a tensor of all 2's\nimport tensorflow as tf\nimport numpy as np\n\n# Make a simple model\na = tf.placeholder(shape=(1,4,4,3), dtype=tf.float32)\nc = a+a\n\n# Convert the model to tflite (and write a tflite file for fun)\nsess=tf.Session()\nlite = tf.contrib.lite.TFLiteConverter.from_session(sess, [a],[c]).convert()\nwith open(\"simple_model.tflite\",\"wb\") as fp:\n  fp.write(lite)\n\n# Now Run the model\nwoot = tf.contrib.lite.Interpreter(model_path=\"simple_model.tflite\")\ninput = woot.get_input_details()[0]\nwoot.allocate_tensors()\nwoot.set_tensor(input[\"index\"], np.ones(dtype=np.float32,shape=(1,4,4,3)))\nwoot.invoke()\nprint(woot.get_tensor(woot.get_output_details()[0][\"index\"]))", "body": "The version in tf-nightly does work ( I verified it ). \r\nMany people on this thread are saying \"they have the same problem\" as the original issue. This is not the case as @notibus' original issue was that the converter was not running at all maybe... but it is hard to tell because it is not a reproducible test case since I do not have your pb file. Try my example below.\r\n\r\n@cjr0106's issue was that the model is not supported or the arguments are wrong (but @cjr0106 would need to post what they ran exactly and what model for us to help).\r\n\r\n@CreateChance's issue has to do with an improper input shape because you are using a wrong command line\r\n*--input_shape=0,0,0,3*\r\nShape 0 is not valid. Use a real shape.\r\n\r\n@RenanSch, tf-nightly has the fix.\r\n\r\nIf you want to verify you have a working Windows converter and python interpreter path run the below python script. It makes a simple tensorflow model, converts it to tflite and runs it in tflite It should produce a tensor of all 2's\r\n\r\n```python\r\nimport tensorflow as tf\r\nimport numpy as np\r\n\r\n# Make a simple model\r\na = tf.placeholder(shape=(1,4,4,3), dtype=tf.float32)\r\nc = a+a\r\n\r\n# Convert the model to tflite (and write a tflite file for fun)\r\nsess=tf.Session()\r\nlite = tf.contrib.lite.TFLiteConverter.from_session(sess, [a],[c]).convert()\r\nwith open(\"simple_model.tflite\",\"wb\") as fp:\r\n  fp.write(lite)\r\n\r\n# Now Run the model\r\nwoot = tf.contrib.lite.Interpreter(model_path=\"simple_model.tflite\")\r\ninput = woot.get_input_details()[0]\r\nwoot.allocate_tensors()\r\nwoot.set_tensor(input[\"index\"], np.ones(dtype=np.float32,shape=(1,4,4,3)))\r\nwoot.invoke()\r\nprint(woot.get_tensor(woot.get_output_details()[0][\"index\"]))\r\n\r\n```\r\n"}