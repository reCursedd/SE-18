{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/160861346", "pull_request_review_id": 88053184, "id": 160861346, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDg2MTM0Ng==", "diff_hunk": "@@ -348,6 +348,82 @@ def testAIS2(self):\n   def testAIS12(self):\n     self._ais_gets_correct_log_normalizer_wrapper([1, 2])\n \n+  def _skip_metropolis_step_correct(self, initial_draws, event_dims,\n+                                    sess, feed_dict=None):\n+    def log_gamma_log_prob(x):\n+      return self._log_gamma_log_prob(x, event_dims)\n+\n+    step_size = array_ops.placeholder(np.float32, [], name='step_size')\n+\n+    if feed_dict is None:\n+      feed_dict = {}\n+\n+    feed_dict[step_size] = 0.4\n+\n+    sample, acceptance_probs, _, _ = hmc.kernel(step_size, 5, initial_draws,\n+                                                log_gamma_log_prob, event_dims)\n+    skip_sample, skip_acceptance_probs, _, _ = hmc.kernel(\n+      step_size, 5, initial_draws, log_gamma_log_prob, event_dims,\n+      skip_metropolis_step=True)\n+\n+    # Need to set the same seed to make the velocity samples same\n+    seed = np.random.randint(0, np.iinfo(np.uint32).max)", "path": "tensorflow/contrib/bayesflow/python/kernel_tests/hmc_test.py", "position": 23, "original_position": 23, "commit_id": "c457cb20e1f251f41f9086f229a7779c98860111", "original_commit_id": "c457cb20e1f251f41f9086f229a7779c98860111", "user": {"login": "langmore", "id": 178152, "node_id": "MDQ6VXNlcjE3ODE1Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/178152?v=4", "gravatar_id": "", "url": "https://api.github.com/users/langmore", "html_url": "https://github.com/langmore", "followers_url": "https://api.github.com/users/langmore/followers", "following_url": "https://api.github.com/users/langmore/following{/other_user}", "gists_url": "https://api.github.com/users/langmore/gists{/gist_id}", "starred_url": "https://api.github.com/users/langmore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/langmore/subscriptions", "organizations_url": "https://api.github.com/users/langmore/orgs", "repos_url": "https://api.github.com/users/langmore/repos", "events_url": "https://api.github.com/users/langmore/events{/privacy}", "received_events_url": "https://api.github.com/users/langmore/received_events", "type": "User", "site_admin": false}, "body": "Rather than making `seed` random, just choose some fixed integer.  That will prevent flakes in the rare event when you get an unlucky seed.", "created_at": "2018-01-11T04:07:31Z", "updated_at": "2018-01-11T04:07:31Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/14237#discussion_r160861346", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/14237", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/160861346"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/14237#discussion_r160861346"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/14237"}}, "body_html": "<p>Rather than making <code>seed</code> random, just choose some fixed integer.  That will prevent flakes in the rare event when you get an unlucky seed.</p>", "body_text": "Rather than making seed random, just choose some fixed integer.  That will prevent flakes in the rare event when you get an unlucky seed."}