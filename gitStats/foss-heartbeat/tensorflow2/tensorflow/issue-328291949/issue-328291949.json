{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19677", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19677/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19677/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19677/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19677", "id": 328291949, "node_id": "MDU6SXNzdWUzMjgyOTE5NDk=", "number": 19677, "title": "Inconsistent calculation of complex derivatives", "user": {"login": "tsiaras", "id": 590004, "node_id": "MDQ6VXNlcjU5MDAwNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/590004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tsiaras", "html_url": "https://github.com/tsiaras", "followers_url": "https://api.github.com/users/tsiaras/followers", "following_url": "https://api.github.com/users/tsiaras/following{/other_user}", "gists_url": "https://api.github.com/users/tsiaras/gists{/gist_id}", "starred_url": "https://api.github.com/users/tsiaras/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tsiaras/subscriptions", "organizations_url": "https://api.github.com/users/tsiaras/orgs", "repos_url": "https://api.github.com/users/tsiaras/repos", "events_url": "https://api.github.com/users/tsiaras/events{/privacy}", "received_events_url": "https://api.github.com/users/tsiaras/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "alextp", "id": 5061, "node_id": "MDQ6VXNlcjUwNjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alextp", "html_url": "https://github.com/alextp", "followers_url": "https://api.github.com/users/alextp/followers", "following_url": "https://api.github.com/users/alextp/following{/other_user}", "gists_url": "https://api.github.com/users/alextp/gists{/gist_id}", "starred_url": "https://api.github.com/users/alextp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alextp/subscriptions", "organizations_url": "https://api.github.com/users/alextp/orgs", "repos_url": "https://api.github.com/users/alextp/repos", "events_url": "https://api.github.com/users/alextp/events{/privacy}", "received_events_url": "https://api.github.com/users/alextp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "alextp", "id": 5061, "node_id": "MDQ6VXNlcjUwNjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alextp", "html_url": "https://github.com/alextp", "followers_url": "https://api.github.com/users/alextp/followers", "following_url": "https://api.github.com/users/alextp/following{/other_user}", "gists_url": "https://api.github.com/users/alextp/gists{/gist_id}", "starred_url": "https://api.github.com/users/alextp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alextp/subscriptions", "organizations_url": "https://api.github.com/users/alextp/orgs", "repos_url": "https://api.github.com/users/alextp/repos", "events_url": "https://api.github.com/users/alextp/events{/privacy}", "received_events_url": "https://api.github.com/users/alextp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2018-05-31T20:49:39Z", "updated_at": "2018-07-16T18:41:17Z", "closed_at": "2018-07-16T18:41:16Z", "author_association": "NONE", "body_html": "<p>Please go to Stack Overflow for help and support:</p>\n<p><a href=\"https://stackoverflow.com/questions/tagged/tensorflow\" rel=\"nofollow\">https://stackoverflow.com/questions/tagged/tensorflow</a></p>\n<p>If you open a GitHub issue, here is our policy:</p>\n<ol>\n<li>It must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).</li>\n<li>The form below must be filled out.</li>\n<li>It shouldn't be a TensorBoard issue. Those go <a href=\"https://github.com/tensorflow/tensorboard/issues\">here</a>.</li>\n</ol>\n<p><strong>Here's why we have that policy</strong>: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.</p>\n<hr>\n<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu 16.04.4 LTS</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.7.0 and 1.8.0</li>\n<li><strong>Python version</strong>:  2.7.12</li>\n<li><strong>Bazel version (if compiling from source)</strong>:</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:</li>\n<li><strong>CUDA/cuDNN version</strong>:  the problem is in both cpu and gpu tensorflow</li>\n<li><strong>GPU model and memory</strong>: nvidia 1080 ti</li>\n<li><strong>Exact command to reproduce</strong>: see the code below</li>\n</ul>\n<p>You can collect some of this information using our environment capture script:</p>\n<p><a href=\"https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\">https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh</a></p>\n<p>You can obtain the TensorFlow version with</p>\n<p>python -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"</p>\n<h3>Describe the problem</h3>\n<p>Describe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.</p>\n<p>I run a simple code in tensorflow 1.7.0 and then in 1.8.0, which calculates gradients of a function of complex variables and I got a very strange behaviour especially in tensorflow 1.8.0. See the code and the output.</p>\n<h3>Source code / logs</h3>\n<p>Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.</p>\n<pre><code>from __future__ import print_function\nimport numpy as np\nimport tensorflow as tf\n\nx1 = tf.placeholder(shape=(), dtype=tf.complex64, name='x1')\nx2 = tf.placeholder(shape=(), dtype=tf.complex64, name='x2')\n\nx1_value = np.complex(1.0, 2.0)\nx2_value = np.complex(4.0, 1.0)\n\nsess = tf.Session()\n\ninit_op = tf.global_variables_initializer()\n\nsess.run(init_op)\n\nx1c = tf.conj(x1)\nx2c = tf.conj(x2)\n\ny1 = 2*x1*tf.log(x2c) \ny2 = 2*x1c*tf.log(x2)\ny = y1 + y2\n\n# Print the partial derivative of y evaluated at x1_value and x2_value\nprint('tf one sess.run', sess.run(tf.conj(tf.gradients(y, x1, tf.constant(1, dtype=tf.complex64))), feed_dict={x1:x1_value, x2:x2_value}))\n\n# Print the partial derivative of y1 evaluated at x1_value and x2_value + the partial derivative of y2 evaluated at x1_value and x2_value\nprint('tf, two sess.run', sess.run(tf.conj(tf.gradients(y1, x1, tf.constant(1, dtype=tf.complex64))), feed_dict={x1:x1_value, x2:x2_value}) + sess.run(tf.conj(tf.gradients(y2, x1, tf.constant(1, dtype=tf.complex64))), feed_dict={x1:x1_value, x2:x2_value}))\n\nprint('np, hand computed partial derivative', 2*np.log(np.conj(x2_value))  + 2*np.log(x2_value))\n\n# Output\nTensorflow 1.7.0\ntf one sess.run [5.6664267-0.97991467j]\ntf, two sess.run [5.6664267-0.97991467j]\nnp, hand computed partial derivative (5.66642668811+0j)\n\nTensorflow 1.8.0\ntf one sess.run [5.6664267-0.97991467j]\ntf, two sess.run [5.6664267+0.j]\nnp, hand computed partial derivative (5.66642668811+0j)\n</code></pre>", "body_text": "Please go to Stack Overflow for help and support:\nhttps://stackoverflow.com/questions/tagged/tensorflow\nIf you open a GitHub issue, here is our policy:\n\nIt must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).\nThe form below must be filled out.\nIt shouldn't be a TensorBoard issue. Those go here.\n\nHere's why we have that policy: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\n\nSystem information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04.4 LTS\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): 1.7.0 and 1.8.0\nPython version:  2.7.12\nBazel version (if compiling from source):\nGCC/Compiler version (if compiling from source):\nCUDA/cuDNN version:  the problem is in both cpu and gpu tensorflow\nGPU model and memory: nvidia 1080 ti\nExact command to reproduce: see the code below\n\nYou can collect some of this information using our environment capture script:\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\nYou can obtain the TensorFlow version with\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\nDescribe the problem\nDescribe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.\nI run a simple code in tensorflow 1.7.0 and then in 1.8.0, which calculates gradients of a function of complex variables and I got a very strange behaviour especially in tensorflow 1.8.0. See the code and the output.\nSource code / logs\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.\nfrom __future__ import print_function\nimport numpy as np\nimport tensorflow as tf\n\nx1 = tf.placeholder(shape=(), dtype=tf.complex64, name='x1')\nx2 = tf.placeholder(shape=(), dtype=tf.complex64, name='x2')\n\nx1_value = np.complex(1.0, 2.0)\nx2_value = np.complex(4.0, 1.0)\n\nsess = tf.Session()\n\ninit_op = tf.global_variables_initializer()\n\nsess.run(init_op)\n\nx1c = tf.conj(x1)\nx2c = tf.conj(x2)\n\ny1 = 2*x1*tf.log(x2c) \ny2 = 2*x1c*tf.log(x2)\ny = y1 + y2\n\n# Print the partial derivative of y evaluated at x1_value and x2_value\nprint('tf one sess.run', sess.run(tf.conj(tf.gradients(y, x1, tf.constant(1, dtype=tf.complex64))), feed_dict={x1:x1_value, x2:x2_value}))\n\n# Print the partial derivative of y1 evaluated at x1_value and x2_value + the partial derivative of y2 evaluated at x1_value and x2_value\nprint('tf, two sess.run', sess.run(tf.conj(tf.gradients(y1, x1, tf.constant(1, dtype=tf.complex64))), feed_dict={x1:x1_value, x2:x2_value}) + sess.run(tf.conj(tf.gradients(y2, x1, tf.constant(1, dtype=tf.complex64))), feed_dict={x1:x1_value, x2:x2_value}))\n\nprint('np, hand computed partial derivative', 2*np.log(np.conj(x2_value))  + 2*np.log(x2_value))\n\n# Output\nTensorflow 1.7.0\ntf one sess.run [5.6664267-0.97991467j]\ntf, two sess.run [5.6664267-0.97991467j]\nnp, hand computed partial derivative (5.66642668811+0j)\n\nTensorflow 1.8.0\ntf one sess.run [5.6664267-0.97991467j]\ntf, two sess.run [5.6664267+0.j]\nnp, hand computed partial derivative (5.66642668811+0j)", "body": "Please go to Stack Overflow for help and support:\r\n\r\nhttps://stackoverflow.com/questions/tagged/tensorflow\r\n\r\nIf you open a GitHub issue, here is our policy:\r\n\r\n1. It must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).\r\n2. The form below must be filled out.\r\n3. It shouldn't be a TensorBoard issue. Those go [here](https://github.com/tensorflow/tensorboard/issues).\r\n\r\n**Here's why we have that policy**: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04.4 LTS\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.7.0 and 1.8.0\r\n- **Python version**:  2.7.12\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**:  the problem is in both cpu and gpu tensorflow\r\n- **GPU model and memory**: nvidia 1080 ti\r\n- **Exact command to reproduce**: see the code below\r\n\r\nYou can collect some of this information using our environment capture script:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\nYou can obtain the TensorFlow version with\r\n\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n\r\n### Describe the problem\r\nDescribe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.\r\n\r\nI run a simple code in tensorflow 1.7.0 and then in 1.8.0, which calculates gradients of a function of complex variables and I got a very strange behaviour especially in tensorflow 1.8.0. See the code and the output. \r\n\r\n### Source code / logs\r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.\r\n\r\n```\r\nfrom __future__ import print_function\r\nimport numpy as np\r\nimport tensorflow as tf\r\n\r\nx1 = tf.placeholder(shape=(), dtype=tf.complex64, name='x1')\r\nx2 = tf.placeholder(shape=(), dtype=tf.complex64, name='x2')\r\n\r\nx1_value = np.complex(1.0, 2.0)\r\nx2_value = np.complex(4.0, 1.0)\r\n\r\nsess = tf.Session()\r\n\r\ninit_op = tf.global_variables_initializer()\r\n\r\nsess.run(init_op)\r\n\r\nx1c = tf.conj(x1)\r\nx2c = tf.conj(x2)\r\n\r\ny1 = 2*x1*tf.log(x2c) \r\ny2 = 2*x1c*tf.log(x2)\r\ny = y1 + y2\r\n\r\n# Print the partial derivative of y evaluated at x1_value and x2_value\r\nprint('tf one sess.run', sess.run(tf.conj(tf.gradients(y, x1, tf.constant(1, dtype=tf.complex64))), feed_dict={x1:x1_value, x2:x2_value}))\r\n\r\n# Print the partial derivative of y1 evaluated at x1_value and x2_value + the partial derivative of y2 evaluated at x1_value and x2_value\r\nprint('tf, two sess.run', sess.run(tf.conj(tf.gradients(y1, x1, tf.constant(1, dtype=tf.complex64))), feed_dict={x1:x1_value, x2:x2_value}) + sess.run(tf.conj(tf.gradients(y2, x1, tf.constant(1, dtype=tf.complex64))), feed_dict={x1:x1_value, x2:x2_value}))\r\n\r\nprint('np, hand computed partial derivative', 2*np.log(np.conj(x2_value))  + 2*np.log(x2_value))\r\n\r\n# Output\r\nTensorflow 1.7.0\r\ntf one sess.run [5.6664267-0.97991467j]\r\ntf, two sess.run [5.6664267-0.97991467j]\r\nnp, hand computed partial derivative (5.66642668811+0j)\r\n\r\nTensorflow 1.8.0\r\ntf one sess.run [5.6664267-0.97991467j]\r\ntf, two sess.run [5.6664267+0.j]\r\nnp, hand computed partial derivative (5.66642668811+0j)\r\n```"}