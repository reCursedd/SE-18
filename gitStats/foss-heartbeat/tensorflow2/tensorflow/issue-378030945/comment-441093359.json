{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/441093359", "html_url": "https://github.com/tensorflow/tensorflow/issues/23564#issuecomment-441093359", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23564", "id": 441093359, "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTA5MzM1OQ==", "user": {"login": "MorganR", "id": 7505708, "node_id": "MDQ6VXNlcjc1MDU3MDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/7505708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MorganR", "html_url": "https://github.com/MorganR", "followers_url": "https://api.github.com/users/MorganR/followers", "following_url": "https://api.github.com/users/MorganR/following{/other_user}", "gists_url": "https://api.github.com/users/MorganR/gists{/gist_id}", "starred_url": "https://api.github.com/users/MorganR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MorganR/subscriptions", "organizations_url": "https://api.github.com/users/MorganR/orgs", "repos_url": "https://api.github.com/users/MorganR/repos", "events_url": "https://api.github.com/users/MorganR/events{/privacy}", "received_events_url": "https://api.github.com/users/MorganR/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-22T17:43:36Z", "updated_at": "2018-11-22T17:43:36Z", "author_association": "NONE", "body_html": "<p>If I'm reading the test right, it looks like the problem is just that <code>np.sort</code> is not sorting the result as intended, but that Tensorflow is doing the right things. <code>np.sort</code> is sorting the last axis, so it checks that each pair is sorted, which is satisfied. I think the test should be sorting the keys, so the following changes are needed:</p>\n<pre><code>sorted_values = np.sort(exported_values.eval(), axis=0)\n...\nself.assertAllEqual([[0, 1], [2, 3], [4, 5]], sorted_values)\n</code></pre>\n<p>JFYI, here are the latest tests I did: I've deleted all the other tests in <code>lookup_ops_test</code> except for <code>MutableHashTableOpTest.testMutableHashTableOfTensors</code>. It seems <code>--test_filter</code> doesn't work right now with python tests.</p>\n<p>I've run it with the following commands:<br>\n<code>bazel test --config=opt --config=cuda --cache_test_results=no --test_output=all  //tensorflow/contrib/lookup:lookup_ops_test</code><br>\n<code>bazel test --config=opt --config=cuda --cache_test_results=no --test_output=all  --cxxopt=\"-D_GLIBCXX_USE_CXX11_ABI=0\" //tensorflow/contrib/lookup:lookup_ops_test</code></p>\n<p>These each provide the same error output:</p>\n<pre><code>exec ${PAGER:-/usr/bin/less} \"$0\" || exit 1\nExecuting tests from //tensorflow/contrib/lookup:lookup_ops_test\n-----------------------------------------------------------------------------\n2018-11-22 17:16:33.328021: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:964] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n2018-11-22 17:16:33.328383: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1432] Found device 0 with properties: \nname: GeForce RTX 2080 Ti major: 7 minor: 5 memoryClockRate(GHz): 1.635\npciBusID: 0000:01:00.0\ntotalMemory: 10.73GiB freeMemory: 10.10GiB\n2018-11-22 17:16:33.328393: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1511] Adding visible gpu devices: 0\n2018-11-22 17:16:33.528223: I tensorflow/core/common_runtime/gpu/gpu_device.cc:982] Device interconnect StreamExecutor with strength 1 edge matrix:\n2018-11-22 17:16:33.528243: I tensorflow/core/common_runtime/gpu/gpu_device.cc:988]      0 \n2018-11-22 17:16:33.528247: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1001] 0:   N \n2018-11-22 17:16:33.528371: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1115] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 3295 MB memory) -&gt; physical GPU (device: 0, name: GeForce RTX 2080 Ti, pci bus id: 0000:01:00.0, compute capability: 7.5)\nF.\n======================================================================\nFAIL: testMutableHashTableOfTensors (__main__.MutableHashTableOpTest)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/morgan/.cache/bazel/_bazel_morgan/a1bbb0cd5ee11ffbec286625841ddec2/execroot/org_tensorflow/bazel-out/k8-opt/bin/tensorflow/contrib/lookup/lookup_ops_test.runfiles/org_tensorflow/tensorflow/contrib/lookup/lookup_ops_test.py\", line 73, in testMutableHashTableOfTensors\n    self.assertAllEqual([[4, 5], [2, 3], [0, 1]], sorted_values)\n  File \"/home/morgan/.cache/bazel/_bazel_morgan/a1bbb0cd5ee11ffbec286625841ddec2/execroot/org_tensorflow/bazel-out/k8-opt/bin/tensorflow/contrib/lookup/lookup_ops_test.runfiles/org_tensorflow/tensorflow/python/framework/test_util.py\", line 1691, in assertAllEqual\n    np.testing.assert_array_equal(a, b, err_msg=\"\\n\".join(msgs))\n  File \"/home/morgan/.pyenv/smashgpu/lib/python3.6/site-packages/numpy/testing/_private/utils.py\", line 865, in assert_array_equal\n    verbose=verbose, header='Arrays are not equal')\n  File \"/home/morgan/.pyenv/smashgpu/lib/python3.6/site-packages/numpy/testing/_private/utils.py\", line 789, in assert_array_compare\n    raise AssertionError(msg)\nAssertionError: \nArrays are not equal\n\nnot equal where = (array([1, 1, 2, 2]), array([0, 1, 0, 1]))\nnot equal lhs = [2 3 0 1]\nnot equal rhs = [0 1 2 3]\n(mismatch 66.66666666666666%)\n x: array([4, 5, 2, 3, 0, 1])\n y: array([4, 5, 0, 1, 2, 3])\n\n----------------------------------------------------------------------\nRan 2 tests in 0.353s\n\nFAILED (failures=1)\n</code></pre>", "body_text": "If I'm reading the test right, it looks like the problem is just that np.sort is not sorting the result as intended, but that Tensorflow is doing the right things. np.sort is sorting the last axis, so it checks that each pair is sorted, which is satisfied. I think the test should be sorting the keys, so the following changes are needed:\nsorted_values = np.sort(exported_values.eval(), axis=0)\n...\nself.assertAllEqual([[0, 1], [2, 3], [4, 5]], sorted_values)\n\nJFYI, here are the latest tests I did: I've deleted all the other tests in lookup_ops_test except for MutableHashTableOpTest.testMutableHashTableOfTensors. It seems --test_filter doesn't work right now with python tests.\nI've run it with the following commands:\nbazel test --config=opt --config=cuda --cache_test_results=no --test_output=all  //tensorflow/contrib/lookup:lookup_ops_test\nbazel test --config=opt --config=cuda --cache_test_results=no --test_output=all  --cxxopt=\"-D_GLIBCXX_USE_CXX11_ABI=0\" //tensorflow/contrib/lookup:lookup_ops_test\nThese each provide the same error output:\nexec ${PAGER:-/usr/bin/less} \"$0\" || exit 1\nExecuting tests from //tensorflow/contrib/lookup:lookup_ops_test\n-----------------------------------------------------------------------------\n2018-11-22 17:16:33.328021: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:964] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n2018-11-22 17:16:33.328383: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1432] Found device 0 with properties: \nname: GeForce RTX 2080 Ti major: 7 minor: 5 memoryClockRate(GHz): 1.635\npciBusID: 0000:01:00.0\ntotalMemory: 10.73GiB freeMemory: 10.10GiB\n2018-11-22 17:16:33.328393: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1511] Adding visible gpu devices: 0\n2018-11-22 17:16:33.528223: I tensorflow/core/common_runtime/gpu/gpu_device.cc:982] Device interconnect StreamExecutor with strength 1 edge matrix:\n2018-11-22 17:16:33.528243: I tensorflow/core/common_runtime/gpu/gpu_device.cc:988]      0 \n2018-11-22 17:16:33.528247: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1001] 0:   N \n2018-11-22 17:16:33.528371: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1115] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 3295 MB memory) -> physical GPU (device: 0, name: GeForce RTX 2080 Ti, pci bus id: 0000:01:00.0, compute capability: 7.5)\nF.\n======================================================================\nFAIL: testMutableHashTableOfTensors (__main__.MutableHashTableOpTest)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/morgan/.cache/bazel/_bazel_morgan/a1bbb0cd5ee11ffbec286625841ddec2/execroot/org_tensorflow/bazel-out/k8-opt/bin/tensorflow/contrib/lookup/lookup_ops_test.runfiles/org_tensorflow/tensorflow/contrib/lookup/lookup_ops_test.py\", line 73, in testMutableHashTableOfTensors\n    self.assertAllEqual([[4, 5], [2, 3], [0, 1]], sorted_values)\n  File \"/home/morgan/.cache/bazel/_bazel_morgan/a1bbb0cd5ee11ffbec286625841ddec2/execroot/org_tensorflow/bazel-out/k8-opt/bin/tensorflow/contrib/lookup/lookup_ops_test.runfiles/org_tensorflow/tensorflow/python/framework/test_util.py\", line 1691, in assertAllEqual\n    np.testing.assert_array_equal(a, b, err_msg=\"\\n\".join(msgs))\n  File \"/home/morgan/.pyenv/smashgpu/lib/python3.6/site-packages/numpy/testing/_private/utils.py\", line 865, in assert_array_equal\n    verbose=verbose, header='Arrays are not equal')\n  File \"/home/morgan/.pyenv/smashgpu/lib/python3.6/site-packages/numpy/testing/_private/utils.py\", line 789, in assert_array_compare\n    raise AssertionError(msg)\nAssertionError: \nArrays are not equal\n\nnot equal where = (array([1, 1, 2, 2]), array([0, 1, 0, 1]))\nnot equal lhs = [2 3 0 1]\nnot equal rhs = [0 1 2 3]\n(mismatch 66.66666666666666%)\n x: array([4, 5, 2, 3, 0, 1])\n y: array([4, 5, 0, 1, 2, 3])\n\n----------------------------------------------------------------------\nRan 2 tests in 0.353s\n\nFAILED (failures=1)", "body": "If I'm reading the test right, it looks like the problem is just that `np.sort` is not sorting the result as intended, but that Tensorflow is doing the right things. `np.sort` is sorting the last axis, so it checks that each pair is sorted, which is satisfied. I think the test should be sorting the keys, so the following changes are needed:\r\n\r\n```\r\nsorted_values = np.sort(exported_values.eval(), axis=0)\r\n...\r\nself.assertAllEqual([[0, 1], [2, 3], [4, 5]], sorted_values)\r\n```\r\n\r\nJFYI, here are the latest tests I did: I've deleted all the other tests in `lookup_ops_test` except for `MutableHashTableOpTest.testMutableHashTableOfTensors`. It seems `--test_filter` doesn't work right now with python tests.\r\n\r\nI've run it with the following commands:\r\n`bazel test --config=opt --config=cuda --cache_test_results=no --test_output=all  //tensorflow/contrib/lookup:lookup_ops_test`\r\n`bazel test --config=opt --config=cuda --cache_test_results=no --test_output=all  --cxxopt=\"-D_GLIBCXX_USE_CXX11_ABI=0\" //tensorflow/contrib/lookup:lookup_ops_test`\r\n\r\nThese each provide the same error output:\r\n```\r\nexec ${PAGER:-/usr/bin/less} \"$0\" || exit 1\r\nExecuting tests from //tensorflow/contrib/lookup:lookup_ops_test\r\n-----------------------------------------------------------------------------\r\n2018-11-22 17:16:33.328021: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:964] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\r\n2018-11-22 17:16:33.328383: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1432] Found device 0 with properties: \r\nname: GeForce RTX 2080 Ti major: 7 minor: 5 memoryClockRate(GHz): 1.635\r\npciBusID: 0000:01:00.0\r\ntotalMemory: 10.73GiB freeMemory: 10.10GiB\r\n2018-11-22 17:16:33.328393: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1511] Adding visible gpu devices: 0\r\n2018-11-22 17:16:33.528223: I tensorflow/core/common_runtime/gpu/gpu_device.cc:982] Device interconnect StreamExecutor with strength 1 edge matrix:\r\n2018-11-22 17:16:33.528243: I tensorflow/core/common_runtime/gpu/gpu_device.cc:988]      0 \r\n2018-11-22 17:16:33.528247: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1001] 0:   N \r\n2018-11-22 17:16:33.528371: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1115] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 3295 MB memory) -> physical GPU (device: 0, name: GeForce RTX 2080 Ti, pci bus id: 0000:01:00.0, compute capability: 7.5)\r\nF.\r\n======================================================================\r\nFAIL: testMutableHashTableOfTensors (__main__.MutableHashTableOpTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/morgan/.cache/bazel/_bazel_morgan/a1bbb0cd5ee11ffbec286625841ddec2/execroot/org_tensorflow/bazel-out/k8-opt/bin/tensorflow/contrib/lookup/lookup_ops_test.runfiles/org_tensorflow/tensorflow/contrib/lookup/lookup_ops_test.py\", line 73, in testMutableHashTableOfTensors\r\n    self.assertAllEqual([[4, 5], [2, 3], [0, 1]], sorted_values)\r\n  File \"/home/morgan/.cache/bazel/_bazel_morgan/a1bbb0cd5ee11ffbec286625841ddec2/execroot/org_tensorflow/bazel-out/k8-opt/bin/tensorflow/contrib/lookup/lookup_ops_test.runfiles/org_tensorflow/tensorflow/python/framework/test_util.py\", line 1691, in assertAllEqual\r\n    np.testing.assert_array_equal(a, b, err_msg=\"\\n\".join(msgs))\r\n  File \"/home/morgan/.pyenv/smashgpu/lib/python3.6/site-packages/numpy/testing/_private/utils.py\", line 865, in assert_array_equal\r\n    verbose=verbose, header='Arrays are not equal')\r\n  File \"/home/morgan/.pyenv/smashgpu/lib/python3.6/site-packages/numpy/testing/_private/utils.py\", line 789, in assert_array_compare\r\n    raise AssertionError(msg)\r\nAssertionError: \r\nArrays are not equal\r\n\r\nnot equal where = (array([1, 1, 2, 2]), array([0, 1, 0, 1]))\r\nnot equal lhs = [2 3 0 1]\r\nnot equal rhs = [0 1 2 3]\r\n(mismatch 66.66666666666666%)\r\n x: array([4, 5, 2, 3, 0, 1])\r\n y: array([4, 5, 0, 1, 2, 3])\r\n\r\n----------------------------------------------------------------------\r\nRan 2 tests in 0.353s\r\n\r\nFAILED (failures=1)\r\n```\r\n"}