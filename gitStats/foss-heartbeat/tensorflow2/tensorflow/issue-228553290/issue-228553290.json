{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9893", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9893/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9893/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9893/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9893", "id": 228553290, "node_id": "MDU6SXNzdWUyMjg1NTMyOTA=", "number": 9893, "title": "tf.where bug", "user": {"login": "auroua", "id": 2869412, "node_id": "MDQ6VXNlcjI4Njk0MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/2869412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/auroua", "html_url": "https://github.com/auroua", "followers_url": "https://api.github.com/users/auroua/followers", "following_url": "https://api.github.com/users/auroua/following{/other_user}", "gists_url": "https://api.github.com/users/auroua/gists{/gist_id}", "starred_url": "https://api.github.com/users/auroua/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/auroua/subscriptions", "organizations_url": "https://api.github.com/users/auroua/orgs", "repos_url": "https://api.github.com/users/auroua/repos", "events_url": "https://api.github.com/users/auroua/events{/privacy}", "received_events_url": "https://api.github.com/users/auroua/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473184161, "node_id": "MDU6TGFiZWw0NzMxODQxNjE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:support", "name": "type:support", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-14T16:45:56Z", "updated_at": "2017-05-16T08:04:50Z", "closed_at": "2017-05-15T23:55:53Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: NO</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.1.0</li>\n<li><strong>Bazel version (if compiling from source)</strong>:</li>\n<li><strong>CUDA/cuDNN version</strong>:cuda 8.0 cuDNN 5.0</li>\n<li><strong>GPU model and memory</strong>: 1060 6GB</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<pre><code>import tensorflow as tf\nimport numpy as np\n\nif __name__ == '__main__':\n    bool_lists = np.array([[False, True, True, False],\n                           [False, False, True, True]])\n    k = tf.Variable(tf.zeros(shape=[2, 4], dtype=tf.int32))\n    where_val = []\n    bool_ops = []\n    k_opes = []\n    where_ops = []\n    for j in range(bool_lists.shape[0]):\n        for i in range(bool_lists.shape[1]):\n            bool_i = tf.constant(bool_lists[j, i], dtype=tf.bool)\n            bool_ops.append(bool_i)\n            where_val.append(k[j, i].assign(tf.where(bool_lists[j, i], i, k[j, i])))\n            tf_i = tf.constant(i, dtype=tf.int32)\n            where_ops.append(tf.where(bool_i, tf_i, k[j, i]))\n            k_opes.append(k[j, i])\n    with tf.control_dependencies(where_val):\n        k = tf.identity(k)\n</code></pre>\n<p>The results of above code is:</p>\n<blockquote>\n<p>[[0 1 2 3]<br>\n[0 1 2 3]]<br>\n[False, True, True, False, False, False, True, True]<br>\n[0, 1, 2, 3, 0, 1, 2, 3]<br>\n[0, 1, 2, 3, 0, 1, 2, 3]</p>\n</blockquote>\n<p>I think the right result of k's value should be:</p>\n<blockquote>\n<p>[[0 1 2 0]<br>\n[0 0 2 3]]</p>\n</blockquote>\n<p>I just update my tensorflow for 1.0 to 1.1.0. I remember  version 1.0 is right.</p>\n<p>The following is results from tf 1.0:</p>\n<blockquote>\n<p>[[0 1 2 0]<br>\n[0 0 2 3]]<br>\n[False, True, True, False, False, False, True, True]<br>\n[0, 1, 2, 0, 0, 0, 2, 3]<br>\n[0, 1, 2, 0, 0, 0, 2, 3]</p>\n</blockquote>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): NO\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 16.04\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): 1.1.0\nBazel version (if compiling from source):\nCUDA/cuDNN version:cuda 8.0 cuDNN 5.0\nGPU model and memory: 1060 6GB\nExact command to reproduce:\n\nimport tensorflow as tf\nimport numpy as np\n\nif __name__ == '__main__':\n    bool_lists = np.array([[False, True, True, False],\n                           [False, False, True, True]])\n    k = tf.Variable(tf.zeros(shape=[2, 4], dtype=tf.int32))\n    where_val = []\n    bool_ops = []\n    k_opes = []\n    where_ops = []\n    for j in range(bool_lists.shape[0]):\n        for i in range(bool_lists.shape[1]):\n            bool_i = tf.constant(bool_lists[j, i], dtype=tf.bool)\n            bool_ops.append(bool_i)\n            where_val.append(k[j, i].assign(tf.where(bool_lists[j, i], i, k[j, i])))\n            tf_i = tf.constant(i, dtype=tf.int32)\n            where_ops.append(tf.where(bool_i, tf_i, k[j, i]))\n            k_opes.append(k[j, i])\n    with tf.control_dependencies(where_val):\n        k = tf.identity(k)\n\nThe results of above code is:\n\n[[0 1 2 3]\n[0 1 2 3]]\n[False, True, True, False, False, False, True, True]\n[0, 1, 2, 3, 0, 1, 2, 3]\n[0, 1, 2, 3, 0, 1, 2, 3]\n\nI think the right result of k's value should be:\n\n[[0 1 2 0]\n[0 0 2 3]]\n\nI just update my tensorflow for 1.0 to 1.1.0. I remember  version 1.0 is right.\nThe following is results from tf 1.0:\n\n[[0 1 2 0]\n[0 0 2 3]]\n[False, True, True, False, False, False, True, True]\n[0, 1, 2, 0, 0, 0, 2, 3]\n[0, 1, 2, 0, 0, 0, 2, 3]", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: NO\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.1.0\r\n- **Bazel version (if compiling from source)**:\r\n- **CUDA/cuDNN version**:cuda 8.0 cuDNN 5.0\r\n- **GPU model and memory**: 1060 6GB\r\n- **Exact command to reproduce**:\r\n\r\n```\r\nimport tensorflow as tf\r\nimport numpy as np\r\n\r\nif __name__ == '__main__':\r\n    bool_lists = np.array([[False, True, True, False],\r\n                           [False, False, True, True]])\r\n    k = tf.Variable(tf.zeros(shape=[2, 4], dtype=tf.int32))\r\n    where_val = []\r\n    bool_ops = []\r\n    k_opes = []\r\n    where_ops = []\r\n    for j in range(bool_lists.shape[0]):\r\n        for i in range(bool_lists.shape[1]):\r\n            bool_i = tf.constant(bool_lists[j, i], dtype=tf.bool)\r\n            bool_ops.append(bool_i)\r\n            where_val.append(k[j, i].assign(tf.where(bool_lists[j, i], i, k[j, i])))\r\n            tf_i = tf.constant(i, dtype=tf.int32)\r\n            where_ops.append(tf.where(bool_i, tf_i, k[j, i]))\r\n            k_opes.append(k[j, i])\r\n    with tf.control_dependencies(where_val):\r\n        k = tf.identity(k)\r\n```\r\n\r\nThe results of above code is:\r\n>[[0 1 2 3]\r\n [0 1 2 3]]\r\n[False, True, True, False, False, False, True, True]\r\n[0, 1, 2, 3, 0, 1, 2, 3]\r\n[0, 1, 2, 3, 0, 1, 2, 3]\r\n\r\nI think the right result of k's value should be:\r\n>[[0 1 2 0]\r\n [0 0 2 3]]\r\n\r\nI just update my tensorflow for 1.0 to 1.1.0. I remember  version 1.0 is right.\r\n\r\nThe following is results from tf 1.0:\r\n>[[0 1 2 0]\r\n [0 0 2 3]]\r\n[False, True, True, False, False, False, True, True]\r\n[0, 1, 2, 0, 0, 0, 2, 3]\r\n[0, 1, 2, 0, 0, 0, 2, 3]"}