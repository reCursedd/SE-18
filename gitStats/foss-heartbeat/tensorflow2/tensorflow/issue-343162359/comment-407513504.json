{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/407513504", "html_url": "https://github.com/tensorflow/tensorflow/pull/20996#issuecomment-407513504", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20996", "id": 407513504, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzUxMzUwNA==", "user": {"login": "jlebar", "id": 150663, "node_id": "MDQ6VXNlcjE1MDY2Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/150663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlebar", "html_url": "https://github.com/jlebar", "followers_url": "https://api.github.com/users/jlebar/followers", "following_url": "https://api.github.com/users/jlebar/following{/other_user}", "gists_url": "https://api.github.com/users/jlebar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlebar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlebar/subscriptions", "organizations_url": "https://api.github.com/users/jlebar/orgs", "repos_url": "https://api.github.com/users/jlebar/repos", "events_url": "https://api.github.com/users/jlebar/events{/privacy}", "received_events_url": "https://api.github.com/users/jlebar/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-24T18:50:52Z", "updated_at": "2018-07-24T18:50:59Z", "author_association": "MEMBER", "body_html": "<p>What I did last time I had a renaming change that also affected internal targets was, do the review externally, approve it, import it, and then continue the renaming internally before committing the change.</p>\n<p>So it should be <em>possible</em>.  That's separate from the question of whether it's desirable.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=526795\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Artem-B\">@Artem-B</a> might have more concrete thoughts.  To me it seems like you may want a level of indirection between how you spell things in BUILD files and the actual BUILD targets.  Just like we have <code>xla_test(foo)</code> which expands into foo_gpu and foo_cpu (and you could imagine changing this so it expands into <code>:foo_nvgpu</code>, <code>:foo_amdgpu</code>, <code>:foo_cpu</code>), maybe you want tf_gpu_lib that expands into cuda and rocm variants.  Then if you have a <code>tf_rocm</code> mega-library, it can glob together all of the rocm build targets (you can glob based on build tags, not just on name).</p>\n<p>So in that sense this PR sort of seems to me like it's going in the right direction.  But again I'd want to know what <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=526795\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Artem-B\">@Artem-B</a> thinks.</p>", "body_text": "What I did last time I had a renaming change that also affected internal targets was, do the review externally, approve it, import it, and then continue the renaming internally before committing the change.\nSo it should be possible.  That's separate from the question of whether it's desirable.\n@Artem-B might have more concrete thoughts.  To me it seems like you may want a level of indirection between how you spell things in BUILD files and the actual BUILD targets.  Just like we have xla_test(foo) which expands into foo_gpu and foo_cpu (and you could imagine changing this so it expands into :foo_nvgpu, :foo_amdgpu, :foo_cpu), maybe you want tf_gpu_lib that expands into cuda and rocm variants.  Then if you have a tf_rocm mega-library, it can glob together all of the rocm build targets (you can glob based on build tags, not just on name).\nSo in that sense this PR sort of seems to me like it's going in the right direction.  But again I'd want to know what @Artem-B thinks.", "body": "What I did last time I had a renaming change that also affected internal targets was, do the review externally, approve it, import it, and then continue the renaming internally before committing the change.\r\n\r\nSo it should be *possible*.  That's separate from the question of whether it's desirable.\r\n\r\n@Artem-B might have more concrete thoughts.  To me it seems like you may want a level of indirection between how you spell things in BUILD files and the actual BUILD targets.  Just like we have `xla_test(foo)` which expands into foo_gpu and foo_cpu (and you could imagine changing this so it expands into `:foo_nvgpu`, `:foo_amdgpu`, `:foo_cpu`), maybe you want tf_gpu_lib that expands into cuda and rocm variants.  Then if you have a `tf_rocm` mega-library, it can glob together all of the rocm build targets (you can glob based on build tags, not just on name).\r\n\r\nSo in that sense this PR sort of seems to me like it's going in the right direction.  But again I'd want to know what @Artem-B thinks."}