{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/274664914", "html_url": "https://github.com/tensorflow/tensorflow/issues/2126#issuecomment-274664914", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2126", "id": 274664914, "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDY2NDkxNA==", "user": {"login": "vrv", "id": 463737, "node_id": "MDQ6VXNlcjQ2MzczNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/463737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vrv", "html_url": "https://github.com/vrv", "followers_url": "https://api.github.com/users/vrv/followers", "following_url": "https://api.github.com/users/vrv/following{/other_user}", "gists_url": "https://api.github.com/users/vrv/gists{/gist_id}", "starred_url": "https://api.github.com/users/vrv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vrv/subscriptions", "organizations_url": "https://api.github.com/users/vrv/orgs", "repos_url": "https://api.github.com/users/vrv/repos", "events_url": "https://api.github.com/users/vrv/events{/privacy}", "received_events_url": "https://api.github.com/users/vrv/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-24T00:38:44Z", "updated_at": "2017-01-24T00:38:44Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6969686\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/benoitsteiner\">@benoitsteiner</a> is working on better cost models for auto-assignment I think, but I don't know what the expected roadmap for that work is.</p>\n<p>C++ shape inference theoretically makes it possible to do an initial-placement algorithm that is better than the simple_placer, but right now the python runtime still maintains shape information that is not propagated to C++.  I think we need to wait for the control flow ops to be implemented via the C-API before we could make any more progress on initial static shape inference -- I believe the C-API stuff is being worked on.  There are probably some other ways to start playing around with this though (e.g., via add_shapes argument to as_graph_def()), but nobody I know is working on that.</p>", "body_text": "@benoitsteiner is working on better cost models for auto-assignment I think, but I don't know what the expected roadmap for that work is.\nC++ shape inference theoretically makes it possible to do an initial-placement algorithm that is better than the simple_placer, but right now the python runtime still maintains shape information that is not propagated to C++.  I think we need to wait for the control flow ops to be implemented via the C-API before we could make any more progress on initial static shape inference -- I believe the C-API stuff is being worked on.  There are probably some other ways to start playing around with this though (e.g., via add_shapes argument to as_graph_def()), but nobody I know is working on that.", "body": "@benoitsteiner is working on better cost models for auto-assignment I think, but I don't know what the expected roadmap for that work is.\r\n\r\nC++ shape inference theoretically makes it possible to do an initial-placement algorithm that is better than the simple_placer, but right now the python runtime still maintains shape information that is not propagated to C++.  I think we need to wait for the control flow ops to be implemented via the C-API before we could make any more progress on initial static shape inference -- I believe the C-API stuff is being worked on.  There are probably some other ways to start playing around with this though (e.g., via add_shapes argument to as_graph_def()), but nobody I know is working on that."}