{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/304873290", "html_url": "https://github.com/tensorflow/tensorflow/issues/2126#issuecomment-304873290", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2126", "id": 304873290, "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDg3MzI5MA==", "user": {"login": "yangjunpro", "id": 407784, "node_id": "MDQ6VXNlcjQwNzc4NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/407784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yangjunpro", "html_url": "https://github.com/yangjunpro", "followers_url": "https://api.github.com/users/yangjunpro/followers", "following_url": "https://api.github.com/users/yangjunpro/following{/other_user}", "gists_url": "https://api.github.com/users/yangjunpro/gists{/gist_id}", "starred_url": "https://api.github.com/users/yangjunpro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yangjunpro/subscriptions", "organizations_url": "https://api.github.com/users/yangjunpro/orgs", "repos_url": "https://api.github.com/users/yangjunpro/repos", "events_url": "https://api.github.com/users/yangjunpro/events{/privacy}", "received_events_url": "https://api.github.com/users/yangjunpro/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-30T13:11:19Z", "updated_at": "2017-05-30T13:11:19Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6969686\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/benoitsteiner\">@benoitsteiner</a></p>\n<p>Thanks for the nice progress.<br>\nOur work haven't been recorded into any paper since we are still on the way with it.<br>\nAs to the grappler auto parallelizer, we do have taken a look at its implementation. It is nice and somehow is what we want, although currently it only support naive BSP auto placement(Is my understanding correct?). My question is that why not to implement the grappler auto-parallelizer in python side, since in python side, there are more graph metadata and the processing overhead should be less than implementing it in c++ side.</p>\n<p>As to the starting point of our solution, we are working on designing a cost model to evaluate the potential placement solution to help find a sub-optimal one since we think the auto-placement problem actually is a NP-hard problem, it is non-trivial to find the optimal solution.<br>\nWe have added hybrid-parallelism for AlexNet into python side(actually transform the placement problem into a graph re-written problem), which is a mixture of data-parallelism and model parallelism and the speed-up against standard implementation is significant. The implementation overhead actually is not quite large. And also we are trying to follow this strategy to make it as automatic as possible, also as general as possible.</p>\n<p>Not sure how far your device placement optimization work has gone.</p>\n<p>As to your nice paper(Device Placement Optimization with Reinforcement Learning) to be published on ICML 2017, will you put it on arXiv before the conference?</p>\n<p>Thanks</p>", "body_text": "@benoitsteiner\nThanks for the nice progress.\nOur work haven't been recorded into any paper since we are still on the way with it.\nAs to the grappler auto parallelizer, we do have taken a look at its implementation. It is nice and somehow is what we want, although currently it only support naive BSP auto placement(Is my understanding correct?). My question is that why not to implement the grappler auto-parallelizer in python side, since in python side, there are more graph metadata and the processing overhead should be less than implementing it in c++ side.\nAs to the starting point of our solution, we are working on designing a cost model to evaluate the potential placement solution to help find a sub-optimal one since we think the auto-placement problem actually is a NP-hard problem, it is non-trivial to find the optimal solution.\nWe have added hybrid-parallelism for AlexNet into python side(actually transform the placement problem into a graph re-written problem), which is a mixture of data-parallelism and model parallelism and the speed-up against standard implementation is significant. The implementation overhead actually is not quite large. And also we are trying to follow this strategy to make it as automatic as possible, also as general as possible.\nNot sure how far your device placement optimization work has gone.\nAs to your nice paper(Device Placement Optimization with Reinforcement Learning) to be published on ICML 2017, will you put it on arXiv before the conference?\nThanks", "body": "@benoitsteiner\r\n\r\nThanks for the nice progress.\r\nOur work haven't been recorded into any paper since we are still on the way with it. \r\nAs to the grappler auto parallelizer, we do have taken a look at its implementation. It is nice and somehow is what we want, although currently it only support naive BSP auto placement(Is my understanding correct?). My question is that why not to implement the grappler auto-parallelizer in python side, since in python side, there are more graph metadata and the processing overhead should be less than implementing it in c++ side.\r\n\r\nAs to the starting point of our solution, we are working on designing a cost model to evaluate the potential placement solution to help find a sub-optimal one since we think the auto-placement problem actually is a NP-hard problem, it is non-trivial to find the optimal solution. \r\nWe have added hybrid-parallelism for AlexNet into python side(actually transform the placement problem into a graph re-written problem), which is a mixture of data-parallelism and model parallelism and the speed-up against standard implementation is significant. The implementation overhead actually is not quite large. And also we are trying to follow this strategy to make it as automatic as possible, also as general as possible. \r\n\r\nNot sure how far your device placement optimization work has gone.\r\n\r\nAs to your nice paper(Device Placement Optimization with Reinforcement Learning) to be published on ICML 2017, will you put it on arXiv before the conference? \r\n\r\nThanks\r\n"}