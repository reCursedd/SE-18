{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9915", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9915/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9915/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9915/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9915", "id": 228740534, "node_id": "MDU6SXNzdWUyMjg3NDA1MzQ=", "number": 9915, "title": "problem importing tensorflow with tensorflow-gpu pip package and Nvidia PRIME", "user": {"login": "FedericoMuciaccia", "id": 16505346, "node_id": "MDQ6VXNlcjE2NTA1MzQ2", "avatar_url": "https://avatars3.githubusercontent.com/u/16505346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FedericoMuciaccia", "html_url": "https://github.com/FedericoMuciaccia", "followers_url": "https://api.github.com/users/FedericoMuciaccia/followers", "following_url": "https://api.github.com/users/FedericoMuciaccia/following{/other_user}", "gists_url": "https://api.github.com/users/FedericoMuciaccia/gists{/gist_id}", "starred_url": "https://api.github.com/users/FedericoMuciaccia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FedericoMuciaccia/subscriptions", "organizations_url": "https://api.github.com/users/FedericoMuciaccia/orgs", "repos_url": "https://api.github.com/users/FedericoMuciaccia/repos", "events_url": "https://api.github.com/users/FedericoMuciaccia/events{/privacy}", "received_events_url": "https://api.github.com/users/FedericoMuciaccia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}, {"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-05-15T14:50:33Z", "updated_at": "2017-06-16T22:19:09Z", "closed_at": "2017-06-16T22:19:09Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li>OS Platform and Distribution: Linux Ubuntu 16.10</li>\n<li>TensorFlow installed from: binary</li>\n<li>TensorFlow version: tensorflow-gpu-1.1.0</li>\n<li><strong>CUDA/cuDNN version</strong>:</li>\n<li>GPU model and memory: GeForce 940MX 982MiB</li>\n<li>Exact command to reproduce: import tensorflow</li>\n</ul>\n<p>== cat /etc/issue ===============================================<br>\nLinux Lyn 4.8.0-51-generic <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"116000052\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/54\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/54/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/54\">#54</a>-Ubuntu SMP Tue Apr 25 16:32:21 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux<br>\nVERSION=\"16.10 (Yakkety Yak)\"<br>\nVERSION_ID=\"16.10\"<br>\nVERSION_CODENAME=yakkety</p>\n<p>== are we in docker =============================================<br>\nNo</p>\n<p>== compiler =====================================================<br>\nc++ (Ubuntu 6.2.0-5ubuntu12) 6.2.0 20161005<br>\nCopyright (C) 2016 Free Software Foundation, Inc.<br>\nThis is free software; see the source for copying conditions.  There is NO<br>\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</p>\n<p>== uname -a =====================================================<br>\nLinux Lyn 4.8.0-51-generic <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"116000052\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/54\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/54/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/54\">#54</a>-Ubuntu SMP Tue Apr 25 16:32:21 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux</p>\n<p>== check pips ===================================================<br>\nnumpy (1.12.1)<br>\nnumpydoc (0.6.0)<br>\nprotobuf (3.3.0)<br>\ntensorflow-gpu (1.1.0)</p>\n<p>== check for virtualenv =========================================<br>\nFalse</p>\n<p>== tensorflow import ============================================<br>\n2017-05-15 16:22:31.009080: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.<br>\n2017-05-15 16:22:31.009102: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.<br>\n2017-05-15 16:22:31.009124: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.<br>\n2017-05-15 16:22:31.009131: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.<br>\n2017-05-15 16:22:31.009139: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.<br>\n2017-05-15 16:22:31.119107: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:901] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero<br>\n2017-05-15 16:22:31.119494: I tensorflow/core/common_runtime/gpu/gpu_device.cc:887] Found device 0 with properties:<br>\nname: GeForce 940MX<br>\nmajor: 5 minor: 0 memoryClockRate (GHz) 0.993<br>\npciBusID 0000:01:00.0<br>\nTotal memory: 982.12MiB<br>\nFree memory: 675.25MiB<br>\n2017-05-15 16:22:31.119518: I tensorflow/core/common_runtime/gpu/gpu_device.cc:908] DMA: 0<br>\n2017-05-15 16:22:31.119526: I tensorflow/core/common_runtime/gpu/gpu_device.cc:918] 0:   Y<br>\n2017-05-15 16:22:31.119542: I tensorflow/core/common_runtime/gpu/gpu_device.cc:977] Creating TensorFlow device (/gpu:0) -&gt; (device: 0, name: GeForce 940MX, pci bus id: 0000:01:00.0)<br>\ntf.VERSION = 1.1.0<br>\ntf.GIT_VERSION = v1.1.0-rc0-61-g1ec6ed5<br>\ntf.COMPILER_VERSION = v1.1.0-rc0-61-g1ec6ed5<br>\nSanity check: array([1], dtype=int32)</p>\n<p>== env ==========================================================<br>\nLD_LIBRARY_PATH is unset<br>\nDYLD_LIBRARY_PATH is unset</p>\n<p>== nvidia-smi ===================================================<br>\nMon May 15 16:21:29 2017<br>\n+-----------------------------------------------------------------------------+<br>\n| NVIDIA-SMI 375.39                 Driver Version: 375.39                    |<br>\n|-------------------------------+----------------------+----------------------+<br>\n| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |<br>\n| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |<br>\n|===============================+======================+======================|<br>\n|   0  GeForce 940MX       Off  | 0000:01:00.0     Off |                  N/A |<br>\n| N/A   43C    P0    N/A /  N/A |    262MiB /   982MiB |      0%      Default |<br>\n+-------------------------------+----------------------+----------------------+</p>\n<p>+-----------------------------------------------------------------------------+<br>\n| Processes:                                                       GPU Memory |<br>\n|  GPU       PID  Type  Process name                               Usage      |<br>\n|=============================================================================|<br>\n|    0      1017    G   /usr/lib/xorg/Xorg                             168MiB |<br>\n|    0      1860    G   /usr/bin/compiz                                 41MiB |<br>\n|    0      2324    G   ...el-token=2DD3BDBDD08C58317A0131100BC13BC1    52MiB |<br>\n+-----------------------------------------------------------------------------+</p>\n<p>== cuda libs  ===================================================</p>\n<hr>\n<p>tf.GIT_VERSION<br>\nv1.1.0-rc0-61-g1ec6ed5</p>\n<p>tf.VERSION<br>\n1.1.0</p>\n<h3>Describe the problem</h3>\n<p>I have a laptop with a dedicated Nvidia GPU. I use it only for prototyping my tensorflow code.<br>\nBut dedicated GPUs drain a lot of energy and reduce the laptop's battery life.<br>\nSo when I'm outside on battery (eg: in the library at university) I always set Nvidia PRIME to use the integrated card only (type nvidia-settings in a console to reach this setting).<br>\nWith the previous versions of tensorflow-gpu (installedi via pip3 on Ubuntu) everything worked well.<br>\nNow with the current release I can no longer use tensorflow-gpu while I have the Nvidia card disabled with PRIME.<br>\nNow, to be able to work with tensorflow AND have enough battery to conclude my day, I have to install the pip package \"tensorflow\" (and not \"tensorflow-gpu\"). but that turns useless if, for some reason, need to test my code with GPU acceleration, turning back on the dedicated graphic card via Nvidia PRIME.<br>\nIf I really want GPU acceleration I have to re-enable the dedicated card in PRIME, uninstall tensorflow and reinstall tensorflow-gpu. every time. that's a mess!<br>\nTo me, there are two way to resolve this bug:</p>\n<ol>\n<li>make tensorflow-gpu again able to handle situation with all the Nvidia GPU are temporarily disabled.</li>\n<li>unify the tensorflow and tensorflow-gpu packages, including a smart logic inside them that enable the software to handle theese ibrid situations, which I think will be very common in the laptops in the near future</li>\n</ol>\n<h3>Source code / logs</h3>\n<h2>import tensorflow</h2>\n<p>ImportError                               Traceback (most recent call last)<br>\n/home/federico/.local/lib/python3.5/site-packages/tensorflow/python/pywrap_tensorflow.py in ()<br>\n40     sys.setdlopenflags(_default_dlopen_flags | ctypes.RTLD_GLOBAL)<br>\n---&gt; 41   from tensorflow.python.pywrap_tensorflow_internal import *<br>\n42   from tensorflow.python.pywrap_tensorflow_internal import <strong>version</strong></p>\n<p>/home/federico/.local/lib/python3.5/site-packages/tensorflow/python/pywrap_tensorflow_internal.py in ()<br>\n27             return _mod<br>\n---&gt; 28     _pywrap_tensorflow_internal = swig_import_helper()<br>\n29     del swig_import_helper</p>\n<p>/home/federico/.local/lib/python3.5/site-packages/tensorflow/python/pywrap_tensorflow_internal.py in swig_import_helper()<br>\n23             try:<br>\n---&gt; 24                 _mod = imp.load_module('_pywrap_tensorflow_internal', fp, pathname, description)<br>\n25             finally:</p>\n<p>/usr/lib/python3.5/imp.py in load_module(name, file, filename, details)<br>\n241         else:<br>\n--&gt; 242             return load_dynamic(name, filename, file)<br>\n243     elif type_ == PKG_DIRECTORY:</p>\n<p>/usr/lib/python3.5/imp.py in load_dynamic(name, path, file)<br>\n341             name=name, loader=loader, origin=path)<br>\n--&gt; 342         return _load(spec)<br>\n343</p>\n<p>ImportError: libnvidia-fatbinaryloader.so.375.39: cannot open shared object file: No such file or directory</p>\n<p>During handling of the above exception, another exception occurred:</p>\n<p>ImportError                               Traceback (most recent call last)<br>\n in ()<br>\n----&gt; 1 import tensorflow</p>\n<p>/home/federico/.local/lib/python3.5/site-packages/tensorflow/<strong>init</strong>.py in ()<br>\n22<br>\n23 # pylint: disable=wildcard-import<br>\n---&gt; 24 from tensorflow.python import *<br>\n25 # pylint: enable=wildcard-import<br>\n26</p>\n<p>/home/federico/.local/lib/python3.5/site-packages/tensorflow/python/<strong>init</strong>.py in ()<br>\n49 import numpy as np<br>\n50<br>\n---&gt; 51 from tensorflow.python import pywrap_tensorflow<br>\n52<br>\n53 # Protocol buffers</p>\n<p>/home/federico/.local/lib/python3.5/site-packages/tensorflow/python/pywrap_tensorflow.py in ()<br>\n50 for some common reasons and solutions.  Include the entire stack trace<br>\n51 above this error message when asking for help.\"\"\" % traceback.format_exc()<br>\n---&gt; 52   raise ImportError(msg)<br>\n53<br>\n54 # pylint: enable=wildcard-import,g-import-not-at-top,unused-import,line-too-long</p>\n<p>ImportError: Traceback (most recent call last):<br>\nFile \"/home/federico/.local/lib/python3.5/site-packages/tensorflow/python/pywrap_tensorflow.py\", line 41, in <br>\nfrom tensorflow.python.pywrap_tensorflow_internal import *<br>\nFile \"/home/federico/.local/lib/python3.5/site-packages/tensorflow/python/pywrap_tensorflow_internal.py\", line 28, in <br>\n_pywrap_tensorflow_internal = swig_import_helper()<br>\nFile \"/home/federico/.local/lib/python3.5/site-packages/tensorflow/python/pywrap_tensorflow_internal.py\", line 24, in swig_import_helper<br>\n_mod = imp.load_module('_pywrap_tensorflow_internal', fp, pathname, description)<br>\nFile \"/usr/lib/python3.5/imp.py\", line 242, in load_module<br>\nreturn load_dynamic(name, filename, file)<br>\nFile \"/usr/lib/python3.5/imp.py\", line 342, in load_dynamic<br>\nreturn _load(spec)<br>\nImportError: libnvidia-fatbinaryloader.so.375.39: cannot open shared object file: No such file or directory</p>\n<p>Failed to load the native TensorFlow runtime.</p>\n<p>See <a href=\"https://www.tensorflow.org/install/install_sources#common_installation_problems\" rel=\"nofollow\">https://www.tensorflow.org/install/install_sources#common_installation_problems</a></p>\n<p>for some common reasons and solutions.  Include the entire stack trace<br>\nabove this error message when asking for help.</p>", "body_text": "System information\n\nOS Platform and Distribution: Linux Ubuntu 16.10\nTensorFlow installed from: binary\nTensorFlow version: tensorflow-gpu-1.1.0\nCUDA/cuDNN version:\nGPU model and memory: GeForce 940MX 982MiB\nExact command to reproduce: import tensorflow\n\n== cat /etc/issue ===============================================\nLinux Lyn 4.8.0-51-generic #54-Ubuntu SMP Tue Apr 25 16:32:21 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\nVERSION=\"16.10 (Yakkety Yak)\"\nVERSION_ID=\"16.10\"\nVERSION_CODENAME=yakkety\n== are we in docker =============================================\nNo\n== compiler =====================================================\nc++ (Ubuntu 6.2.0-5ubuntu12) 6.2.0 20161005\nCopyright (C) 2016 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n== uname -a =====================================================\nLinux Lyn 4.8.0-51-generic #54-Ubuntu SMP Tue Apr 25 16:32:21 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\n== check pips ===================================================\nnumpy (1.12.1)\nnumpydoc (0.6.0)\nprotobuf (3.3.0)\ntensorflow-gpu (1.1.0)\n== check for virtualenv =========================================\nFalse\n== tensorflow import ============================================\n2017-05-15 16:22:31.009080: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.\n2017-05-15 16:22:31.009102: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\n2017-05-15 16:22:31.009124: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\n2017-05-15 16:22:31.009131: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.\n2017-05-15 16:22:31.009139: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.\n2017-05-15 16:22:31.119107: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:901] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n2017-05-15 16:22:31.119494: I tensorflow/core/common_runtime/gpu/gpu_device.cc:887] Found device 0 with properties:\nname: GeForce 940MX\nmajor: 5 minor: 0 memoryClockRate (GHz) 0.993\npciBusID 0000:01:00.0\nTotal memory: 982.12MiB\nFree memory: 675.25MiB\n2017-05-15 16:22:31.119518: I tensorflow/core/common_runtime/gpu/gpu_device.cc:908] DMA: 0\n2017-05-15 16:22:31.119526: I tensorflow/core/common_runtime/gpu/gpu_device.cc:918] 0:   Y\n2017-05-15 16:22:31.119542: I tensorflow/core/common_runtime/gpu/gpu_device.cc:977] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce 940MX, pci bus id: 0000:01:00.0)\ntf.VERSION = 1.1.0\ntf.GIT_VERSION = v1.1.0-rc0-61-g1ec6ed5\ntf.COMPILER_VERSION = v1.1.0-rc0-61-g1ec6ed5\nSanity check: array([1], dtype=int32)\n== env ==========================================================\nLD_LIBRARY_PATH is unset\nDYLD_LIBRARY_PATH is unset\n== nvidia-smi ===================================================\nMon May 15 16:21:29 2017\n+-----------------------------------------------------------------------------+\n| NVIDIA-SMI 375.39                 Driver Version: 375.39                    |\n|-------------------------------+----------------------+----------------------+\n| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n|===============================+======================+======================|\n|   0  GeForce 940MX       Off  | 0000:01:00.0     Off |                  N/A |\n| N/A   43C    P0    N/A /  N/A |    262MiB /   982MiB |      0%      Default |\n+-------------------------------+----------------------+----------------------+\n+-----------------------------------------------------------------------------+\n| Processes:                                                       GPU Memory |\n|  GPU       PID  Type  Process name                               Usage      |\n|=============================================================================|\n|    0      1017    G   /usr/lib/xorg/Xorg                             168MiB |\n|    0      1860    G   /usr/bin/compiz                                 41MiB |\n|    0      2324    G   ...el-token=2DD3BDBDD08C58317A0131100BC13BC1    52MiB |\n+-----------------------------------------------------------------------------+\n== cuda libs  ===================================================\n\ntf.GIT_VERSION\nv1.1.0-rc0-61-g1ec6ed5\ntf.VERSION\n1.1.0\nDescribe the problem\nI have a laptop with a dedicated Nvidia GPU. I use it only for prototyping my tensorflow code.\nBut dedicated GPUs drain a lot of energy and reduce the laptop's battery life.\nSo when I'm outside on battery (eg: in the library at university) I always set Nvidia PRIME to use the integrated card only (type nvidia-settings in a console to reach this setting).\nWith the previous versions of tensorflow-gpu (installedi via pip3 on Ubuntu) everything worked well.\nNow with the current release I can no longer use tensorflow-gpu while I have the Nvidia card disabled with PRIME.\nNow, to be able to work with tensorflow AND have enough battery to conclude my day, I have to install the pip package \"tensorflow\" (and not \"tensorflow-gpu\"). but that turns useless if, for some reason, need to test my code with GPU acceleration, turning back on the dedicated graphic card via Nvidia PRIME.\nIf I really want GPU acceleration I have to re-enable the dedicated card in PRIME, uninstall tensorflow and reinstall tensorflow-gpu. every time. that's a mess!\nTo me, there are two way to resolve this bug:\n\nmake tensorflow-gpu again able to handle situation with all the Nvidia GPU are temporarily disabled.\nunify the tensorflow and tensorflow-gpu packages, including a smart logic inside them that enable the software to handle theese ibrid situations, which I think will be very common in the laptops in the near future\n\nSource code / logs\nimport tensorflow\nImportError                               Traceback (most recent call last)\n/home/federico/.local/lib/python3.5/site-packages/tensorflow/python/pywrap_tensorflow.py in ()\n40     sys.setdlopenflags(_default_dlopen_flags | ctypes.RTLD_GLOBAL)\n---> 41   from tensorflow.python.pywrap_tensorflow_internal import *\n42   from tensorflow.python.pywrap_tensorflow_internal import version\n/home/federico/.local/lib/python3.5/site-packages/tensorflow/python/pywrap_tensorflow_internal.py in ()\n27             return _mod\n---> 28     _pywrap_tensorflow_internal = swig_import_helper()\n29     del swig_import_helper\n/home/federico/.local/lib/python3.5/site-packages/tensorflow/python/pywrap_tensorflow_internal.py in swig_import_helper()\n23             try:\n---> 24                 _mod = imp.load_module('_pywrap_tensorflow_internal', fp, pathname, description)\n25             finally:\n/usr/lib/python3.5/imp.py in load_module(name, file, filename, details)\n241         else:\n--> 242             return load_dynamic(name, filename, file)\n243     elif type_ == PKG_DIRECTORY:\n/usr/lib/python3.5/imp.py in load_dynamic(name, path, file)\n341             name=name, loader=loader, origin=path)\n--> 342         return _load(spec)\n343\nImportError: libnvidia-fatbinaryloader.so.375.39: cannot open shared object file: No such file or directory\nDuring handling of the above exception, another exception occurred:\nImportError                               Traceback (most recent call last)\n in ()\n----> 1 import tensorflow\n/home/federico/.local/lib/python3.5/site-packages/tensorflow/init.py in ()\n22\n23 # pylint: disable=wildcard-import\n---> 24 from tensorflow.python import *\n25 # pylint: enable=wildcard-import\n26\n/home/federico/.local/lib/python3.5/site-packages/tensorflow/python/init.py in ()\n49 import numpy as np\n50\n---> 51 from tensorflow.python import pywrap_tensorflow\n52\n53 # Protocol buffers\n/home/federico/.local/lib/python3.5/site-packages/tensorflow/python/pywrap_tensorflow.py in ()\n50 for some common reasons and solutions.  Include the entire stack trace\n51 above this error message when asking for help.\"\"\" % traceback.format_exc()\n---> 52   raise ImportError(msg)\n53\n54 # pylint: enable=wildcard-import,g-import-not-at-top,unused-import,line-too-long\nImportError: Traceback (most recent call last):\nFile \"/home/federico/.local/lib/python3.5/site-packages/tensorflow/python/pywrap_tensorflow.py\", line 41, in \nfrom tensorflow.python.pywrap_tensorflow_internal import *\nFile \"/home/federico/.local/lib/python3.5/site-packages/tensorflow/python/pywrap_tensorflow_internal.py\", line 28, in \n_pywrap_tensorflow_internal = swig_import_helper()\nFile \"/home/federico/.local/lib/python3.5/site-packages/tensorflow/python/pywrap_tensorflow_internal.py\", line 24, in swig_import_helper\n_mod = imp.load_module('_pywrap_tensorflow_internal', fp, pathname, description)\nFile \"/usr/lib/python3.5/imp.py\", line 242, in load_module\nreturn load_dynamic(name, filename, file)\nFile \"/usr/lib/python3.5/imp.py\", line 342, in load_dynamic\nreturn _load(spec)\nImportError: libnvidia-fatbinaryloader.so.375.39: cannot open shared object file: No such file or directory\nFailed to load the native TensorFlow runtime.\nSee https://www.tensorflow.org/install/install_sources#common_installation_problems\nfor some common reasons and solutions.  Include the entire stack trace\nabove this error message when asking for help.", "body": "\r\n### System information\r\n- OS Platform and Distribution: Linux Ubuntu 16.10\r\n- TensorFlow installed from: binary\r\n- TensorFlow version: tensorflow-gpu-1.1.0\r\n- **CUDA/cuDNN version**:\r\n- GPU model and memory: GeForce 940MX 982MiB\r\n- Exact command to reproduce: import tensorflow\r\n\r\n\r\n== cat /etc/issue ===============================================\r\nLinux Lyn 4.8.0-51-generic #54-Ubuntu SMP Tue Apr 25 16:32:21 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\r\nVERSION=\"16.10 (Yakkety Yak)\"\r\nVERSION_ID=\"16.10\"\r\nVERSION_CODENAME=yakkety\r\n\r\n== are we in docker =============================================\r\nNo\r\n\r\n== compiler =====================================================\r\nc++ (Ubuntu 6.2.0-5ubuntu12) 6.2.0 20161005\r\nCopyright (C) 2016 Free Software Foundation, Inc.\r\nThis is free software; see the source for copying conditions.  There is NO\r\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n\r\n\r\n== uname -a =====================================================\r\nLinux Lyn 4.8.0-51-generic #54-Ubuntu SMP Tue Apr 25 16:32:21 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\r\n\r\n== check pips ===================================================\r\nnumpy (1.12.1)\r\nnumpydoc (0.6.0)\r\nprotobuf (3.3.0)\r\ntensorflow-gpu (1.1.0)\r\n\r\n== check for virtualenv =========================================\r\nFalse\r\n\r\n== tensorflow import ============================================\r\n2017-05-15 16:22:31.009080: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.\r\n2017-05-15 16:22:31.009102: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\r\n2017-05-15 16:22:31.009124: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\r\n2017-05-15 16:22:31.009131: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.\r\n2017-05-15 16:22:31.009139: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.\r\n2017-05-15 16:22:31.119107: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:901] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\r\n2017-05-15 16:22:31.119494: I tensorflow/core/common_runtime/gpu/gpu_device.cc:887] Found device 0 with properties: \r\nname: GeForce 940MX\r\nmajor: 5 minor: 0 memoryClockRate (GHz) 0.993\r\npciBusID 0000:01:00.0\r\nTotal memory: 982.12MiB\r\nFree memory: 675.25MiB\r\n2017-05-15 16:22:31.119518: I tensorflow/core/common_runtime/gpu/gpu_device.cc:908] DMA: 0 \r\n2017-05-15 16:22:31.119526: I tensorflow/core/common_runtime/gpu/gpu_device.cc:918] 0:   Y \r\n2017-05-15 16:22:31.119542: I tensorflow/core/common_runtime/gpu/gpu_device.cc:977] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce 940MX, pci bus id: 0000:01:00.0)\r\ntf.VERSION = 1.1.0\r\ntf.GIT_VERSION = v1.1.0-rc0-61-g1ec6ed5\r\ntf.COMPILER_VERSION = v1.1.0-rc0-61-g1ec6ed5\r\nSanity check: array([1], dtype=int32)\r\n\r\n== env ==========================================================\r\nLD_LIBRARY_PATH is unset\r\nDYLD_LIBRARY_PATH is unset\r\n\r\n== nvidia-smi ===================================================\r\nMon May 15 16:21:29 2017       \r\n+-----------------------------------------------------------------------------+\r\n| NVIDIA-SMI 375.39                 Driver Version: 375.39                    |\r\n|-------------------------------+----------------------+----------------------+\r\n| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\r\n| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\r\n|===============================+======================+======================|\r\n|   0  GeForce 940MX       Off  | 0000:01:00.0     Off |                  N/A |\r\n| N/A   43C    P0    N/A /  N/A |    262MiB /   982MiB |      0%      Default |\r\n+-------------------------------+----------------------+----------------------+\r\n                                                                               \r\n+-----------------------------------------------------------------------------+\r\n| Processes:                                                       GPU Memory |\r\n|  GPU       PID  Type  Process name                               Usage      |\r\n|=============================================================================|\r\n|    0      1017    G   /usr/lib/xorg/Xorg                             168MiB |\r\n|    0      1860    G   /usr/bin/compiz                                 41MiB |\r\n|    0      2324    G   ...el-token=2DD3BDBDD08C58317A0131100BC13BC1    52MiB |\r\n+-----------------------------------------------------------------------------+\r\n\r\n== cuda libs  ===================================================\r\n\r\n------------------\r\ntf.GIT_VERSION\r\nv1.1.0-rc0-61-g1ec6ed5\r\n\r\ntf.VERSION\r\n1.1.0\r\n\r\n### Describe the problem\r\nI have a laptop with a dedicated Nvidia GPU. I use it only for prototyping my tensorflow code.\r\nBut dedicated GPUs drain a lot of energy and reduce the laptop's battery life.\r\nSo when I'm outside on battery (eg: in the library at university) I always set Nvidia PRIME to use the integrated card only (type nvidia-settings in a console to reach this setting).\r\nWith the previous versions of tensorflow-gpu (installedi via pip3 on Ubuntu) everything worked well.\r\nNow with the current release I can no longer use tensorflow-gpu while I have the Nvidia card disabled with PRIME.\r\nNow, to be able to work with tensorflow AND have enough battery to conclude my day, I have to install the pip package \"tensorflow\" (and not \"tensorflow-gpu\"). but that turns useless if, for some reason, need to test my code with GPU acceleration, turning back on the dedicated graphic card via Nvidia PRIME.\r\nIf I really want GPU acceleration I have to re-enable the dedicated card in PRIME, uninstall tensorflow and reinstall tensorflow-gpu. every time. that's a mess!\r\nTo me, there are two way to resolve this bug:\r\n1) make tensorflow-gpu again able to handle situation with all the Nvidia GPU are temporarily disabled.\r\n2) unify the tensorflow and tensorflow-gpu packages, including a smart logic inside them that enable the software to handle theese ibrid situations, which I think will be very common in the laptops in the near future\r\n\r\n### Source code / logs\r\nimport tensorflow\r\n---------------------------------------------------------------------------\r\nImportError                               Traceback (most recent call last)\r\n/home/federico/.local/lib/python3.5/site-packages/tensorflow/python/pywrap_tensorflow.py in <module>()\r\n     40     sys.setdlopenflags(_default_dlopen_flags | ctypes.RTLD_GLOBAL)\r\n---> 41   from tensorflow.python.pywrap_tensorflow_internal import *\r\n     42   from tensorflow.python.pywrap_tensorflow_internal import __version__\r\n\r\n/home/federico/.local/lib/python3.5/site-packages/tensorflow/python/pywrap_tensorflow_internal.py in <module>()\r\n     27             return _mod\r\n---> 28     _pywrap_tensorflow_internal = swig_import_helper()\r\n     29     del swig_import_helper\r\n\r\n/home/federico/.local/lib/python3.5/site-packages/tensorflow/python/pywrap_tensorflow_internal.py in swig_import_helper()\r\n     23             try:\r\n---> 24                 _mod = imp.load_module('_pywrap_tensorflow_internal', fp, pathname, description)\r\n     25             finally:\r\n\r\n/usr/lib/python3.5/imp.py in load_module(name, file, filename, details)\r\n    241         else:\r\n--> 242             return load_dynamic(name, filename, file)\r\n    243     elif type_ == PKG_DIRECTORY:\r\n\r\n/usr/lib/python3.5/imp.py in load_dynamic(name, path, file)\r\n    341             name=name, loader=loader, origin=path)\r\n--> 342         return _load(spec)\r\n    343 \r\n\r\nImportError: libnvidia-fatbinaryloader.so.375.39: cannot open shared object file: No such file or directory\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nImportError                               Traceback (most recent call last)\r\n<ipython-input-1-a649b509054f> in <module>()\r\n----> 1 import tensorflow\r\n\r\n/home/federico/.local/lib/python3.5/site-packages/tensorflow/__init__.py in <module>()\r\n     22 \r\n     23 # pylint: disable=wildcard-import\r\n---> 24 from tensorflow.python import *\r\n     25 # pylint: enable=wildcard-import\r\n     26 \r\n\r\n/home/federico/.local/lib/python3.5/site-packages/tensorflow/python/__init__.py in <module>()\r\n     49 import numpy as np\r\n     50 \r\n---> 51 from tensorflow.python import pywrap_tensorflow\r\n     52 \r\n     53 # Protocol buffers\r\n\r\n/home/federico/.local/lib/python3.5/site-packages/tensorflow/python/pywrap_tensorflow.py in <module>()\r\n     50 for some common reasons and solutions.  Include the entire stack trace\r\n     51 above this error message when asking for help.\"\"\" % traceback.format_exc()\r\n---> 52   raise ImportError(msg)\r\n     53 \r\n     54 # pylint: enable=wildcard-import,g-import-not-at-top,unused-import,line-too-long\r\n\r\nImportError: Traceback (most recent call last):\r\n  File \"/home/federico/.local/lib/python3.5/site-packages/tensorflow/python/pywrap_tensorflow.py\", line 41, in <module>\r\n    from tensorflow.python.pywrap_tensorflow_internal import *\r\n  File \"/home/federico/.local/lib/python3.5/site-packages/tensorflow/python/pywrap_tensorflow_internal.py\", line 28, in <module>\r\n    _pywrap_tensorflow_internal = swig_import_helper()\r\n  File \"/home/federico/.local/lib/python3.5/site-packages/tensorflow/python/pywrap_tensorflow_internal.py\", line 24, in swig_import_helper\r\n    _mod = imp.load_module('_pywrap_tensorflow_internal', fp, pathname, description)\r\n  File \"/usr/lib/python3.5/imp.py\", line 242, in load_module\r\n    return load_dynamic(name, filename, file)\r\n  File \"/usr/lib/python3.5/imp.py\", line 342, in load_dynamic\r\n    return _load(spec)\r\nImportError: libnvidia-fatbinaryloader.so.375.39: cannot open shared object file: No such file or directory\r\n\r\n\r\nFailed to load the native TensorFlow runtime.\r\n\r\nSee https://www.tensorflow.org/install/install_sources#common_installation_problems\r\n\r\nfor some common reasons and solutions.  Include the entire stack trace\r\nabove this error message when asking for help.\r\n\r\n"}