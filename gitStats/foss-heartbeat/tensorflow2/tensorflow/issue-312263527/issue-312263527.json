{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18318", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18318/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18318/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18318/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18318", "id": 312263527, "node_id": "MDU6SXNzdWUzMTIyNjM1Mjc=", "number": 18318, "title": "Is input of tf.contrib.cudnn_rnn.CudnnLSTM time-major?", "user": {"login": "scotthuang1989", "id": 5325686, "node_id": "MDQ6VXNlcjUzMjU2ODY=", "avatar_url": "https://avatars3.githubusercontent.com/u/5325686?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scotthuang1989", "html_url": "https://github.com/scotthuang1989", "followers_url": "https://api.github.com/users/scotthuang1989/followers", "following_url": "https://api.github.com/users/scotthuang1989/following{/other_user}", "gists_url": "https://api.github.com/users/scotthuang1989/gists{/gist_id}", "starred_url": "https://api.github.com/users/scotthuang1989/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scotthuang1989/subscriptions", "organizations_url": "https://api.github.com/users/scotthuang1989/orgs", "repos_url": "https://api.github.com/users/scotthuang1989/repos", "events_url": "https://api.github.com/users/scotthuang1989/events{/privacy}", "received_events_url": "https://api.github.com/users/scotthuang1989/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-04-08T02:19:39Z", "updated_at": "2018-05-23T03:24:00Z", "closed_at": "2018-05-23T03:24:00Z", "author_association": "CONTRIBUTOR", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: 17.10</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.6</li>\n<li><strong>Python version</strong>: 3.6</li>\n<li><strong>Bazel version (if compiling from source)</strong>:</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:</li>\n<li><strong>CUDA/cuDNN version</strong>:9/7.0</li>\n<li><strong>GPU model and memory</strong>:</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I save this in tensorflow/models: <a href=\"https://github.com/tensorflow/models/blob/master/tutorials/rnn/quickdraw/train_model.py\">quick_draw exmple</a></p>\n<p>you can see that in the comment of this function.  it says that CudnnLSTM is time-major, so it need a transpose. But I don't find this information in documentation <a href=\"https://tensorflow.google.cn/versions/r1.6/api_docs/python/tf/contrib/cudnn_rnn/CudnnLSTM#__call__\" rel=\"nofollow\">here</a>:</p>\n<p>Where can I get confirmation of this ?</p>\n<pre><code>  def _add_cudnn_rnn_layers(convolved):\n    \"\"\"Adds CUDNN LSTM layers.\"\"\"\n    # Convolutions output [B, L, Ch], while CudnnLSTM is time-major.\n    convolved = tf.transpose(convolved, [1, 0, 2])\n    lstm = tf.contrib.cudnn_rnn.CudnnLSTM(\n        num_layers=params.num_layers,\n        num_units=params.num_nodes,\n        dropout=params.dropout if mode == tf.estimator.ModeKeys.TRAIN else 0.0,\n        direction=\"bidirectional\")\n    outputs, _ = lstm(convolved)\n    # Convert back from time-major outputs to batch-major outputs.\n    outputs = tf.transpose(outputs, [1, 0, 2])\n    return outputs\n\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): 17.10\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): 1.6\nPython version: 3.6\nBazel version (if compiling from source):\nGCC/Compiler version (if compiling from source):\nCUDA/cuDNN version:9/7.0\nGPU model and memory:\nExact command to reproduce:\n\nDescribe the problem\nI save this in tensorflow/models: quick_draw exmple\nyou can see that in the comment of this function.  it says that CudnnLSTM is time-major, so it need a transpose. But I don't find this information in documentation here:\nWhere can I get confirmation of this ?\n  def _add_cudnn_rnn_layers(convolved):\n    \"\"\"Adds CUDNN LSTM layers.\"\"\"\n    # Convolutions output [B, L, Ch], while CudnnLSTM is time-major.\n    convolved = tf.transpose(convolved, [1, 0, 2])\n    lstm = tf.contrib.cudnn_rnn.CudnnLSTM(\n        num_layers=params.num_layers,\n        num_units=params.num_nodes,\n        dropout=params.dropout if mode == tf.estimator.ModeKeys.TRAIN else 0.0,\n        direction=\"bidirectional\")\n    outputs, _ = lstm(convolved)\n    # Convert back from time-major outputs to batch-major outputs.\n    outputs = tf.transpose(outputs, [1, 0, 2])\n    return outputs", "body": "\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: 17.10\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.6\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**:9/7.0\r\n- **GPU model and memory**:\r\n- **Exact command to reproduce**:\r\n\r\n### Describe the problem\r\n\r\nI save this in tensorflow/models: [quick_draw exmple](https://github.com/tensorflow/models/blob/master/tutorials/rnn/quickdraw/train_model.py)\r\n\r\nyou can see that in the comment of this function.  it says that CudnnLSTM is time-major, so it need a transpose. But I don't find this information in documentation [here](https://tensorflow.google.cn/versions/r1.6/api_docs/python/tf/contrib/cudnn_rnn/CudnnLSTM#__call__):\r\n\r\nWhere can I get confirmation of this ?\r\n```\r\n  def _add_cudnn_rnn_layers(convolved):\r\n    \"\"\"Adds CUDNN LSTM layers.\"\"\"\r\n    # Convolutions output [B, L, Ch], while CudnnLSTM is time-major.\r\n    convolved = tf.transpose(convolved, [1, 0, 2])\r\n    lstm = tf.contrib.cudnn_rnn.CudnnLSTM(\r\n        num_layers=params.num_layers,\r\n        num_units=params.num_nodes,\r\n        dropout=params.dropout if mode == tf.estimator.ModeKeys.TRAIN else 0.0,\r\n        direction=\"bidirectional\")\r\n    outputs, _ = lstm(convolved)\r\n    # Convert back from time-major outputs to batch-major outputs.\r\n    outputs = tf.transpose(outputs, [1, 0, 2])\r\n    return outputs\r\n\r\n```\r\n"}