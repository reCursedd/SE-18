{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/383163536", "html_url": "https://github.com/tensorflow/tensorflow/pull/17943#issuecomment-383163536", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17943", "id": 383163536, "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzE2MzUzNg==", "user": {"login": "gzmkl", "id": 29215195, "node_id": "MDQ6VXNlcjI5MjE1MTk1", "avatar_url": "https://avatars0.githubusercontent.com/u/29215195?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gzmkl", "html_url": "https://github.com/gzmkl", "followers_url": "https://api.github.com/users/gzmkl/followers", "following_url": "https://api.github.com/users/gzmkl/following{/other_user}", "gists_url": "https://api.github.com/users/gzmkl/gists{/gist_id}", "starred_url": "https://api.github.com/users/gzmkl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gzmkl/subscriptions", "organizations_url": "https://api.github.com/users/gzmkl/orgs", "repos_url": "https://api.github.com/users/gzmkl/repos", "events_url": "https://api.github.com/users/gzmkl/events{/privacy}", "received_events_url": "https://api.github.com/users/gzmkl/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-20T17:17:06Z", "updated_at": "2018-04-20T17:17:06Z", "author_association": "CONTRIBUTOR", "body_html": "<div class=\"email-fragment\">Hi Rasmus,\n\nI have done as much as I can based on valuable suggestions from you and your team.\n\nThe MKL DNN reuse thing is basically rewriting the original integration code. So there are lots of code changes\nby multiple peoples, some of whom did the TF contribution first-time.\n\nI will make sure your suggestion will be reflected in near future PRs (primitive reuse for conv bwd, batchnort, relu etc).\n\nBest Regards,\nGZ\n\nFrom: Rasmus Munk Larsen [mailto:notifications@github.com]\nSent: Tuesday, April 17, 2018 6:21 PM\nTo: tensorflow/tensorflow &lt;tensorflow@noreply.github.com&gt;\nCc: Zhuang, Guozhong &lt;guozhong.zhuang@intel.com&gt;; Mention &lt;mention@noreply.github.com&gt;\nSubject: Re: [tensorflow/tensorflow] MKLDNN: conv2d forward DNN primitive reuse enhancement (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"307901554\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/17943\" href=\"https://github.com/tensorflow/tensorflow/pull/17943\">#17943</a>)\n\n\n<a class=\"user-mention\" href=\"https://github.com/rmlarsen\">@rmlarsen</a> requested changes on this pull request.</div>\n<div class=\"email-signature-reply\">________________________________\n\nIn tensorflow/core/kernels/mkl_conv_ops.cc&lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"307901554\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/17943\" href=\"https://github.com/tensorflow/tensorflow/pull/17943#discussion_r182284013\">#17943 (comment)</a>&gt;:</div>\n<div class=\"email-quoted-reply\"> +</div>\n<div class=\"email-fragment\">+template &lt;typename T&gt;\n\n+class Conv2DFwd : public DnnOp {\n\n+ public:\n\n+  explicit Conv2DFwd(const ConvFwdDimensions&amp; convFwdDims) {\n\n+    fwd_stream_.reset(new stream(stream::kind::eager));\n\n+    // create conv primitive\n\n+    if (conv_fwd_ == nullptr) {\n\n+      Setup(convFwdDims);\n\n+    }\n\n+  }\n\n+\n\n+  ~Conv2DFwd() {}\n\n+\n\n+  // Convolution forward execute with bias\n\n+  void Execute(T* src, T* w, T* b, T* dst) {\n\nCan you make these parameter names more readable as well?</div>\n<div class=\"email-signature-reply\">________________________________\n\nIn tensorflow/core/kernels/mkl_conv_ops.cc&lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"307901554\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/17943\" href=\"https://github.com/tensorflow/tensorflow/pull/17943#discussion_r182284042\">#17943 (comment)</a>&gt;:</div>\n<div class=\"email-quoted-reply\"> +    filter_mem_-&gt;set_data_handle(static_cast&lt;void*&gt;(w));</div>\n<div class=\"email-fragment\">+    bias_mem_-&gt;set_data_handle(static_cast&lt;void*&gt;(b));\n\n+    dst_mem_-&gt;set_data_handle(static_cast&lt;void*&gt;(dst));\n\n+    fwd_stream_-&gt;submit(fwd_primitives_);\n\n+\n\n+    // after exec, set data handle back\n\n+    src_mem_-&gt;set_data_handle(DummyData);\n\n+    filter_mem_-&gt;set_data_handle(DummyData);\n\n+    bias_mem_-&gt;set_data_handle(DummyData);\n\n+    dst_mem_-&gt;set_data_handle(DummyData);\n\n+\n\n+    return;\n\n+  }\n\n+\n\n+  // Convolution forward execute without bias\n\n+  void Execute(T* src, T* w, T* dst) {\n\neschew abbreviation</div>\n<div class=\"email-signature-reply\">________________________________\n\nIn tensorflow/core/kernels/mkl_conv_ops.cc&lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"307901554\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/17943\" href=\"https://github.com/tensorflow/tensorflow/pull/17943#discussion_r182284106\">#17943 (comment)</a>&gt;:</div>\n<div class=\"email-quoted-reply\"> +  }</div>\n<div class=\"email-fragment\">+\n\n+  // MKLDNN memory\n\n+  std::shared_ptr&lt;mkldnn::memory&gt; src_mem_;\n\n+  std::shared_ptr&lt;mkldnn::memory&gt; filter_mem_;\n\n+  std::shared_ptr&lt;mkldnn::memory&gt; bias_mem_;\n\n+  std::shared_ptr&lt;mkldnn::memory&gt; dst_mem_;\n\n+\n\n+  std::shared_ptr&lt;mkldnn::stream&gt; fwd_stream_;\n\n+  std::vector&lt;mkldnn::primitive&gt; fwd_primitives_;\n\n+\n\n+  // desc &amp; prmitive desc\n\n+  std::shared_ptr&lt;mkldnn::convolution_forward::desc&gt; fwd_desc_;\n\n+\n\n+  // memory desc\n\n+  std::shared_ptr&lt;mkldnn::memory::desc&gt; src_md_;\n\ns/md/mem_desc/g ?</div>\n<div class=\"email-signature-reply\">________________________________\n\nIn tensorflow/core/kernels/mkl_conv_ops.cc&lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"307901554\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/17943\" href=\"https://github.com/tensorflow/tensorflow/pull/17943#discussion_r182284191\">#17943 (comment)</a>&gt;:</div>\n<div class=\"email-quoted-reply\"> -</div>\n<div class=\"email-fragment\">-          auto conv_prim_desc = convolution_forward::primitive_desc(conv_desc,\n\n-                                                                  cpu_engine);\n\n-          AllocateOutputTensor(context, conv_prim_desc, output_dims_mkl_order,\n\n-                               tf_fmt, &amp;output_tensor);\n\n-          // Set data handle for output.\n\n-          output.SetUsrMemDataHandle(output_tensor);\n\n-\n\n-          Tensor* filter_out_tensor = nullptr;\n\n-          AllocateFilterOutputTensor(context, conv_prim_desc,\n\n-                TFShapeToMklDnnDims(filter_tf_shape),\n\n-                &amp;filter_out_tensor);\n\n-          PrepareAndExecuteNet(conv_prim_desc, &amp;src, &amp;filter,\n\n-                              nullptr, &amp;output, filter_out_tensor);\n\n+        ConvFwdDimensions convFwdDims(src_dims, filter_dims, NONE_DIMS,\n\n+            dst_dims_mkl_order, strides, dilations, padding_l, padding_r);\n\ns/l/left/ s/r/right/</div>\n<div class=\"email-signature-reply\">________________________________\n\nIn tensorflow/core/kernels/mkl_conv_ops.cc&lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"307901554\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/17943\" href=\"https://github.com/tensorflow/tensorflow/pull/17943#discussion_r182284229\">#17943 (comment)</a>&gt;:</div>\n<div class=\"email-quoted-reply\">        }</div>\n<div class=\"email-fragment\">-    } catch (mkldnn::error&amp; e) {\n\n+\n\n+      // allocate output tensors output_tensor and filter_out_tensor\n\n+      std::shared_ptr&lt;mkldnn::convolution_forward::primitive_desc&gt;\n\n+      conv_fwd_pd = conv2d_fwd-&gt;fwd_pd_;\n\nWhat is \"pd\"? write out.\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub&lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"307901554\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/17943\" href=\"https://github.com/tensorflow/tensorflow/pull/17943#pullrequestreview-113049566\">#17943 (review)</a>&gt;, or mute the thread&lt;<a href=\"https://github.com/notifications/unsubscribe-auth/Ab3J2-AwHimWA_0vICHfNgGBY4X4nZLjks5tppTvgaJpZM4S4K7m\">https://github.com/notifications/unsubscribe-auth/Ab3J2-AwHimWA_0vICHfNgGBY4X4nZLjks5tppTvgaJpZM4S4K7m</a>&gt;.</div>", "body_text": "Hi Rasmus,\n\nI have done as much as I can based on valuable suggestions from you and your team.\n\nThe MKL DNN reuse thing is basically rewriting the original integration code. So there are lots of code changes\nby multiple peoples, some of whom did the TF contribution first-time.\n\nI will make sure your suggestion will be reflected in near future PRs (primitive reuse for conv bwd, batchnort, relu etc).\n\nBest Regards,\nGZ\n\nFrom: Rasmus Munk Larsen [mailto:notifications@github.com]\nSent: Tuesday, April 17, 2018 6:21 PM\nTo: tensorflow/tensorflow <tensorflow@noreply.github.com>\nCc: Zhuang, Guozhong <guozhong.zhuang@intel.com>; Mention <mention@noreply.github.com>\nSubject: Re: [tensorflow/tensorflow] MKLDNN: conv2d forward DNN primitive reuse enhancement (#17943)\n\n\n@rmlarsen requested changes on this pull request.\n________________________________\n\nIn tensorflow/core/kernels/mkl_conv_ops.cc<#17943 (comment)>:\n +\n+template <typename T>\n\n+class Conv2DFwd : public DnnOp {\n\n+ public:\n\n+  explicit Conv2DFwd(const ConvFwdDimensions& convFwdDims) {\n\n+    fwd_stream_.reset(new stream(stream::kind::eager));\n\n+    // create conv primitive\n\n+    if (conv_fwd_ == nullptr) {\n\n+      Setup(convFwdDims);\n\n+    }\n\n+  }\n\n+\n\n+  ~Conv2DFwd() {}\n\n+\n\n+  // Convolution forward execute with bias\n\n+  void Execute(T* src, T* w, T* b, T* dst) {\n\nCan you make these parameter names more readable as well?\n________________________________\n\nIn tensorflow/core/kernels/mkl_conv_ops.cc<#17943 (comment)>:\n +    filter_mem_->set_data_handle(static_cast<void*>(w));\n+    bias_mem_->set_data_handle(static_cast<void*>(b));\n\n+    dst_mem_->set_data_handle(static_cast<void*>(dst));\n\n+    fwd_stream_->submit(fwd_primitives_);\n\n+\n\n+    // after exec, set data handle back\n\n+    src_mem_->set_data_handle(DummyData);\n\n+    filter_mem_->set_data_handle(DummyData);\n\n+    bias_mem_->set_data_handle(DummyData);\n\n+    dst_mem_->set_data_handle(DummyData);\n\n+\n\n+    return;\n\n+  }\n\n+\n\n+  // Convolution forward execute without bias\n\n+  void Execute(T* src, T* w, T* dst) {\n\neschew abbreviation\n________________________________\n\nIn tensorflow/core/kernels/mkl_conv_ops.cc<#17943 (comment)>:\n +  }\n+\n\n+  // MKLDNN memory\n\n+  std::shared_ptr<mkldnn::memory> src_mem_;\n\n+  std::shared_ptr<mkldnn::memory> filter_mem_;\n\n+  std::shared_ptr<mkldnn::memory> bias_mem_;\n\n+  std::shared_ptr<mkldnn::memory> dst_mem_;\n\n+\n\n+  std::shared_ptr<mkldnn::stream> fwd_stream_;\n\n+  std::vector<mkldnn::primitive> fwd_primitives_;\n\n+\n\n+  // desc & prmitive desc\n\n+  std::shared_ptr<mkldnn::convolution_forward::desc> fwd_desc_;\n\n+\n\n+  // memory desc\n\n+  std::shared_ptr<mkldnn::memory::desc> src_md_;\n\ns/md/mem_desc/g ?\n________________________________\n\nIn tensorflow/core/kernels/mkl_conv_ops.cc<#17943 (comment)>:\n -\n-          auto conv_prim_desc = convolution_forward::primitive_desc(conv_desc,\n\n-                                                                  cpu_engine);\n\n-          AllocateOutputTensor(context, conv_prim_desc, output_dims_mkl_order,\n\n-                               tf_fmt, &output_tensor);\n\n-          // Set data handle for output.\n\n-          output.SetUsrMemDataHandle(output_tensor);\n\n-\n\n-          Tensor* filter_out_tensor = nullptr;\n\n-          AllocateFilterOutputTensor(context, conv_prim_desc,\n\n-                TFShapeToMklDnnDims(filter_tf_shape),\n\n-                &filter_out_tensor);\n\n-          PrepareAndExecuteNet(conv_prim_desc, &src, &filter,\n\n-                              nullptr, &output, filter_out_tensor);\n\n+        ConvFwdDimensions convFwdDims(src_dims, filter_dims, NONE_DIMS,\n\n+            dst_dims_mkl_order, strides, dilations, padding_l, padding_r);\n\ns/l/left/ s/r/right/\n________________________________\n\nIn tensorflow/core/kernels/mkl_conv_ops.cc<#17943 (comment)>:\n        }\n-    } catch (mkldnn::error& e) {\n\n+\n\n+      // allocate output tensors output_tensor and filter_out_tensor\n\n+      std::shared_ptr<mkldnn::convolution_forward::primitive_desc>\n\n+      conv_fwd_pd = conv2d_fwd->fwd_pd_;\n\nWhat is \"pd\"? write out.\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub<#17943 (review)>, or mute the thread<https://github.com/notifications/unsubscribe-auth/Ab3J2-AwHimWA_0vICHfNgGBY4X4nZLjks5tppTvgaJpZM4S4K7m>.", "body": "Hi Rasmus,\r\n\r\nI have done as much as I can based on valuable suggestions from you and your team.\r\n\r\nThe MKL DNN reuse thing is basically rewriting the original integration code. So there are lots of code changes\r\nby multiple peoples, some of whom did the TF contribution first-time.\r\n\r\nI will make sure your suggestion will be reflected in near future PRs (primitive reuse for conv bwd, batchnort, relu etc).\r\n\r\nBest Regards,\r\nGZ\r\n\r\nFrom: Rasmus Munk Larsen [mailto:notifications@github.com]\r\nSent: Tuesday, April 17, 2018 6:21 PM\r\nTo: tensorflow/tensorflow <tensorflow@noreply.github.com>\r\nCc: Zhuang, Guozhong <guozhong.zhuang@intel.com>; Mention <mention@noreply.github.com>\r\nSubject: Re: [tensorflow/tensorflow] MKLDNN: conv2d forward DNN primitive reuse enhancement (#17943)\r\n\r\n\r\n@rmlarsen requested changes on this pull request.\r\n\r\n________________________________\r\n\r\nIn tensorflow/core/kernels/mkl_conv_ops.cc<https://github.com/tensorflow/tensorflow/pull/17943#discussion_r182284013>:\r\n\r\n> +\r\n\r\n+template <typename T>\r\n\r\n+class Conv2DFwd : public DnnOp {\r\n\r\n+ public:\r\n\r\n+  explicit Conv2DFwd(const ConvFwdDimensions& convFwdDims) {\r\n\r\n+    fwd_stream_.reset(new stream(stream::kind::eager));\r\n\r\n+    // create conv primitive\r\n\r\n+    if (conv_fwd_ == nullptr) {\r\n\r\n+      Setup(convFwdDims);\r\n\r\n+    }\r\n\r\n+  }\r\n\r\n+\r\n\r\n+  ~Conv2DFwd() {}\r\n\r\n+\r\n\r\n+  // Convolution forward execute with bias\r\n\r\n+  void Execute(T* src, T* w, T* b, T* dst) {\r\n\r\nCan you make these parameter names more readable as well?\r\n\r\n________________________________\r\n\r\nIn tensorflow/core/kernels/mkl_conv_ops.cc<https://github.com/tensorflow/tensorflow/pull/17943#discussion_r182284042>:\r\n\r\n> +    filter_mem_->set_data_handle(static_cast<void*>(w));\r\n\r\n+    bias_mem_->set_data_handle(static_cast<void*>(b));\r\n\r\n+    dst_mem_->set_data_handle(static_cast<void*>(dst));\r\n\r\n+    fwd_stream_->submit(fwd_primitives_);\r\n\r\n+\r\n\r\n+    // after exec, set data handle back\r\n\r\n+    src_mem_->set_data_handle(DummyData);\r\n\r\n+    filter_mem_->set_data_handle(DummyData);\r\n\r\n+    bias_mem_->set_data_handle(DummyData);\r\n\r\n+    dst_mem_->set_data_handle(DummyData);\r\n\r\n+\r\n\r\n+    return;\r\n\r\n+  }\r\n\r\n+\r\n\r\n+  // Convolution forward execute without bias\r\n\r\n+  void Execute(T* src, T* w, T* dst) {\r\n\r\neschew abbreviation\r\n\r\n________________________________\r\n\r\nIn tensorflow/core/kernels/mkl_conv_ops.cc<https://github.com/tensorflow/tensorflow/pull/17943#discussion_r182284106>:\r\n\r\n> +  }\r\n\r\n+\r\n\r\n+  // MKLDNN memory\r\n\r\n+  std::shared_ptr<mkldnn::memory> src_mem_;\r\n\r\n+  std::shared_ptr<mkldnn::memory> filter_mem_;\r\n\r\n+  std::shared_ptr<mkldnn::memory> bias_mem_;\r\n\r\n+  std::shared_ptr<mkldnn::memory> dst_mem_;\r\n\r\n+\r\n\r\n+  std::shared_ptr<mkldnn::stream> fwd_stream_;\r\n\r\n+  std::vector<mkldnn::primitive> fwd_primitives_;\r\n\r\n+\r\n\r\n+  // desc & prmitive desc\r\n\r\n+  std::shared_ptr<mkldnn::convolution_forward::desc> fwd_desc_;\r\n\r\n+\r\n\r\n+  // memory desc\r\n\r\n+  std::shared_ptr<mkldnn::memory::desc> src_md_;\r\n\r\ns/md/mem_desc/g ?\r\n\r\n________________________________\r\n\r\nIn tensorflow/core/kernels/mkl_conv_ops.cc<https://github.com/tensorflow/tensorflow/pull/17943#discussion_r182284191>:\r\n\r\n> -\r\n\r\n-          auto conv_prim_desc = convolution_forward::primitive_desc(conv_desc,\r\n\r\n-                                                                  cpu_engine);\r\n\r\n-          AllocateOutputTensor(context, conv_prim_desc, output_dims_mkl_order,\r\n\r\n-                               tf_fmt, &output_tensor);\r\n\r\n-          // Set data handle for output.\r\n\r\n-          output.SetUsrMemDataHandle(output_tensor);\r\n\r\n-\r\n\r\n-          Tensor* filter_out_tensor = nullptr;\r\n\r\n-          AllocateFilterOutputTensor(context, conv_prim_desc,\r\n\r\n-                TFShapeToMklDnnDims(filter_tf_shape),\r\n\r\n-                &filter_out_tensor);\r\n\r\n-          PrepareAndExecuteNet(conv_prim_desc, &src, &filter,\r\n\r\n-                              nullptr, &output, filter_out_tensor);\r\n\r\n+        ConvFwdDimensions convFwdDims(src_dims, filter_dims, NONE_DIMS,\r\n\r\n+            dst_dims_mkl_order, strides, dilations, padding_l, padding_r);\r\n\r\ns/l/left/ s/r/right/\r\n\r\n________________________________\r\n\r\nIn tensorflow/core/kernels/mkl_conv_ops.cc<https://github.com/tensorflow/tensorflow/pull/17943#discussion_r182284229>:\r\n\r\n>        }\r\n\r\n-    } catch (mkldnn::error& e) {\r\n\r\n+\r\n\r\n+      // allocate output tensors output_tensor and filter_out_tensor\r\n\r\n+      std::shared_ptr<mkldnn::convolution_forward::primitive_desc>\r\n\r\n+      conv_fwd_pd = conv2d_fwd->fwd_pd_;\r\n\r\nWhat is \"pd\"? write out.\r\n\r\n\u2014\r\nYou are receiving this because you were mentioned.\r\nReply to this email directly, view it on GitHub<https://github.com/tensorflow/tensorflow/pull/17943#pullrequestreview-113049566>, or mute the thread<https://github.com/notifications/unsubscribe-auth/Ab3J2-AwHimWA_0vICHfNgGBY4X4nZLjks5tppTvgaJpZM4S4K7m>.\r\n"}