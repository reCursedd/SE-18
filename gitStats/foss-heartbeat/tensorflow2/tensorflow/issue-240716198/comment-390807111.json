{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/390807111", "html_url": "https://github.com/tensorflow/tensorflow/issues/11303#issuecomment-390807111", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11303", "id": 390807111, "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDgwNzExMQ==", "user": {"login": "Androbin", "id": 16437156, "node_id": "MDQ6VXNlcjE2NDM3MTU2", "avatar_url": "https://avatars1.githubusercontent.com/u/16437156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Androbin", "html_url": "https://github.com/Androbin", "followers_url": "https://api.github.com/users/Androbin/followers", "following_url": "https://api.github.com/users/Androbin/following{/other_user}", "gists_url": "https://api.github.com/users/Androbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Androbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Androbin/subscriptions", "organizations_url": "https://api.github.com/users/Androbin/orgs", "repos_url": "https://api.github.com/users/Androbin/repos", "events_url": "https://api.github.com/users/Androbin/events{/privacy}", "received_events_url": "https://api.github.com/users/Androbin/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-21T22:55:28Z", "updated_at": "2018-05-21T22:57:05Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Slightly different question (from <a href=\"https://stackoverflow.com/q/45033413\" rel=\"nofollow\">https://stackoverflow.com/q/45033413</a>):</p>\n<blockquote>\n<p>I wish to add functionality to my code such that if I desire to terminate the code at any point it will safely terminate training and save the variables. Although I've tried searching for a better solution, I think catching a KeyboardInterrupt exception would be my best bet.</p>\n<p>Would it, however, be safe? More specifically, would the following code work:</p>\n</blockquote>\n<pre><code>with tf.Session() as sess:\n  try:\n    for i in range(FLAGS.max_steps):\n      sess.run(train_op, feed_dict=some_feed_dictionary)\n      # Some other summary writing and evaluative operations\n  except KeyboardInterrupt:\n    print(\"Manual interrupt occurred.\")\n\n  print('Done training for {} steps'.format(global_steps))\n  save_path = saver.save(sess, 'Standard CNN', global_step=global_steps, write_meta_graph=False)\n</code></pre>\n<blockquote>\n<p>Or is it unsafe and can result in corrupted save files considering the Keyboard Interrupt is free to occur in the middle of any tensorflow operation? Is there an adequate way of doing this?</p>\n</blockquote>\n<p>Is the call to <code>sess.run</code> (or the important parts of it) atomic on the Python side?<br>\nAt least <a href=\"https://github.com/tensorflow/tensorflow/issues/11982#issuecomment-361428885\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/11982/hovercard\">this comment</a> by <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=161459\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/petewarden\">@petewarden</a> suggests it is.</p>", "body_text": "Slightly different question (from https://stackoverflow.com/q/45033413):\n\nI wish to add functionality to my code such that if I desire to terminate the code at any point it will safely terminate training and save the variables. Although I've tried searching for a better solution, I think catching a KeyboardInterrupt exception would be my best bet.\nWould it, however, be safe? More specifically, would the following code work:\n\nwith tf.Session() as sess:\n  try:\n    for i in range(FLAGS.max_steps):\n      sess.run(train_op, feed_dict=some_feed_dictionary)\n      # Some other summary writing and evaluative operations\n  except KeyboardInterrupt:\n    print(\"Manual interrupt occurred.\")\n\n  print('Done training for {} steps'.format(global_steps))\n  save_path = saver.save(sess, 'Standard CNN', global_step=global_steps, write_meta_graph=False)\n\n\nOr is it unsafe and can result in corrupted save files considering the Keyboard Interrupt is free to occur in the middle of any tensorflow operation? Is there an adequate way of doing this?\n\nIs the call to sess.run (or the important parts of it) atomic on the Python side?\nAt least this comment by @petewarden suggests it is.", "body": "Slightly different question (from https://stackoverflow.com/q/45033413):\r\n\r\n> I wish to add functionality to my code such that if I desire to terminate the code at any point it will safely terminate training and save the variables. Although I've tried searching for a better solution, I think catching a KeyboardInterrupt exception would be my best bet.\r\n> \r\n> Would it, however, be safe? More specifically, would the following code work:\r\n\r\n```\r\nwith tf.Session() as sess:\r\n  try:\r\n    for i in range(FLAGS.max_steps):\r\n      sess.run(train_op, feed_dict=some_feed_dictionary)\r\n      # Some other summary writing and evaluative operations\r\n  except KeyboardInterrupt:\r\n    print(\"Manual interrupt occurred.\")\r\n\r\n  print('Done training for {} steps'.format(global_steps))\r\n  save_path = saver.save(sess, 'Standard CNN', global_step=global_steps, write_meta_graph=False)\r\n```\r\n\r\n> Or is it unsafe and can result in corrupted save files considering the Keyboard Interrupt is free to occur in the middle of any tensorflow operation? Is there an adequate way of doing this?\r\n\r\nIs the call to `sess.run` (or the important parts of it) atomic on the Python side?\r\nAt least [this comment](https://github.com/tensorflow/tensorflow/issues/11982#issuecomment-361428885) by @petewarden suggests it is."}