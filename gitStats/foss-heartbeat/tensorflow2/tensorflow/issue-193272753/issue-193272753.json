{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6054", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6054/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6054/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6054/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/6054", "id": 193272753, "node_id": "MDU6SXNzdWUxOTMyNzI3NTM=", "number": 6054, "title": "Do the ksize and strides value of tf.nn.max_pool() support tf.Tensor ?", "user": {"login": "karlTUM", "id": 15608199, "node_id": "MDQ6VXNlcjE1NjA4MTk5", "avatar_url": "https://avatars2.githubusercontent.com/u/15608199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karlTUM", "html_url": "https://github.com/karlTUM", "followers_url": "https://api.github.com/users/karlTUM/followers", "following_url": "https://api.github.com/users/karlTUM/following{/other_user}", "gists_url": "https://api.github.com/users/karlTUM/gists{/gist_id}", "starred_url": "https://api.github.com/users/karlTUM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karlTUM/subscriptions", "organizations_url": "https://api.github.com/users/karlTUM/orgs", "repos_url": "https://api.github.com/users/karlTUM/repos", "events_url": "https://api.github.com/users/karlTUM/events{/privacy}", "received_events_url": "https://api.github.com/users/karlTUM/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586558, "node_id": "MDU6TGFiZWw0MDQ1ODY1NTg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:community%20support", "name": "stat:community support", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-03T07:42:16Z", "updated_at": "2017-04-24T17:06:25Z", "closed_at": "2017-04-24T17:06:25Z", "author_association": "NONE", "body_html": "<p>Here is the problem:<br>\nI would like to train a network with two different shapes of input tensor. Each epoch chooses one type. Here I write a small code:</p>\n<pre><code>import tensorflow as tf\nimport numpy as np\n\n\nwith tf.Session() as sess:\n\n    imgs1 = tf.placeholder(tf.float32, [4, 224, 224, 3], name = 'input_imgs1')\n    imgs2 = tf.placeholder(tf.float32, [4, 180, 180, 3], name = 'input_imgs2')\n    epoch_num_tf = tf.placeholder(tf.int32, [], name = 'input_epoch_num')\n\n    imgs = tf.cond(tf.equal(tf.mod(epoch_num_tf, 2), 0), \n                lambda: tf.Print(imgs2, [imgs2.get_shape()], message='(even number) input epoch number is '),\n                lambda: tf.Print(imgs1, [imgs1.get_shape()], message='(odd number) input epoch number is'))\n\n\n    print(imgs.get_shape())\n\n\n    for epoch in range(10):\n        epoch_num = np.array(epoch).astype(np.int32)\n        imgs1_input = np.ones([4, 224, 224, 3], dtype = np.float32)\n        imgs2_input = np.ones([4, 180, 180, 3], dtype = np.float32)\n\n        output = sess.run(imgs, feed_dict = {epoch_num_tf: epoch_num,\n                                          imgs1: imgs1_input,\n                                          imgs2: imgs2_input})\n</code></pre>\n<p>When I execute it, the output of <code>imgs.get_shape()</code> is <code>(4, ?, ?, 3)</code> i.e. <code>imgs.get_shape()[1]=None, imgs.get_shape()[2]=None</code>.</p>\n<p>But I will use the value of the output of <code>imgs.get_shape()</code> to define the kernel (<code>ksize</code>) and strides size (<code>strides</code>) of the <code>tf.nn.max_pool()</code> e.g. <code>ksize=[1,imgs.get_shape()[1]/6, imgs.get_shape()[2]/6, 1]</code> in the future code. I think ksize and strides cannot support <code>tf.Tensor</code> value.</p>\n<p>How to solve this problem?</p>\n<p>I also asked in the <a href=\"http://stackoverflow.com/questions/40932002/tensorflow-how-to-set-the-shape-of-tensor-with-different-conditional-statements\" rel=\"nofollow\">stackoverflow</a>.</p>", "body_text": "Here is the problem:\nI would like to train a network with two different shapes of input tensor. Each epoch chooses one type. Here I write a small code:\nimport tensorflow as tf\nimport numpy as np\n\n\nwith tf.Session() as sess:\n\n    imgs1 = tf.placeholder(tf.float32, [4, 224, 224, 3], name = 'input_imgs1')\n    imgs2 = tf.placeholder(tf.float32, [4, 180, 180, 3], name = 'input_imgs2')\n    epoch_num_tf = tf.placeholder(tf.int32, [], name = 'input_epoch_num')\n\n    imgs = tf.cond(tf.equal(tf.mod(epoch_num_tf, 2), 0), \n                lambda: tf.Print(imgs2, [imgs2.get_shape()], message='(even number) input epoch number is '),\n                lambda: tf.Print(imgs1, [imgs1.get_shape()], message='(odd number) input epoch number is'))\n\n\n    print(imgs.get_shape())\n\n\n    for epoch in range(10):\n        epoch_num = np.array(epoch).astype(np.int32)\n        imgs1_input = np.ones([4, 224, 224, 3], dtype = np.float32)\n        imgs2_input = np.ones([4, 180, 180, 3], dtype = np.float32)\n\n        output = sess.run(imgs, feed_dict = {epoch_num_tf: epoch_num,\n                                          imgs1: imgs1_input,\n                                          imgs2: imgs2_input})\n\nWhen I execute it, the output of imgs.get_shape() is (4, ?, ?, 3) i.e. imgs.get_shape()[1]=None, imgs.get_shape()[2]=None.\nBut I will use the value of the output of imgs.get_shape() to define the kernel (ksize) and strides size (strides) of the tf.nn.max_pool() e.g. ksize=[1,imgs.get_shape()[1]/6, imgs.get_shape()[2]/6, 1] in the future code. I think ksize and strides cannot support tf.Tensor value.\nHow to solve this problem?\nI also asked in the stackoverflow.", "body": "Here is the problem:\r\nI would like to train a network with two different shapes of input tensor. Each epoch chooses one type. Here I write a small code:\r\n\r\n```\r\nimport tensorflow as tf\r\nimport numpy as np\r\n\r\n\r\nwith tf.Session() as sess:\r\n\r\n    imgs1 = tf.placeholder(tf.float32, [4, 224, 224, 3], name = 'input_imgs1')\r\n    imgs2 = tf.placeholder(tf.float32, [4, 180, 180, 3], name = 'input_imgs2')\r\n    epoch_num_tf = tf.placeholder(tf.int32, [], name = 'input_epoch_num')\r\n\r\n    imgs = tf.cond(tf.equal(tf.mod(epoch_num_tf, 2), 0), \r\n                lambda: tf.Print(imgs2, [imgs2.get_shape()], message='(even number) input epoch number is '),\r\n                lambda: tf.Print(imgs1, [imgs1.get_shape()], message='(odd number) input epoch number is'))\r\n\r\n\r\n    print(imgs.get_shape())\r\n\r\n\r\n    for epoch in range(10):\r\n        epoch_num = np.array(epoch).astype(np.int32)\r\n        imgs1_input = np.ones([4, 224, 224, 3], dtype = np.float32)\r\n        imgs2_input = np.ones([4, 180, 180, 3], dtype = np.float32)\r\n\r\n        output = sess.run(imgs, feed_dict = {epoch_num_tf: epoch_num,\r\n                                          imgs1: imgs1_input,\r\n                                          imgs2: imgs2_input})\r\n```\r\nWhen I execute it, the output of `imgs.get_shape()` is `(4, ?, ?, 3)` i.e. `imgs.get_shape()[1]=None, imgs.get_shape()[2]=None`.\r\n\r\nBut I will use the value of the output of `imgs.get_shape()` to define the kernel (`ksize`) and strides size (`strides`) of the `tf.nn.max_pool()` e.g. `ksize=[1,imgs.get_shape()[1]/6, imgs.get_shape()[2]/6, 1]` in the future code. I think ksize and strides cannot support `tf.Tensor` value.\r\n\r\nHow to solve this problem?\r\n\r\nI also asked in the [stackoverflow](http://stackoverflow.com/questions/40932002/tensorflow-how-to-set-the-shape-of-tensor-with-different-conditional-statements).\r\n\r\n\r\n\r\n"}