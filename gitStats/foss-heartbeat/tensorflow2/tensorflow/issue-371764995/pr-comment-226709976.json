{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/226709976", "pull_request_review_id": 166605288, "id": 226709976, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNjcwOTk3Ng==", "diff_hunk": "@@ -145,6 +145,99 @@ def _decorator(func):\n   return _decorator\n \n \n+def _binary_assert(sym, opname, op_func, static_func,\n+      x, y, data, summarize, message, name):\n+  \"\"\"\n+  Generic binary elementwise assertion. Implements the behavior described\n+  in _binary_assert_doc() above.\n+\n+  Args:\n+    sym: Mathematical symbol for the test to apply to pairs of tensor\n+      elements, i.e. \"==\"\n+    opname: Name of the assert op in the public API, i.e. \"assert_equal\"\n+    op_func: Function that, if passed the two Tensor inputs to the \n+      assertion (x and y), will return the test to be passed to reduce_all()\n+      i.e. \n+    static_func: Function that, if passed numpy ndarray versions of the two\n+      inputs to the assertion, will return a Boolean ndarray with containing \n+      True in all positions where the assertion PASSES.\n+      i.e. lambda x,y: (x == y) for assert_equal()\n+    x, y, data, summarize, message, name: See doc in _binary_assert_doc \n+      above.\n+\n+  Returns:\n+    See doc in _binary_assert_doc().\n+  \"\"\"\n+  message = message or ''\n+  with ops.name_scope(name, opname, [x, y, data]):\n+    x = ops.convert_to_tensor(x, name='x')\n+    y = ops.convert_to_tensor(y, name='y')\n+\n+    if context.executing_eagerly():\n+      test = op_func(x, y)\n+      condition = math_ops.reduce_all(test)\n+      if not condition:\n+        # Prepare a message with first elements of x and y.\n+        summary_msg = ''\n+        # Default to printing 3 elements like control_flow_ops.Assert (used\n+        # by graph mode) does.\n+        summarize = 3 if summarize is None else summarize\n+        if summarize:\n+          # reshape((-1,)) is the fastest way to get a flat array view.\n+          x_np = x.numpy().reshape((-1,))\n+          y_np = y.numpy().reshape((-1,))\n+          x_sum = min(x_np.size, summarize)\n+          y_sum = min(y_np.size, summarize)\n+          summary_msg = ('First %d elements of x:\\n%s\\n'\n+                         'First %d elements of y:\\n%s\\n' %\n+                         (x_sum, x_np[:x_sum],\n+                          y_sum, y_np[:y_sum]))\n+\n+        index_and_values_str = ''\n+        if x.shape == y.shape and x.shape.as_list():\n+          # If the shapes of x and y are the same (and not scalars),\n+          # Get the values that actually differed and their indices.\n+          # If shapes are different this information is more confusing\n+          # than useful.\n+          mask = math_ops.logical_not(eq)", "path": "tensorflow/python/ops/check_ops.py", "position": null, "original_position": 58, "commit_id": "6e45e6ae21529ffebd4c0856cb1c2c8a278bf780", "original_commit_id": "62b8711c60c755b4b04d056fd923d353c9a6ca0a", "user": {"login": "iganichev", "id": 9123400, "node_id": "MDQ6VXNlcjkxMjM0MDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9123400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iganichev", "html_url": "https://github.com/iganichev", "followers_url": "https://api.github.com/users/iganichev/followers", "following_url": "https://api.github.com/users/iganichev/following{/other_user}", "gists_url": "https://api.github.com/users/iganichev/gists{/gist_id}", "starred_url": "https://api.github.com/users/iganichev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iganichev/subscriptions", "organizations_url": "https://api.github.com/users/iganichev/orgs", "repos_url": "https://api.github.com/users/iganichev/repos", "events_url": "https://api.github.com/users/iganichev/events{/privacy}", "received_events_url": "https://api.github.com/users/iganichev/received_events", "type": "User", "site_admin": false}, "body": "'eq' should be 'test' here.", "created_at": "2018-10-19T16:40:18Z", "updated_at": "2018-10-19T18:30:17Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/23090#discussion_r226709976", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/23090", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/226709976"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/23090#discussion_r226709976"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/23090"}}, "body_html": "<p>'eq' should be 'test' here.</p>", "body_text": "'eq' should be 'test' here."}