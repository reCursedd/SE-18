{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/411845180", "html_url": "https://github.com/tensorflow/tensorflow/issues/15706#issuecomment-411845180", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15706", "id": 411845180, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTg0NTE4MA==", "user": {"login": "aselle", "id": 326106, "node_id": "MDQ6VXNlcjMyNjEwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/326106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aselle", "html_url": "https://github.com/aselle", "followers_url": "https://api.github.com/users/aselle/followers", "following_url": "https://api.github.com/users/aselle/following{/other_user}", "gists_url": "https://api.github.com/users/aselle/gists{/gist_id}", "starred_url": "https://api.github.com/users/aselle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aselle/subscriptions", "organizations_url": "https://api.github.com/users/aselle/orgs", "repos_url": "https://api.github.com/users/aselle/repos", "events_url": "https://api.github.com/users/aselle/events{/privacy}", "received_events_url": "https://api.github.com/users/aselle/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-09T18:02:06Z", "updated_at": "2018-08-09T18:02:06Z", "author_association": "MEMBER", "body_html": "<p>I wouldn't be oposed to a safe_div option. The main thing I've thoguht about is how div is bound by say operator overloading in python especially with regards to integer division. I would say the existing / and // functions should stay the same. I would also not call this safe_div, because in general it isn't really safe to ignore divison by zeros. Some other name might be better like tf.div_no_nan() or tf.div_or_zero()</p>\n<ol>\n<li>Don't bind it to /</li>\n<li>Think about how you want to handle div's with integers. Is this a floating point only op. Probably a good idea for now. Otherwise, you may need a truncate versoin and a flooring version.</li>\n</ol>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=577277\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/martinwicke\">@martinwicke</a>, may have some opinions as well.</p>", "body_text": "I wouldn't be oposed to a safe_div option. The main thing I've thoguht about is how div is bound by say operator overloading in python especially with regards to integer division. I would say the existing / and // functions should stay the same. I would also not call this safe_div, because in general it isn't really safe to ignore divison by zeros. Some other name might be better like tf.div_no_nan() or tf.div_or_zero()\n\nDon't bind it to /\nThink about how you want to handle div's with integers. Is this a floating point only op. Probably a good idea for now. Otherwise, you may need a truncate versoin and a flooring version.\n\n@martinwicke, may have some opinions as well.", "body": "I wouldn't be oposed to a safe_div option. The main thing I've thoguht about is how div is bound by say operator overloading in python especially with regards to integer division. I would say the existing / and // functions should stay the same. I would also not call this safe_div, because in general it isn't really safe to ignore divison by zeros. Some other name might be better like tf.div_no_nan() or tf.div_or_zero()\r\n\r\n1. Don't bind it to /\r\n2. Think about how you want to handle div's with integers. Is this a floating point only op. Probably a good idea for now. Otherwise, you may need a truncate versoin and a flooring version.\r\n\r\n@martinwicke, may have some opinions as well."}