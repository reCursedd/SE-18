{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15706", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15706/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15706/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15706/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15706", "id": 285028203, "node_id": "MDU6SXNzdWUyODUwMjgyMDM=", "number": 15706, "title": "Feature request: unsafe_div op", "user": {"login": "facaiy", "id": 1112263, "node_id": "MDQ6VXNlcjExMTIyNjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1112263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facaiy", "html_url": "https://github.com/facaiy", "followers_url": "https://api.github.com/users/facaiy/followers", "following_url": "https://api.github.com/users/facaiy/following{/other_user}", "gists_url": "https://api.github.com/users/facaiy/gists{/gist_id}", "starred_url": "https://api.github.com/users/facaiy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facaiy/subscriptions", "organizations_url": "https://api.github.com/users/facaiy/orgs", "repos_url": "https://api.github.com/users/facaiy/repos", "events_url": "https://api.github.com/users/facaiy/events{/privacy}", "received_events_url": "https://api.github.com/users/facaiy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2017-12-29T03:33:03Z", "updated_at": "2018-08-21T06:35:54Z", "closed_at": "2018-08-21T06:35:54Z", "author_association": "MEMBER", "body_html": "<p>As discussed with <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=20959853\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/drpngx\">@drpngx</a> in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"274990466\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/14667\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/tensorflow/tensorflow/pull/14667/hovercard\" href=\"https://github.com/tensorflow/tensorflow/pull/14667\">#14667</a> , we found that several PRs are related to division by zero problem, for example, <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"282845634\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/15443\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/tensorflow/tensorflow/pull/15443/hovercard\" href=\"https://github.com/tensorflow/tensorflow/pull/15443\">#15443</a>, <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"276616765\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/14865\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/tensorflow/tensorflow/pull/14865/hovercard\" href=\"https://github.com/tensorflow/tensorflow/pull/14865\">#14865</a>.</p>\n<h4>1. why do we need the op</h4>\n<p>In <code>metrics</code>, <code>loss</code> and <code>math_ops</code> modules, all create a <code>_safe_div</code> or <code>_safe_scalar_div</code> method with help of <code>array_ops.where</code> to resolve the problem. However, we think those implementations have three disadvantages:</p>\n<ol>\n<li>Lack of generality: most are designed for only scalar.</li>\n<li>Not efficient.</li>\n<li>Since <code>where</code> ops propagates NaNs in gradients (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"157280822\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/2540\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/2540/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/2540\">#2540</a>), we have to use nested <code>where</code> trick which is a little counter-intuitive.</li>\n</ol>\n<h4>2. what behavior do we expect it</h4>\n<p>Above all, we propose to create new c++ op: <code>safe_div</code>:</p>\n<ul>\n<li>When denominator is zero, return 0 or numerator. The behavior can be selected by user themselves.</li>\n<li>Optional: Treat negative as zero, which is sometime useful for loss calculation.</li>\n<li>Create its own gradient op to avoid NaN problem for <code>where</code>.</li>\n</ul>\n<p>I think for metric, loss and gradient calculation, they could benefit from the op and get rid of NaN.<br>\nAnd I'd like to contribute the op in <strong>contrib</strong> at first if the proposition is approved by tensorflowers.</p>\n<h4>3. how to implement it</h4>\n<p>By the way, since  the name<code>safe_div</code> has been used in cwise_ops.h, whose behavior is opposite: raise an exception for integer when divide by zero.<br>\n<div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/3629fc4e98254c37e614ac3f77fa250b75c70f8d/tensorflow/core/kernels/cwise_ops.h#L703\">tensorflow/tensorflow/core/kernels/cwise_ops.h</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n         Line 703\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/3629fc4e98254c37e614ac3f77fa250b75c70f8d\">3629fc4</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L703\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"703\"></td>\n          <td id=\"LC703\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">struct</span> <span class=\"pl-en\">safe_div</span> : base&lt;T, Eigen::internal::safe_div_or_mod_op&lt; </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<br>\nSo perhaps we need to either rename it or create a new name for our op. Does anyone has a good idea?</p>", "body_text": "As discussed with @drpngx in #14667 , we found that several PRs are related to division by zero problem, for example, #15443, #14865.\n1. why do we need the op\nIn metrics, loss and math_ops modules, all create a _safe_div or _safe_scalar_div method with help of array_ops.where to resolve the problem. However, we think those implementations have three disadvantages:\n\nLack of generality: most are designed for only scalar.\nNot efficient.\nSince where ops propagates NaNs in gradients (#2540), we have to use nested where trick which is a little counter-intuitive.\n\n2. what behavior do we expect it\nAbove all, we propose to create new c++ op: safe_div:\n\nWhen denominator is zero, return 0 or numerator. The behavior can be selected by user themselves.\nOptional: Treat negative as zero, which is sometime useful for loss calculation.\nCreate its own gradient op to avoid NaN problem for where.\n\nI think for metric, loss and gradient calculation, they could benefit from the op and get rid of NaN.\nAnd I'd like to contribute the op in contrib at first if the proposition is approved by tensorflowers.\n3. how to implement it\nBy the way, since  the namesafe_div has been used in cwise_ops.h, whose behavior is opposite: raise an exception for integer when divide by zero.\n\n  \n    \n      tensorflow/tensorflow/core/kernels/cwise_ops.h\n    \n    \n         Line 703\n      in\n      3629fc4\n    \n    \n    \n    \n\n        \n          \n           struct safe_div : base<T, Eigen::internal::safe_div_or_mod_op< \n        \n    \n  \n\n\nSo perhaps we need to either rename it or create a new name for our op. Does anyone has a good idea?", "body": "As discussed with @drpngx in #14667 , we found that several PRs are related to division by zero problem, for example, #15443, #14865. \r\n\r\n#### 1. why do we need the op\r\n\r\nIn `metrics`, `loss` and `math_ops` modules, all create a `_safe_div` or `_safe_scalar_div` method with help of `array_ops.where` to resolve the problem. However, we think those implementations have three disadvantages:\r\n1. Lack of generality: most are designed for only scalar.\r\n2. Not efficient.\r\n3. Since `where` ops propagates NaNs in gradients (#2540), we have to use nested `where` trick which is a little counter-intuitive.\r\n\r\n#### 2. what behavior do we expect it\r\n\r\nAbove all, we propose to create new c++ op: `safe_div`:\r\n+ When denominator is zero, return 0 or numerator. The behavior can be selected by user themselves.\r\n+ Optional: Treat negative as zero, which is sometime useful for loss calculation.\r\n+ Create its own gradient op to avoid NaN problem for `where`.\r\n\r\nI think for metric, loss and gradient calculation, they could benefit from the op and get rid of NaN.\r\nAnd I'd like to contribute the op in **contrib** at first if the proposition is approved by tensorflowers.\r\n\r\n#### 3. how to implement it\r\n\r\nBy the way, since  the name`safe_div` has been used in cwise_ops.h, whose behavior is opposite: raise an exception for integer when divide by zero. \r\nhttps://github.com/tensorflow/tensorflow/blob/3629fc4e98254c37e614ac3f77fa250b75c70f8d/tensorflow/core/kernels/cwise_ops.h#L703\r\nSo perhaps we need to either rename it or create a new name for our op. Does anyone has a good idea?"}