{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5831", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5831/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5831/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5831/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/5831", "id": 191525868, "node_id": "MDU6SXNzdWUxOTE1MjU4Njg=", "number": 5831, "title": "Is there a backpropagation-method for all math-layers i.e. tf.fft2d?", "user": {"login": "beniroquai", "id": 4345528, "node_id": "MDQ6VXNlcjQzNDU1Mjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/4345528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beniroquai", "html_url": "https://github.com/beniroquai", "followers_url": "https://api.github.com/users/beniroquai/followers", "following_url": "https://api.github.com/users/beniroquai/following{/other_user}", "gists_url": "https://api.github.com/users/beniroquai/gists{/gist_id}", "starred_url": "https://api.github.com/users/beniroquai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beniroquai/subscriptions", "organizations_url": "https://api.github.com/users/beniroquai/orgs", "repos_url": "https://api.github.com/users/beniroquai/repos", "events_url": "https://api.github.com/users/beniroquai/events{/privacy}", "received_events_url": "https://api.github.com/users/beniroquai/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-24T13:55:30Z", "updated_at": "2016-11-24T17:34:30Z", "closed_at": "2016-11-24T17:34:30Z", "author_association": "NONE", "body_html": "<p>When building a deep NN, where one of the layer is represented by a fouriertransform (i.e. tf.fft), does tensorflow provide a backpropagation method for it? In this case it could/would be complex I guess.<br>\nHow does the optimizer work on that? Are there any documents which could explain this behavior?</p>\n<p>In theory, I understand how the gradient of a multiplication is carried out, but doing this for a more complicated function makes things more difficult for me.</p>\n<p>Thank you very much :)</p>", "body_text": "When building a deep NN, where one of the layer is represented by a fouriertransform (i.e. tf.fft), does tensorflow provide a backpropagation method for it? In this case it could/would be complex I guess.\nHow does the optimizer work on that? Are there any documents which could explain this behavior?\nIn theory, I understand how the gradient of a multiplication is carried out, but doing this for a more complicated function makes things more difficult for me.\nThank you very much :)", "body": "When building a deep NN, where one of the layer is represented by a fouriertransform (i.e. tf.fft), does tensorflow provide a backpropagation method for it? In this case it could/would be complex I guess. \r\nHow does the optimizer work on that? Are there any documents which could explain this behavior? \r\n\r\nIn theory, I understand how the gradient of a multiplication is carried out, but doing this for a more complicated function makes things more difficult for me. \r\n\r\nThank you very much :) "}