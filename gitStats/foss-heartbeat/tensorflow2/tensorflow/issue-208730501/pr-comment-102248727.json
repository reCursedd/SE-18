{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/102248727", "pull_request_review_id": 22999907, "id": 102248727, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMjI0ODcyNw==", "diff_hunk": "@@ -25,6 +25,9 @@ limitations under the License.\n #include \"tensorflow/core/platform/env.h\"\n #include \"tensorflow/core/util/event.pb.h\"\n \n+// TODO(cais): Support grpc:// debug URLs in open source once Python grpc\n+//   genrule becomes available. See b/23796275.\n+#if defined(PLATFORM_GOOGLE)", "path": "tensorflow/core/debug/debug_grpc_io_utils_test.cc", "position": 6, "original_position": 6, "commit_id": "010ff6dbdfabe90a219ee4ed27be8a7d7b56681f", "original_commit_id": "60b317c30c34dba19c95dddfabf07573f938a76e", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "body": "There's no `#define` for CMake builds, but I don't see why you'd need one.\r\n\r\nExcluding this test in `tf_tests.cmake` (e.g. by adding its filename as another line [here](https://github.com/tensorflow/tensorflow/blob/43c71a03380d8de18202cc399563814b2f438cd2/tensorflow/contrib/cmake/tf_tests.cmake#L241)) would prevent it being run in the CMake on *any* platform. (Are you instead concerned about the Linux/Mac *Bazel* tests? I guess these would start failing without this `#if`....)\r\n\r\nI still think it would be cleaner to exclude the test explicitly in the CMake/Bazel build files, rather than building a test that \"passes\" but doesn't do anything.", "created_at": "2017-02-21T16:18:33Z", "updated_at": "2017-02-21T16:18:33Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/7670#discussion_r102248727", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/7670", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/102248727"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/7670#discussion_r102248727"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/7670"}}, "body_html": "<p>There's no <code>#define</code> for CMake builds, but I don't see why you'd need one.</p>\n<p>Excluding this test in <code>tf_tests.cmake</code> (e.g. by adding its filename as another line <a href=\"https://github.com/tensorflow/tensorflow/blob/43c71a03380d8de18202cc399563814b2f438cd2/tensorflow/contrib/cmake/tf_tests.cmake#L241\">here</a>) would prevent it being run in the CMake on <em>any</em> platform. (Are you instead concerned about the Linux/Mac <em>Bazel</em> tests? I guess these would start failing without this <code>#if</code>....)</p>\n<p>I still think it would be cleaner to exclude the test explicitly in the CMake/Bazel build files, rather than building a test that \"passes\" but doesn't do anything.</p>", "body_text": "There's no #define for CMake builds, but I don't see why you'd need one.\nExcluding this test in tf_tests.cmake (e.g. by adding its filename as another line here) would prevent it being run in the CMake on any platform. (Are you instead concerned about the Linux/Mac Bazel tests? I guess these would start failing without this #if....)\nI still think it would be cleaner to exclude the test explicitly in the CMake/Bazel build files, rather than building a test that \"passes\" but doesn't do anything.", "in_reply_to_id": 102124568}