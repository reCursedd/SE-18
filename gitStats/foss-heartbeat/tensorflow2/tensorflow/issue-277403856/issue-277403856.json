{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14944", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14944/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14944/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14944/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14944", "id": 277403856, "node_id": "MDU6SXNzdWUyNzc0MDM4NTY=", "number": 14944, "title": "[BUG]embedding_lookup can't convert out of index into zeros vector when embedding matrix is placed on CPU ", "user": {"login": "bj1123", "id": 16620433, "node_id": "MDQ6VXNlcjE2NjIwNDMz", "avatar_url": "https://avatars0.githubusercontent.com/u/16620433?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bj1123", "html_url": "https://github.com/bj1123", "followers_url": "https://api.github.com/users/bj1123/followers", "following_url": "https://api.github.com/users/bj1123/following{/other_user}", "gists_url": "https://api.github.com/users/bj1123/gists{/gist_id}", "starred_url": "https://api.github.com/users/bj1123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bj1123/subscriptions", "organizations_url": "https://api.github.com/users/bj1123/orgs", "repos_url": "https://api.github.com/users/bj1123/repos", "events_url": "https://api.github.com/users/bj1123/events{/privacy}", "received_events_url": "https://api.github.com/users/bj1123/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-28T14:27:21Z", "updated_at": "2017-11-28T14:33:42Z", "closed_at": "2017-11-28T14:33:42Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: windows 10</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.4.0</li>\n<li><strong>Python version</strong>: 3.5.2</li>\n<li><strong>Bazel version (if compiling from source)</strong>:</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:</li>\n<li><strong>CUDA/cuDNN version</strong>:  8.0 / 6</li>\n<li><strong>GPU model and memory</strong>: nvidia geforce gtx 1080 ti</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>embedding_lookup can't convert out of index into zeros vector when embedding matrix is placed on CPU.</p>\n<p>when the matrix is placed on GPU, embedding_lookup method automatically convert out_of_index components into zeros vector, but it doesn't work when the matrix is placed on CPU</p>\n<h3>Source code / logs</h3>\n<p>import tensorflow as tf</p>\n<p>inputs = tf.placeholder(tf.int32, [None, None])<br>\nwith tf.device('/cpu'):  ### when tf.device('/gpu') it's okay<br>\nembedding_matrix = tf.get_variable('embedding_matrix', [5, 2],<br>\ndtype=tf.float32,<br>\ninitializer=tf.contrib.layers.xavier_initializer())<br>\nembedded = tf.nn.embedding_lookup(embedding_matrix, inputs)</p>\n<p>inputs_test = [[1],[2],[10]</p>\n<p>]</p>\n<p>sess = tf.Session()<br>\nsess.run(tf.global_variables_initializer())<br>\nres = sess.run(embedded,feed_dict = {inputs:inputs_test})<br>\nprint(res)</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): windows 10\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): 1.4.0\nPython version: 3.5.2\nBazel version (if compiling from source):\nGCC/Compiler version (if compiling from source):\nCUDA/cuDNN version:  8.0 / 6\nGPU model and memory: nvidia geforce gtx 1080 ti\nExact command to reproduce:\n\nDescribe the problem\nembedding_lookup can't convert out of index into zeros vector when embedding matrix is placed on CPU.\nwhen the matrix is placed on GPU, embedding_lookup method automatically convert out_of_index components into zeros vector, but it doesn't work when the matrix is placed on CPU\nSource code / logs\nimport tensorflow as tf\ninputs = tf.placeholder(tf.int32, [None, None])\nwith tf.device('/cpu'):  ### when tf.device('/gpu') it's okay\nembedding_matrix = tf.get_variable('embedding_matrix', [5, 2],\ndtype=tf.float32,\ninitializer=tf.contrib.layers.xavier_initializer())\nembedded = tf.nn.embedding_lookup(embedding_matrix, inputs)\ninputs_test = [[1],[2],[10]\n]\nsess = tf.Session()\nsess.run(tf.global_variables_initializer())\nres = sess.run(embedded,feed_dict = {inputs:inputs_test})\nprint(res)", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: windows 10\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.4.0\r\n- **Python version**: 3.5.2\r\n- **Bazel version (if compiling from source)**: \r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**:  8.0 / 6\r\n- **GPU model and memory**: nvidia geforce gtx 1080 ti\r\n- **Exact command to reproduce**:\r\n\r\n### Describe the problem\r\n\r\nembedding_lookup can't convert out of index into zeros vector when embedding matrix is placed on CPU.\r\n\r\nwhen the matrix is placed on GPU, embedding_lookup method automatically convert out_of_index components into zeros vector, but it doesn't work when the matrix is placed on CPU\r\n\r\n\r\n### Source code / logs\r\n\r\nimport tensorflow as tf\r\n\r\ninputs = tf.placeholder(tf.int32, [None, None])\r\nwith tf.device('/cpu'):  ### when tf.device('/gpu') it's okay\r\n    embedding_matrix = tf.get_variable('embedding_matrix', [5, 2],\r\n                                            dtype=tf.float32,\r\n                                            initializer=tf.contrib.layers.xavier_initializer())\r\n    embedded = tf.nn.embedding_lookup(embedding_matrix, inputs)\r\n\r\n\r\n\r\ninputs_test = [[1],[2],[10]\r\n\r\n\r\n]\r\n\r\nsess = tf.Session()\r\nsess.run(tf.global_variables_initializer())\r\nres = sess.run(embedded,feed_dict = {inputs:inputs_test})\r\nprint(res)\r\n"}