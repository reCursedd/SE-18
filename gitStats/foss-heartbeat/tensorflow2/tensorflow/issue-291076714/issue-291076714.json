{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16351", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16351/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16351/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16351/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16351", "id": 291076714, "node_id": "MDU6SXNzdWUyOTEwNzY3MTQ=", "number": 16351, "title": "TfLiteCameraDemo failed to work with NNAPI after commit e6ff665dbe4888aa5fdff8f34c44405acca2ddd1", "user": {"login": "benshi001", "id": 24586233, "node_id": "MDQ6VXNlcjI0NTg2MjMz", "avatar_url": "https://avatars1.githubusercontent.com/u/24586233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benshi001", "html_url": "https://github.com/benshi001", "followers_url": "https://api.github.com/users/benshi001/followers", "following_url": "https://api.github.com/users/benshi001/following{/other_user}", "gists_url": "https://api.github.com/users/benshi001/gists{/gist_id}", "starred_url": "https://api.github.com/users/benshi001/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benshi001/subscriptions", "organizations_url": "https://api.github.com/users/benshi001/orgs", "repos_url": "https://api.github.com/users/benshi001/repos", "events_url": "https://api.github.com/users/benshi001/events{/privacy}", "received_events_url": "https://api.github.com/users/benshi001/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 750616506, "node_id": "MDU6TGFiZWw3NTA2MTY1MDY=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:lite", "name": "comp:lite", "color": "0052cc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-01-24T03:55:51Z", "updated_at": "2018-02-09T16:13:28Z", "closed_at": "2018-01-26T02:12:56Z", "author_association": "NONE", "body_html": "<p>I am testing NNAPI by forcing TfLiteCameraDemo to invoking libneuralnetworks.so. It worked correctly though slower. But since commit <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/e6ff665dbe4888aa5fdff8f34c44405acca2ddd1/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/e6ff665dbe4888aa5fdff8f34c44405acca2ddd1\"><tt>e6ff665</tt></a>, TfLiteCameraDemo crashes with error message like,</p>\n<pre><code>01-24 03:39:36.393 19136 19153 E AndroidRuntime: FATAL EXCEPTION: CameraBackground\n01-24 03:39:36.393 19136 19153 E AndroidRuntime: Process: com.example.android.tflitecamerademo, PID: 19136\n01-24 03:39:36.393 19136 19153 E AndroidRuntime: java.lang.IllegalArgumentException: Failed to run on the given Interpreter: NNAPI was requested, but dependent sized tensors being used.\n01-24 03:39:36.393 19136 19153 E AndroidRuntime: \n01-24 03:39:36.393 19136 19153 E AndroidRuntime: \tat org.tensorflow.lite.NativeInterpreterWrapper.run(Native Method)\n01-24 03:39:36.393 19136 19153 E AndroidRuntime: \tat org.tensorflow.lite.NativeInterpreterWrapper.run(NativeInterpreterWrapper.java:95)\n01-24 03:39:36.393 19136 19153 E AndroidRuntime: \tat org.tensorflow.lite.Interpreter.runForMultipleInputsOutputs(Interpreter.java:123)\n01-24 03:39:36.393 19136 19153 E AndroidRuntime: \tat org.tensorflow.lite.Interpreter.run(Interpreter.java:104)\n01-24 03:39:36.393 19136 19153 E AndroidRuntime: \tat com.example.android.tflitecamerademo.ImageClassifier.classifyFrame(ImageClassifier.java:114)\n01-24 03:39:36.393 19136 19153 E AndroidRuntime: \tat com.example.android.tflitecamerademo.Camera2BasicFragment.classifyFrame(Camera2BasicFragment.java:663)\n01-24 03:39:36.393 19136 19153 E AndroidRuntime: \tat com.example.android.tflitecamerademo.Camera2BasicFragment.access$900(Camera2BasicFragment.java:69)\n01-24 03:39:36.393 19136 19153 E AndroidRuntime: \tat com.example.android.tflitecamerademo.Camera2BasicFragment$5.run(Camera2BasicFragment.java:558)\n01-24 03:39:36.393 19136 19153 E AndroidRuntime: \tat android.os.Handler.handleCallback(Handler.java:790)\n01-24 03:39:36.393 19136 19153 E AndroidRuntime: \tat android.os.Handler.dispatchMessage(Handler.java:99)\n01-24 03:39:36.393 19136 19153 E AndroidRuntime: \tat android.os.Looper.loop(Looper.java:164)\n01-24 03:39:36.393 19136 19153 E AndroidRuntime: \tat android.os.HandlerThread.run(HandlerThread.java:65)\n01-24 03:39:36.396   626   871 W ActivityManager:   Force finishing activity com.example.android.tflitecamerademo/.CameraActivity\n</code></pre>\n<p>Here is my patch</p>\n<pre><code> index e44c5ae..1ed88eb 100644\n ---a/tensorflow/contrib/lite/java/demo/app/src/main/java/com/example/android/tflitecamerademo/ImageClassifier.java\n +++b/tensorflow/contrib/lite/java/demo/app/src/main/java/com/example/android/tflitecamerademo/ImageClassifier.java\n @@ -91,7 +91,7 @@ public class ImageClassifier {\n\t\n   /** Initializes an {@code ImageClassifier}. */\n   ImageClassifier(Activity activity) throws IOException {\n-    tflite = new Interpreter(loadModelFile(activity));\n+    tflite = new Interpreter(loadModelFile(activity), true);\n     labelList = loadLabelList(activity);\n     imgData =\n         ByteBuffer.allocateDirect(\ndiff --git a/tensorflow/contrib/lite/java/demo/build.gradle b/tensorflow/contrib/lite/java/demo/build.gradle\nindex dd883d6..9361c71 100644\n--- a/tensorflow/contrib/lite/java/src/main/java/org/tensorflow/lite/Interpreter.java\n+++ b/tensorflow/contrib/lite/java/src/main/java/org/tensorflow/lite/Interpreter.java\n@@ -66,6 +66,13 @@ public final class Interpreter implements AutoCloseable {\n     }\n     wrapper = new NativeInterpreterWrapper(modelFile.getAbsolutePath());\n   }\n+  public Interpreter(@NotNull File modelFile, boolean nn) {\n+    if (modelFile == null) {\n+      return;\n+    }\n+    wrapper = new NativeInterpreterWrapper(modelFile.getAbsolutePath());\n+    wrapper.setUseNNAPI(nn);\n+  }\n\n   /**\n    * Initializes a {@code Interpreter} with a {@code MappedByteBuffer} to the model file.\n@@ -76,6 +83,10 @@ public final class Interpreter implements AutoCloseable {\n   public Interpreter(@NotNull MappedByteBuffer mappedByteBuffer) {\n     wrapper = new NativeInterpreterWrapper(mappedByteBuffer);\n   }\n+  public Interpreter(@NotNull MappedByteBuffer mappedByteBuffer,  boolean nn) {\n+    wrapper = new NativeInterpreterWrapper(mappedByteBuffer);\n+    wrapper.setUseNNAPI(nn);\n+  }\n \n   /**\n    * Runs model inference if the model takes only one input, and provides only one output.\n   /**\n    * Runs model inference if the model takes only one input, and provides only one output.\n</code></pre>", "body_text": "I am testing NNAPI by forcing TfLiteCameraDemo to invoking libneuralnetworks.so. It worked correctly though slower. But since commit e6ff665, TfLiteCameraDemo crashes with error message like,\n01-24 03:39:36.393 19136 19153 E AndroidRuntime: FATAL EXCEPTION: CameraBackground\n01-24 03:39:36.393 19136 19153 E AndroidRuntime: Process: com.example.android.tflitecamerademo, PID: 19136\n01-24 03:39:36.393 19136 19153 E AndroidRuntime: java.lang.IllegalArgumentException: Failed to run on the given Interpreter: NNAPI was requested, but dependent sized tensors being used.\n01-24 03:39:36.393 19136 19153 E AndroidRuntime: \n01-24 03:39:36.393 19136 19153 E AndroidRuntime: \tat org.tensorflow.lite.NativeInterpreterWrapper.run(Native Method)\n01-24 03:39:36.393 19136 19153 E AndroidRuntime: \tat org.tensorflow.lite.NativeInterpreterWrapper.run(NativeInterpreterWrapper.java:95)\n01-24 03:39:36.393 19136 19153 E AndroidRuntime: \tat org.tensorflow.lite.Interpreter.runForMultipleInputsOutputs(Interpreter.java:123)\n01-24 03:39:36.393 19136 19153 E AndroidRuntime: \tat org.tensorflow.lite.Interpreter.run(Interpreter.java:104)\n01-24 03:39:36.393 19136 19153 E AndroidRuntime: \tat com.example.android.tflitecamerademo.ImageClassifier.classifyFrame(ImageClassifier.java:114)\n01-24 03:39:36.393 19136 19153 E AndroidRuntime: \tat com.example.android.tflitecamerademo.Camera2BasicFragment.classifyFrame(Camera2BasicFragment.java:663)\n01-24 03:39:36.393 19136 19153 E AndroidRuntime: \tat com.example.android.tflitecamerademo.Camera2BasicFragment.access$900(Camera2BasicFragment.java:69)\n01-24 03:39:36.393 19136 19153 E AndroidRuntime: \tat com.example.android.tflitecamerademo.Camera2BasicFragment$5.run(Camera2BasicFragment.java:558)\n01-24 03:39:36.393 19136 19153 E AndroidRuntime: \tat android.os.Handler.handleCallback(Handler.java:790)\n01-24 03:39:36.393 19136 19153 E AndroidRuntime: \tat android.os.Handler.dispatchMessage(Handler.java:99)\n01-24 03:39:36.393 19136 19153 E AndroidRuntime: \tat android.os.Looper.loop(Looper.java:164)\n01-24 03:39:36.393 19136 19153 E AndroidRuntime: \tat android.os.HandlerThread.run(HandlerThread.java:65)\n01-24 03:39:36.396   626   871 W ActivityManager:   Force finishing activity com.example.android.tflitecamerademo/.CameraActivity\n\nHere is my patch\n index e44c5ae..1ed88eb 100644\n ---a/tensorflow/contrib/lite/java/demo/app/src/main/java/com/example/android/tflitecamerademo/ImageClassifier.java\n +++b/tensorflow/contrib/lite/java/demo/app/src/main/java/com/example/android/tflitecamerademo/ImageClassifier.java\n @@ -91,7 +91,7 @@ public class ImageClassifier {\n\t\n   /** Initializes an {@code ImageClassifier}. */\n   ImageClassifier(Activity activity) throws IOException {\n-    tflite = new Interpreter(loadModelFile(activity));\n+    tflite = new Interpreter(loadModelFile(activity), true);\n     labelList = loadLabelList(activity);\n     imgData =\n         ByteBuffer.allocateDirect(\ndiff --git a/tensorflow/contrib/lite/java/demo/build.gradle b/tensorflow/contrib/lite/java/demo/build.gradle\nindex dd883d6..9361c71 100644\n--- a/tensorflow/contrib/lite/java/src/main/java/org/tensorflow/lite/Interpreter.java\n+++ b/tensorflow/contrib/lite/java/src/main/java/org/tensorflow/lite/Interpreter.java\n@@ -66,6 +66,13 @@ public final class Interpreter implements AutoCloseable {\n     }\n     wrapper = new NativeInterpreterWrapper(modelFile.getAbsolutePath());\n   }\n+  public Interpreter(@NotNull File modelFile, boolean nn) {\n+    if (modelFile == null) {\n+      return;\n+    }\n+    wrapper = new NativeInterpreterWrapper(modelFile.getAbsolutePath());\n+    wrapper.setUseNNAPI(nn);\n+  }\n\n   /**\n    * Initializes a {@code Interpreter} with a {@code MappedByteBuffer} to the model file.\n@@ -76,6 +83,10 @@ public final class Interpreter implements AutoCloseable {\n   public Interpreter(@NotNull MappedByteBuffer mappedByteBuffer) {\n     wrapper = new NativeInterpreterWrapper(mappedByteBuffer);\n   }\n+  public Interpreter(@NotNull MappedByteBuffer mappedByteBuffer,  boolean nn) {\n+    wrapper = new NativeInterpreterWrapper(mappedByteBuffer);\n+    wrapper.setUseNNAPI(nn);\n+  }\n \n   /**\n    * Runs model inference if the model takes only one input, and provides only one output.\n   /**\n    * Runs model inference if the model takes only one input, and provides only one output.", "body": "I am testing NNAPI by forcing TfLiteCameraDemo to invoking libneuralnetworks.so. It worked correctly though slower. But since commit e6ff665dbe4888aa5fdff8f34c44405acca2ddd1, TfLiteCameraDemo crashes with error message like,\r\n\r\n\t01-24 03:39:36.393 19136 19153 E AndroidRuntime: FATAL EXCEPTION: CameraBackground\r\n\t01-24 03:39:36.393 19136 19153 E AndroidRuntime: Process: com.example.android.tflitecamerademo, PID: 19136\r\n\t01-24 03:39:36.393 19136 19153 E AndroidRuntime: java.lang.IllegalArgumentException: Failed to run on the given Interpreter: NNAPI was requested, but dependent sized tensors being used.\r\n\t01-24 03:39:36.393 19136 19153 E AndroidRuntime: \r\n\t01-24 03:39:36.393 19136 19153 E AndroidRuntime: \tat org.tensorflow.lite.NativeInterpreterWrapper.run(Native Method)\r\n\t01-24 03:39:36.393 19136 19153 E AndroidRuntime: \tat org.tensorflow.lite.NativeInterpreterWrapper.run(NativeInterpreterWrapper.java:95)\r\n\t01-24 03:39:36.393 19136 19153 E AndroidRuntime: \tat org.tensorflow.lite.Interpreter.runForMultipleInputsOutputs(Interpreter.java:123)\r\n\t01-24 03:39:36.393 19136 19153 E AndroidRuntime: \tat org.tensorflow.lite.Interpreter.run(Interpreter.java:104)\r\n\t01-24 03:39:36.393 19136 19153 E AndroidRuntime: \tat com.example.android.tflitecamerademo.ImageClassifier.classifyFrame(ImageClassifier.java:114)\r\n\t01-24 03:39:36.393 19136 19153 E AndroidRuntime: \tat com.example.android.tflitecamerademo.Camera2BasicFragment.classifyFrame(Camera2BasicFragment.java:663)\r\n\t01-24 03:39:36.393 19136 19153 E AndroidRuntime: \tat com.example.android.tflitecamerademo.Camera2BasicFragment.access$900(Camera2BasicFragment.java:69)\r\n\t01-24 03:39:36.393 19136 19153 E AndroidRuntime: \tat com.example.android.tflitecamerademo.Camera2BasicFragment$5.run(Camera2BasicFragment.java:558)\r\n\t01-24 03:39:36.393 19136 19153 E AndroidRuntime: \tat android.os.Handler.handleCallback(Handler.java:790)\r\n\t01-24 03:39:36.393 19136 19153 E AndroidRuntime: \tat android.os.Handler.dispatchMessage(Handler.java:99)\r\n\t01-24 03:39:36.393 19136 19153 E AndroidRuntime: \tat android.os.Looper.loop(Looper.java:164)\r\n\t01-24 03:39:36.393 19136 19153 E AndroidRuntime: \tat android.os.HandlerThread.run(HandlerThread.java:65)\r\n\t01-24 03:39:36.396   626   871 W ActivityManager:   Force finishing activity com.example.android.tflitecamerademo/.CameraActivity\r\n\r\nHere is my patch\r\n\r\n\t index e44c5ae..1ed88eb 100644\r\n\t ---a/tensorflow/contrib/lite/java/demo/app/src/main/java/com/example/android/tflitecamerademo/ImageClassifier.java\r\n\t +++b/tensorflow/contrib/lite/java/demo/app/src/main/java/com/example/android/tflitecamerademo/ImageClassifier.java\r\n\t @@ -91,7 +91,7 @@ public class ImageClassifier {\r\n\t\t\r\n\t   /** Initializes an {@code ImageClassifier}. */\r\n\t   ImageClassifier(Activity activity) throws IOException {\r\n\t-    tflite = new Interpreter(loadModelFile(activity));\r\n\t+    tflite = new Interpreter(loadModelFile(activity), true);\r\n\t     labelList = loadLabelList(activity);\r\n\t     imgData =\r\n\t         ByteBuffer.allocateDirect(\r\n\tdiff --git a/tensorflow/contrib/lite/java/demo/build.gradle b/tensorflow/contrib/lite/java/demo/build.gradle\r\n\tindex dd883d6..9361c71 100644\r\n\t--- a/tensorflow/contrib/lite/java/src/main/java/org/tensorflow/lite/Interpreter.java\r\n\t+++ b/tensorflow/contrib/lite/java/src/main/java/org/tensorflow/lite/Interpreter.java\r\n\t@@ -66,6 +66,13 @@ public final class Interpreter implements AutoCloseable {\r\n\t     }\r\n\t     wrapper = new NativeInterpreterWrapper(modelFile.getAbsolutePath());\r\n\t   }\r\n\t+  public Interpreter(@NotNull File modelFile, boolean nn) {\r\n\t+    if (modelFile == null) {\r\n\t+      return;\r\n\t+    }\r\n\t+    wrapper = new NativeInterpreterWrapper(modelFile.getAbsolutePath());\r\n\t+    wrapper.setUseNNAPI(nn);\r\n\t+  }\r\n\t\r\n\t   /**\r\n\t    * Initializes a {@code Interpreter} with a {@code MappedByteBuffer} to the model file.\r\n\t@@ -76,6 +83,10 @@ public final class Interpreter implements AutoCloseable {\r\n\t   public Interpreter(@NotNull MappedByteBuffer mappedByteBuffer) {\r\n\t     wrapper = new NativeInterpreterWrapper(mappedByteBuffer);\r\n\t   }\r\n\t+  public Interpreter(@NotNull MappedByteBuffer mappedByteBuffer,  boolean nn) {\r\n\t+    wrapper = new NativeInterpreterWrapper(mappedByteBuffer);\r\n\t+    wrapper.setUseNNAPI(nn);\r\n\t+  }\r\n\t \r\n\t   /**\r\n\t    * Runs model inference if the model takes only one input, and provides only one output.\r\n\t   /**\r\n\t    * Runs model inference if the model takes only one input, and provides only one output.\r\n"}