{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/352216148", "html_url": "https://github.com/tensorflow/tensorflow/issues/12052#issuecomment-352216148", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12052", "id": 352216148, "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjIxNjE0OA==", "user": {"login": "Tweakmind", "id": 16605143, "node_id": "MDQ6VXNlcjE2NjA1MTQz", "avatar_url": "https://avatars1.githubusercontent.com/u/16605143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tweakmind", "html_url": "https://github.com/Tweakmind", "followers_url": "https://api.github.com/users/Tweakmind/followers", "following_url": "https://api.github.com/users/Tweakmind/following{/other_user}", "gists_url": "https://api.github.com/users/Tweakmind/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tweakmind/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tweakmind/subscriptions", "organizations_url": "https://api.github.com/users/Tweakmind/orgs", "repos_url": "https://api.github.com/users/Tweakmind/repos", "events_url": "https://api.github.com/users/Tweakmind/events{/privacy}", "received_events_url": "https://api.github.com/users/Tweakmind/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-16T22:23:17Z", "updated_at": "2017-12-16T22:23:17Z", "author_association": "NONE", "body_html": "<p>With CUDA 8.0 and cuDNN 6.0, this is how I installed TensorFlow from source for Cuda GPU and AVX2 support in Win10::</p>\n<p>Requirements:</p>\n<pre><code>* Windows 10 64-Bit\n* Visual Studio 15 C++ Tools\n* NVIDIA CUDA\u00ae Toolkit 8.0\n* NVIDIA cuDNN 6.0 for CUDA 8.0\n* Cmake\n* Swig\n</code></pre>\n<p>Install Visual Studio Community Edition Update 3 w/Windows Kit 10.0.10240.0<br>\nFollow instructions at: <a href=\"https://github.com/philferriere/dlwin\">https://github.com/philferriere/dlwin</a>  (Thank you Phil)</p>\n<p>Create a Virtual Drive N: for clarity<br>\nI suggest creating a directory off C: or your drive of choice and creating N: based on these instructions (2GB min):<br>\n<a href=\"https://technet.microsoft.com/en-us/library/gg318052(v=ws.10).aspx\" rel=\"nofollow\">https://technet.microsoft.com/en-us/library/gg318052(v=ws.10).aspx</a></p>\n<p>Install Cuda 8.0 64-bit<br>\n<a href=\"https://developer.nvidia.com/cuda-downloads\" rel=\"nofollow\">https://developer.nvidia.com/cuda-downloads</a>  (Scroll down to Legacy)</p>\n<p>Install cuDNN 6.0 for Cuda 8.0<br>\n<a href=\"https://developer.nvidia.com/rdp/cudnn-download\" rel=\"nofollow\">https://developer.nvidia.com/rdp/cudnn-download</a><br>\nPut cuda folder from zip on N:\\and rename cuDNN-6</p>\n<p>Install CMake<br>\n<a href=\"https://cmake.org/files/v3.10/cmake-3.10.0-rc5-win64-x64.msi\" rel=\"nofollow\">https://cmake.org/files/v3.10/cmake-3.10.0-rc5-win64-x64.msi</a></p>\n<p>Install Swig (swigwin-3.0.12)<br>\n<a href=\"https://sourceforge.net/projects/swig/files/swigwin/swigwin-3.0.12/swigwin-3.0.12.zip\" rel=\"nofollow\">https://sourceforge.net/projects/swig/files/swigwin/swigwin-3.0.12/swigwin-3.0.12.zip</a></p>\n<h4>cntk-py36</h4>\n<pre lang=\"conda\" data-meta=\"create --name cntk-py36 python=3.6 numpy scipy h5py jupyter\"><code>activate cntk-py36\npip install https://cntk.ai/PythonWheel/GPU/cntk-2.2-cp36-cp36m-win_amd64.whl\npython -c \"import cntk; print(cntk.__version__)\"\nconda install pygpu\npip install keras\n</code></pre>\n<h4>Remove old tensorflow in Tools if it exists</h4>\n<pre lang=\"cd\" data-meta=\"C:\\Users%USERNAME%\\Tools\\\"><code>move tensorflow tensorflow.not\ngit clone --recursive https://github.com/tensorflow/tensorflow.git\ncd C:\\Users\\%USERNAME%\\Tools\\tensorflow\\tensorflow\\contrib\\cmake\nEdit CMakeLists.txt\n</code></pre>\n<p>Comment out these:</p>\n<pre><code># if (tensorflow_OPTIMIZE_FOR_NATIVE_ARCH)\n#   include(CheckCXXCompilerFlag)\n#   CHECK_CXX_COMPILER_FLAG(\"-march=native\" COMPILER_OPT_ARCH_NATIVE_SUPPORTED)\n#   if (COMPILER_OPT_ARCH_NATIVE_SUPPORTED)\n#     set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -march=native\")\n#   endif()\n# endif()\n</code></pre>\n<p>Add these:</p>\n<pre><code>if (tensorflow_OPTIMIZE_FOR_NATIVE_ARCH)\n  include(CheckCXXCompilerFlag)\n  CHECK_CXX_COMPILER_FLAG(\"-march=native\" COMPILER_OPT_ARCH_NATIVE_SUPPORTED)\n  if (COMPILER_OPT_ARCH_NATIVE_SUPPORTED)\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -march=native\")\n  else()\n    CHECK_CXX_COMPILER_FLAG(\"/arch:AVX2\" COMPILER_OPT_ARCH_AVX_SUPPORTED)\n    if(COMPILER_OPT_ARCH_AVX_SUPPORTED)\n      set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} /arch:AVX2\")\n    endif()\n  endif()\nendif()\n</code></pre>\n<p>mkdir build &amp; cd build</p>\n<pre><code>\"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin\\amd64\\vcvars64.bat\"\n\ncmake .. -A x64 -DCMAKE_BUILD_TYPE=Release ^\n-DSWIG_EXECUTABLE=N:/swigwin-3.0.12/swig.exe ^\n-DPYTHON_EXECUTABLE=N:/Anaconda3/python.exe ^\n-DPYTHON_LIBRARIES=N:/Anaconda3/libs/python36.lib ^\n-Dtensorflow_ENABLE_GPU=ON ^\n-DCUDNN_HOME=\"n:\\cuDNN-6\" ^\n-Dtensorflow_WIN_CPU_SIMD_OPTIONS=/arch:AVX2\n</code></pre>\n<p>-- Building for: Visual Studio 14 2015<br>\n-- Selecting Windows SDK version 10.0.14393.0 to target Windows 10.0.16299.<br>\n-- The C compiler identification is MSVC 19.0.24225.1<br>\n-- The CXX compiler identification is MSVC 19.0.24225.1<br>\n-- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe<br>\n-- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe -- works<br>\n-- Detecting C compiler ABI info<br>\n-- Detecting C compiler ABI info - done<br>\n-- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe<br>\n-- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe -- works<br>\n-- Detecting CXX compiler ABI info<br>\n-- Detecting CXX compiler ABI info - done<br>\n-- Detecting CXX compile features<br>\n-- Detecting CXX compile features - done<br>\n-- Performing Test COMPILER_OPT_ARCH_NATIVE_SUPPORTED<br>\n-- Performing Test COMPILER_OPT_ARCH_NATIVE_SUPPORTED - Failed<br>\n-- Performing Test COMPILER_OPT_ARCH_AVX_SUPPORTED<br>\n-- Performing Test COMPILER_OPT_ARCH_AVX_SUPPORTED - Success<br>\n-- Performing Test COMPILER_OPT_WIN_CPU_SIMD_SUPPORTED<br>\n-- Performing Test COMPILER_OPT_WIN_CPU_SIMD_SUPPORTED - Success<br>\n-- Found CUDA: C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0 (found suitable version \"8.0\", minimum required is \"8.0\")<br>\n-- Found PythonInterp: C:/Users/%USERNAME%/Anaconda3/python.exe (found version \"3.6.3\")<br>\n-- Found PythonLibs: C:/Users/%USERNAME%/Anaconda3/libs/python36.lib (found version \"3.6.3\")<br>\n-- Found SWIG: C:/Users/%USERNAME%/Tools/swigwin-3.0.12/swig.exe (found version \"3.0.12\")<br>\n-- Configuring done<br>\n-- Generating done<br>\n-- Build files have been written to: C:/Users/%USERNAME%/Tools/tensorflow/tensorflow/contrib/cmake/build</p>\n<pre><code>MSBuild /p:Configuration=Release tf_python_build_pip_package.vcxproj\n</code></pre>", "body_text": "With CUDA 8.0 and cuDNN 6.0, this is how I installed TensorFlow from source for Cuda GPU and AVX2 support in Win10::\nRequirements:\n* Windows 10 64-Bit\n* Visual Studio 15 C++ Tools\n* NVIDIA CUDA\u00ae Toolkit 8.0\n* NVIDIA cuDNN 6.0 for CUDA 8.0\n* Cmake\n* Swig\n\nInstall Visual Studio Community Edition Update 3 w/Windows Kit 10.0.10240.0\nFollow instructions at: https://github.com/philferriere/dlwin  (Thank you Phil)\nCreate a Virtual Drive N: for clarity\nI suggest creating a directory off C: or your drive of choice and creating N: based on these instructions (2GB min):\nhttps://technet.microsoft.com/en-us/library/gg318052(v=ws.10).aspx\nInstall Cuda 8.0 64-bit\nhttps://developer.nvidia.com/cuda-downloads  (Scroll down to Legacy)\nInstall cuDNN 6.0 for Cuda 8.0\nhttps://developer.nvidia.com/rdp/cudnn-download\nPut cuda folder from zip on N:\\and rename cuDNN-6\nInstall CMake\nhttps://cmake.org/files/v3.10/cmake-3.10.0-rc5-win64-x64.msi\nInstall Swig (swigwin-3.0.12)\nhttps://sourceforge.net/projects/swig/files/swigwin/swigwin-3.0.12/swigwin-3.0.12.zip\ncntk-py36\nactivate cntk-py36\npip install https://cntk.ai/PythonWheel/GPU/cntk-2.2-cp36-cp36m-win_amd64.whl\npython -c \"import cntk; print(cntk.__version__)\"\nconda install pygpu\npip install keras\n\nRemove old tensorflow in Tools if it exists\nmove tensorflow tensorflow.not\ngit clone --recursive https://github.com/tensorflow/tensorflow.git\ncd C:\\Users\\%USERNAME%\\Tools\\tensorflow\\tensorflow\\contrib\\cmake\nEdit CMakeLists.txt\n\nComment out these:\n# if (tensorflow_OPTIMIZE_FOR_NATIVE_ARCH)\n#   include(CheckCXXCompilerFlag)\n#   CHECK_CXX_COMPILER_FLAG(\"-march=native\" COMPILER_OPT_ARCH_NATIVE_SUPPORTED)\n#   if (COMPILER_OPT_ARCH_NATIVE_SUPPORTED)\n#     set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -march=native\")\n#   endif()\n# endif()\n\nAdd these:\nif (tensorflow_OPTIMIZE_FOR_NATIVE_ARCH)\n  include(CheckCXXCompilerFlag)\n  CHECK_CXX_COMPILER_FLAG(\"-march=native\" COMPILER_OPT_ARCH_NATIVE_SUPPORTED)\n  if (COMPILER_OPT_ARCH_NATIVE_SUPPORTED)\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -march=native\")\n  else()\n    CHECK_CXX_COMPILER_FLAG(\"/arch:AVX2\" COMPILER_OPT_ARCH_AVX_SUPPORTED)\n    if(COMPILER_OPT_ARCH_AVX_SUPPORTED)\n      set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} /arch:AVX2\")\n    endif()\n  endif()\nendif()\n\nmkdir build & cd build\n\"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin\\amd64\\vcvars64.bat\"\n\ncmake .. -A x64 -DCMAKE_BUILD_TYPE=Release ^\n-DSWIG_EXECUTABLE=N:/swigwin-3.0.12/swig.exe ^\n-DPYTHON_EXECUTABLE=N:/Anaconda3/python.exe ^\n-DPYTHON_LIBRARIES=N:/Anaconda3/libs/python36.lib ^\n-Dtensorflow_ENABLE_GPU=ON ^\n-DCUDNN_HOME=\"n:\\cuDNN-6\" ^\n-Dtensorflow_WIN_CPU_SIMD_OPTIONS=/arch:AVX2\n\n-- Building for: Visual Studio 14 2015\n-- Selecting Windows SDK version 10.0.14393.0 to target Windows 10.0.16299.\n-- The C compiler identification is MSVC 19.0.24225.1\n-- The CXX compiler identification is MSVC 19.0.24225.1\n-- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe\n-- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe -- works\n-- Detecting C compiler ABI info\n-- Detecting C compiler ABI info - done\n-- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe\n-- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe -- works\n-- Detecting CXX compiler ABI info\n-- Detecting CXX compiler ABI info - done\n-- Detecting CXX compile features\n-- Detecting CXX compile features - done\n-- Performing Test COMPILER_OPT_ARCH_NATIVE_SUPPORTED\n-- Performing Test COMPILER_OPT_ARCH_NATIVE_SUPPORTED - Failed\n-- Performing Test COMPILER_OPT_ARCH_AVX_SUPPORTED\n-- Performing Test COMPILER_OPT_ARCH_AVX_SUPPORTED - Success\n-- Performing Test COMPILER_OPT_WIN_CPU_SIMD_SUPPORTED\n-- Performing Test COMPILER_OPT_WIN_CPU_SIMD_SUPPORTED - Success\n-- Found CUDA: C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0 (found suitable version \"8.0\", minimum required is \"8.0\")\n-- Found PythonInterp: C:/Users/%USERNAME%/Anaconda3/python.exe (found version \"3.6.3\")\n-- Found PythonLibs: C:/Users/%USERNAME%/Anaconda3/libs/python36.lib (found version \"3.6.3\")\n-- Found SWIG: C:/Users/%USERNAME%/Tools/swigwin-3.0.12/swig.exe (found version \"3.0.12\")\n-- Configuring done\n-- Generating done\n-- Build files have been written to: C:/Users/%USERNAME%/Tools/tensorflow/tensorflow/contrib/cmake/build\nMSBuild /p:Configuration=Release tf_python_build_pip_package.vcxproj", "body": "With CUDA 8.0 and cuDNN 6.0, this is how I installed TensorFlow from source for Cuda GPU and AVX2 support in Win10::\r\n\r\nRequirements:\r\n\r\n\t* Windows 10 64-Bit\r\n\t* Visual Studio 15 C++ Tools\r\n\t* NVIDIA CUDA\u00ae Toolkit 8.0\r\n\t* NVIDIA cuDNN 6.0 for CUDA 8.0\r\n\t* Cmake\r\n\t* Swig\r\n\r\nInstall Visual Studio Community Edition Update 3 w/Windows Kit 10.0.10240.0\r\nFollow instructions at: https://github.com/philferriere/dlwin  (Thank you Phil)\r\n\r\nCreate a Virtual Drive N: for clarity\r\nI suggest creating a directory off C: or your drive of choice and creating N: based on these instructions (2GB min):\r\nhttps://technet.microsoft.com/en-us/library/gg318052(v=ws.10).aspx\r\n\r\nInstall Cuda 8.0 64-bit\r\nhttps://developer.nvidia.com/cuda-downloads  (Scroll down to Legacy)\r\n\r\nInstall cuDNN 6.0 for Cuda 8.0\r\nhttps://developer.nvidia.com/rdp/cudnn-download\r\nPut cuda folder from zip on N:\\and rename cuDNN-6\r\n\r\nInstall CMake\r\nhttps://cmake.org/files/v3.10/cmake-3.10.0-rc5-win64-x64.msi\r\n\r\nInstall Swig (swigwin-3.0.12)\r\nhttps://sourceforge.net/projects/swig/files/swigwin/swigwin-3.0.12/swigwin-3.0.12.zip\r\n\r\n#### cntk-py36\r\n```conda create --name cntk-py36 python=3.6 numpy scipy h5py jupyter\r\nactivate cntk-py36\r\npip install https://cntk.ai/PythonWheel/GPU/cntk-2.2-cp36-cp36m-win_amd64.whl\r\npython -c \"import cntk; print(cntk.__version__)\"\r\nconda install pygpu\r\npip install keras\r\n```\r\n#### Remove old tensorflow in Tools if it exists\r\n```cd C:\\Users\\%USERNAME%\\Tools\\\r\nmove tensorflow tensorflow.not\r\ngit clone --recursive https://github.com/tensorflow/tensorflow.git\r\ncd C:\\Users\\%USERNAME%\\Tools\\tensorflow\\tensorflow\\contrib\\cmake\r\nEdit CMakeLists.txt\r\n```\r\nComment out these:\r\n```\r\n# if (tensorflow_OPTIMIZE_FOR_NATIVE_ARCH)\r\n#   include(CheckCXXCompilerFlag)\r\n#   CHECK_CXX_COMPILER_FLAG(\"-march=native\" COMPILER_OPT_ARCH_NATIVE_SUPPORTED)\r\n#   if (COMPILER_OPT_ARCH_NATIVE_SUPPORTED)\r\n#     set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -march=native\")\r\n#   endif()\r\n# endif()\r\n```\r\nAdd these:\r\n```\r\nif (tensorflow_OPTIMIZE_FOR_NATIVE_ARCH)\r\n  include(CheckCXXCompilerFlag)\r\n  CHECK_CXX_COMPILER_FLAG(\"-march=native\" COMPILER_OPT_ARCH_NATIVE_SUPPORTED)\r\n  if (COMPILER_OPT_ARCH_NATIVE_SUPPORTED)\r\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -march=native\")\r\n  else()\r\n    CHECK_CXX_COMPILER_FLAG(\"/arch:AVX2\" COMPILER_OPT_ARCH_AVX_SUPPORTED)\r\n    if(COMPILER_OPT_ARCH_AVX_SUPPORTED)\r\n      set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} /arch:AVX2\")\r\n    endif()\r\n  endif()\r\nendif()\r\n```\r\nmkdir build & cd build\r\n```\r\n\"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin\\amd64\\vcvars64.bat\"\r\n\r\ncmake .. -A x64 -DCMAKE_BUILD_TYPE=Release ^\r\n-DSWIG_EXECUTABLE=N:/swigwin-3.0.12/swig.exe ^\r\n-DPYTHON_EXECUTABLE=N:/Anaconda3/python.exe ^\r\n-DPYTHON_LIBRARIES=N:/Anaconda3/libs/python36.lib ^\r\n-Dtensorflow_ENABLE_GPU=ON ^\r\n-DCUDNN_HOME=\"n:\\cuDNN-6\" ^\r\n-Dtensorflow_WIN_CPU_SIMD_OPTIONS=/arch:AVX2\r\n```\r\n-- Building for: Visual Studio 14 2015\r\n-- Selecting Windows SDK version 10.0.14393.0 to target Windows 10.0.16299.\r\n-- The C compiler identification is MSVC 19.0.24225.1\r\n-- The CXX compiler identification is MSVC 19.0.24225.1\r\n-- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe\r\n-- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe -- works\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe\r\n-- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe -- works\r\n-- Detecting CXX compiler ABI info\r\n-- Detecting CXX compiler ABI info - done\r\n-- Detecting CXX compile features\r\n-- Detecting CXX compile features - done\r\n-- Performing Test COMPILER_OPT_ARCH_NATIVE_SUPPORTED\r\n-- Performing Test COMPILER_OPT_ARCH_NATIVE_SUPPORTED - Failed\r\n-- Performing Test COMPILER_OPT_ARCH_AVX_SUPPORTED\r\n-- Performing Test COMPILER_OPT_ARCH_AVX_SUPPORTED - Success\r\n-- Performing Test COMPILER_OPT_WIN_CPU_SIMD_SUPPORTED\r\n-- Performing Test COMPILER_OPT_WIN_CPU_SIMD_SUPPORTED - Success\r\n-- Found CUDA: C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0 (found suitable version \"8.0\", minimum required is \"8.0\")\r\n-- Found PythonInterp: C:/Users/%USERNAME%/Anaconda3/python.exe (found version \"3.6.3\")\r\n-- Found PythonLibs: C:/Users/%USERNAME%/Anaconda3/libs/python36.lib (found version \"3.6.3\")\r\n-- Found SWIG: C:/Users/%USERNAME%/Tools/swigwin-3.0.12/swig.exe (found version \"3.0.12\")\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: C:/Users/%USERNAME%/Tools/tensorflow/tensorflow/contrib/cmake/build\r\n```\r\nMSBuild /p:Configuration=Release tf_python_build_pip_package.vcxproj\r\n```"}