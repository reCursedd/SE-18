{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/341998981", "html_url": "https://github.com/tensorflow/tensorflow/issues/12052#issuecomment-341998981", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12052", "id": 341998981, "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTk5ODk4MQ==", "user": {"login": "yselivonchyk", "id": 4716569, "node_id": "MDQ6VXNlcjQ3MTY1Njk=", "avatar_url": "https://avatars3.githubusercontent.com/u/4716569?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yselivonchyk", "html_url": "https://github.com/yselivonchyk", "followers_url": "https://api.github.com/users/yselivonchyk/followers", "following_url": "https://api.github.com/users/yselivonchyk/following{/other_user}", "gists_url": "https://api.github.com/users/yselivonchyk/gists{/gist_id}", "starred_url": "https://api.github.com/users/yselivonchyk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yselivonchyk/subscriptions", "organizations_url": "https://api.github.com/users/yselivonchyk/orgs", "repos_url": "https://api.github.com/users/yselivonchyk/repos", "events_url": "https://api.github.com/users/yselivonchyk/events{/privacy}", "received_events_url": "https://api.github.com/users/yselivonchyk/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-05T19:38:39Z", "updated_at": "2017-11-05T19:55:01Z", "author_association": "NONE", "body_html": "<p>Ubuntu 17.10, CUDA 9, CuDNN 7, Python 3.6, bazel 0.7.0 + TF from source (master).</p>\n<p>Follow instructions as in this answer to get CUDA up and running:<br>\n<a href=\"https://askubuntu.com/questions/967332/how-can-i-install-cuda-9-on-ubuntu-17-10\" rel=\"nofollow\">https://askubuntu.com/questions/967332/how-can-i-install-cuda-9-on-ubuntu-17-10</a></p>\n<p>Note, you might want to use these commands instead for 64 bit version:</p>\n<pre><code>sudo ln -s /usr/bin/gcc-6 /usr/local/cuda-9.0/bin/gcc \nsudo ln -s /usr/bin/g++-6 /usr/local/cuda-9.0/bin/g++ \nsudo ./cuda_9.0.176_384.81_linux-run --override\n</code></pre>\n<p>To install Tensorflow you will need</p>\n<ol>\n<li>Before compiling TF: correctly configure path variables (the paths from NVIDIA page did not work for me):</li>\n</ol>\n<pre><code>export PATH=/usr/local/cuda-9.0/bin:${PATH}\nexport LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/usr/local/cuda-9.0/lib64\n</code></pre>\n<ol start=\"2\">\n<li>Before compiling: Configure bazel to use same gcc version as during CUDA installation:</li>\n</ol>\n<pre><code>sudo update-alternatives --remove-all g++\nsudo update-alternatives --remove-all gcc\nsudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 10\nsudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 10\n</code></pre>\n<ol start=\"3\">\n<li>While following TF instructions once you get to  bazel build step note, that youll need an additional flag to compile with gcc version higher than 4.*:<br>\n<code>bazel build --config=opt --config=cuda --cxxopt=\"-D_GLIBCXX_USE_CXX11_ABI=0\" //tensorflow/tools/pip_package:build_pip_package</code></li>\n</ol>", "body_text": "Ubuntu 17.10, CUDA 9, CuDNN 7, Python 3.6, bazel 0.7.0 + TF from source (master).\nFollow instructions as in this answer to get CUDA up and running:\nhttps://askubuntu.com/questions/967332/how-can-i-install-cuda-9-on-ubuntu-17-10\nNote, you might want to use these commands instead for 64 bit version:\nsudo ln -s /usr/bin/gcc-6 /usr/local/cuda-9.0/bin/gcc \nsudo ln -s /usr/bin/g++-6 /usr/local/cuda-9.0/bin/g++ \nsudo ./cuda_9.0.176_384.81_linux-run --override\n\nTo install Tensorflow you will need\n\nBefore compiling TF: correctly configure path variables (the paths from NVIDIA page did not work for me):\n\nexport PATH=/usr/local/cuda-9.0/bin:${PATH}\nexport LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/usr/local/cuda-9.0/lib64\n\n\nBefore compiling: Configure bazel to use same gcc version as during CUDA installation:\n\nsudo update-alternatives --remove-all g++\nsudo update-alternatives --remove-all gcc\nsudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 10\nsudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 10\n\n\nWhile following TF instructions once you get to  bazel build step note, that youll need an additional flag to compile with gcc version higher than 4.*:\nbazel build --config=opt --config=cuda --cxxopt=\"-D_GLIBCXX_USE_CXX11_ABI=0\" //tensorflow/tools/pip_package:build_pip_package", "body": "Ubuntu 17.10, CUDA 9, CuDNN 7, Python 3.6, bazel 0.7.0 + TF from source (master).\r\n\r\nFollow instructions as in this answer to get CUDA up and running:\r\nhttps://askubuntu.com/questions/967332/how-can-i-install-cuda-9-on-ubuntu-17-10\r\n\r\nNote, you might want to use these commands instead for 64 bit version: \r\n```\r\nsudo ln -s /usr/bin/gcc-6 /usr/local/cuda-9.0/bin/gcc \r\nsudo ln -s /usr/bin/g++-6 /usr/local/cuda-9.0/bin/g++ \r\nsudo ./cuda_9.0.176_384.81_linux-run --override\r\n```\r\n\r\nTo install Tensorflow you will need\r\n1. Before compiling TF: correctly configure path variables (the paths from NVIDIA page did not work for me):\r\n```\r\nexport PATH=/usr/local/cuda-9.0/bin:${PATH}\r\nexport LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/usr/local/cuda-9.0/lib64\r\n```\r\n2. Before compiling: Configure bazel to use same gcc version as during CUDA installation:\r\n```\r\nsudo update-alternatives --remove-all g++\r\nsudo update-alternatives --remove-all gcc\r\nsudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 10\r\nsudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 10\r\n```\r\n3. While following TF instructions once you get to  bazel build step note, that youll need an additional flag to compile with gcc version higher than 4.*:\r\n`bazel build --config=opt --config=cuda --cxxopt=\"-D_GLIBCXX_USE_CXX11_ABI=0\" //tensorflow/tools/pip_package:build_pip_package`\r\n"}