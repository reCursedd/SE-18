{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2219", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2219/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2219/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2219/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/2219", "id": 153057326, "node_id": "MDU6SXNzdWUxNTMwNTczMjY=", "number": 2219, "title": "Can't allocate memory from GPU error in digits.py", "user": {"login": "neurotenguin", "id": 18723228, "node_id": "MDQ6VXNlcjE4NzIzMjI4", "avatar_url": "https://avatars1.githubusercontent.com/u/18723228?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neurotenguin", "html_url": "https://github.com/neurotenguin", "followers_url": "https://api.github.com/users/neurotenguin/followers", "following_url": "https://api.github.com/users/neurotenguin/following{/other_user}", "gists_url": "https://api.github.com/users/neurotenguin/gists{/gist_id}", "starred_url": "https://api.github.com/users/neurotenguin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neurotenguin/subscriptions", "organizations_url": "https://api.github.com/users/neurotenguin/orgs", "repos_url": "https://api.github.com/users/neurotenguin/repos", "events_url": "https://api.github.com/users/neurotenguin/events{/privacy}", "received_events_url": "https://api.github.com/users/neurotenguin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-05-04T16:29:51Z", "updated_at": "2016-05-04T17:55:56Z", "closed_at": "2016-05-04T17:55:56Z", "author_association": "NONE", "body_html": "<h3>Environment info</h3>\n<p>Operating System: 16.04</p>\n<p>Installed version of CUDA and cuDNN:<br>\n(please attach the output of <code>ls -l /path/to/cuda/lib/libcud*</code>):</p>\n<pre><code>-rw-r--r--   1 root root    322936 Eyl 19  2015 libcudadevrt.a\nlrwxrwxrwx   1 root root        16 Mar 30 15:25 libcudart.so -&gt; libcudart.so.7.5\nlrwxrwxrwx   1 root root        19 Mar 30 15:25 libcudart.so.7.5 -&gt; libcudart.so.7.5.18\n-rw-r--r--   1 root root    383336 Eyl 19  2015 libcudart.so.7.5.18\n-rw-r--r--   1 root root    720192 Eyl 19  2015 libcudart_static.a\nlrwxrwxrwx   1 root root        12 Nis 14 18:53 libcuda.so -&gt; libcuda.so.1\nlrwxrwxrwx   1 root root        17 Nis 14 18:53 libcuda.so.1 -&gt; libcuda.so.361.42\n-rw-r--r--   1 root root  16881416 Mar 23 02:42 libcuda.so.361.42\n-rwxr-xr-x   1 root root  61453024 Nis 30 11:36 libcudnn.so\n-rwxr-xr-x   1 root root  61453024 Nis 30 11:36 libcudnn.so.4\n-rwxr-xr-x   1 root root  61453024 Nis 30 11:36 libcudnn.so.4.0.7\n-rwxr-xr-x   1 root root  59823168 Nis 30 11:12 libcudnn.so.5\n-rwxr-xr-x   1 root root  59823168 Nis 30 11:12 libcudnn.so.5.0.4\n-rw-r--r--   1 root root  62025862 Nis 30 11:36 libcudnn_static.a\n</code></pre>\n<p>Installed using:</p>\n<pre><code>sudo pip install --upgrade https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.8.0-cp27-none-linux_x86_64.whl```\n</code></pre>\n<pre><code>I tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcurand.so locally\n0.8.0\n</code></pre>\n<h3>Steps to reproduce</h3>\n<pre><code>(tensorflow)username@pcname:~/Research/ai/tf_examples$ python digits.py \nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcurand.so locally\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:102] Found device 0 with properties: \nname: GeForce GTX 980 Ti\nmajor: 5 minor: 2 memoryClockRate (GHz) 1.291\npciBusID 0000:01:00.0\nTotal memory: 6.00GiB\nFree memory: 5.53GiB\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:126] DMA: 0 \nI tensorflow/core/common_runtime/gpu/gpu_init.cc:136] 0:   Y \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:755] Creating TensorFlow device (/gpu:0) -&gt; (device: 0, name: GeForce GTX 980 Ti, pci bus id: 0000:01:00.0)\nE tensorflow/stream_executor/cuda/cuda_driver.cc:932] failed to allocate 5.53G (5935898624 bytes) from device: CUDA_ERROR_OUT_OF_MEMORY\nStep #100, epoch #8, avg. train loss: 2.79814\nStep #200, epoch #16, avg. train loss: 1.27029\nStep #300, epoch #25, avg. train loss: 0.98960\nStep #400, epoch #33, avg. train loss: 0.84844\nStep #500, epoch #41, avg. train loss: 0.75324\nAccuracy: 0.744444\n</code></pre>\n<p>Running digits.py throws the \"failed to allocate 5.53G\" (the available memory on GPU is 6GB).</p>\n<h3>Possible solution</h3>\n<p>I can restrict the allocated memory using</p>\n<pre><code>gpu_options = tf.GPUOptions(per_process_gpu_memory_fraction=0.333)\nsess = tf.Session(config=tf.ConfigProto(gpu_options=gpu_options))\n</code></pre>\n<p>but I am wondering if there is any other way to handle this error.</p>", "body_text": "Environment info\nOperating System: 16.04\nInstalled version of CUDA and cuDNN:\n(please attach the output of ls -l /path/to/cuda/lib/libcud*):\n-rw-r--r--   1 root root    322936 Eyl 19  2015 libcudadevrt.a\nlrwxrwxrwx   1 root root        16 Mar 30 15:25 libcudart.so -> libcudart.so.7.5\nlrwxrwxrwx   1 root root        19 Mar 30 15:25 libcudart.so.7.5 -> libcudart.so.7.5.18\n-rw-r--r--   1 root root    383336 Eyl 19  2015 libcudart.so.7.5.18\n-rw-r--r--   1 root root    720192 Eyl 19  2015 libcudart_static.a\nlrwxrwxrwx   1 root root        12 Nis 14 18:53 libcuda.so -> libcuda.so.1\nlrwxrwxrwx   1 root root        17 Nis 14 18:53 libcuda.so.1 -> libcuda.so.361.42\n-rw-r--r--   1 root root  16881416 Mar 23 02:42 libcuda.so.361.42\n-rwxr-xr-x   1 root root  61453024 Nis 30 11:36 libcudnn.so\n-rwxr-xr-x   1 root root  61453024 Nis 30 11:36 libcudnn.so.4\n-rwxr-xr-x   1 root root  61453024 Nis 30 11:36 libcudnn.so.4.0.7\n-rwxr-xr-x   1 root root  59823168 Nis 30 11:12 libcudnn.so.5\n-rwxr-xr-x   1 root root  59823168 Nis 30 11:12 libcudnn.so.5.0.4\n-rw-r--r--   1 root root  62025862 Nis 30 11:36 libcudnn_static.a\n\nInstalled using:\nsudo pip install --upgrade https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.8.0-cp27-none-linux_x86_64.whl```\n\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcurand.so locally\n0.8.0\n\nSteps to reproduce\n(tensorflow)username@pcname:~/Research/ai/tf_examples$ python digits.py \nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcurand.so locally\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:102] Found device 0 with properties: \nname: GeForce GTX 980 Ti\nmajor: 5 minor: 2 memoryClockRate (GHz) 1.291\npciBusID 0000:01:00.0\nTotal memory: 6.00GiB\nFree memory: 5.53GiB\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:126] DMA: 0 \nI tensorflow/core/common_runtime/gpu/gpu_init.cc:136] 0:   Y \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:755] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 980 Ti, pci bus id: 0000:01:00.0)\nE tensorflow/stream_executor/cuda/cuda_driver.cc:932] failed to allocate 5.53G (5935898624 bytes) from device: CUDA_ERROR_OUT_OF_MEMORY\nStep #100, epoch #8, avg. train loss: 2.79814\nStep #200, epoch #16, avg. train loss: 1.27029\nStep #300, epoch #25, avg. train loss: 0.98960\nStep #400, epoch #33, avg. train loss: 0.84844\nStep #500, epoch #41, avg. train loss: 0.75324\nAccuracy: 0.744444\n\nRunning digits.py throws the \"failed to allocate 5.53G\" (the available memory on GPU is 6GB).\nPossible solution\nI can restrict the allocated memory using\ngpu_options = tf.GPUOptions(per_process_gpu_memory_fraction=0.333)\nsess = tf.Session(config=tf.ConfigProto(gpu_options=gpu_options))\n\nbut I am wondering if there is any other way to handle this error.", "body": "### Environment info\n\nOperating System: 16.04\n\nInstalled version of CUDA and cuDNN: \n(please attach the output of `ls -l /path/to/cuda/lib/libcud*`):\n\n```\n-rw-r--r--   1 root root    322936 Eyl 19  2015 libcudadevrt.a\nlrwxrwxrwx   1 root root        16 Mar 30 15:25 libcudart.so -> libcudart.so.7.5\nlrwxrwxrwx   1 root root        19 Mar 30 15:25 libcudart.so.7.5 -> libcudart.so.7.5.18\n-rw-r--r--   1 root root    383336 Eyl 19  2015 libcudart.so.7.5.18\n-rw-r--r--   1 root root    720192 Eyl 19  2015 libcudart_static.a\nlrwxrwxrwx   1 root root        12 Nis 14 18:53 libcuda.so -> libcuda.so.1\nlrwxrwxrwx   1 root root        17 Nis 14 18:53 libcuda.so.1 -> libcuda.so.361.42\n-rw-r--r--   1 root root  16881416 Mar 23 02:42 libcuda.so.361.42\n-rwxr-xr-x   1 root root  61453024 Nis 30 11:36 libcudnn.so\n-rwxr-xr-x   1 root root  61453024 Nis 30 11:36 libcudnn.so.4\n-rwxr-xr-x   1 root root  61453024 Nis 30 11:36 libcudnn.so.4.0.7\n-rwxr-xr-x   1 root root  59823168 Nis 30 11:12 libcudnn.so.5\n-rwxr-xr-x   1 root root  59823168 Nis 30 11:12 libcudnn.so.5.0.4\n-rw-r--r--   1 root root  62025862 Nis 30 11:36 libcudnn_static.a\n```\n\nInstalled using:\n\n``````\nsudo pip install --upgrade https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.8.0-cp27-none-linux_x86_64.whl```\n``````\n\n```\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcurand.so locally\n0.8.0\n```\n### Steps to reproduce\n\n```\n(tensorflow)username@pcname:~/Research/ai/tf_examples$ python digits.py \nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcurand.so locally\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:102] Found device 0 with properties: \nname: GeForce GTX 980 Ti\nmajor: 5 minor: 2 memoryClockRate (GHz) 1.291\npciBusID 0000:01:00.0\nTotal memory: 6.00GiB\nFree memory: 5.53GiB\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:126] DMA: 0 \nI tensorflow/core/common_runtime/gpu/gpu_init.cc:136] 0:   Y \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:755] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 980 Ti, pci bus id: 0000:01:00.0)\nE tensorflow/stream_executor/cuda/cuda_driver.cc:932] failed to allocate 5.53G (5935898624 bytes) from device: CUDA_ERROR_OUT_OF_MEMORY\nStep #100, epoch #8, avg. train loss: 2.79814\nStep #200, epoch #16, avg. train loss: 1.27029\nStep #300, epoch #25, avg. train loss: 0.98960\nStep #400, epoch #33, avg. train loss: 0.84844\nStep #500, epoch #41, avg. train loss: 0.75324\nAccuracy: 0.744444\n```\n\nRunning digits.py throws the \"failed to allocate 5.53G\" (the available memory on GPU is 6GB).  \n### Possible solution\n\nI can restrict the allocated memory using \n\n```\ngpu_options = tf.GPUOptions(per_process_gpu_memory_fraction=0.333)\nsess = tf.Session(config=tf.ConfigProto(gpu_options=gpu_options))\n```\n\nbut I am wondering if there is any other way to handle this error. \n"}