{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16743", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16743/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16743/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16743/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16743", "id": 294166612, "node_id": "MDU6SXNzdWUyOTQxNjY2MTI=", "number": 16743, "title": "MonitoredSession after_run hook returning empty SessionRunValues results", "user": {"login": "mortont", "id": 12803317, "node_id": "MDQ6VXNlcjEyODAzMzE3", "avatar_url": "https://avatars1.githubusercontent.com/u/12803317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mortont", "html_url": "https://github.com/mortont", "followers_url": "https://api.github.com/users/mortont/followers", "following_url": "https://api.github.com/users/mortont/following{/other_user}", "gists_url": "https://api.github.com/users/mortont/gists{/gist_id}", "starred_url": "https://api.github.com/users/mortont/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mortont/subscriptions", "organizations_url": "https://api.github.com/users/mortont/orgs", "repos_url": "https://api.github.com/users/mortont/repos", "events_url": "https://api.github.com/users/mortont/events{/privacy}", "received_events_url": "https://api.github.com/users/mortont/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-04T03:33:56Z", "updated_at": "2018-02-04T18:28:09Z", "closed_at": "2018-02-04T18:28:09Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code</strong>: yes</li>\n<li><strong>OS Platform and Distribution</strong>: Arch Linux 4.14.15-1</li>\n<li><strong>TensorFlow installed from</strong>: source (master)</li>\n<li><strong>TensorFlow version</strong>: v1.5.0-2123-g66105a6144</li>\n<li><strong>Python version</strong>: 3.6.4</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.9.0</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: 7.3.0</li>\n<li><strong>CUDA/cuDNN version</strong>: 9.1.85/7.0.5</li>\n<li><strong>GPU model and memory</strong>: Nvidia GTX 1080 8GB</li>\n<li><strong>Exact command to reproduce</strong>: <code>python test.py</code></li>\n</ul>\n<h3>Describe the problem</h3>\n<p>When running a <code>MonitoredSession</code> with <code>after_run</code> hooks, the result passed to <code>run_values</code> is None, when there should be output.</p>\n<h3>Source code / logs</h3>\n<p><code>test.py</code>:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\none <span class=\"pl-k\">=</span> tf.Variable(<span class=\"pl-c1\">1</span>)\n\n<span class=\"pl-k\">class</span> <span class=\"pl-en\">TestHook</span>(<span class=\"pl-e\">tf</span>.<span class=\"pl-e\">train</span>.<span class=\"pl-e\">SessionRunHook</span>):\n    <span class=\"pl-k\">def</span> <span class=\"pl-c1\">__init__</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>):\n        <span class=\"pl-c1\">super</span>().<span class=\"pl-c1\">__init__</span>()\n        <span class=\"pl-c1\">self</span>.result <span class=\"pl-k\">=</span> <span class=\"pl-c1\">None</span>\n\n    <span class=\"pl-k\">def</span> <span class=\"pl-en\">after_run</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>, <span class=\"pl-smi\">run_context</span>, <span class=\"pl-smi\">run_values</span>):\n        <span class=\"pl-c\"><span class=\"pl-c\">#</span> run_values.results should be 1 here</span>\n        <span class=\"pl-c1\">self</span>.result <span class=\"pl-k\">=</span> run_values.results\n\nhook <span class=\"pl-k\">=</span> TestHook()\n<span class=\"pl-k\">with</span> tf.train.MonitoredSession(<span class=\"pl-v\">hooks</span><span class=\"pl-k\">=</span>[hook]) <span class=\"pl-k\">as</span> sess:\n    <span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Eval result: <span class=\"pl-c1\">{}</span><span class=\"pl-pds\">'</span></span>.format(\n        one.eval(<span class=\"pl-v\">session</span><span class=\"pl-k\">=</span>sess)))\n    <span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Hook result: <span class=\"pl-c1\">{}</span><span class=\"pl-pds\">'</span></span>.format(\n        hook.result))</pre></div>\n<p>Expected output:</p>\n<pre><code>Eval result: 1\nHook result: 1\n</code></pre>\n<p>Actual output:</p>\n<pre><code>Eval result: 1\nHook result: None\n</code></pre>\n<p>I've changed this in my fork by replacing <div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/3fb47614c4c3f29d59085c2eb6ad9a4f9adfa98e/tensorflow/python/training/monitored_session.py#L1176\">tensorflow/tensorflow/python/training/monitored_session.py</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n         Line 1176\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/3fb47614c4c3f29d59085c2eb6ad9a4f9adfa98e\">3fb4761</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L1176\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1176\"></td>\n          <td id=\"LC1176\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-v\">results</span><span class=\"pl-k\">=</span>outputs[hook] <span class=\"pl-k\">if</span> hook <span class=\"pl-k\">in</span> outputs <span class=\"pl-k\">else</span> <span class=\"pl-c1\">None</span>, </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n with <code>results=outputs['caller'],</code>. However, this breaks training with an <code>Estimator</code> wrapping a <code>MonitoredSession</code>. If I'm misinterpreting the usage of the <code>after_run</code> hook please let me know!</p>", "body_text": "System information\n\nHave I written custom code: yes\nOS Platform and Distribution: Arch Linux 4.14.15-1\nTensorFlow installed from: source (master)\nTensorFlow version: v1.5.0-2123-g66105a6144\nPython version: 3.6.4\nBazel version (if compiling from source): 0.9.0\nGCC/Compiler version (if compiling from source): 7.3.0\nCUDA/cuDNN version: 9.1.85/7.0.5\nGPU model and memory: Nvidia GTX 1080 8GB\nExact command to reproduce: python test.py\n\nDescribe the problem\nWhen running a MonitoredSession with after_run hooks, the result passed to run_values is None, when there should be output.\nSource code / logs\ntest.py:\nimport tensorflow as tf\n\none = tf.Variable(1)\n\nclass TestHook(tf.train.SessionRunHook):\n    def __init__(self):\n        super().__init__()\n        self.result = None\n\n    def after_run(self, run_context, run_values):\n        # run_values.results should be 1 here\n        self.result = run_values.results\n\nhook = TestHook()\nwith tf.train.MonitoredSession(hooks=[hook]) as sess:\n    print('Eval result: {}'.format(\n        one.eval(session=sess)))\n    print('Hook result: {}'.format(\n        hook.result))\nExpected output:\nEval result: 1\nHook result: 1\n\nActual output:\nEval result: 1\nHook result: None\n\nI've changed this in my fork by replacing \n  \n    \n      tensorflow/tensorflow/python/training/monitored_session.py\n    \n    \n         Line 1176\n      in\n      3fb4761\n    \n    \n    \n    \n\n        \n          \n           results=outputs[hook] if hook in outputs else None, \n        \n    \n  \n\n with results=outputs['caller'],. However, this breaks training with an Estimator wrapping a MonitoredSession. If I'm misinterpreting the usage of the after_run hook please let me know!", "body": "### System information\r\n- **Have I written custom code**: yes\r\n- **OS Platform and Distribution**: Arch Linux 4.14.15-1\r\n- **TensorFlow installed from**: source (master)\r\n- **TensorFlow version**: v1.5.0-2123-g66105a6144\r\n- **Python version**: 3.6.4\r\n- **Bazel version (if compiling from source)**: 0.9.0\r\n- **GCC/Compiler version (if compiling from source)**: 7.3.0\r\n- **CUDA/cuDNN version**: 9.1.85/7.0.5\r\n- **GPU model and memory**: Nvidia GTX 1080 8GB\r\n- **Exact command to reproduce**: `python test.py`\r\n\r\n### Describe the problem\r\nWhen running a `MonitoredSession` with `after_run` hooks, the result passed to `run_values` is None, when there should be output.\r\n\r\n### Source code / logs\r\n`test.py`:\r\n```python\r\nimport tensorflow as tf\r\n\r\none = tf.Variable(1)\r\n\r\nclass TestHook(tf.train.SessionRunHook):\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.result = None\r\n\r\n    def after_run(self, run_context, run_values):\r\n        # run_values.results should be 1 here\r\n        self.result = run_values.results\r\n\r\nhook = TestHook()\r\nwith tf.train.MonitoredSession(hooks=[hook]) as sess:\r\n    print('Eval result: {}'.format(\r\n        one.eval(session=sess)))\r\n    print('Hook result: {}'.format(\r\n        hook.result))\r\n```\r\n\r\nExpected output:\r\n```\r\nEval result: 1\r\nHook result: 1\r\n```\r\n\r\nActual output:\r\n```\r\nEval result: 1\r\nHook result: None\r\n```\r\n\r\nI've changed this in my fork by replacing https://github.com/tensorflow/tensorflow/blob/3fb47614c4c3f29d59085c2eb6ad9a4f9adfa98e/tensorflow/python/training/monitored_session.py#L1176 with `results=outputs['caller'],`. However, this breaks training with an `Estimator` wrapping a `MonitoredSession`. If I'm misinterpreting the usage of the `after_run` hook please let me know!"}