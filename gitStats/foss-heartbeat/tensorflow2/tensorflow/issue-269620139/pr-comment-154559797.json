{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/154559797", "pull_request_review_id": 80738479, "id": 154559797, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NDU1OTc5Nw==", "diff_hunk": "@@ -0,0 +1,325 @@\n+/* Copyright 2017 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+\n+#ifndef TENSORFLOW_JAVA_SRC_GEN_CC_JAVA_DEFS_H_\n+#define TENSORFLOW_JAVA_SRC_GEN_CC_JAVA_DEFS_H_\n+\n+#include <string>\n+#include <vector>\n+#include <set>\n+#include <deque>\n+\n+#include \"tensorflow/core/platform/types.h\"\n+#include \"tensorflow/core/platform/env.h\"\n+#include \"tensorflow/core/lib/core/stringpiece.h\"\n+\n+namespace tensorflow {\n+namespace java {\n+\n+/// \\brief An enumeration of different modifiers commonly used in Java\n+enum JavaModifier {\n+  PUBLIC    = (1 << 0),\n+  PROTECTED = (1 << 1),\n+  PRIVATE   = (1 << 2),\n+  STATIC    = (1 << 3),\n+  FINAL     = (1 << 4),\n+};\n+\n+/// \\brief A definition of a Java documentation block\n+///\n+/// Any vector of parameters (@param) that should be included in this block\n+/// can be provided separately (e.g. a vector of documented variables, see\n+/// JavaVariable).\n+class JavaDoc {\n+ public:\n+  const string& brief() const { return brief_; }\n+  JavaDoc& brief(const string& brief) { brief_ = brief; return *this; }\n+  const string& description() const { return description_; }\n+  JavaDoc& description(const string& txt) { description_ = txt; return *this; }\n+  const string& value() const { return value_; }\n+  JavaDoc& value(const string& value) { value_ = value; return *this; }\n+  bool empty() const {\n+    return brief().empty() && description().empty() && value().empty();\n+  }\n+\n+ private:\n+  string brief_;\n+  string description_;\n+  string value_;\n+};\n+\n+class JavaAnnot;\n+\n+/// \\brief A definition of any kind of Java type (classes, interfaces...)\n+///\n+/// Note that most of the data fields of this class are only useful in specific\n+/// contexts and are not required in many cases. For example, annotations and\n+/// supertypes are only useful when declaring a type.\n+class JavaType {\n+ public:\n+  enum Kind {\n+    PRIMITIVE, CLASS, INTERFACE, GENERIC, ANNOTATION, NONE", "path": "tensorflow/java/src/gen/cc/java_defs.h", "position": null, "original_position": 73, "commit_id": "da52ece97d0f0b090e6da2d191d3a8ef03ba2756", "original_commit_id": "da51a5e19d6caf38f5ef32812807a1246c407160", "user": {"login": "karllessard", "id": 10109534, "node_id": "MDQ6VXNlcjEwMTA5NTM0", "avatar_url": "https://avatars3.githubusercontent.com/u/10109534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karllessard", "html_url": "https://github.com/karllessard", "followers_url": "https://api.github.com/users/karllessard/followers", "following_url": "https://api.github.com/users/karllessard/following{/other_user}", "gists_url": "https://api.github.com/users/karllessard/gists{/gist_id}", "starred_url": "https://api.github.com/users/karllessard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karllessard/subscriptions", "organizations_url": "https://api.github.com/users/karllessard/orgs", "repos_url": "https://api.github.com/users/karllessard/repos", "events_url": "https://api.github.com/users/karllessard/events{/privacy}", "received_events_url": "https://api.github.com/users/karllessard/received_events", "type": "User", "site_admin": false}, "body": "It is only used for empty objects... I tried to focus on simplicity and readability so I tried to avoid dealing with dynamic memory allocation (this code is only run at compile time after all). But looking at it now, the only remaining case of a 'empty' ```JavaType``` is for the return value of a ```JavaMethod```, which should be absent for a constructor. I can probably play a bit around to remove that last case (and the `NONE` value).", "created_at": "2017-12-04T04:58:00Z", "updated_at": "2017-12-28T21:22:39Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/14094#discussion_r154559797", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/14094", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/154559797"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/14094#discussion_r154559797"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/14094"}}, "body_html": "<p>It is only used for empty objects... I tried to focus on simplicity and readability so I tried to avoid dealing with dynamic memory allocation (this code is only run at compile time after all). But looking at it now, the only remaining case of a 'empty' <code>JavaType</code> is for the return value of a <code>JavaMethod</code>, which should be absent for a constructor. I can probably play a bit around to remove that last case (and the <code>NONE</code> value).</p>", "body_text": "It is only used for empty objects... I tried to focus on simplicity and readability so I tried to avoid dealing with dynamic memory allocation (this code is only run at compile time after all). But looking at it now, the only remaining case of a 'empty' JavaType is for the return value of a JavaMethod, which should be absent for a constructor. I can probably play a bit around to remove that last case (and the NONE value).", "in_reply_to_id": 150663710}