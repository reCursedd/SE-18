{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/150662460", "pull_request_review_id": 74981544, "id": 150662460, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MDY2MjQ2MA==", "diff_hunk": "@@ -0,0 +1,58 @@\n+/* Copyright 2017 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+\n+#include <string>\n+\n+#include \"tensorflow/core/lib/core/status.h\"\n+#include \"tensorflow/java/src/gen/cc/source_writer.h\"\n+\n+namespace tensorflow {\n+\n+SourceWriter* SourceWriter::Write(const StringPiece& str) {\n+  if (!str.empty()) {\n+    if (new_line) {\n+      Append(left_margin + line_prefix);\n+      new_line = false;\n+    }\n+    Append(str);\n+  }\n+  return this;\n+}\n+\n+SourceWriter* SourceWriter::Inline(const string& str) {\n+  size_t line_pos = 0;\n+  do {\n+    size_t start_pos = line_pos;\n+    line_pos = str.find('\\n', start_pos);\n+    if (line_pos != string::npos) {\n+      ++line_pos;\n+      Write(StringPiece(str.data() + start_pos, line_pos - start_pos));\n+      new_line = true;\n+    } else {\n+      Write(StringPiece(str.data() + start_pos, str.size() - start_pos));\n+    }\n+  } while (line_pos != string::npos && line_pos < str.size());\n+\n+  return this;\n+}\n+\n+SourceWriter* SourceWriter::EndOfLine() {\n+  static const StringPiece eol(\"\\n\");\n+  Write(eol);", "path": "tensorflow/java/src/gen/cc/source_writer.cc", "position": null, "original_position": 53, "commit_id": "da52ece97d0f0b090e6da2d191d3a8ef03ba2756", "original_commit_id": "da51a5e19d6caf38f5ef32812807a1246c407160", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "body": "I don't think you need the `static const StringPiece eol(\"\\n\")`, can just do: `Write(\"\\n\")`\r\n", "created_at": "2017-11-13T20:57:36Z", "updated_at": "2017-12-28T21:22:39Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/14094#discussion_r150662460", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/14094", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/150662460"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/14094#discussion_r150662460"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/14094"}}, "body_html": "<p>I don't think you need the <code>static const StringPiece eol(\"\\n\")</code>, can just do: <code>Write(\"\\n\")</code></p>", "body_text": "I don't think you need the static const StringPiece eol(\"\\n\"), can just do: Write(\"\\n\")"}