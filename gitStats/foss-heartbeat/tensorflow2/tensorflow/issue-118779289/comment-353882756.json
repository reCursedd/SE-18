{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/353882756", "html_url": "https://github.com/tensorflow/tensorflow/issues/348#issuecomment-353882756", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/348", "id": 353882756, "node_id": "MDEyOklzc3VlQ29tbWVudDM1Mzg4Mjc1Ng==", "user": {"login": "matan1", "id": 4380380, "node_id": "MDQ6VXNlcjQzODAzODA=", "avatar_url": "https://avatars2.githubusercontent.com/u/4380380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matan1", "html_url": "https://github.com/matan1", "followers_url": "https://api.github.com/users/matan1/followers", "following_url": "https://api.github.com/users/matan1/following{/other_user}", "gists_url": "https://api.github.com/users/matan1/gists{/gist_id}", "starred_url": "https://api.github.com/users/matan1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matan1/subscriptions", "organizations_url": "https://api.github.com/users/matan1/orgs", "repos_url": "https://api.github.com/users/matan1/repos", "events_url": "https://api.github.com/users/matan1/events{/privacy}", "received_events_url": "https://api.github.com/users/matan1/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-25T17:56:50Z", "updated_at": "2017-12-25T17:56:50Z", "author_association": "NONE", "body_html": "<p>I was having this problem and for me it was not sufficient to simply execute \"<code>sudo pip install wheel</code>\".</p>\n<p>To investigate further I looked into the bazel-bin/tensorflow/tools/pip_package/build_pip_package script to see how it was loading python, where I found these lines:</p>\n<pre><code># Before we leave the top-level directory, make sure we know how to\n# call python.\nsource tools/python_bin_path.sh\n</code></pre>\n<p>The shell script sourced there is the one liner:</p>\n<p>export PYTHON_BIN_PATH=\"/Library/Frameworks/Python.framework/Versions/2.7/bin/python\"</p>\n<p>Which is the python version I selected when configuring my tensorflow build.</p>\n<p>The pip on my path, however, was for python 3.5, which you can see by calling <code>pip --version</code> or <code>which pip</code>.   So my calls to <code>sudo pip install wheel</code> were only installing to the 3.5 version.  The solution for me was to explicitly call the version of pip for the version/install of python you are building tensorflow with.  In my case, that was:</p>\n<p><code>sudo /Library/Frameworks/Python.framework/Versions/2.7/bin/pip install wheel</code></p>\n<p>After that, the build_pip_package script worked for me.</p>", "body_text": "I was having this problem and for me it was not sufficient to simply execute \"sudo pip install wheel\".\nTo investigate further I looked into the bazel-bin/tensorflow/tools/pip_package/build_pip_package script to see how it was loading python, where I found these lines:\n# Before we leave the top-level directory, make sure we know how to\n# call python.\nsource tools/python_bin_path.sh\n\nThe shell script sourced there is the one liner:\nexport PYTHON_BIN_PATH=\"/Library/Frameworks/Python.framework/Versions/2.7/bin/python\"\nWhich is the python version I selected when configuring my tensorflow build.\nThe pip on my path, however, was for python 3.5, which you can see by calling pip --version or which pip.   So my calls to sudo pip install wheel were only installing to the 3.5 version.  The solution for me was to explicitly call the version of pip for the version/install of python you are building tensorflow with.  In my case, that was:\nsudo /Library/Frameworks/Python.framework/Versions/2.7/bin/pip install wheel\nAfter that, the build_pip_package script worked for me.", "body": "I was having this problem and for me it was not sufficient to simply execute \"`sudo pip install wheel`\".  \r\n\r\nTo investigate further I looked into the bazel-bin/tensorflow/tools/pip_package/build_pip_package script to see how it was loading python, where I found these lines:\r\n\r\n```\r\n# Before we leave the top-level directory, make sure we know how to\r\n# call python.\r\nsource tools/python_bin_path.sh\r\n```\r\nThe shell script sourced there is the one liner:  \r\n\r\nexport PYTHON_BIN_PATH=\"/Library/Frameworks/Python.framework/Versions/2.7/bin/python\"\r\n\r\nWhich is the python version I selected when configuring my tensorflow build.  \r\n\r\nThe pip on my path, however, was for python 3.5, which you can see by calling `pip --version` or `which pip`.   So my calls to `sudo pip install wheel` were only installing to the 3.5 version.  The solution for me was to explicitly call the version of pip for the version/install of python you are building tensorflow with.  In my case, that was:\r\n\r\n`sudo /Library/Frameworks/Python.framework/Versions/2.7/bin/pip install wheel`\r\n\r\nAfter that, the build_pip_package script worked for me."}