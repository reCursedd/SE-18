{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/371648786", "html_url": "https://github.com/tensorflow/tensorflow/issues/17500#issuecomment-371648786", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17500", "id": 371648786, "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTY0ODc4Ng==", "user": {"login": "ppwwyyxx", "id": 1381301, "node_id": "MDQ6VXNlcjEzODEzMDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1381301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ppwwyyxx", "html_url": "https://github.com/ppwwyyxx", "followers_url": "https://api.github.com/users/ppwwyyxx/followers", "following_url": "https://api.github.com/users/ppwwyyxx/following{/other_user}", "gists_url": "https://api.github.com/users/ppwwyyxx/gists{/gist_id}", "starred_url": "https://api.github.com/users/ppwwyyxx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ppwwyyxx/subscriptions", "organizations_url": "https://api.github.com/users/ppwwyyxx/orgs", "repos_url": "https://api.github.com/users/ppwwyyxx/repos", "events_url": "https://api.github.com/users/ppwwyyxx/events{/privacy}", "received_events_url": "https://api.github.com/users/ppwwyyxx/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-08T22:35:58Z", "updated_at": "2018-03-08T22:35:58Z", "author_association": "CONTRIBUTOR", "body_html": "<p>The colocation constraint happens inside <code>tf.gradients</code> so I could not change this behavior from outside as long as I enable this option. I enable the option because it sometimes makes things slightly faster and usually not slower.</p>\n<p>I may be wrong about what this option is meant to do, but I assume it's meant to make <code>grads = tf.gradients(..)</code> faster. But given that <code>grads</code> does not depend on the Print op, there is no reason to colocate with the Print op.</p>\n<p>Normally when <code>tf.gradients</code> is called, no unused ops like this one will be added so the behavior will always make sense, unless one uses <code>gradien_override_map</code>.<br>\nMy use case is to occasionally run summaries or print ops on the gradients.</p>", "body_text": "The colocation constraint happens inside tf.gradients so I could not change this behavior from outside as long as I enable this option. I enable the option because it sometimes makes things slightly faster and usually not slower.\nI may be wrong about what this option is meant to do, but I assume it's meant to make grads = tf.gradients(..) faster. But given that grads does not depend on the Print op, there is no reason to colocate with the Print op.\nNormally when tf.gradients is called, no unused ops like this one will be added so the behavior will always make sense, unless one uses gradien_override_map.\nMy use case is to occasionally run summaries or print ops on the gradients.", "body": "The colocation constraint happens inside `tf.gradients` so I could not change this behavior from outside as long as I enable this option. I enable the option because it sometimes makes things slightly faster and usually not slower.\r\n\r\nI may be wrong about what this option is meant to do, but I assume it's meant to make `grads = tf.gradients(..)` faster. But given that `grads` does not depend on the Print op, there is no reason to colocate with the Print op. \r\n\r\nNormally when `tf.gradients` is called, no unused ops like this one will be added so the behavior will always make sense, unless one uses `gradien_override_map`.\r\nMy use case is to occasionally run summaries or print ops on the gradients."}