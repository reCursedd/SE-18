{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/49936732", "pull_request_review_id": null, "id": 49936732, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM2NzMy", "diff_hunk": "@@ -0,0 +1,75 @@\n+/* Copyright 2015 Google Inc. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+\n+#ifndef TENSORFLOW_KERNELS_SCATTER_OP_H_\n+#define TENSORFLOW_KERNELS_SCATTER_OP_H_\n+\n+// Functor definitions for Scatter ops, must be compilable by nvcc.\n+\n+#include \"third_party/eigen3/unsupported/Eigen/CXX11/Tensor\"\n+#include \"tensorflow/core/framework/tensor_types.h\"\n+\n+namespace tensorflow {\n+\n+class OpKernelContext;\n+\n+namespace scatter_op {\n+\n+enum class UpdateOp { ASSIGN, ADD, SUB };\n+\n+template <UpdateOp Op>\n+struct Assign {};\n+template <>\n+struct Assign<UpdateOp::ASSIGN> {\n+  template <typename Params, typename Update>\n+  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE\n+  static void Run(Params&& p, const Update& u) {\n+    p = u;\n+  }\n+};\n+template <>\n+struct Assign<UpdateOp::ADD> {\n+  template <typename Params, typename Update>\n+  EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE\n+  static void Run(Params&& p, const Update& u) {\n+    p += u;", "path": "tensorflow/core/kernels/scatter_op.h", "position": null, "original_position": 47, "commit_id": "a864d2497ef4926138d69a320cc3ac6a02f6e3a4", "original_commit_id": "9e93e19c6f134b970a01332ee11f2059436563e5", "user": {"login": "keveman", "id": 229914, "node_id": "MDQ6VXNlcjIyOTkxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/229914?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keveman", "html_url": "https://github.com/keveman", "followers_url": "https://api.github.com/users/keveman/followers", "following_url": "https://api.github.com/users/keveman/following{/other_user}", "gists_url": "https://api.github.com/users/keveman/gists{/gist_id}", "starred_url": "https://api.github.com/users/keveman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keveman/subscriptions", "organizations_url": "https://api.github.com/users/keveman/orgs", "repos_url": "https://api.github.com/users/keveman/repos", "events_url": "https://api.github.com/users/keveman/events{/privacy}", "received_events_url": "https://api.github.com/users/keveman/received_events", "type": "User", "site_admin": false}, "body": "I do understand that `p` in `Params&& p` is really a [universal reference](https://isocpp.org/blog/2012/11/universal-references-in-c11-scott-meyers) and not an rvalue reference. However, it's just not common usage in rest of TF, so I would request you just use a pointer.\n", "created_at": "2016-01-16T20:29:29Z", "updated_at": "2016-02-09T07:50:18Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/782#discussion_r49936732", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/782", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/49936732"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/782#discussion_r49936732"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/782"}}, "body_html": "<p>I do understand that <code>p</code> in <code>Params&amp;&amp; p</code> is really a <a href=\"https://isocpp.org/blog/2012/11/universal-references-in-c11-scott-meyers\" rel=\"nofollow\">universal reference</a> and not an rvalue reference. However, it's just not common usage in rest of TF, so I would request you just use a pointer.</p>", "body_text": "I do understand that p in Params&& p is really a universal reference and not an rvalue reference. However, it's just not common usage in rest of TF, so I would request you just use a pointer."}