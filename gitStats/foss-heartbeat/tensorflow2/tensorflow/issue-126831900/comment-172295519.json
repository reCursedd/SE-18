{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/172295519", "html_url": "https://github.com/tensorflow/tensorflow/pull/782#issuecomment-172295519", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/782", "id": 172295519, "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjI5NTUxOQ==", "user": {"login": "fpmchu", "id": 7635883, "node_id": "MDQ6VXNlcjc2MzU4ODM=", "avatar_url": "https://avatars0.githubusercontent.com/u/7635883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fpmchu", "html_url": "https://github.com/fpmchu", "followers_url": "https://api.github.com/users/fpmchu/followers", "following_url": "https://api.github.com/users/fpmchu/following{/other_user}", "gists_url": "https://api.github.com/users/fpmchu/gists{/gist_id}", "starred_url": "https://api.github.com/users/fpmchu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fpmchu/subscriptions", "organizations_url": "https://api.github.com/users/fpmchu/orgs", "repos_url": "https://api.github.com/users/fpmchu/repos", "events_url": "https://api.github.com/users/fpmchu/events{/privacy}", "received_events_url": "https://api.github.com/users/fpmchu/received_events", "type": "User", "site_admin": false}, "created_at": "2016-01-17T06:27:21Z", "updated_at": "2016-01-17T06:30:41Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=229914\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/keveman\">@keveman</a> After reading more, it seems like Thrust's scatter does not support repeated items.  <a href=\"https://thrust.github.io/doc/group__scattering.html\" rel=\"nofollow\">Thrust's doc</a> says:</p>\n<blockquote>\n<p>If the same index appears more than once in the range [map, map + (last - first)), the result is undefined</p>\n</blockquote>\n<p>Looking at <a href=\"https://github.com/thrust/thrust/blob/67bbec34a7fdb9186aea6c269870b517e42e4388/thrust/system/detail/generic/scatter.inl\">their CUDA code</a>, I don't think they do anything special to handle repeated indices either.</p>\n<p>Similarly, numpy also says the behavior is undefined.  From <a href=\"http://docs.scipy.org/doc/numpy/reference/arrays.indexing.html\" rel=\"nofollow\">numpys ndarray's doc</a></p>\n<blockquote>\n<p>For advanced assignments, there is in general no guarantee for the iteration order. This means that if an element is set more than once, it is not possible to predict the final result</p>\n</blockquote>\n<p>In fact, as written, <code>scatter_ops_test.py</code> would fail right now when repeated indices exist.  For example,</p>\n<pre><code>$ n = np.array([[1, 2], [3, 4], [5, 6]])\n$ n[np.array([1, 1])] += np.array([[10, 10], [20, 20]])\n$ print(n)\n[[ 1  2]\n [23 24]\n [ 5  6]]\n</code></pre>\n<p>Now of course, I agree this should be supported, if only because it's already written into the contract.  I just want to point it out since I would have to make some changes to the test as well.</p>", "body_text": "@keveman After reading more, it seems like Thrust's scatter does not support repeated items.  Thrust's doc says:\n\nIf the same index appears more than once in the range [map, map + (last - first)), the result is undefined\n\nLooking at their CUDA code, I don't think they do anything special to handle repeated indices either.\nSimilarly, numpy also says the behavior is undefined.  From numpys ndarray's doc\n\nFor advanced assignments, there is in general no guarantee for the iteration order. This means that if an element is set more than once, it is not possible to predict the final result\n\nIn fact, as written, scatter_ops_test.py would fail right now when repeated indices exist.  For example,\n$ n = np.array([[1, 2], [3, 4], [5, 6]])\n$ n[np.array([1, 1])] += np.array([[10, 10], [20, 20]])\n$ print(n)\n[[ 1  2]\n [23 24]\n [ 5  6]]\n\nNow of course, I agree this should be supported, if only because it's already written into the contract.  I just want to point it out since I would have to make some changes to the test as well.", "body": "@keveman After reading more, it seems like Thrust's scatter does not support repeated items.  [Thrust's doc](https://thrust.github.io/doc/group__scattering.html) says:\n\n> If the same index appears more than once in the range [map, map + (last - first)), the result is undefined\n\nLooking at [their CUDA code](https://github.com/thrust/thrust/blob/67bbec34a7fdb9186aea6c269870b517e42e4388/thrust/system/detail/generic/scatter.inl), I don't think they do anything special to handle repeated indices either.\n\nSimilarly, numpy also says the behavior is undefined.  From [numpys ndarray's doc](http://docs.scipy.org/doc/numpy/reference/arrays.indexing.html)\n\n> For advanced assignments, there is in general no guarantee for the iteration order. This means that if an element is set more than once, it is not possible to predict the final result\n\nIn fact, as written, `scatter_ops_test.py` would fail right now when repeated indices exist.  For example,\n\n```\n$ n = np.array([[1, 2], [3, 4], [5, 6]])\n$ n[np.array([1, 1])] += np.array([[10, 10], [20, 20]])\n$ print(n)\n[[ 1  2]\n [23 24]\n [ 5  6]]\n```\n\nNow of course, I agree this should be supported, if only because it's already written into the contract.  I just want to point it out since I would have to make some changes to the test as well.\n"}