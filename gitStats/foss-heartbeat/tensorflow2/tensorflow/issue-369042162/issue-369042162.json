{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22892", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22892/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22892/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22892/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/22892", "id": 369042162, "node_id": "MDU6SXNzdWUzNjkwNDIxNjI=", "number": 22892, "title": "How to parse the caffe-generated LMDB datasets with tf.LMDBReader", "user": {"login": "asjmasjm", "id": 3772297, "node_id": "MDQ6VXNlcjM3NzIyOTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/3772297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asjmasjm", "html_url": "https://github.com/asjmasjm", "followers_url": "https://api.github.com/users/asjmasjm/followers", "following_url": "https://api.github.com/users/asjmasjm/following{/other_user}", "gists_url": "https://api.github.com/users/asjmasjm/gists{/gist_id}", "starred_url": "https://api.github.com/users/asjmasjm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asjmasjm/subscriptions", "organizations_url": "https://api.github.com/users/asjmasjm/orgs", "repos_url": "https://api.github.com/users/asjmasjm/repos", "events_url": "https://api.github.com/users/asjmasjm/events{/privacy}", "received_events_url": "https://api.github.com/users/asjmasjm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "harshini-gadige", "id": 42781361, "node_id": "MDQ6VXNlcjQyNzgxMzYx", "avatar_url": "https://avatars1.githubusercontent.com/u/42781361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harshini-gadige", "html_url": "https://github.com/harshini-gadige", "followers_url": "https://api.github.com/users/harshini-gadige/followers", "following_url": "https://api.github.com/users/harshini-gadige/following{/other_user}", "gists_url": "https://api.github.com/users/harshini-gadige/gists{/gist_id}", "starred_url": "https://api.github.com/users/harshini-gadige/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harshini-gadige/subscriptions", "organizations_url": "https://api.github.com/users/harshini-gadige/orgs", "repos_url": "https://api.github.com/users/harshini-gadige/repos", "events_url": "https://api.github.com/users/harshini-gadige/events{/privacy}", "received_events_url": "https://api.github.com/users/harshini-gadige/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "harshini-gadige", "id": 42781361, "node_id": "MDQ6VXNlcjQyNzgxMzYx", "avatar_url": "https://avatars1.githubusercontent.com/u/42781361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harshini-gadige", "html_url": "https://github.com/harshini-gadige", "followers_url": "https://api.github.com/users/harshini-gadige/followers", "following_url": "https://api.github.com/users/harshini-gadige/following{/other_user}", "gists_url": "https://api.github.com/users/harshini-gadige/gists{/gist_id}", "starred_url": "https://api.github.com/users/harshini-gadige/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harshini-gadige/subscriptions", "organizations_url": "https://api.github.com/users/harshini-gadige/orgs", "repos_url": "https://api.github.com/users/harshini-gadige/repos", "events_url": "https://api.github.com/users/harshini-gadige/events{/privacy}", "received_events_url": "https://api.github.com/users/harshini-gadige/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-10-11T09:55:04Z", "updated_at": "2018-10-16T05:13:07Z", "closed_at": "2018-10-16T05:13:07Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:<br>\nYes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:<br>\nLinux Ubuntu 16.04</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>:<br>\nPC</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:<br>\nBinary</li>\n<li><strong>TensorFlow version (use command below)</strong>:<br>\n1.9.0</li>\n<li><strong>Python version</strong>:<br>\n2.7.15</li>\n<li><strong>Bazel version (if compiling from source)</strong>:<br>\nNot compiled from source</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:<br>\nNot compiled from source</li>\n<li><strong>CUDA/cuDNN version</strong>:<br>\nCUDA 9.0</li>\n<li><strong>GPU model and memory</strong>:<br>\nGTX 1060 6G</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>After importation through the tf.LMDBReader(), we are able to get the key and value of the .mdb. But we cannot further parse the value through the tf.parse_single_example API as no sub-keys like \"image_raw\" or \"label\" existed in the Caffe-generated .mdb dataset. As in Caffe, the properties of the image or the label data are available with this data block converted to Caffe-defined Datum structure and we can get the width through methods like Datum.width(). So what we should do in tensorflow?</p>\n<h3>Source code / logs</h3>\n<p>filename_queue = tf.train.string_input_producer(['path_to_the_data.mdb'], num_epochs=None)<br>\nreader = tf.LMDBReader()<br>\ncur_key_val, serialized_example = reader.read(filename_queue)<br>\nfeatures = tf.parse_single_example(<br>\nserialized_example,<br>\nfeatures={<br>\n'?????': tf.VarLenFeature(tf.string),<br>\n'?????': tf.VarLenFeature(tf.string)<br>\n})<br>\nlabel = features['?????']<br>\nimage = features['?????']</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nYes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nLinux Ubuntu 16.04\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:\nPC\nTensorFlow installed from (source or binary):\nBinary\nTensorFlow version (use command below):\n1.9.0\nPython version:\n2.7.15\nBazel version (if compiling from source):\nNot compiled from source\nGCC/Compiler version (if compiling from source):\nNot compiled from source\nCUDA/cuDNN version:\nCUDA 9.0\nGPU model and memory:\nGTX 1060 6G\n\nDescribe the problem\nAfter importation through the tf.LMDBReader(), we are able to get the key and value of the .mdb. But we cannot further parse the value through the tf.parse_single_example API as no sub-keys like \"image_raw\" or \"label\" existed in the Caffe-generated .mdb dataset. As in Caffe, the properties of the image or the label data are available with this data block converted to Caffe-defined Datum structure and we can get the width through methods like Datum.width(). So what we should do in tensorflow?\nSource code / logs\nfilename_queue = tf.train.string_input_producer(['path_to_the_data.mdb'], num_epochs=None)\nreader = tf.LMDBReader()\ncur_key_val, serialized_example = reader.read(filename_queue)\nfeatures = tf.parse_single_example(\nserialized_example,\nfeatures={\n'?????': tf.VarLenFeature(tf.string),\n'?????': tf.VarLenFeature(tf.string)\n})\nlabel = features['?????']\nimage = features['?????']", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nYes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nLinux Ubuntu 16.04\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**:\r\nPC\r\n- **TensorFlow installed from (source or binary)**:\r\nBinary\r\n- **TensorFlow version (use command below)**:\r\n1.9.0\r\n- **Python version**:\r\n2.7.15\r\n- **Bazel version (if compiling from source)**:\r\nNot compiled from source\r\n- **GCC/Compiler version (if compiling from source)**:\r\nNot compiled from source\r\n- **CUDA/cuDNN version**:\r\nCUDA 9.0\r\n- **GPU model and memory**:\r\nGTX 1060 6G\r\n\r\n### Describe the problem\r\nAfter importation through the tf.LMDBReader(), we are able to get the key and value of the .mdb. But we cannot further parse the value through the tf.parse_single_example API as no sub-keys like \"image_raw\" or \"label\" existed in the Caffe-generated .mdb dataset. As in Caffe, the properties of the image or the label data are available with this data block converted to Caffe-defined Datum structure and we can get the width through methods like Datum.width(). So what we should do in tensorflow?\r\n\r\n### Source code / logs\r\nfilename_queue = tf.train.string_input_producer(['path_to_the_data.mdb'], num_epochs=None)\r\nreader = tf.LMDBReader()\r\ncur_key_val, serialized_example = reader.read(filename_queue)\r\nfeatures = tf.parse_single_example(\r\n        serialized_example,\r\n        features={\r\n             '?????': tf.VarLenFeature(tf.string),\r\n             '?????': tf.VarLenFeature(tf.string)\r\n         })\r\nlabel = features['?????']\r\nimage = features['?????']"}