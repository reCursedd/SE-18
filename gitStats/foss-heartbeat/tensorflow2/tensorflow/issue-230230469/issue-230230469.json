{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10080", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10080/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10080/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10080/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/10080", "id": 230230469, "node_id": "MDU6SXNzdWUyMzAyMzA0Njk=", "number": 10080, "title": "compilation errors due to missing op classes when using selective registration (cmake windows build)", "user": {"login": "adennie", "id": 1521215, "node_id": "MDQ6VXNlcjE1MjEyMTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1521215?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adennie", "html_url": "https://github.com/adennie", "followers_url": "https://api.github.com/users/adennie/followers", "following_url": "https://api.github.com/users/adennie/following{/other_user}", "gists_url": "https://api.github.com/users/adennie/gists{/gist_id}", "starred_url": "https://api.github.com/users/adennie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adennie/subscriptions", "organizations_url": "https://api.github.com/users/adennie/orgs", "repos_url": "https://api.github.com/users/adennie/repos", "events_url": "https://api.github.com/users/adennie/events{/privacy}", "received_events_url": "https://api.github.com/users/adennie/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-21T16:07:19Z", "updated_at": "2017-05-21T16:26:08Z", "closed_at": null, "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:<br>\nNO.</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:<br>\nWindows 7</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:<br>\nFrom source</li>\n<li><strong>TensorFlow version (use command below)</strong>:<br>\ncommit 280374</li>\n<li><strong>Bazel version (if compiling from source)</strong>:<br>\nn/a, using cmake build</li>\n<li><strong>CUDA/cuDNN version</strong>:<br>\nn/a</li>\n<li><strong>GPU model and memory</strong>:<br>\nn/a</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<p>cmake .. -A x64 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INCLUDE_CURRENT_DIR:BOOL=ON -DCMAKE_CXX_FLAGS=-DSELECTIVE_REGISTRATION -Dtensorflow_WIN_CPU_SIMD_OPTIONS=/arch:AVX -Dtensorflow_BUILD_PYTHON_BINDINGS:BOOL=OFF -Dtensorflow_BUILD_CONTRIB_KERNELS:BOOL=OFF -Dtensorflow_BUILD_SHARED_LIB:BOOL=ON</p>\n<p>MSBuild /p:Configuration=Release tensorflow.vcxproj</p>\n<h3>Describe the problem</h3>\n<p>I'm building with cmake on Windows, using selective registration.  I've put ops_to_register.h in my build dir and specified -DCMAKE_INCLUDE_CURRENT_DIR=ON in my cmake command so that it would be added to the include path.</p>\n<p>Due (I'm assuming) to selective registration, the generated code omits many classes which would otherwise be generated in a full build.</p>\n<p>When compiling non-generated code, e.g. tensorflow\\cc\\gradients\\array_grad.cc, there are compile errors wherever it references the classes that were not generated due to selective registration, for example:</p>\n<p>array_grad.cc(51): error C2653: 'Unstack': is not a class or namespace name [...omitted...\\tensorflow\\tensorflow\\contrib\\cmake\\build\\tf_cc.vcxproj]</p>\n<p>There are many of these errors for various referenced classes, in various other source files such as:<br>\ntensorflow\\cc\\gradients\\math_grad.cc<br>\ntensorflow\\cc\\gradients\\nn_grad.cc<br>\ntensorflow\\cc\\framework\\gradients.cc</p>\n<p>When using selective registration, what's the right approach to avoid these errors?</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nNO.\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nWindows 7\nTensorFlow installed from (source or binary):\nFrom source\nTensorFlow version (use command below):\ncommit 280374\nBazel version (if compiling from source):\nn/a, using cmake build\nCUDA/cuDNN version:\nn/a\nGPU model and memory:\nn/a\nExact command to reproduce:\n\ncmake .. -A x64 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INCLUDE_CURRENT_DIR:BOOL=ON -DCMAKE_CXX_FLAGS=-DSELECTIVE_REGISTRATION -Dtensorflow_WIN_CPU_SIMD_OPTIONS=/arch:AVX -Dtensorflow_BUILD_PYTHON_BINDINGS:BOOL=OFF -Dtensorflow_BUILD_CONTRIB_KERNELS:BOOL=OFF -Dtensorflow_BUILD_SHARED_LIB:BOOL=ON\nMSBuild /p:Configuration=Release tensorflow.vcxproj\nDescribe the problem\nI'm building with cmake on Windows, using selective registration.  I've put ops_to_register.h in my build dir and specified -DCMAKE_INCLUDE_CURRENT_DIR=ON in my cmake command so that it would be added to the include path.\nDue (I'm assuming) to selective registration, the generated code omits many classes which would otherwise be generated in a full build.\nWhen compiling non-generated code, e.g. tensorflow\\cc\\gradients\\array_grad.cc, there are compile errors wherever it references the classes that were not generated due to selective registration, for example:\narray_grad.cc(51): error C2653: 'Unstack': is not a class or namespace name [...omitted...\\tensorflow\\tensorflow\\contrib\\cmake\\build\\tf_cc.vcxproj]\nThere are many of these errors for various referenced classes, in various other source files such as:\ntensorflow\\cc\\gradients\\math_grad.cc\ntensorflow\\cc\\gradients\\nn_grad.cc\ntensorflow\\cc\\framework\\gradients.cc\nWhen using selective registration, what's the right approach to avoid these errors?", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nNO.\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nWindows 7\r\n- **TensorFlow installed from (source or binary)**:\r\nFrom source\r\n- **TensorFlow version (use command below)**:\r\ncommit 280374\r\n- **Bazel version (if compiling from source)**:\r\nn/a, using cmake build\r\n- **CUDA/cuDNN version**:\r\nn/a\r\n- **GPU model and memory**:\r\nn/a\r\n- **Exact command to reproduce**:\r\n\r\ncmake .. -A x64 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INCLUDE_CURRENT_DIR:BOOL=ON -DCMAKE_CXX_FLAGS=-DSELECTIVE_REGISTRATION -Dtensorflow_WIN_CPU_SIMD_OPTIONS=/arch:AVX -Dtensorflow_BUILD_PYTHON_BINDINGS:BOOL=OFF -Dtensorflow_BUILD_CONTRIB_KERNELS:BOOL=OFF -Dtensorflow_BUILD_SHARED_LIB:BOOL=ON \r\n\r\nMSBuild /p:Configuration=Release tensorflow.vcxproj\r\n\r\n### Describe the problem\r\n\r\nI'm building with cmake on Windows, using selective registration.  I've put ops_to_register.h in my build dir and specified -DCMAKE_INCLUDE_CURRENT_DIR=ON in my cmake command so that it would be added to the include path.\r\n\r\nDue (I'm assuming) to selective registration, the generated code omits many classes which would otherwise be generated in a full build.\r\n\r\nWhen compiling non-generated code, e.g. tensorflow\\cc\\gradients\\array_grad.cc, there are compile errors wherever it references the classes that were not generated due to selective registration, for example:\r\n\r\narray_grad.cc(51): error C2653: 'Unstack': is not a class or namespace name [...omitted...\\tensorflow\\tensorflow\\contrib\\cmake\\build\\tf_cc.vcxproj]\r\n\r\nThere are many of these errors for various referenced classes, in various other source files such as:\r\ntensorflow\\cc\\gradients\\math_grad.cc\r\ntensorflow\\cc\\gradients\\nn_grad.cc\r\ntensorflow\\cc\\framework\\gradients.cc\r\n\r\nWhen using selective registration, what's the right approach to avoid these errors?\r\n"}