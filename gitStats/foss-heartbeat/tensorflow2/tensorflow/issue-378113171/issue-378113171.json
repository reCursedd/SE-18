{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23572", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23572/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23572/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23572/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/23572", "id": 378113171, "node_id": "MDU6SXNzdWUzNzgxMTMxNzE=", "number": 23572, "title": "How to reuse kernel weight with tf.keras.layers.Conv2D", "user": {"login": "ymcasky", "id": 6229000, "node_id": "MDQ6VXNlcjYyMjkwMDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/6229000?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ymcasky", "html_url": "https://github.com/ymcasky", "followers_url": "https://api.github.com/users/ymcasky/followers", "following_url": "https://api.github.com/users/ymcasky/following{/other_user}", "gists_url": "https://api.github.com/users/ymcasky/gists{/gist_id}", "starred_url": "https://api.github.com/users/ymcasky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ymcasky/subscriptions", "organizations_url": "https://api.github.com/users/ymcasky/orgs", "repos_url": "https://api.github.com/users/ymcasky/repos", "events_url": "https://api.github.com/users/ymcasky/events{/privacy}", "received_events_url": "https://api.github.com/users/ymcasky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-07T02:12:12Z", "updated_at": "2018-11-07T02:48:36Z", "closed_at": "2018-11-07T02:48:36Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Y</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: win10</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: conda</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.11.0</li>\n<li><strong>Python version</strong>: 3.5</li>\n<li><strong>CUDA/cuDNN version</strong>: 9.0/7.0</li>\n<li><strong>GPU model and memory</strong>: Titan XP, 12G</li>\n</ul>\n<p>I want to reuse kernel weight in keras with tensorflow backend.</p>\n<p>My code is as following :</p>\n<pre><code>from tensorflow.python.keras.layers import  Input\nfrom tensorflow.python.keras import regularizers\ndef infer3(data_input, Reuse):\n    with tf.variable_scope('Network', reuse=Reuse):\n        inputs = Input(tensor = data_input)\n        network = tf.keras.layers.Conv2D(kernel_size=3, strides=2, filters=64, padding='same',kernel_regularizer=regularizers.l2(1),\n                    activation='linear', kernel_initializer=\"glorot_normal\", name='conv1', bias_initializer='zeros')(inputs)\n\n    return network\n\ntf.reset_default_graph() \ninput_tensor = tf.placeholder(tf.float32,shape=[BATCH_SIZE,img_H,img_W,1])\noutput_tensor = tf.placeholder(tf.float32,shape=[BATCH_SIZE,img_H,img_W,1]) \nin_training_mode = tf.placeholder(tf.bool)     \n\n\nnetwork = infer3(input_tensor,False)\nnetwork_test = infer3(input_tensor,True)\n</code></pre>\n<p>When I type \" tf.trainable_variables() \"</p>\n<p>It show message:</p>\n<pre><code>[&lt;tf.Variable 'Network/conv1/kernel:0' shape=(3, 3, 1, 64) dtype=float32&gt;,\n &lt;tf.Variable 'Network/conv1/bias:0' shape=(64,) dtype=float32&gt;,\n &lt;tf.Variable 'Network_1/conv1/kernel:0' shape=(3, 3, 1, 64) dtype=float32&gt;,\n &lt;tf.Variable 'Network_1/conv1/bias:0' shape=(64,) dtype=float32&gt;]\n</code></pre>\n<p>How can I reuse kernel weight?</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Y\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): win10\nTensorFlow installed from (source or binary): conda\nTensorFlow version (use command below): 1.11.0\nPython version: 3.5\nCUDA/cuDNN version: 9.0/7.0\nGPU model and memory: Titan XP, 12G\n\nI want to reuse kernel weight in keras with tensorflow backend.\nMy code is as following :\nfrom tensorflow.python.keras.layers import  Input\nfrom tensorflow.python.keras import regularizers\ndef infer3(data_input, Reuse):\n    with tf.variable_scope('Network', reuse=Reuse):\n        inputs = Input(tensor = data_input)\n        network = tf.keras.layers.Conv2D(kernel_size=3, strides=2, filters=64, padding='same',kernel_regularizer=regularizers.l2(1),\n                    activation='linear', kernel_initializer=\"glorot_normal\", name='conv1', bias_initializer='zeros')(inputs)\n\n    return network\n\ntf.reset_default_graph() \ninput_tensor = tf.placeholder(tf.float32,shape=[BATCH_SIZE,img_H,img_W,1])\noutput_tensor = tf.placeholder(tf.float32,shape=[BATCH_SIZE,img_H,img_W,1]) \nin_training_mode = tf.placeholder(tf.bool)     \n\n\nnetwork = infer3(input_tensor,False)\nnetwork_test = infer3(input_tensor,True)\n\nWhen I type \" tf.trainable_variables() \"\nIt show message:\n[<tf.Variable 'Network/conv1/kernel:0' shape=(3, 3, 1, 64) dtype=float32>,\n <tf.Variable 'Network/conv1/bias:0' shape=(64,) dtype=float32>,\n <tf.Variable 'Network_1/conv1/kernel:0' shape=(3, 3, 1, 64) dtype=float32>,\n <tf.Variable 'Network_1/conv1/bias:0' shape=(64,) dtype=float32>]\n\nHow can I reuse kernel weight?", "body": "\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Y\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: win10\r\n- **TensorFlow installed from (source or binary)**: conda\r\n- **TensorFlow version (use command below)**: 1.11.0\r\n- **Python version**: 3.5\r\n- **CUDA/cuDNN version**: 9.0/7.0\r\n- **GPU model and memory**: Titan XP, 12G\r\n\r\nI want to reuse kernel weight in keras with tensorflow backend.\r\n\r\nMy code is as following :\r\n\r\n```\r\nfrom tensorflow.python.keras.layers import  Input\r\nfrom tensorflow.python.keras import regularizers\r\ndef infer3(data_input, Reuse):\r\n    with tf.variable_scope('Network', reuse=Reuse):\r\n        inputs = Input(tensor = data_input)\r\n        network = tf.keras.layers.Conv2D(kernel_size=3, strides=2, filters=64, padding='same',kernel_regularizer=regularizers.l2(1),\r\n                    activation='linear', kernel_initializer=\"glorot_normal\", name='conv1', bias_initializer='zeros')(inputs)\r\n\r\n    return network\r\n\r\ntf.reset_default_graph() \r\ninput_tensor = tf.placeholder(tf.float32,shape=[BATCH_SIZE,img_H,img_W,1])\r\noutput_tensor = tf.placeholder(tf.float32,shape=[BATCH_SIZE,img_H,img_W,1]) \r\nin_training_mode = tf.placeholder(tf.bool)     \r\n\r\n\r\nnetwork = infer3(input_tensor,False)\r\nnetwork_test = infer3(input_tensor,True)\r\n```\r\n\r\nWhen I type \" tf.trainable_variables() \"\r\n\r\nIt show message:\r\n\r\n```\r\n[<tf.Variable 'Network/conv1/kernel:0' shape=(3, 3, 1, 64) dtype=float32>,\r\n <tf.Variable 'Network/conv1/bias:0' shape=(64,) dtype=float32>,\r\n <tf.Variable 'Network_1/conv1/kernel:0' shape=(3, 3, 1, 64) dtype=float32>,\r\n <tf.Variable 'Network_1/conv1/bias:0' shape=(64,) dtype=float32>]\r\n```\r\nHow can I reuse kernel weight?"}