{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2165", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2165/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2165/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2165/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/2165", "id": 151801635, "node_id": "MDU6SXNzdWUxNTE4MDE2MzU=", "number": 2165, "title": "Convolution for 1D", "user": {"login": "RobRomijnders", "id": 16174021, "node_id": "MDQ6VXNlcjE2MTc0MDIx", "avatar_url": "https://avatars2.githubusercontent.com/u/16174021?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RobRomijnders", "html_url": "https://github.com/RobRomijnders", "followers_url": "https://api.github.com/users/RobRomijnders/followers", "following_url": "https://api.github.com/users/RobRomijnders/following{/other_user}", "gists_url": "https://api.github.com/users/RobRomijnders/gists{/gist_id}", "starred_url": "https://api.github.com/users/RobRomijnders/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RobRomijnders/subscriptions", "organizations_url": "https://api.github.com/users/RobRomijnders/orgs", "repos_url": "https://api.github.com/users/RobRomijnders/repos", "events_url": "https://api.github.com/users/RobRomijnders/events{/privacy}", "received_events_url": "https://api.github.com/users/RobRomijnders/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-04-29T06:31:26Z", "updated_at": "2016-08-09T16:28:34Z", "closed_at": "2016-04-29T15:59:13Z", "author_association": "NONE", "body_html": "<p>Dear community,</p>\n<p>Do you know of any implementation for 1 dimensional convolution in TensorFlow?</p>\n<p>For the moment, I circumvented this by using conv2d with a filter of 5x1. This works good and I was able to surpass state-of-the-art performances on some datasets. However, this short-term 'hack' doesn't allow for longer strides. With a 5x1 filter, I cannot make strides of 2. Tensorflow will raise error that 'stride must be less than or equal to filter size'</p>\n<p>Do you know of any 1D implementation for tf.nn.conv2d?<br>\nIf not, how can I recommend this to the developing team of TensorFlow? A 1D conv would make TensorFlow useful to the world of time-series classification, which is a plus for TensorFlow as well</p>\n<p>Thank you in advance!</p>\n<p>Rob</p>", "body_text": "Dear community,\nDo you know of any implementation for 1 dimensional convolution in TensorFlow?\nFor the moment, I circumvented this by using conv2d with a filter of 5x1. This works good and I was able to surpass state-of-the-art performances on some datasets. However, this short-term 'hack' doesn't allow for longer strides. With a 5x1 filter, I cannot make strides of 2. Tensorflow will raise error that 'stride must be less than or equal to filter size'\nDo you know of any 1D implementation for tf.nn.conv2d?\nIf not, how can I recommend this to the developing team of TensorFlow? A 1D conv would make TensorFlow useful to the world of time-series classification, which is a plus for TensorFlow as well\nThank you in advance!\nRob", "body": "Dear community,\n\nDo you know of any implementation for 1 dimensional convolution in TensorFlow?\n\nFor the moment, I circumvented this by using conv2d with a filter of 5x1. This works good and I was able to surpass state-of-the-art performances on some datasets. However, this short-term 'hack' doesn't allow for longer strides. With a 5x1 filter, I cannot make strides of 2. Tensorflow will raise error that 'stride must be less than or equal to filter size'\n\nDo you know of any 1D implementation for tf.nn.conv2d?\nIf not, how can I recommend this to the developing team of TensorFlow? A 1D conv would make TensorFlow useful to the world of time-series classification, which is a plus for TensorFlow as well\n\nThank you in advance!\n\nRob\n"}