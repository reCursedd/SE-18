{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/211129029", "pull_request_review_id": 147485047, "id": 211129029, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTEyOTAyOQ==", "diff_hunk": "@@ -772,33 +775,54 @@ std::pair<int, tensorflow::Allocator*> GetDeviceAndAllocator(\n     const ConversionParams& params, const EngineInfo& engine) {\n   int cuda_device_id = -1;\n   tensorflow::Allocator* dev_allocator = nullptr;\n-  if (params.cluster) {\n-    std::vector<tensorflow::Device*> devices;\n-    if (!engine.device.empty() && params.cluster->GetDeviceSet()) {\n-      DeviceNameUtils::ParsedName parsed_name;\n-      if (DeviceNameUtils::ParseFullName(engine.device, &parsed_name) &&\n-          parsed_name.has_id) {\n-        params.cluster->GetDeviceSet()->FindMatchingDevices(parsed_name,\n-                                                            &devices);\n+  if (params.cluster == nullptr || params.cluster->GetDeviceSet() == nullptr ||\n+      engine.device.empty()) {\n+    // If device is not set, use the first found GPU device for the conversion.\n+    for (int tf_gpu_id_value = 0; tf_gpu_id_value < 100; ++tf_gpu_id_value) {", "path": "tensorflow/contrib/tensorrt/convert/convert_graph.cc", "position": 25, "original_position": 25, "commit_id": "4684421d9aa3e63dc943074025ffdc89df1a1980", "original_commit_id": "0b31ebb51bcdd4b0675d3f2166f316d0f22266b3", "user": {"login": "pooyadavoodi", "id": 7076961, "node_id": "MDQ6VXNlcjcwNzY5NjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/7076961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pooyadavoodi", "html_url": "https://github.com/pooyadavoodi", "followers_url": "https://api.github.com/users/pooyadavoodi/followers", "following_url": "https://api.github.com/users/pooyadavoodi/following{/other_user}", "gists_url": "https://api.github.com/users/pooyadavoodi/gists{/gist_id}", "starred_url": "https://api.github.com/users/pooyadavoodi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pooyadavoodi/subscriptions", "organizations_url": "https://api.github.com/users/pooyadavoodi/orgs", "repos_url": "https://api.github.com/users/pooyadavoodi/repos", "events_url": "https://api.github.com/users/pooyadavoodi/events{/privacy}", "received_events_url": "https://api.github.com/users/pooyadavoodi/received_events", "type": "User", "site_admin": false}, "body": "The max is hard coded to 100.\r\nHow would this work in a virtual environment (e.g. with kubernetes) where a single GPU can be shared by possibly more than 100 users?", "created_at": "2018-08-20T02:31:34Z", "updated_at": "2018-08-20T23:04:26Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/21508#discussion_r211129029", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21508", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/211129029"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/21508#discussion_r211129029"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21508"}}, "body_html": "<p>The max is hard coded to 100.<br>\nHow would this work in a virtual environment (e.g. with kubernetes) where a single GPU can be shared by possibly more than 100 users?</p>", "body_text": "The max is hard coded to 100.\nHow would this work in a virtual environment (e.g. with kubernetes) where a single GPU can be shared by possibly more than 100 users?"}