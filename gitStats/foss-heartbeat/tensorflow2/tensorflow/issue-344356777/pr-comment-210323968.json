{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/210323968", "pull_request_review_id": 146514285, "id": 210323968, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDMyMzk2OA==", "diff_hunk": "@@ -0,0 +1,96 @@\n+licenses([\"notice\"])  # 3-Clause BSD\n+\n+exports_files([\"license.txt\"])\n+\n+filegroup(\n+    name = \"LICENSE\",\n+    srcs = [\n+        \"license.txt\",\n+    ],\n+    visibility = [\"//visibility:public\"],\n+)\n+\n+load(\n+    \"@org_tensorflow//tensorflow:tensorflow.bzl\",\n+    \"tf_cc_test\"\n+)\n+\n+cc_library(\n+    name = \"ngraph_libs_linux\",\n+    srcs = [\n+        \"lib/libiomp5.so\",\n+        \"lib/libmklml_intel.so\",\n+    ],\n+    visibility = [\"//visibility:public\"],\n+)\n+\n+cc_library(", "path": "third_party/ngraph/ngraph_tf.BUILD", "position": 27, "original_position": 27, "commit_id": "bc6be507c71046dfc889a90e3949a903d5d1e6eb", "original_commit_id": "9523a98466d16cf01fc76a67b489f1124cf626ac", "user": {"login": "aaroey", "id": 31743510, "node_id": "MDQ6VXNlcjMxNzQzNTEw", "avatar_url": "https://avatars0.githubusercontent.com/u/31743510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaroey", "html_url": "https://github.com/aaroey", "followers_url": "https://api.github.com/users/aaroey/followers", "following_url": "https://api.github.com/users/aaroey/following{/other_user}", "gists_url": "https://api.github.com/users/aaroey/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaroey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaroey/subscriptions", "organizations_url": "https://api.github.com/users/aaroey/orgs", "repos_url": "https://api.github.com/users/aaroey/repos", "events_url": "https://api.github.com/users/aaroey/events{/privacy}", "received_events_url": "https://api.github.com/users/aaroey/received_events", "type": "User", "site_admin": false}, "body": "Thanks @avijit-nervana for the explanation and @gunan for the suggestions. I also tested the approach about `cc_binary` with `linkshared=1`, and it turns out it's not working since `cc_binary` is not expected in `tf_py_wrap_cc`, and we'll need to implement what @gunan says when the mechanism is ready.\r\n\r\nAt this moment, since the mechanism mentioned is not fully implemented/tested yet, I think we can keep the current approach and do the migration later which will make things easier and less error-prone.", "created_at": "2018-08-15T16:18:10Z", "updated_at": "2018-08-16T00:00:51Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/21122#discussion_r210323968", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21122", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/210323968"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/21122#discussion_r210323968"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21122"}}, "body_html": "<p>Thanks <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=30507445\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/avijit-nervana\">@avijit-nervana</a> for the explanation and <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=7946809\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/gunan\">@gunan</a> for the suggestions. I also tested the approach about <code>cc_binary</code> with <code>linkshared=1</code>, and it turns out it's not working since <code>cc_binary</code> is not expected in <code>tf_py_wrap_cc</code>, and we'll need to implement what <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=7946809\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/gunan\">@gunan</a> says when the mechanism is ready.</p>\n<p>At this moment, since the mechanism mentioned is not fully implemented/tested yet, I think we can keep the current approach and do the migration later which will make things easier and less error-prone.</p>", "body_text": "Thanks @avijit-nervana for the explanation and @gunan for the suggestions. I also tested the approach about cc_binary with linkshared=1, and it turns out it's not working since cc_binary is not expected in tf_py_wrap_cc, and we'll need to implement what @gunan says when the mechanism is ready.\nAt this moment, since the mechanism mentioned is not fully implemented/tested yet, I think we can keep the current approach and do the migration later which will make things easier and less error-prone.", "in_reply_to_id": 209491686}