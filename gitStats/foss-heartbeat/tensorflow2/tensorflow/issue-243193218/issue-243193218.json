{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11520", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11520/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11520/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11520/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/11520", "id": 243193218, "node_id": "MDExOlB1bGxSZXF1ZXN0MTMwNzI1ODk5", "number": 11520, "title": "Show usage when no arguments passed to import_pb_to_tensorboard.py", "user": {"login": "daj", "id": 739125, "node_id": "MDQ6VXNlcjczOTEyNQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/739125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daj", "html_url": "https://github.com/daj", "followers_url": "https://api.github.com/users/daj/followers", "following_url": "https://api.github.com/users/daj/following{/other_user}", "gists_url": "https://api.github.com/users/daj/gists{/gist_id}", "starred_url": "https://api.github.com/users/daj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daj/subscriptions", "organizations_url": "https://api.github.com/users/daj/orgs", "repos_url": "https://api.github.com/users/daj/repos", "events_url": "https://api.github.com/users/daj/events{/privacy}", "received_events_url": "https://api.github.com/users/daj/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390482148, "node_id": "MDU6TGFiZWwzOTA0ODIxNDg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/awaiting%20review", "name": "awaiting review", "color": "fef2c0", "default": false}, {"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "petewarden", "id": 161459, "node_id": "MDQ6VXNlcjE2MTQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/161459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petewarden", "html_url": "https://github.com/petewarden", "followers_url": "https://api.github.com/users/petewarden/followers", "following_url": "https://api.github.com/users/petewarden/following{/other_user}", "gists_url": "https://api.github.com/users/petewarden/gists{/gist_id}", "starred_url": "https://api.github.com/users/petewarden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petewarden/subscriptions", "organizations_url": "https://api.github.com/users/petewarden/orgs", "repos_url": "https://api.github.com/users/petewarden/repos", "events_url": "https://api.github.com/users/petewarden/events{/privacy}", "received_events_url": "https://api.github.com/users/petewarden/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "petewarden", "id": 161459, "node_id": "MDQ6VXNlcjE2MTQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/161459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petewarden", "html_url": "https://github.com/petewarden", "followers_url": "https://api.github.com/users/petewarden/followers", "following_url": "https://api.github.com/users/petewarden/following{/other_user}", "gists_url": "https://api.github.com/users/petewarden/gists{/gist_id}", "starred_url": "https://api.github.com/users/petewarden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petewarden/subscriptions", "organizations_url": "https://api.github.com/users/petewarden/orgs", "repos_url": "https://api.github.com/users/petewarden/repos", "events_url": "https://api.github.com/users/petewarden/events{/privacy}", "received_events_url": "https://api.github.com/users/petewarden/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2017-07-15T18:53:28Z", "updated_at": "2017-07-18T22:17:17Z", "closed_at": "2017-07-18T22:17:17Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11520", "html_url": "https://github.com/tensorflow/tensorflow/pull/11520", "diff_url": "https://github.com/tensorflow/tensorflow/pull/11520.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/11520.patch"}, "body_html": "<p>It seems like <code>--model_dir</code> and <code>--log_dir</code> should be required arguments.  After adding at least one required argument, then <code>parseargs</code> handles no arguments cleanly.</p>\n<p>TESTING</p>\n<p>Running it before the fix:</p>\n<pre><code>$ python import_pb_to_tensorboard.py \nTraceback (most recent call last):\n  File \"import_pb_to_tensorboard.py\", line 74, in &lt;module&gt;\n    app.run(main=main, argv=[sys.argv[0]] + unparsed)\nTypeError: run() got an unexpected keyword argument 'argv'\n</code></pre>\n<p>Running it after the fix:</p>\n<pre><code>$ python import_pb_to_tensorboard.py \nusage: import_pb_to_tensorboard.py [-h] --model_dir MODEL_DIR --log_dir\n                                   LOG_DIR\nimport_pb_to_tensorboard.py: error: argument --model_dir is required\n</code></pre>\n<p>I was unable to test the success path due to this issue: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"243192391\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/11519\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/11519/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/11519\">#11519</a></p>\n<p>Testing done on Mac OSX Sierra 10.12.5 using Python 2.7.6.</p>\n<p>ALTERNATIVE SUGGESTION</p>\n<p>Let me know if you prefer that no arguments are required.  If that is the case, I was considering this solution (from <a href=\"https://stackoverflow.com/a/29293080/112705\" rel=\"nofollow\">this Stackoverflow answer</a>):</p>\n<pre><code>  try:\n    app.run(main=main, argv=[sys.argv[0]] + unparsed)\n  except:\n    # Print the usage if the user provides no arguments\n    parser.print_help()\n    sys.exit(0)\n</code></pre>\n<p>OTHER THOUGHTS</p>\n<p>It seems like <code>model_dir</code> should maybe be renamed to <code>model_path</code> (assuming that it should link the file, not the directory which it is in)?</p>", "body_text": "It seems like --model_dir and --log_dir should be required arguments.  After adding at least one required argument, then parseargs handles no arguments cleanly.\nTESTING\nRunning it before the fix:\n$ python import_pb_to_tensorboard.py \nTraceback (most recent call last):\n  File \"import_pb_to_tensorboard.py\", line 74, in <module>\n    app.run(main=main, argv=[sys.argv[0]] + unparsed)\nTypeError: run() got an unexpected keyword argument 'argv'\n\nRunning it after the fix:\n$ python import_pb_to_tensorboard.py \nusage: import_pb_to_tensorboard.py [-h] --model_dir MODEL_DIR --log_dir\n                                   LOG_DIR\nimport_pb_to_tensorboard.py: error: argument --model_dir is required\n\nI was unable to test the success path due to this issue: #11519\nTesting done on Mac OSX Sierra 10.12.5 using Python 2.7.6.\nALTERNATIVE SUGGESTION\nLet me know if you prefer that no arguments are required.  If that is the case, I was considering this solution (from this Stackoverflow answer):\n  try:\n    app.run(main=main, argv=[sys.argv[0]] + unparsed)\n  except:\n    # Print the usage if the user provides no arguments\n    parser.print_help()\n    sys.exit(0)\n\nOTHER THOUGHTS\nIt seems like model_dir should maybe be renamed to model_path (assuming that it should link the file, not the directory which it is in)?", "body": "It seems like `--model_dir` and `--log_dir` should be required arguments.  After adding at least one required argument, then `parseargs` handles no arguments cleanly.\r\n\r\nTESTING\r\n\r\nRunning it before the fix:\r\n```\r\n$ python import_pb_to_tensorboard.py \r\nTraceback (most recent call last):\r\n  File \"import_pb_to_tensorboard.py\", line 74, in <module>\r\n    app.run(main=main, argv=[sys.argv[0]] + unparsed)\r\nTypeError: run() got an unexpected keyword argument 'argv'\r\n```\r\n\r\nRunning it after the fix:\r\n```\r\n$ python import_pb_to_tensorboard.py \r\nusage: import_pb_to_tensorboard.py [-h] --model_dir MODEL_DIR --log_dir\r\n                                   LOG_DIR\r\nimport_pb_to_tensorboard.py: error: argument --model_dir is required\r\n```\r\n\r\nI was unable to test the success path due to this issue: https://github.com/tensorflow/tensorflow/issues/11519\r\n\r\nTesting done on Mac OSX Sierra 10.12.5 using Python 2.7.6.\r\n\r\nALTERNATIVE SUGGESTION\r\n\r\nLet me know if you prefer that no arguments are required.  If that is the case, I was considering this solution (from [this Stackoverflow answer](https://stackoverflow.com/a/29293080/112705)):\r\n```\r\n  try:\r\n    app.run(main=main, argv=[sys.argv[0]] + unparsed)\r\n  except:\r\n    # Print the usage if the user provides no arguments\r\n    parser.print_help()\r\n    sys.exit(0)\r\n```\r\n\r\nOTHER THOUGHTS\r\n\r\nIt seems like `model_dir` should maybe be renamed to `model_path` (assuming that it should link the file, not the directory which it is in)?"}