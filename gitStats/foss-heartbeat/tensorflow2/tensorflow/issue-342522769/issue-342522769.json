{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20943", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20943/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20943/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20943/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/20943", "id": 342522769, "node_id": "MDExOlB1bGxSZXF1ZXN0MjAyNDA0Mzg3", "number": 20943, "title": "Update Eigen commit pointer to the commit that adds AMD GPU support in Eigen", "user": {"login": "deven-amd", "id": 36858332, "node_id": "MDQ6VXNlcjM2ODU4MzMy", "avatar_url": "https://avatars2.githubusercontent.com/u/36858332?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deven-amd", "html_url": "https://github.com/deven-amd", "followers_url": "https://api.github.com/users/deven-amd/followers", "following_url": "https://api.github.com/users/deven-amd/following{/other_user}", "gists_url": "https://api.github.com/users/deven-amd/gists{/gist_id}", "starred_url": "https://api.github.com/users/deven-amd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deven-amd/subscriptions", "organizations_url": "https://api.github.com/users/deven-amd/orgs", "repos_url": "https://api.github.com/users/deven-amd/repos", "events_url": "https://api.github.com/users/deven-amd/events{/privacy}", "received_events_url": "https://api.github.com/users/deven-amd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 300136613, "node_id": "MDU6TGFiZWwzMDAxMzY2MTM=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20no", "name": "cla: no", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-18T23:09:44Z", "updated_at": "2018-07-19T19:29:53Z", "closed_at": "2018-07-19T19:29:53Z", "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/20943", "html_url": "https://github.com/tensorflow/tensorflow/pull/20943", "diff_url": "https://github.com/tensorflow/tensorflow/pull/20943.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/20943.patch"}, "body_html": "<p>Updating the eigen commit pointer to the commit / PR that add the AMD GPU support in the Eigen codebase.</p>\n<p>The change in eigen renames some of the APIs from Cuda* to Gpu*.  This renaming requires corresponding updates in the Tensorflow code that uses those APIs. That is the reason for the changes in the Tensorflow code in this PR.</p>\n<p>There is commit (in the eigen codebase) which is chronologically between the commit currently pointed to by TF and the commit that this PR updates to, which will cause a compiler failure for the TF build.  That commit is<br>\n<a href=\"https://bitbucket.org/eigen/eigen/commits/4af74f577a4fc09dcfa202064e1291038d2046da?at=default\" rel=\"nofollow\">https://bitbucket.org/eigen/eigen/commits/4af74f577a4fc09dcfa202064e1291038d2046da?at=default</a></p>\n<p>The eigen patch file is required to workaround the compile failure introduced by that commit (it does so by essentially turning OFF the AVX vectorization functionality introduced by that commit). It is assumed that this compile failure will be fixed by code updates either on the TF side or eigen side, after which the eigen patch file will again not be needed</p>\n<p>There is already a bug  filled on Eigen for this compile failure</p>\n<p><a href=\"http://eigen.tuxfamily.org/bz/show_bug.cgi?id=1569\" rel=\"nofollow\">http://eigen.tuxfamily.org/bz/show_bug.cgi?id=1569</a></p>\n<p>The compile failure in question looks like</p>\n<pre><code>  (cd /root/.cache/bazel/_bazel_root/efb88f6336d9c4a18216fb94287b8d97/execroot/org_tensorflow &amp;&amp; \\\n  exec env - \\\n    LD_LIBRARY_PATH=/usr/local/cuda/extras/CUPTI/lib64:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 \\\n    PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin \\\n    PWD=/proc/self/cwd \\\n  external/local_config_cuda/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc -g0 '-march=haswell' -g0 -MD -MF bazel-out/host/bin/tensorflow/core/kernels/_objs/segment_reduction_ops/tensorflow/core/kernels/segment_reduction_ops.pic.d '-frandom-seed=bazel-out/\\\nhost/bin/tensorflow/core/kernels/_objs/segment_reduction_ops/tensorflow/core/kernels/segment_reduction_ops.pic.o' -DEIGEN_MPL2_ONLY '-DEIGEN_MAX_ALIGN_BYTES=64' -D__CLANG_SUPPORT_DYN_ANNOTATION__ -DTENSORFLOW_USE_JEMALLOC -DTENSORFLOW_USE_ABSL -DTF_USE_SNAPPY -iquot\\\ne . -iquote bazel-out/host/genfiles -iquote external/nsync -iquote bazel-out/host/genfiles/external/nsync -iquote external/bazel_tools -iquote bazel-out/host/genfiles/external/bazel_tools -iquote external/eigen_archive -iquote bazel-out/host/genfiles/external/eigen_\\\narchive -iquote external/local_config_sycl -iquote bazel-out/host/genfiles/external/local_config_sycl -iquote external/com_google_absl -iquote bazel-out/host/genfiles/external/com_google_absl -iquote external/jemalloc -iquote bazel-out/host/genfiles/external/jemallo\\\nc -iquote external/gif_archive -iquote bazel-out/host/genfiles/external/gif_archive -iquote external/jpeg -iquote bazel-out/host/genfiles/external/jpeg -iquote external/protobuf_archive -iquote bazel-out/host/genfiles/external/protobuf_archive -iquote external/com_g\\\nooglesource_code_re2 -iquote bazel-out/host/genfiles/external/com_googlesource_code_re2 -iquote external/farmhash_archive -iquote bazel-out/host/genfiles/external/farmhash_archive -iquote external/fft2d -iquote bazel-out/host/genfiles/external/fft2d -iquote external\\\n/highwayhash -iquote bazel-out/host/genfiles/external/highwayhash -iquote external/png_archive -iquote bazel-out/host/genfiles/external/png_archive -iquote external/zlib_archive -iquote bazel-out/host/genfiles/external/zlib_archive -iquote external/local_config_cuda\\\n -iquote bazel-out/host/genfiles/external/local_config_cuda -iquote external/double_conversion -iquote bazel-out/host/genfiles/external/double_conversion -isystem external/nsync/public -isystem bazel-out/host/genfiles/external/nsync/public -isystem external/bazel_to\\\nols/tools/cpp/gcc3 -isystem external/eigen_archive -isystem bazel-out/host/genfiles/external/eigen_archive -isystem external/jemalloc/include -isystem bazel-out/host/genfiles/external/jemalloc/include -isystem external/gif_archive/lib -isystem bazel-out/host/genfile\\\ns/external/gif_archive/lib -isystem external/protobuf_archive/src -isystem bazel-out/host/genfiles/external/protobuf_archive/src -isystem external/farmhash_archive/src -isystem bazel-out/host/genfiles/external/farmhash_archive/src -isystem external/png_archive -isys\\\ntem bazel-out/host/genfiles/external/png_archive -isystem external/zlib_archive -isystem bazel-out/host/genfiles/external/zlib_archive -isystem external/local_config_cuda/cuda -isystem bazel-out/host/genfiles/external/local_config_cuda/cuda -isystem external/local_c\\\nonfig_cuda/cuda/cuda/include -isystem bazel-out/host/genfiles/external/local_config_cuda/cuda/cuda/include -isystem external/local_config_cuda/cuda/cuda/include/crt -isystem bazel-out/host/genfiles/external/local_config_cuda/cuda/cuda/include/crt -isystem external/d\\\nouble_conversion -isystem bazel-out/host/genfiles/external/double_conversion '-std=c++11' -Wno-builtin-macro-redefined '-D__DATE__=\"redacted\"' '-D__TIMESTAMP__=\"redacted\"' '-D__TIME__=\"redacted\"' -fPIC -U_FORTIFY_SOURCE '-D_FORTIFY_SOURCE=1' -fstack-protector -Wall \\\n-fno-omit-frame-pointer -no-canonical-prefixes -DNDEBUG -g0 -O2 -ffunction-sections -fdata-sections -DEIGEN_AVOID_STL_ARRAY -Iexternal/gemmlowp -Wno-sign-compare -fno-exceptions '-ftemplate-depth=900' '-DGOOGLE_CUDA=1' -msse3 -pthread '-DGOOGLE_CUDA=1' -c tensorflow\\\n/core/kernels/segment_reduction_ops.cc -o bazel-out/host/bin/tensorflow/core/kernels/_objs/segment_reduction_ops/tensorflow/core/kernels/segment_reduction_ops.pic.o)^M\nIn file included from external/eigen_archive/unsupported/Eigen/CXX11/Tensor:94:0,\n                 from ./third_party/eigen3/unsupported/Eigen/CXX11/Tensor:1,\n                 from tensorflow/core/kernels/segment_reduction_ops.cc:24:\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h: In instantiation of 'Packet Eigen::internal::MeanReducer&lt;T&gt;::finalizePacket(const Packet&amp;) const [with Packet = Eigen::internal::Packet8h; T = Eigen::half]':\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h:654:44:   required from 'Eigen::TensorEvaluator&lt;const Eigen::TensorReductionOp&lt;Op, Dims, XprType, MakePointer_&gt;, Device&gt;::PacketReturnType Eigen::TensorEvaluator&lt;const Eigen::TensorReduction\\\nOp&lt;Op, Dims, XprType, MakePointer_&gt;, Device&gt;::packet(Eigen::TensorEvaluator&lt;const Eigen::TensorReductionOp&lt;Op, Dims, XprType, MakePointer_&gt;, Device&gt;::Index) const [with int LoadMode = 0; Op = Eigen::internal::MeanReducer&lt;Eigen::half&gt;; Dims = const Eigen::IndexList&lt;E\\\nigen::type2index&lt;0l&gt; &gt;; ArgType = const Eigen::TensorMap&lt;Eigen::Tensor&lt;const Eigen::half, 2, 1, long int&gt;, 0, Eigen::MakePointer&gt;; MakePointer_ = Eigen::MakePointer; Device = Eigen::DefaultDevice; Eigen::TensorEvaluator&lt;const Eigen::TensorReductionOp&lt;Op, Dims, XprTy\\\npe, MakePointer_&gt;, Device&gt;::PacketReturnType = Eigen::internal::Packet8h; Eigen::TensorEvaluator&lt;const Eigen::TensorReductionOp&lt;Op, Dims, XprType, MakePointer_&gt;, Device&gt;::Index = long int]'\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h:142:5:   required from 'void Eigen::TensorEvaluator&lt;const Eigen::TensorAssignOp&lt;LhsXprType, RhsXprType&gt;, Device&gt;::evalPacket(Eigen::TensorEvaluator&lt;const Eigen::TensorAssignOp&lt;LhsXprType, RhsXp\\\nrType&gt;, Device&gt;::Index) [with LeftArgType = Eigen::TensorMap&lt;Eigen::Tensor&lt;Eigen::half, 1, 1, long int&gt;, 0, Eigen::MakePointer&gt;; RightArgType = const Eigen::TensorReductionOp&lt;Eigen::internal::MeanReducer&lt;Eigen::half&gt;, const Eigen::IndexList&lt;Eigen::type2index&lt;0l&gt; &gt;, \\\nconst Eigen::TensorMap&lt;Eigen::Tensor&lt;const Eigen::half, 2, 1, long int&gt;, 0, Eigen::MakePointer&gt;, Eigen::MakePointer&gt;; Device = Eigen::DefaultDevice; Eigen::TensorEvaluator&lt;const Eigen::TensorAssignOp&lt;LhsXprType, RhsXprType&gt;, Device&gt;::Index = long int]'\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorExecutor.h:68:11:   required from 'static void Eigen::internal::TensorExecutor&lt;Expression, Eigen::DefaultDevice, true&gt;::run(const Expression&amp;, const Eigen::DefaultDevice&amp;) [with Expression = const Eigen\\\n::TensorAssignOp&lt;Eigen::TensorMap&lt;Eigen::Tensor&lt;Eigen::half, 1, 1, long int&gt;, 0, Eigen::MakePointer&gt;, const Eigen::TensorReductionOp&lt;Eigen::internal::MeanReducer&lt;Eigen::half&gt;, const Eigen::IndexList&lt;Eigen::type2index&lt;0l&gt; &gt;, const Eigen::TensorMap&lt;Eigen::Tensor&lt;const\\\n Eigen::half, 2, 1, long int&gt;, 0, Eigen::MakePointer&gt;, Eigen::MakePointer&gt; &gt;]'\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h:310:65:   required from 'Eigen::TensorMap&lt;PlainObjectType, Options_, MakePointer_&gt;::Self&amp; Eigen::TensorMap&lt;PlainObjectType, Options_, MakePointer_&gt;::operator=(const OtherDerived&amp;) [with OtherDeriv\\\ned = Eigen::TensorReductionOp&lt;Eigen::internal::MeanReducer&lt;Eigen::half&gt;, const Eigen::IndexList&lt;Eigen::type2index&lt;0l&gt; &gt;, const Eigen::TensorMap&lt;Eigen::Tensor&lt;const Eigen::half, 2, 1, long int&gt;, 0, Eigen::MakePointer&gt;, Eigen::MakePointer&gt;; PlainObjectType = Eigen::Te\\\nnsor&lt;Eigen::half, 1, 1, long int&gt;; int Options_ = 0; MakePointer_ = Eigen::MakePointer; Eigen::TensorMap&lt;PlainObjectType, Options_, MakePointer_&gt;::Self = Eigen::TensorMap&lt;Eigen::Tensor&lt;Eigen::half, 1, 1, long int&gt;, 0, Eigen::MakePointer&gt;]'\ntensorflow/core/kernels/segment_reduction_ops.cc:186:19:   required from 'void tensorflow::SegmentReductionOp&lt;Device, T, Index, Reducer, default_value&gt;::Compute(tensorflow::OpKernelContext*) [with Device = Eigen::ThreadPoolDevice; T = Eigen::half; Index = long long \\\nint; Reducer = Eigen::internal::MeanReducer&lt;Eigen::half&gt;; int default_value = 0]'\ntensorflow/core/kernels/segment_reduction_ops.cc:1142:1:   required from here\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h:174:38: error: no matching function for call to 'pset1(const DenseIndex&amp;)'\n     return pdiv(vaccum, pset1&lt;Packet&gt;(packetCount_));\n                                      ^\nIn file included from external/eigen_archive/Eigen/Core:409:0,\n                 from ./third_party/eigen3/Eigen/Core:1,\n                 from tensorflow/core/kernels/segment_reduction_ops.cc:23:\nexternal/eigen_archive/Eigen/src/Core/GenericPacketMath.h:227:1: note: candidate: template&lt;class Packet&gt; Packet Eigen::internal::pset1(const typename Eigen::internal::unpacket_traits&lt;Packet&gt;::type&amp;)\n pset1(const typename unpacket_traits&lt;Packet&gt;::type&amp; a) { return a; }\n ^\nexternal/eigen_archive/Eigen/src/Core/GenericPacketMath.h:227:1: note:   template argument deduction/substitution failed:\nIn file included from external/eigen_archive/unsupported/Eigen/CXX11/Tensor:94:0,\n                 from ./third_party/eigen3/unsupported/Eigen/CXX11/Tensor:1,\n                 from tensorflow/core/kernels/segment_reduction_ops.cc:24:\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h:174:38: note:   cannot convert '((const Eigen::internal::MeanReducer&lt;Eigen::half&gt;*)this)-&gt;Eigen::internal::MeanReducer&lt;Eigen::half&gt;::packetCount_' (type 'const DenseIndex {aka const long int}\\\n') to type 'const type&amp; {aka const Eigen::half&amp;}'\n     return pdiv(vaccum, pset1&lt;Packet&gt;(packetCount_));\n\n</code></pre>", "body_text": "Updating the eigen commit pointer to the commit / PR that add the AMD GPU support in the Eigen codebase.\nThe change in eigen renames some of the APIs from Cuda* to Gpu*.  This renaming requires corresponding updates in the Tensorflow code that uses those APIs. That is the reason for the changes in the Tensorflow code in this PR.\nThere is commit (in the eigen codebase) which is chronologically between the commit currently pointed to by TF and the commit that this PR updates to, which will cause a compiler failure for the TF build.  That commit is\nhttps://bitbucket.org/eigen/eigen/commits/4af74f577a4fc09dcfa202064e1291038d2046da?at=default\nThe eigen patch file is required to workaround the compile failure introduced by that commit (it does so by essentially turning OFF the AVX vectorization functionality introduced by that commit). It is assumed that this compile failure will be fixed by code updates either on the TF side or eigen side, after which the eigen patch file will again not be needed\nThere is already a bug  filled on Eigen for this compile failure\nhttp://eigen.tuxfamily.org/bz/show_bug.cgi?id=1569\nThe compile failure in question looks like\n  (cd /root/.cache/bazel/_bazel_root/efb88f6336d9c4a18216fb94287b8d97/execroot/org_tensorflow && \\\n  exec env - \\\n    LD_LIBRARY_PATH=/usr/local/cuda/extras/CUPTI/lib64:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 \\\n    PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin \\\n    PWD=/proc/self/cwd \\\n  external/local_config_cuda/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc -g0 '-march=haswell' -g0 -MD -MF bazel-out/host/bin/tensorflow/core/kernels/_objs/segment_reduction_ops/tensorflow/core/kernels/segment_reduction_ops.pic.d '-frandom-seed=bazel-out/\\\nhost/bin/tensorflow/core/kernels/_objs/segment_reduction_ops/tensorflow/core/kernels/segment_reduction_ops.pic.o' -DEIGEN_MPL2_ONLY '-DEIGEN_MAX_ALIGN_BYTES=64' -D__CLANG_SUPPORT_DYN_ANNOTATION__ -DTENSORFLOW_USE_JEMALLOC -DTENSORFLOW_USE_ABSL -DTF_USE_SNAPPY -iquot\\\ne . -iquote bazel-out/host/genfiles -iquote external/nsync -iquote bazel-out/host/genfiles/external/nsync -iquote external/bazel_tools -iquote bazel-out/host/genfiles/external/bazel_tools -iquote external/eigen_archive -iquote bazel-out/host/genfiles/external/eigen_\\\narchive -iquote external/local_config_sycl -iquote bazel-out/host/genfiles/external/local_config_sycl -iquote external/com_google_absl -iquote bazel-out/host/genfiles/external/com_google_absl -iquote external/jemalloc -iquote bazel-out/host/genfiles/external/jemallo\\\nc -iquote external/gif_archive -iquote bazel-out/host/genfiles/external/gif_archive -iquote external/jpeg -iquote bazel-out/host/genfiles/external/jpeg -iquote external/protobuf_archive -iquote bazel-out/host/genfiles/external/protobuf_archive -iquote external/com_g\\\nooglesource_code_re2 -iquote bazel-out/host/genfiles/external/com_googlesource_code_re2 -iquote external/farmhash_archive -iquote bazel-out/host/genfiles/external/farmhash_archive -iquote external/fft2d -iquote bazel-out/host/genfiles/external/fft2d -iquote external\\\n/highwayhash -iquote bazel-out/host/genfiles/external/highwayhash -iquote external/png_archive -iquote bazel-out/host/genfiles/external/png_archive -iquote external/zlib_archive -iquote bazel-out/host/genfiles/external/zlib_archive -iquote external/local_config_cuda\\\n -iquote bazel-out/host/genfiles/external/local_config_cuda -iquote external/double_conversion -iquote bazel-out/host/genfiles/external/double_conversion -isystem external/nsync/public -isystem bazel-out/host/genfiles/external/nsync/public -isystem external/bazel_to\\\nols/tools/cpp/gcc3 -isystem external/eigen_archive -isystem bazel-out/host/genfiles/external/eigen_archive -isystem external/jemalloc/include -isystem bazel-out/host/genfiles/external/jemalloc/include -isystem external/gif_archive/lib -isystem bazel-out/host/genfile\\\ns/external/gif_archive/lib -isystem external/protobuf_archive/src -isystem bazel-out/host/genfiles/external/protobuf_archive/src -isystem external/farmhash_archive/src -isystem bazel-out/host/genfiles/external/farmhash_archive/src -isystem external/png_archive -isys\\\ntem bazel-out/host/genfiles/external/png_archive -isystem external/zlib_archive -isystem bazel-out/host/genfiles/external/zlib_archive -isystem external/local_config_cuda/cuda -isystem bazel-out/host/genfiles/external/local_config_cuda/cuda -isystem external/local_c\\\nonfig_cuda/cuda/cuda/include -isystem bazel-out/host/genfiles/external/local_config_cuda/cuda/cuda/include -isystem external/local_config_cuda/cuda/cuda/include/crt -isystem bazel-out/host/genfiles/external/local_config_cuda/cuda/cuda/include/crt -isystem external/d\\\nouble_conversion -isystem bazel-out/host/genfiles/external/double_conversion '-std=c++11' -Wno-builtin-macro-redefined '-D__DATE__=\"redacted\"' '-D__TIMESTAMP__=\"redacted\"' '-D__TIME__=\"redacted\"' -fPIC -U_FORTIFY_SOURCE '-D_FORTIFY_SOURCE=1' -fstack-protector -Wall \\\n-fno-omit-frame-pointer -no-canonical-prefixes -DNDEBUG -g0 -O2 -ffunction-sections -fdata-sections -DEIGEN_AVOID_STL_ARRAY -Iexternal/gemmlowp -Wno-sign-compare -fno-exceptions '-ftemplate-depth=900' '-DGOOGLE_CUDA=1' -msse3 -pthread '-DGOOGLE_CUDA=1' -c tensorflow\\\n/core/kernels/segment_reduction_ops.cc -o bazel-out/host/bin/tensorflow/core/kernels/_objs/segment_reduction_ops/tensorflow/core/kernels/segment_reduction_ops.pic.o)^M\nIn file included from external/eigen_archive/unsupported/Eigen/CXX11/Tensor:94:0,\n                 from ./third_party/eigen3/unsupported/Eigen/CXX11/Tensor:1,\n                 from tensorflow/core/kernels/segment_reduction_ops.cc:24:\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h: In instantiation of 'Packet Eigen::internal::MeanReducer<T>::finalizePacket(const Packet&) const [with Packet = Eigen::internal::Packet8h; T = Eigen::half]':\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h:654:44:   required from 'Eigen::TensorEvaluator<const Eigen::TensorReductionOp<Op, Dims, XprType, MakePointer_>, Device>::PacketReturnType Eigen::TensorEvaluator<const Eigen::TensorReduction\\\nOp<Op, Dims, XprType, MakePointer_>, Device>::packet(Eigen::TensorEvaluator<const Eigen::TensorReductionOp<Op, Dims, XprType, MakePointer_>, Device>::Index) const [with int LoadMode = 0; Op = Eigen::internal::MeanReducer<Eigen::half>; Dims = const Eigen::IndexList<E\\\nigen::type2index<0l> >; ArgType = const Eigen::TensorMap<Eigen::Tensor<const Eigen::half, 2, 1, long int>, 0, Eigen::MakePointer>; MakePointer_ = Eigen::MakePointer; Device = Eigen::DefaultDevice; Eigen::TensorEvaluator<const Eigen::TensorReductionOp<Op, Dims, XprTy\\\npe, MakePointer_>, Device>::PacketReturnType = Eigen::internal::Packet8h; Eigen::TensorEvaluator<const Eigen::TensorReductionOp<Op, Dims, XprType, MakePointer_>, Device>::Index = long int]'\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h:142:5:   required from 'void Eigen::TensorEvaluator<const Eigen::TensorAssignOp<LhsXprType, RhsXprType>, Device>::evalPacket(Eigen::TensorEvaluator<const Eigen::TensorAssignOp<LhsXprType, RhsXp\\\nrType>, Device>::Index) [with LeftArgType = Eigen::TensorMap<Eigen::Tensor<Eigen::half, 1, 1, long int>, 0, Eigen::MakePointer>; RightArgType = const Eigen::TensorReductionOp<Eigen::internal::MeanReducer<Eigen::half>, const Eigen::IndexList<Eigen::type2index<0l> >, \\\nconst Eigen::TensorMap<Eigen::Tensor<const Eigen::half, 2, 1, long int>, 0, Eigen::MakePointer>, Eigen::MakePointer>; Device = Eigen::DefaultDevice; Eigen::TensorEvaluator<const Eigen::TensorAssignOp<LhsXprType, RhsXprType>, Device>::Index = long int]'\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorExecutor.h:68:11:   required from 'static void Eigen::internal::TensorExecutor<Expression, Eigen::DefaultDevice, true>::run(const Expression&, const Eigen::DefaultDevice&) [with Expression = const Eigen\\\n::TensorAssignOp<Eigen::TensorMap<Eigen::Tensor<Eigen::half, 1, 1, long int>, 0, Eigen::MakePointer>, const Eigen::TensorReductionOp<Eigen::internal::MeanReducer<Eigen::half>, const Eigen::IndexList<Eigen::type2index<0l> >, const Eigen::TensorMap<Eigen::Tensor<const\\\n Eigen::half, 2, 1, long int>, 0, Eigen::MakePointer>, Eigen::MakePointer> >]'\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h:310:65:   required from 'Eigen::TensorMap<PlainObjectType, Options_, MakePointer_>::Self& Eigen::TensorMap<PlainObjectType, Options_, MakePointer_>::operator=(const OtherDerived&) [with OtherDeriv\\\ned = Eigen::TensorReductionOp<Eigen::internal::MeanReducer<Eigen::half>, const Eigen::IndexList<Eigen::type2index<0l> >, const Eigen::TensorMap<Eigen::Tensor<const Eigen::half, 2, 1, long int>, 0, Eigen::MakePointer>, Eigen::MakePointer>; PlainObjectType = Eigen::Te\\\nnsor<Eigen::half, 1, 1, long int>; int Options_ = 0; MakePointer_ = Eigen::MakePointer; Eigen::TensorMap<PlainObjectType, Options_, MakePointer_>::Self = Eigen::TensorMap<Eigen::Tensor<Eigen::half, 1, 1, long int>, 0, Eigen::MakePointer>]'\ntensorflow/core/kernels/segment_reduction_ops.cc:186:19:   required from 'void tensorflow::SegmentReductionOp<Device, T, Index, Reducer, default_value>::Compute(tensorflow::OpKernelContext*) [with Device = Eigen::ThreadPoolDevice; T = Eigen::half; Index = long long \\\nint; Reducer = Eigen::internal::MeanReducer<Eigen::half>; int default_value = 0]'\ntensorflow/core/kernels/segment_reduction_ops.cc:1142:1:   required from here\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h:174:38: error: no matching function for call to 'pset1(const DenseIndex&)'\n     return pdiv(vaccum, pset1<Packet>(packetCount_));\n                                      ^\nIn file included from external/eigen_archive/Eigen/Core:409:0,\n                 from ./third_party/eigen3/Eigen/Core:1,\n                 from tensorflow/core/kernels/segment_reduction_ops.cc:23:\nexternal/eigen_archive/Eigen/src/Core/GenericPacketMath.h:227:1: note: candidate: template<class Packet> Packet Eigen::internal::pset1(const typename Eigen::internal::unpacket_traits<Packet>::type&)\n pset1(const typename unpacket_traits<Packet>::type& a) { return a; }\n ^\nexternal/eigen_archive/Eigen/src/Core/GenericPacketMath.h:227:1: note:   template argument deduction/substitution failed:\nIn file included from external/eigen_archive/unsupported/Eigen/CXX11/Tensor:94:0,\n                 from ./third_party/eigen3/unsupported/Eigen/CXX11/Tensor:1,\n                 from tensorflow/core/kernels/segment_reduction_ops.cc:24:\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h:174:38: note:   cannot convert '((const Eigen::internal::MeanReducer<Eigen::half>*)this)->Eigen::internal::MeanReducer<Eigen::half>::packetCount_' (type 'const DenseIndex {aka const long int}\\\n') to type 'const type& {aka const Eigen::half&}'\n     return pdiv(vaccum, pset1<Packet>(packetCount_));", "body": "Updating the eigen commit pointer to the commit / PR that add the AMD GPU support in the Eigen codebase.\r\n\r\nThe change in eigen renames some of the APIs from Cuda* to Gpu*.  This renaming requires corresponding updates in the Tensorflow code that uses those APIs. That is the reason for the changes in the Tensorflow code in this PR.\r\n\r\n\r\nThere is commit (in the eigen codebase) which is chronologically between the commit currently pointed to by TF and the commit that this PR updates to, which will cause a compiler failure for the TF build.  That commit is \r\nhttps://bitbucket.org/eigen/eigen/commits/4af74f577a4fc09dcfa202064e1291038d2046da?at=default\r\n\r\nThe eigen patch file is required to workaround the compile failure introduced by that commit (it does so by essentially turning OFF the AVX vectorization functionality introduced by that commit). It is assumed that this compile failure will be fixed by code updates either on the TF side or eigen side, after which the eigen patch file will again not be needed\r\n\r\n\r\nThere is already a bug  filled on Eigen for this compile failure \r\n\r\nhttp://eigen.tuxfamily.org/bz/show_bug.cgi?id=1569\r\n\r\nThe compile failure in question looks like\r\n\r\n```\r\n  (cd /root/.cache/bazel/_bazel_root/efb88f6336d9c4a18216fb94287b8d97/execroot/org_tensorflow && \\\r\n  exec env - \\\r\n    LD_LIBRARY_PATH=/usr/local/cuda/extras/CUPTI/lib64:/usr/local/nvidia/lib:/usr/local/nvidia/lib64 \\\r\n    PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin \\\r\n    PWD=/proc/self/cwd \\\r\n  external/local_config_cuda/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc -g0 '-march=haswell' -g0 -MD -MF bazel-out/host/bin/tensorflow/core/kernels/_objs/segment_reduction_ops/tensorflow/core/kernels/segment_reduction_ops.pic.d '-frandom-seed=bazel-out/\\\r\nhost/bin/tensorflow/core/kernels/_objs/segment_reduction_ops/tensorflow/core/kernels/segment_reduction_ops.pic.o' -DEIGEN_MPL2_ONLY '-DEIGEN_MAX_ALIGN_BYTES=64' -D__CLANG_SUPPORT_DYN_ANNOTATION__ -DTENSORFLOW_USE_JEMALLOC -DTENSORFLOW_USE_ABSL -DTF_USE_SNAPPY -iquot\\\r\ne . -iquote bazel-out/host/genfiles -iquote external/nsync -iquote bazel-out/host/genfiles/external/nsync -iquote external/bazel_tools -iquote bazel-out/host/genfiles/external/bazel_tools -iquote external/eigen_archive -iquote bazel-out/host/genfiles/external/eigen_\\\r\narchive -iquote external/local_config_sycl -iquote bazel-out/host/genfiles/external/local_config_sycl -iquote external/com_google_absl -iquote bazel-out/host/genfiles/external/com_google_absl -iquote external/jemalloc -iquote bazel-out/host/genfiles/external/jemallo\\\r\nc -iquote external/gif_archive -iquote bazel-out/host/genfiles/external/gif_archive -iquote external/jpeg -iquote bazel-out/host/genfiles/external/jpeg -iquote external/protobuf_archive -iquote bazel-out/host/genfiles/external/protobuf_archive -iquote external/com_g\\\r\nooglesource_code_re2 -iquote bazel-out/host/genfiles/external/com_googlesource_code_re2 -iquote external/farmhash_archive -iquote bazel-out/host/genfiles/external/farmhash_archive -iquote external/fft2d -iquote bazel-out/host/genfiles/external/fft2d -iquote external\\\r\n/highwayhash -iquote bazel-out/host/genfiles/external/highwayhash -iquote external/png_archive -iquote bazel-out/host/genfiles/external/png_archive -iquote external/zlib_archive -iquote bazel-out/host/genfiles/external/zlib_archive -iquote external/local_config_cuda\\\r\n -iquote bazel-out/host/genfiles/external/local_config_cuda -iquote external/double_conversion -iquote bazel-out/host/genfiles/external/double_conversion -isystem external/nsync/public -isystem bazel-out/host/genfiles/external/nsync/public -isystem external/bazel_to\\\r\nols/tools/cpp/gcc3 -isystem external/eigen_archive -isystem bazel-out/host/genfiles/external/eigen_archive -isystem external/jemalloc/include -isystem bazel-out/host/genfiles/external/jemalloc/include -isystem external/gif_archive/lib -isystem bazel-out/host/genfile\\\r\ns/external/gif_archive/lib -isystem external/protobuf_archive/src -isystem bazel-out/host/genfiles/external/protobuf_archive/src -isystem external/farmhash_archive/src -isystem bazel-out/host/genfiles/external/farmhash_archive/src -isystem external/png_archive -isys\\\r\ntem bazel-out/host/genfiles/external/png_archive -isystem external/zlib_archive -isystem bazel-out/host/genfiles/external/zlib_archive -isystem external/local_config_cuda/cuda -isystem bazel-out/host/genfiles/external/local_config_cuda/cuda -isystem external/local_c\\\r\nonfig_cuda/cuda/cuda/include -isystem bazel-out/host/genfiles/external/local_config_cuda/cuda/cuda/include -isystem external/local_config_cuda/cuda/cuda/include/crt -isystem bazel-out/host/genfiles/external/local_config_cuda/cuda/cuda/include/crt -isystem external/d\\\r\nouble_conversion -isystem bazel-out/host/genfiles/external/double_conversion '-std=c++11' -Wno-builtin-macro-redefined '-D__DATE__=\"redacted\"' '-D__TIMESTAMP__=\"redacted\"' '-D__TIME__=\"redacted\"' -fPIC -U_FORTIFY_SOURCE '-D_FORTIFY_SOURCE=1' -fstack-protector -Wall \\\r\n-fno-omit-frame-pointer -no-canonical-prefixes -DNDEBUG -g0 -O2 -ffunction-sections -fdata-sections -DEIGEN_AVOID_STL_ARRAY -Iexternal/gemmlowp -Wno-sign-compare -fno-exceptions '-ftemplate-depth=900' '-DGOOGLE_CUDA=1' -msse3 -pthread '-DGOOGLE_CUDA=1' -c tensorflow\\\r\n/core/kernels/segment_reduction_ops.cc -o bazel-out/host/bin/tensorflow/core/kernels/_objs/segment_reduction_ops/tensorflow/core/kernels/segment_reduction_ops.pic.o)^M\r\nIn file included from external/eigen_archive/unsupported/Eigen/CXX11/Tensor:94:0,\r\n                 from ./third_party/eigen3/unsupported/Eigen/CXX11/Tensor:1,\r\n                 from tensorflow/core/kernels/segment_reduction_ops.cc:24:\r\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h: In instantiation of 'Packet Eigen::internal::MeanReducer<T>::finalizePacket(const Packet&) const [with Packet = Eigen::internal::Packet8h; T = Eigen::half]':\r\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorReduction.h:654:44:   required from 'Eigen::TensorEvaluator<const Eigen::TensorReductionOp<Op, Dims, XprType, MakePointer_>, Device>::PacketReturnType Eigen::TensorEvaluator<const Eigen::TensorReduction\\\r\nOp<Op, Dims, XprType, MakePointer_>, Device>::packet(Eigen::TensorEvaluator<const Eigen::TensorReductionOp<Op, Dims, XprType, MakePointer_>, Device>::Index) const [with int LoadMode = 0; Op = Eigen::internal::MeanReducer<Eigen::half>; Dims = const Eigen::IndexList<E\\\r\nigen::type2index<0l> >; ArgType = const Eigen::TensorMap<Eigen::Tensor<const Eigen::half, 2, 1, long int>, 0, Eigen::MakePointer>; MakePointer_ = Eigen::MakePointer; Device = Eigen::DefaultDevice; Eigen::TensorEvaluator<const Eigen::TensorReductionOp<Op, Dims, XprTy\\\r\npe, MakePointer_>, Device>::PacketReturnType = Eigen::internal::Packet8h; Eigen::TensorEvaluator<const Eigen::TensorReductionOp<Op, Dims, XprType, MakePointer_>, Device>::Index = long int]'\r\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorAssign.h:142:5:   required from 'void Eigen::TensorEvaluator<const Eigen::TensorAssignOp<LhsXprType, RhsXprType>, Device>::evalPacket(Eigen::TensorEvaluator<const Eigen::TensorAssignOp<LhsXprType, RhsXp\\\r\nrType>, Device>::Index) [with LeftArgType = Eigen::TensorMap<Eigen::Tensor<Eigen::half, 1, 1, long int>, 0, Eigen::MakePointer>; RightArgType = const Eigen::TensorReductionOp<Eigen::internal::MeanReducer<Eigen::half>, const Eigen::IndexList<Eigen::type2index<0l> >, \\\r\nconst Eigen::TensorMap<Eigen::Tensor<const Eigen::half, 2, 1, long int>, 0, Eigen::MakePointer>, Eigen::MakePointer>; Device = Eigen::DefaultDevice; Eigen::TensorEvaluator<const Eigen::TensorAssignOp<LhsXprType, RhsXprType>, Device>::Index = long int]'\r\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorExecutor.h:68:11:   required from 'static void Eigen::internal::TensorExecutor<Expression, Eigen::DefaultDevice, true>::run(const Expression&, const Eigen::DefaultDevice&) [with Expression = const Eigen\\\r\n::TensorAssignOp<Eigen::TensorMap<Eigen::Tensor<Eigen::half, 1, 1, long int>, 0, Eigen::MakePointer>, const Eigen::TensorReductionOp<Eigen::internal::MeanReducer<Eigen::half>, const Eigen::IndexList<Eigen::type2index<0l> >, const Eigen::TensorMap<Eigen::Tensor<const\\\r\n Eigen::half, 2, 1, long int>, 0, Eigen::MakePointer>, Eigen::MakePointer> >]'\r\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorMap.h:310:65:   required from 'Eigen::TensorMap<PlainObjectType, Options_, MakePointer_>::Self& Eigen::TensorMap<PlainObjectType, Options_, MakePointer_>::operator=(const OtherDerived&) [with OtherDeriv\\\r\ned = Eigen::TensorReductionOp<Eigen::internal::MeanReducer<Eigen::half>, const Eigen::IndexList<Eigen::type2index<0l> >, const Eigen::TensorMap<Eigen::Tensor<const Eigen::half, 2, 1, long int>, 0, Eigen::MakePointer>, Eigen::MakePointer>; PlainObjectType = Eigen::Te\\\r\nnsor<Eigen::half, 1, 1, long int>; int Options_ = 0; MakePointer_ = Eigen::MakePointer; Eigen::TensorMap<PlainObjectType, Options_, MakePointer_>::Self = Eigen::TensorMap<Eigen::Tensor<Eigen::half, 1, 1, long int>, 0, Eigen::MakePointer>]'\r\ntensorflow/core/kernels/segment_reduction_ops.cc:186:19:   required from 'void tensorflow::SegmentReductionOp<Device, T, Index, Reducer, default_value>::Compute(tensorflow::OpKernelContext*) [with Device = Eigen::ThreadPoolDevice; T = Eigen::half; Index = long long \\\r\nint; Reducer = Eigen::internal::MeanReducer<Eigen::half>; int default_value = 0]'\r\ntensorflow/core/kernels/segment_reduction_ops.cc:1142:1:   required from here\r\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h:174:38: error: no matching function for call to 'pset1(const DenseIndex&)'\r\n     return pdiv(vaccum, pset1<Packet>(packetCount_));\r\n                                      ^\r\nIn file included from external/eigen_archive/Eigen/Core:409:0,\r\n                 from ./third_party/eigen3/Eigen/Core:1,\r\n                 from tensorflow/core/kernels/segment_reduction_ops.cc:23:\r\nexternal/eigen_archive/Eigen/src/Core/GenericPacketMath.h:227:1: note: candidate: template<class Packet> Packet Eigen::internal::pset1(const typename Eigen::internal::unpacket_traits<Packet>::type&)\r\n pset1(const typename unpacket_traits<Packet>::type& a) { return a; }\r\n ^\r\nexternal/eigen_archive/Eigen/src/Core/GenericPacketMath.h:227:1: note:   template argument deduction/substitution failed:\r\nIn file included from external/eigen_archive/unsupported/Eigen/CXX11/Tensor:94:0,\r\n                 from ./third_party/eigen3/unsupported/Eigen/CXX11/Tensor:1,\r\n                 from tensorflow/core/kernels/segment_reduction_ops.cc:24:\r\nexternal/eigen_archive/unsupported/Eigen/CXX11/src/Tensor/TensorFunctors.h:174:38: note:   cannot convert '((const Eigen::internal::MeanReducer<Eigen::half>*)this)->Eigen::internal::MeanReducer<Eigen::half>::packetCount_' (type 'const DenseIndex {aka const long int}\\\r\n') to type 'const type& {aka const Eigen::half&}'\r\n     return pdiv(vaccum, pset1<Packet>(packetCount_));\r\n\r\n```\r\n"}