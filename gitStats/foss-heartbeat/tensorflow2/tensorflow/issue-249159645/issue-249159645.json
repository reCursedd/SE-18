{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12158", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12158/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12158/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12158/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/12158", "id": 249159645, "node_id": "MDU6SXNzdWUyNDkxNTk2NDU=", "number": 12158, "title": "Is `full_matrices=False` working for `tf.svd()`?", "user": {"login": "RuofanKong", "id": 7396554, "node_id": "MDQ6VXNlcjczOTY1NTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/7396554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RuofanKong", "html_url": "https://github.com/RuofanKong", "followers_url": "https://api.github.com/users/RuofanKong/followers", "following_url": "https://api.github.com/users/RuofanKong/following{/other_user}", "gists_url": "https://api.github.com/users/RuofanKong/gists{/gist_id}", "starred_url": "https://api.github.com/users/RuofanKong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RuofanKong/subscriptions", "organizations_url": "https://api.github.com/users/RuofanKong/orgs", "repos_url": "https://api.github.com/users/RuofanKong/repos", "events_url": "https://api.github.com/users/RuofanKong/events{/privacy}", "received_events_url": "https://api.github.com/users/RuofanKong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-09T20:58:57Z", "updated_at": "2017-08-15T00:07:41Z", "closed_at": "2017-08-15T00:07:41Z", "author_association": "NONE", "body_html": "<p>I am working with tensorflow svd decomposition,  and I notice that the svd results do not have any differences for singular matrix no matter I set <code>full_matrices=False</code> or to be <code>True</code>. For example,</p>\n<pre><code>a = tf.Variable([[1.0, 0.0, 0.0], [0.0, 4.0, 0.0], [0.0, 0.0, 0.0]])  # Singular Matrix\ns, u, v = tf.svd(a, full_matrices=False)\ninit_op = tf.global_variables_initializer()\nsess = tf.Session()\nsess.run(init_op)\nsess.run([s, u, v])\n</code></pre>\n<p>The results are always same no matter <code>full_matrices=False</code> or <code>True</code>. However, the online doc says \"If true, compute full-sized u and v. If false (the default), compute only the leading P singular vectors\". So I wonder if there is a bug for this argument. Thanks!</p>", "body_text": "I am working with tensorflow svd decomposition,  and I notice that the svd results do not have any differences for singular matrix no matter I set full_matrices=False or to be True. For example,\na = tf.Variable([[1.0, 0.0, 0.0], [0.0, 4.0, 0.0], [0.0, 0.0, 0.0]])  # Singular Matrix\ns, u, v = tf.svd(a, full_matrices=False)\ninit_op = tf.global_variables_initializer()\nsess = tf.Session()\nsess.run(init_op)\nsess.run([s, u, v])\n\nThe results are always same no matter full_matrices=False or True. However, the online doc says \"If true, compute full-sized u and v. If false (the default), compute only the leading P singular vectors\". So I wonder if there is a bug for this argument. Thanks!", "body": "I am working with tensorflow svd decomposition,  and I notice that the svd results do not have any differences for singular matrix no matter I set `full_matrices=False` or to be `True`. For example, \r\n\r\n```\r\na = tf.Variable([[1.0, 0.0, 0.0], [0.0, 4.0, 0.0], [0.0, 0.0, 0.0]])  # Singular Matrix\r\ns, u, v = tf.svd(a, full_matrices=False)\r\ninit_op = tf.global_variables_initializer()\r\nsess = tf.Session()\r\nsess.run(init_op)\r\nsess.run([s, u, v])\r\n```\r\n\r\nThe results are always same no matter `full_matrices=False` or `True`. However, the online doc says \"If true, compute full-sized u and v. If false (the default), compute only the leading P singular vectors\". So I wonder if there is a bug for this argument. Thanks!\r\n"}