{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/236265764", "html_url": "https://github.com/tensorflow/tensorflow/issues/3540#issuecomment-236265764", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3540", "id": 236265764, "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjI2NTc2NA==", "user": {"login": "mbz", "id": 1122127, "node_id": "MDQ6VXNlcjExMjIxMjc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1122127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbz", "html_url": "https://github.com/mbz", "followers_url": "https://api.github.com/users/mbz/followers", "following_url": "https://api.github.com/users/mbz/following{/other_user}", "gists_url": "https://api.github.com/users/mbz/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbz/subscriptions", "organizations_url": "https://api.github.com/users/mbz/orgs", "repos_url": "https://api.github.com/users/mbz/repos", "events_url": "https://api.github.com/users/mbz/events{/privacy}", "received_events_url": "https://api.github.com/users/mbz/received_events", "type": "User", "site_admin": false}, "created_at": "2016-07-29T18:59:57Z", "updated_at": "2016-07-29T18:59:57Z", "author_association": "NONE", "body_html": "<p>cool, I ended up writing the following functions:</p>\n<pre><code>    def _create_restore_point(self):\n        self.restore_dict = {}\n        self.restore_ops = []\n        for var in self.sess.graph.get_collection(tf.GraphKeys.TRAINABLE_VARIABLES):\n            place_holder = tf.placeholder(tf.float32, var.get_shape(), 'ph%s' % var.name.split(':')[0])\n            self.restore_dict[var.name] = place_holder\n            self.restore_ops.append(tf.assign(var, place_holder))\n\n    def set_all_variable_values(self, update_dict):\n        feed_dict = {}\n        for name, value in update_dict.items():\n            feed_dict[self.restore_dict[name]] = value\n        self.sess.run(self.restore_ops, feed_dict=feed_dict)\n</code></pre>\n<p>It seems that it is working, but may not be optimal.</p>", "body_text": "cool, I ended up writing the following functions:\n    def _create_restore_point(self):\n        self.restore_dict = {}\n        self.restore_ops = []\n        for var in self.sess.graph.get_collection(tf.GraphKeys.TRAINABLE_VARIABLES):\n            place_holder = tf.placeholder(tf.float32, var.get_shape(), 'ph%s' % var.name.split(':')[0])\n            self.restore_dict[var.name] = place_holder\n            self.restore_ops.append(tf.assign(var, place_holder))\n\n    def set_all_variable_values(self, update_dict):\n        feed_dict = {}\n        for name, value in update_dict.items():\n            feed_dict[self.restore_dict[name]] = value\n        self.sess.run(self.restore_ops, feed_dict=feed_dict)\n\nIt seems that it is working, but may not be optimal.", "body": "cool, I ended up writing the following functions:\n\n```\n    def _create_restore_point(self):\n        self.restore_dict = {}\n        self.restore_ops = []\n        for var in self.sess.graph.get_collection(tf.GraphKeys.TRAINABLE_VARIABLES):\n            place_holder = tf.placeholder(tf.float32, var.get_shape(), 'ph%s' % var.name.split(':')[0])\n            self.restore_dict[var.name] = place_holder\n            self.restore_ops.append(tf.assign(var, place_holder))\n\n    def set_all_variable_values(self, update_dict):\n        feed_dict = {}\n        for name, value in update_dict.items():\n            feed_dict[self.restore_dict[name]] = value\n        self.sess.run(self.restore_ops, feed_dict=feed_dict)\n```\n\nIt seems that it is working, but may not be optimal.\n"}