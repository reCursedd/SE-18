{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8985", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8985/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8985/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8985/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/8985", "id": 219651764, "node_id": "MDU6SXNzdWUyMTk2NTE3NjQ=", "number": 8985, "title": "ValueError while restoring pre-trained SyntaxNet language parser", "user": {"login": "gvoysey", "id": 3641839, "node_id": "MDQ6VXNlcjM2NDE4Mzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/3641839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gvoysey", "html_url": "https://github.com/gvoysey", "followers_url": "https://api.github.com/users/gvoysey/followers", "following_url": "https://api.github.com/users/gvoysey/following{/other_user}", "gists_url": "https://api.github.com/users/gvoysey/gists{/gist_id}", "starred_url": "https://api.github.com/users/gvoysey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gvoysey/subscriptions", "organizations_url": "https://api.github.com/users/gvoysey/orgs", "repos_url": "https://api.github.com/users/gvoysey/repos", "events_url": "https://api.github.com/users/gvoysey/events{/privacy}", "received_events_url": "https://api.github.com/users/gvoysey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-05T17:04:14Z", "updated_at": "2017-04-07T00:20:16Z", "closed_at": "2017-04-07T00:20:16Z", "author_association": "NONE", "body_html": "<ul>\n<li><em>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)?</em>: yes, but closely following <a href=\"https://www.tensorflow.org/api_docs/python/tf/train/import_meta_graph\" rel=\"nofollow\">this</a> example.</li>\n<li><em>TensorFlow installed from (source or binary)?</em>: binary.  <code>tf.__version__</code> == <code>1.0.0</code></li>\n<li><em>TensorFlow version</em>: 1.0.0 (installed with <code>pip install tensorflow-gpu</code></li>\n<li><em>CUDA/cuDNN version</em>: cuda 8/ cudnn 5.1.10</li>\n<li><em>GPU Model and Memory</em>: GeForce GTX 1080 (8 GB), nvidia driver 367.57</li>\n<li><em>Exact command to reproduce</em>:</li>\n</ul>\n<h3>Describe the problem clearly</h3>\n<p>I'm attempting to play with the ParseySaurus pre-trained ConLL17 models from <a href=\"https://github.com/tensorflow/models/blob/master/syntaxnet/g3doc/conll2017/README.md\">here</a>.   Attempting to reconstitute them from a <code>*.meta</code> file results in an error.</p>\n<h3>Source Code / Logs</h3>\n<p>prep:</p>\n<pre><code>wget https://drive.google.com/file/d/0BxpbZGYVZsEeSFdrUnBNMUp1YzQ/view?usp=sharing\ntar xzf conll17.tar.gz\n</code></pre>\n<p>ipython transcript follows</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">%</span>cd conll17<span class=\"pl-k\">/</span>English\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n    saver <span class=\"pl-k\">=</span> tf.train.import_meta_graph(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>segmenter/checkpoint.meta<span class=\"pl-pds\">'</span></span>)\n    saver.restore(sess,<span class=\"pl-s\"><span class=\"pl-pds\">'</span>segmenter/checkpoint.data-00000-of-00001<span class=\"pl-pds\">'</span></span>)\nI tensorflow<span class=\"pl-k\">/</span>core<span class=\"pl-k\">/</span>common_runtime<span class=\"pl-k\">/</span>gpu<span class=\"pl-k\">/</span>gpu_device.cc:<span class=\"pl-c1\">975</span>] Creating TensorFlow device (<span class=\"pl-k\">/</span>gpu:<span class=\"pl-c1\">0</span>) <span class=\"pl-ii\">-&gt;</span> (device: <span class=\"pl-c1\">0</span>, name: GeForce <span class=\"pl-c1\">GTX</span> <span class=\"pl-c1\">1080</span>, pci bus <span class=\"pl-c1\">id</span>: <span class=\"pl-c1\">0000</span>:<span class=\"pl-c1\">0<span class=\"pl-ii\">1</span></span>:<span class=\"pl-c1\">00.0</span>)                  \n<span class=\"pl-ii\">--------------------------------------------------------------------------</span><span class=\"pl-k\">-</span>                                                   \n<span class=\"pl-c1\">ValueError</span>                                Traceback (most recent call last)           \n<span class=\"pl-k\">&lt;</span>ipython<span class=\"pl-k\">-</span><span class=\"pl-c1\">input</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">15</span><span class=\"pl-k\">-</span><span class=\"pl-ii\">325bf8959c4e</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">in</span> <span class=\"pl-k\">&lt;</span>module<span class=\"pl-k\">&gt;</span>()                 \n      <span class=\"pl-c1\">1</span> <span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:                            \n<span class=\"pl-ii\">----</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">2</span>     saver <span class=\"pl-k\">=</span> tf.train.import_meta_graph(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>segmenter/checkpoint.meta<span class=\"pl-pds\">'</span></span>)                                                   \n      <span class=\"pl-c1\">3</span>     saver.restore(sess,<span class=\"pl-s\"><span class=\"pl-pds\">'</span>segmenter/checkpoint.data-00000-of-00001<span class=\"pl-pds\">'</span></span>)                                                    \n      <span class=\"pl-c1\">4</span>       \n\n<span class=\"pl-k\">/</span>home<span class=\"pl-k\">/</span>gvoysey<span class=\"pl-k\">/</span>.local<span class=\"pl-k\">/</span>share<span class=\"pl-k\">/</span>virtualenvs<span class=\"pl-k\">/</span>DeepSpeech<span class=\"pl-k\">/</span>local<span class=\"pl-k\">/</span>lib<span class=\"pl-k\">/</span>python2.7<span class=\"pl-k\">/</span>site<span class=\"pl-k\">-</span>packages<span class=\"pl-k\">/</span>tensorflow<span class=\"pl-k\">/</span>python<span class=\"pl-k\">/</span>training<span class=\"pl-k\">/</span>saver.pyc <span class=\"pl-k\">in</span> import_meta_graph(meta_graph_or_file, clear_devices, import_scope, <span class=\"pl-k\">**</span>kwargs)    \n   <span class=\"pl-c1\">1575</span>                                       clear_devices<span class=\"pl-k\">=</span>clear_devices,                    \n   <span class=\"pl-c1\">1576</span>                                       import_scope<span class=\"pl-k\">=</span>import_scope,                      \n<span class=\"pl-ii\">-&gt;</span> <span class=\"pl-c1\">1577</span>                                       <span class=\"pl-k\">**</span>kwargs)       \n   <span class=\"pl-c1\">1578</span>   <span class=\"pl-k\">if</span> meta_graph_def.HasField(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>saver_def<span class=\"pl-pds\">\"</span></span>):            \n   <span class=\"pl-c1\">1579</span>     <span class=\"pl-k\">return</span> Saver(<span class=\"pl-v\">saver_def</span><span class=\"pl-k\">=</span>meta_graph_def.saver_def, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span>import_scope)                                               \n\n<span class=\"pl-k\">/</span>home<span class=\"pl-k\">/</span>gvoysey<span class=\"pl-k\">/</span>.local<span class=\"pl-k\">/</span>share<span class=\"pl-k\">/</span>virtualenvs<span class=\"pl-k\">/</span>DeepSpeech<span class=\"pl-k\">/</span>local<span class=\"pl-k\">/</span>lib<span class=\"pl-k\">/</span>python2.7<span class=\"pl-k\">/</span>site<span class=\"pl-k\">-</span>packages<span class=\"pl-k\">/</span>tensorflow<span class=\"pl-k\">/</span>python<span class=\"pl-k\">/</span>framework<span class=\"pl-k\">/</span>meta_graph.pyc <span class=\"pl-k\">in</span> import_scoped_meta_graph(meta_graph_or_file, clear_devices, graph, import_scope, input_map, unbound_inputs_col_name)                                                      \n    <span class=\"pl-c1\">496</span>     importer.import_graph_def(                        \n    <span class=\"pl-c1\">497</span>         input_graph_def, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span>(import_scope <span class=\"pl-k\">or</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>), <span class=\"pl-v\">input_map</span><span class=\"pl-k\">=</span>input_map,                                                              \n<span class=\"pl-ii\">--</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">498</span>         <span class=\"pl-v\">producer_op_list</span><span class=\"pl-k\">=</span>producer_op_list)            \n    <span class=\"pl-c1\">499</span>       \n    <span class=\"pl-c1\">500</span>     <span class=\"pl-c\"><span class=\"pl-c\">#</span> Restores all the other collections.             </span>\n\n<span class=\"pl-k\">/</span>home<span class=\"pl-k\">/</span>gvoysey<span class=\"pl-k\">/</span>.local<span class=\"pl-k\">/</span>share<span class=\"pl-k\">/</span>virtualenvs<span class=\"pl-k\">/</span>DeepSpeech<span class=\"pl-k\">/</span>local<span class=\"pl-k\">/</span>lib<span class=\"pl-k\">/</span>python2.7<span class=\"pl-k\">/</span>site<span class=\"pl-k\">-</span>packages<span class=\"pl-k\">/</span>tensorflow<span class=\"pl-k\">/</span>python<span class=\"pl-k\">/</span>framework<span class=\"pl-k\">/</span>importer.pyc <span class=\"pl-k\">in</span> import_graph_def(graph_def, input_map, return_elements, name, op_dict, producer_op_list)                    \n    <span class=\"pl-c1\">257</span>       <span class=\"pl-c\"><span class=\"pl-c\">#</span> Set any default attr values that aren't present.                                                              </span>\n    <span class=\"pl-c1\">258</span>       <span class=\"pl-k\">if</span> node.op <span class=\"pl-k\">not</span> <span class=\"pl-k\">in</span> op_dict:                      \n<span class=\"pl-ii\">--</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">259</span>         <span class=\"pl-k\">raise</span> <span class=\"pl-c1\">ValueError</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>No op named <span class=\"pl-c1\">%s</span> in defined operations.<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">%</span> node.op)                                           \n    <span class=\"pl-c1\">260</span>       op_def <span class=\"pl-k\">=</span> op_dict[node.op]                       \n    <span class=\"pl-c1\">261</span>       <span class=\"pl-k\">for</span> attr_def <span class=\"pl-k\">in</span> op_def.attr:                    \n\n<span class=\"pl-c1\">ValueError</span>: No op named GetSession <span class=\"pl-k\">in</span> defined operations.        </pre></div>", "body_text": "Have I written custom code (as opposed to using a stock example script provided in TensorFlow)?: yes, but closely following this example.\nTensorFlow installed from (source or binary)?: binary.  tf.__version__ == 1.0.0\nTensorFlow version: 1.0.0 (installed with pip install tensorflow-gpu\nCUDA/cuDNN version: cuda 8/ cudnn 5.1.10\nGPU Model and Memory: GeForce GTX 1080 (8 GB), nvidia driver 367.57\nExact command to reproduce:\n\nDescribe the problem clearly\nI'm attempting to play with the ParseySaurus pre-trained ConLL17 models from here.   Attempting to reconstitute them from a *.meta file results in an error.\nSource Code / Logs\nprep:\nwget https://drive.google.com/file/d/0BxpbZGYVZsEeSFdrUnBNMUp1YzQ/view?usp=sharing\ntar xzf conll17.tar.gz\n\nipython transcript follows\nimport tensorflow as tf\n%cd conll17/English\nwith tf.Session() as sess:\n    saver = tf.train.import_meta_graph('segmenter/checkpoint.meta')\n    saver.restore(sess,'segmenter/checkpoint.data-00000-of-00001')\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1080, pci bus id: 0000:01:00.0)                  \n---------------------------------------------------------------------------                                                   \nValueError                                Traceback (most recent call last)           \n<ipython-input-15-325bf8959c4e> in <module>()                 \n      1 with tf.Session() as sess:                            \n----> 2     saver = tf.train.import_meta_graph('segmenter/checkpoint.meta')                                                   \n      3     saver.restore(sess,'segmenter/checkpoint.data-00000-of-00001')                                                    \n      4       \n\n/home/gvoysey/.local/share/virtualenvs/DeepSpeech/local/lib/python2.7/site-packages/tensorflow/python/training/saver.pyc in import_meta_graph(meta_graph_or_file, clear_devices, import_scope, **kwargs)    \n   1575                                       clear_devices=clear_devices,                    \n   1576                                       import_scope=import_scope,                      \n-> 1577                                       **kwargs)       \n   1578   if meta_graph_def.HasField(\"saver_def\"):            \n   1579     return Saver(saver_def=meta_graph_def.saver_def, name=import_scope)                                               \n\n/home/gvoysey/.local/share/virtualenvs/DeepSpeech/local/lib/python2.7/site-packages/tensorflow/python/framework/meta_graph.pyc in import_scoped_meta_graph(meta_graph_or_file, clear_devices, graph, import_scope, input_map, unbound_inputs_col_name)                                                      \n    496     importer.import_graph_def(                        \n    497         input_graph_def, name=(import_scope or \"\"), input_map=input_map,                                                              \n--> 498         producer_op_list=producer_op_list)            \n    499       \n    500     # Restores all the other collections.             \n\n/home/gvoysey/.local/share/virtualenvs/DeepSpeech/local/lib/python2.7/site-packages/tensorflow/python/framework/importer.pyc in import_graph_def(graph_def, input_map, return_elements, name, op_dict, producer_op_list)                    \n    257       # Set any default attr values that aren't present.                                                              \n    258       if node.op not in op_dict:                      \n--> 259         raise ValueError('No op named %s in defined operations.' % node.op)                                           \n    260       op_def = op_dict[node.op]                       \n    261       for attr_def in op_def.attr:                    \n\nValueError: No op named GetSession in defined operations.", "body": "- *Have I written custom code (as opposed to using a stock example script provided in TensorFlow)?*: yes, but closely following [this](https://www.tensorflow.org/api_docs/python/tf/train/import_meta_graph) example.\r\n- *TensorFlow installed from (source or binary)?*: binary.  `tf.__version__` == `1.0.0`\r\n- *TensorFlow version*: 1.0.0 (installed with `pip install tensorflow-gpu`\r\n- *CUDA/cuDNN version*: cuda 8/ cudnn 5.1.10\r\n- *GPU Model and Memory*: GeForce GTX 1080 (8 GB), nvidia driver 367.57\r\n- *Exact command to reproduce*:\r\n\r\n### Describe the problem clearly\r\nI'm attempting to play with the ParseySaurus pre-trained ConLL17 models from [here](https://github.com/tensorflow/models/blob/master/syntaxnet/g3doc/conll2017/README.md).   Attempting to reconstitute them from a `*.meta` file results in an error.\r\n### Source Code / Logs\r\nprep: \r\n```\r\nwget https://drive.google.com/file/d/0BxpbZGYVZsEeSFdrUnBNMUp1YzQ/view?usp=sharing\r\ntar xzf conll17.tar.gz\r\n```\r\n\r\nipython transcript follows\r\n```python\r\nimport tensorflow as tf\r\n%cd conll17/English\r\nwith tf.Session() as sess:\r\n    saver = tf.train.import_meta_graph('segmenter/checkpoint.meta')\r\n    saver.restore(sess,'segmenter/checkpoint.data-00000-of-00001')\r\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1080, pci bus id: 0000:01:00.0)                  \r\n---------------------------------------------------------------------------                                                   \r\nValueError                                Traceback (most recent call last)           \r\n<ipython-input-15-325bf8959c4e> in <module>()                 \r\n      1 with tf.Session() as sess:                            \r\n----> 2     saver = tf.train.import_meta_graph('segmenter/checkpoint.meta')                                                   \r\n      3     saver.restore(sess,'segmenter/checkpoint.data-00000-of-00001')                                                    \r\n      4       \r\n\r\n/home/gvoysey/.local/share/virtualenvs/DeepSpeech/local/lib/python2.7/site-packages/tensorflow/python/training/saver.pyc in import_meta_graph(meta_graph_or_file, clear_devices, import_scope, **kwargs)    \r\n   1575                                       clear_devices=clear_devices,                    \r\n   1576                                       import_scope=import_scope,                      \r\n-> 1577                                       **kwargs)       \r\n   1578   if meta_graph_def.HasField(\"saver_def\"):            \r\n   1579     return Saver(saver_def=meta_graph_def.saver_def, name=import_scope)                                               \r\n\r\n/home/gvoysey/.local/share/virtualenvs/DeepSpeech/local/lib/python2.7/site-packages/tensorflow/python/framework/meta_graph.pyc in import_scoped_meta_graph(meta_graph_or_file, clear_devices, graph, import_scope, input_map, unbound_inputs_col_name)                                                      \r\n    496     importer.import_graph_def(                        \r\n    497         input_graph_def, name=(import_scope or \"\"), input_map=input_map,                                                              \r\n--> 498         producer_op_list=producer_op_list)            \r\n    499       \r\n    500     # Restores all the other collections.             \r\n\r\n/home/gvoysey/.local/share/virtualenvs/DeepSpeech/local/lib/python2.7/site-packages/tensorflow/python/framework/importer.pyc in import_graph_def(graph_def, input_map, return_elements, name, op_dict, producer_op_list)                    \r\n    257       # Set any default attr values that aren't present.                                                              \r\n    258       if node.op not in op_dict:                      \r\n--> 259         raise ValueError('No op named %s in defined operations.' % node.op)                                           \r\n    260       op_def = op_dict[node.op]                       \r\n    261       for attr_def in op_def.attr:                    \r\n\r\nValueError: No op named GetSession in defined operations.        \r\n```\r\n"}