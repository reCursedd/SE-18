{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/316", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/316/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/316/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/316/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/316", "id": 118205651, "node_id": "MDU6SXNzdWUxMTgyMDU2NTE=", "number": 316, "title": "Recursively copying elements from one graph to another", "user": {"login": "srjoglekar246", "id": 2099293, "node_id": "MDQ6VXNlcjIwOTkyOTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/2099293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srjoglekar246", "html_url": "https://github.com/srjoglekar246", "followers_url": "https://api.github.com/users/srjoglekar246/followers", "following_url": "https://api.github.com/users/srjoglekar246/following{/other_user}", "gists_url": "https://api.github.com/users/srjoglekar246/gists{/gist_id}", "starred_url": "https://api.github.com/users/srjoglekar246/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srjoglekar246/subscriptions", "organizations_url": "https://api.github.com/users/srjoglekar246/orgs", "repos_url": "https://api.github.com/users/srjoglekar246/repos", "events_url": "https://api.github.com/users/srjoglekar246/events{/privacy}", "received_events_url": "https://api.github.com/users/srjoglekar246/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-11-21T16:00:16Z", "updated_at": "2017-02-09T22:37:54Z", "closed_at": "2016-04-29T15:42:51Z", "author_association": "MEMBER", "body_html": "<p>One nifty feature to have in the codebase would be allowing recursive copying of Operation/Tensor/Variable instances from one graph to another. By recursive, I mean that copying the 'top' node (say the trainer for a basic NN) would automatically copy all the required Ops and tensors in the dataflow graph.<br>\nThis could allow users to easily port common components of different frameworks from an 'origin' graph to a 'target' graph. To avoid naming conflicts, we could add the copied elements under a common namespace in the target graph.</p>\n<p>I tried writing up some code for it, and since the project doesn't accept pull request as of now, wrote up a blog post about it. I would like the community's feed back on possible issues or applications. Thanks!</p>\n<p>Heres a link to the post: <a href=\"https://codesachin.wordpress.com/2015/11/20/recursively-copying-elements-from-one-graph-to-another-in-tensorflow/\" rel=\"nofollow\">https://codesachin.wordpress.com/2015/11/20/recursively-copying-elements-from-one-graph-to-another-in-tensorflow/</a></p>", "body_text": "One nifty feature to have in the codebase would be allowing recursive copying of Operation/Tensor/Variable instances from one graph to another. By recursive, I mean that copying the 'top' node (say the trainer for a basic NN) would automatically copy all the required Ops and tensors in the dataflow graph.\nThis could allow users to easily port common components of different frameworks from an 'origin' graph to a 'target' graph. To avoid naming conflicts, we could add the copied elements under a common namespace in the target graph.\nI tried writing up some code for it, and since the project doesn't accept pull request as of now, wrote up a blog post about it. I would like the community's feed back on possible issues or applications. Thanks!\nHeres a link to the post: https://codesachin.wordpress.com/2015/11/20/recursively-copying-elements-from-one-graph-to-another-in-tensorflow/", "body": "One nifty feature to have in the codebase would be allowing recursive copying of Operation/Tensor/Variable instances from one graph to another. By recursive, I mean that copying the 'top' node (say the trainer for a basic NN) would automatically copy all the required Ops and tensors in the dataflow graph.\nThis could allow users to easily port common components of different frameworks from an 'origin' graph to a 'target' graph. To avoid naming conflicts, we could add the copied elements under a common namespace in the target graph.\n\nI tried writing up some code for it, and since the project doesn't accept pull request as of now, wrote up a blog post about it. I would like the community's feed back on possible issues or applications. Thanks!\n\nHeres a link to the post: https://codesachin.wordpress.com/2015/11/20/recursively-copying-elements-from-one-graph-to-another-in-tensorflow/\n"}