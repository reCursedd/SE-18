{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/361320313", "html_url": "https://github.com/tensorflow/tensorflow/issues/16481#issuecomment-361320313", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16481", "id": 361320313, "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTMyMDMxMw==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-29T17:25:29Z", "updated_at": "2018-01-29T17:25:29Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Hmm, what you're doing doesn't sound like it's wrong, because that's effectively what the Python version would be doing too. And the recent change should make it <em>less</em> likely to see a <code>NotFound</code> error, because it changes the function implementation to share the same <code>ResourceMgr</code> (which defines the namespace for resource names and containers), whereas before there was an explicit copying-and-rewriting step for captured resource handles.</p>\n<p>Could you possibly create a minimal example that exhibits the problem in both Python and Scala, and share the code for these? If you could also capture the text-format <code>GraphDef</code>, it might be possible to inspect the graphs and find the discrepancy.</p>\n<blockquote>\n<p>Also, is <code>localhost</code> the default container used when not providing and container?</p>\n</blockquote>\n<p>That's right. Are you using the <code>container</code> attr in your code? (It should still work, but it's possible there's a bug there....)</p>", "body_text": "Hmm, what you're doing doesn't sound like it's wrong, because that's effectively what the Python version would be doing too. And the recent change should make it less likely to see a NotFound error, because it changes the function implementation to share the same ResourceMgr (which defines the namespace for resource names and containers), whereas before there was an explicit copying-and-rewriting step for captured resource handles.\nCould you possibly create a minimal example that exhibits the problem in both Python and Scala, and share the code for these? If you could also capture the text-format GraphDef, it might be possible to inspect the graphs and find the discrepancy.\n\nAlso, is localhost the default container used when not providing and container?\n\nThat's right. Are you using the container attr in your code? (It should still work, but it's possible there's a bug there....)", "body": "Hmm, what you're doing doesn't sound like it's wrong, because that's effectively what the Python version would be doing too. And the recent change should make it *less* likely to see a `NotFound` error, because it changes the function implementation to share the same `ResourceMgr` (which defines the namespace for resource names and containers), whereas before there was an explicit copying-and-rewriting step for captured resource handles.\r\n\r\nCould you possibly create a minimal example that exhibits the problem in both Python and Scala, and share the code for these? If you could also capture the text-format `GraphDef`, it might be possible to inspect the graphs and find the discrepancy.\r\n\r\n> Also, is `localhost` the default container used when not providing and container?\r\n\r\nThat's right. Are you using the `container` attr in your code? (It should still work, but it's possible there's a bug there....)"}