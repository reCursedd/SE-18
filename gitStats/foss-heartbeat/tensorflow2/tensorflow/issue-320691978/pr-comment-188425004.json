{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/188425004", "pull_request_review_id": 120401200, "id": 188425004, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODQyNTAwNA==", "diff_hunk": "@@ -64,6 +64,7 @@ cc_library(\n         # This define (mostly) guarantees we don't link any problematic\n         # code. We use it, but we do not rely on it, as evidenced above.\n         \"EIGEN_MPL2_ONLY\",\n+        \"EIGEN_MAX_ALIGN_BYTES=64\",", "path": "third_party/eigen.BUILD", "position": 4, "original_position": 4, "commit_id": "8ced05bfe0317047c0467b18d4e374b49e931cfe", "original_commit_id": "8ced05bfe0317047c0467b18d4e374b49e931cfe", "user": {"login": "markdryan", "id": 984073, "node_id": "MDQ6VXNlcjk4NDA3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/984073?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markdryan", "html_url": "https://github.com/markdryan", "followers_url": "https://api.github.com/users/markdryan/followers", "following_url": "https://api.github.com/users/markdryan/following{/other_user}", "gists_url": "https://api.github.com/users/markdryan/gists{/gist_id}", "starred_url": "https://api.github.com/users/markdryan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markdryan/subscriptions", "organizations_url": "https://api.github.com/users/markdryan/orgs", "repos_url": "https://api.github.com/users/markdryan/repos", "events_url": "https://api.github.com/users/markdryan/events{/privacy}", "received_events_url": "https://api.github.com/users/markdryan/received_events", "type": "User", "site_admin": false}, "body": "The NaN failures seemed to be caused by a bug in eigen as reported here (https://github.com/tensorflow/tensorflow/issues/18718).  Updating eigen locally to the latest version fixed these issues for me.  However, even with this patch and an updated eigen, I'm still getting some unit test failures on AVX512, which I have yet to investigate.\r\n\r\nRegarding this PR, I'm currently trying to understand why the compiler options specified on the bazel build command, e.g., -copt=-march=native, get applied to some, but not all c++ targets.", "created_at": "2018-05-15T20:26:46Z", "updated_at": "2018-05-15T20:26:46Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/19121#discussion_r188425004", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/19121", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/188425004"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/19121#discussion_r188425004"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/19121"}}, "body_html": "<p>The NaN failures seemed to be caused by a bug in eigen as reported here (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"316115835\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/18718\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/18718/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/18718\">#18718</a>).  Updating eigen locally to the latest version fixed these issues for me.  However, even with this patch and an updated eigen, I'm still getting some unit test failures on AVX512, which I have yet to investigate.</p>\n<p>Regarding this PR, I'm currently trying to understand why the compiler options specified on the bazel build command, e.g., -copt=-march=native, get applied to some, but not all c++ targets.</p>", "body_text": "The NaN failures seemed to be caused by a bug in eigen as reported here (#18718).  Updating eigen locally to the latest version fixed these issues for me.  However, even with this patch and an updated eigen, I'm still getting some unit test failures on AVX512, which I have yet to investigate.\nRegarding this PR, I'm currently trying to understand why the compiler options specified on the bazel build command, e.g., -copt=-march=native, get applied to some, but not all c++ targets.", "in_reply_to_id": 187668234}