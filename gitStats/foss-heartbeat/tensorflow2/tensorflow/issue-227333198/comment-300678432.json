{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/300678432", "html_url": "https://github.com/tensorflow/tensorflow/issues/9788#issuecomment-300678432", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9788", "id": 300678432, "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDY3ODQzMg==", "user": {"login": "GPrathap", "id": 7587302, "node_id": "MDQ6VXNlcjc1ODczMDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/7587302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GPrathap", "html_url": "https://github.com/GPrathap", "followers_url": "https://api.github.com/users/GPrathap/followers", "following_url": "https://api.github.com/users/GPrathap/following{/other_user}", "gists_url": "https://api.github.com/users/GPrathap/gists{/gist_id}", "starred_url": "https://api.github.com/users/GPrathap/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GPrathap/subscriptions", "organizations_url": "https://api.github.com/users/GPrathap/orgs", "repos_url": "https://api.github.com/users/GPrathap/repos", "events_url": "https://api.github.com/users/GPrathap/events{/privacy}", "received_events_url": "https://api.github.com/users/GPrathap/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-11T04:21:10Z", "updated_at": "2017-05-11T04:21:10Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=49262\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jart\">@jart</a>  it returns <strong>aarch64</strong>  when I type<code> uname -m</code>. I have done this because <a href=\"https://github.com/bazelbuild/bazel/blob/0.4.4/tools/cpp/cc_configure.bzl#L145\">cc_configure.bzl</a> in here, it tries to execute <code>uname -m</code> then if it gives <strong>aarch64</strong> that  function should return <strong>arm</strong>. So answer to your question is yes. It is being used arm processor.</p>\n<p>I think <a href=\"https://github.com/bazelbuild/bazel/commit/e59d3a00ad4861c5e64ef90860d56316377bd50e\">this commit </a>will resolve the issue. Will try and let you know. Thanks for the suggestion.</p>", "body_text": "@jart  it returns aarch64  when I type uname -m. I have done this because cc_configure.bzl in here, it tries to execute uname -m then if it gives aarch64 that  function should return arm. So answer to your question is yes. It is being used arm processor.\nI think this commit will resolve the issue. Will try and let you know. Thanks for the suggestion.", "body": "@jart  it returns **aarch64**  when I type` uname -m`. I have done this because [cc_configure.bzl](https://github.com/bazelbuild/bazel/blob/0.4.4/tools/cpp/cc_configure.bzl#L145) in here, it tries to execute `uname -m` then if it gives **aarch64** that  function should return **arm**. So answer to your question is yes. It is being used arm processor.  \r\n\r\nI think [this commit ](https://github.com/bazelbuild/bazel/commit/e59d3a00ad4861c5e64ef90860d56316377bd50e)will resolve the issue. Will try and let you know. Thanks for the suggestion.   "}