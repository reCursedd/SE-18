{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/311905951", "html_url": "https://github.com/tensorflow/tensorflow/pull/10629#issuecomment-311905951", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10629", "id": 311905951, "node_id": "MDEyOklzc3VlQ29tbWVudDMxMTkwNTk1MQ==", "user": {"login": "byronyi", "id": 2613663, "node_id": "MDQ6VXNlcjI2MTM2NjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/2613663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/byronyi", "html_url": "https://github.com/byronyi", "followers_url": "https://api.github.com/users/byronyi/followers", "following_url": "https://api.github.com/users/byronyi/following{/other_user}", "gists_url": "https://api.github.com/users/byronyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/byronyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/byronyi/subscriptions", "organizations_url": "https://api.github.com/users/byronyi/orgs", "repos_url": "https://api.github.com/users/byronyi/repos", "events_url": "https://api.github.com/users/byronyi/events{/privacy}", "received_events_url": "https://api.github.com/users/byronyi/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-29T08:58:45Z", "updated_at": "2017-06-29T09:16:35Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=15676913\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/poxvoculi\">@poxvoculi</a> This is a primer patch to a larger one that tries to implement NIC-compatible host allocator and device memory allocator for RDMA (with GPU direct). We had a similar design to current contrib/verbs implementation but we would like to avoid memory copies at all. Our initial prototype shows that the overhead of ad-hoc memory registration is noticeable, and the best solution seems to be allocating relevant tensor buffers from a RDMA capable memory pool (with memory window registration).</p>", "body_text": "@poxvoculi This is a primer patch to a larger one that tries to implement NIC-compatible host allocator and device memory allocator for RDMA (with GPU direct). We had a similar design to current contrib/verbs implementation but we would like to avoid memory copies at all. Our initial prototype shows that the overhead of ad-hoc memory registration is noticeable, and the best solution seems to be allocating relevant tensor buffers from a RDMA capable memory pool (with memory window registration).", "body": "@poxvoculi This is a primer patch to a larger one that tries to implement NIC-compatible host allocator and device memory allocator for RDMA (with GPU direct). We had a similar design to current contrib/verbs implementation but we would like to avoid memory copies at all. Our initial prototype shows that the overhead of ad-hoc memory registration is noticeable, and the best solution seems to be allocating relevant tensor buffers from a RDMA capable memory pool (with memory window registration)."}