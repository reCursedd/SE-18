{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/224724157", "html_url": "https://github.com/tensorflow/tensorflow/issues/1803#issuecomment-224724157", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1803", "id": 224724157, "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDcyNDE1Nw==", "user": {"login": "girving", "id": 70511, "node_id": "MDQ6VXNlcjcwNTEx", "avatar_url": "https://avatars1.githubusercontent.com/u/70511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/girving", "html_url": "https://github.com/girving", "followers_url": "https://api.github.com/users/girving/followers", "following_url": "https://api.github.com/users/girving/following{/other_user}", "gists_url": "https://api.github.com/users/girving/gists{/gist_id}", "starred_url": "https://api.github.com/users/girving/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/girving/subscriptions", "organizations_url": "https://api.github.com/users/girving/orgs", "repos_url": "https://api.github.com/users/girving/repos", "events_url": "https://api.github.com/users/girving/events{/privacy}", "received_events_url": "https://api.github.com/users/girving/received_events", "type": "User", "site_admin": false}, "created_at": "2016-06-08T20:54:06Z", "updated_at": "2016-06-08T20:54:06Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6556983\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/anuragkr90\">@anuragkr90</a>: A floating point exception typically means integer division by zero.  Could you recompile the code in debug (pass <code>-c dbg</code> to Bazel) and rerun gdb to see where it's dividing by zero?  Otherwise we'll probably need a minimized test case for reproduction purposes.</p>", "body_text": "@anuragkr90: A floating point exception typically means integer division by zero.  Could you recompile the code in debug (pass -c dbg to Bazel) and rerun gdb to see where it's dividing by zero?  Otherwise we'll probably need a minimized test case for reproduction purposes.", "body": "@anuragkr90: A floating point exception typically means integer division by zero.  Could you recompile the code in debug (pass `-c dbg` to Bazel) and rerun gdb to see where it's dividing by zero?  Otherwise we'll probably need a minimized test case for reproduction purposes.\n"}