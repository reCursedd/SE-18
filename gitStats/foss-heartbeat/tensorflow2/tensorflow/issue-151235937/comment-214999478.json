{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/214999478", "html_url": "https://github.com/tensorflow/tensorflow/issues/2118#issuecomment-214999478", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2118", "id": 214999478, "node_id": "MDEyOklzc3VlQ29tbWVudDIxNDk5OTQ3OA==", "user": {"login": "ziky90", "id": 1810839, "node_id": "MDQ6VXNlcjE4MTA4Mzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1810839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ziky90", "html_url": "https://github.com/ziky90", "followers_url": "https://api.github.com/users/ziky90/followers", "following_url": "https://api.github.com/users/ziky90/following{/other_user}", "gists_url": "https://api.github.com/users/ziky90/gists{/gist_id}", "starred_url": "https://api.github.com/users/ziky90/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ziky90/subscriptions", "organizations_url": "https://api.github.com/users/ziky90/orgs", "repos_url": "https://api.github.com/users/ziky90/repos", "events_url": "https://api.github.com/users/ziky90/events{/privacy}", "received_events_url": "https://api.github.com/users/ziky90/received_events", "type": "User", "site_admin": false}, "created_at": "2016-04-27T07:56:05Z", "updated_at": "2016-04-27T10:22:48Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=70511\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/girving\">@girving</a> I am still not sure why shape is ambiguous with <code>stride &gt; 1</code>? Is this statement only valid for <code>padding=VALID</code> and <code>stride&gt;1</code>?</p>\n<p>Giving particular example:<br>\nFor example let's say that I have <code>stride=32</code>, <code>kernel=64</code> and <code>padding=SAME</code> and <code>value_w=value_h=16</code>. Then <code>output_shape</code> must be <code>[b, 544, 544, c]</code>. I don't see how I could get different <code>output_shape</code>.</p>\n<p><strong>EDIT:</strong><br>\nI was trying to play a bit around with this, but I still have not found the case where <code>output_shape</code> would make sense.<br>\nwhen I put there some that is different than computed by the formula, I'm getting:<br>\n<code>InvalidArgumentError: Conv2DBackpropInput: Number of rows of out_backprop doesn't match computed:</code></p>", "body_text": "@girving I am still not sure why shape is ambiguous with stride > 1? Is this statement only valid for padding=VALID and stride>1?\nGiving particular example:\nFor example let's say that I have stride=32, kernel=64 and padding=SAME and value_w=value_h=16. Then output_shape must be [b, 544, 544, c]. I don't see how I could get different output_shape.\nEDIT:\nI was trying to play a bit around with this, but I still have not found the case where output_shape would make sense.\nwhen I put there some that is different than computed by the formula, I'm getting:\nInvalidArgumentError: Conv2DBackpropInput: Number of rows of out_backprop doesn't match computed:", "body": "@girving I am still not sure why shape is ambiguous with `stride > 1`? Is this statement only valid for `padding=VALID` and `stride>1`?\n\nGiving particular example:\nFor example let's say that I have `stride=32`, `kernel=64` and `padding=SAME` and `value_w=value_h=16`. Then `output_shape` must be `[b, 544, 544, c]`. I don't see how I could get different `output_shape`.\n\n**EDIT:**\nI was trying to play a bit around with this, but I still have not found the case where `output_shape` would make sense.\nwhen I put there some that is different than computed by the formula, I'm getting:\n`InvalidArgumentError: Conv2DBackpropInput: Number of rows of out_backprop doesn't match computed:`\n"}