{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/384648670", "html_url": "https://github.com/tensorflow/tensorflow/issues/17485#issuecomment-384648670", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17485", "id": 384648670, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDY0ODY3MA==", "user": {"login": "geometrikal", "id": 1187528, "node_id": "MDQ6VXNlcjExODc1Mjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1187528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geometrikal", "html_url": "https://github.com/geometrikal", "followers_url": "https://api.github.com/users/geometrikal/followers", "following_url": "https://api.github.com/users/geometrikal/following{/other_user}", "gists_url": "https://api.github.com/users/geometrikal/gists{/gist_id}", "starred_url": "https://api.github.com/users/geometrikal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geometrikal/subscriptions", "organizations_url": "https://api.github.com/users/geometrikal/orgs", "repos_url": "https://api.github.com/users/geometrikal/repos", "events_url": "https://api.github.com/users/geometrikal/events{/privacy}", "received_events_url": "https://api.github.com/users/geometrikal/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-26T13:52:56Z", "updated_at": "2018-04-26T14:02:27Z", "author_association": "NONE", "body_html": "<p>I have the same issue with tf.contrib.image.rotate on TF 1.7.0<br>\nWindows 10<br>\nPython 3.6<br>\nCuda 9<br>\ncuDNN 7</p>\n<p>For pre-processing, wrapping it with tf.data.Dataset it works, presumably because it is on the CPU?</p>\n<pre><code>import numpy as np\nimport tensorflow as tf\n\nbatch_size, image_size, channels = 1, 32, 1\n\ndata = np.zeros(\n    shape=(batch_size, image_size, image_size, channels),\n    dtype=np.float32)\n\ndata_node = tf.placeholder(\n    shape=(batch_size, image_size, image_size, channels),\n    dtype=tf.float32)\n\nidentity = tf.constant([1, 0, 0, 0, 1, 0, 0, 0], dtype=tf.float32)\ntransform = tf.tile(tf.expand_dims(identity, 0), [batch_size, 1])\n# data_node_transformed = tf.contrib.image.transform(data_node, transform)\n\ndata = tf.data.Dataset.from_tensor_slices(data)\ndata = data.map(lambda x: tf.contrib.image.transform(x, transform))\ndata = data.batch(1)\niterator = data.make_one_shot_iterator()\nnext_element = iterator.get_next()\n\nwith tf.Session() as session:\n    data_t = session.run(next_element)\n</code></pre>", "body_text": "I have the same issue with tf.contrib.image.rotate on TF 1.7.0\nWindows 10\nPython 3.6\nCuda 9\ncuDNN 7\nFor pre-processing, wrapping it with tf.data.Dataset it works, presumably because it is on the CPU?\nimport numpy as np\nimport tensorflow as tf\n\nbatch_size, image_size, channels = 1, 32, 1\n\ndata = np.zeros(\n    shape=(batch_size, image_size, image_size, channels),\n    dtype=np.float32)\n\ndata_node = tf.placeholder(\n    shape=(batch_size, image_size, image_size, channels),\n    dtype=tf.float32)\n\nidentity = tf.constant([1, 0, 0, 0, 1, 0, 0, 0], dtype=tf.float32)\ntransform = tf.tile(tf.expand_dims(identity, 0), [batch_size, 1])\n# data_node_transformed = tf.contrib.image.transform(data_node, transform)\n\ndata = tf.data.Dataset.from_tensor_slices(data)\ndata = data.map(lambda x: tf.contrib.image.transform(x, transform))\ndata = data.batch(1)\niterator = data.make_one_shot_iterator()\nnext_element = iterator.get_next()\n\nwith tf.Session() as session:\n    data_t = session.run(next_element)", "body": "I have the same issue with tf.contrib.image.rotate on TF 1.7.0\r\nWindows 10\r\nPython 3.6\r\nCuda 9\r\ncuDNN 7\r\n\r\nFor pre-processing, wrapping it with tf.data.Dataset it works, presumably because it is on the CPU?\r\n\r\n    import numpy as np\r\n    import tensorflow as tf\r\n    \r\n    batch_size, image_size, channels = 1, 32, 1\r\n    \r\n    data = np.zeros(\r\n        shape=(batch_size, image_size, image_size, channels),\r\n        dtype=np.float32)\r\n    \r\n    data_node = tf.placeholder(\r\n        shape=(batch_size, image_size, image_size, channels),\r\n        dtype=tf.float32)\r\n    \r\n    identity = tf.constant([1, 0, 0, 0, 1, 0, 0, 0], dtype=tf.float32)\r\n    transform = tf.tile(tf.expand_dims(identity, 0), [batch_size, 1])\r\n    # data_node_transformed = tf.contrib.image.transform(data_node, transform)\r\n    \r\n    data = tf.data.Dataset.from_tensor_slices(data)\r\n    data = data.map(lambda x: tf.contrib.image.transform(x, transform))\r\n    data = data.batch(1)\r\n    iterator = data.make_one_shot_iterator()\r\n    next_element = iterator.get_next()\r\n    \r\n    with tf.Session() as session:\r\n        data_t = session.run(next_element)\r\n\r\n"}