{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17485", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17485/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17485/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17485/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17485", "id": 302749773, "node_id": "MDU6SXNzdWUzMDI3NDk3NzM=", "number": 17485, "title": "tf.contrib.image.transform crashes under Windows when CUDA is enabled", "user": {"login": "hrschubert", "id": 37112180, "node_id": "MDQ6VXNlcjM3MTEyMTgw", "avatar_url": "https://avatars2.githubusercontent.com/u/37112180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hrschubert", "html_url": "https://github.com/hrschubert", "followers_url": "https://api.github.com/users/hrschubert/followers", "following_url": "https://api.github.com/users/hrschubert/following{/other_user}", "gists_url": "https://api.github.com/users/hrschubert/gists{/gist_id}", "starred_url": "https://api.github.com/users/hrschubert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hrschubert/subscriptions", "organizations_url": "https://api.github.com/users/hrschubert/orgs", "repos_url": "https://api.github.com/users/hrschubert/repos", "events_url": "https://api.github.com/users/hrschubert/events{/privacy}", "received_events_url": "https://api.github.com/users/hrschubert/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 24, "created_at": "2018-03-06T15:37:24Z", "updated_at": "2018-07-25T20:47:24Z", "closed_at": null, "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:<br>\nYes. A minimal example reproducing the bug is provided below.</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:<br>\nWindows 10 (x64)</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:<br>\nBinary installed using <code>pip install tensorflow-gpu</code></li>\n<li><strong>TensorFlow version (use command below)</strong>:<br>\nb'unknown' 1.6.0 (also tested on b'unknown' 1.4.0)</li>\n<li><strong>Python version</strong>: 3.6</li>\n<li><strong>Bazel version (if compiling from source)</strong>: N/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: N/A</li>\n<li><strong>CUDA/cuDNN version</strong>:<br>\nCUDA 9.0.176 / cuDNN 7.0.5<br>\nCUDA 8.0.61 / cuDNN 6.14.11</li>\n<li><strong>GPU model and memory</strong>:<br>\n(device: 0, name: GeForce GTX 970M, pci bus id: 0000:01:00.0, compute capability: 5.2, memory: 3.00GiB)<br>\n(device: 0, name: Quadro M1200, pci bus id: 0000:01:00.0, compute capability: 5.0, memory: 4.00GiB)</li>\n<li><strong>Exact command to reproduce</strong>: python example.py (see below)</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>The function tf.contrib.image.transform crashes when CUDA is enabled under Windows. It produces the following errors: <code>CUDA_ERROR_ILLEGAL_INSTRUCTION</code> on tensorflow 1.6 or <code>CUDA_ERROR_LAUNCH_FAILED</code> on tensorflow 1.4.<br>\nHowever, it functions correctly when CUDA is disabled (by setting <em>CUDA_VISIBLE_DEVICES</em> to -1).</p>\n<p>I tested a variation of different parameters (such as varying the batch size, image sizes, and number of channels), but the behavior stays the same. In addition I reproduced the same error on a different machine with an older tensorflow version.</p>\n<h3>Source code / logs</h3>\n<ul>\n<li><strong>Code</strong>:</li>\n</ul>\n<pre><code>import numpy as np\nimport tensorflow as tf\n\nbatch_size, image_size, channels = 1, 32, 1\n\ndata = np.zeros(\n    shape=(batch_size, image_size, image_size, channels), \n    dtype=np.float32)\n\ndata_node = tf.placeholder(\n    shape=(batch_size, image_size, image_size, channels),\n    dtype=tf.float32)\n\nidentity = tf.constant([1, 0, 0, 0, 1, 0, 0, 0], dtype=tf.float32)\ntransform = tf.tile(tf.expand_dims(identity, 0), [batch_size, 1])\ndata_node_transformed = tf.contrib.image.transform(data_node, transform)\n\ndata_t = tf.Session().run([data_node_transformed], feed_dict={data_node: data})\n</code></pre>\n<ul>\n<li>\n<p><strong>Console Output</strong>:</p>\n<p>Output with tensorflow 1.6 (with GeForce GTX 970M,) :</p>\n</li>\n</ul>\n<pre><code>2018-03-06 15:42:21.578078: I C:\\tf_jenkins\\workspace\\rel-win\\M\\windows-gpu\\PY\\36\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1212] Found device 0 with properties:\nname: GeForce GTX 970M major: 5 minor: 2 memoryClockRate(GHz): 1.038\npciBusID: 0000:01:00.0\ntotalMemory: 3.00GiB freeMemory: 2.48GiB\n2018-03-06 15:42:21.578310: I C:\\tf_jenkins\\workspace\\rel-win\\M\\windows-gpu\\PY\\36\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1312] Adding visible gpu devices: 0\n2018-03-06 15:42:21.890290: I C:\\tf_jenkins\\workspace\\rel-win\\M\\windows-gpu\\PY\\36\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:993] Creating TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 2192 MB memory) -&gt; physical GPU (device: 0, name: GeForce GTX 970M, pci bus id: 0000:01:00.0, compute capability: 5.2)\n2018-03-06 15:42:22.101031: E C:\\tf_jenkins\\workspace\\rel-win\\M\\windows-gpu\\PY\\36\\tensorflow\\stream_executor\\cuda\\cuda_event.cc:49] Error polling for event status: failed to query event: CUDA_ERROR_ILLEGAL_INSTRUCTION\n2018-03-06 15:42:22.101032: E C:\\tf_jenkins\\workspace\\rel-win\\M\\windows-gpu\\PY\\36\\tensorflow\\stream_executor\\cuda\\cuda_driver.cc:1110] could not synchronize on CUDA context: CUDA_ERROR_ILLEGAL_INSTRUCTION ::\n2018-03-06 15:42:22.101185: F C:\\tf_jenkins\\workspace\\rel-win\\M\\windows-gpu\\PY\\36\\tensorflow\\core\\common_runtime\\gpu\\gpu_event_mgr.cc:203] Unexpected Event status: 1\n</code></pre>\n<p>Output with tensorflow 1.4 (with Quadro M1200):</p>\n<pre><code>2018-03-06 15:31:17.800588: I C:\\tf_jenkins\\home\\workspace\\rel\u2011win\\M\\windows\u2011gpu\\PY\\36\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1030] Found device 0 with properties: \nname: Quadro M1200 major: 5 minor: 0 memoryClockRate(GHz): 1.148\npciBusID: 0000:01:00.0\ntotalMemory: 4.00GiB freeMemory: 3.35GiB\n2018-03-06 15:31:17.803815: I C:\\tf_jenkins\\home\\workspace\\rel\u2011win\\M\\windows\u2011gpu\\PY\\36\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1120] Creating TensorFlow device (/device:GPU:0) \u2011&gt; (device: 0, name: Quadro M1200, pci bus id: 0000:01:00.0, compute capability: 5.0)\n2018-03-06 15:31:18.731252: E C:\\tf_jenkins\\home\\workspace\\rel\u2011win\\M\\windows\u2011gpu\\PY\\36\\tensorflow\\stream_executor\\cuda\\cuda_driver.cc:1110] could not synchronize on CUDA context: CUDA_ERROR_LAUNCH_FAILED :: No stack trace available\n2018-03-06 15:31:18.731258: E C:\\tf_jenkins\\home\\workspace\\rel\u2011win\\M\\windows\u2011gpu\\PY\\36\\tensorflow\\stream_executor\\cuda\\cuda_event.cc:49] Error polling for event status: failed to query event: CUDA_ERROR_LAUNCH_FAILED\n2018-03-06 15:31:18.733458: F C:\\tf_jenkins\\home\\workspace\\rel\u2011win\\M\\windows\u2011gpu\\PY\\36\\tensorflow\\core\\common_runtime\\gpu\\gpu_event_mgr.cc:203] Unexpected Event status: 1\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nYes. A minimal example reproducing the bug is provided below.\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nWindows 10 (x64)\nTensorFlow installed from (source or binary):\nBinary installed using pip install tensorflow-gpu\nTensorFlow version (use command below):\nb'unknown' 1.6.0 (also tested on b'unknown' 1.4.0)\nPython version: 3.6\nBazel version (if compiling from source): N/A\nGCC/Compiler version (if compiling from source): N/A\nCUDA/cuDNN version:\nCUDA 9.0.176 / cuDNN 7.0.5\nCUDA 8.0.61 / cuDNN 6.14.11\nGPU model and memory:\n(device: 0, name: GeForce GTX 970M, pci bus id: 0000:01:00.0, compute capability: 5.2, memory: 3.00GiB)\n(device: 0, name: Quadro M1200, pci bus id: 0000:01:00.0, compute capability: 5.0, memory: 4.00GiB)\nExact command to reproduce: python example.py (see below)\n\nDescribe the problem\nThe function tf.contrib.image.transform crashes when CUDA is enabled under Windows. It produces the following errors: CUDA_ERROR_ILLEGAL_INSTRUCTION on tensorflow 1.6 or CUDA_ERROR_LAUNCH_FAILED on tensorflow 1.4.\nHowever, it functions correctly when CUDA is disabled (by setting CUDA_VISIBLE_DEVICES to -1).\nI tested a variation of different parameters (such as varying the batch size, image sizes, and number of channels), but the behavior stays the same. In addition I reproduced the same error on a different machine with an older tensorflow version.\nSource code / logs\n\nCode:\n\nimport numpy as np\nimport tensorflow as tf\n\nbatch_size, image_size, channels = 1, 32, 1\n\ndata = np.zeros(\n    shape=(batch_size, image_size, image_size, channels), \n    dtype=np.float32)\n\ndata_node = tf.placeholder(\n    shape=(batch_size, image_size, image_size, channels),\n    dtype=tf.float32)\n\nidentity = tf.constant([1, 0, 0, 0, 1, 0, 0, 0], dtype=tf.float32)\ntransform = tf.tile(tf.expand_dims(identity, 0), [batch_size, 1])\ndata_node_transformed = tf.contrib.image.transform(data_node, transform)\n\ndata_t = tf.Session().run([data_node_transformed], feed_dict={data_node: data})\n\n\n\nConsole Output:\nOutput with tensorflow 1.6 (with GeForce GTX 970M,) :\n\n\n2018-03-06 15:42:21.578078: I C:\\tf_jenkins\\workspace\\rel-win\\M\\windows-gpu\\PY\\36\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1212] Found device 0 with properties:\nname: GeForce GTX 970M major: 5 minor: 2 memoryClockRate(GHz): 1.038\npciBusID: 0000:01:00.0\ntotalMemory: 3.00GiB freeMemory: 2.48GiB\n2018-03-06 15:42:21.578310: I C:\\tf_jenkins\\workspace\\rel-win\\M\\windows-gpu\\PY\\36\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1312] Adding visible gpu devices: 0\n2018-03-06 15:42:21.890290: I C:\\tf_jenkins\\workspace\\rel-win\\M\\windows-gpu\\PY\\36\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:993] Creating TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 2192 MB memory) -> physical GPU (device: 0, name: GeForce GTX 970M, pci bus id: 0000:01:00.0, compute capability: 5.2)\n2018-03-06 15:42:22.101031: E C:\\tf_jenkins\\workspace\\rel-win\\M\\windows-gpu\\PY\\36\\tensorflow\\stream_executor\\cuda\\cuda_event.cc:49] Error polling for event status: failed to query event: CUDA_ERROR_ILLEGAL_INSTRUCTION\n2018-03-06 15:42:22.101032: E C:\\tf_jenkins\\workspace\\rel-win\\M\\windows-gpu\\PY\\36\\tensorflow\\stream_executor\\cuda\\cuda_driver.cc:1110] could not synchronize on CUDA context: CUDA_ERROR_ILLEGAL_INSTRUCTION ::\n2018-03-06 15:42:22.101185: F C:\\tf_jenkins\\workspace\\rel-win\\M\\windows-gpu\\PY\\36\\tensorflow\\core\\common_runtime\\gpu\\gpu_event_mgr.cc:203] Unexpected Event status: 1\n\nOutput with tensorflow 1.4 (with Quadro M1200):\n2018-03-06 15:31:17.800588: I C:\\tf_jenkins\\home\\workspace\\rel\u2011win\\M\\windows\u2011gpu\\PY\\36\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1030] Found device 0 with properties: \nname: Quadro M1200 major: 5 minor: 0 memoryClockRate(GHz): 1.148\npciBusID: 0000:01:00.0\ntotalMemory: 4.00GiB freeMemory: 3.35GiB\n2018-03-06 15:31:17.803815: I C:\\tf_jenkins\\home\\workspace\\rel\u2011win\\M\\windows\u2011gpu\\PY\\36\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1120] Creating TensorFlow device (/device:GPU:0) \u2011> (device: 0, name: Quadro M1200, pci bus id: 0000:01:00.0, compute capability: 5.0)\n2018-03-06 15:31:18.731252: E C:\\tf_jenkins\\home\\workspace\\rel\u2011win\\M\\windows\u2011gpu\\PY\\36\\tensorflow\\stream_executor\\cuda\\cuda_driver.cc:1110] could not synchronize on CUDA context: CUDA_ERROR_LAUNCH_FAILED :: No stack trace available\n2018-03-06 15:31:18.731258: E C:\\tf_jenkins\\home\\workspace\\rel\u2011win\\M\\windows\u2011gpu\\PY\\36\\tensorflow\\stream_executor\\cuda\\cuda_event.cc:49] Error polling for event status: failed to query event: CUDA_ERROR_LAUNCH_FAILED\n2018-03-06 15:31:18.733458: F C:\\tf_jenkins\\home\\workspace\\rel\u2011win\\M\\windows\u2011gpu\\PY\\36\\tensorflow\\core\\common_runtime\\gpu\\gpu_event_mgr.cc:203] Unexpected Event status: 1", "body": "\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nYes. A minimal example reproducing the bug is provided below.\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nWindows 10 (x64)\r\n- **TensorFlow installed from (source or binary)**: \r\nBinary installed using `pip install tensorflow-gpu`\r\n- **TensorFlow version (use command below)**: \r\nb'unknown' 1.6.0 (also tested on b'unknown' 1.4.0)\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**:  \r\n  CUDA 9.0.176 / cuDNN 7.0.5\r\n  CUDA 8.0.61 / cuDNN 6.14.11\r\n- **GPU model and memory**:\r\n(device: 0, name: GeForce GTX 970M, pci bus id: 0000:01:00.0, compute capability: 5.2, memory: 3.00GiB)\r\n(device: 0, name: Quadro M1200, pci bus id: 0000:01:00.0, compute capability: 5.0, memory: 4.00GiB)\r\n- **Exact command to reproduce**: python example.py (see below)\r\n\r\n\r\n### Describe the problem\r\nThe function tf.contrib.image.transform crashes when CUDA is enabled under Windows. It produces the following errors: `CUDA_ERROR_ILLEGAL_INSTRUCTION` on tensorflow 1.6 or `CUDA_ERROR_LAUNCH_FAILED` on tensorflow 1.4.\r\nHowever, it functions correctly when CUDA is disabled (by setting _CUDA_VISIBLE_DEVICES_ to -1). \r\n\r\nI tested a variation of different parameters (such as varying the batch size, image sizes, and number of channels), but the behavior stays the same. In addition I reproduced the same error on a different machine with an older tensorflow version.\r\n\r\n### Source code / logs\r\n- **Code**:\r\n```\r\nimport numpy as np\r\nimport tensorflow as tf\r\n\r\nbatch_size, image_size, channels = 1, 32, 1\r\n\r\ndata = np.zeros(\r\n    shape=(batch_size, image_size, image_size, channels), \r\n    dtype=np.float32)\r\n\r\ndata_node = tf.placeholder(\r\n    shape=(batch_size, image_size, image_size, channels),\r\n    dtype=tf.float32)\r\n\r\nidentity = tf.constant([1, 0, 0, 0, 1, 0, 0, 0], dtype=tf.float32)\r\ntransform = tf.tile(tf.expand_dims(identity, 0), [batch_size, 1])\r\ndata_node_transformed = tf.contrib.image.transform(data_node, transform)\r\n\r\ndata_t = tf.Session().run([data_node_transformed], feed_dict={data_node: data})\r\n```\r\n- **Console Output**:\r\n\r\n  Output with tensorflow 1.6 (with GeForce GTX 970M,) :\r\n\r\n```\r\n2018-03-06 15:42:21.578078: I C:\\tf_jenkins\\workspace\\rel-win\\M\\windows-gpu\\PY\\36\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1212] Found device 0 with properties:\r\nname: GeForce GTX 970M major: 5 minor: 2 memoryClockRate(GHz): 1.038\r\npciBusID: 0000:01:00.0\r\ntotalMemory: 3.00GiB freeMemory: 2.48GiB\r\n2018-03-06 15:42:21.578310: I C:\\tf_jenkins\\workspace\\rel-win\\M\\windows-gpu\\PY\\36\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1312] Adding visible gpu devices: 0\r\n2018-03-06 15:42:21.890290: I C:\\tf_jenkins\\workspace\\rel-win\\M\\windows-gpu\\PY\\36\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:993] Creating TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 2192 MB memory) -> physical GPU (device: 0, name: GeForce GTX 970M, pci bus id: 0000:01:00.0, compute capability: 5.2)\r\n2018-03-06 15:42:22.101031: E C:\\tf_jenkins\\workspace\\rel-win\\M\\windows-gpu\\PY\\36\\tensorflow\\stream_executor\\cuda\\cuda_event.cc:49] Error polling for event status: failed to query event: CUDA_ERROR_ILLEGAL_INSTRUCTION\r\n2018-03-06 15:42:22.101032: E C:\\tf_jenkins\\workspace\\rel-win\\M\\windows-gpu\\PY\\36\\tensorflow\\stream_executor\\cuda\\cuda_driver.cc:1110] could not synchronize on CUDA context: CUDA_ERROR_ILLEGAL_INSTRUCTION ::\r\n2018-03-06 15:42:22.101185: F C:\\tf_jenkins\\workspace\\rel-win\\M\\windows-gpu\\PY\\36\\tensorflow\\core\\common_runtime\\gpu\\gpu_event_mgr.cc:203] Unexpected Event status: 1\r\n```\r\n\r\n  Output with tensorflow 1.4 (with Quadro M1200):\r\n\r\n```\r\n2018-03-06 15:31:17.800588: I C:\\tf_jenkins\\home\\workspace\\rel\u2011win\\M\\windows\u2011gpu\\PY\\36\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1030] Found device 0 with properties: \r\nname: Quadro M1200 major: 5 minor: 0 memoryClockRate(GHz): 1.148\r\npciBusID: 0000:01:00.0\r\ntotalMemory: 4.00GiB freeMemory: 3.35GiB\r\n2018-03-06 15:31:17.803815: I C:\\tf_jenkins\\home\\workspace\\rel\u2011win\\M\\windows\u2011gpu\\PY\\36\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1120] Creating TensorFlow device (/device:GPU:0) \u2011> (device: 0, name: Quadro M1200, pci bus id: 0000:01:00.0, compute capability: 5.0)\r\n2018-03-06 15:31:18.731252: E C:\\tf_jenkins\\home\\workspace\\rel\u2011win\\M\\windows\u2011gpu\\PY\\36\\tensorflow\\stream_executor\\cuda\\cuda_driver.cc:1110] could not synchronize on CUDA context: CUDA_ERROR_LAUNCH_FAILED :: No stack trace available\r\n2018-03-06 15:31:18.731258: E C:\\tf_jenkins\\home\\workspace\\rel\u2011win\\M\\windows\u2011gpu\\PY\\36\\tensorflow\\stream_executor\\cuda\\cuda_event.cc:49] Error polling for event status: failed to query event: CUDA_ERROR_LAUNCH_FAILED\r\n2018-03-06 15:31:18.733458: F C:\\tf_jenkins\\home\\workspace\\rel\u2011win\\M\\windows\u2011gpu\\PY\\36\\tensorflow\\core\\common_runtime\\gpu\\gpu_event_mgr.cc:203] Unexpected Event status: 1\r\n```"}