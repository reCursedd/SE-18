{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/349089810", "html_url": "https://github.com/tensorflow/tensorflow/issues/12325#issuecomment-349089810", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12325", "id": 349089810, "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTA4OTgxMA==", "user": {"login": "gunan", "id": 7946809, "node_id": "MDQ6VXNlcjc5NDY4MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7946809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gunan", "html_url": "https://github.com/gunan", "followers_url": "https://api.github.com/users/gunan/followers", "following_url": "https://api.github.com/users/gunan/following{/other_user}", "gists_url": "https://api.github.com/users/gunan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gunan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gunan/subscriptions", "organizations_url": "https://api.github.com/users/gunan/orgs", "repos_url": "https://api.github.com/users/gunan/repos", "events_url": "https://api.github.com/users/gunan/events{/privacy}", "received_events_url": "https://api.github.com/users/gunan/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-04T20:10:03Z", "updated_at": "2017-12-04T20:10:03Z", "author_association": "MEMBER", "body_html": "<p>Looks like the images generated are actually random. So I would expect the summaries generated to be slightly different: <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/kernel_tests/summary_image_op_test.py#L60\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/kernel_tests/summary_image_op_test.py#L60</a><br>\nHowever, the random functions are seeded in two places: <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/kernel_tests/summary_image_op_test.py#L53\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/kernel_tests/summary_image_op_test.py#L53</a> <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/framework/test_util.py#L618\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/framework/test_util.py#L618</a><br>\nMaybe the test is actually flaky and the random functions, even when seeded with the same numbers, generate different sequences on x86 and ppc64? Or ordering of ops are different between ppc64 and x86 so we end up with different random images.</p>\n<p>So next I tried removing the random seedsand running the test multiple times on x86 to see how flaky it is. I tried the command:</p>\n<pre><code>$ bazel test -c opt tensorflow/python/kernel_tests:summary_image_op_test --runs_per_test=1000\nINFO: Analysed target //tensorflow/python/kernel_tests:summary_image_op_test (0 packages loaded).\nINFO: Found 1 test target...\nTarget //tensorflow/python/kernel_tests:summary_image_op_test up-to-date:\n  bazel-bin/tensorflow/python/kernel_tests/summary_image_op_test\nINFO: Elapsed time: 38.523s, Critical Path: 1.86s\nINFO: Build completed successfully, 1001 total actions\n//tensorflow/python/kernel_tests:summary_image_op_test                   PASSED in 1.8s\n  Stats over 1000 runs: max = 1.8s, min = 0.7s, avg = 1.2s, dev = 0.1s\n\nExecuted 1 out of 1 test: 1 test passes.\n</code></pre>\n<p>Can someone try the above on a ppc64le machine?</p>", "body_text": "Looks like the images generated are actually random. So I would expect the summaries generated to be slightly different: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/kernel_tests/summary_image_op_test.py#L60\nHowever, the random functions are seeded in two places: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/kernel_tests/summary_image_op_test.py#L53 https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/framework/test_util.py#L618\nMaybe the test is actually flaky and the random functions, even when seeded with the same numbers, generate different sequences on x86 and ppc64? Or ordering of ops are different between ppc64 and x86 so we end up with different random images.\nSo next I tried removing the random seedsand running the test multiple times on x86 to see how flaky it is. I tried the command:\n$ bazel test -c opt tensorflow/python/kernel_tests:summary_image_op_test --runs_per_test=1000\nINFO: Analysed target //tensorflow/python/kernel_tests:summary_image_op_test (0 packages loaded).\nINFO: Found 1 test target...\nTarget //tensorflow/python/kernel_tests:summary_image_op_test up-to-date:\n  bazel-bin/tensorflow/python/kernel_tests/summary_image_op_test\nINFO: Elapsed time: 38.523s, Critical Path: 1.86s\nINFO: Build completed successfully, 1001 total actions\n//tensorflow/python/kernel_tests:summary_image_op_test                   PASSED in 1.8s\n  Stats over 1000 runs: max = 1.8s, min = 0.7s, avg = 1.2s, dev = 0.1s\n\nExecuted 1 out of 1 test: 1 test passes.\n\nCan someone try the above on a ppc64le machine?", "body": "Looks like the images generated are actually random. So I would expect the summaries generated to be slightly different: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/kernel_tests/summary_image_op_test.py#L60\r\nHowever, the random functions are seeded in two places: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/kernel_tests/summary_image_op_test.py#L53 https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/framework/test_util.py#L618\r\nMaybe the test is actually flaky and the random functions, even when seeded with the same numbers, generate different sequences on x86 and ppc64? Or ordering of ops are different between ppc64 and x86 so we end up with different random images.\r\n\r\nSo next I tried removing the random seedsand running the test multiple times on x86 to see how flaky it is. I tried the command:\r\n```\r\n$ bazel test -c opt tensorflow/python/kernel_tests:summary_image_op_test --runs_per_test=1000\r\nINFO: Analysed target //tensorflow/python/kernel_tests:summary_image_op_test (0 packages loaded).\r\nINFO: Found 1 test target...\r\nTarget //tensorflow/python/kernel_tests:summary_image_op_test up-to-date:\r\n  bazel-bin/tensorflow/python/kernel_tests/summary_image_op_test\r\nINFO: Elapsed time: 38.523s, Critical Path: 1.86s\r\nINFO: Build completed successfully, 1001 total actions\r\n//tensorflow/python/kernel_tests:summary_image_op_test                   PASSED in 1.8s\r\n  Stats over 1000 runs: max = 1.8s, min = 0.7s, avg = 1.2s, dev = 0.1s\r\n\r\nExecuted 1 out of 1 test: 1 test passes.\r\n```\r\n\r\nCan someone try the above on a ppc64le machine?"}