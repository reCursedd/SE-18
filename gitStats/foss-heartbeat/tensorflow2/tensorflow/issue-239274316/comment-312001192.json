{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/312001192", "html_url": "https://github.com/tensorflow/tensorflow/issues/11121#issuecomment-312001192", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11121", "id": 312001192, "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjAwMTE5Mg==", "user": {"login": "Thenerdstation", "id": 8702042, "node_id": "MDQ6VXNlcjg3MDIwNDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/8702042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Thenerdstation", "html_url": "https://github.com/Thenerdstation", "followers_url": "https://api.github.com/users/Thenerdstation/followers", "following_url": "https://api.github.com/users/Thenerdstation/following{/other_user}", "gists_url": "https://api.github.com/users/Thenerdstation/gists{/gist_id}", "starred_url": "https://api.github.com/users/Thenerdstation/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Thenerdstation/subscriptions", "organizations_url": "https://api.github.com/users/Thenerdstation/orgs", "repos_url": "https://api.github.com/users/Thenerdstation/repos", "events_url": "https://api.github.com/users/Thenerdstation/events{/privacy}", "received_events_url": "https://api.github.com/users/Thenerdstation/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-29T15:24:13Z", "updated_at": "2017-06-29T15:24:13Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Right, but you don't need an active session or any previously created ops/tensors to cause the error. Just calling reset_default_graph within nested graphs causes a confusing error.</p>\n<p>Just this:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\ng <span class=\"pl-k\">=</span> tf.Graph()\n<span class=\"pl-k\">with</span> g.as_default():\n  tf.reset_default_graph()</pre></div>\n<p>Also breaks with the same error.</p>\n<pre><code>---------------------------------------------------------------------------\nIndexError                                Traceback (most recent call last)\n&lt;ipython-input-1-8377d035bd16&gt; in &lt;module&gt;()\n      3 g = tf.Graph()\n      4 with g.as_default():\n----&gt; 5   tf.reset_default_graph()\n\n/usr/lib/python3.5/contextlib.py in __exit__(self, type, value, traceback)\n     64         if type is None:\n     65             try:\n---&gt; 66                 next(self.gen)\n     67             except StopIteration:\n     68                 return\n\n/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py in get_controller(self, default)\n   3813     finally:\n   3814       if self._enforce_nesting:\n-&gt; 3815         if self.stack[-1] is not default:\n   3816           raise AssertionError(\n   3817               \"Nesting violated for default stack of %s objects\"\n\nIndexError: list index out of range\n</code></pre>\n<p>I think it would be better if it actually threw the AssertionError rather than break on an index error. I'll see if I can make a PR for the fix tonight.</p>", "body_text": "Right, but you don't need an active session or any previously created ops/tensors to cause the error. Just calling reset_default_graph within nested graphs causes a confusing error.\nJust this:\nimport tensorflow as tf\n\ng = tf.Graph()\nwith g.as_default():\n  tf.reset_default_graph()\nAlso breaks with the same error.\n---------------------------------------------------------------------------\nIndexError                                Traceback (most recent call last)\n<ipython-input-1-8377d035bd16> in <module>()\n      3 g = tf.Graph()\n      4 with g.as_default():\n----> 5   tf.reset_default_graph()\n\n/usr/lib/python3.5/contextlib.py in __exit__(self, type, value, traceback)\n     64         if type is None:\n     65             try:\n---> 66                 next(self.gen)\n     67             except StopIteration:\n     68                 return\n\n/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py in get_controller(self, default)\n   3813     finally:\n   3814       if self._enforce_nesting:\n-> 3815         if self.stack[-1] is not default:\n   3816           raise AssertionError(\n   3817               \"Nesting violated for default stack of %s objects\"\n\nIndexError: list index out of range\n\nI think it would be better if it actually threw the AssertionError rather than break on an index error. I'll see if I can make a PR for the fix tonight.", "body": "Right, but you don't need an active session or any previously created ops/tensors to cause the error. Just calling reset_default_graph within nested graphs causes a confusing error.\r\n\r\nJust this:\r\n```python\r\nimport tensorflow as tf\r\n\r\ng = tf.Graph()\r\nwith g.as_default():\r\n  tf.reset_default_graph()\r\n```\r\n\r\nAlso breaks with the same error. \r\n```\r\n---------------------------------------------------------------------------\r\nIndexError                                Traceback (most recent call last)\r\n<ipython-input-1-8377d035bd16> in <module>()\r\n      3 g = tf.Graph()\r\n      4 with g.as_default():\r\n----> 5   tf.reset_default_graph()\r\n\r\n/usr/lib/python3.5/contextlib.py in __exit__(self, type, value, traceback)\r\n     64         if type is None:\r\n     65             try:\r\n---> 66                 next(self.gen)\r\n     67             except StopIteration:\r\n     68                 return\r\n\r\n/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py in get_controller(self, default)\r\n   3813     finally:\r\n   3814       if self._enforce_nesting:\r\n-> 3815         if self.stack[-1] is not default:\r\n   3816           raise AssertionError(\r\n   3817               \"Nesting violated for default stack of %s objects\"\r\n\r\nIndexError: list index out of range\r\n```\r\n\r\nI think it would be better if it actually threw the AssertionError rather than break on an index error. I'll see if I can make a PR for the fix tonight."}