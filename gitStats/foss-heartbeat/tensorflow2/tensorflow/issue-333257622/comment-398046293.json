{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/398046293", "html_url": "https://github.com/tensorflow/tensorflow/issues/20094#issuecomment-398046293", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20094", "id": 398046293, "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODA0NjI5Mw==", "user": {"login": "jopege", "id": 40358486, "node_id": "MDQ6VXNlcjQwMzU4NDg2", "avatar_url": "https://avatars0.githubusercontent.com/u/40358486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jopege", "html_url": "https://github.com/jopege", "followers_url": "https://api.github.com/users/jopege/followers", "following_url": "https://api.github.com/users/jopege/following{/other_user}", "gists_url": "https://api.github.com/users/jopege/gists{/gist_id}", "starred_url": "https://api.github.com/users/jopege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jopege/subscriptions", "organizations_url": "https://api.github.com/users/jopege/orgs", "repos_url": "https://api.github.com/users/jopege/repos", "events_url": "https://api.github.com/users/jopege/events{/privacy}", "received_events_url": "https://api.github.com/users/jopege/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-18T13:02:09Z", "updated_at": "2018-06-18T13:03:42Z", "author_association": "NONE", "body_html": "<p>Example for the workaround is to use this function (might not be perfect, but it works):</p>\n<pre><code>import tensorflow as tf\n</code></pre>\n<pre><code>def large_koord_tensor_mul(tensor1, tensor2):\n    steps = int(int(tensor1.shape[0]) / 2097152)\n    if steps == 0:\n        output = tf.matmul(tensor1, tensor2)\n    else:\n        output = tf.matmul(tensor1[0:2097152, :], tensor2)\n        for i in range(1, steps):\n            addon_output = tf.matmul(tensor1[i * 2097152:(i + 1) * 2097152, :], tensor2)\n            output = tf.concat([output, addon_output], 0)\n        addon_output = tf.matmul(tensor1[steps * 2097152:, :], tensor2)\n        output = tf.concat([output, addon_output], 0)\n    return output\n</code></pre>\n<pre><code>X=tf.ones([10+2**21,2],dtype=tf.float32)\nY=tf.constant([[1,0],[0.01,1]],dtype=tf.float32)\n\n\nmul=large_koord_tensor_mul(X,Y)\n\nsess=tf.Session()\nsess.run(tf.global_variables_initializer())\n\nresult=sess.run(mul)\nsess.close()\n\nprint(\"These are ok:\" + str(result[2**21-2:2**21,:]))\n\nprint(\"These are NOT wrong\" + str(result[2**21:2**21+2,:]))\n</code></pre>\n<h3>Result</h3>\n<p>These are ok:[[1.01 1.  ]<br>\n[1.01 1.  ]]<br>\nThese are NOT wrong[[1.01 1.  ]<br>\n[1.01 1.  ]]</p>", "body_text": "Example for the workaround is to use this function (might not be perfect, but it works):\nimport tensorflow as tf\n\ndef large_koord_tensor_mul(tensor1, tensor2):\n    steps = int(int(tensor1.shape[0]) / 2097152)\n    if steps == 0:\n        output = tf.matmul(tensor1, tensor2)\n    else:\n        output = tf.matmul(tensor1[0:2097152, :], tensor2)\n        for i in range(1, steps):\n            addon_output = tf.matmul(tensor1[i * 2097152:(i + 1) * 2097152, :], tensor2)\n            output = tf.concat([output, addon_output], 0)\n        addon_output = tf.matmul(tensor1[steps * 2097152:, :], tensor2)\n        output = tf.concat([output, addon_output], 0)\n    return output\n\nX=tf.ones([10+2**21,2],dtype=tf.float32)\nY=tf.constant([[1,0],[0.01,1]],dtype=tf.float32)\n\n\nmul=large_koord_tensor_mul(X,Y)\n\nsess=tf.Session()\nsess.run(tf.global_variables_initializer())\n\nresult=sess.run(mul)\nsess.close()\n\nprint(\"These are ok:\" + str(result[2**21-2:2**21,:]))\n\nprint(\"These are NOT wrong\" + str(result[2**21:2**21+2,:]))\n\nResult\nThese are ok:[[1.01 1.  ]\n[1.01 1.  ]]\nThese are NOT wrong[[1.01 1.  ]\n[1.01 1.  ]]", "body": "Example for the workaround is to use this function (might not be perfect, but it works):\r\n```\r\nimport tensorflow as tf\r\n```\r\n```\r\ndef large_koord_tensor_mul(tensor1, tensor2):\r\n    steps = int(int(tensor1.shape[0]) / 2097152)\r\n    if steps == 0:\r\n        output = tf.matmul(tensor1, tensor2)\r\n    else:\r\n        output = tf.matmul(tensor1[0:2097152, :], tensor2)\r\n        for i in range(1, steps):\r\n            addon_output = tf.matmul(tensor1[i * 2097152:(i + 1) * 2097152, :], tensor2)\r\n            output = tf.concat([output, addon_output], 0)\r\n        addon_output = tf.matmul(tensor1[steps * 2097152:, :], tensor2)\r\n        output = tf.concat([output, addon_output], 0)\r\n    return output\r\n```\r\n\r\n\r\n\r\n\r\n```\r\nX=tf.ones([10+2**21,2],dtype=tf.float32)\r\nY=tf.constant([[1,0],[0.01,1]],dtype=tf.float32)\r\n\r\n\r\nmul=large_koord_tensor_mul(X,Y)\r\n\r\nsess=tf.Session()\r\nsess.run(tf.global_variables_initializer())\r\n\r\nresult=sess.run(mul)\r\nsess.close()\r\n\r\nprint(\"These are ok:\" + str(result[2**21-2:2**21,:]))\r\n\r\nprint(\"These are NOT wrong\" + str(result[2**21:2**21+2,:]))\r\n```\r\n\r\n\r\n### Result\r\n\r\n\r\nThese are ok:[[1.01 1.  ]\r\n [1.01 1.  ]]\r\nThese are NOT wrong[[1.01 1.  ]\r\n [1.01 1.  ]]"}