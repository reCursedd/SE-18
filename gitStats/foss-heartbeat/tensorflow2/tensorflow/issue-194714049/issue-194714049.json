{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6226", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6226/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6226/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6226/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/6226", "id": 194714049, "node_id": "MDU6SXNzdWUxOTQ3MTQwNDk=", "number": 6226, "title": "Feature request to specify substitutions in embedding_lookup for invalid indices ", "user": {"login": "sonalgupta", "id": 4138767, "node_id": "MDQ6VXNlcjQxMzg3Njc=", "avatar_url": "https://avatars0.githubusercontent.com/u/4138767?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sonalgupta", "html_url": "https://github.com/sonalgupta", "followers_url": "https://api.github.com/users/sonalgupta/followers", "following_url": "https://api.github.com/users/sonalgupta/following{/other_user}", "gists_url": "https://api.github.com/users/sonalgupta/gists{/gist_id}", "starred_url": "https://api.github.com/users/sonalgupta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sonalgupta/subscriptions", "organizations_url": "https://api.github.com/users/sonalgupta/orgs", "repos_url": "https://api.github.com/users/sonalgupta/repos", "events_url": "https://api.github.com/users/sonalgupta/events{/privacy}", "received_events_url": "https://api.github.com/users/sonalgupta/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2016-12-09T22:36:52Z", "updated_at": "2016-12-10T18:04:42Z", "closed_at": "2016-12-10T18:04:42Z", "author_association": "NONE", "body_html": "<p>In the current master code, <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/gather_op.cc\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/gather_op.cc</a> it says that the attribute <em>validate_indices</em> is not supported anymore:<br>\n<code> // We used to grab the validate_indices attribute here, but now we // always validate indices since the speed difference was only 1.5%. // TODO(irving): Remove the validate_indices attribute once we have // support for removing attrs in a backwards compatible way.</code></p>\n<p>I actually do want an option to specify validate_indices as false. I am using <em>embedding_lookup</em> and it would be useful for out of vocabulary words that are not in the embedding matrix.</p>\n<p>If it's not possible to support <em>validate_indices</em>, can you suggest a way to get all zeros (instead of an exception) for indices that are not in the embedding matrix.</p>", "body_text": "In the current master code, https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/gather_op.cc it says that the attribute validate_indices is not supported anymore:\n // We used to grab the validate_indices attribute here, but now we // always validate indices since the speed difference was only 1.5%. // TODO(irving): Remove the validate_indices attribute once we have // support for removing attrs in a backwards compatible way.\nI actually do want an option to specify validate_indices as false. I am using embedding_lookup and it would be useful for out of vocabulary words that are not in the embedding matrix.\nIf it's not possible to support validate_indices, can you suggest a way to get all zeros (instead of an exception) for indices that are not in the embedding matrix.", "body": "In the current master code, https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/gather_op.cc it says that the attribute _validate_indices_ is not supported anymore:\r\n` // We used to grab the validate_indices attribute here, but now we\r\n    // always validate indices since the speed difference was only 1.5%.\r\n    // TODO(irving): Remove the validate_indices attribute once we have\r\n    // support for removing attrs in a backwards compatible way.`\r\n\r\nI actually do want an option to specify validate_indices as false. I am using _embedding_lookup_ and it would be useful for out of vocabulary words that are not in the embedding matrix.  \r\n\r\nIf it's not possible to support _validate_indices_, can you suggest a way to get all zeros (instead of an exception) for indices that are not in the embedding matrix."}