{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23631", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23631/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23631/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23631/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/23631", "id": 379155217, "node_id": "MDU6SXNzdWUzNzkxNTUyMTc=", "number": 23631, "title": "Default argument of tf.placeholder", "user": {"login": "MasKong", "id": 23203109, "node_id": "MDQ6VXNlcjIzMjAzMTA5", "avatar_url": "https://avatars1.githubusercontent.com/u/23203109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MasKong", "html_url": "https://github.com/MasKong", "followers_url": "https://api.github.com/users/MasKong/followers", "following_url": "https://api.github.com/users/MasKong/following{/other_user}", "gists_url": "https://api.github.com/users/MasKong/gists{/gist_id}", "starred_url": "https://api.github.com/users/MasKong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MasKong/subscriptions", "organizations_url": "https://api.github.com/users/MasKong/orgs", "repos_url": "https://api.github.com/users/MasKong/repos", "events_url": "https://api.github.com/users/MasKong/events{/privacy}", "received_events_url": "https://api.github.com/users/MasKong/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "open", "locked": false, "assignee": {"login": "harshini-gadige", "id": 42781361, "node_id": "MDQ6VXNlcjQyNzgxMzYx", "avatar_url": "https://avatars1.githubusercontent.com/u/42781361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harshini-gadige", "html_url": "https://github.com/harshini-gadige", "followers_url": "https://api.github.com/users/harshini-gadige/followers", "following_url": "https://api.github.com/users/harshini-gadige/following{/other_user}", "gists_url": "https://api.github.com/users/harshini-gadige/gists{/gist_id}", "starred_url": "https://api.github.com/users/harshini-gadige/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harshini-gadige/subscriptions", "organizations_url": "https://api.github.com/users/harshini-gadige/orgs", "repos_url": "https://api.github.com/users/harshini-gadige/repos", "events_url": "https://api.github.com/users/harshini-gadige/events{/privacy}", "received_events_url": "https://api.github.com/users/harshini-gadige/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "harshini-gadige", "id": 42781361, "node_id": "MDQ6VXNlcjQyNzgxMzYx", "avatar_url": "https://avatars1.githubusercontent.com/u/42781361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harshini-gadige", "html_url": "https://github.com/harshini-gadige", "followers_url": "https://api.github.com/users/harshini-gadige/followers", "following_url": "https://api.github.com/users/harshini-gadige/following{/other_user}", "gists_url": "https://api.github.com/users/harshini-gadige/gists{/gist_id}", "starred_url": "https://api.github.com/users/harshini-gadige/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harshini-gadige/subscriptions", "organizations_url": "https://api.github.com/users/harshini-gadige/orgs", "repos_url": "https://api.github.com/users/harshini-gadige/repos", "events_url": "https://api.github.com/users/harshini-gadige/events{/privacy}", "received_events_url": "https://api.github.com/users/harshini-gadige/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-11-09T13:08:04Z", "updated_at": "2018-11-23T18:34:09Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>InvalidArgumentError (see above for traceback): You must feed a value for placeholder tensor 'x' with dtype float<br>\n[[{{node x}} = Placeholder<a href=\"\">dtype=DT_FLOAT, shape=, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"</a>]]</p>\n<p>I think  tf.placeholder(tf.float32, shape=None, name='x') is equivalent to  tf.placeholder(tf.float32,  name='x')? But the results are different for these two lines of code.</p>\n<p><strong>System information</strong></p>\n<ul>\n<li>Have I written custom code (as opposed to using a stock example script provided in TensorFlow):</li>\n<li>OS Platform and Distribution Windows10:</li>\n<li>TensorFlow installed from pip:</li>\n<li>TensorFlow version (use command below): 1.11.0</li>\n<li>Python version: 3.6</li>\n<li>CUDA/cuDNN version: 9.0</li>\n<li>GPU model and memory: 1080Ti</li>\n</ul>\n<p><strong>Code to reproduce the issue</strong></p>\n<div class=\"highlight highlight-source-python\"><pre>x <span class=\"pl-k\">=</span> tf.placeholder(tf.float32, <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">None</span>, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>x<span class=\"pl-pds\">'</span></span>)\ny <span class=\"pl-k\">=</span> tf.placeholder(tf.float32, <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">None</span>, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>y<span class=\"pl-pds\">'</span></span>)\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n    total_loss <span class=\"pl-k\">=</span> <span class=\"pl-c1\">0</span>\n    sess.run(tf.global_variables_initializer())\n    _, loss_ <span class=\"pl-k\">=</span> sess.run([optimizer, loss], <span class=\"pl-v\">feed_dict</span><span class=\"pl-k\">=</span>{x: <span class=\"pl-c1\">1.0</span>, y: <span class=\"pl-c1\">2.0</span>})</pre></div>\n<p>The code presented above returned InvalidArgumentError.</p>\n<div class=\"highlight highlight-source-python\"><pre>x <span class=\"pl-k\">=</span> tf.placeholder(tf.float32, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>x<span class=\"pl-pds\">'</span></span>)\ny <span class=\"pl-k\">=</span> tf.placeholder(tf.float32, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>y<span class=\"pl-pds\">'</span></span>)\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n    total_loss <span class=\"pl-k\">=</span> <span class=\"pl-c1\">0</span>\n    sess.run(tf.global_variables_initializer())\n    _, loss_ <span class=\"pl-k\">=</span> sess.run([optimizer, loss], <span class=\"pl-v\">feed_dict</span><span class=\"pl-k\">=</span>{x: <span class=\"pl-c1\">1.0</span>, y: <span class=\"pl-c1\">2.0</span>})</pre></div>\n<p>These code works well.</p>", "body_text": "InvalidArgumentError (see above for traceback): You must feed a value for placeholder tensor 'x' with dtype float\n[[{{node x}} = Placeholderdtype=DT_FLOAT, shape=, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"]]\nI think  tf.placeholder(tf.float32, shape=None, name='x') is equivalent to  tf.placeholder(tf.float32,  name='x')? But the results are different for these two lines of code.\nSystem information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nOS Platform and Distribution Windows10:\nTensorFlow installed from pip:\nTensorFlow version (use command below): 1.11.0\nPython version: 3.6\nCUDA/cuDNN version: 9.0\nGPU model and memory: 1080Ti\n\nCode to reproduce the issue\nx = tf.placeholder(tf.float32, shape=None, name='x')\ny = tf.placeholder(tf.float32, shape=None, name='y')\nwith tf.Session() as sess:\n    total_loss = 0\n    sess.run(tf.global_variables_initializer())\n    _, loss_ = sess.run([optimizer, loss], feed_dict={x: 1.0, y: 2.0})\nThe code presented above returned InvalidArgumentError.\nx = tf.placeholder(tf.float32, name='x')\ny = tf.placeholder(tf.float32, name='y')\nwith tf.Session() as sess:\n    total_loss = 0\n    sess.run(tf.global_variables_initializer())\n    _, loss_ = sess.run([optimizer, loss], feed_dict={x: 1.0, y: 2.0})\nThese code works well.", "body": "InvalidArgumentError (see above for traceback): You must feed a value for placeholder tensor 'x' with dtype float\r\n\t [[{{node x}} = Placeholder[dtype=DT_FLOAT, shape=<unknown>, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"]()]]\r\n\r\nI think  tf.placeholder(tf.float32, shape=None, name='x') is equivalent to  tf.placeholder(tf.float32,  name='x')? But the results are different for these two lines of code.\r\n\r\n**System information**\r\n- Have I written custom code (as opposed to using a stock example script provided in TensorFlow):\r\n- OS Platform and Distribution Windows10:\r\n- TensorFlow installed from pip:\r\n- TensorFlow version (use command below): 1.11.0\r\n- Python version: 3.6\r\n- CUDA/cuDNN version: 9.0\r\n- GPU model and memory: 1080Ti\r\n\r\n\r\n\r\n**Code to reproduce the issue**\r\n```python\r\nx = tf.placeholder(tf.float32, shape=None, name='x')\r\ny = tf.placeholder(tf.float32, shape=None, name='y')\r\nwith tf.Session() as sess:\r\n    total_loss = 0\r\n    sess.run(tf.global_variables_initializer())\r\n    _, loss_ = sess.run([optimizer, loss], feed_dict={x: 1.0, y: 2.0})\r\n````\r\nThe code presented above returned InvalidArgumentError.\r\n\r\n```python\r\nx = tf.placeholder(tf.float32, name='x')\r\ny = tf.placeholder(tf.float32, name='y')\r\nwith tf.Session() as sess:\r\n    total_loss = 0\r\n    sess.run(tf.global_variables_initializer())\r\n    _, loss_ = sess.run([optimizer, loss], feed_dict={x: 1.0, y: 2.0})\r\n````\r\nThese code works well.\r\n\r\n"}