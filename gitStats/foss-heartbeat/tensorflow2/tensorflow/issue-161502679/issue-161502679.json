{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2980", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2980/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2980/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2980/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/2980", "id": 161502679, "node_id": "MDU6SXNzdWUxNjE1MDI2Nzk=", "number": 2980, "title": "Setting CUDA_VISIBLE_DEVICES=\"\" crashes TensorFlow on Mac", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-06-21T18:05:03Z", "updated_at": "2017-02-06T21:31:41Z", "closed_at": "2016-06-21T20:20:12Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Something changed in the last 3 days so that\u00a0setting CUDA_VISIBLE_DEVICES to \"\" makes TensorFlow crash on Mac with SIGSERV</p>\n<pre><code>Exception Type:        EXC_BAD_ACCESS (SIGSEGV)\nException Codes:       KERN_INVALID_ADDRESS at 0x0000000000000000\nException Note:        EXC_CORPSE_NOTIFY\n\nVM Regions Near 0:\n--&gt; \n    __TEXT                 0000000107d49000-0000000107d4a000 [    4K] r-x/rwx SM=COW  /System/Library/Frameworks/Python.framework/Versions/2.7/Resources/Python.app/Contents/MacOS/Python\n\nThread 0 Crashed:: Dispatch queue: com.apple.main-thread\n0   libsystem_c.dylib               0x00007fff97ebc152 strlen + 18\n1   _pywrap_tensorflow.so           0x000000010c9e7a2c perftools::gputools::cuda::Diagnostician::FindKernelDriverVersion() + 204\n2   _pywrap_tensorflow.so           0x000000010c9e7220 perftools::gputools::cuda::Diagnostician::LogDriverVersionInformation() + 512\n3   _pywrap_tensorflow.so           0x000000010c9e6f8f perftools::gputools::cuda::Diagnostician::LogDiagnosticInformation() + 671\n4   _pywrap_tensorflow.so           0x000000010c9f7d69 perftools::gputools::cuda::CUDADriver::Init() + 569\n5   _pywrap_tensorflow.so           0x000000010ca0e56f perftools::gputools::cuda::CudaPlatform::VisibleDeviceCount() const + 15\n6   _pywrap_tensorflow.so           0x000000010c79d1f5 tensorflow::GPUMachineManager() + 261\n7   _pywrap_tensorflow.so           0x000000010c79ac4e tensorflow::BaseGPUDeviceFactory::GetValidDeviceIds(std::__1::vector&lt;int, std::__1::allocator&lt;int&gt; &gt;*) + 46\n8   _pywrap_tensorflow.so           0x000000010c79aa79 tensorflow::BaseGPUDeviceFactory::CreateDevices(tensorflow::SessionOptions const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, std::__1::vector&lt;tensorflow::Device*, std::__1::allocator&lt;tensorflow::Device*&gt; &gt;*) + 345\n9   _pywrap_tensorflow.so           0x000000010c91d1b5 tensorflow::DeviceFactory::AddDevices(tensorflow::SessionOptions const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, std::__1::vector&lt;tensorflow::Device*, std::__1::allocator&lt;tensorflow::Device*&gt; &gt;*) + 245\n10  _pywrap_tensorflow.so           0x000000010b5a7175 _wrap_DeviceFactory_AddDevices(_object*, _object*) + 133\n11 \n</code></pre>\n<p>On main window I see following</p>\n<pre><code>I tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcublas.dylib locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcudnn.dylib locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcufft.dylib locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcuda.1.dylib locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcurand.dylib locally\nE tensorflow/stream_executor/cuda/cuda_driver.cc:491] failed call to cuInit: CUDA_ERROR_NO_DEVICE\n\n</code></pre>\n<p>I used to be able to do this, also, if I run NVidia's <code>deviceQuery</code> that comes with CUDA drivers, it fails without a SIGSERV</p>\n<pre><code>cd /usr/local/cuda/samples\nsudo make -C 1_Utilities/deviceQuery\n./bin/x86_64/darwin/release/deviceQuery\n\n./bin/x86_64/darwin/release/deviceQuery Starting...\n CUDA Device Query (Runtime API) version (CUDART static linking)\n\ncudaGetDeviceCount returned 38\n-&gt; no CUDA-capable device is detected\nResult = FAIL\n</code></pre>", "body_text": "Something changed in the last 3 days so that\u00a0setting CUDA_VISIBLE_DEVICES to \"\" makes TensorFlow crash on Mac with SIGSERV\nException Type:        EXC_BAD_ACCESS (SIGSEGV)\nException Codes:       KERN_INVALID_ADDRESS at 0x0000000000000000\nException Note:        EXC_CORPSE_NOTIFY\n\nVM Regions Near 0:\n--> \n    __TEXT                 0000000107d49000-0000000107d4a000 [    4K] r-x/rwx SM=COW  /System/Library/Frameworks/Python.framework/Versions/2.7/Resources/Python.app/Contents/MacOS/Python\n\nThread 0 Crashed:: Dispatch queue: com.apple.main-thread\n0   libsystem_c.dylib               0x00007fff97ebc152 strlen + 18\n1   _pywrap_tensorflow.so           0x000000010c9e7a2c perftools::gputools::cuda::Diagnostician::FindKernelDriverVersion() + 204\n2   _pywrap_tensorflow.so           0x000000010c9e7220 perftools::gputools::cuda::Diagnostician::LogDriverVersionInformation() + 512\n3   _pywrap_tensorflow.so           0x000000010c9e6f8f perftools::gputools::cuda::Diagnostician::LogDiagnosticInformation() + 671\n4   _pywrap_tensorflow.so           0x000000010c9f7d69 perftools::gputools::cuda::CUDADriver::Init() + 569\n5   _pywrap_tensorflow.so           0x000000010ca0e56f perftools::gputools::cuda::CudaPlatform::VisibleDeviceCount() const + 15\n6   _pywrap_tensorflow.so           0x000000010c79d1f5 tensorflow::GPUMachineManager() + 261\n7   _pywrap_tensorflow.so           0x000000010c79ac4e tensorflow::BaseGPUDeviceFactory::GetValidDeviceIds(std::__1::vector<int, std::__1::allocator<int> >*) + 46\n8   _pywrap_tensorflow.so           0x000000010c79aa79 tensorflow::BaseGPUDeviceFactory::CreateDevices(tensorflow::SessionOptions const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<tensorflow::Device*, std::__1::allocator<tensorflow::Device*> >*) + 345\n9   _pywrap_tensorflow.so           0x000000010c91d1b5 tensorflow::DeviceFactory::AddDevices(tensorflow::SessionOptions const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<tensorflow::Device*, std::__1::allocator<tensorflow::Device*> >*) + 245\n10  _pywrap_tensorflow.so           0x000000010b5a7175 _wrap_DeviceFactory_AddDevices(_object*, _object*) + 133\n11 \n\nOn main window I see following\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcublas.dylib locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcudnn.dylib locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcufft.dylib locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcuda.1.dylib locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcurand.dylib locally\nE tensorflow/stream_executor/cuda/cuda_driver.cc:491] failed call to cuInit: CUDA_ERROR_NO_DEVICE\n\n\nI used to be able to do this, also, if I run NVidia's deviceQuery that comes with CUDA drivers, it fails without a SIGSERV\ncd /usr/local/cuda/samples\nsudo make -C 1_Utilities/deviceQuery\n./bin/x86_64/darwin/release/deviceQuery\n\n./bin/x86_64/darwin/release/deviceQuery Starting...\n CUDA Device Query (Runtime API) version (CUDART static linking)\n\ncudaGetDeviceCount returned 38\n-> no CUDA-capable device is detected\nResult = FAIL", "body": "Something changed in the last 3 days so that\u00a0setting CUDA_VISIBLE_DEVICES to \"\" makes TensorFlow crash on Mac with SIGSERV\n\n```\nException Type:        EXC_BAD_ACCESS (SIGSEGV)\nException Codes:       KERN_INVALID_ADDRESS at 0x0000000000000000\nException Note:        EXC_CORPSE_NOTIFY\n\nVM Regions Near 0:\n--> \n    __TEXT                 0000000107d49000-0000000107d4a000 [    4K] r-x/rwx SM=COW  /System/Library/Frameworks/Python.framework/Versions/2.7/Resources/Python.app/Contents/MacOS/Python\n\nThread 0 Crashed:: Dispatch queue: com.apple.main-thread\n0   libsystem_c.dylib               0x00007fff97ebc152 strlen + 18\n1   _pywrap_tensorflow.so           0x000000010c9e7a2c perftools::gputools::cuda::Diagnostician::FindKernelDriverVersion() + 204\n2   _pywrap_tensorflow.so           0x000000010c9e7220 perftools::gputools::cuda::Diagnostician::LogDriverVersionInformation() + 512\n3   _pywrap_tensorflow.so           0x000000010c9e6f8f perftools::gputools::cuda::Diagnostician::LogDiagnosticInformation() + 671\n4   _pywrap_tensorflow.so           0x000000010c9f7d69 perftools::gputools::cuda::CUDADriver::Init() + 569\n5   _pywrap_tensorflow.so           0x000000010ca0e56f perftools::gputools::cuda::CudaPlatform::VisibleDeviceCount() const + 15\n6   _pywrap_tensorflow.so           0x000000010c79d1f5 tensorflow::GPUMachineManager() + 261\n7   _pywrap_tensorflow.so           0x000000010c79ac4e tensorflow::BaseGPUDeviceFactory::GetValidDeviceIds(std::__1::vector<int, std::__1::allocator<int> >*) + 46\n8   _pywrap_tensorflow.so           0x000000010c79aa79 tensorflow::BaseGPUDeviceFactory::CreateDevices(tensorflow::SessionOptions const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<tensorflow::Device*, std::__1::allocator<tensorflow::Device*> >*) + 345\n9   _pywrap_tensorflow.so           0x000000010c91d1b5 tensorflow::DeviceFactory::AddDevices(tensorflow::SessionOptions const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<tensorflow::Device*, std::__1::allocator<tensorflow::Device*> >*) + 245\n10  _pywrap_tensorflow.so           0x000000010b5a7175 _wrap_DeviceFactory_AddDevices(_object*, _object*) + 133\n11 \n```\n\nOn main window I see following\n\n```\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcublas.dylib locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcudnn.dylib locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcufft.dylib locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcuda.1.dylib locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcurand.dylib locally\nE tensorflow/stream_executor/cuda/cuda_driver.cc:491] failed call to cuInit: CUDA_ERROR_NO_DEVICE\n\n```\n\nI used to be able to do this, also, if I run NVidia's `deviceQuery` that comes with CUDA drivers, it fails without a SIGSERV\n\n```\ncd /usr/local/cuda/samples\nsudo make -C 1_Utilities/deviceQuery\n./bin/x86_64/darwin/release/deviceQuery\n\n./bin/x86_64/darwin/release/deviceQuery Starting...\n CUDA Device Query (Runtime API) version (CUDART static linking)\n\ncudaGetDeviceCount returned 38\n-> no CUDA-capable device is detected\nResult = FAIL\n```\n"}