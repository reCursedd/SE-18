{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15395", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15395/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15395/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15395/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15395", "id": 282412710, "node_id": "MDU6SXNzdWUyODI0MTI3MTA=", "number": 15395, "title": "OS X + GPU NVIDIA nccl dependency missing", "user": {"login": "headupinclouds", "id": 554720, "node_id": "MDQ6VXNlcjU1NDcyMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/554720?v=4", "gravatar_id": "", "url": "https://api.github.com/users/headupinclouds", "html_url": "https://github.com/headupinclouds", "followers_url": "https://api.github.com/users/headupinclouds/followers", "following_url": "https://api.github.com/users/headupinclouds/following{/other_user}", "gists_url": "https://api.github.com/users/headupinclouds/gists{/gist_id}", "starred_url": "https://api.github.com/users/headupinclouds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/headupinclouds/subscriptions", "organizations_url": "https://api.github.com/users/headupinclouds/orgs", "repos_url": "https://api.github.com/users/headupinclouds/repos", "events_url": "https://api.github.com/users/headupinclouds/events{/privacy}", "received_events_url": "https://api.github.com/users/headupinclouds/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586558, "node_id": "MDU6TGFiZWw0MDQ1ODY1NTg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:community%20support", "name": "stat:community support", "color": "f4b400", "default": false}, {"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-12-15T12:26:52Z", "updated_at": "2018-10-24T21:21:40Z", "closed_at": "2018-10-24T21:21:40Z", "author_association": "NONE", "body_html": "<p><a href=\"https://github.com/tensorflow/tensorflow/pull/14016#discussion_r156704387\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/tensorflow/tensorflow/pull/14016/hovercard\">Comment</a> migrated to a full issue here.</p>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: N/A</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: OS X 10.12.2 (Any)</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: Source</li>\n<li><strong>TensorFlow version (use command below)</strong>: Master <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=51700\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Head\">@Head</a></li>\n<li><strong>Python version</strong>: N/A</li>\n<li><strong>Bazel version (if compiling from source)</strong>: N/A (CMake)</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: Xcode 8.3.3 (Any)</li>\n<li><strong>CUDA/cuDNN version</strong>: N/A</li>\n<li><strong>GPU model and memory</strong>: N/A</li>\n<li><strong>Exact command to reproduce</strong>: <code>cmake -GXcode ...</code></li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I'm trying to extend <a href=\"https://github.com/tensorflow/tensorflow/pull/14016\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/tensorflow/tensorflow/pull/14016/hovercard\">CMake-Linux support for GPU-build</a> to finish CMake + OSX testing w/ (NVIDIA) GPU.   I had started with CUDA 8.0 and cuDNN 6.0, but given recent activity here, it seems better to target a recent master branch w/ CUDA 9.0 + cuDNN 7.0.  The OS X CUDA installation does not come with <code>nccl</code> (see <code>find</code> output below for contents).  NVIDIA has a (login based) <code>nccl</code> download for v2.0, but it only has Linux libraries.  I see three other options to support OS X + GPU Builds:</p>\n<ol>\n<li><a href=\"https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/nccl\">https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/nccl</a> (build from bundled source v1.3.5)</li>\n<li><a href=\"https://github.com/nvidia/nccl\">https://github.com/nvidia/nccl</a> (build from source v1.?)</li>\n<li>add <code>option(tensroflow_USE_NCCL \"Use NCCL lib\" ON)</code> to make it <code>nccl</code> optional (I'm not sure how complicated this is) and update the CMake and source code w/ preprocessor definitions as needed</li>\n</ol>\n<p>Shall I add the bundled <code>nccl</code> (v1.3.5?) files to the CMake build?  I see notes about migrating to v2.0 in commit comments, which seems to be closed source.  If that's the case, then it may be best to try to make any internal tensorflow <code>nccl</code> operations optional in order to support single GPU configurations to start with.</p>\n<p><code>find /Developer/NVIDIA/CUDA-9.0/lib -name \"*.a\"</code></p>\n<pre><code>/Developer/NVIDIA/CUDA-9.0/lib/libcublas_device.a\n/Developer/NVIDIA/CUDA-9.0/lib/libcublas_static.a\n/Developer/NVIDIA/CUDA-9.0/lib/libcudadevrt.a\n/Developer/NVIDIA/CUDA-9.0/lib/libcudart_static.a\n/Developer/NVIDIA/CUDA-9.0/lib/libcufft_static.a\n/Developer/NVIDIA/CUDA-9.0/lib/libcufftw_static.a\n/Developer/NVIDIA/CUDA-9.0/lib/libculibos.a\n/Developer/NVIDIA/CUDA-9.0/lib/libcurand_static.a\n/Developer/NVIDIA/CUDA-9.0/lib/libcusolver_static.a\n/Developer/NVIDIA/CUDA-9.0/lib/libcusparse_static.a\n/Developer/NVIDIA/CUDA-9.0/lib/libnppc_static.a\n/Developer/NVIDIA/CUDA-9.0/lib/libnppial_static.a\n/Developer/NVIDIA/CUDA-9.0/lib/libnppicc_static.a\n/Developer/NVIDIA/CUDA-9.0/lib/libnppicom_static.a\n/Developer/NVIDIA/CUDA-9.0/lib/libnppidei_static.a\n/Developer/NVIDIA/CUDA-9.0/lib/libnppif_static.a\n/Developer/NVIDIA/CUDA-9.0/lib/libnppig_static.a\n/Developer/NVIDIA/CUDA-9.0/lib/libnppim_static.a\n/Developer/NVIDIA/CUDA-9.0/lib/libnppist_static.a\n/Developer/NVIDIA/CUDA-9.0/lib/libnppisu_static.a\n/Developer/NVIDIA/CUDA-9.0/lib/libnppitc_static.a\n/Developer/NVIDIA/CUDA-9.0/lib/libnpps_static.a\n/Developer/NVIDIA/CUDA-9.0/lib/libnvgraph_static.a\n</code></pre>\n<h3>Source code / logs</h3>\n<p>N/A</p>", "body_text": "Comment migrated to a full issue here.\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): N/A\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): OS X 10.12.2 (Any)\nTensorFlow installed from (source or binary): Source\nTensorFlow version (use command below): Master @Head\nPython version: N/A\nBazel version (if compiling from source): N/A (CMake)\nGCC/Compiler version (if compiling from source): Xcode 8.3.3 (Any)\nCUDA/cuDNN version: N/A\nGPU model and memory: N/A\nExact command to reproduce: cmake -GXcode ...\n\nDescribe the problem\nI'm trying to extend CMake-Linux support for GPU-build to finish CMake + OSX testing w/ (NVIDIA) GPU.   I had started with CUDA 8.0 and cuDNN 6.0, but given recent activity here, it seems better to target a recent master branch w/ CUDA 9.0 + cuDNN 7.0.  The OS X CUDA installation does not come with nccl (see find output below for contents).  NVIDIA has a (login based) nccl download for v2.0, but it only has Linux libraries.  I see three other options to support OS X + GPU Builds:\n\nhttps://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/nccl (build from bundled source v1.3.5)\nhttps://github.com/nvidia/nccl (build from source v1.?)\nadd option(tensroflow_USE_NCCL \"Use NCCL lib\" ON) to make it nccl optional (I'm not sure how complicated this is) and update the CMake and source code w/ preprocessor definitions as needed\n\nShall I add the bundled nccl (v1.3.5?) files to the CMake build?  I see notes about migrating to v2.0 in commit comments, which seems to be closed source.  If that's the case, then it may be best to try to make any internal tensorflow nccl operations optional in order to support single GPU configurations to start with.\nfind /Developer/NVIDIA/CUDA-9.0/lib -name \"*.a\"\n/Developer/NVIDIA/CUDA-9.0/lib/libcublas_device.a\n/Developer/NVIDIA/CUDA-9.0/lib/libcublas_static.a\n/Developer/NVIDIA/CUDA-9.0/lib/libcudadevrt.a\n/Developer/NVIDIA/CUDA-9.0/lib/libcudart_static.a\n/Developer/NVIDIA/CUDA-9.0/lib/libcufft_static.a\n/Developer/NVIDIA/CUDA-9.0/lib/libcufftw_static.a\n/Developer/NVIDIA/CUDA-9.0/lib/libculibos.a\n/Developer/NVIDIA/CUDA-9.0/lib/libcurand_static.a\n/Developer/NVIDIA/CUDA-9.0/lib/libcusolver_static.a\n/Developer/NVIDIA/CUDA-9.0/lib/libcusparse_static.a\n/Developer/NVIDIA/CUDA-9.0/lib/libnppc_static.a\n/Developer/NVIDIA/CUDA-9.0/lib/libnppial_static.a\n/Developer/NVIDIA/CUDA-9.0/lib/libnppicc_static.a\n/Developer/NVIDIA/CUDA-9.0/lib/libnppicom_static.a\n/Developer/NVIDIA/CUDA-9.0/lib/libnppidei_static.a\n/Developer/NVIDIA/CUDA-9.0/lib/libnppif_static.a\n/Developer/NVIDIA/CUDA-9.0/lib/libnppig_static.a\n/Developer/NVIDIA/CUDA-9.0/lib/libnppim_static.a\n/Developer/NVIDIA/CUDA-9.0/lib/libnppist_static.a\n/Developer/NVIDIA/CUDA-9.0/lib/libnppisu_static.a\n/Developer/NVIDIA/CUDA-9.0/lib/libnppitc_static.a\n/Developer/NVIDIA/CUDA-9.0/lib/libnpps_static.a\n/Developer/NVIDIA/CUDA-9.0/lib/libnvgraph_static.a\n\nSource code / logs\nN/A", "body": "[Comment](https://github.com/tensorflow/tensorflow/pull/14016#discussion_r156704387) migrated to a full issue here.\r\n\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: N/A\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: OS X 10.12.2 (Any)\r\n- **TensorFlow installed from (source or binary)**: Source\r\n- **TensorFlow version (use command below)**: Master @HEAD\r\n- **Python version**: N/A\r\n- **Bazel version (if compiling from source)**: N/A (CMake)\r\n- **GCC/Compiler version (if compiling from source)**: Xcode 8.3.3 (Any)\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: `cmake -GXcode ...`\r\n\r\n### Describe the problem\r\n\r\nI'm trying to extend [CMake-Linux support for GPU-build](https://github.com/tensorflow/tensorflow/pull/14016) to finish CMake + OSX testing w/ (NVIDIA) GPU.   I had started with CUDA 8.0 and cuDNN 6.0, but given recent activity here, it seems better to target a recent master branch w/ CUDA 9.0 + cuDNN 7.0.  The OS X CUDA installation does not come with `nccl` (see `find` output below for contents).  NVIDIA has a (login based) `nccl` download for v2.0, but it only has Linux libraries.  I see three other options to support OS X + GPU Builds:\r\n\r\n1. https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/nccl (build from bundled source v1.3.5)\r\n2. https://github.com/nvidia/nccl (build from source v1.?)\r\n3. add `option(tensroflow_USE_NCCL \"Use NCCL lib\" ON)` to make it `nccl` optional (I'm not sure how complicated this is) and update the CMake and source code w/ preprocessor definitions as needed\r\n\r\nShall I add the bundled `nccl` (v1.3.5?) files to the CMake build?  I see notes about migrating to v2.0 in commit comments, which seems to be closed source.  If that's the case, then it may be best to try to make any internal tensorflow `nccl` operations optional in order to support single GPU configurations to start with. \r\n\r\n`find /Developer/NVIDIA/CUDA-9.0/lib -name \"*.a\"`\r\n```\r\n/Developer/NVIDIA/CUDA-9.0/lib/libcublas_device.a\r\n/Developer/NVIDIA/CUDA-9.0/lib/libcublas_static.a\r\n/Developer/NVIDIA/CUDA-9.0/lib/libcudadevrt.a\r\n/Developer/NVIDIA/CUDA-9.0/lib/libcudart_static.a\r\n/Developer/NVIDIA/CUDA-9.0/lib/libcufft_static.a\r\n/Developer/NVIDIA/CUDA-9.0/lib/libcufftw_static.a\r\n/Developer/NVIDIA/CUDA-9.0/lib/libculibos.a\r\n/Developer/NVIDIA/CUDA-9.0/lib/libcurand_static.a\r\n/Developer/NVIDIA/CUDA-9.0/lib/libcusolver_static.a\r\n/Developer/NVIDIA/CUDA-9.0/lib/libcusparse_static.a\r\n/Developer/NVIDIA/CUDA-9.0/lib/libnppc_static.a\r\n/Developer/NVIDIA/CUDA-9.0/lib/libnppial_static.a\r\n/Developer/NVIDIA/CUDA-9.0/lib/libnppicc_static.a\r\n/Developer/NVIDIA/CUDA-9.0/lib/libnppicom_static.a\r\n/Developer/NVIDIA/CUDA-9.0/lib/libnppidei_static.a\r\n/Developer/NVIDIA/CUDA-9.0/lib/libnppif_static.a\r\n/Developer/NVIDIA/CUDA-9.0/lib/libnppig_static.a\r\n/Developer/NVIDIA/CUDA-9.0/lib/libnppim_static.a\r\n/Developer/NVIDIA/CUDA-9.0/lib/libnppist_static.a\r\n/Developer/NVIDIA/CUDA-9.0/lib/libnppisu_static.a\r\n/Developer/NVIDIA/CUDA-9.0/lib/libnppitc_static.a\r\n/Developer/NVIDIA/CUDA-9.0/lib/libnpps_static.a\r\n/Developer/NVIDIA/CUDA-9.0/lib/libnvgraph_static.a\r\n```\r\n\r\n### Source code / logs\r\n\r\nN/A\r\n"}