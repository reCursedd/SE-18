{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/267708082", "html_url": "https://github.com/tensorflow/tensorflow/issues/6268#issuecomment-267708082", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6268", "id": 267708082, "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzcwODA4Mg==", "user": {"login": "kmalakoff", "id": 756520, "node_id": "MDQ6VXNlcjc1NjUyMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/756520?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmalakoff", "html_url": "https://github.com/kmalakoff", "followers_url": "https://api.github.com/users/kmalakoff/followers", "following_url": "https://api.github.com/users/kmalakoff/following{/other_user}", "gists_url": "https://api.github.com/users/kmalakoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmalakoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmalakoff/subscriptions", "organizations_url": "https://api.github.com/users/kmalakoff/orgs", "repos_url": "https://api.github.com/users/kmalakoff/repos", "events_url": "https://api.github.com/users/kmalakoff/events{/privacy}", "received_events_url": "https://api.github.com/users/kmalakoff/received_events", "type": "User", "site_admin": false}, "created_at": "2016-12-16T22:09:53Z", "updated_at": "2016-12-16T22:09:53Z", "author_association": "NONE", "body_html": "<p>I've reviewed the gradient folder and the changes to it over time. I've seen this code before and found it a little difficult to reverse engineer the API to understand how it could be used to implement training with back propagation.</p>\n<p>One idea to help point me in the right direction would be to do one pass through solving a real problem (eg. approach this using idea 2 above using a vertical slice through a real-world test case). For example, in <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/cc/tutorials/example_trainer.cc#L51\">this comment</a>, you can see that someone was considering to implement MNIST probably because the provided example was missing the full flow needed for solving for weights in a neural network using back propagation. If we could write pseudocode or an actual test for this limited and classic MNIST example to outline the use of the proposed API, it could be a good way for me to get started.</p>", "body_text": "I've reviewed the gradient folder and the changes to it over time. I've seen this code before and found it a little difficult to reverse engineer the API to understand how it could be used to implement training with back propagation.\nOne idea to help point me in the right direction would be to do one pass through solving a real problem (eg. approach this using idea 2 above using a vertical slice through a real-world test case). For example, in this comment, you can see that someone was considering to implement MNIST probably because the provided example was missing the full flow needed for solving for weights in a neural network using back propagation. If we could write pseudocode or an actual test for this limited and classic MNIST example to outline the use of the proposed API, it could be a good way for me to get started.", "body": "I've reviewed the gradient folder and the changes to it over time. I've seen this code before and found it a little difficult to reverse engineer the API to understand how it could be used to implement training with back propagation.\r\n\r\nOne idea to help point me in the right direction would be to do one pass through solving a real problem (eg. approach this using idea 2 above using a vertical slice through a real-world test case). For example, in [this comment](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/cc/tutorials/example_trainer.cc#L51), you can see that someone was considering to implement MNIST probably because the provided example was missing the full flow needed for solving for weights in a neural network using back propagation. If we could write pseudocode or an actual test for this limited and classic MNIST example to outline the use of the proposed API, it could be a good way for me to get started.\r\n"}