{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/318496382", "html_url": "https://github.com/tensorflow/tensorflow/pull/11811#issuecomment-318496382", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11811", "id": 318496382, "node_id": "MDEyOklzc3VlQ29tbWVudDMxODQ5NjM4Mg==", "user": {"login": "vrv", "id": 463737, "node_id": "MDQ6VXNlcjQ2MzczNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/463737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vrv", "html_url": "https://github.com/vrv", "followers_url": "https://api.github.com/users/vrv/followers", "following_url": "https://api.github.com/users/vrv/following{/other_user}", "gists_url": "https://api.github.com/users/vrv/gists{/gist_id}", "starred_url": "https://api.github.com/users/vrv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vrv/subscriptions", "organizations_url": "https://api.github.com/users/vrv/orgs", "repos_url": "https://api.github.com/users/vrv/repos", "events_url": "https://api.github.com/users/vrv/events{/privacy}", "received_events_url": "https://api.github.com/users/vrv/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-27T21:49:54Z", "updated_at": "2017-07-27T21:49:54Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I believe if you do</p>\n<pre><code>bazel build -c opt tensorflow/core:status_test  (or maybe it's core:lib_core_status_test)\n</code></pre>\n<p>then you can run:</p>\n<pre><code>bazel-bin/tensorflow/core/status_test --benchmarks=all \n</code></pre>\n<p>to run the benchmark, and you can compare before and after your change to see the difference in performance.</p>\n<p>My belief is that it is very intentional to avoid constructing empty string objects, and to instead leak memory, since the program is about to crash anyway.  So I'm inclined to want to leave the code as is, unless we can prove that constructing the empty strings is not harmful.</p>\n<p>As for all test cases: it's hard to test all dependencies without recompiling everything :(.  That's why our test infrastructure can be useful.</p>", "body_text": "I believe if you do\nbazel build -c opt tensorflow/core:status_test  (or maybe it's core:lib_core_status_test)\n\nthen you can run:\nbazel-bin/tensorflow/core/status_test --benchmarks=all \n\nto run the benchmark, and you can compare before and after your change to see the difference in performance.\nMy belief is that it is very intentional to avoid constructing empty string objects, and to instead leak memory, since the program is about to crash anyway.  So I'm inclined to want to leave the code as is, unless we can prove that constructing the empty strings is not harmful.\nAs for all test cases: it's hard to test all dependencies without recompiling everything :(.  That's why our test infrastructure can be useful.", "body": "I believe if you do\r\n\r\n```\r\nbazel build -c opt tensorflow/core:status_test  (or maybe it's core:lib_core_status_test)\r\n```\r\n\r\nthen you can run:\r\n\r\n```\r\nbazel-bin/tensorflow/core/status_test --benchmarks=all \r\n```\r\n\r\nto run the benchmark, and you can compare before and after your change to see the difference in performance.\r\n\r\nMy belief is that it is very intentional to avoid constructing empty string objects, and to instead leak memory, since the program is about to crash anyway.  So I'm inclined to want to leave the code as is, unless we can prove that constructing the empty strings is not harmful.\r\n\r\nAs for all test cases: it's hard to test all dependencies without recompiling everything :(.  That's why our test infrastructure can be useful."}