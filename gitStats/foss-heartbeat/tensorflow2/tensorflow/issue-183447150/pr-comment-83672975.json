{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/83672975", "pull_request_review_id": 4500766, "id": 83672975, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgzNjcyOTc1", "diff_hunk": "@@ -24,15 +20,117 @@ limitations under the License.\n #include \"tensorflow/core/platform/logging.h\"\n #include \"tensorflow/core/platform/macros.h\"\n #include \"tensorflow/core/platform/types.h\"\n+#include \"third_party/eigen3/Eigen/Core\"\n+\n+#if GOOGLE_CUDA\n+#include \"tensorflow/core/platform/stream_executor.h\"\n+#endif // GOOGLE_CUDA\n \n namespace tensorflow {\n \n+#if GOOGLE_CUDA\n+namespace {\n+template <typename Scalar>\n+perftools::gputools::DeviceMemory<Scalar> AsDeviceMemory(\n+    const Scalar* cuda_memory) {\n+  perftools::gputools::DeviceMemoryBase wrapped(\n+      const_cast<Scalar*>(cuda_memory));\n+  perftools::gputools::DeviceMemory<Scalar> typed(wrapped);\n+  return typed;\n+}\n+}  // namespace\n+#endif  // GOOGLE_CUDA\n+\n template <class Scalar>\n class MatrixTriangularSolveOp : public LinearAlgebraOp<Scalar> {\n+public:\n+    typedef LinearAlgebraOp<Scalar> Base;\n+\n+    explicit MatrixTriangularSolveOp(OpKernelConstruction* context)\n+        : Base(context)\n+        , lower_(true)\n+        , adjoint_(false)\n+    {\n+        OP_REQUIRES_OK(context, context->GetAttr(\"lower\", &lower_));\n+        OP_REQUIRES_OK(context, context->GetAttr(\"adjoint\", &adjoint_));\n+    }\n+\n+    using TensorShapes = typename Base::TensorShapes;\n+    using Matrix = typename Base::Matrix;\n+    using MatrixMap = typename Base::MatrixMap;\n+    using MatrixMaps = typename Base::MatrixMaps;\n+    using ConstMatrixMap = typename Base::ConstMatrixMap;\n+    using ConstMatrixMaps = typename Base::ConstMatrixMaps;\n+\n+    virtual void ValidateInputMatrixShapes(\n+        OpKernelContext* context,\n+        const TensorShapes& input_matrix_shapes) const final\n+    {\n+        Base::ValidateSquareSolver(context, input_matrix_shapes);\n+    }\n+\n+    TensorShapes GetOutputMatrixShapes(\n+        const TensorShapes& input_matrix_shapes) const final\n+    {\n+        return TensorShapes({ TensorShape({ input_matrix_shapes[0].dim_size(1),\n+            input_matrix_shapes[1].dim_size(1) }) });\n+    }\n+\n+    int64 GetCostPerUnit(const TensorShapes& input_matrix_shapes) const final\n+    {\n+        double rows = static_cast<double>(input_matrix_shapes[0].dim_size(0));\n+        double num_rhss = static_cast<double>(input_matrix_shapes[1].dim_size(1));\n+        double cost = rows * rows * num_rhss;", "path": "tensorflow/core/kernels/matrix_triangular_solve_op.cc", "position": null, "original_position": 84, "commit_id": "ea0bf6fc72880a9dfe2cb656989af6204e5ef147", "original_commit_id": "e46db8b3e2d1efd5cf10ced68b15cbbd1d58a149", "user": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "body": "why are you doing this in double precision?\n", "created_at": "2016-10-17T15:47:11Z", "updated_at": "2016-10-26T15:06:21Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/5010#discussion_r83672975", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/5010", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/83672975"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/5010#discussion_r83672975"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/5010"}}, "body_html": "<p>why are you doing this in double precision?</p>", "body_text": "why are you doing this in double precision?"}