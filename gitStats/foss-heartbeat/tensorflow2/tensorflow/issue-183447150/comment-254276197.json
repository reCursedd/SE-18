{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/254276197", "html_url": "https://github.com/tensorflow/tensorflow/pull/5010#issuecomment-254276197", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5010", "id": 254276197, "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDI3NjE5Nw==", "user": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "created_at": "2016-10-17T17:31:12Z", "updated_at": "2016-10-17T17:31:12Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Ah in that case let's leave it as double. You're right.</p>\n<p>On Oct 17, 2016 9:20 AM, \"c0g\" <a href=\"mailto:notifications@github.com\">notifications@github.com</a> wrote:</p>\n<blockquote>\n<h2><em><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1376357\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/c0g\">@c0g</a></em> commented on this pull request.</h2>\n<p>In tensorflow/core/kernels/matrix_triangular_solve_op.cc<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"183447150\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/5010\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/tensorflow/tensorflow/pull/5010/hovercard\" href=\"https://github.com/tensorflow/tensorflow/pull/5010\">#5010</a>:</p>\n<blockquote>\n<ul>\n<li>{</li>\n<li>\n<pre><code>   Base::ValidateSquareSolver(context, input_matrix_shapes);\n</code></pre>\n</li>\n<li>}</li>\n</ul>\n<ul>\n<li></li>\n</ul>\n<ul>\n<li>TensorShapes GetOutputMatrixShapes(</li>\n<li>\n<pre><code>   const TensorShapes&amp; input_matrix_shapes) const final\n</code></pre>\n</li>\n<li>{</li>\n<li>\n<pre><code>   return TensorShapes({ TensorShape({ input_matrix_shapes[0].dim_size(1),\n</code></pre>\n</li>\n<li>\n<pre><code>       input_matrix_shapes[1].dim_size(1) }) });\n</code></pre>\n</li>\n<li>}</li>\n</ul>\n<ul>\n<li></li>\n</ul>\n<ul>\n<li>int64 GetCostPerUnit(const TensorShapes&amp; input_matrix_shapes) const final</li>\n<li>{</li>\n<li>\n<pre><code>   double rows = static_cast&lt;double&gt;(input_matrix_shapes[0].dim_size(0));\n</code></pre>\n</li>\n<li>\n<pre><code>   double num_rhss = static_cast&lt;double&gt;(input_matrix_shapes[1].dim_size(1));\n</code></pre>\n</li>\n<li>\n<pre><code>   double cost = rows \\* rows \\* num_rhss;\n</code></pre>\n</li>\n</ul>\n</blockquote>\n<p>This is the original tensorflow op code (see above). Possibly because<br>\ndouble can represent larger numbers than int? I doubt anyone will try a<br>\nmatrix multiply large enough to overflow a 64 bit int though. Happy to<br>\nchange to int64.</p>\n<p>\u2014<br>\nYou are receiving this because you were assigned.<br>\nReply to this email directly, view it on GitHub<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"183447150\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/5010\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/tensorflow/tensorflow/pull/5010/hovercard\" href=\"https://github.com/tensorflow/tensorflow/pull/5010\">#5010</a>, or mute the thread<br>\n<a href=\"https://github.com/notifications/unsubscribe-auth/ABtim1ZVajP4Q6Mph62ruIpHz25QrFSYks5q06BhgaJpZM4KYwau\">https://github.com/notifications/unsubscribe-auth/ABtim1ZVajP4Q6Mph62ruIpHz25QrFSYks5q06BhgaJpZM4KYwau</a><br>\n.</p>\n</blockquote>", "body_text": "Ah in that case let's leave it as double. You're right.\nOn Oct 17, 2016 9:20 AM, \"c0g\" notifications@github.com wrote:\n\n@c0g commented on this pull request.\nIn tensorflow/core/kernels/matrix_triangular_solve_op.cc\n#5010:\n\n\n{\n\n   Base::ValidateSquareSolver(context, input_matrix_shapes);\n\n\n}\n\n\n\n\n\nTensorShapes GetOutputMatrixShapes(\n\n   const TensorShapes& input_matrix_shapes) const final\n\n\n{\n\n   return TensorShapes({ TensorShape({ input_matrix_shapes[0].dim_size(1),\n\n\n\n       input_matrix_shapes[1].dim_size(1) }) });\n\n\n}\n\n\n\n\n\nint64 GetCostPerUnit(const TensorShapes& input_matrix_shapes) const final\n{\n\n   double rows = static_cast<double>(input_matrix_shapes[0].dim_size(0));\n\n\n\n   double num_rhss = static_cast<double>(input_matrix_shapes[1].dim_size(1));\n\n\n\n   double cost = rows \\* rows \\* num_rhss;\n\n\n\n\nThis is the original tensorflow op code (see above). Possibly because\ndouble can represent larger numbers than int? I doubt anyone will try a\nmatrix multiply large enough to overflow a 64 bit int though. Happy to\nchange to int64.\n\u2014\nYou are receiving this because you were assigned.\nReply to this email directly, view it on GitHub\n#5010, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABtim1ZVajP4Q6Mph62ruIpHz25QrFSYks5q06BhgaJpZM4KYwau\n.", "body": "Ah in that case let's leave it as double. You're right.\n\nOn Oct 17, 2016 9:20 AM, \"c0g\" notifications@github.com wrote:\n\n> ## _@c0g_ commented on this pull request.\n> \n> In tensorflow/core/kernels/matrix_triangular_solve_op.cc\n> https://github.com/tensorflow/tensorflow/pull/5010:\n> \n> > -    {\n> > -        Base::ValidateSquareSolver(context, input_matrix_shapes);\n> > -    }\n> >   +\n> > -    TensorShapes GetOutputMatrixShapes(\n> > -        const TensorShapes& input_matrix_shapes) const final\n> > -    {\n> > -        return TensorShapes({ TensorShape({ input_matrix_shapes[0].dim_size(1),\n> > -            input_matrix_shapes[1].dim_size(1) }) });\n> > -    }\n> >   +\n> > -    int64 GetCostPerUnit(const TensorShapes& input_matrix_shapes) const final\n> > -    {\n> > -        double rows = static_cast<double>(input_matrix_shapes[0].dim_size(0));\n> > -        double num_rhss = static_cast<double>(input_matrix_shapes[1].dim_size(1));\n> > -        double cost = rows \\* rows \\* num_rhss;\n> \n> This is the original tensorflow op code (see above). Possibly because\n> double can represent larger numbers than int? I doubt anyone will try a\n> matrix multiply large enough to overflow a 64 bit int though. Happy to\n> change to int64.\n> \n> \u2014\n> You are receiving this because you were assigned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/tensorflow/tensorflow/pull/5010, or mute the thread\n> https://github.com/notifications/unsubscribe-auth/ABtim1ZVajP4Q6Mph62ruIpHz25QrFSYks5q06BhgaJpZM4KYwau\n> .\n"}