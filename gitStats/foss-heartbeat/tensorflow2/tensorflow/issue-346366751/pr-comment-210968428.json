{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/210968428", "pull_request_review_id": 147297338, "id": 210968428, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDk2ODQyOA==", "diff_hunk": "@@ -0,0 +1,529 @@\n+\"\"\"Assemble common TF Dockerfiles from many parts.\n+\n+This script constructs TF's Dockerfiles by aggregating partial\n+Dockerfiles. See README.md for usage examples.\n+\"\"\"\n+\n+from __future__ import absolute_import\n+from __future__ import division\n+from __future__ import print_function\n+\n+import copy\n+import errno\n+import os\n+import os.path\n+import re\n+import shutil\n+import textwrap\n+\n+from absl import app\n+from absl import flags\n+import cerberus\n+import yaml\n+\n+FLAGS = flags.FLAGS\n+\n+flags.DEFINE_boolean(\n+    'dry_run', False, 'Do not actually generate Dockerfiles', short_name='n')\n+\n+flags.DEFINE_string(\n+    'spec_file',\n+    './spec.yml',\n+    'Path to a YAML specification file',\n+    short_name='s')\n+\n+flags.DEFINE_string(\n+    'output_dir',\n+    '.', ('Path to an output directory for Dockerfiles. '\n+          'Will be created if it doesn\\'t exist.'),\n+    short_name='o')\n+\n+flags.DEFINE_string(\n+    'partial_dir',\n+    './partials',\n+    'Path to a directory containing foo.partial.Dockerfile partial files.',\n+    short_name='p')\n+\n+flags.DEFINE_boolean(\n+    'quiet_dry_run',\n+    True,\n+    'Do not print contents of dry run Dockerfiles.',\n+    short_name='q')\n+\n+flags.DEFINE_boolean(\n+    'validate', True, 'Validate generated Dockerfiles', short_name='c')\n+\n+# Schema to verify the contents of spec.yml with Cerberus.\n+# Must be converted to a dict from yaml to work.\n+# Note: can add python references with e.g.\n+# !!python/name:builtins.str\n+# !!python/name:__main__.funcname\n+SCHEMA_TEXT = \"\"\"\n+header:\n+  type: string\n+\n+partials:\n+  type: dict\n+  keyschema:\n+    type: string\n+  valueschema:\n+    type: dict\n+    schema:\n+      desc:\n+        type: string\n+      args:\n+        type: dict\n+        keyschema:\n+          type: string\n+        valueschema:\n+          anyof:\n+            - type: [ boolean, number, string ]\n+            - type: dict\n+              schema:\n+                 default:\n+                    type: [ boolean, number, string ]\n+                 desc:\n+                    type: string\n+                 options:\n+                    type: list\n+                    schema:\n+                       type: string\n+\n+images:\n+  keyschema:\n+    type: string\n+  valueschema:\n+    type: dict\n+    schema:\n+      desc:\n+        type: string\n+      arg-defaults:\n+        type: list\n+        schema:\n+          anyof:\n+            - type: dict\n+              keyschema:\n+                type: string\n+                arg_in_use: true\n+              valueschema:\n+                type: string\n+            - type: string\n+              isimage: true\n+      create-dockerfile:\n+        type: boolean\n+      partials:\n+        type: list\n+        schema:\n+          anyof:\n+            - type: dict\n+              keyschema:\n+                type: string\n+                regex: image\n+              valueschema:\n+                type: string\n+                isimage: true\n+            - type: string\n+              ispartial: true\n+\"\"\"\n+\n+\n+class TfDockerValidator(cerberus.Validator):\n+  \"\"\"Custom Cerberus validator for TF dockerfile spec.\n+\n+  Note that each custom validator's docstring must end with a segment describing", "path": "tensorflow/tools/dockerfiles/assembler.py", "position": null, "original_position": 133, "commit_id": "5bfdb84bc54e52b509a366991ea4f5156c1fca34", "original_commit_id": "00869fc36a952418ffa75fd4fd5763b993251dd2", "user": {"login": "gunan", "id": 7946809, "node_id": "MDQ6VXNlcjc5NDY4MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7946809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gunan", "html_url": "https://github.com/gunan", "followers_url": "https://api.github.com/users/gunan/followers", "following_url": "https://api.github.com/users/gunan/following{/other_user}", "gists_url": "https://api.github.com/users/gunan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gunan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gunan/subscriptions", "organizations_url": "https://api.github.com/users/gunan/orgs", "repos_url": "https://api.github.com/users/gunan/repos", "events_url": "https://api.github.com/users/gunan/events{/privacy}", "received_events_url": "https://api.github.com/users/gunan/received_events", "type": "User", "site_admin": false}, "body": "forgot to replace?", "created_at": "2018-08-17T16:45:09Z", "updated_at": "2018-08-23T19:56:53Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/21291#discussion_r210968428", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21291", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/210968428"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/21291#discussion_r210968428"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21291"}}, "body_html": "<p>forgot to replace?</p>", "body_text": "forgot to replace?"}