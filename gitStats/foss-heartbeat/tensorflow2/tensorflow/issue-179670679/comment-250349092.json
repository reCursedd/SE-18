{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/250349092", "html_url": "https://github.com/tensorflow/tensorflow/pull/4608#issuecomment-250349092", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4608", "id": 250349092, "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDM0OTA5Mg==", "user": {"login": "jhseu", "id": 170179, "node_id": "MDQ6VXNlcjE3MDE3OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/170179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhseu", "html_url": "https://github.com/jhseu", "followers_url": "https://api.github.com/users/jhseu/followers", "following_url": "https://api.github.com/users/jhseu/following{/other_user}", "gists_url": "https://api.github.com/users/jhseu/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhseu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhseu/subscriptions", "organizations_url": "https://api.github.com/users/jhseu/orgs", "repos_url": "https://api.github.com/users/jhseu/repos", "events_url": "https://api.github.com/users/jhseu/events{/privacy}", "received_events_url": "https://api.github.com/users/jhseu/received_events", "type": "User", "site_admin": false}, "created_at": "2016-09-29T01:42:51Z", "updated_at": "2016-09-29T01:43:06Z", "author_association": "MEMBER", "body_html": "<p>Ah, you're right that there's no way to get it to work without input_op_fn. That's because RNN's expect an unpacked (python) list of tensors, but the fit function takes in an np.array.</p>\n<p>A minimal example would be something like:<br>\n<code>classifier = tf.contrib.learn.TensorFlowRNNClassifier(rnn_size=2, cell_type=\"lstm\", n_classes=2, steps=100, input_op_fn=lambda x: tf.unpack(x, axis=1)) classifier.fit(np.array([[[1, 2, 3], [4, 5, 6]], [[7, 8 , 9], [10, 11, 12]]], dtype=np.float32), np.array([0, 1], dtype=np.float32))</code></p>\n<p>Keep in mind that we can't merge in failing tests because our test suite ensures that every commit passes all tests before merging pull requests. So any pull request with a previously failing unit test would also require a fix. If you simply have an example that fails without the fix, please file an issue instead.</p>", "body_text": "Ah, you're right that there's no way to get it to work without input_op_fn. That's because RNN's expect an unpacked (python) list of tensors, but the fit function takes in an np.array.\nA minimal example would be something like:\nclassifier = tf.contrib.learn.TensorFlowRNNClassifier(rnn_size=2, cell_type=\"lstm\", n_classes=2, steps=100, input_op_fn=lambda x: tf.unpack(x, axis=1)) classifier.fit(np.array([[[1, 2, 3], [4, 5, 6]], [[7, 8 , 9], [10, 11, 12]]], dtype=np.float32), np.array([0, 1], dtype=np.float32))\nKeep in mind that we can't merge in failing tests because our test suite ensures that every commit passes all tests before merging pull requests. So any pull request with a previously failing unit test would also require a fix. If you simply have an example that fails without the fix, please file an issue instead.", "body": "Ah, you're right that there's no way to get it to work without input_op_fn. That's because RNN's expect an unpacked (python) list of tensors, but the fit function takes in an np.array.\n\nA minimal example would be something like:\n`classifier = tf.contrib.learn.TensorFlowRNNClassifier(rnn_size=2, cell_type=\"lstm\", n_classes=2, steps=100, input_op_fn=lambda x: tf.unpack(x, axis=1))\nclassifier.fit(np.array([[[1, 2, 3], [4, 5, 6]], [[7, 8 , 9], [10, 11, 12]]], dtype=np.float32), np.array([0, 1], dtype=np.float32))`\n\nKeep in mind that we can't merge in failing tests because our test suite ensures that every commit passes all tests before merging pull requests. So any pull request with a previously failing unit test would also require a fix. If you simply have an example that fails without the fix, please file an issue instead.\n"}