{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12108", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12108/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12108/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12108/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/12108", "id": 248718305, "node_id": "MDU6SXNzdWUyNDg3MTgzMDU=", "number": 12108, "title": "tf.string_split didn't behave the same as that split in python", "user": {"login": "jiqiujia", "id": 8109984, "node_id": "MDQ6VXNlcjgxMDk5ODQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/8109984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jiqiujia", "html_url": "https://github.com/jiqiujia", "followers_url": "https://api.github.com/users/jiqiujia/followers", "following_url": "https://api.github.com/users/jiqiujia/following{/other_user}", "gists_url": "https://api.github.com/users/jiqiujia/gists{/gist_id}", "starred_url": "https://api.github.com/users/jiqiujia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jiqiujia/subscriptions", "organizations_url": "https://api.github.com/users/jiqiujia/orgs", "repos_url": "https://api.github.com/users/jiqiujia/repos", "events_url": "https://api.github.com/users/jiqiujia/events{/privacy}", "received_events_url": "https://api.github.com/users/jiqiujia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-08-08T13:38:45Z", "updated_at": "2017-08-15T16:24:38Z", "closed_at": "2017-08-15T16:24:38Z", "author_association": "NONE", "body_html": "<p>In python, if we split the following string <code>'a#'.split('#')</code>, we will get a list of two elements: <code>['a', '']</code>.<br>\nWhile in tensorflow, if we use <code>tf.string_split</code>, we will get an sparsetensor with only one elements.<br>\nFor reproduction, you can run the following piece of code</p>\n<pre><code>a = tf.constant(\"#2\")\nb = tf.string_split([a], \"#\")\nwith tf.Session() as ss:\n    ss.run(tf.local_variables_initializer())\n    print(ss.run(b))\n</code></pre>\n<p>As a result, when we use <code>tf.string_split</code>, we don't know whether the <code>2</code> is before or after the <code>#</code>. I think such behavior is undesirable since we usually have missing values when decoding csv files.</p>", "body_text": "In python, if we split the following string 'a#'.split('#'), we will get a list of two elements: ['a', ''].\nWhile in tensorflow, if we use tf.string_split, we will get an sparsetensor with only one elements.\nFor reproduction, you can run the following piece of code\na = tf.constant(\"#2\")\nb = tf.string_split([a], \"#\")\nwith tf.Session() as ss:\n    ss.run(tf.local_variables_initializer())\n    print(ss.run(b))\n\nAs a result, when we use tf.string_split, we don't know whether the 2 is before or after the #. I think such behavior is undesirable since we usually have missing values when decoding csv files.", "body": "In python, if we split the following string `'a#'.split('#')`, we will get a list of two elements: `['a', '']`.\r\nWhile in tensorflow, if we use `tf.string_split`, we will get an sparsetensor with only one elements. \r\nFor reproduction, you can run the following piece of code\r\n```\r\na = tf.constant(\"#2\")\r\nb = tf.string_split([a], \"#\")\r\nwith tf.Session() as ss:\r\n    ss.run(tf.local_variables_initializer())\r\n    print(ss.run(b))\r\n```\r\nAs a result, when we use `tf.string_split`, we don't know whether the `2` is before or after the `#`. I think such behavior is undesirable since we usually have missing values when decoding csv files."}