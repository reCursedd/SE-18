{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/405904445", "html_url": "https://github.com/tensorflow/tensorflow/issues/19548#issuecomment-405904445", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19548", "id": 405904445, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTkwNDQ0NQ==", "user": {"login": "SunnyDjinn", "id": 15617854, "node_id": "MDQ6VXNlcjE1NjE3ODU0", "avatar_url": "https://avatars0.githubusercontent.com/u/15617854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SunnyDjinn", "html_url": "https://github.com/SunnyDjinn", "followers_url": "https://api.github.com/users/SunnyDjinn/followers", "following_url": "https://api.github.com/users/SunnyDjinn/following{/other_user}", "gists_url": "https://api.github.com/users/SunnyDjinn/gists{/gist_id}", "starred_url": "https://api.github.com/users/SunnyDjinn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SunnyDjinn/subscriptions", "organizations_url": "https://api.github.com/users/SunnyDjinn/orgs", "repos_url": "https://api.github.com/users/SunnyDjinn/repos", "events_url": "https://api.github.com/users/SunnyDjinn/events{/privacy}", "received_events_url": "https://api.github.com/users/SunnyDjinn/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-18T11:52:17Z", "updated_at": "2018-07-19T13:15:26Z", "author_association": "NONE", "body_html": "<p>I have the same problem regarding the accuracy. When training with a greater batch size (e.g. 128), the reported accuracy is around 95% (I am using the resnet model supplied by tensorflow on a subset of the imagenet dataset). Here is the filled issue template.</p>\n<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: No</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: 16.04.4 LTS (Xenial Xerus)</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: v1.8.0-0-g93bc2e2072 1.8.0</li>\n<li><strong>Python version</strong>: Python 3.5.2</li>\n<li><strong>Bazel version (if compiling from source)</strong>:</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:</li>\n<li><strong>CUDA/cuDNN version</strong>: cuda-9.0 / libcudart.so.9.0.176</li>\n<li><strong>GPU model and memory</strong>: Tesla K80, 11441MiB</li>\n<li><strong>Exact command to reproduce</strong>: train the resnet18 model supplied by TensorFlow here: <a href=\"https://github.com/tensorflow/models/tree/master/official/resnet\">https://github.com/tensorflow/models/tree/master/official/resnet</a> with batch size 128 for example. After some epochs, the accuracy reported is about 95%. Then, train the same model taking the last checkpoint for 1 epoch with batch size 1. The accuracy drops down to 15%.</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>The reported accuracy drops down after only 1 epoch of training at batch size 1 when the model has previously been trained enough at batch size 128 to get an accuracy of 95%. This seems like an issue, either regarding the reported accuracy for validation, or regarding the training with different batch sizes. The latter seems less likely since only 1 epoch of training at batch size 1 has been made.</p>\n<h3>Source code / logs</h3>\n<p>After many epochs of training at batch size 128:</p>\n<pre><code>06:59:31.217821 139740337723136 tf_logging.py:116] Saving dict for global step 1671932: accuracy = 0.9535984\n</code></pre>\n<p>Adding 1 epoch at batch size 1 [edit, copy paste error]:</p>\n<pre><code>07:30:56.291565 139897669494528 tf_logging.py:116] Saving dict for global step 1678933: accuracy = 0.15321627\n</code></pre>", "body_text": "I have the same problem regarding the accuracy. When training with a greater batch size (e.g. 128), the reported accuracy is around 95% (I am using the resnet model supplied by tensorflow on a subset of the imagenet dataset). Here is the filled issue template.\nSystem information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): No\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): 16.04.4 LTS (Xenial Xerus)\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): v1.8.0-0-g93bc2e2072 1.8.0\nPython version: Python 3.5.2\nBazel version (if compiling from source):\nGCC/Compiler version (if compiling from source):\nCUDA/cuDNN version: cuda-9.0 / libcudart.so.9.0.176\nGPU model and memory: Tesla K80, 11441MiB\nExact command to reproduce: train the resnet18 model supplied by TensorFlow here: https://github.com/tensorflow/models/tree/master/official/resnet with batch size 128 for example. After some epochs, the accuracy reported is about 95%. Then, train the same model taking the last checkpoint for 1 epoch with batch size 1. The accuracy drops down to 15%.\n\nDescribe the problem\nThe reported accuracy drops down after only 1 epoch of training at batch size 1 when the model has previously been trained enough at batch size 128 to get an accuracy of 95%. This seems like an issue, either regarding the reported accuracy for validation, or regarding the training with different batch sizes. The latter seems less likely since only 1 epoch of training at batch size 1 has been made.\nSource code / logs\nAfter many epochs of training at batch size 128:\n06:59:31.217821 139740337723136 tf_logging.py:116] Saving dict for global step 1671932: accuracy = 0.9535984\n\nAdding 1 epoch at batch size 1 [edit, copy paste error]:\n07:30:56.291565 139897669494528 tf_logging.py:116] Saving dict for global step 1678933: accuracy = 0.15321627", "body": "I have the same problem regarding the accuracy. When training with a greater batch size (e.g. 128), the reported accuracy is around 95% (I am using the resnet model supplied by tensorflow on a subset of the imagenet dataset). Here is the filled issue template.\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: 16.04.4 LTS (Xenial Xerus)\r\n- **TensorFlow installed from (source or binary)**: binary \r\n- **TensorFlow version (use command below)**: v1.8.0-0-g93bc2e2072 1.8.0\r\n- **Python version**: Python 3.5.2\r\n- **Bazel version (if compiling from source)**: \r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**: cuda-9.0 / libcudart.so.9.0.176\r\n- **GPU model and memory**: Tesla K80, 11441MiB\r\n- **Exact command to reproduce**: train the resnet18 model supplied by TensorFlow here: https://github.com/tensorflow/models/tree/master/official/resnet with batch size 128 for example. After some epochs, the accuracy reported is about 95%. Then, train the same model taking the last checkpoint for 1 epoch with batch size 1. The accuracy drops down to 15%.\r\n\r\n### Describe the problem\r\nThe reported accuracy drops down after only 1 epoch of training at batch size 1 when the model has previously been trained enough at batch size 128 to get an accuracy of 95%. This seems like an issue, either regarding the reported accuracy for validation, or regarding the training with different batch sizes. The latter seems less likely since only 1 epoch of training at batch size 1 has been made.\r\n\r\n### Source code / logs\r\nAfter many epochs of training at batch size 128:\r\n```\r\n06:59:31.217821 139740337723136 tf_logging.py:116] Saving dict for global step 1671932: accuracy = 0.9535984\r\n```\r\n\r\nAdding 1 epoch at batch size 1 [edit, copy paste error]:\r\n```\r\n07:30:56.291565 139897669494528 tf_logging.py:116] Saving dict for global step 1678933: accuracy = 0.15321627\r\n```\r\n"}