{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2238", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2238/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2238/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2238/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/2238", "id": 153259468, "node_id": "MDU6SXNzdWUxNTMyNTk0Njg=", "number": 2238, "title": "Issue with conditional comparing (equal returning wrong type)", "user": {"login": "dtracers", "id": 1933836, "node_id": "MDQ6VXNlcjE5MzM4MzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1933836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtracers", "html_url": "https://github.com/dtracers", "followers_url": "https://api.github.com/users/dtracers/followers", "following_url": "https://api.github.com/users/dtracers/following{/other_user}", "gists_url": "https://api.github.com/users/dtracers/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtracers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtracers/subscriptions", "organizations_url": "https://api.github.com/users/dtracers/orgs", "repos_url": "https://api.github.com/users/dtracers/repos", "events_url": "https://api.github.com/users/dtracers/events{/privacy}", "received_events_url": "https://api.github.com/users/dtracers/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "girving", "id": 70511, "node_id": "MDQ6VXNlcjcwNTEx", "avatar_url": "https://avatars1.githubusercontent.com/u/70511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/girving", "html_url": "https://github.com/girving", "followers_url": "https://api.github.com/users/girving/followers", "following_url": "https://api.github.com/users/girving/following{/other_user}", "gists_url": "https://api.github.com/users/girving/gists{/gist_id}", "starred_url": "https://api.github.com/users/girving/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/girving/subscriptions", "organizations_url": "https://api.github.com/users/girving/orgs", "repos_url": "https://api.github.com/users/girving/repos", "events_url": "https://api.github.com/users/girving/events{/privacy}", "received_events_url": "https://api.github.com/users/girving/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "girving", "id": 70511, "node_id": "MDQ6VXNlcjcwNTEx", "avatar_url": "https://avatars1.githubusercontent.com/u/70511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/girving", "html_url": "https://github.com/girving", "followers_url": "https://api.github.com/users/girving/followers", "following_url": "https://api.github.com/users/girving/following{/other_user}", "gists_url": "https://api.github.com/users/girving/gists{/gist_id}", "starred_url": "https://api.github.com/users/girving/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/girving/subscriptions", "organizations_url": "https://api.github.com/users/girving/orgs", "repos_url": "https://api.github.com/users/girving/repos", "events_url": "https://api.github.com/users/girving/events{/privacy}", "received_events_url": "https://api.github.com/users/girving/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2016-05-05T15:39:51Z", "updated_at": "2016-05-05T20:01:34Z", "closed_at": "2016-05-05T20:00:42Z", "author_association": "NONE", "body_html": "<h3>Environment info</h3>\n<p>Operating System: Ubuntu</p>\n<p>Installed version of CUDA and cuDNN:<br>\n(please attach the output of <code>ls -l /path/to/cuda/lib/libcud*</code>): (this path did not exist)<br>\n7.5 is CUDA</p>\n<p>If installed from binary pip package, provide:</p>\n<ol>\n<li>Which pip package you installed. GPU Ubuntu .8.0</li>\n<li>The output from python -c \"import tensorflow; print(tensorflow.<strong>version</strong>)\".<br>\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcublas.so locally<br>\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcudnn.so locally<br>\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcufft.so locally<br>\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcuda.so.1 locally<br>\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcurand.so locally<br>\n0.8.0</li>\n</ol>\n<h3>Steps to reproduce</h3>\n<p>Code is also in this stack Overflow:<br>\n<a href=\"http://stackoverflow.com/questions/37044006/tensorflow-conditional-throwing-value-error/37053896#37053896\" rel=\"nofollow\">http://stackoverflow.com/questions/37044006/tensorflow-conditional-throwing-value-error/37053896#37053896</a></p>\n<pre><code>import tensorflow as tf\nimport numpy as np\n\nX = tf.constant([1, 0])\nY = tf.constant([0, 1])\nBOTH = tf.constant([1, 1])\nWORKING = tf.constant(1)\n\ndef create_mult_func(tf, amount, list):\n    def f1():\n        return tf.scalar_mul(amount, list)\n    return f1\n\ndef create_no_op_func(tensor):\n    def f1():\n        return tensor\n    return f1\n\ndef stretch(tf, points, dim, amount):\n    \"\"\"points is a 2 by ??? tensor, dim is a 1 by 2 tensor, amount is tensor scalor\"\"\"\n    x_list, y_list = tf.split(0, 2, points)\n    x_stretch, y_stretch = tf.split(0, 2, dim)\n    is_stretch_X = tf.equal(x_stretch, WORKING, name=\"is_stretch_x\")\n    is_stretch_Y = tf.equal(y_stretch, WORKING, name=\"is_stretch_Y\")\n    print tf.shape(is_stretch_X)\n    print tf.shape(is_stretch_Y)\n    x_list_stretched = tf.cond(is_stretch_X,\n                               create_mult_func(tf, amount, x_list), create_no_op_func(x_list))\n    y_list_stretched = tf.cond(is_stretch_Y,\n                               create_mult_func(tf, amount, y_list), create_no_op_func(y_list))\n    return tf.pack(x_list_stretched, y_list_stretched)\n\nexample_points = np.array([[1, 1], [2, 2], [3, 3]], dtype=np.float32)\nexample_point_list = tf.placeholder(tf.float32)\n\nresult = stretch(tf, example_point_list, X, 1)\nsess = tf.Session()\n\nwith tf.Session() as sess:\n    result = sess.run(result, feed_dict={example_point_list: example_points})\n    print(result)\n</code></pre>\n<h3>What have you tried?</h3>\n<ol>\n<li>passing in a scalar instead of a tensor by reshaping the tensor</li>\n<li>changing <code>WORKING</code> to ```tf.constant([1])</li>\n</ol>\n<h3>This fixes the error but seems very wrong and does not fix the other issues</h3>\n<pre><code>is_stretch_X = tf.reshape(tf.cast(tf.equal(x_stretch, WORKING, name=\"is_stretch_x\"), tf.bool), [])\nis_stretch_Y = tf.reshape(tf.cast(tf.equal(y_stretch, WORKING, name=\"is_stretch_Y\"), tf.bool), [])\n</code></pre>\n<p>The result of equal should be passed to the conditional without needing to reshape or cast to a boolean first.<br>\nBtw it ignores the cast to the boolean as well leaving it as an int32</p>\n<h3>Logs or other output that would be helpful</h3>\n<p>(If logs are large, please upload as attachment).</p>\n<pre><code>File \"/path/test2.py\", line 36, in &lt;module&gt;\n    result = stretch(tf, example_point_list, X, 1)\n  File \"/path/test2.py\", line 28, in stretch\n    create_mult_func(tf, amount, x_list), create_no_op_func(x_list))\n  File \"/path/tensorflow/python/ops/control_flow_ops.py\", line 1142, in cond\n    p_2, p_1 = switch(pred, pred)\n  File \"/path/tensorflow/python/ops/control_flow_ops.py\", line 203, in switch\n    return gen_control_flow_ops._switch(data, pred, name=name)\n  File \"/path/tensorflow/python/ops/gen_control_flow_ops.py\", line 297, in _switch\n    return _op_def_lib.apply_op(\"Switch\", data=data, pred=pred, name=name)\n  File \"/path/tensorflow/python/ops/op_def_library.py\", line 655, in apply_op\n    op_def=op_def)\n  File \"/path/tensorflow/python/framework/ops.py\", line 2156, in create_op\n    set_shapes_for_outputs(ret)\n  File \"/path/tensorflow/python/framework/ops.py\", line 1612, in set_shapes_for_outputs\n    shapes = shape_func(op)\n  File \"/path/tensorflow/python/ops/control_flow_ops.py\", line 2032, in _SwitchShape\n    unused_pred_shape = op.inputs[1].get_shape().merge_with(tensor_shape.scalar())\n  File \"/path/tensorflow/python/framework/tensor_shape.py\", line 554, in merge_with\n    (self, other))\nValueError: Shapes (1,) and () are not compatible\n</code></pre>", "body_text": "Environment info\nOperating System: Ubuntu\nInstalled version of CUDA and cuDNN:\n(please attach the output of ls -l /path/to/cuda/lib/libcud*): (this path did not exist)\n7.5 is CUDA\nIf installed from binary pip package, provide:\n\nWhich pip package you installed. GPU Ubuntu .8.0\nThe output from python -c \"import tensorflow; print(tensorflow.version)\".\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcurand.so locally\n0.8.0\n\nSteps to reproduce\nCode is also in this stack Overflow:\nhttp://stackoverflow.com/questions/37044006/tensorflow-conditional-throwing-value-error/37053896#37053896\nimport tensorflow as tf\nimport numpy as np\n\nX = tf.constant([1, 0])\nY = tf.constant([0, 1])\nBOTH = tf.constant([1, 1])\nWORKING = tf.constant(1)\n\ndef create_mult_func(tf, amount, list):\n    def f1():\n        return tf.scalar_mul(amount, list)\n    return f1\n\ndef create_no_op_func(tensor):\n    def f1():\n        return tensor\n    return f1\n\ndef stretch(tf, points, dim, amount):\n    \"\"\"points is a 2 by ??? tensor, dim is a 1 by 2 tensor, amount is tensor scalor\"\"\"\n    x_list, y_list = tf.split(0, 2, points)\n    x_stretch, y_stretch = tf.split(0, 2, dim)\n    is_stretch_X = tf.equal(x_stretch, WORKING, name=\"is_stretch_x\")\n    is_stretch_Y = tf.equal(y_stretch, WORKING, name=\"is_stretch_Y\")\n    print tf.shape(is_stretch_X)\n    print tf.shape(is_stretch_Y)\n    x_list_stretched = tf.cond(is_stretch_X,\n                               create_mult_func(tf, amount, x_list), create_no_op_func(x_list))\n    y_list_stretched = tf.cond(is_stretch_Y,\n                               create_mult_func(tf, amount, y_list), create_no_op_func(y_list))\n    return tf.pack(x_list_stretched, y_list_stretched)\n\nexample_points = np.array([[1, 1], [2, 2], [3, 3]], dtype=np.float32)\nexample_point_list = tf.placeholder(tf.float32)\n\nresult = stretch(tf, example_point_list, X, 1)\nsess = tf.Session()\n\nwith tf.Session() as sess:\n    result = sess.run(result, feed_dict={example_point_list: example_points})\n    print(result)\n\nWhat have you tried?\n\npassing in a scalar instead of a tensor by reshaping the tensor\nchanging WORKING to ```tf.constant([1])\n\nThis fixes the error but seems very wrong and does not fix the other issues\nis_stretch_X = tf.reshape(tf.cast(tf.equal(x_stretch, WORKING, name=\"is_stretch_x\"), tf.bool), [])\nis_stretch_Y = tf.reshape(tf.cast(tf.equal(y_stretch, WORKING, name=\"is_stretch_Y\"), tf.bool), [])\n\nThe result of equal should be passed to the conditional without needing to reshape or cast to a boolean first.\nBtw it ignores the cast to the boolean as well leaving it as an int32\nLogs or other output that would be helpful\n(If logs are large, please upload as attachment).\nFile \"/path/test2.py\", line 36, in <module>\n    result = stretch(tf, example_point_list, X, 1)\n  File \"/path/test2.py\", line 28, in stretch\n    create_mult_func(tf, amount, x_list), create_no_op_func(x_list))\n  File \"/path/tensorflow/python/ops/control_flow_ops.py\", line 1142, in cond\n    p_2, p_1 = switch(pred, pred)\n  File \"/path/tensorflow/python/ops/control_flow_ops.py\", line 203, in switch\n    return gen_control_flow_ops._switch(data, pred, name=name)\n  File \"/path/tensorflow/python/ops/gen_control_flow_ops.py\", line 297, in _switch\n    return _op_def_lib.apply_op(\"Switch\", data=data, pred=pred, name=name)\n  File \"/path/tensorflow/python/ops/op_def_library.py\", line 655, in apply_op\n    op_def=op_def)\n  File \"/path/tensorflow/python/framework/ops.py\", line 2156, in create_op\n    set_shapes_for_outputs(ret)\n  File \"/path/tensorflow/python/framework/ops.py\", line 1612, in set_shapes_for_outputs\n    shapes = shape_func(op)\n  File \"/path/tensorflow/python/ops/control_flow_ops.py\", line 2032, in _SwitchShape\n    unused_pred_shape = op.inputs[1].get_shape().merge_with(tensor_shape.scalar())\n  File \"/path/tensorflow/python/framework/tensor_shape.py\", line 554, in merge_with\n    (self, other))\nValueError: Shapes (1,) and () are not compatible", "body": "### Environment info\n\nOperating System: Ubuntu\n\nInstalled version of CUDA and cuDNN: \n(please attach the output of `ls -l /path/to/cuda/lib/libcud*`): (this path did not exist)\n7.5 is CUDA\n\nIf installed from binary pip package, provide:\n1. Which pip package you installed. GPU Ubuntu .8.0\n2. The output from python -c \"import tensorflow; print(tensorflow.**version**)\".\n   I tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcublas.so locally\n   I tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcudnn.so locally\n   I tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcufft.so locally\n   I tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcuda.so.1 locally\n   I tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcurand.so locally\n   0.8.0\n### Steps to reproduce\n\nCode is also in this stack Overflow:\nhttp://stackoverflow.com/questions/37044006/tensorflow-conditional-throwing-value-error/37053896#37053896\n\n```\nimport tensorflow as tf\nimport numpy as np\n\nX = tf.constant([1, 0])\nY = tf.constant([0, 1])\nBOTH = tf.constant([1, 1])\nWORKING = tf.constant(1)\n\ndef create_mult_func(tf, amount, list):\n    def f1():\n        return tf.scalar_mul(amount, list)\n    return f1\n\ndef create_no_op_func(tensor):\n    def f1():\n        return tensor\n    return f1\n\ndef stretch(tf, points, dim, amount):\n    \"\"\"points is a 2 by ??? tensor, dim is a 1 by 2 tensor, amount is tensor scalor\"\"\"\n    x_list, y_list = tf.split(0, 2, points)\n    x_stretch, y_stretch = tf.split(0, 2, dim)\n    is_stretch_X = tf.equal(x_stretch, WORKING, name=\"is_stretch_x\")\n    is_stretch_Y = tf.equal(y_stretch, WORKING, name=\"is_stretch_Y\")\n    print tf.shape(is_stretch_X)\n    print tf.shape(is_stretch_Y)\n    x_list_stretched = tf.cond(is_stretch_X,\n                               create_mult_func(tf, amount, x_list), create_no_op_func(x_list))\n    y_list_stretched = tf.cond(is_stretch_Y,\n                               create_mult_func(tf, amount, y_list), create_no_op_func(y_list))\n    return tf.pack(x_list_stretched, y_list_stretched)\n\nexample_points = np.array([[1, 1], [2, 2], [3, 3]], dtype=np.float32)\nexample_point_list = tf.placeholder(tf.float32)\n\nresult = stretch(tf, example_point_list, X, 1)\nsess = tf.Session()\n\nwith tf.Session() as sess:\n    result = sess.run(result, feed_dict={example_point_list: example_points})\n    print(result)\n```\n### What have you tried?\n1. passing in a scalar instead of a tensor by reshaping the tensor\n2. changing `WORKING` to ```tf.constant([1]) \n### This fixes the error but seems very wrong and does not fix the other issues\n\n```\nis_stretch_X = tf.reshape(tf.cast(tf.equal(x_stretch, WORKING, name=\"is_stretch_x\"), tf.bool), [])\nis_stretch_Y = tf.reshape(tf.cast(tf.equal(y_stretch, WORKING, name=\"is_stretch_Y\"), tf.bool), [])\n```\n\nThe result of equal should be passed to the conditional without needing to reshape or cast to a boolean first.\nBtw it ignores the cast to the boolean as well leaving it as an int32\n### Logs or other output that would be helpful\n\n(If logs are large, please upload as attachment).\n\n```\nFile \"/path/test2.py\", line 36, in <module>\n    result = stretch(tf, example_point_list, X, 1)\n  File \"/path/test2.py\", line 28, in stretch\n    create_mult_func(tf, amount, x_list), create_no_op_func(x_list))\n  File \"/path/tensorflow/python/ops/control_flow_ops.py\", line 1142, in cond\n    p_2, p_1 = switch(pred, pred)\n  File \"/path/tensorflow/python/ops/control_flow_ops.py\", line 203, in switch\n    return gen_control_flow_ops._switch(data, pred, name=name)\n  File \"/path/tensorflow/python/ops/gen_control_flow_ops.py\", line 297, in _switch\n    return _op_def_lib.apply_op(\"Switch\", data=data, pred=pred, name=name)\n  File \"/path/tensorflow/python/ops/op_def_library.py\", line 655, in apply_op\n    op_def=op_def)\n  File \"/path/tensorflow/python/framework/ops.py\", line 2156, in create_op\n    set_shapes_for_outputs(ret)\n  File \"/path/tensorflow/python/framework/ops.py\", line 1612, in set_shapes_for_outputs\n    shapes = shape_func(op)\n  File \"/path/tensorflow/python/ops/control_flow_ops.py\", line 2032, in _SwitchShape\n    unused_pred_shape = op.inputs[1].get_shape().merge_with(tensor_shape.scalar())\n  File \"/path/tensorflow/python/framework/tensor_shape.py\", line 554, in merge_with\n    (self, other))\nValueError: Shapes (1,) and () are not compatible\n```\n"}