{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/297722305", "html_url": "https://github.com/tensorflow/tensorflow/issues/9471#issuecomment-297722305", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9471", "id": 297722305, "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzcyMjMwNQ==", "user": {"login": "ruiann", "id": 5110107, "node_id": "MDQ6VXNlcjUxMTAxMDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/5110107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ruiann", "html_url": "https://github.com/ruiann", "followers_url": "https://api.github.com/users/ruiann/followers", "following_url": "https://api.github.com/users/ruiann/following{/other_user}", "gists_url": "https://api.github.com/users/ruiann/gists{/gist_id}", "starred_url": "https://api.github.com/users/ruiann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ruiann/subscriptions", "organizations_url": "https://api.github.com/users/ruiann/orgs", "repos_url": "https://api.github.com/users/ruiann/repos", "events_url": "https://api.github.com/users/ruiann/events{/privacy}", "received_events_url": "https://api.github.com/users/ruiann/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-27T14:02:50Z", "updated_at": "2017-04-27T14:02:50Z", "author_association": "NONE", "body_html": "<p>== cat /etc/issue ===============================================<br>\nLinux inverse 4.4.0-75-generic <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"116139237\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/96\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/96/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/96\">#96</a>-Ubuntu SMP Thu Apr 20 09:56:33 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux<br>\nVERSION=\"16.04.2 LTS (Xenial Xerus)\"<br>\nVERSION_ID=\"16.04\"<br>\nVERSION_CODENAME=xenial</p>\n<p>== are we in docker =============================================<br>\nNo</p>\n<p>== compiler =====================================================<br>\nc++ (Ubuntu 5.4.0-6ubuntu1~16.04.4) 5.4.0 20160609<br>\nCopyright (C) 2015 Free Software Foundation, Inc.<br>\nThis is free software; see the source for copying conditions.  There is NO<br>\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</p>\n<p>== uname -a =====================================================<br>\nLinux inverse 4.4.0-75-generic <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"116139237\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/96\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/96/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/96\">#96</a>-Ubuntu SMP Thu Apr 20 09:56:33 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux</p>\n<p>== check pips ===================================================<br>\nnumpy (1.12.1rc1)<br>\nprotobuf (3.2.0)<br>\ntensorflow-gpu (1.0.1)</p>\n<p>== check for virtualenv =========================================<br>\nFalse</p>\n<p>== tensorflow import ============================================<br>\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcublas.so.8.0 locally<br>\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcudnn.so.5 locally<br>\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcufft.so.8.0 locally<br>\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcuda.so.1 locally<br>\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcurand.so.8.0 locally<br>\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE3 instructions, but these are available on your machine and could speed up CPU computations.<br>\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.<br>\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.<br>\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.<br>\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.<br>\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.<br>\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:910] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero<br>\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:885] Found device 0 with properties:<br>\nname: GeForce GTX 1060 6GB<br>\nmajor: 6 minor: 1 memoryClockRate (GHz) 1.7845<br>\npciBusID 0000:01:00.0<br>\nTotal memory: 5.92GiB<br>\nFree memory: 1.19GiB<br>\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:906] DMA: 0<br>\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 0:   Y<br>\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -&gt; (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)<br>\ntf.VERSION = 1.0.1<br>\ntf.GIT_VERSION = v1.0.0-65-g4763edf-dirty<br>\ntf.COMPILER_VERSION = v1.0.0-65-g4763edf-dirty<br>\nSanity check: array([1], dtype=int32)<br>\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcublas.so.8.0 locally<br>\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcudnn.so.5 locally<br>\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcufft.so.8.0 locally<br>\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcuda.so.1 locally<br>\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcurand.so.8.0 locally</p>\n<p>== env ==========================================================<br>\nLD_LIBRARY_PATH /usr/local/cuda-8.0/lib64<br>\nDYLD_LIBRARY_PATH is unset</p>\n<p>== nvidia-smi ===================================================<br>\nThu Apr 27 21:44:49 2017<br>\n+-----------------------------------------------------------------------------+<br>\n| NVIDIA-SMI 375.39                 Driver Version: 375.39                    |<br>\n|-------------------------------+----------------------+----------------------+<br>\n| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |<br>\n| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |<br>\n|===============================+======================+======================|<br>\n|   0  GeForce GTX 106...  Off  | 0000:01:00.0      On |                  N/A |<br>\n| 15%   46C    P2    29W / 150W |   4781MiB /  6064MiB |      3%      Default |<br>\n+-------------------------------+----------------------+----------------------+</p>\n<p>+-----------------------------------------------------------------------------+<br>\n| Processes:                                                       GPU Memory |<br>\n|  GPU       PID  Type  Process name                               Usage      |<br>\n|=============================================================================|<br>\n|    0      1432    G   /usr/lib/xorg/Xorg                             209MiB |<br>\n|    0      2030    G   compiz                                          62MiB |<br>\n|    0      3119    C   python                                        4427MiB |<br>\n|    0      4590    G   /home/inverse/.steam/ubuntu12_32/steam          28MiB |<br>\n|    0      6412    G   ...el-token=66A5E1EB1D60EC20A68FDE459A10598F    48MiB |<br>\n+-----------------------------------------------------------------------------+</p>\n<p>== cuda libs  ===================================================<br>\n/usr/local/cuda-8.0/lib64/libcudart_static.a<br>\n/usr/local/cuda-8.0/lib64/libcudart.so.8.0.61<br>\n/usr/local/cuda-8.0/doc/man/man7/libcudart.so.7<br>\n/usr/local/cuda-8.0/doc/man/man7/libcudart.7</p>\n<p>step: 1160<br>\nstep cost: 44s<br>\nstep: 1161<br>\nstep cost: 32s<br>\nstep: 1162<br>\nstep cost: 34s<br>\nstep: 1163<br>\nstep cost: 33s<br>\nstep: 1164<br>\nstep cost: 33s<br>\nstep: 1165<br>\nstep cost: 34s<br>\nstep: 1166<br>\nstep cost: 34s<br>\nstep: 1167<br>\nstep cost: 35s<br>\nstep: 1168<br>\nstep cost: 36s<br>\nstep: 1169<br>\nstep cost: 38s<br>\nstep: 1170<br>\nstep cost: 39s<br>\nstep: 1171<br>\nstep cost: 40s<br>\nstep: 1172<br>\nstep cost: 42s<br>\nstep: 1173<br>\nstep cost: 43s<br>\nstep: 1174<br>\nstep cost: 44s<br>\nstep: 1175<br>\nstep cost: 51s<br>\nstep: 1176<br>\nstep cost: 50s<br>\nstep: 1177<br>\nstep cost: 51s<br>\nstep: 1178</p>\n<p>You can see the time cost increases with step, after restart the training task it reduces to 35s again</p>\n<p>My training code like this</p>\n<pre><code> while queue.size().eval() &gt; batch_size:\n        start_time = time.time()\n        step = global_step.eval()\n        print('step: %d' % step)\n        x_batch = [get_image(image.eval()) for i in xrange(batch_size)]\n        summary_str, d_loss, g_loss = sess.run([summary, d_train_op, g_train_op], feed_dict={x: x_batch})\n        summary_writer.add_summary(summary_str, step)\n\n        if global_step.eval() % 20 == 0:\n                checkpoint_file = os.path.join(model_dir, 'model.latest')\n                saver.save(sess, checkpoint_file)\n\n        if global_step.eval() % 100 == 0:\n                summary_writer.add_run_metadata(run_metadata, 'step%03d' % step)\n\n        sess.run(update_global_step)\n        print(\"step cost: %ds\" % (time.time() - start_time))\nsummary_writer.close()\n</code></pre>", "body_text": "== cat /etc/issue ===============================================\nLinux inverse 4.4.0-75-generic #96-Ubuntu SMP Thu Apr 20 09:56:33 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\nVERSION=\"16.04.2 LTS (Xenial Xerus)\"\nVERSION_ID=\"16.04\"\nVERSION_CODENAME=xenial\n== are we in docker =============================================\nNo\n== compiler =====================================================\nc++ (Ubuntu 5.4.0-6ubuntu1~16.04.4) 5.4.0 20160609\nCopyright (C) 2015 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n== uname -a =====================================================\nLinux inverse 4.4.0-75-generic #96-Ubuntu SMP Thu Apr 20 09:56:33 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\n== check pips ===================================================\nnumpy (1.12.1rc1)\nprotobuf (3.2.0)\ntensorflow-gpu (1.0.1)\n== check for virtualenv =========================================\nFalse\n== tensorflow import ============================================\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcublas.so.8.0 locally\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcudnn.so.5 locally\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcufft.so.8.0 locally\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcurand.so.8.0 locally\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE3 instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:910] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:885] Found device 0 with properties:\nname: GeForce GTX 1060 6GB\nmajor: 6 minor: 1 memoryClockRate (GHz) 1.7845\npciBusID 0000:01:00.0\nTotal memory: 5.92GiB\nFree memory: 1.19GiB\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:906] DMA: 0\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 0:   Y\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)\ntf.VERSION = 1.0.1\ntf.GIT_VERSION = v1.0.0-65-g4763edf-dirty\ntf.COMPILER_VERSION = v1.0.0-65-g4763edf-dirty\nSanity check: array([1], dtype=int32)\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcublas.so.8.0 locally\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcudnn.so.5 locally\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcufft.so.8.0 locally\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcurand.so.8.0 locally\n== env ==========================================================\nLD_LIBRARY_PATH /usr/local/cuda-8.0/lib64\nDYLD_LIBRARY_PATH is unset\n== nvidia-smi ===================================================\nThu Apr 27 21:44:49 2017\n+-----------------------------------------------------------------------------+\n| NVIDIA-SMI 375.39                 Driver Version: 375.39                    |\n|-------------------------------+----------------------+----------------------+\n| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n|===============================+======================+======================|\n|   0  GeForce GTX 106...  Off  | 0000:01:00.0      On |                  N/A |\n| 15%   46C    P2    29W / 150W |   4781MiB /  6064MiB |      3%      Default |\n+-------------------------------+----------------------+----------------------+\n+-----------------------------------------------------------------------------+\n| Processes:                                                       GPU Memory |\n|  GPU       PID  Type  Process name                               Usage      |\n|=============================================================================|\n|    0      1432    G   /usr/lib/xorg/Xorg                             209MiB |\n|    0      2030    G   compiz                                          62MiB |\n|    0      3119    C   python                                        4427MiB |\n|    0      4590    G   /home/inverse/.steam/ubuntu12_32/steam          28MiB |\n|    0      6412    G   ...el-token=66A5E1EB1D60EC20A68FDE459A10598F    48MiB |\n+-----------------------------------------------------------------------------+\n== cuda libs  ===================================================\n/usr/local/cuda-8.0/lib64/libcudart_static.a\n/usr/local/cuda-8.0/lib64/libcudart.so.8.0.61\n/usr/local/cuda-8.0/doc/man/man7/libcudart.so.7\n/usr/local/cuda-8.0/doc/man/man7/libcudart.7\nstep: 1160\nstep cost: 44s\nstep: 1161\nstep cost: 32s\nstep: 1162\nstep cost: 34s\nstep: 1163\nstep cost: 33s\nstep: 1164\nstep cost: 33s\nstep: 1165\nstep cost: 34s\nstep: 1166\nstep cost: 34s\nstep: 1167\nstep cost: 35s\nstep: 1168\nstep cost: 36s\nstep: 1169\nstep cost: 38s\nstep: 1170\nstep cost: 39s\nstep: 1171\nstep cost: 40s\nstep: 1172\nstep cost: 42s\nstep: 1173\nstep cost: 43s\nstep: 1174\nstep cost: 44s\nstep: 1175\nstep cost: 51s\nstep: 1176\nstep cost: 50s\nstep: 1177\nstep cost: 51s\nstep: 1178\nYou can see the time cost increases with step, after restart the training task it reduces to 35s again\nMy training code like this\n while queue.size().eval() > batch_size:\n        start_time = time.time()\n        step = global_step.eval()\n        print('step: %d' % step)\n        x_batch = [get_image(image.eval()) for i in xrange(batch_size)]\n        summary_str, d_loss, g_loss = sess.run([summary, d_train_op, g_train_op], feed_dict={x: x_batch})\n        summary_writer.add_summary(summary_str, step)\n\n        if global_step.eval() % 20 == 0:\n                checkpoint_file = os.path.join(model_dir, 'model.latest')\n                saver.save(sess, checkpoint_file)\n\n        if global_step.eval() % 100 == 0:\n                summary_writer.add_run_metadata(run_metadata, 'step%03d' % step)\n\n        sess.run(update_global_step)\n        print(\"step cost: %ds\" % (time.time() - start_time))\nsummary_writer.close()", "body": "== cat /etc/issue ===============================================\r\nLinux inverse 4.4.0-75-generic #96-Ubuntu SMP Thu Apr 20 09:56:33 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\r\nVERSION=\"16.04.2 LTS (Xenial Xerus)\"\r\nVERSION_ID=\"16.04\"\r\nVERSION_CODENAME=xenial\r\n\r\n== are we in docker =============================================\r\nNo\r\n\r\n== compiler =====================================================\r\nc++ (Ubuntu 5.4.0-6ubuntu1~16.04.4) 5.4.0 20160609\r\nCopyright (C) 2015 Free Software Foundation, Inc.\r\nThis is free software; see the source for copying conditions.  There is NO\r\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n\r\n\r\n== uname -a =====================================================\r\nLinux inverse 4.4.0-75-generic #96-Ubuntu SMP Thu Apr 20 09:56:33 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\r\n\r\n== check pips ===================================================\r\nnumpy (1.12.1rc1)\r\nprotobuf (3.2.0)\r\ntensorflow-gpu (1.0.1)\r\n\r\n== check for virtualenv =========================================\r\nFalse\r\n\r\n== tensorflow import ============================================\r\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcublas.so.8.0 locally\r\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcudnn.so.5 locally\r\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcufft.so.8.0 locally\r\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcuda.so.1 locally\r\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcurand.so.8.0 locally\r\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE3 instructions, but these are available on your machine and could speed up CPU computations.\r\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.\r\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\r\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\r\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.\r\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.\r\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:910] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\r\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:885] Found device 0 with properties: \r\nname: GeForce GTX 1060 6GB\r\nmajor: 6 minor: 1 memoryClockRate (GHz) 1.7845\r\npciBusID 0000:01:00.0\r\nTotal memory: 5.92GiB\r\nFree memory: 1.19GiB\r\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:906] DMA: 0 \r\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 0:   Y \r\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)\r\ntf.VERSION = 1.0.1\r\ntf.GIT_VERSION = v1.0.0-65-g4763edf-dirty\r\ntf.COMPILER_VERSION = v1.0.0-65-g4763edf-dirty\r\nSanity check: array([1], dtype=int32)\r\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcublas.so.8.0 locally\r\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcudnn.so.5 locally\r\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcufft.so.8.0 locally\r\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcuda.so.1 locally\r\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcurand.so.8.0 locally\r\n\r\n== env ==========================================================\r\nLD_LIBRARY_PATH /usr/local/cuda-8.0/lib64\r\nDYLD_LIBRARY_PATH is unset\r\n\r\n== nvidia-smi ===================================================\r\nThu Apr 27 21:44:49 2017       \r\n+-----------------------------------------------------------------------------+\r\n| NVIDIA-SMI 375.39                 Driver Version: 375.39                    |\r\n|-------------------------------+----------------------+----------------------+\r\n| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\r\n| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\r\n|===============================+======================+======================|\r\n|   0  GeForce GTX 106...  Off  | 0000:01:00.0      On |                  N/A |\r\n| 15%   46C    P2    29W / 150W |   4781MiB /  6064MiB |      3%      Default |\r\n+-------------------------------+----------------------+----------------------+\r\n                                                                               \r\n+-----------------------------------------------------------------------------+\r\n| Processes:                                                       GPU Memory |\r\n|  GPU       PID  Type  Process name                               Usage      |\r\n|=============================================================================|\r\n|    0      1432    G   /usr/lib/xorg/Xorg                             209MiB |\r\n|    0      2030    G   compiz                                          62MiB |\r\n|    0      3119    C   python                                        4427MiB |\r\n|    0      4590    G   /home/inverse/.steam/ubuntu12_32/steam          28MiB |\r\n|    0      6412    G   ...el-token=66A5E1EB1D60EC20A68FDE459A10598F    48MiB |\r\n+-----------------------------------------------------------------------------+\r\n\r\n== cuda libs  ===================================================\r\n/usr/local/cuda-8.0/lib64/libcudart_static.a\r\n/usr/local/cuda-8.0/lib64/libcudart.so.8.0.61\r\n/usr/local/cuda-8.0/doc/man/man7/libcudart.so.7\r\n/usr/local/cuda-8.0/doc/man/man7/libcudart.7\r\n\r\nstep: 1160\r\nstep cost: 44s\r\nstep: 1161\r\nstep cost: 32s\r\nstep: 1162\r\nstep cost: 34s\r\nstep: 1163\r\nstep cost: 33s\r\nstep: 1164\r\nstep cost: 33s\r\nstep: 1165\r\nstep cost: 34s\r\nstep: 1166\r\nstep cost: 34s\r\nstep: 1167\r\nstep cost: 35s\r\nstep: 1168\r\nstep cost: 36s\r\nstep: 1169\r\nstep cost: 38s\r\nstep: 1170\r\nstep cost: 39s\r\nstep: 1171\r\nstep cost: 40s\r\nstep: 1172\r\nstep cost: 42s\r\nstep: 1173\r\nstep cost: 43s\r\nstep: 1174\r\nstep cost: 44s\r\nstep: 1175\r\nstep cost: 51s\r\nstep: 1176\r\nstep cost: 50s\r\nstep: 1177\r\nstep cost: 51s\r\nstep: 1178\r\n\r\n\r\nYou can see the time cost increases with step, after restart the training task it reduces to 35s again\r\n\r\nMy training code like this\r\n```\r\n while queue.size().eval() > batch_size:\r\n        start_time = time.time()\r\n        step = global_step.eval()\r\n        print('step: %d' % step)\r\n        x_batch = [get_image(image.eval()) for i in xrange(batch_size)]\r\n        summary_str, d_loss, g_loss = sess.run([summary, d_train_op, g_train_op], feed_dict={x: x_batch})\r\n        summary_writer.add_summary(summary_str, step)\r\n\r\n        if global_step.eval() % 20 == 0:\r\n                checkpoint_file = os.path.join(model_dir, 'model.latest')\r\n                saver.save(sess, checkpoint_file)\r\n\r\n        if global_step.eval() % 100 == 0:\r\n                summary_writer.add_run_metadata(run_metadata, 'step%03d' % step)\r\n\r\n        sess.run(update_global_step)\r\n        print(\"step cost: %ds\" % (time.time() - start_time))\r\nsummary_writer.close()\r\n```\r\n\r\n\r\n"}