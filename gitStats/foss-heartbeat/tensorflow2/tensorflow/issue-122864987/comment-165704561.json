{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/165704561", "html_url": "https://github.com/tensorflow/tensorflow/issues/540#issuecomment-165704561", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/540", "id": 165704561, "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTcwNDU2MQ==", "user": {"login": "bschreck", "id": 3237925, "node_id": "MDQ6VXNlcjMyMzc5MjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3237925?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bschreck", "html_url": "https://github.com/bschreck", "followers_url": "https://api.github.com/users/bschreck/followers", "following_url": "https://api.github.com/users/bschreck/following{/other_user}", "gists_url": "https://api.github.com/users/bschreck/gists{/gist_id}", "starred_url": "https://api.github.com/users/bschreck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bschreck/subscriptions", "organizations_url": "https://api.github.com/users/bschreck/orgs", "repos_url": "https://api.github.com/users/bschreck/repos", "events_url": "https://api.github.com/users/bschreck/events{/privacy}", "received_events_url": "https://api.github.com/users/bschreck/received_events", "type": "User", "site_admin": false}, "created_at": "2015-12-18T07:41:38Z", "updated_at": "2015-12-18T07:41:38Z", "author_association": "NONE", "body_html": "<p>I found this was a problem too, and hacked a solution together by registering a shape for it:</p>\n<pre><code>ops.RegisterShape(\"ExtractGlimpse\")\ndef _ExtractGlimpseShape(op):\n  \"\"\"Shape function for ExtractGlimpse op.\"\"\"\n  input_shape = op.inputs[0].get_shape().with_rank(4)\n  unused_size_shape = op.inputs[1].get_shape().merge_with(\n      tensor_shape.vector(2))\n  offsets_shape = op.inputs[2].get_shape().merge_with(\n      input_shape[:1].concatenate([2]))\n   offsets_shape = offsets_shape\n   size_value = tf.ConstantValue(op.inputs[1])\n  if size_value is not None:\n    height = size_value[0]\n    width = size_value[1]\n  else:\n    height = None\n    width = None\n  return [tf.TensorShape(\n      [input_shape[0], height, width, input_shape[3]])]\n</code></pre>", "body_text": "I found this was a problem too, and hacked a solution together by registering a shape for it:\nops.RegisterShape(\"ExtractGlimpse\")\ndef _ExtractGlimpseShape(op):\n  \"\"\"Shape function for ExtractGlimpse op.\"\"\"\n  input_shape = op.inputs[0].get_shape().with_rank(4)\n  unused_size_shape = op.inputs[1].get_shape().merge_with(\n      tensor_shape.vector(2))\n  offsets_shape = op.inputs[2].get_shape().merge_with(\n      input_shape[:1].concatenate([2]))\n   offsets_shape = offsets_shape\n   size_value = tf.ConstantValue(op.inputs[1])\n  if size_value is not None:\n    height = size_value[0]\n    width = size_value[1]\n  else:\n    height = None\n    width = None\n  return [tf.TensorShape(\n      [input_shape[0], height, width, input_shape[3]])]", "body": "I found this was a problem too, and hacked a solution together by registering a shape for it:\n\n```\nops.RegisterShape(\"ExtractGlimpse\")\ndef _ExtractGlimpseShape(op):\n  \"\"\"Shape function for ExtractGlimpse op.\"\"\"\n  input_shape = op.inputs[0].get_shape().with_rank(4)\n  unused_size_shape = op.inputs[1].get_shape().merge_with(\n      tensor_shape.vector(2))\n  offsets_shape = op.inputs[2].get_shape().merge_with(\n      input_shape[:1].concatenate([2]))\n   offsets_shape = offsets_shape\n   size_value = tf.ConstantValue(op.inputs[1])\n  if size_value is not None:\n    height = size_value[0]\n    width = size_value[1]\n  else:\n    height = None\n    width = None\n  return [tf.TensorShape(\n      [input_shape[0], height, width, input_shape[3]])]\n```\n"}