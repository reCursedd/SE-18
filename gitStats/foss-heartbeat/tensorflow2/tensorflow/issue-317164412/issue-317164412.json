{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18827", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18827/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18827/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18827/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18827", "id": 317164412, "node_id": "MDU6SXNzdWUzMTcxNjQ0MTI=", "number": 18827, "title": "Feature Request: Allow for sloppy=True in TFRecordDataset's init", "user": {"login": "GPhilo", "id": 4441724, "node_id": "MDQ6VXNlcjQ0NDE3MjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/4441724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GPhilo", "html_url": "https://github.com/GPhilo", "followers_url": "https://api.github.com/users/GPhilo/followers", "following_url": "https://api.github.com/users/GPhilo/following{/other_user}", "gists_url": "https://api.github.com/users/GPhilo/gists{/gist_id}", "starred_url": "https://api.github.com/users/GPhilo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GPhilo/subscriptions", "organizations_url": "https://api.github.com/users/GPhilo/orgs", "repos_url": "https://api.github.com/users/GPhilo/repos", "events_url": "https://api.github.com/users/GPhilo/events{/privacy}", "received_events_url": "https://api.github.com/users/GPhilo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "jsimsa", "id": 1072079, "node_id": "MDQ6VXNlcjEwNzIwNzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1072079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsimsa", "html_url": "https://github.com/jsimsa", "followers_url": "https://api.github.com/users/jsimsa/followers", "following_url": "https://api.github.com/users/jsimsa/following{/other_user}", "gists_url": "https://api.github.com/users/jsimsa/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsimsa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsimsa/subscriptions", "organizations_url": "https://api.github.com/users/jsimsa/orgs", "repos_url": "https://api.github.com/users/jsimsa/repos", "events_url": "https://api.github.com/users/jsimsa/events{/privacy}", "received_events_url": "https://api.github.com/users/jsimsa/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jsimsa", "id": 1072079, "node_id": "MDQ6VXNlcjEwNzIwNzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1072079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsimsa", "html_url": "https://github.com/jsimsa", "followers_url": "https://api.github.com/users/jsimsa/followers", "following_url": "https://api.github.com/users/jsimsa/following{/other_user}", "gists_url": "https://api.github.com/users/jsimsa/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsimsa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsimsa/subscriptions", "organizations_url": "https://api.github.com/users/jsimsa/orgs", "repos_url": "https://api.github.com/users/jsimsa/repos", "events_url": "https://api.github.com/users/jsimsa/events{/privacy}", "received_events_url": "https://api.github.com/users/jsimsa/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-04-24T10:27:03Z", "updated_at": "2018-10-15T21:05:53Z", "closed_at": "2018-10-15T21:05:53Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: no</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: -</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: -</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.8.0 rc1</li>\n<li><strong>Python version</strong>: -</li>\n<li><strong>Bazel version (if compiling from source)</strong>:-</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: -</li>\n<li><strong>CUDA/cuDNN version</strong>: -</li>\n<li><strong>GPU model and memory</strong>: -</li>\n<li><strong>Exact command to reproduce</strong>: -</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>From TF 1.8 <code>TFRecordDataset</code> has a new init parameter <code>num_parallel_reads</code> which essentially wraps a <code>ParallelInterleaveDataset</code> around the <code>_TFRecordDataset</code> instance we're reading from.<br>\nIn the current implementation, the parallel interleave is hardcoded with <code>sloppy=False</code>.<br>\nWould it be possible to add <code>sloppy</code> as an additional parameter to TFRecordDataset? That would allow to simplify this:</p>\n<div class=\"highlight highlight-source-python\"><pre>files <span class=\"pl-k\">=</span> tf.data.list_files(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>somewhere/*<span class=\"pl-pds\">'</span></span>)\ndataset <span class=\"pl-k\">=</span> files.apply(tf.data.parallel_interleave(TFRecordDataset, <span class=\"pl-v\">cycle_length</span><span class=\"pl-k\">=</span>num_parallel_calls, <span class=\"pl-v\">sloppy</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>))</pre></div>\n<p>to</p>\n<div class=\"highlight highlight-source-python\"><pre>files <span class=\"pl-k\">=</span> tf.data.list_files(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>somewhere/*<span class=\"pl-pds\">'</span></span>)\ndataset <span class=\"pl-k\">=</span> TFRecordDataset(files, <span class=\"pl-v\">num_parallel_calls</span><span class=\"pl-k\">=</span>num_parallel_calls, <span class=\"pl-v\">sloppy</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>)</pre></div>\n<p>(Note that the underlying implementations are identical)</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): no\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): -\nTensorFlow installed from (source or binary): -\nTensorFlow version (use command below): 1.8.0 rc1\nPython version: -\nBazel version (if compiling from source):-\nGCC/Compiler version (if compiling from source): -\nCUDA/cuDNN version: -\nGPU model and memory: -\nExact command to reproduce: -\n\nDescribe the problem\nFrom TF 1.8 TFRecordDataset has a new init parameter num_parallel_reads which essentially wraps a ParallelInterleaveDataset around the _TFRecordDataset instance we're reading from.\nIn the current implementation, the parallel interleave is hardcoded with sloppy=False.\nWould it be possible to add sloppy as an additional parameter to TFRecordDataset? That would allow to simplify this:\nfiles = tf.data.list_files('somewhere/*')\ndataset = files.apply(tf.data.parallel_interleave(TFRecordDataset, cycle_length=num_parallel_calls, sloppy=True))\nto\nfiles = tf.data.list_files('somewhere/*')\ndataset = TFRecordDataset(files, num_parallel_calls=num_parallel_calls, sloppy=True)\n(Note that the underlying implementations are identical)", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: no\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: -\r\n- **TensorFlow installed from (source or binary)**: -\r\n- **TensorFlow version (use command below)**: 1.8.0 rc1\r\n- **Python version**: -\r\n- **Bazel version (if compiling from source)**:-\r\n- **GCC/Compiler version (if compiling from source)**: -\r\n- **CUDA/cuDNN version**: -\r\n- **GPU model and memory**: -\r\n- **Exact command to reproduce**: -\r\n\r\n### Describe the problem\r\nFrom TF 1.8 `TFRecordDataset` has a new init parameter `num_parallel_reads` which essentially wraps a `ParallelInterleaveDataset` around the `_TFRecordDataset` instance we're reading from.\r\nIn the current implementation, the parallel interleave is hardcoded with `sloppy=False`.\r\nWould it be possible to add `sloppy` as an additional parameter to TFRecordDataset? That would allow to simplify this:\r\n```python\r\nfiles = tf.data.list_files('somewhere/*')\r\ndataset = files.apply(tf.data.parallel_interleave(TFRecordDataset, cycle_length=num_parallel_calls, sloppy=True))\r\n```\r\nto\r\n```python\r\nfiles = tf.data.list_files('somewhere/*')\r\ndataset = TFRecordDataset(files, num_parallel_calls=num_parallel_calls, sloppy=True)\r\n```\r\n(Note that the underlying implementations are identical)"}