{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/248210409", "html_url": "https://github.com/tensorflow/tensorflow/issues/4434#issuecomment-248210409", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4434", "id": 248210409, "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODIxMDQwOQ==", "user": {"login": "yossibiton", "id": 6518016, "node_id": "MDQ6VXNlcjY1MTgwMTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/6518016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yossibiton", "html_url": "https://github.com/yossibiton", "followers_url": "https://api.github.com/users/yossibiton/followers", "following_url": "https://api.github.com/users/yossibiton/following{/other_user}", "gists_url": "https://api.github.com/users/yossibiton/gists{/gist_id}", "starred_url": "https://api.github.com/users/yossibiton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yossibiton/subscriptions", "organizations_url": "https://api.github.com/users/yossibiton/orgs", "repos_url": "https://api.github.com/users/yossibiton/repos", "events_url": "https://api.github.com/users/yossibiton/events{/privacy}", "received_events_url": "https://api.github.com/users/yossibiton/received_events", "type": "User", "site_admin": false}, "created_at": "2016-09-20T06:07:55Z", "updated_at": "2016-09-20T06:07:55Z", "author_association": "NONE", "body_html": "<p>i will list few simple steps to reproduce the same behavior with inception graph :</p>\n<ol>\n<li>run my script <a href=\"https://gist.github.com/yossibiton/ba571473470824e5fee47c555d01697b\">classify_image.py</a> - basically i took <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/models/image/imagenet/classify_image.py\">this script</a> and added small changed to support quantized graph and timing.<br>\nIt will download the inception graph file and then run forward pass 100 times over an image. I got <strong>average time per forward pass = 785 [ms]</strong></li>\n<li>now we will quantize the graph and replace the original graph file (run from you tensorflow repository folder)<br>\n<code>python tensorflow/contrib/quantization/tools/quantize_graph.py --input=/tmp/imagenet/classify_image_graph_def.pb --output_node_names=\"softmax\" --output=/tmp/imagenet/classify_image_graph_q_def.pb --mode=eightbit</code></li>\n<li>we will replace the original graph file with the quantized one :</li>\n</ol>\n<pre><code>mv /tmp/imagenet/classify_image_graph_def.pb /tmp/imagenet/backup_classify_image_graph_def.pb\nmv /tmp/imagenet/classify_image_graph_q_def.pb /tmp/imagenet/classify_image_graph_def.pb \n</code></pre>\n<ol>\n<li>running 'classify_image.py' again (now the quantized graph will be used).<br>\nThis time i got <strong>average time per forward pass = 6551 [ms]</strong><br>\nThat means the quantized graph is about <strong>10x slower</strong></li>\n</ol>", "body_text": "i will list few simple steps to reproduce the same behavior with inception graph :\n\nrun my script classify_image.py - basically i took this script and added small changed to support quantized graph and timing.\nIt will download the inception graph file and then run forward pass 100 times over an image. I got average time per forward pass = 785 [ms]\nnow we will quantize the graph and replace the original graph file (run from you tensorflow repository folder)\npython tensorflow/contrib/quantization/tools/quantize_graph.py --input=/tmp/imagenet/classify_image_graph_def.pb --output_node_names=\"softmax\" --output=/tmp/imagenet/classify_image_graph_q_def.pb --mode=eightbit\nwe will replace the original graph file with the quantized one :\n\nmv /tmp/imagenet/classify_image_graph_def.pb /tmp/imagenet/backup_classify_image_graph_def.pb\nmv /tmp/imagenet/classify_image_graph_q_def.pb /tmp/imagenet/classify_image_graph_def.pb \n\n\nrunning 'classify_image.py' again (now the quantized graph will be used).\nThis time i got average time per forward pass = 6551 [ms]\nThat means the quantized graph is about 10x slower", "body": "i will list few simple steps to reproduce the same behavior with inception graph :\n1. run my script [classify_image.py](https://gist.github.com/yossibiton/ba571473470824e5fee47c555d01697b) - basically i took [this script](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/models/image/imagenet/classify_image.py) and added small changed to support quantized graph and timing. \n   It will download the inception graph file and then run forward pass 100 times over an image. I got **average time per forward pass = 785 [ms]**\n2. now we will quantize the graph and replace the original graph file (run from you tensorflow repository folder)\n   `python tensorflow/contrib/quantization/tools/quantize_graph.py --input=/tmp/imagenet/classify_image_graph_def.pb --output_node_names=\"softmax\" --output=/tmp/imagenet/classify_image_graph_q_def.pb --mode=eightbit`\n3. we will replace the original graph file with the quantized one :\n\n```\nmv /tmp/imagenet/classify_image_graph_def.pb /tmp/imagenet/backup_classify_image_graph_def.pb\nmv /tmp/imagenet/classify_image_graph_q_def.pb /tmp/imagenet/classify_image_graph_def.pb \n```\n1. running 'classify_image.py' again (now the quantized graph will be used). \n   This time i got **average time per forward pass = 6551 [ms]**\n   That means the quantized graph is about **10x slower**\n"}