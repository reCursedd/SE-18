{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13720", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13720/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13720/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13720/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/13720", "id": 265506611, "node_id": "MDExOlB1bGxSZXF1ZXN0MTQ2NjExMzIy", "number": 13720, "title": "Add nth_element op", "user": {"login": "jinze1994", "id": 13191886, "node_id": "MDQ6VXNlcjEzMTkxODg2", "avatar_url": "https://avatars3.githubusercontent.com/u/13191886?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jinze1994", "html_url": "https://github.com/jinze1994", "followers_url": "https://api.github.com/users/jinze1994/followers", "following_url": "https://api.github.com/users/jinze1994/following{/other_user}", "gists_url": "https://api.github.com/users/jinze1994/gists{/gist_id}", "starred_url": "https://api.github.com/users/jinze1994/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jinze1994/subscriptions", "organizations_url": "https://api.github.com/users/jinze1994/orgs", "repos_url": "https://api.github.com/users/jinze1994/repos", "events_url": "https://api.github.com/users/jinze1994/events{/privacy}", "received_events_url": "https://api.github.com/users/jinze1994/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 419840263, "node_id": "MDU6TGFiZWw0MTk4NDAyNjM=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/awaiting%20testing%20(then%20merge)", "name": "awaiting testing (then merge)", "color": "c2e0c6", "default": false}, {"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "alextp", "id": 5061, "node_id": "MDQ6VXNlcjUwNjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alextp", "html_url": "https://github.com/alextp", "followers_url": "https://api.github.com/users/alextp/followers", "following_url": "https://api.github.com/users/alextp/following{/other_user}", "gists_url": "https://api.github.com/users/alextp/gists{/gist_id}", "starred_url": "https://api.github.com/users/alextp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alextp/subscriptions", "organizations_url": "https://api.github.com/users/alextp/orgs", "repos_url": "https://api.github.com/users/alextp/repos", "events_url": "https://api.github.com/users/alextp/events{/privacy}", "received_events_url": "https://api.github.com/users/alextp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "alextp", "id": 5061, "node_id": "MDQ6VXNlcjUwNjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alextp", "html_url": "https://github.com/alextp", "followers_url": "https://api.github.com/users/alextp/followers", "following_url": "https://api.github.com/users/alextp/following{/other_user}", "gists_url": "https://api.github.com/users/alextp/gists{/gist_id}", "starred_url": "https://api.github.com/users/alextp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alextp/subscriptions", "organizations_url": "https://api.github.com/users/alextp/orgs", "repos_url": "https://api.github.com/users/alextp/repos", "events_url": "https://api.github.com/users/alextp/events{/privacy}", "received_events_url": "https://api.github.com/users/alextp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2017-10-14T16:58:35Z", "updated_at": "2017-10-20T16:43:45Z", "closed_at": "2017-10-18T18:22:25Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/13720", "html_url": "https://github.com/tensorflow/tensorflow/pull/13720", "diff_url": "https://github.com/tensorflow/tensorflow/pull/13720.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/13720.patch"}, "body_html": "<p>This PR tries to settle the issue <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"261272588\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/13360\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/13360/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/13360\">#13360</a> and add <code>NthElement</code> op in kernel and <code>tf.nn.nth_element</code> wrapper for python.</p>\n<p>As in <code>std::nth_element</code>, this op finds values of the n-th order statistic for the last dmension, which the n-th order statistic is equal to its n-th smallest value. Median is not a reduce(fold) operation technically, this op could be a effective foundation of building <code>reduce_median</code> or other quantile function.</p>\n<p>This PR support CPU device only. The internal implementation is based on <a href=\"http://www.cplusplus.com/reference/algorithm/nth_element/\" rel=\"nofollow\">std::nth_element</a>, which has fast average performance of <code>O(n)</code> and may has worst average performance of <code>O(n)</code> by introselect in some implementations like GCC 4.7 according to this <a href=\"https://stackoverflow.com/questions/11068429/nth-element-implementations-complexities\" rel=\"nofollow\">blog</a>, I believe it's efficient enough in most of case. And I enhance it in batch mode by multi-thread.</p>\n<p>I also add the unit tests both in <code>core/ops/nn_ops_test.cc</code> and <code>python/kernel_tests/nth_element_op_test.py</code>, and register the gradient op accordingly. The reason why I choose putting it in <code>nn</code> module is that I noticed <code>tf.nn.top_k</code> which has the similar function did the same.</p>\n<p>Furthermore, I'm glad to contribute <code>reduce_median</code> based on this op in the future. If there is anything I need to modify, please let me know. Thank you for your review.</p>", "body_text": "This PR tries to settle the issue #13360 and add NthElement op in kernel and tf.nn.nth_element wrapper for python.\nAs in std::nth_element, this op finds values of the n-th order statistic for the last dmension, which the n-th order statistic is equal to its n-th smallest value. Median is not a reduce(fold) operation technically, this op could be a effective foundation of building reduce_median or other quantile function.\nThis PR support CPU device only. The internal implementation is based on std::nth_element, which has fast average performance of O(n) and may has worst average performance of O(n) by introselect in some implementations like GCC 4.7 according to this blog, I believe it's efficient enough in most of case. And I enhance it in batch mode by multi-thread.\nI also add the unit tests both in core/ops/nn_ops_test.cc and python/kernel_tests/nth_element_op_test.py, and register the gradient op accordingly. The reason why I choose putting it in nn module is that I noticed tf.nn.top_k which has the similar function did the same.\nFurthermore, I'm glad to contribute reduce_median based on this op in the future. If there is anything I need to modify, please let me know. Thank you for your review.", "body": "This PR tries to settle the issue #13360 and add `NthElement` op in kernel and `tf.nn.nth_element` wrapper for python.\r\n\r\nAs in `std::nth_element`, this op finds values of the n-th order statistic for the last dmension, which the n-th order statistic is equal to its n-th smallest value. Median is not a reduce(fold) operation technically, this op could be a effective foundation of building `reduce_median` or other quantile function.\r\n\r\nThis PR support CPU device only. The internal implementation is based on [std::nth_element](http://www.cplusplus.com/reference/algorithm/nth_element/), which has fast average performance of `O(n)` and may has worst average performance of `O(n)` by introselect in some implementations like GCC 4.7 according to this [blog](https://stackoverflow.com/questions/11068429/nth-element-implementations-complexities), I believe it's efficient enough in most of case. And I enhance it in batch mode by multi-thread.\r\n\r\nI also add the unit tests both in `core/ops/nn_ops_test.cc` and `python/kernel_tests/nth_element_op_test.py`, and register the gradient op accordingly. The reason why I choose putting it in `nn` module is that I noticed `tf.nn.top_k` which has the similar function did the same.\r\n\r\nFurthermore, I'm glad to contribute `reduce_median` based on this op in the future. If there is anything I need to modify, please let me know. Thank you for your review."}