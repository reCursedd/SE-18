{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/418338615", "html_url": "https://github.com/tensorflow/tensorflow/issues/956#issuecomment-418338615", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/956", "id": 418338615, "node_id": "MDEyOklzc3VlQ29tbWVudDQxODMzODYxNQ==", "user": {"login": "EelcoHoogendoorn", "id": 1799429, "node_id": "MDQ6VXNlcjE3OTk0Mjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1799429?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EelcoHoogendoorn", "html_url": "https://github.com/EelcoHoogendoorn", "followers_url": "https://api.github.com/users/EelcoHoogendoorn/followers", "following_url": "https://api.github.com/users/EelcoHoogendoorn/following{/other_user}", "gists_url": "https://api.github.com/users/EelcoHoogendoorn/gists{/gist_id}", "starred_url": "https://api.github.com/users/EelcoHoogendoorn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EelcoHoogendoorn/subscriptions", "organizations_url": "https://api.github.com/users/EelcoHoogendoorn/orgs", "repos_url": "https://api.github.com/users/EelcoHoogendoorn/repos", "events_url": "https://api.github.com/users/EelcoHoogendoorn/events{/privacy}", "received_events_url": "https://api.github.com/users/EelcoHoogendoorn/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-04T11:51:42Z", "updated_at": "2018-09-04T11:51:42Z", "author_association": "NONE", "body_html": "<p>Another upvote for 'wrap' padding from someone coming from a physics-simulation point of view.</p>\n<p>The code snippet based on concatenation is pretty suboptimal for an application of this kind; which tends to work with simple filters, and everything is 100% memory bottlenecked. Any naive implementation that does not take into account the pecularities of gpu memory access is going to be far from optimal I suppose.</p>\n<p>Indeed having a 'wrap' option baked into the convolutional operators at a low level would be ideal; but I suppose that this isnt so much up to tensorflow, as it is up to CUDNN to implement; and AFAIK it does not?</p>", "body_text": "Another upvote for 'wrap' padding from someone coming from a physics-simulation point of view.\nThe code snippet based on concatenation is pretty suboptimal for an application of this kind; which tends to work with simple filters, and everything is 100% memory bottlenecked. Any naive implementation that does not take into account the pecularities of gpu memory access is going to be far from optimal I suppose.\nIndeed having a 'wrap' option baked into the convolutional operators at a low level would be ideal; but I suppose that this isnt so much up to tensorflow, as it is up to CUDNN to implement; and AFAIK it does not?", "body": "Another upvote for 'wrap' padding from someone coming from a physics-simulation point of view.\r\n\r\nThe code snippet based on concatenation is pretty suboptimal for an application of this kind; which tends to work with simple filters, and everything is 100% memory bottlenecked. Any naive implementation that does not take into account the pecularities of gpu memory access is going to be far from optimal I suppose.\r\n\r\nIndeed having a 'wrap' option baked into the convolutional operators at a low level would be ideal; but I suppose that this isnt so much up to tensorflow, as it is up to CUDNN to implement; and AFAIK it does not?"}