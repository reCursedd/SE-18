{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/297812334", "html_url": "https://github.com/tensorflow/tensorflow/issues/956#issuecomment-297812334", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/956", "id": 297812334, "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzgxMjMzNA==", "user": {"login": "FedericoMuciaccia", "id": 16505346, "node_id": "MDQ6VXNlcjE2NTA1MzQ2", "avatar_url": "https://avatars3.githubusercontent.com/u/16505346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FedericoMuciaccia", "html_url": "https://github.com/FedericoMuciaccia", "followers_url": "https://api.github.com/users/FedericoMuciaccia/followers", "following_url": "https://api.github.com/users/FedericoMuciaccia/following{/other_user}", "gists_url": "https://api.github.com/users/FedericoMuciaccia/gists{/gist_id}", "starred_url": "https://api.github.com/users/FedericoMuciaccia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FedericoMuciaccia/subscriptions", "organizations_url": "https://api.github.com/users/FedericoMuciaccia/orgs", "repos_url": "https://api.github.com/users/FedericoMuciaccia/repos", "events_url": "https://api.github.com/users/FedericoMuciaccia/events{/privacy}", "received_events_url": "https://api.github.com/users/FedericoMuciaccia/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-27T19:16:23Z", "updated_at": "2017-04-27T19:33:13Z", "author_association": "NONE", "body_html": "<p>please add other padding modes, as in numpy.pad</p>\n<p><a href=\"https://docs.scipy.org/doc/numpy/reference/generated/numpy.pad.html\" rel=\"nofollow\">https://docs.scipy.org/doc/numpy/reference/generated/numpy.pad.html</a></p>\n<p><code>\u2018constant\u2019</code><br>\nPads with a constant value (different than zero).</p>\n<p><code>\u2018mean\u2019</code><br>\nPads with the mean value of all or part of the vector along each axis.</p>\n<p><code>\u2018wrap\u2019</code><br>\nPads with the wrap of the vector along the axis. The first values are used to pad the end and the end values are used to pad the beginning.</p>\n<p>The last one correspond to the periodic boundary conditions, especially useful during physics calculation and for Convolutional Neural Networks with full symmetry on the images (example: Ising model).<br>\nNote that this is very different from <code>tf.pad(t, paddings, \"REFLECT\")</code>, as can be seen in the following code:</p>\n<pre><code>import numpy\nmatrix = numpy.arange(25).reshape(5,5)\npaddings = [[1,1],[1,1]]\n# periodic boundary conditions\npadded_matrix = numpy.pad(matrix, pad_width=paddings, mode='wrap')\n\nimport tensorflow as tf\nsession = tf.InteractiveSession()\nM = tf.constant(matrix)\npadded_M = tf.pad(M, paddings, mode=\"reflect\")\n\npadded_matrix == padded_M.eval()\n# False\n</code></pre>", "body_text": "please add other padding modes, as in numpy.pad\nhttps://docs.scipy.org/doc/numpy/reference/generated/numpy.pad.html\n\u2018constant\u2019\nPads with a constant value (different than zero).\n\u2018mean\u2019\nPads with the mean value of all or part of the vector along each axis.\n\u2018wrap\u2019\nPads with the wrap of the vector along the axis. The first values are used to pad the end and the end values are used to pad the beginning.\nThe last one correspond to the periodic boundary conditions, especially useful during physics calculation and for Convolutional Neural Networks with full symmetry on the images (example: Ising model).\nNote that this is very different from tf.pad(t, paddings, \"REFLECT\"), as can be seen in the following code:\nimport numpy\nmatrix = numpy.arange(25).reshape(5,5)\npaddings = [[1,1],[1,1]]\n# periodic boundary conditions\npadded_matrix = numpy.pad(matrix, pad_width=paddings, mode='wrap')\n\nimport tensorflow as tf\nsession = tf.InteractiveSession()\nM = tf.constant(matrix)\npadded_M = tf.pad(M, paddings, mode=\"reflect\")\n\npadded_matrix == padded_M.eval()\n# False", "body": "please add other padding modes, as in numpy.pad\r\n\r\nhttps://docs.scipy.org/doc/numpy/reference/generated/numpy.pad.html\r\n\r\n`\u2018constant\u2019`\r\nPads with a constant value (different than zero).\r\n\r\n`\u2018mean\u2019`\r\nPads with the mean value of all or part of the vector along each axis.\r\n\r\n`\u2018wrap\u2019`\r\nPads with the wrap of the vector along the axis. The first values are used to pad the end and the end values are used to pad the beginning.\r\n\r\nThe last one correspond to the periodic boundary conditions, especially useful during physics calculation and for Convolutional Neural Networks with full symmetry on the images (example: Ising model).\r\nNote that this is very different from `tf.pad(t, paddings, \"REFLECT\")`, as can be seen in the following code:\r\n```\r\nimport numpy\r\nmatrix = numpy.arange(25).reshape(5,5)\r\npaddings = [[1,1],[1,1]]\r\n# periodic boundary conditions\r\npadded_matrix = numpy.pad(matrix, pad_width=paddings, mode='wrap')\r\n\r\nimport tensorflow as tf\r\nsession = tf.InteractiveSession()\r\nM = tf.constant(matrix)\r\npadded_M = tf.pad(M, paddings, mode=\"reflect\")\r\n\r\npadded_matrix == padded_M.eval()\r\n# False\r\n```\r\n"}