{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/306370675", "html_url": "https://github.com/tensorflow/tensorflow/issues/956#issuecomment-306370675", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/956", "id": 306370675, "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjM3MDY3NQ==", "user": {"login": "YuanmanLi", "id": 24493073, "node_id": "MDQ6VXNlcjI0NDkzMDcz", "avatar_url": "https://avatars3.githubusercontent.com/u/24493073?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YuanmanLi", "html_url": "https://github.com/YuanmanLi", "followers_url": "https://api.github.com/users/YuanmanLi/followers", "following_url": "https://api.github.com/users/YuanmanLi/following{/other_user}", "gists_url": "https://api.github.com/users/YuanmanLi/gists{/gist_id}", "starred_url": "https://api.github.com/users/YuanmanLi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YuanmanLi/subscriptions", "organizations_url": "https://api.github.com/users/YuanmanLi/orgs", "repos_url": "https://api.github.com/users/YuanmanLi/repos", "events_url": "https://api.github.com/users/YuanmanLi/events{/privacy}", "received_events_url": "https://api.github.com/users/YuanmanLi/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-06T03:20:12Z", "updated_at": "2017-06-06T03:21:23Z", "author_association": "NONE", "body_html": "<p>To implement the wrap padding (only for the width and height with size), I wrote the code as (hope I am right)</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">wrap_pad</span>(<span class=\"pl-smi\">input</span>, <span class=\"pl-smi\">size</span>):\n    M1 <span class=\"pl-k\">=</span> tf.concat([<span class=\"pl-c1\">input</span>[:,:, <span class=\"pl-k\">-</span>size:,:], <span class=\"pl-c1\">input</span>, <span class=\"pl-c1\">input</span>[:,:, <span class=\"pl-c1\">0</span>:size,:]], <span class=\"pl-c1\">2</span>)\n    M1 <span class=\"pl-k\">=</span> tf.concat([M1[:,<span class=\"pl-k\">-</span>size:, :,:], M1, M1[:,<span class=\"pl-c1\">0</span>:size, :,:]], <span class=\"pl-c1\">1</span>)\n    <span class=\"pl-k\">return</span> M1</pre></div>", "body_text": "To implement the wrap padding (only for the width and height with size), I wrote the code as (hope I am right)\ndef wrap_pad(input, size):\n    M1 = tf.concat([input[:,:, -size:,:], input, input[:,:, 0:size,:]], 2)\n    M1 = tf.concat([M1[:,-size:, :,:], M1, M1[:,0:size, :,:]], 1)\n    return M1", "body": "To implement the wrap padding (only for the width and height with size), I wrote the code as (hope I am right)\r\n\r\n``` python\r\ndef wrap_pad(input, size):\r\n    M1 = tf.concat([input[:,:, -size:,:], input, input[:,:, 0:size,:]], 2)\r\n    M1 = tf.concat([M1[:,-size:, :,:], M1, M1[:,0:size, :,:]], 1)\r\n    return M1\r\n```\r\n"}