{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/383464520", "html_url": "https://github.com/tensorflow/tensorflow/issues/18777#issuecomment-383464520", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18777", "id": 383464520, "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzQ2NDUyMA==", "user": {"login": "arassadin", "id": 3072128, "node_id": "MDQ6VXNlcjMwNzIxMjg=", "avatar_url": "https://avatars0.githubusercontent.com/u/3072128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arassadin", "html_url": "https://github.com/arassadin", "followers_url": "https://api.github.com/users/arassadin/followers", "following_url": "https://api.github.com/users/arassadin/following{/other_user}", "gists_url": "https://api.github.com/users/arassadin/gists{/gist_id}", "starred_url": "https://api.github.com/users/arassadin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arassadin/subscriptions", "organizations_url": "https://api.github.com/users/arassadin/orgs", "repos_url": "https://api.github.com/users/arassadin/repos", "events_url": "https://api.github.com/users/arassadin/events{/privacy}", "received_events_url": "https://api.github.com/users/arassadin/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-23T06:07:09Z", "updated_at": "2018-04-23T06:07:09Z", "author_association": "NONE", "body_html": "<p><strong>Exact command to reproduce</strong>:</p>\n<pre><code>import tensorflow as tf\nfrom tensorflow.contrib import tensorrt as trt\nfrom keras import backend as K\nfrom keras.applications import mobilenet\nfrom tensorflow.python.framework.graph_util import convert_variables_to_constants\n\n########################## Converting Keras model to GraphDef ##########################\n\n# def freeze_session(session, output_names, clear_devices=False):    \n#     graph = session.graph\n#     with graph.as_default():        \n#         input_graph_def = graph.as_graph_def()\n#         return convert_variables_to_constants(session, input_graph_def, output_names)\n\n# model = mobilenet.MobileNet(include_top=True, input_shape=(128, 128, 3))\n# model_output = 'reshape_2/Reshape'\n\n# frozen_graph = freeze_session(K.get_session(), [model_output])\n# tf.train.write_graph(frozen_graph, \".\", \"mobilenet.pb\", as_text=False)\n\n########################################################################################\n\nOUTPUT_LAYERS = ['reshape_2/Reshape']\nBATCH_SIZE = 4\nGRAPH_PATH = 'mobilenet.pb'\n\nconfig = tf.ConfigProto()\nconfig.gpu_options.per_process_gpu_memory_fraction = 0.5\n\nwith tf.gfile.GFile(GRAPH_PATH, 'rb') as f:\n    graph_def = tf.GraphDef()\n    graph_def.ParseFromString(f.read())\n\ngraphdef_fp32 = trt.create_inference_graph(\n    input_graph_def=graph_def, outputs=OUTPUT_LAYERS, max_batch_size=BATCH_SIZE, \n    max_workspace_size_bytes=int(4e+9), precision_mode=\"FP32\"\n)\n</code></pre>", "body_text": "Exact command to reproduce:\nimport tensorflow as tf\nfrom tensorflow.contrib import tensorrt as trt\nfrom keras import backend as K\nfrom keras.applications import mobilenet\nfrom tensorflow.python.framework.graph_util import convert_variables_to_constants\n\n########################## Converting Keras model to GraphDef ##########################\n\n# def freeze_session(session, output_names, clear_devices=False):    \n#     graph = session.graph\n#     with graph.as_default():        \n#         input_graph_def = graph.as_graph_def()\n#         return convert_variables_to_constants(session, input_graph_def, output_names)\n\n# model = mobilenet.MobileNet(include_top=True, input_shape=(128, 128, 3))\n# model_output = 'reshape_2/Reshape'\n\n# frozen_graph = freeze_session(K.get_session(), [model_output])\n# tf.train.write_graph(frozen_graph, \".\", \"mobilenet.pb\", as_text=False)\n\n########################################################################################\n\nOUTPUT_LAYERS = ['reshape_2/Reshape']\nBATCH_SIZE = 4\nGRAPH_PATH = 'mobilenet.pb'\n\nconfig = tf.ConfigProto()\nconfig.gpu_options.per_process_gpu_memory_fraction = 0.5\n\nwith tf.gfile.GFile(GRAPH_PATH, 'rb') as f:\n    graph_def = tf.GraphDef()\n    graph_def.ParseFromString(f.read())\n\ngraphdef_fp32 = trt.create_inference_graph(\n    input_graph_def=graph_def, outputs=OUTPUT_LAYERS, max_batch_size=BATCH_SIZE, \n    max_workspace_size_bytes=int(4e+9), precision_mode=\"FP32\"\n)", "body": "**Exact command to reproduce**:\r\n```\r\nimport tensorflow as tf\r\nfrom tensorflow.contrib import tensorrt as trt\r\nfrom keras import backend as K\r\nfrom keras.applications import mobilenet\r\nfrom tensorflow.python.framework.graph_util import convert_variables_to_constants\r\n\r\n########################## Converting Keras model to GraphDef ##########################\r\n\r\n# def freeze_session(session, output_names, clear_devices=False):    \r\n#     graph = session.graph\r\n#     with graph.as_default():        \r\n#         input_graph_def = graph.as_graph_def()\r\n#         return convert_variables_to_constants(session, input_graph_def, output_names)\r\n\r\n# model = mobilenet.MobileNet(include_top=True, input_shape=(128, 128, 3))\r\n# model_output = 'reshape_2/Reshape'\r\n\r\n# frozen_graph = freeze_session(K.get_session(), [model_output])\r\n# tf.train.write_graph(frozen_graph, \".\", \"mobilenet.pb\", as_text=False)\r\n\r\n########################################################################################\r\n\r\nOUTPUT_LAYERS = ['reshape_2/Reshape']\r\nBATCH_SIZE = 4\r\nGRAPH_PATH = 'mobilenet.pb'\r\n\r\nconfig = tf.ConfigProto()\r\nconfig.gpu_options.per_process_gpu_memory_fraction = 0.5\r\n\r\nwith tf.gfile.GFile(GRAPH_PATH, 'rb') as f:\r\n    graph_def = tf.GraphDef()\r\n    graph_def.ParseFromString(f.read())\r\n\r\ngraphdef_fp32 = trt.create_inference_graph(\r\n    input_graph_def=graph_def, outputs=OUTPUT_LAYERS, max_batch_size=BATCH_SIZE, \r\n    max_workspace_size_bytes=int(4e+9), precision_mode=\"FP32\"\r\n)\r\n```"}