{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4770", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4770/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4770/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4770/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/4770", "id": 181066749, "node_id": "MDU6SXNzdWUxODEwNjY3NDk=", "number": 4770, "title": "bazel-bin/tensorflow/cc/tutorials_example_trainer --use_gpu Failed With Error:could not insert 'nvidia_340_uvm': Invalid argument", "user": {"login": "Tcorpion", "id": 19811908, "node_id": "MDQ6VXNlcjE5ODExOTA4", "avatar_url": "https://avatars1.githubusercontent.com/u/19811908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tcorpion", "html_url": "https://github.com/Tcorpion", "followers_url": "https://api.github.com/users/Tcorpion/followers", "following_url": "https://api.github.com/users/Tcorpion/following{/other_user}", "gists_url": "https://api.github.com/users/Tcorpion/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tcorpion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tcorpion/subscriptions", "organizations_url": "https://api.github.com/users/Tcorpion/orgs", "repos_url": "https://api.github.com/users/Tcorpion/repos", "events_url": "https://api.github.com/users/Tcorpion/events{/privacy}", "received_events_url": "https://api.github.com/users/Tcorpion/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-10-05T05:15:08Z", "updated_at": "2016-10-08T16:36:59Z", "closed_at": "2016-10-08T16:33:14Z", "author_association": "NONE", "body_html": "<p>I am installing tensorflow from source code since my GTX1080 need CUDA8.0. My installing steps are as following:</p>\n<ol>\n<li>pre-installing: Ubuntu14.04 os, Nvidia driver of version numbered 367.48, CUDA8.0 by cuda_8.0.44_linux.run, cuDNN5.1, bazel and jdk8.</li>\n<li>download tensorflow source from github, type yes for GPU support during running ./configure and these operations are successful .</li>\n<li>But errors stop me to continue tensorflow installing:</li>\n</ol>\n<pre><code>zyl@zyl-PC$ bazel build -c opt --config=cuda  //tensorflow/cc:tutorials_example_trainer\n\n- [ ] INFO: From Compiling tensorflow/core/kernels/tile_ops_gpu.cu.cc:\nnvcc warning : option '--relaxed-constexpr' has been deprecated and replaced by option '--expt-relaxed-constexpr'.\nnvcc warning : option '--relaxed-constexpr' has been deprecated and replaced by option '--expt-relaxed-constexpr'.\nTarget //tensorflow/cc:tutorials_example_trainer up-to-date:bazel-bin/tensorflow/cc/tutorials_example_trainer\n\n- [ ] INFO: Elapsed time: 1233.946s, Critical Path: 1168.09s\nzyl@zyl-PC$ bazel-bin/tensorflow/cc/tutorials_example_trainer --use_gpu\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcublas.so.8.0 locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcudnn.so.5 locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcufft.so.8.0 locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcurand.so.8.0 locally\n\n- [ ] modprobe: ERROR: could not insert 'nvidia_340_uvm': Invalid argument\nE tensorflow/stream_executor/cuda/cuda_driver.cc:491] failed call to cuInit: CUDA_ERROR_UNKNOWN\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:153] retrieving CUDA diagnostic information for host: zyl-PC\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:160] hostname: zyl-PC\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:185] libcuda reported version is: 367.48.0\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:356] driver version \nfile contents: \"\"\"NVRM version: NVIDIA UNIX x86_64 Kernel Module  367.48  Sat Sep  3 18:21:08 PDT 2016 \nGCC version:  gcc version 4.8.4 (Ubuntu 4.8.4-2ubuntu1~14.04.3)\"\"\"    \nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:189] kernel reported version is: 367.48.0\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:293] kernel version seems to match DSO: 367.48.0\n\n- [ ] F tensorflow/cc/tutorials/example_trainer.cc:129] Check failed:\n::tensorflow::Status::OK() == (session-&gt;Run({{\"x\", x}}, \n{\"y:0\", \"y_normalized:0\"}, {}, &amp;outputs)) \n(OK vs. Invalid argument: Cannot assign a device to node 'Cast': Could not satisfy explicit device specification '/gpu:0' \nbecause no devices matching that specification are registered in this process; \navailable devices: /job:localhost/replica:0/task:0/cpu:0 \n\n- [ ] [[Node:Cast = Cast[DstT=DT_FLOAT, SrcT=DT_INT32, _device=\"/gpu:0\"](Const)]])\nAborted (core dumped)\"\n</code></pre>\n<hr>\n<p>the tensorflow is failed to install from source code at the step of \"$ bazel-bin/tensorflow/cc/tutorials_example_trainer --use_gpu\" as discribed above. Obviously, both gpu and tensorflow would not be available.<br>\nAnyone who sucessed in installing tensorflow and cuda8.0 can help me to fix it?</p>", "body_text": "I am installing tensorflow from source code since my GTX1080 need CUDA8.0. My installing steps are as following:\n\npre-installing: Ubuntu14.04 os, Nvidia driver of version numbered 367.48, CUDA8.0 by cuda_8.0.44_linux.run, cuDNN5.1, bazel and jdk8.\ndownload tensorflow source from github, type yes for GPU support during running ./configure and these operations are successful .\nBut errors stop me to continue tensorflow installing:\n\nzyl@zyl-PC$ bazel build -c opt --config=cuda  //tensorflow/cc:tutorials_example_trainer\n\n- [ ] INFO: From Compiling tensorflow/core/kernels/tile_ops_gpu.cu.cc:\nnvcc warning : option '--relaxed-constexpr' has been deprecated and replaced by option '--expt-relaxed-constexpr'.\nnvcc warning : option '--relaxed-constexpr' has been deprecated and replaced by option '--expt-relaxed-constexpr'.\nTarget //tensorflow/cc:tutorials_example_trainer up-to-date:bazel-bin/tensorflow/cc/tutorials_example_trainer\n\n- [ ] INFO: Elapsed time: 1233.946s, Critical Path: 1168.09s\nzyl@zyl-PC$ bazel-bin/tensorflow/cc/tutorials_example_trainer --use_gpu\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcublas.so.8.0 locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcudnn.so.5 locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcufft.so.8.0 locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcurand.so.8.0 locally\n\n- [ ] modprobe: ERROR: could not insert 'nvidia_340_uvm': Invalid argument\nE tensorflow/stream_executor/cuda/cuda_driver.cc:491] failed call to cuInit: CUDA_ERROR_UNKNOWN\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:153] retrieving CUDA diagnostic information for host: zyl-PC\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:160] hostname: zyl-PC\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:185] libcuda reported version is: 367.48.0\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:356] driver version \nfile contents: \"\"\"NVRM version: NVIDIA UNIX x86_64 Kernel Module  367.48  Sat Sep  3 18:21:08 PDT 2016 \nGCC version:  gcc version 4.8.4 (Ubuntu 4.8.4-2ubuntu1~14.04.3)\"\"\"    \nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:189] kernel reported version is: 367.48.0\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:293] kernel version seems to match DSO: 367.48.0\n\n- [ ] F tensorflow/cc/tutorials/example_trainer.cc:129] Check failed:\n::tensorflow::Status::OK() == (session->Run({{\"x\", x}}, \n{\"y:0\", \"y_normalized:0\"}, {}, &outputs)) \n(OK vs. Invalid argument: Cannot assign a device to node 'Cast': Could not satisfy explicit device specification '/gpu:0' \nbecause no devices matching that specification are registered in this process; \navailable devices: /job:localhost/replica:0/task:0/cpu:0 \n\n- [ ] [[Node:Cast = Cast[DstT=DT_FLOAT, SrcT=DT_INT32, _device=\"/gpu:0\"](Const)]])\nAborted (core dumped)\"\n\n\nthe tensorflow is failed to install from source code at the step of \"$ bazel-bin/tensorflow/cc/tutorials_example_trainer --use_gpu\" as discribed above. Obviously, both gpu and tensorflow would not be available.\nAnyone who sucessed in installing tensorflow and cuda8.0 can help me to fix it?", "body": "I am installing tensorflow from source code since my GTX1080 need CUDA8.0. My installing steps are as following:\n1. pre-installing: Ubuntu14.04 os, Nvidia driver of version numbered 367.48, CUDA8.0 by cuda_8.0.44_linux.run, cuDNN5.1, bazel and jdk8.\n2. download tensorflow source from github, type yes for GPU support during running ./configure and these operations are successful .\n3. But errors stop me to continue tensorflow installing: \n\n```\nzyl@zyl-PC$ bazel build -c opt --config=cuda  //tensorflow/cc:tutorials_example_trainer\n\n- [ ] INFO: From Compiling tensorflow/core/kernels/tile_ops_gpu.cu.cc:\nnvcc warning : option '--relaxed-constexpr' has been deprecated and replaced by option '--expt-relaxed-constexpr'.\nnvcc warning : option '--relaxed-constexpr' has been deprecated and replaced by option '--expt-relaxed-constexpr'.\nTarget //tensorflow/cc:tutorials_example_trainer up-to-date:bazel-bin/tensorflow/cc/tutorials_example_trainer\n\n- [ ] INFO: Elapsed time: 1233.946s, Critical Path: 1168.09s\nzyl@zyl-PC$ bazel-bin/tensorflow/cc/tutorials_example_trainer --use_gpu\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcublas.so.8.0 locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcudnn.so.5 locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcufft.so.8.0 locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcurand.so.8.0 locally\n\n- [ ] modprobe: ERROR: could not insert 'nvidia_340_uvm': Invalid argument\nE tensorflow/stream_executor/cuda/cuda_driver.cc:491] failed call to cuInit: CUDA_ERROR_UNKNOWN\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:153] retrieving CUDA diagnostic information for host: zyl-PC\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:160] hostname: zyl-PC\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:185] libcuda reported version is: 367.48.0\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:356] driver version \nfile contents: \"\"\"NVRM version: NVIDIA UNIX x86_64 Kernel Module  367.48  Sat Sep  3 18:21:08 PDT 2016 \nGCC version:  gcc version 4.8.4 (Ubuntu 4.8.4-2ubuntu1~14.04.3)\"\"\"    \nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:189] kernel reported version is: 367.48.0\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:293] kernel version seems to match DSO: 367.48.0\n\n- [ ] F tensorflow/cc/tutorials/example_trainer.cc:129] Check failed:\n::tensorflow::Status::OK() == (session->Run({{\"x\", x}}, \n{\"y:0\", \"y_normalized:0\"}, {}, &outputs)) \n(OK vs. Invalid argument: Cannot assign a device to node 'Cast': Could not satisfy explicit device specification '/gpu:0' \nbecause no devices matching that specification are registered in this process; \navailable devices: /job:localhost/replica:0/task:0/cpu:0 \n\n- [ ] [[Node:Cast = Cast[DstT=DT_FLOAT, SrcT=DT_INT32, _device=\"/gpu:0\"](Const)]])\nAborted (core dumped)\"\n```\n\n---\n\nthe tensorflow is failed to install from source code at the step of \"$ bazel-bin/tensorflow/cc/tutorials_example_trainer --use_gpu\" as discribed above. Obviously, both gpu and tensorflow would not be available.\nAnyone who sucessed in installing tensorflow and cuda8.0 can help me to fix it?\n"}