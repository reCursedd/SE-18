{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22071", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22071/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22071/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22071/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/22071", "id": 357001093, "node_id": "MDU6SXNzdWUzNTcwMDEwOTM=", "number": 22071, "title": "MatMul flop incorrect for 3D inputs", "user": {"login": "ppwwyyxx", "id": 1381301, "node_id": "MDQ6VXNlcjEzODEzMDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1381301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ppwwyyxx", "html_url": "https://github.com/ppwwyyxx", "followers_url": "https://api.github.com/users/ppwwyyxx/followers", "following_url": "https://api.github.com/users/ppwwyyxx/following{/other_user}", "gists_url": "https://api.github.com/users/ppwwyyxx/gists{/gist_id}", "starred_url": "https://api.github.com/users/ppwwyyxx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ppwwyyxx/subscriptions", "organizations_url": "https://api.github.com/users/ppwwyyxx/orgs", "repos_url": "https://api.github.com/users/ppwwyyxx/repos", "events_url": "https://api.github.com/users/ppwwyyxx/events{/privacy}", "received_events_url": "https://api.github.com/users/ppwwyyxx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}], "state": "open", "locked": false, "assignee": {"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-09-04T22:37:21Z", "updated_at": "2018-11-15T19:04:21Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:N/A</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>:N/A</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:binary</li>\n<li><strong>TensorFlow version (use command below)</strong>:v1.10.0-0-g656e7a2b34 1.10.0</li>\n<li><strong>Python version</strong>:3.7</li>\n<li><strong>Bazel version (if compiling from source)</strong>:N/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:N/A</li>\n<li><strong>CUDA/cuDNN version</strong>:N/A</li>\n<li><strong>GPU model and memory</strong>:N/A</li>\n<li><strong>Exact command to reproduce</strong>:see below</li>\n</ul>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\na <span class=\"pl-k\">=</span> tf.random_normal([<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">100</span>, <span class=\"pl-c1\">100</span>])\nb <span class=\"pl-k\">=</span> tf.random_normal([<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">100</span>, <span class=\"pl-c1\">100</span>])\nc <span class=\"pl-k\">=</span> tf.matmul(a, b)\ntf.profiler.profile(\n            tf.get_default_graph(),\n            <span class=\"pl-v\">cmd</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>op<span class=\"pl-pds\">'</span></span>,\n            <span class=\"pl-v\">options</span><span class=\"pl-k\">=</span>tf.profiler.ProfileOptionBuilder.float_operation())</pre></div>\n<p>The outputs are correct (2M flops) if <code>a</code> and <code>b</code> have shape <code>[100, 100]</code>.<br>\nBut with 3D inputs, it outputs no flops for matmul.</p>\n<p>The reason is that for 3D inputs it uses the \"BatchMatMul\" op which does not have flop statistics implemented.</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):N/A\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:N/A\nTensorFlow installed from (source or binary):binary\nTensorFlow version (use command below):v1.10.0-0-g656e7a2b34 1.10.0\nPython version:3.7\nBazel version (if compiling from source):N/A\nGCC/Compiler version (if compiling from source):N/A\nCUDA/cuDNN version:N/A\nGPU model and memory:N/A\nExact command to reproduce:see below\n\nimport tensorflow as tf\na = tf.random_normal([1, 100, 100])\nb = tf.random_normal([1, 100, 100])\nc = tf.matmul(a, b)\ntf.profiler.profile(\n            tf.get_default_graph(),\n            cmd='op',\n            options=tf.profiler.ProfileOptionBuilder.float_operation())\nThe outputs are correct (2M flops) if a and b have shape [100, 100].\nBut with 3D inputs, it outputs no flops for matmul.\nThe reason is that for 3D inputs it uses the \"BatchMatMul\" op which does not have flop statistics implemented.", "body": "\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:N/A\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**:N/A\r\n- **TensorFlow installed from (source or binary)**:binary\r\n- **TensorFlow version (use command below)**:v1.10.0-0-g656e7a2b34 1.10.0\r\n- **Python version**:3.7\r\n- **Bazel version (if compiling from source)**:N/A\r\n- **GCC/Compiler version (if compiling from source)**:N/A\r\n- **CUDA/cuDNN version**:N/A\r\n- **GPU model and memory**:N/A\r\n- **Exact command to reproduce**:see below\r\n```python\r\nimport tensorflow as tf\r\na = tf.random_normal([1, 100, 100])\r\nb = tf.random_normal([1, 100, 100])\r\nc = tf.matmul(a, b)\r\ntf.profiler.profile(\r\n            tf.get_default_graph(),\r\n            cmd='op',\r\n            options=tf.profiler.ProfileOptionBuilder.float_operation())\r\n```\r\nThe outputs are correct (2M flops) if `a` and `b` have shape `[100, 100]`.\r\nBut with 3D inputs, it outputs no flops for matmul.\r\n\r\nThe reason is that for 3D inputs it uses the \"BatchMatMul\" op which does not have flop statistics implemented."}