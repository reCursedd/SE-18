{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/418376738", "html_url": "https://github.com/tensorflow/tensorflow/issues/22053#issuecomment-418376738", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22053", "id": 418376738, "node_id": "MDEyOklzc3VlQ29tbWVudDQxODM3NjczOA==", "user": {"login": "zacharymostowsky", "id": 32493153, "node_id": "MDQ6VXNlcjMyNDkzMTUz", "avatar_url": "https://avatars0.githubusercontent.com/u/32493153?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zacharymostowsky", "html_url": "https://github.com/zacharymostowsky", "followers_url": "https://api.github.com/users/zacharymostowsky/followers", "following_url": "https://api.github.com/users/zacharymostowsky/following{/other_user}", "gists_url": "https://api.github.com/users/zacharymostowsky/gists{/gist_id}", "starred_url": "https://api.github.com/users/zacharymostowsky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zacharymostowsky/subscriptions", "organizations_url": "https://api.github.com/users/zacharymostowsky/orgs", "repos_url": "https://api.github.com/users/zacharymostowsky/repos", "events_url": "https://api.github.com/users/zacharymostowsky/events{/privacy}", "received_events_url": "https://api.github.com/users/zacharymostowsky/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-04T13:57:28Z", "updated_at": "2018-09-04T13:58:55Z", "author_association": "NONE", "body_html": "<p>First Install actions for CUDA 9.2, cuDNN 7.2<br>\nMostly followed from: <a href=\"http://kehang.github.io/tools/2017/03/31/install-CUDA-cuDNN-on-Red-Hat/\" rel=\"nofollow\">http://kehang.github.io/tools/2017/03/31/install-CUDA-cuDNN-on-Red-Hat/</a></p>\n<p>Need wget to download drivers and git, etc.<br>\n<code>sudo yum -y install wget git nano python-devel patch numpy python-pip</code></p>\n<p>Pre-install actions</p>\n<pre><code>sudo yum -y install pciutils\nsudo yum -y install gcc\nsudo yum -y install kernel-devel-$(uname -r) kernel-headers-$(uname -r)\n</code></pre>\n<p>Python packages<br>\n<code>sudo pip install enum34 keras</code></p>\n<p>CUDA 9.2</p>\n<p>Get the drivers and install<br>\n<code>wget https://developer.nvidia.com/compute/cuda/9.2/Prod2/local_installers/cuda-repo-rhel7-9-2-local-9.2.148-1.x86_64</code></p>\n<p>Rename to .rpm<br>\n<code>mv cuda-repo-rhel7-9-2-local-9.2.148-1.x86_64 cuda-repo-rhel7-9-2-local-9.2.148-1.x86_64.rpm</code></p>\n<pre><code>sudo rpm -i cuda-repo-rhel7-9-2-local-9.2.148-1.x86_64.rpm\nsudo yum clean all\nsudo yum -y install cuda\n</code></pre>\n<p>Install cuDNN<br>\nNeed an Nvidia developer account to download from Nvidia website<br>\nUntar<br>\n<code>tar -zxf cudnn-9.2-linux-x64-v7.2.1.38.tgz</code></p>\n<pre><code>cd cuda\n\nsudo cp -av lib64/* /usr/local/cuda/lib64/\nsudo cp -av include/* /usr/local/cuda/include/\n</code></pre>\n<pre><code>export LD_LIBRARY_PATH=/usr/local/cuda/lib64/:$LD_LIBRARY_PATH\nexport LIBRARY_PATH=/usr/local/cuda/lib64/:$LIBRARY_PATH\n</code></pre>\n<p>Install bazel, followed from: <a href=\"https://gist.github.com/gentaiscool/a628fab5cd98953af7f46b69463394b3\">https://gist.github.com/gentaiscool/a628fab5cd98953af7f46b69463394b3</a></p>\n<p>Add repo</p>\n<pre><code>cd /etc/yum.repos.d/\nsudo wget https://copr.fedorainfracloud.org/coprs/vbatts/bazel/repo/epel-7/vbatts-bazel-epel-7.repo\n</code></pre>\n<pre><code>cd\nsudo yum -y install bazel\n</code></pre>\n<p>Install TF from source</p>\n<p>First, lets just install TF from python standard lib so we can get all the dependencies.<br>\n<code>sudo pip install tensorflow-gpu</code></p>\n<p>Now uninstall so we can build from source<br>\n<code>sudo pip uninstall tensorflow-gpu</code></p>\n<p>Clone repo<br>\n<code>git clone https://github.com/tensorflow/tensorflow</code></p>\n<p>Configure</p>\n<pre><code>cd tensorflow\n./configure\n</code></pre>\n<p>Answer these for the prompts. May need to change. A couple of 'gotchas' listed below.<br>\nPYTHON_INCLUDE_PATH - location of Python.h - <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"118316980\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/327\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/327/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/327\">#327</a><br>\nFill in these answers to the prompts:<br>\nOnly enter what is inside quotes<br>\nTo accept a default press enter<br>\n*1. Python Path: DO NOT ACCEPT DEFAULT, input: \"/usr/bin/python2.7\"<br>\n2. Python Library Path: Default: \"/usr/lib/python2.7/site-packages\"<br>\n3. jemalloc: no (n)<br>\n4. GCS Support: Yes (y) - not needed right now but perhaps in future<br>\n5. HDFS Support: No<br>\n6. AWS Support: No<br>\n7. Kafka Support: No<br>\n8. XLA JIT Support: No<br>\n9. GDR Support: No<br>\n10. VERBS Support: No<br>\n11. OpenCL SYCL Support: No<br>\n*12. CUDA Support: Yes<br>\n*13. CUDA Version: \"9.2\"<br>\n14. CUDA Lib Location: Accept Default: \"/usr/local/cuda\"<br>\n*15. cuDNN Version: \"7.2\"<br>\n16. cuDNN Lib Path: Accept Default: \"usr/local/cuda\"<br>\n17. TensorRT Support: No<br>\n18. NCCL Version: \"1.3\"<br>\n19. Accept Default<br>\n20. clang CUDA compiler: No<br>\n21. Default: \"/usr/bin/gcc\"<br>\n22. Tensor MPI: No<br>\n23. Optimization Flafs: Default<br>\n24. Interactively configure WORKSPACE: No</p>\n<p>Build with GPUs<br>\n<code>bazel build -c opt --config=cuda //tensorflow/tools/pip_package:build_pip_package</code></p>\n<p>Without GPUs<br>\n<code>bazel build -c opt //tensorflow/tools/pip_package:build_pip_package</code></p>\n<p>Build whl file<br>\n<code>bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg</code></p>\n<p>Install - look in tmp/tensorflow_pkg/ directory to find <br>\n<code>sudo pip install --upgrade /tmp/tensorflow_pkg/&lt;your whl file&gt;.whl</code></p>\n<p>Mine is<br>\n<code>sudo pip install --upgrade /tmp/tensorflow_pkg/tensorflow-1.10.0-cp27-cp27mu-linux_x86_64.whl</code></p>\n<p>May need to upgrade protobuf, although I did not have to !!! - <a href=\"https://gist.github.com/jorgemf/d2f3d85fadeb6e9d88ab00a06fbca0a2\">https://gist.github.com/jorgemf/d2f3d85fadeb6e9d88ab00a06fbca0a2</a></p>\n<p>Lets check Tensorflow can use GPU. Copy python code at link into python session.<br>\n<a href=\"https://www.tensorflow.org/guide/using_gpu\" rel=\"nofollow\">https://www.tensorflow.org/guide/using_gpu</a></p>\n<p>Check pytorch can see GPU</p>\n<pre><code>python2\n\n&gt; import torch\n&gt; torch.cuda.is_available()\n</code></pre>\n<p>The above should return true</p>\n<p>#NOTES</p>\n<ul>\n<li>Do not start python and import tensorflow from inside the tensorflow folder cloned from github - won't be able to find some modules - <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"119321135\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/374\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/374/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/374\">#374</a></li>\n<li>Speed up build time for bazel by leveraging multiple CPU cores. Can use --jobs flag to specify num jobs - <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"159939222\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/models/issues/195\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/models/issues/195/hovercard\" href=\"https://github.com/tensorflow/models/issues/195\">tensorflow/models#195</a></li>\n</ul>\n<p>#Other Links:<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"118316980\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/327\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/327/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/327\">#327</a> - python.h missing help link</p>", "body_text": "First Install actions for CUDA 9.2, cuDNN 7.2\nMostly followed from: http://kehang.github.io/tools/2017/03/31/install-CUDA-cuDNN-on-Red-Hat/\nNeed wget to download drivers and git, etc.\nsudo yum -y install wget git nano python-devel patch numpy python-pip\nPre-install actions\nsudo yum -y install pciutils\nsudo yum -y install gcc\nsudo yum -y install kernel-devel-$(uname -r) kernel-headers-$(uname -r)\n\nPython packages\nsudo pip install enum34 keras\nCUDA 9.2\nGet the drivers and install\nwget https://developer.nvidia.com/compute/cuda/9.2/Prod2/local_installers/cuda-repo-rhel7-9-2-local-9.2.148-1.x86_64\nRename to .rpm\nmv cuda-repo-rhel7-9-2-local-9.2.148-1.x86_64 cuda-repo-rhel7-9-2-local-9.2.148-1.x86_64.rpm\nsudo rpm -i cuda-repo-rhel7-9-2-local-9.2.148-1.x86_64.rpm\nsudo yum clean all\nsudo yum -y install cuda\n\nInstall cuDNN\nNeed an Nvidia developer account to download from Nvidia website\nUntar\ntar -zxf cudnn-9.2-linux-x64-v7.2.1.38.tgz\ncd cuda\n\nsudo cp -av lib64/* /usr/local/cuda/lib64/\nsudo cp -av include/* /usr/local/cuda/include/\n\nexport LD_LIBRARY_PATH=/usr/local/cuda/lib64/:$LD_LIBRARY_PATH\nexport LIBRARY_PATH=/usr/local/cuda/lib64/:$LIBRARY_PATH\n\nInstall bazel, followed from: https://gist.github.com/gentaiscool/a628fab5cd98953af7f46b69463394b3\nAdd repo\ncd /etc/yum.repos.d/\nsudo wget https://copr.fedorainfracloud.org/coprs/vbatts/bazel/repo/epel-7/vbatts-bazel-epel-7.repo\n\ncd\nsudo yum -y install bazel\n\nInstall TF from source\nFirst, lets just install TF from python standard lib so we can get all the dependencies.\nsudo pip install tensorflow-gpu\nNow uninstall so we can build from source\nsudo pip uninstall tensorflow-gpu\nClone repo\ngit clone https://github.com/tensorflow/tensorflow\nConfigure\ncd tensorflow\n./configure\n\nAnswer these for the prompts. May need to change. A couple of 'gotchas' listed below.\nPYTHON_INCLUDE_PATH - location of Python.h - #327\nFill in these answers to the prompts:\nOnly enter what is inside quotes\nTo accept a default press enter\n*1. Python Path: DO NOT ACCEPT DEFAULT, input: \"/usr/bin/python2.7\"\n2. Python Library Path: Default: \"/usr/lib/python2.7/site-packages\"\n3. jemalloc: no (n)\n4. GCS Support: Yes (y) - not needed right now but perhaps in future\n5. HDFS Support: No\n6. AWS Support: No\n7. Kafka Support: No\n8. XLA JIT Support: No\n9. GDR Support: No\n10. VERBS Support: No\n11. OpenCL SYCL Support: No\n*12. CUDA Support: Yes\n*13. CUDA Version: \"9.2\"\n14. CUDA Lib Location: Accept Default: \"/usr/local/cuda\"\n*15. cuDNN Version: \"7.2\"\n16. cuDNN Lib Path: Accept Default: \"usr/local/cuda\"\n17. TensorRT Support: No\n18. NCCL Version: \"1.3\"\n19. Accept Default\n20. clang CUDA compiler: No\n21. Default: \"/usr/bin/gcc\"\n22. Tensor MPI: No\n23. Optimization Flafs: Default\n24. Interactively configure WORKSPACE: No\nBuild with GPUs\nbazel build -c opt --config=cuda //tensorflow/tools/pip_package:build_pip_package\nWithout GPUs\nbazel build -c opt //tensorflow/tools/pip_package:build_pip_package\nBuild whl file\nbazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg\nInstall - look in tmp/tensorflow_pkg/ directory to find \nsudo pip install --upgrade /tmp/tensorflow_pkg/<your whl file>.whl\nMine is\nsudo pip install --upgrade /tmp/tensorflow_pkg/tensorflow-1.10.0-cp27-cp27mu-linux_x86_64.whl\nMay need to upgrade protobuf, although I did not have to !!! - https://gist.github.com/jorgemf/d2f3d85fadeb6e9d88ab00a06fbca0a2\nLets check Tensorflow can use GPU. Copy python code at link into python session.\nhttps://www.tensorflow.org/guide/using_gpu\nCheck pytorch can see GPU\npython2\n\n> import torch\n> torch.cuda.is_available()\n\nThe above should return true\n#NOTES\n\nDo not start python and import tensorflow from inside the tensorflow folder cloned from github - won't be able to find some modules - #374\nSpeed up build time for bazel by leveraging multiple CPU cores. Can use --jobs flag to specify num jobs - tensorflow/models#195\n\n#Other Links:\n#327 - python.h missing help link", "body": "First Install actions for CUDA 9.2, cuDNN 7.2\r\nMostly followed from: http://kehang.github.io/tools/2017/03/31/install-CUDA-cuDNN-on-Red-Hat/\r\n\r\n\r\nNeed wget to download drivers and git, etc.\r\n`sudo yum -y install wget git nano python-devel patch numpy python-pip`\r\n\r\nPre-install actions\r\n```\r\nsudo yum -y install pciutils\r\nsudo yum -y install gcc\r\nsudo yum -y install kernel-devel-$(uname -r) kernel-headers-$(uname -r)\r\n```\r\n\r\nPython packages\r\n`sudo pip install enum34 keras`\r\n\r\nCUDA 9.2\r\n\r\nGet the drivers and install\r\n`wget https://developer.nvidia.com/compute/cuda/9.2/Prod2/local_installers/cuda-repo-rhel7-9-2-local-9.2.148-1.x86_64`\r\n\r\n\r\n\r\nRename to .rpm\r\n`mv cuda-repo-rhel7-9-2-local-9.2.148-1.x86_64 cuda-repo-rhel7-9-2-local-9.2.148-1.x86_64.rpm`\r\n\r\n```\r\nsudo rpm -i cuda-repo-rhel7-9-2-local-9.2.148-1.x86_64.rpm\r\nsudo yum clean all\r\nsudo yum -y install cuda\r\n```\r\n\r\n\r\n\r\nInstall cuDNN\r\nNeed an Nvidia developer account to download from Nvidia website\r\nUntar\r\n`tar -zxf cudnn-9.2-linux-x64-v7.2.1.38.tgz`\r\n\r\n```\r\ncd cuda\r\n\r\nsudo cp -av lib64/* /usr/local/cuda/lib64/\r\nsudo cp -av include/* /usr/local/cuda/include/\r\n```\r\n\r\n```\r\nexport LD_LIBRARY_PATH=/usr/local/cuda/lib64/:$LD_LIBRARY_PATH\r\nexport LIBRARY_PATH=/usr/local/cuda/lib64/:$LIBRARY_PATH\r\n```\r\n\r\nInstall bazel, followed from: https://gist.github.com/gentaiscool/a628fab5cd98953af7f46b69463394b3\r\n\r\nAdd repo\r\n```\r\ncd /etc/yum.repos.d/\r\nsudo wget https://copr.fedorainfracloud.org/coprs/vbatts/bazel/repo/epel-7/vbatts-bazel-epel-7.repo\r\n```\r\n\r\n```\r\ncd\r\nsudo yum -y install bazel\r\n```\r\n\r\nInstall TF from source\r\n\r\nFirst, lets just install TF from python standard lib so we can get all the dependencies.\r\n`sudo pip install tensorflow-gpu`\r\n\r\nNow uninstall so we can build from source\r\n`sudo pip uninstall tensorflow-gpu`\r\n\r\nClone repo\r\n`git clone https://github.com/tensorflow/tensorflow`\r\n\r\nConfigure\r\n```\r\ncd tensorflow\r\n./configure\r\n```\r\nAnswer these for the prompts. May need to change. A couple of 'gotchas' listed below.\r\nPYTHON_INCLUDE_PATH - location of Python.h - https://github.com/tensorflow/tensorflow/issues/327\r\nFill in these answers to the prompts:\r\nOnly enter what is inside quotes\r\nTo accept a default press enter\r\n*1. Python Path: DO NOT ACCEPT DEFAULT, input: \"/usr/bin/python2.7\"\r\n2. Python Library Path: Default: \"/usr/lib/python2.7/site-packages\"\r\n3. jemalloc: no (n)\r\n4. GCS Support: Yes (y) - not needed right now but perhaps in future\r\n5. HDFS Support: No\r\n6. AWS Support: No\r\n7. Kafka Support: No\r\n8. XLA JIT Support: No\r\n9. GDR Support: No\r\n10. VERBS Support: No\r\n11. OpenCL SYCL Support: No\r\n*12. CUDA Support: Yes\r\n*13. CUDA Version: \"9.2\"\r\n14. CUDA Lib Location: Accept Default: \"/usr/local/cuda\"\r\n*15. cuDNN Version: \"7.2\"\r\n16. cuDNN Lib Path: Accept Default: \"usr/local/cuda\"\r\n17. TensorRT Support: No\r\n18. NCCL Version: \"1.3\"\r\n19. Accept Default\r\n20. clang CUDA compiler: No\r\n21. Default: \"/usr/bin/gcc\"\r\n22. Tensor MPI: No\r\n23. Optimization Flafs: Default\r\n24. Interactively configure WORKSPACE: No\r\n\r\nBuild with GPUs\r\n`bazel build -c opt --config=cuda //tensorflow/tools/pip_package:build_pip_package`\r\n\r\nWithout GPUs\r\n`bazel build -c opt //tensorflow/tools/pip_package:build_pip_package`\r\n\r\nBuild whl file\r\n`bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg`\r\n\r\nInstall - look in tmp/tensorflow_pkg/ directory to find <your whl file>\r\n`sudo pip install --upgrade /tmp/tensorflow_pkg/<your whl file>.whl`\r\n\r\nMine is\r\n`sudo pip install --upgrade /tmp/tensorflow_pkg/tensorflow-1.10.0-cp27-cp27mu-linux_x86_64.whl`\r\n\r\nMay need to upgrade protobuf, although I did not have to !!! - https://gist.github.com/jorgemf/d2f3d85fadeb6e9d88ab00a06fbca0a2\r\n\r\n\r\nLets check Tensorflow can use GPU. Copy python code at link into python session.\r\nhttps://www.tensorflow.org/guide/using_gpu\r\n\r\nCheck pytorch can see GPU\r\n```\r\npython2\r\n\r\n> import torch\r\n> torch.cuda.is_available()\r\n```\r\n\r\nThe above should return true\r\n\r\n#NOTES\r\n\r\n- Do not start python and import tensorflow from inside the tensorflow folder cloned from github - won't be able to find some modules - https://github.com/tensorflow/tensorflow/issues/374\r\n- Speed up build time for bazel by leveraging multiple CPU cores. Can use --jobs flag to specify num jobs - https://github.com/tensorflow/models/issues/195\r\n\r\n#Other Links:\r\nhttps://github.com/tensorflow/tensorflow/issues/327 - python.h missing help link\r\n"}