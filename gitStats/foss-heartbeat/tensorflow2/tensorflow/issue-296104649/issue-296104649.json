{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16913", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16913/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16913/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16913/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16913", "id": 296104649, "node_id": "MDU6SXNzdWUyOTYxMDQ2NDk=", "number": 16913, "title": "Eager: tf.linalg.inv(tf.transpose(mat)) has undefined shape in function with tfe.defun", "user": {"login": "traveller59", "id": 28866047, "node_id": "MDQ6VXNlcjI4ODY2MDQ3", "avatar_url": "https://avatars1.githubusercontent.com/u/28866047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/traveller59", "html_url": "https://github.com/traveller59", "followers_url": "https://api.github.com/users/traveller59/followers", "following_url": "https://api.github.com/users/traveller59/following{/other_user}", "gists_url": "https://api.github.com/users/traveller59/gists{/gist_id}", "starred_url": "https://api.github.com/users/traveller59/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/traveller59/subscriptions", "organizations_url": "https://api.github.com/users/traveller59/orgs", "repos_url": "https://api.github.com/users/traveller59/repos", "events_url": "https://api.github.com/users/traveller59/events{/privacy}", "received_events_url": "https://api.github.com/users/traveller59/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-02-10T14:26:08Z", "updated_at": "2018-02-23T05:43:34Z", "closed_at": "2018-02-23T05:43:34Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:No</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:Win10</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:binary</li>\n<li><strong>TensorFlow version (use command below)</strong>:1.6.0dev20180126(GPU)</li>\n<li><strong>Python version</strong>: 3.6.3</li>\n<li><strong>Bazel version (if compiling from source)</strong>: N/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: N/A</li>\n<li><strong>CUDA/cuDNN version</strong>: N/A</li>\n<li><strong>GPU model and memory</strong>: N/A</li>\n<li><strong>Exact command to reproduce</strong>: N/A</li>\n</ul>\n<h3>Source code / logs</h3>\n<ul>\n<li>No problem in graph mode</li>\n</ul>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n<span class=\"pl-k\">import</span> tensorflow.contrib.eager <span class=\"pl-k\">as</span> tfe\ntfe.enable_eager_execution()\n<span class=\"pl-en\">@tfe.defun</span>\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">test</span>(<span class=\"pl-smi\">rect</span>):\n    rect_T <span class=\"pl-k\">=</span> tf.transpose(rect)\n    <span class=\"pl-c1\">print</span>(rect_T.shape)\n    <span class=\"pl-c1\">print</span>(tf.linalg.inv(rect_T).shape)\n    <span class=\"pl-c1\">print</span>(tf.linalg.inv(rect).shape)\n    <span class=\"pl-c1\">print</span>(tf.linalg.inv(tf.transpose(rect)).shape)\nrect_tf <span class=\"pl-k\">=</span> tf.constant(np.random.uniform(<span class=\"pl-v\">size</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">4</span>]))\ntest(rect_tf)</pre></div>\n<p>Output:</p>\n<pre><code>(4, 4)\n(?, ?)\n(4, 4)\n(?, ?)\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):No\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):Win10\nTensorFlow installed from (source or binary):binary\nTensorFlow version (use command below):1.6.0dev20180126(GPU)\nPython version: 3.6.3\nBazel version (if compiling from source): N/A\nGCC/Compiler version (if compiling from source): N/A\nCUDA/cuDNN version: N/A\nGPU model and memory: N/A\nExact command to reproduce: N/A\n\nSource code / logs\n\nNo problem in graph mode\n\nimport tensorflow as tf\nimport numpy as np\nimport tensorflow.contrib.eager as tfe\ntfe.enable_eager_execution()\n@tfe.defun\ndef test(rect):\n    rect_T = tf.transpose(rect)\n    print(rect_T.shape)\n    print(tf.linalg.inv(rect_T).shape)\n    print(tf.linalg.inv(rect).shape)\n    print(tf.linalg.inv(tf.transpose(rect)).shape)\nrect_tf = tf.constant(np.random.uniform(size=[4, 4]))\ntest(rect_tf)\nOutput:\n(4, 4)\n(?, ?)\n(4, 4)\n(?, ?)", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:Win10\r\n- **TensorFlow installed from (source or binary)**:binary\r\n- **TensorFlow version (use command below)**:1.6.0dev20180126(GPU)\r\n- **Python version**: 3.6.3\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: N/A\r\n\r\n### Source code / logs\r\n* No problem in graph mode\r\n```Python\r\nimport tensorflow as tf\r\nimport numpy as np\r\nimport tensorflow.contrib.eager as tfe\r\ntfe.enable_eager_execution()\r\n@tfe.defun\r\ndef test(rect):\r\n    rect_T = tf.transpose(rect)\r\n    print(rect_T.shape)\r\n    print(tf.linalg.inv(rect_T).shape)\r\n    print(tf.linalg.inv(rect).shape)\r\n    print(tf.linalg.inv(tf.transpose(rect)).shape)\r\nrect_tf = tf.constant(np.random.uniform(size=[4, 4]))\r\ntest(rect_tf)\r\n```\r\nOutput:\r\n```\r\n(4, 4)\r\n(?, ?)\r\n(4, 4)\r\n(?, ?)\r\n```"}