{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/407406748", "html_url": "https://github.com/tensorflow/tensorflow/issues/19986#issuecomment-407406748", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19986", "id": 407406748, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzQwNjc0OA==", "user": {"login": "japer21", "id": 17979719, "node_id": "MDQ6VXNlcjE3OTc5NzE5", "avatar_url": "https://avatars2.githubusercontent.com/u/17979719?v=4", "gravatar_id": "", "url": "https://api.github.com/users/japer21", "html_url": "https://github.com/japer21", "followers_url": "https://api.github.com/users/japer21/followers", "following_url": "https://api.github.com/users/japer21/following{/other_user}", "gists_url": "https://api.github.com/users/japer21/gists{/gist_id}", "starred_url": "https://api.github.com/users/japer21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/japer21/subscriptions", "organizations_url": "https://api.github.com/users/japer21/orgs", "repos_url": "https://api.github.com/users/japer21/repos", "events_url": "https://api.github.com/users/japer21/events{/privacy}", "received_events_url": "https://api.github.com/users/japer21/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-24T13:29:28Z", "updated_at": "2018-07-24T13:29:28Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=18057449\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/azemZejnil\">@azemZejnil</a> So, somewhere in your code you can have this</p>\n<pre><code> Bitmap result= BitmapFactory.decodeByteArray(decodedBytes, 0, decodedBytes.length);\n int [] pixelsInt = getIntPixels(result);\n byte[] pixelsBytes = new byte[pixelsInt.length*4];\n for(int i=0;i&lt;pixelsInt.length;i++){\n     byte [] intToByte = toByteArray(pixelsInt[i]);\n     for(int j=0;j&lt;intToByte.length;j++){\n         pixelsBytes[(i*4)+j]=intToByte[j];\n     }\n  }\n</code></pre>\n<p>Let's say we have the image as Bitmap, in our case it's the result variable.<br>\nWhat I do next is I am collecting the integer values of each pixel of the bitmap variable result and then getting the bytes of it, below you can find the implementation of the 2 helper functions  :</p>\n<pre><code>private int[] getIntPixels(Bitmap bitmap) {\n        int[] intValues = new int[bitmap.getWidth() * bitmap.getHeight()];\n        int[] intResults = new int[bitmap.getWidth() * bitmap.getHeight()*3];\n        bitmap.getPixels(intValues, 0, bitmap.getWidth(), 0, 0, bitmap.getWidth(), bitmap.getHeight());\n        for (int i = 0; i &lt; intValues.length; ++i) {\n            final int val = intValues[i];\n            intResults[i * 3 + 2] = Color.red(val);\n            intResults[i * 3 + 1] = Color.green(val);\n            intResults[i * 3] = Color.blue(val);\n        }\n        return intResults;\n    }\n\nprivate byte[] toByteArray(int value) {\n        return new byte[] {\n                (byte)(value &gt;&gt; 24),\n                (byte)(value &gt;&gt; 16),\n                (byte)(value &gt;&gt; 8),\n                (byte)value};\n    }\n</code></pre>\n<p>Then, I create my byte array, <code>pixelsBytes</code> and therefore <code>pixelsBytes</code>. Finally what I am sending is the array <code>pixelsBytes</code>.</p>", "body_text": "@azemZejnil So, somewhere in your code you can have this\n Bitmap result= BitmapFactory.decodeByteArray(decodedBytes, 0, decodedBytes.length);\n int [] pixelsInt = getIntPixels(result);\n byte[] pixelsBytes = new byte[pixelsInt.length*4];\n for(int i=0;i<pixelsInt.length;i++){\n     byte [] intToByte = toByteArray(pixelsInt[i]);\n     for(int j=0;j<intToByte.length;j++){\n         pixelsBytes[(i*4)+j]=intToByte[j];\n     }\n  }\n\nLet's say we have the image as Bitmap, in our case it's the result variable.\nWhat I do next is I am collecting the integer values of each pixel of the bitmap variable result and then getting the bytes of it, below you can find the implementation of the 2 helper functions  :\nprivate int[] getIntPixels(Bitmap bitmap) {\n        int[] intValues = new int[bitmap.getWidth() * bitmap.getHeight()];\n        int[] intResults = new int[bitmap.getWidth() * bitmap.getHeight()*3];\n        bitmap.getPixels(intValues, 0, bitmap.getWidth(), 0, 0, bitmap.getWidth(), bitmap.getHeight());\n        for (int i = 0; i < intValues.length; ++i) {\n            final int val = intValues[i];\n            intResults[i * 3 + 2] = Color.red(val);\n            intResults[i * 3 + 1] = Color.green(val);\n            intResults[i * 3] = Color.blue(val);\n        }\n        return intResults;\n    }\n\nprivate byte[] toByteArray(int value) {\n        return new byte[] {\n                (byte)(value >> 24),\n                (byte)(value >> 16),\n                (byte)(value >> 8),\n                (byte)value};\n    }\n\nThen, I create my byte array, pixelsBytes and therefore pixelsBytes. Finally what I am sending is the array pixelsBytes.", "body": "@azemZejnil So, somewhere in your code you can have this\r\n\r\n```\r\n Bitmap result= BitmapFactory.decodeByteArray(decodedBytes, 0, decodedBytes.length);\r\n int [] pixelsInt = getIntPixels(result);\r\n byte[] pixelsBytes = new byte[pixelsInt.length*4];\r\n for(int i=0;i<pixelsInt.length;i++){\r\n     byte [] intToByte = toByteArray(pixelsInt[i]);\r\n     for(int j=0;j<intToByte.length;j++){\r\n         pixelsBytes[(i*4)+j]=intToByte[j];\r\n     }\r\n  }\r\n```\r\n\r\nLet's say we have the image as Bitmap, in our case it's the result variable.\r\nWhat I do next is I am collecting the integer values of each pixel of the bitmap variable result and then getting the bytes of it, below you can find the implementation of the 2 helper functions  :\r\n\r\n```\r\nprivate int[] getIntPixels(Bitmap bitmap) {\r\n        int[] intValues = new int[bitmap.getWidth() * bitmap.getHeight()];\r\n        int[] intResults = new int[bitmap.getWidth() * bitmap.getHeight()*3];\r\n        bitmap.getPixels(intValues, 0, bitmap.getWidth(), 0, 0, bitmap.getWidth(), bitmap.getHeight());\r\n        for (int i = 0; i < intValues.length; ++i) {\r\n            final int val = intValues[i];\r\n            intResults[i * 3 + 2] = Color.red(val);\r\n            intResults[i * 3 + 1] = Color.green(val);\r\n            intResults[i * 3] = Color.blue(val);\r\n        }\r\n        return intResults;\r\n    }\r\n\r\nprivate byte[] toByteArray(int value) {\r\n        return new byte[] {\r\n                (byte)(value >> 24),\r\n                (byte)(value >> 16),\r\n                (byte)(value >> 8),\r\n                (byte)value};\r\n    }\r\n```\r\nThen, I create my byte array, `pixelsBytes` and therefore `pixelsBytes`. Finally what I am sending is the array `pixelsBytes`."}