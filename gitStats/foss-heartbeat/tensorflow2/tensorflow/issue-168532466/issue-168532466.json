{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3593", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3593/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3593/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3593/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/3593", "id": 168532466, "node_id": "MDU6SXNzdWUxNjg1MzI0NjY=", "number": 3593, "title": "How to run custom encoder-decoder in Tensorflow using available APIs?", "user": {"login": "krayush07", "id": 9397134, "node_id": "MDQ6VXNlcjkzOTcxMzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/9397134?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krayush07", "html_url": "https://github.com/krayush07", "followers_url": "https://api.github.com/users/krayush07/followers", "following_url": "https://api.github.com/users/krayush07/following{/other_user}", "gists_url": "https://api.github.com/users/krayush07/gists{/gist_id}", "starred_url": "https://api.github.com/users/krayush07/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krayush07/subscriptions", "organizations_url": "https://api.github.com/users/krayush07/orgs", "repos_url": "https://api.github.com/users/krayush07/repos", "events_url": "https://api.github.com/users/krayush07/events{/privacy}", "received_events_url": "https://api.github.com/users/krayush07/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-31T18:56:27Z", "updated_at": "2016-07-31T20:09:21Z", "closed_at": "2016-07-31T20:09:21Z", "author_association": "NONE", "body_html": "<p>I need to run a encoder-decoder model in Tensorflow. I see that using the available APIs <code>basic_rnn_seq2seq(encoder_input_data, decoder_input_data, lstm_cell)</code> etc., an encoder-decoder system can be created. However, few pertaining issues are:</p>\n<ol>\n<li>How can we enter the embeddings such as word2vec in such model? I am<br>\naware that we can do embedding lookup but as per the API<br>\n<code>encoder_input_data</code> is a list of 2D Tensor of size batch_size x<br>\ninput_size. How can each word be represented using its respective word embedding in this setup? Even <code>embedding_rnn_seq2seq</code> internally extracts the embeddings. How to give pre-calculated word embeddings as input?</li>\n<li>How can we get the cost and perplexity through the API?</li>\n<li>In case of test instances, we may not know the corresponding decoder inputs. How to handle such case?</li>\n</ol>", "body_text": "I need to run a encoder-decoder model in Tensorflow. I see that using the available APIs basic_rnn_seq2seq(encoder_input_data, decoder_input_data, lstm_cell) etc., an encoder-decoder system can be created. However, few pertaining issues are:\n\nHow can we enter the embeddings such as word2vec in such model? I am\naware that we can do embedding lookup but as per the API\nencoder_input_data is a list of 2D Tensor of size batch_size x\ninput_size. How can each word be represented using its respective word embedding in this setup? Even embedding_rnn_seq2seq internally extracts the embeddings. How to give pre-calculated word embeddings as input?\nHow can we get the cost and perplexity through the API?\nIn case of test instances, we may not know the corresponding decoder inputs. How to handle such case?", "body": "I need to run a encoder-decoder model in Tensorflow. I see that using the available APIs `basic_rnn_seq2seq(encoder_input_data, decoder_input_data, lstm_cell)` etc., an encoder-decoder system can be created. However, few pertaining issues are:\n1. How can we enter the embeddings such as word2vec in such model? I am\n   aware that we can do embedding lookup but as per the API\n   `encoder_input_data` is a list of 2D Tensor of size batch_size x\n   input_size. How can each word be represented using its respective word embedding in this setup? Even `embedding_rnn_seq2seq` internally extracts the embeddings. How to give pre-calculated word embeddings as input? \n2. How can we get the cost and perplexity through the API?\n3. In case of test instances, we may not know the corresponding decoder inputs. How to handle such case?\n"}