{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/232741666", "html_url": "https://github.com/tensorflow/tensorflow/issues/3115#issuecomment-232741666", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3115", "id": 232741666, "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjc0MTY2Ng==", "user": {"login": "davek44", "id": 172688, "node_id": "MDQ6VXNlcjE3MjY4OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/172688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davek44", "html_url": "https://github.com/davek44", "followers_url": "https://api.github.com/users/davek44/followers", "following_url": "https://api.github.com/users/davek44/following{/other_user}", "gists_url": "https://api.github.com/users/davek44/gists{/gist_id}", "starred_url": "https://api.github.com/users/davek44/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davek44/subscriptions", "organizations_url": "https://api.github.com/users/davek44/orgs", "repos_url": "https://api.github.com/users/davek44/repos", "events_url": "https://api.github.com/users/davek44/events{/privacy}", "received_events_url": "https://api.github.com/users/davek44/received_events", "type": "User", "site_admin": false}, "created_at": "2016-07-14T17:54:48Z", "updated_at": "2016-07-14T17:54:48Z", "author_association": "NONE", "body_html": "<p>Yes, initializers for all different types of cells (like LSTMCell already has) is an important first step.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1794715\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ebrevdo\">@ebrevdo</a>, I see the challenge in trading off flexibility for complexity in initializing different matrices. Are you saying it's also a programming challenge? I imagined it was straightforward to initialize the matrices separately and combine them into the merged version.</p>", "body_text": "Yes, initializers for all different types of cells (like LSTMCell already has) is an important first step.\n@ebrevdo, I see the challenge in trading off flexibility for complexity in initializing different matrices. Are you saying it's also a programming challenge? I imagined it was straightforward to initialize the matrices separately and combine them into the merged version.", "body": "Yes, initializers for all different types of cells (like LSTMCell already has) is an important first step.\n\n@ebrevdo, I see the challenge in trading off flexibility for complexity in initializing different matrices. Are you saying it's also a programming challenge? I imagined it was straightforward to initialize the matrices separately and combine them into the merged version.\n"}