{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/426402714", "html_url": "https://github.com/tensorflow/tensorflow/issues/15327#issuecomment-426402714", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15327", "id": 426402714, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjQwMjcxNA==", "user": {"login": "ricoms", "id": 5393732, "node_id": "MDQ6VXNlcjUzOTM3MzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/5393732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricoms", "html_url": "https://github.com/ricoms", "followers_url": "https://api.github.com/users/ricoms/followers", "following_url": "https://api.github.com/users/ricoms/following{/other_user}", "gists_url": "https://api.github.com/users/ricoms/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricoms/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricoms/subscriptions", "organizations_url": "https://api.github.com/users/ricoms/orgs", "repos_url": "https://api.github.com/users/ricoms/repos", "events_url": "https://api.github.com/users/ricoms/events{/privacy}", "received_events_url": "https://api.github.com/users/ricoms/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-02T19:36:25Z", "updated_at": "2018-10-03T00:52:09Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=8894643\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/secsilm\">@secsilm</a>, something like tensorflow_estimator_to_keras, and then use keras single instance easy predict?</p>\n<p>It would be nice, and useful for little experimentation.</p>\n<p>For example, I followed <a href=\"https://www.tensorflow.org/performance/datasets_performance\" rel=\"nofollow\">this documentation</a>. And now I'm incapable of giving a basic numpy array or other simpler structure to predict locally so I can get a \"diff dataset\" to analyze the errors.</p>\n<p>The only way I see how to do it is that I will have to create a tfrecord of my intended diff data. Although, if I forgot to pass the identifier (filename) through the pipeline and include this in the original graph I'll have to train my model again entirely from zero. Because I can't identify which is which of my 3 million images when it returns the prediction.</p>\n<p>I saw that there is a <code>tf.contrib.predictor.from_saved_model</code> that promises to simplify the prediction. Although it is still chained to how the graph was set from the beginning. Did I lose time and $ from many hours of training so I now can only predict if I deploy the model?</p>\n<p>Thanks for all your work with tensorflow, it's simply amazing. But <a href=\"https://www.tensorflow.org/guide/custom_estimators#running_the_abalone_model\" rel=\"nofollow\">the Abalone tutorial</a> does not use ONCE the <code>estimator.predict</code> or even the <code>tf.contrib.predictor.from_saved_model</code>.</p>", "body_text": "@secsilm, something like tensorflow_estimator_to_keras, and then use keras single instance easy predict?\nIt would be nice, and useful for little experimentation.\nFor example, I followed this documentation. And now I'm incapable of giving a basic numpy array or other simpler structure to predict locally so I can get a \"diff dataset\" to analyze the errors.\nThe only way I see how to do it is that I will have to create a tfrecord of my intended diff data. Although, if I forgot to pass the identifier (filename) through the pipeline and include this in the original graph I'll have to train my model again entirely from zero. Because I can't identify which is which of my 3 million images when it returns the prediction.\nI saw that there is a tf.contrib.predictor.from_saved_model that promises to simplify the prediction. Although it is still chained to how the graph was set from the beginning. Did I lose time and $ from many hours of training so I now can only predict if I deploy the model?\nThanks for all your work with tensorflow, it's simply amazing. But the Abalone tutorial does not use ONCE the estimator.predict or even the tf.contrib.predictor.from_saved_model.", "body": "@secsilm, something like tensorflow_estimator_to_keras, and then use keras single instance easy predict?\r\n\r\nIt would be nice, and useful for little experimentation.\r\n\r\nFor example, I followed [this documentation](https://www.tensorflow.org/performance/datasets_performance). And now I'm incapable of giving a basic numpy array or other simpler structure to predict locally so I can get a \"diff dataset\" to analyze the errors.\r\n\r\nThe only way I see how to do it is that I will have to create a tfrecord of my intended diff data. Although, if I forgot to pass the identifier (filename) through the pipeline and include this in the original graph I'll have to train my model again entirely from zero. Because I can't identify which is which of my 3 million images when it returns the prediction.\r\n\r\nI saw that there is a `tf.contrib.predictor.from_saved_model` that promises to simplify the prediction. Although it is still chained to how the graph was set from the beginning. Did I lose time and $ from many hours of training so I now can only predict if I deploy the model?\r\n\r\nThanks for all your work with tensorflow, it's simply amazing. But [the Abalone tutorial](https://www.tensorflow.org/guide/custom_estimators#running_the_abalone_model) does not use ONCE the `estimator.predict` or even the `tf.contrib.predictor.from_saved_model`."}