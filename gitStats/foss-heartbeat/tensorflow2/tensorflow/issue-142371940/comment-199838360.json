{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/199838360", "html_url": "https://github.com/tensorflow/tensorflow/issues/1569#issuecomment-199838360", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1569", "id": 199838360, "node_id": "MDEyOklzc3VlQ29tbWVudDE5OTgzODM2MA==", "user": {"login": "keveman", "id": 229914, "node_id": "MDQ6VXNlcjIyOTkxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/229914?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keveman", "html_url": "https://github.com/keveman", "followers_url": "https://api.github.com/users/keveman/followers", "following_url": "https://api.github.com/users/keveman/following{/other_user}", "gists_url": "https://api.github.com/users/keveman/gists{/gist_id}", "starred_url": "https://api.github.com/users/keveman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keveman/subscriptions", "organizations_url": "https://api.github.com/users/keveman/orgs", "repos_url": "https://api.github.com/users/keveman/repos", "events_url": "https://api.github.com/users/keveman/events{/privacy}", "received_events_url": "https://api.github.com/users/keveman/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-22T14:26:16Z", "updated_at": "2016-03-22T14:26:16Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I tried the following :</p>\n<pre><code>$ pip install -U http://ci.tensorflow.org/job/tensorflow-master-gpu_pip/lastSuccessfulBuild/artifact/pip_test/whl/tensorflow-0.7.1-py2-none-any.whl\n$ python2\nPython 2.7.6 (default, Jun 22 2015, 17:58:13) \n[GCC 4.8.2] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt; import tensorflow as tf\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcurand.so locally\n&gt;&gt;&gt; tf.load_op_library('/home/keveman/zero_out.so')\n&lt;module '18c058680842296ccc50a4eac3d8b763' (built-in)&gt;\n</code></pre>\n<p>The one reason I can think of why the undefined symbol error could be happening for you is, pywrap_tensorflow.so is not dlopened with <code>RTLD_GLOBAL</code> for some reason. Look at <code>tensorflow/python/__init__.py</code> for these lines :</p>\n<pre><code>_default_dlopen_flags = sys.getdlopenflags()\nsys.setdlopenflags(_default_dlopen_flags | ctypes.RTLD_GLOBAL)\nfrom tensorflow.python import pywrap_tensorflow\nsys.setdlopenflags(_default_dlopen_flags)\n</code></pre>\n<p>Try this on your machine :</p>\n<pre><code>$ python2 -c \"import ctypes; print ctypes.RTLD_GLOBAL\"\n256\n</code></pre>\n<p>Although I don't see why that would be different on ArchLinux.</p>", "body_text": "I tried the following :\n$ pip install -U http://ci.tensorflow.org/job/tensorflow-master-gpu_pip/lastSuccessfulBuild/artifact/pip_test/whl/tensorflow-0.7.1-py2-none-any.whl\n$ python2\nPython 2.7.6 (default, Jun 22 2015, 17:58:13) \n[GCC 4.8.2] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import tensorflow as tf\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcurand.so locally\n>>> tf.load_op_library('/home/keveman/zero_out.so')\n<module '18c058680842296ccc50a4eac3d8b763' (built-in)>\n\nThe one reason I can think of why the undefined symbol error could be happening for you is, pywrap_tensorflow.so is not dlopened with RTLD_GLOBAL for some reason. Look at tensorflow/python/__init__.py for these lines :\n_default_dlopen_flags = sys.getdlopenflags()\nsys.setdlopenflags(_default_dlopen_flags | ctypes.RTLD_GLOBAL)\nfrom tensorflow.python import pywrap_tensorflow\nsys.setdlopenflags(_default_dlopen_flags)\n\nTry this on your machine :\n$ python2 -c \"import ctypes; print ctypes.RTLD_GLOBAL\"\n256\n\nAlthough I don't see why that would be different on ArchLinux.", "body": "I tried the following :\n\n```\n$ pip install -U http://ci.tensorflow.org/job/tensorflow-master-gpu_pip/lastSuccessfulBuild/artifact/pip_test/whl/tensorflow-0.7.1-py2-none-any.whl\n$ python2\nPython 2.7.6 (default, Jun 22 2015, 17:58:13) \n[GCC 4.8.2] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import tensorflow as tf\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcurand.so locally\n>>> tf.load_op_library('/home/keveman/zero_out.so')\n<module '18c058680842296ccc50a4eac3d8b763' (built-in)>\n```\n\nThe one reason I can think of why the undefined symbol error could be happening for you is, pywrap_tensorflow.so is not dlopened with `RTLD_GLOBAL` for some reason. Look at `tensorflow/python/__init__.py` for these lines : \n\n```\n_default_dlopen_flags = sys.getdlopenflags()\nsys.setdlopenflags(_default_dlopen_flags | ctypes.RTLD_GLOBAL)\nfrom tensorflow.python import pywrap_tensorflow\nsys.setdlopenflags(_default_dlopen_flags)\n```\n\nTry this on your machine : \n\n```\n$ python2 -c \"import ctypes; print ctypes.RTLD_GLOBAL\"\n256\n```\n\nAlthough I don't see why that would be different on ArchLinux.\n"}