{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/199704431", "html_url": "https://github.com/tensorflow/tensorflow/issues/1569#issuecomment-199704431", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1569", "id": 199704431, "node_id": "MDEyOklzc3VlQ29tbWVudDE5OTcwNDQzMQ==", "user": {"login": "rlrs", "id": 7533072, "node_id": "MDQ6VXNlcjc1MzMwNzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/7533072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rlrs", "html_url": "https://github.com/rlrs", "followers_url": "https://api.github.com/users/rlrs/followers", "following_url": "https://api.github.com/users/rlrs/following{/other_user}", "gists_url": "https://api.github.com/users/rlrs/gists{/gist_id}", "starred_url": "https://api.github.com/users/rlrs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rlrs/subscriptions", "organizations_url": "https://api.github.com/users/rlrs/orgs", "repos_url": "https://api.github.com/users/rlrs/repos", "events_url": "https://api.github.com/users/rlrs/events{/privacy}", "received_events_url": "https://api.github.com/users/rlrs/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-22T08:48:10Z", "updated_at": "2016-03-22T08:48:10Z", "author_association": "NONE", "body_html": "<p>I'm on Arch Linux, using a new binary install from <a href=\"http://ci.tensorflow.org/job/tensorflow-master-gpu_pip/\" rel=\"nofollow\">http://ci.tensorflow.org/job/tensorflow-master-gpu_pip/</a>.<br>\ngcc 5.3.0 and Python 2.7.11</p>\n<p>Does it matter where the compiled .so is located? To be clear:</p>\n<pre><code>&gt; TF_INC=$(python2 -c 'import tensorflow as tf; print(tf.sysconfig.get_include())') \n/home/rasmus/.local/lib/python2.7/site-packages/tensorflow/include\n&gt; g++ -std=c++11 -shared zero_out.cc -o zero_out.so -I $TF_INC -fPIC\n&gt; python2 -c \"import tensorflow as tf; tf.load_op_library('/home/rasmus/deep-rl/zero_out.so')\"\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcurand.so locally\nTraceback (most recent call last):\n  File \"&lt;string&gt;\", line 1, in &lt;module&gt;\n  File \"/home/rasmus/.local/lib/python2.7/site-packages/tensorflow/python/framework/load_library.py\", line 71, in load_op_library\n    raise errors._make_specific_exception(None, None, error_msg, error_code)\ntensorflow.python.framework.errors.NotFoundError: /home/rasmus/deep-rl/zero_out.so: undefined symbol: _ZN10tensorflow8internal21CheckOpMessageBuilder9NewStringB5cxx11Ev\n</code></pre>", "body_text": "I'm on Arch Linux, using a new binary install from http://ci.tensorflow.org/job/tensorflow-master-gpu_pip/.\ngcc 5.3.0 and Python 2.7.11\nDoes it matter where the compiled .so is located? To be clear:\n> TF_INC=$(python2 -c 'import tensorflow as tf; print(tf.sysconfig.get_include())') \n/home/rasmus/.local/lib/python2.7/site-packages/tensorflow/include\n> g++ -std=c++11 -shared zero_out.cc -o zero_out.so -I $TF_INC -fPIC\n> python2 -c \"import tensorflow as tf; tf.load_op_library('/home/rasmus/deep-rl/zero_out.so')\"\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcurand.so locally\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"/home/rasmus/.local/lib/python2.7/site-packages/tensorflow/python/framework/load_library.py\", line 71, in load_op_library\n    raise errors._make_specific_exception(None, None, error_msg, error_code)\ntensorflow.python.framework.errors.NotFoundError: /home/rasmus/deep-rl/zero_out.so: undefined symbol: _ZN10tensorflow8internal21CheckOpMessageBuilder9NewStringB5cxx11Ev", "body": "I'm on Arch Linux, using a new binary install from http://ci.tensorflow.org/job/tensorflow-master-gpu_pip/. \ngcc 5.3.0 and Python 2.7.11\n\nDoes it matter where the compiled .so is located? To be clear:\n\n```\n> TF_INC=$(python2 -c 'import tensorflow as tf; print(tf.sysconfig.get_include())') \n/home/rasmus/.local/lib/python2.7/site-packages/tensorflow/include\n> g++ -std=c++11 -shared zero_out.cc -o zero_out.so -I $TF_INC -fPIC\n> python2 -c \"import tensorflow as tf; tf.load_op_library('/home/rasmus/deep-rl/zero_out.so')\"\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcurand.so locally\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"/home/rasmus/.local/lib/python2.7/site-packages/tensorflow/python/framework/load_library.py\", line 71, in load_op_library\n    raise errors._make_specific_exception(None, None, error_msg, error_code)\ntensorflow.python.framework.errors.NotFoundError: /home/rasmus/deep-rl/zero_out.so: undefined symbol: _ZN10tensorflow8internal21CheckOpMessageBuilder9NewStringB5cxx11Ev\n```\n"}