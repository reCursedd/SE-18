{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/337555737", "html_url": "https://github.com/tensorflow/tensorflow/issues/13575#issuecomment-337555737", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13575", "id": 337555737, "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzU1NTczNw==", "user": {"login": "bodokaiser", "id": 1780466, "node_id": "MDQ6VXNlcjE3ODA0NjY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1780466?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bodokaiser", "html_url": "https://github.com/bodokaiser", "followers_url": "https://api.github.com/users/bodokaiser/followers", "following_url": "https://api.github.com/users/bodokaiser/following{/other_user}", "gists_url": "https://api.github.com/users/bodokaiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/bodokaiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bodokaiser/subscriptions", "organizations_url": "https://api.github.com/users/bodokaiser/orgs", "repos_url": "https://api.github.com/users/bodokaiser/repos", "events_url": "https://api.github.com/users/bodokaiser/events{/privacy}", "received_events_url": "https://api.github.com/users/bodokaiser/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-18T11:08:23Z", "updated_at": "2017-10-22T10:51:49Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=577277\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/martinwicke\">@martinwicke</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=192142\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mrry\">@mrry</a> are there any updates?</p>\n<p>I found that you can use i.e.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n\n<span class=\"pl-k\">from</span> tensorflow.core.example <span class=\"pl-k\">import</span> example_pb2\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">read_tfrecord</span>(<span class=\"pl-smi\">filename</span>):\n  <span class=\"pl-k\">with</span> <span class=\"pl-c1\">open</span>(filename) <span class=\"pl-k\">as</span> f:\n    example <span class=\"pl-k\">=</span> example_pb2.Example.FromString(f.read())\n    feature <span class=\"pl-k\">=</span> example.features.feature\n\n    encoded <span class=\"pl-k\">=</span> feature[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>encoded<span class=\"pl-pds\">'</span></span>].bytes_list.value[<span class=\"pl-c1\">0</span>]\n\n  <span class=\"pl-k\">return</span> np.fromstring(encoded, np.int32)\n\nplaceholder <span class=\"pl-k\">=</span> tf.placeholder(tf.int32)\n\ndataset <span class=\"pl-k\">=</span> tf.data.Dataset.from_tensors(placeholder)\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> do data proprocessing as usual</span>\n\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> session:\n  sess.run(<span class=\"pl-c1\">...</span>, <span class=\"pl-v\">feed_dict</span><span class=\"pl-k\">=</span>{placeholder: read_tfrecord(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>foo.tfrecord<span class=\"pl-pds\">'</span></span>)})</pre></div>\n<p>PS:</p>\n<p><strong>Is there anything else I could do to help to push this further?</strong></p>", "body_text": "@martinwicke @mrry are there any updates?\nI found that you can use i.e.\nimport numpy as np\n\nfrom tensorflow.core.example import example_pb2\n\ndef read_tfrecord(filename):\n  with open(filename) as f:\n    example = example_pb2.Example.FromString(f.read())\n    feature = example.features.feature\n\n    encoded = feature['encoded'].bytes_list.value[0]\n\n  return np.fromstring(encoded, np.int32)\n\nplaceholder = tf.placeholder(tf.int32)\n\ndataset = tf.data.Dataset.from_tensors(placeholder)\n# do data proprocessing as usual\n\nwith tf.Session() as session:\n  sess.run(..., feed_dict={placeholder: read_tfrecord('foo.tfrecord')})\nPS:\nIs there anything else I could do to help to push this further?", "body": "@martinwicke @mrry are there any updates?\r\n\r\nI found that you can use i.e.\r\n\r\n```python\r\nimport numpy as np\r\n\r\nfrom tensorflow.core.example import example_pb2\r\n\r\ndef read_tfrecord(filename):\r\n  with open(filename) as f:\r\n    example = example_pb2.Example.FromString(f.read())\r\n    feature = example.features.feature\r\n\r\n    encoded = feature['encoded'].bytes_list.value[0]\r\n\r\n  return np.fromstring(encoded, np.int32)\r\n\r\nplaceholder = tf.placeholder(tf.int32)\r\n\r\ndataset = tf.data.Dataset.from_tensors(placeholder)\r\n# do data proprocessing as usual\r\n\r\nwith tf.Session() as session:\r\n  sess.run(..., feed_dict={placeholder: read_tfrecord('foo.tfrecord')})\r\n```\r\n\r\nPS:\r\n\r\n**Is there anything else I could do to help to push this further?**"}