{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/339590077", "html_url": "https://github.com/tensorflow/tensorflow/issues/13575#issuecomment-339590077", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13575", "id": 339590077, "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTU5MDA3Nw==", "user": {"login": "bodokaiser", "id": 1780466, "node_id": "MDQ6VXNlcjE3ODA0NjY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1780466?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bodokaiser", "html_url": "https://github.com/bodokaiser", "followers_url": "https://api.github.com/users/bodokaiser/followers", "following_url": "https://api.github.com/users/bodokaiser/following{/other_user}", "gists_url": "https://api.github.com/users/bodokaiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/bodokaiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bodokaiser/subscriptions", "organizations_url": "https://api.github.com/users/bodokaiser/orgs", "repos_url": "https://api.github.com/users/bodokaiser/repos", "events_url": "https://api.github.com/users/bodokaiser/events{/privacy}", "received_events_url": "https://api.github.com/users/bodokaiser/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-26T08:23:39Z", "updated_at": "2017-10-26T08:23:39Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3967488\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/saxenasaurabh\">@saxenasaurabh</a> yes indeed using <code>Int64List</code> does work as intended on windows.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n<span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-c1\">SIZE</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">int</span>(<span class=\"pl-c1\">64e6</span>)\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">_int64_feature</span>(<span class=\"pl-smi\">value</span>):\n  <span class=\"pl-k\">return</span> tf.train.Feature(<span class=\"pl-v\">int64_list</span><span class=\"pl-k\">=</span>tf.train.Int64List(<span class=\"pl-v\">value</span><span class=\"pl-k\">=</span>value))\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">decode</span>(<span class=\"pl-smi\">example</span>):\n  feature_keys <span class=\"pl-k\">=</span> {<span class=\"pl-s\"><span class=\"pl-pds\">'</span>encoded<span class=\"pl-pds\">'</span></span>: tf.VarLenFeature(tf.int64)}\n  features <span class=\"pl-k\">=</span> tf.parse_single_example(example, <span class=\"pl-v\">features</span><span class=\"pl-k\">=</span>feature_keys)\n  <span class=\"pl-k\">return</span> tf.sparse_tensor_to_dense(features[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>encoded<span class=\"pl-pds\">'</span></span>])\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">encode</span>(<span class=\"pl-smi\">array</span>):\n  <span class=\"pl-k\">return</span> tf.train.Example(<span class=\"pl-v\">features</span><span class=\"pl-k\">=</span>tf.train.Features(<span class=\"pl-v\">feature</span><span class=\"pl-k\">=</span>{\n      <span class=\"pl-s\"><span class=\"pl-pds\">'</span>encoded<span class=\"pl-pds\">'</span></span>: _int64_feature(array.astype(np.int64)),\n    })).SerializeToString()\n\n<span class=\"pl-k\">with</span> tf.python_io.TFRecordWriter(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>foo.tfrecord<span class=\"pl-pds\">'</span></span>) <span class=\"pl-k\">as</span> writer:\n  writer.write(encode(np.ones([<span class=\"pl-c1\">SIZE</span>], np.int64)))\n\ndataset <span class=\"pl-k\">=</span> tf.data.TFRecordDataset(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>foo.tfrecord<span class=\"pl-pds\">'</span></span>).map(decode)\n\ndata <span class=\"pl-k\">=</span> dataset.make_one_shot_iterator().get_next()\n\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> session:\n  <span class=\"pl-c1\">print</span>(session.run(data).shape)</pre></div>\n<p>In this case the problem may not be caused by the decoding part but by the <a href=\"https://github.com/tensorflow/tensorflow/blob/e062447136faa0a3513e3b0690598fee5c16a5db/tensorflow/core/util/example_proto_fast_parsing.cc#L566-L570\">type switch</a>. What do you think?</p>", "body_text": "@saxenasaurabh yes indeed using Int64List does work as intended on windows.\nimport numpy as np\nimport tensorflow as tf\nSIZE = int(64e6)\ndef _int64_feature(value):\n  return tf.train.Feature(int64_list=tf.train.Int64List(value=value))\n\ndef decode(example):\n  feature_keys = {'encoded': tf.VarLenFeature(tf.int64)}\n  features = tf.parse_single_example(example, features=feature_keys)\n  return tf.sparse_tensor_to_dense(features['encoded'])\n\ndef encode(array):\n  return tf.train.Example(features=tf.train.Features(feature={\n      'encoded': _int64_feature(array.astype(np.int64)),\n    })).SerializeToString()\n\nwith tf.python_io.TFRecordWriter('foo.tfrecord') as writer:\n  writer.write(encode(np.ones([SIZE], np.int64)))\n\ndataset = tf.data.TFRecordDataset('foo.tfrecord').map(decode)\n\ndata = dataset.make_one_shot_iterator().get_next()\n\nwith tf.Session() as session:\n  print(session.run(data).shape)\nIn this case the problem may not be caused by the decoding part but by the type switch. What do you think?", "body": "@saxenasaurabh yes indeed using `Int64List` does work as intended on windows.\r\n\r\n```python\r\nimport numpy as np\r\nimport tensorflow as tf\r\nSIZE = int(64e6)\r\ndef _int64_feature(value):\r\n  return tf.train.Feature(int64_list=tf.train.Int64List(value=value))\r\n\r\ndef decode(example):\r\n  feature_keys = {'encoded': tf.VarLenFeature(tf.int64)}\r\n  features = tf.parse_single_example(example, features=feature_keys)\r\n  return tf.sparse_tensor_to_dense(features['encoded'])\r\n\r\ndef encode(array):\r\n  return tf.train.Example(features=tf.train.Features(feature={\r\n      'encoded': _int64_feature(array.astype(np.int64)),\r\n    })).SerializeToString()\r\n\r\nwith tf.python_io.TFRecordWriter('foo.tfrecord') as writer:\r\n  writer.write(encode(np.ones([SIZE], np.int64)))\r\n\r\ndataset = tf.data.TFRecordDataset('foo.tfrecord').map(decode)\r\n\r\ndata = dataset.make_one_shot_iterator().get_next()\r\n\r\nwith tf.Session() as session:\r\n  print(session.run(data).shape)\r\n```\r\n\r\nIn this case the problem may not be caused by the decoding part but by the [type switch](https://github.com/tensorflow/tensorflow/blob/e062447136faa0a3513e3b0690598fee5c16a5db/tensorflow/core/util/example_proto_fast_parsing.cc#L566-L570). What do you think?"}