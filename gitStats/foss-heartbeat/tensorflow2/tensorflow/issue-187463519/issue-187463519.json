{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5407", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5407/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5407/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5407/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/5407", "id": 187463519, "node_id": "MDU6SXNzdWUxODc0NjM1MTk=", "number": 5407, "title": "tf.contrib.metrics.streaming_precision doesn't accept predictions and labels of dtype tf.bool", "user": {"login": "sergii-bond", "id": 19783366, "node_id": "MDQ6VXNlcjE5NzgzMzY2", "avatar_url": "https://avatars0.githubusercontent.com/u/19783366?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sergii-bond", "html_url": "https://github.com/sergii-bond", "followers_url": "https://api.github.com/users/sergii-bond/followers", "following_url": "https://api.github.com/users/sergii-bond/following{/other_user}", "gists_url": "https://api.github.com/users/sergii-bond/gists{/gist_id}", "starred_url": "https://api.github.com/users/sergii-bond/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sergii-bond/subscriptions", "organizations_url": "https://api.github.com/users/sergii-bond/orgs", "repos_url": "https://api.github.com/users/sergii-bond/repos", "events_url": "https://api.github.com/users/sergii-bond/events{/privacy}", "received_events_url": "https://api.github.com/users/sergii-bond/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-11-05T00:10:52Z", "updated_at": "2017-06-16T17:07:54Z", "closed_at": "2017-06-16T17:07:54Z", "author_association": "NONE", "body_html": "<p>According to documentation and comments in code, \"tf.contrib.metrics.streaming_precision\" should accept predictions and labels of boolean type, but it doesn't seem to be true.</p>\n<p>To reproduce, modify testAllCorrect procedure in <a href=\"https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/metrics/python/ops/metric_ops_test.py\">this file</a> by adding dtype=tf.bool to tf.constant, as below:</p>\n<pre><code>  def testAllCorrect(self):\n    inputs = np.random.randint(0, 2, size=(100, 1))\n\n    predictions = tf.constant(inputs, dtype=tf.bool)\n    labels = tf.constant(inputs, dtype=tf.bool)\n    precision, update_op = metrics.streaming_precision(\n        predictions, labels)\n</code></pre>\n<p>The test will fail:</p>\n<pre><code>tensorflow/contrib/metrics/python/ops % python ./metric_ops_test.py\n======================================================================\nERROR: testAllCorrect (__main__.StreamingPrecisionTest)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"./metric_ops_test.py\", line 656, in testAllCorrect\n    predictions, labels)\n  File \"/home/sergeii/tools/anaconda2/lib/python2.7/site-packages/tensorflow/contrib/framework/python/framework/deprecation.py\", line 218, in new_func\n    return func(*args, **kwargs)\n  File \"/home/sergeii/tools/anaconda2/lib/python2.7/site-packages/tensorflow/contrib/metrics/python/ops/metric_ops.py\", line 572, in streaming_precision\n    updates_collections=None, name=None)\n  File \"/home/sergeii/tools/anaconda2/lib/python2.7/site-packages/tensorflow/contrib/metrics/python/ops/metric_ops.py\", line 215, in _streaming_true_positives\n    is_true_positive = math_ops.logical_and(math_ops.equal(labels, 1),\n  File \"/home/sergeii/tools/anaconda2/lib/python2.7/site-packages/tensorflow/python/ops/gen_math_ops.py\", line 726, in equal\n    result = _op_def_lib.apply_op(\"Equal\", x=x, y=y, name=name)\n  File \"/home/sergeii/tools/anaconda2/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py\", line 490, in apply_op\n    preferred_dtype=default_dtype)\n  File \"/home/sergeii/tools/anaconda2/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 657, in convert_to_tensor\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n  File \"/home/sergeii/tools/anaconda2/lib/python2.7/site-packages/tensorflow/python/framework/constant_op.py\", line 180, in _constant_tensor_conversion_function\n    return constant(v, dtype=dtype, name=name)\n  File \"/home/sergeii/tools/anaconda2/lib/python2.7/site-packages/tensorflow/python/framework/constant_op.py\", line 163, in constant\n    tensor_util.make_tensor_proto(value, dtype=dtype, shape=shape))\n  File \"/home/sergeii/tools/anaconda2/lib/python2.7/site-packages/tensorflow/python/framework/tensor_util.py\", line 353, in make_tensor_proto\n    _AssertCompatible(values, dtype)\n  File \"/home/sergeii/tools/anaconda2/lib/python2.7/site-packages/tensorflow/python/framework/tensor_util.py\", line 290, in _AssertCompatible\n    (dtype.name, repr(mismatch), type(mismatch).__name__))\nTypeError: Expected bool, got 1 of type 'int' instead.\n</code></pre>\n<p>This happens in _streaming_true_positives function in <a href=\"https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/metrics/python/ops/metric_ops.py\">this file</a>, when executing <code>math_ops.equal(labels, 1)</code></p>\n<p>Can be repeated simply as:</p>\n<pre><code>import numpy as np\nfrom tensorflow.python.ops import math_ops\nimport tensorflow as tf\n\nlabel = tf.constant(np.array([1, 0, 1]), dtype=tf.bool)\nmath_ops.equal(label, 1)\n</code></pre>\n<h3>Environment info</h3>\n<p>Operating System: Ubuntu 14.04.1</p>\n<pre><code>%ls -l /usr/local/cuda/lib64/libcud*  \n-rw-r--r-- 1 root root    558720 Oct 20 14:53 /usr/local/cuda/lib64/libcudadevrt.a\nlrwxrwxrwx 1 root root        16 Oct 20 14:53 /usr/local/cuda/lib64/libcudart.so -&gt; libcudart.so.8.0\nlrwxrwxrwx 1 root root        19 Oct 20 14:53 /usr/local/cuda/lib64/libcudart.so.8.0 -&gt; libcudart.so.8.0.44\n-rwxr-xr-x 1 root root    415432 Oct 20 14:53 /usr/local/cuda/lib64/libcudart.so.8.0.44\n-rw-r--r-- 1 root root    775162 Oct 20 14:53 /usr/local/cuda/lib64/libcudart_static.a\nlrwxrwxrwx 1 1000 users       13 Jul 26 22:55 /usr/local/cuda/lib64/libcudnn.so -&gt; libcudnn.so.5\nlrwxrwxrwx 1 1000 users       17 Jul 26 22:55 /usr/local/cuda/lib64/libcudnn.so.5 -&gt; libcudnn.so.5.1.5\n-rwxrwxr-x 1 1000 users 79337624 Jul 26 22:53 /usr/local/cuda/lib64/libcudnn.so.5.1.5\n-rw-rw-r-- 1 1000 users 69756172 Jul 26 22:53 /usr/local/cuda/lib64/libcudnn_static.a\n</code></pre>\n<pre><code>python -c \"import tensorflow; print(tensorflow.__version__)\"\nVersion: 0.11.0rc2\n</code></pre>", "body_text": "According to documentation and comments in code, \"tf.contrib.metrics.streaming_precision\" should accept predictions and labels of boolean type, but it doesn't seem to be true.\nTo reproduce, modify testAllCorrect procedure in this file by adding dtype=tf.bool to tf.constant, as below:\n  def testAllCorrect(self):\n    inputs = np.random.randint(0, 2, size=(100, 1))\n\n    predictions = tf.constant(inputs, dtype=tf.bool)\n    labels = tf.constant(inputs, dtype=tf.bool)\n    precision, update_op = metrics.streaming_precision(\n        predictions, labels)\n\nThe test will fail:\ntensorflow/contrib/metrics/python/ops % python ./metric_ops_test.py\n======================================================================\nERROR: testAllCorrect (__main__.StreamingPrecisionTest)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"./metric_ops_test.py\", line 656, in testAllCorrect\n    predictions, labels)\n  File \"/home/sergeii/tools/anaconda2/lib/python2.7/site-packages/tensorflow/contrib/framework/python/framework/deprecation.py\", line 218, in new_func\n    return func(*args, **kwargs)\n  File \"/home/sergeii/tools/anaconda2/lib/python2.7/site-packages/tensorflow/contrib/metrics/python/ops/metric_ops.py\", line 572, in streaming_precision\n    updates_collections=None, name=None)\n  File \"/home/sergeii/tools/anaconda2/lib/python2.7/site-packages/tensorflow/contrib/metrics/python/ops/metric_ops.py\", line 215, in _streaming_true_positives\n    is_true_positive = math_ops.logical_and(math_ops.equal(labels, 1),\n  File \"/home/sergeii/tools/anaconda2/lib/python2.7/site-packages/tensorflow/python/ops/gen_math_ops.py\", line 726, in equal\n    result = _op_def_lib.apply_op(\"Equal\", x=x, y=y, name=name)\n  File \"/home/sergeii/tools/anaconda2/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py\", line 490, in apply_op\n    preferred_dtype=default_dtype)\n  File \"/home/sergeii/tools/anaconda2/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 657, in convert_to_tensor\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n  File \"/home/sergeii/tools/anaconda2/lib/python2.7/site-packages/tensorflow/python/framework/constant_op.py\", line 180, in _constant_tensor_conversion_function\n    return constant(v, dtype=dtype, name=name)\n  File \"/home/sergeii/tools/anaconda2/lib/python2.7/site-packages/tensorflow/python/framework/constant_op.py\", line 163, in constant\n    tensor_util.make_tensor_proto(value, dtype=dtype, shape=shape))\n  File \"/home/sergeii/tools/anaconda2/lib/python2.7/site-packages/tensorflow/python/framework/tensor_util.py\", line 353, in make_tensor_proto\n    _AssertCompatible(values, dtype)\n  File \"/home/sergeii/tools/anaconda2/lib/python2.7/site-packages/tensorflow/python/framework/tensor_util.py\", line 290, in _AssertCompatible\n    (dtype.name, repr(mismatch), type(mismatch).__name__))\nTypeError: Expected bool, got 1 of type 'int' instead.\n\nThis happens in _streaming_true_positives function in this file, when executing math_ops.equal(labels, 1)\nCan be repeated simply as:\nimport numpy as np\nfrom tensorflow.python.ops import math_ops\nimport tensorflow as tf\n\nlabel = tf.constant(np.array([1, 0, 1]), dtype=tf.bool)\nmath_ops.equal(label, 1)\n\nEnvironment info\nOperating System: Ubuntu 14.04.1\n%ls -l /usr/local/cuda/lib64/libcud*  \n-rw-r--r-- 1 root root    558720 Oct 20 14:53 /usr/local/cuda/lib64/libcudadevrt.a\nlrwxrwxrwx 1 root root        16 Oct 20 14:53 /usr/local/cuda/lib64/libcudart.so -> libcudart.so.8.0\nlrwxrwxrwx 1 root root        19 Oct 20 14:53 /usr/local/cuda/lib64/libcudart.so.8.0 -> libcudart.so.8.0.44\n-rwxr-xr-x 1 root root    415432 Oct 20 14:53 /usr/local/cuda/lib64/libcudart.so.8.0.44\n-rw-r--r-- 1 root root    775162 Oct 20 14:53 /usr/local/cuda/lib64/libcudart_static.a\nlrwxrwxrwx 1 1000 users       13 Jul 26 22:55 /usr/local/cuda/lib64/libcudnn.so -> libcudnn.so.5\nlrwxrwxrwx 1 1000 users       17 Jul 26 22:55 /usr/local/cuda/lib64/libcudnn.so.5 -> libcudnn.so.5.1.5\n-rwxrwxr-x 1 1000 users 79337624 Jul 26 22:53 /usr/local/cuda/lib64/libcudnn.so.5.1.5\n-rw-rw-r-- 1 1000 users 69756172 Jul 26 22:53 /usr/local/cuda/lib64/libcudnn_static.a\n\npython -c \"import tensorflow; print(tensorflow.__version__)\"\nVersion: 0.11.0rc2", "body": "According to documentation and comments in code, \"tf.contrib.metrics.streaming_precision\" should accept predictions and labels of boolean type, but it doesn't seem to be true.\r\n\r\nTo reproduce, modify testAllCorrect procedure in [this file](https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/metrics/python/ops/metric_ops_test.py) by adding dtype=tf.bool to tf.constant, as below:\r\n```\r\n  def testAllCorrect(self):\r\n    inputs = np.random.randint(0, 2, size=(100, 1))\r\n\r\n    predictions = tf.constant(inputs, dtype=tf.bool)\r\n    labels = tf.constant(inputs, dtype=tf.bool)\r\n    precision, update_op = metrics.streaming_precision(\r\n        predictions, labels)\r\n```\r\n\r\nThe test will fail:\r\n```\r\ntensorflow/contrib/metrics/python/ops % python ./metric_ops_test.py\r\n======================================================================\r\nERROR: testAllCorrect (__main__.StreamingPrecisionTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"./metric_ops_test.py\", line 656, in testAllCorrect\r\n    predictions, labels)\r\n  File \"/home/sergeii/tools/anaconda2/lib/python2.7/site-packages/tensorflow/contrib/framework/python/framework/deprecation.py\", line 218, in new_func\r\n    return func(*args, **kwargs)\r\n  File \"/home/sergeii/tools/anaconda2/lib/python2.7/site-packages/tensorflow/contrib/metrics/python/ops/metric_ops.py\", line 572, in streaming_precision\r\n    updates_collections=None, name=None)\r\n  File \"/home/sergeii/tools/anaconda2/lib/python2.7/site-packages/tensorflow/contrib/metrics/python/ops/metric_ops.py\", line 215, in _streaming_true_positives\r\n    is_true_positive = math_ops.logical_and(math_ops.equal(labels, 1),\r\n  File \"/home/sergeii/tools/anaconda2/lib/python2.7/site-packages/tensorflow/python/ops/gen_math_ops.py\", line 726, in equal\r\n    result = _op_def_lib.apply_op(\"Equal\", x=x, y=y, name=name)\r\n  File \"/home/sergeii/tools/anaconda2/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py\", line 490, in apply_op\r\n    preferred_dtype=default_dtype)\r\n  File \"/home/sergeii/tools/anaconda2/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 657, in convert_to_tensor\r\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\r\n  File \"/home/sergeii/tools/anaconda2/lib/python2.7/site-packages/tensorflow/python/framework/constant_op.py\", line 180, in _constant_tensor_conversion_function\r\n    return constant(v, dtype=dtype, name=name)\r\n  File \"/home/sergeii/tools/anaconda2/lib/python2.7/site-packages/tensorflow/python/framework/constant_op.py\", line 163, in constant\r\n    tensor_util.make_tensor_proto(value, dtype=dtype, shape=shape))\r\n  File \"/home/sergeii/tools/anaconda2/lib/python2.7/site-packages/tensorflow/python/framework/tensor_util.py\", line 353, in make_tensor_proto\r\n    _AssertCompatible(values, dtype)\r\n  File \"/home/sergeii/tools/anaconda2/lib/python2.7/site-packages/tensorflow/python/framework/tensor_util.py\", line 290, in _AssertCompatible\r\n    (dtype.name, repr(mismatch), type(mismatch).__name__))\r\nTypeError: Expected bool, got 1 of type 'int' instead.\r\n````\r\n\r\nThis happens in _streaming_true_positives function in [this file](https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/metrics/python/ops/metric_ops.py), when executing ```math_ops.equal(labels, 1)```\r\n\r\nCan be repeated simply as:\r\n```\r\nimport numpy as np\r\nfrom tensorflow.python.ops import math_ops\r\nimport tensorflow as tf\r\n\r\nlabel = tf.constant(np.array([1, 0, 1]), dtype=tf.bool)\r\nmath_ops.equal(label, 1)\r\n```\r\n\r\n### Environment info\r\nOperating System: Ubuntu 14.04.1\r\n\r\n```\r\n%ls -l /usr/local/cuda/lib64/libcud*  \r\n-rw-r--r-- 1 root root    558720 Oct 20 14:53 /usr/local/cuda/lib64/libcudadevrt.a\r\nlrwxrwxrwx 1 root root        16 Oct 20 14:53 /usr/local/cuda/lib64/libcudart.so -> libcudart.so.8.0\r\nlrwxrwxrwx 1 root root        19 Oct 20 14:53 /usr/local/cuda/lib64/libcudart.so.8.0 -> libcudart.so.8.0.44\r\n-rwxr-xr-x 1 root root    415432 Oct 20 14:53 /usr/local/cuda/lib64/libcudart.so.8.0.44\r\n-rw-r--r-- 1 root root    775162 Oct 20 14:53 /usr/local/cuda/lib64/libcudart_static.a\r\nlrwxrwxrwx 1 1000 users       13 Jul 26 22:55 /usr/local/cuda/lib64/libcudnn.so -> libcudnn.so.5\r\nlrwxrwxrwx 1 1000 users       17 Jul 26 22:55 /usr/local/cuda/lib64/libcudnn.so.5 -> libcudnn.so.5.1.5\r\n-rwxrwxr-x 1 1000 users 79337624 Jul 26 22:53 /usr/local/cuda/lib64/libcudnn.so.5.1.5\r\n-rw-rw-r-- 1 1000 users 69756172 Jul 26 22:53 /usr/local/cuda/lib64/libcudnn_static.a\r\n```\r\n\r\n```\r\npython -c \"import tensorflow; print(tensorflow.__version__)\"\r\nVersion: 0.11.0rc2\r\n```\r\n"}