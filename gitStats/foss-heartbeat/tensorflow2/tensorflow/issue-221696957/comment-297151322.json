{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/297151322", "html_url": "https://github.com/tensorflow/tensorflow/issues/9202#issuecomment-297151322", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9202", "id": 297151322, "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzE1MTMyMg==", "user": {"login": "emchristiansen", "id": 225668, "node_id": "MDQ6VXNlcjIyNTY2OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/225668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emchristiansen", "html_url": "https://github.com/emchristiansen", "followers_url": "https://api.github.com/users/emchristiansen/followers", "following_url": "https://api.github.com/users/emchristiansen/following{/other_user}", "gists_url": "https://api.github.com/users/emchristiansen/gists{/gist_id}", "starred_url": "https://api.github.com/users/emchristiansen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emchristiansen/subscriptions", "organizations_url": "https://api.github.com/users/emchristiansen/orgs", "repos_url": "https://api.github.com/users/emchristiansen/repos", "events_url": "https://api.github.com/users/emchristiansen/events{/privacy}", "received_events_url": "https://api.github.com/users/emchristiansen/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-25T20:14:27Z", "updated_at": "2017-04-25T20:14:27Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=23068\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/yaroslavvb\">@yaroslavvb</a> thanks for the mini tutorial; it looks like it should be more efficient than just computing <code>cholesky(inverse(covariance_matrix))</code>.</p>\n<p>However, for a dataset with dimension &gt; 1 there are infinitely many whitening matrices, because a rotation of white data is still white.<br>\nThe Cholesky approach produces just one of these possible matrices.<br>\nAs mentioned in the first post, a matrix square root operation would make it possible to produce matrices with more desirable properties, e.g. a matrix which maximizes correlation between whitened and non-whitened data.</p>", "body_text": "@yaroslavvb thanks for the mini tutorial; it looks like it should be more efficient than just computing cholesky(inverse(covariance_matrix)).\nHowever, for a dataset with dimension > 1 there are infinitely many whitening matrices, because a rotation of white data is still white.\nThe Cholesky approach produces just one of these possible matrices.\nAs mentioned in the first post, a matrix square root operation would make it possible to produce matrices with more desirable properties, e.g. a matrix which maximizes correlation between whitened and non-whitened data.", "body": "@yaroslavvb thanks for the mini tutorial; it looks like it should be more efficient than just computing `cholesky(inverse(covariance_matrix))`.\r\n\r\nHowever, for a dataset with dimension > 1 there are infinitely many whitening matrices, because a rotation of white data is still white.\r\nThe Cholesky approach produces just one of these possible matrices.\r\nAs mentioned in the first post, a matrix square root operation would make it possible to produce matrices with more desirable properties, e.g. a matrix which maximizes correlation between whitened and non-whitened data."}