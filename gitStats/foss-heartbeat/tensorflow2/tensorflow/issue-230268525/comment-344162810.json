{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/344162810", "html_url": "https://github.com/tensorflow/tensorflow/issues/10089#issuecomment-344162810", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10089", "id": 344162810, "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDE2MjgxMA==", "user": {"login": "eaplatanios", "id": 1294940, "node_id": "MDQ6VXNlcjEyOTQ5NDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1294940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eaplatanios", "html_url": "https://github.com/eaplatanios", "followers_url": "https://api.github.com/users/eaplatanios/followers", "following_url": "https://api.github.com/users/eaplatanios/following{/other_user}", "gists_url": "https://api.github.com/users/eaplatanios/gists{/gist_id}", "starred_url": "https://api.github.com/users/eaplatanios/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eaplatanios/subscriptions", "organizations_url": "https://api.github.com/users/eaplatanios/orgs", "repos_url": "https://api.github.com/users/eaplatanios/repos", "events_url": "https://api.github.com/users/eaplatanios/events{/privacy}", "received_events_url": "https://api.github.com/users/eaplatanios/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-14T06:51:32Z", "updated_at": "2017-11-14T06:51:32Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=510896\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/debasish83\">@debasish83</a> It's very easy to share the work I have done for my JNI bindings and I would be happy to collaborate and find a way to merge it into the main TensorFlow repository. However, most of the setup/management for distributed TF in my library is implemented on the Scala side. The C API does not expose much for that as a lot of it is only implemented in the Python API. However, it's easy to create a Java API to my Scala API if you're up for that. You would just have to work around my use of implicits in the Scala side which should not be too bad for distributed training. However, it might get tricky if you try to create a Java interface for my learn API (i.e., estimators, datasets, etc.) as I use a lot of implicits for strong type checking there. Note that the best way to perform distributed training currently in my library is through the learn API I provide (similar to the Python API except for the strong typing and some other features in which we diverge). I'd be happy to provide support if you're interested in working on something like that. :)</p>", "body_text": "@debasish83 It's very easy to share the work I have done for my JNI bindings and I would be happy to collaborate and find a way to merge it into the main TensorFlow repository. However, most of the setup/management for distributed TF in my library is implemented on the Scala side. The C API does not expose much for that as a lot of it is only implemented in the Python API. However, it's easy to create a Java API to my Scala API if you're up for that. You would just have to work around my use of implicits in the Scala side which should not be too bad for distributed training. However, it might get tricky if you try to create a Java interface for my learn API (i.e., estimators, datasets, etc.) as I use a lot of implicits for strong type checking there. Note that the best way to perform distributed training currently in my library is through the learn API I provide (similar to the Python API except for the strong typing and some other features in which we diverge). I'd be happy to provide support if you're interested in working on something like that. :)", "body": "@debasish83 It's very easy to share the work I have done for my JNI bindings and I would be happy to collaborate and find a way to merge it into the main TensorFlow repository. However, most of the setup/management for distributed TF in my library is implemented on the Scala side. The C API does not expose much for that as a lot of it is only implemented in the Python API. However, it's easy to create a Java API to my Scala API if you're up for that. You would just have to work around my use of implicits in the Scala side which should not be too bad for distributed training. However, it might get tricky if you try to create a Java interface for my learn API (i.e., estimators, datasets, etc.) as I use a lot of implicits for strong type checking there. Note that the best way to perform distributed training currently in my library is through the learn API I provide (similar to the Python API except for the strong typing and some other features in which we diverge). I'd be happy to provide support if you're interested in working on something like that. :)"}