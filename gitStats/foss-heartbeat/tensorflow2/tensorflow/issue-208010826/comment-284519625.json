{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/284519625", "html_url": "https://github.com/tensorflow/tensorflow/issues/7551#issuecomment-284519625", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7551", "id": 284519625, "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDUxOTYyNQ==", "user": {"login": "taion", "id": 3112159, "node_id": "MDQ6VXNlcjMxMTIxNTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/3112159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taion", "html_url": "https://github.com/taion", "followers_url": "https://api.github.com/users/taion/followers", "following_url": "https://api.github.com/users/taion/following{/other_user}", "gists_url": "https://api.github.com/users/taion/gists{/gist_id}", "starred_url": "https://api.github.com/users/taion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taion/subscriptions", "organizations_url": "https://api.github.com/users/taion/orgs", "repos_url": "https://api.github.com/users/taion/repos", "events_url": "https://api.github.com/users/taion/events{/privacy}", "received_events_url": "https://api.github.com/users/taion/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-06T20:20:09Z", "updated_at": "2017-03-06T20:20:09Z", "author_association": "CONTRIBUTOR", "body_html": "<p>It appears this doesn't happen with <code>tf.nn.bias_add</code>:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">%%</span>time\n\n<span class=\"pl-k\">with</span> tf.Graph().as_default(), tf.Session() <span class=\"pl-k\">as</span> sess:\n    zeros <span class=\"pl-k\">=</span> tf.zeros((<span class=\"pl-c1\">64</span>, <span class=\"pl-c1\">256</span>, <span class=\"pl-c1\">32</span>, <span class=\"pl-c1\">32</span>))\n    beta <span class=\"pl-k\">=</span> tf.get_variable(\n        <span class=\"pl-s\"><span class=\"pl-pds\">'</span>beta<span class=\"pl-pds\">'</span></span>,\n        (<span class=\"pl-c1\">256</span>,),\n        <span class=\"pl-v\">initializer</span><span class=\"pl-k\">=</span>tf.ones_initializer(),\n        <span class=\"pl-v\">trainable</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>,\n    )\n\n    loss <span class=\"pl-k\">=</span> tf.reduce_mean(tf.nn.bias_add(zeros, beta, <span class=\"pl-v\">data_format</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>NCHW<span class=\"pl-pds\">'</span></span>) <span class=\"pl-k\">**</span> <span class=\"pl-c1\">2</span>)\n    optimizer <span class=\"pl-k\">=</span> tf.train.MomentumOptimizer(<span class=\"pl-c1\">0.1</span>, <span class=\"pl-c1\">0.9</span>)\n    train_op <span class=\"pl-k\">=</span> optimizer.minimize(loss)\n\n    sess.run(tf.global_variables_initializer())\n\n    <span class=\"pl-k\">for</span> i <span class=\"pl-k\">in</span> <span class=\"pl-c1\">range</span>(<span class=\"pl-c1\">500</span>):\n        sess.run(train_op)</pre></div>\n<pre><code>CPU times: user 7.98 s, sys: 836 ms, total: 8.81 s\nWall time: 9.93 s\n</code></pre>", "body_text": "It appears this doesn't happen with tf.nn.bias_add:\n%%time\n\nwith tf.Graph().as_default(), tf.Session() as sess:\n    zeros = tf.zeros((64, 256, 32, 32))\n    beta = tf.get_variable(\n        'beta',\n        (256,),\n        initializer=tf.ones_initializer(),\n        trainable=True,\n    )\n\n    loss = tf.reduce_mean(tf.nn.bias_add(zeros, beta, data_format='NCHW') ** 2)\n    optimizer = tf.train.MomentumOptimizer(0.1, 0.9)\n    train_op = optimizer.minimize(loss)\n\n    sess.run(tf.global_variables_initializer())\n\n    for i in range(500):\n        sess.run(train_op)\nCPU times: user 7.98 s, sys: 836 ms, total: 8.81 s\nWall time: 9.93 s", "body": "It appears this doesn't happen with `tf.nn.bias_add`:\r\n\r\n```python\r\n%%time\r\n\r\nwith tf.Graph().as_default(), tf.Session() as sess:\r\n    zeros = tf.zeros((64, 256, 32, 32))\r\n    beta = tf.get_variable(\r\n        'beta',\r\n        (256,),\r\n        initializer=tf.ones_initializer(),\r\n        trainable=True,\r\n    )\r\n\r\n    loss = tf.reduce_mean(tf.nn.bias_add(zeros, beta, data_format='NCHW') ** 2)\r\n    optimizer = tf.train.MomentumOptimizer(0.1, 0.9)\r\n    train_op = optimizer.minimize(loss)\r\n\r\n    sess.run(tf.global_variables_initializer())\r\n\r\n    for i in range(500):\r\n        sess.run(train_op)\r\n```\r\n\r\n```\r\nCPU times: user 7.98 s, sys: 836 ms, total: 8.81 s\r\nWall time: 9.93 s\r\n```"}