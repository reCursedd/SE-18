{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/388450600", "html_url": "https://github.com/tensorflow/tensorflow/issues/18861#issuecomment-388450600", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18861", "id": 388450600, "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODQ1MDYwMA==", "user": {"login": "rundembear", "id": 7693798, "node_id": "MDQ6VXNlcjc2OTM3OTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/7693798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rundembear", "html_url": "https://github.com/rundembear", "followers_url": "https://api.github.com/users/rundembear/followers", "following_url": "https://api.github.com/users/rundembear/following{/other_user}", "gists_url": "https://api.github.com/users/rundembear/gists{/gist_id}", "starred_url": "https://api.github.com/users/rundembear/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rundembear/subscriptions", "organizations_url": "https://api.github.com/users/rundembear/orgs", "repos_url": "https://api.github.com/users/rundembear/repos", "events_url": "https://api.github.com/users/rundembear/events{/privacy}", "received_events_url": "https://api.github.com/users/rundembear/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-11T18:39:04Z", "updated_at": "2018-05-11T18:39:04Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=16018\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/asimshankar\">@asimshankar</a> and <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1192265\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/yifeif\">@yifeif</a>  I have just run a very simple test using our production code. I logged into a machine with 8 GPUs and ran a command which allows me to run my graph, one thread per GPU (but all in the same process). If I use 'visible_device_list' to map the correct GPU for each thread to be 0 at that thread, I see load distributed across all 8 GPUs (using nvidia-smi) and I can execute a typical request in 2 seconds. If I comment out the 'visible_device_list' (and this is the only change) I see load only on GPU 0 and the same request takes 8.2 seconds. Which sounds about right as our code currently only hits about 50% GPU utilization at each GPU (trust me, I'm working on that).<br>\nSo I feel fairly strongly that this is working as expected in 1.3.</p>", "body_text": "@asimshankar and @yifeif  I have just run a very simple test using our production code. I logged into a machine with 8 GPUs and ran a command which allows me to run my graph, one thread per GPU (but all in the same process). If I use 'visible_device_list' to map the correct GPU for each thread to be 0 at that thread, I see load distributed across all 8 GPUs (using nvidia-smi) and I can execute a typical request in 2 seconds. If I comment out the 'visible_device_list' (and this is the only change) I see load only on GPU 0 and the same request takes 8.2 seconds. Which sounds about right as our code currently only hits about 50% GPU utilization at each GPU (trust me, I'm working on that).\nSo I feel fairly strongly that this is working as expected in 1.3.", "body": "@asimshankar and @yifeif  I have just run a very simple test using our production code. I logged into a machine with 8 GPUs and ran a command which allows me to run my graph, one thread per GPU (but all in the same process). If I use 'visible_device_list' to map the correct GPU for each thread to be 0 at that thread, I see load distributed across all 8 GPUs (using nvidia-smi) and I can execute a typical request in 2 seconds. If I comment out the 'visible_device_list' (and this is the only change) I see load only on GPU 0 and the same request takes 8.2 seconds. Which sounds about right as our code currently only hits about 50% GPU utilization at each GPU (trust me, I'm working on that). \r\nSo I feel fairly strongly that this is working as expected in 1.3."}