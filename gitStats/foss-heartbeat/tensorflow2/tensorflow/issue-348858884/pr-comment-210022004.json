{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/210022004", "pull_request_review_id": 146151479, "id": 210022004, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDAyMjAwNA==", "diff_hunk": "@@ -83,24 +103,50 @@ def __call__(self, getter, name, trainable, collections, *args, **kwargs):\n             collections=[ops.GraphKeys.LOCAL_VARIABLES],\n             *args,\n             **kwargs)\n-      global_center_variable = variable_scope.variable(\n+      if kwargs['reuse'] == True:\n+        return local_var\n+      global_center_variable = getter(\n           name='%s/%s' % (GLOBAL_VARIABLE_NAME, name),\n-          initial_value=local_var.initialized_value(),\n           trainable=False,\n-          collections=[ops.GraphKeys.GLOBAL_VARIABLES])\n+          collections=[ops.GraphKeys.GLOBAL_VARIABLES],\n+          *args,\n+          **kwargs)\n \n       with ops.device(self._worker_device):\n-        local_center_variable = variable_scope.variable(\n+        local_center_variable = getter(\n             name='%s/%s' % (LOCAL_VARIABLE_NAME, name),\n-            initial_value=local_var.initialized_value(),\n             trainable=False,\n-            collections=[ops.GraphKeys.LOCAL_VARIABLES])\n-\n-      self._local_map[local_var] = local_center_variable\n-      self._global_map[local_var] = global_center_variable\n+            collections=[ops.GraphKeys.LOCAL_VARIABLES],\n+            *args,\n+            **kwargs)\n+      if kwargs['partitioner'] is None:\n+        self._local_map[local_var] = local_center_variable\n+        self._global_map[local_var] = global_center_variable\n+      else:\n+        v_list = list(local_var)\n+        for i in range(len(v_list)):\n+          self._local_map[v_list[i]] \\\n+              = list(local_center_variable)[i]\n+          self._global_map[v_list[i]] \\\n+              = list(global_center_variable)[i]\n       return local_var\n     else:\n-      return getter(name, trainable, collections, *args, **kwargs)\n+      # 1. default to LOCAL_VARIABLES (instead of GLOBAL_VARIABLES)\n+      # 2. put to global if explicitly defined (GLOBAL_SHARE_VARS)\n+      # 3. other GLOBAL_VARIABLES put to LOCAL_VARIABLES\n+      #    exept global_step, which must be global\n+      if collections is None or len(collections) == 0:", "path": "tensorflow/contrib/opt/python/training/elastic_average_optimizer.py", "position": null, "original_position": 121, "commit_id": "7d9a839a26b7b801ffc53eff59688672021d6a43", "original_commit_id": "cd89c1bc76474cc0e5179ff647a81deb51bba25b", "user": {"login": "alextp", "id": 5061, "node_id": "MDQ6VXNlcjUwNjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alextp", "html_url": "https://github.com/alextp", "followers_url": "https://api.github.com/users/alextp/followers", "following_url": "https://api.github.com/users/alextp/following{/other_user}", "gists_url": "https://api.github.com/users/alextp/gists{/gist_id}", "starred_url": "https://api.github.com/users/alextp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alextp/subscriptions", "organizations_url": "https://api.github.com/users/alextp/orgs", "repos_url": "https://api.github.com/users/alextp/repos", "events_url": "https://api.github.com/users/alextp/events{/privacy}", "received_events_url": "https://api.github.com/users/alextp/received_events", "type": "User", "site_admin": false}, "body": "replace with \"if not collections\"", "created_at": "2018-08-14T16:39:35Z", "updated_at": "2018-08-16T18:44:18Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/21486#discussion_r210022004", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21486", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/210022004"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/21486#discussion_r210022004"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21486"}}, "body_html": "<p>replace with \"if not collections\"</p>", "body_text": "replace with \"if not collections\""}