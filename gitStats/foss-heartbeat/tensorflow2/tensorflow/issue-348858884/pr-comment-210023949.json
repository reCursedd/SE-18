{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/210023949", "pull_request_review_id": 146153837, "id": 210023949, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDAyMzk0OQ==", "diff_hunk": "@@ -241,11 +296,29 @@ def apply_gradients(self, grads_and_vars, global_step=None, name=None):\n       TypeError: If `grads_and_vars` is malformed.\n       ValueError: If none of the variables have gradients.\n     \"\"\"\n+    global_old = set(n.op.name for n in variables.global_variables())\n     apply_updates = self._opt.apply_gradients(grads_and_vars)\n+    global_new = set(n.op.name for n in variables.global_variables())\n     with ops.control_dependencies([apply_updates]):\n       local_update = state_ops.assign_add(\n           self._local_step, 1, name='local_step_update').op\n \n+    # this is for place the variables created by optimizer to local collection\n+    # e.g., AdamOptimizer will create beta as global variables\n+    def _adjust_optimizer_variable_collection(opt_vars):\n+      g = ops.get_default_graph()\n+      idx = 0\n+      for _ in range(len(g._collections[ops.GraphKeys.GLOBAL_VARIABLES])):\n+        var = g._collections[ops.GraphKeys.GLOBAL_VARIABLES][idx]", "path": "tensorflow/contrib/opt/python/training/elastic_average_optimizer.py", "position": null, "original_position": 187, "commit_id": "7d9a839a26b7b801ffc53eff59688672021d6a43", "original_commit_id": "cd89c1bc76474cc0e5179ff647a81deb51bba25b", "user": {"login": "alextp", "id": 5061, "node_id": "MDQ6VXNlcjUwNjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alextp", "html_url": "https://github.com/alextp", "followers_url": "https://api.github.com/users/alextp/followers", "following_url": "https://api.github.com/users/alextp/following{/other_user}", "gists_url": "https://api.github.com/users/alextp/gists{/gist_id}", "starred_url": "https://api.github.com/users/alextp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alextp/subscriptions", "organizations_url": "https://api.github.com/users/alextp/orgs", "repos_url": "https://api.github.com/users/alextp/repos", "events_url": "https://api.github.com/users/alextp/events{/privacy}", "received_events_url": "https://api.github.com/users/alextp/received_events", "type": "User", "site_admin": false}, "body": "Do not use _collections, use get_collection_ref instead.\r\n\r\nHowever mutating these collections after the fact might not have the effect you want. Perhaps it's best to tell the optimizers to create local variables instead?", "created_at": "2018-08-14T16:45:33Z", "updated_at": "2018-08-16T18:44:18Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/21486#discussion_r210023949", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21486", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/210023949"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/21486#discussion_r210023949"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21486"}}, "body_html": "<p>Do not use _collections, use get_collection_ref instead.</p>\n<p>However mutating these collections after the fact might not have the effect you want. Perhaps it's best to tell the optimizers to create local variables instead?</p>", "body_text": "Do not use _collections, use get_collection_ref instead.\nHowever mutating these collections after the fact might not have the effect you want. Perhaps it's best to tell the optimizers to create local variables instead?"}