{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1346", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1346/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1346/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1346/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/1346", "id": 137662453, "node_id": "MDU6SXNzdWUxMzc2NjI0NTM=", "number": 1346, "title": "CUDA compilation on ArchLinux fails", "user": {"login": "e14159", "id": 9612256, "node_id": "MDQ6VXNlcjk2MTIyNTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/9612256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/e14159", "html_url": "https://github.com/e14159", "followers_url": "https://api.github.com/users/e14159/followers", "following_url": "https://api.github.com/users/e14159/following{/other_user}", "gists_url": "https://api.github.com/users/e14159/gists{/gist_id}", "starred_url": "https://api.github.com/users/e14159/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/e14159/subscriptions", "organizations_url": "https://api.github.com/users/e14159/orgs", "repos_url": "https://api.github.com/users/e14159/repos", "events_url": "https://api.github.com/users/e14159/events{/privacy}", "received_events_url": "https://api.github.com/users/e14159/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-03-01T19:24:20Z", "updated_at": "2016-05-02T05:27:45Z", "closed_at": "2016-03-03T21:29:22Z", "author_association": "NONE", "body_html": "<h2>Overview</h2>\n<p>Build fails with</p>\n<pre><code>/usr/include/string.h: In function 'void* __mempcpy_inline(void*, const void*, size_t)':\n/usr/include/string.h:652:42: error: 'memcpy' was not declared in this scope\n     return (char *) memcpy (__dest, __src, __n) + __n;\n</code></pre>\n<h2>Specific information:</h2>\n<ul>\n<li>ArchLinux system</li>\n<li>Compute Capability 3.0 necessary</li>\n<li>CuDNN 4, CUDA 7.5</li>\n<li>Bazel 0.2.0</li>\n</ul>\n<h4>Followed the installation from source instructions:</h4>\n<ul>\n<li>CuDNN 4, CUDA 7.5 are installed in /opt/cuda</li>\n<li><code>git clone -b v0.7.1 --recurse-submodules https://github.com/tensorflow/tensorflow</code></li>\n<li><code>cd tensorflow</code></li>\n<li><code>./configure</code> Details as attached. Building with cuda support and compute capability 3.0</li>\n<li><code>~/bin/bazel build -c opt --config=cuda //tensorflow/cc:tutorials_example_trainer</code><br>\nThis results in the following error:</li>\n</ul>\n<pre><code>\n/usr/lib/gcc/x86_64-unknown-linux-gnu/5.3.0/include/mwaitxintrin.h(36): error: identifier \"__builtin_ia32_monitorx\" is undefined\n\n/usr/lib/gcc/x86_64-unknown-linux-gnu/5.3.0/include/mwaitxintrin.h(42): error: identifier \"__builtin_ia32_mwaitx\" is undefined\n\n2 errors detected in the compilation of \"/tmp/tmpxft_00006c12_00000000-7_avgpooling_op_gpu.cu.cpp1.ii\".\n</code></pre>\n<p>This is probably due to cuda requiring gcc 4.9, while I am using 5.3. I fixed this by editing <code>crosstool_wrapper_driver_is_not_gcc</code> in <code>tensorflow/third_party/gpus/crosstool/clang/bin</code>, changing line 49 to the explicit<br>\n<code>GCC_HOST_COMPILER_PATH = ('/usr/bin/gcc-4.9')</code><br>\nThis allows compilation to continue; however, it then fails with</p>\n<pre><code>/usr/include/string.h: In function 'void* __mempcpy_inline(void*, const void*, size_t)':\n/usr/include/string.h:652:42: error: 'memcpy' was not declared in this scope\n   return (char *) memcpy (__dest, __src, __n) + __n;\n                                          ^\nERROR: /home/RED/src/tensorflow/tensorflow/core/BUILD:334:1: output 'tensorflow/core/_objs/gpu_kernels/tensorflow/core/kernels/aggregate_ops_gpu.cu.o' was not created.\nERROR: /home/RED/src/tensorflow/tensorflow/core/BUILD:334:1: not all outputs were created.\nTarget //tensorflow/cc:tutorials_example_trainer failed to build\n</code></pre>\n<p>Additional information:</p>\n<ul>\n<li>I had been able to compile 0.6.0 (though with CUDA 7.0 and CuDNN 2). This also necessitated switching GCC.</li>\n<li>CPU-Only compilation works.</li>\n<li>Wheel installation works, too, but is obviously unable to use my CC3.0 device.</li>\n</ul>\n<p>Thanks!</p>\n<p>Attachments:</p>\n<ul>\n<li><a href=\"https://github.com/tensorflow/tensorflow/files/153447/tensorflow_configure.txt\">tensorflow_configure.txt</a></li>\n<li><a href=\"https://github.com/tensorflow/tensorflow/files/153446/tensorflow_output.txt\">tensorflow_output.txt</a></li>\n</ul>", "body_text": "Overview\nBuild fails with\n/usr/include/string.h: In function 'void* __mempcpy_inline(void*, const void*, size_t)':\n/usr/include/string.h:652:42: error: 'memcpy' was not declared in this scope\n     return (char *) memcpy (__dest, __src, __n) + __n;\n\nSpecific information:\n\nArchLinux system\nCompute Capability 3.0 necessary\nCuDNN 4, CUDA 7.5\nBazel 0.2.0\n\nFollowed the installation from source instructions:\n\nCuDNN 4, CUDA 7.5 are installed in /opt/cuda\ngit clone -b v0.7.1 --recurse-submodules https://github.com/tensorflow/tensorflow\ncd tensorflow\n./configure Details as attached. Building with cuda support and compute capability 3.0\n~/bin/bazel build -c opt --config=cuda //tensorflow/cc:tutorials_example_trainer\nThis results in the following error:\n\n\n/usr/lib/gcc/x86_64-unknown-linux-gnu/5.3.0/include/mwaitxintrin.h(36): error: identifier \"__builtin_ia32_monitorx\" is undefined\n\n/usr/lib/gcc/x86_64-unknown-linux-gnu/5.3.0/include/mwaitxintrin.h(42): error: identifier \"__builtin_ia32_mwaitx\" is undefined\n\n2 errors detected in the compilation of \"/tmp/tmpxft_00006c12_00000000-7_avgpooling_op_gpu.cu.cpp1.ii\".\n\nThis is probably due to cuda requiring gcc 4.9, while I am using 5.3. I fixed this by editing crosstool_wrapper_driver_is_not_gcc in tensorflow/third_party/gpus/crosstool/clang/bin, changing line 49 to the explicit\nGCC_HOST_COMPILER_PATH = ('/usr/bin/gcc-4.9')\nThis allows compilation to continue; however, it then fails with\n/usr/include/string.h: In function 'void* __mempcpy_inline(void*, const void*, size_t)':\n/usr/include/string.h:652:42: error: 'memcpy' was not declared in this scope\n   return (char *) memcpy (__dest, __src, __n) + __n;\n                                          ^\nERROR: /home/RED/src/tensorflow/tensorflow/core/BUILD:334:1: output 'tensorflow/core/_objs/gpu_kernels/tensorflow/core/kernels/aggregate_ops_gpu.cu.o' was not created.\nERROR: /home/RED/src/tensorflow/tensorflow/core/BUILD:334:1: not all outputs were created.\nTarget //tensorflow/cc:tutorials_example_trainer failed to build\n\nAdditional information:\n\nI had been able to compile 0.6.0 (though with CUDA 7.0 and CuDNN 2). This also necessitated switching GCC.\nCPU-Only compilation works.\nWheel installation works, too, but is obviously unable to use my CC3.0 device.\n\nThanks!\nAttachments:\n\ntensorflow_configure.txt\ntensorflow_output.txt", "body": "## Overview\n\nBuild fails with \n\n```\n/usr/include/string.h: In function 'void* __mempcpy_inline(void*, const void*, size_t)':\n/usr/include/string.h:652:42: error: 'memcpy' was not declared in this scope\n     return (char *) memcpy (__dest, __src, __n) + __n;\n```\n## Specific information:\n- ArchLinux system\n- Compute Capability 3.0 necessary\n- CuDNN 4, CUDA 7.5\n- Bazel 0.2.0\n#### Followed the installation from source instructions:\n- CuDNN 4, CUDA 7.5 are installed in /opt/cuda\n- `git clone -b v0.7.1 --recurse-submodules https://github.com/tensorflow/tensorflow`\n- `cd tensorflow`\n- `./configure` Details as attached. Building with cuda support and compute capability 3.0\n- `~/bin/bazel build -c opt --config=cuda //tensorflow/cc:tutorials_example_trainer`\n  This results in the following error:\n\n```\n\n/usr/lib/gcc/x86_64-unknown-linux-gnu/5.3.0/include/mwaitxintrin.h(36): error: identifier \"__builtin_ia32_monitorx\" is undefined\n\n/usr/lib/gcc/x86_64-unknown-linux-gnu/5.3.0/include/mwaitxintrin.h(42): error: identifier \"__builtin_ia32_mwaitx\" is undefined\n\n2 errors detected in the compilation of \"/tmp/tmpxft_00006c12_00000000-7_avgpooling_op_gpu.cu.cpp1.ii\".\n```\n\nThis is probably due to cuda requiring gcc 4.9, while I am using 5.3. I fixed this by editing `crosstool_wrapper_driver_is_not_gcc` in `tensorflow/third_party/gpus/crosstool/clang/bin`, changing line 49 to the explicit\n`GCC_HOST_COMPILER_PATH = ('/usr/bin/gcc-4.9')`\nThis allows compilation to continue; however, it then fails with \n\n```\n/usr/include/string.h: In function 'void* __mempcpy_inline(void*, const void*, size_t)':\n/usr/include/string.h:652:42: error: 'memcpy' was not declared in this scope\n   return (char *) memcpy (__dest, __src, __n) + __n;\n                                          ^\nERROR: /home/RED/src/tensorflow/tensorflow/core/BUILD:334:1: output 'tensorflow/core/_objs/gpu_kernels/tensorflow/core/kernels/aggregate_ops_gpu.cu.o' was not created.\nERROR: /home/RED/src/tensorflow/tensorflow/core/BUILD:334:1: not all outputs were created.\nTarget //tensorflow/cc:tutorials_example_trainer failed to build\n```\n\nAdditional information:\n- I had been able to compile 0.6.0 (though with CUDA 7.0 and CuDNN 2). This also necessitated switching GCC.\n- CPU-Only compilation works.\n- Wheel installation works, too, but is obviously unable to use my CC3.0 device.\n\nThanks!\n\nAttachments:\n- [tensorflow_configure.txt](https://github.com/tensorflow/tensorflow/files/153447/tensorflow_configure.txt)\n- [tensorflow_output.txt](https://github.com/tensorflow/tensorflow/files/153446/tensorflow_output.txt)\n"}