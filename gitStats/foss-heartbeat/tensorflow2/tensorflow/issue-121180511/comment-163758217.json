{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/163758217", "html_url": "https://github.com/tensorflow/tensorflow/issues/452#issuecomment-163758217", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/452", "id": 163758217, "node_id": "MDEyOklzc3VlQ29tbWVudDE2Mzc1ODIxNw==", "user": {"login": "andrewharp", "id": 3376817, "node_id": "MDQ6VXNlcjMzNzY4MTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/3376817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewharp", "html_url": "https://github.com/andrewharp", "followers_url": "https://api.github.com/users/andrewharp/followers", "following_url": "https://api.github.com/users/andrewharp/following{/other_user}", "gists_url": "https://api.github.com/users/andrewharp/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewharp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewharp/subscriptions", "organizations_url": "https://api.github.com/users/andrewharp/orgs", "repos_url": "https://api.github.com/users/andrewharp/repos", "events_url": "https://api.github.com/users/andrewharp/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewharp/received_events", "type": "User", "site_admin": false}, "created_at": "2015-12-10T21:44:16Z", "updated_at": "2015-12-10T21:44:16Z", "author_association": "MEMBER", "body_html": "<p>My best guess is that this was fixed by <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/bazelbuild/bazel/commit/c74ee3784d3fd3a722f92c39805e57b4353a4509/hovercard\" href=\"https://github.com/bazelbuild/bazel/commit/c74ee3784d3fd3a722f92c39805e57b4353a4509\">bazelbuild/bazel@<tt>c74ee37</tt></a></p>\n<p>When you clean out everything some pregenerated binary must be getting lost. I would suggest using Bazel 0.1.2 or later if that solves your problem. There are no Java protocol buffers used by the demo, so  figuring out a way to somehow force the unecessary //third_party:protoc to exist for &lt; 0.1.2 builds after cleaning would be something of a hack, especially since the root issue has already been fixed.</p>", "body_text": "My best guess is that this was fixed by bazelbuild/bazel@c74ee37\nWhen you clean out everything some pregenerated binary must be getting lost. I would suggest using Bazel 0.1.2 or later if that solves your problem. There are no Java protocol buffers used by the demo, so  figuring out a way to somehow force the unecessary //third_party:protoc to exist for < 0.1.2 builds after cleaning would be something of a hack, especially since the root issue has already been fixed.", "body": "My best guess is that this was fixed by https://github.com/bazelbuild/bazel/commit/c74ee3784d3fd3a722f92c39805e57b4353a4509\n\nWhen you clean out everything some pregenerated binary must be getting lost. I would suggest using Bazel 0.1.2 or later if that solves your problem. There are no Java protocol buffers used by the demo, so  figuring out a way to somehow force the unecessary //third_party:protoc to exist for < 0.1.2 builds after cleaning would be something of a hack, especially since the root issue has already been fixed.\n"}