{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2924", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2924/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2924/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2924/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/2924", "id": 160840916, "node_id": "MDU6SXNzdWUxNjA4NDA5MTY=", "number": 2924, "title": "Problems and solutions in installing tf on Redhat", "user": {"login": "jinfengfeng", "id": 10113334, "node_id": "MDQ6VXNlcjEwMTEzMzM0", "avatar_url": "https://avatars2.githubusercontent.com/u/10113334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jinfengfeng", "html_url": "https://github.com/jinfengfeng", "followers_url": "https://api.github.com/users/jinfengfeng/followers", "following_url": "https://api.github.com/users/jinfengfeng/following{/other_user}", "gists_url": "https://api.github.com/users/jinfengfeng/gists{/gist_id}", "starred_url": "https://api.github.com/users/jinfengfeng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jinfengfeng/subscriptions", "organizations_url": "https://api.github.com/users/jinfengfeng/orgs", "repos_url": "https://api.github.com/users/jinfengfeng/repos", "events_url": "https://api.github.com/users/jinfengfeng/events{/privacy}", "received_events_url": "https://api.github.com/users/jinfengfeng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-06-17T08:50:57Z", "updated_at": "2017-12-22T16:36:09Z", "closed_at": "2016-06-17T21:57:56Z", "author_association": "NONE", "body_html": "<p>I encountered several problems in installing tensorflow on Redhat system. I solved them by googling solutions. Hope my experience may be helpful to some users.</p>\n<p>OS version: Red Hat Enterprise Linux Server release 6.2 (Santiago)<br>\nLinux kernel: 2.6.32-220.el6.x86_64</p>\n<p>Problems and solutions:</p>\n<p><strong>1. glibc version is too low</strong></p>\n<p>Install higer version glibc, e.g. glibc-2.17.<br>\nPlease use at least version 2.17. You can configure the installation using --prefix option to specify the path to install, and then modify LD_LIBRARY_PATH to include the new glibc library.</p>\n<p><strong>2. link problem after install higher version of glibc</strong></p>\n<p>Error info looks like:<br>\n\"<br>\nerror while loading shared libraries: __vdso_time: invalid mode for dlopen():Invalid argument<br>\n\"<br>\nYou need to use the following method to run a program (eg. python):<br>\n/path/to/glibc-2.17/lib/ld-linux-x86-64.so.2 --library-path /path/to/glibc-2.17/lib:$LD_LIBRARY_PATH:/path/to/gcc-5.2.0/lib64:/usr/lib64/ /path/to/anaconda/bin/python2.7</p>\n<p><strong>3. numpy version problem</strong></p>\n<p>Install new version of numpy using pip.</p>\n<p><strong>4. protobuf3 not found, and</strong><br>\nError in python after 'import tensorflow': TypeError: <strong>init</strong>() got an unexpected keyword argument 'syntax'</p>\n<p>pip install 'protobuf&gt;=3.0.0a3'</p>\n<p><strong>5.  failed call to cuInit: CUDA_ERROR_NO_DEVICE</strong><br>\nExplicitly specify a cuda device in you environment variable:<br>\nexport CUDA_VISIBLE_DEVICES=0</p>\n<p><strong>6. libcuda.so.1 not found</strong></p>\n<p>Explicitly specify the path of this lib in your LD_LIBRARY_PATH environment variable.<br>\nlibcuda.so is in usually in /usr/lib64</p>\n<p><strong>7. ELFCLASS32 error</strong><br>\nelf is incorrect, should use a 64-bits .so file (usually in */lib64)</p>\n<p><strong>8. glibc 2.15 cannot create regular file `/var/db/Makefile': Permission denied</strong><br>\nUse glibc 2.17 or  even higher version.</p>", "body_text": "I encountered several problems in installing tensorflow on Redhat system. I solved them by googling solutions. Hope my experience may be helpful to some users.\nOS version: Red Hat Enterprise Linux Server release 6.2 (Santiago)\nLinux kernel: 2.6.32-220.el6.x86_64\nProblems and solutions:\n1. glibc version is too low\nInstall higer version glibc, e.g. glibc-2.17.\nPlease use at least version 2.17. You can configure the installation using --prefix option to specify the path to install, and then modify LD_LIBRARY_PATH to include the new glibc library.\n2. link problem after install higher version of glibc\nError info looks like:\n\"\nerror while loading shared libraries: __vdso_time: invalid mode for dlopen():Invalid argument\n\"\nYou need to use the following method to run a program (eg. python):\n/path/to/glibc-2.17/lib/ld-linux-x86-64.so.2 --library-path /path/to/glibc-2.17/lib:$LD_LIBRARY_PATH:/path/to/gcc-5.2.0/lib64:/usr/lib64/ /path/to/anaconda/bin/python2.7\n3. numpy version problem\nInstall new version of numpy using pip.\n4. protobuf3 not found, and\nError in python after 'import tensorflow': TypeError: init() got an unexpected keyword argument 'syntax'\npip install 'protobuf>=3.0.0a3'\n5.  failed call to cuInit: CUDA_ERROR_NO_DEVICE\nExplicitly specify a cuda device in you environment variable:\nexport CUDA_VISIBLE_DEVICES=0\n6. libcuda.so.1 not found\nExplicitly specify the path of this lib in your LD_LIBRARY_PATH environment variable.\nlibcuda.so is in usually in /usr/lib64\n7. ELFCLASS32 error\nelf is incorrect, should use a 64-bits .so file (usually in */lib64)\n8. glibc 2.15 cannot create regular file `/var/db/Makefile': Permission denied\nUse glibc 2.17 or  even higher version.", "body": "I encountered several problems in installing tensorflow on Redhat system. I solved them by googling solutions. Hope my experience may be helpful to some users.\n\nOS version: Red Hat Enterprise Linux Server release 6.2 (Santiago)\nLinux kernel: 2.6.32-220.el6.x86_64\n\nProblems and solutions:\n\n **1. glibc version is too low** \n\nInstall higer version glibc, e.g. glibc-2.17.\nPlease use at least version 2.17. You can configure the installation using --prefix option to specify the path to install, and then modify LD_LIBRARY_PATH to include the new glibc library.\n\n **2. link problem after install higher version of glibc**\n\nError info looks like:\n\"\nerror while loading shared libraries: __vdso_time: invalid mode for dlopen():Invalid argument\n\"\nYou need to use the following method to run a program (eg. python):\n/path/to/glibc-2.17/lib/ld-linux-x86-64.so.2 --library-path /path/to/glibc-2.17/lib:$LD_LIBRARY_PATH:/path/to/gcc-5.2.0/lib64:/usr/lib64/ /path/to/anaconda/bin/python2.7\n\n **3. numpy version problem** \n\nInstall new version of numpy using pip.\n\n **4. protobuf3 not found, and** \nError in python after 'import tensorflow': TypeError: **init**() got an unexpected keyword argument 'syntax'\n\npip install 'protobuf>=3.0.0a3'\n\n **5.  failed call to cuInit: CUDA_ERROR_NO_DEVICE**\nExplicitly specify a cuda device in you environment variable:\nexport CUDA_VISIBLE_DEVICES=0\n\n **6. libcuda.so.1 not found**\n\nExplicitly specify the path of this lib in your LD_LIBRARY_PATH environment variable. \nlibcuda.so is in usually in /usr/lib64\n\n **7. ELFCLASS32 error**\nelf is incorrect, should use a 64-bits .so file (usually in */lib64)\n\n **8. glibc 2.15 cannot create regular file `/var/db/Makefile': Permission denied**\nUse glibc 2.17 or  even higher version.\n"}