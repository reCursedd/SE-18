{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16100", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16100/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16100/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16100/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16100", "id": 288324704, "node_id": "MDU6SXNzdWUyODgzMjQ3MDQ=", "number": 16100, "title": "Exception when not providing optional parameter frequency_skip in TimeFreqLSTMCell", "user": {"login": "progwolff", "id": 7240277, "node_id": "MDQ6VXNlcjcyNDAyNzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7240277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/progwolff", "html_url": "https://github.com/progwolff", "followers_url": "https://api.github.com/users/progwolff/followers", "following_url": "https://api.github.com/users/progwolff/following{/other_user}", "gists_url": "https://api.github.com/users/progwolff/gists{/gist_id}", "starred_url": "https://api.github.com/users/progwolff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/progwolff/subscriptions", "organizations_url": "https://api.github.com/users/progwolff/orgs", "repos_url": "https://api.github.com/users/progwolff/repos", "events_url": "https://api.github.com/users/progwolff/events{/privacy}", "received_events_url": "https://api.github.com/users/progwolff/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-01-13T12:20:41Z", "updated_at": "2018-01-22T20:27:14Z", "closed_at": "2018-01-22T20:27:14Z", "author_association": "CONTRIBUTOR", "body_html": "<h3>System information</h3>\n<ul>\n<li>Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes, see below</li>\n<li>OS Platform and Distribution:</li>\n<li>TensorFlow installed from: <code>pip3 install --user tensorflow-gpu</code></li>\n<li>TensorFlow version: 1.4.1</li>\n<li>Python version: 3.5.2</li>\n<li>CUDA: 8.0</li>\n<li>GPU: NVidia Titan X</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>Using a <code>TimeFreqLSTMCell</code> in a <code>dynamic_rnn</code> or <code>static_rcnn</code> without providing the optional parameter <code>frequency_skip</code> results in an exception:</p>\n<pre><code>TypeError: unsupported operand type(s) for /: 'int' and 'NoneType'\n</code></pre>\n<p>The line which throws this exception is <div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/8b78c23c161c9d0bec462d5f4c73f0fca413bc8b/tensorflow/contrib/rnn/python/ops/rnn_cell.py#L474-L475\">tensorflow/tensorflow/contrib/rnn/python/ops/rnn_cell.py</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 474 to 475\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/8b78c23c161c9d0bec462d5f4c73f0fca413bc8b\">8b78c23</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L474\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"474\"></td>\n          <td id=\"LC474\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> num_feats <span class=\"pl-k\">=</span> <span class=\"pl-c1\">int</span>((input_size <span class=\"pl-k\">-</span> <span class=\"pl-c1\">self</span>._feature_size) <span class=\"pl-k\">/</span> ( </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L475\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"475\"></td>\n          <td id=\"LC475\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-c1\">self</span>._frequency_skip)) <span class=\"pl-k\">+</span> <span class=\"pl-c1\">1</span> </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<br>\n<code>frequency_skip</code> has it's default value <code>None</code> here.</p>\n<p>Maybe the default should be changed to <code>1</code>?</p>\n<h3>Source code / logs</h3>\n<p>Sadly I am not allowed to share my full source code. However, this is how I create the RNN layers:</p>\n<pre><code>lstmcell = tf.contrib.rnn.TimeFreqLSTMCell(lstm_input.shape.as_list()[2], forget_bias = self.lstm_forget_bias, feature_size = lstm_input_rev.shape.as_list()[2])\n                \nstacked_lstm = tf.nn.rnn_cell.MultiRNNCell([lstmcell] * self.layers_lstm)\n                \nlstm_output, lstm_state = tf.nn.dynamic_rnn(stacked_lstm, lstm_input_rev, dtype=\"float32\", time_major=True)\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes, see below\nOS Platform and Distribution:\nTensorFlow installed from: pip3 install --user tensorflow-gpu\nTensorFlow version: 1.4.1\nPython version: 3.5.2\nCUDA: 8.0\nGPU: NVidia Titan X\n\nDescribe the problem\nUsing a TimeFreqLSTMCell in a dynamic_rnn or static_rcnn without providing the optional parameter frequency_skip results in an exception:\nTypeError: unsupported operand type(s) for /: 'int' and 'NoneType'\n\nThe line which throws this exception is \n  \n    \n      tensorflow/tensorflow/contrib/rnn/python/ops/rnn_cell.py\n    \n    \n        Lines 474 to 475\n      in\n      8b78c23\n    \n    \n    \n    \n\n        \n          \n           num_feats = int((input_size - self._feature_size) / ( \n        \n\n        \n          \n               self._frequency_skip)) + 1 \n        \n    \n  \n\n\nfrequency_skip has it's default value None here.\nMaybe the default should be changed to 1?\nSource code / logs\nSadly I am not allowed to share my full source code. However, this is how I create the RNN layers:\nlstmcell = tf.contrib.rnn.TimeFreqLSTMCell(lstm_input.shape.as_list()[2], forget_bias = self.lstm_forget_bias, feature_size = lstm_input_rev.shape.as_list()[2])\n                \nstacked_lstm = tf.nn.rnn_cell.MultiRNNCell([lstmcell] * self.layers_lstm)\n                \nlstm_output, lstm_state = tf.nn.dynamic_rnn(stacked_lstm, lstm_input_rev, dtype=\"float32\", time_major=True)", "body": "### System information\r\n- Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes, see below\r\n- OS Platform and Distribution: \r\n- TensorFlow installed from: `pip3 install --user tensorflow-gpu`\r\n- TensorFlow version: 1.4.1\r\n- Python version: 3.5.2\r\n- CUDA: 8.0\r\n- GPU: NVidia Titan X\r\n\r\n### Describe the problem\r\n\r\nUsing a `TimeFreqLSTMCell` in a `dynamic_rnn` or `static_rcnn` without providing the optional parameter `frequency_skip` results in an exception:\r\n\r\n```\r\nTypeError: unsupported operand type(s) for /: 'int' and 'NoneType'\r\n```\r\n\r\nThe line which throws this exception is https://github.com/tensorflow/tensorflow/blob/8b78c23c161c9d0bec462d5f4c73f0fca413bc8b/tensorflow/contrib/rnn/python/ops/rnn_cell.py#L474-L475\r\n`frequency_skip` has it's default value `None` here.\r\n\r\nMaybe the default should be changed to `1`?\r\n\r\n### Source code / logs\r\n\r\nSadly I am not allowed to share my full source code. However, this is how I create the RNN layers:\r\n\r\n```\r\nlstmcell = tf.contrib.rnn.TimeFreqLSTMCell(lstm_input.shape.as_list()[2], forget_bias = self.lstm_forget_bias, feature_size = lstm_input_rev.shape.as_list()[2])\r\n                \r\nstacked_lstm = tf.nn.rnn_cell.MultiRNNCell([lstmcell] * self.layers_lstm)\r\n                \r\nlstm_output, lstm_state = tf.nn.dynamic_rnn(stacked_lstm, lstm_input_rev, dtype=\"float32\", time_major=True)\r\n```"}