{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12058", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12058/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12058/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12058/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/12058", "id": 248235217, "node_id": "MDU6SXNzdWUyNDgyMzUyMTc=", "number": 12058, "title": "Couldn't restore attention_ocr checkpoint via saver", "user": {"login": "HuichuanLiu", "id": 10973111, "node_id": "MDQ6VXNlcjEwOTczMTEx", "avatar_url": "https://avatars2.githubusercontent.com/u/10973111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HuichuanLiu", "html_url": "https://github.com/HuichuanLiu", "followers_url": "https://api.github.com/users/HuichuanLiu/followers", "following_url": "https://api.github.com/users/HuichuanLiu/following{/other_user}", "gists_url": "https://api.github.com/users/HuichuanLiu/gists{/gist_id}", "starred_url": "https://api.github.com/users/HuichuanLiu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HuichuanLiu/subscriptions", "organizations_url": "https://api.github.com/users/HuichuanLiu/orgs", "repos_url": "https://api.github.com/users/HuichuanLiu/repos", "events_url": "https://api.github.com/users/HuichuanLiu/events{/privacy}", "received_events_url": "https://api.github.com/users/HuichuanLiu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-08-06T09:11:35Z", "updated_at": "2017-08-06T09:40:22Z", "closed_at": "2017-08-06T09:40:22Z", "author_association": "NONE", "body_html": "<p>Please go to Stack Overflow for help and support:</p>\n<p><a href=\"https://stackoverflow.com/questions/tagged/tensorflow\" rel=\"nofollow\">https://stackoverflow.com/questions/tagged/tensorflow</a></p>\n<p>If you open a GitHub issue, here is our policy:</p>\n<ol>\n<li>It must be a bug or a feature request.</li>\n<li>The form below must be filled out.</li>\n<li>It shouldn't be a TensorBoard issue. Those go <a href=\"https://github.com/tensorflow/tensorboard/issues\">here</a>.</li>\n</ol>\n<p><strong>Here's why we have that policy</strong>: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.</p>\n<hr>\n<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:<br>\nNo</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:<br>\nMacOS Sierra 10.12.5</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:<br>\ncreated environment in conda, then installed tf via pip</li>\n<li><strong>TensorFlow version (use command below)</strong>:<br>\n('v1.2.0-rc2-21-g12f033d', '1.2.0')</li>\n<li><strong>Python version</strong>:<br>\n2.7</li>\n<li><strong>Bazel version (if compiling from source)</strong>:<br>\nNot installed</li>\n<li><strong>CUDA/cuDNN version</strong>:<br>\nNo GPU supported</li>\n<li><strong>GPU model and memory</strong>:<br>\nNo</li>\n<li><strong>Exact command to reproduce</strong>:<br>\npython test.py<br>\nYou can collect some of this information using our environment capture script:</li>\n</ul>\n<p><a href=\"https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\">https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh</a></p>\n<p>You can obtain the TensorFlow version with</p>\n<p>python -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"</p>\n<h3>Describe the problem</h3>\n<p>Describe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.</p>\n<p>Hi, I am trying to use attention_ocr in my own data, a simple test is firstly implemented.<br>\naccording to the instructions from <a href=\"https://github.com/tensorflow/models/tree/master/attention_ocr#how-to-use-a-pre-trained-model\">How to use a pre-trained model</a> but somehow failed in restoring the checkpoints without explicit error info.</p>\n<p>The following condition has been checked:</p>\n<ol>\n<li>checkpoint files are complete</li>\n<li>right path to the checkpoint</li>\n<li>graphs have been imported from .meta</li>\n<li>Nothing changes after run saver.train.restore() (predictions remained the same)</li>\n<li>No error or hints provided</li>\n</ol>\n<p>The checkpoint was downloaded as suggested:</p>\n<pre><code>wget http://download.tensorflow.org/models/attention_ocr_2017_05_17.tar.gz\ntar xf attention_ocr_2017_05_17.tar.gz\ncd attention_ocr_2017_05_17\nls -lh\n</code></pre>\n<pre><code>total 64216\n-rw-r-----  1 liuhuichuan  staff    14M  5 18 04:07 model.ckpt-399731.data-00000-of-00001\n-rw-r-----  1 liuhuichuan  staff   8.2K  5 18 04:07 model.ckpt-399731.index\n-rw-r-----  1 liuhuichuan  staff    17M  5 18 04:07 model.ckpt-399731.meta\n</code></pre>\n<p>The graphs were successfully imported from .meta, but somehow saver couldn't recognize .index and .data files:</p>\n<pre><code>print os.path.exists('../attention_ocr_2017_05_17/model.ckpt-399731.data-00000-of-00001')\nprint os.path.exists('../attention_ocr_2017_05_17/model.ckpt-399731.index')\nprint tf.train.get_checkpoint_state('../attention_ocr_2017_05_17/model.ckpt-399731')\n</code></pre>\n<p>returns:</p>\n<pre><code>Ture\nTure\nNone\n</code></pre>\n<p>A very simple test is attempted:</p>\n<pre><code>saver = tf.train.import_meta_graph('../attention_ocr_2017_05_17/model.ckpt-399731.meta')\nwith tf.Session() as sess:\n    print os.path.exists('./attention_ocr_2017_05_17/model.ckpt-399731.meta')\n    print tf.train.get_checkpoint_state('../attention_ocr_2017_05_17/model.ckpt-399731')\n    saver.restore(sess,'../attention_ocr_2017_05_17/model.ckpt-399731')\n</code></pre>\n<p>returns no error, but still not restored:</p>\n<pre><code>2017-08-06 16:24:41.346086: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\nTrue\n2017-08-06 16:24:41.346124: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\n2017-08-06 16:24:41.346129: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.\n2017-08-06 16:24:41.346133: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.\nNone\nINFO:tensorflow:Restoring parameters from ../attention_ocr_2017_05_17/model.ckpt-399731\nINFO 2017-08-06 16:24:41.000354: tf_logging.py: 82 Restoring parameters from ../attention_ocr_2017_05_17/model.ckpt-399731\n\nProcess finished with exit code 0\n</code></pre>\n<h3>Source code / logs</h3>\n<p>Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.</p>\n<pre><code>import tensorflow as tf\nimport os\nfrom tensorflow.python.platform import flags\nimport matplotlib.image as mpimg\nimport common_flags\n\nFLAGS = flags.FLAGS\ncommon_flags.define()\n\n# yapf: disable\nflags.DEFINE_integer('num_batches', 100,\n                     'Number of batches to run eval for.')\n\nflags.DEFINE_string('eval_log_dir', '/tmp/attention_ocr/eval',\n                    'Directory where the evaluation results are saved to.')\n\nflags.DEFINE_integer('eval_interval_secs', 60,\n                     'Frequency in seconds to run evaluations.')\n\nflags.DEFINE_integer('number_of_steps', None,\n                     'Number of times to run evaluation.')\n\n\n# fake a simple test image\n\nraw_image_data = mpimg.imread('A4A8A5910A355-cvt.jpg').reshape((1,150,600,3))\nimages_placeholder = tf.placeholder(tf.float32,shape = (1,150, 600, 3),name='img_data')\n\nif not tf.gfile.Exists(FLAGS.eval_log_dir):\n    tf.gfile.MakeDirs(FLAGS.eval_log_dir)\ndataset = common_flags.create_dataset(split_name=FLAGS.split_name)\nmodel = common_flags.create_model(dataset.num_char_classes,\n                                    dataset.max_sequence_length,\n                                    dataset.num_of_views, dataset.null_code)\nendpoints = model.create_base(images_placeholder, labels_one_hot=None)\n\n# start loading attention_ocr model\n\nsaver = tf.train.import_meta_graph('../attention_ocr_2017_05_17/model.ckpt-399731.meta')\n\nwith tf.Session() as sess:\n    # init without checkpoint variables and predict\n    init = tf.global_variables_initializer()\n    sess.run(init)\n    predictions = sess.run(endpoints.predicted_chars, feed_dict={images_placeholder: raw_image_data})\n    print predictions\n\n    # restore from checkpoint then predict\n    print os.path.exists('./attention_ocr_2017_05_17/model.ckpt-399731.meta')\n    print tf.train.get_checkpoint_state('../attention_ocr_2017_05_17/model.ckpt-399731')\n    saver.restore(sess,'../attention_ocr_2017_05_17/model.ckpt-399731')\n    predictions = sess.run(endpoints.predicted_chars, feed_dict={images_placeholder: raw_image_data})\n    print predictions\n</code></pre>\n<pre><code>INFO 2017-08-06 16:48:44.000554: fsns.py: 130 Using FSNS dataset split_name=train dataset_dir=/Users/liuhuichuan/PycharmProjects/models/attention_ocr/python/datasets/data/fsns\nDEBUG 2017-08-06 16:48:44.000556: model.py: 343 images: Tensor(\"img_data:0\", shape=(1, 150, 600, 3), dtype=float32)\nDEBUG 2017-08-06 16:48:44.000561: model.py: 348 Views=4 single view: Tensor(\"AttentionOcr_v1/split:0\", shape=(1, 150, 150, 3), dtype=float32)\nDEBUG 2017-08-06 16:48:44.000561: model.py: 191 Using final_endpoint=Mixed_5d\nDEBUG 2017-08-06 16:48:46.000492: model.py: 191 Using final_endpoint=Mixed_5d\nDEBUG 2017-08-06 16:48:47.000546: model.py: 191 Using final_endpoint=Mixed_5d\nDEBUG 2017-08-06 16:48:48.000684: model.py: 191 Using final_endpoint=Mixed_5d\nDEBUG 2017-08-06 16:48:49.000862: model.py: 354 Conv tower: Tensor(\"AttentionOcr_v1/conv_tower_fn/INCE/InceptionV3/Mixed_5d/concat:0\", shape=(1, 16, 16, 288), dtype=float32)\nDEBUG 2017-08-06 16:48:49.000862: model.py: 357 Conv tower w/ encoded coordinates: Tensor(\"AttentionOcr_v1/conv_tower_fn/INCE/InceptionV3/Mixed_5d/concat:0\", shape=(1, 16, 16, 288), dtype=float32)\nDEBUG 2017-08-06 16:48:49.000869: model.py: 360 Pooled views: Tensor(\"AttentionOcr_v1/pool_views_fn/STCK/Reshape:0\", shape=(1, 1024, 288), dtype=float32)\nDEBUG 2017-08-06 16:48:49.000869: sequence_layers.py: 421 Use AttentionWithAutoregression as a layer class\nDEBUG 2017-08-06 16:48:53.000099: model.py: 363 chars_logit: Tensor(\"AttentionOcr_v1/sequence_logit_fn/SQLR/concat:0\", shape=(1, 37, 134), dtype=float32)\n2017-08-06 16:50:05.943512: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\n2017-08-06 16:50:05.943528: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\n2017-08-06 16:50:05.943532: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.\n2017-08-06 16:50:05.943537: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.\nINFO:tensorflow:Restoring parameters from ../attention_ocr_2017_05_17/model.ckpt-399731\nINFO 2017-08-06 16:50:29.000024: tf_logging.py: 82 Restoring parameters from ../attention_ocr_2017_05_17/model.ckpt-399731\n[[  0   0   0 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123\n  123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123\n  123]]\nTrue\nNone\n[[  0   0   0 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123\n  123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123\n  123]]\n\nProcess finished with exit code 0\n</code></pre>", "body_text": "Please go to Stack Overflow for help and support:\nhttps://stackoverflow.com/questions/tagged/tensorflow\nIf you open a GitHub issue, here is our policy:\n\nIt must be a bug or a feature request.\nThe form below must be filled out.\nIt shouldn't be a TensorBoard issue. Those go here.\n\nHere's why we have that policy: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\n\nSystem information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nNo\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nMacOS Sierra 10.12.5\nTensorFlow installed from (source or binary):\ncreated environment in conda, then installed tf via pip\nTensorFlow version (use command below):\n('v1.2.0-rc2-21-g12f033d', '1.2.0')\nPython version:\n2.7\nBazel version (if compiling from source):\nNot installed\nCUDA/cuDNN version:\nNo GPU supported\nGPU model and memory:\nNo\nExact command to reproduce:\npython test.py\nYou can collect some of this information using our environment capture script:\n\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\nYou can obtain the TensorFlow version with\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\nDescribe the problem\nDescribe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.\nHi, I am trying to use attention_ocr in my own data, a simple test is firstly implemented.\naccording to the instructions from How to use a pre-trained model but somehow failed in restoring the checkpoints without explicit error info.\nThe following condition has been checked:\n\ncheckpoint files are complete\nright path to the checkpoint\ngraphs have been imported from .meta\nNothing changes after run saver.train.restore() (predictions remained the same)\nNo error or hints provided\n\nThe checkpoint was downloaded as suggested:\nwget http://download.tensorflow.org/models/attention_ocr_2017_05_17.tar.gz\ntar xf attention_ocr_2017_05_17.tar.gz\ncd attention_ocr_2017_05_17\nls -lh\n\ntotal 64216\n-rw-r-----  1 liuhuichuan  staff    14M  5 18 04:07 model.ckpt-399731.data-00000-of-00001\n-rw-r-----  1 liuhuichuan  staff   8.2K  5 18 04:07 model.ckpt-399731.index\n-rw-r-----  1 liuhuichuan  staff    17M  5 18 04:07 model.ckpt-399731.meta\n\nThe graphs were successfully imported from .meta, but somehow saver couldn't recognize .index and .data files:\nprint os.path.exists('../attention_ocr_2017_05_17/model.ckpt-399731.data-00000-of-00001')\nprint os.path.exists('../attention_ocr_2017_05_17/model.ckpt-399731.index')\nprint tf.train.get_checkpoint_state('../attention_ocr_2017_05_17/model.ckpt-399731')\n\nreturns:\nTure\nTure\nNone\n\nA very simple test is attempted:\nsaver = tf.train.import_meta_graph('../attention_ocr_2017_05_17/model.ckpt-399731.meta')\nwith tf.Session() as sess:\n    print os.path.exists('./attention_ocr_2017_05_17/model.ckpt-399731.meta')\n    print tf.train.get_checkpoint_state('../attention_ocr_2017_05_17/model.ckpt-399731')\n    saver.restore(sess,'../attention_ocr_2017_05_17/model.ckpt-399731')\n\nreturns no error, but still not restored:\n2017-08-06 16:24:41.346086: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\nTrue\n2017-08-06 16:24:41.346124: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\n2017-08-06 16:24:41.346129: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.\n2017-08-06 16:24:41.346133: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.\nNone\nINFO:tensorflow:Restoring parameters from ../attention_ocr_2017_05_17/model.ckpt-399731\nINFO 2017-08-06 16:24:41.000354: tf_logging.py: 82 Restoring parameters from ../attention_ocr_2017_05_17/model.ckpt-399731\n\nProcess finished with exit code 0\n\nSource code / logs\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.\nimport tensorflow as tf\nimport os\nfrom tensorflow.python.platform import flags\nimport matplotlib.image as mpimg\nimport common_flags\n\nFLAGS = flags.FLAGS\ncommon_flags.define()\n\n# yapf: disable\nflags.DEFINE_integer('num_batches', 100,\n                     'Number of batches to run eval for.')\n\nflags.DEFINE_string('eval_log_dir', '/tmp/attention_ocr/eval',\n                    'Directory where the evaluation results are saved to.')\n\nflags.DEFINE_integer('eval_interval_secs', 60,\n                     'Frequency in seconds to run evaluations.')\n\nflags.DEFINE_integer('number_of_steps', None,\n                     'Number of times to run evaluation.')\n\n\n# fake a simple test image\n\nraw_image_data = mpimg.imread('A4A8A5910A355-cvt.jpg').reshape((1,150,600,3))\nimages_placeholder = tf.placeholder(tf.float32,shape = (1,150, 600, 3),name='img_data')\n\nif not tf.gfile.Exists(FLAGS.eval_log_dir):\n    tf.gfile.MakeDirs(FLAGS.eval_log_dir)\ndataset = common_flags.create_dataset(split_name=FLAGS.split_name)\nmodel = common_flags.create_model(dataset.num_char_classes,\n                                    dataset.max_sequence_length,\n                                    dataset.num_of_views, dataset.null_code)\nendpoints = model.create_base(images_placeholder, labels_one_hot=None)\n\n# start loading attention_ocr model\n\nsaver = tf.train.import_meta_graph('../attention_ocr_2017_05_17/model.ckpt-399731.meta')\n\nwith tf.Session() as sess:\n    # init without checkpoint variables and predict\n    init = tf.global_variables_initializer()\n    sess.run(init)\n    predictions = sess.run(endpoints.predicted_chars, feed_dict={images_placeholder: raw_image_data})\n    print predictions\n\n    # restore from checkpoint then predict\n    print os.path.exists('./attention_ocr_2017_05_17/model.ckpt-399731.meta')\n    print tf.train.get_checkpoint_state('../attention_ocr_2017_05_17/model.ckpt-399731')\n    saver.restore(sess,'../attention_ocr_2017_05_17/model.ckpt-399731')\n    predictions = sess.run(endpoints.predicted_chars, feed_dict={images_placeholder: raw_image_data})\n    print predictions\n\nINFO 2017-08-06 16:48:44.000554: fsns.py: 130 Using FSNS dataset split_name=train dataset_dir=/Users/liuhuichuan/PycharmProjects/models/attention_ocr/python/datasets/data/fsns\nDEBUG 2017-08-06 16:48:44.000556: model.py: 343 images: Tensor(\"img_data:0\", shape=(1, 150, 600, 3), dtype=float32)\nDEBUG 2017-08-06 16:48:44.000561: model.py: 348 Views=4 single view: Tensor(\"AttentionOcr_v1/split:0\", shape=(1, 150, 150, 3), dtype=float32)\nDEBUG 2017-08-06 16:48:44.000561: model.py: 191 Using final_endpoint=Mixed_5d\nDEBUG 2017-08-06 16:48:46.000492: model.py: 191 Using final_endpoint=Mixed_5d\nDEBUG 2017-08-06 16:48:47.000546: model.py: 191 Using final_endpoint=Mixed_5d\nDEBUG 2017-08-06 16:48:48.000684: model.py: 191 Using final_endpoint=Mixed_5d\nDEBUG 2017-08-06 16:48:49.000862: model.py: 354 Conv tower: Tensor(\"AttentionOcr_v1/conv_tower_fn/INCE/InceptionV3/Mixed_5d/concat:0\", shape=(1, 16, 16, 288), dtype=float32)\nDEBUG 2017-08-06 16:48:49.000862: model.py: 357 Conv tower w/ encoded coordinates: Tensor(\"AttentionOcr_v1/conv_tower_fn/INCE/InceptionV3/Mixed_5d/concat:0\", shape=(1, 16, 16, 288), dtype=float32)\nDEBUG 2017-08-06 16:48:49.000869: model.py: 360 Pooled views: Tensor(\"AttentionOcr_v1/pool_views_fn/STCK/Reshape:0\", shape=(1, 1024, 288), dtype=float32)\nDEBUG 2017-08-06 16:48:49.000869: sequence_layers.py: 421 Use AttentionWithAutoregression as a layer class\nDEBUG 2017-08-06 16:48:53.000099: model.py: 363 chars_logit: Tensor(\"AttentionOcr_v1/sequence_logit_fn/SQLR/concat:0\", shape=(1, 37, 134), dtype=float32)\n2017-08-06 16:50:05.943512: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\n2017-08-06 16:50:05.943528: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\n2017-08-06 16:50:05.943532: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.\n2017-08-06 16:50:05.943537: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.\nINFO:tensorflow:Restoring parameters from ../attention_ocr_2017_05_17/model.ckpt-399731\nINFO 2017-08-06 16:50:29.000024: tf_logging.py: 82 Restoring parameters from ../attention_ocr_2017_05_17/model.ckpt-399731\n[[  0   0   0 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123\n  123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123\n  123]]\nTrue\nNone\n[[  0   0   0 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123\n  123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123\n  123]]\n\nProcess finished with exit code 0", "body": "Please go to Stack Overflow for help and support:\r\n\r\nhttps://stackoverflow.com/questions/tagged/tensorflow\r\n\r\nIf you open a GitHub issue, here is our policy:\r\n\r\n1. It must be a bug or a feature request.\r\n2. The form below must be filled out.\r\n3. It shouldn't be a TensorBoard issue. Those go [here](https://github.com/tensorflow/tensorboard/issues).\r\n\r\n**Here's why we have that policy**: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nNo\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nMacOS Sierra 10.12.5\r\n- **TensorFlow installed from (source or binary)**:\r\ncreated environment in conda, then installed tf via pip\r\n- **TensorFlow version (use command below)**:\r\n('v1.2.0-rc2-21-g12f033d', '1.2.0')\r\n- **Python version**: \r\n2.7\r\n- **Bazel version (if compiling from source)**:\r\nNot installed\r\n- **CUDA/cuDNN version**:\r\nNo GPU supported\r\n- **GPU model and memory**:\r\nNo\r\n- **Exact command to reproduce**:\r\npython test.py\r\nYou can collect some of this information using our environment capture script:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\nYou can obtain the TensorFlow version with\r\n\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n\r\n### Describe the problem\r\nDescribe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.\r\n\r\nHi, I am trying to use attention_ocr in my own data, a simple test is firstly implemented.\r\naccording to the instructions from [How to use a pre-trained model](https://github.com/tensorflow/models/tree/master/attention_ocr#how-to-use-a-pre-trained-model) but somehow failed in restoring the checkpoints without explicit error info.\r\n\r\nThe following condition has been checked:\r\n1. checkpoint files are complete\r\n2. right path to the checkpoint\r\n3. graphs have been imported from .meta\r\n4. Nothing changes after run saver.train.restore() (predictions remained the same)\r\n5. No error or hints provided\r\n\r\nThe checkpoint was downloaded as suggested:\r\n```\r\nwget http://download.tensorflow.org/models/attention_ocr_2017_05_17.tar.gz\r\ntar xf attention_ocr_2017_05_17.tar.gz\r\ncd attention_ocr_2017_05_17\r\nls -lh\r\n```\r\n```\r\ntotal 64216\r\n-rw-r-----  1 liuhuichuan  staff    14M  5 18 04:07 model.ckpt-399731.data-00000-of-00001\r\n-rw-r-----  1 liuhuichuan  staff   8.2K  5 18 04:07 model.ckpt-399731.index\r\n-rw-r-----  1 liuhuichuan  staff    17M  5 18 04:07 model.ckpt-399731.meta\r\n```\r\n\r\nThe graphs were successfully imported from .meta, but somehow saver couldn't recognize .index and .data files: \r\n```\r\nprint os.path.exists('../attention_ocr_2017_05_17/model.ckpt-399731.data-00000-of-00001')\r\nprint os.path.exists('../attention_ocr_2017_05_17/model.ckpt-399731.index')\r\nprint tf.train.get_checkpoint_state('../attention_ocr_2017_05_17/model.ckpt-399731')\r\n```\r\nreturns:\r\n```\r\nTure\r\nTure\r\nNone\r\n```\r\nA very simple test is attempted:\r\n```\r\nsaver = tf.train.import_meta_graph('../attention_ocr_2017_05_17/model.ckpt-399731.meta')\r\nwith tf.Session() as sess:\r\n    print os.path.exists('./attention_ocr_2017_05_17/model.ckpt-399731.meta')\r\n    print tf.train.get_checkpoint_state('../attention_ocr_2017_05_17/model.ckpt-399731')\r\n    saver.restore(sess,'../attention_ocr_2017_05_17/model.ckpt-399731')\r\n```\r\nreturns no error, but still not restored:\r\n```\r\n2017-08-06 16:24:41.346086: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\r\nTrue\r\n2017-08-06 16:24:41.346124: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\r\n2017-08-06 16:24:41.346129: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.\r\n2017-08-06 16:24:41.346133: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.\r\nNone\r\nINFO:tensorflow:Restoring parameters from ../attention_ocr_2017_05_17/model.ckpt-399731\r\nINFO 2017-08-06 16:24:41.000354: tf_logging.py: 82 Restoring parameters from ../attention_ocr_2017_05_17/model.ckpt-399731\r\n\r\nProcess finished with exit code 0\r\n```\r\n\r\n### Source code / logs\r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.\r\n\r\n```\r\nimport tensorflow as tf\r\nimport os\r\nfrom tensorflow.python.platform import flags\r\nimport matplotlib.image as mpimg\r\nimport common_flags\r\n\r\nFLAGS = flags.FLAGS\r\ncommon_flags.define()\r\n\r\n# yapf: disable\r\nflags.DEFINE_integer('num_batches', 100,\r\n                     'Number of batches to run eval for.')\r\n\r\nflags.DEFINE_string('eval_log_dir', '/tmp/attention_ocr/eval',\r\n                    'Directory where the evaluation results are saved to.')\r\n\r\nflags.DEFINE_integer('eval_interval_secs', 60,\r\n                     'Frequency in seconds to run evaluations.')\r\n\r\nflags.DEFINE_integer('number_of_steps', None,\r\n                     'Number of times to run evaluation.')\r\n\r\n\r\n# fake a simple test image\r\n\r\nraw_image_data = mpimg.imread('A4A8A5910A355-cvt.jpg').reshape((1,150,600,3))\r\nimages_placeholder = tf.placeholder(tf.float32,shape = (1,150, 600, 3),name='img_data')\r\n\r\nif not tf.gfile.Exists(FLAGS.eval_log_dir):\r\n    tf.gfile.MakeDirs(FLAGS.eval_log_dir)\r\ndataset = common_flags.create_dataset(split_name=FLAGS.split_name)\r\nmodel = common_flags.create_model(dataset.num_char_classes,\r\n                                    dataset.max_sequence_length,\r\n                                    dataset.num_of_views, dataset.null_code)\r\nendpoints = model.create_base(images_placeholder, labels_one_hot=None)\r\n\r\n# start loading attention_ocr model\r\n\r\nsaver = tf.train.import_meta_graph('../attention_ocr_2017_05_17/model.ckpt-399731.meta')\r\n\r\nwith tf.Session() as sess:\r\n    # init without checkpoint variables and predict\r\n    init = tf.global_variables_initializer()\r\n    sess.run(init)\r\n    predictions = sess.run(endpoints.predicted_chars, feed_dict={images_placeholder: raw_image_data})\r\n    print predictions\r\n\r\n    # restore from checkpoint then predict\r\n    print os.path.exists('./attention_ocr_2017_05_17/model.ckpt-399731.meta')\r\n    print tf.train.get_checkpoint_state('../attention_ocr_2017_05_17/model.ckpt-399731')\r\n    saver.restore(sess,'../attention_ocr_2017_05_17/model.ckpt-399731')\r\n    predictions = sess.run(endpoints.predicted_chars, feed_dict={images_placeholder: raw_image_data})\r\n    print predictions\r\n```\r\n\r\n```\r\nINFO 2017-08-06 16:48:44.000554: fsns.py: 130 Using FSNS dataset split_name=train dataset_dir=/Users/liuhuichuan/PycharmProjects/models/attention_ocr/python/datasets/data/fsns\r\nDEBUG 2017-08-06 16:48:44.000556: model.py: 343 images: Tensor(\"img_data:0\", shape=(1, 150, 600, 3), dtype=float32)\r\nDEBUG 2017-08-06 16:48:44.000561: model.py: 348 Views=4 single view: Tensor(\"AttentionOcr_v1/split:0\", shape=(1, 150, 150, 3), dtype=float32)\r\nDEBUG 2017-08-06 16:48:44.000561: model.py: 191 Using final_endpoint=Mixed_5d\r\nDEBUG 2017-08-06 16:48:46.000492: model.py: 191 Using final_endpoint=Mixed_5d\r\nDEBUG 2017-08-06 16:48:47.000546: model.py: 191 Using final_endpoint=Mixed_5d\r\nDEBUG 2017-08-06 16:48:48.000684: model.py: 191 Using final_endpoint=Mixed_5d\r\nDEBUG 2017-08-06 16:48:49.000862: model.py: 354 Conv tower: Tensor(\"AttentionOcr_v1/conv_tower_fn/INCE/InceptionV3/Mixed_5d/concat:0\", shape=(1, 16, 16, 288), dtype=float32)\r\nDEBUG 2017-08-06 16:48:49.000862: model.py: 357 Conv tower w/ encoded coordinates: Tensor(\"AttentionOcr_v1/conv_tower_fn/INCE/InceptionV3/Mixed_5d/concat:0\", shape=(1, 16, 16, 288), dtype=float32)\r\nDEBUG 2017-08-06 16:48:49.000869: model.py: 360 Pooled views: Tensor(\"AttentionOcr_v1/pool_views_fn/STCK/Reshape:0\", shape=(1, 1024, 288), dtype=float32)\r\nDEBUG 2017-08-06 16:48:49.000869: sequence_layers.py: 421 Use AttentionWithAutoregression as a layer class\r\nDEBUG 2017-08-06 16:48:53.000099: model.py: 363 chars_logit: Tensor(\"AttentionOcr_v1/sequence_logit_fn/SQLR/concat:0\", shape=(1, 37, 134), dtype=float32)\r\n2017-08-06 16:50:05.943512: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\r\n2017-08-06 16:50:05.943528: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\r\n2017-08-06 16:50:05.943532: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.\r\n2017-08-06 16:50:05.943537: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.\r\nINFO:tensorflow:Restoring parameters from ../attention_ocr_2017_05_17/model.ckpt-399731\r\nINFO 2017-08-06 16:50:29.000024: tf_logging.py: 82 Restoring parameters from ../attention_ocr_2017_05_17/model.ckpt-399731\r\n[[  0   0   0 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123\r\n  123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123\r\n  123]]\r\nTrue\r\nNone\r\n[[  0   0   0 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123\r\n  123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123 123\r\n  123]]\r\n\r\nProcess finished with exit code 0\r\n```\r\n"}