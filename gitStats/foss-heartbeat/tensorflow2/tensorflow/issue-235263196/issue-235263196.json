{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10651", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10651/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10651/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10651/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/10651", "id": 235263196, "node_id": "MDU6SXNzdWUyMzUyNjMxOTY=", "number": 10651, "title": "Different results using tf.train.batch and tf.train.shuffle_batch", "user": {"login": "Bardeux", "id": 13334577, "node_id": "MDQ6VXNlcjEzMzM0NTc3", "avatar_url": "https://avatars1.githubusercontent.com/u/13334577?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bardeux", "html_url": "https://github.com/Bardeux", "followers_url": "https://api.github.com/users/Bardeux/followers", "following_url": "https://api.github.com/users/Bardeux/following{/other_user}", "gists_url": "https://api.github.com/users/Bardeux/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bardeux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bardeux/subscriptions", "organizations_url": "https://api.github.com/users/Bardeux/orgs", "repos_url": "https://api.github.com/users/Bardeux/repos", "events_url": "https://api.github.com/users/Bardeux/events{/privacy}", "received_events_url": "https://api.github.com/users/Bardeux/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-06-12T15:04:18Z", "updated_at": "2017-06-16T16:24:13Z", "closed_at": "2017-06-16T07:37:44Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Custom code</strong>:<br>\nYes</li>\n<li><strong>OS Platform and Distribution</strong>:<br>\nLinux Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from</strong>:<br>\nbinary</li>\n<li><strong>TensorFlow version (use command below)</strong>:<br>\nv1.1.0-rc0-61-g1ec6ed5</li>\n<li><strong>CUDA/cuDNN version</strong>:<br>\nCUDA 8 and cuDNN 5.1</li>\n<li><strong>GPU model and memory</strong>:<br>\nGTX Titan X (Maxwell) with 12GB of RAM</li>\n</ul>\n<p>Hello,</p>\n<p>I am currently working on sequential data with variable length and would like to build a dynamic graph with respect to the \"time\" of the sequence. Because tf.train.shuffle_batch does not handle dynamic padding, the only official solution is to work with tf.train.batch. To assert the problem, I am preprocessing the data before batching to get sequences with constant length in order to be able to use shuffle_batch and tf.train.batch to compare them. So, <strong>the only difference</strong> between the two compared pipelines is the swap between tf.train.batch and tf.train.shuffle_batch. Problem : the results drop significantly at test time using tf.train.batch instead of tf.train.shuffle_batch.</p>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/13334577/27040041-1c421dfc-4f90-11e7-8fea-ded0f5edc1a3.png\"><img src=\"https://user-images.githubusercontent.com/13334577/27040041-1c421dfc-4f90-11e7-8fea-ded0f5edc1a3.png\" alt=\"tboard\" style=\"max-width:100%;\"></a></p>\n<p>My database is self made and I believe properly shuffled initially : the database is cross subject and all occurrences of a user are shuffled using Python's random.shuffle (the size of the lists is small enough for the pseudo random to be relevant), then added to the TFRecords.</p>\n<p>Queue randomization doesn't seem to be the problem either : using standy66's workaround showed in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"184680035\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/5147\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/5147/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/5147\">#5147</a> doesn't change the outcome of the tf.train.batch pipeline.</p>\n<p>Should we expect different behaviors from these two functions (except for the random queue shuffling) or is this behavior abnormal?</p>\n<p>Thanks,<br>\nQuentin</p>", "body_text": "System information\n\nCustom code:\nYes\nOS Platform and Distribution:\nLinux Ubuntu 16.04\nTensorFlow installed from:\nbinary\nTensorFlow version (use command below):\nv1.1.0-rc0-61-g1ec6ed5\nCUDA/cuDNN version:\nCUDA 8 and cuDNN 5.1\nGPU model and memory:\nGTX Titan X (Maxwell) with 12GB of RAM\n\nHello,\nI am currently working on sequential data with variable length and would like to build a dynamic graph with respect to the \"time\" of the sequence. Because tf.train.shuffle_batch does not handle dynamic padding, the only official solution is to work with tf.train.batch. To assert the problem, I am preprocessing the data before batching to get sequences with constant length in order to be able to use shuffle_batch and tf.train.batch to compare them. So, the only difference between the two compared pipelines is the swap between tf.train.batch and tf.train.shuffle_batch. Problem : the results drop significantly at test time using tf.train.batch instead of tf.train.shuffle_batch.\n\nMy database is self made and I believe properly shuffled initially : the database is cross subject and all occurrences of a user are shuffled using Python's random.shuffle (the size of the lists is small enough for the pseudo random to be relevant), then added to the TFRecords.\nQueue randomization doesn't seem to be the problem either : using standy66's workaround showed in #5147 doesn't change the outcome of the tf.train.batch pipeline.\nShould we expect different behaviors from these two functions (except for the random queue shuffling) or is this behavior abnormal?\nThanks,\nQuentin", "body": "### System information\r\n- **Custom code**:\r\nYes\r\n- **OS Platform and Distribution**:\r\nLinux Ubuntu 16.04\r\n- **TensorFlow installed from**:\r\nbinary\r\n- **TensorFlow version (use command below)**:\r\nv1.1.0-rc0-61-g1ec6ed5\r\n- **CUDA/cuDNN version**:\r\nCUDA 8 and cuDNN 5.1\r\n- **GPU model and memory**:\r\nGTX Titan X (Maxwell) with 12GB of RAM\r\n\r\nHello,\r\n\r\nI am currently working on sequential data with variable length and would like to build a dynamic graph with respect to the \"time\" of the sequence. Because tf.train.shuffle_batch does not handle dynamic padding, the only official solution is to work with tf.train.batch. To assert the problem, I am preprocessing the data before batching to get sequences with constant length in order to be able to use shuffle_batch and tf.train.batch to compare them. So, **the only difference** between the two compared pipelines is the swap between tf.train.batch and tf.train.shuffle_batch. Problem : the results drop significantly at test time using tf.train.batch instead of tf.train.shuffle_batch.\r\n\r\n![tboard](https://user-images.githubusercontent.com/13334577/27040041-1c421dfc-4f90-11e7-8fea-ded0f5edc1a3.png)\r\n\r\nMy database is self made and I believe properly shuffled initially : the database is cross subject and all occurrences of a user are shuffled using Python's random.shuffle (the size of the lists is small enough for the pseudo random to be relevant), then added to the TFRecords. \r\n\r\nQueue randomization doesn't seem to be the problem either : using standy66's workaround showed in #5147 doesn't change the outcome of the tf.train.batch pipeline. \r\n\r\nShould we expect different behaviors from these two functions (except for the random queue shuffling) or is this behavior abnormal?\r\n\r\nThanks,\r\nQuentin"}