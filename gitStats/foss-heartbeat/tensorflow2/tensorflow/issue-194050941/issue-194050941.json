{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6158", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6158/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6158/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6158/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/6158", "id": 194050941, "node_id": "MDU6SXNzdWUxOTQwNTA5NDE=", "number": 6158, "title": "installation issues on Ubuntu 16.04 GPU version", "user": {"login": "CooDL", "id": 22828349, "node_id": "MDQ6VXNlcjIyODI4MzQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/22828349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CooDL", "html_url": "https://github.com/CooDL", "followers_url": "https://api.github.com/users/CooDL/followers", "following_url": "https://api.github.com/users/CooDL/following{/other_user}", "gists_url": "https://api.github.com/users/CooDL/gists{/gist_id}", "starred_url": "https://api.github.com/users/CooDL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CooDL/subscriptions", "organizations_url": "https://api.github.com/users/CooDL/orgs", "repos_url": "https://api.github.com/users/CooDL/repos", "events_url": "https://api.github.com/users/CooDL/events{/privacy}", "received_events_url": "https://api.github.com/users/CooDL/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "yifeif", "id": 1192265, "node_id": "MDQ6VXNlcjExOTIyNjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1192265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yifeif", "html_url": "https://github.com/yifeif", "followers_url": "https://api.github.com/users/yifeif/followers", "following_url": "https://api.github.com/users/yifeif/following{/other_user}", "gists_url": "https://api.github.com/users/yifeif/gists{/gist_id}", "starred_url": "https://api.github.com/users/yifeif/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yifeif/subscriptions", "organizations_url": "https://api.github.com/users/yifeif/orgs", "repos_url": "https://api.github.com/users/yifeif/repos", "events_url": "https://api.github.com/users/yifeif/events{/privacy}", "received_events_url": "https://api.github.com/users/yifeif/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "yifeif", "id": 1192265, "node_id": "MDQ6VXNlcjExOTIyNjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1192265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yifeif", "html_url": "https://github.com/yifeif", "followers_url": "https://api.github.com/users/yifeif/followers", "following_url": "https://api.github.com/users/yifeif/following{/other_user}", "gists_url": "https://api.github.com/users/yifeif/gists{/gist_id}", "starred_url": "https://api.github.com/users/yifeif/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yifeif/subscriptions", "organizations_url": "https://api.github.com/users/yifeif/orgs", "repos_url": "https://api.github.com/users/yifeif/repos", "events_url": "https://api.github.com/users/yifeif/events{/privacy}", "received_events_url": "https://api.github.com/users/yifeif/received_events", "type": "User", "site_admin": false}, {"login": "benoitsteiner", "id": 6969686, "node_id": "MDQ6VXNlcjY5Njk2ODY=", "avatar_url": "https://avatars0.githubusercontent.com/u/6969686?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benoitsteiner", "html_url": "https://github.com/benoitsteiner", "followers_url": "https://api.github.com/users/benoitsteiner/followers", "following_url": "https://api.github.com/users/benoitsteiner/following{/other_user}", "gists_url": "https://api.github.com/users/benoitsteiner/gists{/gist_id}", "starred_url": "https://api.github.com/users/benoitsteiner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benoitsteiner/subscriptions", "organizations_url": "https://api.github.com/users/benoitsteiner/orgs", "repos_url": "https://api.github.com/users/benoitsteiner/repos", "events_url": "https://api.github.com/users/benoitsteiner/events{/privacy}", "received_events_url": "https://api.github.com/users/benoitsteiner/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2016-12-07T13:35:27Z", "updated_at": "2016-12-08T08:43:25Z", "closed_at": "2016-12-08T08:43:25Z", "author_association": "NONE", "body_html": "<p>Dear developers:<br>\nI encountered one error with fine setting configuration<br>\nAll the settings is right, and it said that</p>\n<pre><code>                                       all external dependencies fetch successful \n                                       configuration finished \n</code></pre>\n<p>all the thing right until I generate the pip_package</p>\n<p>(bazel build -c opt --config=cuda //tensorflow/tools/pip_package:build_pip_package),</p>\n<p>process like below:</p>\n<p>`yuze@nlp:~/tensorflow$ ./configure<br>\n~/tensorflow ~/tensorflow<br>\nPlease specify the location of python. [Default is /usr/bin/python]:<br>\nDo you wish to build TensorFlow with Google Cloud Platform support? [y/N] n<br>\nNo Google Cloud Platform support will be enabled for TensorFlow<br>\nDo you wish to build TensorFlow with Hadoop File System support? [y/N] n<br>\nNo Hadoop File System support will be enabled for TensorFlow<br>\nFound possible Python library paths:<br>\n/usr/local/lib/python2.7/dist-packages<br>\n/usr/lib/python2.7/dist-packages<br>\nPlease input the desired Python library path to use.  Default is [/usr/local/lib/python2.7/dist-packages]</p>\n<p>Using python library path: /usr/local/lib/python2.7/dist-packages<br>\nDo you wish to build TensorFlow with OpenCL support? [y/N] y<br>\nOpenCL support will be enabled for TensorFlow<br>\nDo you wish to build TensorFlow with CUDA support? [y/N] y<br>\nCUDA support will be enabled for TensorFlow<br>\nPlease specify which gcc should be used by nvcc as the host compiler. [Default is /usr/bin/gcc]:<br>\nPlease specify the CUDA SDK version you want to use, e.g. 7.0. [Leave empty to use system default]: 8.0<br>\nPlease specify the location where CUDA 8.0 toolkit is installed. Refer to README.md for more details. [Default is /usr/local/cuda]:<br>\nPlease specify the Cudnn version you want to use. [Leave empty to use system default]:<br>\nPlease specify the location where cuDNN  library is installed. Refer to README.md for more details. [Default is /usr/local/cuda]:<br>\nPlease specify a list of comma-separated Cuda compute capabilities you want to build with.<br>\nYou can find the compute capability of your device at: <a href=\"https://developer.nvidia.com/cuda-gpus\" rel=\"nofollow\">https://developer.nvidia.com/cuda-gpus</a>.<br>\nPlease note that each additional compute capability significantly increases your build time and binary size.<br>\n[Default is: \"3.5,5.2\"]:<br>\nPlease specify which C++ compiler should be used as the host C++ compiler. [Default is /usr/bin/g++]:<br>\nPlease specify which C compiler should be used as the host C compiler. [Default is /usr/bin/gcc]:<br>\nPlease specify the location where ComputeCpp 1.2 is installed. Refer to README.md for more details. [Default is /usr/local/computecpp]:<br>\nINFO: Starting clean (this may take a while). Consider using --expunge_async if the clean takes more than several minutes.<br>\n......<br>\nINFO: All external dependencies fetched successfully.<br>\nConfiguration finished</p>\n<p>yuze@nlp:~/tensorflow$ bazel build -c opt --config=cuda //tensorflow/tools/pip_package:build_pip_package<br>\nINFO: Found 1 target...<br>\nERROR: missing input file '@local_config_sycl//sycl:LICENSE.text'.<br>\nERROR: /home/yuze/.cache/bazel/_bazel_yuze/540cd99ea4fee1092020a833f635df2b/external/farmhash_archive/BUILD:13:1: C++ compilation of rule '@farmhash_archive//:farmhash' failed: crosstool_wrapper_driver_is_not_gcc failed: error executing command external/local_config_cuda/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc -U_FORTIFY_SOURCE '-D_FORTIFY_SOURCE=1' -fstack-protector -fPIE -Wall -Wunused-but-set-parameter ... (remaining 37 argument(s) skipped): com.google.devtools.build.lib.shell.AbnormalTerminationException: Process terminated by signal 15.<br>\nERROR: /home/yuze/tensorflow/tensorflow/tools/pip_package/BUILD:105:1: //tensorflow/tools/pip_package:build_pip_package: missing input file '@local_config_sycl//sycl:LICENSE.text'.<br>\nTarget //tensorflow/tools/pip_package:build_pip_package failed to build<br>\nUse --verbose_failures to see the command lines of failed build steps.<br>\nERROR: /home/yuze/tensorflow/tensorflow/tools/pip_package/BUILD:105:1 1 input file(s) do not exist.<br>\nINFO: Elapsed time: 3.485s, Critical Path: 1.17s<br>\n`<br>\ncan you kindly tell me where is wrong?</p>\n<p>Thank you!</p>", "body_text": "Dear developers:\nI encountered one error with fine setting configuration\nAll the settings is right, and it said that\n                                       all external dependencies fetch successful \n                                       configuration finished \n\nall the thing right until I generate the pip_package\n(bazel build -c opt --config=cuda //tensorflow/tools/pip_package:build_pip_package),\nprocess like below:\n`yuze@nlp:~/tensorflow$ ./configure\n~/tensorflow ~/tensorflow\nPlease specify the location of python. [Default is /usr/bin/python]:\nDo you wish to build TensorFlow with Google Cloud Platform support? [y/N] n\nNo Google Cloud Platform support will be enabled for TensorFlow\nDo you wish to build TensorFlow with Hadoop File System support? [y/N] n\nNo Hadoop File System support will be enabled for TensorFlow\nFound possible Python library paths:\n/usr/local/lib/python2.7/dist-packages\n/usr/lib/python2.7/dist-packages\nPlease input the desired Python library path to use.  Default is [/usr/local/lib/python2.7/dist-packages]\nUsing python library path: /usr/local/lib/python2.7/dist-packages\nDo you wish to build TensorFlow with OpenCL support? [y/N] y\nOpenCL support will be enabled for TensorFlow\nDo you wish to build TensorFlow with CUDA support? [y/N] y\nCUDA support will be enabled for TensorFlow\nPlease specify which gcc should be used by nvcc as the host compiler. [Default is /usr/bin/gcc]:\nPlease specify the CUDA SDK version you want to use, e.g. 7.0. [Leave empty to use system default]: 8.0\nPlease specify the location where CUDA 8.0 toolkit is installed. Refer to README.md for more details. [Default is /usr/local/cuda]:\nPlease specify the Cudnn version you want to use. [Leave empty to use system default]:\nPlease specify the location where cuDNN  library is installed. Refer to README.md for more details. [Default is /usr/local/cuda]:\nPlease specify a list of comma-separated Cuda compute capabilities you want to build with.\nYou can find the compute capability of your device at: https://developer.nvidia.com/cuda-gpus.\nPlease note that each additional compute capability significantly increases your build time and binary size.\n[Default is: \"3.5,5.2\"]:\nPlease specify which C++ compiler should be used as the host C++ compiler. [Default is /usr/bin/g++]:\nPlease specify which C compiler should be used as the host C compiler. [Default is /usr/bin/gcc]:\nPlease specify the location where ComputeCpp 1.2 is installed. Refer to README.md for more details. [Default is /usr/local/computecpp]:\nINFO: Starting clean (this may take a while). Consider using --expunge_async if the clean takes more than several minutes.\n......\nINFO: All external dependencies fetched successfully.\nConfiguration finished\nyuze@nlp:~/tensorflow$ bazel build -c opt --config=cuda //tensorflow/tools/pip_package:build_pip_package\nINFO: Found 1 target...\nERROR: missing input file '@local_config_sycl//sycl:LICENSE.text'.\nERROR: /home/yuze/.cache/bazel/_bazel_yuze/540cd99ea4fee1092020a833f635df2b/external/farmhash_archive/BUILD:13:1: C++ compilation of rule '@farmhash_archive//:farmhash' failed: crosstool_wrapper_driver_is_not_gcc failed: error executing command external/local_config_cuda/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc -U_FORTIFY_SOURCE '-D_FORTIFY_SOURCE=1' -fstack-protector -fPIE -Wall -Wunused-but-set-parameter ... (remaining 37 argument(s) skipped): com.google.devtools.build.lib.shell.AbnormalTerminationException: Process terminated by signal 15.\nERROR: /home/yuze/tensorflow/tensorflow/tools/pip_package/BUILD:105:1: //tensorflow/tools/pip_package:build_pip_package: missing input file '@local_config_sycl//sycl:LICENSE.text'.\nTarget //tensorflow/tools/pip_package:build_pip_package failed to build\nUse --verbose_failures to see the command lines of failed build steps.\nERROR: /home/yuze/tensorflow/tensorflow/tools/pip_package/BUILD:105:1 1 input file(s) do not exist.\nINFO: Elapsed time: 3.485s, Critical Path: 1.17s\n`\ncan you kindly tell me where is wrong?\nThank you!", "body": "Dear developers:\r\nI encountered one error with fine setting configuration\r\nAll the settings is right, and it said that \r\n\r\n                                           all external dependencies fetch successful \r\n                                           configuration finished \r\n\r\nall the thing right until I generate the pip_package\r\n\r\n(bazel build -c opt --config=cuda //tensorflow/tools/pip_package:build_pip_package), \r\n\r\nprocess like below:\r\n\r\n`yuze@nlp:~/tensorflow$ ./configure \r\n~/tensorflow ~/tensorflow\r\nPlease specify the location of python. [Default is /usr/bin/python]: \r\nDo you wish to build TensorFlow with Google Cloud Platform support? [y/N] n\r\nNo Google Cloud Platform support will be enabled for TensorFlow\r\nDo you wish to build TensorFlow with Hadoop File System support? [y/N] n\r\nNo Hadoop File System support will be enabled for TensorFlow\r\nFound possible Python library paths:\r\n  /usr/local/lib/python2.7/dist-packages\r\n  /usr/lib/python2.7/dist-packages\r\nPlease input the desired Python library path to use.  Default is [/usr/local/lib/python2.7/dist-packages]\r\n\r\nUsing python library path: /usr/local/lib/python2.7/dist-packages\r\nDo you wish to build TensorFlow with OpenCL support? [y/N] y\r\nOpenCL support will be enabled for TensorFlow\r\nDo you wish to build TensorFlow with CUDA support? [y/N] y\r\nCUDA support will be enabled for TensorFlow\r\nPlease specify which gcc should be used by nvcc as the host compiler. [Default is /usr/bin/gcc]: \r\nPlease specify the CUDA SDK version you want to use, e.g. 7.0. [Leave empty to use system default]: 8.0\r\nPlease specify the location where CUDA 8.0 toolkit is installed. Refer to README.md for more details. [Default is /usr/local/cuda]: \r\nPlease specify the Cudnn version you want to use. [Leave empty to use system default]: \r\nPlease specify the location where cuDNN  library is installed. Refer to README.md for more details. [Default is /usr/local/cuda]: \r\nPlease specify a list of comma-separated Cuda compute capabilities you want to build with.\r\nYou can find the compute capability of your device at: https://developer.nvidia.com/cuda-gpus.\r\nPlease note that each additional compute capability significantly increases your build time and binary size.\r\n[Default is: \"3.5,5.2\"]: \r\nPlease specify which C++ compiler should be used as the host C++ compiler. [Default is /usr/bin/g++]: \r\nPlease specify which C compiler should be used as the host C compiler. [Default is /usr/bin/gcc]: \r\nPlease specify the location where ComputeCpp 1.2 is installed. Refer to README.md for more details. [Default is /usr/local/computecpp]: \r\nINFO: Starting clean (this may take a while). Consider using --expunge_async if the clean takes more than several minutes.\r\n......\r\nINFO: All external dependencies fetched successfully.\r\nConfiguration finished\r\n\r\n\r\nyuze@nlp:~/tensorflow$ bazel build -c opt --config=cuda //tensorflow/tools/pip_package:build_pip_package\r\nINFO: Found 1 target...\r\nERROR: missing input file '@local_config_sycl//sycl:LICENSE.text'.\r\nERROR: /home/yuze/.cache/bazel/_bazel_yuze/540cd99ea4fee1092020a833f635df2b/external/farmhash_archive/BUILD:13:1: C++ compilation of rule '@farmhash_archive//:farmhash' failed: crosstool_wrapper_driver_is_not_gcc failed: error executing command external/local_config_cuda/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc -U_FORTIFY_SOURCE '-D_FORTIFY_SOURCE=1' -fstack-protector -fPIE -Wall -Wunused-but-set-parameter ... (remaining 37 argument(s) skipped): com.google.devtools.build.lib.shell.AbnormalTerminationException: Process terminated by signal 15.\r\nERROR: /home/yuze/tensorflow/tensorflow/tools/pip_package/BUILD:105:1: //tensorflow/tools/pip_package:build_pip_package: missing input file '@local_config_sycl//sycl:LICENSE.text'.\r\nTarget //tensorflow/tools/pip_package:build_pip_package failed to build\r\nUse --verbose_failures to see the command lines of failed build steps.\r\nERROR: /home/yuze/tensorflow/tensorflow/tools/pip_package/BUILD:105:1 1 input file(s) do not exist.\r\nINFO: Elapsed time: 3.485s, Critical Path: 1.17s\r\n`\r\ncan you kindly tell me where is wrong?\r\n\r\nThank you!"}