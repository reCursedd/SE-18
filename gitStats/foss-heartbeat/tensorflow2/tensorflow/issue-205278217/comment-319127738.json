{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/319127738", "html_url": "https://github.com/tensorflow/tensorflow/issues/7251#issuecomment-319127738", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7251", "id": 319127738, "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTEyNzczOA==", "user": {"login": "Mazecreator", "id": 18412448, "node_id": "MDQ6VXNlcjE4NDEyNDQ4", "avatar_url": "https://avatars2.githubusercontent.com/u/18412448?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mazecreator", "html_url": "https://github.com/Mazecreator", "followers_url": "https://api.github.com/users/Mazecreator/followers", "following_url": "https://api.github.com/users/Mazecreator/following{/other_user}", "gists_url": "https://api.github.com/users/Mazecreator/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mazecreator/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mazecreator/subscriptions", "organizations_url": "https://api.github.com/users/Mazecreator/orgs", "repos_url": "https://api.github.com/users/Mazecreator/repos", "events_url": "https://api.github.com/users/Mazecreator/events{/privacy}", "received_events_url": "https://api.github.com/users/Mazecreator/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-31T16:42:11Z", "updated_at": "2017-07-31T16:42:11Z", "author_association": "CONTRIBUTOR", "body_html": "<div class=\"email-fragment\">This message was created automatically by mail delivery software.\n\nA message that you sent could not be delivered to one or more of its\nrecipients. This is a temporary error. The following address(es) deferred:\n\n  mazecreator@gmail.com\n    Domain mazecreator.com has exceeded the max emails per hour (27/25 (108%)) allowed.  Message will be reattempted later</div>\n<span class=\"email-hidden-toggle\"><a href=\"#\">\u2026</a></span><div class=\"email-hidden-reply\">\n<div class=\"email-signature-reply\">------- This is a copy of the message, including all the headers. ------\nReceived: from o8.sgmail.github.com ([167.89.101.199]:55459)\n\tby server2.lowesthostingrates.com with esmtps (TLSv1.2:ECDHE-RSA-AES128-GCM-SHA256:128)\n\t(Exim 4.89)\n\t(envelope-from &lt;bounces+848413-e6d9-mazecreator=mazecreator.com@sgmail.github.com&gt;)\n\tid 1dcDaF-0004jv-BH\n\tfor mazecreator@mazecreator.com; Mon, 31 Jul 2017 11:30:49 -0500\nDKIM-Signature: v=1; a=rsa-sha1; c=relaxed/relaxed; d=github.com;\n\th=from:reply-to:to:cc:in-reply-to:references:subject:mime-version:content-type:content-transfer-encoding:list-id:list-archive:list-post:list-unsubscribe;\n\ts=s20150108; bh=nx71yJs08keP5T07fL7PA0zJ5Sk=; b=EWCBHGn0d7W2HWBf\n\tc31a0Zv8qb4xspIsMQJJX0Ygav/e8OSs9mBlJQAdUPOCa/rPEPAH6hiteaC02key\n\t8srV34R1lhfmYLYRRNp0hw+i4H/9RQbV4+LfgnBUmnbc5lXkz3tM1w+80TLv7UJ2\n\tY7keWQbgc/4OwbfMjTCXQ7cPO1E=\nReceived: by filter1090p1mdw1.sendgrid.net with SMTP id filter1090p1mdw1-31658-597F5D93-1E\n        2017-07-31 16:40:51.938204643 +0000 UTC\nReceived: from github-smtp2b-ext-cp1-prd.iad.github.net (github-smtp2b-ext-cp1-prd.iad.github.net [192.30.253.17])\n\tby ismtpd0003p1iad1.sendgrid.net (SG) with ESMTP id ej7d3jnRSfiR-na-eSX06A\n\tfor &lt;mazecreator@mazecreator.com&gt;; Mon, 31 Jul 2017 16:40:51.885 +0000 (UTC)\nDate: Mon, 31 Jul 2017 16:40:52 +0000 (UTC)\nFrom: Geoffrey Irving &lt;notifications@github.com&gt;\nReply-To: tensorflow/tensorflow &lt;reply@reply.github.com&gt;\nTo: tensorflow/tensorflow &lt;tensorflow@noreply.github.com&gt;\nCc: Subscribed &lt;subscribed@noreply.github.com&gt;\nMessage-ID: &lt;tensorflow/tensorflow/issues/7251/319126665@github.com&gt;\nIn-Reply-To: &lt;tensorflow/tensorflow/issues/7251@github.com&gt;\nReferences: &lt;tensorflow/tensorflow/issues/7251@github.com&gt;\nSubject: Re: [tensorflow/tensorflow] Native GPU version of `tf.dynamic_stitch`\n (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"205278217\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/7251\" href=\"https://github.com/tensorflow/tensorflow/issues/7251\">#7251</a>)\nMime-Version: 1.0\nContent-Type: multipart/alternative;\n boundary=\"--==_mimepart_597f5d93c36ab_27253f8d0fb59c2c364450\";\n charset=UTF-8\nContent-Transfer-Encoding: 7bit\nPrecedence: list\nX-GitHub-Sender: girving\nX-GitHub-Recipient: Mazecreator\nX-GitHub-Reason: subscribed\nList-ID: tensorflow/tensorflow &lt;tensorflow.tensorflow.github.com&gt;\nList-Archive: <a href=\"https://github.com/tensorflow/tensorflow\">https://github.com/tensorflow/tensorflow</a>\nList-Post: &lt;mailto:reply@reply.github.com&gt;\nList-Unsubscribe: &lt;mailto:unsub+0118f3a0d0f555d24b289287f58f3650cf2dacfcbcd77ae092cf0000000115971f9392a169ce0c3c4c09@reply.github.com&gt;,\n &lt;<a href=\"https://github.com/notifications/unsubscribe/ARjzoKPYlSfOTycEiwL0VaTM6KRaRBL3ks5sTgOTgaJpZM4L22Cc\">https://github.com/notifications/unsubscribe/ARjzoKPYlSfOTycEiwL0VaTM6KRaRBL3ks5sTgOTgaJpZM4L22Cc</a>&gt;\nX-Auto-Response-Suppress: All\nX-GitHub-Recipient-Address: mazecreator@mazecreator.com\nX-SG-EID: BJ4qYjf5a3yL0lCrdDNghY4YYR+k1a+cluU6wEX1JqwOXPbdUKmyhRm47T5qUt/NDnaAPnCAqApKQk\n lCFCUusMnkTUaO8V2Q2akzYhYU3BvTU1jLWgrazEAbStj3XO0vJXp/8+jGYXijr+BWlBHzd+UyBCiP\n zw3fqzev/O/UT1HosblJk+khV8Hefjzlr9ICE2zHXawfEsWdbU7/HtDnXGtYb5IesMVrm3r7l5DrPf\n 0bj3EinW8zXeKfPOrZuynx\nX-Spam-Status: No, score=\nX-Spam-Score:\nX-Spam-Bar:\nX-Ham-Report:\nX-Spam-Flag: NO</div>\n<div class=\"email-signature-reply\">----==_mimepart_597f5d93c36ab_27253f8d0fb59c2c364450\nContent-Type: text/plain;\n charset=UTF-8\nContent-Transfer-Encoding: 7bit\n\n<a class=\"user-mention\" href=\"https://github.com/nolanliou\">@nolanliou</a> It would be better to do it all in one pass, both to avoid the separate collision checking phase and to avoid CPU work in the collision case.  One option is to have a separate buffer storing the source index of an output index.  Atomically writing an entry in the separate buffer at the same time as the main buffer can avoid collisions.  Not sure if the separate buffer can be avoided.</div>\n<div class=\"email-signature-reply\">-- \nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub:\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"205278217\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/7251\" href=\"https://github.com/tensorflow/tensorflow/issues/7251#issuecomment-319126665\">#7251 (comment)</a>\n----==_mimepart_597f5d93c36ab_27253f8d0fb59c2c364450\nContent-Type: text/html;\n charset=UTF-8\nContent-Transfer-Encoding: quoted-printable\n\n&lt;p&gt;&lt;a href=3D\"<a href=\"https://github.com/nolanliou\">https://github.com/nolanliou</a>\" class=3D\"user-mention\"&gt;<a class=\"user-mention\" href=\"https://github.com/nolanli\">@nolanli</a>=\nou&lt;/a&gt; It would be better to do it all in one pass, both to avoid the separ=\nate collision checking phase and to avoid CPU work in the collision case.  =\nOne option is to have a separate buffer storing the source index of an outp=\nut index.  Atomically writing an entry in the separate buffer at the same t=\nime as the main buffer can avoid collisions.  Not sure if the separate buff=\ner can be avoided.&lt;/p&gt;\n\n&lt;p style=3D\"font-size:small;-webkit-text-size-adjust:none;color:<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"124581563\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/666\" href=\"https://github.com/tensorflow/tensorflow/issues/666\">#666</a>;\"&gt;&amp;mda=\nsh;&lt;br /&gt;You are receiving this because you are subscribed to this thread.&lt;=\nbr /&gt;Reply to this email directly, &lt;a href=3D\"<a href=\"https://github.com/tensorflow=\">https://github.com/tensorflow=</a>\n/tensorflow/issues/7251#issuecomment-319126665\"&gt;view it on GitHub&lt;/a&gt;, or &lt;=\na href=3D\"<a href=\"https://github.com/notifications/unsubscribe-auth/ARjzoNomEooi4MK=\">https://github.com/notifications/unsubscribe-auth/ARjzoNomEooi4MK=</a>\nxyeFsDrNYCfW_PA2lks5sTgOTgaJpZM4L22Cc\"&gt;mute the thread&lt;/a&gt;.&lt;img alt=3D\"\" he=\night=3D\"1\" src=3D\"<a href=\"https://github.com/notifications/beacon/ARjzoKE5D3UUNMrXu=\">https://github.com/notifications/beacon/ARjzoKE5D3UUNMrXu=</a>\nCWAVKwcef6jh5fXks5sTgOTgaJpZM4L22Cc.gif\" width=3D\"1\" /&gt;&lt;/p&gt;\n&lt;div itemscope itemtype=3D\"<a href=\"http://schema.org/EmailMessage\">http://schema.org/EmailMessage</a>\"&gt;\n&lt;div itemprop=3D\"action\" itemscope itemtype=3D\"<a href=\"http://schema.org/ViewAction=\">http://schema.org/ViewAction=</a>\n\"&gt;\n  &lt;link itemprop=3D\"url\" href=3D\"<a href=\"https://github.com/tensorflow/tensorflow/i=\">https://github.com/tensorflow/tensorflow/i=</a>\nssues/7251#issuecomment-319126665\"&gt;&lt;/link&gt;\n  &lt;meta itemprop=3D\"name\" content=3D\"View Issue\"&gt;&lt;/meta&gt;\n&lt;/div&gt;\n&lt;meta itemprop=3D\"description\" content=3D\"View this Issue on GitHub\"&gt;&lt;/meta&gt;\n&lt;/div&gt;\n\n&lt;script type=3D\"application/json\" data-scope=3D\"inboxmarkup\"&gt;{\"api_version\"=\n:\"1.0\",\"publisher\":{\"api_key\":\"05dde50f1d1a384dd78767c55493e4bb\",\"name\":\"Gi=\ntHub\"},\"entity\":{\"external_key\":\"github/tensorflow/tensorflow\",\"title\":\"ten=\nsorflow/tensorflow\",\"subtitle\":\"GitHub repository\",\"main_image_url\":\"https:=\n//cloud.githubusercontent.com/assets/143418/17495839/a5054eac-5d88-11e6-95f=\nc-7290892c7bb5.png\",\"avatar_image_url\":\"<a href=\"https://cloud.githubusercontent.com=\">https://cloud.githubusercontent.com=</a>\n/assets/143418/15842166/7c72db34-2c0b-11e6-9aed-b52498112777.png\",\"action\":=\n{\"name\":\"Open in GitHub\",\"url\":\"<a href=\"https://github.com/tensorflow/tensorflow%22%7D%7D=\">https://github.com/tensorflow/tensorflow\"}}=</a>\n,\"updates\":{\"snippets\":[{\"icon\":\"PERSON\",\"message\":\"<a class=\"user-mention\" href=\"https://github.com/girving\">@girving</a> in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"205278217\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/7251\" href=\"https://github.com/tensorflow/tensorflow/issues/7251\">#7251</a>: <a class=\"user-mention\" href=\"https://github.com/nol\">@nol</a>=\nanliou It would be better to do it all in one pass, both to avoid the separ=\nate collision checking phase and to avoid CPU work in the collision case.  =\nOne option is to have a separate buffer storing the source index of an outp=\nut index.  Atomically writing an entry in the separate buffer at the same t=\nime as the main buffer can avoid collisions.  Not sure if the separate buff=\ner can be avoided.\"}],\"action\":{\"name\":\"View Issue\",\"url\":\"<a href=\"https://github.c=\">https://github.c=</a>\nom/tensorflow/tensorflow/issues/7251#issuecomment-319126665\"}}}&lt;/script&gt;=</div>\n<div class=\"email-signature-reply\">----==_mimepart_597f5d93c36ab_27253f8d0fb59c2c364450--</div>\n</div>", "body_text": "This message was created automatically by mail delivery software.\n\nA message that you sent could not be delivered to one or more of its\nrecipients. This is a temporary error. The following address(es) deferred:\n\n  mazecreator@gmail.com\n    Domain mazecreator.com has exceeded the max emails per hour (27/25 (108%)) allowed.  Message will be reattempted later\n\u2026\n------- This is a copy of the message, including all the headers. ------\nReceived: from o8.sgmail.github.com ([167.89.101.199]:55459)\n\tby server2.lowesthostingrates.com with esmtps (TLSv1.2:ECDHE-RSA-AES128-GCM-SHA256:128)\n\t(Exim 4.89)\n\t(envelope-from <bounces+848413-e6d9-mazecreator=mazecreator.com@sgmail.github.com>)\n\tid 1dcDaF-0004jv-BH\n\tfor mazecreator@mazecreator.com; Mon, 31 Jul 2017 11:30:49 -0500\nDKIM-Signature: v=1; a=rsa-sha1; c=relaxed/relaxed; d=github.com;\n\th=from:reply-to:to:cc:in-reply-to:references:subject:mime-version:content-type:content-transfer-encoding:list-id:list-archive:list-post:list-unsubscribe;\n\ts=s20150108; bh=nx71yJs08keP5T07fL7PA0zJ5Sk=; b=EWCBHGn0d7W2HWBf\n\tc31a0Zv8qb4xspIsMQJJX0Ygav/e8OSs9mBlJQAdUPOCa/rPEPAH6hiteaC02key\n\t8srV34R1lhfmYLYRRNp0hw+i4H/9RQbV4+LfgnBUmnbc5lXkz3tM1w+80TLv7UJ2\n\tY7keWQbgc/4OwbfMjTCXQ7cPO1E=\nReceived: by filter1090p1mdw1.sendgrid.net with SMTP id filter1090p1mdw1-31658-597F5D93-1E\n        2017-07-31 16:40:51.938204643 +0000 UTC\nReceived: from github-smtp2b-ext-cp1-prd.iad.github.net (github-smtp2b-ext-cp1-prd.iad.github.net [192.30.253.17])\n\tby ismtpd0003p1iad1.sendgrid.net (SG) with ESMTP id ej7d3jnRSfiR-na-eSX06A\n\tfor <mazecreator@mazecreator.com>; Mon, 31 Jul 2017 16:40:51.885 +0000 (UTC)\nDate: Mon, 31 Jul 2017 16:40:52 +0000 (UTC)\nFrom: Geoffrey Irving <notifications@github.com>\nReply-To: tensorflow/tensorflow <reply@reply.github.com>\nTo: tensorflow/tensorflow <tensorflow@noreply.github.com>\nCc: Subscribed <subscribed@noreply.github.com>\nMessage-ID: <tensorflow/tensorflow/issues/7251/319126665@github.com>\nIn-Reply-To: <tensorflow/tensorflow/issues/7251@github.com>\nReferences: <tensorflow/tensorflow/issues/7251@github.com>\nSubject: Re: [tensorflow/tensorflow] Native GPU version of `tf.dynamic_stitch`\n (#7251)\nMime-Version: 1.0\nContent-Type: multipart/alternative;\n boundary=\"--==_mimepart_597f5d93c36ab_27253f8d0fb59c2c364450\";\n charset=UTF-8\nContent-Transfer-Encoding: 7bit\nPrecedence: list\nX-GitHub-Sender: girving\nX-GitHub-Recipient: Mazecreator\nX-GitHub-Reason: subscribed\nList-ID: tensorflow/tensorflow <tensorflow.tensorflow.github.com>\nList-Archive: https://github.com/tensorflow/tensorflow\nList-Post: <mailto:reply@reply.github.com>\nList-Unsubscribe: <mailto:unsub+0118f3a0d0f555d24b289287f58f3650cf2dacfcbcd77ae092cf0000000115971f9392a169ce0c3c4c09@reply.github.com>,\n <https://github.com/notifications/unsubscribe/ARjzoKPYlSfOTycEiwL0VaTM6KRaRBL3ks5sTgOTgaJpZM4L22Cc>\nX-Auto-Response-Suppress: All\nX-GitHub-Recipient-Address: mazecreator@mazecreator.com\nX-SG-EID: BJ4qYjf5a3yL0lCrdDNghY4YYR+k1a+cluU6wEX1JqwOXPbdUKmyhRm47T5qUt/NDnaAPnCAqApKQk\n lCFCUusMnkTUaO8V2Q2akzYhYU3BvTU1jLWgrazEAbStj3XO0vJXp/8+jGYXijr+BWlBHzd+UyBCiP\n zw3fqzev/O/UT1HosblJk+khV8Hefjzlr9ICE2zHXawfEsWdbU7/HtDnXGtYb5IesMVrm3r7l5DrPf\n 0bj3EinW8zXeKfPOrZuynx\nX-Spam-Status: No, score=\nX-Spam-Score:\nX-Spam-Bar:\nX-Ham-Report:\nX-Spam-Flag: NO\n----==_mimepart_597f5d93c36ab_27253f8d0fb59c2c364450\nContent-Type: text/plain;\n charset=UTF-8\nContent-Transfer-Encoding: 7bit\n\n@nolanliou It would be better to do it all in one pass, both to avoid the separate collision checking phase and to avoid CPU work in the collision case.  One option is to have a separate buffer storing the source index of an output index.  Atomically writing an entry in the separate buffer at the same time as the main buffer can avoid collisions.  Not sure if the separate buffer can be avoided.\n-- \nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub:\n#7251 (comment)\n----==_mimepart_597f5d93c36ab_27253f8d0fb59c2c364450\nContent-Type: text/html;\n charset=UTF-8\nContent-Transfer-Encoding: quoted-printable\n\n<p><a href=3D\"https://github.com/nolanliou\" class=3D\"user-mention\">@nolanli=\nou</a> It would be better to do it all in one pass, both to avoid the separ=\nate collision checking phase and to avoid CPU work in the collision case.  =\nOne option is to have a separate buffer storing the source index of an outp=\nut index.  Atomically writing an entry in the separate buffer at the same t=\nime as the main buffer can avoid collisions.  Not sure if the separate buff=\ner can be avoided.</p>\n\n<p style=3D\"font-size:small;-webkit-text-size-adjust:none;color:#666;\">&mda=\nsh;<br />You are receiving this because you are subscribed to this thread.<=\nbr />Reply to this email directly, <a href=3D\"https://github.com/tensorflow=\n/tensorflow/issues/7251#issuecomment-319126665\">view it on GitHub</a>, or <=\na href=3D\"https://github.com/notifications/unsubscribe-auth/ARjzoNomEooi4MK=\nxyeFsDrNYCfW_PA2lks5sTgOTgaJpZM4L22Cc\">mute the thread</a>.<img alt=3D\"\" he=\night=3D\"1\" src=3D\"https://github.com/notifications/beacon/ARjzoKE5D3UUNMrXu=\nCWAVKwcef6jh5fXks5sTgOTgaJpZM4L22Cc.gif\" width=3D\"1\" /></p>\n<div itemscope itemtype=3D\"http://schema.org/EmailMessage\">\n<div itemprop=3D\"action\" itemscope itemtype=3D\"http://schema.org/ViewAction=\n\">\n  <link itemprop=3D\"url\" href=3D\"https://github.com/tensorflow/tensorflow/i=\nssues/7251#issuecomment-319126665\"></link>\n  <meta itemprop=3D\"name\" content=3D\"View Issue\"></meta>\n</div>\n<meta itemprop=3D\"description\" content=3D\"View this Issue on GitHub\"></meta>\n</div>\n\n<script type=3D\"application/json\" data-scope=3D\"inboxmarkup\">{\"api_version\"=\n:\"1.0\",\"publisher\":{\"api_key\":\"05dde50f1d1a384dd78767c55493e4bb\",\"name\":\"Gi=\ntHub\"},\"entity\":{\"external_key\":\"github/tensorflow/tensorflow\",\"title\":\"ten=\nsorflow/tensorflow\",\"subtitle\":\"GitHub repository\",\"main_image_url\":\"https:=\n//cloud.githubusercontent.com/assets/143418/17495839/a5054eac-5d88-11e6-95f=\nc-7290892c7bb5.png\",\"avatar_image_url\":\"https://cloud.githubusercontent.com=\n/assets/143418/15842166/7c72db34-2c0b-11e6-9aed-b52498112777.png\",\"action\":=\n{\"name\":\"Open in GitHub\",\"url\":\"https://github.com/tensorflow/tensorflow\"}}=\n,\"updates\":{\"snippets\":[{\"icon\":\"PERSON\",\"message\":\"@girving in #7251: @nol=\nanliou It would be better to do it all in one pass, both to avoid the separ=\nate collision checking phase and to avoid CPU work in the collision case.  =\nOne option is to have a separate buffer storing the source index of an outp=\nut index.  Atomically writing an entry in the separate buffer at the same t=\nime as the main buffer can avoid collisions.  Not sure if the separate buff=\ner can be avoided.\"}],\"action\":{\"name\":\"View Issue\",\"url\":\"https://github.c=\nom/tensorflow/tensorflow/issues/7251#issuecomment-319126665\"}}}</script>=\n----==_mimepart_597f5d93c36ab_27253f8d0fb59c2c364450--", "body": "This message was created automatically by mail delivery software.\n\nA message that you sent could not be delivered to one or more of its\nrecipients. This is a temporary error. The following address(es) deferred:\n\n  mazecreator@gmail.com\n    Domain mazecreator.com has exceeded the max emails per hour (27/25 (108%)) allowed.  Message will be reattempted later\n\n------- This is a copy of the message, including all the headers. ------\nReceived: from o8.sgmail.github.com ([167.89.101.199]:55459)\n\tby server2.lowesthostingrates.com with esmtps (TLSv1.2:ECDHE-RSA-AES128-GCM-SHA256:128)\n\t(Exim 4.89)\n\t(envelope-from <bounces+848413-e6d9-mazecreator=mazecreator.com@sgmail.github.com>)\n\tid 1dcDaF-0004jv-BH\n\tfor mazecreator@mazecreator.com; Mon, 31 Jul 2017 11:30:49 -0500\nDKIM-Signature: v=1; a=rsa-sha1; c=relaxed/relaxed; d=github.com; \n\th=from:reply-to:to:cc:in-reply-to:references:subject:mime-version:content-type:content-transfer-encoding:list-id:list-archive:list-post:list-unsubscribe; \n\ts=s20150108; bh=nx71yJs08keP5T07fL7PA0zJ5Sk=; b=EWCBHGn0d7W2HWBf\n\tc31a0Zv8qb4xspIsMQJJX0Ygav/e8OSs9mBlJQAdUPOCa/rPEPAH6hiteaC02key\n\t8srV34R1lhfmYLYRRNp0hw+i4H/9RQbV4+LfgnBUmnbc5lXkz3tM1w+80TLv7UJ2\n\tY7keWQbgc/4OwbfMjTCXQ7cPO1E=\nReceived: by filter1090p1mdw1.sendgrid.net with SMTP id filter1090p1mdw1-31658-597F5D93-1E\n        2017-07-31 16:40:51.938204643 +0000 UTC\nReceived: from github-smtp2b-ext-cp1-prd.iad.github.net (github-smtp2b-ext-cp1-prd.iad.github.net [192.30.253.17])\n\tby ismtpd0003p1iad1.sendgrid.net (SG) with ESMTP id ej7d3jnRSfiR-na-eSX06A\n\tfor <mazecreator@mazecreator.com>; Mon, 31 Jul 2017 16:40:51.885 +0000 (UTC)\nDate: Mon, 31 Jul 2017 16:40:52 +0000 (UTC)\nFrom: Geoffrey Irving <notifications@github.com>\nReply-To: tensorflow/tensorflow <reply@reply.github.com>\nTo: tensorflow/tensorflow <tensorflow@noreply.github.com>\nCc: Subscribed <subscribed@noreply.github.com>\nMessage-ID: <tensorflow/tensorflow/issues/7251/319126665@github.com>\nIn-Reply-To: <tensorflow/tensorflow/issues/7251@github.com>\nReferences: <tensorflow/tensorflow/issues/7251@github.com>\nSubject: Re: [tensorflow/tensorflow] Native GPU version of `tf.dynamic_stitch`\n (#7251)\nMime-Version: 1.0\nContent-Type: multipart/alternative;\n boundary=\"--==_mimepart_597f5d93c36ab_27253f8d0fb59c2c364450\";\n charset=UTF-8\nContent-Transfer-Encoding: 7bit\nPrecedence: list\nX-GitHub-Sender: girving\nX-GitHub-Recipient: Mazecreator\nX-GitHub-Reason: subscribed\nList-ID: tensorflow/tensorflow <tensorflow.tensorflow.github.com>\nList-Archive: https://github.com/tensorflow/tensorflow\nList-Post: <mailto:reply@reply.github.com>\nList-Unsubscribe: <mailto:unsub+0118f3a0d0f555d24b289287f58f3650cf2dacfcbcd77ae092cf0000000115971f9392a169ce0c3c4c09@reply.github.com>,\n <https://github.com/notifications/unsubscribe/ARjzoKPYlSfOTycEiwL0VaTM6KRaRBL3ks5sTgOTgaJpZM4L22Cc>\nX-Auto-Response-Suppress: All\nX-GitHub-Recipient-Address: mazecreator@mazecreator.com\nX-SG-EID: BJ4qYjf5a3yL0lCrdDNghY4YYR+k1a+cluU6wEX1JqwOXPbdUKmyhRm47T5qUt/NDnaAPnCAqApKQk\n lCFCUusMnkTUaO8V2Q2akzYhYU3BvTU1jLWgrazEAbStj3XO0vJXp/8+jGYXijr+BWlBHzd+UyBCiP\n zw3fqzev/O/UT1HosblJk+khV8Hefjzlr9ICE2zHXawfEsWdbU7/HtDnXGtYb5IesMVrm3r7l5DrPf\n 0bj3EinW8zXeKfPOrZuynx\nX-Spam-Status: No, score=\nX-Spam-Score:\nX-Spam-Bar:\nX-Ham-Report:\nX-Spam-Flag: NO\n\n----==_mimepart_597f5d93c36ab_27253f8d0fb59c2c364450\nContent-Type: text/plain;\n charset=UTF-8\nContent-Transfer-Encoding: 7bit\n\n@nolanliou It would be better to do it all in one pass, both to avoid the separate collision checking phase and to avoid CPU work in the collision case.  One option is to have a separate buffer storing the source index of an output index.  Atomically writing an entry in the separate buffer at the same time as the main buffer can avoid collisions.  Not sure if the separate buffer can be avoided.\n\n-- \nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub:\nhttps://github.com/tensorflow/tensorflow/issues/7251#issuecomment-319126665\n----==_mimepart_597f5d93c36ab_27253f8d0fb59c2c364450\nContent-Type: text/html;\n charset=UTF-8\nContent-Transfer-Encoding: quoted-printable\n\n<p><a href=3D\"https://github.com/nolanliou\" class=3D\"user-mention\">@nolanli=\nou</a> It would be better to do it all in one pass, both to avoid the separ=\nate collision checking phase and to avoid CPU work in the collision case.  =\nOne option is to have a separate buffer storing the source index of an outp=\nut index.  Atomically writing an entry in the separate buffer at the same t=\nime as the main buffer can avoid collisions.  Not sure if the separate buff=\ner can be avoided.</p>\n\n<p style=3D\"font-size:small;-webkit-text-size-adjust:none;color:#666;\">&mda=\nsh;<br />You are receiving this because you are subscribed to this thread.<=\nbr />Reply to this email directly, <a href=3D\"https://github.com/tensorflow=\n/tensorflow/issues/7251#issuecomment-319126665\">view it on GitHub</a>, or <=\na href=3D\"https://github.com/notifications/unsubscribe-auth/ARjzoNomEooi4MK=\nxyeFsDrNYCfW_PA2lks5sTgOTgaJpZM4L22Cc\">mute the thread</a>.<img alt=3D\"\" he=\night=3D\"1\" src=3D\"https://github.com/notifications/beacon/ARjzoKE5D3UUNMrXu=\nCWAVKwcef6jh5fXks5sTgOTgaJpZM4L22Cc.gif\" width=3D\"1\" /></p>\n<div itemscope itemtype=3D\"http://schema.org/EmailMessage\">\n<div itemprop=3D\"action\" itemscope itemtype=3D\"http://schema.org/ViewAction=\n\">\n  <link itemprop=3D\"url\" href=3D\"https://github.com/tensorflow/tensorflow/i=\nssues/7251#issuecomment-319126665\"></link>\n  <meta itemprop=3D\"name\" content=3D\"View Issue\"></meta>\n</div>\n<meta itemprop=3D\"description\" content=3D\"View this Issue on GitHub\"></meta>\n</div>\n\n<script type=3D\"application/json\" data-scope=3D\"inboxmarkup\">{\"api_version\"=\n:\"1.0\",\"publisher\":{\"api_key\":\"05dde50f1d1a384dd78767c55493e4bb\",\"name\":\"Gi=\ntHub\"},\"entity\":{\"external_key\":\"github/tensorflow/tensorflow\",\"title\":\"ten=\nsorflow/tensorflow\",\"subtitle\":\"GitHub repository\",\"main_image_url\":\"https:=\n//cloud.githubusercontent.com/assets/143418/17495839/a5054eac-5d88-11e6-95f=\nc-7290892c7bb5.png\",\"avatar_image_url\":\"https://cloud.githubusercontent.com=\n/assets/143418/15842166/7c72db34-2c0b-11e6-9aed-b52498112777.png\",\"action\":=\n{\"name\":\"Open in GitHub\",\"url\":\"https://github.com/tensorflow/tensorflow\"}}=\n,\"updates\":{\"snippets\":[{\"icon\":\"PERSON\",\"message\":\"@girving in #7251: @nol=\nanliou It would be better to do it all in one pass, both to avoid the separ=\nate collision checking phase and to avoid CPU work in the collision case.  =\nOne option is to have a separate buffer storing the source index of an outp=\nut index.  Atomically writing an entry in the separate buffer at the same t=\nime as the main buffer can avoid collisions.  Not sure if the separate buff=\ner can be avoided.\"}],\"action\":{\"name\":\"View Issue\",\"url\":\"https://github.c=\nom/tensorflow/tensorflow/issues/7251#issuecomment-319126665\"}}}</script>=\n\n----==_mimepart_597f5d93c36ab_27253f8d0fb59c2c364450--\n"}