{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/362906246", "html_url": "https://github.com/tensorflow/tensorflow/issues/16646#issuecomment-362906246", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16646", "id": 362906246, "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjkwNjI0Ng==", "user": {"login": "buptzzl", "id": 1203440, "node_id": "MDQ6VXNlcjEyMDM0NDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1203440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/buptzzl", "html_url": "https://github.com/buptzzl", "followers_url": "https://api.github.com/users/buptzzl/followers", "following_url": "https://api.github.com/users/buptzzl/following{/other_user}", "gists_url": "https://api.github.com/users/buptzzl/gists{/gist_id}", "starred_url": "https://api.github.com/users/buptzzl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/buptzzl/subscriptions", "organizations_url": "https://api.github.com/users/buptzzl/orgs", "repos_url": "https://api.github.com/users/buptzzl/repos", "events_url": "https://api.github.com/users/buptzzl/events{/privacy}", "received_events_url": "https://api.github.com/users/buptzzl/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-04T13:20:11Z", "updated_at": "2018-02-04T13:21:55Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=20959853\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/drpngx\">@drpngx</a>  When I used the lower level API for training,  tf.trainable_variables() is work.  But High level API's estimator use system defined Graph info and  tf.trainable_variables() doesn't work!<br>\nFor example, I have use the tf.estimator.Estimator defined a group of models,  and just test print the  tf.trainable_variables(), It just return empty list. The code is below:</p>\n<pre><code>clf_ = tf.estimator.Estimator(model_fn=model_fn_wide2deep, params=param, model_dir=ckpt_dir)\n# try init parameters from other model.\ninit_ops = [tf.global_variables_initializer(), tf.local_variables_initializer()]\nwith tf.Session() as sess:\n    sess.run(init_ops)\n    print('traininig params: %r' % sess.run(tf.trainable_variables()))\n    sys.exit(1)\n</code></pre>\n<p>Through  my clf_  model's parameter can't be return, I think Your ways  to change   tf.estimator.Estimator model's parameter doesn't work.  That why I supporse to add a Estimator.set_variable_value(name)  API.<br>\nHope you response! Thanks!</p>", "body_text": "@drpngx  When I used the lower level API for training,  tf.trainable_variables() is work.  But High level API's estimator use system defined Graph info and  tf.trainable_variables() doesn't work!\nFor example, I have use the tf.estimator.Estimator defined a group of models,  and just test print the  tf.trainable_variables(), It just return empty list. The code is below:\nclf_ = tf.estimator.Estimator(model_fn=model_fn_wide2deep, params=param, model_dir=ckpt_dir)\n# try init parameters from other model.\ninit_ops = [tf.global_variables_initializer(), tf.local_variables_initializer()]\nwith tf.Session() as sess:\n    sess.run(init_ops)\n    print('traininig params: %r' % sess.run(tf.trainable_variables()))\n    sys.exit(1)\n\nThrough  my clf_  model's parameter can't be return, I think Your ways  to change   tf.estimator.Estimator model's parameter doesn't work.  That why I supporse to add a Estimator.set_variable_value(name)  API.\nHope you response! Thanks!", "body": "@drpngx  When I used the lower level API for training,  tf.trainable_variables() is work.  But High level API's estimator use system defined Graph info and  tf.trainable_variables() doesn't work! \r\nFor example, I have use the tf.estimator.Estimator defined a group of models,  and just test print the  tf.trainable_variables(), It just return empty list. The code is below: \r\n\r\n    clf_ = tf.estimator.Estimator(model_fn=model_fn_wide2deep, params=param, model_dir=ckpt_dir)\r\n    # try init parameters from other model.\r\n    init_ops = [tf.global_variables_initializer(), tf.local_variables_initializer()]\r\n    with tf.Session() as sess:\r\n        sess.run(init_ops)\r\n        print('traininig params: %r' % sess.run(tf.trainable_variables()))\r\n        sys.exit(1)\r\n\r\nThrough  my clf_  model's parameter can't be return, I think Your ways  to change   tf.estimator.Estimator model's parameter doesn't work.  That why I supporse to add a Estimator.set_variable_value(name)  API. \r\nHope you response! Thanks! "}