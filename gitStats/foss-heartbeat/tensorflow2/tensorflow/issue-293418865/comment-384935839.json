{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/384935839", "html_url": "https://github.com/tensorflow/tensorflow/issues/16646#issuecomment-384935839", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16646", "id": 384935839, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDkzNTgzOQ==", "user": {"login": "kopas", "id": 3903237, "node_id": "MDQ6VXNlcjM5MDMyMzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/3903237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kopas", "html_url": "https://github.com/kopas", "followers_url": "https://api.github.com/users/kopas/followers", "following_url": "https://api.github.com/users/kopas/following{/other_user}", "gists_url": "https://api.github.com/users/kopas/gists{/gist_id}", "starred_url": "https://api.github.com/users/kopas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kopas/subscriptions", "organizations_url": "https://api.github.com/users/kopas/orgs", "repos_url": "https://api.github.com/users/kopas/repos", "events_url": "https://api.github.com/users/kopas/events{/privacy}", "received_events_url": "https://api.github.com/users/kopas/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-27T10:49:20Z", "updated_at": "2018-04-27T10:49:20Z", "author_association": "NONE", "body_html": "<p>as I did not found full answer in other places (aka <a href=\"http://stackoverflow.com/questions/tagged/tensorflow\" rel=\"nofollow\">StackOverflow</a>) and this issue appears first in search results</p>\n<p>If you want to update values on Estimator (high level API), you can use this code to do it</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c\"><span class=\"pl-c\">#</span> Restore, Update, Save</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> tested only on tesorflow 1.4</span>\n<span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\ntf.reset_default_graph()\n\n<span class=\"pl-c1\">CHECKPOINT_DIR</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>CHECKPOIN_DIR<span class=\"pl-pds\">'</span></span> <span class=\"pl-c\"><span class=\"pl-c\">#</span> for example '/my_checkpoints' as in tf.estimator.LinearClassifier(model_dir='/my_checkpoints'...</span>\ncheckpoint <span class=\"pl-k\">=</span> tf.train.get_checkpoint_state(<span class=\"pl-c1\">CHECKPOINT_DIR</span>)\n\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n    saver <span class=\"pl-k\">=</span> tf.train.import_meta_graph(checkpoint.model_checkpoint_path <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>.meta<span class=\"pl-pds\">'</span></span>)\n    saver.restore(sess, checkpoint.model_checkpoint_path)\n\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> just to check all variables values</span>\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> sess.run(tf.all_variables())</span>\n\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> get your variable</span>\n    <span class=\"pl-c1\">KEY</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>linear/linear_model/0/weights/part_0:0<span class=\"pl-pds\">'</span></span><span class=\"pl-c\"><span class=\"pl-c\">#</span> for tf.estimator.LinearClassifier first weight</span>\n    var_wights_0 <span class=\"pl-k\">=</span> [v <span class=\"pl-k\">for</span> v <span class=\"pl-k\">in</span> tf.get_collection(tf.GraphKeys.<span class=\"pl-c1\">GLOBAL_VARIABLES</span>) <span class=\"pl-k\">if</span> v.name <span class=\"pl-k\">==</span> <span class=\"pl-c1\">KEY</span>][<span class=\"pl-c1\">0</span>]\n    sess.run(var_wights_0)\n\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> your update operation</span>\n    var_wights_0_updated <span class=\"pl-k\">=</span> var_wights_0.assign(var_wights_0 <span class=\"pl-k\">-</span> <span class=\"pl-c1\">100</span>)\n    sess.run(var_wights_0_updated)\n\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> you can check that value is updated</span>\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> sess.run(tf.all_variables())</span>\n\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> this saves updated values to last checkpoint saved by estimator</span>\n    saver.save(sess, checkpoint.model_checkpoint_path)</pre></div>", "body_text": "as I did not found full answer in other places (aka StackOverflow) and this issue appears first in search results\nIf you want to update values on Estimator (high level API), you can use this code to do it\n# Restore, Update, Save\n# tested only on tesorflow 1.4\nimport tensorflow as tf\ntf.reset_default_graph()\n\nCHECKPOINT_DIR = 'CHECKPOIN_DIR' # for example '/my_checkpoints' as in tf.estimator.LinearClassifier(model_dir='/my_checkpoints'...\ncheckpoint = tf.train.get_checkpoint_state(CHECKPOINT_DIR)\n\nwith tf.Session() as sess:\n    saver = tf.train.import_meta_graph(checkpoint.model_checkpoint_path + '.meta')\n    saver.restore(sess, checkpoint.model_checkpoint_path)\n\n    # just to check all variables values\n    # sess.run(tf.all_variables())\n\n    # get your variable\n    KEY = 'linear/linear_model/0/weights/part_0:0'# for tf.estimator.LinearClassifier first weight\n    var_wights_0 = [v for v in tf.get_collection(tf.GraphKeys.GLOBAL_VARIABLES) if v.name == KEY][0]\n    sess.run(var_wights_0)\n\n    # your update operation\n    var_wights_0_updated = var_wights_0.assign(var_wights_0 - 100)\n    sess.run(var_wights_0_updated)\n\n    # you can check that value is updated\n    # sess.run(tf.all_variables())\n\n    # this saves updated values to last checkpoint saved by estimator\n    saver.save(sess, checkpoint.model_checkpoint_path)", "body": "as I did not found full answer in other places (aka [StackOverflow](http://stackoverflow.com/questions/tagged/tensorflow)) and this issue appears first in search results \r\n\r\nIf you want to update values on Estimator (high level API), you can use this code to do it\r\n\r\n```python\r\n# Restore, Update, Save\r\n# tested only on tesorflow 1.4\r\nimport tensorflow as tf\r\ntf.reset_default_graph()\r\n\r\nCHECKPOINT_DIR = 'CHECKPOIN_DIR' # for example '/my_checkpoints' as in tf.estimator.LinearClassifier(model_dir='/my_checkpoints'...\r\ncheckpoint = tf.train.get_checkpoint_state(CHECKPOINT_DIR)\r\n\r\nwith tf.Session() as sess:\r\n    saver = tf.train.import_meta_graph(checkpoint.model_checkpoint_path + '.meta')\r\n    saver.restore(sess, checkpoint.model_checkpoint_path)\r\n\r\n    # just to check all variables values\r\n    # sess.run(tf.all_variables())\r\n\r\n    # get your variable\r\n    KEY = 'linear/linear_model/0/weights/part_0:0'# for tf.estimator.LinearClassifier first weight\r\n    var_wights_0 = [v for v in tf.get_collection(tf.GraphKeys.GLOBAL_VARIABLES) if v.name == KEY][0]\r\n    sess.run(var_wights_0)\r\n\r\n    # your update operation\r\n    var_wights_0_updated = var_wights_0.assign(var_wights_0 - 100)\r\n    sess.run(var_wights_0_updated)\r\n\r\n    # you can check that value is updated\r\n    # sess.run(tf.all_variables())\r\n\r\n    # this saves updated values to last checkpoint saved by estimator\r\n    saver.save(sess, checkpoint.model_checkpoint_path)\r\n```"}