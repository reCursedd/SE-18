{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/227560500", "html_url": "https://github.com/tensorflow/tensorflow/issues/2922#issuecomment-227560500", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2922", "id": 227560500, "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzU2MDUwMA==", "user": {"login": "prb12", "id": 11547801, "node_id": "MDQ6VXNlcjExNTQ3ODAx", "avatar_url": "https://avatars1.githubusercontent.com/u/11547801?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prb12", "html_url": "https://github.com/prb12", "followers_url": "https://api.github.com/users/prb12/followers", "following_url": "https://api.github.com/users/prb12/following{/other_user}", "gists_url": "https://api.github.com/users/prb12/gists{/gist_id}", "starred_url": "https://api.github.com/users/prb12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prb12/subscriptions", "organizations_url": "https://api.github.com/users/prb12/orgs", "repos_url": "https://api.github.com/users/prb12/repos", "events_url": "https://api.github.com/users/prb12/events{/privacy}", "received_events_url": "https://api.github.com/users/prb12/received_events", "type": "User", "site_admin": false}, "created_at": "2016-06-21T20:24:45Z", "updated_at": "2016-06-21T20:25:27Z", "author_association": "MEMBER", "body_html": "<p>More importantly, AdagradOptimizer's learning_rate parameter is supposed to be</p>\n<pre><code>Construct a new Adagrad optimizer.\n   Args:\n      learning_rate: A `Tensor` or a floating point value.  The learning rate.\n</code></pre>\n<p>The example code above passes in a python function which returns a Tensor.</p>\n<p>I'm pretty sure that convert_to_tensor doesn't accept a python function:</p>\n<pre><code>13:19:46 :~$ python\nPython 2.7.6 (default, Jun 22 2015, 17:58:13) \n[GCC 4.8.2] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt; import tensorflow as tf\n&gt;&gt;&gt; def foo():\n...   return tf.constant(0.1)\n... \n&gt;&gt;&gt; tf.convert_to_tensor(foo)\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 620, in convert_to_tensor\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/constant_op.py\", line 179, in _constant_tensor_conversion_function\n    return constant(v, dtype=dtype, name=name)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/constant_op.py\", line 162, in constant\n    tensor_util.make_tensor_proto(value, dtype=dtype, shape=shape))\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/tensor_util.py\", line 421, in make_tensor_proto\n    tensor_proto.string_val.extend([compat.as_bytes(x) for x in proto_values])\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/util/compat.py\", line 44, in as_bytes\n    raise TypeError('Expected binary or unicode string, got %r' % bytes_or_text)\nTypeError: Expected binary or unicode string, got &lt;function foo at 0x7f80b90b3140&gt;\n</code></pre>\n<p>Whereas this is fine:</p>\n<pre><code>&gt;&gt;&gt; tf.convert_to_tensor(foo())\n&lt;tf.Tensor 'Const:0' shape=() dtype=float32&gt;\n&gt;&gt;&gt; \n</code></pre>", "body_text": "More importantly, AdagradOptimizer's learning_rate parameter is supposed to be\nConstruct a new Adagrad optimizer.\n   Args:\n      learning_rate: A `Tensor` or a floating point value.  The learning rate.\n\nThe example code above passes in a python function which returns a Tensor.\nI'm pretty sure that convert_to_tensor doesn't accept a python function:\n13:19:46 :~$ python\nPython 2.7.6 (default, Jun 22 2015, 17:58:13) \n[GCC 4.8.2] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import tensorflow as tf\n>>> def foo():\n...   return tf.constant(0.1)\n... \n>>> tf.convert_to_tensor(foo)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 620, in convert_to_tensor\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/constant_op.py\", line 179, in _constant_tensor_conversion_function\n    return constant(v, dtype=dtype, name=name)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/constant_op.py\", line 162, in constant\n    tensor_util.make_tensor_proto(value, dtype=dtype, shape=shape))\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/tensor_util.py\", line 421, in make_tensor_proto\n    tensor_proto.string_val.extend([compat.as_bytes(x) for x in proto_values])\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/util/compat.py\", line 44, in as_bytes\n    raise TypeError('Expected binary or unicode string, got %r' % bytes_or_text)\nTypeError: Expected binary or unicode string, got <function foo at 0x7f80b90b3140>\n\nWhereas this is fine:\n>>> tf.convert_to_tensor(foo())\n<tf.Tensor 'Const:0' shape=() dtype=float32>\n>>>", "body": "More importantly, AdagradOptimizer's learning_rate parameter is supposed to be \n\n```\nConstruct a new Adagrad optimizer.\n   Args:\n      learning_rate: A `Tensor` or a floating point value.  The learning rate.\n```\n\nThe example code above passes in a python function which returns a Tensor.\n\nI'm pretty sure that convert_to_tensor doesn't accept a python function:\n\n```\n13:19:46 :~$ python\nPython 2.7.6 (default, Jun 22 2015, 17:58:13) \n[GCC 4.8.2] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import tensorflow as tf\n>>> def foo():\n...   return tf.constant(0.1)\n... \n>>> tf.convert_to_tensor(foo)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 620, in convert_to_tensor\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/constant_op.py\", line 179, in _constant_tensor_conversion_function\n    return constant(v, dtype=dtype, name=name)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/constant_op.py\", line 162, in constant\n    tensor_util.make_tensor_proto(value, dtype=dtype, shape=shape))\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/tensor_util.py\", line 421, in make_tensor_proto\n    tensor_proto.string_val.extend([compat.as_bytes(x) for x in proto_values])\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/util/compat.py\", line 44, in as_bytes\n    raise TypeError('Expected binary or unicode string, got %r' % bytes_or_text)\nTypeError: Expected binary or unicode string, got <function foo at 0x7f80b90b3140>\n```\n\nWhereas this is fine:\n\n```\n>>> tf.convert_to_tensor(foo())\n<tf.Tensor 'Const:0' shape=() dtype=float32>\n>>> \n```\n"}