{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/431485898", "html_url": "https://github.com/tensorflow/tensorflow/issues/21782#issuecomment-431485898", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21782", "id": 431485898, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMTQ4NTg5OA==", "user": {"login": "wt-huang", "id": 42785337, "node_id": "MDQ6VXNlcjQyNzg1MzM3", "avatar_url": "https://avatars0.githubusercontent.com/u/42785337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wt-huang", "html_url": "https://github.com/wt-huang", "followers_url": "https://api.github.com/users/wt-huang/followers", "following_url": "https://api.github.com/users/wt-huang/following{/other_user}", "gists_url": "https://api.github.com/users/wt-huang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wt-huang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wt-huang/subscriptions", "organizations_url": "https://api.github.com/users/wt-huang/orgs", "repos_url": "https://api.github.com/users/wt-huang/repos", "events_url": "https://api.github.com/users/wt-huang/events{/privacy}", "received_events_url": "https://api.github.com/users/wt-huang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-19T20:14:45Z", "updated_at": "2018-10-19T20:14:45Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=18079752\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/PaulChongPeng\">@PaulChongPeng</a> The trace_steps used in timeline is intended to capture just a single step when program makes a single call to <code>session.run()</code>.  Each <code>session.run()</code> generates <code>run_metadata</code> protobuf which is overwritten every time. <code>global_step</code> doesn't get overwritten hence the difference as seen above.</p>", "body_text": "@PaulChongPeng The trace_steps used in timeline is intended to capture just a single step when program makes a single call to session.run().  Each session.run() generates run_metadata protobuf which is overwritten every time. global_step doesn't get overwritten hence the difference as seen above.", "body": "@PaulChongPeng The trace_steps used in timeline is intended to capture just a single step when program makes a single call to `session.run()`.  Each `session.run()` generates `run_metadata` protobuf which is overwritten every time. `global_step` doesn't get overwritten hence the difference as seen above. "}