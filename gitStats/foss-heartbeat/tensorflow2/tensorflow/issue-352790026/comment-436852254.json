{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/436852254", "html_url": "https://github.com/tensorflow/tensorflow/issues/21782#issuecomment-436852254", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21782", "id": 436852254, "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjg1MjI1NA==", "user": {"login": "PaulChongPeng", "id": 18079752, "node_id": "MDQ6VXNlcjE4MDc5NzUy", "avatar_url": "https://avatars1.githubusercontent.com/u/18079752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PaulChongPeng", "html_url": "https://github.com/PaulChongPeng", "followers_url": "https://api.github.com/users/PaulChongPeng/followers", "following_url": "https://api.github.com/users/PaulChongPeng/following{/other_user}", "gists_url": "https://api.github.com/users/PaulChongPeng/gists{/gist_id}", "starred_url": "https://api.github.com/users/PaulChongPeng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PaulChongPeng/subscriptions", "organizations_url": "https://api.github.com/users/PaulChongPeng/orgs", "repos_url": "https://api.github.com/users/PaulChongPeng/repos", "events_url": "https://api.github.com/users/PaulChongPeng/events{/privacy}", "received_events_url": "https://api.github.com/users/PaulChongPeng/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-08T02:35:21Z", "updated_at": "2018-11-08T02:38:56Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=42785337\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/wt-huang\">@wt-huang</a><br>\nI checked my code ,and confirmed  that I had used tf.train.create_global_step() in my training code.<br>\nI checked tensorflow profiler code again:<br>\n_profiled_run function in tensorflow/tensorflow/python/profiler/profile_context.py use profile_context._new_step() and profile_context._should_trace(self, step, graph, fetches) to check whether should trace or not.<br>\n`<br>\ndef _new_step(self):<br>\nacquired = self._lock.acquire(False)<br>\nyield (self._step, acquired)<br>\nself._step += 1<br>\nself._trace_next_step = False<br>\nself._dump_next_step = False<br>\nif acquired:<br>\nself._lock.release()</p>\n<p>def _should_trace(self, step, graph, fetches):<br>\n\"\"\"Whether should do tracing at current step.\"\"\"<br>\nif self._traced_steps &gt; MAX_TRACED_STEPS:<br>\nreturn False<br>\n# Check user-set tracing steps.<br>\nif step in self._trace_steps or self._trace_next_step:<br>\nself._traced_steps += 1<br>\nreturn True</p>\n<p>`</p>\n<p>The step  which is used to check whether should trace or not is not related to the global step.</p>", "body_text": "@wt-huang\nI checked my code ,and confirmed  that I had used tf.train.create_global_step() in my training code.\nI checked tensorflow profiler code again:\n_profiled_run function in tensorflow/tensorflow/python/profiler/profile_context.py use profile_context._new_step() and profile_context._should_trace(self, step, graph, fetches) to check whether should trace or not.\n`\ndef _new_step(self):\nacquired = self._lock.acquire(False)\nyield (self._step, acquired)\nself._step += 1\nself._trace_next_step = False\nself._dump_next_step = False\nif acquired:\nself._lock.release()\ndef _should_trace(self, step, graph, fetches):\n\"\"\"Whether should do tracing at current step.\"\"\"\nif self._traced_steps > MAX_TRACED_STEPS:\nreturn False\n# Check user-set tracing steps.\nif step in self._trace_steps or self._trace_next_step:\nself._traced_steps += 1\nreturn True\n`\nThe step  which is used to check whether should trace or not is not related to the global step.", "body": "@wt-huang \r\nI checked my code ,and confirmed  that I had used tf.train.create_global_step() in my training code.\r\nI checked tensorflow profiler code again:\r\n _profiled_run function in tensorflow/tensorflow/python/profiler/profile_context.py use profile_context._new_step() and profile_context._should_trace(self, step, graph, fetches) to check whether should trace or not.\r\n`\r\ndef _new_step(self):\r\n    acquired = self._lock.acquire(False)\r\n    yield (self._step, acquired)\r\n    self._step += 1\r\n    self._trace_next_step = False\r\n    self._dump_next_step = False\r\n    if acquired:\r\n      self._lock.release()\r\n\r\n  def _should_trace(self, step, graph, fetches):\r\n    \"\"\"Whether should do tracing at current step.\"\"\"\r\n    if self._traced_steps > MAX_TRACED_STEPS:\r\n      return False\r\n    # Check user-set tracing steps.\r\n    if step in self._trace_steps or self._trace_next_step:\r\n      self._traced_steps += 1\r\n      return True\r\n\r\n`\r\n\r\nThe step  which is used to check whether should trace or not is not related to the global step."}