{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/196105397", "html_url": "https://github.com/tensorflow/tensorflow/issues/813#issuecomment-196105397", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/813", "id": 196105397, "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjEwNTM5Nw==", "user": {"login": "langmore", "id": 178152, "node_id": "MDQ6VXNlcjE3ODE1Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/178152?v=4", "gravatar_id": "", "url": "https://api.github.com/users/langmore", "html_url": "https://github.com/langmore", "followers_url": "https://api.github.com/users/langmore/followers", "following_url": "https://api.github.com/users/langmore/following{/other_user}", "gists_url": "https://api.github.com/users/langmore/gists{/gist_id}", "starred_url": "https://api.github.com/users/langmore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/langmore/subscriptions", "organizations_url": "https://api.github.com/users/langmore/orgs", "repos_url": "https://api.github.com/users/langmore/repos", "events_url": "https://api.github.com/users/langmore/events{/privacy}", "received_events_url": "https://api.github.com/users/langmore/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-14T02:03:10Z", "updated_at": "2016-03-14T02:03:10Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I don't know the tensorflow internals, but it seems to me that this would be very slow.  Your for loop adds 10,000 nodes to the graph, and the cumsum evaluation requires evaluation of 10,000 separate nodes, rather than one node that calls into an optimized loop.  Each node adds two length 1000 vectors, and this is fast, but I don't imagine iterating through 10,000 nodes is fast.  I must be misunderstanding, how?</p>", "body_text": "I don't know the tensorflow internals, but it seems to me that this would be very slow.  Your for loop adds 10,000 nodes to the graph, and the cumsum evaluation requires evaluation of 10,000 separate nodes, rather than one node that calls into an optimized loop.  Each node adds two length 1000 vectors, and this is fast, but I don't imagine iterating through 10,000 nodes is fast.  I must be misunderstanding, how?", "body": "I don't know the tensorflow internals, but it seems to me that this would be very slow.  Your for loop adds 10,000 nodes to the graph, and the cumsum evaluation requires evaluation of 10,000 separate nodes, rather than one node that calls into an optimized loop.  Each node adds two length 1000 vectors, and this is fast, but I don't imagine iterating through 10,000 nodes is fast.  I must be misunderstanding, how?\n"}