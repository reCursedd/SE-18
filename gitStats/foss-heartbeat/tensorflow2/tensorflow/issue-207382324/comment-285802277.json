{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/285802277", "html_url": "https://github.com/tensorflow/tensorflow/issues/7483#issuecomment-285802277", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7483", "id": 285802277, "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTgwMjI3Nw==", "user": {"login": "concretevitamin", "id": 592670, "node_id": "MDQ6VXNlcjU5MjY3MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/592670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/concretevitamin", "html_url": "https://github.com/concretevitamin", "followers_url": "https://api.github.com/users/concretevitamin/followers", "following_url": "https://api.github.com/users/concretevitamin/following{/other_user}", "gists_url": "https://api.github.com/users/concretevitamin/gists{/gist_id}", "starred_url": "https://api.github.com/users/concretevitamin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/concretevitamin/subscriptions", "organizations_url": "https://api.github.com/users/concretevitamin/orgs", "repos_url": "https://api.github.com/users/concretevitamin/repos", "events_url": "https://api.github.com/users/concretevitamin/events{/privacy}", "received_events_url": "https://api.github.com/users/concretevitamin/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-10T22:26:58Z", "updated_at": "2017-03-10T22:26:58Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=492743\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/liangwang\">@liangwang</a> what <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=23068\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/yaroslavvb\">@yaroslavvb</a> said (since <code>numpy.ndarray</code> defaults to 64-bit).  Another way could be:</p>\n<p><code>tf.sparse_placeholder(tf.float32, shape=tf.constant([16, 20424], tf.int64))</code></p>", "body_text": "@liangwang what @yaroslavvb said (since numpy.ndarray defaults to 64-bit).  Another way could be:\ntf.sparse_placeholder(tf.float32, shape=tf.constant([16, 20424], tf.int64))", "body": "@liangwang what @yaroslavvb said (since `numpy.ndarray` defaults to 64-bit).  Another way could be:\r\n\r\n`tf.sparse_placeholder(tf.float32, shape=tf.constant([16, 20424], tf.int64))`"}