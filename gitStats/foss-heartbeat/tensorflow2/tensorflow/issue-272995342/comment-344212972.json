{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/344212972", "html_url": "https://github.com/tensorflow/tensorflow/issues/14456#issuecomment-344212972", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14456", "id": 344212972, "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDIxMjk3Mg==", "user": {"login": "sabi0", "id": 11509875, "node_id": "MDQ6VXNlcjExNTA5ODc1", "avatar_url": "https://avatars3.githubusercontent.com/u/11509875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sabi0", "html_url": "https://github.com/sabi0", "followers_url": "https://api.github.com/users/sabi0/followers", "following_url": "https://api.github.com/users/sabi0/following{/other_user}", "gists_url": "https://api.github.com/users/sabi0/gists{/gist_id}", "starred_url": "https://api.github.com/users/sabi0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sabi0/subscriptions", "organizations_url": "https://api.github.com/users/sabi0/orgs", "repos_url": "https://api.github.com/users/sabi0/repos", "events_url": "https://api.github.com/users/sabi0/events{/privacy}", "received_events_url": "https://api.github.com/users/sabi0/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-14T10:24:22Z", "updated_at": "2017-11-14T10:44:33Z", "author_association": "NONE", "body_html": "<p>msvcp140.dll is a \"Standard C++ Library for native code\", not a CRT.<br>\n<a href=\"https://msdn.microsoft.com/en-us/library/8kche8ah.aspx\" rel=\"nofollow\">https://msdn.microsoft.com/en-us/library/8kche8ah.aspx</a></p>\n<p>According to MS it is possible (though not recommended) to bundle redistributable DLLs with the application. See <a href=\"https://msdn.microsoft.com/en-us/library/ms235299.aspx\" rel=\"nofollow\">https://msdn.microsoft.com/en-us/library/ms235299.aspx</a></p>\n<p>Another option is to statically link the runtime libraries using <code>/MT</code> switch. This will likely blow the size of the tensorflow_jni.dll. So you might want to introduce a separate \"flavour\" of the Maven artifact: <code>&lt;classifier&gt;static&lt;/classifier&gt;</code>. Keeping the current one (dynamic) as default.</p>\n<p>The <code>/MT</code> option is described as statically linking <em>runtime</em> libraries. So it might not work for standard C++ library. However it was mentioned as a solution to \"MSVCP140.dll missing\" question on StackOverflow: <a href=\"https://stackoverflow.com/questions/32998902/msvcp140-dll-missing\" rel=\"nofollow\">https://stackoverflow.com/questions/32998902/msvcp140-dll-missing</a><br>\nSo I guess it does work for standard C++ library too.</p>", "body_text": "msvcp140.dll is a \"Standard C++ Library for native code\", not a CRT.\nhttps://msdn.microsoft.com/en-us/library/8kche8ah.aspx\nAccording to MS it is possible (though not recommended) to bundle redistributable DLLs with the application. See https://msdn.microsoft.com/en-us/library/ms235299.aspx\nAnother option is to statically link the runtime libraries using /MT switch. This will likely blow the size of the tensorflow_jni.dll. So you might want to introduce a separate \"flavour\" of the Maven artifact: <classifier>static</classifier>. Keeping the current one (dynamic) as default.\nThe /MT option is described as statically linking runtime libraries. So it might not work for standard C++ library. However it was mentioned as a solution to \"MSVCP140.dll missing\" question on StackOverflow: https://stackoverflow.com/questions/32998902/msvcp140-dll-missing\nSo I guess it does work for standard C++ library too.", "body": "msvcp140.dll is a \"Standard C++ Library for native code\", not a CRT.\r\nhttps://msdn.microsoft.com/en-us/library/8kche8ah.aspx\r\n\r\nAccording to MS it is possible (though not recommended) to bundle redistributable DLLs with the application. See https://msdn.microsoft.com/en-us/library/ms235299.aspx\r\n\r\nAnother option is to statically link the runtime libraries using `/MT` switch. This will likely blow the size of the tensorflow_jni.dll. So you might want to introduce a separate \"flavour\" of the Maven artifact: `<classifier>static</classifier>`. Keeping the current one (dynamic) as default.\r\n\r\nThe `/MT` option is described as statically linking _runtime_ libraries. So it might not work for standard C++ library. However it was mentioned as a solution to \"MSVCP140.dll missing\" question on StackOverflow: https://stackoverflow.com/questions/32998902/msvcp140-dll-missing\r\nSo I guess it does work for standard C++ library too."}