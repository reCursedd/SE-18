{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10989", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10989/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10989/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10989/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/10989", "id": 237892460, "node_id": "MDU6SXNzdWUyMzc4OTI0NjA=", "number": 10989, "title": "resize_images: Alignment of upsampled image seems incorrect with method=NEAREST_NEIGHBOR and align_corners=True", "user": {"login": "jvlmdr", "id": 224198, "node_id": "MDQ6VXNlcjIyNDE5OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/224198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jvlmdr", "html_url": "https://github.com/jvlmdr", "followers_url": "https://api.github.com/users/jvlmdr/followers", "following_url": "https://api.github.com/users/jvlmdr/following{/other_user}", "gists_url": "https://api.github.com/users/jvlmdr/gists{/gist_id}", "starred_url": "https://api.github.com/users/jvlmdr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jvlmdr/subscriptions", "organizations_url": "https://api.github.com/users/jvlmdr/orgs", "repos_url": "https://api.github.com/users/jvlmdr/repos", "events_url": "https://api.github.com/users/jvlmdr/events{/privacy}", "received_events_url": "https://api.github.com/users/jvlmdr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-22T15:53:26Z", "updated_at": "2017-06-22T20:18:20Z", "closed_at": "2017-06-22T20:18:20Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: CentOS Linux release 7.2.1511 (Core)</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: source</li>\n<li><strong>TensorFlow version (use command below)</strong>: ('v1.1.0-0-g1ec6ed5', '1.1.0')</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.4.5- (@non-git)</li>\n<li><strong>CUDA/cuDNN version</strong>: 7.5/5.1</li>\n<li><strong>GPU model and memory</strong>: M40, 12GB</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>My understanding of the behaviour of <code>tf.image.resize_images</code> with <code>align_corners=True</code> is that it would resize</p>\n<pre><code>[A B C D] =&gt; [A x x B x x C x x D]\n</code></pre>\n<p>if the input size was 4 and the output size was 3*(4-1)+1=10, where the <code>x</code> values would be determined by the method of interpolation.<br>\n(I will provide 1D examples, although I am actually working with images.)</p>\n<p>I see the expected behaviour with <code>method=tf.image.ResizeMethod.BILINEAR</code>:</p>\n<pre><code>[0 3 6 9] =&gt; [0 1 2 3 4 5 6 7 8 9]\n</code></pre>\n<p>however, with <code>method=tf.image.ResizeMethod.NEAREST_NEIGHBOR</code> the result is not what I expect:</p>\n<pre><code>[0 3 6 9] =&gt; [0 0 0 3 3 3 6 6 6 9]    # actual result\n[0 3 6 9] =&gt; [0 0 3 3 3 6 6 6 9 9]    # desired result\n</code></pre>\n<p>Note that the nearest neighbor of the third <code>0</code> in the \"actual result\" is the element with value <code>3</code>.</p>\n<h3>Source code / logs</h3>\n<p>I have attached a simple example that demonstrates this effect: <a href=\"https://github.com/tensorflow/tensorflow/files/1095366/nearest.py.zip\">nearest.py.zip</a></p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): CentOS Linux release 7.2.1511 (Core)\nTensorFlow installed from (source or binary): source\nTensorFlow version (use command below): ('v1.1.0-0-g1ec6ed5', '1.1.0')\nBazel version (if compiling from source): 0.4.5- (@non-git)\nCUDA/cuDNN version: 7.5/5.1\nGPU model and memory: M40, 12GB\nExact command to reproduce:\n\nDescribe the problem\nMy understanding of the behaviour of tf.image.resize_images with align_corners=True is that it would resize\n[A B C D] => [A x x B x x C x x D]\n\nif the input size was 4 and the output size was 3*(4-1)+1=10, where the x values would be determined by the method of interpolation.\n(I will provide 1D examples, although I am actually working with images.)\nI see the expected behaviour with method=tf.image.ResizeMethod.BILINEAR:\n[0 3 6 9] => [0 1 2 3 4 5 6 7 8 9]\n\nhowever, with method=tf.image.ResizeMethod.NEAREST_NEIGHBOR the result is not what I expect:\n[0 3 6 9] => [0 0 0 3 3 3 6 6 6 9]    # actual result\n[0 3 6 9] => [0 0 3 3 3 6 6 6 9 9]    # desired result\n\nNote that the nearest neighbor of the third 0 in the \"actual result\" is the element with value 3.\nSource code / logs\nI have attached a simple example that demonstrates this effect: nearest.py.zip", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: CentOS Linux release 7.2.1511 (Core)\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: ('v1.1.0-0-g1ec6ed5', '1.1.0')\r\n- **Bazel version (if compiling from source)**: 0.4.5- (@non-git)\r\n- **CUDA/cuDNN version**: 7.5/5.1\r\n- **GPU model and memory**: M40, 12GB\r\n- **Exact command to reproduce**:\r\n\r\n### Describe the problem\r\n\r\nMy understanding of the behaviour of `tf.image.resize_images` with `align_corners=True` is that it would resize\r\n```\r\n[A B C D] => [A x x B x x C x x D]\r\n```\r\nif the input size was 4 and the output size was 3*(4-1)+1=10, where the `x` values would be determined by the method of interpolation.\r\n(I will provide 1D examples, although I am actually working with images.)\r\n\r\nI see the expected behaviour with `method=tf.image.ResizeMethod.BILINEAR`:\r\n```\r\n[0 3 6 9] => [0 1 2 3 4 5 6 7 8 9]\r\n```\r\nhowever, with `method=tf.image.ResizeMethod.NEAREST_NEIGHBOR` the result is not what I expect:\r\n```\r\n[0 3 6 9] => [0 0 0 3 3 3 6 6 6 9]    # actual result\r\n[0 3 6 9] => [0 0 3 3 3 6 6 6 9 9]    # desired result\r\n```\r\nNote that the nearest neighbor of the third `0` in the \"actual result\" is the element with value `3`.\r\n\r\n### Source code / logs\r\nI have attached a simple example that demonstrates this effect: [nearest.py.zip](https://github.com/tensorflow/tensorflow/files/1095366/nearest.py.zip)"}