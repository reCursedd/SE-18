{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6720", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6720/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6720/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6720/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/6720", "id": 199397359, "node_id": "MDU6SXNzdWUxOTkzOTczNTk=", "number": 6720, "title": "tf.image.resize_images() - weird padding behaviour? ", "user": {"login": "JoelKronander", "id": 18355572, "node_id": "MDQ6VXNlcjE4MzU1NTcy", "avatar_url": "https://avatars1.githubusercontent.com/u/18355572?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoelKronander", "html_url": "https://github.com/JoelKronander", "followers_url": "https://api.github.com/users/JoelKronander/followers", "following_url": "https://api.github.com/users/JoelKronander/following{/other_user}", "gists_url": "https://api.github.com/users/JoelKronander/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoelKronander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoelKronander/subscriptions", "organizations_url": "https://api.github.com/users/JoelKronander/orgs", "repos_url": "https://api.github.com/users/JoelKronander/repos", "events_url": "https://api.github.com/users/JoelKronander/events{/privacy}", "received_events_url": "https://api.github.com/users/JoelKronander/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "open", "locked": false, "assignee": {"login": "martinwicke", "id": 577277, "node_id": "MDQ6VXNlcjU3NzI3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/577277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinwicke", "html_url": "https://github.com/martinwicke", "followers_url": "https://api.github.com/users/martinwicke/followers", "following_url": "https://api.github.com/users/martinwicke/following{/other_user}", "gists_url": "https://api.github.com/users/martinwicke/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinwicke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinwicke/subscriptions", "organizations_url": "https://api.github.com/users/martinwicke/orgs", "repos_url": "https://api.github.com/users/martinwicke/repos", "events_url": "https://api.github.com/users/martinwicke/events{/privacy}", "received_events_url": "https://api.github.com/users/martinwicke/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "martinwicke", "id": 577277, "node_id": "MDQ6VXNlcjU3NzI3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/577277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinwicke", "html_url": "https://github.com/martinwicke", "followers_url": "https://api.github.com/users/martinwicke/followers", "following_url": "https://api.github.com/users/martinwicke/following{/other_user}", "gists_url": "https://api.github.com/users/martinwicke/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinwicke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinwicke/subscriptions", "organizations_url": "https://api.github.com/users/martinwicke/orgs", "repos_url": "https://api.github.com/users/martinwicke/repos", "events_url": "https://api.github.com/users/martinwicke/events{/privacy}", "received_events_url": "https://api.github.com/users/martinwicke/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 25, "created_at": "2017-01-08T02:00:42Z", "updated_at": "2018-11-20T13:26:07Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>The tf.image.resize_images() seems to use a strange padding option, which one is not clear to me at the moment. I tried to replicate the bilinear interpolation with various padding options in for example skimage, but cant replicate the behaviour.</p>\n<p>It would be nice to be able to set the padding option used in tf.images.resize_images(), or document what is used at least.</p>\n<p>Example code for comparing the results of  tf.images.resize_images() and skimage transform:<br>\nLooks like  tf.images.resize_images() does some weird unsymmetrical padding!?<br>\nUsing tensorflow 0.12.1:</p>\n<pre><code>import tensorflow as tf\nimport tensorlayer as tl\nimport numpy as np\nimport skimage\nfrom scipy.misc import imread, imresize, imsave\n\nsess = tf.InteractiveSession()\n\n#create simple test image\nimsize = 3\nxa, ya = np.ogrid[:imsize, :imsize]\nimg = np.repeat((xa + ya)[..., np.newaxis], 3, 2) / float(imsize + imsize)\n\nx = tf.placeholder(tf.float32, [1, imsize, imsize, 3])\ny = tf.image.resize_images(x,(imsize*3, imsize*3))\n\nsess.run(tf.global_variables_initializer())\n\nupsampled_tf_result = sess.run(y, feed_dict={x: [img]})\nupsampled_skimage_result = skimage.transform.rescale(img,\n                                     3,\n                                     mode='symmetric',\n                                     cval=0,\n                                     order=1,\n                                     preserve_range=False)\n\nprint(np.allclose(upsampled_tf_result, upsampled_skimage_result))\n\nimsave('upsampled_tf_result.png', np.squeeze(upsampled_tf_result))\nimsave('upsampled_skimage_result.png', upsampled_skimage_result)\n</code></pre>", "body_text": "The tf.image.resize_images() seems to use a strange padding option, which one is not clear to me at the moment. I tried to replicate the bilinear interpolation with various padding options in for example skimage, but cant replicate the behaviour.\nIt would be nice to be able to set the padding option used in tf.images.resize_images(), or document what is used at least.\nExample code for comparing the results of  tf.images.resize_images() and skimage transform:\nLooks like  tf.images.resize_images() does some weird unsymmetrical padding!?\nUsing tensorflow 0.12.1:\nimport tensorflow as tf\nimport tensorlayer as tl\nimport numpy as np\nimport skimage\nfrom scipy.misc import imread, imresize, imsave\n\nsess = tf.InteractiveSession()\n\n#create simple test image\nimsize = 3\nxa, ya = np.ogrid[:imsize, :imsize]\nimg = np.repeat((xa + ya)[..., np.newaxis], 3, 2) / float(imsize + imsize)\n\nx = tf.placeholder(tf.float32, [1, imsize, imsize, 3])\ny = tf.image.resize_images(x,(imsize*3, imsize*3))\n\nsess.run(tf.global_variables_initializer())\n\nupsampled_tf_result = sess.run(y, feed_dict={x: [img]})\nupsampled_skimage_result = skimage.transform.rescale(img,\n                                     3,\n                                     mode='symmetric',\n                                     cval=0,\n                                     order=1,\n                                     preserve_range=False)\n\nprint(np.allclose(upsampled_tf_result, upsampled_skimage_result))\n\nimsave('upsampled_tf_result.png', np.squeeze(upsampled_tf_result))\nimsave('upsampled_skimage_result.png', upsampled_skimage_result)", "body": "The tf.image.resize_images() seems to use a strange padding option, which one is not clear to me at the moment. I tried to replicate the bilinear interpolation with various padding options in for example skimage, but cant replicate the behaviour.\r\n\r\nIt would be nice to be able to set the padding option used in tf.images.resize_images(), or document what is used at least.\r\n\r\nExample code for comparing the results of  tf.images.resize_images() and skimage transform:\r\nLooks like  tf.images.resize_images() does some weird unsymmetrical padding!?\r\nUsing tensorflow 0.12.1:\r\n```\r\nimport tensorflow as tf\r\nimport tensorlayer as tl\r\nimport numpy as np\r\nimport skimage\r\nfrom scipy.misc import imread, imresize, imsave\r\n\r\nsess = tf.InteractiveSession()\r\n\r\n#create simple test image\r\nimsize = 3\r\nxa, ya = np.ogrid[:imsize, :imsize]\r\nimg = np.repeat((xa + ya)[..., np.newaxis], 3, 2) / float(imsize + imsize)\r\n\r\nx = tf.placeholder(tf.float32, [1, imsize, imsize, 3])\r\ny = tf.image.resize_images(x,(imsize*3, imsize*3))\r\n\r\nsess.run(tf.global_variables_initializer())\r\n\r\nupsampled_tf_result = sess.run(y, feed_dict={x: [img]})\r\nupsampled_skimage_result = skimage.transform.rescale(img,\r\n                                     3,\r\n                                     mode='symmetric',\r\n                                     cval=0,\r\n                                     order=1,\r\n                                     preserve_range=False)\r\n\r\nprint(np.allclose(upsampled_tf_result, upsampled_skimage_result))\r\n\r\nimsave('upsampled_tf_result.png', np.squeeze(upsampled_tf_result))\r\nimsave('upsampled_skimage_result.png', upsampled_skimage_result)\r\n```"}