{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/298121612", "html_url": "https://github.com/tensorflow/tensorflow/issues/6720#issuecomment-298121612", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6720", "id": 298121612, "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODEyMTYxMg==", "user": {"login": "ppwwyyxx", "id": 1381301, "node_id": "MDQ6VXNlcjEzODEzMDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1381301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ppwwyyxx", "html_url": "https://github.com/ppwwyyxx", "followers_url": "https://api.github.com/users/ppwwyyxx/followers", "following_url": "https://api.github.com/users/ppwwyyxx/following{/other_user}", "gists_url": "https://api.github.com/users/ppwwyyxx/gists{/gist_id}", "starred_url": "https://api.github.com/users/ppwwyyxx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ppwwyyxx/subscriptions", "organizations_url": "https://api.github.com/users/ppwwyyxx/orgs", "repos_url": "https://api.github.com/users/ppwwyyxx/repos", "events_url": "https://api.github.com/users/ppwwyyxx/events{/privacy}", "received_events_url": "https://api.github.com/users/ppwwyyxx/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-28T22:32:57Z", "updated_at": "2017-04-28T22:40:26Z", "author_association": "CONTRIBUTOR", "body_html": "<p>The AREA method seems to only affect interpolation but not alignment. At least I get strange results with it:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n<span class=\"pl-k\">from</span> skimage.transform <span class=\"pl-k\">import</span> rescale\n\narr <span class=\"pl-k\">=</span> np.array(\n    [[<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">3</span>,<span class=\"pl-c1\">4</span>],\n    [<span class=\"pl-c1\">5</span>,<span class=\"pl-c1\">6</span>,<span class=\"pl-c1\">7</span>,<span class=\"pl-c1\">8</span>],\n    [<span class=\"pl-c1\">9</span>,<span class=\"pl-c1\">10</span>,<span class=\"pl-c1\">11</span>,<span class=\"pl-c1\">12</span>]], <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>float32<span class=\"pl-pds\">'</span></span>)\n\n<span class=\"pl-c1\">input</span> <span class=\"pl-k\">=</span> tf.constant(arr)\ninput4D <span class=\"pl-k\">=</span> tf.reshape(<span class=\"pl-c1\">input</span>, [<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">1</span>])\nresize <span class=\"pl-k\">=</span> tf.image.resize_area(input4D, [<span class=\"pl-c1\">6</span>, <span class=\"pl-c1\">8</span>], <span class=\"pl-v\">align_corners</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>)[<span class=\"pl-c1\">0</span>,:,:,<span class=\"pl-c1\">0</span>]\nsess <span class=\"pl-k\">=</span> tf.Session()\nr1 <span class=\"pl-k\">=</span> sess.run(resize)\nr2 <span class=\"pl-k\">=</span> rescale(arr<span class=\"pl-k\">/</span><span class=\"pl-c1\">100.0</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-v\">mode</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>edge<span class=\"pl-pds\">'</span></span>) <span class=\"pl-k\">*</span> <span class=\"pl-c1\">100</span></pre></div>\n<p>gives</p>\n<pre><code>r1=array([[  1.        ,   1.        ,   1.66666651,   2.        ,   2.33333278,   3.        ,   3.        ,   4.00000048],\n       [  1.        ,   1.        ,   1.66666651,   2.        ,   2.33333278,   3.        ,   3.        ,   4.00000048],\n       [  3.00000024,   3.00000024,   3.66666651,   4.00000048,   4.33333302,   5.00000048,   5.00000095,   6.00000048],\n       [  5.        ,   5.        ,   5.66666603,   6.        ,   6.33333206,   7.        ,   7.00000048,   8.00000095],\n       [  4.99999952,   4.99999952,   5.66666555,   5.99999952,   6.33333111,   6.99999905,   7.        ,   8.        ],\n       [  9.00000191,   9.00000191,   9.66666698,  10.00000191,  10.33333397,  11.00000191,  11.00000191,  12.00000286]], dtype=float32)\nr2=array([[  0.99999998,   1.24999997,   1.74999996,   2.24999995,   2.74999994,   3.24999993,   3.74999992,   3.99999991],\n       [  2.        ,   2.24999998,   2.74999995,   3.24999994,   3.74999995,   4.24999994,   4.74999991,   4.99999989],\n       [  4.00000005,   4.25000001,   4.74999993,   5.24999992,   5.74999998,   6.24999997,   6.74999988,   6.99999984],\n       [  6.00000015,   6.25000009,   6.74999999,   7.24999995,   7.74999999,   8.24999996,   8.74999985,   8.9999998 ],\n       [  8.00000029,   8.25000023,   8.75000013,   9.25000005,   9.74999999,  10.24999991,  10.74999981,  10.99999975],\n       [  9.00000036,   9.25000031,   9.7500002 ,  10.2500001 ,  10.74999999,  11.24999989,  11.74999978,  11.99999973]])\n</code></pre>", "body_text": "The AREA method seems to only affect interpolation but not alignment. At least I get strange results with it:\nimport tensorflow as tf\nimport numpy as np\nfrom skimage.transform import rescale\n\narr = np.array(\n    [[1,2,3,4],\n    [5,6,7,8],\n    [9,10,11,12]], dtype='float32')\n\ninput = tf.constant(arr)\ninput4D = tf.reshape(input, [1, 3, 4, 1])\nresize = tf.image.resize_area(input4D, [6, 8], align_corners=True)[0,:,:,0]\nsess = tf.Session()\nr1 = sess.run(resize)\nr2 = rescale(arr/100.0, 2, mode='edge') * 100\ngives\nr1=array([[  1.        ,   1.        ,   1.66666651,   2.        ,   2.33333278,   3.        ,   3.        ,   4.00000048],\n       [  1.        ,   1.        ,   1.66666651,   2.        ,   2.33333278,   3.        ,   3.        ,   4.00000048],\n       [  3.00000024,   3.00000024,   3.66666651,   4.00000048,   4.33333302,   5.00000048,   5.00000095,   6.00000048],\n       [  5.        ,   5.        ,   5.66666603,   6.        ,   6.33333206,   7.        ,   7.00000048,   8.00000095],\n       [  4.99999952,   4.99999952,   5.66666555,   5.99999952,   6.33333111,   6.99999905,   7.        ,   8.        ],\n       [  9.00000191,   9.00000191,   9.66666698,  10.00000191,  10.33333397,  11.00000191,  11.00000191,  12.00000286]], dtype=float32)\nr2=array([[  0.99999998,   1.24999997,   1.74999996,   2.24999995,   2.74999994,   3.24999993,   3.74999992,   3.99999991],\n       [  2.        ,   2.24999998,   2.74999995,   3.24999994,   3.74999995,   4.24999994,   4.74999991,   4.99999989],\n       [  4.00000005,   4.25000001,   4.74999993,   5.24999992,   5.74999998,   6.24999997,   6.74999988,   6.99999984],\n       [  6.00000015,   6.25000009,   6.74999999,   7.24999995,   7.74999999,   8.24999996,   8.74999985,   8.9999998 ],\n       [  8.00000029,   8.25000023,   8.75000013,   9.25000005,   9.74999999,  10.24999991,  10.74999981,  10.99999975],\n       [  9.00000036,   9.25000031,   9.7500002 ,  10.2500001 ,  10.74999999,  11.24999989,  11.74999978,  11.99999973]])", "body": "The AREA method seems to only affect interpolation but not alignment. At least I get strange results with it:\r\n```python\r\nimport tensorflow as tf\r\nimport numpy as np\r\nfrom skimage.transform import rescale\r\n\r\narr = np.array(\r\n    [[1,2,3,4],\r\n    [5,6,7,8],\r\n    [9,10,11,12]], dtype='float32')\r\n\r\ninput = tf.constant(arr)\r\ninput4D = tf.reshape(input, [1, 3, 4, 1])\r\nresize = tf.image.resize_area(input4D, [6, 8], align_corners=True)[0,:,:,0]\r\nsess = tf.Session()\r\nr1 = sess.run(resize)\r\nr2 = rescale(arr/100.0, 2, mode='edge') * 100\r\n```\r\ngives\r\n```\r\nr1=array([[  1.        ,   1.        ,   1.66666651,   2.        ,   2.33333278,   3.        ,   3.        ,   4.00000048],\r\n       [  1.        ,   1.        ,   1.66666651,   2.        ,   2.33333278,   3.        ,   3.        ,   4.00000048],\r\n       [  3.00000024,   3.00000024,   3.66666651,   4.00000048,   4.33333302,   5.00000048,   5.00000095,   6.00000048],\r\n       [  5.        ,   5.        ,   5.66666603,   6.        ,   6.33333206,   7.        ,   7.00000048,   8.00000095],\r\n       [  4.99999952,   4.99999952,   5.66666555,   5.99999952,   6.33333111,   6.99999905,   7.        ,   8.        ],\r\n       [  9.00000191,   9.00000191,   9.66666698,  10.00000191,  10.33333397,  11.00000191,  11.00000191,  12.00000286]], dtype=float32)\r\nr2=array([[  0.99999998,   1.24999997,   1.74999996,   2.24999995,   2.74999994,   3.24999993,   3.74999992,   3.99999991],\r\n       [  2.        ,   2.24999998,   2.74999995,   3.24999994,   3.74999995,   4.24999994,   4.74999991,   4.99999989],\r\n       [  4.00000005,   4.25000001,   4.74999993,   5.24999992,   5.74999998,   6.24999997,   6.74999988,   6.99999984],\r\n       [  6.00000015,   6.25000009,   6.74999999,   7.24999995,   7.74999999,   8.24999996,   8.74999985,   8.9999998 ],\r\n       [  8.00000029,   8.25000023,   8.75000013,   9.25000005,   9.74999999,  10.24999991,  10.74999981,  10.99999975],\r\n       [  9.00000036,   9.25000031,   9.7500002 ,  10.2500001 ,  10.74999999,  11.24999989,  11.74999978,  11.99999973]])\r\n```"}