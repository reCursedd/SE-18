{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8043", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8043/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8043/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8043/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/8043", "id": 211598563, "node_id": "MDU6SXNzdWUyMTE1OTg1NjM=", "number": 8043, "title": "DNNLinearCombinedClassifier weight_column_name doesn't work in v1.0", "user": {"login": "erko", "id": 389211, "node_id": "MDQ6VXNlcjM4OTIxMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/389211?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erko", "html_url": "https://github.com/erko", "followers_url": "https://api.github.com/users/erko/followers", "following_url": "https://api.github.com/users/erko/following{/other_user}", "gists_url": "https://api.github.com/users/erko/gists{/gist_id}", "starred_url": "https://api.github.com/users/erko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erko/subscriptions", "organizations_url": "https://api.github.com/users/erko/orgs", "repos_url": "https://api.github.com/users/erko/repos", "events_url": "https://api.github.com/users/erko/events{/privacy}", "received_events_url": "https://api.github.com/users/erko/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "ispirmustafa", "id": 19293677, "node_id": "MDQ6VXNlcjE5MjkzNjc3", "avatar_url": "https://avatars1.githubusercontent.com/u/19293677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ispirmustafa", "html_url": "https://github.com/ispirmustafa", "followers_url": "https://api.github.com/users/ispirmustafa/followers", "following_url": "https://api.github.com/users/ispirmustafa/following{/other_user}", "gists_url": "https://api.github.com/users/ispirmustafa/gists{/gist_id}", "starred_url": "https://api.github.com/users/ispirmustafa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ispirmustafa/subscriptions", "organizations_url": "https://api.github.com/users/ispirmustafa/orgs", "repos_url": "https://api.github.com/users/ispirmustafa/repos", "events_url": "https://api.github.com/users/ispirmustafa/events{/privacy}", "received_events_url": "https://api.github.com/users/ispirmustafa/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ispirmustafa", "id": 19293677, "node_id": "MDQ6VXNlcjE5MjkzNjc3", "avatar_url": "https://avatars1.githubusercontent.com/u/19293677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ispirmustafa", "html_url": "https://github.com/ispirmustafa", "followers_url": "https://api.github.com/users/ispirmustafa/followers", "following_url": "https://api.github.com/users/ispirmustafa/following{/other_user}", "gists_url": "https://api.github.com/users/ispirmustafa/gists{/gist_id}", "starred_url": "https://api.github.com/users/ispirmustafa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ispirmustafa/subscriptions", "organizations_url": "https://api.github.com/users/ispirmustafa/orgs", "repos_url": "https://api.github.com/users/ispirmustafa/repos", "events_url": "https://api.github.com/users/ispirmustafa/events{/privacy}", "received_events_url": "https://api.github.com/users/ispirmustafa/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 27, "created_at": "2017-03-03T05:24:23Z", "updated_at": "2018-02-22T03:58:24Z", "closed_at": "2017-03-17T22:45:35Z", "author_association": "NONE", "body_html": "<p>After migrating to tensorflow v1.0 of my sources, weight_column_name in estimators (tested in tf.contrib.learn.DNNLinearCombinedClassifier) seems to not working now.<br>\nScripts now outputs this error:<br>\n<code>ERROR:tensorflow:Could not create metric ops for MetricSpec(metric_fn=_predictions_streaming_mean, prediction_key=logistic, label_key=None, weight_key=class_weights)</code></p>\n<h3>Environment info</h3>\n<p>Operating System:<br>\nCentOS Linux release 7.3.1611 (Core)</p>\n<p>Docker image within TF package:</p>\n<ol>\n<li>Docker latest image: tensorflow/tensorflow<br>\nCreated container:<br>\n<code>docker run -it -p 8888:8888 -v ..... --memory=12g tensorflow/tensorflow</code></li>\n<li>The output from <code>python -c \"import tensorflow; print(tensorflow.__version__)\"</code>:<br>\n<code>1.0.0</code></li>\n</ol>\n<h3>Reproducing</h3>\n<ol>\n<li>Download wide_n_deep_tutorial.py: <a href=\"url\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/learn/wide_n_deep_tutorial.py</a><br>\n(This solely works fine)</li>\n<li>Then add weightings (insert lines at):<br>\nline 26 <code>import numpy as np</code><br>\nline 130 <code>weight_column_name='class_weights',</code><br>\nline 153 <code>feature_cols['class_weights'] = tf.constant(np.ones(np.shape(df[LABEL_COLUMN].values)))</code></li>\n<li>Code executes with error:<br>\n<code>ERROR:tensorflow:Could not create metric ops for MetricSpec(metric_fn=_predictions_streaming_mean, prediction_key=logistic, label_key=None, weight_key=class_weights)</code><br>\nFull trace of error is below.</li>\n</ol>\n<p>If we repeat this procedures with version 0.10, code works well.</p>\n<p>I tried to reshape weight feature col to [2, n], to [n, 2] - also, doesn't help.</p>\n<h3>Trace</h3>\n<pre><code>ERROR:tensorflow:Could not create metric ops for MetricSpec(metric_fn=_predictions_streaming_mean, prediction_key=logistic, label_key=None, weight_key=class_weights).\nTraceback (most recent call last):\n  File \"wide_n_deep_tutorial.py\", line 236, in &lt;module&gt;\n    tf.app.run(main=main, argv=[sys.argv[0]] + unparsed)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py\", line 44, in run\n    _sys.exit(main(_sys.argv[:1] + flags_passthrough))\n  File \"wide_n_deep_tutorial.py\", line 199, in main\n    FLAGS.train_data, FLAGS.test_data)\n  File \"wide_n_deep_tutorial.py\", line 188, in train_and_eval\n    m.fit(input_fn=lambda: input_fn(df_train), steps=train_steps)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/util/deprecation.py\", line 280, in new_func\n    return func(*args, **kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 426, in fit\n    loss = self._train_model(input_fn=input_fn, hooks=hooks)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 934, in _train_model\n    model_fn_ops = self._call_legacy_get_train_ops(features, labels)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 1003, in _call_legacy_get_train_ops\n    train_ops = self._get_train_ops(features, labels)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 1162, in _get_train_ops\n    return self._call_model_fn(features, labels, model_fn_lib.ModeKeys.TRAIN)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 1133, in _call_model_fn\n    model_fn_results = self._model_fn(features, labels, **kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/dnn_linear_combined.py\", line 312, in _dnn_linear_combined_model_fn\n    features, labels, mode, _make_training_op, logits=logits)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/head.py\", line 531, in head_ops\n    labels, predictions)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/head.py\", line 1390, in _eval_metric_ops\n    return estimator._make_metrics_ops(metrics, features, labels, predictions)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 258, in _make_metrics_ops\n    result[name] = metric.create_metric_ops(features, labels, predictions)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/metric_spec.py\", line 220, in create_metric_ops\n    weights=inputs[self.weight_key])\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/head.py\", line 1440, in _predictions_streaming_mean\n    return metrics_lib.streaming_mean(predictions, weights=weights)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/metrics/python/ops/metric_ops.py\", line 392, in streaming_mean\n    updates_collections=updates_collections, name=name)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/metrics_impl.py\", line 262, in mean\n    math_ops.to_float(weights), values)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/weights_broadcast_ops.py\", line 166, in broadcast_weights\n    with ops.control_dependencies((assert_broadcastable(weights, values),)):\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/weights_broadcast_ops.py\", line 102, in assert_broadcastable\n    weights_rank_static))\n</code></pre>\n<h3>Update 3/10/2017</h3>\n<p>Somehow in process of editing/formatting this post, forgot one line at the end of traceback:<br>\n<code>ValueError: weights can not be broadcast to values. values.rank=2. weights.rank=1.</code></p>", "body_text": "After migrating to tensorflow v1.0 of my sources, weight_column_name in estimators (tested in tf.contrib.learn.DNNLinearCombinedClassifier) seems to not working now.\nScripts now outputs this error:\nERROR:tensorflow:Could not create metric ops for MetricSpec(metric_fn=_predictions_streaming_mean, prediction_key=logistic, label_key=None, weight_key=class_weights)\nEnvironment info\nOperating System:\nCentOS Linux release 7.3.1611 (Core)\nDocker image within TF package:\n\nDocker latest image: tensorflow/tensorflow\nCreated container:\ndocker run -it -p 8888:8888 -v ..... --memory=12g tensorflow/tensorflow\nThe output from python -c \"import tensorflow; print(tensorflow.__version__)\":\n1.0.0\n\nReproducing\n\nDownload wide_n_deep_tutorial.py: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/learn/wide_n_deep_tutorial.py\n(This solely works fine)\nThen add weightings (insert lines at):\nline 26 import numpy as np\nline 130 weight_column_name='class_weights',\nline 153 feature_cols['class_weights'] = tf.constant(np.ones(np.shape(df[LABEL_COLUMN].values)))\nCode executes with error:\nERROR:tensorflow:Could not create metric ops for MetricSpec(metric_fn=_predictions_streaming_mean, prediction_key=logistic, label_key=None, weight_key=class_weights)\nFull trace of error is below.\n\nIf we repeat this procedures with version 0.10, code works well.\nI tried to reshape weight feature col to [2, n], to [n, 2] - also, doesn't help.\nTrace\nERROR:tensorflow:Could not create metric ops for MetricSpec(metric_fn=_predictions_streaming_mean, prediction_key=logistic, label_key=None, weight_key=class_weights).\nTraceback (most recent call last):\n  File \"wide_n_deep_tutorial.py\", line 236, in <module>\n    tf.app.run(main=main, argv=[sys.argv[0]] + unparsed)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py\", line 44, in run\n    _sys.exit(main(_sys.argv[:1] + flags_passthrough))\n  File \"wide_n_deep_tutorial.py\", line 199, in main\n    FLAGS.train_data, FLAGS.test_data)\n  File \"wide_n_deep_tutorial.py\", line 188, in train_and_eval\n    m.fit(input_fn=lambda: input_fn(df_train), steps=train_steps)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/util/deprecation.py\", line 280, in new_func\n    return func(*args, **kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 426, in fit\n    loss = self._train_model(input_fn=input_fn, hooks=hooks)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 934, in _train_model\n    model_fn_ops = self._call_legacy_get_train_ops(features, labels)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 1003, in _call_legacy_get_train_ops\n    train_ops = self._get_train_ops(features, labels)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 1162, in _get_train_ops\n    return self._call_model_fn(features, labels, model_fn_lib.ModeKeys.TRAIN)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 1133, in _call_model_fn\n    model_fn_results = self._model_fn(features, labels, **kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/dnn_linear_combined.py\", line 312, in _dnn_linear_combined_model_fn\n    features, labels, mode, _make_training_op, logits=logits)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/head.py\", line 531, in head_ops\n    labels, predictions)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/head.py\", line 1390, in _eval_metric_ops\n    return estimator._make_metrics_ops(metrics, features, labels, predictions)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 258, in _make_metrics_ops\n    result[name] = metric.create_metric_ops(features, labels, predictions)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/metric_spec.py\", line 220, in create_metric_ops\n    weights=inputs[self.weight_key])\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/head.py\", line 1440, in _predictions_streaming_mean\n    return metrics_lib.streaming_mean(predictions, weights=weights)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/metrics/python/ops/metric_ops.py\", line 392, in streaming_mean\n    updates_collections=updates_collections, name=name)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/metrics_impl.py\", line 262, in mean\n    math_ops.to_float(weights), values)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/weights_broadcast_ops.py\", line 166, in broadcast_weights\n    with ops.control_dependencies((assert_broadcastable(weights, values),)):\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/weights_broadcast_ops.py\", line 102, in assert_broadcastable\n    weights_rank_static))\n\nUpdate 3/10/2017\nSomehow in process of editing/formatting this post, forgot one line at the end of traceback:\nValueError: weights can not be broadcast to values. values.rank=2. weights.rank=1.", "body": "After migrating to tensorflow v1.0 of my sources, weight_column_name in estimators (tested in tf.contrib.learn.DNNLinearCombinedClassifier) seems to not working now.\r\nScripts now outputs this error:\r\n`ERROR:tensorflow:Could not create metric ops for MetricSpec(metric_fn=_predictions_streaming_mean, prediction_key=logistic, label_key=None, weight_key=class_weights)`\r\n\r\n### Environment info\r\nOperating System: \r\nCentOS Linux release 7.3.1611 (Core)\r\n\r\nDocker image within TF package:\r\n1. Docker latest image: tensorflow/tensorflow\r\nCreated container:\r\n`docker run -it -p 8888:8888 -v ..... --memory=12g tensorflow/tensorflow`\r\n2. The output from `python -c \"import tensorflow; print(tensorflow.__version__)\"`:\r\n`1.0.0`\r\n\r\n### Reproducing\r\n\r\n1. Download wide_n_deep_tutorial.py: [https://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/learn/wide_n_deep_tutorial.py](url)\r\n(This solely works fine)\r\n2. Then add weightings (insert lines at):\r\nline 26 `import numpy as np`\r\nline 130 `weight_column_name='class_weights',`\r\nline 153 `feature_cols['class_weights'] = tf.constant(np.ones(np.shape(df[LABEL_COLUMN].values)))`\r\n3. Code executes with error:\r\n`ERROR:tensorflow:Could not create metric ops for MetricSpec(metric_fn=_predictions_streaming_mean, prediction_key=logistic, label_key=None, weight_key=class_weights)`\r\nFull trace of error is below.\r\n\r\nIf we repeat this procedures with version 0.10, code works well.\r\n\r\nI tried to reshape weight feature col to [2, n], to [n, 2] - also, doesn't help.\r\n\r\n### Trace\r\n```\r\nERROR:tensorflow:Could not create metric ops for MetricSpec(metric_fn=_predictions_streaming_mean, prediction_key=logistic, label_key=None, weight_key=class_weights).\r\nTraceback (most recent call last):\r\n  File \"wide_n_deep_tutorial.py\", line 236, in <module>\r\n    tf.app.run(main=main, argv=[sys.argv[0]] + unparsed)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py\", line 44, in run\r\n    _sys.exit(main(_sys.argv[:1] + flags_passthrough))\r\n  File \"wide_n_deep_tutorial.py\", line 199, in main\r\n    FLAGS.train_data, FLAGS.test_data)\r\n  File \"wide_n_deep_tutorial.py\", line 188, in train_and_eval\r\n    m.fit(input_fn=lambda: input_fn(df_train), steps=train_steps)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/util/deprecation.py\", line 280, in new_func\r\n    return func(*args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 426, in fit\r\n    loss = self._train_model(input_fn=input_fn, hooks=hooks)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 934, in _train_model\r\n    model_fn_ops = self._call_legacy_get_train_ops(features, labels)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 1003, in _call_legacy_get_train_ops\r\n    train_ops = self._get_train_ops(features, labels)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 1162, in _get_train_ops\r\n    return self._call_model_fn(features, labels, model_fn_lib.ModeKeys.TRAIN)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 1133, in _call_model_fn\r\n    model_fn_results = self._model_fn(features, labels, **kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/dnn_linear_combined.py\", line 312, in _dnn_linear_combined_model_fn\r\n    features, labels, mode, _make_training_op, logits=logits)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/head.py\", line 531, in head_ops\r\n    labels, predictions)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/head.py\", line 1390, in _eval_metric_ops\r\n    return estimator._make_metrics_ops(metrics, features, labels, predictions)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 258, in _make_metrics_ops\r\n    result[name] = metric.create_metric_ops(features, labels, predictions)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/metric_spec.py\", line 220, in create_metric_ops\r\n    weights=inputs[self.weight_key])\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/head.py\", line 1440, in _predictions_streaming_mean\r\n    return metrics_lib.streaming_mean(predictions, weights=weights)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/metrics/python/ops/metric_ops.py\", line 392, in streaming_mean\r\n    updates_collections=updates_collections, name=name)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/metrics_impl.py\", line 262, in mean\r\n    math_ops.to_float(weights), values)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/weights_broadcast_ops.py\", line 166, in broadcast_weights\r\n    with ops.control_dependencies((assert_broadcastable(weights, values),)):\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/weights_broadcast_ops.py\", line 102, in assert_broadcastable\r\n    weights_rank_static))\r\n```\r\n### Update 3/10/2017\r\nSomehow in process of editing/formatting this post, forgot one line at the end of traceback:\r\n`ValueError: weights can not be broadcast to values. values.rank=2. weights.rank=1.`"}