{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2292", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2292/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2292/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2292/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/2292", "id": 153780753, "node_id": "MDU6SXNzdWUxNTM3ODA3NTM=", "number": 2292, "title": "Bug on specifying GPU to tutorial example minist", "user": {"login": "smartcat2010", "id": 10429114, "node_id": "MDQ6VXNlcjEwNDI5MTE0", "avatar_url": "https://avatars1.githubusercontent.com/u/10429114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smartcat2010", "html_url": "https://github.com/smartcat2010", "followers_url": "https://api.github.com/users/smartcat2010/followers", "following_url": "https://api.github.com/users/smartcat2010/following{/other_user}", "gists_url": "https://api.github.com/users/smartcat2010/gists{/gist_id}", "starred_url": "https://api.github.com/users/smartcat2010/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smartcat2010/subscriptions", "organizations_url": "https://api.github.com/users/smartcat2010/orgs", "repos_url": "https://api.github.com/users/smartcat2010/repos", "events_url": "https://api.github.com/users/smartcat2010/events{/privacy}", "received_events_url": "https://api.github.com/users/smartcat2010/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "sherrym", "id": 12770037, "node_id": "MDQ6VXNlcjEyNzcwMDM3", "avatar_url": "https://avatars0.githubusercontent.com/u/12770037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherrym", "html_url": "https://github.com/sherrym", "followers_url": "https://api.github.com/users/sherrym/followers", "following_url": "https://api.github.com/users/sherrym/following{/other_user}", "gists_url": "https://api.github.com/users/sherrym/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherrym/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherrym/subscriptions", "organizations_url": "https://api.github.com/users/sherrym/orgs", "repos_url": "https://api.github.com/users/sherrym/repos", "events_url": "https://api.github.com/users/sherrym/events{/privacy}", "received_events_url": "https://api.github.com/users/sherrym/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sherrym", "id": 12770037, "node_id": "MDQ6VXNlcjEyNzcwMDM3", "avatar_url": "https://avatars0.githubusercontent.com/u/12770037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherrym", "html_url": "https://github.com/sherrym", "followers_url": "https://api.github.com/users/sherrym/followers", "following_url": "https://api.github.com/users/sherrym/following{/other_user}", "gists_url": "https://api.github.com/users/sherrym/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherrym/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherrym/subscriptions", "organizations_url": "https://api.github.com/users/sherrym/orgs", "repos_url": "https://api.github.com/users/sherrym/repos", "events_url": "https://api.github.com/users/sherrym/events{/privacy}", "received_events_url": "https://api.github.com/users/sherrym/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2016-05-09T13:50:37Z", "updated_at": "2018-05-27T20:42:20Z", "closed_at": "2016-05-13T20:55:31Z", "author_association": "NONE", "body_html": "<p>I tried to specify GPU ID to run the tutorial example <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/tutorials/mnist/fully_connected_feed.py\">mnist</a>. I change the code to:</p>\n<pre><code>with tf.device('/gpu:3\u2018):\n    # Generate placeholders for the images and labels.\n    images_placeholder, labels_placeholder = placeholder_inputs(\n        FLAGS.batch_size)\n    # Build a Graph that computes predictions from the inference model.\n    logits = mnist.inference(images_placeholder,\n                                FLAGS.hidden1,\n                                FLAGS.hidden2)\n    # Add to the Graph the Ops for loss calculation.\n    loss = mnist.loss(logits, labels_placeholder)\n\n    # Add to the Graph the Ops that calculate and apply gradients.\n    train_op = mnist.training(loss, FLAGS.learning_rate)\n</code></pre>\n<p>Then it reports error when running:</p>\n<p>tensorflow.python.framework.errors.InvalidArgumentError: Cannot assign a device to node 'global_step': Could not satisfy explicit device specification '/device:GPU:3' because no supported kernel for GPU devices is available<br>\n[[Node: global_step = Variable<a href=\"\">container=\"\", dtype=DT_INT32, shape=[], shared_name=\"\", _device=\"/device:GPU:3\"</a>]]<br>\nCaused by op u'global_step', defined at:<br>\nFile \"fully_connected_feed.py\", line 232, in <br>\ntf.app.run()<br>\nFile \"/usr/lib/python2.7/site-packages/tensorflow/python/platform/app.py\", line 30, in run<br>\nsys.exit(main(sys.argv))<br>\nFile \"fully_connected_feed.py\", line 228, in main<br>\nrun_training()<br>\nFile \"fully_connected_feed.py\", line 150, in run_training<br>\ntrain_op = mnist.training(loss, FLAGS.learning_rate)<br>\nFile \"/search/guangliang/package/tensorflow/tensorflow/examples/tutorials/mnist/mnist.py\", line 125, in training<br>\nglobal_step = tf.Variable(0, name='global_step', trainable=False)<br>\nFile \"/usr/lib/python2.7/site-packages/tensorflow/python/ops/variables.py\", line 209, in <strong>init</strong><br>\ndtype=dtype)<br>\n...</p>\n<p>Then I fix the line 125 in \"mnist.py\" with the following code:</p>\n<p>with tf.device('/cpu:0'):<br>\nglobal_step = tf.Variable(0, name='global_step', trainable=False)</p>\n<p>Then it reports the following error on rerunning:</p>\n<p>tensorflow.python.framework.errors.InvalidArgumentError: Cannot assign a device to node 'gradients/xentropy_mean_grad/Prod': Could not satisfy explicit device specification '/device:GPU:3' because no supported kernel for GPU devices is available<br>\n[[Node: gradients/xentropy_mean_grad/Prod = Prod[T=DT_INT32, keep_dims=false, _device=\"/device:GPU:3\"](gradients/xentropy_mean_grad/Shape_2, gradients/xentropy_mean_grad/range_1)]]<br>\nCaused by op u'gradients/xentropy_mean_grad/Prod', defined at:<br>\nFile \"fully_connected_feed.py\", line 232, in <br>\ntf.app.run()<br>\nFile \"/usr/lib/python2.7/site-packages/tensorflow/python/platform/app.py\", line 30, in run<br>\nsys.exit(main(sys.argv))<br>\nFile \"fully_connected_feed.py\", line 228, in main<br>\nrun_training()<br>\nFile \"fully_connected_feed.py\", line 150, in run_training<br>\ntrain_op = mnist.training(loss, FLAGS.learning_rate)<br>\nFile \"/search/guangliang/package/tensorflow/tensorflow/examples/tutorials/mnist/mnist.py\", line 129, in training<br>\ntrain_op = optimizer.minimize(loss, global_step=global_step)<br>\nFile \"/usr/lib/python2.7/site-packages/tensorflow/python/training/optimizer.py\", line 190, in minimize<br>\ncolocate_gradients_with_ops=colocate_gradients_with_ops)<br>\n...</p>\n<p>Would you please help on this?<br>\nThanks a lot in advance!</p>", "body_text": "I tried to specify GPU ID to run the tutorial example mnist. I change the code to:\nwith tf.device('/gpu:3\u2018):\n    # Generate placeholders for the images and labels.\n    images_placeholder, labels_placeholder = placeholder_inputs(\n        FLAGS.batch_size)\n    # Build a Graph that computes predictions from the inference model.\n    logits = mnist.inference(images_placeholder,\n                                FLAGS.hidden1,\n                                FLAGS.hidden2)\n    # Add to the Graph the Ops for loss calculation.\n    loss = mnist.loss(logits, labels_placeholder)\n\n    # Add to the Graph the Ops that calculate and apply gradients.\n    train_op = mnist.training(loss, FLAGS.learning_rate)\n\nThen it reports error when running:\ntensorflow.python.framework.errors.InvalidArgumentError: Cannot assign a device to node 'global_step': Could not satisfy explicit device specification '/device:GPU:3' because no supported kernel for GPU devices is available\n[[Node: global_step = Variablecontainer=\"\", dtype=DT_INT32, shape=[], shared_name=\"\", _device=\"/device:GPU:3\"]]\nCaused by op u'global_step', defined at:\nFile \"fully_connected_feed.py\", line 232, in \ntf.app.run()\nFile \"/usr/lib/python2.7/site-packages/tensorflow/python/platform/app.py\", line 30, in run\nsys.exit(main(sys.argv))\nFile \"fully_connected_feed.py\", line 228, in main\nrun_training()\nFile \"fully_connected_feed.py\", line 150, in run_training\ntrain_op = mnist.training(loss, FLAGS.learning_rate)\nFile \"/search/guangliang/package/tensorflow/tensorflow/examples/tutorials/mnist/mnist.py\", line 125, in training\nglobal_step = tf.Variable(0, name='global_step', trainable=False)\nFile \"/usr/lib/python2.7/site-packages/tensorflow/python/ops/variables.py\", line 209, in init\ndtype=dtype)\n...\nThen I fix the line 125 in \"mnist.py\" with the following code:\nwith tf.device('/cpu:0'):\nglobal_step = tf.Variable(0, name='global_step', trainable=False)\nThen it reports the following error on rerunning:\ntensorflow.python.framework.errors.InvalidArgumentError: Cannot assign a device to node 'gradients/xentropy_mean_grad/Prod': Could not satisfy explicit device specification '/device:GPU:3' because no supported kernel for GPU devices is available\n[[Node: gradients/xentropy_mean_grad/Prod = Prod[T=DT_INT32, keep_dims=false, _device=\"/device:GPU:3\"](gradients/xentropy_mean_grad/Shape_2, gradients/xentropy_mean_grad/range_1)]]\nCaused by op u'gradients/xentropy_mean_grad/Prod', defined at:\nFile \"fully_connected_feed.py\", line 232, in \ntf.app.run()\nFile \"/usr/lib/python2.7/site-packages/tensorflow/python/platform/app.py\", line 30, in run\nsys.exit(main(sys.argv))\nFile \"fully_connected_feed.py\", line 228, in main\nrun_training()\nFile \"fully_connected_feed.py\", line 150, in run_training\ntrain_op = mnist.training(loss, FLAGS.learning_rate)\nFile \"/search/guangliang/package/tensorflow/tensorflow/examples/tutorials/mnist/mnist.py\", line 129, in training\ntrain_op = optimizer.minimize(loss, global_step=global_step)\nFile \"/usr/lib/python2.7/site-packages/tensorflow/python/training/optimizer.py\", line 190, in minimize\ncolocate_gradients_with_ops=colocate_gradients_with_ops)\n...\nWould you please help on this?\nThanks a lot in advance!", "body": "I tried to specify GPU ID to run the tutorial example [mnist](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/tutorials/mnist/fully_connected_feed.py). I change the code to:\n\n```\nwith tf.device('/gpu:3\u2018):\n    # Generate placeholders for the images and labels.\n    images_placeholder, labels_placeholder = placeholder_inputs(\n        FLAGS.batch_size)\n    # Build a Graph that computes predictions from the inference model.\n    logits = mnist.inference(images_placeholder,\n                                FLAGS.hidden1,\n                                FLAGS.hidden2)\n    # Add to the Graph the Ops for loss calculation.\n    loss = mnist.loss(logits, labels_placeholder)\n\n    # Add to the Graph the Ops that calculate and apply gradients.\n    train_op = mnist.training(loss, FLAGS.learning_rate)\n```\n\nThen it reports error when running:\n\ntensorflow.python.framework.errors.InvalidArgumentError: Cannot assign a device to node 'global_step': Could not satisfy explicit device specification '/device:GPU:3' because no supported kernel for GPU devices is available\n     [[Node: global_step = Variable[container=\"\", dtype=DT_INT32, shape=[], shared_name=\"\", _device=\"/device:GPU:3\"]()]]\nCaused by op u'global_step', defined at:\n  File \"fully_connected_feed.py\", line 232, in <module>\n    tf.app.run()\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/platform/app.py\", line 30, in run\n    sys.exit(main(sys.argv))\n  File \"fully_connected_feed.py\", line 228, in main\n    run_training()\n  File \"fully_connected_feed.py\", line 150, in run_training\n    train_op = mnist.training(loss, FLAGS.learning_rate)\n  File \"/search/guangliang/package/tensorflow/tensorflow/examples/tutorials/mnist/mnist.py\", line 125, in training\n    global_step = tf.Variable(0, name='global_step', trainable=False)\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/ops/variables.py\", line 209, in **init**\n    dtype=dtype)\n...\n\nThen I fix the line 125 in \"mnist.py\" with the following code:\n\n  with tf.device('/cpu:0'):\n    global_step = tf.Variable(0, name='global_step', trainable=False)\n\nThen it reports the following error on rerunning:\n\ntensorflow.python.framework.errors.InvalidArgumentError: Cannot assign a device to node 'gradients/xentropy_mean_grad/Prod': Could not satisfy explicit device specification '/device:GPU:3' because no supported kernel for GPU devices is available\n     [[Node: gradients/xentropy_mean_grad/Prod = Prod[T=DT_INT32, keep_dims=false, _device=\"/device:GPU:3\"](gradients/xentropy_mean_grad/Shape_2, gradients/xentropy_mean_grad/range_1)]]\nCaused by op u'gradients/xentropy_mean_grad/Prod', defined at:\n  File \"fully_connected_feed.py\", line 232, in <module>\n    tf.app.run()\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/platform/app.py\", line 30, in run\n    sys.exit(main(sys.argv))\n  File \"fully_connected_feed.py\", line 228, in main\n    run_training()\n  File \"fully_connected_feed.py\", line 150, in run_training\n    train_op = mnist.training(loss, FLAGS.learning_rate)\n  File \"/search/guangliang/package/tensorflow/tensorflow/examples/tutorials/mnist/mnist.py\", line 129, in training\n    train_op = optimizer.minimize(loss, global_step=global_step)\n  File \"/usr/lib/python2.7/site-packages/tensorflow/python/training/optimizer.py\", line 190, in minimize\n    colocate_gradients_with_ops=colocate_gradients_with_ops)\n...\n\nWould you please help on this?\nThanks a lot in advance!\n"}