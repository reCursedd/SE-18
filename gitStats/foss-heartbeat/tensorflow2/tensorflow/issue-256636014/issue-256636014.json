{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12961", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12961/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12961/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12961/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/12961", "id": 256636014, "node_id": "MDU6SXNzdWUyNTY2MzYwMTQ=", "number": 12961, "title": "Different confidence with same model.pb from android and python", "user": {"login": "sfshine", "id": 3046831, "node_id": "MDQ6VXNlcjMwNDY4MzE=", "avatar_url": "https://avatars0.githubusercontent.com/u/3046831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfshine", "html_url": "https://github.com/sfshine", "followers_url": "https://api.github.com/users/sfshine/followers", "following_url": "https://api.github.com/users/sfshine/following{/other_user}", "gists_url": "https://api.github.com/users/sfshine/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfshine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfshine/subscriptions", "organizations_url": "https://api.github.com/users/sfshine/orgs", "repos_url": "https://api.github.com/users/sfshine/repos", "events_url": "https://api.github.com/users/sfshine/events{/privacy}", "received_events_url": "https://api.github.com/users/sfshine/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-11T09:22:22Z", "updated_at": "2017-09-11T18:17:00Z", "closed_at": "2017-09-11T18:17:00Z", "author_association": "NONE", "body_html": "<p>I trained a model.pb with python, and put it in android.<br>\nwell, I find the confidence score that in android is always lower than python application  on my PC.<br>\nAFAIK, for android model.pb, I did not use DecodeJpeg because it not support on Android.</p>\n<p>Is there anything wrong or different with DecodeJpeg in android example when processing image?</p>\n<pre><code>    Trace.beginSection(\"preprocessBitmap\");\n    // Preprocess the image data from 0-255 int to normalized float based\n    // on the provided parameters.\n    bitmap.getPixels(intValues, 0, bitmap.getWidth(), 0, 0, bitmap.getWidth(), bitmap.getHeight());\n    for (int i = 0; i &lt; intValues.length; ++i) {\n        final int val = intValues[i];\n        floatValues[i * 3 + 0] = (((val &gt;&gt; 16) &amp; 0xFF) - imageMean) / imageStd;\n        floatValues[i * 3 + 1] = (((val &gt;&gt; 8) &amp; 0xFF) - imageMean) / imageStd;\n        floatValues[i * 3 + 2] = ((val &amp; 0xFF) - imageMean) / imageStd;\n    }\n    Trace.endSection();\n</code></pre>", "body_text": "I trained a model.pb with python, and put it in android.\nwell, I find the confidence score that in android is always lower than python application  on my PC.\nAFAIK, for android model.pb, I did not use DecodeJpeg because it not support on Android.\nIs there anything wrong or different with DecodeJpeg in android example when processing image?\n    Trace.beginSection(\"preprocessBitmap\");\n    // Preprocess the image data from 0-255 int to normalized float based\n    // on the provided parameters.\n    bitmap.getPixels(intValues, 0, bitmap.getWidth(), 0, 0, bitmap.getWidth(), bitmap.getHeight());\n    for (int i = 0; i < intValues.length; ++i) {\n        final int val = intValues[i];\n        floatValues[i * 3 + 0] = (((val >> 16) & 0xFF) - imageMean) / imageStd;\n        floatValues[i * 3 + 1] = (((val >> 8) & 0xFF) - imageMean) / imageStd;\n        floatValues[i * 3 + 2] = ((val & 0xFF) - imageMean) / imageStd;\n    }\n    Trace.endSection();", "body": "I trained a model.pb with python, and put it in android. \r\nwell, I find the confidence score that in android is always lower than python application  on my PC.\r\nAFAIK, for android model.pb, I did not use DecodeJpeg because it not support on Android.\r\n\r\nIs there anything wrong or different with DecodeJpeg in android example when processing image?\r\n\r\n\r\n\r\n        Trace.beginSection(\"preprocessBitmap\");\r\n        // Preprocess the image data from 0-255 int to normalized float based\r\n        // on the provided parameters.\r\n        bitmap.getPixels(intValues, 0, bitmap.getWidth(), 0, 0, bitmap.getWidth(), bitmap.getHeight());\r\n        for (int i = 0; i < intValues.length; ++i) {\r\n            final int val = intValues[i];\r\n            floatValues[i * 3 + 0] = (((val >> 16) & 0xFF) - imageMean) / imageStd;\r\n            floatValues[i * 3 + 1] = (((val >> 8) & 0xFF) - imageMean) / imageStd;\r\n            floatValues[i * 3 + 2] = ((val & 0xFF) - imageMean) / imageStd;\r\n        }\r\n        Trace.endSection();\r\n"}