{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/381301908", "html_url": "https://github.com/tensorflow/tensorflow/issues/1029#issuecomment-381301908", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1029", "id": 381301908, "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTMwMTkwOA==", "user": {"login": "dcunhas", "id": 5341440, "node_id": "MDQ6VXNlcjUzNDE0NDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/5341440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dcunhas", "html_url": "https://github.com/dcunhas", "followers_url": "https://api.github.com/users/dcunhas/followers", "following_url": "https://api.github.com/users/dcunhas/following{/other_user}", "gists_url": "https://api.github.com/users/dcunhas/gists{/gist_id}", "starred_url": "https://api.github.com/users/dcunhas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dcunhas/subscriptions", "organizations_url": "https://api.github.com/users/dcunhas/orgs", "repos_url": "https://api.github.com/users/dcunhas/repos", "events_url": "https://api.github.com/users/dcunhas/events{/privacy}", "received_events_url": "https://api.github.com/users/dcunhas/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-14T04:13:45Z", "updated_at": "2018-04-14T04:16:19Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=11607954\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Alex-zhai\">@Alex-zhai</a> You don't need to go that far. You can directly do:</p>\n<pre><code>image_string = tf.read_file(filename)\nimage_decoded = tf.image.decode_jpeg(image_string, channels=3)\n</code></pre>\n<p>Based on the documentation (and my own usage), \"This op also supports decoding PNGs and non-animated GIFs since the interface is the same, though it is cleaner to use tf.image.decode_image.\" <code>tf.image.decode_png</code> is the same. <code>tf.image.decode_image</code> is what causes the bug, and thus can obviously not be used.</p>", "body_text": "@Alex-zhai You don't need to go that far. You can directly do:\nimage_string = tf.read_file(filename)\nimage_decoded = tf.image.decode_jpeg(image_string, channels=3)\n\nBased on the documentation (and my own usage), \"This op also supports decoding PNGs and non-animated GIFs since the interface is the same, though it is cleaner to use tf.image.decode_image.\" tf.image.decode_png is the same. tf.image.decode_image is what causes the bug, and thus can obviously not be used.", "body": "@Alex-zhai You don't need to go that far. You can directly do:\r\n```\r\nimage_string = tf.read_file(filename)\r\nimage_decoded = tf.image.decode_jpeg(image_string, channels=3)\r\n```\r\nBased on the documentation (and my own usage), \"This op also supports decoding PNGs and non-animated GIFs since the interface is the same, though it is cleaner to use tf.image.decode_image.\" `tf.image.decode_png` is the same. `tf.image.decode_image` is what causes the bug, and thus can obviously not be used."}