{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/330625231", "html_url": "https://github.com/tensorflow/tensorflow/issues/1029#issuecomment-330625231", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1029", "id": 330625231, "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDYyNTIzMQ==", "user": {"login": "joeyearsley", "id": 1836025, "node_id": "MDQ6VXNlcjE4MzYwMjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1836025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joeyearsley", "html_url": "https://github.com/joeyearsley", "followers_url": "https://api.github.com/users/joeyearsley/followers", "following_url": "https://api.github.com/users/joeyearsley/following{/other_user}", "gists_url": "https://api.github.com/users/joeyearsley/gists{/gist_id}", "starred_url": "https://api.github.com/users/joeyearsley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joeyearsley/subscriptions", "organizations_url": "https://api.github.com/users/joeyearsley/orgs", "repos_url": "https://api.github.com/users/joeyearsley/repos", "events_url": "https://api.github.com/users/joeyearsley/events{/privacy}", "received_events_url": "https://api.github.com/users/joeyearsley/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-19T18:13:50Z", "updated_at": "2017-09-19T18:14:21Z", "author_association": "CONTRIBUTOR", "body_html": "<p>For anyone else who runs into this problem, using the example above with the assumption of 3 Dims:</p>\n<pre><code>decoded_image = tf.image.decode_image(encoded_image_data, channels=3)\ndecoded_image.set_shape([None, None, None])\nresized_image = tf.image.resize_images(decode_image, (800, 600))\n</code></pre>\n<p>This allows <code>ndims</code> to be returned (i.e. not be <code>None</code>) whilst allowing flexibility of resizing differently sized images.</p>", "body_text": "For anyone else who runs into this problem, using the example above with the assumption of 3 Dims:\ndecoded_image = tf.image.decode_image(encoded_image_data, channels=3)\ndecoded_image.set_shape([None, None, None])\nresized_image = tf.image.resize_images(decode_image, (800, 600))\n\nThis allows ndims to be returned (i.e. not be None) whilst allowing flexibility of resizing differently sized images.", "body": "For anyone else who runs into this problem, using the example above with the assumption of 3 Dims:\r\n```\r\ndecoded_image = tf.image.decode_image(encoded_image_data, channels=3)\r\ndecoded_image.set_shape([None, None, None])\r\nresized_image = tf.image.resize_images(decode_image, (800, 600))\r\n```\r\n\r\nThis allows `ndims` to be returned (i.e. not be `None`) whilst allowing flexibility of resizing differently sized images."}