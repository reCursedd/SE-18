{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/326784974", "html_url": "https://github.com/tensorflow/tensorflow/issues/1029#issuecomment-326784974", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1029", "id": 326784974, "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjc4NDk3NA==", "user": {"login": "Mistobaan", "id": 112599, "node_id": "MDQ6VXNlcjExMjU5OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/112599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mistobaan", "html_url": "https://github.com/Mistobaan", "followers_url": "https://api.github.com/users/Mistobaan/followers", "following_url": "https://api.github.com/users/Mistobaan/following{/other_user}", "gists_url": "https://api.github.com/users/Mistobaan/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mistobaan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mistobaan/subscriptions", "organizations_url": "https://api.github.com/users/Mistobaan/orgs", "repos_url": "https://api.github.com/users/Mistobaan/repos", "events_url": "https://api.github.com/users/Mistobaan/events{/privacy}", "received_events_url": "https://api.github.com/users/Mistobaan/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-03T05:15:57Z", "updated_at": "2017-09-03T05:15:57Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I think this is still a problem that should be addressed. Is a simple operation and it could be useful if you don't want to depend on other image libraries to do simple image transformations.<br>\nHere is an example that shows the problem:</p>\n<pre><code>import tensorflow as tf\n\n\nencoded_image_data = tf.placeholder(dtype=tf.string)\ndecoded_image = tf.image.decode_image(encoded_image_data, channels=3)\nresized_image = tf.image.resize_images(decode_image, (800, 600))\nencoded_image = tf.image.encode_jpeg(resized_image)\n\nimport urllib2\nfd = urllib2.urlopen('https://c8.staticflickr.com/6/5753/20965045223_b809050285_o.jpg')\ndata = fd.read()\n    \nwith tf.Session() as sess:\n    sess.run([encoded_image], { encoded_image_data: data}) \n</code></pre>\n<p>output:</p>\n<pre><code>---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n&lt;ipython-input-41-bbd519ee1c20&gt; in &lt;module&gt;()\n      4 encoded_image_data = tf.placeholder(dtype=tf.string)\n      5 decoded_image = tf.image.decode_image(encoded_image_data, channels=3)\n----&gt; 6 resized_image = tf.image.resize_images(decode_image, (800, 600))\n      7 encoded_image = tf.image.encode_jpeg(resized_image)\n      8 \n\n/home/fmilo/anaconda2/envs/tensorflow_built/lib/python2.7/site-packages/tensorflow/python/ops/image_ops_impl.pyc in resize_images(images, size, method, align_corners)\n    730   images = ops.convert_to_tensor(images, name='images')\n    731   if images.get_shape().ndims is None:\n--&gt; 732     raise ValueError('\\'images\\' contains no shape.')\n    733   # TODO(shlens): Migrate this functionality to the underlying Op's.\n    734   is_batch = True\n\nValueError: 'images' contains no shape.\n\n</code></pre>", "body_text": "I think this is still a problem that should be addressed. Is a simple operation and it could be useful if you don't want to depend on other image libraries to do simple image transformations.\nHere is an example that shows the problem:\nimport tensorflow as tf\n\n\nencoded_image_data = tf.placeholder(dtype=tf.string)\ndecoded_image = tf.image.decode_image(encoded_image_data, channels=3)\nresized_image = tf.image.resize_images(decode_image, (800, 600))\nencoded_image = tf.image.encode_jpeg(resized_image)\n\nimport urllib2\nfd = urllib2.urlopen('https://c8.staticflickr.com/6/5753/20965045223_b809050285_o.jpg')\ndata = fd.read()\n    \nwith tf.Session() as sess:\n    sess.run([encoded_image], { encoded_image_data: data}) \n\noutput:\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n<ipython-input-41-bbd519ee1c20> in <module>()\n      4 encoded_image_data = tf.placeholder(dtype=tf.string)\n      5 decoded_image = tf.image.decode_image(encoded_image_data, channels=3)\n----> 6 resized_image = tf.image.resize_images(decode_image, (800, 600))\n      7 encoded_image = tf.image.encode_jpeg(resized_image)\n      8 \n\n/home/fmilo/anaconda2/envs/tensorflow_built/lib/python2.7/site-packages/tensorflow/python/ops/image_ops_impl.pyc in resize_images(images, size, method, align_corners)\n    730   images = ops.convert_to_tensor(images, name='images')\n    731   if images.get_shape().ndims is None:\n--> 732     raise ValueError('\\'images\\' contains no shape.')\n    733   # TODO(shlens): Migrate this functionality to the underlying Op's.\n    734   is_batch = True\n\nValueError: 'images' contains no shape.", "body": "I think this is still a problem that should be addressed. Is a simple operation and it could be useful if you don't want to depend on other image libraries to do simple image transformations.\r\nHere is an example that shows the problem:\r\n\r\n```\r\nimport tensorflow as tf\r\n\r\n\r\nencoded_image_data = tf.placeholder(dtype=tf.string)\r\ndecoded_image = tf.image.decode_image(encoded_image_data, channels=3)\r\nresized_image = tf.image.resize_images(decode_image, (800, 600))\r\nencoded_image = tf.image.encode_jpeg(resized_image)\r\n\r\nimport urllib2\r\nfd = urllib2.urlopen('https://c8.staticflickr.com/6/5753/20965045223_b809050285_o.jpg')\r\ndata = fd.read()\r\n    \r\nwith tf.Session() as sess:\r\n    sess.run([encoded_image], { encoded_image_data: data}) \r\n```\r\n\r\noutput:\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-41-bbd519ee1c20> in <module>()\r\n      4 encoded_image_data = tf.placeholder(dtype=tf.string)\r\n      5 decoded_image = tf.image.decode_image(encoded_image_data, channels=3)\r\n----> 6 resized_image = tf.image.resize_images(decode_image, (800, 600))\r\n      7 encoded_image = tf.image.encode_jpeg(resized_image)\r\n      8 \r\n\r\n/home/fmilo/anaconda2/envs/tensorflow_built/lib/python2.7/site-packages/tensorflow/python/ops/image_ops_impl.pyc in resize_images(images, size, method, align_corners)\r\n    730   images = ops.convert_to_tensor(images, name='images')\r\n    731   if images.get_shape().ndims is None:\r\n--> 732     raise ValueError('\\'images\\' contains no shape.')\r\n    733   # TODO(shlens): Migrate this functionality to the underlying Op's.\r\n    734   is_batch = True\r\n\r\nValueError: 'images' contains no shape.\r\n\r\n```\r\n\r\n"}