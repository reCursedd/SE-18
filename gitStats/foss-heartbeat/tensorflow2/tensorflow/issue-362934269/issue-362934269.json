{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22471", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22471/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22471/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22471/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/22471", "id": 362934269, "node_id": "MDU6SXNzdWUzNjI5MzQyNjk=", "number": 22471, "title": "How to use runStats() and view more detail of debug information in the android image classify demo?", "user": {"login": "jamesdeep", "id": 14329360, "node_id": "MDQ6VXNlcjE0MzI5MzYw", "avatar_url": "https://avatars3.githubusercontent.com/u/14329360?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamesdeep", "html_url": "https://github.com/jamesdeep", "followers_url": "https://api.github.com/users/jamesdeep/followers", "following_url": "https://api.github.com/users/jamesdeep/following{/other_user}", "gists_url": "https://api.github.com/users/jamesdeep/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamesdeep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamesdeep/subscriptions", "organizations_url": "https://api.github.com/users/jamesdeep/orgs", "repos_url": "https://api.github.com/users/jamesdeep/repos", "events_url": "https://api.github.com/users/jamesdeep/events{/privacy}", "received_events_url": "https://api.github.com/users/jamesdeep/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "wt-huang", "id": 42785337, "node_id": "MDQ6VXNlcjQyNzg1MzM3", "avatar_url": "https://avatars0.githubusercontent.com/u/42785337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wt-huang", "html_url": "https://github.com/wt-huang", "followers_url": "https://api.github.com/users/wt-huang/followers", "following_url": "https://api.github.com/users/wt-huang/following{/other_user}", "gists_url": "https://api.github.com/users/wt-huang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wt-huang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wt-huang/subscriptions", "organizations_url": "https://api.github.com/users/wt-huang/orgs", "repos_url": "https://api.github.com/users/wt-huang/repos", "events_url": "https://api.github.com/users/wt-huang/events{/privacy}", "received_events_url": "https://api.github.com/users/wt-huang/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "wt-huang", "id": 42785337, "node_id": "MDQ6VXNlcjQyNzg1MzM3", "avatar_url": "https://avatars0.githubusercontent.com/u/42785337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wt-huang", "html_url": "https://github.com/wt-huang", "followers_url": "https://api.github.com/users/wt-huang/followers", "following_url": "https://api.github.com/users/wt-huang/following{/other_user}", "gists_url": "https://api.github.com/users/wt-huang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wt-huang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wt-huang/subscriptions", "organizations_url": "https://api.github.com/users/wt-huang/orgs", "repos_url": "https://api.github.com/users/wt-huang/repos", "events_url": "https://api.github.com/users/wt-huang/events{/privacy}", "received_events_url": "https://api.github.com/users/wt-huang/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-09-23T11:14:57Z", "updated_at": "2018-09-29T03:33:40Z", "closed_at": "2018-09-29T03:33:40Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:<br>\nyes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:<br>\nandroid and Ubuntu 16.04</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>:<br>\nXiaomi Max2</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:<br>\nbinary</li>\n<li><strong>TensorFlow version (use command below)</strong>:<br>\nthe latest</li>\n<li><strong>Python version</strong>:<br>\n3.5</li>\n<li><strong>Bazel version</strong>:<br>\nN/A</li>\n<li><strong>CUDA/cuDNN version</strong>:<br>\nN/A</li>\n<li><strong>GPU model and memory</strong>:<br>\nN/A</li>\n<li><strong>Exact command to reproduce</strong>:<br>\nN/A</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I am doing a research of tensorflow on mobile devices and I get started in the android image classify demo.<br>\nI want to fetch the detail debug information while running pre-trianed model on android devices, and I notice the debug indormation can be fetched through pressing volume button while running the demo as the following:<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/14329360/45927296-e46fcd80-bf63-11e8-922c-9c6d2d9695a1.jpg\"><img src=\"https://user-images.githubusercontent.com/14329360/45927296-e46fcd80-bf63-11e8-922c-9c6d2d9695a1.jpg\" alt=\"20180923190653\" style=\"max-width:100%;\"></a></p>\n<p>However I can not find where to fetch the original debug data listed in the figure. Can someone tell me where to fetch these debug datas? Also the meaning of some of the datas are vague, for example [start], [first], what does these parameters mean? It is important of my research and hope someone could explain these, thx!</p>\n<h3>Source code / logs</h3>\n<p>private void renderDebug(final Canvas canvas) {<br>\nif (!isDebug()) {<br>\nreturn;<br>\n}<br>\nfinal Bitmap copy = cropCopyBitmap;<br>\nif (copy != null) {<br>\nfinal Matrix matrix = new Matrix();<br>\nfinal float scaleFactor = 2;<br>\nmatrix.postScale(scaleFactor, scaleFactor);<br>\nmatrix.postTranslate(<br>\ncanvas.getWidth() - copy.getWidth() * scaleFactor,<br>\ncanvas.getHeight() - copy.getHeight() * scaleFactor);<br>\ncanvas.drawBitmap(copy, matrix, new Paint());</p>\n<pre><code>  final Vector&lt;String&gt; lines = new Vector&lt;String&gt;();\n  if (classifier != null) {\n    String statString = classifier.getStatString();// Here is where the core debug information come from, \n                                                                         //but I can not get more information!\n    String[] statLines = statString.split(\"\\n\");\n    for (String line : statLines) {\n      lines.add(line);\n    }\n  }\n\n  lines.add(\"Frame: \" + previewWidth + \"x\" + previewHeight);\n  lines.add(\"Crop: \" + copy.getWidth() + \"x\" + copy.getHeight());\n  lines.add(\"View: \" + canvas.getWidth() + \"x\" + canvas.getHeight());\n  lines.add(\"Rotation: \" + sensorOrientation);\n  lines.add(\"Inference time: \" + lastProcessingTimeMs + \"ms\");\n\n  borderedText.drawLines(canvas, 10, canvas.getHeight() - 10, lines);\n}\n</code></pre>\n<p>}</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nyes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nandroid and Ubuntu 16.04\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:\nXiaomi Max2\nTensorFlow installed from (source or binary):\nbinary\nTensorFlow version (use command below):\nthe latest\nPython version:\n3.5\nBazel version:\nN/A\nCUDA/cuDNN version:\nN/A\nGPU model and memory:\nN/A\nExact command to reproduce:\nN/A\n\nDescribe the problem\nI am doing a research of tensorflow on mobile devices and I get started in the android image classify demo.\nI want to fetch the detail debug information while running pre-trianed model on android devices, and I notice the debug indormation can be fetched through pressing volume button while running the demo as the following:\n\nHowever I can not find where to fetch the original debug data listed in the figure. Can someone tell me where to fetch these debug datas? Also the meaning of some of the datas are vague, for example [start], [first], what does these parameters mean? It is important of my research and hope someone could explain these, thx!\nSource code / logs\nprivate void renderDebug(final Canvas canvas) {\nif (!isDebug()) {\nreturn;\n}\nfinal Bitmap copy = cropCopyBitmap;\nif (copy != null) {\nfinal Matrix matrix = new Matrix();\nfinal float scaleFactor = 2;\nmatrix.postScale(scaleFactor, scaleFactor);\nmatrix.postTranslate(\ncanvas.getWidth() - copy.getWidth() * scaleFactor,\ncanvas.getHeight() - copy.getHeight() * scaleFactor);\ncanvas.drawBitmap(copy, matrix, new Paint());\n  final Vector<String> lines = new Vector<String>();\n  if (classifier != null) {\n    String statString = classifier.getStatString();// Here is where the core debug information come from, \n                                                                         //but I can not get more information!\n    String[] statLines = statString.split(\"\\n\");\n    for (String line : statLines) {\n      lines.add(line);\n    }\n  }\n\n  lines.add(\"Frame: \" + previewWidth + \"x\" + previewHeight);\n  lines.add(\"Crop: \" + copy.getWidth() + \"x\" + copy.getHeight());\n  lines.add(\"View: \" + canvas.getWidth() + \"x\" + canvas.getHeight());\n  lines.add(\"Rotation: \" + sensorOrientation);\n  lines.add(\"Inference time: \" + lastProcessingTimeMs + \"ms\");\n\n  borderedText.drawLines(canvas, 10, canvas.getHeight() - 10, lines);\n}\n\n}", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nyes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nandroid and Ubuntu 16.04\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**:\r\nXiaomi Max2\r\n- **TensorFlow installed from (source or binary)**:\r\nbinary\r\n- **TensorFlow version (use command below)**:\r\nthe latest\r\n- **Python version**:\r\n3.5\r\n- **Bazel version**:\r\nN/A\r\n- **CUDA/cuDNN version**:\r\nN/A\r\n- **GPU model and memory**:\r\nN/A\r\n- **Exact command to reproduce**:\r\nN/A\r\n\r\n### Describe the problem\r\nI am doing a research of tensorflow on mobile devices and I get started in the android image classify demo.\r\nI want to fetch the detail debug information while running pre-trianed model on android devices, and I notice the debug indormation can be fetched through pressing volume button while running the demo as the following:\r\n![20180923190653](https://user-images.githubusercontent.com/14329360/45927296-e46fcd80-bf63-11e8-922c-9c6d2d9695a1.jpg)\r\n\r\nHowever I can not find where to fetch the original debug data listed in the figure. Can someone tell me where to fetch these debug datas? Also the meaning of some of the datas are vague, for example [start], [first], what does these parameters mean? It is important of my research and hope someone could explain these, thx!\r\n\r\n\r\n### Source code / logs\r\n  private void renderDebug(final Canvas canvas) {\r\n    if (!isDebug()) {\r\n      return;\r\n    }\r\n    final Bitmap copy = cropCopyBitmap;\r\n    if (copy != null) {\r\n      final Matrix matrix = new Matrix();\r\n      final float scaleFactor = 2;\r\n      matrix.postScale(scaleFactor, scaleFactor);\r\n      matrix.postTranslate(\r\n          canvas.getWidth() - copy.getWidth() * scaleFactor,\r\n          canvas.getHeight() - copy.getHeight() * scaleFactor);\r\n      canvas.drawBitmap(copy, matrix, new Paint());\r\n\r\n      final Vector<String> lines = new Vector<String>();\r\n      if (classifier != null) {\r\n        String statString = classifier.getStatString();// Here is where the core debug information come from, \r\n                                                                             //but I can not get more information!\r\n        String[] statLines = statString.split(\"\\n\");\r\n        for (String line : statLines) {\r\n          lines.add(line);\r\n        }\r\n      }\r\n\r\n      lines.add(\"Frame: \" + previewWidth + \"x\" + previewHeight);\r\n      lines.add(\"Crop: \" + copy.getWidth() + \"x\" + copy.getHeight());\r\n      lines.add(\"View: \" + canvas.getWidth() + \"x\" + canvas.getHeight());\r\n      lines.add(\"Rotation: \" + sensorOrientation);\r\n      lines.add(\"Inference time: \" + lastProcessingTimeMs + \"ms\");\r\n\r\n      borderedText.drawLines(canvas, 10, canvas.getHeight() - 10, lines);\r\n    }\r\n  }\r\n\r\n\r\n\r\n"}