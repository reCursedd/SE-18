{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/194583669", "pull_request_review_id": 127780418, "id": 194583669, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDU4MzY2OQ==", "diff_hunk": "@@ -123,6 +148,67 @@ func (p Output) c() C.TF_Output {\n \n func (p Output) canBeAnInput() {}\n \n+// NumConsumers returns the number of inputs that consume this output.\n+func (p Output) NumConsumers() int {", "path": "tensorflow/go/operation.go", "position": null, "original_position": 37, "commit_id": "8eba32b6c4b259c39097b8b308532b8419d8c151", "original_commit_id": "a9b3a964e1955a8ba2ffd7f2d7496a5615fd4234", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "body": "Do we need both a `NumConsumers` and a `Consumers`?\r\nI realize that `NumConsumers()` here has an implementation that is more efficient than `len(Consumers())`, but I'd wager that the performance difference isn't material.\r\n\r\nSo while I'm open to opposition, right now I feel that we're better off with a smaller API surface (and doing away with `NumConsumers` completely).", "created_at": "2018-06-12T00:11:32Z", "updated_at": "2018-06-12T21:51:01Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/19915#discussion_r194583669", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/19915", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/194583669"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/19915#discussion_r194583669"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/19915"}}, "body_html": "<p>Do we need both a <code>NumConsumers</code> and a <code>Consumers</code>?<br>\nI realize that <code>NumConsumers()</code> here has an implementation that is more efficient than <code>len(Consumers())</code>, but I'd wager that the performance difference isn't material.</p>\n<p>So while I'm open to opposition, right now I feel that we're better off with a smaller API surface (and doing away with <code>NumConsumers</code> completely).</p>", "body_text": "Do we need both a NumConsumers and a Consumers?\nI realize that NumConsumers() here has an implementation that is more efficient than len(Consumers()), but I'd wager that the performance difference isn't material.\nSo while I'm open to opposition, right now I feel that we're better off with a smaller API surface (and doing away with NumConsumers completely)."}