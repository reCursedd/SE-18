{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/194585028", "pull_request_review_id": 127780418, "id": 194585028, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDU4NTAyOA==", "diff_hunk": "@@ -166,6 +166,71 @@ func TestOutputDataTypeAndShape(t *testing.T) {\n \t}\n }\n \n+func TestOperationInputs(t *testing.T) {\n+\tg := NewGraph()\n+\tx, err := Placeholder(g, \"x\", Float)\n+\tif err != nil {\n+\t\tt.Fatal(err)\n+\t}\n+\ty, err := Placeholder(g, \"y\", Float)\n+\tif err != nil {\n+\t\tt.Fatal(err)\n+\t}\n+\toutputs := []Output{x, y}\n+\tadd, err := Add(g, \"add\", x, y)\n+\tif err != nil {\n+\t\tt.Fatal(err)\n+\t}\n+\taddOp := add.Op\n+\n+\tif out := addOp.NumInputs(); out != 2 {\n+\t\tt.Fatalf(\"Got %d inputs, wanted 2\", out)\n+\t}\n+\n+\tif out := addOp.Input(0).DataType(); out != Float {\n+\t\tt.Fatalf(\"Got %v type, wanted %v\", out, Float)\n+\t}\n+\n+\tfor i := 0; i < addOp.NumInputs(); i++ {\n+\t\tinput := addOp.Input(i)\n+\t\tgot := input.Input().Op.Name()\n+\t\twant := outputs[i].Op.Name()\n+\t\tif want != got {\n+\t\t\tt.Fatalf(\"Got op name %q, wanted %q\", got, want)\n+\t\t}\n+\t}\n+}\n+\n+func TestOperationConsumers(t *testing.T) {\n+\tg := NewGraph()\n+\tx, err := Placeholder(g, \"x\", Float)\n+\tif err != nil {\n+\t\tt.Fatal(err)\n+\t}\n+\ta, err := Neg(g, \"a\", x)\n+\tif err != nil {\n+\t\tt.Fatal(err)\n+\t}\n+\tb, err := Neg(g, \"b\", x)\n+\tif err != nil {\n+\t\tt.Fatal(err)\n+\t}\n+\n+\tconsumers := []*Operation{a.Op, b.Op}\n+\n+\tif out := x.NumConsumers(); out != 2 {\n+\t\tt.Fatalf(\"Got %d consumers, wanted 2\", out)\n+\t}\n+\n+\tfor i, consumer := range x.Consumers() {", "path": "tensorflow/go/operation_test.go", "position": null, "original_position": 60, "commit_id": "8eba32b6c4b259c39097b8b308532b8419d8c151", "original_commit_id": "a9b3a964e1955a8ba2ffd7f2d7496a5615fd4234", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "body": "Shouldn't we check that `len(x.Consumers())` is 2 as well? Otherwise this test would pass even with an implemention of `return nil` for `Consumers()`?", "created_at": "2018-06-12T00:21:40Z", "updated_at": "2018-06-12T21:51:01Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/19915#discussion_r194585028", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/19915", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/194585028"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/19915#discussion_r194585028"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/19915"}}, "body_html": "<p>Shouldn't we check that <code>len(x.Consumers())</code> is 2 as well? Otherwise this test would pass even with an implemention of <code>return nil</code> for <code>Consumers()</code>?</p>", "body_text": "Shouldn't we check that len(x.Consumers()) is 2 as well? Otherwise this test would pass even with an implemention of return nil for Consumers()?"}