{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/194589830", "pull_request_review_id": 127790558, "id": 194589830, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDU4OTgzMA==", "diff_hunk": "@@ -123,6 +148,67 @@ func (p Output) c() C.TF_Output {\n \n func (p Output) canBeAnInput() {}\n \n+// NumConsumers returns the number of inputs that consume this output.\n+func (p Output) NumConsumers() int {\n+\treturn int(C.TF_OperationOutputNumConsumers(p.c()))\n+}\n+\n+// Consumers returns the inputs that consume this output.\n+func (p Output) Consumers() []OpInput {\n+\tmax := p.NumConsumers()\n+\tconsumers := make([]C.TF_Input, max)\n+\tn := C.TF_OperationOutputConsumers(p.c(), (*C.TF_Input)(unsafe.Pointer(&consumers[0])), C.int(max))\n+\tconsumers = consumers[:int(n)]\n+\n+\tvar inputs []OpInput\n+\tfor _, consumer := range consumers {\n+\t\tinputs = append(inputs, OpInput{\n+\t\t\tIndex: int(consumer.index),\n+\t\t\tOp: &Operation{\n+\t\t\t\tc: consumer.oper,\n+\t\t\t\tg: p.Op.g,\n+\t\t\t},\n+\t\t})\n+\t}\n+\n+\treturn inputs\n+}\n+\n+// OpInput is one of the inputs to an operation.\n+type OpInput struct {", "path": "tensorflow/go/operation.go", "position": null, "original_position": 63, "commit_id": "8eba32b6c4b259c39097b8b308532b8419d8c151", "original_commit_id": "a9b3a964e1955a8ba2ffd7f2d7496a5615fd4234", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "body": "I can understand the confusion and motivation here.\r\nHaving the go `Input` not match the C definition of `TF_Input` can be confusing, but at least it is only confusing to the developer of the Go library, not the user. Ideally, there would be no confusion anywhere :), but if there has to be, I'd say that less confusion for the Go API user trumps consistency with the underlying C API.\r\n\r\nCan we do away with `Operation.Input()` altogether? ", "created_at": "2018-06-12T01:00:02Z", "updated_at": "2018-06-12T21:51:01Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/19915#discussion_r194589830", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/19915", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/194589830"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/19915#discussion_r194589830"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/19915"}}, "body_html": "<p>I can understand the confusion and motivation here.<br>\nHaving the go <code>Input</code> not match the C definition of <code>TF_Input</code> can be confusing, but at least it is only confusing to the developer of the Go library, not the user. Ideally, there would be no confusion anywhere :), but if there has to be, I'd say that less confusion for the Go API user trumps consistency with the underlying C API.</p>\n<p>Can we do away with <code>Operation.Input()</code> altogether?</p>", "body_text": "I can understand the confusion and motivation here.\nHaving the go Input not match the C definition of TF_Input can be confusing, but at least it is only confusing to the developer of the Go library, not the user. Ideally, there would be no confusion anywhere :), but if there has to be, I'd say that less confusion for the Go API user trumps consistency with the underlying C API.\nCan we do away with Operation.Input() altogether?", "in_reply_to_id": 194583898}