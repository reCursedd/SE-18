{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/275768037", "html_url": "https://github.com/tensorflow/tensorflow/issues/7019#issuecomment-275768037", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7019", "id": 275768037, "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTc2ODAzNw==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-27T20:36:26Z", "updated_at": "2017-01-27T20:36:26Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Thanks for sharing the new build output. Is it possible that you're using the 32-bit toolchain? If I remember correctly, the default version of the compiler and linker (even when compiling x64 code) is a 32-bit executable. TensorFlow generates quite a large binary (and debug symbols), which might exhaust the address space of a 32-bit compiler/linker.</p>\n<p>It's a little tricky to force VS to use the 64-bit toolchain, and I believe that's why I started using the command-line tools instead. This <a href=\"https://msdn.microsoft.com/en-us/library/x4d2c09s.aspx\" rel=\"nofollow\">article on MSDN</a> covers how to set the 64-bit toolchain from the command line. I'm not 100% certain (can't find a reference right now) but I <em>think</em> that if you run <code>devenv.exe</code> from a command prompt configured this way, you will get the 64-bit tools when you compile from within Visual Studio.</p>", "body_text": "Thanks for sharing the new build output. Is it possible that you're using the 32-bit toolchain? If I remember correctly, the default version of the compiler and linker (even when compiling x64 code) is a 32-bit executable. TensorFlow generates quite a large binary (and debug symbols), which might exhaust the address space of a 32-bit compiler/linker.\nIt's a little tricky to force VS to use the 64-bit toolchain, and I believe that's why I started using the command-line tools instead. This article on MSDN covers how to set the 64-bit toolchain from the command line. I'm not 100% certain (can't find a reference right now) but I think that if you run devenv.exe from a command prompt configured this way, you will get the 64-bit tools when you compile from within Visual Studio.", "body": "Thanks for sharing the new build output. Is it possible that you're using the 32-bit toolchain? If I remember correctly, the default version of the compiler and linker (even when compiling x64 code) is a 32-bit executable. TensorFlow generates quite a large binary (and debug symbols), which might exhaust the address space of a 32-bit compiler/linker.\r\n\r\nIt's a little tricky to force VS to use the 64-bit toolchain, and I believe that's why I started using the command-line tools instead. This [article on MSDN](https://msdn.microsoft.com/en-us/library/x4d2c09s.aspx) covers how to set the 64-bit toolchain from the command line. I'm not 100% certain (can't find a reference right now) but I *think* that if you run `devenv.exe` from a command prompt configured this way, you will get the 64-bit tools when you compile from within Visual Studio."}