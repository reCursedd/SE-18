{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/353113096", "html_url": "https://github.com/tensorflow/tensorflow/issues/13511#issuecomment-353113096", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13511", "id": 353113096, "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzExMzA5Ng==", "user": {"login": "nataliaponomareva", "id": 4313109, "node_id": "MDQ6VXNlcjQzMTMxMDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/4313109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nataliaponomareva", "html_url": "https://github.com/nataliaponomareva", "followers_url": "https://api.github.com/users/nataliaponomareva/followers", "following_url": "https://api.github.com/users/nataliaponomareva/following{/other_user}", "gists_url": "https://api.github.com/users/nataliaponomareva/gists{/gist_id}", "starred_url": "https://api.github.com/users/nataliaponomareva/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nataliaponomareva/subscriptions", "organizations_url": "https://api.github.com/users/nataliaponomareva/orgs", "repos_url": "https://api.github.com/users/nataliaponomareva/repos", "events_url": "https://api.github.com/users/nataliaponomareva/events{/privacy}", "received_events_url": "https://api.github.com/users/nataliaponomareva/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-20T16:33:54Z", "updated_at": "2017-12-20T16:34:06Z", "author_association": "NONE", "body_html": "<p>For multi-label classification with forest, the easiest way would be probably</p>\n<ul>\n<li>change your data to have a number of binary classification tasks (one for each label)</li>\n<li>train a forest for each of your classification tasks</li>\n<li>find appropriate thresholds for each of the task</li>\n<li>assign the labels that pass these thresholds</li>\n</ul>\n<p>Alternatively, if you don't want to increase your dataset size that much (especially if you have a large number of potential labels), you can try boosted trees: (tensorflow/contrib/boosted_trees):</p>\n<ul>\n<li>provide a multi-label loss that suits your problem the best (use multiclass strategy like a diagonal or full hessian, if the number of labels is not extreme)</li>\n<li>use the scores from the ensemble plus some decision on top of them to decide whether the label applies or not.</li>\n</ul>", "body_text": "For multi-label classification with forest, the easiest way would be probably\n\nchange your data to have a number of binary classification tasks (one for each label)\ntrain a forest for each of your classification tasks\nfind appropriate thresholds for each of the task\nassign the labels that pass these thresholds\n\nAlternatively, if you don't want to increase your dataset size that much (especially if you have a large number of potential labels), you can try boosted trees: (tensorflow/contrib/boosted_trees):\n\nprovide a multi-label loss that suits your problem the best (use multiclass strategy like a diagonal or full hessian, if the number of labels is not extreme)\nuse the scores from the ensemble plus some decision on top of them to decide whether the label applies or not.", "body": "For multi-label classification with forest, the easiest way would be probably\r\n- change your data to have a number of binary classification tasks (one for each label)\r\n- train a forest for each of your classification tasks\r\n- find appropriate thresholds for each of the task\r\n- assign the labels that pass these thresholds\r\n\r\nAlternatively, if you don't want to increase your dataset size that much (especially if you have a large number of potential labels), you can try boosted trees: (tensorflow/contrib/boosted_trees): \r\n- provide a multi-label loss that suits your problem the best (use multiclass strategy like a diagonal or full hessian, if the number of labels is not extreme)\r\n- use the scores from the ensemble plus some decision on top of them to decide whether the label applies or not. \r\n"}