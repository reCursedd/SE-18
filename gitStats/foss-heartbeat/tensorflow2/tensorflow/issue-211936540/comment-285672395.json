{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/285672395", "html_url": "https://github.com/tensorflow/tensorflow/issues/8096#issuecomment-285672395", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8096", "id": 285672395, "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTY3MjM5NQ==", "user": {"login": "abhi18av", "id": 12799326, "node_id": "MDQ6VXNlcjEyNzk5MzI2", "avatar_url": "https://avatars1.githubusercontent.com/u/12799326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abhi18av", "html_url": "https://github.com/abhi18av", "followers_url": "https://api.github.com/users/abhi18av/followers", "following_url": "https://api.github.com/users/abhi18av/following{/other_user}", "gists_url": "https://api.github.com/users/abhi18av/gists{/gist_id}", "starred_url": "https://api.github.com/users/abhi18av/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abhi18av/subscriptions", "organizations_url": "https://api.github.com/users/abhi18av/orgs", "repos_url": "https://api.github.com/users/abhi18av/repos", "events_url": "https://api.github.com/users/abhi18av/events{/privacy}", "received_events_url": "https://api.github.com/users/abhi18av/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-10T13:46:27Z", "updated_at": "2017-03-10T13:46:27Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=11547801\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/prb12\">@prb12</a> , I am happy to report that the installation finally got working though I have no idea how.<br>\nThe only difference there was between running the basic <code>conda install</code> again was different - updated - versions of pip3.</p>\n<div class=\"highlight highlight-source-shell\"><pre>\u276f conda install -c conda-forge tensorflow\nFetching package metadata ...........\nSolving package specifications: <span class=\"pl-c1\">.</span>\n\nPackage plan <span class=\"pl-k\">for</span> <span class=\"pl-smi\">installation</span> <span class=\"pl-k\">in</span> environment /Users/eklavya/anaconda:\n\nThe following NEW packages will be INSTALLED:\n\n    mock:       2.0.0-py35_0  conda-forge\n    pbr:        1.10.0-py35_0 conda-forge\n    protobuf:   3.2.0-py35_0  conda-forge\n    tensorflow: 1.0.0-py35_0  conda-forge\n\nThe following packages will be SUPERCEDED by a higher-priority channel:\n\n    conda:      4.3.14-py35_0             --<span class=\"pl-k\">&gt;</span> 4.2.13-py35_0 conda-forge\n    conda-env:  2.6.0-0                   --<span class=\"pl-k\">&gt;</span> 2.6.0-0       conda-forge\n\nProceed ([y]/n)<span class=\"pl-k\">?</span> y\n\ntensorflow-1.0 100% <span class=\"pl-k\">|</span><span class=\"pl-c\"><span class=\"pl-c\">#</span>#################################################################################| Time: 0:00:26   1.31 MB/s</span>\n                                                                                                                                  \n<span class=\"pl-k\">~</span>   104s\n\u276f refresh</pre></div>\n<p>Able to import the library now.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">~</span>   \n\u276f python3\nPython <span class=\"pl-c1\">3.5</span>.2 <span class=\"pl-k\">|</span>Anaconda custom (x86_64)<span class=\"pl-k\">|</span> (default, Jul  <span class=\"pl-c1\">2</span> <span class=\"pl-c1\">2016</span>, <span class=\"pl-c1\">17</span>:<span class=\"pl-c1\">52</span>:<span class=\"pl-c1\">12</span>) \n[<span class=\"pl-c1\">GCC</span> <span class=\"pl-c1\">4.2</span>.1 Compatible Apple <span class=\"pl-c1\">LLVM</span> <span class=\"pl-c1\">4.2</span> (clang<span class=\"pl-k\">-</span><span class=\"pl-c1\">425.0</span>.28)] on darwin\nType <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>help<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>copyright<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>credits<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">or</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>license<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">for</span> more information.\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">import</span> tensorflow\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> </pre></div>\n<p>As far as the error regarding the lack of CUDA-8 installation, unfortunately I'm unable to update to macOS Sierra ( req. for CUDA-8 ) for a couple months more at least so I'll have to make do with the CPU version.</p>\n<p>I'll close this issue as the issue has been sorted out, but please do comment your views on what might've caused the trouble in the first place.</p>\n<p>The fact that it throws up some \"Tensorflow library wasn't compiled with...\" might be relevant for a future reader.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> \n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c\"><span class=\"pl-c\">#</span> Simple hello world using TensorFlow</span>\n<span class=\"pl-c1\">...</span> \n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c\"><span class=\"pl-c\">#</span> Create a Constant op</span>\n<span class=\"pl-c1\">...</span> <span class=\"pl-c\"><span class=\"pl-c\">#</span> The op is added as a node to the default graph.</span>\n<span class=\"pl-c1\">...</span> <span class=\"pl-c\"><span class=\"pl-c\">#</span></span>\n<span class=\"pl-c1\">...</span> <span class=\"pl-c\"><span class=\"pl-c\">#</span> The value returned by the constructor represents the output</span>\n<span class=\"pl-c1\">...</span> <span class=\"pl-c\"><span class=\"pl-c\">#</span> of the Constant op.</span>\n<span class=\"pl-c1\">...</span> hello <span class=\"pl-k\">=</span> tf.constant(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Hello, TensorFlow!<span class=\"pl-pds\">'</span></span>)\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> \n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c\"><span class=\"pl-c\">#</span> Start tf session</span>\n<span class=\"pl-c1\">...</span> sess <span class=\"pl-k\">=</span> tf.Session()\nW tensorflow<span class=\"pl-k\">/</span>core<span class=\"pl-k\">/</span>platform<span class=\"pl-k\">/</span>cpu_feature_guard.cc:<span class=\"pl-c1\">45</span>] The TensorFlow library wasn<span class=\"pl-s\"><span class=\"pl-pds\">'</span>t compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.<span class=\"pl-ii\"></span></span>\nW tensorflow<span class=\"pl-k\">/</span>core<span class=\"pl-k\">/</span>platform<span class=\"pl-k\">/</span>cpu_feature_guard.cc:<span class=\"pl-c1\">45</span>] The TensorFlow library wasn<span class=\"pl-s\"><span class=\"pl-pds\">'</span>t compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.<span class=\"pl-ii\"></span></span>\nW tensorflow<span class=\"pl-k\">/</span>core<span class=\"pl-k\">/</span>platform<span class=\"pl-k\">/</span>cpu_feature_guard.cc:<span class=\"pl-c1\">45</span>] The TensorFlow library wasn<span class=\"pl-s\"><span class=\"pl-pds\">'</span>t compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.<span class=\"pl-ii\"></span></span>\nW tensorflow<span class=\"pl-k\">/</span>core<span class=\"pl-k\">/</span>platform<span class=\"pl-k\">/</span>cpu_feature_guard.cc:<span class=\"pl-c1\">45</span>] The TensorFlow library wasn<span class=\"pl-s\"><span class=\"pl-pds\">'</span>t compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.<span class=\"pl-ii\"></span></span>\nW tensorflow<span class=\"pl-k\">/</span>core<span class=\"pl-k\">/</span>platform<span class=\"pl-k\">/</span>cpu_feature_guard.cc:<span class=\"pl-c1\">45</span>] The TensorFlow library wasn<span class=\"pl-s\"><span class=\"pl-pds\">'</span>t compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.<span class=\"pl-ii\"></span></span>\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> \n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c\"><span class=\"pl-c\">#</span> Run the op</span>\n<span class=\"pl-c1\">...</span> <span class=\"pl-c1\">print</span>(sess.run(hello))\n<span class=\"pl-s\"><span class=\"pl-k\">b</span><span class=\"pl-pds\">'</span>Hello, TensorFlow!<span class=\"pl-pds\">'</span></span>\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> </pre></div>", "body_text": "@prb12 , I am happy to report that the installation finally got working though I have no idea how.\nThe only difference there was between running the basic conda install again was different - updated - versions of pip3.\n\u276f conda install -c conda-forge tensorflow\nFetching package metadata ...........\nSolving package specifications: .\n\nPackage plan for installation in environment /Users/eklavya/anaconda:\n\nThe following NEW packages will be INSTALLED:\n\n    mock:       2.0.0-py35_0  conda-forge\n    pbr:        1.10.0-py35_0 conda-forge\n    protobuf:   3.2.0-py35_0  conda-forge\n    tensorflow: 1.0.0-py35_0  conda-forge\n\nThe following packages will be SUPERCEDED by a higher-priority channel:\n\n    conda:      4.3.14-py35_0             --> 4.2.13-py35_0 conda-forge\n    conda-env:  2.6.0-0                   --> 2.6.0-0       conda-forge\n\nProceed ([y]/n)? y\n\ntensorflow-1.0 100% |##################################################################################| Time: 0:00:26   1.31 MB/s\n                                                                                                                                  \n~   104s\n\u276f refresh\nAble to import the library now.\n~   \n\u276f python3\nPython 3.5.2 |Anaconda custom (x86_64)| (default, Jul  2 2016, 17:52:12) \n[GCC 4.2.1 Compatible Apple LLVM 4.2 (clang-425.0.28)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import tensorflow\n>>> \nAs far as the error regarding the lack of CUDA-8 installation, unfortunately I'm unable to update to macOS Sierra ( req. for CUDA-8 ) for a couple months more at least so I'll have to make do with the CPU version.\nI'll close this issue as the issue has been sorted out, but please do comment your views on what might've caused the trouble in the first place.\nThe fact that it throws up some \"Tensorflow library wasn't compiled with...\" might be relevant for a future reader.\n>>> import tensorflow as tf\n>>> \n>>> # Simple hello world using TensorFlow\n... \n>>> # Create a Constant op\n... # The op is added as a node to the default graph.\n... #\n... # The value returned by the constructor represents the output\n... # of the Constant op.\n... hello = tf.constant('Hello, TensorFlow!')\n>>> \n>>> # Start tf session\n... sess = tf.Session()\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.\n>>> \n>>> # Run the op\n... print(sess.run(hello))\nb'Hello, TensorFlow!'\n>>>", "body": "@prb12 , I am happy to report that the installation finally got working though I have no idea how.\r\nThe only difference there was between running the basic `conda install` again was different - updated - versions of pip3.\r\n\r\n```sh\r\n\r\n\u276f conda install -c conda-forge tensorflow\r\nFetching package metadata ...........\r\nSolving package specifications: .\r\n\r\nPackage plan for installation in environment /Users/eklavya/anaconda:\r\n\r\nThe following NEW packages will be INSTALLED:\r\n\r\n    mock:       2.0.0-py35_0  conda-forge\r\n    pbr:        1.10.0-py35_0 conda-forge\r\n    protobuf:   3.2.0-py35_0  conda-forge\r\n    tensorflow: 1.0.0-py35_0  conda-forge\r\n\r\nThe following packages will be SUPERCEDED by a higher-priority channel:\r\n\r\n    conda:      4.3.14-py35_0             --> 4.2.13-py35_0 conda-forge\r\n    conda-env:  2.6.0-0                   --> 2.6.0-0       conda-forge\r\n\r\nProceed ([y]/n)? y\r\n\r\ntensorflow-1.0 100% |##################################################################################| Time: 0:00:26   1.31 MB/s\r\n                                                                                                                                  \r\n~   104s\r\n\u276f refresh\r\n```\r\n\r\nAble to import the library now.\r\n\r\n```python3                                                                                                                                  \r\n~   \r\n\u276f python3\r\nPython 3.5.2 |Anaconda custom (x86_64)| (default, Jul  2 2016, 17:52:12) \r\n[GCC 4.2.1 Compatible Apple LLVM 4.2 (clang-425.0.28)] on darwin\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import tensorflow\r\n>>> \r\n```\r\n\r\n\r\n\r\nAs far as the error regarding the lack of CUDA-8 installation, unfortunately I'm unable to update to macOS Sierra ( req. for CUDA-8 ) for a couple months more at least so I'll have to make do with the CPU version. \r\n\r\n\r\nI'll close this issue as the issue has been sorted out, but please do comment your views on what might've caused the trouble in the first place.\r\n\r\n\r\nThe fact that it throws up some \"Tensorflow library wasn't compiled with...\" might be relevant for a future reader.\r\n\r\n\r\n```python\r\n\r\n>>> import tensorflow as tf\r\n>>> \r\n>>> # Simple hello world using TensorFlow\r\n... \r\n>>> # Create a Constant op\r\n... # The op is added as a node to the default graph.\r\n... #\r\n... # The value returned by the constructor represents the output\r\n... # of the Constant op.\r\n... hello = tf.constant('Hello, TensorFlow!')\r\n>>> \r\n>>> # Start tf session\r\n... sess = tf.Session()\r\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.\r\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\r\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\r\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.\r\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.\r\n>>> \r\n>>> # Run the op\r\n... print(sess.run(hello))\r\nb'Hello, TensorFlow!'\r\n>>> \r\n```"}