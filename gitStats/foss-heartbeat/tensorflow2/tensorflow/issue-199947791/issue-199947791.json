{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6774", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6774/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6774/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6774/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/6774", "id": 199947791, "node_id": "MDU6SXNzdWUxOTk5NDc3OTE=", "number": 6774, "title": "`import_meta_graph` appends `_1` to node in GraphDef but doesn't add `_1` to Variable name in Collection", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-01-10T22:11:24Z", "updated_at": "2018-02-03T02:49:24Z", "closed_at": "2018-02-03T02:49:24Z", "author_association": "CONTRIBUTOR", "body_html": "<p>In an example below, second <code>import_meta_graph</code> will create variable nodes <code>[a, a_1]</code>, but corresponding global variables collection has variables <code>[a, a]</code>. So now <code>report_uninitialized_variables</code> is empty, even though there's an uninitialized variable <code>a_1</code> in the graph. Example below crashes with <code>uninitialized</code> error.</p>\n<pre><code>import tensorflow as tf\n\ntf.reset_default_graph()\nsess = tf.Session()\ntf.Variable(tf.ones(()), name='a')\nsess.run(tf.global_variables_initializer())\nsaver = tf.train.Saver()\nsaver.save(sess, 'dummy')\n        \ntf.reset_default_graph()\nsess = tf.Session()\nsaver = tf.train.import_meta_graph('dummy.meta')\nsaver = tf.train.import_meta_graph('dummy.meta')\nsaver.restore(sess, './dummy')\nsess.run(tf.initialize_all_variables())\nsess.run(tf.report_uninitialized_variables())  # =&gt; prints empty\nsess.run(\"a_1:0\")   # =&gt; crashes with a_1 not initialized\n</code></pre>", "body_text": "In an example below, second import_meta_graph will create variable nodes [a, a_1], but corresponding global variables collection has variables [a, a]. So now report_uninitialized_variables is empty, even though there's an uninitialized variable a_1 in the graph. Example below crashes with uninitialized error.\nimport tensorflow as tf\n\ntf.reset_default_graph()\nsess = tf.Session()\ntf.Variable(tf.ones(()), name='a')\nsess.run(tf.global_variables_initializer())\nsaver = tf.train.Saver()\nsaver.save(sess, 'dummy')\n        \ntf.reset_default_graph()\nsess = tf.Session()\nsaver = tf.train.import_meta_graph('dummy.meta')\nsaver = tf.train.import_meta_graph('dummy.meta')\nsaver.restore(sess, './dummy')\nsess.run(tf.initialize_all_variables())\nsess.run(tf.report_uninitialized_variables())  # => prints empty\nsess.run(\"a_1:0\")   # => crashes with a_1 not initialized", "body": "In an example below, second `import_meta_graph` will create variable nodes `[a, a_1]`, but corresponding global variables collection has variables `[a, a]`. So now `report_uninitialized_variables` is empty, even though there's an uninitialized variable `a_1` in the graph. Example below crashes with `uninitialized` error.\r\n\r\n```\r\nimport tensorflow as tf\r\n\r\ntf.reset_default_graph()\r\nsess = tf.Session()\r\ntf.Variable(tf.ones(()), name='a')\r\nsess.run(tf.global_variables_initializer())\r\nsaver = tf.train.Saver()\r\nsaver.save(sess, 'dummy')\r\n        \r\ntf.reset_default_graph()\r\nsess = tf.Session()\r\nsaver = tf.train.import_meta_graph('dummy.meta')\r\nsaver = tf.train.import_meta_graph('dummy.meta')\r\nsaver.restore(sess, './dummy')\r\nsess.run(tf.initialize_all_variables())\r\nsess.run(tf.report_uninitialized_variables())  # => prints empty\r\nsess.run(\"a_1:0\")   # => crashes with a_1 not initialized\r\n```"}