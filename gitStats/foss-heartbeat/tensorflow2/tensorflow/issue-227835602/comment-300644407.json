{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/300644407", "html_url": "https://github.com/tensorflow/tensorflow/issues/9821#issuecomment-300644407", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9821", "id": 300644407, "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDY0NDQwNw==", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-10T23:55:15Z", "updated_at": "2017-05-10T23:55:15Z", "author_association": "CONTRIBUTOR", "body_html": "<p>It's pretty inefficient to large numpy arrays into Graph. A work-around is to create Variables with  <code>tf.placeholder</code> initial value and then feed numpy array during initialization. Unfortunately <code>get_variable</code> doesn't have <code>placeholder_initializer</code> either.</p>\n<p>I get around it this by using a simplified replacement for <code>get_variable</code> mechanism that creates variables with <code>tf.placeholder</code> initial value, and puts corresponding <code>placeholder,numpy</code> pairs into global init_dict, so then I can call <code>sess.run(tf.global_variables_initializer(), feed_dict=init_dict)</code></p>\n<p>Here's an example: <a href=\"https://github.com/yaroslavvb/stuff/blob/master/numpy_initializers/kfac_cifar.py#L245\">https://github.com/yaroslavvb/stuff/blob/master/numpy_initializers/kfac_cifar.py#L245</a></p>", "body_text": "It's pretty inefficient to large numpy arrays into Graph. A work-around is to create Variables with  tf.placeholder initial value and then feed numpy array during initialization. Unfortunately get_variable doesn't have placeholder_initializer either.\nI get around it this by using a simplified replacement for get_variable mechanism that creates variables with tf.placeholder initial value, and puts corresponding placeholder,numpy pairs into global init_dict, so then I can call sess.run(tf.global_variables_initializer(), feed_dict=init_dict)\nHere's an example: https://github.com/yaroslavvb/stuff/blob/master/numpy_initializers/kfac_cifar.py#L245", "body": "It's pretty inefficient to large numpy arrays into Graph. A work-around is to create Variables with  `tf.placeholder` initial value and then feed numpy array during initialization. Unfortunately `get_variable` doesn't have `placeholder_initializer` either.\r\n\r\nI get around it this by using a simplified replacement for `get_variable` mechanism that creates variables with `tf.placeholder` initial value, and puts corresponding `placeholder,numpy` pairs into global init_dict, so then I can call `sess.run(tf.global_variables_initializer(), feed_dict=init_dict)`\r\n\r\nHere's an example: https://github.com/yaroslavvb/stuff/blob/master/numpy_initializers/kfac_cifar.py#L245"}