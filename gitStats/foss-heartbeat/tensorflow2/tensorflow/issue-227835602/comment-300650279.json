{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/300650279", "html_url": "https://github.com/tensorflow/tensorflow/issues/9821#issuecomment-300650279", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9821", "id": 300650279, "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDY1MDI3OQ==", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-11T00:37:30Z", "updated_at": "2017-05-11T00:37:30Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Good point, that does seem to work already</p>\n<pre><code>pl = tf.placeholder(tf.float32, shape=())\na = tf.get_variable(\"test\", initializer=pl)\nsess = tf.Session()\nsess.run(a.initializer, feed_dict={pl: 1})\n</code></pre>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=2135235\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/el3ment\">@el3ment</a> does that cover your use-case? You could be even more efficient by initializing the first variable <code>var</code> on GPU from <code>tf.placeholder</code>, and the rest from <code>var.initial_value()</code></p>", "body_text": "Good point, that does seem to work already\npl = tf.placeholder(tf.float32, shape=())\na = tf.get_variable(\"test\", initializer=pl)\nsess = tf.Session()\nsess.run(a.initializer, feed_dict={pl: 1})\n\n@el3ment does that cover your use-case? You could be even more efficient by initializing the first variable var on GPU from tf.placeholder, and the rest from var.initial_value()", "body": "Good point, that does seem to work already\r\n\r\n```\r\npl = tf.placeholder(tf.float32, shape=())\r\na = tf.get_variable(\"test\", initializer=pl)\r\nsess = tf.Session()\r\nsess.run(a.initializer, feed_dict={pl: 1})\r\n```\r\n\r\n@el3ment does that cover your use-case? You could be even more efficient by initializing the first variable `var` on GPU from `tf.placeholder`, and the rest from `var.initial_value()`"}