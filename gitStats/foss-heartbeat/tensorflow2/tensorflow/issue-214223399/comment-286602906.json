{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/286602906", "html_url": "https://github.com/tensorflow/tensorflow/issues/8410#issuecomment-286602906", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8410", "id": 286602906, "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjYwMjkwNg==", "user": {"login": "caisq", "id": 16824702, "node_id": "MDQ6VXNlcjE2ODI0NzAy", "avatar_url": "https://avatars2.githubusercontent.com/u/16824702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caisq", "html_url": "https://github.com/caisq", "followers_url": "https://api.github.com/users/caisq/followers", "following_url": "https://api.github.com/users/caisq/following{/other_user}", "gists_url": "https://api.github.com/users/caisq/gists{/gist_id}", "starred_url": "https://api.github.com/users/caisq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caisq/subscriptions", "organizations_url": "https://api.github.com/users/caisq/orgs", "repos_url": "https://api.github.com/users/caisq/repos", "events_url": "https://api.github.com/users/caisq/events{/privacy}", "received_events_url": "https://api.github.com/users/caisq/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-15T00:19:06Z", "updated_at": "2017-03-15T00:23:39Z", "author_association": "CONTRIBUTOR", "body_html": "<p>There is actually another potentially useful feature: the <code>-r</code> option of the <code>pt</code> command. It allows you to count how many elements a Tensor falls into a certain range. The range can be a real number or <code>inf</code>. If you do:</p>\n<pre><code>tfdbg&gt; pt encoder/conv0/Conv2D:0:DebugIdentity -r [-inf,inf]\n</code></pre>\n<p>the CLI will count how many elements are &gt;=-inf and &lt;inf. So if you there is one NaN, the element will not be counted. You'll see in the first line on the top something like:<br>\n999 of 1000 elements (99.90%)</p>\n<p>In addition, please beware that if you use the command <code>lt</code>, the CLI will list all the dumped tensors from the current <code>Session.run()</code> call. However, if you do <code>lt -f has_inf_or_nan</code>, it should list only the dumped tensors that contain <code>inf</code>s or <code>nan</code>s.</p>", "body_text": "There is actually another potentially useful feature: the -r option of the pt command. It allows you to count how many elements a Tensor falls into a certain range. The range can be a real number or inf. If you do:\ntfdbg> pt encoder/conv0/Conv2D:0:DebugIdentity -r [-inf,inf]\n\nthe CLI will count how many elements are >=-inf and <inf. So if you there is one NaN, the element will not be counted. You'll see in the first line on the top something like:\n999 of 1000 elements (99.90%)\nIn addition, please beware that if you use the command lt, the CLI will list all the dumped tensors from the current Session.run() call. However, if you do lt -f has_inf_or_nan, it should list only the dumped tensors that contain infs or nans.", "body": "There is actually another potentially useful feature: the `-r` option of the `pt` command. It allows you to count how many elements a Tensor falls into a certain range. The range can be a real number or `inf`. If you do:\r\n```\r\ntfdbg> pt encoder/conv0/Conv2D:0:DebugIdentity -r [-inf,inf]\r\n```\r\nthe CLI will count how many elements are >=-inf and <inf. So if you there is one NaN, the element will not be counted. You'll see in the first line on the top something like:\r\n999 of 1000 elements (99.90%)\r\n\r\nIn addition, please beware that if you use the command `lt`, the CLI will list all the dumped tensors from the current `Session.run()` call. However, if you do `lt -f has_inf_or_nan`, it should list only the dumped tensors that contain `inf`s or `nan`s."}