{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/386868444", "html_url": "https://github.com/tensorflow/tensorflow/issues/10632#issuecomment-386868444", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10632", "id": 386868444, "node_id": "MDEyOklzc3VlQ29tbWVudDM4Njg2ODQ0NA==", "user": {"login": "cakirmuha", "id": 6494452, "node_id": "MDQ6VXNlcjY0OTQ0NTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/6494452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cakirmuha", "html_url": "https://github.com/cakirmuha", "followers_url": "https://api.github.com/users/cakirmuha/followers", "following_url": "https://api.github.com/users/cakirmuha/following{/other_user}", "gists_url": "https://api.github.com/users/cakirmuha/gists{/gist_id}", "starred_url": "https://api.github.com/users/cakirmuha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cakirmuha/subscriptions", "organizations_url": "https://api.github.com/users/cakirmuha/orgs", "repos_url": "https://api.github.com/users/cakirmuha/repos", "events_url": "https://api.github.com/users/cakirmuha/events{/privacy}", "received_events_url": "https://api.github.com/users/cakirmuha/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-06T10:10:36Z", "updated_at": "2018-05-06T10:10:36Z", "author_association": "NONE", "body_html": "<p>I have a similar problem. I want to feed a value(batch_size) and use it as shape parameter. I think I am feeding value into the placeholder.</p>\n<pre><code>import tensorflow as tf\nclass Conn(object):\n    def __init__(self):\n      self.batch_size = tf.placeholder(tf.int32,[], name=\"batch_size\")  # `batch_size` is a scalar (0-D tensor).\n      with  tf.name_scope(\"Conn_func\"):\n        random_t = tf.Variable(tf.random_uniform([10,2*self.batch_size], -1.0, 1.0),validate_shape=False, name=\"random_t\")\n        random_y = tf.Variable(tf.random_uniform([6, 4], -0.1, 0.1),name=\"random_y\")\n        self.k = tf.matmul(random_t, random_y)\nwith tf.Session() as sess:\n    deep = Conn()\n    tf.set_random_seed(1234)\n    sess.run([tf.global_variables_initializer(), tf.local_variables_initializer()])\n    sess.run([deep.k], feed_dict={deep.batch_size: 3})\n    sess.close()\n</code></pre>\n<pre><code>InvalidArgumentErrorTraceback (most recent call last)\n&lt;ipython-input-4-d5c3455c644d&gt; in &lt;module&gt;()\n     10     deep = Conn()\n     11     tf.set_random_seed(1234)\n---&gt; 12     sess.run([tf.global_variables_initializer(), tf.local_variables_initializer()])\n     13     sess.run([deep.k], feed_dict={deep.batch_size: 3})\n     14     sess.close()\n\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.pyc in run(self, fetches, feed_dict, options, run_metadata)\n    903     try:\n    904       result = self._run(None, fetches, feed_dict, options_ptr,\n--&gt; 905                          run_metadata_ptr)\n    906       if run_metadata:\n    907         proto_data = tf_session.TF_GetBuffer(run_metadata_ptr)\n\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.pyc in _run(self, handle, fetches, feed_dict, options, run_metadata)\n   1138     if final_fetches or final_targets or (handle and feed_dict_tensor):\n   1139       results = self._do_run(handle, final_targets, final_fetches,\n-&gt; 1140                              feed_dict_tensor, options, run_metadata)\n   1141     else:\n   1142       results = []\n\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.pyc in _do_run(self, handle, target_list, fetch_list, feed_dict, options, run_metadata)\n   1319     if handle is None:\n   1320       return self._do_call(_run_fn, feeds, fetches, targets, options,\n-&gt; 1321                            run_metadata)\n   1322     else:\n   1323       return self._do_call(_prun_fn, handle, feeds, fetches)\n\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.pyc in _do_call(self, fn, *args)\n   1338         except KeyError:\n   1339           pass\n-&gt; 1340       raise type(e)(node_def, op, message)\n   1341 \n   1342   def _extend_graph(self):\n\nInvalidArgumentError: You must feed a value for placeholder tensor 'batch_size' with dtype int32\n\t [[Node: batch_size = Placeholder[dtype=DT_INT32, shape=[], _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"]()]]\n\nCaused by op u'batch_size', defined at:\n  File \"/usr/lib/python2.7/runpy.py\", line 174, in _run_module_as_main\n    \"__main__\", fname, loader, pkg_name)\n  File \"/usr/lib/python2.7/runpy.py\", line 72, in _run_code\n    exec code in run_globals\n  File \"/usr/local/lib/python2.7/dist-packages/ipykernel_launcher.py\", line 16, in &lt;module&gt;\n    app.launch_new_instance()\n  File \"/usr/local/lib/python2.7/dist-packages/traitlets/config/application.py\", line 658, in launch_instance\n    app.start()\n  File \"/usr/local/lib/python2.7/dist-packages/ipykernel/kernelapp.py\", line 477, in start\n    ioloop.IOLoop.instance().start()\n  File \"/usr/local/lib/python2.7/dist-packages/zmq/eventloop/ioloop.py\", line 177, in start\n    super(ZMQIOLoop, self).start()\n  File \"/usr/local/lib/python2.7/dist-packages/tornado/ioloop.py\", line 888, in start\n    handler_func(fd_obj, events)\n  File \"/usr/local/lib/python2.7/dist-packages/tornado/stack_context.py\", line 277, in null_wrapper\n    return fn(*args, **kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/zmq/eventloop/zmqstream.py\", line 440, in _handle_events\n    self._handle_recv()\n  File \"/usr/local/lib/python2.7/dist-packages/zmq/eventloop/zmqstream.py\", line 472, in _handle_recv\n    self._run_callback(callback, msg)\n  File \"/usr/local/lib/python2.7/dist-packages/zmq/eventloop/zmqstream.py\", line 414, in _run_callback\n    callback(*args, **kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/tornado/stack_context.py\", line 277, in null_wrapper\n    return fn(*args, **kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/ipykernel/kernelbase.py\", line 283, in dispatcher\n    return self.dispatch_shell(stream, msg)\n  File \"/usr/local/lib/python2.7/dist-packages/ipykernel/kernelbase.py\", line 235, in dispatch_shell\n    handler(stream, idents, msg)\n  File \"/usr/local/lib/python2.7/dist-packages/ipykernel/kernelbase.py\", line 399, in execute_request\n    user_expressions, allow_stdin)\n  File \"/usr/local/lib/python2.7/dist-packages/ipykernel/ipkernel.py\", line 196, in do_execute\n    res = shell.run_cell(code, store_history=store_history, silent=silent)\n  File \"/usr/local/lib/python2.7/dist-packages/ipykernel/zmqshell.py\", line 533, in run_cell\n    return super(ZMQInteractiveShell, self).run_cell(*args, **kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/IPython/core/interactiveshell.py\", line 2718, in run_cell\n    interactivity=interactivity, compiler=compiler, result=result)\n  File \"/usr/local/lib/python2.7/dist-packages/IPython/core/interactiveshell.py\", line 2822, in run_ast_nodes\n    if self.run_code(code, result):\n  File \"/usr/local/lib/python2.7/dist-packages/IPython/core/interactiveshell.py\", line 2882, in run_code\n    exec(code_obj, self.user_global_ns, self.user_ns)\n  File \"&lt;ipython-input-1-97b6a51f4b49&gt;\", line 11, in &lt;module&gt;\n    deep = Conn()\n  File \"&lt;ipython-input-1-97b6a51f4b49&gt;\", line 5, in __init__\n    self.batch_size = tf.placeholder(tf.int32,[], name=\"batch_size\")  # `batch_size` is a scalar (0-D tensor).\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/array_ops.py\", line 1777, in placeholder\n    return gen_array_ops.placeholder(dtype=dtype, shape=shape, name=name)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gen_array_ops.py\", line 4521, in placeholder\n    \"Placeholder\", dtype=dtype, shape=shape, name=name)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/op_def_library.py\", line 787, in _apply_op_helper\n    op_def=op_def)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 3290, in create_op\n    op_def=op_def)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 1654, in __init__\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\n\nInvalidArgumentError (see above for traceback): You must feed a value for placeholder tensor 'batch_size' with dtype int32\n\t [[Node: batch_size = Placeholder[dtype=DT_INT32, shape=[], _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"]()]]\n</code></pre>", "body_text": "I have a similar problem. I want to feed a value(batch_size) and use it as shape parameter. I think I am feeding value into the placeholder.\nimport tensorflow as tf\nclass Conn(object):\n    def __init__(self):\n      self.batch_size = tf.placeholder(tf.int32,[], name=\"batch_size\")  # `batch_size` is a scalar (0-D tensor).\n      with  tf.name_scope(\"Conn_func\"):\n        random_t = tf.Variable(tf.random_uniform([10,2*self.batch_size], -1.0, 1.0),validate_shape=False, name=\"random_t\")\n        random_y = tf.Variable(tf.random_uniform([6, 4], -0.1, 0.1),name=\"random_y\")\n        self.k = tf.matmul(random_t, random_y)\nwith tf.Session() as sess:\n    deep = Conn()\n    tf.set_random_seed(1234)\n    sess.run([tf.global_variables_initializer(), tf.local_variables_initializer()])\n    sess.run([deep.k], feed_dict={deep.batch_size: 3})\n    sess.close()\n\nInvalidArgumentErrorTraceback (most recent call last)\n<ipython-input-4-d5c3455c644d> in <module>()\n     10     deep = Conn()\n     11     tf.set_random_seed(1234)\n---> 12     sess.run([tf.global_variables_initializer(), tf.local_variables_initializer()])\n     13     sess.run([deep.k], feed_dict={deep.batch_size: 3})\n     14     sess.close()\n\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.pyc in run(self, fetches, feed_dict, options, run_metadata)\n    903     try:\n    904       result = self._run(None, fetches, feed_dict, options_ptr,\n--> 905                          run_metadata_ptr)\n    906       if run_metadata:\n    907         proto_data = tf_session.TF_GetBuffer(run_metadata_ptr)\n\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.pyc in _run(self, handle, fetches, feed_dict, options, run_metadata)\n   1138     if final_fetches or final_targets or (handle and feed_dict_tensor):\n   1139       results = self._do_run(handle, final_targets, final_fetches,\n-> 1140                              feed_dict_tensor, options, run_metadata)\n   1141     else:\n   1142       results = []\n\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.pyc in _do_run(self, handle, target_list, fetch_list, feed_dict, options, run_metadata)\n   1319     if handle is None:\n   1320       return self._do_call(_run_fn, feeds, fetches, targets, options,\n-> 1321                            run_metadata)\n   1322     else:\n   1323       return self._do_call(_prun_fn, handle, feeds, fetches)\n\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.pyc in _do_call(self, fn, *args)\n   1338         except KeyError:\n   1339           pass\n-> 1340       raise type(e)(node_def, op, message)\n   1341 \n   1342   def _extend_graph(self):\n\nInvalidArgumentError: You must feed a value for placeholder tensor 'batch_size' with dtype int32\n\t [[Node: batch_size = Placeholder[dtype=DT_INT32, shape=[], _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"]()]]\n\nCaused by op u'batch_size', defined at:\n  File \"/usr/lib/python2.7/runpy.py\", line 174, in _run_module_as_main\n    \"__main__\", fname, loader, pkg_name)\n  File \"/usr/lib/python2.7/runpy.py\", line 72, in _run_code\n    exec code in run_globals\n  File \"/usr/local/lib/python2.7/dist-packages/ipykernel_launcher.py\", line 16, in <module>\n    app.launch_new_instance()\n  File \"/usr/local/lib/python2.7/dist-packages/traitlets/config/application.py\", line 658, in launch_instance\n    app.start()\n  File \"/usr/local/lib/python2.7/dist-packages/ipykernel/kernelapp.py\", line 477, in start\n    ioloop.IOLoop.instance().start()\n  File \"/usr/local/lib/python2.7/dist-packages/zmq/eventloop/ioloop.py\", line 177, in start\n    super(ZMQIOLoop, self).start()\n  File \"/usr/local/lib/python2.7/dist-packages/tornado/ioloop.py\", line 888, in start\n    handler_func(fd_obj, events)\n  File \"/usr/local/lib/python2.7/dist-packages/tornado/stack_context.py\", line 277, in null_wrapper\n    return fn(*args, **kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/zmq/eventloop/zmqstream.py\", line 440, in _handle_events\n    self._handle_recv()\n  File \"/usr/local/lib/python2.7/dist-packages/zmq/eventloop/zmqstream.py\", line 472, in _handle_recv\n    self._run_callback(callback, msg)\n  File \"/usr/local/lib/python2.7/dist-packages/zmq/eventloop/zmqstream.py\", line 414, in _run_callback\n    callback(*args, **kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/tornado/stack_context.py\", line 277, in null_wrapper\n    return fn(*args, **kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/ipykernel/kernelbase.py\", line 283, in dispatcher\n    return self.dispatch_shell(stream, msg)\n  File \"/usr/local/lib/python2.7/dist-packages/ipykernel/kernelbase.py\", line 235, in dispatch_shell\n    handler(stream, idents, msg)\n  File \"/usr/local/lib/python2.7/dist-packages/ipykernel/kernelbase.py\", line 399, in execute_request\n    user_expressions, allow_stdin)\n  File \"/usr/local/lib/python2.7/dist-packages/ipykernel/ipkernel.py\", line 196, in do_execute\n    res = shell.run_cell(code, store_history=store_history, silent=silent)\n  File \"/usr/local/lib/python2.7/dist-packages/ipykernel/zmqshell.py\", line 533, in run_cell\n    return super(ZMQInteractiveShell, self).run_cell(*args, **kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/IPython/core/interactiveshell.py\", line 2718, in run_cell\n    interactivity=interactivity, compiler=compiler, result=result)\n  File \"/usr/local/lib/python2.7/dist-packages/IPython/core/interactiveshell.py\", line 2822, in run_ast_nodes\n    if self.run_code(code, result):\n  File \"/usr/local/lib/python2.7/dist-packages/IPython/core/interactiveshell.py\", line 2882, in run_code\n    exec(code_obj, self.user_global_ns, self.user_ns)\n  File \"<ipython-input-1-97b6a51f4b49>\", line 11, in <module>\n    deep = Conn()\n  File \"<ipython-input-1-97b6a51f4b49>\", line 5, in __init__\n    self.batch_size = tf.placeholder(tf.int32,[], name=\"batch_size\")  # `batch_size` is a scalar (0-D tensor).\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/array_ops.py\", line 1777, in placeholder\n    return gen_array_ops.placeholder(dtype=dtype, shape=shape, name=name)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gen_array_ops.py\", line 4521, in placeholder\n    \"Placeholder\", dtype=dtype, shape=shape, name=name)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/op_def_library.py\", line 787, in _apply_op_helper\n    op_def=op_def)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 3290, in create_op\n    op_def=op_def)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 1654, in __init__\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\n\nInvalidArgumentError (see above for traceback): You must feed a value for placeholder tensor 'batch_size' with dtype int32\n\t [[Node: batch_size = Placeholder[dtype=DT_INT32, shape=[], _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"]()]]", "body": "I have a similar problem. I want to feed a value(batch_size) and use it as shape parameter. I think I am feeding value into the placeholder.\r\n\r\n```\r\nimport tensorflow as tf\r\nclass Conn(object):\r\n    def __init__(self):\r\n      self.batch_size = tf.placeholder(tf.int32,[], name=\"batch_size\")  # `batch_size` is a scalar (0-D tensor).\r\n      with  tf.name_scope(\"Conn_func\"):\r\n        random_t = tf.Variable(tf.random_uniform([10,2*self.batch_size], -1.0, 1.0),validate_shape=False, name=\"random_t\")\r\n        random_y = tf.Variable(tf.random_uniform([6, 4], -0.1, 0.1),name=\"random_y\")\r\n        self.k = tf.matmul(random_t, random_y)\r\nwith tf.Session() as sess:\r\n    deep = Conn()\r\n    tf.set_random_seed(1234)\r\n    sess.run([tf.global_variables_initializer(), tf.local_variables_initializer()])\r\n    sess.run([deep.k], feed_dict={deep.batch_size: 3})\r\n    sess.close()\r\n```\r\n\r\n```\r\nInvalidArgumentErrorTraceback (most recent call last)\r\n<ipython-input-4-d5c3455c644d> in <module>()\r\n     10     deep = Conn()\r\n     11     tf.set_random_seed(1234)\r\n---> 12     sess.run([tf.global_variables_initializer(), tf.local_variables_initializer()])\r\n     13     sess.run([deep.k], feed_dict={deep.batch_size: 3})\r\n     14     sess.close()\r\n\r\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.pyc in run(self, fetches, feed_dict, options, run_metadata)\r\n    903     try:\r\n    904       result = self._run(None, fetches, feed_dict, options_ptr,\r\n--> 905                          run_metadata_ptr)\r\n    906       if run_metadata:\r\n    907         proto_data = tf_session.TF_GetBuffer(run_metadata_ptr)\r\n\r\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.pyc in _run(self, handle, fetches, feed_dict, options, run_metadata)\r\n   1138     if final_fetches or final_targets or (handle and feed_dict_tensor):\r\n   1139       results = self._do_run(handle, final_targets, final_fetches,\r\n-> 1140                              feed_dict_tensor, options, run_metadata)\r\n   1141     else:\r\n   1142       results = []\r\n\r\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.pyc in _do_run(self, handle, target_list, fetch_list, feed_dict, options, run_metadata)\r\n   1319     if handle is None:\r\n   1320       return self._do_call(_run_fn, feeds, fetches, targets, options,\r\n-> 1321                            run_metadata)\r\n   1322     else:\r\n   1323       return self._do_call(_prun_fn, handle, feeds, fetches)\r\n\r\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.pyc in _do_call(self, fn, *args)\r\n   1338         except KeyError:\r\n   1339           pass\r\n-> 1340       raise type(e)(node_def, op, message)\r\n   1341 \r\n   1342   def _extend_graph(self):\r\n\r\nInvalidArgumentError: You must feed a value for placeholder tensor 'batch_size' with dtype int32\r\n\t [[Node: batch_size = Placeholder[dtype=DT_INT32, shape=[], _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"]()]]\r\n\r\nCaused by op u'batch_size', defined at:\r\n  File \"/usr/lib/python2.7/runpy.py\", line 174, in _run_module_as_main\r\n    \"__main__\", fname, loader, pkg_name)\r\n  File \"/usr/lib/python2.7/runpy.py\", line 72, in _run_code\r\n    exec code in run_globals\r\n  File \"/usr/local/lib/python2.7/dist-packages/ipykernel_launcher.py\", line 16, in <module>\r\n    app.launch_new_instance()\r\n  File \"/usr/local/lib/python2.7/dist-packages/traitlets/config/application.py\", line 658, in launch_instance\r\n    app.start()\r\n  File \"/usr/local/lib/python2.7/dist-packages/ipykernel/kernelapp.py\", line 477, in start\r\n    ioloop.IOLoop.instance().start()\r\n  File \"/usr/local/lib/python2.7/dist-packages/zmq/eventloop/ioloop.py\", line 177, in start\r\n    super(ZMQIOLoop, self).start()\r\n  File \"/usr/local/lib/python2.7/dist-packages/tornado/ioloop.py\", line 888, in start\r\n    handler_func(fd_obj, events)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tornado/stack_context.py\", line 277, in null_wrapper\r\n    return fn(*args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/zmq/eventloop/zmqstream.py\", line 440, in _handle_events\r\n    self._handle_recv()\r\n  File \"/usr/local/lib/python2.7/dist-packages/zmq/eventloop/zmqstream.py\", line 472, in _handle_recv\r\n    self._run_callback(callback, msg)\r\n  File \"/usr/local/lib/python2.7/dist-packages/zmq/eventloop/zmqstream.py\", line 414, in _run_callback\r\n    callback(*args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tornado/stack_context.py\", line 277, in null_wrapper\r\n    return fn(*args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/ipykernel/kernelbase.py\", line 283, in dispatcher\r\n    return self.dispatch_shell(stream, msg)\r\n  File \"/usr/local/lib/python2.7/dist-packages/ipykernel/kernelbase.py\", line 235, in dispatch_shell\r\n    handler(stream, idents, msg)\r\n  File \"/usr/local/lib/python2.7/dist-packages/ipykernel/kernelbase.py\", line 399, in execute_request\r\n    user_expressions, allow_stdin)\r\n  File \"/usr/local/lib/python2.7/dist-packages/ipykernel/ipkernel.py\", line 196, in do_execute\r\n    res = shell.run_cell(code, store_history=store_history, silent=silent)\r\n  File \"/usr/local/lib/python2.7/dist-packages/ipykernel/zmqshell.py\", line 533, in run_cell\r\n    return super(ZMQInteractiveShell, self).run_cell(*args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/IPython/core/interactiveshell.py\", line 2718, in run_cell\r\n    interactivity=interactivity, compiler=compiler, result=result)\r\n  File \"/usr/local/lib/python2.7/dist-packages/IPython/core/interactiveshell.py\", line 2822, in run_ast_nodes\r\n    if self.run_code(code, result):\r\n  File \"/usr/local/lib/python2.7/dist-packages/IPython/core/interactiveshell.py\", line 2882, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-1-97b6a51f4b49>\", line 11, in <module>\r\n    deep = Conn()\r\n  File \"<ipython-input-1-97b6a51f4b49>\", line 5, in __init__\r\n    self.batch_size = tf.placeholder(tf.int32,[], name=\"batch_size\")  # `batch_size` is a scalar (0-D tensor).\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/array_ops.py\", line 1777, in placeholder\r\n    return gen_array_ops.placeholder(dtype=dtype, shape=shape, name=name)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gen_array_ops.py\", line 4521, in placeholder\r\n    \"Placeholder\", dtype=dtype, shape=shape, name=name)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/op_def_library.py\", line 787, in _apply_op_helper\r\n    op_def=op_def)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 3290, in create_op\r\n    op_def=op_def)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 1654, in __init__\r\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\r\n\r\nInvalidArgumentError (see above for traceback): You must feed a value for placeholder tensor 'batch_size' with dtype int32\r\n\t [[Node: batch_size = Placeholder[dtype=DT_INT32, shape=[], _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"]()]]\r\n```"}