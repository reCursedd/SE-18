{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/131116686", "pull_request_review_id": 54064430, "id": 131116686, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMTExNjY4Ng==", "diff_hunk": "@@ -0,0 +1,249 @@\n+/* Copyright 2015 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+\n+// See docs in ../ops/linalg_ops.cc.\n+// TODO(shamanDevel): Enable complex inputs. This will require additional tests\n+//                    and OP_REQUIRES.\n+#if GOOGLE_CUDA\n+#define EIGEN_USE_GPU\n+\n+#include <algorithm>\n+\n+#include \"tensorflow/core/framework/kernel_def_builder.h\"\n+#include \"tensorflow/core/framework/op_kernel.h\"\n+#include \"tensorflow/core/framework/register_types.h\"\n+#include \"tensorflow/core/framework/tensor_shape.h\"\n+#include \"tensorflow/core/kernels/linalg_ops_common.h\"\n+#include \"tensorflow/core/lib/core/errors.h\"\n+#include \"tensorflow/core/platform/logging.h\"\n+#include \"tensorflow/core/platform/types.h\"\n+\n+#include \"tensorflow/core/kernels/cuda_solvers.h\"\n+#include \"tensorflow/core/platform/stream_executor.h\"\n+#include \"third_party/eigen3/unsupported/Eigen/CXX11/Tensor\"\n+\n+// I need to transpose V afterwards\n+#include <vector>\n+#include \"transpose_functor.h\"\n+\n+// Logging\n+#include <stdio.h>\n+\n+namespace tensorflow {\n+\n+static const char kErrMsg[] =\n+    \"Singular Value Decomposition was not successful. The input might not be \"\n+    \"valid.\";\n+\n+typedef Eigen::GpuDevice GPUDevice;\n+\n+template <class Scalar>\n+class SvdOpGpu : public AsyncOpKernel {\n+ public:\n+  explicit SvdOpGpu(OpKernelConstruction* context) : AsyncOpKernel(context) {\n+    OP_REQUIRES_OK(context, context->GetAttr(\"compute_uv\", &compute_uv_));\n+    OP_REQUIRES_OK(context, context->GetAttr(\"full_matrices\", &full_matrices_));\n+  }\n+\n+  void ComputeAsync(OpKernelContext* context, DoneCallback done) final {\n+    const Tensor& input = context->input(0);\n+    const int ndims = input.dims();\n+    const int64 m = input.dim_size(ndims - 2);\n+    const int64 n = input.dim_size(ndims - 1);\n+    const int64 p = std::min(m, n);\n+\n+    // This is a limitation of cuSolver\n+    OP_REQUIRES_ASYNC(\n+        context, m >= n,\n+        errors::InvalidArgument(\n+            \"GPU implementation of SVD only supports m>=n, but m=\", m, \", n=\",", "path": "tensorflow/core/kernels/svd_op_gpu.cu.cc", "position": null, "original_position": 71, "commit_id": "bfda71b1104c7d1d0210439c22cded14c87c7db7", "original_commit_id": "61a77cb6c1b65678f41e60bbd9a93c1052fe8aa8", "user": {"login": "shamanDevel", "id": 1770337, "node_id": "MDQ6VXNlcjE3NzAzMzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1770337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shamanDevel", "html_url": "https://github.com/shamanDevel", "followers_url": "https://api.github.com/users/shamanDevel/followers", "following_url": "https://api.github.com/users/shamanDevel/following{/other_user}", "gists_url": "https://api.github.com/users/shamanDevel/gists{/gist_id}", "starred_url": "https://api.github.com/users/shamanDevel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shamanDevel/subscriptions", "organizations_url": "https://api.github.com/users/shamanDevel/orgs", "repos_url": "https://api.github.com/users/shamanDevel/repos", "events_url": "https://api.github.com/users/shamanDevel/events{/privacy}", "received_events_url": "https://api.github.com/users/shamanDevel/received_events", "type": "User", "site_admin": false}, "body": "That's a good idea. I'll implement that.", "created_at": "2017-08-03T11:27:37Z", "updated_at": "2017-09-06T05:32:18Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/11878#discussion_r131116686", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11878", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/131116686"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/11878#discussion_r131116686"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11878"}}, "body_html": "<p>That's a good idea. I'll implement that.</p>", "body_text": "That's a good idea. I'll implement that.", "in_reply_to_id": 130752243}