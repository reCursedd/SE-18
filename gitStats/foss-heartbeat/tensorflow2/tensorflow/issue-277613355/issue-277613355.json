{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14959", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14959/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14959/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14959/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14959", "id": 277613355, "node_id": "MDU6SXNzdWUyNzc2MTMzNTU=", "number": 14959, "title": "[BUG]Out-of-Bounds Read in DecodeBmpOp class(tensorflow/core/kernels/decode_bmp_op.cc)", "user": {"login": "zhangbo5891001", "id": 29591201, "node_id": "MDQ6VXNlcjI5NTkxMjAx", "avatar_url": "https://avatars2.githubusercontent.com/u/29591201?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangbo5891001", "html_url": "https://github.com/zhangbo5891001", "followers_url": "https://api.github.com/users/zhangbo5891001/followers", "following_url": "https://api.github.com/users/zhangbo5891001/following{/other_user}", "gists_url": "https://api.github.com/users/zhangbo5891001/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangbo5891001/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangbo5891001/subscriptions", "organizations_url": "https://api.github.com/users/zhangbo5891001/orgs", "repos_url": "https://api.github.com/users/zhangbo5891001/repos", "events_url": "https://api.github.com/users/zhangbo5891001/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangbo5891001/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-29T03:00:53Z", "updated_at": "2017-11-30T19:14:37Z", "closed_at": "2017-11-30T19:14:36Z", "author_association": "NONE", "body_html": "<hr>\n<h3>System information</h3>\n<ul>\n<li><strong>The following is output of tf_env_collect.sh</strong>:<br>\n== cat /etc/issue ===============================================<br>\nLinux ubuntu 4.4.0-31-generic <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"115996914\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/50\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/50/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/50\">#50</a>~14.04.1-Ubuntu SMP Wed Jul 13 01:07:32 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux<br>\nVERSION=\"14.04.5 LTS, Trusty Tahr\"<br>\nVERSION_ID=\"14.04\"</li>\n</ul>\n<p>== are we in docker =============================================<br>\nNo</p>\n<p>== compiler =====================================================<br>\nc++ (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4<br>\nCopyright (C) 2013 Free Software Foundation, Inc.<br>\nThis is free software; see the source for copying conditions.  There is NO<br>\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</p>\n<p>== uname -a =====================================================<br>\nLinux ubuntu 4.4.0-31-generic <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"115996914\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/50\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/50/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/50\">#50</a>~14.04.1-Ubuntu SMP Wed Jul 13 01:07:32 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux</p>\n<p>== check pips ===================================================<br>\nnumpy (1.13.3)<br>\nprotobuf (3.4.0)<br>\ntensorflow (1.4.0)<br>\ntensorflow-tensorboard (0.4.0rc2)</p>\n<p>== check for virtualenv =========================================<br>\nTrue</p>\n<p>== tensorflow import ============================================<br>\ntf.VERSION = 1.4.0<br>\ntf.GIT_VERSION = v1.4.0-rc1-11-g130a514<br>\ntf.COMPILER_VERSION = v1.4.0-rc1-11-g130a514<br>\nSanity check: array([1], dtype=int32)</p>\n<p>== env ==========================================================<br>\nLD_LIBRARY_PATH is unset<br>\nDYLD_LIBRARY_PATH is unset</p>\n<p>== nvidia-smi ===================================================<br>\ntensorflow/tools/tf_env_collect.sh: line 105: nvidia-smi: command not found</p>\n<p>== cuda libs  ===================================================</p>\n<h3>Describe the problem</h3>\n<p>The DecodeBmpOp class is the decoder of bmp file. The class is in<br>\ntensorflow/core/kernels/decode_bmp_op.cc. When dealling with a bmp file, the decoder doesn't invalidate the meta info of bmp file, such as header_size, width, height. It causes a Out-of-Bound Read in DecodeBmpOp::Decode func or DecodeBmpOp ::Compute func. If given an evil bmp file, the program using this API will crash.</p>\n<h3>Source code / logs</h3>\n<ul>\n<li><strong>Here is the crash call stack of program</strong>:<br>\nThe bmp file  in the attachment causes a crash.</li>\n</ul>\n<p>Program received signal SIGSEGV, Segmentation fault.<br>\n0x0000000004200bc0 in tensorflow::DecodeBmpOp::Decode (this=this@entry=0x602400032a40, input=input@entry=0x601c000214ce \"33\", output=0x7fffcefcf800 \"\", width=width@entry=2336, height=height@entry=61727, channels=channels@entry=3, top_down=top_down@entry=false) at tensorflow/core/kernels/decode_bmp_op.cc:122<br>\nProgram received signal SIGSEGV (fault address 0x601c19caaa10)<br>\npwndbg&gt; bt<br>\n#0  0x0000000004200bc0 in tensorflow::DecodeBmpOp::Decode (this=this@entry=0x602400032a40, input=input@entry=0x601c000214ce \"33\", output=0x7fffcefcf800 \"\", width=width@entry=2336, height=height@entry=61727, channels=channels@entry=3, top_down=top_down@entry=false) at tensorflow/core/kernels/decode_bmp_op.cc:122<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"115886302\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/1\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/1/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/1\">#1</a>  0x0000000004202d3b in tensorflow::DecodeBmpOp::Compute (this=0x602400032a40, context=) at tensorflow/core/kernels/decode_bmp_op.cc:88<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"115894138\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/2\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/2/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/2\">#2</a>  0x00007ffff3ed8880 in tensorflow::ThreadPoolDevice::Compute (this=, op_kernel=0x602400032a40, context=0x7fffffff8320) at tensorflow/core/common_runtime/threadpool_device.cc:59<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"115896656\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/3\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/3/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/3\">#3</a>  0x00007ffff3d47110 in tensorflow::(anonymous namespace)::ExecutorState::Process (this=, tagged_node=..., scheduled_usec=) at tensorflow/core/common_runtime/executor.cc:1652<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"115898449\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/4\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/4/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/4\">#4</a>  0x00007ffff3d4cc0c in operator() (__closure=) at tensorflow/core/common_runtime/executor.cc:2055<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"115910900\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/5\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/5/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/5\">#5</a>  std::_Function_handler&lt;void(), tensorflow::(anonymous namespace)::ExecutorState::ScheduleReady(const TaggedNodeSeq&amp;, tensorflow::(anonymous namespace)::ExecutorState::TaggedNodeReadyQueue*)::__lambda3&gt;::_M_invoke(const std::_Any_data &amp;) (__functor=...) at /usr/include/c++/4.8/functional:2071<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"115911735\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/6\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/6/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/6\">#6</a>  0x00007ffff3db2351 in operator() (this=0x7fffffff8790) at /usr/include/c++/4.8/functional:2471<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"115912111\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/7\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/7/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/7\">#7</a>  operator() (__closure=, c=...) at tensorflow/core/common_runtime/graph_runner.cc:146<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"115914495\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/8\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/8/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/8\">#8</a>  std::_Function_handler&lt;void(std::function&lt;void()&gt;), tensorflow::GraphRunner::Run(tensorflow::Graph*, tensorflow::FunctionLibraryRuntime*, const NamedTensorList&amp;, const std::vector&lt;std::basic_string &gt;&amp;, std::vectortensorflow::Tensor*)::__lambda2&gt;::_M_invoke(const std::_Any_data &amp;, std::function&lt;void()&gt;) (__functor=..., __args#0=...) at /usr/include/c++/4.8/functional:2071<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"115914691\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/9\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/9/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/9\">#9</a>  0x00007ffff3ce0258 in operator() (__args#0=..., this=) at /usr/include/c++/4.8/functional:2471<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"115914766\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/10\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/10/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/10\">#10</a> tensorflow::(anonymous namespace)::ExecutorState::ScheduleReady (this=0x6026000fd1a0, ready=..., inline_ready=0x0) at tensorflow/core/common_runtime/executor.cc:2055<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"115914813\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/11\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/11/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/11\">#11</a> 0x00007ffff3d00a0c in ScheduleReady (inline_ready=0x0, ready=..., this=) at tensorflow/core/common_runtime/executor.cc:2046<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"115915395\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/12\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/12/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/12\">#12</a> RunAsync (done=, this=) at tensorflow/core/common_runtime/executor.cc:1439<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"115918299\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/13\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/tensorflow/tensorflow/pull/13/hovercard\" href=\"https://github.com/tensorflow/tensorflow/pull/13\">#13</a> tensorflow::(anonymous namespace)::ExecutorImpl::RunAsync (this=this@entry=0x602400032f40, args=..., done=...) at tensorflow/core/common_runtime/executor.cc:2564<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"115918464\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/14\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/14/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/14\">#14</a> 0x00007ffff3db999f in Run (args=..., this=0x602400032f40) at ./tensorflow/core/common_runtime/executor.h:117<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"115922135\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/15\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/15/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/15\">#15</a> tensorflow::GraphRunner::Run (this=this@entry=0x6004002d08f0, graph=graph@entry=0x603a00003140, function_library=function_library@entry=0x602400033800, inputs=std::vector of length 0, capacity 0, output_names=std::vector of length 1, capacity 1 = {...}, outputs=outputs@entry=0x7fffffffa810) at tensorflow/core/common_runtime/graph_runner.cc:174<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"115925923\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/16\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/16/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/16\">#16</a> 0x00007ffff3c4f36d in tensorflow::ConstantFold (opts=..., function_library=function_library@entry=0x602400033800, env=env@entry=0x60060000e140, partition_device=partition_device@entry=0x6024000395c0, graph=graph@entry=0x603a00003480, was_mutated=was_mutated@entry=0x7fffffffb260) at tensorflow/core/common_runtime/constant_folding.cc:603<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"115925964\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/17\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/17/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/17\">#17</a> 0x00007ffff3db02bd in tensorflow::GraphOptimizer::Optimize (this=this@entry=0x7fffffffbe90, runtime=runtime@entry=0x602400033800, env=0x60060000e140, device=0x6024000395c0, graph=graph@entry=0x60060038d2f0, shape_map=shape_map@entry=0x0) at tensorflow/core/common_runtime/graph_optimizer.cc:66<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"115926208\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/18\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/18/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/18\">#18</a> 0x000000000ad04984 in tensorflow::DirectSession::GetOrCreateExecutors (this=this@entry=0x604000007080, inputs=..., outputs=..., target_nodes=..., executors_and_keys=executors_and_keys@entry=0x7fffffffc4f0, run_state_args=run_state_args@entry=0x7fffffffc730) at tensorflow/core/common_runtime/direct_session.cc:1208<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"115926362\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/19\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/19/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/19\">#19</a> 0x000000000ad0d0f7 in tensorflow::DirectSession::Run (this=, run_options=..., inputs=std::vector of length 0, capacity 0, output_names=std::vector of length 1, capacity 1 = {...}, target_nodes=std::vector of length 0, capacity 0, outputs=0x0, run_metadata=0x0) at tensorflow/core/common_runtime/direct_session.cc:472<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"115927762\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/20\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/20/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/20\">#20</a> 0x000000000ad6fa95 in tensorflow::ClientSession::Run (this=this@entry=0x7fffffffdc30, run_options=..., inputs=std::unordered_map with 0 elements, fetch_outputs=std::vector of length 1, capacity 1 = {...}, run_outputs=std::vector of length 0, capacity 0, outputs=outputs@entry=0x0, run_metadata=run_metadata@entry=0x0) at tensorflow/cc/client/client_session.cc:127<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"115927987\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/21\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/21/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/21\">#21</a> 0x000000000ad74b6d in Run (outputs=0x0, run_outputs=std::vector of length 0, capacity 0, fetch_outputs=std::vector of length 1, capacity 1 = {...}, inputs=std::unordered_map with 0 elements, this=0x7fffffffdc30) at tensorflow/cc/client/client_session.cc:90<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"115928097\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/22\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/22/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/22\">#22</a> tensorflow::ClientSession::Run (this=this@entry=0x7fffffffdc30, fetch_outputs=std::vector of length 1, capacity 1 = {...}, outputs=outputs@entry=0x0) at tensorflow/cc/client/client_session.cc:76<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"115928832\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/23\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/23/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/23\">#23</a> 0x000000000048042a in main (argc=1, argc@entry=2, argv=argv@entry=0x7fffffffe2e8) at tensorflow/examples/decode_image/main.cc:99<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"115932607\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/24\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/24/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/24\">#24</a> 0x00007ffff03c1f45 in __libc_start_main (main=0x47e4b0 &lt;main(int, char**)&gt;, argc=2, argv=0x7fffffffe2e8, init=, fini=, rtld_fini=, stack_end=0x7fffffffe2d8) at libc-start.c:287<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"115938248\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/25\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/25/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/25\">#25</a> 0x0000000000737eca in _start ()</p>\n<ul>\n<li><strong>source code of c++ program</strong>:<br>\n#include <br>\n#include <br>\n#include </li>\n</ul>\n<p>#include \"tensorflow/cc/ops/const_op.h\"<br>\n#include \"tensorflow/cc/ops/image_ops.h\"<br>\n#include \"tensorflow/cc/ops/standard_ops.h\"<br>\n#include \"tensorflow/core/framework/graph.pb.h\"<br>\n#include \"tensorflow/core/framework/tensor.h\"<br>\n#include \"tensorflow/core/graph/default_device.h\"<br>\n#include \"tensorflow/core/graph/graph_def_builder.h\"<br>\n#include \"tensorflow/core/lib/core/errors.h\"<br>\n#include \"tensorflow/core/lib/core/stringpiece.h\"<br>\n#include \"tensorflow/core/lib/core/threadpool.h\"<br>\n#include \"tensorflow/core/lib/io/path.h\"<br>\n#include \"tensorflow/core/lib/strings/stringprintf.h\"<br>\n#include \"tensorflow/core/platform/env.h\"<br>\n#include \"tensorflow/core/platform/init_main.h\"<br>\n#include \"tensorflow/core/platform/logging.h\"<br>\n#include \"tensorflow/core/platform/types.h\"<br>\n#include \"tensorflow/core/public/session.h\"<br>\n#include \"tensorflow/core/util/command_line_flags.h\"<br>\n#include \"tensorflow/cc/client/client_session.h\"</p>\n<p>// These are all common classes it's handy to reference with no namespace.<br>\nusing tensorflow::Flag;<br>\nusing tensorflow::Tensor;<br>\nusing tensorflow::Status;<br>\nusing tensorflow::string;<br>\nusing tensorflow::int32;</p>\n<p>int main(int argc, char* argv[]) {<br>\nstring image = \"tensorflow/examples/label_image/data/grace_hopper.jpg\";<br>\nstd::vector flag_list = {<br>\nFlag(\"image\", &amp;image, \"image to be processed\"),<br>\n};<br>\nstring usage = tensorflow::Flags::Usage(argv[0], flag_list);<br>\nconst bool parse_result = tensorflow::Flags::Parse(&amp;argc, argv, flag_list);<br>\nif (!parse_result) {<br>\nLOG(ERROR) &lt;&lt; usage;<br>\nreturn -1;<br>\n}</p>\n<p>// We need to call this to set up global state for TensorFlow.<br>\ntensorflow::port::InitMain(argv[0], &amp;argc, &amp;argv);<br>\nif (argc &gt; 1) {<br>\nLOG(ERROR) &lt;&lt; \"Unknown argument \" &lt;&lt; argv[1] &lt;&lt; \"\\n\" &lt;&lt; usage;<br>\nreturn -1;<br>\n}</p>\n<pre><code>    using namespace ::tensorflow::ops;\n</code></pre>\n<p>auto root = tensorflow::Scope::NewRootScope();<br>\ntensorflow::Output file_reader = ReadFile(root.WithOpName(\"input_image\"), image);<br>\ntensorflow::Output gif_reader = DecodeGif(root.WithOpName(\"gif_reader\"), file_reader);<br>\ntensorflow::Output bmp_reader = DecodeBmp(root.WithOpName(\"bmp_reader\"), file_reader);<br>\ntensorflow::Output jpeg_reader = DecodeJpeg(root.WithOpName(\"jpeg_reader\"), file_reader);<br>\ntensorflow::Output png_reader = DecodePng(root.WithOpName(\"png_reader\"), file_reader);</p>\n<pre><code>    std::vector&lt;tensorflow::Tensor&gt; outputs;\n    tensorflow::ClientSession session(root);\n</code></pre>\n<p>session.Run({gif_reader}, nullptr);<br>\nsession.Run({bmp_reader}, nullptr);<br>\nsession.Run({jpeg_reader}, nullptr);<br>\nsession.Run({png_reader}, nullptr);</p>\n<p>return 0;<br>\n}</p>\n<ul>\n<li><strong>source code of python program</strong>:<br>\nimport argparse<br>\nimport tensorflow as tf</li>\n</ul>\n<p>if <strong>name</strong> == \"<strong>main</strong>\":<br>\nfile_name = \"tensorflow/examples/label_image/data/grace_hopper.jpg\"<br>\nparser = argparse.ArgumentParser()<br>\nparser.add_argument(\"--image\", help=\"image to be processed\")<br>\nargs = parser.parse_args()<br>\nif args.image:<br>\nfile_name = args.image<br>\nfile_reader = tf.read_file(file_name, \"file_reader\")<br>\nimage_reader = tf.image.decode_bmp(file_reader, name='bmp_reader')<br>\nsess = tf.Session()<br>\nsess.run(image_reader)</p>\n<p><a href=\"https://github.com/tensorflow/tensorflow/files/1512398/evil.zip\">evil.zip</a></p>", "body_text": "System information\n\nThe following is output of tf_env_collect.sh:\n== cat /etc/issue ===============================================\nLinux ubuntu 4.4.0-31-generic #50~14.04.1-Ubuntu SMP Wed Jul 13 01:07:32 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux\nVERSION=\"14.04.5 LTS, Trusty Tahr\"\nVERSION_ID=\"14.04\"\n\n== are we in docker =============================================\nNo\n== compiler =====================================================\nc++ (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4\nCopyright (C) 2013 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n== uname -a =====================================================\nLinux ubuntu 4.4.0-31-generic #50~14.04.1-Ubuntu SMP Wed Jul 13 01:07:32 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux\n== check pips ===================================================\nnumpy (1.13.3)\nprotobuf (3.4.0)\ntensorflow (1.4.0)\ntensorflow-tensorboard (0.4.0rc2)\n== check for virtualenv =========================================\nTrue\n== tensorflow import ============================================\ntf.VERSION = 1.4.0\ntf.GIT_VERSION = v1.4.0-rc1-11-g130a514\ntf.COMPILER_VERSION = v1.4.0-rc1-11-g130a514\nSanity check: array([1], dtype=int32)\n== env ==========================================================\nLD_LIBRARY_PATH is unset\nDYLD_LIBRARY_PATH is unset\n== nvidia-smi ===================================================\ntensorflow/tools/tf_env_collect.sh: line 105: nvidia-smi: command not found\n== cuda libs  ===================================================\nDescribe the problem\nThe DecodeBmpOp class is the decoder of bmp file. The class is in\ntensorflow/core/kernels/decode_bmp_op.cc. When dealling with a bmp file, the decoder doesn't invalidate the meta info of bmp file, such as header_size, width, height. It causes a Out-of-Bound Read in DecodeBmpOp::Decode func or DecodeBmpOp ::Compute func. If given an evil bmp file, the program using this API will crash.\nSource code / logs\n\nHere is the crash call stack of program:\nThe bmp file  in the attachment causes a crash.\n\nProgram received signal SIGSEGV, Segmentation fault.\n0x0000000004200bc0 in tensorflow::DecodeBmpOp::Decode (this=this@entry=0x602400032a40, input=input@entry=0x601c000214ce \"33\", output=0x7fffcefcf800 \"\", width=width@entry=2336, height=height@entry=61727, channels=channels@entry=3, top_down=top_down@entry=false) at tensorflow/core/kernels/decode_bmp_op.cc:122\nProgram received signal SIGSEGV (fault address 0x601c19caaa10)\npwndbg> bt\n#0  0x0000000004200bc0 in tensorflow::DecodeBmpOp::Decode (this=this@entry=0x602400032a40, input=input@entry=0x601c000214ce \"33\", output=0x7fffcefcf800 \"\", width=width@entry=2336, height=height@entry=61727, channels=channels@entry=3, top_down=top_down@entry=false) at tensorflow/core/kernels/decode_bmp_op.cc:122\n#1  0x0000000004202d3b in tensorflow::DecodeBmpOp::Compute (this=0x602400032a40, context=) at tensorflow/core/kernels/decode_bmp_op.cc:88\n#2  0x00007ffff3ed8880 in tensorflow::ThreadPoolDevice::Compute (this=, op_kernel=0x602400032a40, context=0x7fffffff8320) at tensorflow/core/common_runtime/threadpool_device.cc:59\n#3  0x00007ffff3d47110 in tensorflow::(anonymous namespace)::ExecutorState::Process (this=, tagged_node=..., scheduled_usec=) at tensorflow/core/common_runtime/executor.cc:1652\n#4  0x00007ffff3d4cc0c in operator() (__closure=) at tensorflow/core/common_runtime/executor.cc:2055\n#5  std::_Function_handler<void(), tensorflow::(anonymous namespace)::ExecutorState::ScheduleReady(const TaggedNodeSeq&, tensorflow::(anonymous namespace)::ExecutorState::TaggedNodeReadyQueue*)::__lambda3>::_M_invoke(const std::_Any_data &) (__functor=...) at /usr/include/c++/4.8/functional:2071\n#6  0x00007ffff3db2351 in operator() (this=0x7fffffff8790) at /usr/include/c++/4.8/functional:2471\n#7  operator() (__closure=, c=...) at tensorflow/core/common_runtime/graph_runner.cc:146\n#8  std::_Function_handler<void(std::function<void()>), tensorflow::GraphRunner::Run(tensorflow::Graph*, tensorflow::FunctionLibraryRuntime*, const NamedTensorList&, const std::vector<std::basic_string >&, std::vectortensorflow::Tensor*)::__lambda2>::_M_invoke(const std::_Any_data &, std::function<void()>) (__functor=..., __args#0=...) at /usr/include/c++/4.8/functional:2071\n#9  0x00007ffff3ce0258 in operator() (__args#0=..., this=) at /usr/include/c++/4.8/functional:2471\n#10 tensorflow::(anonymous namespace)::ExecutorState::ScheduleReady (this=0x6026000fd1a0, ready=..., inline_ready=0x0) at tensorflow/core/common_runtime/executor.cc:2055\n#11 0x00007ffff3d00a0c in ScheduleReady (inline_ready=0x0, ready=..., this=) at tensorflow/core/common_runtime/executor.cc:2046\n#12 RunAsync (done=, this=) at tensorflow/core/common_runtime/executor.cc:1439\n#13 tensorflow::(anonymous namespace)::ExecutorImpl::RunAsync (this=this@entry=0x602400032f40, args=..., done=...) at tensorflow/core/common_runtime/executor.cc:2564\n#14 0x00007ffff3db999f in Run (args=..., this=0x602400032f40) at ./tensorflow/core/common_runtime/executor.h:117\n#15 tensorflow::GraphRunner::Run (this=this@entry=0x6004002d08f0, graph=graph@entry=0x603a00003140, function_library=function_library@entry=0x602400033800, inputs=std::vector of length 0, capacity 0, output_names=std::vector of length 1, capacity 1 = {...}, outputs=outputs@entry=0x7fffffffa810) at tensorflow/core/common_runtime/graph_runner.cc:174\n#16 0x00007ffff3c4f36d in tensorflow::ConstantFold (opts=..., function_library=function_library@entry=0x602400033800, env=env@entry=0x60060000e140, partition_device=partition_device@entry=0x6024000395c0, graph=graph@entry=0x603a00003480, was_mutated=was_mutated@entry=0x7fffffffb260) at tensorflow/core/common_runtime/constant_folding.cc:603\n#17 0x00007ffff3db02bd in tensorflow::GraphOptimizer::Optimize (this=this@entry=0x7fffffffbe90, runtime=runtime@entry=0x602400033800, env=0x60060000e140, device=0x6024000395c0, graph=graph@entry=0x60060038d2f0, shape_map=shape_map@entry=0x0) at tensorflow/core/common_runtime/graph_optimizer.cc:66\n#18 0x000000000ad04984 in tensorflow::DirectSession::GetOrCreateExecutors (this=this@entry=0x604000007080, inputs=..., outputs=..., target_nodes=..., executors_and_keys=executors_and_keys@entry=0x7fffffffc4f0, run_state_args=run_state_args@entry=0x7fffffffc730) at tensorflow/core/common_runtime/direct_session.cc:1208\n#19 0x000000000ad0d0f7 in tensorflow::DirectSession::Run (this=, run_options=..., inputs=std::vector of length 0, capacity 0, output_names=std::vector of length 1, capacity 1 = {...}, target_nodes=std::vector of length 0, capacity 0, outputs=0x0, run_metadata=0x0) at tensorflow/core/common_runtime/direct_session.cc:472\n#20 0x000000000ad6fa95 in tensorflow::ClientSession::Run (this=this@entry=0x7fffffffdc30, run_options=..., inputs=std::unordered_map with 0 elements, fetch_outputs=std::vector of length 1, capacity 1 = {...}, run_outputs=std::vector of length 0, capacity 0, outputs=outputs@entry=0x0, run_metadata=run_metadata@entry=0x0) at tensorflow/cc/client/client_session.cc:127\n#21 0x000000000ad74b6d in Run (outputs=0x0, run_outputs=std::vector of length 0, capacity 0, fetch_outputs=std::vector of length 1, capacity 1 = {...}, inputs=std::unordered_map with 0 elements, this=0x7fffffffdc30) at tensorflow/cc/client/client_session.cc:90\n#22 tensorflow::ClientSession::Run (this=this@entry=0x7fffffffdc30, fetch_outputs=std::vector of length 1, capacity 1 = {...}, outputs=outputs@entry=0x0) at tensorflow/cc/client/client_session.cc:76\n#23 0x000000000048042a in main (argc=1, argc@entry=2, argv=argv@entry=0x7fffffffe2e8) at tensorflow/examples/decode_image/main.cc:99\n#24 0x00007ffff03c1f45 in __libc_start_main (main=0x47e4b0 <main(int, char**)>, argc=2, argv=0x7fffffffe2e8, init=, fini=, rtld_fini=, stack_end=0x7fffffffe2d8) at libc-start.c:287\n#25 0x0000000000737eca in _start ()\n\nsource code of c++ program:\n#include \n#include \n#include \n\n#include \"tensorflow/cc/ops/const_op.h\"\n#include \"tensorflow/cc/ops/image_ops.h\"\n#include \"tensorflow/cc/ops/standard_ops.h\"\n#include \"tensorflow/core/framework/graph.pb.h\"\n#include \"tensorflow/core/framework/tensor.h\"\n#include \"tensorflow/core/graph/default_device.h\"\n#include \"tensorflow/core/graph/graph_def_builder.h\"\n#include \"tensorflow/core/lib/core/errors.h\"\n#include \"tensorflow/core/lib/core/stringpiece.h\"\n#include \"tensorflow/core/lib/core/threadpool.h\"\n#include \"tensorflow/core/lib/io/path.h\"\n#include \"tensorflow/core/lib/strings/stringprintf.h\"\n#include \"tensorflow/core/platform/env.h\"\n#include \"tensorflow/core/platform/init_main.h\"\n#include \"tensorflow/core/platform/logging.h\"\n#include \"tensorflow/core/platform/types.h\"\n#include \"tensorflow/core/public/session.h\"\n#include \"tensorflow/core/util/command_line_flags.h\"\n#include \"tensorflow/cc/client/client_session.h\"\n// These are all common classes it's handy to reference with no namespace.\nusing tensorflow::Flag;\nusing tensorflow::Tensor;\nusing tensorflow::Status;\nusing tensorflow::string;\nusing tensorflow::int32;\nint main(int argc, char* argv[]) {\nstring image = \"tensorflow/examples/label_image/data/grace_hopper.jpg\";\nstd::vector flag_list = {\nFlag(\"image\", &image, \"image to be processed\"),\n};\nstring usage = tensorflow::Flags::Usage(argv[0], flag_list);\nconst bool parse_result = tensorflow::Flags::Parse(&argc, argv, flag_list);\nif (!parse_result) {\nLOG(ERROR) << usage;\nreturn -1;\n}\n// We need to call this to set up global state for TensorFlow.\ntensorflow::port::InitMain(argv[0], &argc, &argv);\nif (argc > 1) {\nLOG(ERROR) << \"Unknown argument \" << argv[1] << \"\\n\" << usage;\nreturn -1;\n}\n    using namespace ::tensorflow::ops;\n\nauto root = tensorflow::Scope::NewRootScope();\ntensorflow::Output file_reader = ReadFile(root.WithOpName(\"input_image\"), image);\ntensorflow::Output gif_reader = DecodeGif(root.WithOpName(\"gif_reader\"), file_reader);\ntensorflow::Output bmp_reader = DecodeBmp(root.WithOpName(\"bmp_reader\"), file_reader);\ntensorflow::Output jpeg_reader = DecodeJpeg(root.WithOpName(\"jpeg_reader\"), file_reader);\ntensorflow::Output png_reader = DecodePng(root.WithOpName(\"png_reader\"), file_reader);\n    std::vector<tensorflow::Tensor> outputs;\n    tensorflow::ClientSession session(root);\n\nsession.Run({gif_reader}, nullptr);\nsession.Run({bmp_reader}, nullptr);\nsession.Run({jpeg_reader}, nullptr);\nsession.Run({png_reader}, nullptr);\nreturn 0;\n}\n\nsource code of python program:\nimport argparse\nimport tensorflow as tf\n\nif name == \"main\":\nfile_name = \"tensorflow/examples/label_image/data/grace_hopper.jpg\"\nparser = argparse.ArgumentParser()\nparser.add_argument(\"--image\", help=\"image to be processed\")\nargs = parser.parse_args()\nif args.image:\nfile_name = args.image\nfile_reader = tf.read_file(file_name, \"file_reader\")\nimage_reader = tf.image.decode_bmp(file_reader, name='bmp_reader')\nsess = tf.Session()\nsess.run(image_reader)\nevil.zip", "body": "------------------------\r\n\r\n### System information\r\n- **The following is output of tf_env_collect.sh**:\r\n== cat /etc/issue ===============================================\r\nLinux ubuntu 4.4.0-31-generic #50~14.04.1-Ubuntu SMP Wed Jul 13 01:07:32 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux\r\nVERSION=\"14.04.5 LTS, Trusty Tahr\"\r\nVERSION_ID=\"14.04\"\r\n\r\n== are we in docker =============================================\r\nNo\r\n\r\n== compiler =====================================================\r\nc++ (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4\r\nCopyright (C) 2013 Free Software Foundation, Inc.\r\nThis is free software; see the source for copying conditions.  There is NO\r\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n\r\n\r\n== uname -a =====================================================\r\nLinux ubuntu 4.4.0-31-generic #50~14.04.1-Ubuntu SMP Wed Jul 13 01:07:32 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux\r\n\r\n== check pips ===================================================\r\nnumpy (1.13.3)\r\nprotobuf (3.4.0)\r\ntensorflow (1.4.0)\r\ntensorflow-tensorboard (0.4.0rc2)\r\n\r\n== check for virtualenv =========================================\r\nTrue\r\n\r\n== tensorflow import ============================================\r\ntf.VERSION = 1.4.0\r\ntf.GIT_VERSION = v1.4.0-rc1-11-g130a514\r\ntf.COMPILER_VERSION = v1.4.0-rc1-11-g130a514\r\nSanity check: array([1], dtype=int32)\r\n\r\n== env ==========================================================\r\nLD_LIBRARY_PATH is unset\r\nDYLD_LIBRARY_PATH is unset\r\n\r\n== nvidia-smi ===================================================\r\ntensorflow/tools/tf_env_collect.sh: line 105: nvidia-smi: command not found\r\n\r\n== cuda libs  ===================================================\r\n                                                              \r\n\r\n### Describe the problem\r\nThe DecodeBmpOp class is the decoder of bmp file. The class is in \r\n tensorflow/core/kernels/decode_bmp_op.cc. When dealling with a bmp file, the decoder doesn't invalidate the meta info of bmp file, such as header_size, width, height. It causes a Out-of-Bound Read in DecodeBmpOp::Decode func or DecodeBmpOp ::Compute func. If given an evil bmp file, the program using this API will crash.\r\n\r\n### Source code / logs\r\n\r\n- **Here is the crash call stack of program**:\r\nThe bmp file  in the attachment causes a crash.\r\n\r\nProgram received signal SIGSEGV, Segmentation fault.\r\n0x0000000004200bc0 in tensorflow::DecodeBmpOp::Decode (this=this@entry=0x602400032a40, input=input@entry=0x601c000214ce \"33\", output=0x7fffcefcf800 \"\", width=width@entry=2336, height=height@entry=61727, channels=channels@entry=3, top_down=top_down@entry=false) at tensorflow/core/kernels/decode_bmp_op.cc:122\r\nProgram received signal SIGSEGV (fault address 0x601c19caaa10)\r\npwndbg> bt\r\n#0  0x0000000004200bc0 in tensorflow::DecodeBmpOp::Decode (this=this@entry=0x602400032a40, input=input@entry=0x601c000214ce \"33\", output=0x7fffcefcf800 \"\", width=width@entry=2336, height=height@entry=61727, channels=channels@entry=3, top_down=top_down@entry=false) at tensorflow/core/kernels/decode_bmp_op.cc:122\r\n#1  0x0000000004202d3b in tensorflow::DecodeBmpOp::Compute (this=0x602400032a40, context=<optimized out>) at tensorflow/core/kernels/decode_bmp_op.cc:88\r\n#2  0x00007ffff3ed8880 in tensorflow::ThreadPoolDevice::Compute (this=<optimized out>, op_kernel=0x602400032a40, context=0x7fffffff8320) at tensorflow/core/common_runtime/threadpool_device.cc:59\r\n#3  0x00007ffff3d47110 in tensorflow::(anonymous namespace)::ExecutorState::Process (this=<optimized out>, tagged_node=..., scheduled_usec=<optimized out>) at tensorflow/core/common_runtime/executor.cc:1652\r\n#4  0x00007ffff3d4cc0c in operator() (__closure=<optimized out>) at tensorflow/core/common_runtime/executor.cc:2055\r\n#5  std::_Function_handler<void(), tensorflow::(anonymous namespace)::ExecutorState::ScheduleReady(const TaggedNodeSeq&, tensorflow::(anonymous namespace)::ExecutorState::TaggedNodeReadyQueue*)::__lambda3>::_M_invoke(const std::_Any_data &) (__functor=...) at /usr/include/c++/4.8/functional:2071\r\n#6  0x00007ffff3db2351 in operator() (this=0x7fffffff8790) at /usr/include/c++/4.8/functional:2471\r\n#7  operator() (__closure=<optimized out>, c=...) at tensorflow/core/common_runtime/graph_runner.cc:146\r\n#8  std::_Function_handler<void(std::function<void()>), tensorflow::GraphRunner::Run(tensorflow::Graph*, tensorflow::FunctionLibraryRuntime*, const NamedTensorList&, const std::vector<std::basic_string<char> >&, std::vector<tensorflow::Tensor>*)::__lambda2>::_M_invoke(const std::_Any_data &, std::function<void()>) (__functor=..., __args#0=...) at /usr/include/c++/4.8/functional:2071\r\n#9  0x00007ffff3ce0258 in operator() (__args#0=..., this=<optimized out>) at /usr/include/c++/4.8/functional:2471\r\n#10 tensorflow::(anonymous namespace)::ExecutorState::ScheduleReady (this=0x6026000fd1a0, ready=..., inline_ready=0x0) at tensorflow/core/common_runtime/executor.cc:2055\r\n#11 0x00007ffff3d00a0c in ScheduleReady (inline_ready=0x0, ready=..., this=<optimized out>) at tensorflow/core/common_runtime/executor.cc:2046\r\n#12 RunAsync (done=<error reading variable: access outside bounds of object referenced via synthetic pointer>, this=<optimized out>) at tensorflow/core/common_runtime/executor.cc:1439\r\n#13 tensorflow::(anonymous namespace)::ExecutorImpl::RunAsync (this=this@entry=0x602400032f40, args=..., done=...) at tensorflow/core/common_runtime/executor.cc:2564\r\n#14 0x00007ffff3db999f in Run (args=..., this=0x602400032f40) at ./tensorflow/core/common_runtime/executor.h:117\r\n#15 tensorflow::GraphRunner::Run (this=this@entry=0x6004002d08f0, graph=graph@entry=0x603a00003140, function_library=function_library@entry=0x602400033800, inputs=std::vector of length 0, capacity 0, output_names=std::vector of length 1, capacity 1 = {...}, outputs=outputs@entry=0x7fffffffa810) at tensorflow/core/common_runtime/graph_runner.cc:174\r\n#16 0x00007ffff3c4f36d in tensorflow::ConstantFold (opts=..., function_library=function_library@entry=0x602400033800, env=env@entry=0x60060000e140, partition_device=partition_device@entry=0x6024000395c0, graph=graph@entry=0x603a00003480, was_mutated=was_mutated@entry=0x7fffffffb260) at tensorflow/core/common_runtime/constant_folding.cc:603\r\n#17 0x00007ffff3db02bd in tensorflow::GraphOptimizer::Optimize (this=this@entry=0x7fffffffbe90, runtime=runtime@entry=0x602400033800, env=0x60060000e140, device=0x6024000395c0, graph=graph@entry=0x60060038d2f0, shape_map=shape_map@entry=0x0) at tensorflow/core/common_runtime/graph_optimizer.cc:66\r\n#18 0x000000000ad04984 in tensorflow::DirectSession::GetOrCreateExecutors (this=this@entry=0x604000007080, inputs=..., outputs=..., target_nodes=..., executors_and_keys=executors_and_keys@entry=0x7fffffffc4f0, run_state_args=run_state_args@entry=0x7fffffffc730) at tensorflow/core/common_runtime/direct_session.cc:1208\r\n#19 0x000000000ad0d0f7 in tensorflow::DirectSession::Run (this=<optimized out>, run_options=..., inputs=std::vector of length 0, capacity 0, output_names=std::vector of length 1, capacity 1 = {...}, target_nodes=std::vector of length 0, capacity 0, outputs=0x0, run_metadata=0x0) at tensorflow/core/common_runtime/direct_session.cc:472\r\n#20 0x000000000ad6fa95 in tensorflow::ClientSession::Run (this=this@entry=0x7fffffffdc30, run_options=..., inputs=std::unordered_map with 0 elements, fetch_outputs=std::vector of length 1, capacity 1 = {...}, run_outputs=std::vector of length 0, capacity 0, outputs=outputs@entry=0x0, run_metadata=run_metadata@entry=0x0) at tensorflow/cc/client/client_session.cc:127\r\n#21 0x000000000ad74b6d in Run (outputs=0x0, run_outputs=std::vector of length 0, capacity 0, fetch_outputs=std::vector of length 1, capacity 1 = {...}, inputs=std::unordered_map with 0 elements, this=0x7fffffffdc30) at tensorflow/cc/client/client_session.cc:90\r\n#22 tensorflow::ClientSession::Run (this=this@entry=0x7fffffffdc30, fetch_outputs=std::vector of length 1, capacity 1 = {...}, outputs=outputs@entry=0x0) at tensorflow/cc/client/client_session.cc:76\r\n#23 0x000000000048042a in main (argc=1, argc@entry=2, argv=argv@entry=0x7fffffffe2e8) at tensorflow/examples/decode_image/main.cc:99\r\n#24 0x00007ffff03c1f45 in __libc_start_main (main=0x47e4b0 <main(int, char**)>, argc=2, argv=0x7fffffffe2e8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe2d8) at libc-start.c:287\r\n#25 0x0000000000737eca in _start ()\r\n\r\n- **source code of c++ program**:\r\n#include <fstream>\r\n#include <utility>\r\n#include <vector>\r\n\r\n#include \"tensorflow/cc/ops/const_op.h\"\r\n#include \"tensorflow/cc/ops/image_ops.h\"\r\n#include \"tensorflow/cc/ops/standard_ops.h\"\r\n#include \"tensorflow/core/framework/graph.pb.h\"\r\n#include \"tensorflow/core/framework/tensor.h\"\r\n#include \"tensorflow/core/graph/default_device.h\"\r\n#include \"tensorflow/core/graph/graph_def_builder.h\"\r\n#include \"tensorflow/core/lib/core/errors.h\"\r\n#include \"tensorflow/core/lib/core/stringpiece.h\"\r\n#include \"tensorflow/core/lib/core/threadpool.h\"\r\n#include \"tensorflow/core/lib/io/path.h\"\r\n#include \"tensorflow/core/lib/strings/stringprintf.h\"\r\n#include \"tensorflow/core/platform/env.h\"\r\n#include \"tensorflow/core/platform/init_main.h\"\r\n#include \"tensorflow/core/platform/logging.h\"\r\n#include \"tensorflow/core/platform/types.h\"\r\n#include \"tensorflow/core/public/session.h\"\r\n#include \"tensorflow/core/util/command_line_flags.h\"\r\n#include \"tensorflow/cc/client/client_session.h\"\r\n\r\n// These are all common classes it's handy to reference with no namespace.\r\nusing tensorflow::Flag;\r\nusing tensorflow::Tensor;\r\nusing tensorflow::Status;\r\nusing tensorflow::string;\r\nusing tensorflow::int32;\r\n\r\nint main(int argc, char* argv[]) {\r\n  string image = \"tensorflow/examples/label_image/data/grace_hopper.jpg\";\r\n  std::vector<Flag> flag_list = {\r\n      Flag(\"image\", &image, \"image to be processed\"),\r\n  };\r\n  string usage = tensorflow::Flags::Usage(argv[0], flag_list);\r\n  const bool parse_result = tensorflow::Flags::Parse(&argc, argv, flag_list);\r\n  if (!parse_result) {\r\n    LOG(ERROR) << usage;\r\n    return -1;\r\n  }\r\n\r\n  // We need to call this to set up global state for TensorFlow.\r\n  tensorflow::port::InitMain(argv[0], &argc, &argv);\r\n  if (argc > 1) {\r\n    LOG(ERROR) << \"Unknown argument \" << argv[1] << \"\\n\" << usage;\r\n    return -1;\r\n  }\r\n\r\n        using namespace ::tensorflow::ops;\r\n\r\n  auto root = tensorflow::Scope::NewRootScope();\r\n  tensorflow::Output file_reader = ReadFile(root.WithOpName(\"input_image\"), image);\r\n        tensorflow::Output gif_reader = DecodeGif(root.WithOpName(\"gif_reader\"), file_reader);\r\n        tensorflow::Output bmp_reader = DecodeBmp(root.WithOpName(\"bmp_reader\"), file_reader);\r\n        tensorflow::Output jpeg_reader = DecodeJpeg(root.WithOpName(\"jpeg_reader\"), file_reader);\r\n        tensorflow::Output png_reader = DecodePng(root.WithOpName(\"png_reader\"), file_reader);\r\n\r\n        std::vector<tensorflow::Tensor> outputs;\r\n        tensorflow::ClientSession session(root);\r\n  session.Run({gif_reader}, nullptr);\r\n  session.Run({bmp_reader}, nullptr);\r\n  session.Run({jpeg_reader}, nullptr);\r\n  session.Run({png_reader}, nullptr);\r\n\r\n  return 0;\r\n}\r\n\r\n- **source code of python program**:\r\nimport argparse\r\nimport tensorflow as tf\r\n\r\nif __name__ == \"__main__\":\r\n        file_name = \"tensorflow/examples/label_image/data/grace_hopper.jpg\"\r\n        parser = argparse.ArgumentParser()\r\n        parser.add_argument(\"--image\", help=\"image to be processed\")\r\n        args = parser.parse_args()\r\n        if args.image:\r\n            file_name = args.image\r\n        file_reader = tf.read_file(file_name, \"file_reader\")\r\n        image_reader = tf.image.decode_bmp(file_reader, name='bmp_reader')\r\n        sess = tf.Session()\r\n        sess.run(image_reader)\r\n\r\n[evil.zip](https://github.com/tensorflow/tensorflow/files/1512398/evil.zip)\r\n\r\n"}