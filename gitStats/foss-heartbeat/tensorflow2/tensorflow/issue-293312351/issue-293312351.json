{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16629", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16629/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16629/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16629/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16629", "id": 293312351, "node_id": "MDU6SXNzdWUyOTMzMTIzNTE=", "number": 16629, "title": "How to get RunMetadata for tf.data.Dataset ops?", "user": {"login": "sleighsoft", "id": 9438971, "node_id": "MDQ6VXNlcjk0Mzg5NzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/9438971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sleighsoft", "html_url": "https://github.com/sleighsoft", "followers_url": "https://api.github.com/users/sleighsoft/followers", "following_url": "https://api.github.com/users/sleighsoft/following{/other_user}", "gists_url": "https://api.github.com/users/sleighsoft/gists{/gist_id}", "starred_url": "https://api.github.com/users/sleighsoft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sleighsoft/subscriptions", "organizations_url": "https://api.github.com/users/sleighsoft/orgs", "repos_url": "https://api.github.com/users/sleighsoft/repos", "events_url": "https://api.github.com/users/sleighsoft/events{/privacy}", "received_events_url": "https://api.github.com/users/sleighsoft/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-01-31T21:09:45Z", "updated_at": "2018-02-03T02:07:25Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<p>Tensorflow version: 1.5 (pip)</p>\n<p>I am interested in the runtime of ops when using the <code>tf.data.Dataset</code> api.<br>\nInformation like how long shuffle, repeat or batch took.<br>\nWhen running the code below and visualizing it in tensoboard the intersting ops are marked as \"unused substructure\".</p>\n<p>Is my approach the right one?<br>\nI find it a little confusing that they show up, but are not traceable.</p>\n<p>Example code</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n<span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\ntf.set_random_seed(<span class=\"pl-c1\">0</span>)\n\ndata <span class=\"pl-k\">=</span> np.array([[<span class=\"pl-c1\">10</span>] <span class=\"pl-k\">*</span> <span class=\"pl-c1\">10</span>] <span class=\"pl-k\">*</span> <span class=\"pl-c1\">3</span> <span class=\"pl-k\">+</span> [[<span class=\"pl-c1\">4</span>] <span class=\"pl-k\">*</span> <span class=\"pl-c1\">10</span>]).astype(np.float32)\n\n<span class=\"pl-k\">with</span> tf.Graph().as_default():\n  dataset <span class=\"pl-k\">=</span> tf.data.Dataset.from_tensor_slices(data)\n  sess <span class=\"pl-k\">=</span> tf.Session()\n\n  dataset <span class=\"pl-k\">=</span> dataset.cache()\n  dataset <span class=\"pl-k\">=</span> dataset.shuffle(<span class=\"pl-c1\">10</span>, <span class=\"pl-v\">seed</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0</span>)\n  dataset <span class=\"pl-k\">=</span> dataset.repeat(<span class=\"pl-c1\">5</span>)\n  dataset <span class=\"pl-k\">=</span> dataset.batch(<span class=\"pl-c1\">2</span>)\n\n  iterator <span class=\"pl-k\">=</span> tf.data.Iterator.from_structure(\n      <span class=\"pl-v\">output_types</span><span class=\"pl-k\">=</span>tf.float32)\n  batch <span class=\"pl-k\">=</span> iterator.get_next()\n\n  init1 <span class=\"pl-k\">=</span> iterator.make_initializer(dataset)\n\n  sess.run(init1)\n\n  writer <span class=\"pl-k\">=</span> tf.summary.FileWriter(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>tmp/datasettest/<span class=\"pl-pds\">'</span></span>, sess.graph)\n  run_options <span class=\"pl-k\">=</span> tf.RunOptions(<span class=\"pl-v\">trace_level</span><span class=\"pl-k\">=</span>tf.RunOptions.<span class=\"pl-c1\">FULL_TRACE</span>)\n\n  i <span class=\"pl-k\">=</span> <span class=\"pl-c1\">0</span>\n  <span class=\"pl-k\">while</span> <span class=\"pl-c1\">True</span>:\n    <span class=\"pl-k\">try</span>:\n      run_metadata <span class=\"pl-k\">=</span> tf.RunMetadata()\n      sess.run(batch, <span class=\"pl-v\">options</span><span class=\"pl-k\">=</span>run_options, <span class=\"pl-v\">run_metadata</span><span class=\"pl-k\">=</span>run_metadata)\n      writer.add_run_metadata(run_metadata, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>step<span class=\"pl-c1\">{}</span><span class=\"pl-pds\">'</span></span>.format(i))\n      i <span class=\"pl-k\">+=</span> <span class=\"pl-c1\">1</span>\n    <span class=\"pl-k\">except</span> tf.errors.OutOfRangeError <span class=\"pl-k\">as</span> ex:\n      <span class=\"pl-k\">break</span>\n    <span class=\"pl-k\">except</span> <span class=\"pl-c1\">Exception</span> <span class=\"pl-k\">as</span> ex:\n      <span class=\"pl-k\">raise</span> ex</pre></div>\n<p>This will result in the following visualization in Tensorboard.</p>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/9438971/35647492-054aa5b0-06d3-11e8-8394-9b821fb79603.png\"><img src=\"https://user-images.githubusercontent.com/9438971/35647492-054aa5b0-06d3-11e8-8394-9b821fb79603.png\" alt=\"image\" style=\"max-width:100%;\"></a></p>", "body_text": "Tensorflow version: 1.5 (pip)\nI am interested in the runtime of ops when using the tf.data.Dataset api.\nInformation like how long shuffle, repeat or batch took.\nWhen running the code below and visualizing it in tensoboard the intersting ops are marked as \"unused substructure\".\nIs my approach the right one?\nI find it a little confusing that they show up, but are not traceable.\nExample code\nimport numpy as np\nimport tensorflow as tf\n\ntf.set_random_seed(0)\n\ndata = np.array([[10] * 10] * 3 + [[4] * 10]).astype(np.float32)\n\nwith tf.Graph().as_default():\n  dataset = tf.data.Dataset.from_tensor_slices(data)\n  sess = tf.Session()\n\n  dataset = dataset.cache()\n  dataset = dataset.shuffle(10, seed=0)\n  dataset = dataset.repeat(5)\n  dataset = dataset.batch(2)\n\n  iterator = tf.data.Iterator.from_structure(\n      output_types=tf.float32)\n  batch = iterator.get_next()\n\n  init1 = iterator.make_initializer(dataset)\n\n  sess.run(init1)\n\n  writer = tf.summary.FileWriter('tmp/datasettest/', sess.graph)\n  run_options = tf.RunOptions(trace_level=tf.RunOptions.FULL_TRACE)\n\n  i = 0\n  while True:\n    try:\n      run_metadata = tf.RunMetadata()\n      sess.run(batch, options=run_options, run_metadata=run_metadata)\n      writer.add_run_metadata(run_metadata, 'step{}'.format(i))\n      i += 1\n    except tf.errors.OutOfRangeError as ex:\n      break\n    except Exception as ex:\n      raise ex\nThis will result in the following visualization in Tensorboard.", "body": "Tensorflow version: 1.5 (pip)\r\n\r\nI am interested in the runtime of ops when using the `tf.data.Dataset` api.\r\nInformation like how long shuffle, repeat or batch took.\r\nWhen running the code below and visualizing it in tensoboard the intersting ops are marked as \"unused substructure\".\r\n\r\nIs my approach the right one?\r\nI find it a little confusing that they show up, but are not traceable.\r\n\r\nExample code\r\n```python\r\nimport numpy as np\r\nimport tensorflow as tf\r\n\r\ntf.set_random_seed(0)\r\n\r\ndata = np.array([[10] * 10] * 3 + [[4] * 10]).astype(np.float32)\r\n\r\nwith tf.Graph().as_default():\r\n  dataset = tf.data.Dataset.from_tensor_slices(data)\r\n  sess = tf.Session()\r\n\r\n  dataset = dataset.cache()\r\n  dataset = dataset.shuffle(10, seed=0)\r\n  dataset = dataset.repeat(5)\r\n  dataset = dataset.batch(2)\r\n\r\n  iterator = tf.data.Iterator.from_structure(\r\n      output_types=tf.float32)\r\n  batch = iterator.get_next()\r\n\r\n  init1 = iterator.make_initializer(dataset)\r\n\r\n  sess.run(init1)\r\n\r\n  writer = tf.summary.FileWriter('tmp/datasettest/', sess.graph)\r\n  run_options = tf.RunOptions(trace_level=tf.RunOptions.FULL_TRACE)\r\n\r\n  i = 0\r\n  while True:\r\n    try:\r\n      run_metadata = tf.RunMetadata()\r\n      sess.run(batch, options=run_options, run_metadata=run_metadata)\r\n      writer.add_run_metadata(run_metadata, 'step{}'.format(i))\r\n      i += 1\r\n    except tf.errors.OutOfRangeError as ex:\r\n      break\r\n    except Exception as ex:\r\n      raise ex\r\n```\r\nThis will result in the following visualization in Tensorboard.\r\n\r\n![image](https://user-images.githubusercontent.com/9438971/35647492-054aa5b0-06d3-11e8-8394-9b821fb79603.png)\r\n"}