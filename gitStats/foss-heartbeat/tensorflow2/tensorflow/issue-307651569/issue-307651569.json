{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17925", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17925/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17925/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17925/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17925", "id": 307651569, "node_id": "MDU6SXNzdWUzMDc2NTE1Njk=", "number": 17925, "title": "MaskedAutoregressiveFlow example (tf.contrib.distributions) raises ValueError", "user": {"login": "mrosenkranz", "id": 2349370, "node_id": "MDQ6VXNlcjIzNDkzNzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/2349370?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrosenkranz", "html_url": "https://github.com/mrosenkranz", "followers_url": "https://api.github.com/users/mrosenkranz/followers", "following_url": "https://api.github.com/users/mrosenkranz/following{/other_user}", "gists_url": "https://api.github.com/users/mrosenkranz/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrosenkranz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrosenkranz/subscriptions", "organizations_url": "https://api.github.com/users/mrosenkranz/orgs", "repos_url": "https://api.github.com/users/mrosenkranz/repos", "events_url": "https://api.github.com/users/mrosenkranz/events{/privacy}", "received_events_url": "https://api.github.com/users/mrosenkranz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 284443156, "node_id": "MDU6TGFiZWwyODQ0NDMxNTY=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:docs", "name": "type:docs", "color": "159b2e", "default": false}], "state": "open", "locked": false, "assignee": {"login": "jvdillon", "id": 1137078, "node_id": "MDQ6VXNlcjExMzcwNzg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1137078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jvdillon", "html_url": "https://github.com/jvdillon", "followers_url": "https://api.github.com/users/jvdillon/followers", "following_url": "https://api.github.com/users/jvdillon/following{/other_user}", "gists_url": "https://api.github.com/users/jvdillon/gists{/gist_id}", "starred_url": "https://api.github.com/users/jvdillon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jvdillon/subscriptions", "organizations_url": "https://api.github.com/users/jvdillon/orgs", "repos_url": "https://api.github.com/users/jvdillon/repos", "events_url": "https://api.github.com/users/jvdillon/events{/privacy}", "received_events_url": "https://api.github.com/users/jvdillon/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jvdillon", "id": 1137078, "node_id": "MDQ6VXNlcjExMzcwNzg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1137078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jvdillon", "html_url": "https://github.com/jvdillon", "followers_url": "https://api.github.com/users/jvdillon/followers", "following_url": "https://api.github.com/users/jvdillon/following{/other_user}", "gists_url": "https://api.github.com/users/jvdillon/gists{/gist_id}", "starred_url": "https://api.github.com/users/jvdillon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jvdillon/subscriptions", "organizations_url": "https://api.github.com/users/jvdillon/orgs", "repos_url": "https://api.github.com/users/jvdillon/repos", "events_url": "https://api.github.com/users/jvdillon/events{/privacy}", "received_events_url": "https://api.github.com/users/jvdillon/received_events", "type": "User", "site_admin": false}, {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-03-22T13:50:21Z", "updated_at": "2018-11-20T13:26:43Z", "closed_at": null, "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: No</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Google Colab (also tried on a Windows 10 machine with TF 1.6)</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: defaults from Colab</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.6.0</li>\n<li><strong>Python version</strong>: 3.6.3 (default, Oct  3 2017, 21:45:48)</li>\n<li><strong>Bazel version (if compiling from source)</strong>: N/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: N/A</li>\n<li><strong>CUDA/cuDNN version</strong>: N/A</li>\n<li><strong>GPU model and memory</strong>: N/A</li>\n<li><strong>Exact command to reproduce</strong>: see attached file</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I'm new to tf.contrib.distributions. I've just copied the example for MaskedAutoregressiveFlow from <a href=\"https://www.tensorflow.org/api_docs/python/tf/contrib/distributions/bijectors/MaskedAutoregressiveFlow\" rel=\"nofollow\">https://www.tensorflow.org/api_docs/python/tf/contrib/distributions/bijectors/MaskedAutoregressiveFlow</a>. Running the example fails with a ValueError at <code>maf.sample()</code>. See the attached file and error log below.  Running <code>tf.global_variables_initializer()</code> in the session doesn't solve it either. It looks like <code>masked_autoregressive_default_template</code> expects a tensor with <code>ndim&gt;1</code> but <code>MaskedAutoregressiveFlow.forward()</code> passes a tensor with <code>ndim=1</code>.</p>\n<p><a href=\"https://github.com/tensorflow/tensorflow/files/1837741/masked_autoregressive_issue.txt\">masked_autoregressive_issue.txt</a></p>\n<h3>Source code / logs</h3>\n<pre><code>---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n&lt;ipython-input-3-646c58f4e818&gt; in &lt;module&gt;()\n     12 sess.run(tf.global_variables_initializer())\n     13 \n---&gt; 14 x = maf.sample()  # Expensive; uses `tf.while_loop`, no Bijector caching.\n     15 maf.log_prob(x)   # Almost free; uses Bijector caching.\n     16 maf.log_prob(0.)  # Cheap; no `tf.while_loop` despite no Bijector caching.\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/distributions/distribution.py in sample(self, sample_shape, seed, name)\n    687       samples: a `Tensor` with prepended dimensions `sample_shape`.\n    688     \"\"\"\n--&gt; 689     return self._call_sample_n(sample_shape, seed, name)\n    690 \n    691   def _log_prob(self, value):\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/distributions/transformed_distribution.py in _call_sample_n(self, sample_shape, seed, name, **kwargs)\n    411       # work, it is imperative that this is the last modification to the\n    412       # returned result.\n--&gt; 413       y = self.bijector.forward(x, **kwargs)\n    414       y = self._set_sample_static_shape(y, sample_shape)\n    415 \n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/distributions/bijector_impl.py in forward(self, x, name)\n    618       NotImplementedError: if `_forward` is not implemented.\n    619     \"\"\"\n--&gt; 620     return self._call_forward(x, name)\n    621 \n    622   def _inverse(self, y):\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/distributions/bijector_impl.py in _call_forward(self, x, name, **kwargs)\n    599       if mapping.y is not None:\n    600         return mapping.y\n--&gt; 601       mapping = mapping.merge(y=self._forward(x, **kwargs))\n    602       self._cache(mapping)\n    603       return mapping.y\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/contrib/distributions/python/ops/bijectors/masked_autoregressive.py in _forward(self, x)\n    245     y0 = array_ops.zeros_like(x, name=\"y0\")\n    246     # call the template once to ensure creation\n--&gt; 247     _ = self._shift_and_log_scale_fn(y0)\n    248     def _loop_body(index, y0):\n    249       \"\"\"While-loop body for autoregression calculation.\"\"\"\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/template.py in __call__(self, *args, **kwargs)\n    358           custom_getter=self._custom_getter) as vs:\n    359         self._variable_scope = vs\n--&gt; 360         result = self._call_func(args, kwargs)\n    361         return result\n    362 \n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/template.py in _call_func(self, args, kwargs)\n    300       trainable_at_start = len(\n    301           ops.get_collection(ops.GraphKeys.TRAINABLE_VARIABLES))\n--&gt; 302       result = self._func(*args, **kwargs)\n    303 \n    304       if self._variables_created:\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/contrib/distributions/python/ops/bijectors/masked_autoregressive.py in _fn(x)\n    478             activation=activation,\n    479             *args,\n--&gt; 480             **kwargs)\n    481       x = masked_dense(\n    482           inputs=x,\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/contrib/distributions/python/ops/bijectors/masked_autoregressive.py in masked_dense(inputs, units, num_blocks, exclusive, kernel_initializer, reuse, name, *args, **kwargs)\n    386         *args,\n    387         **kwargs)\n--&gt; 388     return layer.apply(inputs)\n    389 \n    390 \n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/layers/base.py in apply(self, inputs, *args, **kwargs)\n    807       Output tensor(s).\n    808     \"\"\"\n--&gt; 809     return self.__call__(inputs, *args, **kwargs)\n    810 \n    811   def _add_inbound_node(self,\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/layers/base.py in __call__(self, inputs, *args, **kwargs)\n    671 \n    672           # Check input assumptions set before layer building, e.g. input rank.\n--&gt; 673           self._assert_input_compatibility(inputs)\n    674           if input_list and self._dtype is None:\n    675             try:\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/layers/base.py in _assert_input_compatibility(self, inputs)\n   1195                            ', found ndim=' + str(ndim) +\n   1196                            '. Full shape received: ' +\n-&gt; 1197                            str(x.get_shape().as_list()))\n   1198       # Check dtype.\n   1199       if spec.dtype is not None:\n\nValueError: Input 0 of layer dense_1 is incompatible with the layer: : expected min_ndim=2, found ndim=1. Full shape received: [5]\n\noriginally defined at:\n  File \"&lt;ipython-input-3-646c58f4e818&gt;\", line 10, in &lt;module&gt;\n    hidden_layers=[512,512])),\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/contrib/distributions/python/ops/bijectors/masked_autoregressive.py\", line 499, in masked_autoregressive_default_template\n    \"masked_autoregressive_default_template\", _fn)\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/template.py\", line 152, in make_template\n    **kwargs)\n</code></pre>\n<p>edit: fixed link to TF doc</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): No\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Google Colab (also tried on a Windows 10 machine with TF 1.6)\nTensorFlow installed from (source or binary): defaults from Colab\nTensorFlow version (use command below): 1.6.0\nPython version: 3.6.3 (default, Oct  3 2017, 21:45:48)\nBazel version (if compiling from source): N/A\nGCC/Compiler version (if compiling from source): N/A\nCUDA/cuDNN version: N/A\nGPU model and memory: N/A\nExact command to reproduce: see attached file\n\nDescribe the problem\nI'm new to tf.contrib.distributions. I've just copied the example for MaskedAutoregressiveFlow from https://www.tensorflow.org/api_docs/python/tf/contrib/distributions/bijectors/MaskedAutoregressiveFlow. Running the example fails with a ValueError at maf.sample(). See the attached file and error log below.  Running tf.global_variables_initializer() in the session doesn't solve it either. It looks like masked_autoregressive_default_template expects a tensor with ndim>1 but MaskedAutoregressiveFlow.forward() passes a tensor with ndim=1.\nmasked_autoregressive_issue.txt\nSource code / logs\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n<ipython-input-3-646c58f4e818> in <module>()\n     12 sess.run(tf.global_variables_initializer())\n     13 \n---> 14 x = maf.sample()  # Expensive; uses `tf.while_loop`, no Bijector caching.\n     15 maf.log_prob(x)   # Almost free; uses Bijector caching.\n     16 maf.log_prob(0.)  # Cheap; no `tf.while_loop` despite no Bijector caching.\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/distributions/distribution.py in sample(self, sample_shape, seed, name)\n    687       samples: a `Tensor` with prepended dimensions `sample_shape`.\n    688     \"\"\"\n--> 689     return self._call_sample_n(sample_shape, seed, name)\n    690 \n    691   def _log_prob(self, value):\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/distributions/transformed_distribution.py in _call_sample_n(self, sample_shape, seed, name, **kwargs)\n    411       # work, it is imperative that this is the last modification to the\n    412       # returned result.\n--> 413       y = self.bijector.forward(x, **kwargs)\n    414       y = self._set_sample_static_shape(y, sample_shape)\n    415 \n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/distributions/bijector_impl.py in forward(self, x, name)\n    618       NotImplementedError: if `_forward` is not implemented.\n    619     \"\"\"\n--> 620     return self._call_forward(x, name)\n    621 \n    622   def _inverse(self, y):\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/distributions/bijector_impl.py in _call_forward(self, x, name, **kwargs)\n    599       if mapping.y is not None:\n    600         return mapping.y\n--> 601       mapping = mapping.merge(y=self._forward(x, **kwargs))\n    602       self._cache(mapping)\n    603       return mapping.y\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/contrib/distributions/python/ops/bijectors/masked_autoregressive.py in _forward(self, x)\n    245     y0 = array_ops.zeros_like(x, name=\"y0\")\n    246     # call the template once to ensure creation\n--> 247     _ = self._shift_and_log_scale_fn(y0)\n    248     def _loop_body(index, y0):\n    249       \"\"\"While-loop body for autoregression calculation.\"\"\"\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/template.py in __call__(self, *args, **kwargs)\n    358           custom_getter=self._custom_getter) as vs:\n    359         self._variable_scope = vs\n--> 360         result = self._call_func(args, kwargs)\n    361         return result\n    362 \n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/template.py in _call_func(self, args, kwargs)\n    300       trainable_at_start = len(\n    301           ops.get_collection(ops.GraphKeys.TRAINABLE_VARIABLES))\n--> 302       result = self._func(*args, **kwargs)\n    303 \n    304       if self._variables_created:\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/contrib/distributions/python/ops/bijectors/masked_autoregressive.py in _fn(x)\n    478             activation=activation,\n    479             *args,\n--> 480             **kwargs)\n    481       x = masked_dense(\n    482           inputs=x,\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/contrib/distributions/python/ops/bijectors/masked_autoregressive.py in masked_dense(inputs, units, num_blocks, exclusive, kernel_initializer, reuse, name, *args, **kwargs)\n    386         *args,\n    387         **kwargs)\n--> 388     return layer.apply(inputs)\n    389 \n    390 \n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/layers/base.py in apply(self, inputs, *args, **kwargs)\n    807       Output tensor(s).\n    808     \"\"\"\n--> 809     return self.__call__(inputs, *args, **kwargs)\n    810 \n    811   def _add_inbound_node(self,\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/layers/base.py in __call__(self, inputs, *args, **kwargs)\n    671 \n    672           # Check input assumptions set before layer building, e.g. input rank.\n--> 673           self._assert_input_compatibility(inputs)\n    674           if input_list and self._dtype is None:\n    675             try:\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/layers/base.py in _assert_input_compatibility(self, inputs)\n   1195                            ', found ndim=' + str(ndim) +\n   1196                            '. Full shape received: ' +\n-> 1197                            str(x.get_shape().as_list()))\n   1198       # Check dtype.\n   1199       if spec.dtype is not None:\n\nValueError: Input 0 of layer dense_1 is incompatible with the layer: : expected min_ndim=2, found ndim=1. Full shape received: [5]\n\noriginally defined at:\n  File \"<ipython-input-3-646c58f4e818>\", line 10, in <module>\n    hidden_layers=[512,512])),\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/contrib/distributions/python/ops/bijectors/masked_autoregressive.py\", line 499, in masked_autoregressive_default_template\n    \"masked_autoregressive_default_template\", _fn)\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/template.py\", line 152, in make_template\n    **kwargs)\n\nedit: fixed link to TF doc", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Google Colab (also tried on a Windows 10 machine with TF 1.6)\r\n- **TensorFlow installed from (source or binary)**: defaults from Colab\r\n- **TensorFlow version (use command below)**: 1.6.0\r\n- **Python version**: 3.6.3 (default, Oct  3 2017, 21:45:48)\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: see attached file\r\n\r\n### Describe the problem\r\nI'm new to tf.contrib.distributions. I've just copied the example for MaskedAutoregressiveFlow from [https://www.tensorflow.org/api_docs/python/tf/contrib/distributions/bijectors/MaskedAutoregressiveFlow](https://www.tensorflow.org/api_docs/python/tf/contrib/distributions/bijectors/MaskedAutoregressiveFlow). Running the example fails with a ValueError at `maf.sample()`. See the attached file and error log below.  Running `tf.global_variables_initializer()` in the session doesn't solve it either. It looks like `masked_autoregressive_default_template` expects a tensor with `ndim>1` but `MaskedAutoregressiveFlow.forward()` passes a tensor with `ndim=1`. \r\n\r\n[masked_autoregressive_issue.txt](https://github.com/tensorflow/tensorflow/files/1837741/masked_autoregressive_issue.txt)\r\n\r\n\r\n### Source code / logs\r\n```\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-3-646c58f4e818> in <module>()\r\n     12 sess.run(tf.global_variables_initializer())\r\n     13 \r\n---> 14 x = maf.sample()  # Expensive; uses `tf.while_loop`, no Bijector caching.\r\n     15 maf.log_prob(x)   # Almost free; uses Bijector caching.\r\n     16 maf.log_prob(0.)  # Cheap; no `tf.while_loop` despite no Bijector caching.\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/distributions/distribution.py in sample(self, sample_shape, seed, name)\r\n    687       samples: a `Tensor` with prepended dimensions `sample_shape`.\r\n    688     \"\"\"\r\n--> 689     return self._call_sample_n(sample_shape, seed, name)\r\n    690 \r\n    691   def _log_prob(self, value):\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/distributions/transformed_distribution.py in _call_sample_n(self, sample_shape, seed, name, **kwargs)\r\n    411       # work, it is imperative that this is the last modification to the\r\n    412       # returned result.\r\n--> 413       y = self.bijector.forward(x, **kwargs)\r\n    414       y = self._set_sample_static_shape(y, sample_shape)\r\n    415 \r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/distributions/bijector_impl.py in forward(self, x, name)\r\n    618       NotImplementedError: if `_forward` is not implemented.\r\n    619     \"\"\"\r\n--> 620     return self._call_forward(x, name)\r\n    621 \r\n    622   def _inverse(self, y):\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/distributions/bijector_impl.py in _call_forward(self, x, name, **kwargs)\r\n    599       if mapping.y is not None:\r\n    600         return mapping.y\r\n--> 601       mapping = mapping.merge(y=self._forward(x, **kwargs))\r\n    602       self._cache(mapping)\r\n    603       return mapping.y\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/contrib/distributions/python/ops/bijectors/masked_autoregressive.py in _forward(self, x)\r\n    245     y0 = array_ops.zeros_like(x, name=\"y0\")\r\n    246     # call the template once to ensure creation\r\n--> 247     _ = self._shift_and_log_scale_fn(y0)\r\n    248     def _loop_body(index, y0):\r\n    249       \"\"\"While-loop body for autoregression calculation.\"\"\"\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/template.py in __call__(self, *args, **kwargs)\r\n    358           custom_getter=self._custom_getter) as vs:\r\n    359         self._variable_scope = vs\r\n--> 360         result = self._call_func(args, kwargs)\r\n    361         return result\r\n    362 \r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/template.py in _call_func(self, args, kwargs)\r\n    300       trainable_at_start = len(\r\n    301           ops.get_collection(ops.GraphKeys.TRAINABLE_VARIABLES))\r\n--> 302       result = self._func(*args, **kwargs)\r\n    303 \r\n    304       if self._variables_created:\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/contrib/distributions/python/ops/bijectors/masked_autoregressive.py in _fn(x)\r\n    478             activation=activation,\r\n    479             *args,\r\n--> 480             **kwargs)\r\n    481       x = masked_dense(\r\n    482           inputs=x,\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/contrib/distributions/python/ops/bijectors/masked_autoregressive.py in masked_dense(inputs, units, num_blocks, exclusive, kernel_initializer, reuse, name, *args, **kwargs)\r\n    386         *args,\r\n    387         **kwargs)\r\n--> 388     return layer.apply(inputs)\r\n    389 \r\n    390 \r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/layers/base.py in apply(self, inputs, *args, **kwargs)\r\n    807       Output tensor(s).\r\n    808     \"\"\"\r\n--> 809     return self.__call__(inputs, *args, **kwargs)\r\n    810 \r\n    811   def _add_inbound_node(self,\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/layers/base.py in __call__(self, inputs, *args, **kwargs)\r\n    671 \r\n    672           # Check input assumptions set before layer building, e.g. input rank.\r\n--> 673           self._assert_input_compatibility(inputs)\r\n    674           if input_list and self._dtype is None:\r\n    675             try:\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/layers/base.py in _assert_input_compatibility(self, inputs)\r\n   1195                            ', found ndim=' + str(ndim) +\r\n   1196                            '. Full shape received: ' +\r\n-> 1197                            str(x.get_shape().as_list()))\r\n   1198       # Check dtype.\r\n   1199       if spec.dtype is not None:\r\n\r\nValueError: Input 0 of layer dense_1 is incompatible with the layer: : expected min_ndim=2, found ndim=1. Full shape received: [5]\r\n\r\noriginally defined at:\r\n  File \"<ipython-input-3-646c58f4e818>\", line 10, in <module>\r\n    hidden_layers=[512,512])),\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/contrib/distributions/python/ops/bijectors/masked_autoregressive.py\", line 499, in masked_autoregressive_default_template\r\n    \"masked_autoregressive_default_template\", _fn)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/template.py\", line 152, in make_template\r\n    **kwargs)\r\n```\r\nedit: fixed link to TF doc"}