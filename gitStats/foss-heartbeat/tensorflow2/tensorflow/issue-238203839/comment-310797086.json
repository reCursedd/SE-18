{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/310797086", "html_url": "https://github.com/tensorflow/tensorflow/issues/11017#issuecomment-310797086", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11017", "id": 310797086, "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDc5NzA4Ng==", "user": {"login": "caisq", "id": 16824702, "node_id": "MDQ6VXNlcjE2ODI0NzAy", "avatar_url": "https://avatars2.githubusercontent.com/u/16824702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caisq", "html_url": "https://github.com/caisq", "followers_url": "https://api.github.com/users/caisq/followers", "following_url": "https://api.github.com/users/caisq/following{/other_user}", "gists_url": "https://api.github.com/users/caisq/gists{/gist_id}", "starred_url": "https://api.github.com/users/caisq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caisq/subscriptions", "organizations_url": "https://api.github.com/users/caisq/orgs", "repos_url": "https://api.github.com/users/caisq/repos", "events_url": "https://api.github.com/users/caisq/events{/privacy}", "received_events_url": "https://api.github.com/users/caisq/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-23T23:55:17Z", "updated_at": "2017-06-24T00:00:56Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Oops. I may have given incomplete suggestion. In your code at <a href=\"https://gist.github.com/rubenvereecken/079cdf1abc76866714ff6f752167481d#file-fully_connected_preloaded_debug-py-L92\">https://gist.github.com/rubenvereecken/079cdf1abc76866714ff6f752167481d#file-fully_connected_preloaded_debug-py-L92</a></p>\n<p>make sure that your wrapped Session object is used only to run the train_op. You can do something like this:<br>\nMove the line <code>sess = tf_debug.LocalCLIDebugWrapperSession(sess)</code> after line 100. That makes sure that when the data input queue ops are created, the <code>make_callable()</code> method of the original session, not that of the wrapped session is called. The wrapped session doesn't have a <code>make_callable()</code> method, which was recently added. This was the root cause of the issue you are seeing.</p>", "body_text": "Oops. I may have given incomplete suggestion. In your code at https://gist.github.com/rubenvereecken/079cdf1abc76866714ff6f752167481d#file-fully_connected_preloaded_debug-py-L92\nmake sure that your wrapped Session object is used only to run the train_op. You can do something like this:\nMove the line sess = tf_debug.LocalCLIDebugWrapperSession(sess) after line 100. That makes sure that when the data input queue ops are created, the make_callable() method of the original session, not that of the wrapped session is called. The wrapped session doesn't have a make_callable() method, which was recently added. This was the root cause of the issue you are seeing.", "body": "Oops. I may have given incomplete suggestion. In your code at https://gist.github.com/rubenvereecken/079cdf1abc76866714ff6f752167481d#file-fully_connected_preloaded_debug-py-L92\r\n\r\nmake sure that your wrapped Session object is used only to run the train_op. You can do something like this:\r\nMove the line `sess = tf_debug.LocalCLIDebugWrapperSession(sess)` after line 100. That makes sure that when the data input queue ops are created, the `make_callable()` method of the original session, not that of the wrapped session is called. The wrapped session doesn't have a `make_callable()` method, which was recently added. This was the root cause of the issue you are seeing."}