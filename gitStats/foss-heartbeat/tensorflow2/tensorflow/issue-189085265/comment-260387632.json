{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/260387632", "html_url": "https://github.com/tensorflow/tensorflow/issues/5596#issuecomment-260387632", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5596", "id": 260387632, "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDM4NzYzMg==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2016-11-14T16:38:55Z", "updated_at": "2016-11-14T16:38:55Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Possibly... gRPC requires that you enqueue a pending request object on the completion queue for each method that you want to handle. The <code>ENQUEUE_REQUEST</code> macros in <code>HandleRPCsLoop()</code> configure the initial pending request objects; and subsequent objects are enqueued under (some calls to) <code>callback_tag-&gt;OnCompleted()</code>, but only when <code>ok</code> is true.</p>\n<p>However... it's not clear whether receiving <code>!ok</code> from the completion queue is a recoverable error or not. The <a href=\"http://www.grpc.io/grpc/cpp/classgrpc_1_1_completion_queue.html#a86d9810ced694e50f7987ac90b9f8c1a\" rel=\"nofollow\">docs</a> define it as \"true if read a regular event, false otherwise\". So I'd be happy to look into this, but we'll need some way to reproduce it first, and might need to follow up with the gRPC team.</p>", "body_text": "Possibly... gRPC requires that you enqueue a pending request object on the completion queue for each method that you want to handle. The ENQUEUE_REQUEST macros in HandleRPCsLoop() configure the initial pending request objects; and subsequent objects are enqueued under (some calls to) callback_tag->OnCompleted(), but only when ok is true.\nHowever... it's not clear whether receiving !ok from the completion queue is a recoverable error or not. The docs define it as \"true if read a regular event, false otherwise\". So I'd be happy to look into this, but we'll need some way to reproduce it first, and might need to follow up with the gRPC team.", "body": "Possibly... gRPC requires that you enqueue a pending request object on the completion queue for each method that you want to handle. The `ENQUEUE_REQUEST` macros in `HandleRPCsLoop()` configure the initial pending request objects; and subsequent objects are enqueued under (some calls to) `callback_tag->OnCompleted()`, but only when `ok` is true.\n\nHowever... it's not clear whether receiving `!ok` from the completion queue is a recoverable error or not. The [docs](http://www.grpc.io/grpc/cpp/classgrpc_1_1_completion_queue.html#a86d9810ced694e50f7987ac90b9f8c1a) define it as \"true if read a regular event, false otherwise\". So I'd be happy to look into this, but we'll need some way to reproduce it first, and might need to follow up with the gRPC team.\n"}