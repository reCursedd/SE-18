{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5596", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5596/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5596/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5596/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/5596", "id": 189085265, "node_id": "MDU6SXNzdWUxODkwODUyNjU=", "number": 5596, "title": "grpc async server wrapper bug", "user": {"login": "supertim", "id": 4847746, "node_id": "MDQ6VXNlcjQ4NDc3NDY=", "avatar_url": "https://avatars0.githubusercontent.com/u/4847746?v=4", "gravatar_id": "", "url": "https://api.github.com/users/supertim", "html_url": "https://github.com/supertim", "followers_url": "https://api.github.com/users/supertim/followers", "following_url": "https://api.github.com/users/supertim/following{/other_user}", "gists_url": "https://api.github.com/users/supertim/gists{/gist_id}", "starred_url": "https://api.github.com/users/supertim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/supertim/subscriptions", "organizations_url": "https://api.github.com/users/supertim/orgs", "repos_url": "https://api.github.com/users/supertim/repos", "events_url": "https://api.github.com/users/supertim/events{/privacy}", "received_events_url": "https://api.github.com/users/supertim/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-11-14T11:07:03Z", "updated_at": "2016-11-27T21:00:59Z", "closed_at": "2016-11-27T21:00:59Z", "author_association": "NONE", "body_html": "<p>code in distributed_runtime/rpc/grpc_master_service.cc</p>\n<pre><code>  void HandleRPCsLoop() override {\n    ENQUEUE_REQUEST(CreateSession, true);\n    ENQUEUE_REQUEST(ExtendSession, false);\n    for (int i = 0; i &lt; 100; ++i) {\n      ENQUEUE_REQUEST(RunStep, true);\n    }\n    ENQUEUE_REQUEST(CloseSession, false);\n    ENQUEUE_REQUEST(ListDevices, false);\n    ENQUEUE_REQUEST(Reset, false);\n\n    void* tag;\n    bool ok;\n    while (cq_-&gt;Next(&amp;tag, &amp;ok)) {\n   \n      UntypedCall&lt;GrpcMasterService&gt;::Tag* callback_tag =\n          static_cast&lt;UntypedCall&lt;GrpcMasterService&gt;::Tag*&gt;(tag);\n      if (callback_tag) {\n        callback_tag-&gt;OnCompleted(this, ok);\n        delete callback_tag;\n      } else {\n        // NOTE(mrry): A null `callback_tag` indicates that this is\n        // the shutdown alarm.\n        cq_-&gt;Shutdown();\n      }\n    }\n  }\n</code></pre>\n<p><strong>While increasing the test pressure, I found that variable 'ok' will be set false, and<br>\nin callback_tag-&gt;OnCompleted, it will not call callback if ok is false, thus   ENQUEUE_REQUEST will not be called, new incoming request will have no chance to be handled,<br>\nmemory increase more and more, if any bug here?</strong></p>", "body_text": "code in distributed_runtime/rpc/grpc_master_service.cc\n  void HandleRPCsLoop() override {\n    ENQUEUE_REQUEST(CreateSession, true);\n    ENQUEUE_REQUEST(ExtendSession, false);\n    for (int i = 0; i < 100; ++i) {\n      ENQUEUE_REQUEST(RunStep, true);\n    }\n    ENQUEUE_REQUEST(CloseSession, false);\n    ENQUEUE_REQUEST(ListDevices, false);\n    ENQUEUE_REQUEST(Reset, false);\n\n    void* tag;\n    bool ok;\n    while (cq_->Next(&tag, &ok)) {\n   \n      UntypedCall<GrpcMasterService>::Tag* callback_tag =\n          static_cast<UntypedCall<GrpcMasterService>::Tag*>(tag);\n      if (callback_tag) {\n        callback_tag->OnCompleted(this, ok);\n        delete callback_tag;\n      } else {\n        // NOTE(mrry): A null `callback_tag` indicates that this is\n        // the shutdown alarm.\n        cq_->Shutdown();\n      }\n    }\n  }\n\nWhile increasing the test pressure, I found that variable 'ok' will be set false, and\nin callback_tag->OnCompleted, it will not call callback if ok is false, thus   ENQUEUE_REQUEST will not be called, new incoming request will have no chance to be handled,\nmemory increase more and more, if any bug here?", "body": "code in distributed_runtime/rpc/grpc_master_service.cc\r\n```\r\n  void HandleRPCsLoop() override {\r\n    ENQUEUE_REQUEST(CreateSession, true);\r\n    ENQUEUE_REQUEST(ExtendSession, false);\r\n    for (int i = 0; i < 100; ++i) {\r\n      ENQUEUE_REQUEST(RunStep, true);\r\n    }\r\n    ENQUEUE_REQUEST(CloseSession, false);\r\n    ENQUEUE_REQUEST(ListDevices, false);\r\n    ENQUEUE_REQUEST(Reset, false);\r\n\r\n    void* tag;\r\n    bool ok;\r\n    while (cq_->Next(&tag, &ok)) {\r\n   \r\n      UntypedCall<GrpcMasterService>::Tag* callback_tag =\r\n          static_cast<UntypedCall<GrpcMasterService>::Tag*>(tag);\r\n      if (callback_tag) {\r\n        callback_tag->OnCompleted(this, ok);\r\n        delete callback_tag;\r\n      } else {\r\n        // NOTE(mrry): A null `callback_tag` indicates that this is\r\n        // the shutdown alarm.\r\n        cq_->Shutdown();\r\n      }\r\n    }\r\n  }\r\n```\r\n\r\n **While increasing the test pressure, I found that variable 'ok' will be set false, and \r\nin callback_tag->OnCompleted, it will not call callback if ok is false, thus   ENQUEUE_REQUEST will not be called, new incoming request will have no chance to be handled,\r\nmemory increase more and more, if any bug here?**"}