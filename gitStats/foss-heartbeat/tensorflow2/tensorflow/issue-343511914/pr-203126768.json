{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21046", "id": 203126768, "node_id": "MDExOlB1bGxSZXF1ZXN0MjAzMTI2NzY4", "html_url": "https://github.com/tensorflow/tensorflow/pull/21046", "diff_url": "https://github.com/tensorflow/tensorflow/pull/21046.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/21046.patch", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21046", "number": 21046, "state": "closed", "locked": false, "title": "Adding a callback function to improve flexibility of Keras", "user": {"login": "wangqin4377", "id": 5886719, "node_id": "MDQ6VXNlcjU4ODY3MTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/5886719?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wangqin4377", "html_url": "https://github.com/wangqin4377", "followers_url": "https://api.github.com/users/wangqin4377/followers", "following_url": "https://api.github.com/users/wangqin4377/following{/other_user}", "gists_url": "https://api.github.com/users/wangqin4377/gists{/gist_id}", "starred_url": "https://api.github.com/users/wangqin4377/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wangqin4377/subscriptions", "organizations_url": "https://api.github.com/users/wangqin4377/orgs", "repos_url": "https://api.github.com/users/wangqin4377/repos", "events_url": "https://api.github.com/users/wangqin4377/events{/privacy}", "received_events_url": "https://api.github.com/users/wangqin4377/received_events", "type": "User", "site_admin": false}, "body": "Hello everyone, I added one member function in `DirectoryIterator` class allow developer to register callback functions when pumping data by `flow_from_directory` of `ImageDataGenerator` class. It's can improve flexibility when have complex data structure of feature and label. It's very useful to register a customize function to process their own logic to integrate the `batch_x` and `batch_y`. It can make the `DirectoryIterator` pump the data structure what the model required.\r\n\r\n> example:\r\n\r\n```\r\ndef process_train_batch_X(raw_x_batch, filenames, index_array):\r\n    tmp_temperature = []\r\n    tmp_time = []\r\n    for i, j in enumerate(index_array):\r\n        tmp_temperature.append(get_temp_from_str(filenames[j]))\r\n        tmp_time.append(get_time_from_str(filenames[j]))\r\n    # get discretization array from the filename\r\n    x_batch_wet = utils.discretization(tmp_temperature)\r\n    x_batch_time = utils.discretization(tmp_time)\r\n    x_batch = [raw_x_batch, x_batch_wet, x_batch_time]\r\n    return x_batch\r\n\r\ndef process_batch_Y(raw_x_batch, filenames, index_array):\r\n    .....\r\n\r\ntrain_iterator.register_batch_processor(process_train_batch_X, process_batch_Y)\r\n```", "created_at": "2018-07-23T07:06:10Z", "updated_at": "2018-07-23T07:51:35Z", "closed_at": "2018-07-23T07:51:35Z", "merged_at": null, "merge_commit_sha": "3b3bb7263f14cd51ff85de1101eab46a27e3890d", "assignee": null, "assignees": [], "requested_reviewers": [], "requested_teams": [], "labels": [{"id": 300136613, "node_id": "MDU6TGFiZWwzMDAxMzY2MTM=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20no", "name": "cla: no", "color": "eb6420", "default": false}], "milestone": null, "commits_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21046/commits", "review_comments_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21046/comments", "review_comment_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21046/comments", "statuses_url": "https://api.github.com/repos/tensorflow/tensorflow/statuses/768e3eaa75353afbc15de80bed197b864f45f48a", "head": {"label": "wangqin4377:master", "ref": "master", "sha": "768e3eaa75353afbc15de80bed197b864f45f48a", "user": {"login": "wangqin4377", "id": 5886719, "node_id": "MDQ6VXNlcjU4ODY3MTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/5886719?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wangqin4377", "html_url": "https://github.com/wangqin4377", "followers_url": "https://api.github.com/users/wangqin4377/followers", "following_url": "https://api.github.com/users/wangqin4377/following{/other_user}", "gists_url": "https://api.github.com/users/wangqin4377/gists{/gist_id}", "starred_url": "https://api.github.com/users/wangqin4377/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wangqin4377/subscriptions", "organizations_url": "https://api.github.com/users/wangqin4377/orgs", "repos_url": "https://api.github.com/users/wangqin4377/repos", "events_url": "https://api.github.com/users/wangqin4377/events{/privacy}", "received_events_url": "https://api.github.com/users/wangqin4377/received_events", "type": "User", "site_admin": false}, "repo": null}, "base": {"label": "tensorflow:master", "ref": "master", "sha": "89e06304aad35bfb019a8c10f39fc1ead83e0f99", "user": {"login": "tensorflow", "id": 15658638, "node_id": "MDEyOk9yZ2FuaXphdGlvbjE1NjU4NjM4", "avatar_url": "https://avatars1.githubusercontent.com/u/15658638?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tensorflow", "html_url": "https://github.com/tensorflow", "followers_url": "https://api.github.com/users/tensorflow/followers", "following_url": "https://api.github.com/users/tensorflow/following{/other_user}", "gists_url": "https://api.github.com/users/tensorflow/gists{/gist_id}", "starred_url": "https://api.github.com/users/tensorflow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tensorflow/subscriptions", "organizations_url": "https://api.github.com/users/tensorflow/orgs", "repos_url": "https://api.github.com/users/tensorflow/repos", "events_url": "https://api.github.com/users/tensorflow/events{/privacy}", "received_events_url": "https://api.github.com/users/tensorflow/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 45717250, "node_id": "MDEwOlJlcG9zaXRvcnk0NTcxNzI1MA==", "name": "tensorflow", "full_name": "tensorflow/tensorflow", "private": false, "owner": {"login": "tensorflow", "id": 15658638, "node_id": "MDEyOk9yZ2FuaXphdGlvbjE1NjU4NjM4", "avatar_url": "https://avatars1.githubusercontent.com/u/15658638?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tensorflow", "html_url": "https://github.com/tensorflow", "followers_url": "https://api.github.com/users/tensorflow/followers", "following_url": "https://api.github.com/users/tensorflow/following{/other_user}", "gists_url": "https://api.github.com/users/tensorflow/gists{/gist_id}", "starred_url": "https://api.github.com/users/tensorflow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tensorflow/subscriptions", "organizations_url": "https://api.github.com/users/tensorflow/orgs", "repos_url": "https://api.github.com/users/tensorflow/repos", "events_url": "https://api.github.com/users/tensorflow/events{/privacy}", "received_events_url": "https://api.github.com/users/tensorflow/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/tensorflow/tensorflow", "description": "An Open Source Machine Learning Framework for Everyone", "fork": false, "url": "https://api.github.com/repos/tensorflow/tensorflow", "forks_url": "https://api.github.com/repos/tensorflow/tensorflow/forks", "keys_url": "https://api.github.com/repos/tensorflow/tensorflow/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/tensorflow/tensorflow/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/tensorflow/tensorflow/teams", "hooks_url": "https://api.github.com/repos/tensorflow/tensorflow/hooks", "issue_events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/events{/number}", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/events", "assignees_url": "https://api.github.com/repos/tensorflow/tensorflow/assignees{/user}", "branches_url": "https://api.github.com/repos/tensorflow/tensorflow/branches{/branch}", "tags_url": "https://api.github.com/repos/tensorflow/tensorflow/tags", "blobs_url": "https://api.github.com/repos/tensorflow/tensorflow/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/tensorflow/tensorflow/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/tensorflow/tensorflow/git/refs{/sha}", "trees_url": "https://api.github.com/repos/tensorflow/tensorflow/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/tensorflow/tensorflow/statuses/{sha}", "languages_url": "https://api.github.com/repos/tensorflow/tensorflow/languages", "stargazers_url": "https://api.github.com/repos/tensorflow/tensorflow/stargazers", "contributors_url": "https://api.github.com/repos/tensorflow/tensorflow/contributors", "subscribers_url": "https://api.github.com/repos/tensorflow/tensorflow/subscribers", "subscription_url": "https://api.github.com/repos/tensorflow/tensorflow/subscription", "commits_url": "https://api.github.com/repos/tensorflow/tensorflow/commits{/sha}", "git_commits_url": "https://api.github.com/repos/tensorflow/tensorflow/git/commits{/sha}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/comments{/number}", "issue_comment_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments{/number}", "contents_url": "https://api.github.com/repos/tensorflow/tensorflow/contents/{+path}", "compare_url": "https://api.github.com/repos/tensorflow/tensorflow/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/tensorflow/tensorflow/merges", "archive_url": "https://api.github.com/repos/tensorflow/tensorflow/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/tensorflow/tensorflow/downloads", "issues_url": "https://api.github.com/repos/tensorflow/tensorflow/issues{/number}", "pulls_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls{/number}", "milestones_url": "https://api.github.com/repos/tensorflow/tensorflow/milestones{/number}", "notifications_url": "https://api.github.com/repos/tensorflow/tensorflow/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/labels{/name}", "releases_url": "https://api.github.com/repos/tensorflow/tensorflow/releases{/id}", "deployments_url": "https://api.github.com/repos/tensorflow/tensorflow/deployments", "created_at": "2015-11-07T01:19:20Z", "updated_at": "2018-11-24T22:13:04Z", "pushed_at": "2018-11-24T18:40:19Z", "git_url": "git://github.com/tensorflow/tensorflow.git", "ssh_url": "git@github.com:tensorflow/tensorflow.git", "clone_url": "https://github.com/tensorflow/tensorflow.git", "svn_url": "https://github.com/tensorflow/tensorflow", "homepage": "https://tensorflow.org", "size": 284546, "stargazers_count": 115176, "watchers_count": 115176, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 69946, "mirror_url": null, "archived": false, "open_issues_count": 1760, "license": {"key": "apache-2.0", "name": "Apache License 2.0", "spdx_id": "Apache-2.0", "url": "https://api.github.com/licenses/apache-2.0", "node_id": "MDc6TGljZW5zZTI="}, "forks": 69946, "open_issues": 1760, "watchers": 115176, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21046"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/21046"}, "issue": {"href": "https://api.github.com/repos/tensorflow/tensorflow/issues/21046"}, "comments": {"href": "https://api.github.com/repos/tensorflow/tensorflow/issues/21046/comments"}, "review_comments": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21046/comments"}, "review_comment": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21046/commits"}, "statuses": {"href": "https://api.github.com/repos/tensorflow/tensorflow/statuses/768e3eaa75353afbc15de80bed197b864f45f48a"}}, "author_association": "NONE", "body_html": "<p>Hello everyone, I added one member function in <code>DirectoryIterator</code> class allow developer to register callback functions when pumping data by <code>flow_from_directory</code> of <code>ImageDataGenerator</code> class. It's can improve flexibility when have complex data structure of feature and label. It's very useful to register a customize function to process their own logic to integrate the <code>batch_x</code> and <code>batch_y</code>. It can make the <code>DirectoryIterator</code> pump the data structure what the model required.</p>\n<blockquote>\n<p>example:</p>\n</blockquote>\n<pre><code>def process_train_batch_X(raw_x_batch, filenames, index_array):\n    tmp_temperature = []\n    tmp_time = []\n    for i, j in enumerate(index_array):\n        tmp_temperature.append(get_temp_from_str(filenames[j]))\n        tmp_time.append(get_time_from_str(filenames[j]))\n    # get discretization array from the filename\n    x_batch_wet = utils.discretization(tmp_temperature)\n    x_batch_time = utils.discretization(tmp_time)\n    x_batch = [raw_x_batch, x_batch_wet, x_batch_time]\n    return x_batch\n\ndef process_batch_Y(raw_x_batch, filenames, index_array):\n    .....\n\ntrain_iterator.register_batch_processor(process_train_batch_X, process_batch_Y)\n</code></pre>", "body_text": "Hello everyone, I added one member function in DirectoryIterator class allow developer to register callback functions when pumping data by flow_from_directory of ImageDataGenerator class. It's can improve flexibility when have complex data structure of feature and label. It's very useful to register a customize function to process their own logic to integrate the batch_x and batch_y. It can make the DirectoryIterator pump the data structure what the model required.\n\nexample:\n\ndef process_train_batch_X(raw_x_batch, filenames, index_array):\n    tmp_temperature = []\n    tmp_time = []\n    for i, j in enumerate(index_array):\n        tmp_temperature.append(get_temp_from_str(filenames[j]))\n        tmp_time.append(get_time_from_str(filenames[j]))\n    # get discretization array from the filename\n    x_batch_wet = utils.discretization(tmp_temperature)\n    x_batch_time = utils.discretization(tmp_time)\n    x_batch = [raw_x_batch, x_batch_wet, x_batch_time]\n    return x_batch\n\ndef process_batch_Y(raw_x_batch, filenames, index_array):\n    .....\n\ntrain_iterator.register_batch_processor(process_train_batch_X, process_batch_Y)", "merged": false, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": null, "comments": 5, "review_comments": 0, "maintainer_can_modify": false, "commits": 0, "additions": 0, "deletions": 0, "changed_files": 0}