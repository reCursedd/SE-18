{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/366341583", "html_url": "https://github.com/tensorflow/tensorflow/issues/16930#issuecomment-366341583", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16930", "id": 366341583, "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjM0MTU4Mw==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-16T19:54:39Z", "updated_at": "2018-02-16T19:54:39Z", "author_association": "CONTRIBUTOR", "body_html": "<p>From a quick look, since the gradient of tile is a reduce sum, it seems plausible to make a specialized version that works with IndexedSlices and is much, much more efficient than expanding the incoming gradient out to a dense tensor. (AFAICT it\u2019d be the same reduce_sum applied to IndexedSlices.values, plus some logic for the indices that depends on whether the original input was tiled in the batch dimension or not.) I\u2019d welcome such a contribution, along with tests using the gradient checker.</p>", "body_text": "From a quick look, since the gradient of tile is a reduce sum, it seems plausible to make a specialized version that works with IndexedSlices and is much, much more efficient than expanding the incoming gradient out to a dense tensor. (AFAICT it\u2019d be the same reduce_sum applied to IndexedSlices.values, plus some logic for the indices that depends on whether the original input was tiled in the batch dimension or not.) I\u2019d welcome such a contribution, along with tests using the gradient checker.", "body": "From a quick look, since the gradient of tile is a reduce sum, it seems plausible to make a specialized version that works with IndexedSlices and is much, much more efficient than expanding the incoming gradient out to a dense tensor. (AFAICT it\u2019d be the same reduce_sum applied to IndexedSlices.values, plus some logic for the indices that depends on whether the original input was tiled in the batch dimension or not.) I\u2019d welcome such a contribution, along with tests using the gradient checker."}