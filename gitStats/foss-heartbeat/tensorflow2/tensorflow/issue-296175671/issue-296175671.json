{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16930", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16930/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16930/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16930/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16930", "id": 296175671, "node_id": "MDU6SXNzdWUyOTYxNzU2NzE=", "number": 16930, "title": "Gradient function of tile operator failed with sparse Tensor", "user": {"login": "augusterodin", "id": 1692191, "node_id": "MDQ6VXNlcjE2OTIxOTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1692191?v=4", "gravatar_id": "", "url": "https://api.github.com/users/augusterodin", "html_url": "https://github.com/augusterodin", "followers_url": "https://api.github.com/users/augusterodin/followers", "following_url": "https://api.github.com/users/augusterodin/following{/other_user}", "gists_url": "https://api.github.com/users/augusterodin/gists{/gist_id}", "starred_url": "https://api.github.com/users/augusterodin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/augusterodin/subscriptions", "organizations_url": "https://api.github.com/users/augusterodin/orgs", "repos_url": "https://api.github.com/users/augusterodin/repos", "events_url": "https://api.github.com/users/augusterodin/events{/privacy}", "received_events_url": "https://api.github.com/users/augusterodin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-02-11T09:30:29Z", "updated_at": "2018-06-23T21:23:56Z", "closed_at": "2018-06-23T21:23:56Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: no</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Windows 10</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.4/1.5</li>\n<li><strong>Python version</strong>: 3.5.3</li>\n<li><strong>Bazel version (if compiling from source)</strong>:</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:</li>\n<li><strong>CUDA/cuDNN version</strong>:</li>\n<li><strong>GPU model and memory</strong>:</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I found an issue when I use a <em>tile</em> operator followed by a <em>gather</em> operator. It seems that there is a <code>isinstance(grad, ops.Tensor)</code> assert in the gradient function of <em>tile</em> operator, while <em>gather</em> operator will result in a sparse gradient with the type of IndexedSlices.</p>\n<p>Please see below example for details.</p>\n<h3>Source code / logs</h3>\n<p>Here is a small example to re-produce this issue:</p>\n<div class=\"highlight highlight-source-python\"><pre>x <span class=\"pl-k\">=</span> tf.Variable([[<span class=\"pl-c1\">0.0</span>], [<span class=\"pl-c1\">1.0</span>], [<span class=\"pl-c1\">2.0</span>], [<span class=\"pl-c1\">3.0</span>], [<span class=\"pl-c1\">4.0</span>]], <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>x<span class=\"pl-pds\">'</span></span>)\nx <span class=\"pl-k\">=</span> tf.tile(x, [<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>])\ni <span class=\"pl-k\">=</span> tf.Variable(<span class=\"pl-c1\">list</span>(<span class=\"pl-c1\">range</span>(<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">5</span>)), <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>i<span class=\"pl-pds\">'</span></span>)\nx <span class=\"pl-k\">=</span> tf.gather(x, i)\ns <span class=\"pl-k\">=</span> tf.reduce_sum(x)\noptimizer <span class=\"pl-k\">=</span> tf.train.GradientDescentOptimizer(<span class=\"pl-v\">learning_rate</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0.01</span>)\ntrain_op <span class=\"pl-k\">=</span> optimizer.minimize(s)</pre></div>\n<p>You will get below errors:</p>\n<pre><code>ValueError: No attr named '_XlaCompile' in name: \"Tile\"\nop: \"Tile\"\ninput: \"x/read\"\ninput: \"Tile/multiples\"\nattr {\n  key: \"T\"\n  value {\n    type: DT_FLOAT\n  }\n}\nattr {\n  key: \"Tmultiples\"\n  value {\n    type: DT_INT32\n  }\n}\n\nDuring handling of the above exception, another exception occurred:\nTraceback\n (most recent call last):\n  File \"D:/test/test_gather.py\", line 12, in &lt;module&gt;\n    train_op = optimizer.minimize(s)\n  File \"D:\\PyEnv\\tf1.5\\lib\\site-packages\\tensorflow\\python\\training\\optimizer.py\", line 355, in minimize\n    grad_loss=grad_loss)\n  File \"D:\\PyEnv\\tf1.5\\lib\\site-packages\\tensorflow\\python\\training\\optimizer.py\", line 456, in compute_gradients\n    colocate_gradients_with_ops=colocate_gradients_with_ops)\n  File \"D:\\PyEnv\\tf1.5\\lib\\site-packages\\tensorflow\\python\\ops\\gradients_impl.py\", line 609, in gradients\n    grad_scope, op, func_call, lambda: grad_fn(op, *out_grads))\n  File \"D:\\PyEnv\\tf1.5\\lib\\site-packages\\tensorflow\\python\\ops\\gradients_impl.py\", line 375, in _MaybeCompile\n    return grad_fn()  # Exit early\n  File \"D:\\PyEnv\\tf1.5\\lib\\site-packages\\tensorflow\\python\\ops\\gradients_impl.py\", line 609, in &lt;lambda&gt;\n    grad_scope, op, func_call, lambda: grad_fn(op, *out_grads))\n  File \"D:\\PyEnv\\tf1.5\\lib\\site-packages\\tensorflow\\python\\ops\\array_grad.py\", line 552, in _TileGrad\n    assert isinstance(grad, ops.Tensor)\nAssertionError\n</code></pre>\n<p>I think this is caused by the assertion in gradient function of <em>tile</em> operator:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-en\">@ops.RegisterGradient</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Tile<span class=\"pl-pds\">\"</span></span>)\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">_TileGrad</span>(<span class=\"pl-smi\">op</span>, <span class=\"pl-smi\">grad</span>):\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"\"\"</span>Sum reduces grad along the tiled dimensions.<span class=\"pl-pds\">\"\"\"</span></span>\n  <span class=\"pl-k\">assert</span> <span class=\"pl-c1\">isinstance</span>(grad, ops.Tensor)\n  input_shape <span class=\"pl-k\">=</span> array_ops.shape(op.inputs[<span class=\"pl-c1\">0</span>])</pre></div>\n<p>Could we remove this assert or change the type to ops._TensorLike?</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): no\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): 1.4/1.5\nPython version: 3.5.3\nBazel version (if compiling from source):\nGCC/Compiler version (if compiling from source):\nCUDA/cuDNN version:\nGPU model and memory:\nExact command to reproduce:\n\nDescribe the problem\nI found an issue when I use a tile operator followed by a gather operator. It seems that there is a isinstance(grad, ops.Tensor) assert in the gradient function of tile operator, while gather operator will result in a sparse gradient with the type of IndexedSlices.\nPlease see below example for details.\nSource code / logs\nHere is a small example to re-produce this issue:\nx = tf.Variable([[0.0], [1.0], [2.0], [3.0], [4.0]], name='x')\nx = tf.tile(x, [1, 2])\ni = tf.Variable(list(range(0, 5)), name='i')\nx = tf.gather(x, i)\ns = tf.reduce_sum(x)\noptimizer = tf.train.GradientDescentOptimizer(learning_rate=0.01)\ntrain_op = optimizer.minimize(s)\nYou will get below errors:\nValueError: No attr named '_XlaCompile' in name: \"Tile\"\nop: \"Tile\"\ninput: \"x/read\"\ninput: \"Tile/multiples\"\nattr {\n  key: \"T\"\n  value {\n    type: DT_FLOAT\n  }\n}\nattr {\n  key: \"Tmultiples\"\n  value {\n    type: DT_INT32\n  }\n}\n\nDuring handling of the above exception, another exception occurred:\nTraceback\n (most recent call last):\n  File \"D:/test/test_gather.py\", line 12, in <module>\n    train_op = optimizer.minimize(s)\n  File \"D:\\PyEnv\\tf1.5\\lib\\site-packages\\tensorflow\\python\\training\\optimizer.py\", line 355, in minimize\n    grad_loss=grad_loss)\n  File \"D:\\PyEnv\\tf1.5\\lib\\site-packages\\tensorflow\\python\\training\\optimizer.py\", line 456, in compute_gradients\n    colocate_gradients_with_ops=colocate_gradients_with_ops)\n  File \"D:\\PyEnv\\tf1.5\\lib\\site-packages\\tensorflow\\python\\ops\\gradients_impl.py\", line 609, in gradients\n    grad_scope, op, func_call, lambda: grad_fn(op, *out_grads))\n  File \"D:\\PyEnv\\tf1.5\\lib\\site-packages\\tensorflow\\python\\ops\\gradients_impl.py\", line 375, in _MaybeCompile\n    return grad_fn()  # Exit early\n  File \"D:\\PyEnv\\tf1.5\\lib\\site-packages\\tensorflow\\python\\ops\\gradients_impl.py\", line 609, in <lambda>\n    grad_scope, op, func_call, lambda: grad_fn(op, *out_grads))\n  File \"D:\\PyEnv\\tf1.5\\lib\\site-packages\\tensorflow\\python\\ops\\array_grad.py\", line 552, in _TileGrad\n    assert isinstance(grad, ops.Tensor)\nAssertionError\n\nI think this is caused by the assertion in gradient function of tile operator:\n@ops.RegisterGradient(\"Tile\")\ndef _TileGrad(op, grad):\n  \"\"\"Sum reduces grad along the tiled dimensions.\"\"\"\n  assert isinstance(grad, ops.Tensor)\n  input_shape = array_ops.shape(op.inputs[0])\nCould we remove this assert or change the type to ops._TensorLike?", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: no\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 10\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.4/1.5\r\n- **Python version**: 3.5.3\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**:\r\n- **GPU model and memory**:\r\n- **Exact command to reproduce**:\r\n\r\n### Describe the problem\r\nI found an issue when I use a _tile_ operator followed by a _gather_ operator. It seems that there is a `isinstance(grad, ops.Tensor)` assert in the gradient function of _tile_ operator, while _gather_ operator will result in a sparse gradient with the type of IndexedSlices.\r\n\r\nPlease see below example for details.\r\n\r\n### Source code / logs\r\nHere is a small example to re-produce this issue:\r\n```python\r\nx = tf.Variable([[0.0], [1.0], [2.0], [3.0], [4.0]], name='x')\r\nx = tf.tile(x, [1, 2])\r\ni = tf.Variable(list(range(0, 5)), name='i')\r\nx = tf.gather(x, i)\r\ns = tf.reduce_sum(x)\r\noptimizer = tf.train.GradientDescentOptimizer(learning_rate=0.01)\r\ntrain_op = optimizer.minimize(s)\r\n```\r\n\r\nYou will get below errors:\r\n```\r\nValueError: No attr named '_XlaCompile' in name: \"Tile\"\r\nop: \"Tile\"\r\ninput: \"x/read\"\r\ninput: \"Tile/multiples\"\r\nattr {\r\n  key: \"T\"\r\n  value {\r\n    type: DT_FLOAT\r\n  }\r\n}\r\nattr {\r\n  key: \"Tmultiples\"\r\n  value {\r\n    type: DT_INT32\r\n  }\r\n}\r\n\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback\r\n (most recent call last):\r\n  File \"D:/test/test_gather.py\", line 12, in <module>\r\n    train_op = optimizer.minimize(s)\r\n  File \"D:\\PyEnv\\tf1.5\\lib\\site-packages\\tensorflow\\python\\training\\optimizer.py\", line 355, in minimize\r\n    grad_loss=grad_loss)\r\n  File \"D:\\PyEnv\\tf1.5\\lib\\site-packages\\tensorflow\\python\\training\\optimizer.py\", line 456, in compute_gradients\r\n    colocate_gradients_with_ops=colocate_gradients_with_ops)\r\n  File \"D:\\PyEnv\\tf1.5\\lib\\site-packages\\tensorflow\\python\\ops\\gradients_impl.py\", line 609, in gradients\r\n    grad_scope, op, func_call, lambda: grad_fn(op, *out_grads))\r\n  File \"D:\\PyEnv\\tf1.5\\lib\\site-packages\\tensorflow\\python\\ops\\gradients_impl.py\", line 375, in _MaybeCompile\r\n    return grad_fn()  # Exit early\r\n  File \"D:\\PyEnv\\tf1.5\\lib\\site-packages\\tensorflow\\python\\ops\\gradients_impl.py\", line 609, in <lambda>\r\n    grad_scope, op, func_call, lambda: grad_fn(op, *out_grads))\r\n  File \"D:\\PyEnv\\tf1.5\\lib\\site-packages\\tensorflow\\python\\ops\\array_grad.py\", line 552, in _TileGrad\r\n    assert isinstance(grad, ops.Tensor)\r\nAssertionError\r\n```\r\n\r\nI think this is caused by the assertion in gradient function of _tile_ operator:\r\n```python\r\n@ops.RegisterGradient(\"Tile\")\r\ndef _TileGrad(op, grad):\r\n  \"\"\"Sum reduces grad along the tiled dimensions.\"\"\"\r\n  assert isinstance(grad, ops.Tensor)\r\n  input_shape = array_ops.shape(op.inputs[0])\r\n```\r\n\r\nCould we remove this assert or change the type to ops._TensorLike?"}