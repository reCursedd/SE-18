{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/210037551", "pull_request_review_id": 146170409, "id": 210037551, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDAzNzU1MQ==", "diff_hunk": "@@ -734,64 +732,59 @@ def _QuantizeAndDequantizeV3Grad(_, grad):\n \n @ops.RegisterGradient(\"ExtractImagePatches\")\n def _ExtractImagePatchesGrad(op, grad):\n-\n   batch_size, rows_in, cols_in, channels = [\n       dim.value for dim in op.inputs[0].get_shape()\n   ]\n   input_bhwc = array_ops.shape(op.inputs[0])\n   batch_size = input_bhwc[0]\n   channels = input_bhwc[3]\n \n+  # Create indices matrix for input tensor.\n+  # Note that 0 is preserved for padding location,\n+  # so indices for input start from 1 to 1 + rows_in * cols_in.\n+  input_indices_num = 1 + rows_in * cols_in\n+  input_idx = array_ops.reshape(math_ops.range(1, input_indices_num,\n+                                               dtype=ops.dtypes.int64),\n+                                (1, rows_in, cols_in, 1))\n+  input_idx_patched = gen_array_ops.extract_image_patches(\n+      input_idx,\n+      op.get_attr(\"ksizes\"),\n+      op.get_attr(\"strides\"),\n+      op.get_attr(\"rates\"),\n+      op.get_attr(\"padding\"))\n+\n+  # Create indices matrix for output tensor.\n   _, rows_out, cols_out, _ = [dim.value for dim in op.outputs[0].get_shape()]\n   _, ksize_r, ksize_c, _ = op.get_attr(\"ksizes\")\n-  _, stride_r, stride_h, _ = op.get_attr(\"strides\")\n-  _, rate_r, rate_c, _ = op.get_attr(\"rates\")\n-  padding = op.get_attr(\"padding\")\n-\n-  ksize_r_eff = ksize_r + (ksize_r - 1) * (rate_r - 1)\n-  ksize_c_eff = ksize_c + (ksize_c - 1) * (rate_c - 1)\n-\n-  if padding == b\"SAME\":\n-    rows_out = int(ceil(rows_in / stride_r))\n-    cols_out = int(ceil(cols_in / stride_h))\n-    pad_rows = ((rows_out - 1) * stride_r + ksize_r_eff - rows_in) // 2\n-    pad_cols = ((cols_out - 1) * stride_h + ksize_c_eff - cols_in) // 2\n-\n-  elif padding == b\"VALID\":\n-    rows_out = int(ceil((rows_in - ksize_r_eff + 1) / stride_r))\n-    cols_out = int(ceil((cols_in - ksize_c_eff + 1) / stride_h))\n-    pad_rows = (rows_out - 1) * stride_r + ksize_r_eff - rows_in\n-    pad_cols = (cols_out - 1) * stride_h + ksize_c_eff - cols_in\n-\n-  pad_rows, pad_cols = max(0, pad_rows), max(0, pad_cols)\n+  # Indices for output start from 0.\n+  output_indices_num = rows_out * cols_out * ksize_r * ksize_c\n+  output_idx = array_ops.reshape(math_ops.range(output_indices_num,\n+                                                dtype=ops.dtypes.int64),\n+                                 (1, rows_out, cols_out, ksize_r * ksize_c))\n+\n+  # Construct mapping table for indices: (input -> output).\n+  idx_matrix = array_ops.concat(\n+      [array_ops.expand_dims(input_idx_patched, axis=-1),\n+       array_ops.expand_dims(output_idx, axis=-1)],\n+      axis=-1)\n+  idx_map = array_ops.reshape(idx_matrix, (-1, 2))\n+\n+  sp_shape = (input_indices_num, output_indices_num)\n+  sp_mat_full = sparse_tensor.SparseTensor(\n+      idx_map,\n+      array_ops.ones_like(idx_map[:, 0], dtype=grad.dtype),", "path": "tensorflow/python/ops/array_grad.py", "position": null, "original_position": 74, "commit_id": "66a6473283aae36889fd80419b407a34c763e1d2", "original_commit_id": "f982cfe9f943c9920cafeefff7818ea298d5b509", "user": {"login": "facaiy", "id": 1112263, "node_id": "MDQ6VXNlcjExMTIyNjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1112263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facaiy", "html_url": "https://github.com/facaiy", "followers_url": "https://api.github.com/users/facaiy/followers", "following_url": "https://api.github.com/users/facaiy/following{/other_user}", "gists_url": "https://api.github.com/users/facaiy/gists{/gist_id}", "starred_url": "https://api.github.com/users/facaiy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facaiy/subscriptions", "organizations_url": "https://api.github.com/users/facaiy/orgs", "repos_url": "https://api.github.com/users/facaiy/repos", "events_url": "https://api.github.com/users/facaiy/events{/privacy}", "received_events_url": "https://api.github.com/users/facaiy/received_events", "type": "User", "site_admin": false}, "body": "I think this line can be replaced by tf.ones(output_indices_num). I'll submit the change later.", "created_at": "2018-08-14T17:28:50Z", "updated_at": "2018-08-15T05:17:14Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/21218#discussion_r210037551", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21218", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/210037551"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/21218#discussion_r210037551"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21218"}}, "body_html": "<p>I think this line can be replaced by tf.ones(output_indices_num). I'll submit the change later.</p>", "body_text": "I think this line can be replaced by tf.ones(output_indices_num). I'll submit the change later."}