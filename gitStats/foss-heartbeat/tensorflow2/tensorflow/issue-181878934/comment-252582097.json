{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/252582097", "html_url": "https://github.com/tensorflow/tensorflow/issues/4853#issuecomment-252582097", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4853", "id": 252582097, "node_id": "MDEyOklzc3VlQ29tbWVudDI1MjU4MjA5Nw==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2016-10-10T10:30:33Z", "updated_at": "2016-10-10T10:30:33Z", "author_association": "CONTRIBUTOR", "body_html": "<p>This is strange. The CMake <a href=\"https://github.com/tensorflow/tensorflow/blob/df871edcff2faf643975b9863100ed41b6da9c3f/tensorflow/contrib/cmake/external/gif.cmake\">external project definition</a> for GIFLIB should only attempt to run when the CMake variable <code>WIN32</code> is false. The only supported build type on Windows (currently) is Visual Studio 14.0 projects, and this includes the GIFLIB dependency.</p>\n<p>Is it possible that you are using a version of CMake installed via CygWin? According to <a href=\"https://cmake.org/Wiki/CMake_Useful_Variables\" rel=\"nofollow\">this documentation</a>, after CMake 2.8.4 <code>WIN32</code> is no longer true when using the CygWin version of CMake, which would cause the CMake rules to take the wrong path (when generating a Visual Studio project) and attempt to build the Linux version.</p>\n<p>If so, can you try downloading a native Windows version of CMake and use that to build the project files? (It should still be possible to invoke this version of CMake from the CygWin shell, if you prefer, although I personally use a <code>cmd.exe</code> shell as I find it easier to run <code>vcvarsall.bat</code> to set up the environment.)</p>", "body_text": "This is strange. The CMake external project definition for GIFLIB should only attempt to run when the CMake variable WIN32 is false. The only supported build type on Windows (currently) is Visual Studio 14.0 projects, and this includes the GIFLIB dependency.\nIs it possible that you are using a version of CMake installed via CygWin? According to this documentation, after CMake 2.8.4 WIN32 is no longer true when using the CygWin version of CMake, which would cause the CMake rules to take the wrong path (when generating a Visual Studio project) and attempt to build the Linux version.\nIf so, can you try downloading a native Windows version of CMake and use that to build the project files? (It should still be possible to invoke this version of CMake from the CygWin shell, if you prefer, although I personally use a cmd.exe shell as I find it easier to run vcvarsall.bat to set up the environment.)", "body": "This is strange. The CMake [external project definition](https://github.com/tensorflow/tensorflow/blob/df871edcff2faf643975b9863100ed41b6da9c3f/tensorflow/contrib/cmake/external/gif.cmake) for GIFLIB should only attempt to run when the CMake variable `WIN32` is false. The only supported build type on Windows (currently) is Visual Studio 14.0 projects, and this includes the GIFLIB dependency.\n\nIs it possible that you are using a version of CMake installed via CygWin? According to [this documentation](https://cmake.org/Wiki/CMake_Useful_Variables), after CMake 2.8.4 `WIN32` is no longer true when using the CygWin version of CMake, which would cause the CMake rules to take the wrong path (when generating a Visual Studio project) and attempt to build the Linux version. \n\nIf so, can you try downloading a native Windows version of CMake and use that to build the project files? (It should still be possible to invoke this version of CMake from the CygWin shell, if you prefer, although I personally use a `cmd.exe` shell as I find it easier to run `vcvarsall.bat` to set up the environment.)\n"}