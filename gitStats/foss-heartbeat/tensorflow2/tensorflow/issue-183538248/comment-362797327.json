{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/362797327", "html_url": "https://github.com/tensorflow/tensorflow/issues/5017#issuecomment-362797327", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5017", "id": 362797327, "node_id": "MDEyOklzc3VlQ29tbWVudDM2Mjc5NzMyNw==", "user": {"login": "orodbhen", "id": 4573865, "node_id": "MDQ6VXNlcjQ1NzM4NjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/4573865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orodbhen", "html_url": "https://github.com/orodbhen", "followers_url": "https://api.github.com/users/orodbhen/followers", "following_url": "https://api.github.com/users/orodbhen/following{/other_user}", "gists_url": "https://api.github.com/users/orodbhen/gists{/gist_id}", "starred_url": "https://api.github.com/users/orodbhen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orodbhen/subscriptions", "organizations_url": "https://api.github.com/users/orodbhen/orgs", "repos_url": "https://api.github.com/users/orodbhen/repos", "events_url": "https://api.github.com/users/orodbhen/events{/privacy}", "received_events_url": "https://api.github.com/users/orodbhen/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-03T10:46:29Z", "updated_at": "2018-02-03T18:29:51Z", "author_association": "NONE", "body_html": "<p>Perhaps more correct, as <code>/usr/lib/x86_64-linux-gnu/libstdc++.so.6</code> is just a link:</p>\n<pre><code>ln -sf /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21 libstdc++.so.6\n</code></pre>\n<p>I recommend using a virtual environment for this. Note that copying the actual library file from <code>/usr/lib</code> doesn't work. You have to create the link.</p>\n<p>This isn't the first time I've had trouble with Anaconda's <code>'libgcc</code>. Many times actually. I almost wish they'd stop trying to package it and just use the system version. It would be nice to have on older distros, though, if it wasn't so problematic.</p>\n<h3>Update 1</h3>\n<p>I was able to get this working by downgrading to <code>libgcc=4.8.5</code> from within conda. I also had to downgrade <code>zeromq</code>, because it broke <code>jupyter</code>.</p>\n<h3>Update 2</h3>\n<p>Actually it's sporadic. It stopped working, but I'm not sure why. There appears to be problems with the <code>tensorflow</code> conda package. Even when it imports without errors, it has missing attributes.</p>\n<p>I ended up uninstalling both <code>tensorflow</code> and <code>libgcc</code>, then reinstalled <code>tensorflow</code> using pip. Now all appears to work.</p>", "body_text": "Perhaps more correct, as /usr/lib/x86_64-linux-gnu/libstdc++.so.6 is just a link:\nln -sf /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21 libstdc++.so.6\n\nI recommend using a virtual environment for this. Note that copying the actual library file from /usr/lib doesn't work. You have to create the link.\nThis isn't the first time I've had trouble with Anaconda's 'libgcc. Many times actually. I almost wish they'd stop trying to package it and just use the system version. It would be nice to have on older distros, though, if it wasn't so problematic.\nUpdate 1\nI was able to get this working by downgrading to libgcc=4.8.5 from within conda. I also had to downgrade zeromq, because it broke jupyter.\nUpdate 2\nActually it's sporadic. It stopped working, but I'm not sure why. There appears to be problems with the tensorflow conda package. Even when it imports without errors, it has missing attributes.\nI ended up uninstalling both tensorflow and libgcc, then reinstalled tensorflow using pip. Now all appears to work.", "body": "Perhaps more correct, as `/usr/lib/x86_64-linux-gnu/libstdc++.so.6` is just a link:\r\n\r\n    ln -sf /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21 libstdc++.so.6\r\n\r\nI recommend using a virtual environment for this. Note that copying the actual library file from `/usr/lib` doesn't work. You have to create the link.\r\n\r\nThis isn't the first time I've had trouble with Anaconda's `'libgcc`. Many times actually. I almost wish they'd stop trying to package it and just use the system version. It would be nice to have on older distros, though, if it wasn't so problematic. \r\n\r\n### Update 1\r\n\r\nI was able to get this working by downgrading to `libgcc=4.8.5` from within conda. I also had to downgrade `zeromq`, because it broke `jupyter`. \r\n\r\n### Update 2\r\n\r\nActually it's sporadic. It stopped working, but I'm not sure why. There appears to be problems with the `tensorflow` conda package. Even when it imports without errors, it has missing attributes. \r\n\r\nI ended up uninstalling both `tensorflow` and `libgcc`, then reinstalled `tensorflow` using pip. Now all appears to work. "}