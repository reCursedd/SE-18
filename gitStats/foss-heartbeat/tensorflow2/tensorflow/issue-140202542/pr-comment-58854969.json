{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/58854969", "pull_request_review_id": null, "id": 58854969, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4ODU0OTY5", "diff_hunk": "@@ -88,5 +88,55 @@ def testEmpty(self):\n     self._verifyCholesky(np.empty([2, 0, 0]))\n \n \n+class CholeskyGradTest(tf.test.TestCase):\n+  _backprop_block_size = 32\n+\n+  def getShapes(self, shapeList):\n+    return ((elem, int(np.floor(1.2 * elem))) for elem in shapeList)\n+\n+  def testSmallMatrices(self):\n+    np.random.seed(0)\n+    shapes = self.getShapes([1, 2, 10])\n+    self.runFiniteDifferences(shapes)\n+\n+  def testOneBlockMatrices(self):\n+    np.random.seed(0)\n+    shapes = self.getShapes([self._backprop_block_size + 1])\n+    self.runFiniteDifferences(shapes, dtypes=(tf.float32, tf.float64),\n+                              scalarTest=True)\n+\n+  def testTwoBlockMatrixFloat(self):\n+    np.random.seed(0)\n+    shapes = self.getShapes([2 * self._backprop_block_size + 1])\n+    self.runFiniteDifferences(shapes, dtypes=(tf.float32,), scalarTest=True)\n+\n+  def testTwoBlockMatrixDouble(self):\n+    np.random.seed(0)\n+    shapes = self.getShapes([2 * self._backprop_block_size + 1])\n+    self.runFiniteDifferences(shapes, dtypes=(tf.float64,), scalarTest=True)\n+\n+  def runFiniteDifferences(self, shapes, dtypes=(tf.float32, tf.float64),\n+                           scalarTest=False):\n+    with self.test_session(use_gpu=False):\n+      for shape in shapes:\n+        for dtype in dtypes:\n+          if not(scalarTest):\n+            x = tf.constant(np.random.randn(shape[0], shape[1]), dtype)\n+            K = tf.matmul(x, tf.transpose(x)) / shape[0]  # K is posdef\n+            y = tf.cholesky(K)\n+          else:  # This is designed to be a faster test for larger matrices.\n+            x = tf.constant(np.random.randn(), dtype)\n+            R = tf.constant(np.random.randn(shape[0], shape[1]), dtype)\n+            e = tf.mul(R, x)\n+            K = tf.matmul(e, tf.transpose(e)) / shape[0]  # K is posdef\n+            y = tf.reduce_mean(tf.cholesky(K))", "path": "tensorflow/python/kernel_tests/cholesky_op_test.py", "position": 70, "original_position": 70, "commit_id": "175ba60ec638665b1165b7e9e806c59a4ed5b8d1", "original_commit_id": "b20e4a384a19f86bbfc556c336b56c0a10787468", "user": {"login": "alexggmatthews", "id": 6596998, "node_id": "MDQ6VXNlcjY1OTY5OTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/6596998?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexggmatthews", "html_url": "https://github.com/alexggmatthews", "followers_url": "https://api.github.com/users/alexggmatthews/followers", "following_url": "https://api.github.com/users/alexggmatthews/following{/other_user}", "gists_url": "https://api.github.com/users/alexggmatthews/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexggmatthews/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexggmatthews/subscriptions", "organizations_url": "https://api.github.com/users/alexggmatthews/orgs", "repos_url": "https://api.github.com/users/alexggmatthews/repos", "events_url": "https://api.github.com/users/alexggmatthews/events{/privacy}", "received_events_url": "https://api.github.com/users/alexggmatthews/received_events", "type": "User", "site_admin": false}, "body": "@rmlarsen @vrv The speed problem was coming from the fact that for high dimensional outputs y testing the whole cholesky matrix was prohibitively slow. I fixed this by testing a scalar function of the cholesky matrix for the large test cases. This is a realistic use case in practice (e.g computing the log determinant of a psd matrix).  The whole cholesky test on my desktop now takes 0.7 seconds run directly and a bit slower run from bazel. We still have coverage for the whole matrix case on the smaller test matrices. I've re-squashed this hence why it doesn't appear in the diff. \n", "created_at": "2016-04-07T11:16:30Z", "updated_at": "2016-04-07T16:48:06Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/1465#discussion_r58854969", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/1465", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/58854969"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/1465#discussion_r58854969"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/1465"}}, "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=16907534\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/rmlarsen\">@rmlarsen</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=463737\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vrv\">@vrv</a> The speed problem was coming from the fact that for high dimensional outputs y testing the whole cholesky matrix was prohibitively slow. I fixed this by testing a scalar function of the cholesky matrix for the large test cases. This is a realistic use case in practice (e.g computing the log determinant of a psd matrix).  The whole cholesky test on my desktop now takes 0.7 seconds run directly and a bit slower run from bazel. We still have coverage for the whole matrix case on the smaller test matrices. I've re-squashed this hence why it doesn't appear in the diff.</p>", "body_text": "@rmlarsen @vrv The speed problem was coming from the fact that for high dimensional outputs y testing the whole cholesky matrix was prohibitively slow. I fixed this by testing a scalar function of the cholesky matrix for the large test cases. This is a realistic use case in practice (e.g computing the log determinant of a psd matrix).  The whole cholesky test on my desktop now takes 0.7 seconds run directly and a bit slower run from bazel. We still have coverage for the whole matrix case on the smaller test matrices. I've re-squashed this hence why it doesn't appear in the diff."}