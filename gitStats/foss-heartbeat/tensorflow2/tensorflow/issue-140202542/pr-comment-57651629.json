{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/57651629", "pull_request_review_id": null, "id": 57651629, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NjUxNjI5", "diff_hunk": "@@ -0,0 +1,164 @@\n+/* Copyright 2015 Google Inc. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+\n+#include \"tensorflow/core/framework/op.h\"\n+#include \"third_party/eigen3/Eigen/Core\"\n+\n+#include \"tensorflow/core/framework/op_kernel.h\"\n+\n+#include \"tensorflow/core/kernels/linalg_ops_common.h\"\n+#include \"third_party/eigen3/unsupported/Eigen/CXX11/Tensor\"\n+#include \"tensorflow/core/framework/tensor_types.h\"\n+#include \"tensorflow/core/framework/types.h\"\n+\n+namespace tensorflow {\n+\n+template <typename T>\n+class CholeskyGrad : public OpKernel {\n+ public:\n+  explicit CholeskyGrad(OpKernelConstruction* context) : OpKernel(context) {}\n+  using Matrix = Eigen::Matrix<T, Eigen::Dynamic, Eigen::Dynamic,\n+                               Eigen::RowMajor>;\n+  using ConstMatrixMap = Eigen::Map<const Matrix>;\n+  using MatrixMap = Eigen::Map<Matrix>;\n+  using ConstRef = Eigen::Ref<const Matrix>;\n+  using Ref = Eigen::Ref<Matrix>;\n+\n+  void Compute(OpKernelContext* context) override {\n+    const Tensor& input_tensor_l = context->input(0);\n+    const Tensor& input_tensor_grad = context->input(1);\n+    // Check that input tensors represent a matrix.\n+    OP_REQUIRES(context, TensorShapeUtils::IsMatrix(input_tensor_l.shape()),\n+                errors::InvalidArgument(\"In[0] is not a matrix\"));\n+    OP_REQUIRES(context, TensorShapeUtils::IsMatrix(input_tensor_grad.shape()),\n+                errors::InvalidArgument(\"In[1] is not a matrix\"));\n+    // Check that input tensors are square.\n+    OP_REQUIRES(context,\n+                input_tensor_l.dim_size(0) == input_tensor_l.dim_size(1),\n+                errors::InvalidArgument(\"Input matrix must be square.\"));\n+    OP_REQUIRES(context,\n+                input_tensor_grad.dim_size(0) == input_tensor_grad.dim_size(1),\n+                errors::InvalidArgument(\"Input matrix must be square.\"));\n+\n+    // Check that input tensors are of same size.\n+    OP_REQUIRES(context,\n+                input_tensor_l.dim_size(0) == input_tensor_grad.dim_size(0),\n+                errors::InvalidArgument(\"Input matrices must be same size.\"));\n+\n+    // Create an output tensor\n+    Tensor* output_tensor = NULL;\n+    OP_REQUIRES_OK(context,\n+                   context->allocate_output(0, input_tensor_grad.shape(),\n+                   &output_tensor));\n+\n+    if (output_tensor->NumElements() == 0) {\n+      // the output shape is a 0-element matrix, so there is nothing to do.\n+      return;\n+    }\n+    // The next lines are necessary to get Eigen matrix behaviour.\n+    const ConstMatrixMap input_matrix_l_full(input_tensor_l.flat<T>().data(),\n+                                        input_tensor_l.dim_size(0),\n+                                        input_tensor_l.dim_size(1));\n+    const ConstMatrixMap input_matrix_grad(input_tensor_grad.flat<T>().data(),\n+                                           input_tensor_grad.dim_size(0),\n+                                           input_tensor_grad.dim_size(1));\n+    MatrixMap output_matrix(output_tensor->template flat<T>().data(),\n+                            input_tensor_l.dim_size(0),\n+                            input_tensor_l.dim_size(1) );\n+\n+    // Algorithm only depends on lower triangular half on input_tensor_l.\n+    const Matrix input_matrix_l = input_matrix_l_full\n+                                  .template triangularView<Eigen::Lower>();\n+    // Algorithm only depends on lower triangular half on input_matrix_grad.\n+    output_matrix = input_matrix_grad.template triangularView<Eigen::Lower>();\n+\n+    const int64 kMatrixSize = input_matrix_l.rows();\n+    const int64 kMaxBlockSize = 32;\n+\n+    for (int64 block_end = kMatrixSize;\n+               block_end > 0;\n+               block_end -= kMaxBlockSize) {\n+      const int64 block_begin = std::max(0ll, block_end - kMaxBlockSize);\n+      const int64 block_size = block_end - block_begin;\n+      const int64 trailing_size = kMatrixSize - block_end;\n+      output_matrix.block(block_end, block_begin, trailing_size , block_size)\n+                   = input_matrix_l\n+                   .block(block_begin, block_begin, block_size, block_size)\n+                   .adjoint()", "path": "tensorflow/core/kernels/cholesky_grad.cc", "position": null, "original_position": 99, "commit_id": "175ba60ec638665b1165b7e9e806c59a4ed5b8d1", "original_commit_id": "37f2bb7b24fd41dec1b5d5d1c2dc1b4c99ef4de7", "user": {"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}, "body": "Hi Alex,\n\nThanks for the much improved version. I left a few additional comments on\nthe PR. As Vijay suggests, it might be a good idea to run clang-format on\nyour .cc and .h files.\n\nRasmus\n\nOn Mon, Mar 28, 2016 at 4:27 PM, Vijay Vasudevan notifications@github.com\nwrote:\n\n> In tensorflow/core/kernels/cholesky_grad.cc\n> https://github.com/tensorflow/tensorflow/pull/1465#discussion_r57650974:\n> \n> > -    // Algorithm only depends on lower triangular half on input_matrix_grad.\n> > -    output_matrix = input_matrix_grad.template triangularViewEigen::Lower();\n> >   +\n> > -    const int64 kMatrixSize = input_matrix_l.rows();\n> > -    const int64 kMaxBlockSize = 32;\n> >   +\n> > -    for (int64 block_end = kMatrixSize;\n> > -               block_end > 0;\n> > -               block_end -= kMaxBlockSize) {\n> > -      const int64 block_begin = std::max(0ll, block_end - kMaxBlockSize);\n> > -      const int64 block_size = block_end - block_begin;\n> > -      const int64 trailing_size = kMatrixSize - block_end;\n> > -      output_matrix.block(block_end, block_begin, trailing_size , block_size)\n> > -                   = input_matrix_l\n> > -                   .block(block_begin, block_begin, block_size, block_size)\n> > -                   .adjoint()\n> \n> (might be worth running clang-format over the changed lines -- that's what\n> we do internally)\n> \n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly or view it on GitHub\n> https://github.com/tensorflow/tensorflow/pull/1465/files/37f2bb7b24fd41dec1b5d5d1c2dc1b4c99ef4de7#r57650974\n", "created_at": "2016-03-28T23:31:53Z", "updated_at": "2016-04-07T16:48:06Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/1465#discussion_r57651629", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/1465", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/57651629"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/1465#discussion_r57651629"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/1465"}}, "body_html": "<p>Hi Alex,</p>\n<p>Thanks for the much improved version. I left a few additional comments on<br>\nthe PR. As Vijay suggests, it might be a good idea to run clang-format on<br>\nyour .cc and .h files.</p>\n<p>Rasmus</p>\n<p>On Mon, Mar 28, 2016 at 4:27 PM, Vijay Vasudevan <a href=\"mailto:notifications@github.com\">notifications@github.com</a><br>\nwrote:</p>\n<blockquote>\n<p>In tensorflow/core/kernels/cholesky_grad.cc<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"140202542\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/1465\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/tensorflow/tensorflow/pull/1465/hovercard?comment_id=57650974&amp;comment_type=review_comment\" href=\"https://github.com/tensorflow/tensorflow/pull/1465#discussion_r57650974\">#1465 (comment)</a>:</p>\n<blockquote>\n<ul>\n<li>// Algorithm only depends on lower triangular half on input_matrix_grad.</li>\n<li>output_matrix = input_matrix_grad.template triangularViewEigen::Lower();</li>\n</ul>\n<ul>\n<li></li>\n</ul>\n<ul>\n<li>const int64 kMatrixSize = input_matrix_l.rows();</li>\n<li>const int64 kMaxBlockSize = 32;</li>\n</ul>\n<ul>\n<li></li>\n</ul>\n<ul>\n<li>for (int64 block_end = kMatrixSize;</li>\n<li>\n<pre><code>          block_end &gt; 0;\n</code></pre>\n</li>\n<li>\n<pre><code>          block_end -= kMaxBlockSize) {\n</code></pre>\n</li>\n<li>\n<pre><code> const int64 block_begin = std::max(0ll, block_end - kMaxBlockSize);\n</code></pre>\n</li>\n<li>\n<pre><code> const int64 block_size = block_end - block_begin;\n</code></pre>\n</li>\n<li>\n<pre><code> const int64 trailing_size = kMatrixSize - block_end;\n</code></pre>\n</li>\n<li>\n<pre><code> output_matrix.block(block_end, block_begin, trailing_size , block_size)\n</code></pre>\n</li>\n<li>\n<pre><code>              = input_matrix_l\n</code></pre>\n</li>\n<li>\n<pre><code>              .block(block_begin, block_begin, block_size, block_size)\n</code></pre>\n</li>\n<li>\n<pre><code>              .adjoint()\n</code></pre>\n</li>\n</ul>\n</blockquote>\n<p>(might be worth running clang-format over the changed lines -- that's what<br>\nwe do internally)</p>\n<p>\u2014<br>\nYou are receiving this because you were mentioned.<br>\nReply to this email directly or view it on GitHub<br>\n<a href=\"https://github.com/tensorflow/tensorflow/pull/1465/files/37f2bb7b24fd41dec1b5d5d1c2dc1b4c99ef4de7#r57650974\">https://github.com/tensorflow/tensorflow/pull/1465/files/37f2bb7b24fd41dec1b5d5d1c2dc1b4c99ef4de7#r57650974</a></p>\n</blockquote>", "body_text": "Hi Alex,\nThanks for the much improved version. I left a few additional comments on\nthe PR. As Vijay suggests, it might be a good idea to run clang-format on\nyour .cc and .h files.\nRasmus\nOn Mon, Mar 28, 2016 at 4:27 PM, Vijay Vasudevan notifications@github.com\nwrote:\n\nIn tensorflow/core/kernels/cholesky_grad.cc\n#1465 (comment):\n\n\n// Algorithm only depends on lower triangular half on input_matrix_grad.\noutput_matrix = input_matrix_grad.template triangularViewEigen::Lower();\n\n\n\n\n\nconst int64 kMatrixSize = input_matrix_l.rows();\nconst int64 kMaxBlockSize = 32;\n\n\n\n\n\nfor (int64 block_end = kMatrixSize;\n\n          block_end > 0;\n\n\n\n          block_end -= kMaxBlockSize) {\n\n\n\n const int64 block_begin = std::max(0ll, block_end - kMaxBlockSize);\n\n\n\n const int64 block_size = block_end - block_begin;\n\n\n\n const int64 trailing_size = kMatrixSize - block_end;\n\n\n\n output_matrix.block(block_end, block_begin, trailing_size , block_size)\n\n\n\n              = input_matrix_l\n\n\n\n              .block(block_begin, block_begin, block_size, block_size)\n\n\n\n              .adjoint()\n\n\n\n\n(might be worth running clang-format over the changed lines -- that's what\nwe do internally)\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\nhttps://github.com/tensorflow/tensorflow/pull/1465/files/37f2bb7b24fd41dec1b5d5d1c2dc1b4c99ef4de7#r57650974"}