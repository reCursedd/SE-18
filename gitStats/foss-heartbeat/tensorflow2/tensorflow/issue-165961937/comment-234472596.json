{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/234472596", "html_url": "https://github.com/tensorflow/tensorflow/issues/3349#issuecomment-234472596", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3349", "id": 234472596, "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDQ3MjU5Ng==", "user": {"login": "bangbangbear", "id": 13182889, "node_id": "MDQ6VXNlcjEzMTgyODg5", "avatar_url": "https://avatars2.githubusercontent.com/u/13182889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bangbangbear", "html_url": "https://github.com/bangbangbear", "followers_url": "https://api.github.com/users/bangbangbear/followers", "following_url": "https://api.github.com/users/bangbangbear/following{/other_user}", "gists_url": "https://api.github.com/users/bangbangbear/gists{/gist_id}", "starred_url": "https://api.github.com/users/bangbangbear/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bangbangbear/subscriptions", "organizations_url": "https://api.github.com/users/bangbangbear/orgs", "repos_url": "https://api.github.com/users/bangbangbear/repos", "events_url": "https://api.github.com/users/bangbangbear/events{/privacy}", "received_events_url": "https://api.github.com/users/bangbangbear/received_events", "type": "User", "site_admin": false}, "created_at": "2016-07-22T07:20:42Z", "updated_at": "2016-07-22T07:23:06Z", "author_association": "NONE", "body_html": "<p>I met with the same problem, and after I copied the declaration of the template scalar_multiple2_op from eigen, the problem is fixed. Here is the template:</p>\n<pre><code>template&lt;typename Scalar1, typename Scalar2&gt;\nstruct scalar_multiple2_op {\n  typedef typename scalar_product_traits&lt;Scalar1,Scalar2&gt;::ReturnType result_type;\n  EIGEN_STRONG_INLINE scalar_multiple2_op(const scalar_multiple2_op&amp; other) : m_other(other.m_other) { }\n  EIGEN_STRONG_INLINE scalar_multiple2_op(const Scalar2&amp; other) : m_other(other) { }\n  EIGEN_STRONG_INLINE result_type operator() (const Scalar1&amp; a) const { return a * m_other; }\n  typename add_const_on_value_type&lt;typename NumTraits&lt;Scalar2&gt;::Nested&gt;::type m_other;\n};\n\n</code></pre>", "body_text": "I met with the same problem, and after I copied the declaration of the template scalar_multiple2_op from eigen, the problem is fixed. Here is the template:\ntemplate<typename Scalar1, typename Scalar2>\nstruct scalar_multiple2_op {\n  typedef typename scalar_product_traits<Scalar1,Scalar2>::ReturnType result_type;\n  EIGEN_STRONG_INLINE scalar_multiple2_op(const scalar_multiple2_op& other) : m_other(other.m_other) { }\n  EIGEN_STRONG_INLINE scalar_multiple2_op(const Scalar2& other) : m_other(other) { }\n  EIGEN_STRONG_INLINE result_type operator() (const Scalar1& a) const { return a * m_other; }\n  typename add_const_on_value_type<typename NumTraits<Scalar2>::Nested>::type m_other;\n};", "body": "I met with the same problem, and after I copied the declaration of the template scalar_multiple2_op from eigen, the problem is fixed. Here is the template: \n\n```\ntemplate<typename Scalar1, typename Scalar2>\nstruct scalar_multiple2_op {\n  typedef typename scalar_product_traits<Scalar1,Scalar2>::ReturnType result_type;\n  EIGEN_STRONG_INLINE scalar_multiple2_op(const scalar_multiple2_op& other) : m_other(other.m_other) { }\n  EIGEN_STRONG_INLINE scalar_multiple2_op(const Scalar2& other) : m_other(other) { }\n  EIGEN_STRONG_INLINE result_type operator() (const Scalar1& a) const { return a * m_other; }\n  typename add_const_on_value_type<typename NumTraits<Scalar2>::Nested>::type m_other;\n};\n\n```\n"}