{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/219276659", "pull_request_review_id": 157415056, "id": 219276659, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTI3NjY1OQ==", "diff_hunk": "@@ -2307,19 +2311,57 @@ def layer_norm(inputs,\n           initializer=init_ops.ones_initializer(),\n           collections=gamma_collections,\n           trainable=trainable)\n-    # Calculate the moments on the last axis (layer activations).\n-    norm_axes = list(range(begin_norm_axis, inputs_rank))\n-    mean, variance = nn.moments(inputs, norm_axes, keep_dims=True)\n-    # Compute layer normalization using the batch_normalization function.\n-    variance_epsilon = 1e-12\n-    outputs = nn.batch_normalization(\n-        inputs,\n-        mean,\n-        variance,\n-        offset=beta,\n-        scale=gamma,\n-        variance_epsilon=variance_epsilon)\n-    outputs.set_shape(inputs_shape)\n+    if use_fused_batch_norm:\n+      # get static TensorShape if fully defined,\n+      # otherwise retrieve shape tensor\n+      norm_shape = inputs.shape[begin_norm_axis:]\n+      if norm_shape.is_fully_defined():\n+        bn_shape = [1, -1, 1, numpy.prod(norm_shape.as_list())]\n+      else:\n+        norm_shape = tf.shape(inputs)[begin_norm_axis:]\n+        bn_shape = [1, -1, 1, tf.reduce_prod(norm_shape)]\n+      if inputs.get_shape().is_fully_defined():\n+        outputs_shape = inputs.get_shape()\n+      else:\n+        outputs_shape = tf.shape(inputs)\n+      inputs = array_ops.reshape(inputs, bn_shape)\n+      if inputs.get_shape().is_fully_defined():\n+        # static inputs TensorShape fully defined after reshape.", "path": "tensorflow/contrib/layers/python/layers/layers.py", "position": 59, "original_position": 59, "commit_id": "60146e83fc2bffd22c42b58be2d25dbd1ece25eb", "original_commit_id": "60146e83fc2bffd22c42b58be2d25dbd1ece25eb", "user": {"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}, "body": "?", "created_at": "2018-09-20T18:45:48Z", "updated_at": "2018-09-20T18:46:38Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/22256#discussion_r219276659", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/22256", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/219276659"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/22256#discussion_r219276659"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/22256"}}, "body_html": "<p>?</p>", "body_text": "?"}