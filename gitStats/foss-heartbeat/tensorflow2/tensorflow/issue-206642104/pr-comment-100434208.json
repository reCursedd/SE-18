{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/100434208", "pull_request_review_id": 21142526, "id": 100434208, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMDQzNDIwOA==", "diff_hunk": "@@ -226,7 +226,11 @@ def __init__(self,\n           expected_shape=expected_shape)\n \n   def __str__(self):\n-    return str(self._snapshot)\n+    return self.__repr_()\n+\n+  def __repr__(self):\n+    return \"<tf.Variable '%s' shape=%s dtype=%s>\" % (\n+            self.name(), self.get_shape(), self.dtype.name)", "path": "tensorflow/python/ops/variables.py", "position": null, "original_position": 9, "commit_id": "c017d68e31c0b49b514550967329680035821c32", "original_commit_id": "26375220b2fd6211817ce386ae59b2202ed5ae38", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "body": "Thanks for making that change. I just noticed that it should be `self.name` instead of `self.name()` (for the same reasons as `self.dtype`...). Can you please make that change as well?\r\n\r\nThis little piece of code has proven surprisingly tricky for such a small change! I think it might be a good idea to add a unit test, which would have caught these issues. Can you please add a test of `str(tf.Variable(...))` and `repr(tf.Variable(...))` to `variables_test.py`? You can base it on the similar tests for `tf.Operation` [here](https://github.com/tensorflow/tensorflow/blob/286a5361df528dd5d5f1c5b319a69a0029e245bc/tensorflow/python/framework/ops_test.py#L344).", "created_at": "2017-02-09T22:57:11Z", "updated_at": "2017-02-10T01:04:30Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/7400#discussion_r100434208", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/7400", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/100434208"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/7400#discussion_r100434208"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/7400"}}, "body_html": "<p>Thanks for making that change. I just noticed that it should be <code>self.name</code> instead of <code>self.name()</code> (for the same reasons as <code>self.dtype</code>...). Can you please make that change as well?</p>\n<p>This little piece of code has proven surprisingly tricky for such a small change! I think it might be a good idea to add a unit test, which would have caught these issues. Can you please add a test of <code>str(tf.Variable(...))</code> and <code>repr(tf.Variable(...))</code> to <code>variables_test.py</code>? You can base it on the similar tests for <code>tf.Operation</code> <a href=\"https://github.com/tensorflow/tensorflow/blob/286a5361df528dd5d5f1c5b319a69a0029e245bc/tensorflow/python/framework/ops_test.py#L344\">here</a>.</p>", "body_text": "Thanks for making that change. I just noticed that it should be self.name instead of self.name() (for the same reasons as self.dtype...). Can you please make that change as well?\nThis little piece of code has proven surprisingly tricky for such a small change! I think it might be a good idea to add a unit test, which would have caught these issues. Can you please add a test of str(tf.Variable(...)) and repr(tf.Variable(...)) to variables_test.py? You can base it on the similar tests for tf.Operation here."}