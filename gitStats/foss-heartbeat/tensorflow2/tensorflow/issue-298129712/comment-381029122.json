{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/381029122", "html_url": "https://github.com/tensorflow/tensorflow/pull/17113#issuecomment-381029122", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17113", "id": 381029122, "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTAyOTEyMg==", "user": {"login": "bowang", "id": 425637, "node_id": "MDQ6VXNlcjQyNTYzNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/425637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bowang", "html_url": "https://github.com/bowang", "followers_url": "https://api.github.com/users/bowang/followers", "following_url": "https://api.github.com/users/bowang/following{/other_user}", "gists_url": "https://api.github.com/users/bowang/gists{/gist_id}", "starred_url": "https://api.github.com/users/bowang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bowang/subscriptions", "organizations_url": "https://api.github.com/users/bowang/orgs", "repos_url": "https://api.github.com/users/bowang/repos", "events_url": "https://api.github.com/users/bowang/events{/privacy}", "received_events_url": "https://api.github.com/users/bowang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-13T05:37:12Z", "updated_at": "2018-04-13T05:37:12Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=577277\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/martinwicke\">@martinwicke</a> Thanks for the comments.</p>\n<p>I added more docs/comments on the code to make it easier to understand.</p>\n<p>I fixed the quadruple loop into a triple loop. Thank you for the suggestion!<br>\nUsing eigen will make it more concise and gain the benefit of GPU support. But it will also make it harder to understand and maintain. As an initializer, it only runs once at the beginning. Thus the performance impact is relatively limited.</p>\n<p>It's not very straightforward to implement it using ResizeBilinear, because ResizeBilinear directly performs the upsampling on the data while BilinearInitializer generates a kernel with which the convolution conducts the upsampling.</p>", "body_text": "@martinwicke Thanks for the comments.\nI added more docs/comments on the code to make it easier to understand.\nI fixed the quadruple loop into a triple loop. Thank you for the suggestion!\nUsing eigen will make it more concise and gain the benefit of GPU support. But it will also make it harder to understand and maintain. As an initializer, it only runs once at the beginning. Thus the performance impact is relatively limited.\nIt's not very straightforward to implement it using ResizeBilinear, because ResizeBilinear directly performs the upsampling on the data while BilinearInitializer generates a kernel with which the convolution conducts the upsampling.", "body": "@martinwicke Thanks for the comments.\r\n\r\nI added more docs/comments on the code to make it easier to understand. \r\n\r\nI fixed the quadruple loop into a triple loop. Thank you for the suggestion!\r\nUsing eigen will make it more concise and gain the benefit of GPU support. But it will also make it harder to understand and maintain. As an initializer, it only runs once at the beginning. Thus the performance impact is relatively limited.\r\n\r\nIt's not very straightforward to implement it using ResizeBilinear, because ResizeBilinear directly performs the upsampling on the data while BilinearInitializer generates a kernel with which the convolution conducts the upsampling."}