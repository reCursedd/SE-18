{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4138", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4138/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4138/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4138/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/4138", "id": 174407019, "node_id": "MDU6SXNzdWUxNzQ0MDcwMTk=", "number": 4138, "title": "seq2seq model is not efficient when using sampled softmax", "user": {"login": "cloudygoose", "id": 1544039, "node_id": "MDQ6VXNlcjE1NDQwMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1544039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cloudygoose", "html_url": "https://github.com/cloudygoose", "followers_url": "https://api.github.com/users/cloudygoose/followers", "following_url": "https://api.github.com/users/cloudygoose/following{/other_user}", "gists_url": "https://api.github.com/users/cloudygoose/gists{/gist_id}", "starred_url": "https://api.github.com/users/cloudygoose/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cloudygoose/subscriptions", "organizations_url": "https://api.github.com/users/cloudygoose/orgs", "repos_url": "https://api.github.com/users/cloudygoose/repos", "events_url": "https://api.github.com/users/cloudygoose/events{/privacy}", "received_events_url": "https://api.github.com/users/cloudygoose/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}, {"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "lukaszkaiser", "id": 684901, "node_id": "MDQ6VXNlcjY4NDkwMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/684901?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukaszkaiser", "html_url": "https://github.com/lukaszkaiser", "followers_url": "https://api.github.com/users/lukaszkaiser/followers", "following_url": "https://api.github.com/users/lukaszkaiser/following{/other_user}", "gists_url": "https://api.github.com/users/lukaszkaiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukaszkaiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukaszkaiser/subscriptions", "organizations_url": "https://api.github.com/users/lukaszkaiser/orgs", "repos_url": "https://api.github.com/users/lukaszkaiser/repos", "events_url": "https://api.github.com/users/lukaszkaiser/events{/privacy}", "received_events_url": "https://api.github.com/users/lukaszkaiser/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "lukaszkaiser", "id": 684901, "node_id": "MDQ6VXNlcjY4NDkwMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/684901?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukaszkaiser", "html_url": "https://github.com/lukaszkaiser", "followers_url": "https://api.github.com/users/lukaszkaiser/followers", "following_url": "https://api.github.com/users/lukaszkaiser/following{/other_user}", "gists_url": "https://api.github.com/users/lukaszkaiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukaszkaiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukaszkaiser/subscriptions", "organizations_url": "https://api.github.com/users/lukaszkaiser/orgs", "repos_url": "https://api.github.com/users/lukaszkaiser/repos", "events_url": "https://api.github.com/users/lukaszkaiser/events{/privacy}", "received_events_url": "https://api.github.com/users/lukaszkaiser/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2016-09-01T00:00:14Z", "updated_at": "2016-11-27T21:25:12Z", "closed_at": "2016-09-09T17:40:54Z", "author_association": "NONE", "body_html": "<p>Hi,<br>\nmy commit number is<br>\n<a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/70de76e696c21da617fd2e6435cf7fedab220db8/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/70de76e696c21da617fd2e6435cf7fedab220db8\"><tt>70de76e</tt></a></p>\n<p>I want to try sampled softmax to speed up my lm training. I'm changing slightly on the ptb training example code. I'm working on a CPU machine.<br>\nFirst, on ptb(vocab 10k), I'm using the \"small\" config, I see some speed up gain:<br>\nnormal softmax 896wps</p>\n<p>sample_softmax h256L1ba20 sample512 1975wps</p>\n<p>Then, I move to a larger set, and using 100k vocab, I'm still setting the sample number to 512, I think the speed should be similar to the ptb case. But I got the speed to be about 300 wps, even if I set the sample number as small as 4. I don't understand why it should be so slower than the ptb case. Do you know how can I make it faster?</p>\n<p>Here's some of the related code:</p>\n<pre><code>      output = tf.reshape(tf.concat(1, outputs), [-1, size])\n      softmax_w = tf.get_variable(\"softmax_w\", [size, vocab_size])\n      softmax_w_t = tf.transpose(softmax_w)\n      softmax_b = tf.get_variable(\"softmax_b\", [vocab_size])\n\n    if use_sample_softmax == True:\n      loss = tf.nn.sampled_softmax_loss(softmax_w_t, softmax_b, output, tf.reshape(self._targets, [-1, 1]), num_samples, vocab_size) #todo\n      self._cost = cost = tf.reduce_sum(loss) / batch_size\n    else:\n      logits = tf.matmul(output, softmax_w) + softmax_b\n      loss = tf.nn.seq2seq.sequence_loss_by_example(\n          [logits],\n          [tf.reshape(self._targets, [-1])],\n          [tf.ones([batch_size * num_steps])])\n      self._cost = cost = tf.reduce_sum(loss) / batch_size\n\n\n</code></pre>\n<p>Thanks!<br>\nGoose</p>", "body_text": "Hi,\nmy commit number is\n70de76e\nI want to try sampled softmax to speed up my lm training. I'm changing slightly on the ptb training example code. I'm working on a CPU machine.\nFirst, on ptb(vocab 10k), I'm using the \"small\" config, I see some speed up gain:\nnormal softmax 896wps\nsample_softmax h256L1ba20 sample512 1975wps\nThen, I move to a larger set, and using 100k vocab, I'm still setting the sample number to 512, I think the speed should be similar to the ptb case. But I got the speed to be about 300 wps, even if I set the sample number as small as 4. I don't understand why it should be so slower than the ptb case. Do you know how can I make it faster?\nHere's some of the related code:\n      output = tf.reshape(tf.concat(1, outputs), [-1, size])\n      softmax_w = tf.get_variable(\"softmax_w\", [size, vocab_size])\n      softmax_w_t = tf.transpose(softmax_w)\n      softmax_b = tf.get_variable(\"softmax_b\", [vocab_size])\n\n    if use_sample_softmax == True:\n      loss = tf.nn.sampled_softmax_loss(softmax_w_t, softmax_b, output, tf.reshape(self._targets, [-1, 1]), num_samples, vocab_size) #todo\n      self._cost = cost = tf.reduce_sum(loss) / batch_size\n    else:\n      logits = tf.matmul(output, softmax_w) + softmax_b\n      loss = tf.nn.seq2seq.sequence_loss_by_example(\n          [logits],\n          [tf.reshape(self._targets, [-1])],\n          [tf.ones([batch_size * num_steps])])\n      self._cost = cost = tf.reduce_sum(loss) / batch_size\n\n\n\nThanks!\nGoose", "body": "Hi, \nmy commit number is\n70de76e696c21da617fd2e6435cf7fedab220db8\n\nI want to try sampled softmax to speed up my lm training. I'm changing slightly on the ptb training example code. I'm working on a CPU machine.\nFirst, on ptb(vocab 10k), I'm using the \"small\" config, I see some speed up gain:\nnormal softmax 896wps\n\nsample_softmax h256L1ba20 sample512 1975wps\n\nThen, I move to a larger set, and using 100k vocab, I'm still setting the sample number to 512, I think the speed should be similar to the ptb case. But I got the speed to be about 300 wps, even if I set the sample number as small as 4. I don't understand why it should be so slower than the ptb case. Do you know how can I make it faster?\n\nHere's some of the related code:\n\n```\n      output = tf.reshape(tf.concat(1, outputs), [-1, size])\n      softmax_w = tf.get_variable(\"softmax_w\", [size, vocab_size])\n      softmax_w_t = tf.transpose(softmax_w)\n      softmax_b = tf.get_variable(\"softmax_b\", [vocab_size])\n\n    if use_sample_softmax == True:\n      loss = tf.nn.sampled_softmax_loss(softmax_w_t, softmax_b, output, tf.reshape(self._targets, [-1, 1]), num_samples, vocab_size) #todo\n      self._cost = cost = tf.reduce_sum(loss) / batch_size\n    else:\n      logits = tf.matmul(output, softmax_w) + softmax_b\n      loss = tf.nn.seq2seq.sequence_loss_by_example(\n          [logits],\n          [tf.reshape(self._targets, [-1])],\n          [tf.ones([batch_size * num_steps])])\n      self._cost = cost = tf.reduce_sum(loss) / batch_size\n\n\n```\n\nThanks!\nGoose\n"}