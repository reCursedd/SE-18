{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2391", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2391/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2391/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2391/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/2391", "id": 155086739, "node_id": "MDU6SXNzdWUxNTUwODY3Mzk=", "number": 2391, "title": "Implemented Tensorflow Op Kernel not found", "user": {"login": "amjadsaadeh", "id": 613557, "node_id": "MDQ6VXNlcjYxMzU1Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/613557?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amjadsaadeh", "html_url": "https://github.com/amjadsaadeh", "followers_url": "https://api.github.com/users/amjadsaadeh/followers", "following_url": "https://api.github.com/users/amjadsaadeh/following{/other_user}", "gists_url": "https://api.github.com/users/amjadsaadeh/gists{/gist_id}", "starred_url": "https://api.github.com/users/amjadsaadeh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amjadsaadeh/subscriptions", "organizations_url": "https://api.github.com/users/amjadsaadeh/orgs", "repos_url": "https://api.github.com/users/amjadsaadeh/repos", "events_url": "https://api.github.com/users/amjadsaadeh/events{/privacy}", "received_events_url": "https://api.github.com/users/amjadsaadeh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-05-16T18:11:34Z", "updated_at": "2017-07-17T02:29:30Z", "closed_at": "2016-05-20T19:53:19Z", "author_association": "NONE", "body_html": "<p>I would like to implement an fft op kernel for CPU. Since eigen got an fft implementation this shouldn't be too hard. It's compiling without problems, but I am always running into an InvalidArgumentError when trying to use it from python (see below).</p>\n<p>Code of kernel for fft op on CPU (modification of <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/fft_ops.cc\">this file</a>):</p>\n<pre lang=\"...\"><code>// CPU Implementation\ntemplate &lt;bool Forward&gt;\nclass FFTCPU1D : public OpKernel {\n public:\n  explicit FFTCPU1D(OpKernelConstruction* ctx) : OpKernel(ctx) {}\n\n  void Compute(OpKernelContext* ctx) override {\n    const Tensor&amp; in = ctx-&gt;input(0);\n    const TensorShape&amp; shape = in.shape();\n    OP_REQUIRES(ctx, shape.dims() != 1,\n      errors::InvalidArgument(\"Input must have rank 1, but got: \",\n                                shape.DebugString()));\n\n    Tensor* out;\n    OP_REQUIRES_OK(ctx, ctx-&gt;allocate_output(0, shape, &amp;out));\n    if (Forward) {\n        out.vec&lt;std::complex&lt;Scalar&gt;&gt;() = kernel_variant.template fft&lt;Eigen::BothParts, FFT_FORWARD&gt;(fft).vec()&lt;std::complex&lt;Scalar&gt;&gt;;\n    } else {\n        out.vec&lt;std::complex&lt;Scalar&gt;&gt;() = kernel_variant.template fft&lt;Eigen::BothParts, FFT_REVERSE&gt;(fft).vec()&lt;std::complex&lt;Scalar&gt;&gt;;\n    }\n  }\n\n};\n\nREGISTER_KERNEL_BUILDER(Name(\"FFT\").Device(DEVICE_CPU), FFTCPU1D&lt;true&gt;);\nREGISTER_KERNEL_BUILDER(Name(\"IFFT\").Device(DEVICE_CPU), FFTCPU1D&lt;false&gt;);\n...\n</code></pre>\n<p>Python-Script for testing:</p>\n<pre><code>import numpy as np\nimport tensorflow as tf\n\nsess = tf.Session()\ndata = np.complex64(np.random.normal(size=1024))\ninput = tf.constant(data)\nfftOp = tf.fft(input)\n\nprint(sess.run(fftOp))\n</code></pre>\n<p>Error-Message:</p>\n<pre><code># python ~/test.py\nTraceback (most recent call last):\n  File \"/root/test.py\", line 12, in &lt;module&gt;\n    print(sess.run(fftOp))\n  File \"/tensorflow/_python_build/tensorflow/python/client/session.py\", line 332, in run\n    run_metadata_ptr)\n  File \"/tensorflow/_python_build/tensorflow/python/client/session.py\", line 572, in _run\n    feed_dict_string, options, run_metadata)\n  File \"/tensorflow/_python_build/tensorflow/python/client/session.py\", line 652, in _do_run\n    target_list, options, run_metadata)\n  File \"/tensorflow/_python_build/tensorflow/python/client/session.py\", line 672, in _do_call\n    raise type(e)(node_def, op, message)\ntensorflow.python.framework.errors.InvalidArgumentError: No OpKernel was registered to support Op 'FFT' with these attrs\n         [[Node: FFT = FFT[](Const)]]\nCaused by op u'FFT', defined at:\n  File \"/root/test.py\", line 10, in &lt;module&gt;\n    fftOp = tf.fft(input)\n  File \"/tensorflow/_python_build/tensorflow/python/ops/gen_math_ops.py\", line 518, in fft\n    return _op_def_lib.apply_op(\"FFT\", input=input, name=name)\n  File \"/tensorflow/_python_build/tensorflow/python/ops/op_def_library.py\", line 693, in apply_op\n    op_def=op_def)\n  File \"/tensorflow/_python_build/tensorflow/python/framework/ops.py\", line 2177, in create_op\n    original_op=self._default_original_op, op_def=op_def)\n  File \"/tensorflow/_python_build/tensorflow/python/framework/ops.py\", line 1161, in __init__\n    self._traceback = _extract_stack()\n</code></pre>\n<p>I've got the gcr.io/tensorflow/tensorflow:latest-devel docker image and commit 5f4524 and built tensorflow according to the <a href=\"https://www.tensorflow.org/versions/master/get_started/os_setup.html#setting_up_tensorflow_for_development\" rel=\"nofollow\">instructions</a>.</p>\n<p>I'm not sure whether it's a bug or I'm doing something wrong. I've already opened a <a href=\"https://stackoverflow.com/questions/37252600/implemented-tensorflow-op-kernel-not-found\" rel=\"nofollow\">stackoverflow question</a>.</p>", "body_text": "I would like to implement an fft op kernel for CPU. Since eigen got an fft implementation this shouldn't be too hard. It's compiling without problems, but I am always running into an InvalidArgumentError when trying to use it from python (see below).\nCode of kernel for fft op on CPU (modification of this file):\n// CPU Implementation\ntemplate <bool Forward>\nclass FFTCPU1D : public OpKernel {\n public:\n  explicit FFTCPU1D(OpKernelConstruction* ctx) : OpKernel(ctx) {}\n\n  void Compute(OpKernelContext* ctx) override {\n    const Tensor& in = ctx->input(0);\n    const TensorShape& shape = in.shape();\n    OP_REQUIRES(ctx, shape.dims() != 1,\n      errors::InvalidArgument(\"Input must have rank 1, but got: \",\n                                shape.DebugString()));\n\n    Tensor* out;\n    OP_REQUIRES_OK(ctx, ctx->allocate_output(0, shape, &out));\n    if (Forward) {\n        out.vec<std::complex<Scalar>>() = kernel_variant.template fft<Eigen::BothParts, FFT_FORWARD>(fft).vec()<std::complex<Scalar>>;\n    } else {\n        out.vec<std::complex<Scalar>>() = kernel_variant.template fft<Eigen::BothParts, FFT_REVERSE>(fft).vec()<std::complex<Scalar>>;\n    }\n  }\n\n};\n\nREGISTER_KERNEL_BUILDER(Name(\"FFT\").Device(DEVICE_CPU), FFTCPU1D<true>);\nREGISTER_KERNEL_BUILDER(Name(\"IFFT\").Device(DEVICE_CPU), FFTCPU1D<false>);\n...\n\nPython-Script for testing:\nimport numpy as np\nimport tensorflow as tf\n\nsess = tf.Session()\ndata = np.complex64(np.random.normal(size=1024))\ninput = tf.constant(data)\nfftOp = tf.fft(input)\n\nprint(sess.run(fftOp))\n\nError-Message:\n# python ~/test.py\nTraceback (most recent call last):\n  File \"/root/test.py\", line 12, in <module>\n    print(sess.run(fftOp))\n  File \"/tensorflow/_python_build/tensorflow/python/client/session.py\", line 332, in run\n    run_metadata_ptr)\n  File \"/tensorflow/_python_build/tensorflow/python/client/session.py\", line 572, in _run\n    feed_dict_string, options, run_metadata)\n  File \"/tensorflow/_python_build/tensorflow/python/client/session.py\", line 652, in _do_run\n    target_list, options, run_metadata)\n  File \"/tensorflow/_python_build/tensorflow/python/client/session.py\", line 672, in _do_call\n    raise type(e)(node_def, op, message)\ntensorflow.python.framework.errors.InvalidArgumentError: No OpKernel was registered to support Op 'FFT' with these attrs\n         [[Node: FFT = FFT[](Const)]]\nCaused by op u'FFT', defined at:\n  File \"/root/test.py\", line 10, in <module>\n    fftOp = tf.fft(input)\n  File \"/tensorflow/_python_build/tensorflow/python/ops/gen_math_ops.py\", line 518, in fft\n    return _op_def_lib.apply_op(\"FFT\", input=input, name=name)\n  File \"/tensorflow/_python_build/tensorflow/python/ops/op_def_library.py\", line 693, in apply_op\n    op_def=op_def)\n  File \"/tensorflow/_python_build/tensorflow/python/framework/ops.py\", line 2177, in create_op\n    original_op=self._default_original_op, op_def=op_def)\n  File \"/tensorflow/_python_build/tensorflow/python/framework/ops.py\", line 1161, in __init__\n    self._traceback = _extract_stack()\n\nI've got the gcr.io/tensorflow/tensorflow:latest-devel docker image and commit 5f4524 and built tensorflow according to the instructions.\nI'm not sure whether it's a bug or I'm doing something wrong. I've already opened a stackoverflow question.", "body": "I would like to implement an fft op kernel for CPU. Since eigen got an fft implementation this shouldn't be too hard. It's compiling without problems, but I am always running into an InvalidArgumentError when trying to use it from python (see below).\n\nCode of kernel for fft op on CPU (modification of [this file](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/fft_ops.cc)):\n\n``` ...\n// CPU Implementation\ntemplate <bool Forward>\nclass FFTCPU1D : public OpKernel {\n public:\n  explicit FFTCPU1D(OpKernelConstruction* ctx) : OpKernel(ctx) {}\n\n  void Compute(OpKernelContext* ctx) override {\n    const Tensor& in = ctx->input(0);\n    const TensorShape& shape = in.shape();\n    OP_REQUIRES(ctx, shape.dims() != 1,\n      errors::InvalidArgument(\"Input must have rank 1, but got: \",\n                                shape.DebugString()));\n\n    Tensor* out;\n    OP_REQUIRES_OK(ctx, ctx->allocate_output(0, shape, &out));\n    if (Forward) {\n        out.vec<std::complex<Scalar>>() = kernel_variant.template fft<Eigen::BothParts, FFT_FORWARD>(fft).vec()<std::complex<Scalar>>;\n    } else {\n        out.vec<std::complex<Scalar>>() = kernel_variant.template fft<Eigen::BothParts, FFT_REVERSE>(fft).vec()<std::complex<Scalar>>;\n    }\n  }\n\n};\n\nREGISTER_KERNEL_BUILDER(Name(\"FFT\").Device(DEVICE_CPU), FFTCPU1D<true>);\nREGISTER_KERNEL_BUILDER(Name(\"IFFT\").Device(DEVICE_CPU), FFTCPU1D<false>);\n...\n```\n\nPython-Script for testing:\n\n```\nimport numpy as np\nimport tensorflow as tf\n\nsess = tf.Session()\ndata = np.complex64(np.random.normal(size=1024))\ninput = tf.constant(data)\nfftOp = tf.fft(input)\n\nprint(sess.run(fftOp))\n```\n\nError-Message:\n\n```\n# python ~/test.py\nTraceback (most recent call last):\n  File \"/root/test.py\", line 12, in <module>\n    print(sess.run(fftOp))\n  File \"/tensorflow/_python_build/tensorflow/python/client/session.py\", line 332, in run\n    run_metadata_ptr)\n  File \"/tensorflow/_python_build/tensorflow/python/client/session.py\", line 572, in _run\n    feed_dict_string, options, run_metadata)\n  File \"/tensorflow/_python_build/tensorflow/python/client/session.py\", line 652, in _do_run\n    target_list, options, run_metadata)\n  File \"/tensorflow/_python_build/tensorflow/python/client/session.py\", line 672, in _do_call\n    raise type(e)(node_def, op, message)\ntensorflow.python.framework.errors.InvalidArgumentError: No OpKernel was registered to support Op 'FFT' with these attrs\n         [[Node: FFT = FFT[](Const)]]\nCaused by op u'FFT', defined at:\n  File \"/root/test.py\", line 10, in <module>\n    fftOp = tf.fft(input)\n  File \"/tensorflow/_python_build/tensorflow/python/ops/gen_math_ops.py\", line 518, in fft\n    return _op_def_lib.apply_op(\"FFT\", input=input, name=name)\n  File \"/tensorflow/_python_build/tensorflow/python/ops/op_def_library.py\", line 693, in apply_op\n    op_def=op_def)\n  File \"/tensorflow/_python_build/tensorflow/python/framework/ops.py\", line 2177, in create_op\n    original_op=self._default_original_op, op_def=op_def)\n  File \"/tensorflow/_python_build/tensorflow/python/framework/ops.py\", line 1161, in __init__\n    self._traceback = _extract_stack()\n```\n\nI've got the gcr.io/tensorflow/tensorflow:latest-devel docker image and commit 5f4524 and built tensorflow according to the [instructions](https://www.tensorflow.org/versions/master/get_started/os_setup.html#setting_up_tensorflow_for_development).\n\nI'm not sure whether it's a bug or I'm doing something wrong. I've already opened a [stackoverflow question](https://stackoverflow.com/questions/37252600/implemented-tensorflow-op-kernel-not-found).\n"}