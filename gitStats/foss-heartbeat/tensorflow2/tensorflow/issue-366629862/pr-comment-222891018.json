{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/222891018", "pull_request_review_id": 161888289, "id": 222891018, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMjg5MTAxOA==", "diff_hunk": "@@ -272,7 +272,7 @@ Status MetaOptimizer::OptimizeGraph(Cluster* cluster, const GrapplerItem& item,\n   }\n \n   std::vector<std::unique_ptr<GraphOptimizer>> optimizers;\n-  if (cfg_.optimizers().empty()) {\n+  if (cfg_.optimizers().empty() && cfg_.custom_optimizers().empty()) {", "path": "tensorflow/core/grappler/optimizers/meta_optimizer.cc", "position": 5, "original_position": 5, "commit_id": "7e20bec6ff779d5d6142668aa2d897b98a2bd844", "original_commit_id": "7e20bec6ff779d5d6142668aa2d897b98a2bd844", "user": {"login": "aaroey", "id": 31743510, "node_id": "MDQ6VXNlcjMxNzQzNTEw", "avatar_url": "https://avatars0.githubusercontent.com/u/31743510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaroey", "html_url": "https://github.com/aaroey", "followers_url": "https://api.github.com/users/aaroey/followers", "following_url": "https://api.github.com/users/aaroey/following{/other_user}", "gists_url": "https://api.github.com/users/aaroey/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaroey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaroey/subscriptions", "organizations_url": "https://api.github.com/users/aaroey/orgs", "repos_url": "https://api.github.com/users/aaroey/repos", "events_url": "https://api.github.com/users/aaroey/events{/privacy}", "received_events_url": "https://api.github.com/users/aaroey/received_events", "type": "User", "site_admin": false}, "body": "Thanks Sami for the detailed explanation. In my opinion, if possible, a cleaner solution could be to remove the `RewriterConfig::optimizer` list, and let all optimizers use the `RewriterConfig::custom_optimizers` list (and maybe rename it back to `RewriterConfig::optimizer`). This way, we only have one list. If the list is empty, we enable the default optimizers (layout, constfold, etc) based on `Toggle` options. If the list is not empty, we ignore any `Toggle` options, and add optimizers based on the the list.\r\n\r\nI think Sami's solution in this PR is somehow equivalent to what I described, the only difference is there are two lists.", "created_at": "2018-10-05T04:48:35Z", "updated_at": "2018-10-05T04:48:35Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/22720#discussion_r222891018", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/22720", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/222891018"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/22720#discussion_r222891018"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/22720"}}, "body_html": "<p>Thanks Sami for the detailed explanation. In my opinion, if possible, a cleaner solution could be to remove the <code>RewriterConfig::optimizer</code> list, and let all optimizers use the <code>RewriterConfig::custom_optimizers</code> list (and maybe rename it back to <code>RewriterConfig::optimizer</code>). This way, we only have one list. If the list is empty, we enable the default optimizers (layout, constfold, etc) based on <code>Toggle</code> options. If the list is not empty, we ignore any <code>Toggle</code> options, and add optimizers based on the the list.</p>\n<p>I think Sami's solution in this PR is somehow equivalent to what I described, the only difference is there are two lists.</p>", "body_text": "Thanks Sami for the detailed explanation. In my opinion, if possible, a cleaner solution could be to remove the RewriterConfig::optimizer list, and let all optimizers use the RewriterConfig::custom_optimizers list (and maybe rename it back to RewriterConfig::optimizer). This way, we only have one list. If the list is empty, we enable the default optimizers (layout, constfold, etc) based on Toggle options. If the list is not empty, we ignore any Toggle options, and add optimizers based on the the list.\nI think Sami's solution in this PR is somehow equivalent to what I described, the only difference is there are two lists.", "in_reply_to_id": 222733214}