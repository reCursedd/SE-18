{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/334336063", "html_url": "https://github.com/tensorflow/tensorflow/issues/13147#issuecomment-334336063", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13147", "id": 334336063, "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDMzNjA2Mw==", "user": {"login": "materacer", "id": 32087307, "node_id": "MDQ6VXNlcjMyMDg3MzA3", "avatar_url": "https://avatars1.githubusercontent.com/u/32087307?v=4", "gravatar_id": "", "url": "https://api.github.com/users/materacer", "html_url": "https://github.com/materacer", "followers_url": "https://api.github.com/users/materacer/followers", "following_url": "https://api.github.com/users/materacer/following{/other_user}", "gists_url": "https://api.github.com/users/materacer/gists{/gist_id}", "starred_url": "https://api.github.com/users/materacer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/materacer/subscriptions", "organizations_url": "https://api.github.com/users/materacer/orgs", "repos_url": "https://api.github.com/users/materacer/repos", "events_url": "https://api.github.com/users/materacer/events{/privacy}", "received_events_url": "https://api.github.com/users/materacer/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-05T01:41:12Z", "updated_at": "2017-10-05T01:41:12Z", "author_association": "NONE", "body_html": "<p>Hi Kody851,</p>\n<p>Thanks for info. I just implemented one method to  fix this problem.<br>\nI think your suggestion should be worked for this yesterday, but Altera Arria X currently supports OpenCL v1.0.<br>\nPart function of tf-coriander could need to be modified from OpenCL v1.2 to OpenCL v1.0.</p>\n<p>Hi all,</p>\n<p>Thanks for your suggestion. Please help switch this bug as close. The following lists my method to share with someone having this problem.</p>\n<p>As martinwicke's response , Bazel doesn't like to dependency external library, not in system.<br>\nMy method is very similar as that I previously wrote \"..g++ build AOCLUtils as library\"</p>\n<p>I implements computing function, AOCLUtils, and OpenCL library in one class (For example, class MatMulFPGA.)<br>\nAnd add external class (just call MatMulFPGAInterface) to call MatMulFPGA  to avoid MatMulFPGAInterface.h to include AOCLUtils &amp; OpenCL header directly.<br>\nThen, packaged them as one library(*.so) via GCC and this header file.<br>\nBesides, when build tensorflow with this library, bazel don't know &amp; compile AOCLUtils &amp; OpenCL library.<br>\nIt fixed my problem that AOCLUtils &amp; OpenCL library always were failed at the end when build tensorflow.<br>\nThis method is little troublesome, but work^^</p>", "body_text": "Hi Kody851,\nThanks for info. I just implemented one method to  fix this problem.\nI think your suggestion should be worked for this yesterday, but Altera Arria X currently supports OpenCL v1.0.\nPart function of tf-coriander could need to be modified from OpenCL v1.2 to OpenCL v1.0.\nHi all,\nThanks for your suggestion. Please help switch this bug as close. The following lists my method to share with someone having this problem.\nAs martinwicke's response , Bazel doesn't like to dependency external library, not in system.\nMy method is very similar as that I previously wrote \"..g++ build AOCLUtils as library\"\nI implements computing function, AOCLUtils, and OpenCL library in one class (For example, class MatMulFPGA.)\nAnd add external class (just call MatMulFPGAInterface) to call MatMulFPGA  to avoid MatMulFPGAInterface.h to include AOCLUtils & OpenCL header directly.\nThen, packaged them as one library(*.so) via GCC and this header file.\nBesides, when build tensorflow with this library, bazel don't know & compile AOCLUtils & OpenCL library.\nIt fixed my problem that AOCLUtils & OpenCL library always were failed at the end when build tensorflow.\nThis method is little troublesome, but work^^", "body": "Hi Kody851,\r\n\r\nThanks for info. I just implemented one method to  fix this problem.\r\nI think your suggestion should be worked for this yesterday, but Altera Arria X currently supports OpenCL v1.0.\r\nPart function of tf-coriander could need to be modified from OpenCL v1.2 to OpenCL v1.0.\r\n\r\nHi all,\r\n\r\nThanks for your suggestion. Please help switch this bug as close. The following lists my method to share with someone having this problem.\r\n\r\nAs martinwicke's response , Bazel doesn't like to dependency external library, not in system.\r\nMy method is very similar as that I previously wrote \"..g++ build AOCLUtils as library\"\r\n\r\nI implements computing function, AOCLUtils, and OpenCL library in one class (For example, class MatMulFPGA.)\r\nAnd add external class (just call MatMulFPGAInterface) to call MatMulFPGA  to avoid MatMulFPGAInterface.h to include AOCLUtils & OpenCL header directly.\r\nThen, packaged them as one library(*.so) via GCC and this header file.\r\nBesides, when build tensorflow with this library, bazel don't know & compile AOCLUtils & OpenCL library.\r\nIt fixed my problem that AOCLUtils & OpenCL library always were failed at the end when build tensorflow.\r\nThis method is little troublesome, but work^^   \r\n\r\n\r\n"}