{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13147", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13147/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13147/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13147/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/13147", "id": 258720175, "node_id": "MDU6SXNzdWUyNTg3MjAxNzU=", "number": 13147, "title": "How do I compile Tensorflow source with Altera FPGA library (AOCLUtils & OPENCL)", "user": {"login": "materacer", "id": 32087307, "node_id": "MDQ6VXNlcjMyMDg3MzA3", "avatar_url": "https://avatars1.githubusercontent.com/u/32087307?v=4", "gravatar_id": "", "url": "https://api.github.com/users/materacer", "html_url": "https://github.com/materacer", "followers_url": "https://api.github.com/users/materacer/followers", "following_url": "https://api.github.com/users/materacer/following{/other_user}", "gists_url": "https://api.github.com/users/materacer/gists{/gist_id}", "starred_url": "https://api.github.com/users/materacer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/materacer/subscriptions", "organizations_url": "https://api.github.com/users/materacer/orgs", "repos_url": "https://api.github.com/users/materacer/repos", "events_url": "https://api.github.com/users/materacer/events{/privacy}", "received_events_url": "https://api.github.com/users/materacer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}, {"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "martinwicke", "id": 577277, "node_id": "MDQ6VXNlcjU3NzI3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/577277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinwicke", "html_url": "https://github.com/martinwicke", "followers_url": "https://api.github.com/users/martinwicke/followers", "following_url": "https://api.github.com/users/martinwicke/following{/other_user}", "gists_url": "https://api.github.com/users/martinwicke/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinwicke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinwicke/subscriptions", "organizations_url": "https://api.github.com/users/martinwicke/orgs", "repos_url": "https://api.github.com/users/martinwicke/repos", "events_url": "https://api.github.com/users/martinwicke/events{/privacy}", "received_events_url": "https://api.github.com/users/martinwicke/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "martinwicke", "id": 577277, "node_id": "MDQ6VXNlcjU3NzI3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/577277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinwicke", "html_url": "https://github.com/martinwicke", "followers_url": "https://api.github.com/users/martinwicke/followers", "following_url": "https://api.github.com/users/martinwicke/following{/other_user}", "gists_url": "https://api.github.com/users/martinwicke/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinwicke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinwicke/subscriptions", "organizations_url": "https://api.github.com/users/martinwicke/orgs", "repos_url": "https://api.github.com/users/martinwicke/repos", "events_url": "https://api.github.com/users/martinwicke/events{/privacy}", "received_events_url": "https://api.github.com/users/martinwicke/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2017-09-19T07:21:14Z", "updated_at": "2017-12-22T02:45:19Z", "closed_at": "2017-12-22T02:45:19Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:</li>\n<li><strong>OS Platform</strong> : Linux Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from source</strong></li>\n<li><strong>TensorFlow version</strong> : 1.3</li>\n<li><strong>Python version</strong>: v2.7.10</li>\n<li><strong>Bazel version</strong>: 0.5.4</li>\n<li><strong>Exact command to reproduce</strong>: set all as default value  ./configure , not use cuda</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I am studying posting matmul_op calculation  into Altera FPGA Arria 10 via OPENCL and combine source and OpenCL/AOCLUtils library as python package.<br>\nHowever, I encountered much problem about this and always build (Bazel) failed when compile.<br>\nThe following share some experience in every stages and some problem over the past month.</p>\n<p>AOCLUtils library package</p>\n<pre><code>\n/AOCLUtils/BUILD     ---&gt;for bazel\n/AOCLUtils/aocl_utils.h\n/AOCLUtils/opencl.h\n/AOCLUtils/options.h\n/AOCLUtils/opencl.cpp\n/AOCLUtils/options.cpp\n/AOCLUtils/scoped_ptrs.h\n</code></pre>\n<p>OPENCL header library package in /home/mater/intelFPGA_pro/17.0/hld/host/include<br>\ncompiled library (*.so) in /home/mater/intelFPGA_pro/17.0/hld/host/linux64/lib ;  /home/mater/intelFPGA_pro/17.0/hld/board/a10_ref/linux64/lib</p>\n<pre><code>\nCL/cl_d3d10.h\nCL/cl_ext.h\nCL/cl_gl.h\nCL/cl.hpp\nCL/opencl.h\nCL/cl_ext_altera.h\nCL/cl_gl_ext.h\nCL/cl.h\nCL/cl_platform.h\n</code></pre>\n<hr>\n<ol>\n<li>Study third party library - SYCL  (Seems not support Altera FPGA)<br>\nOriginal, tensorflow supports OpenCL via SYCL.<br>\nHowever, it only seems support GPU &amp; CPU, not Altera FPGA.<br>\nBesides, I gave up this method.</li>\n</ol>\n<hr>\n<ol start=\"2\">\n<li>Success build a New(external) Op with AOCLUtils/OPENCL via g++, but it's my purpose.<br>\nRefer : <a href=\"https://www.tensorflow.org/extend/adding_an_op\" rel=\"nofollow\">https://www.tensorflow.org/extend/adding_an_op</a><br>\nI study example for a new op and build as library with AOCLUtils/OPENCL.<br>\nThe g++ command is as follow then built as zero_out_cl.so.<br>\nTensorflow can load this external library and run some calculation in FPGA<br>\n(zero_out_module = tf.load_op_library('./zero_out_all.so'))</li>\n</ol>\n<p>Although my purpose is tensorflow python installation with AOCLUtils/OPENCL library,<br>\nit makes sure that tensorflow can support FPGA library</p>\n<pre><code>\ng++ -std=c++11 -shared main.cpp -o zero_out_cl.so -fPIC -I /home/mater/tensorflowCPU_1.3/lib/python2.7/site-packages/tensorflow/include -I/home/mater/intelFPGA/17.0/hld/host/include /home/mater/AI/FPGA/TF_OPENCL_ZeroOut/common/src/AOCLUtils/opencl.cpp /home/mater/AI/FPGA/TF_OPENCL_ZeroOut/common/src/AOCLUtils/options.cpp -L/home/mater/intelFPGA_pro/17.0/hld/board/a10_ref/linux64/lib -L/home/mater/intelFPGA_pro/17.0/hld/host/linux64/lib -Wl,--no-as-needed -lalteracl -laltera_a10_ref_mmd -lelf -I/home/mater/AI/FPGA/TF_OPENCL_ZeroOut/common/inc -O2 -D_GLIBCXX_USE_CXX11_ABI=0 \n</code></pre>\n<hr>\n<ol start=\"3\">\n<li>Modify Tensorflow source code with AOCLUtils/OPENCL and always bazel build failed..<br>\n*step 1. git clone into /home/mater/git/test/tensorflow_opencl (tensorflow root folder)<br>\n*step 2. copy AOCLUtils package into tensorflow root folder<br>\n*step 3. Add cc_library into WORKSPACE for external opencl library (not sure correct method)</li>\n</ol>\n<pre><code>\nnew_local_repository(\n    name = \"opencl_headers\",\n    path = \"/home/mater/intelFPGA_pro/17.0/hld/host/include\",\n    build_file_content = \"\"\"\ncc_library(\n\tname = \"CL\",\n\thdrs = glob([\"CL/*.h\"]),\n\tvisibility = [\"//visibility:public\"],\n\tlinkopts=[\"-shared\"],\n)\n\"\"\",\n)\n\nnew_local_repository(\n    name = \"opencl_libs\",\n    path = \"/home/mater/intelFPGA_pro/17.0/hld/host/linux64/lib\",\n    build_file_content = \"\"\"\ncc_library(\n\tname = \"libopencl\",\n\tsrcs = glob([\"*.so\"]),\n\tvisibility = [\"//visibility:public\"],\n\tlinkopts=[\"-shared\"],\n)\n\"\"\",\n)\n\nnew_local_repository(\n    name = \"a10_lib\",\n    path = \"/home/mater/intelFPGA_pro/17.0/hld/board/a10_ref/linux64/lib\",\n    build_file_content = \"\"\"\ncc_library(\n\tname = \"liba10\",\n\tsrcs = [\"libaltera_a10_ref_mmd.so\"],\n\tvisibility = [\"//visibility:public\"],\n\tlinkopts=[\"-shared\"],\n)\n\"\"\",\n)\n</code></pre>\n<p>*step 4. Add BUILD file into AOCLUtils folder</p>\n<pre><code>\ncc_library(\n\tname=\"aocutils\",\n\tsrcs = glob([\"*.cpp\"]),\n\thdrs = glob([\"*.h\"]),\n\tdeps = [\"@opencl_libs//:libopencl\", \"@opencl_headers//:CL\", \"@a10_lib//:liba10\",],\n\tvisibility=[\"//visibility:public\"],\n)\n</code></pre>\n<p>*step 5. Add deps into tf_kernel_library in tensorflow root folder/tensorflow/core/kernels/BUILD<br>\nI would like to run matmul_op calculation in FPGA so try to include FPGA library</p>\n<pre><code>\ntf_kernel_library(\n    name = \"matmul_op\",\n...\n    deps = MATH_DEPS + [\n...\n    ]) + [\"//AOCLUtils:aocutils\",],\n</code></pre>\n<h2>*I tried 3 methods to build tensorflow source code as python installation package, but always failed</h2>\n<p>*step 6A.  Original bazel build command (Failed situation A)<br>\nUse original Bazel build command, but failed to find CL library.<br>\nexception :   fatal error: CL/cl.h: No such file or directory</p>\n<p>command</p>\n<pre><code>\nbazel build --config=opt //tensorflow/tools/pip_package:build_pip_package --verbose_failures --cxxopt=\"-D_GLIBCXX_USE_CXX11_ABI=0\"\n</code></pre>\n<p>result</p>\n<pre><code>\nERROR: /home/mater/git/test/tensorflow_opencl/AOCLUtils/BUILD:1:1: C++ compilation of rule '//AOCLUtils:aocutils' failed (Exit 1): gcc failed: error executing command \n  (cd /home/mater/.cache/bazel/_bazel_mater/cf4207c477b73da1da7e3336942f640b/execroot/org_tensorflow &amp;&amp; \\\n  exec env - \\\n    PWD=/proc/self/cwd \\\n    PYTHON_BIN_PATH=/usr/bin/python \\\n    PYTHON_LIB_PATH=/usr/local/lib/python2.7/dist-packages \\\n    TF_NEED_CUDA=0 \\\n    TF_NEED_OPENCL=0 \\\n  /usr/bin/gcc -U_FORTIFY_SOURCE -fstack-protector -Wall -B/usr/bin -B/usr/bin -Wunused-but-set-parameter -Wno-free-nonheap-object -fno-omit-frame-pointer -g0 -O2 '-D_FORTIFY_SOURCE=1' -DNDEBUG -ffunction-sections -fdata-sections '-march=native' '-std=c++0x' '-march=native' '-D_GLIBCXX_USE_CXX11_ABI=0' -MD -MF bazel-out/local-opt/bin/AOCLUtils/_objs/aocutils/AOCLUtils/options.pic.d '-frandom-seed=bazel-out/local-opt/bin/AOCLUtils/_objs/aocutils/AOCLUtils/options.pic.o' -fPIC -iquote . -iquote bazel-out/local-opt/genfiles -iquote external/opencl_libs -iquote bazel-out/local-opt/genfiles/external/opencl_libs -iquote external/bazel_tools -iquote bazel-out/local-opt/genfiles/external/bazel_tools -iquote external/opencl_headers -iquote bazel-out/local-opt/genfiles/external/opencl_headers -iquote external/a10_lib -iquote bazel-out/local-opt/genfiles/external/a10_lib -isystem external/bazel_tools/tools/cpp/gcc3 -fno-canonical-system-headers -Wno-builtin-macro-redefined '-D__DATE__=\"redacted\"' '-D__TIMESTAMP__=\"redacted\"' '-D__TIME__=\"redacted\"' -c AOCLUtils/options.cpp -o bazel-out/local-opt/bin/AOCLUtils/_objs/aocutils/AOCLUtils/options.pic.o)\nIn file included from ./AOCLUtils/opencl.h:32:0,\n                 from ./AOCLUtils/aocl_utils.h:27,\n                 from AOCLUtils/options.cpp:22:\nexternal/opencl_headers/CL/opencl.h:42:19: fatal error: CL/cl.h: No such file or directory\ncompilation terminated.\nTarget //tensorflow/tools/pip_package:build_pip_package failed to build\nINFO: Elapsed time: 12.957s, Critical Path: 5.11s\nFAILED: Build did NOT complete successfully\n</code></pre>\n<hr>\n<p>*step 6B.  Add link path in command (Failed situation B)<br>\nUse original Bazel build command with CL external path included, but failed to missing dependency declarations.<br>\nexception :   missing dependency declarations for the following files included by 'AOCLUtils/options.cpp'</p>\n<p>I think this method should be ok and bazel can find CL library location, but I can't understand what happen for this.<br>\nI study some information about 'missing dependency declarations', and found 'CROSSTOOL' for GPU for this title. It didn't help me to solve it because I don't use GPU configuration.</p>\n<p>command like building a New(external) Op method</p>\n<pre><code>\nbazel build --config=opt //tensorflow/tools/pip_package:build_pip_package --copt=\"-I/home/mater/intelFPGA/17.0/hld/host/include\" --verbose_failures  --copt=\"-L/home/mater/intelFPGA_pro/17.0/hld/board/a10_ref/linux64/lib\" --copt=\"-L/home/mater/intelFPGA_pro/17.0/hld/host/linux64/lib\" --cxxopt=\"-D_GLIBCXX_USE_CXX11_ABI=0\"\n</code></pre>\n<p>result</p>\n<pre><code>\nERROR: /home/mater/git/test/tensorflow_opencl/AOCLUtils/BUILD:1:1: undeclared inclusion(s) in rule '//AOCLUtils:aocutils':\nthis rule is missing dependency declarations for the following files included by 'AOCLUtils/options.cpp':\n  '/home/mater/intelFPGA/17.0/hld/host/include/CL/cl.h'\n  '/home/mater/intelFPGA/17.0/hld/host/include/CL/cl_platform.h'\n  '/home/mater/intelFPGA/17.0/hld/host/include/CL/cl_gl.h'\n  '/home/mater/intelFPGA/17.0/hld/host/include/CL/cl_gl_ext.h'\n  '/home/mater/intelFPGA/17.0/hld/host/include/CL/cl_ext.h'\n  '/home/mater/intelFPGA/17.0/hld/host/include/CL/cl_ext_altera.h'\nIn file included from /home/mater/intelFPGA/17.0/hld/host/include/CL/cl_ext.h:42:0,\n                 from external/opencl_headers/CL/opencl.h:45,\n                 from ./AOCLUtils/opencl.h:32,\n                 from ./AOCLUtils/aocl_utils.h:27,\n                 from AOCLUtils/options.cpp:22:\n/home/mater/intelFPGA/17.0/hld/host/include/CL/cl_ext_altera.h:442:0: warning: ignoring #pragma warning  [-Wunknown-pragmas]\n #pragma warning( push )\n ^\n/home/mater/intelFPGA/17.0/hld/host/include/CL/cl_ext_altera.h:443:0: warning: ignoring #pragma warning  [-Wunknown-pragmas]\n #pragma warning( disable:4201 )\n ^\n/home/mater/intelFPGA/17.0/hld/host/include/CL/cl_ext_altera.h:459:0: warning: ignoring #pragma warning  [-Wunknown-pragmas]\n #pragma warning( pop )\n ^\nTarget //tensorflow/tools/pip_package:build_pip_package failed to build\n</code></pre>\n<hr>\n<p>*step 6C.  Build AOCLUtils as library,AOCUtils.so, at first, then build tensorflow with this library (Failed situation C)<br>\nDue to the below two situation, I tried to build AOCUtils package as library. Maybe it can skip some exception for CL library missing.<br>\nAlthough it passed c++ code compiled and continue to build about 10 minutes (below two situation show failed message immediately), it still be failed at packaging python due to not find AOCLUtils</p>\n<p>First command for AOCUtils.so</p>\n<pre><code>\ng++ -std=c++11 -shared AOCLUtils/opencl.cpp AOCLUtils/options.cpp -o AOCLUtils/AOCUtils.so -fPIC -I /home/mater/tensorflowCPU_1.3/lib/python2.7/site-packages/tensorflow/include -I/home/mater/intelFPGA/17.0/hld/host/include -L/home/mater/intelFPGA_pro/17.0/hld/board/a10_ref/linux64/lib -L/home/mater/intelFPGA_pro/17.0/hld/host/linux64/lib -Wl,--no-as-needed -lalteracl -laltera_a10_ref_mmd -lelf -I/home/mater/git/test/tensorflow_opencl -O2 -D_GLIBCXX_USE_CXX11_ABI=0\n</code></pre>\n<p>Modify AOCLUtils/BUILD</p>\n<pre><code>\ncc_library(\n\tname=\"aocutils\",\n\tsrcs = [\"AOCLUtils.so\"],\n\thdrs = glob([\"*.h\"]),\n\tvisibility=[\"//visibility:public\"],\n)\n</code></pre>\n<p>Second command for build</p>\n<pre><code>\nbazel build --config=opt //tensorflow/tools/pip_package:build_pip_package --copt=\"-I/home/mater/intelFPGA/17.0/hld/host/include\" --verbose_failures  --copt=\"-L/home/mater/intelFPGA_pro/17.0/hld/board/a10_ref/linux64/lib\" --copt=\"-L/home/mater/intelFPGA_pro/17.0/hld/host/linux64/lib\" --cxxopt=\"-D_GLIBCXX_USE_CXX11_ABI=0\"\n</code></pre>\n<p>result</p>\n<pre><code>\nERROR: /home/mater/git/test/tensorflow_opencl/tensorflow/python/BUILD:2908:1: Linking of rule '//tensorflow/python:_pywrap_tensorflow_internal.so' failed (Exit 1): gcc failed: error executing command \n  (cd /home/mater/.cache/bazel/_bazel_mater/cf4207c477b73da1da7e3336942f640b/execroot/org_tensorflow &amp;&amp; \\\n  exec env - \\\n    PWD=/proc/self/cwd \\\n    PYTHON_BIN_PATH=/usr/bin/python \\\n    PYTHON_LIB_PATH=/usr/local/lib/python2.7/dist-packages \\\n    TF_NEED_CUDA=0 \\\n    TF_NEED_OPENCL=0 \\\n  /usr/bin/gcc -shared -o bazel-out/local-opt/bin/tensorflow/python/_pywrap_tensorflow_internal.so '-Wl,-rpath,$ORIGIN/../../_solib_k8/_U_S_SAOCLUtils_Caocutils___UAOCLUtils' -Lbazel-out/local-opt/bin/_solib_k8/_U_S_SAOCLUtils_Caocutils___UAOCLUtils -Wl,--version-script tensorflow/tf_version_script.lds -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread '-fuse-ld=gold' -Wl,-no-as-needed -Wl,-z,relro,-z,now -B/usr/bin -B/usr/bin -pass-exit-codes -Wl,--gc-sections -Wl,@bazel-out/local-opt/bin/tensorflow/python/_pywrap_tensorflow_internal.so-2.params)\n/usr/bin/ld.gold: error: cannot find -lAOCLUtils\ncollect2: error: ld returned 1 exit status\nTarget //tensorflow/tools/pip_package:build_pip_package failed to build\nINFO: Elapsed time: 817.337s, Critical Path: 40.20s\nFAILED: Build did NOT complete successfully\n</code></pre>\n<p>Could someone help me find some suggestion or share information about this? Thanks!!</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nOS Platform : Linux Ubuntu 16.04\nTensorFlow installed from source\nTensorFlow version : 1.3\nPython version: v2.7.10\nBazel version: 0.5.4\nExact command to reproduce: set all as default value  ./configure , not use cuda\n\nDescribe the problem\nI am studying posting matmul_op calculation  into Altera FPGA Arria 10 via OPENCL and combine source and OpenCL/AOCLUtils library as python package.\nHowever, I encountered much problem about this and always build (Bazel) failed when compile.\nThe following share some experience in every stages and some problem over the past month.\nAOCLUtils library package\n\n/AOCLUtils/BUILD     --->for bazel\n/AOCLUtils/aocl_utils.h\n/AOCLUtils/opencl.h\n/AOCLUtils/options.h\n/AOCLUtils/opencl.cpp\n/AOCLUtils/options.cpp\n/AOCLUtils/scoped_ptrs.h\n\nOPENCL header library package in /home/mater/intelFPGA_pro/17.0/hld/host/include\ncompiled library (*.so) in /home/mater/intelFPGA_pro/17.0/hld/host/linux64/lib ;  /home/mater/intelFPGA_pro/17.0/hld/board/a10_ref/linux64/lib\n\nCL/cl_d3d10.h\nCL/cl_ext.h\nCL/cl_gl.h\nCL/cl.hpp\nCL/opencl.h\nCL/cl_ext_altera.h\nCL/cl_gl_ext.h\nCL/cl.h\nCL/cl_platform.h\n\n\n\nStudy third party library - SYCL  (Seems not support Altera FPGA)\nOriginal, tensorflow supports OpenCL via SYCL.\nHowever, it only seems support GPU & CPU, not Altera FPGA.\nBesides, I gave up this method.\n\n\n\nSuccess build a New(external) Op with AOCLUtils/OPENCL via g++, but it's my purpose.\nRefer : https://www.tensorflow.org/extend/adding_an_op\nI study example for a new op and build as library with AOCLUtils/OPENCL.\nThe g++ command is as follow then built as zero_out_cl.so.\nTensorflow can load this external library and run some calculation in FPGA\n(zero_out_module = tf.load_op_library('./zero_out_all.so'))\n\nAlthough my purpose is tensorflow python installation with AOCLUtils/OPENCL library,\nit makes sure that tensorflow can support FPGA library\n\ng++ -std=c++11 -shared main.cpp -o zero_out_cl.so -fPIC -I /home/mater/tensorflowCPU_1.3/lib/python2.7/site-packages/tensorflow/include -I/home/mater/intelFPGA/17.0/hld/host/include /home/mater/AI/FPGA/TF_OPENCL_ZeroOut/common/src/AOCLUtils/opencl.cpp /home/mater/AI/FPGA/TF_OPENCL_ZeroOut/common/src/AOCLUtils/options.cpp -L/home/mater/intelFPGA_pro/17.0/hld/board/a10_ref/linux64/lib -L/home/mater/intelFPGA_pro/17.0/hld/host/linux64/lib -Wl,--no-as-needed -lalteracl -laltera_a10_ref_mmd -lelf -I/home/mater/AI/FPGA/TF_OPENCL_ZeroOut/common/inc -O2 -D_GLIBCXX_USE_CXX11_ABI=0 \n\n\n\nModify Tensorflow source code with AOCLUtils/OPENCL and always bazel build failed..\n*step 1. git clone into /home/mater/git/test/tensorflow_opencl (tensorflow root folder)\n*step 2. copy AOCLUtils package into tensorflow root folder\n*step 3. Add cc_library into WORKSPACE for external opencl library (not sure correct method)\n\n\nnew_local_repository(\n    name = \"opencl_headers\",\n    path = \"/home/mater/intelFPGA_pro/17.0/hld/host/include\",\n    build_file_content = \"\"\"\ncc_library(\n\tname = \"CL\",\n\thdrs = glob([\"CL/*.h\"]),\n\tvisibility = [\"//visibility:public\"],\n\tlinkopts=[\"-shared\"],\n)\n\"\"\",\n)\n\nnew_local_repository(\n    name = \"opencl_libs\",\n    path = \"/home/mater/intelFPGA_pro/17.0/hld/host/linux64/lib\",\n    build_file_content = \"\"\"\ncc_library(\n\tname = \"libopencl\",\n\tsrcs = glob([\"*.so\"]),\n\tvisibility = [\"//visibility:public\"],\n\tlinkopts=[\"-shared\"],\n)\n\"\"\",\n)\n\nnew_local_repository(\n    name = \"a10_lib\",\n    path = \"/home/mater/intelFPGA_pro/17.0/hld/board/a10_ref/linux64/lib\",\n    build_file_content = \"\"\"\ncc_library(\n\tname = \"liba10\",\n\tsrcs = [\"libaltera_a10_ref_mmd.so\"],\n\tvisibility = [\"//visibility:public\"],\n\tlinkopts=[\"-shared\"],\n)\n\"\"\",\n)\n\n*step 4. Add BUILD file into AOCLUtils folder\n\ncc_library(\n\tname=\"aocutils\",\n\tsrcs = glob([\"*.cpp\"]),\n\thdrs = glob([\"*.h\"]),\n\tdeps = [\"@opencl_libs//:libopencl\", \"@opencl_headers//:CL\", \"@a10_lib//:liba10\",],\n\tvisibility=[\"//visibility:public\"],\n)\n\n*step 5. Add deps into tf_kernel_library in tensorflow root folder/tensorflow/core/kernels/BUILD\nI would like to run matmul_op calculation in FPGA so try to include FPGA library\n\ntf_kernel_library(\n    name = \"matmul_op\",\n...\n    deps = MATH_DEPS + [\n...\n    ]) + [\"//AOCLUtils:aocutils\",],\n\n*I tried 3 methods to build tensorflow source code as python installation package, but always failed\n*step 6A.  Original bazel build command (Failed situation A)\nUse original Bazel build command, but failed to find CL library.\nexception :   fatal error: CL/cl.h: No such file or directory\ncommand\n\nbazel build --config=opt //tensorflow/tools/pip_package:build_pip_package --verbose_failures --cxxopt=\"-D_GLIBCXX_USE_CXX11_ABI=0\"\n\nresult\n\nERROR: /home/mater/git/test/tensorflow_opencl/AOCLUtils/BUILD:1:1: C++ compilation of rule '//AOCLUtils:aocutils' failed (Exit 1): gcc failed: error executing command \n  (cd /home/mater/.cache/bazel/_bazel_mater/cf4207c477b73da1da7e3336942f640b/execroot/org_tensorflow && \\\n  exec env - \\\n    PWD=/proc/self/cwd \\\n    PYTHON_BIN_PATH=/usr/bin/python \\\n    PYTHON_LIB_PATH=/usr/local/lib/python2.7/dist-packages \\\n    TF_NEED_CUDA=0 \\\n    TF_NEED_OPENCL=0 \\\n  /usr/bin/gcc -U_FORTIFY_SOURCE -fstack-protector -Wall -B/usr/bin -B/usr/bin -Wunused-but-set-parameter -Wno-free-nonheap-object -fno-omit-frame-pointer -g0 -O2 '-D_FORTIFY_SOURCE=1' -DNDEBUG -ffunction-sections -fdata-sections '-march=native' '-std=c++0x' '-march=native' '-D_GLIBCXX_USE_CXX11_ABI=0' -MD -MF bazel-out/local-opt/bin/AOCLUtils/_objs/aocutils/AOCLUtils/options.pic.d '-frandom-seed=bazel-out/local-opt/bin/AOCLUtils/_objs/aocutils/AOCLUtils/options.pic.o' -fPIC -iquote . -iquote bazel-out/local-opt/genfiles -iquote external/opencl_libs -iquote bazel-out/local-opt/genfiles/external/opencl_libs -iquote external/bazel_tools -iquote bazel-out/local-opt/genfiles/external/bazel_tools -iquote external/opencl_headers -iquote bazel-out/local-opt/genfiles/external/opencl_headers -iquote external/a10_lib -iquote bazel-out/local-opt/genfiles/external/a10_lib -isystem external/bazel_tools/tools/cpp/gcc3 -fno-canonical-system-headers -Wno-builtin-macro-redefined '-D__DATE__=\"redacted\"' '-D__TIMESTAMP__=\"redacted\"' '-D__TIME__=\"redacted\"' -c AOCLUtils/options.cpp -o bazel-out/local-opt/bin/AOCLUtils/_objs/aocutils/AOCLUtils/options.pic.o)\nIn file included from ./AOCLUtils/opencl.h:32:0,\n                 from ./AOCLUtils/aocl_utils.h:27,\n                 from AOCLUtils/options.cpp:22:\nexternal/opencl_headers/CL/opencl.h:42:19: fatal error: CL/cl.h: No such file or directory\ncompilation terminated.\nTarget //tensorflow/tools/pip_package:build_pip_package failed to build\nINFO: Elapsed time: 12.957s, Critical Path: 5.11s\nFAILED: Build did NOT complete successfully\n\n\n*step 6B.  Add link path in command (Failed situation B)\nUse original Bazel build command with CL external path included, but failed to missing dependency declarations.\nexception :   missing dependency declarations for the following files included by 'AOCLUtils/options.cpp'\nI think this method should be ok and bazel can find CL library location, but I can't understand what happen for this.\nI study some information about 'missing dependency declarations', and found 'CROSSTOOL' for GPU for this title. It didn't help me to solve it because I don't use GPU configuration.\ncommand like building a New(external) Op method\n\nbazel build --config=opt //tensorflow/tools/pip_package:build_pip_package --copt=\"-I/home/mater/intelFPGA/17.0/hld/host/include\" --verbose_failures  --copt=\"-L/home/mater/intelFPGA_pro/17.0/hld/board/a10_ref/linux64/lib\" --copt=\"-L/home/mater/intelFPGA_pro/17.0/hld/host/linux64/lib\" --cxxopt=\"-D_GLIBCXX_USE_CXX11_ABI=0\"\n\nresult\n\nERROR: /home/mater/git/test/tensorflow_opencl/AOCLUtils/BUILD:1:1: undeclared inclusion(s) in rule '//AOCLUtils:aocutils':\nthis rule is missing dependency declarations for the following files included by 'AOCLUtils/options.cpp':\n  '/home/mater/intelFPGA/17.0/hld/host/include/CL/cl.h'\n  '/home/mater/intelFPGA/17.0/hld/host/include/CL/cl_platform.h'\n  '/home/mater/intelFPGA/17.0/hld/host/include/CL/cl_gl.h'\n  '/home/mater/intelFPGA/17.0/hld/host/include/CL/cl_gl_ext.h'\n  '/home/mater/intelFPGA/17.0/hld/host/include/CL/cl_ext.h'\n  '/home/mater/intelFPGA/17.0/hld/host/include/CL/cl_ext_altera.h'\nIn file included from /home/mater/intelFPGA/17.0/hld/host/include/CL/cl_ext.h:42:0,\n                 from external/opencl_headers/CL/opencl.h:45,\n                 from ./AOCLUtils/opencl.h:32,\n                 from ./AOCLUtils/aocl_utils.h:27,\n                 from AOCLUtils/options.cpp:22:\n/home/mater/intelFPGA/17.0/hld/host/include/CL/cl_ext_altera.h:442:0: warning: ignoring #pragma warning  [-Wunknown-pragmas]\n #pragma warning( push )\n ^\n/home/mater/intelFPGA/17.0/hld/host/include/CL/cl_ext_altera.h:443:0: warning: ignoring #pragma warning  [-Wunknown-pragmas]\n #pragma warning( disable:4201 )\n ^\n/home/mater/intelFPGA/17.0/hld/host/include/CL/cl_ext_altera.h:459:0: warning: ignoring #pragma warning  [-Wunknown-pragmas]\n #pragma warning( pop )\n ^\nTarget //tensorflow/tools/pip_package:build_pip_package failed to build\n\n\n*step 6C.  Build AOCLUtils as library,AOCUtils.so, at first, then build tensorflow with this library (Failed situation C)\nDue to the below two situation, I tried to build AOCUtils package as library. Maybe it can skip some exception for CL library missing.\nAlthough it passed c++ code compiled and continue to build about 10 minutes (below two situation show failed message immediately), it still be failed at packaging python due to not find AOCLUtils\nFirst command for AOCUtils.so\n\ng++ -std=c++11 -shared AOCLUtils/opencl.cpp AOCLUtils/options.cpp -o AOCLUtils/AOCUtils.so -fPIC -I /home/mater/tensorflowCPU_1.3/lib/python2.7/site-packages/tensorflow/include -I/home/mater/intelFPGA/17.0/hld/host/include -L/home/mater/intelFPGA_pro/17.0/hld/board/a10_ref/linux64/lib -L/home/mater/intelFPGA_pro/17.0/hld/host/linux64/lib -Wl,--no-as-needed -lalteracl -laltera_a10_ref_mmd -lelf -I/home/mater/git/test/tensorflow_opencl -O2 -D_GLIBCXX_USE_CXX11_ABI=0\n\nModify AOCLUtils/BUILD\n\ncc_library(\n\tname=\"aocutils\",\n\tsrcs = [\"AOCLUtils.so\"],\n\thdrs = glob([\"*.h\"]),\n\tvisibility=[\"//visibility:public\"],\n)\n\nSecond command for build\n\nbazel build --config=opt //tensorflow/tools/pip_package:build_pip_package --copt=\"-I/home/mater/intelFPGA/17.0/hld/host/include\" --verbose_failures  --copt=\"-L/home/mater/intelFPGA_pro/17.0/hld/board/a10_ref/linux64/lib\" --copt=\"-L/home/mater/intelFPGA_pro/17.0/hld/host/linux64/lib\" --cxxopt=\"-D_GLIBCXX_USE_CXX11_ABI=0\"\n\nresult\n\nERROR: /home/mater/git/test/tensorflow_opencl/tensorflow/python/BUILD:2908:1: Linking of rule '//tensorflow/python:_pywrap_tensorflow_internal.so' failed (Exit 1): gcc failed: error executing command \n  (cd /home/mater/.cache/bazel/_bazel_mater/cf4207c477b73da1da7e3336942f640b/execroot/org_tensorflow && \\\n  exec env - \\\n    PWD=/proc/self/cwd \\\n    PYTHON_BIN_PATH=/usr/bin/python \\\n    PYTHON_LIB_PATH=/usr/local/lib/python2.7/dist-packages \\\n    TF_NEED_CUDA=0 \\\n    TF_NEED_OPENCL=0 \\\n  /usr/bin/gcc -shared -o bazel-out/local-opt/bin/tensorflow/python/_pywrap_tensorflow_internal.so '-Wl,-rpath,$ORIGIN/../../_solib_k8/_U_S_SAOCLUtils_Caocutils___UAOCLUtils' -Lbazel-out/local-opt/bin/_solib_k8/_U_S_SAOCLUtils_Caocutils___UAOCLUtils -Wl,--version-script tensorflow/tf_version_script.lds -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread '-fuse-ld=gold' -Wl,-no-as-needed -Wl,-z,relro,-z,now -B/usr/bin -B/usr/bin -pass-exit-codes -Wl,--gc-sections -Wl,@bazel-out/local-opt/bin/tensorflow/python/_pywrap_tensorflow_internal.so-2.params)\n/usr/bin/ld.gold: error: cannot find -lAOCLUtils\ncollect2: error: ld returned 1 exit status\nTarget //tensorflow/tools/pip_package:build_pip_package failed to build\nINFO: Elapsed time: 817.337s, Critical Path: 40.20s\nFAILED: Build did NOT complete successfully\n\nCould someone help me find some suggestion or share information about this? Thanks!!", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\n- **OS Platform** : Linux Ubuntu 16.04\r\n- **TensorFlow installed from source**\r\n- **TensorFlow version** : 1.3\r\n- **Python version**: v2.7.10\r\n- **Bazel version**: 0.5.4\r\n- **Exact command to reproduce**: set all as default value  ./configure , not use cuda\r\n\r\n\r\n### Describe the problem\r\nI am studying posting matmul_op calculation  into Altera FPGA Arria 10 via OPENCL and combine source and OpenCL/AOCLUtils library as python package.\r\nHowever, I encountered much problem about this and always build (Bazel) failed when compile.\r\nThe following share some experience in every stages and some problem over the past month.\r\n\r\nAOCLUtils library package\r\n<pre><code>\r\n/AOCLUtils/BUILD     --->for bazel\r\n/AOCLUtils/aocl_utils.h\r\n/AOCLUtils/opencl.h\r\n/AOCLUtils/options.h\r\n/AOCLUtils/opencl.cpp\r\n/AOCLUtils/options.cpp\r\n/AOCLUtils/scoped_ptrs.h\r\n</code></pre>\r\n\r\nOPENCL header library package in /home/mater/intelFPGA_pro/17.0/hld/host/include\r\ncompiled library (*.so) in /home/mater/intelFPGA_pro/17.0/hld/host/linux64/lib ;  /home/mater/intelFPGA_pro/17.0/hld/board/a10_ref/linux64/lib\r\n<pre><code>\r\nCL/cl_d3d10.h\r\nCL/cl_ext.h\r\nCL/cl_gl.h\r\nCL/cl.hpp\r\nCL/opencl.h\r\nCL/cl_ext_altera.h\r\nCL/cl_gl_ext.h\r\nCL/cl.h\r\nCL/cl_platform.h\r\n</code></pre>\r\n------------------------\r\n1. Study third party library - SYCL  (Seems not support Altera FPGA)\r\nOriginal, tensorflow supports OpenCL via SYCL.\r\nHowever, it only seems support GPU & CPU, not Altera FPGA.\r\nBesides, I gave up this method.\r\n------------------------\r\n2. Success build a New(external) Op with AOCLUtils/OPENCL via g++, but it's my purpose.\r\nRefer : https://www.tensorflow.org/extend/adding_an_op\r\nI study example for a new op and build as library with AOCLUtils/OPENCL.\r\nThe g++ command is as follow then built as zero_out_cl.so.\r\nTensorflow can load this external library and run some calculation in FPGA\r\n(zero_out_module = tf.load_op_library('./zero_out_all.so'))\r\n\r\nAlthough my purpose is tensorflow python installation with AOCLUtils/OPENCL library,\r\nit makes sure that tensorflow can support FPGA library\r\n\r\n<pre><code>\r\ng++ -std=c++11 -shared main.cpp -o zero_out_cl.so -fPIC -I /home/mater/tensorflowCPU_1.3/lib/python2.7/site-packages/tensorflow/include -I/home/mater/intelFPGA/17.0/hld/host/include /home/mater/AI/FPGA/TF_OPENCL_ZeroOut/common/src/AOCLUtils/opencl.cpp /home/mater/AI/FPGA/TF_OPENCL_ZeroOut/common/src/AOCLUtils/options.cpp -L/home/mater/intelFPGA_pro/17.0/hld/board/a10_ref/linux64/lib -L/home/mater/intelFPGA_pro/17.0/hld/host/linux64/lib -Wl,--no-as-needed -lalteracl -laltera_a10_ref_mmd -lelf -I/home/mater/AI/FPGA/TF_OPENCL_ZeroOut/common/inc -O2 -D_GLIBCXX_USE_CXX11_ABI=0 \r\n</code></pre>\r\n------------------------\r\n3. Modify Tensorflow source code with AOCLUtils/OPENCL and always bazel build failed..\r\n*step 1. git clone into /home/mater/git/test/tensorflow_opencl (tensorflow root folder)\r\n*step 2. copy AOCLUtils package into tensorflow root folder\r\n*step 3. Add cc_library into WORKSPACE for external opencl library (not sure correct method)\r\n<pre><code>\r\nnew_local_repository(\r\n    name = \"opencl_headers\",\r\n    path = \"/home/mater/intelFPGA_pro/17.0/hld/host/include\",\r\n    build_file_content = \"\"\"\r\ncc_library(\r\n\tname = \"CL\",\r\n\thdrs = glob([\"CL/*.h\"]),\r\n\tvisibility = [\"//visibility:public\"],\r\n\tlinkopts=[\"-shared\"],\r\n)\r\n\"\"\",\r\n)\r\n\r\nnew_local_repository(\r\n    name = \"opencl_libs\",\r\n    path = \"/home/mater/intelFPGA_pro/17.0/hld/host/linux64/lib\",\r\n    build_file_content = \"\"\"\r\ncc_library(\r\n\tname = \"libopencl\",\r\n\tsrcs = glob([\"*.so\"]),\r\n\tvisibility = [\"//visibility:public\"],\r\n\tlinkopts=[\"-shared\"],\r\n)\r\n\"\"\",\r\n)\r\n\r\nnew_local_repository(\r\n    name = \"a10_lib\",\r\n    path = \"/home/mater/intelFPGA_pro/17.0/hld/board/a10_ref/linux64/lib\",\r\n    build_file_content = \"\"\"\r\ncc_library(\r\n\tname = \"liba10\",\r\n\tsrcs = [\"libaltera_a10_ref_mmd.so\"],\r\n\tvisibility = [\"//visibility:public\"],\r\n\tlinkopts=[\"-shared\"],\r\n)\r\n\"\"\",\r\n)\r\n</code></pre>\r\n\r\n*step 4. Add BUILD file into AOCLUtils folder\r\n<pre><code>\r\ncc_library(\r\n\tname=\"aocutils\",\r\n\tsrcs = glob([\"*.cpp\"]),\r\n\thdrs = glob([\"*.h\"]),\r\n\tdeps = [\"@opencl_libs//:libopencl\", \"@opencl_headers//:CL\", \"@a10_lib//:liba10\",],\r\n\tvisibility=[\"//visibility:public\"],\r\n)\r\n</code></pre>\r\n\r\n*step 5. Add deps into tf_kernel_library in tensorflow root folder/tensorflow/core/kernels/BUILD\r\nI would like to run matmul_op calculation in FPGA so try to include FPGA library\r\n<pre><code>\r\ntf_kernel_library(\r\n    name = \"matmul_op\",\r\n...\r\n    deps = MATH_DEPS + [\r\n...\r\n    ]) + [\"//AOCLUtils:aocutils\",],\r\n</code></pre>\r\n\r\n*I tried 3 methods to build tensorflow source code as python installation package, but always failed\r\n------------------------\r\n*step 6A.  Original bazel build command (Failed situation A)\r\nUse original Bazel build command, but failed to find CL library.\r\nexception :   fatal error: CL/cl.h: No such file or directory\r\n\r\ncommand\r\n<pre><code>\r\nbazel build --config=opt //tensorflow/tools/pip_package:build_pip_package --verbose_failures --cxxopt=\"-D_GLIBCXX_USE_CXX11_ABI=0\"\r\n</code></pre>\r\nresult\r\n<pre><code>\r\nERROR: /home/mater/git/test/tensorflow_opencl/AOCLUtils/BUILD:1:1: C++ compilation of rule '//AOCLUtils:aocutils' failed (Exit 1): gcc failed: error executing command \r\n  (cd /home/mater/.cache/bazel/_bazel_mater/cf4207c477b73da1da7e3336942f640b/execroot/org_tensorflow && \\\r\n  exec env - \\\r\n    PWD=/proc/self/cwd \\\r\n    PYTHON_BIN_PATH=/usr/bin/python \\\r\n    PYTHON_LIB_PATH=/usr/local/lib/python2.7/dist-packages \\\r\n    TF_NEED_CUDA=0 \\\r\n    TF_NEED_OPENCL=0 \\\r\n  /usr/bin/gcc -U_FORTIFY_SOURCE -fstack-protector -Wall -B/usr/bin -B/usr/bin -Wunused-but-set-parameter -Wno-free-nonheap-object -fno-omit-frame-pointer -g0 -O2 '-D_FORTIFY_SOURCE=1' -DNDEBUG -ffunction-sections -fdata-sections '-march=native' '-std=c++0x' '-march=native' '-D_GLIBCXX_USE_CXX11_ABI=0' -MD -MF bazel-out/local-opt/bin/AOCLUtils/_objs/aocutils/AOCLUtils/options.pic.d '-frandom-seed=bazel-out/local-opt/bin/AOCLUtils/_objs/aocutils/AOCLUtils/options.pic.o' -fPIC -iquote . -iquote bazel-out/local-opt/genfiles -iquote external/opencl_libs -iquote bazel-out/local-opt/genfiles/external/opencl_libs -iquote external/bazel_tools -iquote bazel-out/local-opt/genfiles/external/bazel_tools -iquote external/opencl_headers -iquote bazel-out/local-opt/genfiles/external/opencl_headers -iquote external/a10_lib -iquote bazel-out/local-opt/genfiles/external/a10_lib -isystem external/bazel_tools/tools/cpp/gcc3 -fno-canonical-system-headers -Wno-builtin-macro-redefined '-D__DATE__=\"redacted\"' '-D__TIMESTAMP__=\"redacted\"' '-D__TIME__=\"redacted\"' -c AOCLUtils/options.cpp -o bazel-out/local-opt/bin/AOCLUtils/_objs/aocutils/AOCLUtils/options.pic.o)\r\nIn file included from ./AOCLUtils/opencl.h:32:0,\r\n                 from ./AOCLUtils/aocl_utils.h:27,\r\n                 from AOCLUtils/options.cpp:22:\r\nexternal/opencl_headers/CL/opencl.h:42:19: fatal error: CL/cl.h: No such file or directory\r\ncompilation terminated.\r\nTarget //tensorflow/tools/pip_package:build_pip_package failed to build\r\nINFO: Elapsed time: 12.957s, Critical Path: 5.11s\r\nFAILED: Build did NOT complete successfully\r\n</code></pre>\r\n------------------------\r\n*step 6B.  Add link path in command (Failed situation B)\r\nUse original Bazel build command with CL external path included, but failed to missing dependency declarations.\r\nexception :   missing dependency declarations for the following files included by 'AOCLUtils/options.cpp'\r\n\r\nI think this method should be ok and bazel can find CL library location, but I can't understand what happen for this.\r\nI study some information about 'missing dependency declarations', and found 'CROSSTOOL' for GPU for this title. It didn't help me to solve it because I don't use GPU configuration.\r\n\r\ncommand like building a New(external) Op method\r\n<pre><code>\r\nbazel build --config=opt //tensorflow/tools/pip_package:build_pip_package --copt=\"-I/home/mater/intelFPGA/17.0/hld/host/include\" --verbose_failures  --copt=\"-L/home/mater/intelFPGA_pro/17.0/hld/board/a10_ref/linux64/lib\" --copt=\"-L/home/mater/intelFPGA_pro/17.0/hld/host/linux64/lib\" --cxxopt=\"-D_GLIBCXX_USE_CXX11_ABI=0\"\r\n</code></pre>\r\nresult\r\n<pre><code>\r\nERROR: /home/mater/git/test/tensorflow_opencl/AOCLUtils/BUILD:1:1: undeclared inclusion(s) in rule '//AOCLUtils:aocutils':\r\nthis rule is missing dependency declarations for the following files included by 'AOCLUtils/options.cpp':\r\n  '/home/mater/intelFPGA/17.0/hld/host/include/CL/cl.h'\r\n  '/home/mater/intelFPGA/17.0/hld/host/include/CL/cl_platform.h'\r\n  '/home/mater/intelFPGA/17.0/hld/host/include/CL/cl_gl.h'\r\n  '/home/mater/intelFPGA/17.0/hld/host/include/CL/cl_gl_ext.h'\r\n  '/home/mater/intelFPGA/17.0/hld/host/include/CL/cl_ext.h'\r\n  '/home/mater/intelFPGA/17.0/hld/host/include/CL/cl_ext_altera.h'\r\nIn file included from /home/mater/intelFPGA/17.0/hld/host/include/CL/cl_ext.h:42:0,\r\n                 from external/opencl_headers/CL/opencl.h:45,\r\n                 from ./AOCLUtils/opencl.h:32,\r\n                 from ./AOCLUtils/aocl_utils.h:27,\r\n                 from AOCLUtils/options.cpp:22:\r\n/home/mater/intelFPGA/17.0/hld/host/include/CL/cl_ext_altera.h:442:0: warning: ignoring #pragma warning  [-Wunknown-pragmas]\r\n #pragma warning( push )\r\n ^\r\n/home/mater/intelFPGA/17.0/hld/host/include/CL/cl_ext_altera.h:443:0: warning: ignoring #pragma warning  [-Wunknown-pragmas]\r\n #pragma warning( disable:4201 )\r\n ^\r\n/home/mater/intelFPGA/17.0/hld/host/include/CL/cl_ext_altera.h:459:0: warning: ignoring #pragma warning  [-Wunknown-pragmas]\r\n #pragma warning( pop )\r\n ^\r\nTarget //tensorflow/tools/pip_package:build_pip_package failed to build\r\n</code></pre>\r\n------------------------\r\n*step 6C.  Build AOCLUtils as library,AOCUtils.so, at first, then build tensorflow with this library (Failed situation C)\r\nDue to the below two situation, I tried to build AOCUtils package as library. Maybe it can skip some exception for CL library missing.\r\nAlthough it passed c++ code compiled and continue to build about 10 minutes (below two situation show failed message immediately), it still be failed at packaging python due to not find AOCLUtils\r\n\r\nFirst command for AOCUtils.so\r\n<pre><code>\r\ng++ -std=c++11 -shared AOCLUtils/opencl.cpp AOCLUtils/options.cpp -o AOCLUtils/AOCUtils.so -fPIC -I /home/mater/tensorflowCPU_1.3/lib/python2.7/site-packages/tensorflow/include -I/home/mater/intelFPGA/17.0/hld/host/include -L/home/mater/intelFPGA_pro/17.0/hld/board/a10_ref/linux64/lib -L/home/mater/intelFPGA_pro/17.0/hld/host/linux64/lib -Wl,--no-as-needed -lalteracl -laltera_a10_ref_mmd -lelf -I/home/mater/git/test/tensorflow_opencl -O2 -D_GLIBCXX_USE_CXX11_ABI=0\r\n</code></pre>\r\n\r\nModify AOCLUtils/BUILD\r\n<pre><code>\r\ncc_library(\r\n\tname=\"aocutils\",\r\n\tsrcs = [\"AOCLUtils.so\"],\r\n\thdrs = glob([\"*.h\"]),\r\n\tvisibility=[\"//visibility:public\"],\r\n)\r\n</code></pre>\r\n\r\nSecond command for build\r\n<pre><code>\r\nbazel build --config=opt //tensorflow/tools/pip_package:build_pip_package --copt=\"-I/home/mater/intelFPGA/17.0/hld/host/include\" --verbose_failures  --copt=\"-L/home/mater/intelFPGA_pro/17.0/hld/board/a10_ref/linux64/lib\" --copt=\"-L/home/mater/intelFPGA_pro/17.0/hld/host/linux64/lib\" --cxxopt=\"-D_GLIBCXX_USE_CXX11_ABI=0\"\r\n</code></pre>\r\n\r\nresult\r\n<pre><code>\r\nERROR: /home/mater/git/test/tensorflow_opencl/tensorflow/python/BUILD:2908:1: Linking of rule '//tensorflow/python:_pywrap_tensorflow_internal.so' failed (Exit 1): gcc failed: error executing command \r\n  (cd /home/mater/.cache/bazel/_bazel_mater/cf4207c477b73da1da7e3336942f640b/execroot/org_tensorflow && \\\r\n  exec env - \\\r\n    PWD=/proc/self/cwd \\\r\n    PYTHON_BIN_PATH=/usr/bin/python \\\r\n    PYTHON_LIB_PATH=/usr/local/lib/python2.7/dist-packages \\\r\n    TF_NEED_CUDA=0 \\\r\n    TF_NEED_OPENCL=0 \\\r\n  /usr/bin/gcc -shared -o bazel-out/local-opt/bin/tensorflow/python/_pywrap_tensorflow_internal.so '-Wl,-rpath,$ORIGIN/../../_solib_k8/_U_S_SAOCLUtils_Caocutils___UAOCLUtils' -Lbazel-out/local-opt/bin/_solib_k8/_U_S_SAOCLUtils_Caocutils___UAOCLUtils -Wl,--version-script tensorflow/tf_version_script.lds -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread '-fuse-ld=gold' -Wl,-no-as-needed -Wl,-z,relro,-z,now -B/usr/bin -B/usr/bin -pass-exit-codes -Wl,--gc-sections -Wl,@bazel-out/local-opt/bin/tensorflow/python/_pywrap_tensorflow_internal.so-2.params)\r\n/usr/bin/ld.gold: error: cannot find -lAOCLUtils\r\ncollect2: error: ld returned 1 exit status\r\nTarget //tensorflow/tools/pip_package:build_pip_package failed to build\r\nINFO: Elapsed time: 817.337s, Critical Path: 40.20s\r\nFAILED: Build did NOT complete successfully\r\n</code></pre>\r\n\r\nCould someone help me find some suggestion or share information about this? Thanks!! \r\n"}