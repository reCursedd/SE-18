{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/316023574", "html_url": "https://github.com/tensorflow/tensorflow/issues/11327#issuecomment-316023574", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11327", "id": 316023574, "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjAyMzU3NA==", "user": {"login": "ma0ho", "id": 1632554, "node_id": "MDQ6VXNlcjE2MzI1NTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1632554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ma0ho", "html_url": "https://github.com/ma0ho", "followers_url": "https://api.github.com/users/ma0ho/followers", "following_url": "https://api.github.com/users/ma0ho/following{/other_user}", "gists_url": "https://api.github.com/users/ma0ho/gists{/gist_id}", "starred_url": "https://api.github.com/users/ma0ho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ma0ho/subscriptions", "organizations_url": "https://api.github.com/users/ma0ho/orgs", "repos_url": "https://api.github.com/users/ma0ho/repos", "events_url": "https://api.github.com/users/ma0ho/events{/privacy}", "received_events_url": "https://api.github.com/users/ma0ho/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-18T10:29:25Z", "updated_at": "2017-07-18T10:29:25Z", "author_association": "NONE", "body_html": "<p>Maybe I should make the use case a bit more clear:</p>\n<p>I implement a classic CT (computed tomography) reconstruction algorithm (filtered backprojection) in Tensorflow. The goal is to adjust some of the steps by training and to add additional (trainable) pre-/postprocessing steps. In such a CT setup I have many 2D projection images. One of the steps is to filter all those projection images with the same <code>1xM</code> filter kernel. The projection images are stacked in a <code>NxHxW</code> tensor, where N is the number of projection images. In order to be able to filter them all with the <strong>same</strong> filter kernel, I reshape this to an <code>Nx1xHxW</code> tensor, such that N is now the batch dimension (note that I'm using format NCHW, therefore input is <code> [batch, channels, height, width]</code>). Then I convolve with a <code>1xMx1x1</code> kernel in order to filter every projection image (every batch in this case) with a <code>1xM</code> kernel.</p>\n<p>Hope this clarification helps to understand my problem..</p>", "body_text": "Maybe I should make the use case a bit more clear:\nI implement a classic CT (computed tomography) reconstruction algorithm (filtered backprojection) in Tensorflow. The goal is to adjust some of the steps by training and to add additional (trainable) pre-/postprocessing steps. In such a CT setup I have many 2D projection images. One of the steps is to filter all those projection images with the same 1xM filter kernel. The projection images are stacked in a NxHxW tensor, where N is the number of projection images. In order to be able to filter them all with the same filter kernel, I reshape this to an Nx1xHxW tensor, such that N is now the batch dimension (note that I'm using format NCHW, therefore input is  [batch, channels, height, width]). Then I convolve with a 1xMx1x1 kernel in order to filter every projection image (every batch in this case) with a 1xM kernel.\nHope this clarification helps to understand my problem..", "body": "Maybe I should make the use case a bit more clear:\r\n\r\nI implement a classic CT (computed tomography) reconstruction algorithm (filtered backprojection) in Tensorflow. The goal is to adjust some of the steps by training and to add additional (trainable) pre-/postprocessing steps. In such a CT setup I have many 2D projection images. One of the steps is to filter all those projection images with the same `1xM` filter kernel. The projection images are stacked in a `NxHxW` tensor, where N is the number of projection images. In order to be able to filter them all with the **same** filter kernel, I reshape this to an `Nx1xHxW` tensor, such that N is now the batch dimension (note that I'm using format NCHW, therefore input is ` [batch, channels, height, width]`). Then I convolve with a `1xMx1x1` kernel in order to filter every projection image (every batch in this case) with a `1xM` kernel.\r\n\r\nHope this clarification helps to understand my problem.."}