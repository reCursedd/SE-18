{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/368766801", "html_url": "https://github.com/tensorflow/tensorflow/issues/16969#issuecomment-368766801", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16969", "id": 368766801, "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODc2NjgwMQ==", "user": {"login": "yanwii", "id": 15832673, "node_id": "MDQ6VXNlcjE1ODMyNjcz", "avatar_url": "https://avatars3.githubusercontent.com/u/15832673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yanwii", "html_url": "https://github.com/yanwii", "followers_url": "https://api.github.com/users/yanwii/followers", "following_url": "https://api.github.com/users/yanwii/following{/other_user}", "gists_url": "https://api.github.com/users/yanwii/gists{/gist_id}", "starred_url": "https://api.github.com/users/yanwii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yanwii/subscriptions", "organizations_url": "https://api.github.com/users/yanwii/orgs", "repos_url": "https://api.github.com/users/yanwii/repos", "events_url": "https://api.github.com/users/yanwii/events{/privacy}", "received_events_url": "https://api.github.com/users/yanwii/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-27T06:57:33Z", "updated_at": "2018-02-27T07:00:00Z", "author_association": "NONE", "body_html": "<p>Platform:Ubuntu 16.04<br>\nTensorflow-cpu:1.4, install from pip</p>\n<hr>\n<p>Our project used <code>tornado</code> as service</p>\n<p>Model like this:</p>\n<p>Class Model:</p>\n<pre><code>def __init__(self):\n    ....\n    self.create_model()  # create placeholder, graph, etc.\n    self.resotre_model() # resotre model from cpkt\n\ndef create_model():\n    self.graph = tf.Graph()\n    with self.graph.as_default():\n        ...\ndef restore_model():\n    with tf.Session(graph=self.graph) as sess:\n        ...\n\ndef predict(self):\n    with tf.Session(graph=self.graph) as sess:\n        sess.run(...)   \n</code></pre>\n<p>Problem is that if i restored model while the model created, the <code>sess.run</code> didn't give any response, it seems that the program was in await status.If I moved <code>resotre_model</code> into <code>predict</code> which means restore model every time, it worked well but waste time.</p>", "body_text": "Platform:Ubuntu 16.04\nTensorflow-cpu:1.4, install from pip\n\nOur project used tornado as service\nModel like this:\nClass Model:\ndef __init__(self):\n    ....\n    self.create_model()  # create placeholder, graph, etc.\n    self.resotre_model() # resotre model from cpkt\n\ndef create_model():\n    self.graph = tf.Graph()\n    with self.graph.as_default():\n        ...\ndef restore_model():\n    with tf.Session(graph=self.graph) as sess:\n        ...\n\ndef predict(self):\n    with tf.Session(graph=self.graph) as sess:\n        sess.run(...)   \n\nProblem is that if i restored model while the model created, the sess.run didn't give any response, it seems that the program was in await status.If I moved resotre_model into predict which means restore model every time, it worked well but waste time.", "body": "Platform:Ubuntu 16.04\r\nTensorflow-cpu:1.4, install from pip\r\n\r\n---\r\nOur project used `tornado` as service\r\n\r\nModel like this:  \r\n  \r\nClass Model:  \r\n\r\n    def __init__(self):\r\n        ....\r\n        self.create_model()  # create placeholder, graph, etc.\r\n        self.resotre_model() # resotre model from cpkt\r\n\r\n    def create_model():\r\n        self.graph = tf.Graph()\r\n        with self.graph.as_default():\r\n            ...\r\n    def restore_model():\r\n        with tf.Session(graph=self.graph) as sess:\r\n            ...\r\n\r\n    def predict(self):\r\n        with tf.Session(graph=self.graph) as sess:\r\n            sess.run(...)   \r\n\r\n\r\nProblem is that if i restored model while the model created, the `sess.run` didn't give any response, it seems that the program was in await status.If I moved `resotre_model` into `predict` which means restore model every time, it worked well but waste time.\r\n\r\n"}