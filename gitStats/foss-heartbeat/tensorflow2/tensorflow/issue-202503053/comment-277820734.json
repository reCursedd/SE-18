{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/277820734", "html_url": "https://github.com/tensorflow/tensorflow/issues/7014#issuecomment-277820734", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7014", "id": 277820734, "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzgyMDczNA==", "user": {"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}, "created_at": "2017-02-06T21:33:45Z", "updated_at": "2017-02-06T21:33:45Z", "author_association": "MEMBER", "body_html": "<p>I \"fixed\" the underlying NaN problem for SIMD max/min Eigen in</p>\n<p><a href=\"https://bitbucket.org/eigen/eigen/commits/738d7c6becf04a2a8f400d5edd2c13ea44f28428\" rel=\"nofollow\">https://bitbucket.org/eigen/eigen/commits/738d7c6becf04a2a8f400d5edd2c13ea44f28428</a></p>\n<p>(plus a few followup). Please notice that it is a bit subtle since max and min are defined to match the (elementwise) behavior of std::max / std::min. See <a href=\"http://eigen.tuxfamily.org/bz/show_bug.cgi?id=1373\" rel=\"nofollow\">http://eigen.tuxfamily.org/bz/show_bug.cgi?id=1373</a> for a discussion.</p>\n<p>Unfortunately we have not been able to update TensorFlow to use a recent version of Eigen containing this fix, due to build breakage in Eigen. I'll try to give this another try.</p>", "body_text": "I \"fixed\" the underlying NaN problem for SIMD max/min Eigen in\nhttps://bitbucket.org/eigen/eigen/commits/738d7c6becf04a2a8f400d5edd2c13ea44f28428\n(plus a few followup). Please notice that it is a bit subtle since max and min are defined to match the (elementwise) behavior of std::max / std::min. See http://eigen.tuxfamily.org/bz/show_bug.cgi?id=1373 for a discussion.\nUnfortunately we have not been able to update TensorFlow to use a recent version of Eigen containing this fix, due to build breakage in Eigen. I'll try to give this another try.", "body": "I \"fixed\" the underlying NaN problem for SIMD max/min Eigen in \r\n\r\nhttps://bitbucket.org/eigen/eigen/commits/738d7c6becf04a2a8f400d5edd2c13ea44f28428\r\n\r\n(plus a few followup). Please notice that it is a bit subtle since max and min are defined to match the (elementwise) behavior of std::max / std::min. See http://eigen.tuxfamily.org/bz/show_bug.cgi?id=1373 for a discussion.\r\n\r\nUnfortunately we have not been able to update TensorFlow to use a recent version of Eigen containing this fix, due to build breakage in Eigen. I'll try to give this another try."}