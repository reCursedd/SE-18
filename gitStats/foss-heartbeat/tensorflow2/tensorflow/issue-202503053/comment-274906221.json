{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/274906221", "html_url": "https://github.com/tensorflow/tensorflow/issues/7014#issuecomment-274906221", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7014", "id": 274906221, "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDkwNjIyMQ==", "user": {"login": "aselle", "id": 326106, "node_id": "MDQ6VXNlcjMyNjEwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/326106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aselle", "html_url": "https://github.com/aselle", "followers_url": "https://api.github.com/users/aselle/followers", "following_url": "https://api.github.com/users/aselle/following{/other_user}", "gists_url": "https://api.github.com/users/aselle/gists{/gist_id}", "starred_url": "https://api.github.com/users/aselle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aselle/subscriptions", "organizations_url": "https://api.github.com/users/aselle/orgs", "repos_url": "https://api.github.com/users/aselle/repos", "events_url": "https://api.github.com/users/aselle/events{/privacy}", "received_events_url": "https://api.github.com/users/aselle/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-24T19:16:12Z", "updated_at": "2017-01-24T19:16:31Z", "author_association": "MEMBER", "body_html": "<p>This is generally the case... Also tf.clip_by_value should be consistent with the implementation of<br>\ntf.minimum and tf.maximum s.t.<br>\nclip_by_value(v,a,b) is equivalent to  tf.minimum(tf.maximum(a, v), b)<br>\ntf.minimum and maximum have the correct nan behavior.</p>", "body_text": "This is generally the case... Also tf.clip_by_value should be consistent with the implementation of\ntf.minimum and tf.maximum s.t.\nclip_by_value(v,a,b) is equivalent to  tf.minimum(tf.maximum(a, v), b)\ntf.minimum and maximum have the correct nan behavior.", "body": "This is generally the case... Also tf.clip_by_value should be consistent with the implementation of\r\ntf.minimum and tf.maximum s.t.\r\nclip_by_value(v,a,b) is equivalent to  tf.minimum(tf.maximum(a, v), b)\r\ntf.minimum and maximum have the correct nan behavior. \r\n"}