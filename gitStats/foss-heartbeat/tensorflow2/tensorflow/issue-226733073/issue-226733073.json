{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9711", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9711/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9711/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9711/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9711", "id": 226733073, "node_id": "MDU6SXNzdWUyMjY3MzMwNzM=", "number": 9711, "title": "eval() error about variable_scope()", "user": {"login": "frischzenger", "id": 3762972, "node_id": "MDQ6VXNlcjM3NjI5NzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3762972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frischzenger", "html_url": "https://github.com/frischzenger", "followers_url": "https://api.github.com/users/frischzenger/followers", "following_url": "https://api.github.com/users/frischzenger/following{/other_user}", "gists_url": "https://api.github.com/users/frischzenger/gists{/gist_id}", "starred_url": "https://api.github.com/users/frischzenger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frischzenger/subscriptions", "organizations_url": "https://api.github.com/users/frischzenger/orgs", "repos_url": "https://api.github.com/users/frischzenger/repos", "events_url": "https://api.github.com/users/frischzenger/events{/privacy}", "received_events_url": "https://api.github.com/users/frischzenger/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473184161, "node_id": "MDU6TGFiZWw0NzMxODQxNjE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:support", "name": "type:support", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-06T03:03:46Z", "updated_at": "2017-05-06T18:59:54Z", "closed_at": "2017-05-06T18:59:54Z", "author_association": "NONE", "body_html": "<p>I run the code from official tutorial:<br>\n<a href=\"https://www.tensorflow.org/programmers_guide/variable_scope\" rel=\"nofollow\">https://www.tensorflow.org/programmers_guide/variable_scope</a></p>\n<pre><code>with tf.variable_scope(\"foo\", initializer=tf.constant_initializer(0.4)):\n    v = tf.get_variable(\"v\", [1])\n    assert v.eval() == 0.4  # Default initializer as set above.\n    w = tf.get_variable(\"w\", [1], initializer=tf.constant_initializer(0.3))\n    assert w.eval() == 0.3  # Specific initializer overrides the default.\n    with tf.variable_scope(\"bar\"):\n        v = tf.get_variable(\"v\", [1])\n        assert v.eval() == 0.4  # Inherited default initializer.\n    with tf.variable_scope(\"baz\", initializer=tf.constant_initializer(0.2)):\n        v = tf.get_variable(\"v\", [1])\n        assert v.eval() == 0.2  # Changed default initializer\n</code></pre>\n<p><strong>the problem as below</strong>:<br>\nCannot evaluate tensor using <code>eval()</code>: No default session is registered. Use <code>with sess.as_default()</code> or pass an explicit session to <code>eval(session=sess)</code></p>\n<pre><code>with tf.Session():\n    with tf.variable_scope(\"foo\", initializer=tf.constant_initializer(0.4)):\n        v = tf.get_variable(\"v\", [1])\n        assert v.eval() == 0.4  # Default initializer as set above.\n        w = tf.get_variable(\"w\", [1], initializer=tf.constant_initializer(0.3))\n        assert w.eval() == 0.3  # Specific initializer overrides the default.\n        with tf.variable_scope(\"bar\"):\n            v = tf.get_variable(\"v\", [1])\n            assert v.eval() == 0.4  # Inherited default initializer.\n        with tf.variable_scope(\"baz\", initializer=tf.constant_initializer(0.2)):\n            v = tf.get_variable(\"v\", [1])\n            assert v.eval() == 0.2  # Changed default initializer\n</code></pre>\n<p><strong>when i try with session the problem changed as below:</strong></p>\n<p>Attempting to use uninitialized value foo/v</p>\n<pre><code> [[Node: foo/v/_0 = _Send[T=DT_FLOAT, client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device=\"/job:localhost/replica:0/task:0/gpu:0\", send_device_incarnation=1, tensor_name=\"edge_4_foo/v\", _device=\"/job:localhost/replica:0/task:0/gpu:0\"](foo/v)]]\n</code></pre>\n<p>this problem in both windows and linux<br>\nthe platform is :<br>\nwindows10 , python3.5 , tf.<strong>version</strong> 0.12.1<br>\nubuntu, python2.7  , tf.<strong>version</strong>  1.1.0-rc2</p>\n<p>how can I solve this problem?</p>", "body_text": "I run the code from official tutorial:\nhttps://www.tensorflow.org/programmers_guide/variable_scope\nwith tf.variable_scope(\"foo\", initializer=tf.constant_initializer(0.4)):\n    v = tf.get_variable(\"v\", [1])\n    assert v.eval() == 0.4  # Default initializer as set above.\n    w = tf.get_variable(\"w\", [1], initializer=tf.constant_initializer(0.3))\n    assert w.eval() == 0.3  # Specific initializer overrides the default.\n    with tf.variable_scope(\"bar\"):\n        v = tf.get_variable(\"v\", [1])\n        assert v.eval() == 0.4  # Inherited default initializer.\n    with tf.variable_scope(\"baz\", initializer=tf.constant_initializer(0.2)):\n        v = tf.get_variable(\"v\", [1])\n        assert v.eval() == 0.2  # Changed default initializer\n\nthe problem as below:\nCannot evaluate tensor using eval(): No default session is registered. Use with sess.as_default() or pass an explicit session to eval(session=sess)\nwith tf.Session():\n    with tf.variable_scope(\"foo\", initializer=tf.constant_initializer(0.4)):\n        v = tf.get_variable(\"v\", [1])\n        assert v.eval() == 0.4  # Default initializer as set above.\n        w = tf.get_variable(\"w\", [1], initializer=tf.constant_initializer(0.3))\n        assert w.eval() == 0.3  # Specific initializer overrides the default.\n        with tf.variable_scope(\"bar\"):\n            v = tf.get_variable(\"v\", [1])\n            assert v.eval() == 0.4  # Inherited default initializer.\n        with tf.variable_scope(\"baz\", initializer=tf.constant_initializer(0.2)):\n            v = tf.get_variable(\"v\", [1])\n            assert v.eval() == 0.2  # Changed default initializer\n\nwhen i try with session the problem changed as below:\nAttempting to use uninitialized value foo/v\n [[Node: foo/v/_0 = _Send[T=DT_FLOAT, client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device=\"/job:localhost/replica:0/task:0/gpu:0\", send_device_incarnation=1, tensor_name=\"edge_4_foo/v\", _device=\"/job:localhost/replica:0/task:0/gpu:0\"](foo/v)]]\n\nthis problem in both windows and linux\nthe platform is :\nwindows10 , python3.5 , tf.version 0.12.1\nubuntu, python2.7  , tf.version  1.1.0-rc2\nhow can I solve this problem?", "body": "I run the code from official tutorial:\r\nhttps://www.tensorflow.org/programmers_guide/variable_scope\r\n\r\n```\r\nwith tf.variable_scope(\"foo\", initializer=tf.constant_initializer(0.4)):\r\n    v = tf.get_variable(\"v\", [1])\r\n    assert v.eval() == 0.4  # Default initializer as set above.\r\n    w = tf.get_variable(\"w\", [1], initializer=tf.constant_initializer(0.3))\r\n    assert w.eval() == 0.3  # Specific initializer overrides the default.\r\n    with tf.variable_scope(\"bar\"):\r\n        v = tf.get_variable(\"v\", [1])\r\n        assert v.eval() == 0.4  # Inherited default initializer.\r\n    with tf.variable_scope(\"baz\", initializer=tf.constant_initializer(0.2)):\r\n        v = tf.get_variable(\"v\", [1])\r\n        assert v.eval() == 0.2  # Changed default initializer\r\n```\r\n**the problem as below**:\r\nCannot evaluate tensor using `eval()`: No default session is registered. Use `with sess.as_default()` or pass an explicit session to `eval(session=sess)`\r\n\r\n```\r\nwith tf.Session():\r\n    with tf.variable_scope(\"foo\", initializer=tf.constant_initializer(0.4)):\r\n        v = tf.get_variable(\"v\", [1])\r\n        assert v.eval() == 0.4  # Default initializer as set above.\r\n        w = tf.get_variable(\"w\", [1], initializer=tf.constant_initializer(0.3))\r\n        assert w.eval() == 0.3  # Specific initializer overrides the default.\r\n        with tf.variable_scope(\"bar\"):\r\n            v = tf.get_variable(\"v\", [1])\r\n            assert v.eval() == 0.4  # Inherited default initializer.\r\n        with tf.variable_scope(\"baz\", initializer=tf.constant_initializer(0.2)):\r\n            v = tf.get_variable(\"v\", [1])\r\n            assert v.eval() == 0.2  # Changed default initializer\r\n```\r\n\r\n**when i try with session the problem changed as below:**\r\n\r\nAttempting to use uninitialized value foo/v\r\n\r\n\t [[Node: foo/v/_0 = _Send[T=DT_FLOAT, client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device=\"/job:localhost/replica:0/task:0/gpu:0\", send_device_incarnation=1, tensor_name=\"edge_4_foo/v\", _device=\"/job:localhost/replica:0/task:0/gpu:0\"](foo/v)]]\r\n\r\nthis problem in both windows and linux\r\nthe platform is :\r\nwindows10 , python3.5 , tf.__version__ 0.12.1\r\nubuntu, python2.7  , tf.__version__  1.1.0-rc2\r\n\r\nhow can I solve this problem?\r\n"}