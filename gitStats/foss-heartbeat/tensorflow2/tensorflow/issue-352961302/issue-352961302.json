{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21800", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21800/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21800/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21800/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21800", "id": 352961302, "node_id": "MDU6SXNzdWUzNTI5NjEzMDI=", "number": 21800, "title": "Custom tensorflow op with output shape determined by the input tensor", "user": {"login": "mzgsxs", "id": 17554462, "node_id": "MDQ6VXNlcjE3NTU0NDYy", "avatar_url": "https://avatars3.githubusercontent.com/u/17554462?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mzgsxs", "html_url": "https://github.com/mzgsxs", "followers_url": "https://api.github.com/users/mzgsxs/followers", "following_url": "https://api.github.com/users/mzgsxs/following{/other_user}", "gists_url": "https://api.github.com/users/mzgsxs/gists{/gist_id}", "starred_url": "https://api.github.com/users/mzgsxs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mzgsxs/subscriptions", "organizations_url": "https://api.github.com/users/mzgsxs/orgs", "repos_url": "https://api.github.com/users/mzgsxs/repos", "events_url": "https://api.github.com/users/mzgsxs/events{/privacy}", "received_events_url": "https://api.github.com/users/mzgsxs/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2018-08-22T13:47:19Z", "updated_at": "2018-08-23T11:21:04Z", "closed_at": "2018-08-23T04:57:37Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: YES</li>\n<li>Linux Ubuntu 16.04</li>\n<li>PC</li>\n<li>Binary</li>\n<li>1.10</li>\n<li>3.5</li>\n<li>9.0/7.0</li>\n<li>V100</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<pre><code>REGISTER_OP(\"GroupPoint\")\n    .Input(\"points: float32\")\n    .Input(\"idx: int32\")\n    .Input(\"length: int32\")\n    .Output(\"out: float32\")\n    .SetShapeFn([](::tensorflow::shape_inference::InferenceContext* c) {\n        ::tensorflow::shape_inference::ShapeHandle dims1; **// shape N x C**\n        c-&gt;WithRank(c-&gt;input(0), 2, &amp;dims1);\n        ::tensorflow::shape_inference::ShapeHandle dims2; **// shape L**\n        c-&gt;WithRank(c-&gt;input(1), 1, &amp;dims2);\n        ::tensorflow::shape_inference::ShapeHandle dims3; **// scalar, shape 0**\n        c-&gt;WithRank(c-&gt;input(2), 0, &amp;dims3);\n        ::tensorflow::shape_inference::ShapeHandle output = c-&gt;MakeShape({c-&gt;Dim(dims2, 2), L});\n        **// L should have the value of input(2)**\n        c-&gt;set_output(0, output); **// shape input(2) x C**\n        return Status::OK();\n    });\n</code></pre>\n<h3>Describe the problem</h3>\n<p>Basically I want to write a customized op to output a tensor with shape which is determined by the value of input(2), i.e the third input.<br>\nMore specifically, I want to get 'length' number of 'idx' (i.e. idx[0:length] ) then to gather those indices from 'points'. ( i.e. tf.gather(points, idx[0:length]))<br>\nThe stock tensor-flow apis such as tf.slice and tf.gather would not allow me to do this because my op (also an customised op) to get input 'idx' has to be run on GPU. Error Message as:</p>\n<p><strong>Tensor(\"strided_slice:0\", shape=(128, 16), dtype=float32, device=/device:GPU:0)<br>\nTensor(\"strided_slice_1:0\", shape=(32,), dtype=int32, device=/device:GPU:0) Tensor(\"strided_slice_2:0\", shape=(), dtype=i<br>\nnt32, device=/device:GPU:0)<br>\n2018-08-22 13:28:55.108318: E tensorflow/core/common_runtime/executor.cc:696] Executor failed to create kernel. Not found<br>\n: No registered 'QueryBallPoint' OpKernel for CPU devices compatible with node QueryBallPoint = QueryBallPoint[nsample=32<br>\n, radius=1, _device=\"/device:GPU:0\"](Const_1, Const_2)<br>\n.  Registered:  device='GPU'<br>\n[[Node: QueryBallPoint = QueryBallPoint[nsample=32, radius=1, _device=\"/device:GPU:0\"](Const_1, Const_2)]]<br>\nTensor(\"GatherV2:0\", shape=(?,), dtype=int32, device=/device:GPU:0)</strong></p>\n<p>I have tried to digging from the source code of class ::tensorflow::shape_inference::InferenceContext*, but failed, I have no idea how to do this, any kind of suggestions would be greatly helpful, thanks</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): YES\nLinux Ubuntu 16.04\nPC\nBinary\n1.10\n3.5\n9.0/7.0\nV100\nExact command to reproduce:\n\nREGISTER_OP(\"GroupPoint\")\n    .Input(\"points: float32\")\n    .Input(\"idx: int32\")\n    .Input(\"length: int32\")\n    .Output(\"out: float32\")\n    .SetShapeFn([](::tensorflow::shape_inference::InferenceContext* c) {\n        ::tensorflow::shape_inference::ShapeHandle dims1; **// shape N x C**\n        c->WithRank(c->input(0), 2, &dims1);\n        ::tensorflow::shape_inference::ShapeHandle dims2; **// shape L**\n        c->WithRank(c->input(1), 1, &dims2);\n        ::tensorflow::shape_inference::ShapeHandle dims3; **// scalar, shape 0**\n        c->WithRank(c->input(2), 0, &dims3);\n        ::tensorflow::shape_inference::ShapeHandle output = c->MakeShape({c->Dim(dims2, 2), L});\n        **// L should have the value of input(2)**\n        c->set_output(0, output); **// shape input(2) x C**\n        return Status::OK();\n    });\n\nDescribe the problem\nBasically I want to write a customized op to output a tensor with shape which is determined by the value of input(2), i.e the third input.\nMore specifically, I want to get 'length' number of 'idx' (i.e. idx[0:length] ) then to gather those indices from 'points'. ( i.e. tf.gather(points, idx[0:length]))\nThe stock tensor-flow apis such as tf.slice and tf.gather would not allow me to do this because my op (also an customised op) to get input 'idx' has to be run on GPU. Error Message as:\nTensor(\"strided_slice:0\", shape=(128, 16), dtype=float32, device=/device:GPU:0)\nTensor(\"strided_slice_1:0\", shape=(32,), dtype=int32, device=/device:GPU:0) Tensor(\"strided_slice_2:0\", shape=(), dtype=i\nnt32, device=/device:GPU:0)\n2018-08-22 13:28:55.108318: E tensorflow/core/common_runtime/executor.cc:696] Executor failed to create kernel. Not found\n: No registered 'QueryBallPoint' OpKernel for CPU devices compatible with node QueryBallPoint = QueryBallPoint[nsample=32\n, radius=1, _device=\"/device:GPU:0\"](Const_1, Const_2)\n.  Registered:  device='GPU'\n[[Node: QueryBallPoint = QueryBallPoint[nsample=32, radius=1, _device=\"/device:GPU:0\"](Const_1, Const_2)]]\nTensor(\"GatherV2:0\", shape=(?,), dtype=int32, device=/device:GPU:0)\nI have tried to digging from the source code of class ::tensorflow::shape_inference::InferenceContext*, but failed, I have no idea how to do this, any kind of suggestions would be greatly helpful, thanks", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: YES\r\n- Linux Ubuntu 16.04\r\n- PC\r\n- Binary\r\n- 1.10\r\n- 3.5\r\n- 9.0/7.0\r\n- V100 \r\n- **Exact command to reproduce**:\r\n```\r\nREGISTER_OP(\"GroupPoint\")\r\n    .Input(\"points: float32\")\r\n    .Input(\"idx: int32\")\r\n    .Input(\"length: int32\")\r\n    .Output(\"out: float32\")\r\n    .SetShapeFn([](::tensorflow::shape_inference::InferenceContext* c) {\r\n        ::tensorflow::shape_inference::ShapeHandle dims1; **// shape N x C**\r\n        c->WithRank(c->input(0), 2, &dims1);\r\n        ::tensorflow::shape_inference::ShapeHandle dims2; **// shape L**\r\n        c->WithRank(c->input(1), 1, &dims2);\r\n        ::tensorflow::shape_inference::ShapeHandle dims3; **// scalar, shape 0**\r\n        c->WithRank(c->input(2), 0, &dims3);\r\n        ::tensorflow::shape_inference::ShapeHandle output = c->MakeShape({c->Dim(dims2, 2), L});\r\n        **// L should have the value of input(2)**\r\n        c->set_output(0, output); **// shape input(2) x C**\r\n        return Status::OK();\r\n    });\r\n```\r\n\r\n### Describe the problem\r\nBasically I want to write a customized op to output a tensor with shape which is determined by the value of input(2), i.e the third input. \r\nMore specifically, I want to get 'length' number of 'idx' (i.e. idx[0:length] ) then to gather those indices from 'points'. ( i.e. tf.gather(points, idx[0:length]))\r\nThe stock tensor-flow apis such as tf.slice and tf.gather would not allow me to do this because my op (also an customised op) to get input 'idx' has to be run on GPU. Error Message as:\r\n\r\n**Tensor(\"strided_slice:0\", shape=(128, 16), dtype=float32, device=/device:GPU:0)\r\nTensor(\"strided_slice_1:0\", shape=(32,), dtype=int32, device=/device:GPU:0) Tensor(\"strided_slice_2:0\", shape=(), dtype=i\r\nnt32, device=/device:GPU:0)\r\n2018-08-22 13:28:55.108318: E tensorflow/core/common_runtime/executor.cc:696] Executor failed to create kernel. Not found\r\n: No registered 'QueryBallPoint' OpKernel for CPU devices compatible with node QueryBallPoint = QueryBallPoint[nsample=32\r\n, radius=1, _device=\"/device:GPU:0\"](Const_1, Const_2)\r\n        .  Registered:  device='GPU'\r\n[[Node: QueryBallPoint = QueryBallPoint[nsample=32, radius=1, _device=\"/device:GPU:0\"](Const_1, Const_2)]]\r\nTensor(\"GatherV2:0\", shape=(?,), dtype=int32, device=/device:GPU:0)**\r\n\r\nI have tried to digging from the source code of class ::tensorflow::shape_inference::InferenceContext*, but failed, I have no idea how to do this, any kind of suggestions would be greatly helpful, thanks"}