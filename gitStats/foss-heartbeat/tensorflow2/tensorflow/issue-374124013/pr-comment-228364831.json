{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/228364831", "pull_request_review_id": 168622968, "id": 228364831, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyODM2NDgzMQ==", "diff_hunk": "@@ -185,6 +185,16 @@ bool HasWindowReversal(const Window& window) {\n   return false;\n }\n \n+bool AllOrNoneReversed(const Window& window) {\n+  bool reversed = window.dimensions()[0].window_reversal();", "path": "tensorflow/compiler/xla/window_util.cc", "position": 8, "original_position": 5, "commit_id": "013d74dd7e96b96decccc059f9bdf2f2b01348c5", "original_commit_id": "8eccadb40e76eaff1970aa71d32b61cc0995784f", "user": {"login": "jlebar", "id": 150663, "node_id": "MDQ6VXNlcjE1MDY2Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/150663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlebar", "html_url": "https://github.com/jlebar", "followers_url": "https://api.github.com/users/jlebar/followers", "following_url": "https://api.github.com/users/jlebar/following{/other_user}", "gists_url": "https://api.github.com/users/jlebar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlebar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlebar/subscriptions", "organizations_url": "https://api.github.com/users/jlebar/orgs", "repos_url": "https://api.github.com/users/jlebar/repos", "events_url": "https://api.github.com/users/jlebar/events{/privacy}", "received_events_url": "https://api.github.com/users/jlebar/received_events", "type": "User", "site_admin": false}, "body": "How about\r\n\r\n```\r\nbool reversed = window.dimensions()[0].window_reversal();\r\nreturn absl::c_all_of(window.dimensions(), [&](const Dimension& dim) { return dim.window_reversal() == reversed; }));\r\n```\r\n\r\nOr less efficient but perhaps simpler and without a crash on a window with 0 dimensions\r\n\r\n```\r\nreturn absl::c_all_of(window.dimensions(), [&](const Dimension& dim) { return dim.window_reversal(); }) ||\r\n       absl::c_none_of(...);\r\n```", "created_at": "2018-10-25T23:13:50Z", "updated_at": "2018-10-25T23:52:11Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/23268#discussion_r228364831", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/23268", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/228364831"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/23268#discussion_r228364831"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/23268"}}, "body_html": "<p>How about</p>\n<pre><code>bool reversed = window.dimensions()[0].window_reversal();\nreturn absl::c_all_of(window.dimensions(), [&amp;](const Dimension&amp; dim) { return dim.window_reversal() == reversed; }));\n</code></pre>\n<p>Or less efficient but perhaps simpler and without a crash on a window with 0 dimensions</p>\n<pre><code>return absl::c_all_of(window.dimensions(), [&amp;](const Dimension&amp; dim) { return dim.window_reversal(); }) ||\n       absl::c_none_of(...);\n</code></pre>", "body_text": "How about\nbool reversed = window.dimensions()[0].window_reversal();\nreturn absl::c_all_of(window.dimensions(), [&](const Dimension& dim) { return dim.window_reversal() == reversed; }));\n\nOr less efficient but perhaps simpler and without a crash on a window with 0 dimensions\nreturn absl::c_all_of(window.dimensions(), [&](const Dimension& dim) { return dim.window_reversal(); }) ||\n       absl::c_none_of(...);"}