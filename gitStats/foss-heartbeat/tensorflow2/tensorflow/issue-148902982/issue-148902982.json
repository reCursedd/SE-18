{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1990", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1990/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1990/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1990/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/1990", "id": 148902982, "node_id": "MDU6SXNzdWUxNDg5MDI5ODI=", "number": 1990, "title": "Installation of Tensorflow 0.8 in an Anaconda Python 3.5 Environment Failed", "user": {"login": "dlmacedo", "id": 15001116, "node_id": "MDQ6VXNlcjE1MDAxMTE2", "avatar_url": "https://avatars2.githubusercontent.com/u/15001116?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dlmacedo", "html_url": "https://github.com/dlmacedo", "followers_url": "https://api.github.com/users/dlmacedo/followers", "following_url": "https://api.github.com/users/dlmacedo/following{/other_user}", "gists_url": "https://api.github.com/users/dlmacedo/gists{/gist_id}", "starred_url": "https://api.github.com/users/dlmacedo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dlmacedo/subscriptions", "organizations_url": "https://api.github.com/users/dlmacedo/orgs", "repos_url": "https://api.github.com/users/dlmacedo/repos", "events_url": "https://api.github.com/users/dlmacedo/events{/privacy}", "received_events_url": "https://api.github.com/users/dlmacedo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2016-04-16T23:46:30Z", "updated_at": "2017-03-03T01:21:46Z", "closed_at": "2016-04-20T16:10:39Z", "author_association": "NONE", "body_html": "<p>Dear friends,</p>\n<p>I have tried to install tensorflow 0.8 in an anaconda python 3.5 environment but it didn't worked. I got a message saying something like \"not a supported wheel on this platform\".</p>\n<h3>Environment info</h3>\n<p>Operating System: Ubuntu 14.04.LTS</p>\n<h3>Steps to reproduce</h3>\n<pre><code>dlm@pc-aero-01:~$ \ndlm@pc-aero-01:~$ conda create -n tensorflow python=3.5\n(...)\ndlm@pc-aero-01:~$ \ndlm@pc-aero-01:~$ source activate tensorflow\ndiscarding /home/dlm/anaconda3/bin from PATH\nprepending /home/dlm/anaconda3/envs/tensorflow/bin to PATH\n(tensorflow)dlm@pc-aero-01:~$ \n(tensorflow)dlm@pc-aero-01:~$ python -V\nPython 3.5.1 :: Continuum Analytics, Inc.\n(tensorflow)dlm@pc-aero-01:~$ pip -V\npip 8.1.1 from /home/dlm/anaconda3/envs/tensorflow/lib/python3.5/site-packages (python 3.5)\n(tensorflow)dlm@pc-aero-01:~$ \n(tensorflow)dlm@pc-aero-01:~$ pip install --ignore-installed --upgrade https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.8.0rc0-cp34-cp34m-linux_x86_64.whl\n**tensorflow-0.8.0rc0-cp34-cp34m-linux_x86_64.whl is not a supported wheel on this platform.**\n(tensorflow)dlm@pc-aero-01:~$ \n</code></pre>\n<h3>What have you tried?</h3>\n<p>I have tried to use the pip3 for python 3.4 instead of 3.5. It appears to install but didn't worked after all. I think the the problem now is that conda is using the pip of the system environment since this version isn't installed in the tensorflow environment. See below:</p>\n<pre><code>(tensorflow)dlm@pc-aero-01:~$ \n(tensorflow)dlm@pc-aero-01:~$ pip3 -V\npip 8.1.1 from /usr/local/lib/python3.4/dist-packages (python 3.4)\n(tensorflow)dlm@pc-aero-01:~$ \n(tensorflow)dlm@pc-aero-01:~$ sudo -H pip3 install --ignore-installed --upgrade https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.8.0rc0-cp34-cp34m-linux_x86_64.whl\n[sudo] password for dlm: \nCollecting tensorflow==0.8.0rc0 from https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.8.0rc0-cp34-cp34m-linux_x86_64.whl\n  Using cached https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.8.0rc0-cp34-cp34m-linux_x86_64.whl\nCollecting numpy&gt;=1.8.2 (from tensorflow==0.8.0rc0)\n  Using cached numpy-1.11.0-cp34-cp34m-manylinux1_x86_64.whl\nCollecting wheel&gt;=0.26 (from tensorflow==0.8.0rc0)\n  Using cached wheel-0.29.0-py2.py3-none-any.whl\nCollecting six&gt;=1.10.0 (from tensorflow==0.8.0rc0)\n  Using cached six-1.10.0-py2.py3-none-any.whl\nCollecting protobuf==3.0.0b2 (from tensorflow==0.8.0rc0)\n  Using cached protobuf-3.0.0b2-py2.py3-none-any.whl\nCollecting setuptools (from protobuf==3.0.0b2-&gt;tensorflow==0.8.0rc0)\n  Using cached setuptools-20.9.0-py2.py3-none-any.whl\nInstalling collected packages: numpy, wheel, six, setuptools, protobuf, tensorflow\nSuccessfully installed numpy-1.11.0 protobuf-3.0.0b2 setuptools-20.9.0 six-1.10.0 tensorflow-0.8.0rc0 wheel-0.29.0\n(tensorflow)dlm@pc-aero-01:~$ \n(tensorflow)dlm@pc-aero-01:~$ python\nPython 3.5.1 |Continuum Analytics, Inc.| (default, Dec  7 2015, 11:16:01) \n[GCC 4.4.7 20120313 (Red Hat 4.4.7-1)] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt; \n&gt;&gt;&gt; import sys\n&gt;&gt;&gt; sys.path\n['', '/home/dlm/anaconda3/envs/tensorflow/lib/python35.zip', '/home/dlm/anaconda3/envs/tensorflow/lib/python3.5', '/home/dlm/anaconda3/envs/tensorflow/lib/python3.5/plat-linux', '/home/dlm/anaconda3/envs/tensorflow/lib/python3.5/lib-dynload', '/home/dlm/anaconda3/envs/tensorflow/lib/python3.5/site-packages', '/home/dlm/anaconda3/envs/tensorflow/lib/python3.5/site-packages/setuptools-20.7.0-py3.5.egg']\n&gt;&gt;&gt; \n&gt;&gt;&gt; import tensorflow\n&gt;&gt;&gt; \n(tensorflow)dlm@pc-aero-01:~$ \n(tensorflow)dlm@pc-aero-01:~$ python -c 'import os; import inspect; import tensorflow; print(os.path.dirname(inspect.getfile(tensorflow)))'\nTraceback (most recent call last):\n  File \"&lt;string&gt;\", line 1, in &lt;module&gt;\n  File \"/home/dlm/anaconda3/envs/tensorflow/lib/python3.5/inspect.py\", line 607, in getfile\n    raise TypeError('{!r} is a built-in module'.format(object))\nTypeError: &lt;module 'tensorflow' (namespace)&gt; is a built-in module\n(tensorflow)dlm@pc-aero-01:~$ python3 -c 'import os; import inspect; import tensorflow; print(os.path.dirname(inspect.getfile(tensorflow)))'\nTraceback (most recent call last):\n  File \"&lt;string&gt;\", line 1, in &lt;module&gt;\n  File \"/home/dlm/anaconda3/envs/tensorflow/lib/python3.5/inspect.py\", line 607, in getfile\n    raise TypeError('{!r} is a built-in module'.format(object))\nTypeError: &lt;module 'tensorflow' (namespace)&gt; is a built-in module\n(tensorflow)dlm@pc-aero-01:~$ \n(tensorflow)dlm@pc-aero-01:~$ python -m tensorflow.models.image.mnist.convolutional\n/home/dlm/anaconda3/envs/tensorflow/bin/python: Error while finding spec for 'tensorflow.models.image.mnist.convolutional' (&lt;class 'ImportError'&gt;: No module named 'tensorflow.models')\n(tensorflow)dlm@pc-aero-01:~$ \n(tensorflow)dlm@pc-aero-01:~$ python -c \"import tensorflow; print(tensorflow.__version__)\"\nTraceback (most recent call last):\n  File \"&lt;string&gt;\", line 1, in &lt;module&gt;\nAttributeError: module 'tensorflow' has no attribute '__version__'\n(tensorflow)dlm@pc-aero-01:~$ \n</code></pre>\n<p>But, if you try to create a conda environment using python 3.4 it works. Therefore, one possible way to fix it is change the installation procedure in order to create a conda environment using python 3.4 and not python 3.5.</p>\n<pre><code>dlm@pc-aero-01:~$ conda create -n tensorflowX python=3.4\nUsing Anaconda Cloud api site https://api.anaconda.org\nFetching package metadata: ....\nSolving package specifications: .........\n(...)\ndlm@pc-aero-01:~$ source activate tensorflowX\ndiscarding /home/dlm/anaconda3/bin from PATH\nprepending /home/dlm/anaconda3/envs/tensorflowX/bin to PATH\n(tensorflowX)dlm@pc-aero-01:~$ \n(tensorflowX)dlm@pc-aero-01:~$ pip install --ignore-installed --upgrade https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.8.0rc0-cp34-cp34m-linux_x86_64.whl\nCollecting tensorflow==0.8.0rc0 from https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.8.0rc0-cp34-cp34m-linux_x86_64.whl\n(...)\nSuccessfully installed numpy-1.11.0 protobuf-3.0.0b2 setuptools-20.7.0 six-1.10.0 tensorflow-0.8.0rc0 wheel-0.29.0\n(tensorflowX)dlm@pc-aero-01:~$ python -m tensorflow.models.image.mnist.convolutional\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcurand.so locally\nExtracting data/train-images-idx3-ubyte.gz\nExtracting data/train-labels-idx1-ubyte.gz\nExtracting data/t10k-images-idx3-ubyte.gz\nExtracting data/t10k-labels-idx1-ubyte.gz\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:900] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:102] Found device 0 with properties: \nname: GeForce GTX 980 Ti\nmajor: 5 minor: 2 memoryClockRate (GHz) 1.19\npciBusID 0000:01:00.0\nTotal memory: 6.00GiB\nFree memory: 5.46GiB\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:126] DMA: 0 \nI tensorflow/core/common_runtime/gpu/gpu_init.cc:136] 0:   Y \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:755] Creating TensorFlow device (/gpu:0) -&gt; (device: 0, name: GeForce GTX 980 Ti, pci bus id: 0000:01:00.0)\nInitialized!\nStep 0 (epoch 0.00), 18.8 ms\nMinibatch loss: 12.054, learning rate: 0.010000\nMinibatch error: 90.6%\nValidation error: 84.6%\nStep 100 (epoch 0.12), 6.0 ms\nMinibatch loss: 3.281, learning rate: 0.010000\nMinibatch error: 6.2%\nValidation error: 6.9%\nStep 200 (epoch 0.23), 5.7 ms\n</code></pre>", "body_text": "Dear friends,\nI have tried to install tensorflow 0.8 in an anaconda python 3.5 environment but it didn't worked. I got a message saying something like \"not a supported wheel on this platform\".\nEnvironment info\nOperating System: Ubuntu 14.04.LTS\nSteps to reproduce\ndlm@pc-aero-01:~$ \ndlm@pc-aero-01:~$ conda create -n tensorflow python=3.5\n(...)\ndlm@pc-aero-01:~$ \ndlm@pc-aero-01:~$ source activate tensorflow\ndiscarding /home/dlm/anaconda3/bin from PATH\nprepending /home/dlm/anaconda3/envs/tensorflow/bin to PATH\n(tensorflow)dlm@pc-aero-01:~$ \n(tensorflow)dlm@pc-aero-01:~$ python -V\nPython 3.5.1 :: Continuum Analytics, Inc.\n(tensorflow)dlm@pc-aero-01:~$ pip -V\npip 8.1.1 from /home/dlm/anaconda3/envs/tensorflow/lib/python3.5/site-packages (python 3.5)\n(tensorflow)dlm@pc-aero-01:~$ \n(tensorflow)dlm@pc-aero-01:~$ pip install --ignore-installed --upgrade https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.8.0rc0-cp34-cp34m-linux_x86_64.whl\n**tensorflow-0.8.0rc0-cp34-cp34m-linux_x86_64.whl is not a supported wheel on this platform.**\n(tensorflow)dlm@pc-aero-01:~$ \n\nWhat have you tried?\nI have tried to use the pip3 for python 3.4 instead of 3.5. It appears to install but didn't worked after all. I think the the problem now is that conda is using the pip of the system environment since this version isn't installed in the tensorflow environment. See below:\n(tensorflow)dlm@pc-aero-01:~$ \n(tensorflow)dlm@pc-aero-01:~$ pip3 -V\npip 8.1.1 from /usr/local/lib/python3.4/dist-packages (python 3.4)\n(tensorflow)dlm@pc-aero-01:~$ \n(tensorflow)dlm@pc-aero-01:~$ sudo -H pip3 install --ignore-installed --upgrade https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.8.0rc0-cp34-cp34m-linux_x86_64.whl\n[sudo] password for dlm: \nCollecting tensorflow==0.8.0rc0 from https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.8.0rc0-cp34-cp34m-linux_x86_64.whl\n  Using cached https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.8.0rc0-cp34-cp34m-linux_x86_64.whl\nCollecting numpy>=1.8.2 (from tensorflow==0.8.0rc0)\n  Using cached numpy-1.11.0-cp34-cp34m-manylinux1_x86_64.whl\nCollecting wheel>=0.26 (from tensorflow==0.8.0rc0)\n  Using cached wheel-0.29.0-py2.py3-none-any.whl\nCollecting six>=1.10.0 (from tensorflow==0.8.0rc0)\n  Using cached six-1.10.0-py2.py3-none-any.whl\nCollecting protobuf==3.0.0b2 (from tensorflow==0.8.0rc0)\n  Using cached protobuf-3.0.0b2-py2.py3-none-any.whl\nCollecting setuptools (from protobuf==3.0.0b2->tensorflow==0.8.0rc0)\n  Using cached setuptools-20.9.0-py2.py3-none-any.whl\nInstalling collected packages: numpy, wheel, six, setuptools, protobuf, tensorflow\nSuccessfully installed numpy-1.11.0 protobuf-3.0.0b2 setuptools-20.9.0 six-1.10.0 tensorflow-0.8.0rc0 wheel-0.29.0\n(tensorflow)dlm@pc-aero-01:~$ \n(tensorflow)dlm@pc-aero-01:~$ python\nPython 3.5.1 |Continuum Analytics, Inc.| (default, Dec  7 2015, 11:16:01) \n[GCC 4.4.7 20120313 (Red Hat 4.4.7-1)] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> \n>>> import sys\n>>> sys.path\n['', '/home/dlm/anaconda3/envs/tensorflow/lib/python35.zip', '/home/dlm/anaconda3/envs/tensorflow/lib/python3.5', '/home/dlm/anaconda3/envs/tensorflow/lib/python3.5/plat-linux', '/home/dlm/anaconda3/envs/tensorflow/lib/python3.5/lib-dynload', '/home/dlm/anaconda3/envs/tensorflow/lib/python3.5/site-packages', '/home/dlm/anaconda3/envs/tensorflow/lib/python3.5/site-packages/setuptools-20.7.0-py3.5.egg']\n>>> \n>>> import tensorflow\n>>> \n(tensorflow)dlm@pc-aero-01:~$ \n(tensorflow)dlm@pc-aero-01:~$ python -c 'import os; import inspect; import tensorflow; print(os.path.dirname(inspect.getfile(tensorflow)))'\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"/home/dlm/anaconda3/envs/tensorflow/lib/python3.5/inspect.py\", line 607, in getfile\n    raise TypeError('{!r} is a built-in module'.format(object))\nTypeError: <module 'tensorflow' (namespace)> is a built-in module\n(tensorflow)dlm@pc-aero-01:~$ python3 -c 'import os; import inspect; import tensorflow; print(os.path.dirname(inspect.getfile(tensorflow)))'\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"/home/dlm/anaconda3/envs/tensorflow/lib/python3.5/inspect.py\", line 607, in getfile\n    raise TypeError('{!r} is a built-in module'.format(object))\nTypeError: <module 'tensorflow' (namespace)> is a built-in module\n(tensorflow)dlm@pc-aero-01:~$ \n(tensorflow)dlm@pc-aero-01:~$ python -m tensorflow.models.image.mnist.convolutional\n/home/dlm/anaconda3/envs/tensorflow/bin/python: Error while finding spec for 'tensorflow.models.image.mnist.convolutional' (<class 'ImportError'>: No module named 'tensorflow.models')\n(tensorflow)dlm@pc-aero-01:~$ \n(tensorflow)dlm@pc-aero-01:~$ python -c \"import tensorflow; print(tensorflow.__version__)\"\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\nAttributeError: module 'tensorflow' has no attribute '__version__'\n(tensorflow)dlm@pc-aero-01:~$ \n\nBut, if you try to create a conda environment using python 3.4 it works. Therefore, one possible way to fix it is change the installation procedure in order to create a conda environment using python 3.4 and not python 3.5.\ndlm@pc-aero-01:~$ conda create -n tensorflowX python=3.4\nUsing Anaconda Cloud api site https://api.anaconda.org\nFetching package metadata: ....\nSolving package specifications: .........\n(...)\ndlm@pc-aero-01:~$ source activate tensorflowX\ndiscarding /home/dlm/anaconda3/bin from PATH\nprepending /home/dlm/anaconda3/envs/tensorflowX/bin to PATH\n(tensorflowX)dlm@pc-aero-01:~$ \n(tensorflowX)dlm@pc-aero-01:~$ pip install --ignore-installed --upgrade https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.8.0rc0-cp34-cp34m-linux_x86_64.whl\nCollecting tensorflow==0.8.0rc0 from https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.8.0rc0-cp34-cp34m-linux_x86_64.whl\n(...)\nSuccessfully installed numpy-1.11.0 protobuf-3.0.0b2 setuptools-20.7.0 six-1.10.0 tensorflow-0.8.0rc0 wheel-0.29.0\n(tensorflowX)dlm@pc-aero-01:~$ python -m tensorflow.models.image.mnist.convolutional\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcurand.so locally\nExtracting data/train-images-idx3-ubyte.gz\nExtracting data/train-labels-idx1-ubyte.gz\nExtracting data/t10k-images-idx3-ubyte.gz\nExtracting data/t10k-labels-idx1-ubyte.gz\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:900] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:102] Found device 0 with properties: \nname: GeForce GTX 980 Ti\nmajor: 5 minor: 2 memoryClockRate (GHz) 1.19\npciBusID 0000:01:00.0\nTotal memory: 6.00GiB\nFree memory: 5.46GiB\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:126] DMA: 0 \nI tensorflow/core/common_runtime/gpu/gpu_init.cc:136] 0:   Y \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:755] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 980 Ti, pci bus id: 0000:01:00.0)\nInitialized!\nStep 0 (epoch 0.00), 18.8 ms\nMinibatch loss: 12.054, learning rate: 0.010000\nMinibatch error: 90.6%\nValidation error: 84.6%\nStep 100 (epoch 0.12), 6.0 ms\nMinibatch loss: 3.281, learning rate: 0.010000\nMinibatch error: 6.2%\nValidation error: 6.9%\nStep 200 (epoch 0.23), 5.7 ms", "body": "Dear friends,\n\nI have tried to install tensorflow 0.8 in an anaconda python 3.5 environment but it didn't worked. I got a message saying something like \"not a supported wheel on this platform\".\n### Environment info\n\nOperating System: Ubuntu 14.04.LTS\n### Steps to reproduce\n\n```\ndlm@pc-aero-01:~$ \ndlm@pc-aero-01:~$ conda create -n tensorflow python=3.5\n(...)\ndlm@pc-aero-01:~$ \ndlm@pc-aero-01:~$ source activate tensorflow\ndiscarding /home/dlm/anaconda3/bin from PATH\nprepending /home/dlm/anaconda3/envs/tensorflow/bin to PATH\n(tensorflow)dlm@pc-aero-01:~$ \n(tensorflow)dlm@pc-aero-01:~$ python -V\nPython 3.5.1 :: Continuum Analytics, Inc.\n(tensorflow)dlm@pc-aero-01:~$ pip -V\npip 8.1.1 from /home/dlm/anaconda3/envs/tensorflow/lib/python3.5/site-packages (python 3.5)\n(tensorflow)dlm@pc-aero-01:~$ \n(tensorflow)dlm@pc-aero-01:~$ pip install --ignore-installed --upgrade https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.8.0rc0-cp34-cp34m-linux_x86_64.whl\n**tensorflow-0.8.0rc0-cp34-cp34m-linux_x86_64.whl is not a supported wheel on this platform.**\n(tensorflow)dlm@pc-aero-01:~$ \n```\n### What have you tried?\n\nI have tried to use the pip3 for python 3.4 instead of 3.5. It appears to install but didn't worked after all. I think the the problem now is that conda is using the pip of the system environment since this version isn't installed in the tensorflow environment. See below:\n\n```\n(tensorflow)dlm@pc-aero-01:~$ \n(tensorflow)dlm@pc-aero-01:~$ pip3 -V\npip 8.1.1 from /usr/local/lib/python3.4/dist-packages (python 3.4)\n(tensorflow)dlm@pc-aero-01:~$ \n(tensorflow)dlm@pc-aero-01:~$ sudo -H pip3 install --ignore-installed --upgrade https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.8.0rc0-cp34-cp34m-linux_x86_64.whl\n[sudo] password for dlm: \nCollecting tensorflow==0.8.0rc0 from https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.8.0rc0-cp34-cp34m-linux_x86_64.whl\n  Using cached https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.8.0rc0-cp34-cp34m-linux_x86_64.whl\nCollecting numpy>=1.8.2 (from tensorflow==0.8.0rc0)\n  Using cached numpy-1.11.0-cp34-cp34m-manylinux1_x86_64.whl\nCollecting wheel>=0.26 (from tensorflow==0.8.0rc0)\n  Using cached wheel-0.29.0-py2.py3-none-any.whl\nCollecting six>=1.10.0 (from tensorflow==0.8.0rc0)\n  Using cached six-1.10.0-py2.py3-none-any.whl\nCollecting protobuf==3.0.0b2 (from tensorflow==0.8.0rc0)\n  Using cached protobuf-3.0.0b2-py2.py3-none-any.whl\nCollecting setuptools (from protobuf==3.0.0b2->tensorflow==0.8.0rc0)\n  Using cached setuptools-20.9.0-py2.py3-none-any.whl\nInstalling collected packages: numpy, wheel, six, setuptools, protobuf, tensorflow\nSuccessfully installed numpy-1.11.0 protobuf-3.0.0b2 setuptools-20.9.0 six-1.10.0 tensorflow-0.8.0rc0 wheel-0.29.0\n(tensorflow)dlm@pc-aero-01:~$ \n(tensorflow)dlm@pc-aero-01:~$ python\nPython 3.5.1 |Continuum Analytics, Inc.| (default, Dec  7 2015, 11:16:01) \n[GCC 4.4.7 20120313 (Red Hat 4.4.7-1)] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> \n>>> import sys\n>>> sys.path\n['', '/home/dlm/anaconda3/envs/tensorflow/lib/python35.zip', '/home/dlm/anaconda3/envs/tensorflow/lib/python3.5', '/home/dlm/anaconda3/envs/tensorflow/lib/python3.5/plat-linux', '/home/dlm/anaconda3/envs/tensorflow/lib/python3.5/lib-dynload', '/home/dlm/anaconda3/envs/tensorflow/lib/python3.5/site-packages', '/home/dlm/anaconda3/envs/tensorflow/lib/python3.5/site-packages/setuptools-20.7.0-py3.5.egg']\n>>> \n>>> import tensorflow\n>>> \n(tensorflow)dlm@pc-aero-01:~$ \n(tensorflow)dlm@pc-aero-01:~$ python -c 'import os; import inspect; import tensorflow; print(os.path.dirname(inspect.getfile(tensorflow)))'\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"/home/dlm/anaconda3/envs/tensorflow/lib/python3.5/inspect.py\", line 607, in getfile\n    raise TypeError('{!r} is a built-in module'.format(object))\nTypeError: <module 'tensorflow' (namespace)> is a built-in module\n(tensorflow)dlm@pc-aero-01:~$ python3 -c 'import os; import inspect; import tensorflow; print(os.path.dirname(inspect.getfile(tensorflow)))'\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"/home/dlm/anaconda3/envs/tensorflow/lib/python3.5/inspect.py\", line 607, in getfile\n    raise TypeError('{!r} is a built-in module'.format(object))\nTypeError: <module 'tensorflow' (namespace)> is a built-in module\n(tensorflow)dlm@pc-aero-01:~$ \n(tensorflow)dlm@pc-aero-01:~$ python -m tensorflow.models.image.mnist.convolutional\n/home/dlm/anaconda3/envs/tensorflow/bin/python: Error while finding spec for 'tensorflow.models.image.mnist.convolutional' (<class 'ImportError'>: No module named 'tensorflow.models')\n(tensorflow)dlm@pc-aero-01:~$ \n(tensorflow)dlm@pc-aero-01:~$ python -c \"import tensorflow; print(tensorflow.__version__)\"\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\nAttributeError: module 'tensorflow' has no attribute '__version__'\n(tensorflow)dlm@pc-aero-01:~$ \n```\n\nBut, if you try to create a conda environment using python 3.4 it works. Therefore, one possible way to fix it is change the installation procedure in order to create a conda environment using python 3.4 and not python 3.5.\n\n```\ndlm@pc-aero-01:~$ conda create -n tensorflowX python=3.4\nUsing Anaconda Cloud api site https://api.anaconda.org\nFetching package metadata: ....\nSolving package specifications: .........\n(...)\ndlm@pc-aero-01:~$ source activate tensorflowX\ndiscarding /home/dlm/anaconda3/bin from PATH\nprepending /home/dlm/anaconda3/envs/tensorflowX/bin to PATH\n(tensorflowX)dlm@pc-aero-01:~$ \n(tensorflowX)dlm@pc-aero-01:~$ pip install --ignore-installed --upgrade https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.8.0rc0-cp34-cp34m-linux_x86_64.whl\nCollecting tensorflow==0.8.0rc0 from https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.8.0rc0-cp34-cp34m-linux_x86_64.whl\n(...)\nSuccessfully installed numpy-1.11.0 protobuf-3.0.0b2 setuptools-20.7.0 six-1.10.0 tensorflow-0.8.0rc0 wheel-0.29.0\n(tensorflowX)dlm@pc-aero-01:~$ python -m tensorflow.models.image.mnist.convolutional\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcurand.so locally\nExtracting data/train-images-idx3-ubyte.gz\nExtracting data/train-labels-idx1-ubyte.gz\nExtracting data/t10k-images-idx3-ubyte.gz\nExtracting data/t10k-labels-idx1-ubyte.gz\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:900] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:102] Found device 0 with properties: \nname: GeForce GTX 980 Ti\nmajor: 5 minor: 2 memoryClockRate (GHz) 1.19\npciBusID 0000:01:00.0\nTotal memory: 6.00GiB\nFree memory: 5.46GiB\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:126] DMA: 0 \nI tensorflow/core/common_runtime/gpu/gpu_init.cc:136] 0:   Y \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:755] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 980 Ti, pci bus id: 0000:01:00.0)\nInitialized!\nStep 0 (epoch 0.00), 18.8 ms\nMinibatch loss: 12.054, learning rate: 0.010000\nMinibatch error: 90.6%\nValidation error: 84.6%\nStep 100 (epoch 0.12), 6.0 ms\nMinibatch loss: 3.281, learning rate: 0.010000\nMinibatch error: 6.2%\nValidation error: 6.9%\nStep 200 (epoch 0.23), 5.7 ms\n```\n"}