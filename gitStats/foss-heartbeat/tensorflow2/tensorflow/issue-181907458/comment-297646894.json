{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/297646894", "html_url": "https://github.com/tensorflow/tensorflow/issues/4863#issuecomment-297646894", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4863", "id": 297646894, "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzY0Njg5NA==", "user": {"login": "BrianOn99", "id": 8319689, "node_id": "MDQ6VXNlcjgzMTk2ODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/8319689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BrianOn99", "html_url": "https://github.com/BrianOn99", "followers_url": "https://api.github.com/users/BrianOn99/followers", "following_url": "https://api.github.com/users/BrianOn99/following{/other_user}", "gists_url": "https://api.github.com/users/BrianOn99/gists{/gist_id}", "starred_url": "https://api.github.com/users/BrianOn99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BrianOn99/subscriptions", "organizations_url": "https://api.github.com/users/BrianOn99/orgs", "repos_url": "https://api.github.com/users/BrianOn99/repos", "events_url": "https://api.github.com/users/BrianOn99/events{/privacy}", "received_events_url": "https://api.github.com/users/BrianOn99/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-27T08:22:13Z", "updated_at": "2017-04-27T08:22:13Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=51059\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/cancan101\">@cancan101</a><br>\nAs <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=161459\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/petewarden\">@petewarden</a> mentioned</p>\n<blockquote>\n<p>This means that only the float kernel gets registered. A simple workaround for now would be to change the line to be:</p>\n<p>REGISTER5(BinaryOp, CPU, \"Mul\", functor::mul, float, int32, double, uint8, Eigen::half);</p>\n</blockquote>\n<p>It is just naively switching position of parameters, in order to switch <code>int32</code> to the 5th parameter.  That means which op get registered depends on its position, which is totally nonsense I think.  Just a temporary workaround.  Anyway I am not a dev of tensorflow so it is better to let tensorflowers to make a better fix.</p>", "body_text": "@cancan101\nAs @petewarden mentioned\n\nThis means that only the float kernel gets registered. A simple workaround for now would be to change the line to be:\nREGISTER5(BinaryOp, CPU, \"Mul\", functor::mul, float, int32, double, uint8, Eigen::half);\n\nIt is just naively switching position of parameters, in order to switch int32 to the 5th parameter.  That means which op get registered depends on its position, which is totally nonsense I think.  Just a temporary workaround.  Anyway I am not a dev of tensorflow so it is better to let tensorflowers to make a better fix.", "body": "@cancan101 \r\nAs @petewarden mentioned\r\n> This means that only the float kernel gets registered. A simple workaround for now would be to change the line to be:\r\n>\r\n> REGISTER5(BinaryOp, CPU, \"Mul\", functor::mul, float, int32, double, uint8, Eigen::half);\r\n\r\nIt is just naively switching position of parameters, in order to switch `int32` to the 5th parameter.  That means which op get registered depends on its position, which is totally nonsense I think.  Just a temporary workaround.  Anyway I am not a dev of tensorflow so it is better to let tensorflowers to make a better fix."}