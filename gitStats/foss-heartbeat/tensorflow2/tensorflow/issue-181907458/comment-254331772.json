{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/254331772", "html_url": "https://github.com/tensorflow/tensorflow/issues/4863#issuecomment-254331772", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4863", "id": 254331772, "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDMzMTc3Mg==", "user": {"login": "petewarden", "id": 161459, "node_id": "MDQ6VXNlcjE2MTQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/161459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petewarden", "html_url": "https://github.com/petewarden", "followers_url": "https://api.github.com/users/petewarden/followers", "following_url": "https://api.github.com/users/petewarden/following{/other_user}", "gists_url": "https://api.github.com/users/petewarden/gists{/gist_id}", "starred_url": "https://api.github.com/users/petewarden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petewarden/subscriptions", "organizations_url": "https://api.github.com/users/petewarden/orgs", "repos_url": "https://api.github.com/users/petewarden/repos", "events_url": "https://api.github.com/users/petewarden/events{/privacy}", "received_events_url": "https://api.github.com/users/petewarden/received_events", "type": "User", "site_admin": false}, "created_at": "2016-10-17T20:57:24Z", "updated_at": "2016-10-17T20:57:24Z", "author_association": "MEMBER", "body_html": "<p>I actually just had a chance to look into this, and I believe it's a bug with our op registration code. It's expected that we only register float and int32 variants of kernels on mobile platforms:<br>\n<a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/framework/register_types.h\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/framework/register_types.h</a></p>\n<p>But the code for cwise ops makes some assumptions about the order of types, assuming that only the first two arguments to REGISTER macros should be used, in the hope that they're DT_FLOAT32 and DT_INT32:<br>\n<a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/cwise_ops_common.h#L413\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/cwise_ops_common.h#L413</a></p>\n<p>Unfortunately the code for registering the \"Mul\" kernels passes in a float, then a half as the first two arguments to REGISTER5:<br>\n<a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/cwise_op_mul_1.cc\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/cwise_op_mul_1.cc</a></p>\n<p>This means that only the float kernel gets registered. A simple workaround for now would be to change the line to be:</p>\n<p><code>REGISTER5(BinaryOp, CPU, \"Mul\", functor::mul, float, int32, double, uint8, Eigen::half);</code></p>\n<p>I haven't tested this myself, and it doesn't fix other occurrences of this same problem, but could you give it a try <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=21103431\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/peterkfm\">@peterkfm</a> ?</p>", "body_text": "I actually just had a chance to look into this, and I believe it's a bug with our op registration code. It's expected that we only register float and int32 variants of kernels on mobile platforms:\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/framework/register_types.h\nBut the code for cwise ops makes some assumptions about the order of types, assuming that only the first two arguments to REGISTER macros should be used, in the hope that they're DT_FLOAT32 and DT_INT32:\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/cwise_ops_common.h#L413\nUnfortunately the code for registering the \"Mul\" kernels passes in a float, then a half as the first two arguments to REGISTER5:\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/cwise_op_mul_1.cc\nThis means that only the float kernel gets registered. A simple workaround for now would be to change the line to be:\nREGISTER5(BinaryOp, CPU, \"Mul\", functor::mul, float, int32, double, uint8, Eigen::half);\nI haven't tested this myself, and it doesn't fix other occurrences of this same problem, but could you give it a try @peterkfm ?", "body": "I actually just had a chance to look into this, and I believe it's a bug with our op registration code. It's expected that we only register float and int32 variants of kernels on mobile platforms:\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/framework/register_types.h\n\nBut the code for cwise ops makes some assumptions about the order of types, assuming that only the first two arguments to REGISTER<N> macros should be used, in the hope that they're DT_FLOAT32 and DT_INT32:\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/cwise_ops_common.h#L413\n\nUnfortunately the code for registering the \"Mul\" kernels passes in a float, then a half as the first two arguments to REGISTER5:\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/cwise_op_mul_1.cc\n\nThis means that only the float kernel gets registered. A simple workaround for now would be to change the line to be:\n\n`REGISTER5(BinaryOp, CPU, \"Mul\", functor::mul, float, int32, double, uint8, Eigen::half);`\n\nI haven't tested this myself, and it doesn't fix other occurrences of this same problem, but could you give it a try @peterkfm ?\n"}