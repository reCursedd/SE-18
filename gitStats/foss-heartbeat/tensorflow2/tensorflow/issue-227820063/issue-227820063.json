{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9820", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9820/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9820/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9820/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9820", "id": 227820063, "node_id": "MDU6SXNzdWUyMjc4MjAwNjM=", "number": 9820, "title": "Unable to build TensorFlow Java native libraries for arm64-v8a Android devices", "user": {"login": "trs225", "id": 28606379, "node_id": "MDQ6VXNlcjI4NjA2Mzc5", "avatar_url": "https://avatars2.githubusercontent.com/u/28606379?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trs225", "html_url": "https://github.com/trs225", "followers_url": "https://api.github.com/users/trs225/followers", "following_url": "https://api.github.com/users/trs225/following{/other_user}", "gists_url": "https://api.github.com/users/trs225/gists{/gist_id}", "starred_url": "https://api.github.com/users/trs225/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trs225/subscriptions", "organizations_url": "https://api.github.com/users/trs225/orgs", "repos_url": "https://api.github.com/users/trs225/repos", "events_url": "https://api.github.com/users/trs225/events{/privacy}", "received_events_url": "https://api.github.com/users/trs225/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-05-10T21:47:18Z", "updated_at": "2017-05-10T22:55:44Z", "closed_at": "2017-05-10T22:21:23Z", "author_association": "NONE", "body_html": "<h3>Problem</h3>\n<p>I'm trying to build TensorFlow Java and the relevant native libraries for an Android device (I'm targeting a Pixel).</p>\n<h3>What I've tried</h3>\n<p>Following the instructions on building TensorFlow Java from source <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/java/README.md\">here</a> and on Android TensorFlow support <a href=\"https://github.com/tensorflow/tensorflow/blob/r1.1/tensorflow/contrib/android/README.md\">here</a>, (relative to my checked out TensorFlow repo at <code>~/Android/tensorflow-master</code>) I updated my <code>WORKSPACE</code> to include the following</p>\n<pre><code>android_sdk_repository(\n    name = \"androidsdk\",\n    api_level = 25,\n    build_tools_version = \"25.0.3\",\n    path = \"~/Android/Sdk/\",\n)\n\nandroid_ndk_repository(\n    name=\"androidndk\",\n    path=\"~/Android/android-ndk-r12b/\",\n    api_level=24)\n</code></pre>\n<p>I ran <code>./configure</code> and supplied the following options</p>\n<pre><code>Please specify the location of python. [Default is /usr/bin/python]: \nFound possible Python library paths:\n  /usr/local/lib/python2.7/dist-packages\n  /usr/lib/python2.7/dist-packages\n  /usr/local/buildtools/current/sitecustomize\nPlease input the desired Python library path to use.  Default is [/usr/local/lib/python2.7/dist-packages]\n\nUsing python library path: /usr/local/lib/python2.7/dist-packages\nDo you wish to build TensorFlow with MKL support? [y/N] n\nNo MKL support will be enabled for TensorFlow\nPlease specify optimization flags to use during compilation when bazel option \"--config=opt\" is specified [Default is -march=native]: -std=c++11 -march=armv8-a\nDo you wish to use jemalloc as the malloc implementation? [Y/n] n\njemalloc disabled\nDo you wish to build TensorFlow with Google Cloud Platform support? [y/N] n\nNo Google Cloud Platform support will be enabled for TensorFlow\nDo you wish to build TensorFlow with Hadoop File System support? [y/N] n\nNo Hadoop File System support will be enabled for TensorFlow\nDo you wish to build TensorFlow with the XLA just-in-time compiler (experimental)? [y/N] n\nNo XLA JIT support will be enabled for TensorFlow\nDo you wish to build TensorFlow with VERBS support? [y/N] n\nNo VERBS support will be enabled for TensorFlow\nDo you wish to build TensorFlow with OpenCL support? [y/N] n\nNo OpenCL support will be enabled for TensorFlow\nDo you wish to build TensorFlow with CUDA support? [y/N] n\nNo CUDA support will be enabled for TensorFlow\n</code></pre>\n<p>and then I attempted to build the relevant libraries with the following command</p>\n<pre><code>bazel build -c opt --config opt \\\n //tensorflow/java:tensorflow //tensorflow/java:libtensorflow_jni \\\n --crosstool_top=//external:android/crosstool \\\n --host_crosstool_top=@bazel_tools//tools/cpp:toolchain \\\n --cpu=arm64-v8a\n</code></pre>\n<h3>What happens</h3>\n<p>I get a bunch of warnings (stdout from the above command: <a href=\"https://github.com/tensorflow/tensorflow/files/991284/log.txt\">log.txt</a>) and the following linking error</p>\n<p><code>ERROR: /usr/local/google/home/tsamson/Android/tensorflow-master/tensorflow/java/BUILD:142:1: Linking of rule '//tensorflow/java:libtensorflow_jni.so' failed: link_dynamic_library.sh failed: error executing command external/bazel_tools/tools/cpp/link_dynamic_library.sh no ignored ignored ignored external/androidndk/ndk/toolchains/aarch64-linux-android-4.9/prebuilt/linux-x86_64/bin/aarch64-linux-android-gcc ... (remaining 38 argument(s) skipped): com.google.devtools.build.lib.shell.BadExitStatusException: Process exited with status 1.</code></p>\n<p>(I get the same errors building for <code>armeabi-v7a</code>. I am able to build the above targets for my Ubuntu machine by doing the above (instead using <code>-march=native</code> and the default <code>--crosstool_top</code>, <code>--host_crosstool_top</code>, and <code>--cpu</code> flags), but I want to compile for Android \u263a.)</p>\n<h3>Environment</h3>\n<p>Here's the output of <code>tools/tf_env_collect.sh</code> (which had to be run from a directory other than <code>tensorflow-master</code> to keep from getting a tensorflow import error):</p>\n<pre><code>== cat /etc/issue ===============================================\nVERSION=\"14.04.5 LTS, Trusty Tahr\"\nVERSION_ID=\"14.04\"\n\n== are we in docker =============================================\nNo\n\n== compiler =====================================================\nc++ (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4\nCopyright (C) 2013 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n\n== uname -a =====================================================\n\n== check pips ===================================================\nnumpy (1.12.1)\nprotobuf (3.3.0)\ntensorflow (1.1.0)\n\n== check for virtualenv =========================================\nFalse\n\n== tensorflow import ============================================\ntf.VERSION = 1.1.0\ntf.GIT_VERSION = v1.1.0-rc0-61-g1ec6ed5\ntf.COMPILER_VERSION = v1.1.0-rc0-61-g1ec6ed5\nSanity check: array([1], dtype=int32)\n\n== env ==========================================================\nLD_LIBRARY_PATH is unset\nDYLD_LIBRARY_PATH is unset\n\n== nvidia-smi ===================================================\nWed May 10 13:42:21 2017       \n+-----------------------------------------------------------------------------+\n| NVIDIA-SMI 367.57                 Driver Version: 367.57                    |\n|-------------------------------+----------------------+----------------------+\n| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n|===============================+======================+======================|\n|   0  Quadro K1200        On   | 0000:01:00.0      On |                  N/A |\n| 39%   45C    P8     1W /  35W |    553MiB /  4016MiB |      0%      Default |\n+-------------------------------+----------------------+----------------------+\n                                                                               \n+-----------------------------------------------------------------------------+\n| Processes:                                                       GPU Memory |\n|  GPU       PID  Type  Process name                               Usage      |\n|=============================================================================|\n|    0      3426    G   /usr/lib/xorg/Xorg                             331MiB |\n|    0      4959    G   cinnamon                                        61MiB |\n|    0      8578    G   /proc/self/exe                                 158MiB |\n+-----------------------------------------------------------------------------+\n\n== cuda libs  ===================================================\n\n</code></pre>", "body_text": "Problem\nI'm trying to build TensorFlow Java and the relevant native libraries for an Android device (I'm targeting a Pixel).\nWhat I've tried\nFollowing the instructions on building TensorFlow Java from source here and on Android TensorFlow support here, (relative to my checked out TensorFlow repo at ~/Android/tensorflow-master) I updated my WORKSPACE to include the following\nandroid_sdk_repository(\n    name = \"androidsdk\",\n    api_level = 25,\n    build_tools_version = \"25.0.3\",\n    path = \"~/Android/Sdk/\",\n)\n\nandroid_ndk_repository(\n    name=\"androidndk\",\n    path=\"~/Android/android-ndk-r12b/\",\n    api_level=24)\n\nI ran ./configure and supplied the following options\nPlease specify the location of python. [Default is /usr/bin/python]: \nFound possible Python library paths:\n  /usr/local/lib/python2.7/dist-packages\n  /usr/lib/python2.7/dist-packages\n  /usr/local/buildtools/current/sitecustomize\nPlease input the desired Python library path to use.  Default is [/usr/local/lib/python2.7/dist-packages]\n\nUsing python library path: /usr/local/lib/python2.7/dist-packages\nDo you wish to build TensorFlow with MKL support? [y/N] n\nNo MKL support will be enabled for TensorFlow\nPlease specify optimization flags to use during compilation when bazel option \"--config=opt\" is specified [Default is -march=native]: -std=c++11 -march=armv8-a\nDo you wish to use jemalloc as the malloc implementation? [Y/n] n\njemalloc disabled\nDo you wish to build TensorFlow with Google Cloud Platform support? [y/N] n\nNo Google Cloud Platform support will be enabled for TensorFlow\nDo you wish to build TensorFlow with Hadoop File System support? [y/N] n\nNo Hadoop File System support will be enabled for TensorFlow\nDo you wish to build TensorFlow with the XLA just-in-time compiler (experimental)? [y/N] n\nNo XLA JIT support will be enabled for TensorFlow\nDo you wish to build TensorFlow with VERBS support? [y/N] n\nNo VERBS support will be enabled for TensorFlow\nDo you wish to build TensorFlow with OpenCL support? [y/N] n\nNo OpenCL support will be enabled for TensorFlow\nDo you wish to build TensorFlow with CUDA support? [y/N] n\nNo CUDA support will be enabled for TensorFlow\n\nand then I attempted to build the relevant libraries with the following command\nbazel build -c opt --config opt \\\n //tensorflow/java:tensorflow //tensorflow/java:libtensorflow_jni \\\n --crosstool_top=//external:android/crosstool \\\n --host_crosstool_top=@bazel_tools//tools/cpp:toolchain \\\n --cpu=arm64-v8a\n\nWhat happens\nI get a bunch of warnings (stdout from the above command: log.txt) and the following linking error\nERROR: /usr/local/google/home/tsamson/Android/tensorflow-master/tensorflow/java/BUILD:142:1: Linking of rule '//tensorflow/java:libtensorflow_jni.so' failed: link_dynamic_library.sh failed: error executing command external/bazel_tools/tools/cpp/link_dynamic_library.sh no ignored ignored ignored external/androidndk/ndk/toolchains/aarch64-linux-android-4.9/prebuilt/linux-x86_64/bin/aarch64-linux-android-gcc ... (remaining 38 argument(s) skipped): com.google.devtools.build.lib.shell.BadExitStatusException: Process exited with status 1.\n(I get the same errors building for armeabi-v7a. I am able to build the above targets for my Ubuntu machine by doing the above (instead using -march=native and the default --crosstool_top, --host_crosstool_top, and --cpu flags), but I want to compile for Android \u263a.)\nEnvironment\nHere's the output of tools/tf_env_collect.sh (which had to be run from a directory other than tensorflow-master to keep from getting a tensorflow import error):\n== cat /etc/issue ===============================================\nVERSION=\"14.04.5 LTS, Trusty Tahr\"\nVERSION_ID=\"14.04\"\n\n== are we in docker =============================================\nNo\n\n== compiler =====================================================\nc++ (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4\nCopyright (C) 2013 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n\n== uname -a =====================================================\n\n== check pips ===================================================\nnumpy (1.12.1)\nprotobuf (3.3.0)\ntensorflow (1.1.0)\n\n== check for virtualenv =========================================\nFalse\n\n== tensorflow import ============================================\ntf.VERSION = 1.1.0\ntf.GIT_VERSION = v1.1.0-rc0-61-g1ec6ed5\ntf.COMPILER_VERSION = v1.1.0-rc0-61-g1ec6ed5\nSanity check: array([1], dtype=int32)\n\n== env ==========================================================\nLD_LIBRARY_PATH is unset\nDYLD_LIBRARY_PATH is unset\n\n== nvidia-smi ===================================================\nWed May 10 13:42:21 2017       \n+-----------------------------------------------------------------------------+\n| NVIDIA-SMI 367.57                 Driver Version: 367.57                    |\n|-------------------------------+----------------------+----------------------+\n| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n|===============================+======================+======================|\n|   0  Quadro K1200        On   | 0000:01:00.0      On |                  N/A |\n| 39%   45C    P8     1W /  35W |    553MiB /  4016MiB |      0%      Default |\n+-------------------------------+----------------------+----------------------+\n                                                                               \n+-----------------------------------------------------------------------------+\n| Processes:                                                       GPU Memory |\n|  GPU       PID  Type  Process name                               Usage      |\n|=============================================================================|\n|    0      3426    G   /usr/lib/xorg/Xorg                             331MiB |\n|    0      4959    G   cinnamon                                        61MiB |\n|    0      8578    G   /proc/self/exe                                 158MiB |\n+-----------------------------------------------------------------------------+\n\n== cuda libs  ===================================================", "body": "### Problem\r\n\r\nI'm trying to build TensorFlow Java and the relevant native libraries for an Android device (I'm targeting a Pixel).\r\n\r\n### What I've tried\r\n\r\nFollowing the instructions on building TensorFlow Java from source [here](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/java/README.md) and on Android TensorFlow support [here](https://github.com/tensorflow/tensorflow/blob/r1.1/tensorflow/contrib/android/README.md), (relative to my checked out TensorFlow repo at `~/Android/tensorflow-master`) I updated my `WORKSPACE` to include the following\r\n\r\n```\r\nandroid_sdk_repository(\r\n    name = \"androidsdk\",\r\n    api_level = 25,\r\n    build_tools_version = \"25.0.3\",\r\n    path = \"~/Android/Sdk/\",\r\n)\r\n\r\nandroid_ndk_repository(\r\n    name=\"androidndk\",\r\n    path=\"~/Android/android-ndk-r12b/\",\r\n    api_level=24)\r\n```\r\n\r\nI ran `./configure` and supplied the following options\r\n\r\n```\r\nPlease specify the location of python. [Default is /usr/bin/python]: \r\nFound possible Python library paths:\r\n  /usr/local/lib/python2.7/dist-packages\r\n  /usr/lib/python2.7/dist-packages\r\n  /usr/local/buildtools/current/sitecustomize\r\nPlease input the desired Python library path to use.  Default is [/usr/local/lib/python2.7/dist-packages]\r\n\r\nUsing python library path: /usr/local/lib/python2.7/dist-packages\r\nDo you wish to build TensorFlow with MKL support? [y/N] n\r\nNo MKL support will be enabled for TensorFlow\r\nPlease specify optimization flags to use during compilation when bazel option \"--config=opt\" is specified [Default is -march=native]: -std=c++11 -march=armv8-a\r\nDo you wish to use jemalloc as the malloc implementation? [Y/n] n\r\njemalloc disabled\r\nDo you wish to build TensorFlow with Google Cloud Platform support? [y/N] n\r\nNo Google Cloud Platform support will be enabled for TensorFlow\r\nDo you wish to build TensorFlow with Hadoop File System support? [y/N] n\r\nNo Hadoop File System support will be enabled for TensorFlow\r\nDo you wish to build TensorFlow with the XLA just-in-time compiler (experimental)? [y/N] n\r\nNo XLA JIT support will be enabled for TensorFlow\r\nDo you wish to build TensorFlow with VERBS support? [y/N] n\r\nNo VERBS support will be enabled for TensorFlow\r\nDo you wish to build TensorFlow with OpenCL support? [y/N] n\r\nNo OpenCL support will be enabled for TensorFlow\r\nDo you wish to build TensorFlow with CUDA support? [y/N] n\r\nNo CUDA support will be enabled for TensorFlow\r\n```\r\n\r\nand then I attempted to build the relevant libraries with the following command\r\n\r\n```\r\nbazel build -c opt --config opt \\\r\n //tensorflow/java:tensorflow //tensorflow/java:libtensorflow_jni \\\r\n --crosstool_top=//external:android/crosstool \\\r\n --host_crosstool_top=@bazel_tools//tools/cpp:toolchain \\\r\n --cpu=arm64-v8a\r\n```\r\n\r\n### What happens\r\n\r\nI get a bunch of warnings (stdout from the above command: [log.txt](https://github.com/tensorflow/tensorflow/files/991284/log.txt)) and the following linking error\r\n\r\n`ERROR: /usr/local/google/home/tsamson/Android/tensorflow-master/tensorflow/java/BUILD:142:1: Linking of rule '//tensorflow/java:libtensorflow_jni.so' failed: link_dynamic_library.sh failed: error executing command external/bazel_tools/tools/cpp/link_dynamic_library.sh no ignored ignored ignored external/androidndk/ndk/toolchains/aarch64-linux-android-4.9/prebuilt/linux-x86_64/bin/aarch64-linux-android-gcc ... (remaining 38 argument(s) skipped): com.google.devtools.build.lib.shell.BadExitStatusException: Process exited with status 1.`\r\n\r\n(I get the same errors building for `armeabi-v7a`. I am able to build the above targets for my Ubuntu machine by doing the above (instead using `-march=native` and the default `--crosstool_top`, `--host_crosstool_top`, and `--cpu` flags), but I want to compile for Android \u263a.)\r\n\r\n### Environment\r\n\r\nHere's the output of `tools/tf_env_collect.sh` (which had to be run from a directory other than `tensorflow-master` to keep from getting a tensorflow import error):\r\n\r\n```\r\n== cat /etc/issue ===============================================\r\nVERSION=\"14.04.5 LTS, Trusty Tahr\"\r\nVERSION_ID=\"14.04\"\r\n\r\n== are we in docker =============================================\r\nNo\r\n\r\n== compiler =====================================================\r\nc++ (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4\r\nCopyright (C) 2013 Free Software Foundation, Inc.\r\nThis is free software; see the source for copying conditions.  There is NO\r\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n\r\n\r\n== uname -a =====================================================\r\n\r\n== check pips ===================================================\r\nnumpy (1.12.1)\r\nprotobuf (3.3.0)\r\ntensorflow (1.1.0)\r\n\r\n== check for virtualenv =========================================\r\nFalse\r\n\r\n== tensorflow import ============================================\r\ntf.VERSION = 1.1.0\r\ntf.GIT_VERSION = v1.1.0-rc0-61-g1ec6ed5\r\ntf.COMPILER_VERSION = v1.1.0-rc0-61-g1ec6ed5\r\nSanity check: array([1], dtype=int32)\r\n\r\n== env ==========================================================\r\nLD_LIBRARY_PATH is unset\r\nDYLD_LIBRARY_PATH is unset\r\n\r\n== nvidia-smi ===================================================\r\nWed May 10 13:42:21 2017       \r\n+-----------------------------------------------------------------------------+\r\n| NVIDIA-SMI 367.57                 Driver Version: 367.57                    |\r\n|-------------------------------+----------------------+----------------------+\r\n| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\r\n| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\r\n|===============================+======================+======================|\r\n|   0  Quadro K1200        On   | 0000:01:00.0      On |                  N/A |\r\n| 39%   45C    P8     1W /  35W |    553MiB /  4016MiB |      0%      Default |\r\n+-------------------------------+----------------------+----------------------+\r\n                                                                               \r\n+-----------------------------------------------------------------------------+\r\n| Processes:                                                       GPU Memory |\r\n|  GPU       PID  Type  Process name                               Usage      |\r\n|=============================================================================|\r\n|    0      3426    G   /usr/lib/xorg/Xorg                             331MiB |\r\n|    0      4959    G   cinnamon                                        61MiB |\r\n|    0      8578    G   /proc/self/exe                                 158MiB |\r\n+-----------------------------------------------------------------------------+\r\n\r\n== cuda libs  ===================================================\r\n\r\n```\r\n"}