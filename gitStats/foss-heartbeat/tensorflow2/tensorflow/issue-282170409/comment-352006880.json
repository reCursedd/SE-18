{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/352006880", "html_url": "https://github.com/tensorflow/tensorflow/pull/15368#issuecomment-352006880", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15368", "id": 352006880, "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjAwNjg4MA==", "user": {"login": "Androbin", "id": 16437156, "node_id": "MDQ6VXNlcjE2NDM3MTU2", "avatar_url": "https://avatars1.githubusercontent.com/u/16437156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Androbin", "html_url": "https://github.com/Androbin", "followers_url": "https://api.github.com/users/Androbin/followers", "following_url": "https://api.github.com/users/Androbin/following{/other_user}", "gists_url": "https://api.github.com/users/Androbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Androbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Androbin/subscriptions", "organizations_url": "https://api.github.com/users/Androbin/orgs", "repos_url": "https://api.github.com/users/Androbin/repos", "events_url": "https://api.github.com/users/Androbin/events{/privacy}", "received_events_url": "https://api.github.com/users/Androbin/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-15T13:34:19Z", "updated_at": "2017-12-15T17:59:35Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=49262\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jart\">@jart</a> The tests of PR <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"279891310\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/15166\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/tensorflow/tensorflow/pull/15166/hovercard\" href=\"https://github.com/tensorflow/tensorflow/pull/15166\">#15166</a> match the lines inside some text files against the total directory structure to spot invalid paths as well as ring bells on non-existent but expected entries.</p>\n<p>To do so, I have included <code>//tensorflow:all_opensource_files</code> as bazel <code>data</code> dependency which works just fine in principle. Although I had to work around Python resolving all imports (even generated) to the <code>runfiles</code> directory.</p>\n<p>If you have a way at hand to access (a summary of) the directory structure (file contents not needed), I am of course all open ears.</p>", "body_text": "@jart The tests of PR #15166 match the lines inside some text files against the total directory structure to spot invalid paths as well as ring bells on non-existent but expected entries.\nTo do so, I have included //tensorflow:all_opensource_files as bazel data dependency which works just fine in principle. Although I had to work around Python resolving all imports (even generated) to the runfiles directory.\nIf you have a way at hand to access (a summary of) the directory structure (file contents not needed), I am of course all open ears.", "body": "@jart The tests of PR #15166 match the lines inside some text files against the total directory structure to spot invalid paths as well as ring bells on non-existent but expected entries.\r\n\r\nTo do so, I have included `//tensorflow:all_opensource_files` as bazel `data` dependency which works just fine in principle. Although I had to work around Python resolving all imports (even generated) to the `runfiles` directory.\r\n\r\nIf you have a way at hand to access (a summary of) the directory structure (file contents not needed), I am of course all open ears."}