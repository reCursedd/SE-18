{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/353480777", "html_url": "https://github.com/tensorflow/tensorflow/pull/13312#issuecomment-353480777", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13312", "id": 353480777, "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzQ4MDc3Nw==", "user": {"login": "steven-hh-ding", "id": 8474647, "node_id": "MDQ6VXNlcjg0NzQ2NDc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8474647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steven-hh-ding", "html_url": "https://github.com/steven-hh-ding", "followers_url": "https://api.github.com/users/steven-hh-ding/followers", "following_url": "https://api.github.com/users/steven-hh-ding/following{/other_user}", "gists_url": "https://api.github.com/users/steven-hh-ding/gists{/gist_id}", "starred_url": "https://api.github.com/users/steven-hh-ding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steven-hh-ding/subscriptions", "organizations_url": "https://api.github.com/users/steven-hh-ding/orgs", "repos_url": "https://api.github.com/users/steven-hh-ding/repos", "events_url": "https://api.github.com/users/steven-hh-ding/events{/privacy}", "received_events_url": "https://api.github.com/users/steven-hh-ding/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-21T23:10:59Z", "updated_at": "2017-12-21T23:10:59Z", "author_association": "NONE", "body_html": "<p>Oh cool. Good to know. Thank you <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1794715\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ebrevdo\">@ebrevdo</a> . <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4805513\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/guillaumekln\">@guillaumekln</a> so we better use range and tile to have the indexes  like below. Please double check. Thanks!</p>\n<div class=\"highlight highlight-source-python\"><pre>t_ind <span class=\"pl-k\">=</span> tf.tile(tf.reshape(tf.range(time), [<span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>]), [<span class=\"pl-c1\">1</span>, batch, beam, <span class=\"pl-c1\">1</span>])\nbe_ind <span class=\"pl-k\">=</span> tf.tile(tf.reshape(tf.range(batch), [<span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>]), [<span class=\"pl-c1\">1</span>, time, beam, <span class=\"pl-c1\">1</span>])\nbe_ind <span class=\"pl-k\">=</span> tf.transpose(be_ind, <span class=\"pl-v\">perm</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">0</span>,<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">3</span>])  \nt_be_ind <span class=\"pl-k\">=</span> tf.concat([t_ind, be_ind, tf.expand_dims(beam_ids, <span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>)], <span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>)\n\ntf.gather_nd(a, t_be_ind)</pre></div>", "body_text": "Oh cool. Good to know. Thank you @ebrevdo . @guillaumekln so we better use range and tile to have the indexes  like below. Please double check. Thanks!\nt_ind = tf.tile(tf.reshape(tf.range(time), [-1, 1, 1, 1]), [1, batch, beam, 1])\nbe_ind = tf.tile(tf.reshape(tf.range(batch), [-1, 1, 1, 1]), [1, time, beam, 1])\nbe_ind = tf.transpose(be_ind, perm=[1,0,2,3])  \nt_be_ind = tf.concat([t_ind, be_ind, tf.expand_dims(beam_ids, -1)], -1)\n\ntf.gather_nd(a, t_be_ind)", "body": "Oh cool. Good to know. Thank you @ebrevdo . @guillaumekln so we better use range and tile to have the indexes  like below. Please double check. Thanks!\r\n\r\n```python\r\nt_ind = tf.tile(tf.reshape(tf.range(time), [-1, 1, 1, 1]), [1, batch, beam, 1])\r\nbe_ind = tf.tile(tf.reshape(tf.range(batch), [-1, 1, 1, 1]), [1, time, beam, 1])\r\nbe_ind = tf.transpose(be_ind, perm=[1,0,2,3])  \r\nt_be_ind = tf.concat([t_ind, be_ind, tf.expand_dims(beam_ids, -1)], -1)\r\n\r\ntf.gather_nd(a, t_be_ind)\r\n```\r\n\r\n"}