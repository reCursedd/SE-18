{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22141", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22141/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22141/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22141/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/22141", "id": 358004665, "node_id": "MDU6SXNzdWUzNTgwMDQ2NjU=", "number": 22141, "title": "Predictions from keras h5 file is different than its tflite version", "user": {"login": "hsm207", "id": 2398765, "node_id": "MDQ6VXNlcjIzOTg3NjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2398765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hsm207", "html_url": "https://github.com/hsm207", "followers_url": "https://api.github.com/users/hsm207/followers", "following_url": "https://api.github.com/users/hsm207/following{/other_user}", "gists_url": "https://api.github.com/users/hsm207/gists{/gist_id}", "starred_url": "https://api.github.com/users/hsm207/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hsm207/subscriptions", "organizations_url": "https://api.github.com/users/hsm207/orgs", "repos_url": "https://api.github.com/users/hsm207/repos", "events_url": "https://api.github.com/users/hsm207/events{/privacy}", "received_events_url": "https://api.github.com/users/hsm207/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 750616506, "node_id": "MDU6TGFiZWw3NTA2MTY1MDY=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:lite", "name": "comp:lite", "color": "0052cc", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "gargn", "id": 1900612, "node_id": "MDQ6VXNlcjE5MDA2MTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1900612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gargn", "html_url": "https://github.com/gargn", "followers_url": "https://api.github.com/users/gargn/followers", "following_url": "https://api.github.com/users/gargn/following{/other_user}", "gists_url": "https://api.github.com/users/gargn/gists{/gist_id}", "starred_url": "https://api.github.com/users/gargn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gargn/subscriptions", "organizations_url": "https://api.github.com/users/gargn/orgs", "repos_url": "https://api.github.com/users/gargn/repos", "events_url": "https://api.github.com/users/gargn/events{/privacy}", "received_events_url": "https://api.github.com/users/gargn/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "gargn", "id": 1900612, "node_id": "MDQ6VXNlcjE5MDA2MTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1900612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gargn", "html_url": "https://github.com/gargn", "followers_url": "https://api.github.com/users/gargn/followers", "following_url": "https://api.github.com/users/gargn/following{/other_user}", "gists_url": "https://api.github.com/users/gargn/gists{/gist_id}", "starred_url": "https://api.github.com/users/gargn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gargn/subscriptions", "organizations_url": "https://api.github.com/users/gargn/orgs", "repos_url": "https://api.github.com/users/gargn/repos", "events_url": "https://api.github.com/users/gargn/events{/privacy}", "received_events_url": "https://api.github.com/users/gargn/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-09-07T10:08:31Z", "updated_at": "2018-09-12T14:25:51Z", "closed_at": "2018-09-12T14:25:50Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Please go to Stack Overflow for help and support:</p>\n<p><a href=\"https://stackoverflow.com/questions/tagged/tensorflow\" rel=\"nofollow\">https://stackoverflow.com/questions/tagged/tensorflow</a></p>\n<p>If you open a GitHub issue, here is our policy:</p>\n<ol>\n<li>It must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).</li>\n<li>The form below must be filled out.</li>\n<li>It shouldn't be a TensorBoard issue. Those go <a href=\"https://github.com/tensorflow/tensorboard/issues\">here</a>.</li>\n</ol>\n<p><strong>Here's why we have that policy</strong>: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.</p>\n<hr>\n<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Ubuntu 18.04.1 LTS</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>: No</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: Binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.10.1</li>\n<li><strong>Python version</strong>: 3.6.5</li>\n<li><strong>Bazel version (if compiling from source)</strong>: NA</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: NA</li>\n<li><strong>CUDA/cuDNN version</strong>: NA</li>\n<li><strong>GPU model and memory</strong>: NA</li>\n<li><strong>Exact command to reproduce</strong>: See source code</li>\n</ul>\n<p>You can collect some of this information using our environment capture script:</p>\n<p><a href=\"https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\">https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh</a></p>\n<p>You can obtain the TensorFlow version with</p>\n<p>python -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"</p>\n<h3>Describe the problem</h3>\n<p>I am following this video to convert my ML model to TensorFLow Lite:</p>\n<p><a href=\"https://www.youtube.com/watch?v=MZx1fhbL2q4\" rel=\"nofollow\">https://www.youtube.com/watch?v=MZx1fhbL2q4</a></p>\n<p>I noticed that if I am making predictions by reading the saved h5 file, the result is correct. This is not the case when I make predictions by reading the saved tflite file. I expect the predictions from both files to be the same.</p>\n<h3>Source code / logs</h3>\n<pre><code>import numpy as np\nfrom tensorflow import keras\nfrom tensorflow.contrib import lite\n\nmodel = keras.Sequential([keras.layers.Dense(units=1, input_shape=[1])])\nmodel.compile(optimizer='sgd', loss='mean_squared_error')\n\nxs = np.array([-1.0, 0.0, 1.0, 2.0, 3.0, 4.0], dtype=np.float32)\nys = np.array([-3.0, -1.0, 0.0, 3.0, 5.0, 7.0], dtype=np.float32)\n\nmodel.fit(xs, ys, epochs=500)\n\n# Write out to keras save file\nkeras_file = 'linear.h5'\nkeras.models.save_model(model, keras_file)\n\n# Convert the keras file to TensorFlow Lite\nconverter = lite.TocoConverter.from_keras_model_file(keras_file)\ntflite_model = converter.convert()\nopen('linear.tflite', 'wb').write(tflite_model)\n\n# input to predict\nmodel_input = np.array([10.0], dtype=np.float32)\n\n# make predictions from the h5 file\nh5_model = keras.models.load_model(keras_file)\nh5_prediction = h5_model.predict(model_input)\n\n# make predictions fromm the tflite file\ninterpreter = lite.Interpreter(model_path='linear.tflite')\ninterpreter.allocate_tensors()\ninput_details = interpreter.get_input_details()\noutput_details = interpreter.get_output_details()\ninterpreter.set_tensor(input_details[0]['index'], [model_input])\ninterpreter.invoke()\ntflite_prediction = interpreter.get_tensor(output_details[0]['index'])\n\n# h5_prediction will always be around 19, which is correct\nprint('Prediction from h5 model: {}'.format(h5_prediction))\n\n# tflite_prediction is some random value\nprint('Prediction from tflite model: {}'.format(tflite_prediction))\n</code></pre>", "body_text": "Please go to Stack Overflow for help and support:\nhttps://stackoverflow.com/questions/tagged/tensorflow\nIf you open a GitHub issue, here is our policy:\n\nIt must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).\nThe form below must be filled out.\nIt shouldn't be a TensorBoard issue. Those go here.\n\nHere's why we have that policy: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\n\nSystem information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 18.04.1 LTS\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: No\nTensorFlow installed from (source or binary): Binary\nTensorFlow version (use command below): 1.10.1\nPython version: 3.6.5\nBazel version (if compiling from source): NA\nGCC/Compiler version (if compiling from source): NA\nCUDA/cuDNN version: NA\nGPU model and memory: NA\nExact command to reproduce: See source code\n\nYou can collect some of this information using our environment capture script:\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\nYou can obtain the TensorFlow version with\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\nDescribe the problem\nI am following this video to convert my ML model to TensorFLow Lite:\nhttps://www.youtube.com/watch?v=MZx1fhbL2q4\nI noticed that if I am making predictions by reading the saved h5 file, the result is correct. This is not the case when I make predictions by reading the saved tflite file. I expect the predictions from both files to be the same.\nSource code / logs\nimport numpy as np\nfrom tensorflow import keras\nfrom tensorflow.contrib import lite\n\nmodel = keras.Sequential([keras.layers.Dense(units=1, input_shape=[1])])\nmodel.compile(optimizer='sgd', loss='mean_squared_error')\n\nxs = np.array([-1.0, 0.0, 1.0, 2.0, 3.0, 4.0], dtype=np.float32)\nys = np.array([-3.0, -1.0, 0.0, 3.0, 5.0, 7.0], dtype=np.float32)\n\nmodel.fit(xs, ys, epochs=500)\n\n# Write out to keras save file\nkeras_file = 'linear.h5'\nkeras.models.save_model(model, keras_file)\n\n# Convert the keras file to TensorFlow Lite\nconverter = lite.TocoConverter.from_keras_model_file(keras_file)\ntflite_model = converter.convert()\nopen('linear.tflite', 'wb').write(tflite_model)\n\n# input to predict\nmodel_input = np.array([10.0], dtype=np.float32)\n\n# make predictions from the h5 file\nh5_model = keras.models.load_model(keras_file)\nh5_prediction = h5_model.predict(model_input)\n\n# make predictions fromm the tflite file\ninterpreter = lite.Interpreter(model_path='linear.tflite')\ninterpreter.allocate_tensors()\ninput_details = interpreter.get_input_details()\noutput_details = interpreter.get_output_details()\ninterpreter.set_tensor(input_details[0]['index'], [model_input])\ninterpreter.invoke()\ntflite_prediction = interpreter.get_tensor(output_details[0]['index'])\n\n# h5_prediction will always be around 19, which is correct\nprint('Prediction from h5 model: {}'.format(h5_prediction))\n\n# tflite_prediction is some random value\nprint('Prediction from tflite model: {}'.format(tflite_prediction))", "body": "Please go to Stack Overflow for help and support:\r\n\r\nhttps://stackoverflow.com/questions/tagged/tensorflow\r\n\r\nIf you open a GitHub issue, here is our policy:\r\n\r\n1. It must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).\r\n2. The form below must be filled out.\r\n3. It shouldn't be a TensorBoard issue. Those go [here](https://github.com/tensorflow/tensorboard/issues).\r\n\r\n**Here's why we have that policy**: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 18.04.1 LTS\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**: No\r\n- **TensorFlow installed from (source or binary)**: Binary\r\n- **TensorFlow version (use command below)**: 1.10.1\r\n- **Python version**: 3.6.5\r\n- **Bazel version (if compiling from source)**: NA\r\n- **GCC/Compiler version (if compiling from source)**: NA\r\n- **CUDA/cuDNN version**: NA\r\n- **GPU model and memory**: NA\r\n- **Exact command to reproduce**: See source code\r\n\r\nYou can collect some of this information using our environment capture script:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\nYou can obtain the TensorFlow version with\r\n\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n\r\n### Describe the problem\r\n\r\nI am following this video to convert my ML model to TensorFLow Lite:\r\n\r\nhttps://www.youtube.com/watch?v=MZx1fhbL2q4\r\n\r\nI noticed that if I am making predictions by reading the saved h5 file, the result is correct. This is not the case when I make predictions by reading the saved tflite file. I expect the predictions from both files to be the same.\r\n\r\n### Source code / logs\r\n```\r\nimport numpy as np\r\nfrom tensorflow import keras\r\nfrom tensorflow.contrib import lite\r\n\r\nmodel = keras.Sequential([keras.layers.Dense(units=1, input_shape=[1])])\r\nmodel.compile(optimizer='sgd', loss='mean_squared_error')\r\n\r\nxs = np.array([-1.0, 0.0, 1.0, 2.0, 3.0, 4.0], dtype=np.float32)\r\nys = np.array([-3.0, -1.0, 0.0, 3.0, 5.0, 7.0], dtype=np.float32)\r\n\r\nmodel.fit(xs, ys, epochs=500)\r\n\r\n# Write out to keras save file\r\nkeras_file = 'linear.h5'\r\nkeras.models.save_model(model, keras_file)\r\n\r\n# Convert the keras file to TensorFlow Lite\r\nconverter = lite.TocoConverter.from_keras_model_file(keras_file)\r\ntflite_model = converter.convert()\r\nopen('linear.tflite', 'wb').write(tflite_model)\r\n\r\n# input to predict\r\nmodel_input = np.array([10.0], dtype=np.float32)\r\n\r\n# make predictions from the h5 file\r\nh5_model = keras.models.load_model(keras_file)\r\nh5_prediction = h5_model.predict(model_input)\r\n\r\n# make predictions fromm the tflite file\r\ninterpreter = lite.Interpreter(model_path='linear.tflite')\r\ninterpreter.allocate_tensors()\r\ninput_details = interpreter.get_input_details()\r\noutput_details = interpreter.get_output_details()\r\ninterpreter.set_tensor(input_details[0]['index'], [model_input])\r\ninterpreter.invoke()\r\ntflite_prediction = interpreter.get_tensor(output_details[0]['index'])\r\n\r\n# h5_prediction will always be around 19, which is correct\r\nprint('Prediction from h5 model: {}'.format(h5_prediction))\r\n\r\n# tflite_prediction is some random value\r\nprint('Prediction from tflite model: {}'.format(tflite_prediction))\r\n```\r\n"}