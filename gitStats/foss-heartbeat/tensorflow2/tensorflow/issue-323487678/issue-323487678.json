{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19312", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19312/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19312/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19312/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19312", "id": 323487678, "node_id": "MDU6SXNzdWUzMjM0ODc2Nzg=", "number": 19312, "title": "std::to_string issue when compile tensorflow lite with android ndk", "user": {"login": "xiechao4", "id": 32950686, "node_id": "MDQ6VXNlcjMyOTUwNjg2", "avatar_url": "https://avatars3.githubusercontent.com/u/32950686?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xiechao4", "html_url": "https://github.com/xiechao4", "followers_url": "https://api.github.com/users/xiechao4/followers", "following_url": "https://api.github.com/users/xiechao4/following{/other_user}", "gists_url": "https://api.github.com/users/xiechao4/gists{/gist_id}", "starred_url": "https://api.github.com/users/xiechao4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xiechao4/subscriptions", "organizations_url": "https://api.github.com/users/xiechao4/orgs", "repos_url": "https://api.github.com/users/xiechao4/repos", "events_url": "https://api.github.com/users/xiechao4/events{/privacy}", "received_events_url": "https://api.github.com/users/xiechao4/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 750616506, "node_id": "MDU6TGFiZWw3NTA2MTY1MDY=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:lite", "name": "comp:lite", "color": "0052cc", "default": false}, {"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "shashishekhar", "id": 1162712, "node_id": "MDQ6VXNlcjExNjI3MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1162712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shashishekhar", "html_url": "https://github.com/shashishekhar", "followers_url": "https://api.github.com/users/shashishekhar/followers", "following_url": "https://api.github.com/users/shashishekhar/following{/other_user}", "gists_url": "https://api.github.com/users/shashishekhar/gists{/gist_id}", "starred_url": "https://api.github.com/users/shashishekhar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shashishekhar/subscriptions", "organizations_url": "https://api.github.com/users/shashishekhar/orgs", "repos_url": "https://api.github.com/users/shashishekhar/repos", "events_url": "https://api.github.com/users/shashishekhar/events{/privacy}", "received_events_url": "https://api.github.com/users/shashishekhar/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "shashishekhar", "id": 1162712, "node_id": "MDQ6VXNlcjExNjI3MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1162712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shashishekhar", "html_url": "https://github.com/shashishekhar", "followers_url": "https://api.github.com/users/shashishekhar/followers", "following_url": "https://api.github.com/users/shashishekhar/following{/other_user}", "gists_url": "https://api.github.com/users/shashishekhar/gists{/gist_id}", "starred_url": "https://api.github.com/users/shashishekhar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shashishekhar/subscriptions", "organizations_url": "https://api.github.com/users/shashishekhar/orgs", "repos_url": "https://api.github.com/users/shashishekhar/repos", "events_url": "https://api.github.com/users/shashishekhar/events{/privacy}", "received_events_url": "https://api.github.com/users/shashishekhar/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2018-05-16T06:43:33Z", "updated_at": "2018-07-19T01:37:03Z", "closed_at": "2018-07-19T01:37:03Z", "author_association": "NONE", "body_html": "<p>I add some code in tflitedemo, and will use std::to_string, but i failed with error that<br>\nerror: no member named 'to_string' in namespace 'std'</p>\n<p>the compiling command of tflite indicates it will use gcc-4.9 include files<br>\nexternal/androidndk/ndk/toolchains/llvm/prebuilt/linux-x86_64/bin/clang .... -isystem external/androidndk/ndk/sources/cxx-stl/gnu-libstdc++/4.9/include -isystem external/androidndk/ndk/sources/cxx-stl/gnu-libstdc++/4.9/libs/x86_64/include -isystem external/androidndk/ndk/sources/cxx-stl/gnu-libstdc++/4.9/include/backward</p>\n<p>the android ndk i am using is android-ndk-r16b<br>\nin fact it has to_string definition in /home/chao/Android/android-ndk-r16b/sources/cxx-stl/llvm-libc++/include/string</p>\n<p>how can i make tflite to compile based on llvm-libc++ not gnu-libstdc++?</p>\n<p>i update with the system information</p>\n<p><strong>System information</strong><br>\n<strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow):</strong><br>\nadd std::to_string() in kernel/internal/conv.cc as:<br>\n<em>auto str = std::to_string(input-&gt;dims-&gt;size);<br>\nstd::cout &lt;&lt; str;</em><br>\n<strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04):</strong><br>\nubuntu 16<br>\n<strong>TensorFlow installed from (source or binary):</strong><br>\nsources<br>\n<strong>TensorFlow version (use command below):</strong><br>\nmaster<br>\n<strong>Python version:</strong><br>\n2.7<br>\n<strong>Bazel version (if compiling from source):</strong><br>\n0.11.1<br>\n<strong>CUDA/cuDNN version:</strong><br>\nN/A<br>\n<strong>GPU model and memory:</strong><br>\nN/A<br>\n<strong>Exact command to reproduce:</strong><br>\nbazel build --crosstool_top=//external:android/crosstool --host_crosstool_top=@bazel_tools//tools/cpp:toolchain --cxxopt='--std=c++11' //tensorflow/contrib/lite/java/demo/app/src/main:TfLiteCameraDemo --force_pic --cpu=x86_64  --verbose_failures --fat_apk_cpu=x86_64<br>\n<strong>Android NDK:</strong><br>\nandroid-ndk-r15c</p>", "body_text": "I add some code in tflitedemo, and will use std::to_string, but i failed with error that\nerror: no member named 'to_string' in namespace 'std'\nthe compiling command of tflite indicates it will use gcc-4.9 include files\nexternal/androidndk/ndk/toolchains/llvm/prebuilt/linux-x86_64/bin/clang .... -isystem external/androidndk/ndk/sources/cxx-stl/gnu-libstdc++/4.9/include -isystem external/androidndk/ndk/sources/cxx-stl/gnu-libstdc++/4.9/libs/x86_64/include -isystem external/androidndk/ndk/sources/cxx-stl/gnu-libstdc++/4.9/include/backward\nthe android ndk i am using is android-ndk-r16b\nin fact it has to_string definition in /home/chao/Android/android-ndk-r16b/sources/cxx-stl/llvm-libc++/include/string\nhow can i make tflite to compile based on llvm-libc++ not gnu-libstdc++?\ni update with the system information\nSystem information\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nadd std::to_string() in kernel/internal/conv.cc as:\nauto str = std::to_string(input->dims->size);\nstd::cout << str;\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nubuntu 16\nTensorFlow installed from (source or binary):\nsources\nTensorFlow version (use command below):\nmaster\nPython version:\n2.7\nBazel version (if compiling from source):\n0.11.1\nCUDA/cuDNN version:\nN/A\nGPU model and memory:\nN/A\nExact command to reproduce:\nbazel build --crosstool_top=//external:android/crosstool --host_crosstool_top=@bazel_tools//tools/cpp:toolchain --cxxopt='--std=c++11' //tensorflow/contrib/lite/java/demo/app/src/main:TfLiteCameraDemo --force_pic --cpu=x86_64  --verbose_failures --fat_apk_cpu=x86_64\nAndroid NDK:\nandroid-ndk-r15c", "body": "I add some code in tflitedemo, and will use std::to_string, but i failed with error that\r\nerror: no member named 'to_string' in namespace 'std'\r\n\r\nthe compiling command of tflite indicates it will use gcc-4.9 include files\r\nexternal/androidndk/ndk/toolchains/llvm/prebuilt/linux-x86_64/bin/clang .... -isystem external/androidndk/ndk/sources/cxx-stl/gnu-libstdc++/4.9/include -isystem external/androidndk/ndk/sources/cxx-stl/gnu-libstdc++/4.9/libs/x86_64/include -isystem external/androidndk/ndk/sources/cxx-stl/gnu-libstdc++/4.9/include/backward\r\n\r\nthe android ndk i am using is android-ndk-r16b\r\nin fact it has to_string definition in /home/chao/Android/android-ndk-r16b/sources/cxx-stl/llvm-libc++/include/string\r\n\r\nhow can i make tflite to compile based on llvm-libc++ not gnu-libstdc++?\r\n\r\ni update with the system information\r\n\r\n**System information**\r\n    **Have I written custom code (as opposed to using a stock example script provided in TensorFlow):**\r\n    add std::to_string() in kernel/internal/conv.cc as:\r\n      _auto str = std::to_string(input->dims->size);\r\n       std::cout << str;_\r\n    **OS Platform and Distribution (e.g., Linux Ubuntu 16.04):**\r\n    ubuntu 16\r\n    **TensorFlow installed from (source or binary):**\r\n    sources\r\n    **TensorFlow version (use command below):**\r\n    master\r\n    **Python version:**\r\n    2.7\r\n    **Bazel version (if compiling from source):**\r\n    0.11.1\r\n    **CUDA/cuDNN version:**\r\n    N/A\r\n    **GPU model and memory:**\r\n    N/A\r\n    **Exact command to reproduce:**\r\n    bazel build --crosstool_top=//external:android/crosstool --host_crosstool_top=@bazel_tools//tools/cpp:toolchain --cxxopt='--std=c++11' //tensorflow/contrib/lite/java/demo/app/src/main:TfLiteCameraDemo --force_pic --cpu=x86_64  --verbose_failures --fat_apk_cpu=x86_64\r\n    **Android NDK:**\r\n    android-ndk-r15c\r\n\r\n\r\n\r\n"}