{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7160", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7160/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7160/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7160/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/7160", "id": 204245615, "node_id": "MDU6SXNzdWUyMDQyNDU2MTU=", "number": 7160, "title": "Decrease accuracy after upgrade from v0.11 to v0.12", "user": {"login": "edgarriba", "id": 5157099, "node_id": "MDQ6VXNlcjUxNTcwOTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/5157099?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edgarriba", "html_url": "https://github.com/edgarriba", "followers_url": "https://api.github.com/users/edgarriba/followers", "following_url": "https://api.github.com/users/edgarriba/following{/other_user}", "gists_url": "https://api.github.com/users/edgarriba/gists{/gist_id}", "starred_url": "https://api.github.com/users/edgarriba/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edgarriba/subscriptions", "organizations_url": "https://api.github.com/users/edgarriba/orgs", "repos_url": "https://api.github.com/users/edgarriba/repos", "events_url": "https://api.github.com/users/edgarriba/events{/privacy}", "received_events_url": "https://api.github.com/users/edgarriba/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-01-31T09:41:51Z", "updated_at": "2017-02-07T18:30:51Z", "closed_at": "2017-02-07T18:30:51Z", "author_association": "NONE", "body_html": "<p>Hi! I've recently updated from v0.11 to v.012 using pip with CUDA 8.0, cuDNN 5.1in a TitanX under Ubuntu 16.04 LTS.</p>\n<p>During the training of a small CNN triplet network with triplet margin loss I noticed that the performance in terms of accuracy went down by a factor of ~40%.  Getting around 9% and 14% FPR95 with v0.11 and v0.12 respectively, both at epoch 30th. Notice with v0.12 the accuracy gets stuck in early epoch 10th.</p>\n<p>The optimizer that I'm using is Momentum with a LR of 1e-4 without decay policy.<br>\nI've also added the regularization term with a weight decay of 1e-4.</p>\n<p>Did you introduce any change with last versions in the optimization API that could make this difference?</p>\n<p>PD: I left here the link to the code.<br>\n<a href=\"https://github.com/vbalnt/tfeat/tree/master/tensorflow\">https://github.com/vbalnt/tfeat/tree/master/tensorflow</a><br>\nNotice that we are trying to reproduce from the original LuaTorch version.</p>", "body_text": "Hi! I've recently updated from v0.11 to v.012 using pip with CUDA 8.0, cuDNN 5.1in a TitanX under Ubuntu 16.04 LTS.\nDuring the training of a small CNN triplet network with triplet margin loss I noticed that the performance in terms of accuracy went down by a factor of ~40%.  Getting around 9% and 14% FPR95 with v0.11 and v0.12 respectively, both at epoch 30th. Notice with v0.12 the accuracy gets stuck in early epoch 10th.\nThe optimizer that I'm using is Momentum with a LR of 1e-4 without decay policy.\nI've also added the regularization term with a weight decay of 1e-4.\nDid you introduce any change with last versions in the optimization API that could make this difference?\nPD: I left here the link to the code.\nhttps://github.com/vbalnt/tfeat/tree/master/tensorflow\nNotice that we are trying to reproduce from the original LuaTorch version.", "body": "Hi! I've recently updated from v0.11 to v.012 using pip with CUDA 8.0, cuDNN 5.1in a TitanX under Ubuntu 16.04 LTS.\r\n\r\nDuring the training of a small CNN triplet network with triplet margin loss I noticed that the performance in terms of accuracy went down by a factor of ~40%.  Getting around 9% and 14% FPR95 with v0.11 and v0.12 respectively, both at epoch 30th. Notice with v0.12 the accuracy gets stuck in early epoch 10th.\r\n\r\nThe optimizer that I'm using is Momentum with a LR of 1e-4 without decay policy.\r\nI've also added the regularization term with a weight decay of 1e-4.\r\n\r\nDid you introduce any change with last versions in the optimization API that could make this difference?\r\n\r\nPD: I left here the link to the code.\r\nhttps://github.com/vbalnt/tfeat/tree/master/tensorflow\r\nNotice that we are trying to reproduce from the original LuaTorch version."}