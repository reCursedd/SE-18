{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/316255904", "html_url": "https://github.com/tensorflow/tensorflow/issues/8581#issuecomment-316255904", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8581", "id": 316255904, "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjI1NTkwNA==", "user": {"login": "wangxianliang", "id": 10250053, "node_id": "MDQ6VXNlcjEwMjUwMDUz", "avatar_url": "https://avatars2.githubusercontent.com/u/10250053?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wangxianliang", "html_url": "https://github.com/wangxianliang", "followers_url": "https://api.github.com/users/wangxianliang/followers", "following_url": "https://api.github.com/users/wangxianliang/following{/other_user}", "gists_url": "https://api.github.com/users/wangxianliang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wangxianliang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wangxianliang/subscriptions", "organizations_url": "https://api.github.com/users/wangxianliang/orgs", "repos_url": "https://api.github.com/users/wangxianliang/repos", "events_url": "https://api.github.com/users/wangxianliang/events{/privacy}", "received_events_url": "https://api.github.com/users/wangxianliang/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-19T02:39:18Z", "updated_at": "2017-07-19T02:39:18Z", "author_association": "NONE", "body_html": "<p>another fix could change some of the python codes in <strong>'tensorflow\\python\\lib\\io\\file_io.py'</strong>,<br>\nfrom</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">_preread_check</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>):\n    <span class=\"pl-k\">if</span> <span class=\"pl-k\">not</span> <span class=\"pl-c1\">self</span>._read_buf:\n      <span class=\"pl-k\">if</span> <span class=\"pl-k\">not</span> <span class=\"pl-c1\">self</span>._read_check_passed:\n        <span class=\"pl-k\">raise</span> errors.PermissionDeniedError(<span class=\"pl-c1\">None</span>, <span class=\"pl-c1\">None</span>,\n                                           <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File isn't open for reading<span class=\"pl-pds\">\"</span></span>)\n      <span class=\"pl-k\">with</span> errors.raise_exception_on_not_ok_status() <span class=\"pl-k\">as</span> status:\n        <span class=\"pl-c1\">self</span>._read_buf <span class=\"pl-k\">=</span> pywrap_tensorflow.CreateBufferedInputStream(\n            compat.as_bytes(<span class=\"pl-c1\">self</span>.__name), <span class=\"pl-c1\">1024</span> <span class=\"pl-k\">*</span> <span class=\"pl-c1\">512</span>, status)</pre></div>\n<p>to</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">_preread_check</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>):\n    <span class=\"pl-k\">if</span> <span class=\"pl-k\">not</span> <span class=\"pl-c1\">self</span>._read_buf:\n      <span class=\"pl-k\">if</span> <span class=\"pl-k\">not</span> <span class=\"pl-c1\">self</span>._read_check_passed:\n        <span class=\"pl-k\">raise</span> errors.PermissionDeniedError(<span class=\"pl-c1\">None</span>, <span class=\"pl-c1\">None</span>,\n                                           <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>File isn't open for reading<span class=\"pl-pds\">\"</span></span>)\n      <span class=\"pl-k\">with</span> errors.raise_exception_on_not_ok_status() <span class=\"pl-k\">as</span> status:\n        encoding <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>mbcs<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">if</span> platform.system() <span class=\"pl-k\">==</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>Windows<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">else</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>utf-8<span class=\"pl-pds\">'</span></span>\n        <span class=\"pl-c1\">self</span>._read_buf <span class=\"pl-k\">=</span> pywrap_tensorflow.CreateBufferedInputStream(\n            compat.as_bytes(<span class=\"pl-c1\">self</span>.__name, encoding), <span class=\"pl-c1\">1024</span> <span class=\"pl-k\">*</span> <span class=\"pl-c1\">512</span>, status)</pre></div>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=20959853\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/drpngx\">@drpngx</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=88808\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/skye\">@skye</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=70511\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/girving\">@girving</a></p>", "body_text": "another fix could change some of the python codes in 'tensorflow\\python\\lib\\io\\file_io.py',\nfrom\ndef _preread_check(self):\n    if not self._read_buf:\n      if not self._read_check_passed:\n        raise errors.PermissionDeniedError(None, None,\n                                           \"File isn't open for reading\")\n      with errors.raise_exception_on_not_ok_status() as status:\n        self._read_buf = pywrap_tensorflow.CreateBufferedInputStream(\n            compat.as_bytes(self.__name), 1024 * 512, status)\nto\ndef _preread_check(self):\n    if not self._read_buf:\n      if not self._read_check_passed:\n        raise errors.PermissionDeniedError(None, None,\n                                           \"File isn't open for reading\")\n      with errors.raise_exception_on_not_ok_status() as status:\n        encoding = 'mbcs' if platform.system() == 'Windows' else 'utf-8'\n        self._read_buf = pywrap_tensorflow.CreateBufferedInputStream(\n            compat.as_bytes(self.__name, encoding), 1024 * 512, status)\n@drpngx @skye @girving", "body": "another fix could change some of the python codes in **'tensorflow\\python\\lib\\io\\file_io.py'**,\r\nfrom\r\n```python\r\ndef _preread_check(self):\r\n    if not self._read_buf:\r\n      if not self._read_check_passed:\r\n        raise errors.PermissionDeniedError(None, None,\r\n                                           \"File isn't open for reading\")\r\n      with errors.raise_exception_on_not_ok_status() as status:\r\n        self._read_buf = pywrap_tensorflow.CreateBufferedInputStream(\r\n            compat.as_bytes(self.__name), 1024 * 512, status)\r\n```\r\nto\r\n```python\r\ndef _preread_check(self):\r\n    if not self._read_buf:\r\n      if not self._read_check_passed:\r\n        raise errors.PermissionDeniedError(None, None,\r\n                                           \"File isn't open for reading\")\r\n      with errors.raise_exception_on_not_ok_status() as status:\r\n        encoding = 'mbcs' if platform.system() == 'Windows' else 'utf-8'\r\n        self._read_buf = pywrap_tensorflow.CreateBufferedInputStream(\r\n            compat.as_bytes(self.__name, encoding), 1024 * 512, status)\r\n```\r\n@drpngx @skye @girving "}