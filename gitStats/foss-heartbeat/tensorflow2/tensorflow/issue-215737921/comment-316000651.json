{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/316000651", "html_url": "https://github.com/tensorflow/tensorflow/issues/8581#issuecomment-316000651", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8581", "id": 316000651, "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjAwMDY1MQ==", "user": {"login": "wangxianliang", "id": 10250053, "node_id": "MDQ6VXNlcjEwMjUwMDUz", "avatar_url": "https://avatars2.githubusercontent.com/u/10250053?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wangxianliang", "html_url": "https://github.com/wangxianliang", "followers_url": "https://api.github.com/users/wangxianliang/followers", "following_url": "https://api.github.com/users/wangxianliang/following{/other_user}", "gists_url": "https://api.github.com/users/wangxianliang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wangxianliang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wangxianliang/subscriptions", "organizations_url": "https://api.github.com/users/wangxianliang/orgs", "repos_url": "https://api.github.com/users/wangxianliang/repos", "events_url": "https://api.github.com/users/wangxianliang/events{/privacy}", "received_events_url": "https://api.github.com/users/wangxianliang/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-18T08:53:00Z", "updated_at": "2017-07-18T08:55:05Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=20959853\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/drpngx\">@drpngx</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=70511\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/girving\">@girving</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=88808\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/skye\">@skye</a></p>\n<p>This bug can be fixed by changing <strong>TranslateName</strong> in <strong>windows_file_system.h</strong> from</p>\n<div class=\"highlight highlight-source-c++\"><pre>string <span class=\"pl-en\">TranslateName</span>(<span class=\"pl-k\">const</span> string&amp; name) <span class=\"pl-k\">const</span> <span class=\"pl-k\">override</span> {\n    <span class=\"pl-k\">return</span> name;\n  }</pre></div>\n<p>to</p>\n<div class=\"highlight highlight-source-c++\"><pre>std::wstring <span class=\"pl-en\">ToUtf16</span>(std::string str)\n{\n\tstd::wstring ret;\n\t<span class=\"pl-k\">int</span> len = <span class=\"pl-c1\">MultiByteToWideChar</span>(CP_UTF8, <span class=\"pl-c1\">0</span>, str.<span class=\"pl-c1\">c_str</span>(), str.<span class=\"pl-c1\">length</span>(), <span class=\"pl-c1\">NULL</span>, <span class=\"pl-c1\">0</span>);\n\t<span class=\"pl-k\">if</span> (len &gt; <span class=\"pl-c1\">0</span>)\n\t{\n\t\tret.<span class=\"pl-c1\">resize</span>(len);\n\t\t<span class=\"pl-c1\">MultiByteToWideChar</span>(CP_UTF8, <span class=\"pl-c1\">0</span>, str.<span class=\"pl-c1\">c_str</span>(), str.<span class=\"pl-c1\">length</span>(), &amp;ret[<span class=\"pl-c1\">0</span>], len);\n\t}\n\t<span class=\"pl-k\">return</span> ret;\n}\nstd::string <span class=\"pl-en\">ToMBCS</span>(std::wstring str)\n{\n\tstd::string ret;\n\t<span class=\"pl-k\">int</span> len = <span class=\"pl-c1\">WideCharToMultiByte</span>(CP_ACP, <span class=\"pl-c1\">0</span>, str.<span class=\"pl-c1\">c_str</span>(), str.<span class=\"pl-c1\">length</span>(), <span class=\"pl-c1\">NULL</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">NULL</span>, <span class=\"pl-c1\">NULL</span>);\n\t<span class=\"pl-k\">if</span> (len &gt; <span class=\"pl-c1\">0</span>)\n\t{\n\t\tret.<span class=\"pl-c1\">resize</span>(len);\n\t\t<span class=\"pl-c1\">WideCharToMultiByte</span>(CP_ACP, <span class=\"pl-c1\">0</span>, str.<span class=\"pl-c1\">c_str</span>(), str.<span class=\"pl-c1\">length</span>(), &amp;ret[<span class=\"pl-c1\">0</span>], len, <span class=\"pl-c1\">NULL</span>, <span class=\"pl-c1\">NULL</span>);\n\t}\n\t<span class=\"pl-k\">return</span> ret;\n}\nstring <span class=\"pl-en\">TranslateName</span>(<span class=\"pl-k\">const</span> string&amp; name) <span class=\"pl-k\">const</span> <span class=\"pl-k\">override</span> {\n    <span class=\"pl-k\">return</span> <span class=\"pl-c1\">ToMBCS</span>(<span class=\"pl-c1\">ToUtf16</span>(name));\n  }</pre></div>\n<p>The input fname is 'UTF-8' format, however, windows can't open utf8 encoded filename in c++.</p>", "body_text": "@drpngx @girving @skye\nThis bug can be fixed by changing TranslateName in windows_file_system.h from\nstring TranslateName(const string& name) const override {\n    return name;\n  }\nto\nstd::wstring ToUtf16(std::string str)\n{\n\tstd::wstring ret;\n\tint len = MultiByteToWideChar(CP_UTF8, 0, str.c_str(), str.length(), NULL, 0);\n\tif (len > 0)\n\t{\n\t\tret.resize(len);\n\t\tMultiByteToWideChar(CP_UTF8, 0, str.c_str(), str.length(), &ret[0], len);\n\t}\n\treturn ret;\n}\nstd::string ToMBCS(std::wstring str)\n{\n\tstd::string ret;\n\tint len = WideCharToMultiByte(CP_ACP, 0, str.c_str(), str.length(), NULL, 0, NULL, NULL);\n\tif (len > 0)\n\t{\n\t\tret.resize(len);\n\t\tWideCharToMultiByte(CP_ACP, 0, str.c_str(), str.length(), &ret[0], len, NULL, NULL);\n\t}\n\treturn ret;\n}\nstring TranslateName(const string& name) const override {\n    return ToMBCS(ToUtf16(name));\n  }\nThe input fname is 'UTF-8' format, however, windows can't open utf8 encoded filename in c++.", "body": "@drpngx @girving @skye \r\n\r\nThis bug can be fixed by changing **TranslateName** in **windows_file_system.h** from\r\n```c++\r\nstring TranslateName(const string& name) const override {\r\n    return name;\r\n  }\r\n```\r\nto\r\n```c++\r\nstd::wstring ToUtf16(std::string str)\r\n{\r\n\tstd::wstring ret;\r\n\tint len = MultiByteToWideChar(CP_UTF8, 0, str.c_str(), str.length(), NULL, 0);\r\n\tif (len > 0)\r\n\t{\r\n\t\tret.resize(len);\r\n\t\tMultiByteToWideChar(CP_UTF8, 0, str.c_str(), str.length(), &ret[0], len);\r\n\t}\r\n\treturn ret;\r\n}\r\nstd::string ToMBCS(std::wstring str)\r\n{\r\n\tstd::string ret;\r\n\tint len = WideCharToMultiByte(CP_ACP, 0, str.c_str(), str.length(), NULL, 0, NULL, NULL);\r\n\tif (len > 0)\r\n\t{\r\n\t\tret.resize(len);\r\n\t\tWideCharToMultiByte(CP_ACP, 0, str.c_str(), str.length(), &ret[0], len, NULL, NULL);\r\n\t}\r\n\treturn ret;\r\n}\r\nstring TranslateName(const string& name) const override {\r\n    return ToMBCS(ToUtf16(name));\r\n  }\r\n```\r\nThe input fname is 'UTF-8' format, however, windows can't open utf8 encoded filename in c++."}