{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/51345635", "pull_request_review_id": null, "id": 51345635, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzQ1NjM1", "diff_hunk": "@@ -283,83 +283,140 @@\n         \"image_size = 28  # Pixel width and height.\\n\",\n         \"pixel_depth = 255.0  # Number of levels per pixel.\\n\",\n         \"\\n\",\n-        \"def load(data_folders, min_num_images, max_num_images):\\n\",\n-        \"  dataset = np.ndarray(\\n\",\n-        \"    shape=(max_num_images, image_size, image_size), dtype=np.float32)\\n\",\n-        \"  labels = np.ndarray(shape=(max_num_images), dtype=np.int32)\\n\",\n-        \"  label_index = 0\\n\",\n-        \"  image_index = 0\\n\",\n-        \"  for folder in data_folders:\\n\",\n-        \"    print(folder)\\n\",\n+        \"def load_letter(folder, min_num_images):\\n\",\n+        \"    image_files = os.listdir(folder)\\n\",\n+        \"    dataset = np.ndarray(shape=(len(image_files), image_size, image_size), dtype=np.float32)\\n\",\n+        \"    image_index = 0\\n\",\n+        \"    print folder\\n\",\n         \"    for image in os.listdir(folder):\\n\",\n-        \"      if image_index >= max_num_images:\\n\",\n-        \"        raise Exception('More images than expected: %d >= %d' % (\\n\",\n-        \"          image_index, max_num_images))\\n\",\n         \"      image_file = os.path.join(folder, image)\\n\",\n         \"      try:\\n\",\n-        \"        image_data = (ndimage.imread(image_file).astype(float) -\\n\",\n-        \"                      pixel_depth / 2) / pixel_depth\\n\",\n+        \"        image_data = (ndimage.imread(image_file).astype(float) - pixel_depth / 2) / pixel_depth\\n\",\n         \"        if image_data.shape != (image_size, image_size):\\n\",\n         \"          raise Exception('Unexpected image shape: %s' % str(image_data.shape))\\n\",\n         \"        dataset[image_index, :, :] = image_data\\n\",\n-        \"        labels[image_index] = label_index\\n\",\n         \"        image_index += 1\\n\",\n         \"      except IOError as e:\\n\",\n         \"        print('Could not read:', image_file, ':', e, '- it\\\\'s ok, skipping.')\\n\",\n-        \"    label_index += 1\\n\",\n-        \"  num_images = image_index\\n\",\n-        \"  dataset = dataset[0:num_images, :, :]\\n\",\n-        \"  labels = labels[0:num_images]\\n\",\n-        \"  if num_images < min_num_images:\\n\",\n-        \"    raise Exception('Many fewer images than expected: %d < %d' % (\\n\",\n-        \"        num_images, min_num_images))\\n\",\n-        \"  print('Full dataset tensor:', dataset.shape)\\n\",\n-        \"  print('Mean:', np.mean(dataset))\\n\",\n-        \"  print('Standard deviation:', np.std(dataset))\\n\",\n-        \"  print('Labels:', labels.shape)\\n\",\n-        \"  return dataset, labels\\n\",\n-        \"train_dataset, train_labels = load(train_folders, 450000, 550000)\\n\",\n-        \"test_dataset, test_labels = load(test_folders, 18000, 20000)\"\n+        \"    \\n\",\n+        \"    num_images = image_index\\n\",\n+        \"    dataset = dataset[0:num_images, :, :]\\n\",\n+        \"    if num_images < min_num_images:\\n\",\n+        \"        raise Exception('Many fewer images than expected: %d < %d' % (num_images, min_num_images))\\n\",\n+        \"    \\n\",\n+        \"    print('Full dataset tensor:', dataset.shape)\\n\",\n+        \"    print('Mean:', np.mean(dataset))\\n\",\n+        \"    print('Standard deviation:', np.std(dataset))\\n\",\n+        \"    return dataset\\n\",\n+        \"        \\n\",\n+        \"def load(data_folders, min_num_images, num_classes):\\n\",\n+        \"  dataset_names = []\\n\",\n+        \"  for folder in data_folders:\\n\",\n+        \"    dataset = load_letter(folder, min_num_images / num_classes)\\n\",", "path": "tensorflow/examples/udacity/1_notmnist.ipynb", "position": null, "original_position": 73, "commit_id": "b52273baaa13ea000cf904b4ea4e215410bca908", "original_commit_id": "8bf5d031678bbfc5c470f5a1b8394eaf3b91b444", "user": {"login": "vincentvanhoucke", "id": 15737127, "node_id": "MDQ6VXNlcjE1NzM3MTI3", "avatar_url": "https://avatars3.githubusercontent.com/u/15737127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vincentvanhoucke", "html_url": "https://github.com/vincentvanhoucke", "followers_url": "https://api.github.com/users/vincentvanhoucke/followers", "following_url": "https://api.github.com/users/vincentvanhoucke/following{/other_user}", "gists_url": "https://api.github.com/users/vincentvanhoucke/gists{/gist_id}", "starred_url": "https://api.github.com/users/vincentvanhoucke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vincentvanhoucke/subscriptions", "organizations_url": "https://api.github.com/users/vincentvanhoucke/orgs", "repos_url": "https://api.github.com/users/vincentvanhoucke/repos", "events_url": "https://api.github.com/users/vincentvanhoucke/events{/privacy}", "received_events_url": "https://api.github.com/users/vincentvanhoucke/received_events", "type": "User", "site_admin": false}, "body": "For clarity, I would slightly prefer load() to be passed a min_num_images_per_class, to be forwarded directly to load_letter()\n", "created_at": "2016-01-30T14:39:06Z", "updated_at": "2016-01-31T08:01:47Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/940#discussion_r51345635", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/940", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/51345635"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/940#discussion_r51345635"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/940"}}, "body_html": "<p>For clarity, I would slightly prefer load() to be passed a min_num_images_per_class, to be forwarded directly to load_letter()</p>", "body_text": "For clarity, I would slightly prefer load() to be passed a min_num_images_per_class, to be forwarded directly to load_letter()"}