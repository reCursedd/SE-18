{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/186485658", "html_url": "https://github.com/tensorflow/tensorflow/issues/1195#issuecomment-186485658", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1195", "id": 186485658, "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjQ4NTY1OA==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2016-02-20T02:06:09Z", "updated_at": "2016-02-20T02:06:09Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I bring good news! You can just paste the implementation from that commit into your program somewhere (with the appropriate changes as below):</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-en\">@tf.RegisterGradient</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>DynamicPartition<span class=\"pl-pds\">\"</span></span>)\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">_DynamicPartitionGrads</span>(<span class=\"pl-smi\">op</span>, <span class=\"pl-k\">*</span><span class=\"pl-smi\">grads</span>):\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"\"\"</span>Gradients for DynamicPartition.<span class=\"pl-pds\">\"\"\"</span></span>\n  data <span class=\"pl-k\">=</span> op.inputs[<span class=\"pl-c1\">0</span>]\n  indices <span class=\"pl-k\">=</span> op.inputs[<span class=\"pl-c1\">1</span>]\n  num_partitions <span class=\"pl-k\">=</span> op.get_attr(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>num_partitions<span class=\"pl-pds\">\"</span></span>)\n\n  prefix_shape <span class=\"pl-k\">=</span> tf.shape(indices)\n  original_indices <span class=\"pl-k\">=</span> tf.reshape(tf.range(tf.reduce_prod(prefix_shape)), prefix_shape)\n  partitioned_indices <span class=\"pl-k\">=</span> tf.dynamic_partition(original_indices, indices, num_partitions)\n  reconstructed <span class=\"pl-k\">=</span> tf.dynamic_stitch(partitioned_indices, grads)\n  reconstructed <span class=\"pl-k\">=</span> tf.reshape(reconstructed, tf.shape(data))\n  <span class=\"pl-k\">return</span> [reconstructed, <span class=\"pl-c1\">None</span>]</pre></div>\n<p>...then the gradient will be available from your code.</p>", "body_text": "I bring good news! You can just paste the implementation from that commit into your program somewhere (with the appropriate changes as below):\n@tf.RegisterGradient(\"DynamicPartition\")\ndef _DynamicPartitionGrads(op, *grads):\n  \"\"\"Gradients for DynamicPartition.\"\"\"\n  data = op.inputs[0]\n  indices = op.inputs[1]\n  num_partitions = op.get_attr(\"num_partitions\")\n\n  prefix_shape = tf.shape(indices)\n  original_indices = tf.reshape(tf.range(tf.reduce_prod(prefix_shape)), prefix_shape)\n  partitioned_indices = tf.dynamic_partition(original_indices, indices, num_partitions)\n  reconstructed = tf.dynamic_stitch(partitioned_indices, grads)\n  reconstructed = tf.reshape(reconstructed, tf.shape(data))\n  return [reconstructed, None]\n...then the gradient will be available from your code.", "body": "I bring good news! You can just paste the implementation from that commit into your program somewhere (with the appropriate changes as below):\n\n``` python\n@tf.RegisterGradient(\"DynamicPartition\")\ndef _DynamicPartitionGrads(op, *grads):\n  \"\"\"Gradients for DynamicPartition.\"\"\"\n  data = op.inputs[0]\n  indices = op.inputs[1]\n  num_partitions = op.get_attr(\"num_partitions\")\n\n  prefix_shape = tf.shape(indices)\n  original_indices = tf.reshape(tf.range(tf.reduce_prod(prefix_shape)), prefix_shape)\n  partitioned_indices = tf.dynamic_partition(original_indices, indices, num_partitions)\n  reconstructed = tf.dynamic_stitch(partitioned_indices, grads)\n  reconstructed = tf.reshape(reconstructed, tf.shape(data))\n  return [reconstructed, None]\n```\n\n...then the gradient will be available from your code.\n"}