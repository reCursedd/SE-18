{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/167688927", "html_url": "https://github.com/tensorflow/tensorflow/issues/472#issuecomment-167688927", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/472", "id": 167688927, "node_id": "MDEyOklzc3VlQ29tbWVudDE2NzY4ODkyNw==", "user": {"login": "girving", "id": 70511, "node_id": "MDQ6VXNlcjcwNTEx", "avatar_url": "https://avatars1.githubusercontent.com/u/70511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/girving", "html_url": "https://github.com/girving", "followers_url": "https://api.github.com/users/girving/followers", "following_url": "https://api.github.com/users/girving/following{/other_user}", "gists_url": "https://api.github.com/users/girving/gists{/gist_id}", "starred_url": "https://api.github.com/users/girving/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/girving/subscriptions", "organizations_url": "https://api.github.com/users/girving/orgs", "repos_url": "https://api.github.com/users/girving/repos", "events_url": "https://api.github.com/users/girving/events{/privacy}", "received_events_url": "https://api.github.com/users/girving/received_events", "type": "User", "site_admin": false}, "created_at": "2015-12-29T01:05:45Z", "updated_at": "2015-12-29T01:05:45Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I'm hitting this too now, though I'm not sure if it's the same issue.  If I run <code>python3</code> directly, or invoke it indirectly using <code>bazel run</code>, <code>import numpy</code> pulls in something from <code>/usr/local/lib/python3.4/dist-packages/numpy</code>.  This is also the version of numpy picked up if I compile.</p>\n<p>However, if I use <code>bazel test</code>, it pulls in a version of numpy from <code>/usr/lib/python3/dist-packages</code>, which in my case is incompatible.  Presumably bazel is messing with paths in an inconsistent manner, though I haven't investigated fully yet.</p>", "body_text": "I'm hitting this too now, though I'm not sure if it's the same issue.  If I run python3 directly, or invoke it indirectly using bazel run, import numpy pulls in something from /usr/local/lib/python3.4/dist-packages/numpy.  This is also the version of numpy picked up if I compile.\nHowever, if I use bazel test, it pulls in a version of numpy from /usr/lib/python3/dist-packages, which in my case is incompatible.  Presumably bazel is messing with paths in an inconsistent manner, though I haven't investigated fully yet.", "body": "I'm hitting this too now, though I'm not sure if it's the same issue.  If I run `python3` directly, or invoke it indirectly using `bazel run`, `import numpy` pulls in something from `/usr/local/lib/python3.4/dist-packages/numpy`.  This is also the version of numpy picked up if I compile.\n\nHowever, if I use `bazel test`, it pulls in a version of numpy from `/usr/lib/python3/dist-packages`, which in my case is incompatible.  Presumably bazel is messing with paths in an inconsistent manner, though I haven't investigated fully yet.\n"}