{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/354178948", "html_url": "https://github.com/tensorflow/tensorflow/pull/15605#issuecomment-354178948", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15605", "id": 354178948, "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDE3ODk0OA==", "user": {"login": "Androbin", "id": 16437156, "node_id": "MDQ6VXNlcjE2NDM3MTU2", "avatar_url": "https://avatars1.githubusercontent.com/u/16437156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Androbin", "html_url": "https://github.com/Androbin", "followers_url": "https://api.github.com/users/Androbin/followers", "following_url": "https://api.github.com/users/Androbin/following{/other_user}", "gists_url": "https://api.github.com/users/Androbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Androbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Androbin/subscriptions", "organizations_url": "https://api.github.com/users/Androbin/orgs", "repos_url": "https://api.github.com/users/Androbin/repos", "events_url": "https://api.github.com/users/Androbin/events{/privacy}", "received_events_url": "https://api.github.com/users/Androbin/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-27T21:17:37Z", "updated_at": "2017-12-27T21:18:11Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Yes, the motivation behind this is about different files being de-referenced to different places.<br>\nNo, it's not (purely) about references to PIP, I have already accounted for this.</p>\n<p>The problem is rather that while the python file initially called via <code>bazel</code> is \"correctly\" reported to be in <code>runfiles</code>, any other files called have their symlinks resolved.</p>\n<p>Depending on a few circumstances, things might as well work out, but in my case, I needed a <code>runfiles</code> path to remove a <code>__init__.py</code> file to make python call the PIP package instead of <code>runfiles</code> which doesn't contain generated ops which leads to immediate failure.</p>", "body_text": "Yes, the motivation behind this is about different files being de-referenced to different places.\nNo, it's not (purely) about references to PIP, I have already accounted for this.\nThe problem is rather that while the python file initially called via bazel is \"correctly\" reported to be in runfiles, any other files called have their symlinks resolved.\nDepending on a few circumstances, things might as well work out, but in my case, I needed a runfiles path to remove a __init__.py file to make python call the PIP package instead of runfiles which doesn't contain generated ops which leads to immediate failure.", "body": "Yes, the motivation behind this is about different files being de-referenced to different places.\r\nNo, it's not (purely) about references to PIP, I have already accounted for this.\r\n\r\nThe problem is rather that while the python file initially called via `bazel` is \"correctly\" reported to be in `runfiles`, any other files called have their symlinks resolved.\r\n\r\nDepending on a few circumstances, things might as well work out, but in my case, I needed a `runfiles` path to remove a `__init__.py` file to make python call the PIP package instead of `runfiles` which doesn't contain generated ops which leads to immediate failure."}