{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19832", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19832/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19832/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19832/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19832", "id": 330219796, "node_id": "MDU6SXNzdWUzMzAyMTk3OTY=", "number": 19832, "title": "set_intersection doesn't work as expectation - tensorflow 1.6.0", "user": {"login": "llv22", "id": 679518, "node_id": "MDQ6VXNlcjY3OTUxOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/679518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llv22", "html_url": "https://github.com/llv22", "followers_url": "https://api.github.com/users/llv22/followers", "following_url": "https://api.github.com/users/llv22/following{/other_user}", "gists_url": "https://api.github.com/users/llv22/gists{/gist_id}", "starred_url": "https://api.github.com/users/llv22/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llv22/subscriptions", "organizations_url": "https://api.github.com/users/llv22/orgs", "repos_url": "https://api.github.com/users/llv22/repos", "events_url": "https://api.github.com/users/llv22/events{/privacy}", "received_events_url": "https://api.github.com/users/llv22/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-06-07T10:53:05Z", "updated_at": "2018-11-14T19:30:44Z", "closed_at": null, "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: NO</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:<br>\nLinux Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:<br>\nsource</li>\n<li><strong>TensorFlow version (use command below)</strong>:<br>\n1.6.0</li>\n<li><strong>Python version</strong>:<br>\n3.6.5 (anaconda)</li>\n<li><strong>Bazel version (if compiling from source)</strong>:<br>\n0.11</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:<br>\ngcc-5.4.0</li>\n<li><strong>CUDA/cuDNN version</strong>:<br>\nCUDA9.1 and cuDNN 7.1.4</li>\n<li><strong>GPU model and memory</strong>:<br>\nGPU model and 16G memory</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> collections\n\na <span class=\"pl-k\">=</span> collections.OrderedDict([\n      ((<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>), <span class=\"pl-c1\">1</span>),\n      ((<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">3</span>), <span class=\"pl-c1\">1</span>),\n      ((<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>), <span class=\"pl-c1\">1</span>),\n      ((<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">3</span>), <span class=\"pl-c1\">1</span>),\n      ((<span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">0</span>), <span class=\"pl-c1\">1</span>),\n      ((<span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">1</span>), <span class=\"pl-c1\">1</span>)\n  ])\na <span class=\"pl-k\">=</span> tf.SparseTensor(<span class=\"pl-c1\">list</span>(a.keys()), <span class=\"pl-c1\">list</span>(a.values()), <span class=\"pl-v\">dense_shape</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">4</span>])\n\nb <span class=\"pl-k\">=</span> collections.OrderedDict([\n      ((<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>), <span class=\"pl-c1\">1</span>),\n      ((<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">3</span>), <span class=\"pl-c1\">1</span>),\n      ((<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>), <span class=\"pl-c1\">1</span>),\n      ((<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>), <span class=\"pl-c1\">1</span>),\n      ((<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">3</span>), <span class=\"pl-c1\">1</span>),\n      ((<span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">0</span>), <span class=\"pl-c1\">1</span>),\n      ((<span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">1</span>), <span class=\"pl-c1\">1</span>)\n  ])\nb <span class=\"pl-k\">=</span> tf.SparseTensor(<span class=\"pl-c1\">list</span>(b.keys()), <span class=\"pl-c1\">list</span>(b.values()), <span class=\"pl-v\">dense_shape</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">4</span>])\n\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n    <span class=\"pl-c1\">print</span>(sess.run(a))\n    <span class=\"pl-c1\">print</span>(sess.run(b))\n    <span class=\"pl-c1\">print</span>(sess.run(tf.contrib.metrics.set_intersection(a, b)))\n</pre></div>\n<h3>Describe the problem</h3>\n<p>For set_intersection, for my own understanding, output should be</p>\n<div class=\"highlight highlight-source-shell\"><pre>SparseTensorValue(indices=array([[0, 0],\n       [0, 3],\n       [1, 1],\n       [1, 3],\n       [2, 0],\n       [2, 1]]), values=array([1, 1, 1, 1, 1, 1], dtype=int32), dense_shape=array([3, 4]))</pre></div>\n<p>However, I get the result as follow:</p>\n<div class=\"highlight highlight-source-shell\"><pre>SparseTensorValue(indices=array([[0, 0],\n       [1, 0],\n       [2, 0]]), values=array([1, 1, 1], dtype=int32), dense_shape=array([3, 1]))</pre></div>\n<p>I don't understand if I'm not fully understanding for the points....</p>\n<p>Best Regards<br>\nOrlando</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): NO\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nLinux Ubuntu 16.04\nTensorFlow installed from (source or binary):\nsource\nTensorFlow version (use command below):\n1.6.0\nPython version:\n3.6.5 (anaconda)\nBazel version (if compiling from source):\n0.11\nGCC/Compiler version (if compiling from source):\ngcc-5.4.0\nCUDA/cuDNN version:\nCUDA9.1 and cuDNN 7.1.4\nGPU model and memory:\nGPU model and 16G memory\nExact command to reproduce:\n\nimport collections\n\na = collections.OrderedDict([\n      ((0, 0), 1),\n      ((0, 3), 1),\n      ((1, 1), 1),\n      ((1, 3), 1),\n      ((2, 0), 1),\n      ((2, 1), 1)\n  ])\na = tf.SparseTensor(list(a.keys()), list(a.values()), dense_shape=[3, 4])\n\nb = collections.OrderedDict([\n      ((0, 0), 1),\n      ((0, 3), 1),\n      ((1, 1), 1),\n      ((1, 2), 1),\n      ((1, 3), 1),\n      ((2, 0), 1),\n      ((2, 1), 1)\n  ])\nb = tf.SparseTensor(list(b.keys()), list(b.values()), dense_shape=[3, 4])\n\nwith tf.Session() as sess:\n    print(sess.run(a))\n    print(sess.run(b))\n    print(sess.run(tf.contrib.metrics.set_intersection(a, b)))\n\nDescribe the problem\nFor set_intersection, for my own understanding, output should be\nSparseTensorValue(indices=array([[0, 0],\n       [0, 3],\n       [1, 1],\n       [1, 3],\n       [2, 0],\n       [2, 1]]), values=array([1, 1, 1, 1, 1, 1], dtype=int32), dense_shape=array([3, 4]))\nHowever, I get the result as follow:\nSparseTensorValue(indices=array([[0, 0],\n       [1, 0],\n       [2, 0]]), values=array([1, 1, 1], dtype=int32), dense_shape=array([3, 1]))\nI don't understand if I'm not fully understanding for the points....\nBest Regards\nOrlando", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: NO\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nLinux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**:\r\nsource\r\n- **TensorFlow version (use command below)**:\r\n1.6.0\r\n- **Python version**: \r\n3.6.5 (anaconda)\r\n- **Bazel version (if compiling from source)**:\r\n0.11\r\n- **GCC/Compiler version (if compiling from source)**:\r\ngcc-5.4.0\r\n- **CUDA/cuDNN version**:\r\nCUDA9.1 and cuDNN 7.1.4\r\n- **GPU model and memory**:\r\nGPU model and 16G memory\r\n- **Exact command to reproduce**:\r\n\r\n```python\r\nimport collections\r\n\r\na = collections.OrderedDict([\r\n      ((0, 0), 1),\r\n      ((0, 3), 1),\r\n      ((1, 1), 1),\r\n      ((1, 3), 1),\r\n      ((2, 0), 1),\r\n      ((2, 1), 1)\r\n  ])\r\na = tf.SparseTensor(list(a.keys()), list(a.values()), dense_shape=[3, 4])\r\n\r\nb = collections.OrderedDict([\r\n      ((0, 0), 1),\r\n      ((0, 3), 1),\r\n      ((1, 1), 1),\r\n      ((1, 2), 1),\r\n      ((1, 3), 1),\r\n      ((2, 0), 1),\r\n      ((2, 1), 1)\r\n  ])\r\nb = tf.SparseTensor(list(b.keys()), list(b.values()), dense_shape=[3, 4])\r\n\r\nwith tf.Session() as sess:\r\n    print(sess.run(a))\r\n    print(sess.run(b))\r\n    print(sess.run(tf.contrib.metrics.set_intersection(a, b)))\r\n\r\n```\r\n\r\n### Describe the problem\r\nFor set_intersection, for my own understanding, output should be \r\n\r\n```bash\r\nSparseTensorValue(indices=array([[0, 0],\r\n       [0, 3],\r\n       [1, 1],\r\n       [1, 3],\r\n       [2, 0],\r\n       [2, 1]]), values=array([1, 1, 1, 1, 1, 1], dtype=int32), dense_shape=array([3, 4]))\r\n```\r\n\r\nHowever, I get the result as follow:\r\n\r\n```bash\r\nSparseTensorValue(indices=array([[0, 0],\r\n       [1, 0],\r\n       [2, 0]]), values=array([1, 1, 1], dtype=int32), dense_shape=array([3, 1]))\r\n```\r\n\r\nI don't understand if I'm not fully understanding for the points....\r\n\r\nBest Regards\r\nOrlando"}