{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/389742792", "html_url": "https://github.com/tensorflow/tensorflow/issues/19203#issuecomment-389742792", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19203", "id": 389742792, "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTc0Mjc5Mg==", "user": {"login": "craigcitro", "id": 468559, "node_id": "MDQ6VXNlcjQ2ODU1OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-17T04:43:27Z", "updated_at": "2018-05-17T04:43:27Z", "author_association": "MEMBER", "body_html": "<p>So I believe I know what's going on here, and I think <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"322522925\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/19249\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/19249/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/19249\">#19249</a> is indeed a dupe of this issue.</p>\n<p>The issue is that in <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/3c245f52912612ed9d8e20245ddb5de055680969/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/3c245f52912612ed9d8e20245ddb5de055680969\"><tt>3c245f5</tt></a>, the change from</p>\n<pre><code>#if defined(COMPILER_GCC3)\n</code></pre>\n<p>to</p>\n<pre><code>#if TF_HAS_BUILTIN(__builtin_expect) || (defined(__GNUC__) &amp;&amp; __GNUC__ &gt;= 3)\n</code></pre>\n<p>means that the <code>TF_PREDICT_*</code> macros are now defined to use <code>__builtin_expect</code>. When compiling for CPU, this isn't a problem.</p>\n<p>However, in the case of <code>--config=cuda</code>, it seems that <code>nvcc</code> doesn't recognize <code>__builtin_expect</code> as a compiler builtin, and simply assumes it's some function defined for the host, leading to the compilation error <a href=\"https://github.com/tensorflow/tensorflow/issues/19203#issue-321998060\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/19203/hovercard\">above</a>.</p>\n<p>I believe a quick fix here would be to avoid using the prediction logic in the case of GPUs, eg by making the predicate something like</p>\n<pre><code>#if (!defined(__NVCC__)) &amp;&amp; (TF_HAS_BUILTIN(__builtin_expect) || (defined(__GNUC__) &amp;&amp; __GNUC__ &gt;= 3))\n</code></pre>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=49262\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jart\">@jart</a> WDYT? (If that sounds good, I'm happy to send a PR.)</p>", "body_text": "So I believe I know what's going on here, and I think #19249 is indeed a dupe of this issue.\nThe issue is that in 3c245f5, the change from\n#if defined(COMPILER_GCC3)\n\nto\n#if TF_HAS_BUILTIN(__builtin_expect) || (defined(__GNUC__) && __GNUC__ >= 3)\n\nmeans that the TF_PREDICT_* macros are now defined to use __builtin_expect. When compiling for CPU, this isn't a problem.\nHowever, in the case of --config=cuda, it seems that nvcc doesn't recognize __builtin_expect as a compiler builtin, and simply assumes it's some function defined for the host, leading to the compilation error above.\nI believe a quick fix here would be to avoid using the prediction logic in the case of GPUs, eg by making the predicate something like\n#if (!defined(__NVCC__)) && (TF_HAS_BUILTIN(__builtin_expect) || (defined(__GNUC__) && __GNUC__ >= 3))\n\n@jart WDYT? (If that sounds good, I'm happy to send a PR.)", "body": "So I believe I know what's going on here, and I think #19249 is indeed a dupe of this issue.\r\n\r\nThe issue is that in 3c245f52912612ed9d8e20245ddb5de055680969, the change from\r\n\r\n    #if defined(COMPILER_GCC3)\r\n\r\nto \r\n\r\n    #if TF_HAS_BUILTIN(__builtin_expect) || (defined(__GNUC__) && __GNUC__ >= 3)\r\n\r\nmeans that the `TF_PREDICT_*` macros are now defined to use `__builtin_expect`. When compiling for CPU, this isn't a problem.\r\n\r\nHowever, in the case of `--config=cuda`, it seems that `nvcc` doesn't recognize `__builtin_expect` as a compiler builtin, and simply assumes it's some function defined for the host, leading to the compilation error [above](https://github.com/tensorflow/tensorflow/issues/19203#issue-321998060).\r\n\r\nI believe a quick fix here would be to avoid using the prediction logic in the case of GPUs, eg by making the predicate something like\r\n\r\n    #if (!defined(__NVCC__)) && (TF_HAS_BUILTIN(__builtin_expect) || (defined(__GNUC__) && __GNUC__ >= 3))\r\n\r\n@jart WDYT? (If that sounds good, I'm happy to send a PR.)"}