{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4971", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4971/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4971/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4971/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/4971", "id": 183152391, "node_id": "MDU6SXNzdWUxODMxNTIzOTE=", "number": 4971, "title": "Center loss", "user": {"login": "ShownX", "id": 9678100, "node_id": "MDQ6VXNlcjk2NzgxMDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/9678100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ShownX", "html_url": "https://github.com/ShownX", "followers_url": "https://api.github.com/users/ShownX/followers", "following_url": "https://api.github.com/users/ShownX/following{/other_user}", "gists_url": "https://api.github.com/users/ShownX/gists{/gist_id}", "starred_url": "https://api.github.com/users/ShownX/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ShownX/subscriptions", "organizations_url": "https://api.github.com/users/ShownX/orgs", "repos_url": "https://api.github.com/users/ShownX/repos", "events_url": "https://api.github.com/users/ShownX/events{/privacy}", "received_events_url": "https://api.github.com/users/ShownX/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-10-14T21:16:56Z", "updated_at": "2017-03-21T03:20:05Z", "closed_at": "2016-10-15T00:13:44Z", "author_association": "NONE", "body_html": "<p>It seems that center loss seems good in the recognition area to minize the variation of cluter. There is a caffe implementation of this loss.<br>\nURL: <a href=\"https://github.com/ydwen/caffe-face/\">https://github.com/ydwen/caffe-face/</a></p>\n<p>I wrote some code but it seems not correct:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">center_loss</span>(<span class=\"pl-smi\">features</span>, <span class=\"pl-smi\">labels</span>, <span class=\"pl-smi\">name</span>):\n    <span class=\"pl-k\">with</span> tf.name_scope(<span class=\"pl-v\">name</span><span class=\"pl-k\">=</span>name):\n       feat_dim <span class=\"pl-k\">=</span> features.get_shape().as_list()[<span class=\"pl-c1\">1</span>]\n       batch_size <span class=\"pl-k\">=</span> features.get_shape().as_list()[<span class=\"pl-c1\">0</span>]\n       centers <span class=\"pl-k\">=</span> tf.get_variable(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>center<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">FLAGS</span>.num_classes, feat_dim])\n       <span class=\"pl-c\"><span class=\"pl-c\">#</span> compute loss &amp; update center</span>\n       loss <span class=\"pl-k\">=</span> <span class=\"pl-c1\">0</span>\n       <span class=\"pl-k\">for</span> i <span class=\"pl-k\">in</span> <span class=\"pl-c1\">range</span>(batch_size):\n           ft <span class=\"pl-k\">=</span> features[i, :]\n           idx <span class=\"pl-k\">=</span> labels[i]\n           c <span class=\"pl-k\">=</span> tf.gather(centers, idx)\n          loss <span class=\"pl-k\">+=</span> tf.reduce_mean(tf.square(tf.sub(ft, c)))\n      loss <span class=\"pl-k\">/=</span> batch_size</pre></div>\n<p>Is there can help me to understand better with Tensorflow, I can make a PR.</p>", "body_text": "It seems that center loss seems good in the recognition area to minize the variation of cluter. There is a caffe implementation of this loss.\nURL: https://github.com/ydwen/caffe-face/\nI wrote some code but it seems not correct:\ndef center_loss(features, labels, name):\n    with tf.name_scope(name=name):\n       feat_dim = features.get_shape().as_list()[1]\n       batch_size = features.get_shape().as_list()[0]\n       centers = tf.get_variable('center', shape=[FLAGS.num_classes, feat_dim])\n       # compute loss & update center\n       loss = 0\n       for i in range(batch_size):\n           ft = features[i, :]\n           idx = labels[i]\n           c = tf.gather(centers, idx)\n          loss += tf.reduce_mean(tf.square(tf.sub(ft, c)))\n      loss /= batch_size\nIs there can help me to understand better with Tensorflow, I can make a PR.", "body": "It seems that center loss seems good in the recognition area to minize the variation of cluter. There is a caffe implementation of this loss. \nURL: https://github.com/ydwen/caffe-face/\n\nI wrote some code but it seems not correct:\n\n``` Python\ndef center_loss(features, labels, name):\n    with tf.name_scope(name=name):\n       feat_dim = features.get_shape().as_list()[1]\n       batch_size = features.get_shape().as_list()[0]\n       centers = tf.get_variable('center', shape=[FLAGS.num_classes, feat_dim])\n       # compute loss & update center\n       loss = 0\n       for i in range(batch_size):\n           ft = features[i, :]\n           idx = labels[i]\n           c = tf.gather(centers, idx)\n          loss += tf.reduce_mean(tf.square(tf.sub(ft, c)))\n      loss /= batch_size\n```\n\nIs there can help me to understand better with Tensorflow, I can make a PR.\n"}