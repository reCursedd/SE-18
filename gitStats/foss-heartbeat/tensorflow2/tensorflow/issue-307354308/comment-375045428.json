{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/375045428", "html_url": "https://github.com/tensorflow/tensorflow/issues/17902#issuecomment-375045428", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17902", "id": 375045428, "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTA0NTQyOA==", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-21T18:16:27Z", "updated_at": "2018-03-21T18:16:27Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Note that unless you set <code>allow_growth=True</code> TensorFlow pre-allocates all the GPU memory and uses its own allocator which may be already efficient. If you search for TF_CUDNN_WORKSPACE_LIMIT_IN_MB, you'll see that ops like Conv2D are allocating scratch memory during launch call rather than initialization.</p>", "body_text": "Note that unless you set allow_growth=True TensorFlow pre-allocates all the GPU memory and uses its own allocator which may be already efficient. If you search for TF_CUDNN_WORKSPACE_LIMIT_IN_MB, you'll see that ops like Conv2D are allocating scratch memory during launch call rather than initialization.", "body": "Note that unless you set `allow_growth=True` TensorFlow pre-allocates all the GPU memory and uses its own allocator which may be already efficient. If you search for TF_CUDNN_WORKSPACE_LIMIT_IN_MB, you'll see that ops like Conv2D are allocating scratch memory during launch call rather than initialization."}