{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/337689215", "html_url": "https://github.com/tensorflow/tensorflow/issues/9868#issuecomment-337689215", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9868", "id": 337689215, "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzY4OTIxNQ==", "user": {"login": "mas-dse-greina", "id": 22306322, "node_id": "MDQ6VXNlcjIyMzA2MzIy", "avatar_url": "https://avatars0.githubusercontent.com/u/22306322?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mas-dse-greina", "html_url": "https://github.com/mas-dse-greina", "followers_url": "https://api.github.com/users/mas-dse-greina/followers", "following_url": "https://api.github.com/users/mas-dse-greina/following{/other_user}", "gists_url": "https://api.github.com/users/mas-dse-greina/gists{/gist_id}", "starred_url": "https://api.github.com/users/mas-dse-greina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mas-dse-greina/subscriptions", "organizations_url": "https://api.github.com/users/mas-dse-greina/orgs", "repos_url": "https://api.github.com/users/mas-dse-greina/repos", "events_url": "https://api.github.com/users/mas-dse-greina/events{/privacy}", "received_events_url": "https://api.github.com/users/mas-dse-greina/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-18T18:42:29Z", "updated_at": "2017-10-18T18:43:54Z", "author_association": "NONE", "body_html": "<p>Is the commit in the latest version of Keras? Or, do I need to build from source?</p>\n<p>As far as example implementation I am trying something like this, but would appreciate some feedback:</p>\n<pre><code>        import tensorflow as tf\n\n\tfrom keras import backend as K\n\t\n\tsess = tf.Session(config=tf.ConfigProto(\n                    intra_op_parallelism_threads=16, inter_op_parallelism_threads=2))\n\n\trun_options = tf.RunOptions(trace_level=tf.RunOptions.FULL_TRACE)\n\trun_metadata = tf.RunMetadata()\n\n\tK.set_session(sess)\n\n\thistory = model.fit_generator(generator = training_generator,\n                    steps_per_epoch = 24800//BATCH_SIZE,\n                    validation_data = validation_generator,\n                    validation_steps = 6200//BATCH_SIZE,\n                    verbose=1, callbacks=[model_checkpoint])\n\n\tfrom tensorflow.python.client import timeline\n\n\t# Create the Timeline object, and write it to a json\n\ttl = timeline.Timeline(step_stats=run_metadata.step_stats)\n\tctf = tl.generate_chrome_trace_format()\n\twith open('timeline.json', 'w') as f:\n\t    f.write(ctf)\n\n</code></pre>", "body_text": "Is the commit in the latest version of Keras? Or, do I need to build from source?\nAs far as example implementation I am trying something like this, but would appreciate some feedback:\n        import tensorflow as tf\n\n\tfrom keras import backend as K\n\t\n\tsess = tf.Session(config=tf.ConfigProto(\n                    intra_op_parallelism_threads=16, inter_op_parallelism_threads=2))\n\n\trun_options = tf.RunOptions(trace_level=tf.RunOptions.FULL_TRACE)\n\trun_metadata = tf.RunMetadata()\n\n\tK.set_session(sess)\n\n\thistory = model.fit_generator(generator = training_generator,\n                    steps_per_epoch = 24800//BATCH_SIZE,\n                    validation_data = validation_generator,\n                    validation_steps = 6200//BATCH_SIZE,\n                    verbose=1, callbacks=[model_checkpoint])\n\n\tfrom tensorflow.python.client import timeline\n\n\t# Create the Timeline object, and write it to a json\n\ttl = timeline.Timeline(step_stats=run_metadata.step_stats)\n\tctf = tl.generate_chrome_trace_format()\n\twith open('timeline.json', 'w') as f:\n\t    f.write(ctf)", "body": "Is the commit in the latest version of Keras? Or, do I need to build from source? \r\n\r\nAs far as example implementation I am trying something like this, but would appreciate some feedback:\r\n\r\n```\r\n        import tensorflow as tf\r\n\r\n\tfrom keras import backend as K\r\n\t\r\n\tsess = tf.Session(config=tf.ConfigProto(\r\n                    intra_op_parallelism_threads=16, inter_op_parallelism_threads=2))\r\n\r\n\trun_options = tf.RunOptions(trace_level=tf.RunOptions.FULL_TRACE)\r\n\trun_metadata = tf.RunMetadata()\r\n\r\n\tK.set_session(sess)\r\n\r\n\thistory = model.fit_generator(generator = training_generator,\r\n                    steps_per_epoch = 24800//BATCH_SIZE,\r\n                    validation_data = validation_generator,\r\n                    validation_steps = 6200//BATCH_SIZE,\r\n                    verbose=1, callbacks=[model_checkpoint])\r\n\r\n\tfrom tensorflow.python.client import timeline\r\n\r\n\t# Create the Timeline object, and write it to a json\r\n\ttl = timeline.Timeline(step_stats=run_metadata.step_stats)\r\n\tctf = tl.generate_chrome_trace_format()\r\n\twith open('timeline.json', 'w') as f:\r\n\t    f.write(ctf)\r\n\r\n```"}