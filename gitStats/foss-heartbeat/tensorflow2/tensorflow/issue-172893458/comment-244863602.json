{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/244863602", "html_url": "https://github.com/tensorflow/tensorflow/issues/4009#issuecomment-244863602", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4009", "id": 244863602, "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDg2MzYwMg==", "user": {"login": "samjabrahams", "id": 11607205, "node_id": "MDQ6VXNlcjExNjA3MjA1", "avatar_url": "https://avatars0.githubusercontent.com/u/11607205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samjabrahams", "html_url": "https://github.com/samjabrahams", "followers_url": "https://api.github.com/users/samjabrahams/followers", "following_url": "https://api.github.com/users/samjabrahams/following{/other_user}", "gists_url": "https://api.github.com/users/samjabrahams/gists{/gist_id}", "starred_url": "https://api.github.com/users/samjabrahams/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samjabrahams/subscriptions", "organizations_url": "https://api.github.com/users/samjabrahams/orgs", "repos_url": "https://api.github.com/users/samjabrahams/repos", "events_url": "https://api.github.com/users/samjabrahams/events{/privacy}", "received_events_url": "https://api.github.com/users/samjabrahams/received_events", "type": "User", "site_admin": false}, "created_at": "2016-09-06T06:46:35Z", "updated_at": "2016-09-06T06:46:35Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=70511\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/girving\">@girving</a> what do you think of a <code>tf.substring_match</code> op instead of <code>tf.startswith</code>? Should be more flexible in the long-term, and allows me to keep using the lazy way of detecting JPEGs that imghdr already uses :)</p>\n<p>On further inspection, it looks it may be difficult to pull this off without doing the entire implementation in C++, as you can't read the bytes of the image before the graph is executed. That means there can't be any pure Python if/else blocks that require knowledge of the image type/header. The best I can think of for a mostly-Python implementation involves way more <code>tf.cond</code> operations than reasonable. What are your thoughts?</p>", "body_text": "@girving what do you think of a tf.substring_match op instead of tf.startswith? Should be more flexible in the long-term, and allows me to keep using the lazy way of detecting JPEGs that imghdr already uses :)\nOn further inspection, it looks it may be difficult to pull this off without doing the entire implementation in C++, as you can't read the bytes of the image before the graph is executed. That means there can't be any pure Python if/else blocks that require knowledge of the image type/header. The best I can think of for a mostly-Python implementation involves way more tf.cond operations than reasonable. What are your thoughts?", "body": "@girving what do you think of a `tf.substring_match` op instead of `tf.startswith`? Should be more flexible in the long-term, and allows me to keep using the lazy way of detecting JPEGs that imghdr already uses :)\n\nOn further inspection, it looks it may be difficult to pull this off without doing the entire implementation in C++, as you can't read the bytes of the image before the graph is executed. That means there can't be any pure Python if/else blocks that require knowledge of the image type/header. The best I can think of for a mostly-Python implementation involves way more `tf.cond` operations than reasonable. What are your thoughts?\n"}