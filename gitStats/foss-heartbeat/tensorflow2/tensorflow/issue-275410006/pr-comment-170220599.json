{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/170220599", "pull_request_review_id": 98873982, "id": 170220599, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDIyMDU5OQ==", "diff_hunk": "@@ -47,6 +48,38 @@ Status SoftmaxGrad(const Scope& scope, const Operation& op,\n }\n REGISTER_GRADIENT_OP(\"Softmax\", SoftmaxGrad);\n \n+Status SoftmaxCrossEntropyWithLogitsGrad(const Scope& scope,\n+                                          const Operation& op,\n+                                          const std::vector<Output>&\n+                                          grad_inputs,\n+                                          std::vector<Output>* grad_outputs) {\n+  // Softmax gradient with cross entropy logits function\n+  // We multiply the backprop for cost with the gradients - op.output[1]\n+  // There is no gradient for labels\n+\n+  auto softmaxGrad = op.output(1);\n+  auto gradLoss = grad_inputs[0];\n+  auto gradGrad = grad_inputs[1];\n+\n+  auto tempGrad = Mul(scope, gradLoss, softmaxGrad);\n+\n+  // TODO: Check if this sufficient, need a check for null ?\n+  if (gradGrad.op().output_type(0) != 0) {", "path": "tensorflow/cc/gradients/nn_grad.cc", "position": null, "original_position": 28, "commit_id": "4d98d2b592b7990968be33e10064d06ca35f40c9", "original_commit_id": "ace35ecca311c15724584b80b2cf0a35cbfd7eb6", "user": {"login": "nietras", "id": 10798831, "node_id": "MDQ6VXNlcjEwNzk4ODMx", "avatar_url": "https://avatars1.githubusercontent.com/u/10798831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nietras", "html_url": "https://github.com/nietras", "followers_url": "https://api.github.com/users/nietras/followers", "following_url": "https://api.github.com/users/nietras/following{/other_user}", "gists_url": "https://api.github.com/users/nietras/gists{/gist_id}", "starred_url": "https://api.github.com/users/nietras/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nietras/subscriptions", "organizations_url": "https://api.github.com/users/nietras/orgs", "repos_url": "https://api.github.com/users/nietras/repos", "events_url": "https://api.github.com/users/nietras/events{/privacy}", "received_events_url": "https://api.github.com/users/nietras/received_events", "type": "User", "site_admin": false}, "body": "Python defines a local function:\r\n```python\r\n def IsZero(g):\r\n    # Some introspection to check if the gradient is feeding zeros\r\n    if g.op.type in (\"ZerosLike\", \"Zeros\"):\r\n      return True\r\n    const_fill_value = tensor_util.constant_value(g)\r\n    return const_fill_value is not None and (const_fill_value == 0).all()\r\n```\r\nprobably not the same, check probably needs to be extended to cover same cases", "created_at": "2018-02-23T10:45:31Z", "updated_at": "2018-07-12T20:46:25Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/14727#discussion_r170220599", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/14727", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/170220599"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/14727#discussion_r170220599"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/14727"}}, "body_html": "<p>Python defines a local function:</p>\n<div class=\"highlight highlight-source-python\"><pre> <span class=\"pl-k\">def</span> <span class=\"pl-en\">IsZero</span>(<span class=\"pl-smi\">g</span>):\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> Some introspection to check if the gradient is feeding zeros</span>\n    <span class=\"pl-k\">if</span> g.op.type <span class=\"pl-k\">in</span> (<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>ZerosLike<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Zeros<span class=\"pl-pds\">\"</span></span>):\n      <span class=\"pl-k\">return</span> <span class=\"pl-c1\">True</span>\n    const_fill_value <span class=\"pl-k\">=</span> tensor_util.constant_value(g)\n    <span class=\"pl-k\">return</span> const_fill_value <span class=\"pl-k\">is</span> <span class=\"pl-k\">not</span> <span class=\"pl-c1\">None</span> <span class=\"pl-k\">and</span> (const_fill_value <span class=\"pl-k\">==</span> <span class=\"pl-c1\">0</span>).all()</pre></div>\n<p>probably not the same, check probably needs to be extended to cover same cases</p>", "body_text": "Python defines a local function:\n def IsZero(g):\n    # Some introspection to check if the gradient is feeding zeros\n    if g.op.type in (\"ZerosLike\", \"Zeros\"):\n      return True\n    const_fill_value = tensor_util.constant_value(g)\n    return const_fill_value is not None and (const_fill_value == 0).all()\nprobably not the same, check probably needs to be extended to cover same cases"}