{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/425424913", "html_url": "https://github.com/tensorflow/tensorflow/issues/14194#issuecomment-425424913", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14194", "id": 425424913, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTQyNDkxMw==", "user": {"login": "PROGrand", "id": 8981380, "node_id": "MDQ6VXNlcjg5ODEzODA=", "avatar_url": "https://avatars2.githubusercontent.com/u/8981380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PROGrand", "html_url": "https://github.com/PROGrand", "followers_url": "https://api.github.com/users/PROGrand/followers", "following_url": "https://api.github.com/users/PROGrand/following{/other_user}", "gists_url": "https://api.github.com/users/PROGrand/gists{/gist_id}", "starred_url": "https://api.github.com/users/PROGrand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PROGrand/subscriptions", "organizations_url": "https://api.github.com/users/PROGrand/orgs", "repos_url": "https://api.github.com/users/PROGrand/repos", "events_url": "https://api.github.com/users/PROGrand/events{/privacy}", "received_events_url": "https://api.github.com/users/PROGrand/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-28T12:48:40Z", "updated_at": "2018-09-28T12:48:40Z", "author_association": "NONE", "body_html": "<p>with up-to-date sources (--source_dir and --git_tag_override):</p>\n<pre><code># Tricky setup to force always rebuilding\n# force_rebuild always runs forcing ${VERSION_INFO_CC} target to run\n# ${VERSION_INFO_CC} would cache, but it depends on a phony never produced\n# target.\nset(gen_git_source ${tensorflow_source_dir}/tensorflow/tools/git/gen_git_source.py)\nset(version_info_cc_tmp ${CMAKE_CURRENT_BINARY_DIR}/version_info.cc)\nadd_custom_target(force_rebuild_target ALL DEPENDS ${VERSION_INFO_CC})\nset_property(TARGET force_rebuild_target PROPERTY FOLDER \"custom\")\n\nadd_custom_command(OUTPUT __force_rebuild COMMAND ${CMAKE_COMMAND} -E echo)\nadd_custom_command(OUTPUT\n    ${version_info_cc_tmp}\n    COMMAND ${PYTHON_EXECUTABLE} ${gen_git_source}\n    ARGS --raw_generate ${version_info_cc_tmp} --source_dir ${tensorflow_source_dir} --git_tag_override=${GIT_TAG_OVERRIDE}\n    DEPENDS __force_rebuild)\n\nset(VERSION_INFO_CC ${tensorflow_source_dir}/tensorflow/core/util/version_info.cc)\nadd_custom_command(OUTPUT\n  \"${VERSION_INFO_CC}\"\n  COMMAND ${CMAKE_COMMAND}\n  ARGS -E copy_if_different \"${version_info_cc_tmp}\" \"${VERSION_INFO_CC}\"\n  DEPENDS \"${version_info_cc_tmp}\"\n  ) \n  \nset(tf_version_srcs ${VERSION_INFO_CC})\n</code></pre>", "body_text": "with up-to-date sources (--source_dir and --git_tag_override):\n# Tricky setup to force always rebuilding\n# force_rebuild always runs forcing ${VERSION_INFO_CC} target to run\n# ${VERSION_INFO_CC} would cache, but it depends on a phony never produced\n# target.\nset(gen_git_source ${tensorflow_source_dir}/tensorflow/tools/git/gen_git_source.py)\nset(version_info_cc_tmp ${CMAKE_CURRENT_BINARY_DIR}/version_info.cc)\nadd_custom_target(force_rebuild_target ALL DEPENDS ${VERSION_INFO_CC})\nset_property(TARGET force_rebuild_target PROPERTY FOLDER \"custom\")\n\nadd_custom_command(OUTPUT __force_rebuild COMMAND ${CMAKE_COMMAND} -E echo)\nadd_custom_command(OUTPUT\n    ${version_info_cc_tmp}\n    COMMAND ${PYTHON_EXECUTABLE} ${gen_git_source}\n    ARGS --raw_generate ${version_info_cc_tmp} --source_dir ${tensorflow_source_dir} --git_tag_override=${GIT_TAG_OVERRIDE}\n    DEPENDS __force_rebuild)\n\nset(VERSION_INFO_CC ${tensorflow_source_dir}/tensorflow/core/util/version_info.cc)\nadd_custom_command(OUTPUT\n  \"${VERSION_INFO_CC}\"\n  COMMAND ${CMAKE_COMMAND}\n  ARGS -E copy_if_different \"${version_info_cc_tmp}\" \"${VERSION_INFO_CC}\"\n  DEPENDS \"${version_info_cc_tmp}\"\n  ) \n  \nset(tf_version_srcs ${VERSION_INFO_CC})", "body": "with up-to-date sources (--source_dir and --git_tag_override):\r\n```\r\n# Tricky setup to force always rebuilding\r\n# force_rebuild always runs forcing ${VERSION_INFO_CC} target to run\r\n# ${VERSION_INFO_CC} would cache, but it depends on a phony never produced\r\n# target.\r\nset(gen_git_source ${tensorflow_source_dir}/tensorflow/tools/git/gen_git_source.py)\r\nset(version_info_cc_tmp ${CMAKE_CURRENT_BINARY_DIR}/version_info.cc)\r\nadd_custom_target(force_rebuild_target ALL DEPENDS ${VERSION_INFO_CC})\r\nset_property(TARGET force_rebuild_target PROPERTY FOLDER \"custom\")\r\n\r\nadd_custom_command(OUTPUT __force_rebuild COMMAND ${CMAKE_COMMAND} -E echo)\r\nadd_custom_command(OUTPUT\r\n    ${version_info_cc_tmp}\r\n    COMMAND ${PYTHON_EXECUTABLE} ${gen_git_source}\r\n    ARGS --raw_generate ${version_info_cc_tmp} --source_dir ${tensorflow_source_dir} --git_tag_override=${GIT_TAG_OVERRIDE}\r\n    DEPENDS __force_rebuild)\r\n\r\nset(VERSION_INFO_CC ${tensorflow_source_dir}/tensorflow/core/util/version_info.cc)\r\nadd_custom_command(OUTPUT\r\n  \"${VERSION_INFO_CC}\"\r\n  COMMAND ${CMAKE_COMMAND}\r\n  ARGS -E copy_if_different \"${version_info_cc_tmp}\" \"${VERSION_INFO_CC}\"\r\n  DEPENDS \"${version_info_cc_tmp}\"\r\n  ) \r\n  \r\nset(tf_version_srcs ${VERSION_INFO_CC})\r\n```"}