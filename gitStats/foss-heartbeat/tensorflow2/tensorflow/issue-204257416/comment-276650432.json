{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/276650432", "html_url": "https://github.com/tensorflow/tensorflow/pull/7161#issuecomment-276650432", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7161", "id": 276650432, "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjY1MDQzMg==", "user": {"login": "ivankreso", "id": 2056432, "node_id": "MDQ6VXNlcjIwNTY0MzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/2056432?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivankreso", "html_url": "https://github.com/ivankreso", "followers_url": "https://api.github.com/users/ivankreso/followers", "following_url": "https://api.github.com/users/ivankreso/following{/other_user}", "gists_url": "https://api.github.com/users/ivankreso/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivankreso/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivankreso/subscriptions", "organizations_url": "https://api.github.com/users/ivankreso/orgs", "repos_url": "https://api.github.com/users/ivankreso/repos", "events_url": "https://api.github.com/users/ivankreso/events{/privacy}", "received_events_url": "https://api.github.com/users/ivankreso/received_events", "type": "User", "site_admin": false}, "created_at": "2017-02-01T12:54:20Z", "updated_at": "2017-02-15T12:40:07Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=16907534\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/rmlarsen\">@rmlarsen</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6969686\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/benoitsteiner\">@benoitsteiner</a></p>\n<p>'n' variable is not used to compute the index because the data pointer is local for each example.</p>\n<pre><code>const dtype* bottom_data_n = bottom_data + n * channels * height * width;\n...\nint idx = c * height * width + h * width + w;\n...\nmask[index] = maxidx;\n</code></pre>\n<p><a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/maxpooling_op_gpu.cu.cc#L75\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/maxpooling_op_gpu.cu.cc#L75</a></p>\n<p>Test example which shows this is below. Note that index for pooled value 2 is 3 and not 7.</p>\n<pre><code>import numpy as np\nimport tensorflow as tf\n\nimg_shape = (2,2,2,1)\nimg = tf.placeholder(tf.float32, img_shape)\nksize = [1,2,2,1]\nstride = [1,2,2,1]\npool, argmax = tf.nn.max_pool_with_argmax(img, ksize, stride, padding='SAME', name='pool')\n\nimg_np = np.zeros(img_shape)\nimg_np[0,0,0] = 1\nimg_np[1,1,1] = 2\n\nwith tf.Session() as sess:\n  ops = [argmax]\n  feed = {img:img_np}\n  out = sess.run(ops, feed_dict=feed)\n  print(img_np)\n  print(out)\n</code></pre>\n<pre><code> [[[[ 1.]                                                                                                                                                                                                           \n    [ 0.]]                                                                                                                                                                                                                                                                                                                                                                                                            \n   [[ 0.]                                                                                                                                                                                                           \n    [ 0.]]]                                                                                                                                                                                                         \n                                                                                                                                                                                                                    \n                                                                                                                                                                                                                    \n  [[[ 0.]                                                                                                                                                                                                           \n    [ 0.]]                                                                                                                                                                                                                                                                                                                                                                                                      \n   [[ 0.]                                                                                                                                                                                                           \n    [ 2.]]]]    \n                                                                                                                                                                                                    \n [array([[[[0]]], [[[3]]]])]    \n</code></pre>", "body_text": "@rmlarsen @benoitsteiner\n'n' variable is not used to compute the index because the data pointer is local for each example.\nconst dtype* bottom_data_n = bottom_data + n * channels * height * width;\n...\nint idx = c * height * width + h * width + w;\n...\nmask[index] = maxidx;\n\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/maxpooling_op_gpu.cu.cc#L75\nTest example which shows this is below. Note that index for pooled value 2 is 3 and not 7.\nimport numpy as np\nimport tensorflow as tf\n\nimg_shape = (2,2,2,1)\nimg = tf.placeholder(tf.float32, img_shape)\nksize = [1,2,2,1]\nstride = [1,2,2,1]\npool, argmax = tf.nn.max_pool_with_argmax(img, ksize, stride, padding='SAME', name='pool')\n\nimg_np = np.zeros(img_shape)\nimg_np[0,0,0] = 1\nimg_np[1,1,1] = 2\n\nwith tf.Session() as sess:\n  ops = [argmax]\n  feed = {img:img_np}\n  out = sess.run(ops, feed_dict=feed)\n  print(img_np)\n  print(out)\n\n [[[[ 1.]                                                                                                                                                                                                           \n    [ 0.]]                                                                                                                                                                                                                                                                                                                                                                                                            \n   [[ 0.]                                                                                                                                                                                                           \n    [ 0.]]]                                                                                                                                                                                                         \n                                                                                                                                                                                                                    \n                                                                                                                                                                                                                    \n  [[[ 0.]                                                                                                                                                                                                           \n    [ 0.]]                                                                                                                                                                                                                                                                                                                                                                                                      \n   [[ 0.]                                                                                                                                                                                                           \n    [ 2.]]]]    \n                                                                                                                                                                                                    \n [array([[[[0]]], [[[3]]]])]", "body": "@rmlarsen @benoitsteiner \r\n\r\n'n' variable is not used to compute the index because the data pointer is local for each example.\r\n```\r\nconst dtype* bottom_data_n = bottom_data + n * channels * height * width;\r\n...\r\nint idx = c * height * width + h * width + w;\r\n...\r\nmask[index] = maxidx;\r\n```\r\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/maxpooling_op_gpu.cu.cc#L75\r\n\r\nTest example which shows this is below. Note that index for pooled value 2 is 3 and not 7.\r\n\r\n```\r\nimport numpy as np\r\nimport tensorflow as tf\r\n\r\nimg_shape = (2,2,2,1)\r\nimg = tf.placeholder(tf.float32, img_shape)\r\nksize = [1,2,2,1]\r\nstride = [1,2,2,1]\r\npool, argmax = tf.nn.max_pool_with_argmax(img, ksize, stride, padding='SAME', name='pool')\r\n\r\nimg_np = np.zeros(img_shape)\r\nimg_np[0,0,0] = 1\r\nimg_np[1,1,1] = 2\r\n\r\nwith tf.Session() as sess:\r\n  ops = [argmax]\r\n  feed = {img:img_np}\r\n  out = sess.run(ops, feed_dict=feed)\r\n  print(img_np)\r\n  print(out)\r\n```\r\n```\r\n [[[[ 1.]                                                                                                                                                                                                           \r\n    [ 0.]]                                                                                                                                                                                                                                                                                                                                                                                                            \r\n   [[ 0.]                                                                                                                                                                                                           \r\n    [ 0.]]]                                                                                                                                                                                                         \r\n                                                                                                                                                                                                                    \r\n                                                                                                                                                                                                                    \r\n  [[[ 0.]                                                                                                                                                                                                           \r\n    [ 0.]]                                                                                                                                                                                                                                                                                                                                                                                                      \r\n   [[ 0.]                                                                                                                                                                                                           \r\n    [ 2.]]]]    \r\n                                                                                                                                                                                                    \r\n [array([[[[0]]], [[[3]]]])]    \r\n```"}