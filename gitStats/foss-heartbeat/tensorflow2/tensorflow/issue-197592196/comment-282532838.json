{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/282532838", "html_url": "https://github.com/tensorflow/tensorflow/issues/6504#issuecomment-282532838", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6504", "id": 282532838, "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjUzMjgzOA==", "user": {"login": "kstant0725", "id": 9817643, "node_id": "MDQ6VXNlcjk4MTc2NDM=", "avatar_url": "https://avatars0.githubusercontent.com/u/9817643?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kstant0725", "html_url": "https://github.com/kstant0725", "followers_url": "https://api.github.com/users/kstant0725/followers", "following_url": "https://api.github.com/users/kstant0725/following{/other_user}", "gists_url": "https://api.github.com/users/kstant0725/gists{/gist_id}", "starred_url": "https://api.github.com/users/kstant0725/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kstant0725/subscriptions", "organizations_url": "https://api.github.com/users/kstant0725/orgs", "repos_url": "https://api.github.com/users/kstant0725/repos", "events_url": "https://api.github.com/users/kstant0725/events{/privacy}", "received_events_url": "https://api.github.com/users/kstant0725/received_events", "type": "User", "site_admin": false}, "created_at": "2017-02-26T04:45:24Z", "updated_at": "2017-02-26T04:45:24Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=16907534\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/rmlarsen\">@rmlarsen</a> and <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5395510\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/krishpop\">@krishpop</a> The need for a QR decomposition came up my research when we wanted to implement a network layer that acts to orthonormalize the layer below it.  This can be a useful constraint for  training networks to find eigenfunctions.  SVD could also accomplish this, but has a higher computational cost, and imposes an additional rotational constraint.</p>", "body_text": "@rmlarsen and @krishpop The need for a QR decomposition came up my research when we wanted to implement a network layer that acts to orthonormalize the layer below it.  This can be a useful constraint for  training networks to find eigenfunctions.  SVD could also accomplish this, but has a higher computational cost, and imposes an additional rotational constraint.", "body": "@rmlarsen and @krishpop The need for a QR decomposition came up my research when we wanted to implement a network layer that acts to orthonormalize the layer below it.  This can be a useful constraint for  training networks to find eigenfunctions.  SVD could also accomplish this, but has a higher computational cost, and imposes an additional rotational constraint. "}