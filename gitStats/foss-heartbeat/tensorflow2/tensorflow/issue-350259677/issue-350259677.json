{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21590", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21590/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21590/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21590/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21590", "id": 350259677, "node_id": "MDU6SXNzdWUzNTAyNTk2Nzc=", "number": 21590, "title": "All metrics evaluate to 0.0 when using  tf.contrib.estimator.InMemoryEvaluatorHook", "user": {"login": "tavramov", "id": 30814992, "node_id": "MDQ6VXNlcjMwODE0OTky", "avatar_url": "https://avatars2.githubusercontent.com/u/30814992?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tavramov", "html_url": "https://github.com/tavramov", "followers_url": "https://api.github.com/users/tavramov/followers", "following_url": "https://api.github.com/users/tavramov/following{/other_user}", "gists_url": "https://api.github.com/users/tavramov/gists{/gist_id}", "starred_url": "https://api.github.com/users/tavramov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tavramov/subscriptions", "organizations_url": "https://api.github.com/users/tavramov/orgs", "repos_url": "https://api.github.com/users/tavramov/repos", "events_url": "https://api.github.com/users/tavramov/events{/privacy}", "received_events_url": "https://api.github.com/users/tavramov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}], "state": "open", "locked": false, "assignee": {"login": "karmel", "id": 667809, "node_id": "MDQ6VXNlcjY2NzgwOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/667809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karmel", "html_url": "https://github.com/karmel", "followers_url": "https://api.github.com/users/karmel/followers", "following_url": "https://api.github.com/users/karmel/following{/other_user}", "gists_url": "https://api.github.com/users/karmel/gists{/gist_id}", "starred_url": "https://api.github.com/users/karmel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karmel/subscriptions", "organizations_url": "https://api.github.com/users/karmel/orgs", "repos_url": "https://api.github.com/users/karmel/repos", "events_url": "https://api.github.com/users/karmel/events{/privacy}", "received_events_url": "https://api.github.com/users/karmel/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "karmel", "id": 667809, "node_id": "MDQ6VXNlcjY2NzgwOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/667809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karmel", "html_url": "https://github.com/karmel", "followers_url": "https://api.github.com/users/karmel/followers", "following_url": "https://api.github.com/users/karmel/following{/other_user}", "gists_url": "https://api.github.com/users/karmel/gists{/gist_id}", "starred_url": "https://api.github.com/users/karmel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karmel/subscriptions", "organizations_url": "https://api.github.com/users/karmel/orgs", "repos_url": "https://api.github.com/users/karmel/repos", "events_url": "https://api.github.com/users/karmel/events{/privacy}", "received_events_url": "https://api.github.com/users/karmel/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-08-14T02:34:21Z", "updated_at": "2018-11-15T19:03:54Z", "closed_at": null, "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Slight modification to cnn_mnist.py to include <code>InMemoryEvaluatorHook</code> . Original code can be found here <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/tutorials/layers/cnn_mnist.py\">here</a></li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu 16.04</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>:N/A</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary (i think)</li>\n<li><strong>TensorFlow version (use command below)</strong>:1.9.0 (with PR#20822)</li>\n<li><strong>Python version</strong>: 3.5.2</li>\n<li><strong>Bazel version (if compiling from source)</strong>:N/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:5.4.0</li>\n<li><strong>CUDA/cuDNN version</strong>:7.5</li>\n<li><strong>GPU model and memory</strong>: 2x TITAN X (12189MiB) &amp; Quadro P5000 (16273MiB)</li>\n<li><strong>Exact command to reproduce</strong>:  python3 cnn_mnist.py</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>When evaluating during training with <code>tf.contrib.estimator.InMemoryEvaluatorHook</code>, all evaluation metrics are evaluated to 0.0 after the very first time the evaluation hook is triggered. My suspicion is that it is caused by the use of <code>tf.estimator.inputs.numpy_input_fn</code>.</p>\n<h3>Source code:</h3>\n<p>Attached is the script I used. Basically, just added the following line:<br>\n<code> evaluator = tf.contrib.estimator.InMemoryEvaluatorHook(estimator=mnist_classifier, input_fn=eval_input_fn, every_n_iter=50)</code> and passed the hook to <code>mnist_classifer.train()</code></p>\n<p><a href=\"https://github.com/tensorflow/tensorflow/files/2285277/cnn_mnist.txt\">cnn_mnist.txt</a></p>\n<p>Here is the relevant output from running the training for 200 steps:</p>\n<p>INFO:tensorflow:Starting evaluation at 2018-08-14-02:15:35<br>\nINFO:tensorflow:Graph was finalized.<br>\nINFO:tensorflow:Running local_init_op.<br>\nINFO:tensorflow:Done running local_init_op.<br>\nINFO:tensorflow:Finished evaluation at 2018-08-14-02:15:37<br>\nINFO:tensorflow:Saving dict for global step 0: accuracy = 0.0915, global_step = 0, loss = 2.30028<br>\nINFO:tensorflow:loss = 2.29529, step = 0<br>\n...<br>\nINFO:tensorflow:Starting evaluation at 2018-08-14-02:15:37<br>\nINFO:tensorflow:Graph was finalized.<br>\nINFO:tensorflow:Running local_init_op.<br>\nINFO:tensorflow:Done running local_init_op.<br>\nINFO:tensorflow:Finished evaluation at 2018-08-14-02:15:37<br>\nINFO:tensorflow:Saving dict for global step 50: accuracy = 0.0, global_step = 50, loss = 0.0<br>\n...<br>\nINFO:tensorflow:Starting evaluation at 2018-08-14-02:15:38<br>\nINFO:tensorflow:Graph was finalized.<br>\nINFO:tensorflow:Running local_init_op.<br>\nINFO:tensorflow:Done running local_init_op.<br>\nINFO:tensorflow:Finished evaluation at 2018-08-14-02:15:38<br>\nINFO:tensorflow:Saving dict for global step 100: accuracy = 0.0, global_step = 100, loss = 0.0<br>\nINFO:tensorflow:global_step/sec: 103.013<br>\nINFO:tensorflow:loss = 2.27342, step = 100 (0.971 sec)<br>\n...<br>\nINFO:tensorflow:Starting evaluation at 2018-08-14-02:15:38<br>\nINFO:tensorflow:Graph was finalized.<br>\nINFO:tensorflow:Running local_init_op.<br>\nINFO:tensorflow:Done running local_init_op.<br>\nINFO:tensorflow:Finished evaluation at 2018-08-14-02:15:38<br>\nINFO:tensorflow:Saving dict for global step 150: accuracy = 0.0, global_step = 150, loss = 0.0<br>\n...<br>\nINFO:tensorflow:Starting evaluation at 2018-08-14-02:15:39<br>\nINFO:tensorflow:Graph was finalized.<br>\nINFO:tensorflow:Running local_init_op.<br>\nINFO:tensorflow:Done running local_init_op.<br>\nINFO:tensorflow:Finished evaluation at 2018-08-14-02:15:39<br>\nINFO:tensorflow:Saving dict for global step 200: accuracy = 0.0, global_step = 200, loss = 0.0<br>\n...<br>\nINFO:tensorflow:Saving checkpoints for 200 into ./tmp/mnist_convnet_model/model.ckpt.<br>\nINFO:tensorflow:Starting evaluation at 2018-08-14-02:15:39<br>\nINFO:tensorflow:Graph was finalized.<br>\nINFO:tensorflow:Running local_init_op.<br>\nINFO:tensorflow:Done running local_init_op.<br>\nINFO:tensorflow:Finished evaluation at 2018-08-14-02:15:39<br>\nINFO:tensorflow:Saving dict for global step 200: accuracy = 0.0, global_step = 200, loss = 0.0<br>\nINFO:tensorflow:Loss for final step: 2.25765.<br>\nINFO:tensorflow:Calling model_fn.<br>\nINFO:tensorflow:Done calling model_fn.<br>\n...<br>\nINFO:tensorflow:Starting evaluation at 2018-08-14-02:15:40<br>\nINFO:tensorflow:Graph was finalized.<br>\nINFO:tensorflow:Restoring parameters from ./tmp/mnist_convnet_model/model.ckpt-200<br>\nINFO:tensorflow:Running local_init_op.<br>\nINFO:tensorflow:Done running local_init_op.<br>\nINFO:tensorflow:Finished evaluation at 2018-08-14-02:15:40<br>\nINFO:tensorflow:Saving dict for global step 200: accuracy = 0.2611, global_step = 200, loss = 2.25732<br>\nINFO:tensorflow:Saving 'checkpoint_path' summary for global step 200: ./tmp/mnist_convnet_model/model.ckpt-200<br>\n{'global_step': 200, 'loss': 2.2573187, 'accuracy': 0.26109999}</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Slight modification to cnn_mnist.py to include InMemoryEvaluatorHook . Original code can be found here here\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:N/A\nTensorFlow installed from (source or binary): binary (i think)\nTensorFlow version (use command below):1.9.0 (with PR#20822)\nPython version: 3.5.2\nBazel version (if compiling from source):N/A\nGCC/Compiler version (if compiling from source):5.4.0\nCUDA/cuDNN version:7.5\nGPU model and memory: 2x TITAN X (12189MiB) & Quadro P5000 (16273MiB)\nExact command to reproduce:  python3 cnn_mnist.py\n\nDescribe the problem\nWhen evaluating during training with tf.contrib.estimator.InMemoryEvaluatorHook, all evaluation metrics are evaluated to 0.0 after the very first time the evaluation hook is triggered. My suspicion is that it is caused by the use of tf.estimator.inputs.numpy_input_fn.\nSource code:\nAttached is the script I used. Basically, just added the following line:\n evaluator = tf.contrib.estimator.InMemoryEvaluatorHook(estimator=mnist_classifier, input_fn=eval_input_fn, every_n_iter=50) and passed the hook to mnist_classifer.train()\ncnn_mnist.txt\nHere is the relevant output from running the training for 200 steps:\nINFO:tensorflow:Starting evaluation at 2018-08-14-02:15:35\nINFO:tensorflow:Graph was finalized.\nINFO:tensorflow:Running local_init_op.\nINFO:tensorflow:Done running local_init_op.\nINFO:tensorflow:Finished evaluation at 2018-08-14-02:15:37\nINFO:tensorflow:Saving dict for global step 0: accuracy = 0.0915, global_step = 0, loss = 2.30028\nINFO:tensorflow:loss = 2.29529, step = 0\n...\nINFO:tensorflow:Starting evaluation at 2018-08-14-02:15:37\nINFO:tensorflow:Graph was finalized.\nINFO:tensorflow:Running local_init_op.\nINFO:tensorflow:Done running local_init_op.\nINFO:tensorflow:Finished evaluation at 2018-08-14-02:15:37\nINFO:tensorflow:Saving dict for global step 50: accuracy = 0.0, global_step = 50, loss = 0.0\n...\nINFO:tensorflow:Starting evaluation at 2018-08-14-02:15:38\nINFO:tensorflow:Graph was finalized.\nINFO:tensorflow:Running local_init_op.\nINFO:tensorflow:Done running local_init_op.\nINFO:tensorflow:Finished evaluation at 2018-08-14-02:15:38\nINFO:tensorflow:Saving dict for global step 100: accuracy = 0.0, global_step = 100, loss = 0.0\nINFO:tensorflow:global_step/sec: 103.013\nINFO:tensorflow:loss = 2.27342, step = 100 (0.971 sec)\n...\nINFO:tensorflow:Starting evaluation at 2018-08-14-02:15:38\nINFO:tensorflow:Graph was finalized.\nINFO:tensorflow:Running local_init_op.\nINFO:tensorflow:Done running local_init_op.\nINFO:tensorflow:Finished evaluation at 2018-08-14-02:15:38\nINFO:tensorflow:Saving dict for global step 150: accuracy = 0.0, global_step = 150, loss = 0.0\n...\nINFO:tensorflow:Starting evaluation at 2018-08-14-02:15:39\nINFO:tensorflow:Graph was finalized.\nINFO:tensorflow:Running local_init_op.\nINFO:tensorflow:Done running local_init_op.\nINFO:tensorflow:Finished evaluation at 2018-08-14-02:15:39\nINFO:tensorflow:Saving dict for global step 200: accuracy = 0.0, global_step = 200, loss = 0.0\n...\nINFO:tensorflow:Saving checkpoints for 200 into ./tmp/mnist_convnet_model/model.ckpt.\nINFO:tensorflow:Starting evaluation at 2018-08-14-02:15:39\nINFO:tensorflow:Graph was finalized.\nINFO:tensorflow:Running local_init_op.\nINFO:tensorflow:Done running local_init_op.\nINFO:tensorflow:Finished evaluation at 2018-08-14-02:15:39\nINFO:tensorflow:Saving dict for global step 200: accuracy = 0.0, global_step = 200, loss = 0.0\nINFO:tensorflow:Loss for final step: 2.25765.\nINFO:tensorflow:Calling model_fn.\nINFO:tensorflow:Done calling model_fn.\n...\nINFO:tensorflow:Starting evaluation at 2018-08-14-02:15:40\nINFO:tensorflow:Graph was finalized.\nINFO:tensorflow:Restoring parameters from ./tmp/mnist_convnet_model/model.ckpt-200\nINFO:tensorflow:Running local_init_op.\nINFO:tensorflow:Done running local_init_op.\nINFO:tensorflow:Finished evaluation at 2018-08-14-02:15:40\nINFO:tensorflow:Saving dict for global step 200: accuracy = 0.2611, global_step = 200, loss = 2.25732\nINFO:tensorflow:Saving 'checkpoint_path' summary for global step 200: ./tmp/mnist_convnet_model/model.ckpt-200\n{'global_step': 200, 'loss': 2.2573187, 'accuracy': 0.26109999}", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Slight modification to cnn_mnist.py to include `InMemoryEvaluatorHook` . Original code can be found here [here](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/tutorials/layers/cnn_mnist.py)\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**:N/A\r\n- **TensorFlow installed from (source or binary)**: binary (i think)\r\n- **TensorFlow version (use command below)**:1.9.0 (with PR#20822)\r\n- **Python version**: 3.5.2\r\n- **Bazel version (if compiling from source)**:N/A\r\n- **GCC/Compiler version (if compiling from source)**:5.4.0\r\n- **CUDA/cuDNN version**:7.5\r\n- **GPU model and memory**: 2x TITAN X (12189MiB) & Quadro P5000 (16273MiB)\r\n- **Exact command to reproduce**:  python3 cnn_mnist.py\r\n\r\n### Describe the problem\r\nWhen evaluating during training with `tf.contrib.estimator.InMemoryEvaluatorHook`, all evaluation metrics are evaluated to 0.0 after the very first time the evaluation hook is triggered. My suspicion is that it is caused by the use of `tf.estimator.inputs.numpy_input_fn`.\r\n\r\n### Source code:\r\nAttached is the script I used. Basically, just added the following line:\r\n` evaluator = tf.contrib.estimator.InMemoryEvaluatorHook(estimator=mnist_classifier, input_fn=eval_input_fn, every_n_iter=50)` and passed the hook to `mnist_classifer.train()`\r\n\r\n[cnn_mnist.txt](https://github.com/tensorflow/tensorflow/files/2285277/cnn_mnist.txt)\r\n\r\n\r\nHere is the relevant output from running the training for 200 steps:\r\n\r\nINFO:tensorflow:Starting evaluation at 2018-08-14-02:15:35\r\nINFO:tensorflow:Graph was finalized.\r\nINFO:tensorflow:Running local_init_op.\r\nINFO:tensorflow:Done running local_init_op.\r\nINFO:tensorflow:Finished evaluation at 2018-08-14-02:15:37\r\nINFO:tensorflow:Saving dict for global step 0: accuracy = 0.0915, global_step = 0, loss = 2.30028\r\nINFO:tensorflow:loss = 2.29529, step = 0\r\n...\r\nINFO:tensorflow:Starting evaluation at 2018-08-14-02:15:37\r\nINFO:tensorflow:Graph was finalized.\r\nINFO:tensorflow:Running local_init_op.\r\nINFO:tensorflow:Done running local_init_op.\r\nINFO:tensorflow:Finished evaluation at 2018-08-14-02:15:37\r\nINFO:tensorflow:Saving dict for global step 50: accuracy = 0.0, global_step = 50, loss = 0.0\r\n...\r\nINFO:tensorflow:Starting evaluation at 2018-08-14-02:15:38\r\nINFO:tensorflow:Graph was finalized.\r\nINFO:tensorflow:Running local_init_op.\r\nINFO:tensorflow:Done running local_init_op.\r\nINFO:tensorflow:Finished evaluation at 2018-08-14-02:15:38\r\nINFO:tensorflow:Saving dict for global step 100: accuracy = 0.0, global_step = 100, loss = 0.0\r\nINFO:tensorflow:global_step/sec: 103.013\r\nINFO:tensorflow:loss = 2.27342, step = 100 (0.971 sec)\r\n...\r\nINFO:tensorflow:Starting evaluation at 2018-08-14-02:15:38\r\nINFO:tensorflow:Graph was finalized.\r\nINFO:tensorflow:Running local_init_op.\r\nINFO:tensorflow:Done running local_init_op.\r\nINFO:tensorflow:Finished evaluation at 2018-08-14-02:15:38\r\nINFO:tensorflow:Saving dict for global step 150: accuracy = 0.0, global_step = 150, loss = 0.0\r\n...\r\nINFO:tensorflow:Starting evaluation at 2018-08-14-02:15:39\r\nINFO:tensorflow:Graph was finalized.\r\nINFO:tensorflow:Running local_init_op.\r\nINFO:tensorflow:Done running local_init_op.\r\nINFO:tensorflow:Finished evaluation at 2018-08-14-02:15:39\r\nINFO:tensorflow:Saving dict for global step 200: accuracy = 0.0, global_step = 200, loss = 0.0\r\n...\r\nINFO:tensorflow:Saving checkpoints for 200 into ./tmp/mnist_convnet_model/model.ckpt.\r\nINFO:tensorflow:Starting evaluation at 2018-08-14-02:15:39\r\nINFO:tensorflow:Graph was finalized.\r\nINFO:tensorflow:Running local_init_op.\r\nINFO:tensorflow:Done running local_init_op.\r\nINFO:tensorflow:Finished evaluation at 2018-08-14-02:15:39\r\nINFO:tensorflow:Saving dict for global step 200: accuracy = 0.0, global_step = 200, loss = 0.0\r\nINFO:tensorflow:Loss for final step: 2.25765.\r\nINFO:tensorflow:Calling model_fn.\r\nINFO:tensorflow:Done calling model_fn.\r\n...\r\nINFO:tensorflow:Starting evaluation at 2018-08-14-02:15:40\r\nINFO:tensorflow:Graph was finalized.\r\nINFO:tensorflow:Restoring parameters from ./tmp/mnist_convnet_model/model.ckpt-200\r\nINFO:tensorflow:Running local_init_op.\r\nINFO:tensorflow:Done running local_init_op.\r\nINFO:tensorflow:Finished evaluation at 2018-08-14-02:15:40\r\nINFO:tensorflow:Saving dict for global step 200: accuracy = 0.2611, global_step = 200, loss = 2.25732\r\nINFO:tensorflow:Saving 'checkpoint_path' summary for global step 200: ./tmp/mnist_convnet_model/model.ckpt-200\r\n{'global_step': 200, 'loss': 2.2573187, 'accuracy': 0.26109999}\r\n"}