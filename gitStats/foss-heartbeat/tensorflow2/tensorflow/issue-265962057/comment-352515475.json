{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/352515475", "html_url": "https://github.com/tensorflow/tensorflow/issues/13766#issuecomment-352515475", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13766", "id": 352515475, "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjUxNTQ3NQ==", "user": {"login": "themodernlife", "id": 3942918, "node_id": "MDQ6VXNlcjM5NDI5MTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/3942918?v=4", "gravatar_id": "", "url": "https://api.github.com/users/themodernlife", "html_url": "https://github.com/themodernlife", "followers_url": "https://api.github.com/users/themodernlife/followers", "following_url": "https://api.github.com/users/themodernlife/following{/other_user}", "gists_url": "https://api.github.com/users/themodernlife/gists{/gist_id}", "starred_url": "https://api.github.com/users/themodernlife/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/themodernlife/subscriptions", "organizations_url": "https://api.github.com/users/themodernlife/orgs", "repos_url": "https://api.github.com/users/themodernlife/repos", "events_url": "https://api.github.com/users/themodernlife/events{/privacy}", "received_events_url": "https://api.github.com/users/themodernlife/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-18T18:24:54Z", "updated_at": "2017-12-18T18:24:54Z", "author_association": "NONE", "body_html": "<p>I'd also like to see <code>Dataset.padded_batch</code> support <code>tf.SparseTensor</code>.  Right now I'm using Spark to create word vectors and I'd prefer to keep all data in TFRecord files and implement zero-padding at the last moment in TensorFlow.</p>\n<p>Basically would like something like the below to work where <code>max_tokens</code> could be selected during model generation.</p>\n<pre><code>def parse_tokens(example):\n    parsed = tf.parse_single_example(example, features={\n        'tokens': tf.VarLenFeature(tf.int64)\n    })\n\ndataset = dataset.map(parse_tokens)\ndataset = dataset.padded_batch(args.batch_size, [args.max_tokens])\n</code></pre>", "body_text": "I'd also like to see Dataset.padded_batch support tf.SparseTensor.  Right now I'm using Spark to create word vectors and I'd prefer to keep all data in TFRecord files and implement zero-padding at the last moment in TensorFlow.\nBasically would like something like the below to work where max_tokens could be selected during model generation.\ndef parse_tokens(example):\n    parsed = tf.parse_single_example(example, features={\n        'tokens': tf.VarLenFeature(tf.int64)\n    })\n\ndataset = dataset.map(parse_tokens)\ndataset = dataset.padded_batch(args.batch_size, [args.max_tokens])", "body": "I'd also like to see `Dataset.padded_batch` support `tf.SparseTensor`.  Right now I'm using Spark to create word vectors and I'd prefer to keep all data in TFRecord files and implement zero-padding at the last moment in TensorFlow.\r\n\r\nBasically would like something like the below to work where `max_tokens` could be selected during model generation.\r\n\r\n```\r\ndef parse_tokens(example):\r\n    parsed = tf.parse_single_example(example, features={\r\n        'tokens': tf.VarLenFeature(tf.int64)\r\n    })\r\n\r\ndataset = dataset.map(parse_tokens)\r\ndataset = dataset.padded_batch(args.batch_size, [args.max_tokens])\r\n```"}