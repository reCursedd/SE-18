{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/393031981", "html_url": "https://github.com/tensorflow/tensorflow/issues/13766#issuecomment-393031981", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13766", "id": 393031981, "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzAzMTk4MQ==", "user": {"login": "byronyi", "id": 2613663, "node_id": "MDQ6VXNlcjI2MTM2NjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/2613663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/byronyi", "html_url": "https://github.com/byronyi", "followers_url": "https://api.github.com/users/byronyi/followers", "following_url": "https://api.github.com/users/byronyi/following{/other_user}", "gists_url": "https://api.github.com/users/byronyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/byronyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/byronyi/subscriptions", "organizations_url": "https://api.github.com/users/byronyi/orgs", "repos_url": "https://api.github.com/users/byronyi/repos", "events_url": "https://api.github.com/users/byronyi/events{/privacy}", "received_events_url": "https://api.github.com/users/byronyi/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-30T05:07:44Z", "updated_at": "2018-05-30T05:07:44Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Same issue as <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1891840\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/thomasquintana\">@thomasquintana</a> here. Any updates?</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-ii\">--------------------------------------------------------------------------</span><span class=\"pl-k\">-</span>\n<span class=\"pl-c1\">ValueError</span>                                Traceback (most recent call last)\n<span class=\"pl-k\">&lt;</span>ipython<span class=\"pl-k\">-</span><span class=\"pl-c1\">input</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">24</span><span class=\"pl-k\">-</span><span class=\"pl-ii\">90b0df972296</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">in</span> <span class=\"pl-k\">&lt;</span>module<span class=\"pl-k\">&gt;</span>()\n      <span class=\"pl-c1\">1</span> X, y <span class=\"pl-k\">=</span> <span class=\"pl-c1\">iter</span>(dataset).next()\n<span class=\"pl-ii\">----</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">2</span> y, predict(X)\n\n<span class=\"pl-k\">&lt;</span>ipython<span class=\"pl-k\">-</span><span class=\"pl-c1\">input</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">23</span><span class=\"pl-k\">-</span>f1d970eaa549<span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">in</span> predict(X)\n      <span class=\"pl-c1\">5</span> \n      <span class=\"pl-c1\">6</span> <span class=\"pl-k\">def</span> <span class=\"pl-en\">predict</span>(<span class=\"pl-smi\">X</span>):\n<span class=\"pl-ii\">----</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">7</span>     <span class=\"pl-k\">return</span> W <span class=\"pl-k\">@</span> X <span class=\"pl-k\">+</span> B\n\n<span class=\"pl-k\">/</span>usr<span class=\"pl-k\">/</span>local<span class=\"pl-k\">/</span>lib<span class=\"pl-k\">/</span>python3.6<span class=\"pl-k\">/</span>site<span class=\"pl-k\">-</span>packages<span class=\"pl-k\">/</span>tensorflow<span class=\"pl-k\">/</span>python<span class=\"pl-k\">/</span>ops<span class=\"pl-k\">/</span>resource_variable_ops.py <span class=\"pl-k\">in</span> _run_op(a, <span class=\"pl-k\">*</span>args)\n    <span class=\"pl-c1\">795</span>       <span class=\"pl-c\"><span class=\"pl-c\">#</span> pylint: disable=protected-access</span>\n    <span class=\"pl-c1\">796</span>       value <span class=\"pl-k\">=</span> a._AsTensor()\n<span class=\"pl-ii\">--</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">797</span>       <span class=\"pl-k\">return</span> <span class=\"pl-c1\">getattr</span>(ops.Tensor, operator)(value, <span class=\"pl-k\">*</span>args)\n    <span class=\"pl-c1\">798</span> \n    <span class=\"pl-c1\">799</span>     <span class=\"pl-c\"><span class=\"pl-c\">#</span> Propagate __doc__ to wrapper</span>\n\n<span class=\"pl-k\">/</span>usr<span class=\"pl-k\">/</span>local<span class=\"pl-k\">/</span>lib<span class=\"pl-k\">/</span>python3.6<span class=\"pl-k\">/</span>site<span class=\"pl-k\">-</span>packages<span class=\"pl-k\">/</span>tensorflow<span class=\"pl-k\">/</span>python<span class=\"pl-k\">/</span>ops<span class=\"pl-k\">/</span>math_ops.py <span class=\"pl-k\">in</span> binary_op_wrapper(x, y)\n    <span class=\"pl-c1\">977</span>           <span class=\"pl-k\">else</span>:\n    <span class=\"pl-c1\">978</span>             <span class=\"pl-k\">raise</span>\n<span class=\"pl-ii\">--</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">979</span>       <span class=\"pl-k\">return</span> func(x, y, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span>name)\n    <span class=\"pl-c1\">980</span> \n    <span class=\"pl-c1\">981</span>   <span class=\"pl-k\">def</span> <span class=\"pl-en\">binary_op_wrapper_sparse</span>(<span class=\"pl-smi\">sp_x</span>, <span class=\"pl-smi\">y</span>):\n\n<span class=\"pl-k\">/</span>usr<span class=\"pl-k\">/</span>local<span class=\"pl-k\">/</span>lib<span class=\"pl-k\">/</span>python3.6<span class=\"pl-k\">/</span>site<span class=\"pl-k\">-</span>packages<span class=\"pl-k\">/</span>tensorflow<span class=\"pl-k\">/</span>python<span class=\"pl-k\">/</span>ops<span class=\"pl-k\">/</span>math_ops.py <span class=\"pl-k\">in</span> matmul(a, b, transpose_a, transpose_b, adjoint_a, adjoint_b, a_is_sparse, b_is_sparse, name)\n   <span class=\"pl-c1\">2062</span>         a <span class=\"pl-k\">=</span> ops.convert_to_tensor(a, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>a<span class=\"pl-pds\">\"</span></span>)\n   <span class=\"pl-c1\">2063</span>       <span class=\"pl-k\">if</span> <span class=\"pl-k\">not</span> <span class=\"pl-c1\">isinstance</span>(b, (ops.EagerTensor, _resource_variable_type)):\n<span class=\"pl-ii\">-&gt;</span> <span class=\"pl-c1\">2064</span>         b <span class=\"pl-k\">=</span> ops.convert_to_tensor(b, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>b<span class=\"pl-pds\">\"</span></span>)\n   <span class=\"pl-c1\">2065</span>     <span class=\"pl-k\">else</span>:\n   <span class=\"pl-c1\">2066</span>       a <span class=\"pl-k\">=</span> ops.convert_to_tensor(a, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>a<span class=\"pl-pds\">\"</span></span>)\n\n<span class=\"pl-k\">/</span>usr<span class=\"pl-k\">/</span>local<span class=\"pl-k\">/</span>lib<span class=\"pl-k\">/</span>python3.6<span class=\"pl-k\">/</span>site<span class=\"pl-k\">-</span>packages<span class=\"pl-k\">/</span>tensorflow<span class=\"pl-k\">/</span>python<span class=\"pl-k\">/</span>framework<span class=\"pl-k\">/</span>ops.py <span class=\"pl-k\">in</span> convert_to_tensor(value, dtype, name, preferred_dtype)\n   <span class=\"pl-c1\">1012</span>       name<span class=\"pl-k\">=</span>name,\n   <span class=\"pl-c1\">1013</span>       preferred_dtype<span class=\"pl-k\">=</span>preferred_dtype,\n<span class=\"pl-ii\">-&gt;</span> <span class=\"pl-c1\">1014</span>       as_ref<span class=\"pl-k\">=</span><span class=\"pl-c1\">False</span>)\n   <span class=\"pl-c1\">1015</span> \n   <span class=\"pl-c1\">1016</span> \n\n<span class=\"pl-k\">/</span>usr<span class=\"pl-k\">/</span>local<span class=\"pl-k\">/</span>lib<span class=\"pl-k\">/</span>python3.6<span class=\"pl-k\">/</span>site<span class=\"pl-k\">-</span>packages<span class=\"pl-k\">/</span>tensorflow<span class=\"pl-k\">/</span>python<span class=\"pl-k\">/</span>framework<span class=\"pl-k\">/</span>ops.py <span class=\"pl-k\">in</span> internal_convert_to_tensor(value, dtype, name, as_ref, preferred_dtype, ctx)\n   <span class=\"pl-c1\">1102</span> \n   <span class=\"pl-c1\">1103</span>     <span class=\"pl-k\">if</span> ret <span class=\"pl-k\">is</span> <span class=\"pl-c1\">None</span>:\n<span class=\"pl-ii\">-&gt;</span> <span class=\"pl-c1\">1104</span>       ret <span class=\"pl-k\">=</span> conversion_func(value, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>dtype, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span>name, <span class=\"pl-v\">as_ref</span><span class=\"pl-k\">=</span>as_ref)\n   <span class=\"pl-c1\">1105</span> \n   <span class=\"pl-c1\">1106</span>     <span class=\"pl-k\">if</span> ret <span class=\"pl-k\">is</span> <span class=\"pl-c1\">NotImplemented</span>:\n\n<span class=\"pl-k\">/</span>usr<span class=\"pl-k\">/</span>local<span class=\"pl-k\">/</span>lib<span class=\"pl-k\">/</span>python3.6<span class=\"pl-k\">/</span>site<span class=\"pl-k\">-</span>packages<span class=\"pl-k\">/</span>tensorflow<span class=\"pl-k\">/</span>python<span class=\"pl-k\">/</span>framework<span class=\"pl-k\">/</span>constant_op.py <span class=\"pl-k\">in</span> _constant_tensor_conversion_function(v, dtype, name, as_ref)\n    <span class=\"pl-c1\">233</span>                                          as_ref<span class=\"pl-k\">=</span><span class=\"pl-c1\">False</span>):\n    <span class=\"pl-c1\">234</span>   _ <span class=\"pl-k\">=</span> as_ref\n<span class=\"pl-ii\">--</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">235</span>   <span class=\"pl-k\">return</span> constant(v, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>dtype, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span>name)\n    <span class=\"pl-c1\">236</span> \n    <span class=\"pl-c1\">237</span> \n\n<span class=\"pl-k\">/</span>usr<span class=\"pl-k\">/</span>local<span class=\"pl-k\">/</span>lib<span class=\"pl-k\">/</span>python3.6<span class=\"pl-k\">/</span>site<span class=\"pl-k\">-</span>packages<span class=\"pl-k\">/</span>tensorflow<span class=\"pl-k\">/</span>python<span class=\"pl-k\">/</span>framework<span class=\"pl-k\">/</span>constant_op.py <span class=\"pl-k\">in</span> constant(value, dtype, shape, name, verify_shape)\n    <span class=\"pl-c1\">183</span>   ctx <span class=\"pl-k\">=</span> context.context()\n    <span class=\"pl-c1\">184</span>   <span class=\"pl-k\">if</span> ctx.executing_eagerly():\n<span class=\"pl-ii\">--</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">185</span>     t <span class=\"pl-k\">=</span> convert_to_eager_tensor(value, ctx, dtype)\n    <span class=\"pl-c1\">186</span>     <span class=\"pl-k\">if</span> shape <span class=\"pl-k\">is</span> <span class=\"pl-c1\">None</span>:\n    <span class=\"pl-c1\">187</span>       <span class=\"pl-k\">return</span> t\n\n<span class=\"pl-k\">/</span>usr<span class=\"pl-k\">/</span>local<span class=\"pl-k\">/</span>lib<span class=\"pl-k\">/</span>python3.6<span class=\"pl-k\">/</span>site<span class=\"pl-k\">-</span>packages<span class=\"pl-k\">/</span>tensorflow<span class=\"pl-k\">/</span>python<span class=\"pl-k\">/</span>framework<span class=\"pl-k\">/</span>constant_op.py <span class=\"pl-k\">in</span> convert_to_eager_tensor(value, ctx, dtype)\n    <span class=\"pl-c1\">129</span>     <span class=\"pl-k\">return</span> t\n    <span class=\"pl-c1\">130</span>   <span class=\"pl-k\">else</span>:\n<span class=\"pl-ii\">--</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">131</span>     <span class=\"pl-k\">return</span> ops.EagerTensor(value, <span class=\"pl-v\">context</span><span class=\"pl-k\">=</span>handle, <span class=\"pl-v\">device</span><span class=\"pl-k\">=</span>device, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>dtype)\n    <span class=\"pl-c1\">132</span> \n    <span class=\"pl-c1\">133</span> \n\n<span class=\"pl-c1\">ValueError</span>: Attempt to convert a value (<span class=\"pl-k\">&lt;</span>tensorflow.python.framework.sparse_tensor.SparseTensor <span class=\"pl-c1\">object</span> at <span class=\"pl-c1\"><span class=\"pl-k\">0x</span>119ec7780</span><span class=\"pl-k\">&gt;</span>) <span class=\"pl-k\">with</span> an unsupported <span class=\"pl-c1\">type</span> (<span class=\"pl-k\">&lt;</span><span class=\"pl-k\">class</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>tensorflow.python.framework.sparse_tensor.SparseTensor<span class=\"pl-pds\">'</span></span><span class=\"pl-k\">&gt;</span>) to a Tensor.</pre></div>", "body_text": "Same issue as @thomasquintana here. Any updates?\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n<ipython-input-24-90b0df972296> in <module>()\n      1 X, y = iter(dataset).next()\n----> 2 y, predict(X)\n\n<ipython-input-23-f1d970eaa549> in predict(X)\n      5 \n      6 def predict(X):\n----> 7     return W @ X + B\n\n/usr/local/lib/python3.6/site-packages/tensorflow/python/ops/resource_variable_ops.py in _run_op(a, *args)\n    795       # pylint: disable=protected-access\n    796       value = a._AsTensor()\n--> 797       return getattr(ops.Tensor, operator)(value, *args)\n    798 \n    799     # Propagate __doc__ to wrapper\n\n/usr/local/lib/python3.6/site-packages/tensorflow/python/ops/math_ops.py in binary_op_wrapper(x, y)\n    977           else:\n    978             raise\n--> 979       return func(x, y, name=name)\n    980 \n    981   def binary_op_wrapper_sparse(sp_x, y):\n\n/usr/local/lib/python3.6/site-packages/tensorflow/python/ops/math_ops.py in matmul(a, b, transpose_a, transpose_b, adjoint_a, adjoint_b, a_is_sparse, b_is_sparse, name)\n   2062         a = ops.convert_to_tensor(a, name=\"a\")\n   2063       if not isinstance(b, (ops.EagerTensor, _resource_variable_type)):\n-> 2064         b = ops.convert_to_tensor(b, name=\"b\")\n   2065     else:\n   2066       a = ops.convert_to_tensor(a, name=\"a\")\n\n/usr/local/lib/python3.6/site-packages/tensorflow/python/framework/ops.py in convert_to_tensor(value, dtype, name, preferred_dtype)\n   1012       name=name,\n   1013       preferred_dtype=preferred_dtype,\n-> 1014       as_ref=False)\n   1015 \n   1016 \n\n/usr/local/lib/python3.6/site-packages/tensorflow/python/framework/ops.py in internal_convert_to_tensor(value, dtype, name, as_ref, preferred_dtype, ctx)\n   1102 \n   1103     if ret is None:\n-> 1104       ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n   1105 \n   1106     if ret is NotImplemented:\n\n/usr/local/lib/python3.6/site-packages/tensorflow/python/framework/constant_op.py in _constant_tensor_conversion_function(v, dtype, name, as_ref)\n    233                                          as_ref=False):\n    234   _ = as_ref\n--> 235   return constant(v, dtype=dtype, name=name)\n    236 \n    237 \n\n/usr/local/lib/python3.6/site-packages/tensorflow/python/framework/constant_op.py in constant(value, dtype, shape, name, verify_shape)\n    183   ctx = context.context()\n    184   if ctx.executing_eagerly():\n--> 185     t = convert_to_eager_tensor(value, ctx, dtype)\n    186     if shape is None:\n    187       return t\n\n/usr/local/lib/python3.6/site-packages/tensorflow/python/framework/constant_op.py in convert_to_eager_tensor(value, ctx, dtype)\n    129     return t\n    130   else:\n--> 131     return ops.EagerTensor(value, context=handle, device=device, dtype=dtype)\n    132 \n    133 \n\nValueError: Attempt to convert a value (<tensorflow.python.framework.sparse_tensor.SparseTensor object at 0x119ec7780>) with an unsupported type (<class 'tensorflow.python.framework.sparse_tensor.SparseTensor'>) to a Tensor.", "body": "Same issue as @thomasquintana here. Any updates?\r\n\r\n```python\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-24-90b0df972296> in <module>()\r\n      1 X, y = iter(dataset).next()\r\n----> 2 y, predict(X)\r\n\r\n<ipython-input-23-f1d970eaa549> in predict(X)\r\n      5 \r\n      6 def predict(X):\r\n----> 7     return W @ X + B\r\n\r\n/usr/local/lib/python3.6/site-packages/tensorflow/python/ops/resource_variable_ops.py in _run_op(a, *args)\r\n    795       # pylint: disable=protected-access\r\n    796       value = a._AsTensor()\r\n--> 797       return getattr(ops.Tensor, operator)(value, *args)\r\n    798 \r\n    799     # Propagate __doc__ to wrapper\r\n\r\n/usr/local/lib/python3.6/site-packages/tensorflow/python/ops/math_ops.py in binary_op_wrapper(x, y)\r\n    977           else:\r\n    978             raise\r\n--> 979       return func(x, y, name=name)\r\n    980 \r\n    981   def binary_op_wrapper_sparse(sp_x, y):\r\n\r\n/usr/local/lib/python3.6/site-packages/tensorflow/python/ops/math_ops.py in matmul(a, b, transpose_a, transpose_b, adjoint_a, adjoint_b, a_is_sparse, b_is_sparse, name)\r\n   2062         a = ops.convert_to_tensor(a, name=\"a\")\r\n   2063       if not isinstance(b, (ops.EagerTensor, _resource_variable_type)):\r\n-> 2064         b = ops.convert_to_tensor(b, name=\"b\")\r\n   2065     else:\r\n   2066       a = ops.convert_to_tensor(a, name=\"a\")\r\n\r\n/usr/local/lib/python3.6/site-packages/tensorflow/python/framework/ops.py in convert_to_tensor(value, dtype, name, preferred_dtype)\r\n   1012       name=name,\r\n   1013       preferred_dtype=preferred_dtype,\r\n-> 1014       as_ref=False)\r\n   1015 \r\n   1016 \r\n\r\n/usr/local/lib/python3.6/site-packages/tensorflow/python/framework/ops.py in internal_convert_to_tensor(value, dtype, name, as_ref, preferred_dtype, ctx)\r\n   1102 \r\n   1103     if ret is None:\r\n-> 1104       ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\r\n   1105 \r\n   1106     if ret is NotImplemented:\r\n\r\n/usr/local/lib/python3.6/site-packages/tensorflow/python/framework/constant_op.py in _constant_tensor_conversion_function(v, dtype, name, as_ref)\r\n    233                                          as_ref=False):\r\n    234   _ = as_ref\r\n--> 235   return constant(v, dtype=dtype, name=name)\r\n    236 \r\n    237 \r\n\r\n/usr/local/lib/python3.6/site-packages/tensorflow/python/framework/constant_op.py in constant(value, dtype, shape, name, verify_shape)\r\n    183   ctx = context.context()\r\n    184   if ctx.executing_eagerly():\r\n--> 185     t = convert_to_eager_tensor(value, ctx, dtype)\r\n    186     if shape is None:\r\n    187       return t\r\n\r\n/usr/local/lib/python3.6/site-packages/tensorflow/python/framework/constant_op.py in convert_to_eager_tensor(value, ctx, dtype)\r\n    129     return t\r\n    130   else:\r\n--> 131     return ops.EagerTensor(value, context=handle, device=device, dtype=dtype)\r\n    132 \r\n    133 \r\n\r\nValueError: Attempt to convert a value (<tensorflow.python.framework.sparse_tensor.SparseTensor object at 0x119ec7780>) with an unsupported type (<class 'tensorflow.python.framework.sparse_tensor.SparseTensor'>) to a Tensor.\r\n```"}