{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/297709527", "html_url": "https://github.com/tensorflow/tensorflow/pull/9432#issuecomment-297709527", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9432", "id": 297709527, "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzcwOTUyNw==", "user": {"login": "junshi15", "id": 12075848, "node_id": "MDQ6VXNlcjEyMDc1ODQ4", "avatar_url": "https://avatars3.githubusercontent.com/u/12075848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/junshi15", "html_url": "https://github.com/junshi15", "followers_url": "https://api.github.com/users/junshi15/followers", "following_url": "https://api.github.com/users/junshi15/following{/other_user}", "gists_url": "https://api.github.com/users/junshi15/gists{/gist_id}", "starred_url": "https://api.github.com/users/junshi15/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/junshi15/subscriptions", "organizations_url": "https://api.github.com/users/junshi15/orgs", "repos_url": "https://api.github.com/users/junshi15/repos", "events_url": "https://api.github.com/users/junshi15/events{/privacy}", "received_events_url": "https://api.github.com/users/junshi15/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-27T13:14:24Z", "updated_at": "2017-04-27T13:14:24Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=22274255\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/shamoya\">@shamoya</a><br>\nI totally support the idea of using rdma_cm to establish the cluster. I compared rdma_cm and out-of-band communication (gRPC in this case) during the early stage of my design. I chose the latter mostly out of  convenience: I had working code from CaffeOnSpark, which uses Spark to establish the cluster. In addition, we only use IB fabric in house, no need to worry about the diversity of the family of IB networks. Rdma_cm should make it easy to support most of them with minimal effort.</p>\n<p>Note we still need specify host:port in python server definition as we use gRPC for sending graphs, etc.</p>\n<p>If this patch looks good, let's approve it. We can start another PR for rdma_cm. I am happy to work with you.</p>", "body_text": "@shamoya\nI totally support the idea of using rdma_cm to establish the cluster. I compared rdma_cm and out-of-band communication (gRPC in this case) during the early stage of my design. I chose the latter mostly out of  convenience: I had working code from CaffeOnSpark, which uses Spark to establish the cluster. In addition, we only use IB fabric in house, no need to worry about the diversity of the family of IB networks. Rdma_cm should make it easy to support most of them with minimal effort.\nNote we still need specify host:port in python server definition as we use gRPC for sending graphs, etc.\nIf this patch looks good, let's approve it. We can start another PR for rdma_cm. I am happy to work with you.", "body": "@shamoya \r\nI totally support the idea of using rdma_cm to establish the cluster. I compared rdma_cm and out-of-band communication (gRPC in this case) during the early stage of my design. I chose the latter mostly out of  convenience: I had working code from CaffeOnSpark, which uses Spark to establish the cluster. In addition, we only use IB fabric in house, no need to worry about the diversity of the family of IB networks. Rdma_cm should make it easy to support most of them with minimal effort. \r\n\r\nNote we still need specify host:port in python server definition as we use gRPC for sending graphs, etc.\r\n \r\nIf this patch looks good, let's approve it. We can start another PR for rdma_cm. I am happy to work with you."}