{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2281", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2281/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2281/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2281/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/2281", "id": 153711382, "node_id": "MDU6SXNzdWUxNTM3MTEzODI=", "number": 2281, "title": "Weird partial_run segment fault bug", "user": {"login": "myme5261314", "id": 1814831, "node_id": "MDQ6VXNlcjE4MTQ4MzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1814831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/myme5261314", "html_url": "https://github.com/myme5261314", "followers_url": "https://api.github.com/users/myme5261314/followers", "following_url": "https://api.github.com/users/myme5261314/following{/other_user}", "gists_url": "https://api.github.com/users/myme5261314/gists{/gist_id}", "starred_url": "https://api.github.com/users/myme5261314/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/myme5261314/subscriptions", "organizations_url": "https://api.github.com/users/myme5261314/orgs", "repos_url": "https://api.github.com/users/myme5261314/repos", "events_url": "https://api.github.com/users/myme5261314/events{/privacy}", "received_events_url": "https://api.github.com/users/myme5261314/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "yuanbyu", "id": 2342391, "node_id": "MDQ6VXNlcjIzNDIzOTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/2342391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuanbyu", "html_url": "https://github.com/yuanbyu", "followers_url": "https://api.github.com/users/yuanbyu/followers", "following_url": "https://api.github.com/users/yuanbyu/following{/other_user}", "gists_url": "https://api.github.com/users/yuanbyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuanbyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuanbyu/subscriptions", "organizations_url": "https://api.github.com/users/yuanbyu/orgs", "repos_url": "https://api.github.com/users/yuanbyu/repos", "events_url": "https://api.github.com/users/yuanbyu/events{/privacy}", "received_events_url": "https://api.github.com/users/yuanbyu/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "yuanbyu", "id": 2342391, "node_id": "MDQ6VXNlcjIzNDIzOTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/2342391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuanbyu", "html_url": "https://github.com/yuanbyu", "followers_url": "https://api.github.com/users/yuanbyu/followers", "following_url": "https://api.github.com/users/yuanbyu/following{/other_user}", "gists_url": "https://api.github.com/users/yuanbyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuanbyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuanbyu/subscriptions", "organizations_url": "https://api.github.com/users/yuanbyu/orgs", "repos_url": "https://api.github.com/users/yuanbyu/repos", "events_url": "https://api.github.com/users/yuanbyu/events{/privacy}", "received_events_url": "https://api.github.com/users/yuanbyu/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2016-05-09T06:32:51Z", "updated_at": "2016-05-10T17:20:42Z", "closed_at": "2016-05-10T17:20:42Z", "author_association": "NONE", "body_html": "<h3>Environment info</h3>\n<p>Operating System: Ubuntu 14.04</p>\n<p>Installed version of CUDA and cuDNN: 7.5 and 4.0.7<br>\n(please attach the output of <code>ls -l /path/to/cuda/lib/libcud*</code>):</p>\n<pre><code>/usr/local/cuda/lib64/libcudadevrt.a    /usr/local/cuda/lib64/libcudart.so.7.5.18  /usr/local/cuda/lib64/libcudnn.so.4\n/usr/local/cuda/lib64/libcudart.so      /usr/local/cuda/lib64/libcudart_static.a   /usr/local/cuda/lib64/libcudnn.so.4.0.7\n/usr/local/cuda/lib64/libcudart.so.7.5  /usr/local/cuda/lib64/libcudnn.so          /usr/local/cuda/lib64/libcudnn_static.a\n</code></pre>\n<p>If installed from sources, provide the commit hash: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/4a4f2461533847dde239851ecebe5056088a828c/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/4a4f2461533847dde239851ecebe5056088a828c\"><tt>4a4f246</tt></a></p>\n<h3>Steps to reproduce</h3>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> @profile</span>\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">main</span>():\n    a <span class=\"pl-k\">=</span> tf.Variable(tf.random_normal(<span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">1000</span>, <span class=\"pl-c1\">1000</span>]))\n    b <span class=\"pl-k\">=</span> a <span class=\"pl-k\">*</span> <span class=\"pl-c1\">2</span>\n    c <span class=\"pl-k\">=</span> b <span class=\"pl-k\">*</span> <span class=\"pl-c1\">3</span>\n    sess <span class=\"pl-k\">=</span> tf.Session()\n    sess.run(tf.initialize_all_variables())\n\n\n    sess.run(c)\n\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> Uncomment this code region, and segment fault will be gone.</span>\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> for _ in xrange(1000):</span>\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span>     h = sess.partial_run_setup([b, c], [])</span>\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span>     res = sess.partial_run(h, [b, c])</span>\n\n    <span class=\"pl-k\">for</span> _ <span class=\"pl-k\">in</span> <span class=\"pl-v\">xrange</span>(<span class=\"pl-c1\">1000</span>):\n        d <span class=\"pl-k\">=</span> sess.run(b)\n    <span class=\"pl-k\">for</span> _ <span class=\"pl-k\">in</span> <span class=\"pl-v\">xrange</span>(<span class=\"pl-c1\">1000</span>):\n        e <span class=\"pl-k\">=</span> sess.run(c)\n    <span class=\"pl-k\">for</span> _ <span class=\"pl-k\">in</span> <span class=\"pl-v\">xrange</span>(<span class=\"pl-c1\">1000</span>):\n        f <span class=\"pl-k\">=</span> sess.run([b, c])\n    <span class=\"pl-k\">for</span> _ <span class=\"pl-k\">in</span> <span class=\"pl-v\">xrange</span>(<span class=\"pl-c1\">1000</span>):\n        h <span class=\"pl-k\">=</span> sess.partial_run_setup([b, c], [])\n        res <span class=\"pl-k\">=</span> sess.partial_run(h, [b, c])\n\n<span class=\"pl-k\">if</span> <span class=\"pl-c1\">__name__</span> <span class=\"pl-k\">==</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>__main__<span class=\"pl-pds\">'</span></span>:\n    main()</pre></div>\n<h3>What have you tried?</h3>\n<ol>\n<li>Uncomment the commented region will make segment fault disappear.</li>\n</ol>", "body_text": "Environment info\nOperating System: Ubuntu 14.04\nInstalled version of CUDA and cuDNN: 7.5 and 4.0.7\n(please attach the output of ls -l /path/to/cuda/lib/libcud*):\n/usr/local/cuda/lib64/libcudadevrt.a    /usr/local/cuda/lib64/libcudart.so.7.5.18  /usr/local/cuda/lib64/libcudnn.so.4\n/usr/local/cuda/lib64/libcudart.so      /usr/local/cuda/lib64/libcudart_static.a   /usr/local/cuda/lib64/libcudnn.so.4.0.7\n/usr/local/cuda/lib64/libcudart.so.7.5  /usr/local/cuda/lib64/libcudnn.so          /usr/local/cuda/lib64/libcudnn_static.a\n\nIf installed from sources, provide the commit hash: 4a4f246\nSteps to reproduce\nimport tensorflow as tf\nimport numpy as np\n\n# @profile\ndef main():\n    a = tf.Variable(tf.random_normal(shape=[1000, 1000]))\n    b = a * 2\n    c = b * 3\n    sess = tf.Session()\n    sess.run(tf.initialize_all_variables())\n\n\n    sess.run(c)\n\n    # Uncomment this code region, and segment fault will be gone.\n    # for _ in xrange(1000):\n    #     h = sess.partial_run_setup([b, c], [])\n    #     res = sess.partial_run(h, [b, c])\n\n    for _ in xrange(1000):\n        d = sess.run(b)\n    for _ in xrange(1000):\n        e = sess.run(c)\n    for _ in xrange(1000):\n        f = sess.run([b, c])\n    for _ in xrange(1000):\n        h = sess.partial_run_setup([b, c], [])\n        res = sess.partial_run(h, [b, c])\n\nif __name__ == '__main__':\n    main()\nWhat have you tried?\n\nUncomment the commented region will make segment fault disappear.", "body": "### Environment info\n\nOperating System: Ubuntu 14.04\n\nInstalled version of CUDA and cuDNN: 7.5 and 4.0.7\n(please attach the output of `ls -l /path/to/cuda/lib/libcud*`):\n\n```\n/usr/local/cuda/lib64/libcudadevrt.a    /usr/local/cuda/lib64/libcudart.so.7.5.18  /usr/local/cuda/lib64/libcudnn.so.4\n/usr/local/cuda/lib64/libcudart.so      /usr/local/cuda/lib64/libcudart_static.a   /usr/local/cuda/lib64/libcudnn.so.4.0.7\n/usr/local/cuda/lib64/libcudart.so.7.5  /usr/local/cuda/lib64/libcudnn.so          /usr/local/cuda/lib64/libcudnn_static.a\n```\n\nIf installed from sources, provide the commit hash: 4a4f2461533847dde239851ecebe5056088a828c\n### Steps to reproduce\n\n``` python\nimport tensorflow as tf\nimport numpy as np\n\n# @profile\ndef main():\n    a = tf.Variable(tf.random_normal(shape=[1000, 1000]))\n    b = a * 2\n    c = b * 3\n    sess = tf.Session()\n    sess.run(tf.initialize_all_variables())\n\n\n    sess.run(c)\n\n    # Uncomment this code region, and segment fault will be gone.\n    # for _ in xrange(1000):\n    #     h = sess.partial_run_setup([b, c], [])\n    #     res = sess.partial_run(h, [b, c])\n\n    for _ in xrange(1000):\n        d = sess.run(b)\n    for _ in xrange(1000):\n        e = sess.run(c)\n    for _ in xrange(1000):\n        f = sess.run([b, c])\n    for _ in xrange(1000):\n        h = sess.partial_run_setup([b, c], [])\n        res = sess.partial_run(h, [b, c])\n\nif __name__ == '__main__':\n    main()\n```\n### What have you tried?\n1. Uncomment the commented region will make segment fault disappear.\n"}