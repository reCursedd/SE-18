{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17164", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17164/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17164/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17164/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17164", "id": 298923182, "node_id": "MDU6SXNzdWUyOTg5MjMxODI=", "number": 17164, "title": "Catch / recover from CUDNN_STATUS_BAD_PARAM", "user": {"login": "hko-gh", "id": 11026728, "node_id": "MDQ6VXNlcjExMDI2NzI4", "avatar_url": "https://avatars2.githubusercontent.com/u/11026728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hko-gh", "html_url": "https://github.com/hko-gh", "followers_url": "https://api.github.com/users/hko-gh/followers", "following_url": "https://api.github.com/users/hko-gh/following{/other_user}", "gists_url": "https://api.github.com/users/hko-gh/gists{/gist_id}", "starred_url": "https://api.github.com/users/hko-gh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hko-gh/subscriptions", "organizations_url": "https://api.github.com/users/hko-gh/orgs", "repos_url": "https://api.github.com/users/hko-gh/repos", "events_url": "https://api.github.com/users/hko-gh/events{/privacy}", "received_events_url": "https://api.github.com/users/hko-gh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "reedwm", "id": 6510203, "node_id": "MDQ6VXNlcjY1MTAyMDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/6510203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reedwm", "html_url": "https://github.com/reedwm", "followers_url": "https://api.github.com/users/reedwm/followers", "following_url": "https://api.github.com/users/reedwm/following{/other_user}", "gists_url": "https://api.github.com/users/reedwm/gists{/gist_id}", "starred_url": "https://api.github.com/users/reedwm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reedwm/subscriptions", "organizations_url": "https://api.github.com/users/reedwm/orgs", "repos_url": "https://api.github.com/users/reedwm/repos", "events_url": "https://api.github.com/users/reedwm/events{/privacy}", "received_events_url": "https://api.github.com/users/reedwm/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "reedwm", "id": 6510203, "node_id": "MDQ6VXNlcjY1MTAyMDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/6510203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reedwm", "html_url": "https://github.com/reedwm", "followers_url": "https://api.github.com/users/reedwm/followers", "following_url": "https://api.github.com/users/reedwm/following{/other_user}", "gists_url": "https://api.github.com/users/reedwm/gists{/gist_id}", "starred_url": "https://api.github.com/users/reedwm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reedwm/subscriptions", "organizations_url": "https://api.github.com/users/reedwm/orgs", "repos_url": "https://api.github.com/users/reedwm/repos", "events_url": "https://api.github.com/users/reedwm/events{/privacy}", "received_events_url": "https://api.github.com/users/reedwm/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2018-02-21T10:53:13Z", "updated_at": "2018-04-09T18:32:47Z", "closed_at": "2018-04-09T18:32:46Z", "author_association": "NONE", "body_html": "<p>Hi all,</p>\n<ul>\n<li>Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes</li>\n<li>OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Win7</li>\n<li>TensorFlow installed from (source or binary): source</li>\n<li>TensorFlow version (use command below): 1.3</li>\n<li>GCC/Compiler version (if compiling from source): VC14_64</li>\n<li>CUDA/cuDNN version: 8 / 6</li>\n<li>GPU model and memory: Quadro K2000M</li>\n<li>Bazel version (if compiling from source): N/A</li>\n<li>Exact command to reproduce: N/A</li>\n</ul>\n<p>I am using the C++ API to load and execute trained models.<br>\nI sometimes experience a problem regarding the ensemble of CuDNN and tensorflow:<br>\nWhen I invoke Session::Run and the input tensor I am providing is too small for the network (which is fully convolutional and thus has no fixed input extents given), CuDNN crashes with CUDNN_STATUS_BAD_PARAM.<br>\nIs there any way to catch this as an exception or somehow recover from that failure? Or is there a way to determine whether the given tensor extent will lead to such an error before I actually throw it at the network?</p>\n<p>Thanks!</p>", "body_text": "Hi all,\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Win7\nTensorFlow installed from (source or binary): source\nTensorFlow version (use command below): 1.3\nGCC/Compiler version (if compiling from source): VC14_64\nCUDA/cuDNN version: 8 / 6\nGPU model and memory: Quadro K2000M\nBazel version (if compiling from source): N/A\nExact command to reproduce: N/A\n\nI am using the C++ API to load and execute trained models.\nI sometimes experience a problem regarding the ensemble of CuDNN and tensorflow:\nWhen I invoke Session::Run and the input tensor I am providing is too small for the network (which is fully convolutional and thus has no fixed input extents given), CuDNN crashes with CUDNN_STATUS_BAD_PARAM.\nIs there any way to catch this as an exception or somehow recover from that failure? Or is there a way to determine whether the given tensor extent will lead to such an error before I actually throw it at the network?\nThanks!", "body": "Hi all,\r\n\r\n* Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes\r\n* OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Win7\r\n* TensorFlow installed from (source or binary): source\r\n* TensorFlow version (use command below): 1.3\r\n* GCC/Compiler version (if compiling from source): VC14_64\r\n* CUDA/cuDNN version: 8 / 6\r\n* GPU model and memory: Quadro K2000M\r\n* Bazel version (if compiling from source): N/A\r\n* Exact command to reproduce: N/A\r\n\r\nI am using the C++ API to load and execute trained models.\r\nI sometimes experience a problem regarding the ensemble of CuDNN and tensorflow:\r\nWhen I invoke Session::Run and the input tensor I am providing is too small for the network (which is fully convolutional and thus has no fixed input extents given), CuDNN crashes with CUDNN_STATUS_BAD_PARAM.\r\nIs there any way to catch this as an exception or somehow recover from that failure? Or is there a way to determine whether the given tensor extent will lead to such an error before I actually throw it at the network?\r\n\r\nThanks!"}