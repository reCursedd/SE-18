{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/229554910", "html_url": "https://github.com/tensorflow/tensorflow/issues/3106#issuecomment-229554910", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3106", "id": 229554910, "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTU1NDkxMA==", "user": {"login": "markpwoodward", "id": 6820773, "node_id": "MDQ6VXNlcjY4MjA3NzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/6820773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markpwoodward", "html_url": "https://github.com/markpwoodward", "followers_url": "https://api.github.com/users/markpwoodward/followers", "following_url": "https://api.github.com/users/markpwoodward/following{/other_user}", "gists_url": "https://api.github.com/users/markpwoodward/gists{/gist_id}", "starred_url": "https://api.github.com/users/markpwoodward/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markpwoodward/subscriptions", "organizations_url": "https://api.github.com/users/markpwoodward/orgs", "repos_url": "https://api.github.com/users/markpwoodward/repos", "events_url": "https://api.github.com/users/markpwoodward/events{/privacy}", "received_events_url": "https://api.github.com/users/markpwoodward/received_events", "type": "User", "site_admin": false}, "created_at": "2016-06-30T04:10:02Z", "updated_at": "2016-06-30T04:10:28Z", "author_association": "NONE", "body_html": "<p>The buffers and cached columns are 0GB because I had just rebooted (I also rebooted between posts, which is how I got down to 0GB used again). The \"used\" and \"free\" of the buffers/cache line are  - or + \"buffers+cached\", since \"buffers+cached\" is 0GB the two rows are equal. You are correct that a system running for a while will have very different rows, since buffers and cached will be large.</p>\n<p>The field to focus on is row['buffers/cache'], column['free'], this field is the real free memory available to programs. When that field drops to zero, the system hangs (ignoring swap), which is what brought this to my attention on EC2 where the instance only had ~14GB of memory, and that field dropped to 0GB.</p>\n<p><code>free</code> says that 7GB are being used, even after you account for buffers and cache, but <code>ps</code> says that no programs are using that memory. I believe this suggest a leak in kernel space, but I am not an expert in that. My second post gives a simple script to reproduce the problem. If you have 7GB of ram, then execute that script 100 times, as I do above, and the computer should lock up, or 400 times if you have 28GB, etc.</p>\n<p>In my second post, I first run with GPU enabled and 7GB are leaked, I then run with GPU disabled and 0GB are leaked, I then run again with GPU enabled and another 7GB are leaked, leaving the system with 14GB used, but ps shows that no programs are using that memory. So it seems to be a problem with GPU calls.</p>\n<p>Thank you for taking a look at this.</p>", "body_text": "The buffers and cached columns are 0GB because I had just rebooted (I also rebooted between posts, which is how I got down to 0GB used again). The \"used\" and \"free\" of the buffers/cache line are  - or + \"buffers+cached\", since \"buffers+cached\" is 0GB the two rows are equal. You are correct that a system running for a while will have very different rows, since buffers and cached will be large.\nThe field to focus on is row['buffers/cache'], column['free'], this field is the real free memory available to programs. When that field drops to zero, the system hangs (ignoring swap), which is what brought this to my attention on EC2 where the instance only had ~14GB of memory, and that field dropped to 0GB.\nfree says that 7GB are being used, even after you account for buffers and cache, but ps says that no programs are using that memory. I believe this suggest a leak in kernel space, but I am not an expert in that. My second post gives a simple script to reproduce the problem. If you have 7GB of ram, then execute that script 100 times, as I do above, and the computer should lock up, or 400 times if you have 28GB, etc.\nIn my second post, I first run with GPU enabled and 7GB are leaked, I then run with GPU disabled and 0GB are leaked, I then run again with GPU enabled and another 7GB are leaked, leaving the system with 14GB used, but ps shows that no programs are using that memory. So it seems to be a problem with GPU calls.\nThank you for taking a look at this.", "body": "The buffers and cached columns are 0GB because I had just rebooted (I also rebooted between posts, which is how I got down to 0GB used again). The \"used\" and \"free\" of the buffers/cache line are  - or + \"buffers+cached\", since \"buffers+cached\" is 0GB the two rows are equal. You are correct that a system running for a while will have very different rows, since buffers and cached will be large. \n\nThe field to focus on is row['buffers/cache'], column['free'], this field is the real free memory available to programs. When that field drops to zero, the system hangs (ignoring swap), which is what brought this to my attention on EC2 where the instance only had ~14GB of memory, and that field dropped to 0GB.\n\n`free` says that 7GB are being used, even after you account for buffers and cache, but `ps` says that no programs are using that memory. I believe this suggest a leak in kernel space, but I am not an expert in that. My second post gives a simple script to reproduce the problem. If you have 7GB of ram, then execute that script 100 times, as I do above, and the computer should lock up, or 400 times if you have 28GB, etc. \n\nIn my second post, I first run with GPU enabled and 7GB are leaked, I then run with GPU disabled and 0GB are leaked, I then run again with GPU enabled and another 7GB are leaked, leaving the system with 14GB used, but ps shows that no programs are using that memory. So it seems to be a problem with GPU calls.\n\nThank you for taking a look at this.\n"}