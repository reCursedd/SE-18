{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11553", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11553/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11553/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11553/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/11553", "id": 243431186, "node_id": "MDU6SXNzdWUyNDM0MzExODY=", "number": 11553, "title": "initial_state in keras rnn", "user": {"login": "junja94", "id": 11274278, "node_id": "MDQ6VXNlcjExMjc0Mjc4", "avatar_url": "https://avatars1.githubusercontent.com/u/11274278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/junja94", "html_url": "https://github.com/junja94", "followers_url": "https://api.github.com/users/junja94/followers", "following_url": "https://api.github.com/users/junja94/following{/other_user}", "gists_url": "https://api.github.com/users/junja94/gists{/gist_id}", "starred_url": "https://api.github.com/users/junja94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/junja94/subscriptions", "organizations_url": "https://api.github.com/users/junja94/orgs", "repos_url": "https://api.github.com/users/junja94/repos", "events_url": "https://api.github.com/users/junja94/events{/privacy}", "received_events_url": "https://api.github.com/users/junja94/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-17T15:19:24Z", "updated_at": "2017-07-18T08:26:33Z", "closed_at": "2017-07-17T16:39:19Z", "author_association": "NONE", "body_html": "<p>I'm trying to put different initial hidden state into recurrent layers. I saw many issues about initializing states using keras and most of the solutions were using <strong>layer.reset_state(state)</strong>. But in my application, I have to set stateful = False and I cannot use reset_state.<br>\nAs it is written in the document, I tried <strong>initial_state</strong> argument in calling layers.</p>\n<p>Using the code below, I compared the outputs and the resulting outputs were always the same.<br>\nI tried different initializers and different initial states but the both outputs were the same.</p>\n<p><strong>When the stateful is False, is there other possible way to set initial hidden state???</strong></p>\n<pre><code>    for size in dimension[1:]:\n        initial_ = tf.ones(shape=[batchnum, size])\n        recurrent_layer = GRU(units=size, return_sequences=True, kernel_initializer=one,\n                                     recurrent_initializer=one)\n        recurrent_layertest = GRU(units=size, return_sequences=True, kernel_initializer=one,\n                                     recurrent_initializer=one)\n\n        x = recurrent_layer(inputs=x)\n        xtest = recurrent_layertest(inputs=xtest, **initial_state = initial_**)\n</code></pre>", "body_text": "I'm trying to put different initial hidden state into recurrent layers. I saw many issues about initializing states using keras and most of the solutions were using layer.reset_state(state). But in my application, I have to set stateful = False and I cannot use reset_state.\nAs it is written in the document, I tried initial_state argument in calling layers.\nUsing the code below, I compared the outputs and the resulting outputs were always the same.\nI tried different initializers and different initial states but the both outputs were the same.\nWhen the stateful is False, is there other possible way to set initial hidden state???\n    for size in dimension[1:]:\n        initial_ = tf.ones(shape=[batchnum, size])\n        recurrent_layer = GRU(units=size, return_sequences=True, kernel_initializer=one,\n                                     recurrent_initializer=one)\n        recurrent_layertest = GRU(units=size, return_sequences=True, kernel_initializer=one,\n                                     recurrent_initializer=one)\n\n        x = recurrent_layer(inputs=x)\n        xtest = recurrent_layertest(inputs=xtest, **initial_state = initial_**)", "body": " I'm trying to put different initial hidden state into recurrent layers. I saw many issues about initializing states using keras and most of the solutions were using **layer.reset_state(state)**. But in my application, I have to set stateful = False and I cannot use reset_state.\r\nAs it is written in the document, I tried **initial_state** argument in calling layers.\r\n\r\nUsing the code below, I compared the outputs and the resulting outputs were always the same.\r\nI tried different initializers and different initial states but the both outputs were the same.\r\n\r\n**When the stateful is False, is there other possible way to set initial hidden state???**\r\n\r\n        for size in dimension[1:]:\r\n            initial_ = tf.ones(shape=[batchnum, size])\r\n            recurrent_layer = GRU(units=size, return_sequences=True, kernel_initializer=one,\r\n                                         recurrent_initializer=one)\r\n            recurrent_layertest = GRU(units=size, return_sequences=True, kernel_initializer=one,\r\n                                         recurrent_initializer=one)\r\n\r\n            x = recurrent_layer(inputs=x)\r\n            xtest = recurrent_layertest(inputs=xtest, **initial_state = initial_**)"}