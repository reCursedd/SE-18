{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/229976941", "html_url": "https://github.com/tensorflow/tensorflow/issues/1828#issuecomment-229976941", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1828", "id": 229976941, "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTk3Njk0MQ==", "user": {"login": "concretevitamin", "id": 592670, "node_id": "MDQ6VXNlcjU5MjY3MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/592670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/concretevitamin", "html_url": "https://github.com/concretevitamin", "followers_url": "https://api.github.com/users/concretevitamin/followers", "following_url": "https://api.github.com/users/concretevitamin/following{/other_user}", "gists_url": "https://api.github.com/users/concretevitamin/gists{/gist_id}", "starred_url": "https://api.github.com/users/concretevitamin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/concretevitamin/subscriptions", "organizations_url": "https://api.github.com/users/concretevitamin/orgs", "repos_url": "https://api.github.com/users/concretevitamin/repos", "events_url": "https://api.github.com/users/concretevitamin/events{/privacy}", "received_events_url": "https://api.github.com/users/concretevitamin/received_events", "type": "User", "site_admin": false}, "created_at": "2016-07-01T15:30:16Z", "updated_at": "2016-07-01T15:30:16Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=2789456\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/siddharth-agrawal\">@siddharth-agrawal</a> I noticed that many of the ops are now in the same following form:</p>\n<div class=\"highlight highlight-source-python\"><pre> <span class=\"pl-k\">+</span>  <span class=\"pl-k\">with</span> ops.op_scope([x], name, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Erf<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">as</span> name:\n <span class=\"pl-k\">+</span>    <span class=\"pl-k\">if</span> <span class=\"pl-c1\">isinstance</span>(x, ops.SparseTensor):\n <span class=\"pl-k\">+</span>      x_erf <span class=\"pl-k\">=</span> gen_math_ops.erf(x.values, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span>name)\n <span class=\"pl-k\">+</span>      <span class=\"pl-k\">return</span> ops.SparseTensor(<span class=\"pl-v\">indices</span><span class=\"pl-k\">=</span>x.indices, <span class=\"pl-v\">values</span><span class=\"pl-k\">=</span>x_erf, <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>x.shape)\n <span class=\"pl-k\">+</span>    <span class=\"pl-k\">else</span>:\n <span class=\"pl-k\">+</span>      <span class=\"pl-k\">return</span> gen_math_ops.erf(x, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span>name)</pre></div>\n<p>Is it possible that we use some registration wrapper / decorator to factor out this form?</p>", "body_text": "@siddharth-agrawal I noticed that many of the ops are now in the same following form:\n +  with ops.op_scope([x], name, \"Erf\") as name:\n +    if isinstance(x, ops.SparseTensor):\n +      x_erf = gen_math_ops.erf(x.values, name=name)\n +      return ops.SparseTensor(indices=x.indices, values=x_erf, shape=x.shape)\n +    else:\n +      return gen_math_ops.erf(x, name=name)\nIs it possible that we use some registration wrapper / decorator to factor out this form?", "body": "@siddharth-agrawal I noticed that many of the ops are now in the same following form:\n\n``` python\n +  with ops.op_scope([x], name, \"Erf\") as name:\n +    if isinstance(x, ops.SparseTensor):\n +      x_erf = gen_math_ops.erf(x.values, name=name)\n +      return ops.SparseTensor(indices=x.indices, values=x_erf, shape=x.shape)\n +    else:\n +      return gen_math_ops.erf(x, name=name)\n```\n\nIs it possible that we use some registration wrapper / decorator to factor out this form? \n"}