{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7800", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7800/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7800/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7800/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/7800", "id": 209607670, "node_id": "MDU6SXNzdWUyMDk2MDc2NzA=", "number": 7800, "title": "Feature Request: access gradients for a specific layer", "user": {"login": "xksteven", "id": 5234084, "node_id": "MDQ6VXNlcjUyMzQwODQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/5234084?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xksteven", "html_url": "https://github.com/xksteven", "followers_url": "https://api.github.com/users/xksteven/followers", "following_url": "https://api.github.com/users/xksteven/following{/other_user}", "gists_url": "https://api.github.com/users/xksteven/gists{/gist_id}", "starred_url": "https://api.github.com/users/xksteven/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xksteven/subscriptions", "organizations_url": "https://api.github.com/users/xksteven/orgs", "repos_url": "https://api.github.com/users/xksteven/repos", "events_url": "https://api.github.com/users/xksteven/events{/privacy}", "received_events_url": "https://api.github.com/users/xksteven/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-22T22:52:28Z", "updated_at": "2017-02-23T03:51:08Z", "closed_at": "2017-02-23T03:51:08Z", "author_association": "NONE", "body_html": "<p>Currently tensorflow will provide the gradients for the entire network, i.e. getting grads_and_vars will return all of the gradients but there isn't any nice way to specifically get the gradients of a specific layer.</p>\n<p>An example use case:  For the paper Neural Networks are easily fooled, they took the gradients from the last layer and added them to the original image.</p>\n<p>There is no current way to do this in tensorflow as far as I know.</p>", "body_text": "Currently tensorflow will provide the gradients for the entire network, i.e. getting grads_and_vars will return all of the gradients but there isn't any nice way to specifically get the gradients of a specific layer.\nAn example use case:  For the paper Neural Networks are easily fooled, they took the gradients from the last layer and added them to the original image.\nThere is no current way to do this in tensorflow as far as I know.", "body": "Currently tensorflow will provide the gradients for the entire network, i.e. getting grads_and_vars will return all of the gradients but there isn't any nice way to specifically get the gradients of a specific layer.\r\n\r\nAn example use case:  For the paper Neural Networks are easily fooled, they took the gradients from the last layer and added them to the original image.\r\n\r\nThere is no current way to do this in tensorflow as far as I know.\r\n"}