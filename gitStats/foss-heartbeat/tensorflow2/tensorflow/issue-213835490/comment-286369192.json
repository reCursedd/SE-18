{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/286369192", "html_url": "https://github.com/tensorflow/tensorflow/issues/8362#issuecomment-286369192", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8362", "id": 286369192, "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjM2OTE5Mg==", "user": {"login": "MicaelCarvalho", "id": 17184992, "node_id": "MDQ6VXNlcjE3MTg0OTky", "avatar_url": "https://avatars3.githubusercontent.com/u/17184992?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MicaelCarvalho", "html_url": "https://github.com/MicaelCarvalho", "followers_url": "https://api.github.com/users/MicaelCarvalho/followers", "following_url": "https://api.github.com/users/MicaelCarvalho/following{/other_user}", "gists_url": "https://api.github.com/users/MicaelCarvalho/gists{/gist_id}", "starred_url": "https://api.github.com/users/MicaelCarvalho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MicaelCarvalho/subscriptions", "organizations_url": "https://api.github.com/users/MicaelCarvalho/orgs", "repos_url": "https://api.github.com/users/MicaelCarvalho/repos", "events_url": "https://api.github.com/users/MicaelCarvalho/events{/privacy}", "received_events_url": "https://api.github.com/users/MicaelCarvalho/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-14T09:39:21Z", "updated_at": "2017-03-14T09:47:14Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I would still change that:</p>\n<pre><code>def load_graph(filename):\n  with tf.gfile.GFile(...):\n    (...)\n  graph = tf.Graph()\n  with graph.as_default():\n    tf.import_graph_def(...)\n  return graph\n</code></pre>\n<p>Coming back to the issue: Who built the graph? It is possible some nodes inside it, when executed, create new operations/nodes. Put this function inside your source:</p>\n<pre><code>import numpy as np\ndef print_num_params(graph):\n  vvars = 0\n  for v in tf.global_variables():\n    vvars += np.prod(v.get_shape().as_list())\n  total_parameters = 0\n  for v in tf.trainable_variables():\n    total_parameters += np.prod(v.get_shape().as_list())\n  print('Total params = %i' % (total_parameters))\n  print('Total vars = %i' % (vvars))\n  print('Total ops = %i' % (len(graph.get_operations())))\n</code></pre>\n<p>And before each call to <code>sess.run</code>, run this code and report back the results:<br>\n<code>print_num_params(graph)</code></p>", "body_text": "I would still change that:\ndef load_graph(filename):\n  with tf.gfile.GFile(...):\n    (...)\n  graph = tf.Graph()\n  with graph.as_default():\n    tf.import_graph_def(...)\n  return graph\n\nComing back to the issue: Who built the graph? It is possible some nodes inside it, when executed, create new operations/nodes. Put this function inside your source:\nimport numpy as np\ndef print_num_params(graph):\n  vvars = 0\n  for v in tf.global_variables():\n    vvars += np.prod(v.get_shape().as_list())\n  total_parameters = 0\n  for v in tf.trainable_variables():\n    total_parameters += np.prod(v.get_shape().as_list())\n  print('Total params = %i' % (total_parameters))\n  print('Total vars = %i' % (vvars))\n  print('Total ops = %i' % (len(graph.get_operations())))\n\nAnd before each call to sess.run, run this code and report back the results:\nprint_num_params(graph)", "body": "I would still change that:\r\n```\r\ndef load_graph(filename):\r\n  with tf.gfile.GFile(...):\r\n    (...)\r\n  graph = tf.Graph()\r\n  with graph.as_default():\r\n    tf.import_graph_def(...)\r\n  return graph\r\n```\r\n\r\nComing back to the issue: Who built the graph? It is possible some nodes inside it, when executed, create new operations/nodes. Put this function inside your source:\r\n```\r\nimport numpy as np\r\ndef print_num_params(graph):\r\n  vvars = 0\r\n  for v in tf.global_variables():\r\n    vvars += np.prod(v.get_shape().as_list())\r\n  total_parameters = 0\r\n  for v in tf.trainable_variables():\r\n    total_parameters += np.prod(v.get_shape().as_list())\r\n  print('Total params = %i' % (total_parameters))\r\n  print('Total vars = %i' % (vvars))\r\n  print('Total ops = %i' % (len(graph.get_operations())))\r\n```\r\n\r\nAnd before each call to `sess.run`, run this code and report back the results:\r\n`print_num_params(graph)`"}