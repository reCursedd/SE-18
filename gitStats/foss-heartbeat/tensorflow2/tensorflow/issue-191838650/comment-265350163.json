{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/265350163", "html_url": "https://github.com/tensorflow/tensorflow/issues/5876#issuecomment-265350163", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5876", "id": 265350163, "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTM1MDE2Mw==", "user": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "created_at": "2016-12-07T04:05:24Z", "updated_at": "2016-12-07T04:05:24Z", "author_association": "CONTRIBUTOR", "body_html": "<p>This is unfortunately a known bug and is caused by the fact that the cross_entropy_loss ops are fused: they calculate fw and bprop values at the same time and return them together (the bprop is hidden from the user but is used only during tf.gradients call).  This doesn't work well with TF's gradient registration mechanism when you want the second derivative.  Solutions may be forthcoming, but no promises on the timeline.</p>", "body_text": "This is unfortunately a known bug and is caused by the fact that the cross_entropy_loss ops are fused: they calculate fw and bprop values at the same time and return them together (the bprop is hidden from the user but is used only during tf.gradients call).  This doesn't work well with TF's gradient registration mechanism when you want the second derivative.  Solutions may be forthcoming, but no promises on the timeline.", "body": "This is unfortunately a known bug and is caused by the fact that the cross_entropy_loss ops are fused: they calculate fw and bprop values at the same time and return them together (the bprop is hidden from the user but is used only during tf.gradients call).  This doesn't work well with TF's gradient registration mechanism when you want the second derivative.  Solutions may be forthcoming, but no promises on the timeline."}