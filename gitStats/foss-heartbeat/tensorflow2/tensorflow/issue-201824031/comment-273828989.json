{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/273828989", "html_url": "https://github.com/tensorflow/tensorflow/issues/6955#issuecomment-273828989", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6955", "id": 273828989, "node_id": "MDEyOklzc3VlQ29tbWVudDI3MzgyODk4OQ==", "user": {"login": "allannk", "id": 640662, "node_id": "MDQ6VXNlcjY0MDY2Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/640662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/allannk", "html_url": "https://github.com/allannk", "followers_url": "https://api.github.com/users/allannk/followers", "following_url": "https://api.github.com/users/allannk/following{/other_user}", "gists_url": "https://api.github.com/users/allannk/gists{/gist_id}", "starred_url": "https://api.github.com/users/allannk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/allannk/subscriptions", "organizations_url": "https://api.github.com/users/allannk/orgs", "repos_url": "https://api.github.com/users/allannk/repos", "events_url": "https://api.github.com/users/allannk/events{/privacy}", "received_events_url": "https://api.github.com/users/allannk/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-19T16:44:03Z", "updated_at": "2017-01-19T16:44:03Z", "author_association": "NONE", "body_html": "<p>Yes, the idea is to avoid copying at all, since we're dealing with approximately 360 mb/s that are already in CPU memory. Avoiding a 1:1 copy (memcpy or otherwise) would be ideal.</p>\n<p>I've been looking into creating a custom allocator for tens or creation, to point to existing data instead - would this be possible? Or are we blind to the obvious solution here?</p>", "body_text": "Yes, the idea is to avoid copying at all, since we're dealing with approximately 360 mb/s that are already in CPU memory. Avoiding a 1:1 copy (memcpy or otherwise) would be ideal.\nI've been looking into creating a custom allocator for tens or creation, to point to existing data instead - would this be possible? Or are we blind to the obvious solution here?", "body": "Yes, the idea is to avoid copying at all, since we're dealing with approximately 360 mb/s that are already in CPU memory. Avoiding a 1:1 copy (memcpy or otherwise) would be ideal. \r\n\r\nI've been looking into creating a custom allocator for tens or creation, to point to existing data instead - would this be possible? Or are we blind to the obvious solution here? "}