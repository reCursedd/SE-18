{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/274762950", "html_url": "https://github.com/tensorflow/tensorflow/issues/6955#issuecomment-274762950", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6955", "id": 274762950, "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDc2Mjk1MA==", "user": {"login": "sjperkins", "id": 3530212, "node_id": "MDQ6VXNlcjM1MzAyMTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3530212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjperkins", "html_url": "https://github.com/sjperkins", "followers_url": "https://api.github.com/users/sjperkins/followers", "following_url": "https://api.github.com/users/sjperkins/following{/other_user}", "gists_url": "https://api.github.com/users/sjperkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjperkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjperkins/subscriptions", "organizations_url": "https://api.github.com/users/sjperkins/orgs", "repos_url": "https://api.github.com/users/sjperkins/repos", "events_url": "https://api.github.com/users/sjperkins/events{/privacy}", "received_events_url": "https://api.github.com/users/sjperkins/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-24T10:16:44Z", "updated_at": "2017-01-24T10:16:44Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Thoughts:</p>\n<p>I'm not sure that Eigen has the same concept of a <a href=\"https://docs.scipy.org/doc/numpy/reference/arrays.ndarray.html#internal-memory-layout-of-an-ndarray\" rel=\"nofollow\">numpy strided indexing</a> for a Tensor, but similar concepts are expressed in <a href=\"https://eigen.tuxfamily.org/dox-devel/unsupported/TensorStriding_8h_source.html\" rel=\"nofollow\">TensorStriding</a> and <a href=\"https://eigen.tuxfamily.org/dox-devel/unsupported/TensorPadding_8h_source.html\" rel=\"nofollow\">TensorPadding</a>. It would be useful to map the numpy stride concept onto a Tensor, to avoid copies.</p>\n<p>Otherwise, a call to <a href=\"https://docs.scipy.org/doc/numpy/reference/generated/numpy.ascontiguousarray.html\" rel=\"nofollow\">np.ascontiguousarray</a> will copy a non-contiguous array into a contiguous array, otherwise it will return a view of the original (contiguous) array.</p>", "body_text": "Thoughts:\nI'm not sure that Eigen has the same concept of a numpy strided indexing for a Tensor, but similar concepts are expressed in TensorStriding and TensorPadding. It would be useful to map the numpy stride concept onto a Tensor, to avoid copies.\nOtherwise, a call to np.ascontiguousarray will copy a non-contiguous array into a contiguous array, otherwise it will return a view of the original (contiguous) array.", "body": "Thoughts:\r\n\r\nI'm not sure that Eigen has the same concept of a [numpy strided indexing](https://docs.scipy.org/doc/numpy/reference/arrays.ndarray.html#internal-memory-layout-of-an-ndarray) for a Tensor, but similar concepts are expressed in [TensorStriding](https://eigen.tuxfamily.org/dox-devel/unsupported/TensorStriding_8h_source.html) and [TensorPadding](https://eigen.tuxfamily.org/dox-devel/unsupported/TensorPadding_8h_source.html). It would be useful to map the numpy stride concept onto a Tensor, to avoid copies.\r\n\r\nOtherwise, a call to [np.ascontiguousarray](https://docs.scipy.org/doc/numpy/reference/generated/numpy.ascontiguousarray.html) will copy a non-contiguous array into a contiguous array, otherwise it will return a view of the original (contiguous) array."}