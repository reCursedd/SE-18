{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/287403398", "html_url": "https://github.com/tensorflow/tensorflow/issues/6955#issuecomment-287403398", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6955", "id": 287403398, "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzQwMzM5OA==", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-17T16:29:01Z", "updated_at": "2017-03-17T16:29:57Z", "author_association": "CONTRIBUTOR", "body_html": "<p>cc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5376757\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/michaelisard\">@michaelisard</a></p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=2613663\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/byronyi\">@byronyi</a> I'm not away of any way of doing that.</p>\n<p>Having TensorFlow allocate the memory buffer and provide the pointer seems safer because TensorFlow could make sure memory is aligned.</p>\n<p>This would be useful because one could initialize numpy array based on pre-allocated memory as described <a href=\"http://blog.enthought.com/python/numpy/simplified-creation-of-numpy-arrays-from-pre-allocated-memory/#.WMwNwRIrJE4\" rel=\"nofollow\">here</a> and this would reduce memory transfers. (ie like in PyTorch which reuses memory between Tensor and numpy array objects)</p>", "body_text": "cc @michaelisard\n@byronyi I'm not away of any way of doing that.\nHaving TensorFlow allocate the memory buffer and provide the pointer seems safer because TensorFlow could make sure memory is aligned.\nThis would be useful because one could initialize numpy array based on pre-allocated memory as described here and this would reduce memory transfers. (ie like in PyTorch which reuses memory between Tensor and numpy array objects)", "body": "cc @michaelisard \r\n\r\n@byronyi I'm not away of any way of doing that.\r\n\r\nHaving TensorFlow allocate the memory buffer and provide the pointer seems safer because TensorFlow could make sure memory is aligned.\r\n\r\nThis would be useful because one could initialize numpy array based on pre-allocated memory as described [here](http://blog.enthought.com/python/numpy/simplified-creation-of-numpy-arrays-from-pre-allocated-memory/#.WMwNwRIrJE4) and this would reduce memory transfers. (ie like in PyTorch which reuses memory between Tensor and numpy array objects)"}