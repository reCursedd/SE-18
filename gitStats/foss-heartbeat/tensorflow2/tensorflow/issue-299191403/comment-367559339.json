{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/367559339", "html_url": "https://github.com/tensorflow/tensorflow/issues/17183#issuecomment-367559339", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17183", "id": 367559339, "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzU1OTMzOQ==", "user": {"login": "selcouthlyBlue", "id": 13268675, "node_id": "MDQ6VXNlcjEzMjY4Njc1", "avatar_url": "https://avatars2.githubusercontent.com/u/13268675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/selcouthlyBlue", "html_url": "https://github.com/selcouthlyBlue", "followers_url": "https://api.github.com/users/selcouthlyBlue/followers", "following_url": "https://api.github.com/users/selcouthlyBlue/following{/other_user}", "gists_url": "https://api.github.com/users/selcouthlyBlue/gists{/gist_id}", "starred_url": "https://api.github.com/users/selcouthlyBlue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/selcouthlyBlue/subscriptions", "organizations_url": "https://api.github.com/users/selcouthlyBlue/orgs", "repos_url": "https://api.github.com/users/selcouthlyBlue/repos", "events_url": "https://api.github.com/users/selcouthlyBlue/events{/privacy}", "received_events_url": "https://api.github.com/users/selcouthlyBlue/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-22T03:51:59Z", "updated_at": "2018-02-22T03:54:13Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Update: I figured out a way to do this. However, this assumes that the sequence_lengths of each example are all the same.</p>\n<p>Given a tensor of shape <code>(None, num_time_steps, num_classes)</code>:</p>\n<pre><code>sequence_length_dims = tf.stack([tf.shape(input)[0]])\nsequence_lengths = tf.fill(sequence_length_dims, input.shape[1]) # to be passed to CTC functions\n</code></pre>\n<p>With this, I plan to make the <code>sequence_length</code> argument of each CTC function optional.</p>", "body_text": "Update: I figured out a way to do this. However, this assumes that the sequence_lengths of each example are all the same.\nGiven a tensor of shape (None, num_time_steps, num_classes):\nsequence_length_dims = tf.stack([tf.shape(input)[0]])\nsequence_lengths = tf.fill(sequence_length_dims, input.shape[1]) # to be passed to CTC functions\n\nWith this, I plan to make the sequence_length argument of each CTC function optional.", "body": "Update: I figured out a way to do this. However, this assumes that the sequence_lengths of each example are all the same. \r\n\r\nGiven a tensor of shape `(None, num_time_steps, num_classes)`:\r\n\r\n```\r\nsequence_length_dims = tf.stack([tf.shape(input)[0]])\r\nsequence_lengths = tf.fill(sequence_length_dims, input.shape[1]) # to be passed to CTC functions\r\n```\r\n\r\nWith this, I plan to make the `sequence_length` argument of each CTC function optional."}