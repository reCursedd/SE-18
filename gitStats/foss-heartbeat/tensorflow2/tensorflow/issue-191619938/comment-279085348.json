{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/279085348", "html_url": "https://github.com/tensorflow/tensorflow/issues/5842#issuecomment-279085348", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5842", "id": 279085348, "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTA4NTM0OA==", "user": {"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}, "created_at": "2017-02-10T22:35:14Z", "updated_at": "2017-02-10T22:39:40Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=10514295\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/AidanGG\">@AidanGG</a> The setThreshold() method in Eigen does not affect the main SVD computation itself. Rather, it is mostly a convenient way to post-filter the SVD when using it to determine numerical rank or using it for applying a pseudo-inverse via the solve() method.</p>\n<p><a href=\"https://bitbucket.org/eigen/eigen/src/41ef39502e7e9aab985bb5b51894d1f87106b67e/Eigen/src/SVD/SVDBase.h?at=default&amp;fileviewer=file-view-default#SVDBase.h-143\" rel=\"nofollow\">https://bitbucket.org/eigen/eigen/src/41ef39502e7e9aab985bb5b51894d1f87106b67e/Eigen/src/SVD/SVDBase.h?at=default&amp;fileviewer=file-view-default#SVDBase.h-143</a></p>\n<p>As such, I would prefer that such filtering be implemented in TensorFlow, rather than relying on this feature in the underlying Eigen C++ library.</p>\n<p>Another concern is that such thresholding is not widely supported in the same manner by other high performance SVD libraries. Should we decide to replace the Eigen \"backend\" for this op, it would be preferable to have the thresholding logic in TensorFlow itself.</p>\n<p>It would be awesome if you would be interested in contributing functions that, e.g., apply the pseudo-inverse or filter the SVD based on a threshold.</p>", "body_text": "@AidanGG The setThreshold() method in Eigen does not affect the main SVD computation itself. Rather, it is mostly a convenient way to post-filter the SVD when using it to determine numerical rank or using it for applying a pseudo-inverse via the solve() method.\nhttps://bitbucket.org/eigen/eigen/src/41ef39502e7e9aab985bb5b51894d1f87106b67e/Eigen/src/SVD/SVDBase.h?at=default&fileviewer=file-view-default#SVDBase.h-143\nAs such, I would prefer that such filtering be implemented in TensorFlow, rather than relying on this feature in the underlying Eigen C++ library.\nAnother concern is that such thresholding is not widely supported in the same manner by other high performance SVD libraries. Should we decide to replace the Eigen \"backend\" for this op, it would be preferable to have the thresholding logic in TensorFlow itself.\nIt would be awesome if you would be interested in contributing functions that, e.g., apply the pseudo-inverse or filter the SVD based on a threshold.", "body": "@AidanGG The setThreshold() method in Eigen does not affect the main SVD computation itself. Rather, it is mostly a convenient way to post-filter the SVD when using it to determine numerical rank or using it for applying a pseudo-inverse via the solve() method.\r\n\r\nhttps://bitbucket.org/eigen/eigen/src/41ef39502e7e9aab985bb5b51894d1f87106b67e/Eigen/src/SVD/SVDBase.h?at=default&fileviewer=file-view-default#SVDBase.h-143\r\n\r\nAs such, I would prefer that such filtering be implemented in TensorFlow, rather than relying on this feature in the underlying Eigen C++ library. \r\n\r\nAnother concern is that such thresholding is not widely supported in the same manner by other high performance SVD libraries. Should we decide to replace the Eigen \"backend\" for this op, it would be preferable to have the thresholding logic in TensorFlow itself.\r\n\r\nIt would be awesome if you would be interested in contributing functions that, e.g., apply the pseudo-inverse or filter the SVD based on a threshold. "}