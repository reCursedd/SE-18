{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5842", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5842/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5842/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5842/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/5842", "id": 191619938, "node_id": "MDU6SXNzdWUxOTE2MTk5Mzg=", "number": 5842, "title": "Implementing SVD rank threshold?", "user": {"login": "AidanGG", "id": 10514295, "node_id": "MDQ6VXNlcjEwNTE0Mjk1", "avatar_url": "https://avatars3.githubusercontent.com/u/10514295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AidanGG", "html_url": "https://github.com/AidanGG", "followers_url": "https://api.github.com/users/AidanGG/followers", "following_url": "https://api.github.com/users/AidanGG/following{/other_user}", "gists_url": "https://api.github.com/users/AidanGG/gists{/gist_id}", "starred_url": "https://api.github.com/users/AidanGG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AidanGG/subscriptions", "organizations_url": "https://api.github.com/users/AidanGG/orgs", "repos_url": "https://api.github.com/users/AidanGG/repos", "events_url": "https://api.github.com/users/AidanGG/events{/privacy}", "received_events_url": "https://api.github.com/users/AidanGG/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2016-11-25T03:40:49Z", "updated_at": "2017-02-11T04:34:52Z", "closed_at": "2017-02-10T22:35:14Z", "author_association": "CONTRIBUTOR", "body_html": "<p>It might be useful to use Eigen SVD's <code>Eigen::BDCSVD::setThreshold</code> function in order to cull the effectively zero singular values, perhaps by introducing a new parameter to TensorFlow's SVD so that <code>tf.svd(tensor, compute_uv=True, full_matrices=False, thresholded=True, name=None)</code> uses</p>\n<ul>\n<li>the default Eigen threshold for <code>thresholded=True</code></li>\n<li>the full P = min(M, N) singular values for <code>thresholded=False</code></li>\n<li>whatever threshold is specified with a float, such as <code>thresholded=1e-7</code></li>\n</ul>\n<p>I can get started on a PR if this is something that might be useful.</p>", "body_text": "It might be useful to use Eigen SVD's Eigen::BDCSVD::setThreshold function in order to cull the effectively zero singular values, perhaps by introducing a new parameter to TensorFlow's SVD so that tf.svd(tensor, compute_uv=True, full_matrices=False, thresholded=True, name=None) uses\n\nthe default Eigen threshold for thresholded=True\nthe full P = min(M, N) singular values for thresholded=False\nwhatever threshold is specified with a float, such as thresholded=1e-7\n\nI can get started on a PR if this is something that might be useful.", "body": "It might be useful to use Eigen SVD's `Eigen::BDCSVD::setThreshold` function in order to cull the effectively zero singular values, perhaps by introducing a new parameter to TensorFlow's SVD so that `tf.svd(tensor, compute_uv=True, full_matrices=False, thresholded=True, name=None)` uses\r\n- the default Eigen threshold for `thresholded=True`\r\n- the full P = min(M, N) singular values for `thresholded=False`\r\n- whatever threshold is specified with a float, such as `thresholded=1e-7`\r\n\r\nI can get started on a PR if this is something that might be useful."}