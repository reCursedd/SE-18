{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/373093324", "html_url": "https://github.com/tensorflow/tensorflow/issues/17684#issuecomment-373093324", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17684", "id": 373093324, "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzA5MzMyNA==", "user": {"login": "Neargye", "id": 7997966, "node_id": "MDQ6VXNlcjc5OTc5NjY=", "avatar_url": "https://avatars2.githubusercontent.com/u/7997966?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Neargye", "html_url": "https://github.com/Neargye", "followers_url": "https://api.github.com/users/Neargye/followers", "following_url": "https://api.github.com/users/Neargye/following{/other_user}", "gists_url": "https://api.github.com/users/Neargye/gists{/gist_id}", "starred_url": "https://api.github.com/users/Neargye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Neargye/subscriptions", "organizations_url": "https://api.github.com/users/Neargye/orgs", "repos_url": "https://api.github.com/users/Neargye/repos", "events_url": "https://api.github.com/users/Neargye/events{/privacy}", "received_events_url": "https://api.github.com/users/Neargye/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-14T16:48:37Z", "updated_at": "2018-03-14T16:48:37Z", "author_association": "NONE", "body_html": "<p>For example, such commands work successfully</p>\n<pre><code>bazel-bin/tensorflow/python/tools/freeze_graph\\\n    \u2014input_graph=./test_model/model/unet.pb \\\n    \u2014input_checkpoint=./test_model/model/unet \\\n    \u2014input_binary=true \\\n    \u2014output_graph=./test_model/frozen_graph.pb \\\n    \u2014output_node_names='final/Sigmoid'\nbazel-bin/tensorflow/tools/graph_transforms/transform_graph \\\n    \u2014in_graph=./test_model/frozen_graph.pb \\\n    \u2014out_graph=./test_model/optimize_for_deployment.pb \\\n    \u2014inputs='input' \\\n    \u2014outputs='final/Sigmoid' \\\n    \u2014transforms='\n        strip_unused_nodes(type=float, shape=\"2,192,320,1\")\n        remove_nodes(op=Identity, op=CheckNumerics)\n        fold_constants(ignore_errors=true)\n        fold_batch_norms\n        fold_old_batch_norms'\n</code></pre>\n<p>And all models work on android, using TensorFlowInferenceInterface.</p>", "body_text": "For example, such commands work successfully\nbazel-bin/tensorflow/python/tools/freeze_graph\\\n    \u2014input_graph=./test_model/model/unet.pb \\\n    \u2014input_checkpoint=./test_model/model/unet \\\n    \u2014input_binary=true \\\n    \u2014output_graph=./test_model/frozen_graph.pb \\\n    \u2014output_node_names='final/Sigmoid'\nbazel-bin/tensorflow/tools/graph_transforms/transform_graph \\\n    \u2014in_graph=./test_model/frozen_graph.pb \\\n    \u2014out_graph=./test_model/optimize_for_deployment.pb \\\n    \u2014inputs='input' \\\n    \u2014outputs='final/Sigmoid' \\\n    \u2014transforms='\n        strip_unused_nodes(type=float, shape=\"2,192,320,1\")\n        remove_nodes(op=Identity, op=CheckNumerics)\n        fold_constants(ignore_errors=true)\n        fold_batch_norms\n        fold_old_batch_norms'\n\nAnd all models work on android, using TensorFlowInferenceInterface.", "body": "For example, such commands work successfully\r\n```\r\nbazel-bin/tensorflow/python/tools/freeze_graph\\\r\n    \u2014input_graph=./test_model/model/unet.pb \\\r\n    \u2014input_checkpoint=./test_model/model/unet \\\r\n    \u2014input_binary=true \\\r\n    \u2014output_graph=./test_model/frozen_graph.pb \\\r\n    \u2014output_node_names='final/Sigmoid'\r\nbazel-bin/tensorflow/tools/graph_transforms/transform_graph \\\r\n    \u2014in_graph=./test_model/frozen_graph.pb \\\r\n    \u2014out_graph=./test_model/optimize_for_deployment.pb \\\r\n    \u2014inputs='input' \\\r\n    \u2014outputs='final/Sigmoid' \\\r\n    \u2014transforms='\r\n        strip_unused_nodes(type=float, shape=\"2,192,320,1\")\r\n        remove_nodes(op=Identity, op=CheckNumerics)\r\n        fold_constants(ignore_errors=true)\r\n        fold_batch_norms\r\n        fold_old_batch_norms'\r\n```\r\nAnd all models work on android, using TensorFlowInferenceInterface."}