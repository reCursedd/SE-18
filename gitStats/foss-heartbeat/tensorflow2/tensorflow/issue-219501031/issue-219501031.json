{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8972", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8972/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8972/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8972/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/8972", "id": 219501031, "node_id": "MDU6SXNzdWUyMTk1MDEwMzE=", "number": 8972, "title": "conv2d_transpose output shape more undefined than input shape", "user": {"login": "kaufManu", "id": 5639197, "node_id": "MDQ6VXNlcjU2MzkxOTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/5639197?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kaufManu", "html_url": "https://github.com/kaufManu", "followers_url": "https://api.github.com/users/kaufManu/followers", "following_url": "https://api.github.com/users/kaufManu/following{/other_user}", "gists_url": "https://api.github.com/users/kaufManu/gists{/gist_id}", "starred_url": "https://api.github.com/users/kaufManu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kaufManu/subscriptions", "organizations_url": "https://api.github.com/users/kaufManu/orgs", "repos_url": "https://api.github.com/users/kaufManu/repos", "events_url": "https://api.github.com/users/kaufManu/events{/privacy}", "received_events_url": "https://api.github.com/users/kaufManu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-04-05T08:08:47Z", "updated_at": "2017-09-28T20:03:20Z", "closed_at": "2017-09-28T20:03:20Z", "author_association": "NONE", "body_html": "<p>I have posted <a href=\"http://stackoverflow.com/questions/43113984/output-shape-of-tf-nn-conv2d-transpose-is-entirely-undefined-even-though-only-ba\" rel=\"nofollow\">this on StackOverflow</a> already but haven't gotten an answer yet, plus it feels like a bug very similar to <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"191251284\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/5807\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/5807/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/5807\">#5807</a> which is why I'm posting it here as well.</p>\n<p>Basically the problem is that the output shape of <code>tf.nn.conv2d_transpose</code> is entirely undefined, even if e.g. only one dimension in the input is unknown. So in the following code snippet, the shape of <code>out</code> is <code>[3, 10, 5, 5]</code> as expected if using the static shape to get the size of the first dimension. However if you use the dynamic shape (commented line in the snippet below), then the shape of <code>out</code> is <code>[?, ?, ?, ?]</code> instead of <code>[?, 10, 5, 5]</code>.</p>\n<p>This is a problem for me because I am using <code>out</code> in a batch-normalization layer with <code>tf.contrib.layers.python.layers.batch_norm</code> for which certain dimensions must be defined.</p>\n<pre><code>import tensorflow as tf\n\ninput_ = tf.Variable(tf.random_normal([3, 10, 5, 1]))\nw = tf.get_variable('w', initializer=tf.truncated_normal([3, 3, 5, 1], mean=0.0, stddev=0.01, dtype=tf.float32))\n\n# output_shape = [tf.shape(input_)[0], 10, 5, 5]\noutput_shape = [input_.get_shape()[0].value, 10, 5, 5]\nout = tf.nn.conv2d_transpose(input_,\n                             filter=w,\n                             output_shape=tf.pack(output_shape),\n                             strides=[1, 1, 1, 1],\n                             padding='SAME')\n</code></pre>\n<p>I am using TF v0.12 on Ubuntu 14.04, Python 3.5.2, installed in Anaconda environment through pip.</p>", "body_text": "I have posted this on StackOverflow already but haven't gotten an answer yet, plus it feels like a bug very similar to #5807 which is why I'm posting it here as well.\nBasically the problem is that the output shape of tf.nn.conv2d_transpose is entirely undefined, even if e.g. only one dimension in the input is unknown. So in the following code snippet, the shape of out is [3, 10, 5, 5] as expected if using the static shape to get the size of the first dimension. However if you use the dynamic shape (commented line in the snippet below), then the shape of out is [?, ?, ?, ?] instead of [?, 10, 5, 5].\nThis is a problem for me because I am using out in a batch-normalization layer with tf.contrib.layers.python.layers.batch_norm for which certain dimensions must be defined.\nimport tensorflow as tf\n\ninput_ = tf.Variable(tf.random_normal([3, 10, 5, 1]))\nw = tf.get_variable('w', initializer=tf.truncated_normal([3, 3, 5, 1], mean=0.0, stddev=0.01, dtype=tf.float32))\n\n# output_shape = [tf.shape(input_)[0], 10, 5, 5]\noutput_shape = [input_.get_shape()[0].value, 10, 5, 5]\nout = tf.nn.conv2d_transpose(input_,\n                             filter=w,\n                             output_shape=tf.pack(output_shape),\n                             strides=[1, 1, 1, 1],\n                             padding='SAME')\n\nI am using TF v0.12 on Ubuntu 14.04, Python 3.5.2, installed in Anaconda environment through pip.", "body": "I have posted [this on StackOverflow](http://stackoverflow.com/questions/43113984/output-shape-of-tf-nn-conv2d-transpose-is-entirely-undefined-even-though-only-ba) already but haven't gotten an answer yet, plus it feels like a bug very similar to https://github.com/tensorflow/tensorflow/issues/5807 which is why I'm posting it here as well.\r\n\r\nBasically the problem is that the output shape of `tf.nn.conv2d_transpose` is entirely undefined, even if e.g. only one dimension in the input is unknown. So in the following code snippet, the shape of `out` is `[3, 10, 5, 5]` as expected if using the static shape to get the size of the first dimension. However if you use the dynamic shape (commented line in the snippet below), then the shape of `out` is `[?, ?, ?, ?]` instead of `[?, 10, 5, 5]`.\r\n\r\nThis is a problem for me because I am using `out` in a batch-normalization layer with `tf.contrib.layers.python.layers.batch_norm` for which certain dimensions must be defined.\r\n\r\n```\r\nimport tensorflow as tf\r\n\r\ninput_ = tf.Variable(tf.random_normal([3, 10, 5, 1]))\r\nw = tf.get_variable('w', initializer=tf.truncated_normal([3, 3, 5, 1], mean=0.0, stddev=0.01, dtype=tf.float32))\r\n\r\n# output_shape = [tf.shape(input_)[0], 10, 5, 5]\r\noutput_shape = [input_.get_shape()[0].value, 10, 5, 5]\r\nout = tf.nn.conv2d_transpose(input_,\r\n                             filter=w,\r\n                             output_shape=tf.pack(output_shape),\r\n                             strides=[1, 1, 1, 1],\r\n                             padding='SAME')\r\n```\r\n\r\nI am using TF v0.12 on Ubuntu 14.04, Python 3.5.2, installed in Anaconda environment through pip."}