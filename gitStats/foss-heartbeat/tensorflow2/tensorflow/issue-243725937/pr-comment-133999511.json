{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/133999511", "pull_request_review_id": 57248269, "id": 133999511, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMzk5OTUxMQ==", "diff_hunk": "@@ -0,0 +1,696 @@\n+# 2017 Contrib.\n+# ==============================================================================\n+\n+\"\"\"Synchronize replicas for model average training.\"\"\"\n+\n+from __future__ import absolute_import\n+from __future__ import division\n+from __future__ import print_function\n+\n+import time\n+import six\n+\n+from tensorflow.core.framework import node_def_pb2\n+from tensorflow.python.framework import device as pydev\n+from tensorflow.python.training import server_lib\n+from tensorflow.python.training import device_setter\n+from tensorflow.core.framework import types_pb2\n+from tensorflow.python.framework import ops\n+from tensorflow.python.ops import array_ops\n+from tensorflow.python.ops import control_flow_ops\n+from tensorflow.python.ops import data_flow_ops\n+from tensorflow.python.ops import init_ops\n+from tensorflow.python.ops import math_ops\n+from tensorflow.python.ops import state_ops\n+from tensorflow.python.ops import variables\n+from tensorflow.python.ops import variable_scope\n+from tensorflow.python.platform import tf_logging as logging\n+from tensorflow.python.training import queue_runner\n+from tensorflow.python.training import session_manager\n+from tensorflow.python.training import session_run_hook\n+\n+class _ModelAverageDeviceChooser(object):\n+  \"\"\"Class to choose devices for Ops in a model average training setup.\n+\n+  This class is not to be used directly by users.  See instead\n+  `model_average_device_setter()` below.\n+  \"\"\"\n+\n+  def __init__(self, ps_tasks, ps_device, worker_device, ps_ops,\n+               ps_strategy):\n+    \"\"\"Create a new `_ReplicaDeviceChooser`.\n+\n+    Args:\n+      ps_tasks: Number of tasks in the `ps` job.\n+      ps_device: String.  Name of the `ps` job.\n+      worker_device: String.  Name of the `worker` job.\n+      ps_ops: List of strings representing `Operation` types that need to be\n+        placed on `ps` devices.\n+      ps_strategy: A callable invoked for every ps `Operation` (i.e. matched by\n+        `ps_ops`), that takes the `Operation` and returns the ps task index to\n+        use.\n+    \"\"\"\n+    self._ps_tasks = ps_tasks\n+    self._ps_device = ps_device\n+    self._worker_device = worker_device\n+    self._ps_ops = ps_ops\n+    self._ps_strategy = ps_strategy\n+\n+  def device_function(self, op):\n+    \"\"\"Choose a device for `op`.\n+\n+    Args:\n+      op: an `Operation`.\n+\n+    Returns:\n+      The device to use for the `Operation`.\n+    \"\"\"\n+\n+    current_device = pydev.DeviceSpec.from_string(op.device or \"\")\n+\n+    node_def = op if isinstance(op, node_def_pb2.NodeDef) else op.node_def\n+    # TODO(chen meng): only global variables should be placed on ps. Now we just\n+    # do this according to substring in var name.\n+    if self._ps_tasks and self._ps_device and node_def.op in self._ps_ops \\\n+       and node_def.name.find('modelAverage') != -1:\n+      ps_device = pydev.DeviceSpec.from_string(self._ps_device)\n+\n+      current_job, ps_job = current_device.job, ps_device.job\n+      if ps_job and (not current_job or current_job == ps_job):\n+        ps_device.task = self._ps_strategy(op)\n+\n+      ps_device.merge_from(current_device)\n+      return ps_device.to_string()\n+", "path": "tensorflow/contrib/opt/python/training/model_average_optimizer.py", "position": 85, "original_position": 84, "commit_id": "86498c37a589fe38a9464b15b2f39b1576b8cbec", "original_commit_id": "4bb973323e87b2a442dcedd710fe3f14106d6182", "user": {"login": "ry", "id": 80, "node_id": "MDQ6VXNlcjgw", "avatar_url": "https://avatars1.githubusercontent.com/u/80?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ry", "html_url": "https://github.com/ry", "followers_url": "https://api.github.com/users/ry/followers", "following_url": "https://api.github.com/users/ry/following{/other_user}", "gists_url": "https://api.github.com/users/ry/gists{/gist_id}", "starred_url": "https://api.github.com/users/ry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ry/subscriptions", "organizations_url": "https://api.github.com/users/ry/orgs", "repos_url": "https://api.github.com/users/ry/repos", "events_url": "https://api.github.com/users/ry/events{/privacy}", "received_events_url": "https://api.github.com/users/ry/received_events", "type": "User", "site_admin": false}, "body": "Add a comment here explaining what's happening in each branch.\r\n\r\nBelow is for internal model average variables. Above is for user global variables.", "created_at": "2017-08-18T16:23:44Z", "updated_at": "2017-09-28T04:17:13Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/11581#discussion_r133999511", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11581", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/133999511"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/11581#discussion_r133999511"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11581"}}, "body_html": "<p>Add a comment here explaining what's happening in each branch.</p>\n<p>Below is for internal model average variables. Above is for user global variables.</p>", "body_text": "Add a comment here explaining what's happening in each branch.\nBelow is for internal model average variables. Above is for user global variables."}