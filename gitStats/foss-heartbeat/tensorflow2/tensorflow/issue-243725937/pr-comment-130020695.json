{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/130020695", "pull_request_review_id": 52852710, "id": 130020695, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMDAyMDY5NQ==", "diff_hunk": "@@ -0,0 +1,205 @@\n+# 2017 Contrib.\n+# ==============================================================================\n+\"\"\"Device function for model_average training.\"\"\"\n+from __future__ import absolute_import\n+from __future__ import division\n+from __future__ import print_function\n+\n+import six\n+\n+from tensorflow.core.framework import node_def_pb2\n+from tensorflow.python.framework import device as pydev\n+from tensorflow.python.platform import tf_logging as logging\n+from tensorflow.python.training import server_lib\n+\n+\n+class _RoundRobinStrategy(object):\n+  \"\"\"Returns the next ps task index for placement in round-robin order.\n+\n+  This class is not to be used directly by users.  See instead\n+  `model_average_device_setter()` below.\n+  \"\"\"\n+\n+  def __init__(self, num_tasks):\n+    \"\"\"Create a new `_RoundRobinStrategy`.\n+\n+    Args:\n+      num_tasks: Number of ps tasks to cycle among.\n+    \"\"\"\n+    self._num_tasks = num_tasks\n+    self._next_task = 0\n+\n+  def __call__(self, unused_op):\n+    \"\"\"Choose a ps task index for the given `Operation`.\n+\n+    Args:\n+      unused_op: An `Operation` to be placed on ps.\n+\n+    Returns:\n+      The next ps task index to use for the `Operation`. Returns the next\n+      index, in the range `[offset, offset + num_tasks)`.\n+    \"\"\"\n+    task = self._next_task\n+    self._next_task = (self._next_task + 1) % self._num_tasks\n+    return task\n+\n+\n+class _ReplicaDeviceChooser(object):\n+  \"\"\"Class to choose devices for Ops in a replicated training setup.\n+\n+  This class is not to be used directly by users.  See instead\n+  `model_average_device_setter()` below.\n+  \"\"\"\n+\n+  def __init__(self, ps_tasks, ps_device, worker_device, merge_devices, ps_ops,\n+               ps_strategy):\n+    \"\"\"Create a new `_ReplicaDeviceChooser`.\n+\n+    Args:\n+      ps_tasks: Number of tasks in the `ps` job.\n+      ps_device: String.  Name of the `ps` job.\n+      worker_device: String.  Name of the `worker` job.\n+      merge_devices: Boolean. Set to True to allow merging of device specs.\n+      ps_ops: List of strings representing `Operation` types that need to be\n+        placed on `ps` devices.\n+      ps_strategy: A callable invoked for every ps `Operation` (i.e. matched by\n+        `ps_ops`), that takes the `Operation` and returns the ps task index to\n+        use.\n+    \"\"\"\n+    self._ps_tasks = ps_tasks\n+    self._ps_device = ps_device\n+    self._worker_device = worker_device\n+    self._merge_devices = merge_devices\n+    self._ps_ops = ps_ops\n+    self._ps_strategy = ps_strategy\n+\n+  def device_function(self, op):\n+    \"\"\"Choose a device for `op`.\n+\n+    Args:\n+      op: an `Operation`.\n+\n+    Returns:\n+      The device to use for the `Operation`.\n+    \"\"\"\n+    if not self._merge_devices and op.device:\n+      return op.device\n+    current_device = pydev.DeviceSpec.from_string(op.device or \"\")\n+    spec = pydev.DeviceSpec()\n+\n+    node_def = op if isinstance(op, node_def_pb2.NodeDef) else op.node_def\n+    # ma global variables\n+    # TODO(chen meng): only global variables should be placed on ps.\n+    if node_def.name.find('modelAverage') != -1:\n+      device_string = \"%s/task:%d\" % (\n+        self._ps_device, self._ps_strategy(op))\n+      if self._merge_devices:\n+        spec = pydev.DeviceSpec.from_string(device_string)\n+        spec.merge_from(current_device)\n+        return spec.to_string()\n+      else:\n+        return device_string\n+    else:\n+      if self._worker_device:\n+        if not self._merge_devices:\n+          return self._worker_device\n+        spec = pydev.DeviceSpec.from_string(self._worker_device)\n+\n+      if not self._merge_devices:\n+        return \"\"\n+\n+    spec.merge_from(current_device)\n+    return spec.to_string()\n+\n+\n+def model_average_device_setter(ps_tasks=0, ps_device=\"/job:ps\",", "path": "tensorflow/contrib/model_average/python/device_setter.py", "position": null, "original_position": 115, "commit_id": "86498c37a589fe38a9464b15b2f39b1576b8cbec", "original_commit_id": "1d94748e372e046ddafbf60dc6cb8eeebd390a87", "user": {"login": "abenmao", "id": 29789552, "node_id": "MDQ6VXNlcjI5Nzg5NTUy", "avatar_url": "https://avatars0.githubusercontent.com/u/29789552?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abenmao", "html_url": "https://github.com/abenmao", "followers_url": "https://api.github.com/users/abenmao/followers", "following_url": "https://api.github.com/users/abenmao/following{/other_user}", "gists_url": "https://api.github.com/users/abenmao/gists{/gist_id}", "starred_url": "https://api.github.com/users/abenmao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abenmao/subscriptions", "organizations_url": "https://api.github.com/users/abenmao/orgs", "repos_url": "https://api.github.com/users/abenmao/repos", "events_url": "https://api.github.com/users/abenmao/events{/privacy}", "received_events_url": "https://api.github.com/users/abenmao/received_events", "type": "User", "site_admin": false}, "body": "There is only one difference:\r\ntf.train.replica_device_setter placed all variables(including global/local variables) on ps, while in model average, each worker own its o local variables \uff08local model parameters\uff09\uff0cthese local variables should be placed in each worker.", "created_at": "2017-07-28T06:28:49Z", "updated_at": "2017-09-28T04:17:13Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/11581#discussion_r130020695", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11581", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/130020695"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/11581#discussion_r130020695"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11581"}}, "body_html": "<p>There is only one difference:<br>\ntf.train.replica_device_setter placed all variables(including global/local variables) on ps, while in model average, each worker own its o local variables \uff08local model parameters\uff09\uff0cthese local variables should be placed in each worker.</p>", "body_text": "There is only one difference:\ntf.train.replica_device_setter placed all variables(including global/local variables) on ps, while in model average, each worker own its o local variables \uff08local model parameters\uff09\uff0cthese local variables should be placed in each worker.", "in_reply_to_id": 129938059}