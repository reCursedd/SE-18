{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/321322331", "html_url": "https://github.com/tensorflow/tensorflow/pull/11581#issuecomment-321322331", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11581", "id": 321322331, "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTMyMjMzMQ==", "user": {"login": "ry", "id": 80, "node_id": "MDQ6VXNlcjgw", "avatar_url": "https://avatars1.githubusercontent.com/u/80?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ry", "html_url": "https://github.com/ry", "followers_url": "https://api.github.com/users/ry/followers", "following_url": "https://api.github.com/users/ry/following{/other_user}", "gists_url": "https://api.github.com/users/ry/gists{/gist_id}", "starred_url": "https://api.github.com/users/ry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ry/subscriptions", "organizations_url": "https://api.github.com/users/ry/orgs", "repos_url": "https://api.github.com/users/ry/repos", "events_url": "https://api.github.com/users/ry/events{/privacy}", "received_events_url": "https://api.github.com/users/ry/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-09T17:19:48Z", "updated_at": "2017-08-09T17:19:48Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=29789552\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/abenmao\">@abenmao</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=407784\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/yangjunpro\">@yangjunpro</a> (cc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=7070361\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zhouh\">@zhouh</a>) I'm also hitting the MODEL_VARIALBES issue. It seems ModelAverageOptimizer assumes there's not any MODEL_VARIALBES, but that's a bad assumption. For example the batch_norm implementation distributed with TF creates MODEL_VARIALBES: <div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/5e5453099ad4a720172b352e8436e961d9d4235e/tensorflow/contrib/layers/python/layers/layers.py#L704\">tensorflow/tensorflow/contrib/layers/python/layers/layers.py</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n         Line 704\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/5e5453099ad4a720172b352e8436e961d9d4235e\">5e54530</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L704\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"704\"></td>\n          <td id=\"LC704\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> beta <span class=\"pl-k\">=</span> variables.model_variable(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>beta<span class=\"pl-pds\">'</span></span>, </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<p>Have you considered using the \"slot\" mechanism of Optimizer to store local variables?</p>", "body_text": "@abenmao @yangjunpro (cc @zhouh) I'm also hitting the MODEL_VARIALBES issue. It seems ModelAverageOptimizer assumes there's not any MODEL_VARIALBES, but that's a bad assumption. For example the batch_norm implementation distributed with TF creates MODEL_VARIALBES: \n  \n    \n      tensorflow/tensorflow/contrib/layers/python/layers/layers.py\n    \n    \n         Line 704\n      in\n      5e54530\n    \n    \n    \n    \n\n        \n          \n           beta = variables.model_variable('beta', \n        \n    \n  \n\n\nHave you considered using the \"slot\" mechanism of Optimizer to store local variables?", "body": "@abenmao @yangjunpro (cc @zhouh) I'm also hitting the MODEL_VARIALBES issue. It seems ModelAverageOptimizer assumes there's not any MODEL_VARIALBES, but that's a bad assumption. For example the batch_norm implementation distributed with TF creates MODEL_VARIALBES: https://github.com/tensorflow/tensorflow/blob/5e5453099ad4a720172b352e8436e961d9d4235e/tensorflow/contrib/layers/python/layers/layers.py#L704\r\n\r\nHave you considered using the \"slot\" mechanism of Optimizer to store local variables?"}