{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/316001697", "html_url": "https://github.com/tensorflow/tensorflow/issues/11430#issuecomment-316001697", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11430", "id": 316001697, "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjAwMTY5Nw==", "user": {"login": "uirye", "id": 23232937, "node_id": "MDQ6VXNlcjIzMjMyOTM3", "avatar_url": "https://avatars2.githubusercontent.com/u/23232937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/uirye", "html_url": "https://github.com/uirye", "followers_url": "https://api.github.com/users/uirye/followers", "following_url": "https://api.github.com/users/uirye/following{/other_user}", "gists_url": "https://api.github.com/users/uirye/gists{/gist_id}", "starred_url": "https://api.github.com/users/uirye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/uirye/subscriptions", "organizations_url": "https://api.github.com/users/uirye/orgs", "repos_url": "https://api.github.com/users/uirye/repos", "events_url": "https://api.github.com/users/uirye/events{/privacy}", "received_events_url": "https://api.github.com/users/uirye/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-18T08:57:23Z", "updated_at": "2017-07-18T08:57:23Z", "author_association": "NONE", "body_html": "<p>I currently have the next workaround for this problem:<br>\nI'm using py_func to import np.inalg.inv function</p>\n<pre><code>x=tf.placeholder(tf.complex64,[2,2])\n#y=tf.matrix_inverse(x)\ny = tf.py_func(np.linalg.inv, [x], x.dtype)\ny = tf.reshape(y, [2,2])\n</code></pre>", "body_text": "I currently have the next workaround for this problem:\nI'm using py_func to import np.inalg.inv function\nx=tf.placeholder(tf.complex64,[2,2])\n#y=tf.matrix_inverse(x)\ny = tf.py_func(np.linalg.inv, [x], x.dtype)\ny = tf.reshape(y, [2,2])", "body": "I currently have the next workaround for this problem:\r\nI'm using py_func to import np.inalg.inv function\r\n\r\n    x=tf.placeholder(tf.complex64,[2,2])\r\n    #y=tf.matrix_inverse(x)\r\n    y = tf.py_func(np.linalg.inv, [x], x.dtype)\r\n    y = tf.reshape(y, [2,2])"}