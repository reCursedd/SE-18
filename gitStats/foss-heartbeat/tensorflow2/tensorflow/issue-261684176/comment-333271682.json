{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/333271682", "html_url": "https://github.com/tensorflow/tensorflow/issues/13381#issuecomment-333271682", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13381", "id": 333271682, "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzI3MTY4Mg==", "user": {"login": "facaiy", "id": 1112263, "node_id": "MDQ6VXNlcjExMTIyNjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1112263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facaiy", "html_url": "https://github.com/facaiy", "followers_url": "https://api.github.com/users/facaiy/followers", "following_url": "https://api.github.com/users/facaiy/following{/other_user}", "gists_url": "https://api.github.com/users/facaiy/gists{/gist_id}", "starred_url": "https://api.github.com/users/facaiy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facaiy/subscriptions", "organizations_url": "https://api.github.com/users/facaiy/orgs", "repos_url": "https://api.github.com/users/facaiy/repos", "events_url": "https://api.github.com/users/facaiy/events{/privacy}", "received_events_url": "https://api.github.com/users/facaiy/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-30T01:15:25Z", "updated_at": "2017-09-30T23:50:53Z", "author_association": "MEMBER", "body_html": "<p>Hi, <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=372326\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/nrhine1\">@nrhine1</a> . Could you give a reproduceble case?</p>\n<p><code>max_to_keep=0</code> is checked at the beginning of the function:</p>\n<p><div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/f807b39667e84a28e83105fd29533262c257a53e/tensorflow/python/training/saver.py#L1321-L1322\">tensorflow/tensorflow/python/training/saver.py</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 1321 to 1322\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/f807b39667e84a28e83105fd29533262c257a53e\">f807b39</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L1321\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1321\"></td>\n          <td id=\"LC1321\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">if</span> <span class=\"pl-k\">not</span> <span class=\"pl-c1\">self</span>.saver_def.max_to_keep: </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1322\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1322\"></td>\n          <td id=\"LC1322\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-k\">return</span> </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<p>And there exists a corresponding test case as well:</p>\n<p><div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/f807b39667e84a28e83105fd29533262c257a53e/tensorflow/python/training/saver_test.py#L1199-L1225\">tensorflow/tensorflow/python/training/saver_test.py</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 1199 to 1225\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/f807b39667e84a28e83105fd29533262c257a53e\">f807b39</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L1199\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1199\"></td>\n          <td id=\"LC1199\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">def</span> <span class=\"pl-en\">testNoMaxToKeep</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>): </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1200\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1200\"></td>\n          <td id=\"LC1200\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   save_dir <span class=\"pl-k\">=</span> <span class=\"pl-c1\">self</span>._get_test_dir(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>no_max_to_keep<span class=\"pl-pds\">\"</span></span>) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1201\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1201\"></td>\n          <td id=\"LC1201\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   save_dir2 <span class=\"pl-k\">=</span> <span class=\"pl-c1\">self</span>._get_test_dir(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>max_to_keep_0<span class=\"pl-pds\">\"</span></span>) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1202\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1202\"></td>\n          <td id=\"LC1202\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1203\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1203\"></td>\n          <td id=\"LC1203\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-k\">with</span> <span class=\"pl-c1\">self</span>.test_session() <span class=\"pl-k\">as</span> sess: </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1204\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1204\"></td>\n          <td id=\"LC1204\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     v <span class=\"pl-k\">=</span> variables.Variable(<span class=\"pl-c1\">10.0</span>, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>v<span class=\"pl-pds\">\"</span></span>) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1205\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1205\"></td>\n          <td id=\"LC1205\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     variables.global_variables_initializer().run() </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1206\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1206\"></td>\n          <td id=\"LC1206\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1207\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1207\"></td>\n          <td id=\"LC1207\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-c\"><span class=\"pl-c\">#</span> Test max_to_keep being None.</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1208\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1208\"></td>\n          <td id=\"LC1208\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     save <span class=\"pl-k\">=</span> saver_module.Saver({<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>v<span class=\"pl-pds\">\"</span></span>: v}, <span class=\"pl-v\">max_to_keep</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">None</span>) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1209\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1209\"></td>\n          <td id=\"LC1209\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-c1\">self</span>.assertEqual([], save.last_checkpoints) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1210\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1210\"></td>\n          <td id=\"LC1210\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     s1 <span class=\"pl-k\">=</span> save.save(sess, os.path.join(save_dir, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>s1<span class=\"pl-pds\">\"</span></span>)) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1211\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1211\"></td>\n          <td id=\"LC1211\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-c1\">self</span>.assertEqual([], save.last_checkpoints) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1212\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1212\"></td>\n          <td id=\"LC1212\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-c1\">self</span>.assertTrue(saver_module.checkpoint_exists(s1)) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1213\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1213\"></td>\n          <td id=\"LC1213\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     s2 <span class=\"pl-k\">=</span> save.save(sess, os.path.join(save_dir, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>s2<span class=\"pl-pds\">\"</span></span>)) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1214\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1214\"></td>\n          <td id=\"LC1214\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-c1\">self</span>.assertEqual([], save.last_checkpoints) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1215\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1215\"></td>\n          <td id=\"LC1215\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-c1\">self</span>.assertTrue(saver_module.checkpoint_exists(s2)) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1216\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1216\"></td>\n          <td id=\"LC1216\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1217\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1217\"></td>\n          <td id=\"LC1217\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-c\"><span class=\"pl-c\">#</span> Test max_to_keep being 0.</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1218\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1218\"></td>\n          <td id=\"LC1218\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     save2 <span class=\"pl-k\">=</span> saver_module.Saver({<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>v<span class=\"pl-pds\">\"</span></span>: v}, <span class=\"pl-v\">max_to_keep</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0</span>) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1219\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1219\"></td>\n          <td id=\"LC1219\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-c1\">self</span>.assertEqual([], save2.last_checkpoints) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1220\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1220\"></td>\n          <td id=\"LC1220\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     s1 <span class=\"pl-k\">=</span> save2.save(sess, os.path.join(save_dir2, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>s1<span class=\"pl-pds\">\"</span></span>)) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1221\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1221\"></td>\n          <td id=\"LC1221\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-c1\">self</span>.assertEqual([], save2.last_checkpoints) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1222\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1222\"></td>\n          <td id=\"LC1222\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-c1\">self</span>.assertTrue(saver_module.checkpoint_exists(s1)) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1223\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1223\"></td>\n          <td id=\"LC1223\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     s2 <span class=\"pl-k\">=</span> save2.save(sess, os.path.join(save_dir2, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>s2<span class=\"pl-pds\">\"</span></span>)) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1224\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1224\"></td>\n          <td id=\"LC1224\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-c1\">self</span>.assertEqual([], save2.last_checkpoints) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1225\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1225\"></td>\n          <td id=\"LC1225\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-c1\">self</span>.assertTrue(saver_module.checkpoint_exists(s2)) </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<p>I mean the function seems tested throughly, and works fine, at least to me.</p>", "body_text": "Hi, @nrhine1 . Could you give a reproduceble case?\nmax_to_keep=0 is checked at the beginning of the function:\n\n  \n    \n      tensorflow/tensorflow/python/training/saver.py\n    \n    \n        Lines 1321 to 1322\n      in\n      f807b39\n    \n    \n    \n    \n\n        \n          \n           if not self.saver_def.max_to_keep: \n        \n\n        \n          \n             return \n        \n    \n  \n\n\nAnd there exists a corresponding test case as well:\n\n  \n    \n      tensorflow/tensorflow/python/training/saver_test.py\n    \n    \n        Lines 1199 to 1225\n      in\n      f807b39\n    \n    \n    \n    \n\n        \n          \n           def testNoMaxToKeep(self): \n        \n\n        \n          \n             save_dir = self._get_test_dir(\"no_max_to_keep\") \n        \n\n        \n          \n             save_dir2 = self._get_test_dir(\"max_to_keep_0\") \n        \n\n        \n          \n            \n        \n\n        \n          \n             with self.test_session() as sess: \n        \n\n        \n          \n               v = variables.Variable(10.0, name=\"v\") \n        \n\n        \n          \n               variables.global_variables_initializer().run() \n        \n\n        \n          \n            \n        \n\n        \n          \n               # Test max_to_keep being None. \n        \n\n        \n          \n               save = saver_module.Saver({\"v\": v}, max_to_keep=None) \n        \n\n        \n          \n               self.assertEqual([], save.last_checkpoints) \n        \n\n        \n          \n               s1 = save.save(sess, os.path.join(save_dir, \"s1\")) \n        \n\n        \n          \n               self.assertEqual([], save.last_checkpoints) \n        \n\n        \n          \n               self.assertTrue(saver_module.checkpoint_exists(s1)) \n        \n\n        \n          \n               s2 = save.save(sess, os.path.join(save_dir, \"s2\")) \n        \n\n        \n          \n               self.assertEqual([], save.last_checkpoints) \n        \n\n        \n          \n               self.assertTrue(saver_module.checkpoint_exists(s2)) \n        \n\n        \n          \n            \n        \n\n        \n          \n               # Test max_to_keep being 0. \n        \n\n        \n          \n               save2 = saver_module.Saver({\"v\": v}, max_to_keep=0) \n        \n\n        \n          \n               self.assertEqual([], save2.last_checkpoints) \n        \n\n        \n          \n               s1 = save2.save(sess, os.path.join(save_dir2, \"s1\")) \n        \n\n        \n          \n               self.assertEqual([], save2.last_checkpoints) \n        \n\n        \n          \n               self.assertTrue(saver_module.checkpoint_exists(s1)) \n        \n\n        \n          \n               s2 = save2.save(sess, os.path.join(save_dir2, \"s2\")) \n        \n\n        \n          \n               self.assertEqual([], save2.last_checkpoints) \n        \n\n        \n          \n               self.assertTrue(saver_module.checkpoint_exists(s2)) \n        \n    \n  \n\n\nI mean the function seems tested throughly, and works fine, at least to me.", "body": "Hi, @nrhine1 . Could you give a reproduceble case? \r\n\r\n`max_to_keep=0` is checked at the beginning of the function:\r\n\r\nhttps://github.com/tensorflow/tensorflow/blob/f807b39667e84a28e83105fd29533262c257a53e/tensorflow/python/training/saver.py#L1321-L1322\r\n\r\nAnd there exists a corresponding test case as well:\r\n\r\nhttps://github.com/tensorflow/tensorflow/blob/f807b39667e84a28e83105fd29533262c257a53e/tensorflow/python/training/saver_test.py#L1199-L1225\r\n\r\nI mean the function seems tested throughly, and works fine, at least to me."}