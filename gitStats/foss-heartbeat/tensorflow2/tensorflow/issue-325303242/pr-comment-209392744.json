{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/209392744", "pull_request_review_id": 145404944, "id": 209392744, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTM5Mjc0NA==", "diff_hunk": "@@ -0,0 +1,79 @@\n+# Copyright 2018 The TensorFlow Authors. All Rights Reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+# use this file except in compliance with the License.  You may obtain a copy of\n+# the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the\n+# License for the specific language governing permissions and limitations under\n+# the License.\n+# ==============================================================================\n+\"\"\"Tests for ParquetDataset.\"\"\"\n+\n+from __future__ import absolute_import\n+from __future__ import division\n+from __future__ import print_function\n+\n+import os\n+\n+from tensorflow.contrib.parquet.python.ops import parquet_dataset_ops\n+from tensorflow.python.framework import constant_op\n+from tensorflow.python.framework import dtypes\n+from tensorflow.python.framework import errors\n+from tensorflow.python.ops import array_ops\n+from tensorflow.python.platform import resource_loader\n+from tensorflow.python.platform import test\n+\n+class ParquetDatasetTest(test.TestCase):\n+\n+  def test_parquet_dataset(self):\n+    \"\"\"Test case for ParquetDataset.\n+\n+    Note: The sample file is generated from:\n+    `parquet-cpp/examples/low-level-api/reader_writer`\n+    This test extracts columns of [0, 1, 2, 4, 5]\n+    with column data types of [bool, int32, int64, float, double].\n+    Please check `parquet-cpp/examples/low-level-api/reader-writer.cc`\n+    to find details of how records are generated:\n+    Column 0 (bool): True for even rows and False otherwise.\n+    Column 1 (int32): Equal to row_index.\n+    Column 2 (int64): Equal to row_index * 1000 * 1000 * 1000 * 1000.\n+    Column 4 (float): Equal to row_index * 1.1.\n+    Column 5 (double): Equal to row_index * 1.1111111.\n+    \"\"\"\n+    filename = os.path.join(\n+        resource_loader.get_data_files_path(),\n+        'testdata/parquet_cpp_example.parquet')\n+\n+    filenames = array_ops.placeholder_with_default(\n+        constant_op.constant([filename], dtypes.string), shape=[None])\n+    columns = [0, 1, 2, 4, 5]\n+    output_types = (\n+        dtypes.bool, dtypes.int32, dtypes.int64, dtypes.float32, dtypes.float64)\n+    num_repeats = 2\n+\n+    dataset = parquet_dataset_ops.ParquetDataset(\n+        filenames, columns, output_types).repeat(num_repeats)\n+    iterator = dataset.make_initializable_iterator()\n+    init_op = iterator.initializer\n+    get_next = iterator.get_next()\n+\n+    with self.test_session() as sess:\n+      sess.run(init_op)\n+      for _ in range(num_repeats):  # Dataset is repeated.\n+        for i in range(500): # 500 row groups.", "path": "tensorflow/contrib/parquet/python/kernel_tests/parquet_test.py", "position": null, "original_position": 68, "commit_id": "f3a19282c0acf60fa0495591965f36ff57979719", "original_commit_id": "00764729afceb7b36be5f1d1154023ec19d06619", "user": {"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}, "body": "nit: 500 rows, not row groups, right?", "created_at": "2018-08-10T21:49:14Z", "updated_at": "2018-09-14T15:33:49Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/19461#discussion_r209392744", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/19461", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/209392744"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/19461#discussion_r209392744"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/19461"}}, "body_html": "<p>nit: 500 rows, not row groups, right?</p>", "body_text": "nit: 500 rows, not row groups, right?"}