{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/361878713", "html_url": "https://github.com/tensorflow/tensorflow/issues/15911#issuecomment-361878713", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15911", "id": 361878713, "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTg3ODcxMw==", "user": {"login": "jlebar", "id": 150663, "node_id": "MDQ6VXNlcjE1MDY2Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/150663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlebar", "html_url": "https://github.com/jlebar", "followers_url": "https://api.github.com/users/jlebar/followers", "following_url": "https://api.github.com/users/jlebar/following{/other_user}", "gists_url": "https://api.github.com/users/jlebar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlebar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlebar/subscriptions", "organizations_url": "https://api.github.com/users/jlebar/orgs", "repos_url": "https://api.github.com/users/jlebar/repos", "events_url": "https://api.github.com/users/jlebar/events{/privacy}", "received_events_url": "https://api.github.com/users/jlebar/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-31T09:46:54Z", "updated_at": "2018-01-31T09:46:54Z", "author_association": "MEMBER", "body_html": "<p>It would be helpful if you could do a bit of debugging yourself.  CUDADriver::CreateContext is responsible for creating the driver context TF uses.  Is it being called and successfully getting down to the cuCtxSetCurrent call?  If it is, it is CUDADriver::CreateContext called before or after you finish mucking with libcuda directly?</p>\n<p>I think the question is, why is the context not set correctly?  What's possibly happening is that by touching libcudart, you're implicitly creating a context.  Then when you import tensorflow, perhaps CUDADriver::CreateContext is called (it seems to be called on initialization).  I see a call to GetContext inside of CreateContext: <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/stream_executor/cuda/cuda_driver.cc#L541\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/stream_executor/cuda/cuda_driver.cc#L541</a>.  That may be what's crashing.</p>\n<p>If my guess at the etiology is correct above, I think I'd take a patch that modifies the relevant code so that, when we're in this particular codepath, GetContext does not crash if the current context was not created by streamexecutor.</p>\n<p>Alternatively, it's possible if you just moved the \"import tensorflow\" bit up, the initialization would happen before you touch libcudart, and everything would work.  I'm not sure.</p>", "body_text": "It would be helpful if you could do a bit of debugging yourself.  CUDADriver::CreateContext is responsible for creating the driver context TF uses.  Is it being called and successfully getting down to the cuCtxSetCurrent call?  If it is, it is CUDADriver::CreateContext called before or after you finish mucking with libcuda directly?\nI think the question is, why is the context not set correctly?  What's possibly happening is that by touching libcudart, you're implicitly creating a context.  Then when you import tensorflow, perhaps CUDADriver::CreateContext is called (it seems to be called on initialization).  I see a call to GetContext inside of CreateContext: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/stream_executor/cuda/cuda_driver.cc#L541.  That may be what's crashing.\nIf my guess at the etiology is correct above, I think I'd take a patch that modifies the relevant code so that, when we're in this particular codepath, GetContext does not crash if the current context was not created by streamexecutor.\nAlternatively, it's possible if you just moved the \"import tensorflow\" bit up, the initialization would happen before you touch libcudart, and everything would work.  I'm not sure.", "body": "It would be helpful if you could do a bit of debugging yourself.  CUDADriver::CreateContext is responsible for creating the driver context TF uses.  Is it being called and successfully getting down to the cuCtxSetCurrent call?  If it is, it is CUDADriver::CreateContext called before or after you finish mucking with libcuda directly?\r\n\r\nI think the question is, why is the context not set correctly?  What's possibly happening is that by touching libcudart, you're implicitly creating a context.  Then when you import tensorflow, perhaps CUDADriver::CreateContext is called (it seems to be called on initialization).  I see a call to GetContext inside of CreateContext: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/stream_executor/cuda/cuda_driver.cc#L541.  That may be what's crashing.\r\n\r\nIf my guess at the etiology is correct above, I think I'd take a patch that modifies the relevant code so that, when we're in this particular codepath, GetContext does not crash if the current context was not created by streamexecutor.\r\n\r\nAlternatively, it's possible if you just moved the \"import tensorflow\" bit up, the initialization would happen before you touch libcudart, and everything would work.  I'm not sure."}