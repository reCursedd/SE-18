{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15911", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15911/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15911/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15911/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15911", "id": 286487742, "node_id": "MDU6SXNzdWUyODY0ODc3NDI=", "number": 15911, "title": "Crash when using CUDA API while using Tensorflow. \"current context was not created by the StreamExecutor cuda_driver API\"", "user": {"login": "marcj", "id": 450980, "node_id": "MDQ6VXNlcjQ1MDk4MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/450980?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcj", "html_url": "https://github.com/marcj", "followers_url": "https://api.github.com/users/marcj/followers", "following_url": "https://api.github.com/users/marcj/following{/other_user}", "gists_url": "https://api.github.com/users/marcj/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcj/subscriptions", "organizations_url": "https://api.github.com/users/marcj/orgs", "repos_url": "https://api.github.com/users/marcj/repos", "events_url": "https://api.github.com/users/marcj/events{/privacy}", "received_events_url": "https://api.github.com/users/marcj/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-01-06T14:23:59Z", "updated_at": "2018-02-15T19:39:43Z", "closed_at": null, "author_association": "NONE", "body_html": "<h3>Expected behavior</h3>\n<p>I expect to work with the CUDA library by using libcudart directly in my Python script before and while Tensorflow is being used - without errors.</p>\n<h3>Actual behavior</h3>\n<p>The script crashes with following error as soon as I've used libcudart through ctypes before tensorflow is imported.</p>\n<pre><code>2018-01-06 14:45:50.641211: F tensorflow/stream_executor/cuda/cuda_driver.cc:232] current context was not created by the StreamExecutor cuda_driver API: 0x7fe122002400; a CUDA runtime call was likely performed without using a StreamExecutor context\n</code></pre>\n<h3>Environment</h3>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>OS</td>\n<td>Mac OS 10.12.4</td>\n</tr>\n<tr>\n<td>tensorflow-gpu</td>\n<td>pip 1.1.0, v1.1.0-rc0-61-g1ec6ed5</td>\n</tr>\n<tr>\n<td>Device</td>\n<td>GPU Titan X pascal</td>\n</tr>\n<tr>\n<td>Python</td>\n<td>2.7.12</td>\n</tr>\n<tr>\n<td>Python</td>\n<td>3.5.2</td>\n</tr>\n<tr>\n<td>CUDA</td>\n<td>8.0</td>\n</tr>\n<tr>\n<td>cuDNN</td>\n<td>5.1.5</td>\n</tr>\n</tbody>\n</table>\n<h3>Reproduce</h3>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">from</span> <span class=\"pl-c1\">__future__</span> <span class=\"pl-k\">import</span> print_function\n\n<span class=\"pl-k\">import</span> ctypes\n<span class=\"pl-k\">import</span> platform\n\nsystem <span class=\"pl-k\">=</span> platform.system()\n\n<span class=\"pl-k\">if</span> system <span class=\"pl-k\">==</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Linux<span class=\"pl-pds\">\"</span></span>:\n    libcudart <span class=\"pl-k\">=</span> ctypes.cdll.LoadLibrary(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>libcudart.so<span class=\"pl-pds\">\"</span></span>)\n<span class=\"pl-k\">elif</span> system <span class=\"pl-k\">==</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Darwin<span class=\"pl-pds\">\"</span></span>:\n    libcudart <span class=\"pl-k\">=</span> ctypes.cdll.LoadLibrary(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>libcudart.dylib<span class=\"pl-pds\">\"</span></span>)\n<span class=\"pl-k\">elif</span> system <span class=\"pl-k\">==</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Windows<span class=\"pl-pds\">\"</span></span>:\n    libcudart <span class=\"pl-k\">=</span> ctypes.windll.LoadLibrary(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>libcudart.dll<span class=\"pl-pds\">\"</span></span>)\n<span class=\"pl-k\">else</span>:\n    <span class=\"pl-k\">raise</span> <span class=\"pl-c1\">Exception</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Cannot identify system.<span class=\"pl-pds\">\"</span></span>)\n\nversion <span class=\"pl-k\">=</span> ctypes.c_int()\nrc <span class=\"pl-k\">=</span> libcudart.cudaRuntimeGetVersion(ctypes.byref(version))\n<span class=\"pl-k\">if</span> rc <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">0</span>:\n    <span class=\"pl-k\">raise</span> <span class=\"pl-c1\">ValueError</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Could not get version<span class=\"pl-pds\">\"</span></span>)\n<span class=\"pl-k\">if</span> version.value <span class=\"pl-k\">&lt;</span> <span class=\"pl-c1\">6050</span>:\n    <span class=\"pl-k\">raise</span> <span class=\"pl-c1\">Exception</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>CUDA version must be &gt;= 6.5<span class=\"pl-pds\">\"</span></span>)\n\nlibcudart.cudaSetDevice(<span class=\"pl-c1\">0</span>)\n\nfree <span class=\"pl-k\">=</span> ctypes.c_size_t()\ntotal <span class=\"pl-k\">=</span> ctypes.c_size_t()\nrc <span class=\"pl-k\">=</span> libcudart.cudaMemGetInfo(ctypes.byref(free), ctypes.byref(total))\n\n<span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Memory <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> <span class=\"pl-c1\">str</span>(free.value) <span class=\"pl-k\">+</span>  <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> of <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> <span class=\"pl-c1\">str</span>(total.value))\n\n<span class=\"pl-k\">del</span> libcudart\n\n<span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\nhello <span class=\"pl-k\">=</span> tf.constant(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Hello, TensorFlow!<span class=\"pl-pds\">'</span></span>)\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Start tf session</span>\nsess <span class=\"pl-k\">=</span> tf.Session()\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Run the op</span>\n<span class=\"pl-c1\">print</span>(sess.run(hello))</pre></div>\n<p>Execute</p>\n<pre><code>$ python3 tf-cuda-crash.py\n</code></pre>\n<p>Output will be like</p>\n<pre><code>$ python3 tf-cuda-crash.py\nMemory 9916960768 of 12884574208\n2018-01-06 14:45:50.639837: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.\n2018-01-06 14:45:50.639863: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\n2018-01-06 14:45:50.639870: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\n2018-01-06 14:45:50.641211: F tensorflow/stream_executor/cuda/cuda_driver.cc:232] current context was not created by the StreamExecutor cuda_driver API: 0x7fe122002400; a CUDA runtime call was likely performed without using a StreamExecutor context\n[1]    4240 abort      python3 tf-cuda-crash.py\n</code></pre>\n<p>Happens with both Python2 and 3.</p>", "body_text": "Expected behavior\nI expect to work with the CUDA library by using libcudart directly in my Python script before and while Tensorflow is being used - without errors.\nActual behavior\nThe script crashes with following error as soon as I've used libcudart through ctypes before tensorflow is imported.\n2018-01-06 14:45:50.641211: F tensorflow/stream_executor/cuda/cuda_driver.cc:232] current context was not created by the StreamExecutor cuda_driver API: 0x7fe122002400; a CUDA runtime call was likely performed without using a StreamExecutor context\n\nEnvironment\n\n\n\nName\nValue\n\n\n\n\nOS\nMac OS 10.12.4\n\n\ntensorflow-gpu\npip 1.1.0, v1.1.0-rc0-61-g1ec6ed5\n\n\nDevice\nGPU Titan X pascal\n\n\nPython\n2.7.12\n\n\nPython\n3.5.2\n\n\nCUDA\n8.0\n\n\ncuDNN\n5.1.5\n\n\n\nReproduce\nfrom __future__ import print_function\n\nimport ctypes\nimport platform\n\nsystem = platform.system()\n\nif system == \"Linux\":\n    libcudart = ctypes.cdll.LoadLibrary(\"libcudart.so\")\nelif system == \"Darwin\":\n    libcudart = ctypes.cdll.LoadLibrary(\"libcudart.dylib\")\nelif system == \"Windows\":\n    libcudart = ctypes.windll.LoadLibrary(\"libcudart.dll\")\nelse:\n    raise Exception(\"Cannot identify system.\")\n\nversion = ctypes.c_int()\nrc = libcudart.cudaRuntimeGetVersion(ctypes.byref(version))\nif rc != 0:\n    raise ValueError(\"Could not get version\")\nif version.value < 6050:\n    raise Exception(\"CUDA version must be >= 6.5\")\n\nlibcudart.cudaSetDevice(0)\n\nfree = ctypes.c_size_t()\ntotal = ctypes.c_size_t()\nrc = libcudart.cudaMemGetInfo(ctypes.byref(free), ctypes.byref(total))\n\nprint(\"Memory \" + str(free.value) +  \" of \" + str(total.value))\n\ndel libcudart\n\nimport tensorflow as tf\n\nhello = tf.constant('Hello, TensorFlow!')\n\n# Start tf session\nsess = tf.Session()\n\n# Run the op\nprint(sess.run(hello))\nExecute\n$ python3 tf-cuda-crash.py\n\nOutput will be like\n$ python3 tf-cuda-crash.py\nMemory 9916960768 of 12884574208\n2018-01-06 14:45:50.639837: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.\n2018-01-06 14:45:50.639863: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\n2018-01-06 14:45:50.639870: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\n2018-01-06 14:45:50.641211: F tensorflow/stream_executor/cuda/cuda_driver.cc:232] current context was not created by the StreamExecutor cuda_driver API: 0x7fe122002400; a CUDA runtime call was likely performed without using a StreamExecutor context\n[1]    4240 abort      python3 tf-cuda-crash.py\n\nHappens with both Python2 and 3.", "body": "### Expected behavior\r\n\r\nI expect to work with the CUDA library by using libcudart directly in my Python script before and while Tensorflow is being used - without errors.\r\n\r\n### Actual behavior\r\n\r\nThe script crashes with following error as soon as I've used libcudart through ctypes before tensorflow is imported.\r\n\r\n```\r\n2018-01-06 14:45:50.641211: F tensorflow/stream_executor/cuda/cuda_driver.cc:232] current context was not created by the StreamExecutor cuda_driver API: 0x7fe122002400; a CUDA runtime call was likely performed without using a StreamExecutor context\r\n```\r\n\r\n### Environment\r\n\r\n| Name  | Value |\r\n| ------------- | ------------- |\r\n| OS  | Mac OS 10.12.4 |\r\n| tensorflow-gpu  | pip 1.1.0, v1.1.0-rc0-61-g1ec6ed5  |\r\n| Device  | GPU Titan X pascal  |\r\n| Python  | 2.7.12  |\r\n| Python  | 3.5.2 |\r\n| CUDA  | 8.0  |\r\n| cuDNN  | 5.1.5 |\r\n\r\n\r\n### Reproduce\r\n\r\n```python\r\nfrom __future__ import print_function\r\n\r\nimport ctypes\r\nimport platform\r\n\r\nsystem = platform.system()\r\n\r\nif system == \"Linux\":\r\n    libcudart = ctypes.cdll.LoadLibrary(\"libcudart.so\")\r\nelif system == \"Darwin\":\r\n    libcudart = ctypes.cdll.LoadLibrary(\"libcudart.dylib\")\r\nelif system == \"Windows\":\r\n    libcudart = ctypes.windll.LoadLibrary(\"libcudart.dll\")\r\nelse:\r\n    raise Exception(\"Cannot identify system.\")\r\n\r\nversion = ctypes.c_int()\r\nrc = libcudart.cudaRuntimeGetVersion(ctypes.byref(version))\r\nif rc != 0:\r\n    raise ValueError(\"Could not get version\")\r\nif version.value < 6050:\r\n    raise Exception(\"CUDA version must be >= 6.5\")\r\n\r\nlibcudart.cudaSetDevice(0)\r\n\r\nfree = ctypes.c_size_t()\r\ntotal = ctypes.c_size_t()\r\nrc = libcudart.cudaMemGetInfo(ctypes.byref(free), ctypes.byref(total))\r\n\r\nprint(\"Memory \" + str(free.value) +  \" of \" + str(total.value))\r\n\r\ndel libcudart\r\n\r\nimport tensorflow as tf\r\n\r\nhello = tf.constant('Hello, TensorFlow!')\r\n\r\n# Start tf session\r\nsess = tf.Session()\r\n\r\n# Run the op\r\nprint(sess.run(hello))\r\n````\r\n\r\nExecute \r\n\r\n```\r\n$ python3 tf-cuda-crash.py\r\n```\r\n\r\nOutput will be like\r\n\r\n```\r\n$ python3 tf-cuda-crash.py\r\nMemory 9916960768 of 12884574208\r\n2018-01-06 14:45:50.639837: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.\r\n2018-01-06 14:45:50.639863: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\r\n2018-01-06 14:45:50.639870: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\r\n2018-01-06 14:45:50.641211: F tensorflow/stream_executor/cuda/cuda_driver.cc:232] current context was not created by the StreamExecutor cuda_driver API: 0x7fe122002400; a CUDA runtime call was likely performed without using a StreamExecutor context\r\n[1]    4240 abort      python3 tf-cuda-crash.py\r\n```\r\n\r\nHappens with both Python2 and 3.\r\n  "}