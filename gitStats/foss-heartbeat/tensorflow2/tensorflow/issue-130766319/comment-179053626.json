{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/179053626", "html_url": "https://github.com/tensorflow/tensorflow/issues/964#issuecomment-179053626", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/964", "id": 179053626, "node_id": "MDEyOklzc3VlQ29tbWVudDE3OTA1MzYyNg==", "user": {"login": "vrv", "id": 463737, "node_id": "MDQ6VXNlcjQ2MzczNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/463737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vrv", "html_url": "https://github.com/vrv", "followers_url": "https://api.github.com/users/vrv/followers", "following_url": "https://api.github.com/users/vrv/following{/other_user}", "gists_url": "https://api.github.com/users/vrv/gists{/gist_id}", "starred_url": "https://api.github.com/users/vrv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vrv/subscriptions", "organizations_url": "https://api.github.com/users/vrv/orgs", "repos_url": "https://api.github.com/users/vrv/repos", "events_url": "https://api.github.com/users/vrv/events{/privacy}", "received_events_url": "https://api.github.com/users/vrv/received_events", "type": "User", "site_admin": false}, "created_at": "2016-02-03T07:03:51Z", "updated_at": "2016-02-03T07:04:24Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Okay, I think I have a fix for this on Mac.  <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=38796651\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/danmane\">@danmane</a> in case he's interested.</p>\n<p>The problem seems to be that in the DirectoryWatcherTest, the ByteLoader implementation assumes that you can read EOF from a file, have another thread append to the file, and then continue reading from the last known seek position.  Apparently this breaks under mac os x but not under linux.</p>\n<p>I changed the ByteLoader code to keep track of the number of bytes read, and when you see EOF, to try seeking to the current number of bytes read and trying again to read from the file.  Doing this allows the test to pass.  I couldn't find any documentation on this behavior difference between OS X and Linux though.  I'll try to send a review in tomorrow.</p>", "body_text": "Okay, I think I have a fix for this on Mac.  @danmane in case he's interested.\nThe problem seems to be that in the DirectoryWatcherTest, the ByteLoader implementation assumes that you can read EOF from a file, have another thread append to the file, and then continue reading from the last known seek position.  Apparently this breaks under mac os x but not under linux.\nI changed the ByteLoader code to keep track of the number of bytes read, and when you see EOF, to try seeking to the current number of bytes read and trying again to read from the file.  Doing this allows the test to pass.  I couldn't find any documentation on this behavior difference between OS X and Linux though.  I'll try to send a review in tomorrow.", "body": "Okay, I think I have a fix for this on Mac.  @danmane in case he's interested.\n\nThe problem seems to be that in the DirectoryWatcherTest, the ByteLoader implementation assumes that you can read EOF from a file, have another thread append to the file, and then continue reading from the last known seek position.  Apparently this breaks under mac os x but not under linux.\n\nI changed the ByteLoader code to keep track of the number of bytes read, and when you see EOF, to try seeking to the current number of bytes read and trying again to read from the file.  Doing this allows the test to pass.  I couldn't find any documentation on this behavior difference between OS X and Linux though.  I'll try to send a review in tomorrow.\n"}