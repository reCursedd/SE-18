{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13222", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13222/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13222/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13222/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/13222", "id": 259665112, "node_id": "MDU6SXNzdWUyNTk2NjUxMTI=", "number": 13222, "title": "SVD in TensorFlow is slower than in numpy", "user": {"login": "vslobody", "id": 23069222, "node_id": "MDQ6VXNlcjIzMDY5MjIy", "avatar_url": "https://avatars1.githubusercontent.com/u/23069222?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vslobody", "html_url": "https://github.com/vslobody", "followers_url": "https://api.github.com/users/vslobody/followers", "following_url": "https://api.github.com/users/vslobody/following{/other_user}", "gists_url": "https://api.github.com/users/vslobody/gists{/gist_id}", "starred_url": "https://api.github.com/users/vslobody/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vslobody/subscriptions", "organizations_url": "https://api.github.com/users/vslobody/orgs", "repos_url": "https://api.github.com/users/vslobody/repos", "events_url": "https://api.github.com/users/vslobody/events{/privacy}", "received_events_url": "https://api.github.com/users/vslobody/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "open", "locked": false, "assignee": {"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2017-09-21T23:53:20Z", "updated_at": "2018-11-14T19:13:31Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>I am observing that on my machine SVD in tensorflow is running significantly slower than in numpy. I have GTX 1080 GPU, and expecting SVD to be at least as fast as when running the code using CPU (numpy).</p>\n<p><strong>Environment Info</strong></p>\n<p>Operating System</p>\n<pre><code>lsb_release -a\nNo LSB modules are available.\nDistributor ID:\tUbuntu\nDescription:\tUbuntu 16.10\nRelease:\t16.10\nCodename:\tyakkety\n</code></pre>\n<p>Installed version of CUDA and cuDNN:</p>\n<pre><code>ls -l /usr/local/cuda-8.0/lib64/libcud*\n-rw-r--r-- 1 root      root    556000 Feb 22  2017 /usr/local/cuda-8.0/lib64/libcudadevrt.a\nlrwxrwxrwx 1 root      root        16 Feb 22  2017 /usr/local/cuda-8.0/lib64/libcudart.so -&gt; libcudart.so.8.0\nlrwxrwxrwx 1 root      root        19 Feb 22  2017 /usr/local/cuda-8.0/lib64/libcudart.so.8.0 -&gt; libcudart.so.8.0.61\n-rwxr-xr-x 1 root      root    415432 Feb 22  2017 /usr/local/cuda-8.0/lib64/libcudart.so.8.0.61\n-rw-r--r-- 1 root      root    775162 Feb 22  2017 /usr/local/cuda-8.0/lib64/libcudart_static.a\nlrwxrwxrwx 1 voldemaro users       13 Nov  6  2016 /usr/local/cuda-8.0/lib64/libcudnn.so -&gt; libcudnn.so.5\nlrwxrwxrwx 1 voldemaro users       18 Nov  6  2016 /usr/local/cuda-8.0/lib64/libcudnn.so.5 -&gt; libcudnn.so.5.1.10\n-rwxr-xr-x 1 voldemaro users 84163560 Nov  6  2016 /usr/local/cuda-8.0/lib64/libcudnn.so.5.1.10\n-rw-r--r-- 1 voldemaro users 70364814 Nov  6  2016 /usr/local/cuda-8.0/lib64/libcudnn_static.a\n</code></pre>\n<p>TensorFlow Setup</p>\n<pre><code>python -c \"import tensorflow; print(tensorflow.__version__)\"\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcublas.so.8.0 locally\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcudnn.so.5 locally\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcufft.so.8.0 locally\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcurand.so.8.0 locally\n1.0.0\n</code></pre>\n<p><strong>Code:</strong></p>\n<pre><code>'''\nCreated on Sep 21, 2017\n\n@author: voldemaro\n'''\nimport numpy as np\nimport tensorflow as tf\nimport time;\nimport numpy.linalg as NLA;\n\n\n\n\nN=1534;\n\nsvd_array = np.random.random_sample((N,N));\nsvd_array = svd_array.astype(complex);\n\nspecVar = tf.Variable(svd_array, dtype=tf.complex64);\n\n[D2, E1,  E2] = tf.svd(specVar);\n\ninit_OP = tf.global_variables_initializer();\n\nwith tf.Session() as sess:\n    # Initialize all tensorflow variables\n    start = time.time();\n    sess.run(init_OP);\n    print 'initializing variables: {} s'.format(time.time()-start);\n    \n    start_time = time.time();\n    [d, e1, e2]  = sess.run([D2, E1,  E2]);\n    print(\"Tensorflow SVD ---: {} s\" . format(time.time() - start_time));\n\n\n# Equivalent numpy \nstart = time.time();\n\nu, s, v = NLA.svd(svd_array);   \nprint 'numpy SVD  ---: {} s'.format(time.time() - start);\n</code></pre>\n<p>Code Trace:</p>\n<pre><code>W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:910] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:885] Found device 0 with properties: \nname: GeForce GTX 1080\nmajor: 6 minor: 1 memoryClockRate (GHz) 1.7335\npciBusID 0000:01:00.0\nTotal memory: 7.92GiB\nFree memory: 7.11GiB\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:906] DMA: 0 \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 0:   Y \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -&gt; (device: 0, name: GeForce GTX 1080, pci bus id: 0000:01:00.0)\ninitializing variables: 0.230546951294 s\nTensorflow SVD ---: 6.56117296219 s\nnumpy SVD  ---: 4.41714000702 s\n</code></pre>", "body_text": "I am observing that on my machine SVD in tensorflow is running significantly slower than in numpy. I have GTX 1080 GPU, and expecting SVD to be at least as fast as when running the code using CPU (numpy).\nEnvironment Info\nOperating System\nlsb_release -a\nNo LSB modules are available.\nDistributor ID:\tUbuntu\nDescription:\tUbuntu 16.10\nRelease:\t16.10\nCodename:\tyakkety\n\nInstalled version of CUDA and cuDNN:\nls -l /usr/local/cuda-8.0/lib64/libcud*\n-rw-r--r-- 1 root      root    556000 Feb 22  2017 /usr/local/cuda-8.0/lib64/libcudadevrt.a\nlrwxrwxrwx 1 root      root        16 Feb 22  2017 /usr/local/cuda-8.0/lib64/libcudart.so -> libcudart.so.8.0\nlrwxrwxrwx 1 root      root        19 Feb 22  2017 /usr/local/cuda-8.0/lib64/libcudart.so.8.0 -> libcudart.so.8.0.61\n-rwxr-xr-x 1 root      root    415432 Feb 22  2017 /usr/local/cuda-8.0/lib64/libcudart.so.8.0.61\n-rw-r--r-- 1 root      root    775162 Feb 22  2017 /usr/local/cuda-8.0/lib64/libcudart_static.a\nlrwxrwxrwx 1 voldemaro users       13 Nov  6  2016 /usr/local/cuda-8.0/lib64/libcudnn.so -> libcudnn.so.5\nlrwxrwxrwx 1 voldemaro users       18 Nov  6  2016 /usr/local/cuda-8.0/lib64/libcudnn.so.5 -> libcudnn.so.5.1.10\n-rwxr-xr-x 1 voldemaro users 84163560 Nov  6  2016 /usr/local/cuda-8.0/lib64/libcudnn.so.5.1.10\n-rw-r--r-- 1 voldemaro users 70364814 Nov  6  2016 /usr/local/cuda-8.0/lib64/libcudnn_static.a\n\nTensorFlow Setup\npython -c \"import tensorflow; print(tensorflow.__version__)\"\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcublas.so.8.0 locally\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcudnn.so.5 locally\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcufft.so.8.0 locally\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcurand.so.8.0 locally\n1.0.0\n\nCode:\n'''\nCreated on Sep 21, 2017\n\n@author: voldemaro\n'''\nimport numpy as np\nimport tensorflow as tf\nimport time;\nimport numpy.linalg as NLA;\n\n\n\n\nN=1534;\n\nsvd_array = np.random.random_sample((N,N));\nsvd_array = svd_array.astype(complex);\n\nspecVar = tf.Variable(svd_array, dtype=tf.complex64);\n\n[D2, E1,  E2] = tf.svd(specVar);\n\ninit_OP = tf.global_variables_initializer();\n\nwith tf.Session() as sess:\n    # Initialize all tensorflow variables\n    start = time.time();\n    sess.run(init_OP);\n    print 'initializing variables: {} s'.format(time.time()-start);\n    \n    start_time = time.time();\n    [d, e1, e2]  = sess.run([D2, E1,  E2]);\n    print(\"Tensorflow SVD ---: {} s\" . format(time.time() - start_time));\n\n\n# Equivalent numpy \nstart = time.time();\n\nu, s, v = NLA.svd(svd_array);   \nprint 'numpy SVD  ---: {} s'.format(time.time() - start);\n\nCode Trace:\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:910] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:885] Found device 0 with properties: \nname: GeForce GTX 1080\nmajor: 6 minor: 1 memoryClockRate (GHz) 1.7335\npciBusID 0000:01:00.0\nTotal memory: 7.92GiB\nFree memory: 7.11GiB\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:906] DMA: 0 \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 0:   Y \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1080, pci bus id: 0000:01:00.0)\ninitializing variables: 0.230546951294 s\nTensorflow SVD ---: 6.56117296219 s\nnumpy SVD  ---: 4.41714000702 s", "body": "I am observing that on my machine SVD in tensorflow is running significantly slower than in numpy. I have GTX 1080 GPU, and expecting SVD to be at least as fast as when running the code using CPU (numpy).\r\n\r\n**Environment Info**\r\n\r\nOperating System\r\n\r\n    lsb_release -a\r\n    No LSB modules are available.\r\n    Distributor ID:\tUbuntu\r\n    Description:\tUbuntu 16.10\r\n    Release:\t16.10\r\n    Codename:\tyakkety\r\n\r\nInstalled version of CUDA and cuDNN:\r\n\r\n    ls -l /usr/local/cuda-8.0/lib64/libcud*\r\n    -rw-r--r-- 1 root      root    556000 Feb 22  2017 /usr/local/cuda-8.0/lib64/libcudadevrt.a\r\n    lrwxrwxrwx 1 root      root        16 Feb 22  2017 /usr/local/cuda-8.0/lib64/libcudart.so -> libcudart.so.8.0\r\n    lrwxrwxrwx 1 root      root        19 Feb 22  2017 /usr/local/cuda-8.0/lib64/libcudart.so.8.0 -> libcudart.so.8.0.61\r\n    -rwxr-xr-x 1 root      root    415432 Feb 22  2017 /usr/local/cuda-8.0/lib64/libcudart.so.8.0.61\r\n    -rw-r--r-- 1 root      root    775162 Feb 22  2017 /usr/local/cuda-8.0/lib64/libcudart_static.a\r\n    lrwxrwxrwx 1 voldemaro users       13 Nov  6  2016 /usr/local/cuda-8.0/lib64/libcudnn.so -> libcudnn.so.5\r\n    lrwxrwxrwx 1 voldemaro users       18 Nov  6  2016 /usr/local/cuda-8.0/lib64/libcudnn.so.5 -> libcudnn.so.5.1.10\r\n    -rwxr-xr-x 1 voldemaro users 84163560 Nov  6  2016 /usr/local/cuda-8.0/lib64/libcudnn.so.5.1.10\r\n    -rw-r--r-- 1 voldemaro users 70364814 Nov  6  2016 /usr/local/cuda-8.0/lib64/libcudnn_static.a\r\n\r\nTensorFlow Setup\r\n\r\n    python -c \"import tensorflow; print(tensorflow.__version__)\"\r\n    I tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcublas.so.8.0 locally\r\n    I tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcudnn.so.5 locally\r\n    I tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcufft.so.8.0 locally\r\n    I tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcuda.so.1 locally\r\n    I tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcurand.so.8.0 locally\r\n    1.0.0\r\n\r\n**Code:**\r\n\r\n    '''\r\n    Created on Sep 21, 2017\r\n    \r\n    @author: voldemaro\r\n    '''\r\n    import numpy as np\r\n    import tensorflow as tf\r\n    import time;\r\n    import numpy.linalg as NLA;\r\n    \r\n    \r\n    \r\n    \r\n    N=1534;\r\n    \r\n    svd_array = np.random.random_sample((N,N));\r\n    svd_array = svd_array.astype(complex);\r\n    \r\n    specVar = tf.Variable(svd_array, dtype=tf.complex64);\r\n    \r\n    [D2, E1,  E2] = tf.svd(specVar);\r\n    \r\n    init_OP = tf.global_variables_initializer();\r\n    \r\n    with tf.Session() as sess:\r\n        # Initialize all tensorflow variables\r\n        start = time.time();\r\n        sess.run(init_OP);\r\n        print 'initializing variables: {} s'.format(time.time()-start);\r\n        \r\n        start_time = time.time();\r\n        [d, e1, e2]  = sess.run([D2, E1,  E2]);\r\n        print(\"Tensorflow SVD ---: {} s\" . format(time.time() - start_time));\r\n    \r\n    \r\n    # Equivalent numpy \r\n    start = time.time();\r\n    \r\n    u, s, v = NLA.svd(svd_array);   \r\n    print 'numpy SVD  ---: {} s'.format(time.time() - start);\r\n\r\n\r\nCode Trace:\r\n\r\n    W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\r\n    W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\r\n    W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.\r\n    W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.\r\n    I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:910] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\r\n    I tensorflow/core/common_runtime/gpu/gpu_device.cc:885] Found device 0 with properties: \r\n    name: GeForce GTX 1080\r\n    major: 6 minor: 1 memoryClockRate (GHz) 1.7335\r\n    pciBusID 0000:01:00.0\r\n    Total memory: 7.92GiB\r\n    Free memory: 7.11GiB\r\n    I tensorflow/core/common_runtime/gpu/gpu_device.cc:906] DMA: 0 \r\n    I tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 0:   Y \r\n    I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1080, pci bus id: 0000:01:00.0)\r\n    initializing variables: 0.230546951294 s\r\n    Tensorflow SVD ---: 6.56117296219 s\r\n    numpy SVD  ---: 4.41714000702 s\r\n\r\n"}