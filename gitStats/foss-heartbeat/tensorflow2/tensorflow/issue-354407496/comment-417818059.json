{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/417818059", "html_url": "https://github.com/tensorflow/tensorflow/issues/21904#issuecomment-417818059", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21904", "id": 417818059, "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzgxODA1OQ==", "user": {"login": "jpienaar", "id": 706766, "node_id": "MDQ6VXNlcjcwNjc2Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/706766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jpienaar", "html_url": "https://github.com/jpienaar", "followers_url": "https://api.github.com/users/jpienaar/followers", "following_url": "https://api.github.com/users/jpienaar/following{/other_user}", "gists_url": "https://api.github.com/users/jpienaar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jpienaar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jpienaar/subscriptions", "organizations_url": "https://api.github.com/users/jpienaar/orgs", "repos_url": "https://api.github.com/users/jpienaar/repos", "events_url": "https://api.github.com/users/jpienaar/events{/privacy}", "received_events_url": "https://api.github.com/users/jpienaar/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-01T00:12:30Z", "updated_at": "2018-09-01T00:12:30Z", "author_association": "MEMBER", "body_html": "<p>SG, what I would suggest is to generate the graph to look exactly like one would see when using tpu.rewrite. In particular adding the _tpu_replicate attribute to indicate which nodes are part of the same cluster. The easiest would be to rewrite in Python and use that as your template. The graphs look quite different (and the memory usage is much better too).</p>\n<p>If you are generating the graphdef directly then I think that would be your best bet for now: it should not require too many changes (adding replicate metadata/input/output nodes and replicate attribute per node in computation cluster) and then you should end up triggering the same extraction passes.</p>", "body_text": "SG, what I would suggest is to generate the graph to look exactly like one would see when using tpu.rewrite. In particular adding the _tpu_replicate attribute to indicate which nodes are part of the same cluster. The easiest would be to rewrite in Python and use that as your template. The graphs look quite different (and the memory usage is much better too).\nIf you are generating the graphdef directly then I think that would be your best bet for now: it should not require too many changes (adding replicate metadata/input/output nodes and replicate attribute per node in computation cluster) and then you should end up triggering the same extraction passes.", "body": "SG, what I would suggest is to generate the graph to look exactly like one would see when using tpu.rewrite. In particular adding the _tpu_replicate attribute to indicate which nodes are part of the same cluster. The easiest would be to rewrite in Python and use that as your template. The graphs look quite different (and the memory usage is much better too).\r\n\r\nIf you are generating the graphdef directly then I think that would be your best bet for now: it should not require too many changes (adding replicate metadata/input/output nodes and replicate attribute per node in computation cluster) and then you should end up triggering the same extraction passes."}