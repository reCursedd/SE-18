{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/351780041", "html_url": "https://github.com/tensorflow/tensorflow/issues/14267#issuecomment-351780041", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14267", "id": 351780041, "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTc4MDA0MQ==", "user": {"login": "allenlavoie", "id": 3731025, "node_id": "MDQ6VXNlcjM3MzEwMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3731025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/allenlavoie", "html_url": "https://github.com/allenlavoie", "followers_url": "https://api.github.com/users/allenlavoie/followers", "following_url": "https://api.github.com/users/allenlavoie/following{/other_user}", "gists_url": "https://api.github.com/users/allenlavoie/gists{/gist_id}", "starred_url": "https://api.github.com/users/allenlavoie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/allenlavoie/subscriptions", "organizations_url": "https://api.github.com/users/allenlavoie/orgs", "repos_url": "https://api.github.com/users/allenlavoie/repos", "events_url": "https://api.github.com/users/allenlavoie/events{/privacy}", "received_events_url": "https://api.github.com/users/allenlavoie/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-14T17:26:56Z", "updated_at": "2017-12-14T17:26:56Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4647734\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/bitzy\">@bitzy</a> Right, that's a symbol conflict. My original comments in this thread were incorrect; you do need libtensorflow_framework.so for protocol buffers right now, and that's the one with symbols which conflict with OpenCV. The eventual solution is going to be for us to split out a third shared object with just the protocol buffer symbols for use with the C++ API (which I believe <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=7946809\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/gunan\">@gunan</a> is considering anyway).</p>\n<p>In the meantime, as long as you're not using any custom ops you can build libtensorflow_cc.so with <code>bazel build --config=monolithic</code>, which will condense everything together into one shared object (no libtensorflow_framework dependence) and seal off non-TensorFlow symbols. That shared object will have protocol buffer symbols.</p>", "body_text": "@bitzy Right, that's a symbol conflict. My original comments in this thread were incorrect; you do need libtensorflow_framework.so for protocol buffers right now, and that's the one with symbols which conflict with OpenCV. The eventual solution is going to be for us to split out a third shared object with just the protocol buffer symbols for use with the C++ API (which I believe @gunan is considering anyway).\nIn the meantime, as long as you're not using any custom ops you can build libtensorflow_cc.so with bazel build --config=monolithic, which will condense everything together into one shared object (no libtensorflow_framework dependence) and seal off non-TensorFlow symbols. That shared object will have protocol buffer symbols.", "body": "@bitzy Right, that's a symbol conflict. My original comments in this thread were incorrect; you do need libtensorflow_framework.so for protocol buffers right now, and that's the one with symbols which conflict with OpenCV. The eventual solution is going to be for us to split out a third shared object with just the protocol buffer symbols for use with the C++ API (which I believe @gunan is considering anyway).\r\n\r\nIn the meantime, as long as you're not using any custom ops you can build libtensorflow_cc.so with `bazel build --config=monolithic`, which will condense everything together into one shared object (no libtensorflow_framework dependence) and seal off non-TensorFlow symbols. That shared object will have protocol buffer symbols."}