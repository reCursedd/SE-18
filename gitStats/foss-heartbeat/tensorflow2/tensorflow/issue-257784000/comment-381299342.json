{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/381299342", "html_url": "https://github.com/tensorflow/tensorflow/issues/13044#issuecomment-381299342", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13044", "id": 381299342, "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTI5OTM0Mg==", "user": {"login": "Alex-zhai", "id": 11607954, "node_id": "MDQ6VXNlcjExNjA3OTU0", "avatar_url": "https://avatars1.githubusercontent.com/u/11607954?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Alex-zhai", "html_url": "https://github.com/Alex-zhai", "followers_url": "https://api.github.com/users/Alex-zhai/followers", "following_url": "https://api.github.com/users/Alex-zhai/following{/other_user}", "gists_url": "https://api.github.com/users/Alex-zhai/gists{/gist_id}", "starred_url": "https://api.github.com/users/Alex-zhai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Alex-zhai/subscriptions", "organizations_url": "https://api.github.com/users/Alex-zhai/orgs", "repos_url": "https://api.github.com/users/Alex-zhai/repos", "events_url": "https://api.github.com/users/Alex-zhai/events{/privacy}", "received_events_url": "https://api.github.com/users/Alex-zhai/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-14T03:12:40Z", "updated_at": "2018-04-14T03:17:26Z", "author_association": "NONE", "body_html": "<p>Oh, Sometimes training or testing data mix of JPEG and PNG format image. You can try this:</p>\n<pre><code>    def _parse_function(filename):\n         image_string = tf.read_file(filename)\n         image_decoded = tf.cond(\n             tf.image.is_jpeg(image_string),\n             lambda: tf.image.decode_jpeg(image_string, channels=3),\n             lambda: tf.image.decode_png(image_string, channels=3))\n         image_resized = tf.image.resize_images(image_decoded, [90, 90])\n    return image_resized\n    \n    filenames = [\"/var/data/image1.jpg\", \"/var/data/image2.jpg\", ...]\n    labels = [0, 37, 29, 1, ...]\n    dataset = tf.data.Dataset.from_tensor_slices((filenames, labels))\n    dataset = dataset.map(_parse_function)\n    dataset = dataset.batch(batch_size)\n    iterator = dataset.make_one_shot_iterator()\n</code></pre>", "body_text": "Oh, Sometimes training or testing data mix of JPEG and PNG format image. You can try this:\n    def _parse_function(filename):\n         image_string = tf.read_file(filename)\n         image_decoded = tf.cond(\n             tf.image.is_jpeg(image_string),\n             lambda: tf.image.decode_jpeg(image_string, channels=3),\n             lambda: tf.image.decode_png(image_string, channels=3))\n         image_resized = tf.image.resize_images(image_decoded, [90, 90])\n    return image_resized\n    \n    filenames = [\"/var/data/image1.jpg\", \"/var/data/image2.jpg\", ...]\n    labels = [0, 37, 29, 1, ...]\n    dataset = tf.data.Dataset.from_tensor_slices((filenames, labels))\n    dataset = dataset.map(_parse_function)\n    dataset = dataset.batch(batch_size)\n    iterator = dataset.make_one_shot_iterator()", "body": "Oh, Sometimes training or testing data mix of JPEG and PNG format image. You can try this:\r\n\r\n```\r\n    def _parse_function(filename):\r\n         image_string = tf.read_file(filename)\r\n         image_decoded = tf.cond(\r\n             tf.image.is_jpeg(image_string),\r\n             lambda: tf.image.decode_jpeg(image_string, channels=3),\r\n             lambda: tf.image.decode_png(image_string, channels=3))\r\n         image_resized = tf.image.resize_images(image_decoded, [90, 90])\r\n    return image_resized\r\n    \r\n    filenames = [\"/var/data/image1.jpg\", \"/var/data/image2.jpg\", ...]\r\n    labels = [0, 37, 29, 1, ...]\r\n    dataset = tf.data.Dataset.from_tensor_slices((filenames, labels))\r\n    dataset = dataset.map(_parse_function)\r\n    dataset = dataset.batch(batch_size)\r\n    iterator = dataset.make_one_shot_iterator()\r\n```\r\n"}