{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4085", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4085/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4085/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4085/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/4085", "id": 173679031, "node_id": "MDU6SXNzdWUxNzM2NzkwMzE=", "number": 4085, "title": "Building Issue: Is it possible to download everything before building from source?", "user": {"login": "pfllo", "id": 5235521, "node_id": "MDQ6VXNlcjUyMzU1MjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/5235521?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pfllo", "html_url": "https://github.com/pfllo", "followers_url": "https://api.github.com/users/pfllo/followers", "following_url": "https://api.github.com/users/pfllo/following{/other_user}", "gists_url": "https://api.github.com/users/pfllo/gists{/gist_id}", "starred_url": "https://api.github.com/users/pfllo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pfllo/subscriptions", "organizations_url": "https://api.github.com/users/pfllo/orgs", "repos_url": "https://api.github.com/users/pfllo/repos", "events_url": "https://api.github.com/users/pfllo/events{/privacy}", "received_events_url": "https://api.github.com/users/pfllo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-29T01:10:07Z", "updated_at": "2018-04-11T02:45:47Z", "closed_at": "2016-08-30T08:10:23Z", "author_association": "NONE", "body_html": "<p>I am trying to build Tensorflow from source on Ubuntu 16.04 with CUDA 8.0 and CUDNN 5.</p>\n<p>However, since I am blocked by the firewall, I encountered a bunch of network issues after running <code>./configure</code>, for example:</p>\n<p><code>ERROR: /home/icstpie/lbf/tensorflow/tensorflow/tensorboard/bower/BUILD:5:1: no such package '@iron_form_element_behavior//': Error cloning repository: https://github.com/polymerelements/iron-form-element-behavior.git: cannot open git-upload-pack caused by https://github.com/polymerelements/iron-form-element-behavior.git: cannot open git-upload-pack caused by Connection refused github.com and referenced by '//tensorflow/tensorboard/bower:bower'.</code><br>\n<code> ERROR: /home/icstpie/lbf/tensorflow/tensorflow/core/platform/default/build_config/BUILD:56:1: no such package '@gif_archive//': Error downloading from http://ufpr.dl.sourceforge.net/project/giflib/giflib-5.1.4.tar.gz to /home/icstpie/.cache/bazel/_bazel_root/2510eb67c1daed69b89d219166d8dadf/external/gif_archive: Error downloading http://ufpr.dl.sourceforge.net/project/giflib/giflib-5.1.4.tar.gz to /home/icstpie/.cache/bazel/_bazel_root/2510eb67c1daed69b89d219166d8dadf/external/gif_archive/giflib-5.1.4.tar.gz: Expected 721KB, got 294KB and referenced by '//tensorflow/core/platform/default/build_config:platformlib'.</code><br>\n<code> ERROR: Evaluation of query \"deps((//... union @bazel_tools//tools/jdk:toolchain))\" failed: errors were encountered while computing transitive closure.</code></p>\n<p>I think these errors are caused by the command <code>bazel fetch //...</code> in the configure file.</p>\n<p>Since bazel ignores the proxy environment LD_PRELOAD, I'm wondering that if I can manually download these things with my proxy and put them somewhere so that bazel can find them? I've tried putting the protobuf repository (the first thing bazel will download) in the root directory of tensorflow but bazel still tries to download it anyway.</p>\n<p>I'm not sure if there is any workaround to use proxy with bazel. However, since my GPU server has a slow network and I can use faster network elsewhere, it will be nice if I can download these things manually instead of running <code>bazel fetch //...</code> on my server.</p>", "body_text": "I am trying to build Tensorflow from source on Ubuntu 16.04 with CUDA 8.0 and CUDNN 5.\nHowever, since I am blocked by the firewall, I encountered a bunch of network issues after running ./configure, for example:\nERROR: /home/icstpie/lbf/tensorflow/tensorflow/tensorboard/bower/BUILD:5:1: no such package '@iron_form_element_behavior//': Error cloning repository: https://github.com/polymerelements/iron-form-element-behavior.git: cannot open git-upload-pack caused by https://github.com/polymerelements/iron-form-element-behavior.git: cannot open git-upload-pack caused by Connection refused github.com and referenced by '//tensorflow/tensorboard/bower:bower'.\n ERROR: /home/icstpie/lbf/tensorflow/tensorflow/core/platform/default/build_config/BUILD:56:1: no such package '@gif_archive//': Error downloading from http://ufpr.dl.sourceforge.net/project/giflib/giflib-5.1.4.tar.gz to /home/icstpie/.cache/bazel/_bazel_root/2510eb67c1daed69b89d219166d8dadf/external/gif_archive: Error downloading http://ufpr.dl.sourceforge.net/project/giflib/giflib-5.1.4.tar.gz to /home/icstpie/.cache/bazel/_bazel_root/2510eb67c1daed69b89d219166d8dadf/external/gif_archive/giflib-5.1.4.tar.gz: Expected 721KB, got 294KB and referenced by '//tensorflow/core/platform/default/build_config:platformlib'.\n ERROR: Evaluation of query \"deps((//... union @bazel_tools//tools/jdk:toolchain))\" failed: errors were encountered while computing transitive closure.\nI think these errors are caused by the command bazel fetch //... in the configure file.\nSince bazel ignores the proxy environment LD_PRELOAD, I'm wondering that if I can manually download these things with my proxy and put them somewhere so that bazel can find them? I've tried putting the protobuf repository (the first thing bazel will download) in the root directory of tensorflow but bazel still tries to download it anyway.\nI'm not sure if there is any workaround to use proxy with bazel. However, since my GPU server has a slow network and I can use faster network elsewhere, it will be nice if I can download these things manually instead of running bazel fetch //... on my server.", "body": "I am trying to build Tensorflow from source on Ubuntu 16.04 with CUDA 8.0 and CUDNN 5.\n\nHowever, since I am blocked by the firewall, I encountered a bunch of network issues after running `./configure`, for example:\n\n`ERROR: /home/icstpie/lbf/tensorflow/tensorflow/tensorboard/bower/BUILD:5:1: no such package '@iron_form_element_behavior//': Error cloning repository: https://github.com/polymerelements/iron-form-element-behavior.git: cannot open git-upload-pack caused by https://github.com/polymerelements/iron-form-element-behavior.git: cannot open git-upload-pack caused by Connection refused github.com and referenced by '//tensorflow/tensorboard/bower:bower'.`\n`\nERROR: /home/icstpie/lbf/tensorflow/tensorflow/core/platform/default/build_config/BUILD:56:1: no such package '@gif_archive//': Error downloading from http://ufpr.dl.sourceforge.net/project/giflib/giflib-5.1.4.tar.gz to /home/icstpie/.cache/bazel/_bazel_root/2510eb67c1daed69b89d219166d8dadf/external/gif_archive: Error downloading http://ufpr.dl.sourceforge.net/project/giflib/giflib-5.1.4.tar.gz to /home/icstpie/.cache/bazel/_bazel_root/2510eb67c1daed69b89d219166d8dadf/external/gif_archive/giflib-5.1.4.tar.gz: Expected 721KB, got 294KB and referenced by '//tensorflow/core/platform/default/build_config:platformlib'.`\n`\nERROR: Evaluation of query \"deps((//... union @bazel_tools//tools/jdk:toolchain))\" failed: errors were encountered while computing transitive closure.`\n\nI think these errors are caused by the command `bazel fetch //...` in the configure file.\n\nSince bazel ignores the proxy environment LD_PRELOAD, I'm wondering that if I can manually download these things with my proxy and put them somewhere so that bazel can find them? I've tried putting the protobuf repository (the first thing bazel will download) in the root directory of tensorflow but bazel still tries to download it anyway.\n\nI'm not sure if there is any workaround to use proxy with bazel. However, since my GPU server has a slow network and I can use faster network elsewhere, it will be nice if I can download these things manually instead of running `bazel fetch //...` on my server.\n"}