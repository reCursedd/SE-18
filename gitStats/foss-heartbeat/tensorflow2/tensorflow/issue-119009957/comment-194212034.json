{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/194212034", "html_url": "https://github.com/tensorflow/tensorflow/issues/360#issuecomment-194212034", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/360", "id": 194212034, "node_id": "MDEyOklzc3VlQ29tbWVudDE5NDIxMjAzNA==", "user": {"login": "bdaskalov", "id": 2833552, "node_id": "MDQ6VXNlcjI4MzM1NTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/2833552?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bdaskalov", "html_url": "https://github.com/bdaskalov", "followers_url": "https://api.github.com/users/bdaskalov/followers", "following_url": "https://api.github.com/users/bdaskalov/following{/other_user}", "gists_url": "https://api.github.com/users/bdaskalov/gists{/gist_id}", "starred_url": "https://api.github.com/users/bdaskalov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bdaskalov/subscriptions", "organizations_url": "https://api.github.com/users/bdaskalov/orgs", "repos_url": "https://api.github.com/users/bdaskalov/repos", "events_url": "https://api.github.com/users/bdaskalov/events{/privacy}", "received_events_url": "https://api.github.com/users/bdaskalov/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-09T09:42:18Z", "updated_at": "2016-03-09T09:42:18Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=70511\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/girving\">@girving</a> I was still learning Tensorflow at the time I filed this so I guess I didn't phrase it properly.</p>\n<p>The problem is that tf.scatter_update/add/sub() Ops return the whole tensor although they are typically used to update only a small part of it.</p>\n<p>For example:</p>\n<p>session.run([tf.scatter_update(large_table, 3, [1,2,3]))</p>\n<p>will return the whole value of \"large_table\" as a NumPy array although it updates a small part of it. This can cause a nasty hard-to-find performance problem. I think it is reasonable to have a warning when<br>\non of the fetch operations in session.run is scatter_*.</p>", "body_text": "@girving I was still learning Tensorflow at the time I filed this so I guess I didn't phrase it properly.\nThe problem is that tf.scatter_update/add/sub() Ops return the whole tensor although they are typically used to update only a small part of it.\nFor example:\nsession.run([tf.scatter_update(large_table, 3, [1,2,3]))\nwill return the whole value of \"large_table\" as a NumPy array although it updates a small part of it. This can cause a nasty hard-to-find performance problem. I think it is reasonable to have a warning when\non of the fetch operations in session.run is scatter_*.", "body": "@girving I was still learning Tensorflow at the time I filed this so I guess I didn't phrase it properly.\n\nThe problem is that tf.scatter_update/add/sub() Ops return the whole tensor although they are typically used to update only a small part of it. \n\nFor example:\n\nsession.run([tf.scatter_update(large_table, 3, [1,2,3]))\n\nwill return the whole value of \"large_table\" as a NumPy array although it updates a small part of it. This can cause a nasty hard-to-find performance problem. I think it is reasonable to have a warning when\non of the fetch operations in session.run is scatter_*.\n"}