{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/155128239", "pull_request_review_id": 81395691, "id": 155128239, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NTEyODIzOQ==", "diff_hunk": "@@ -211,6 +211,45 @@ def _EnsureTensorIs4D(image):\n \n   return (image, is_batch)\n \n+def _flip_image(image, axis, random=False, seed=None):\n+  \"\"\"\n+  Flips image(s) around a given axis.\n+\n+  Args:\n+    image: 4-D Tensor of shape `[batch, height, width, channels]` or\n+           3-D Tensor of shape `[height, width, channels]`.\n+\n+    axis:  A Tensor. Must be one of the following types: int32, int64. 1-D.", "path": "tensorflow/python/ops/image_ops_impl.py", "position": null, "original_position": 21, "commit_id": "f18ba89bc15fe5ad2a9dca3ec034ac10225dd1da", "original_commit_id": "0ba9b40b3d380f963b54c4a8b5463fa5d5f0b6aa", "user": {"login": "JoshVarty", "id": 1249087, "node_id": "MDQ6VXNlcjEyNDkwODc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1249087?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoshVarty", "html_url": "https://github.com/JoshVarty", "followers_url": "https://api.github.com/users/JoshVarty/followers", "following_url": "https://api.github.com/users/JoshVarty/following{/other_user}", "gists_url": "https://api.github.com/users/JoshVarty/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoshVarty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoshVarty/subscriptions", "organizations_url": "https://api.github.com/users/JoshVarty/orgs", "repos_url": "https://api.github.com/users/JoshVarty/repos", "events_url": "https://api.github.com/users/JoshVarty/events{/privacy}", "received_events_url": "https://api.github.com/users/JoshVarty/received_events", "type": "User", "site_admin": false}, "body": "I agree that it should be a scalar. (I had originally just made it identical to `array_ops.reverse()` but that doesn't make as much sense here)\r\n\r\nOne strange thing about this refactor is that it forces the caller to provide an axis relative to a 4-D Tensor, even if they've passed in a 3-D image.\r\n\r\nFor example `random_flip_up_down()` needs to provide an axis, but doesn't know whether or not the image it's working with is 3-D or a 4-D batch of images. Currently I just pass in `1` with the knowledge that a single image will be extended to 4 dimensions.\r\n\r\n", "created_at": "2017-12-06T01:49:12Z", "updated_at": "2017-12-06T01:57:38Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/14854#discussion_r155128239", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/14854", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/155128239"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/14854#discussion_r155128239"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/14854"}}, "body_html": "<p>I agree that it should be a scalar. (I had originally just made it identical to <code>array_ops.reverse()</code> but that doesn't make as much sense here)</p>\n<p>One strange thing about this refactor is that it forces the caller to provide an axis relative to a 4-D Tensor, even if they've passed in a 3-D image.</p>\n<p>For example <code>random_flip_up_down()</code> needs to provide an axis, but doesn't know whether or not the image it's working with is 3-D or a 4-D batch of images. Currently I just pass in <code>1</code> with the knowledge that a single image will be extended to 4 dimensions.</p>", "body_text": "I agree that it should be a scalar. (I had originally just made it identical to array_ops.reverse() but that doesn't make as much sense here)\nOne strange thing about this refactor is that it forces the caller to provide an axis relative to a 4-D Tensor, even if they've passed in a 3-D image.\nFor example random_flip_up_down() needs to provide an axis, but doesn't know whether or not the image it's working with is 3-D or a 4-D batch of images. Currently I just pass in 1 with the knowledge that a single image will be extended to 4 dimensions.", "in_reply_to_id": 155123294}