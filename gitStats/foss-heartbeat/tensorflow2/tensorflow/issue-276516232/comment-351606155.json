{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/351606155", "html_url": "https://github.com/tensorflow/tensorflow/pull/14854#issuecomment-351606155", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14854", "id": 351606155, "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTYwNjE1NQ==", "user": {"login": "JoshVarty", "id": 1249087, "node_id": "MDQ6VXNlcjEyNDkwODc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1249087?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoshVarty", "html_url": "https://github.com/JoshVarty", "followers_url": "https://api.github.com/users/JoshVarty/followers", "following_url": "https://api.github.com/users/JoshVarty/following{/other_user}", "gists_url": "https://api.github.com/users/JoshVarty/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoshVarty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoshVarty/subscriptions", "organizations_url": "https://api.github.com/users/JoshVarty/orgs", "repos_url": "https://api.github.com/users/JoshVarty/repos", "events_url": "https://api.github.com/users/JoshVarty/events{/privacy}", "received_events_url": "https://api.github.com/users/JoshVarty/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-14T04:32:51Z", "updated_at": "2017-12-14T04:32:51Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Thanks for the heads up guys. Presumably the other places where 3-D tensors are expanded to 4-D tensors would also be slow, correct? (Perhaps they're not used in your image models so it wasn't noticed until now)</p>\n<p>It sounds like two fixes are needed:</p>\n<ol>\n<li>We shouldn't always expand 3-D tensors to 4-D.</li>\n<li>We need an alternative to <code>tf.where</code> when operating on 4-D tensors.</li>\n</ol>\n<p>The first issue I think I know how to fix.</p>\n<p>Do you guys have any hunches on how performance for 4-D batches might be fixed?  Is there a performant alternative to <code>tf.where</code> I should experiment with? Would a new op for 4-D tensors make sense here?</p>", "body_text": "Thanks for the heads up guys. Presumably the other places where 3-D tensors are expanded to 4-D tensors would also be slow, correct? (Perhaps they're not used in your image models so it wasn't noticed until now)\nIt sounds like two fixes are needed:\n\nWe shouldn't always expand 3-D tensors to 4-D.\nWe need an alternative to tf.where when operating on 4-D tensors.\n\nThe first issue I think I know how to fix.\nDo you guys have any hunches on how performance for 4-D batches might be fixed?  Is there a performant alternative to tf.where I should experiment with? Would a new op for 4-D tensors make sense here?", "body": "Thanks for the heads up guys. Presumably the other places where 3-D tensors are expanded to 4-D tensors would also be slow, correct? (Perhaps they're not used in your image models so it wasn't noticed until now)\r\n\r\nIt sounds like two fixes are needed:\r\n1. We shouldn't always expand 3-D tensors to 4-D.\r\n2. We need an alternative to `tf.where` when operating on 4-D tensors.\r\n\r\nThe first issue I think I know how to fix.\r\n\r\nDo you guys have any hunches on how performance for 4-D batches might be fixed?  Is there a performant alternative to `tf.where` I should experiment with? Would a new op for 4-D tensors make sense here?\r\n\r\n"}