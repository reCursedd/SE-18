{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/155315761", "pull_request_review_id": 81615773, "id": 155315761, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NTMxNTc2MQ==", "diff_hunk": "@@ -182,8 +182,81 @@ def _CheckAtLeast3DImage(image, require_static=True):\n     return []\n \n \n-def fix_image_flip_shape(image, result):\n-  \"\"\"Set the shape to 3 dimensional if we don't know anything else.\n+def _EnsureTensorIs4D(image):\n+  \"\"\"Converts `image` to a 4-D Tensor if it is not already one.\n+\n+  Args:\n+    image: 4-D Tensor of shape `[batch, height, width, channels]` or\n+           3-D Tensor of shape `[height, width, channels]`.\n+  Raises:\n+    ValueError: if image is not a 3-D or 4-D Tensor.\n+\n+  Returns:\n+    If `image` was 4-D, a 4-D float Tensor of shape\n+    `[batch, width, height, channels]`\n+    If `image` was 3-D, a 4-D float Tensor of shape\n+    `[1, width, height, channels]`\n+  \"\"\"\n+  original_shape = image.get_shape()\n+  is_batch = True\n+  if original_shape.ndims == 3:\n+    is_batch = False\n+    image = array_ops.expand_dims(image, 0)\n+  elif original_shape.ndims is None:\n+    is_batch = False\n+    image = array_ops.expand_dims(image, 0)\n+    image.set_shape([None] * 4)\n+  elif original_shape.ndims != 4:\n+    raise ValueError('\\'image\\' must have either 3 or 4 dimensions.')\n+\n+  return (image, is_batch)\n+\n+def _flip_image(image, axis, random=False, seed=None):\n+  \"\"\"\n+  Flips image(s) around a given axis.\n+\n+  Args:\n+    image:  4-D Tensor of shape `[batch, height, width, channels]` or\n+            3-D Tensor of shape `[height, width, channels]`.\n+    axis:   A Python integer representing the axis on which the image(s)", "path": "tensorflow/python/ops/image_ops_impl.py", "position": 42, "original_position": 42, "commit_id": "f18ba89bc15fe5ad2a9dca3ec034ac10225dd1da", "original_commit_id": "f18ba89bc15fe5ad2a9dca3ec034ac10225dd1da", "user": {"login": "JoshVarty", "id": 1249087, "node_id": "MDQ6VXNlcjEyNDkwODc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1249087?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoshVarty", "html_url": "https://github.com/JoshVarty", "followers_url": "https://api.github.com/users/JoshVarty/followers", "following_url": "https://api.github.com/users/JoshVarty/following{/other_user}", "gists_url": "https://api.github.com/users/JoshVarty/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoshVarty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoshVarty/subscriptions", "organizations_url": "https://api.github.com/users/JoshVarty/orgs", "repos_url": "https://api.github.com/users/JoshVarty/repos", "events_url": "https://api.github.com/users/JoshVarty/events{/privacy}", "received_events_url": "https://api.github.com/users/JoshVarty/received_events", "type": "User", "site_admin": false}, "body": "\ud83d\udc4d ", "created_at": "2017-12-06T18:10:32Z", "updated_at": "2017-12-06T18:10:32Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/14854#discussion_r155315761", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/14854", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/155315761"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/14854#discussion_r155315761"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/14854"}}, "body_html": "<p><g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f44d.png\">\ud83d\udc4d</g-emoji></p>", "body_text": "\ud83d\udc4d", "in_reply_to_id": 155129453}