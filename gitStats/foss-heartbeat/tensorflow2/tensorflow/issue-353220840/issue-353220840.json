{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21819", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21819/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21819/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21819/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21819", "id": 353220840, "node_id": "MDU6SXNzdWUzNTMyMjA4NDA=", "number": 21819, "title": "[XLA] WhileLoopConstantSinking hangs compilation when used together with DCE", "user": {"login": "tengyifei", "id": 2877531, "node_id": "MDQ6VXNlcjI4Nzc1MzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/2877531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tengyifei", "html_url": "https://github.com/tengyifei", "followers_url": "https://api.github.com/users/tengyifei/followers", "following_url": "https://api.github.com/users/tengyifei/following{/other_user}", "gists_url": "https://api.github.com/users/tengyifei/gists{/gist_id}", "starred_url": "https://api.github.com/users/tengyifei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tengyifei/subscriptions", "organizations_url": "https://api.github.com/users/tengyifei/orgs", "repos_url": "https://api.github.com/users/tengyifei/repos", "events_url": "https://api.github.com/users/tengyifei/events{/privacy}", "received_events_url": "https://api.github.com/users/tengyifei/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-08-23T04:36:17Z", "updated_at": "2018-10-16T19:50:50Z", "closed_at": "2018-10-16T19:50:49Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: macOS 10.13.6 (17G65)</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>: N/A</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: source</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.10.0</li>\n<li><strong>Python version</strong>: 3.6.0</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.15.2-homebrew</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: Apple LLVM version 9.1.0 (clang-902.0.39.2)</li>\n<li><strong>CUDA/cuDNN version</strong>: N/A</li>\n<li><strong>GPU model and memory</strong>: N/A</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<pre><code>bazel-out/host/bin/tensorflow/compiler/aot/tfcompile --graph=tfgraph.pb --config=aot_config.pbtxt --entry_point=____xla_test_rnn --cpp_class=xla_test::TestNetwork --target_triple=x86_64-none-darwin --out_header=bazel-out/darwin-opt/genfiles/xla_test_rnn.h --out_metadata_object=bazel-out/darwin-opt/genfiles/xla_test_rnn_tfcompile_metadata.o --out_function_object=bazel-out/darwin-opt/genfiles/xla_test_rnn_tfcompile_function.o --target_features=+sse4.1 --target_features=+sse4.2 --target_features=+avx\n</code></pre>\n<p><a href=\"https://github.com/tensorflow/tensorflow/files/2311756/tfgraph.pb.zip\">tfgraph.pb.zip</a></p>\n<p>aot_config.pbtxt:</p>\n<pre><code>feed {\n  id { node_name: \"0\" }\n  shape {\n    dim { size: 1 }\n    dim { size: 128 }\n    dim { size: 194 }\n  }\n}\n\nfetch {\n  id { node_name: \"transpose_4713\" }\n}\n</code></pre>\n<h3>Describe the problem</h3>\n<p>When tfcompile optimizes the attached graph with logging enabled, it seems to get stuck in an infinite loop in this fashion:</p>\n<pre><code>......\n\ntensorflow/compiler/xla/service/hlo_dce.cc:58] Removing dead root %constant.17644..sunk.5 = f32[256]{0} constant({...}), metadata={op_type=\"Add\" op_name=\"4GC\"} and it's unused operands\ntensorflow/compiler/xla/service/hlo_dce.cc:58] Removing dead root %constant.17657..sunk.5 = f32[384,256]{1,0} constant({...}), metadata={op_type=\"ConcatV2\" op_name=\"6Kn\"} and it's unused operands\ntensorflow/compiler/xla/service/hlo_dce.cc:58] Removing dead root %constant.17668..sunk.5 = f32[256]{0} constant({...}), metadata={op_type=\"Add\" op_name=\"5XK\"} and it's unused operands\ntensorflow/compiler/xla/service/hlo_pass_pipeline.cc:112]   HLO pass reshape-mover\ntensorflow/compiler/xla/service/hlo_pass_pipeline.cc:112]   HLO pass constant_folding\ntensorflow/compiler/xla/service/hlo_pass_pipeline.cc:112]   HLO pass simplify-conditional\ntensorflow/compiler/xla/service/hlo_pass_pipeline.cc:63] Running HLO pass pipeline simplification\ntensorflow/compiler/xla/service/hlo_pass_pipeline.cc:112]   HLO pass batchnorm_expander\ntensorflow/compiler/xla/service/hlo_pass_pipeline.cc:112]   HLO pass algsimp\ntensorflow/compiler/xla/service/hlo_pass_pipeline.cc:112]   HLO pass dce\ntensorflow/compiler/xla/service/hlo_pass_pipeline.cc:112]   HLO pass while-loop-invariant-code-motion\ntensorflow/compiler/xla/service/hlo_pass_pipeline.cc:112]   HLO pass tuple-simplifier\n(vvv This is actually WhileLoopConstantSinking not WhileLoopInvariantCodeMotion, and is causing the infinite loop)\ntensorflow/compiler/xla/service/hlo_pass_pipeline.cc:112]   HLO pass while-loop-invariant-code-motion\ntensorflow/compiler/xla/service/hlo_pass_pipeline.cc:112]   HLO pass simplify-while-loops\ntensorflow/compiler/xla/service/hlo_pass_pipeline.cc:112]   HLO pass dce\ntensorflow/compiler/xla/service/hlo_dce.cc:58] Removing dead root %constant.9423..sunk.6 = f32[284,256]{1,0} constant({...}), metadata={op_type=\"ConcatV2\" op_name=\"2IL\"} and it's unused operands\ntensorflow/compiler/xla/service/hlo_dce.cc:58] Removing dead root %constant.9433..sunk.6 = f32[256]{0} constant({...}), metadata={op_type=\"Add\" op_name=\"6hz\"} and it's unused operands\ntensorflow/compiler/xla/service/hlo_dce.cc:58] Removing dead root %constant.9444..sunk.6 = f32[256,256]{1,0} constant({...}), metadata={op_type=\"ConcatV2\" op_name=\"3hb\"} and it's unused operands\ntensorflow/compiler/xla/service/hlo_dce.cc:58] Removing dead root %constant.9454..sunk.6 = f32[256]{0} constant({...}), metadata={op_type=\"Add\" op_name=\"19n\"} and it's unused operands\ntensorflow/compiler/xla/service/hlo_dce.cc:58] Removing dead root %constant.9465..sunk.6 = f32[384,256]{1,0} constant({...}), metadata={op_type=\"ConcatV2\" op_name=\"6Ye\"} and it's unused operands\ntensorflow/compiler/xla/service/hlo_dce.cc:58] Removing dead root %constant.9475..sunk.6 = f32[256]{0} constant({...}), metadata={op_type=\"Add\" op_name=\"3z9\"} and it's unused operands\n\n......\n</code></pre>\n<p>I deleted all the \"Invariant checker\" lines in the log to highlight the passes. The graph mainly consists of lots of GRUs converted from an ONNX trace. To minimize any suspicions of tfcompile taking a long time simply due to a large model I left it running over a week without finishing. This was not the behavior in 1.8.0.</p>\n<p>I was able to narrow it down to a newly added optimization pass called <code>WhileLoopConstantSinking</code>. That particular pass seems to make changes that always triggers dead code elimination, causing the entire pass to never reach fix point. In particular, if I modify <code>RunHloPasses</code> to run <code>AlgebraicSimplifier</code> once, followed by a <code>HloPassFix</code> pipeline wrapping only a <code>HloDCE</code> then a <code>WhileLoopConstantSinking</code>, it'll get stuck in the pipeline. Once <code>WhileLoopConstantSinking</code> is disabled by commenting this line <div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/e924d67bff8c4fb58c8316d00b662f8d1e80eb95/tensorflow/compiler/xla/service/cpu/cpu_compiler.cc#L285\">tensorflow/tensorflow/compiler/xla/service/cpu/cpu_compiler.cc</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n         Line 285\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/e924d67bff8c4fb58c8316d00b662f8d1e80eb95\">e924d67</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L285\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"285\"></td>\n          <td id=\"LC285\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> pass.<span class=\"pl-smi\">AddPass</span>&lt;WhileLoopConstantSinking&gt;(); </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n, <code>tfcompile</code> finishes under ten minutes.</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): macOS 10.13.6 (17G65)\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A\nTensorFlow installed from (source or binary): source\nTensorFlow version (use command below): 1.10.0\nPython version: 3.6.0\nBazel version (if compiling from source): 0.15.2-homebrew\nGCC/Compiler version (if compiling from source): Apple LLVM version 9.1.0 (clang-902.0.39.2)\nCUDA/cuDNN version: N/A\nGPU model and memory: N/A\nExact command to reproduce:\n\nbazel-out/host/bin/tensorflow/compiler/aot/tfcompile --graph=tfgraph.pb --config=aot_config.pbtxt --entry_point=____xla_test_rnn --cpp_class=xla_test::TestNetwork --target_triple=x86_64-none-darwin --out_header=bazel-out/darwin-opt/genfiles/xla_test_rnn.h --out_metadata_object=bazel-out/darwin-opt/genfiles/xla_test_rnn_tfcompile_metadata.o --out_function_object=bazel-out/darwin-opt/genfiles/xla_test_rnn_tfcompile_function.o --target_features=+sse4.1 --target_features=+sse4.2 --target_features=+avx\n\ntfgraph.pb.zip\naot_config.pbtxt:\nfeed {\n  id { node_name: \"0\" }\n  shape {\n    dim { size: 1 }\n    dim { size: 128 }\n    dim { size: 194 }\n  }\n}\n\nfetch {\n  id { node_name: \"transpose_4713\" }\n}\n\nDescribe the problem\nWhen tfcompile optimizes the attached graph with logging enabled, it seems to get stuck in an infinite loop in this fashion:\n......\n\ntensorflow/compiler/xla/service/hlo_dce.cc:58] Removing dead root %constant.17644..sunk.5 = f32[256]{0} constant({...}), metadata={op_type=\"Add\" op_name=\"4GC\"} and it's unused operands\ntensorflow/compiler/xla/service/hlo_dce.cc:58] Removing dead root %constant.17657..sunk.5 = f32[384,256]{1,0} constant({...}), metadata={op_type=\"ConcatV2\" op_name=\"6Kn\"} and it's unused operands\ntensorflow/compiler/xla/service/hlo_dce.cc:58] Removing dead root %constant.17668..sunk.5 = f32[256]{0} constant({...}), metadata={op_type=\"Add\" op_name=\"5XK\"} and it's unused operands\ntensorflow/compiler/xla/service/hlo_pass_pipeline.cc:112]   HLO pass reshape-mover\ntensorflow/compiler/xla/service/hlo_pass_pipeline.cc:112]   HLO pass constant_folding\ntensorflow/compiler/xla/service/hlo_pass_pipeline.cc:112]   HLO pass simplify-conditional\ntensorflow/compiler/xla/service/hlo_pass_pipeline.cc:63] Running HLO pass pipeline simplification\ntensorflow/compiler/xla/service/hlo_pass_pipeline.cc:112]   HLO pass batchnorm_expander\ntensorflow/compiler/xla/service/hlo_pass_pipeline.cc:112]   HLO pass algsimp\ntensorflow/compiler/xla/service/hlo_pass_pipeline.cc:112]   HLO pass dce\ntensorflow/compiler/xla/service/hlo_pass_pipeline.cc:112]   HLO pass while-loop-invariant-code-motion\ntensorflow/compiler/xla/service/hlo_pass_pipeline.cc:112]   HLO pass tuple-simplifier\n(vvv This is actually WhileLoopConstantSinking not WhileLoopInvariantCodeMotion, and is causing the infinite loop)\ntensorflow/compiler/xla/service/hlo_pass_pipeline.cc:112]   HLO pass while-loop-invariant-code-motion\ntensorflow/compiler/xla/service/hlo_pass_pipeline.cc:112]   HLO pass simplify-while-loops\ntensorflow/compiler/xla/service/hlo_pass_pipeline.cc:112]   HLO pass dce\ntensorflow/compiler/xla/service/hlo_dce.cc:58] Removing dead root %constant.9423..sunk.6 = f32[284,256]{1,0} constant({...}), metadata={op_type=\"ConcatV2\" op_name=\"2IL\"} and it's unused operands\ntensorflow/compiler/xla/service/hlo_dce.cc:58] Removing dead root %constant.9433..sunk.6 = f32[256]{0} constant({...}), metadata={op_type=\"Add\" op_name=\"6hz\"} and it's unused operands\ntensorflow/compiler/xla/service/hlo_dce.cc:58] Removing dead root %constant.9444..sunk.6 = f32[256,256]{1,0} constant({...}), metadata={op_type=\"ConcatV2\" op_name=\"3hb\"} and it's unused operands\ntensorflow/compiler/xla/service/hlo_dce.cc:58] Removing dead root %constant.9454..sunk.6 = f32[256]{0} constant({...}), metadata={op_type=\"Add\" op_name=\"19n\"} and it's unused operands\ntensorflow/compiler/xla/service/hlo_dce.cc:58] Removing dead root %constant.9465..sunk.6 = f32[384,256]{1,0} constant({...}), metadata={op_type=\"ConcatV2\" op_name=\"6Ye\"} and it's unused operands\ntensorflow/compiler/xla/service/hlo_dce.cc:58] Removing dead root %constant.9475..sunk.6 = f32[256]{0} constant({...}), metadata={op_type=\"Add\" op_name=\"3z9\"} and it's unused operands\n\n......\n\nI deleted all the \"Invariant checker\" lines in the log to highlight the passes. The graph mainly consists of lots of GRUs converted from an ONNX trace. To minimize any suspicions of tfcompile taking a long time simply due to a large model I left it running over a week without finishing. This was not the behavior in 1.8.0.\nI was able to narrow it down to a newly added optimization pass called WhileLoopConstantSinking. That particular pass seems to make changes that always triggers dead code elimination, causing the entire pass to never reach fix point. In particular, if I modify RunHloPasses to run AlgebraicSimplifier once, followed by a HloPassFix pipeline wrapping only a HloDCE then a WhileLoopConstantSinking, it'll get stuck in the pipeline. Once WhileLoopConstantSinking is disabled by commenting this line \n  \n    \n      tensorflow/tensorflow/compiler/xla/service/cpu/cpu_compiler.cc\n    \n    \n         Line 285\n      in\n      e924d67\n    \n    \n    \n    \n\n        \n          \n           pass.AddPass<WhileLoopConstantSinking>(); \n        \n    \n  \n\n, tfcompile finishes under ten minutes.", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: macOS 10.13.6 (17G65)\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**: N/A\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: 1.10.0\r\n- **Python version**: 3.6.0\r\n- **Bazel version (if compiling from source)**: 0.15.2-homebrew\r\n- **GCC/Compiler version (if compiling from source)**: Apple LLVM version 9.1.0 (clang-902.0.39.2)\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**:\r\n\r\n```\r\nbazel-out/host/bin/tensorflow/compiler/aot/tfcompile --graph=tfgraph.pb --config=aot_config.pbtxt --entry_point=____xla_test_rnn --cpp_class=xla_test::TestNetwork --target_triple=x86_64-none-darwin --out_header=bazel-out/darwin-opt/genfiles/xla_test_rnn.h --out_metadata_object=bazel-out/darwin-opt/genfiles/xla_test_rnn_tfcompile_metadata.o --out_function_object=bazel-out/darwin-opt/genfiles/xla_test_rnn_tfcompile_function.o --target_features=+sse4.1 --target_features=+sse4.2 --target_features=+avx\r\n```\r\n\r\n[tfgraph.pb.zip](https://github.com/tensorflow/tensorflow/files/2311756/tfgraph.pb.zip)\r\n\r\naot_config.pbtxt:\r\n\r\n```\r\nfeed {\r\n  id { node_name: \"0\" }\r\n  shape {\r\n    dim { size: 1 }\r\n    dim { size: 128 }\r\n    dim { size: 194 }\r\n  }\r\n}\r\n\r\nfetch {\r\n  id { node_name: \"transpose_4713\" }\r\n}\r\n```\r\n\r\n### Describe the problem\r\n\r\nWhen tfcompile optimizes the attached graph with logging enabled, it seems to get stuck in an infinite loop in this fashion:\r\n\r\n```\r\n......\r\n\r\ntensorflow/compiler/xla/service/hlo_dce.cc:58] Removing dead root %constant.17644..sunk.5 = f32[256]{0} constant({...}), metadata={op_type=\"Add\" op_name=\"4GC\"} and it's unused operands\r\ntensorflow/compiler/xla/service/hlo_dce.cc:58] Removing dead root %constant.17657..sunk.5 = f32[384,256]{1,0} constant({...}), metadata={op_type=\"ConcatV2\" op_name=\"6Kn\"} and it's unused operands\r\ntensorflow/compiler/xla/service/hlo_dce.cc:58] Removing dead root %constant.17668..sunk.5 = f32[256]{0} constant({...}), metadata={op_type=\"Add\" op_name=\"5XK\"} and it's unused operands\r\ntensorflow/compiler/xla/service/hlo_pass_pipeline.cc:112]   HLO pass reshape-mover\r\ntensorflow/compiler/xla/service/hlo_pass_pipeline.cc:112]   HLO pass constant_folding\r\ntensorflow/compiler/xla/service/hlo_pass_pipeline.cc:112]   HLO pass simplify-conditional\r\ntensorflow/compiler/xla/service/hlo_pass_pipeline.cc:63] Running HLO pass pipeline simplification\r\ntensorflow/compiler/xla/service/hlo_pass_pipeline.cc:112]   HLO pass batchnorm_expander\r\ntensorflow/compiler/xla/service/hlo_pass_pipeline.cc:112]   HLO pass algsimp\r\ntensorflow/compiler/xla/service/hlo_pass_pipeline.cc:112]   HLO pass dce\r\ntensorflow/compiler/xla/service/hlo_pass_pipeline.cc:112]   HLO pass while-loop-invariant-code-motion\r\ntensorflow/compiler/xla/service/hlo_pass_pipeline.cc:112]   HLO pass tuple-simplifier\r\n(vvv This is actually WhileLoopConstantSinking not WhileLoopInvariantCodeMotion, and is causing the infinite loop)\r\ntensorflow/compiler/xla/service/hlo_pass_pipeline.cc:112]   HLO pass while-loop-invariant-code-motion\r\ntensorflow/compiler/xla/service/hlo_pass_pipeline.cc:112]   HLO pass simplify-while-loops\r\ntensorflow/compiler/xla/service/hlo_pass_pipeline.cc:112]   HLO pass dce\r\ntensorflow/compiler/xla/service/hlo_dce.cc:58] Removing dead root %constant.9423..sunk.6 = f32[284,256]{1,0} constant({...}), metadata={op_type=\"ConcatV2\" op_name=\"2IL\"} and it's unused operands\r\ntensorflow/compiler/xla/service/hlo_dce.cc:58] Removing dead root %constant.9433..sunk.6 = f32[256]{0} constant({...}), metadata={op_type=\"Add\" op_name=\"6hz\"} and it's unused operands\r\ntensorflow/compiler/xla/service/hlo_dce.cc:58] Removing dead root %constant.9444..sunk.6 = f32[256,256]{1,0} constant({...}), metadata={op_type=\"ConcatV2\" op_name=\"3hb\"} and it's unused operands\r\ntensorflow/compiler/xla/service/hlo_dce.cc:58] Removing dead root %constant.9454..sunk.6 = f32[256]{0} constant({...}), metadata={op_type=\"Add\" op_name=\"19n\"} and it's unused operands\r\ntensorflow/compiler/xla/service/hlo_dce.cc:58] Removing dead root %constant.9465..sunk.6 = f32[384,256]{1,0} constant({...}), metadata={op_type=\"ConcatV2\" op_name=\"6Ye\"} and it's unused operands\r\ntensorflow/compiler/xla/service/hlo_dce.cc:58] Removing dead root %constant.9475..sunk.6 = f32[256]{0} constant({...}), metadata={op_type=\"Add\" op_name=\"3z9\"} and it's unused operands\r\n\r\n......\r\n```\r\n\r\nI deleted all the \"Invariant checker\" lines in the log to highlight the passes. The graph mainly consists of lots of GRUs converted from an ONNX trace. To minimize any suspicions of tfcompile taking a long time simply due to a large model I left it running over a week without finishing. This was not the behavior in 1.8.0.\r\n\r\nI was able to narrow it down to a newly added optimization pass called `WhileLoopConstantSinking`. That particular pass seems to make changes that always triggers dead code elimination, causing the entire pass to never reach fix point. In particular, if I modify `RunHloPasses` to run `AlgebraicSimplifier` once, followed by a `HloPassFix` pipeline wrapping only a `HloDCE` then a `WhileLoopConstantSinking`, it'll get stuck in the pipeline. Once `WhileLoopConstantSinking` is disabled by commenting this line https://github.com/tensorflow/tensorflow/blob/e924d67bff8c4fb58c8316d00b662f8d1e80eb95/tensorflow/compiler/xla/service/cpu/cpu_compiler.cc#L285, `tfcompile` finishes under ten minutes.\r\n"}