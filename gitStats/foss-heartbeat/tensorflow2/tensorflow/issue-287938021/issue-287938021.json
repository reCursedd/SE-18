{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16053", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16053/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16053/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16053/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16053", "id": 287938021, "node_id": "MDU6SXNzdWUyODc5MzgwMjE=", "number": 16053, "title": "java.lang.IndexOutOfBoundsException: Invalid index 0, size is 0, TensorFlow on Android", "user": {"login": "DeepakSridhar", "id": 22285492, "node_id": "MDQ6VXNlcjIyMjg1NDky", "avatar_url": "https://avatars0.githubusercontent.com/u/22285492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DeepakSridhar", "html_url": "https://github.com/DeepakSridhar", "followers_url": "https://api.github.com/users/DeepakSridhar/followers", "following_url": "https://api.github.com/users/DeepakSridhar/following{/other_user}", "gists_url": "https://api.github.com/users/DeepakSridhar/gists{/gist_id}", "starred_url": "https://api.github.com/users/DeepakSridhar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DeepakSridhar/subscriptions", "organizations_url": "https://api.github.com/users/DeepakSridhar/orgs", "repos_url": "https://api.github.com/users/DeepakSridhar/repos", "events_url": "https://api.github.com/users/DeepakSridhar/events{/privacy}", "received_events_url": "https://api.github.com/users/DeepakSridhar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "andrewharp", "id": 3376817, "node_id": "MDQ6VXNlcjMzNzY4MTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/3376817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewharp", "html_url": "https://github.com/andrewharp", "followers_url": "https://api.github.com/users/andrewharp/followers", "following_url": "https://api.github.com/users/andrewharp/following{/other_user}", "gists_url": "https://api.github.com/users/andrewharp/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewharp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewharp/subscriptions", "organizations_url": "https://api.github.com/users/andrewharp/orgs", "repos_url": "https://api.github.com/users/andrewharp/repos", "events_url": "https://api.github.com/users/andrewharp/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewharp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "andrewharp", "id": 3376817, "node_id": "MDQ6VXNlcjMzNzY4MTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/3376817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewharp", "html_url": "https://github.com/andrewharp", "followers_url": "https://api.github.com/users/andrewharp/followers", "following_url": "https://api.github.com/users/andrewharp/following{/other_user}", "gists_url": "https://api.github.com/users/andrewharp/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewharp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewharp/subscriptions", "organizations_url": "https://api.github.com/users/andrewharp/orgs", "repos_url": "https://api.github.com/users/andrewharp/repos", "events_url": "https://api.github.com/users/andrewharp/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewharp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2018-01-11T21:57:03Z", "updated_at": "2018-03-17T12:59:36Z", "closed_at": "2018-02-26T05:37:45Z", "author_association": "NONE", "body_html": "<p>Hello,</p>\n<p>Updated the following info:<br>\nHave I written custom code No its modification of the code from here <a href=\"https://github.com/MindorksOpenSource/AndroidTensorFlowMachineLearningExample\">https://github.com/MindorksOpenSource/AndroidTensorFlowMachineLearningExample</a><br>\nOS Platform and Distribution: Windows 10<br>\nTensorFlow installed from: anaconda<br>\nTensorFlow version: 1.2.0<br>\nBazel version: N/A<br>\nCUDA/cuDNN version: N/A<br>\nGPU model and memory: N/A<br>\nExact command to reproduce: N/A</p>\n<p>I created  my custom model in keras to recognize happy faces and loaded the model into android and ran into this issue of<br>\njava.lang.IndexOutOfBoundsException: Invalid index 0, size is 0 at runtime and my app crashed. I have modified the code from here <a href=\"https://github.com/MindorksOpenSource/AndroidTensorFlowMachineLearningExample\">https://github.com/MindorksOpenSource/AndroidTensorFlowMachineLearningExample</a><br>\nto suit my model. Is it the problem with protobuf file creation? I have tested my model and it works well in python. Below is the log file and the source code. Please help with this issue? Thanks!</p>\n<h3>Source code / logs</h3>\n<p>01-11 16:21:12.508 18038-18078/com.sridhar.deepak.objectdetection D/OpenGLRenderer: endAllStagingAnimators on 0xab6c06f0 (ListView) with handle 0xab7000d8<br>\n01-11 16:21:18.135 18038-18038/com.sridhar.deepak.objectdetection E/TensorFlowInferenceInterface: Failed to run TensorFlow session: java.lang.IllegalArgumentException: No OpKernel was registered to support Op 'Switch' with these attrs.  Registered devices: [CPU], Registered kernels:<br>\ndevice='GPU'; T in [DT_STRING]<br>\ndevice='GPU'; T in [DT_BOOL]<br>\ndevice='GPU'; T in [DT_INT32]<br>\ndevice='GPU'; T in [DT_FLOAT]<br>\ndevice='CPU'; T in [DT_FLOAT]<br>\ndevice='CPU'; T in [DT_INT32]</p>\n<pre><code>                                                                                              \t [[Node: bn0/cond/Switch = Switch[T=DT_BOOL](bn0/keras_learning_phase, bn0/keras_learning_phase)]]\n</code></pre>\n<p>01-11 16:21:18.135 18038-18038/com.sridhar.deepak.objectdetection D/AndroidRuntime: Shutting down VM<br>\n01-11 16:21:18.136 18038-18038/com.sridhar.deepak.objectdetection E/AndroidRuntime: FATAL EXCEPTION: main<br>\nProcess: com.sridhar.deepak.objectdetection, PID: 18038<br>\njava.lang.IndexOutOfBoundsException: Invalid index 0, size is 0<br>\nat java.util.ArrayList.throwIndexOutOfBoundsException(ArrayList.java:255)<br>\nat java.util.ArrayList.get(ArrayList.java:308)<br>\nat org.tensorflow.contrib.android.TensorFlowInferenceInterface.getTensor(TensorFlowInferenceInterface.java:473)<br>\nat org.tensorflow.contrib.android.TensorFlowInferenceInterface.readNodeIntoFloatBuffer(TensorFlowInferenceInterface.java:320)<br>\nat org.tensorflow.contrib.android.TensorFlowInferenceInterface.readNodeFloat(TensorFlowInferenceInterface.java:275)<br>\nat com.sridhar.deepak.objectdetection.TensorFlowImageClassifier.recognizeImage(TensorFlowImageClassifier.java:161)<br>\nat com.sridhar.deepak.objectdetection.HappyFaceDetector$2.onPictureTaken(HappyFaceDetector.java:82)<br>\nat com.flurgle.camerakit.CameraView$CameraListenerMiddleWare.onPictureTaken(CameraView.java:296)<br>\nat com.flurgle.camerakit.Camera1$2.onPictureTaken(Camera1.java:185)<br>\nat android.hardware.Camera$EventHandler.handleMessage(Camera.java:1118)<br>\nat android.os.Handler.dispatchMessage(Handler.java:102)<br>\nat android.os.Looper.loop(Looper.java:154)<br>\nat android.app.ActivityThread.main(ActivityThread.java:5527)<br>\nat java.lang.reflect.Method.invoke(Native Method)<br>\nat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:739)<br>\nat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:629)<br>\n01-11 16:21:18.136 18038-18038/com.sridhar.deepak.objectdetection E/MQSEventManagerDelegate: failed to get MQSService.<br>\n01-11 16:21:19.470 18038-18038/com.sridhar.deepak.objectdetection I/Process: Sending signal. PID: 18038 SIG: 9</p>\n<p>TensorFlowImageClassifier file</p>\n<pre><code>@Override\npublic List&lt;Recognition&gt; recognizeImage(final Bitmap bitmap,int s) {\n    // Log this method so that it can be analyzed with systrace.\n    Trace.beginSection(\"recognizeImage\");\n\n    Trace.beginSection(\"preprocessBitmap\");\n    // Preprocess the image data from 0-255 int to normalized float based\n    // on the provided parameters.\n    if (s==1) {\n        bitmap.getPixels(intValues, 0, bitmap.getWidth(), 0, 0, bitmap.getWidth(), bitmap.getHeight());\n        for (int i = 0; i &lt; intValues.length; ++i) {\n            final int val = intValues[i];\n            floatValues[i * 3 + 0] = (((val &gt;&gt; 16) &amp; 0xFF) - imageMean) / imageStd;\n            floatValues[i * 3 + 1] = (((val &gt;&gt; 8) &amp; 0xFF) - imageMean) / imageStd;\n            floatValues[i * 3 + 2] = ((val &amp; 0xFF) - imageMean) / imageStd;\n        }\n    }else {\n        bitmap.getPixels(intValues, 0, bitmap.getWidth(), 0, 0, bitmap.getWidth(), bitmap.getHeight());\n        for (int i = 0; i &lt; intValues.length; ++i) {\n            final int val = intValues[i];\n            floatValues[i * 3 + 0] = (((val &gt;&gt; 16) &amp; 0xFF))/imageStd;\n            floatValues[i * 3 + 1] = (((val &gt;&gt; 8) &amp; 0xFF))/imageStd;\n            floatValues[i * 3 + 2] = ((val &amp; 0xFF))/imageStd;\n            floatValues[i * 3 + 0] = floatValues[i * 3 + 0] - 1;\n            floatValues[i * 3 + 1] = floatValues[i * 3 + 1] - 1;\n            floatValues[i * 3 + 2] = floatValues[i * 3 + 2] - 1;\n\n        }\n    }\n    Trace.endSection();\n\n    // Copy the input data into TensorFlow.\n    Trace.beginSection(\"fillNodeFloat\");\n    inferenceInterface.fillNodeFloat(\n            inputName, new int[]{1, inputSize, inputSize, 3}, floatValues);\n    Trace.endSection();\n\n    // Run the inference call.\n    Trace.beginSection(\"runInference\");\n    inferenceInterface.runInference(outputNames);\n    Trace.endSection();\n\n    // Copy the output Tensor back into the output array.\n    Trace.beginSection(\"readNodeFloat\");\n    inferenceInterface.readNodeFloat(outputName, outputs);\n    Trace.endSection();\n</code></pre>\n<p>MainActivity<br>\nprivate static final int INPUT_SIZE = 64;<br>\nprivate static final int IMAGE_MEAN = 128;<br>\nprivate static final float IMAGE_STD = 128;<br>\nprivate static final String INPUT_NAME = \"input_1\";<br>\nprivate static final String OUTPUT_NAME = \"fc/Sigmoid\";</p>\n<pre><code>private static final String MODEL_FILE = \"file:///android_asset/happy_model.pb\";\nprivate static final String LABEL_FILE =\n        \"file:///android_asset/face_label.txt\";\n</code></pre>", "body_text": "Hello,\nUpdated the following info:\nHave I written custom code No its modification of the code from here https://github.com/MindorksOpenSource/AndroidTensorFlowMachineLearningExample\nOS Platform and Distribution: Windows 10\nTensorFlow installed from: anaconda\nTensorFlow version: 1.2.0\nBazel version: N/A\nCUDA/cuDNN version: N/A\nGPU model and memory: N/A\nExact command to reproduce: N/A\nI created  my custom model in keras to recognize happy faces and loaded the model into android and ran into this issue of\njava.lang.IndexOutOfBoundsException: Invalid index 0, size is 0 at runtime and my app crashed. I have modified the code from here https://github.com/MindorksOpenSource/AndroidTensorFlowMachineLearningExample\nto suit my model. Is it the problem with protobuf file creation? I have tested my model and it works well in python. Below is the log file and the source code. Please help with this issue? Thanks!\nSource code / logs\n01-11 16:21:12.508 18038-18078/com.sridhar.deepak.objectdetection D/OpenGLRenderer: endAllStagingAnimators on 0xab6c06f0 (ListView) with handle 0xab7000d8\n01-11 16:21:18.135 18038-18038/com.sridhar.deepak.objectdetection E/TensorFlowInferenceInterface: Failed to run TensorFlow session: java.lang.IllegalArgumentException: No OpKernel was registered to support Op 'Switch' with these attrs.  Registered devices: [CPU], Registered kernels:\ndevice='GPU'; T in [DT_STRING]\ndevice='GPU'; T in [DT_BOOL]\ndevice='GPU'; T in [DT_INT32]\ndevice='GPU'; T in [DT_FLOAT]\ndevice='CPU'; T in [DT_FLOAT]\ndevice='CPU'; T in [DT_INT32]\n                                                                                              \t [[Node: bn0/cond/Switch = Switch[T=DT_BOOL](bn0/keras_learning_phase, bn0/keras_learning_phase)]]\n\n01-11 16:21:18.135 18038-18038/com.sridhar.deepak.objectdetection D/AndroidRuntime: Shutting down VM\n01-11 16:21:18.136 18038-18038/com.sridhar.deepak.objectdetection E/AndroidRuntime: FATAL EXCEPTION: main\nProcess: com.sridhar.deepak.objectdetection, PID: 18038\njava.lang.IndexOutOfBoundsException: Invalid index 0, size is 0\nat java.util.ArrayList.throwIndexOutOfBoundsException(ArrayList.java:255)\nat java.util.ArrayList.get(ArrayList.java:308)\nat org.tensorflow.contrib.android.TensorFlowInferenceInterface.getTensor(TensorFlowInferenceInterface.java:473)\nat org.tensorflow.contrib.android.TensorFlowInferenceInterface.readNodeIntoFloatBuffer(TensorFlowInferenceInterface.java:320)\nat org.tensorflow.contrib.android.TensorFlowInferenceInterface.readNodeFloat(TensorFlowInferenceInterface.java:275)\nat com.sridhar.deepak.objectdetection.TensorFlowImageClassifier.recognizeImage(TensorFlowImageClassifier.java:161)\nat com.sridhar.deepak.objectdetection.HappyFaceDetector$2.onPictureTaken(HappyFaceDetector.java:82)\nat com.flurgle.camerakit.CameraView$CameraListenerMiddleWare.onPictureTaken(CameraView.java:296)\nat com.flurgle.camerakit.Camera1$2.onPictureTaken(Camera1.java:185)\nat android.hardware.Camera$EventHandler.handleMessage(Camera.java:1118)\nat android.os.Handler.dispatchMessage(Handler.java:102)\nat android.os.Looper.loop(Looper.java:154)\nat android.app.ActivityThread.main(ActivityThread.java:5527)\nat java.lang.reflect.Method.invoke(Native Method)\nat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:739)\nat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:629)\n01-11 16:21:18.136 18038-18038/com.sridhar.deepak.objectdetection E/MQSEventManagerDelegate: failed to get MQSService.\n01-11 16:21:19.470 18038-18038/com.sridhar.deepak.objectdetection I/Process: Sending signal. PID: 18038 SIG: 9\nTensorFlowImageClassifier file\n@Override\npublic List<Recognition> recognizeImage(final Bitmap bitmap,int s) {\n    // Log this method so that it can be analyzed with systrace.\n    Trace.beginSection(\"recognizeImage\");\n\n    Trace.beginSection(\"preprocessBitmap\");\n    // Preprocess the image data from 0-255 int to normalized float based\n    // on the provided parameters.\n    if (s==1) {\n        bitmap.getPixels(intValues, 0, bitmap.getWidth(), 0, 0, bitmap.getWidth(), bitmap.getHeight());\n        for (int i = 0; i < intValues.length; ++i) {\n            final int val = intValues[i];\n            floatValues[i * 3 + 0] = (((val >> 16) & 0xFF) - imageMean) / imageStd;\n            floatValues[i * 3 + 1] = (((val >> 8) & 0xFF) - imageMean) / imageStd;\n            floatValues[i * 3 + 2] = ((val & 0xFF) - imageMean) / imageStd;\n        }\n    }else {\n        bitmap.getPixels(intValues, 0, bitmap.getWidth(), 0, 0, bitmap.getWidth(), bitmap.getHeight());\n        for (int i = 0; i < intValues.length; ++i) {\n            final int val = intValues[i];\n            floatValues[i * 3 + 0] = (((val >> 16) & 0xFF))/imageStd;\n            floatValues[i * 3 + 1] = (((val >> 8) & 0xFF))/imageStd;\n            floatValues[i * 3 + 2] = ((val & 0xFF))/imageStd;\n            floatValues[i * 3 + 0] = floatValues[i * 3 + 0] - 1;\n            floatValues[i * 3 + 1] = floatValues[i * 3 + 1] - 1;\n            floatValues[i * 3 + 2] = floatValues[i * 3 + 2] - 1;\n\n        }\n    }\n    Trace.endSection();\n\n    // Copy the input data into TensorFlow.\n    Trace.beginSection(\"fillNodeFloat\");\n    inferenceInterface.fillNodeFloat(\n            inputName, new int[]{1, inputSize, inputSize, 3}, floatValues);\n    Trace.endSection();\n\n    // Run the inference call.\n    Trace.beginSection(\"runInference\");\n    inferenceInterface.runInference(outputNames);\n    Trace.endSection();\n\n    // Copy the output Tensor back into the output array.\n    Trace.beginSection(\"readNodeFloat\");\n    inferenceInterface.readNodeFloat(outputName, outputs);\n    Trace.endSection();\n\nMainActivity\nprivate static final int INPUT_SIZE = 64;\nprivate static final int IMAGE_MEAN = 128;\nprivate static final float IMAGE_STD = 128;\nprivate static final String INPUT_NAME = \"input_1\";\nprivate static final String OUTPUT_NAME = \"fc/Sigmoid\";\nprivate static final String MODEL_FILE = \"file:///android_asset/happy_model.pb\";\nprivate static final String LABEL_FILE =\n        \"file:///android_asset/face_label.txt\";", "body": "Hello,\r\n\r\nUpdated the following info:\r\nHave I written custom code No its modification of the code from here https://github.com/MindorksOpenSource/AndroidTensorFlowMachineLearningExample \r\nOS Platform and Distribution: Windows 10\r\nTensorFlow installed from: anaconda\r\nTensorFlow version: 1.2.0\r\nBazel version: N/A\r\nCUDA/cuDNN version: N/A\r\nGPU model and memory: N/A\r\nExact command to reproduce: N/A\r\n\r\nI created  my custom model in keras to recognize happy faces and loaded the model into android and ran into this issue of \r\njava.lang.IndexOutOfBoundsException: Invalid index 0, size is 0 at runtime and my app crashed. I have modified the code from here https://github.com/MindorksOpenSource/AndroidTensorFlowMachineLearningExample \r\nto suit my model. Is it the problem with protobuf file creation? I have tested my model and it works well in python. Below is the log file and the source code. Please help with this issue? Thanks!\r\n\r\n### Source code / logs\r\n\r\n\r\n01-11 16:21:12.508 18038-18078/com.sridhar.deepak.objectdetection D/OpenGLRenderer: endAllStagingAnimators on 0xab6c06f0 (ListView) with handle 0xab7000d8\r\n01-11 16:21:18.135 18038-18038/com.sridhar.deepak.objectdetection E/TensorFlowInferenceInterface: Failed to run TensorFlow session: java.lang.IllegalArgumentException: No OpKernel was registered to support Op 'Switch' with these attrs.  Registered devices: [CPU], Registered kernels:\r\n                                                                                                    device='GPU'; T in [DT_STRING]\r\n                                                                                                    device='GPU'; T in [DT_BOOL]\r\n                                                                                                    device='GPU'; T in [DT_INT32]\r\n                                                                                                    device='GPU'; T in [DT_FLOAT]\r\n                                                                                                    device='CPU'; T in [DT_FLOAT]\r\n                                                                                                    device='CPU'; T in [DT_INT32]\r\n                                                                                                  \r\n                                                                                                  \t [[Node: bn0/cond/Switch = Switch[T=DT_BOOL](bn0/keras_learning_phase, bn0/keras_learning_phase)]]\r\n01-11 16:21:18.135 18038-18038/com.sridhar.deepak.objectdetection D/AndroidRuntime: Shutting down VM\r\n01-11 16:21:18.136 18038-18038/com.sridhar.deepak.objectdetection E/AndroidRuntime: FATAL EXCEPTION: main\r\n                                                                                    Process: com.sridhar.deepak.objectdetection, PID: 18038\r\n                                                                                    java.lang.IndexOutOfBoundsException: Invalid index 0, size is 0\r\n                                                                                        at java.util.ArrayList.throwIndexOutOfBoundsException(ArrayList.java:255)\r\n                                                                                        at java.util.ArrayList.get(ArrayList.java:308)\r\n                                                                                        at org.tensorflow.contrib.android.TensorFlowInferenceInterface.getTensor(TensorFlowInferenceInterface.java:473)\r\n                                                                                        at org.tensorflow.contrib.android.TensorFlowInferenceInterface.readNodeIntoFloatBuffer(TensorFlowInferenceInterface.java:320)\r\n                                                                                        at org.tensorflow.contrib.android.TensorFlowInferenceInterface.readNodeFloat(TensorFlowInferenceInterface.java:275)\r\n                                                                                        at com.sridhar.deepak.objectdetection.TensorFlowImageClassifier.recognizeImage(TensorFlowImageClassifier.java:161)\r\n                                                                                        at com.sridhar.deepak.objectdetection.HappyFaceDetector$2.onPictureTaken(HappyFaceDetector.java:82)\r\n                                                                                        at com.flurgle.camerakit.CameraView$CameraListenerMiddleWare.onPictureTaken(CameraView.java:296)\r\n                                                                                        at com.flurgle.camerakit.Camera1$2.onPictureTaken(Camera1.java:185)\r\n                                                                                        at android.hardware.Camera$EventHandler.handleMessage(Camera.java:1118)\r\n                                                                                        at android.os.Handler.dispatchMessage(Handler.java:102)\r\n                                                                                        at android.os.Looper.loop(Looper.java:154)\r\n                                                                                        at android.app.ActivityThread.main(ActivityThread.java:5527)\r\n                                                                                        at java.lang.reflect.Method.invoke(Native Method)\r\n                                                                                        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:739)\r\n                                                                                        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:629)\r\n01-11 16:21:18.136 18038-18038/com.sridhar.deepak.objectdetection E/MQSEventManagerDelegate: failed to get MQSService.\r\n01-11 16:21:19.470 18038-18038/com.sridhar.deepak.objectdetection I/Process: Sending signal. PID: 18038 SIG: 9\r\n\r\nTensorFlowImageClassifier file\r\n\r\n    @Override\r\n    public List<Recognition> recognizeImage(final Bitmap bitmap,int s) {\r\n        // Log this method so that it can be analyzed with systrace.\r\n        Trace.beginSection(\"recognizeImage\");\r\n\r\n        Trace.beginSection(\"preprocessBitmap\");\r\n        // Preprocess the image data from 0-255 int to normalized float based\r\n        // on the provided parameters.\r\n        if (s==1) {\r\n            bitmap.getPixels(intValues, 0, bitmap.getWidth(), 0, 0, bitmap.getWidth(), bitmap.getHeight());\r\n            for (int i = 0; i < intValues.length; ++i) {\r\n                final int val = intValues[i];\r\n                floatValues[i * 3 + 0] = (((val >> 16) & 0xFF) - imageMean) / imageStd;\r\n                floatValues[i * 3 + 1] = (((val >> 8) & 0xFF) - imageMean) / imageStd;\r\n                floatValues[i * 3 + 2] = ((val & 0xFF) - imageMean) / imageStd;\r\n            }\r\n        }else {\r\n            bitmap.getPixels(intValues, 0, bitmap.getWidth(), 0, 0, bitmap.getWidth(), bitmap.getHeight());\r\n            for (int i = 0; i < intValues.length; ++i) {\r\n                final int val = intValues[i];\r\n                floatValues[i * 3 + 0] = (((val >> 16) & 0xFF))/imageStd;\r\n                floatValues[i * 3 + 1] = (((val >> 8) & 0xFF))/imageStd;\r\n                floatValues[i * 3 + 2] = ((val & 0xFF))/imageStd;\r\n                floatValues[i * 3 + 0] = floatValues[i * 3 + 0] - 1;\r\n                floatValues[i * 3 + 1] = floatValues[i * 3 + 1] - 1;\r\n                floatValues[i * 3 + 2] = floatValues[i * 3 + 2] - 1;\r\n\r\n            }\r\n        }\r\n        Trace.endSection();\r\n\r\n        // Copy the input data into TensorFlow.\r\n        Trace.beginSection(\"fillNodeFloat\");\r\n        inferenceInterface.fillNodeFloat(\r\n                inputName, new int[]{1, inputSize, inputSize, 3}, floatValues);\r\n        Trace.endSection();\r\n\r\n        // Run the inference call.\r\n        Trace.beginSection(\"runInference\");\r\n        inferenceInterface.runInference(outputNames);\r\n        Trace.endSection();\r\n\r\n        // Copy the output Tensor back into the output array.\r\n        Trace.beginSection(\"readNodeFloat\");\r\n        inferenceInterface.readNodeFloat(outputName, outputs);\r\n        Trace.endSection();\r\n\r\nMainActivity\r\n    private static final int INPUT_SIZE = 64;\r\n    private static final int IMAGE_MEAN = 128;\r\n    private static final float IMAGE_STD = 128;\r\n    private static final String INPUT_NAME = \"input_1\";\r\n    private static final String OUTPUT_NAME = \"fc/Sigmoid\";\r\n\r\n    private static final String MODEL_FILE = \"file:///android_asset/happy_model.pb\";\r\n    private static final String LABEL_FILE =\r\n            \"file:///android_asset/face_label.txt\";\r\n\r\n\r\n\r\n\r\n"}