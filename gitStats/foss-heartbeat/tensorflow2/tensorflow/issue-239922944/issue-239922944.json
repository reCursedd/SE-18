{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11201", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11201/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11201/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11201/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/11201", "id": 239922944, "node_id": "MDU6SXNzdWUyMzk5MjI5NDQ=", "number": 11201, "title": "bazel build causes Kernel Panic on clean Ubuntu 16.04", "user": {"login": "ay0000", "id": 29808586, "node_id": "MDQ6VXNlcjI5ODA4NTg2", "avatar_url": "https://avatars1.githubusercontent.com/u/29808586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ay0000", "html_url": "https://github.com/ay0000", "followers_url": "https://api.github.com/users/ay0000/followers", "following_url": "https://api.github.com/users/ay0000/following{/other_user}", "gists_url": "https://api.github.com/users/ay0000/gists{/gist_id}", "starred_url": "https://api.github.com/users/ay0000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ay0000/subscriptions", "organizations_url": "https://api.github.com/users/ay0000/orgs", "repos_url": "https://api.github.com/users/ay0000/repos", "events_url": "https://api.github.com/users/ay0000/events{/privacy}", "received_events_url": "https://api.github.com/users/ay0000/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-01T03:03:08Z", "updated_at": "2017-07-02T21:11:09Z", "closed_at": "2017-07-02T21:11:09Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: No</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: Trying for source</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.2</li>\n<li><strong>Python version</strong>: 2.7.12</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.5.2</li>\n<li><strong>CUDA/cuDNN version</strong>: 5.1</li>\n<li><strong>GPU model and memory</strong>: Nvidia GTX 750 Ti</li>\n<li><strong>Exact command to reproduce</strong>: bazel build --config=opt --config=cuda //tensorflow/tools/pip_package:build_pip_package</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I get through a fair chunk of the build process then I get hit with:</p>\n<p>Kernel panic - not syncing: Timeout: Not all cpus entered broadcast exception handler</p>\n<p>The computer then reboots after about 30 seconds.  This is on a fresh install of Ubuntu.</p>\n<h3>Source code / logs</h3>\n<p>~/Development/tensorflow$ ./configure<br>\n.........<br>\nYou have bazel 0.5.2 installed.<br>\nPlease specify the location of python. [Default is /usr/bin/python]:<br>\nFound possible Python library paths:<br>\n/usr/local/lib/python2.7/dist-packages<br>\n/usr/lib/python2.7/dist-packages<br>\nPlease input the desired Python library path to use.  Default is [/usr/local/lib/python2.7/dist-packages]</p>\n<p>Using python library path: /usr/local/lib/python2.7/dist-packages<br>\nDo you wish to build TensorFlow with MKL support? [y/N]<br>\nNo MKL support will be enabled for TensorFlow<br>\nPlease specify optimization flags to use during compilation when bazel option \"--config=opt\" is specified [Default is -march=native]:<br>\nDo you wish to use jemalloc as the malloc implementation? [Y/n]<br>\njemalloc enabled<br>\nDo you wish to build TensorFlow with Google Cloud Platform support? [y/N] Y<br>\nGoogle Cloud Platform support will be enabled for TensorFlow<br>\nDo you wish to build TensorFlow with Hadoop File System support? [y/N] y<br>\nHadoop File System support will be enabled for TensorFlow<br>\nDo you wish to build TensorFlow with the XLA just-in-time compiler (experimental)? [y/N]<br>\nNo XLA support will be enabled for TensorFlow<br>\nDo you wish to build TensorFlow with VERBS support? [y/N] y<br>\nVERBS support will be enabled for TensorFlow<br>\nDo you wish to build TensorFlow with OpenCL support? [y/N]<br>\nNo OpenCL support will be enabled for TensorFlow<br>\nDo you wish to build TensorFlow with CUDA support? [y/N] y<br>\nCUDA support will be enabled for TensorFlow<br>\nDo you want to use clang as CUDA compiler? [y/N]<br>\nnvcc will be used as CUDA compiler<br>\nPlease specify the CUDA SDK version you want to use, e.g. 7.0. [Leave empty to default to CUDA 8.0]:<br>\nPlease specify the location where CUDA  toolkit is installed. Refer to README.md for more details. [Default is /usr/local/cuda]:<br>\nPlease specify which gcc should be used by nvcc as the host compiler. [Default is /usr/bin/gcc]:<br>\nPlease specify the cuDNN version you want to use. [Leave empty to default to cuDNN 6.0]: 5<br>\nPlease specify the location where cuDNN 5 library is installed. Refer to README.md for more details. [Default is /usr/local/cuda]:<br>\nPlease specify a list of comma-separated Cuda compute capabilities you want to build with.<br>\nYou can find the compute capability of your device at: <a href=\"https://developer.nvidia.com/cuda-gpus\" rel=\"nofollow\">https://developer.nvidia.com/cuda-gpus</a>.<br>\nPlease note that each additional compute capability significantly increases your build time and binary size.<br>\n[Default is: \"5.0\"]: \"5.0,6.1\"<br>\nDo you wish to build TensorFlow with MPI support? [y/N]<br>\nMPI support will not be enabled for TensorFlow<br>\nConfiguration finished</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): No\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 16.04\nTensorFlow installed from (source or binary): Trying for source\nTensorFlow version (use command below): 1.2\nPython version: 2.7.12\nBazel version (if compiling from source): 0.5.2\nCUDA/cuDNN version: 5.1\nGPU model and memory: Nvidia GTX 750 Ti\nExact command to reproduce: bazel build --config=opt --config=cuda //tensorflow/tools/pip_package:build_pip_package\n\nDescribe the problem\nI get through a fair chunk of the build process then I get hit with:\nKernel panic - not syncing: Timeout: Not all cpus entered broadcast exception handler\nThe computer then reboots after about 30 seconds.  This is on a fresh install of Ubuntu.\nSource code / logs\n~/Development/tensorflow$ ./configure\n.........\nYou have bazel 0.5.2 installed.\nPlease specify the location of python. [Default is /usr/bin/python]:\nFound possible Python library paths:\n/usr/local/lib/python2.7/dist-packages\n/usr/lib/python2.7/dist-packages\nPlease input the desired Python library path to use.  Default is [/usr/local/lib/python2.7/dist-packages]\nUsing python library path: /usr/local/lib/python2.7/dist-packages\nDo you wish to build TensorFlow with MKL support? [y/N]\nNo MKL support will be enabled for TensorFlow\nPlease specify optimization flags to use during compilation when bazel option \"--config=opt\" is specified [Default is -march=native]:\nDo you wish to use jemalloc as the malloc implementation? [Y/n]\njemalloc enabled\nDo you wish to build TensorFlow with Google Cloud Platform support? [y/N] Y\nGoogle Cloud Platform support will be enabled for TensorFlow\nDo you wish to build TensorFlow with Hadoop File System support? [y/N] y\nHadoop File System support will be enabled for TensorFlow\nDo you wish to build TensorFlow with the XLA just-in-time compiler (experimental)? [y/N]\nNo XLA support will be enabled for TensorFlow\nDo you wish to build TensorFlow with VERBS support? [y/N] y\nVERBS support will be enabled for TensorFlow\nDo you wish to build TensorFlow with OpenCL support? [y/N]\nNo OpenCL support will be enabled for TensorFlow\nDo you wish to build TensorFlow with CUDA support? [y/N] y\nCUDA support will be enabled for TensorFlow\nDo you want to use clang as CUDA compiler? [y/N]\nnvcc will be used as CUDA compiler\nPlease specify the CUDA SDK version you want to use, e.g. 7.0. [Leave empty to default to CUDA 8.0]:\nPlease specify the location where CUDA  toolkit is installed. Refer to README.md for more details. [Default is /usr/local/cuda]:\nPlease specify which gcc should be used by nvcc as the host compiler. [Default is /usr/bin/gcc]:\nPlease specify the cuDNN version you want to use. [Leave empty to default to cuDNN 6.0]: 5\nPlease specify the location where cuDNN 5 library is installed. Refer to README.md for more details. [Default is /usr/local/cuda]:\nPlease specify a list of comma-separated Cuda compute capabilities you want to build with.\nYou can find the compute capability of your device at: https://developer.nvidia.com/cuda-gpus.\nPlease note that each additional compute capability significantly increases your build time and binary size.\n[Default is: \"5.0\"]: \"5.0,6.1\"\nDo you wish to build TensorFlow with MPI support? [y/N]\nMPI support will not be enabled for TensorFlow\nConfiguration finished", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: Trying for source\r\n- **TensorFlow version (use command below)**: 1.2\r\n- **Python version**: 2.7.12\r\n- **Bazel version (if compiling from source)**: 0.5.2\r\n- **CUDA/cuDNN version**: 5.1\r\n- **GPU model and memory**: Nvidia GTX 750 Ti\r\n- **Exact command to reproduce**: bazel build --config=opt --config=cuda //tensorflow/tools/pip_package:build_pip_package \r\n\r\n### Describe the problem\r\nI get through a fair chunk of the build process then I get hit with: \r\n\r\nKernel panic - not syncing: Timeout: Not all cpus entered broadcast exception handler\r\n\r\nThe computer then reboots after about 30 seconds.  This is on a fresh install of Ubuntu.\r\n\r\n### Source code / logs\r\n\r\n~/Development/tensorflow$ ./configure\r\n.........\r\nYou have bazel 0.5.2 installed.\r\nPlease specify the location of python. [Default is /usr/bin/python]: \r\nFound possible Python library paths:\r\n  /usr/local/lib/python2.7/dist-packages\r\n  /usr/lib/python2.7/dist-packages\r\nPlease input the desired Python library path to use.  Default is [/usr/local/lib/python2.7/dist-packages]\r\n\r\nUsing python library path: /usr/local/lib/python2.7/dist-packages\r\nDo you wish to build TensorFlow with MKL support? [y/N] \r\nNo MKL support will be enabled for TensorFlow\r\nPlease specify optimization flags to use during compilation when bazel option \"--config=opt\" is specified [Default is -march=native]: \r\nDo you wish to use jemalloc as the malloc implementation? [Y/n] \r\njemalloc enabled\r\nDo you wish to build TensorFlow with Google Cloud Platform support? [y/N] Y\r\nGoogle Cloud Platform support will be enabled for TensorFlow\r\nDo you wish to build TensorFlow with Hadoop File System support? [y/N] y\r\nHadoop File System support will be enabled for TensorFlow\r\nDo you wish to build TensorFlow with the XLA just-in-time compiler (experimental)? [y/N] \r\nNo XLA support will be enabled for TensorFlow\r\nDo you wish to build TensorFlow with VERBS support? [y/N] y\r\nVERBS support will be enabled for TensorFlow\r\nDo you wish to build TensorFlow with OpenCL support? [y/N] \r\nNo OpenCL support will be enabled for TensorFlow\r\nDo you wish to build TensorFlow with CUDA support? [y/N] y\r\nCUDA support will be enabled for TensorFlow\r\nDo you want to use clang as CUDA compiler? [y/N] \r\nnvcc will be used as CUDA compiler\r\nPlease specify the CUDA SDK version you want to use, e.g. 7.0. [Leave empty to default to CUDA 8.0]: \r\nPlease specify the location where CUDA  toolkit is installed. Refer to README.md for more details. [Default is /usr/local/cuda]: \r\nPlease specify which gcc should be used by nvcc as the host compiler. [Default is /usr/bin/gcc]: \r\nPlease specify the cuDNN version you want to use. [Leave empty to default to cuDNN 6.0]: 5\r\nPlease specify the location where cuDNN 5 library is installed. Refer to README.md for more details. [Default is /usr/local/cuda]: \r\nPlease specify a list of comma-separated Cuda compute capabilities you want to build with.\r\nYou can find the compute capability of your device at: https://developer.nvidia.com/cuda-gpus.\r\nPlease note that each additional compute capability significantly increases your build time and binary size.\r\n[Default is: \"5.0\"]: \"5.0,6.1\"\r\nDo you wish to build TensorFlow with MPI support? [y/N] \r\nMPI support will not be enabled for TensorFlow\r\nConfiguration finished\r\n\r\n\r\n"}