{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/178061547", "html_url": "https://github.com/tensorflow/tensorflow/issues/836#issuecomment-178061547", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/836", "id": 178061547, "node_id": "MDEyOklzc3VlQ29tbWVudDE3ODA2MTU0Nw==", "user": {"login": "digitalsword", "id": 12500045, "node_id": "MDQ6VXNlcjEyNTAwMDQ1", "avatar_url": "https://avatars0.githubusercontent.com/u/12500045?v=4", "gravatar_id": "", "url": "https://api.github.com/users/digitalsword", "html_url": "https://github.com/digitalsword", "followers_url": "https://api.github.com/users/digitalsword/followers", "following_url": "https://api.github.com/users/digitalsword/following{/other_user}", "gists_url": "https://api.github.com/users/digitalsword/gists{/gist_id}", "starred_url": "https://api.github.com/users/digitalsword/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/digitalsword/subscriptions", "organizations_url": "https://api.github.com/users/digitalsword/orgs", "repos_url": "https://api.github.com/users/digitalsword/repos", "events_url": "https://api.github.com/users/digitalsword/events{/privacy}", "received_events_url": "https://api.github.com/users/digitalsword/received_events", "type": "User", "site_admin": false}, "created_at": "2016-02-01T16:42:13Z", "updated_at": "2016-02-01T16:42:29Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=38796651\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/danmane\">@danmane</a> I was training an RNN on 4 GPUs. The weights was defined on CPU. Then I got a large graph. I am not sure if I am using RNN correctly in this multiple-GPU case. Do you know how to train RNN on 4 GPUs? I was using rnn_cell.BasicLSTMCell and rnn_cell.MultiRNNCell() to create an RNN.</p>", "body_text": "@danmane I was training an RNN on 4 GPUs. The weights was defined on CPU. Then I got a large graph. I am not sure if I am using RNN correctly in this multiple-GPU case. Do you know how to train RNN on 4 GPUs? I was using rnn_cell.BasicLSTMCell and rnn_cell.MultiRNNCell() to create an RNN.", "body": "@danmane I was training an RNN on 4 GPUs. The weights was defined on CPU. Then I got a large graph. I am not sure if I am using RNN correctly in this multiple-GPU case. Do you know how to train RNN on 4 GPUs? I was using rnn_cell.BasicLSTMCell and rnn_cell.MultiRNNCell() to create an RNN.\n"}