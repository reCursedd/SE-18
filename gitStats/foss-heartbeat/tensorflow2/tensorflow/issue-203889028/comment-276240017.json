{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/276240017", "html_url": "https://github.com/tensorflow/tensorflow/issues/7134#issuecomment-276240017", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7134", "id": 276240017, "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjI0MDAxNw==", "user": {"login": "EronWright", "id": 1775518, "node_id": "MDQ6VXNlcjE3NzU1MTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1775518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EronWright", "html_url": "https://github.com/EronWright", "followers_url": "https://api.github.com/users/EronWright/followers", "following_url": "https://api.github.com/users/EronWright/following{/other_user}", "gists_url": "https://api.github.com/users/EronWright/gists{/gist_id}", "starred_url": "https://api.github.com/users/EronWright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EronWright/subscriptions", "organizations_url": "https://api.github.com/users/EronWright/orgs", "repos_url": "https://api.github.com/users/EronWright/repos", "events_url": "https://api.github.com/users/EronWright/events{/privacy}", "received_events_url": "https://api.github.com/users/EronWright/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-31T00:49:20Z", "updated_at": "2017-01-31T00:49:20Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=170179\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jhseu\">@jhseu</a> I thought that too but it didn't work in practice.   <code>TF_LoadSessionFromSavedModel</code> produces both a session and a graph that the caller takes ownership of.   The session never takes ownership of the graph.   Meanwhile, the JNI method may produce only a single return value.   All together, a <code>SavedModelBundle</code>  was the obvious solution.</p>\n<p>Regarding the <code>metagraphdef</code>, a saved model is not very useful without it because it contains the <code>signaturedef</code>s.</p>", "body_text": "@jhseu I thought that too but it didn't work in practice.   TF_LoadSessionFromSavedModel produces both a session and a graph that the caller takes ownership of.   The session never takes ownership of the graph.   Meanwhile, the JNI method may produce only a single return value.   All together, a SavedModelBundle  was the obvious solution.\nRegarding the metagraphdef, a saved model is not very useful without it because it contains the signaturedefs.", "body": "@jhseu I thought that too but it didn't work in practice.   `TF_LoadSessionFromSavedModel` produces both a session and a graph that the caller takes ownership of.   The session never takes ownership of the graph.   Meanwhile, the JNI method may produce only a single return value.   All together, a `SavedModelBundle`  was the obvious solution.\r\n\r\nRegarding the `metagraphdef`, a saved model is not very useful without it because it contains the `signaturedef`s."}