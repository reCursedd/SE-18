{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/298830999", "html_url": "https://github.com/tensorflow/tensorflow/issues/9301#issuecomment-298830999", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9301", "id": 298830999, "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODgzMDk5OQ==", "user": {"login": "kwotsin", "id": 11178344, "node_id": "MDQ6VXNlcjExMTc4MzQ0", "avatar_url": "https://avatars2.githubusercontent.com/u/11178344?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kwotsin", "html_url": "https://github.com/kwotsin", "followers_url": "https://api.github.com/users/kwotsin/followers", "following_url": "https://api.github.com/users/kwotsin/following{/other_user}", "gists_url": "https://api.github.com/users/kwotsin/gists{/gist_id}", "starred_url": "https://api.github.com/users/kwotsin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kwotsin/subscriptions", "organizations_url": "https://api.github.com/users/kwotsin/orgs", "repos_url": "https://api.github.com/users/kwotsin/repos", "events_url": "https://api.github.com/users/kwotsin/events{/privacy}", "received_events_url": "https://api.github.com/users/kwotsin/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-03T06:17:32Z", "updated_at": "2017-05-03T06:17:32Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Thanks for your fix! May I know if I need to rebuild the <code>graph_transform</code> tool via bazel with a fresh install of TF? I am still using TF 1.01, and have rebuilt the <code>graph_transform</code> tool with bazel, and used only <code>quantize_weights</code> from the <code>graph_transform</code> tool. However, I'm still getting the very random classes predicted with low accuracy.</p>\n<p>I have also tried <code>quantize_weights</code> and <code>quantize_nodes</code> together, which gives me a better performance at 43% confidence. However, what's strange is before I rebuilt the tool, using the old <code>graph_transform</code> tool, I was getting 46% confidence for my predictions. But using <code>quantize_graph</code>, I got 69% confidence instead. To compare, the frozen (not quantized) graph gives me an 81% confidence.</p>\n<p>Do I need to update the entire TF 1.01 on my host machine? If I do so, will there be huge conflicts in developing for Jetson which uses the ugly hack? Is there any way to upgrade the Jetson's ugly hack to a later version?</p>", "body_text": "Thanks for your fix! May I know if I need to rebuild the graph_transform tool via bazel with a fresh install of TF? I am still using TF 1.01, and have rebuilt the graph_transform tool with bazel, and used only quantize_weights from the graph_transform tool. However, I'm still getting the very random classes predicted with low accuracy.\nI have also tried quantize_weights and quantize_nodes together, which gives me a better performance at 43% confidence. However, what's strange is before I rebuilt the tool, using the old graph_transform tool, I was getting 46% confidence for my predictions. But using quantize_graph, I got 69% confidence instead. To compare, the frozen (not quantized) graph gives me an 81% confidence.\nDo I need to update the entire TF 1.01 on my host machine? If I do so, will there be huge conflicts in developing for Jetson which uses the ugly hack? Is there any way to upgrade the Jetson's ugly hack to a later version?", "body": "Thanks for your fix! May I know if I need to rebuild the `graph_transform` tool via bazel with a fresh install of TF? I am still using TF 1.01, and have rebuilt the `graph_transform` tool with bazel, and used only `quantize_weights` from the `graph_transform` tool. However, I'm still getting the very random classes predicted with low accuracy.\r\n\r\nI have also tried `quantize_weights` and `quantize_nodes` together, which gives me a better performance at 43% confidence. However, what's strange is before I rebuilt the tool, using the old `graph_transform` tool, I was getting 46% confidence for my predictions. But using `quantize_graph`, I got 69% confidence instead. To compare, the frozen (not quantized) graph gives me an 81% confidence.\r\n\r\nDo I need to update the entire TF 1.01 on my host machine? If I do so, will there be huge conflicts in developing for Jetson which uses the ugly hack? Is there any way to upgrade the Jetson's ugly hack to a later version? \r\n"}