{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5886", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5886/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5886/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5886/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/5886", "id": 191877416, "node_id": "MDU6SXNzdWUxOTE4Nzc0MTY=", "number": 5886, "title": "Crash with dynamic tf.reshape \"Check failed: dtype() == expected_dtype (9 vs. 3)\"", "user": {"login": "bodokaiser", "id": 1780466, "node_id": "MDQ6VXNlcjE3ODA0NjY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1780466?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bodokaiser", "html_url": "https://github.com/bodokaiser", "followers_url": "https://api.github.com/users/bodokaiser/followers", "following_url": "https://api.github.com/users/bodokaiser/following{/other_user}", "gists_url": "https://api.github.com/users/bodokaiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/bodokaiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bodokaiser/subscriptions", "organizations_url": "https://api.github.com/users/bodokaiser/orgs", "repos_url": "https://api.github.com/users/bodokaiser/repos", "events_url": "https://api.github.com/users/bodokaiser/events{/privacy}", "received_events_url": "https://api.github.com/users/bodokaiser/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "girving", "id": 70511, "node_id": "MDQ6VXNlcjcwNTEx", "avatar_url": "https://avatars1.githubusercontent.com/u/70511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/girving", "html_url": "https://github.com/girving", "followers_url": "https://api.github.com/users/girving/followers", "following_url": "https://api.github.com/users/girving/following{/other_user}", "gists_url": "https://api.github.com/users/girving/gists{/gist_id}", "starred_url": "https://api.github.com/users/girving/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/girving/subscriptions", "organizations_url": "https://api.github.com/users/girving/orgs", "repos_url": "https://api.github.com/users/girving/repos", "events_url": "https://api.github.com/users/girving/events{/privacy}", "received_events_url": "https://api.github.com/users/girving/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "girving", "id": 70511, "node_id": "MDQ6VXNlcjcwNTEx", "avatar_url": "https://avatars1.githubusercontent.com/u/70511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/girving", "html_url": "https://github.com/girving", "followers_url": "https://api.github.com/users/girving/followers", "following_url": "https://api.github.com/users/girving/following{/other_user}", "gists_url": "https://api.github.com/users/girving/gists{/gist_id}", "starred_url": "https://api.github.com/users/girving/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/girving/subscriptions", "organizations_url": "https://api.github.com/users/girving/orgs", "repos_url": "https://api.github.com/users/girving/repos", "events_url": "https://api.github.com/users/girving/events{/privacy}", "received_events_url": "https://api.github.com/users/girving/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2016-11-27T18:48:50Z", "updated_at": "2018-10-09T09:52:53Z", "closed_at": "2016-11-27T20:18:11Z", "author_association": "NONE", "body_html": "<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\nqueue <span class=\"pl-k\">=</span> tf.train.string_input_producer([<span class=\"pl-s\"><span class=\"pl-pds\">'</span>data.tfrecord<span class=\"pl-pds\">'</span></span>])\n\nreader <span class=\"pl-k\">=</span> tf.TFRecordReader()\n_, example <span class=\"pl-k\">=</span> reader.read(queue)\n\nfeatures <span class=\"pl-k\">=</span> tf.parse_single_example(example,<span class=\"pl-v\">features</span><span class=\"pl-k\">=</span>{\n    <span class=\"pl-s\"><span class=\"pl-pds\">'</span>mr_image<span class=\"pl-pds\">'</span></span>: tf.FixedLenFeature([], tf.string),\n    <span class=\"pl-s\"><span class=\"pl-pds\">'</span>us_image<span class=\"pl-pds\">'</span></span>: tf.FixedLenFeature([], tf.string),\n    <span class=\"pl-s\"><span class=\"pl-pds\">'</span>mr_shape<span class=\"pl-pds\">'</span></span>: tf.FixedLenFeature([<span class=\"pl-c1\">2</span>], tf.int64),\n    <span class=\"pl-s\"><span class=\"pl-pds\">'</span>us_shape<span class=\"pl-pds\">'</span></span>: tf.FixedLenFeature([<span class=\"pl-c1\">2</span>], tf.int64),\n})\n\nmr_image <span class=\"pl-k\">=</span> tf.decode_raw(features[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>mr_image<span class=\"pl-pds\">'</span></span>], tf.int16)\nus_image <span class=\"pl-k\">=</span> tf.decode_raw(features[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>us_image<span class=\"pl-pds\">'</span></span>], tf.uint8)\n\nmr_shape <span class=\"pl-k\">=</span> tf.cast(features[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>mr_shape<span class=\"pl-pds\">'</span></span>], tf.int64)\nus_shape <span class=\"pl-k\">=</span> tf.cast(features[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>us_shape<span class=\"pl-pds\">'</span></span>], tf.int64)\n\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n    coord <span class=\"pl-k\">=</span> tf.train.Coordinator()\n    threads <span class=\"pl-k\">=</span> tf.train.start_queue_runners(<span class=\"pl-v\">sess</span><span class=\"pl-k\">=</span>sess, <span class=\"pl-v\">coord</span><span class=\"pl-k\">=</span>coord)\n    \n    <span class=\"pl-c\"><span class=\"pl-c\">#</span>mr = tf.reshape(mr_image, mr_shape)</span>\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span>us = tf.reshape(us_image, us_shape)</span>\n\n    <span class=\"pl-c1\">print</span>(<span class=\"pl-c1\">len</span>(sess.run(mr_image)),<span class=\"pl-c1\">len</span>(sess.run(us_image)))\n    <span class=\"pl-c1\">print</span>(sess.run([mr_shape, us_shape]))\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span>print(sess.run(tf.reshape(mr_image, mr_shape)))</span>\n    \n    coord.request_stop()\n    coord.join(threads)</pre></div>\n<p>Will print:</p>\n<pre><code>183604 118218\n[array([466, 394]), array([366, 323])]\n</code></pre>\n<p>However <code>print(sess.run(tf.reshape(mr_image, mr_shape)))</code> will cause a crash with:</p>\n<div class=\"highlight highlight-source-shell\"><pre>F tensorflow/core/framework/tensor.cc:441] Check failed: <span class=\"pl-en\">dtype</span>() == expected_dtype (9 vs. 3)</pre></div>\n<p>Also <code>print(sess.run(tf.reshape(mr_image, [466, 394])))</code> works as expected.</p>\n<ul>\n<li>macOS 10.12.1</li>\n<li>Python 3.5.2</li>\n<li>tensorflow 0.11</li>\n</ul>", "body_text": "import tensorflow as tf\n\nqueue = tf.train.string_input_producer(['data.tfrecord'])\n\nreader = tf.TFRecordReader()\n_, example = reader.read(queue)\n\nfeatures = tf.parse_single_example(example,features={\n    'mr_image': tf.FixedLenFeature([], tf.string),\n    'us_image': tf.FixedLenFeature([], tf.string),\n    'mr_shape': tf.FixedLenFeature([2], tf.int64),\n    'us_shape': tf.FixedLenFeature([2], tf.int64),\n})\n\nmr_image = tf.decode_raw(features['mr_image'], tf.int16)\nus_image = tf.decode_raw(features['us_image'], tf.uint8)\n\nmr_shape = tf.cast(features['mr_shape'], tf.int64)\nus_shape = tf.cast(features['us_shape'], tf.int64)\n\nwith tf.Session() as sess:\n    coord = tf.train.Coordinator()\n    threads = tf.train.start_queue_runners(sess=sess, coord=coord)\n    \n    #mr = tf.reshape(mr_image, mr_shape)\n    #us = tf.reshape(us_image, us_shape)\n\n    print(len(sess.run(mr_image)),len(sess.run(us_image)))\n    print(sess.run([mr_shape, us_shape]))\n    #print(sess.run(tf.reshape(mr_image, mr_shape)))\n    \n    coord.request_stop()\n    coord.join(threads)\nWill print:\n183604 118218\n[array([466, 394]), array([366, 323])]\n\nHowever print(sess.run(tf.reshape(mr_image, mr_shape))) will cause a crash with:\nF tensorflow/core/framework/tensor.cc:441] Check failed: dtype() == expected_dtype (9 vs. 3)\nAlso print(sess.run(tf.reshape(mr_image, [466, 394]))) works as expected.\n\nmacOS 10.12.1\nPython 3.5.2\ntensorflow 0.11", "body": "```py\r\nimport tensorflow as tf\r\n\r\nqueue = tf.train.string_input_producer(['data.tfrecord'])\r\n\r\nreader = tf.TFRecordReader()\r\n_, example = reader.read(queue)\r\n\r\nfeatures = tf.parse_single_example(example,features={\r\n    'mr_image': tf.FixedLenFeature([], tf.string),\r\n    'us_image': tf.FixedLenFeature([], tf.string),\r\n    'mr_shape': tf.FixedLenFeature([2], tf.int64),\r\n    'us_shape': tf.FixedLenFeature([2], tf.int64),\r\n})\r\n\r\nmr_image = tf.decode_raw(features['mr_image'], tf.int16)\r\nus_image = tf.decode_raw(features['us_image'], tf.uint8)\r\n\r\nmr_shape = tf.cast(features['mr_shape'], tf.int64)\r\nus_shape = tf.cast(features['us_shape'], tf.int64)\r\n\r\nwith tf.Session() as sess:\r\n    coord = tf.train.Coordinator()\r\n    threads = tf.train.start_queue_runners(sess=sess, coord=coord)\r\n    \r\n    #mr = tf.reshape(mr_image, mr_shape)\r\n    #us = tf.reshape(us_image, us_shape)\r\n\r\n    print(len(sess.run(mr_image)),len(sess.run(us_image)))\r\n    print(sess.run([mr_shape, us_shape]))\r\n    #print(sess.run(tf.reshape(mr_image, mr_shape)))\r\n    \r\n    coord.request_stop()\r\n    coord.join(threads)\r\n```\r\n\r\nWill print:\r\n```\r\n183604 118218\r\n[array([466, 394]), array([366, 323])]\r\n```\r\n\r\nHowever `print(sess.run(tf.reshape(mr_image, mr_shape)))` will cause a crash with:\r\n```sh\r\nF tensorflow/core/framework/tensor.cc:441] Check failed: dtype() == expected_dtype (9 vs. 3)\r\n```\r\n\r\nAlso `print(sess.run(tf.reshape(mr_image, [466, 394])))` works as expected.\r\n\r\n- macOS 10.12.1\r\n- Python 3.5.2\r\n- tensorflow 0.11"}