{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/263143040", "html_url": "https://github.com/tensorflow/tensorflow/issues/5886#issuecomment-263143040", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5886", "id": 263143040, "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzE0MzA0MA==", "user": {"login": "prb12", "id": 11547801, "node_id": "MDQ6VXNlcjExNTQ3ODAx", "avatar_url": "https://avatars1.githubusercontent.com/u/11547801?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prb12", "html_url": "https://github.com/prb12", "followers_url": "https://api.github.com/users/prb12/followers", "following_url": "https://api.github.com/users/prb12/following{/other_user}", "gists_url": "https://api.github.com/users/prb12/gists{/gist_id}", "starred_url": "https://api.github.com/users/prb12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prb12/subscriptions", "organizations_url": "https://api.github.com/users/prb12/orgs", "repos_url": "https://api.github.com/users/prb12/repos", "events_url": "https://api.github.com/users/prb12/events{/privacy}", "received_events_url": "https://api.github.com/users/prb12/received_events", "type": "User", "site_admin": false}, "created_at": "2016-11-27T19:51:17Z", "updated_at": "2016-11-27T19:51:17Z", "author_association": "MEMBER", "body_html": "<p>Thanks for reporting the issue. It looks from your report that this is a runtime failure, rather than a Python exception.</p>\n<p>The docs for <code>tf.reshape</code> state that the new shape is allowed to be int32 or int64:<br>\n<a href=\"https://www.tensorflow.org/versions/r0.11/api_docs/python/array_ops.html#reshape\" rel=\"nofollow\">https://www.tensorflow.org/versions/r0.11/api_docs/python/array_ops.html#reshape</a><br>\nand the op is correctly registered:<br>\n<a href=\"https://github.com/tensorflow/tensorflow/blob/r0.11/tensorflow/core/ops/array_ops.cc#L1155\">https://github.com/tensorflow/tensorflow/blob/r0.11/tensorflow/core/ops/array_ops.cc#L1155</a></p>\n<p>However, unless I'm missing something it looks like the implementation of the OpKernel assumes that the <code>sizes</code> are <code>int32</code>:<br>\n<a href=\"https://github.com/tensorflow/tensorflow/blob/r0.11/tensorflow/core/kernels/reshape_op.h#L48\">https://github.com/tensorflow/tensorflow/blob/r0.11/tensorflow/core/kernels/reshape_op.h#L48</a></p>\n<p>This seems to have been the case for a <em>long</em> time!</p>\n<p>As a workaround, you could simple use int32 shapes, but either the documentation or implementation should probably be fixed.</p>", "body_text": "Thanks for reporting the issue. It looks from your report that this is a runtime failure, rather than a Python exception.\nThe docs for tf.reshape state that the new shape is allowed to be int32 or int64:\nhttps://www.tensorflow.org/versions/r0.11/api_docs/python/array_ops.html#reshape\nand the op is correctly registered:\nhttps://github.com/tensorflow/tensorflow/blob/r0.11/tensorflow/core/ops/array_ops.cc#L1155\nHowever, unless I'm missing something it looks like the implementation of the OpKernel assumes that the sizes are int32:\nhttps://github.com/tensorflow/tensorflow/blob/r0.11/tensorflow/core/kernels/reshape_op.h#L48\nThis seems to have been the case for a long time!\nAs a workaround, you could simple use int32 shapes, but either the documentation or implementation should probably be fixed.", "body": "Thanks for reporting the issue. It looks from your report that this is a runtime failure, rather than a Python exception.\r\n\r\nThe docs for `tf.reshape` state that the new shape is allowed to be int32 or int64:\r\nhttps://www.tensorflow.org/versions/r0.11/api_docs/python/array_ops.html#reshape\r\nand the op is correctly registered:\r\nhttps://github.com/tensorflow/tensorflow/blob/r0.11/tensorflow/core/ops/array_ops.cc#L1155\r\n\r\nHowever, unless I'm missing something it looks like the implementation of the OpKernel assumes that the `sizes` are `int32`:\r\nhttps://github.com/tensorflow/tensorflow/blob/r0.11/tensorflow/core/kernels/reshape_op.h#L48\r\n\r\nThis seems to have been the case for a *long* time!  \r\n\r\nAs a workaround, you could simple use int32 shapes, but either the documentation or implementation should probably be fixed.\r\n"}