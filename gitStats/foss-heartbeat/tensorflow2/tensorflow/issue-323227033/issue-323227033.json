{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19292", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19292/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19292/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19292/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19292", "id": 323227033, "node_id": "MDU6SXNzdWUzMjMyMjcwMzM=", "number": 19292, "title": "tf.layers.Layer does not preserver the keras metadata entered into a tensor/placeholder", "user": {"login": "kirk86", "id": 2902390, "node_id": "MDQ6VXNlcjI5MDIzOTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/2902390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirk86", "html_url": "https://github.com/kirk86", "followers_url": "https://api.github.com/users/kirk86/followers", "following_url": "https://api.github.com/users/kirk86/following{/other_user}", "gists_url": "https://api.github.com/users/kirk86/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirk86/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirk86/subscriptions", "organizations_url": "https://api.github.com/users/kirk86/orgs", "repos_url": "https://api.github.com/users/kirk86/repos", "events_url": "https://api.github.com/users/kirk86/events{/privacy}", "received_events_url": "https://api.github.com/users/kirk86/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "bignamehyp", "id": 3474655, "node_id": "MDQ6VXNlcjM0NzQ2NTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3474655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bignamehyp", "html_url": "https://github.com/bignamehyp", "followers_url": "https://api.github.com/users/bignamehyp/followers", "following_url": "https://api.github.com/users/bignamehyp/following{/other_user}", "gists_url": "https://api.github.com/users/bignamehyp/gists{/gist_id}", "starred_url": "https://api.github.com/users/bignamehyp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bignamehyp/subscriptions", "organizations_url": "https://api.github.com/users/bignamehyp/orgs", "repos_url": "https://api.github.com/users/bignamehyp/repos", "events_url": "https://api.github.com/users/bignamehyp/events{/privacy}", "received_events_url": "https://api.github.com/users/bignamehyp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bignamehyp", "id": 3474655, "node_id": "MDQ6VXNlcjM0NzQ2NTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3474655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bignamehyp", "html_url": "https://github.com/bignamehyp", "followers_url": "https://api.github.com/users/bignamehyp/followers", "following_url": "https://api.github.com/users/bignamehyp/following{/other_user}", "gists_url": "https://api.github.com/users/bignamehyp/gists{/gist_id}", "starred_url": "https://api.github.com/users/bignamehyp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bignamehyp/subscriptions", "organizations_url": "https://api.github.com/users/bignamehyp/orgs", "repos_url": "https://api.github.com/users/bignamehyp/repos", "events_url": "https://api.github.com/users/bignamehyp/events{/privacy}", "received_events_url": "https://api.github.com/users/bignamehyp/received_events", "type": "User", "site_admin": false}, {"login": "pavithrasv", "id": 13326758, "node_id": "MDQ6VXNlcjEzMzI2NzU4", "avatar_url": "https://avatars0.githubusercontent.com/u/13326758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pavithrasv", "html_url": "https://github.com/pavithrasv", "followers_url": "https://api.github.com/users/pavithrasv/followers", "following_url": "https://api.github.com/users/pavithrasv/following{/other_user}", "gists_url": "https://api.github.com/users/pavithrasv/gists{/gist_id}", "starred_url": "https://api.github.com/users/pavithrasv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pavithrasv/subscriptions", "organizations_url": "https://api.github.com/users/pavithrasv/orgs", "repos_url": "https://api.github.com/users/pavithrasv/repos", "events_url": "https://api.github.com/users/pavithrasv/events{/privacy}", "received_events_url": "https://api.github.com/users/pavithrasv/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2018-05-15T13:50:27Z", "updated_at": "2018-06-21T17:16:23Z", "closed_at": "2018-06-21T17:16:23Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: source</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.8.0-rc1</li>\n<li><strong>Python version</strong>:  3.6</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.12.0</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: 5.4.1</li>\n<li><strong>CUDA/cuDNN version</strong>: 7.1</li>\n<li><strong>GPU model and memory</strong>: 1080Ti</li>\n<li><strong>Exact command to reproduce</strong>:  Any command like <code>tf.keras.layers.TimeDistributed(tf.layers.Conv2D(64, 3, padding='valid', activation=tf.nn.relu)(x))</code> where <code>x</code> is any tensor that has keras metadata like <code>_keras_shape</code> and/or <code>_keras_history</code>,</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>wrapping any tensor which contains keras metadata such as <code>_keras_shape</code> or <code>_keras_histroy</code> with <code>tf.layers.Layer</code> or passing it through <code>tf.layers.Conv2D</code> does not preserve the keras metadata instead it discards them. In addition the <code>tf.layers.Layer</code> does not implement any <code>_add_inbound_node</code> method which is really confusing and leads to many errors with shape mismatches.</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 16.04\nTensorFlow installed from (source or binary): source\nTensorFlow version (use command below): 1.8.0-rc1\nPython version:  3.6\nBazel version (if compiling from source): 0.12.0\nGCC/Compiler version (if compiling from source): 5.4.1\nCUDA/cuDNN version: 7.1\nGPU model and memory: 1080Ti\nExact command to reproduce:  Any command like tf.keras.layers.TimeDistributed(tf.layers.Conv2D(64, 3, padding='valid', activation=tf.nn.relu)(x)) where x is any tensor that has keras metadata like _keras_shape and/or _keras_history,\n\nDescribe the problem\nwrapping any tensor which contains keras metadata such as _keras_shape or _keras_histroy with tf.layers.Layer or passing it through tf.layers.Conv2D does not preserve the keras metadata instead it discards them. In addition the tf.layers.Layer does not implement any _add_inbound_node method which is really confusing and leads to many errors with shape mismatches.", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: 1.8.0-rc1\r\n- **Python version**:  3.6\r\n- **Bazel version (if compiling from source)**: 0.12.0\r\n- **GCC/Compiler version (if compiling from source)**: 5.4.1\r\n- **CUDA/cuDNN version**: 7.1\r\n- **GPU model and memory**: 1080Ti\r\n- **Exact command to reproduce**:  Any command like `tf.keras.layers.TimeDistributed(tf.layers.Conv2D(64, 3, padding='valid', activation=tf.nn.relu)(x))` where `x` is any tensor that has keras metadata like `_keras_shape` and/or `_keras_history`,\r\n\r\n### Describe the problem\r\n wrapping any tensor which contains keras metadata such as `_keras_shape` or `_keras_histroy` with `tf.layers.Layer` or passing it through `tf.layers.Conv2D` does not preserve the keras metadata instead it discards them. In addition the `tf.layers.Layer` does not implement any `_add_inbound_node` method which is really confusing and leads to many errors with shape mismatches.\r\n"}