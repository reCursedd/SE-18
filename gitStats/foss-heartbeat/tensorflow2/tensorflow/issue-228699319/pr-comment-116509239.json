{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/116509239", "pull_request_review_id": 38135945, "id": 116509239, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNjUwOTIzOQ==", "diff_hunk": "@@ -730,6 +766,38 @@ TEST_F(LiteralUtilTest, CopyScalars) {\n   EXPECT_EQ(LiteralUtil::Get<uint32>(*vect, {4}), 17);\n }\n \n+TEST_F(LiteralUtilTest, F16) {\n+  auto m1 = LiteralUtil::CreateFromShape(ShapeUtil::MakeShape(F16, {2, 2}));\n+  Literal* l1 = m1.get();\n+  const char* d1 = (const char*)LiteralUtil::InternalData(*l1);\n+  EXPECT_EQ(d1[0], 0);\n+  EXPECT_EQ(d1[1], 0);\n+  EXPECT_EQ(d1[2], 0);\n+  EXPECT_EQ(d1[3], 0);\n+  EXPECT_EQ(d1[4], 0);\n+  EXPECT_EQ(d1[5], 0);\n+  EXPECT_EQ(d1[6], 0);\n+  EXPECT_EQ(d1[7], 0);\n+  EXPECT_EQ(LiteralUtil::InternalData(*l1),\n+            LiteralUtil::MutableInternalData(l1));\n+\n+  half h1 = (half)1.0f;\n+  half h2 = (half)2.0f;\n+  auto m2 = LiteralUtil::CreateR2<half>({{h1, h2}, {h2, h1}});\n+  Literal* l2 = m2.get();\n+  const char* d2 = (const char*)LiteralUtil::InternalData(*l2);\n+  EXPECT_EQ(d2[0], 0);", "path": "tensorflow/compiler/xla/literal_util_test.cc", "position": null, "original_position": 81, "commit_id": "59cf3d16d1a9b60ab09b01a458741302cc854588", "original_commit_id": "89f7f5b6745a62311f7b1d1de63f6eb05a865b53", "user": {"login": "DavidNorman", "id": 606831, "node_id": "MDQ6VXNlcjYwNjgzMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/606831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DavidNorman", "html_url": "https://github.com/DavidNorman", "followers_url": "https://api.github.com/users/DavidNorman/followers", "following_url": "https://api.github.com/users/DavidNorman/following{/other_user}", "gists_url": "https://api.github.com/users/DavidNorman/gists{/gist_id}", "starred_url": "https://api.github.com/users/DavidNorman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DavidNorman/subscriptions", "organizations_url": "https://api.github.com/users/DavidNorman/orgs", "repos_url": "https://api.github.com/users/DavidNorman/repos", "events_url": "https://api.github.com/users/DavidNorman/events{/privacy}", "received_events_url": "https://api.github.com/users/DavidNorman/received_events", "type": "User", "site_admin": false}, "body": "Just a check that getting data via the InternalData and MutableInternalData work as expected.    It does veryify the endianess, but also that there are no weird things going on with 'bytes'.  I don't trust the protobuf 'bytes' as it is implemented as a std::string, which seems like a weird container to choose when std::vector<uint8> would work.", "created_at": "2017-05-15T14:41:56Z", "updated_at": "2017-05-16T15:20:42Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/9913#discussion_r116509239", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/9913", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/116509239"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/9913#discussion_r116509239"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/9913"}}, "body_html": "<p>Just a check that getting data via the InternalData and MutableInternalData work as expected.    It does veryify the endianess, but also that there are no weird things going on with 'bytes'.  I don't trust the protobuf 'bytes' as it is implemented as a std::string, which seems like a weird container to choose when std::vector would work.</p>", "body_text": "Just a check that getting data via the InternalData and MutableInternalData work as expected.    It does veryify the endianess, but also that there are no weird things going on with 'bytes'.  I don't trust the protobuf 'bytes' as it is implemented as a std::string, which seems like a weird container to choose when std::vector would work.", "in_reply_to_id": 116498121}