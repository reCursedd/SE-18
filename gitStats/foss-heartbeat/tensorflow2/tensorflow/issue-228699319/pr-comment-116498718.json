{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/116498718", "pull_request_review_id": 38109529, "id": 116498718, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNjQ5ODcxOA==", "diff_hunk": "@@ -917,6 +933,16 @@ LiteralUtil::GetMutableArraySlice(Literal* literal) {\n }\n \n template <>\n+/* static */ tensorflow::gtl::MutableArraySlice<half>", "path": "tensorflow/compiler/xla/literal_util.cc", "position": 107, "original_position": 98, "commit_id": "59cf3d16d1a9b60ab09b01a458741302cc854588", "original_commit_id": "89f7f5b6745a62311f7b1d1de63f6eb05a865b53", "user": {"login": "hawkinsp", "id": 348932, "node_id": "MDQ6VXNlcjM0ODkzMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/348932?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hawkinsp", "html_url": "https://github.com/hawkinsp", "followers_url": "https://api.github.com/users/hawkinsp/followers", "following_url": "https://api.github.com/users/hawkinsp/following{/other_user}", "gists_url": "https://api.github.com/users/hawkinsp/gists{/gist_id}", "starred_url": "https://api.github.com/users/hawkinsp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hawkinsp/subscriptions", "organizations_url": "https://api.github.com/users/hawkinsp/orgs", "repos_url": "https://api.github.com/users/hawkinsp/repos", "events_url": "https://api.github.com/users/hawkinsp/events{/privacy}", "received_events_url": "https://api.github.com/users/hawkinsp/received_events", "type": "User", "site_admin": false}, "body": "It occurs to me that there is a latent endian-ness bug here. If you were to use this code on a big-endian architecture, the layout of the encoded bytes would not match the byte layout in memory.\r\n\r\nNot sure what to do here. I suspect for now, leave a // TODO: add big-endian support and move on.\r\n\r\nI suspect to fix this right, we should add logic to perform byteswapping on serialization or deserialization of a half literal.", "created_at": "2017-05-15T14:03:15Z", "updated_at": "2017-05-16T15:20:42Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/9913#discussion_r116498718", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/9913", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/116498718"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/9913#discussion_r116498718"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/9913"}}, "body_html": "<p>It occurs to me that there is a latent endian-ness bug here. If you were to use this code on a big-endian architecture, the layout of the encoded bytes would not match the byte layout in memory.</p>\n<p>Not sure what to do here. I suspect for now, leave a // TODO: add big-endian support and move on.</p>\n<p>I suspect to fix this right, we should add logic to perform byteswapping on serialization or deserialization of a half literal.</p>", "body_text": "It occurs to me that there is a latent endian-ness bug here. If you were to use this code on a big-endian architecture, the layout of the encoded bytes would not match the byte layout in memory.\nNot sure what to do here. I suspect for now, leave a // TODO: add big-endian support and move on.\nI suspect to fix this right, we should add logic to perform byteswapping on serialization or deserialization of a half literal."}