{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2013", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2013/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2013/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2013/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/2013", "id": 149336761, "node_id": "MDU6SXNzdWUxNDkzMzY3NjE=", "number": 2013, "title": "Question:How does Tensorflow deal with numpy.nan values?", "user": {"login": "zhang8473", "id": 5016962, "node_id": "MDQ6VXNlcjUwMTY5NjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/5016962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhang8473", "html_url": "https://github.com/zhang8473", "followers_url": "https://api.github.com/users/zhang8473/followers", "following_url": "https://api.github.com/users/zhang8473/following{/other_user}", "gists_url": "https://api.github.com/users/zhang8473/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhang8473/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhang8473/subscriptions", "organizations_url": "https://api.github.com/users/zhang8473/orgs", "repos_url": "https://api.github.com/users/zhang8473/repos", "events_url": "https://api.github.com/users/zhang8473/events{/privacy}", "received_events_url": "https://api.github.com/users/zhang8473/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-04-19T03:20:19Z", "updated_at": "2016-04-19T16:02:45Z", "closed_at": "2016-04-19T16:02:01Z", "author_association": "NONE", "body_html": "<ol>\n<li>raise error</li>\n<li>treat them as empty: I would say this is the proper way but the developers have to some math works to let the codes work</li>\n<li>treat them as zero</li>\n</ol>", "body_text": "raise error\ntreat them as empty: I would say this is the proper way but the developers have to some math works to let the codes work\ntreat them as zero", "body": "1. raise error\n2. treat them as empty: I would say this is the proper way but the developers have to some math works to let the codes work\n3. treat them as zero\n"}