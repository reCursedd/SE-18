{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/282898525", "html_url": "https://github.com/tensorflow/tensorflow/issues/6381#issuecomment-282898525", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6381", "id": 282898525, "node_id": "MDEyOklzc3VlQ29tbWVudDI4Mjg5ODUyNQ==", "user": {"login": "saeta", "id": 1284535, "node_id": "MDQ6VXNlcjEyODQ1MzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1284535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saeta", "html_url": "https://github.com/saeta", "followers_url": "https://api.github.com/users/saeta/followers", "following_url": "https://api.github.com/users/saeta/following{/other_user}", "gists_url": "https://api.github.com/users/saeta/gists{/gist_id}", "starred_url": "https://api.github.com/users/saeta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saeta/subscriptions", "organizations_url": "https://api.github.com/users/saeta/orgs", "repos_url": "https://api.github.com/users/saeta/repos", "events_url": "https://api.github.com/users/saeta/events{/privacy}", "received_events_url": "https://api.github.com/users/saeta/received_events", "type": "User", "site_admin": false}, "created_at": "2017-02-28T00:04:59Z", "updated_at": "2017-02-28T00:04:59Z", "author_association": "MEMBER", "body_html": "<p>Hi <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13065978\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/dancing80s\">@dancing80s</a> . Currently TensorFlow assumes a cluster is a fixed size and shape. I'm working on a change that does the following:</p>\n<ol>\n<li>Worker nodes can boot up without needing to know the whole cluster shape.</li>\n<li>A cluster shape (i.e. list of nodes) is tied to a session (instead of being process-wide).</li>\n<li>A client can specify the cluster shape at session creation time.</li>\n</ol>\n<p>So what this would look like is a tensorflow worker binary can be launched on all nodes in the cluster (e.g. <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/distributed_runtime/rpc/grpc_tensorflow_server.cc\">grpc_tensorflow_server.cc</a>, just with no required command-line arguments). Then, a client (e.g. python script) can come along and decide to use a subset of the nodes, and create a session referencing that subset, run its computation on it, and simultaneously, another client can be running its own computation on a separate subset in a different session.</p>\n<p>One thing to note: my work will not make it possible to change the cluster shape within a session. You'll have to manage that client side by creating new sessions under the hood, and copying data (e.g. training parameters) across.</p>\n<p>Hope that helps!</p>", "body_text": "Hi @dancing80s . Currently TensorFlow assumes a cluster is a fixed size and shape. I'm working on a change that does the following:\n\nWorker nodes can boot up without needing to know the whole cluster shape.\nA cluster shape (i.e. list of nodes) is tied to a session (instead of being process-wide).\nA client can specify the cluster shape at session creation time.\n\nSo what this would look like is a tensorflow worker binary can be launched on all nodes in the cluster (e.g. grpc_tensorflow_server.cc, just with no required command-line arguments). Then, a client (e.g. python script) can come along and decide to use a subset of the nodes, and create a session referencing that subset, run its computation on it, and simultaneously, another client can be running its own computation on a separate subset in a different session.\nOne thing to note: my work will not make it possible to change the cluster shape within a session. You'll have to manage that client side by creating new sessions under the hood, and copying data (e.g. training parameters) across.\nHope that helps!", "body": "Hi @dancing80s . Currently TensorFlow assumes a cluster is a fixed size and shape. I'm working on a change that does the following:\r\n\r\n 1. Worker nodes can boot up without needing to know the whole cluster shape.\r\n 2. A cluster shape (i.e. list of nodes) is tied to a session (instead of being process-wide).\r\n 3. A client can specify the cluster shape at session creation time.\r\n\r\nSo what this would look like is a tensorflow worker binary can be launched on all nodes in the cluster (e.g. [grpc_tensorflow_server.cc](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/distributed_runtime/rpc/grpc_tensorflow_server.cc), just with no required command-line arguments). Then, a client (e.g. python script) can come along and decide to use a subset of the nodes, and create a session referencing that subset, run its computation on it, and simultaneously, another client can be running its own computation on a separate subset in a different session.\r\n\r\nOne thing to note: my work will not make it possible to change the cluster shape within a session. You'll have to manage that client side by creating new sessions under the hood, and copying data (e.g. training parameters) across.\r\n\r\nHope that helps!"}