{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22080", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22080/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22080/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22080/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/22080", "id": 357093776, "node_id": "MDU6SXNzdWUzNTcwOTM3NzY=", "number": 22080, "title": "The performance of FusedBatchNormGradGrad is very low", "user": {"login": "mpjlu", "id": 13826327, "node_id": "MDQ6VXNlcjEzODI2MzI3", "avatar_url": "https://avatars1.githubusercontent.com/u/13826327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpjlu", "html_url": "https://github.com/mpjlu", "followers_url": "https://api.github.com/users/mpjlu/followers", "following_url": "https://api.github.com/users/mpjlu/following{/other_user}", "gists_url": "https://api.github.com/users/mpjlu/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpjlu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpjlu/subscriptions", "organizations_url": "https://api.github.com/users/mpjlu/orgs", "repos_url": "https://api.github.com/users/mpjlu/repos", "events_url": "https://api.github.com/users/mpjlu/events{/privacy}", "received_events_url": "https://api.github.com/users/mpjlu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "joel-shor", "id": 6020988, "node_id": "MDQ6VXNlcjYwMjA5ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/6020988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joel-shor", "html_url": "https://github.com/joel-shor", "followers_url": "https://api.github.com/users/joel-shor/followers", "following_url": "https://api.github.com/users/joel-shor/following{/other_user}", "gists_url": "https://api.github.com/users/joel-shor/gists{/gist_id}", "starred_url": "https://api.github.com/users/joel-shor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joel-shor/subscriptions", "organizations_url": "https://api.github.com/users/joel-shor/orgs", "repos_url": "https://api.github.com/users/joel-shor/repos", "events_url": "https://api.github.com/users/joel-shor/events{/privacy}", "received_events_url": "https://api.github.com/users/joel-shor/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "joel-shor", "id": 6020988, "node_id": "MDQ6VXNlcjYwMjA5ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/6020988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joel-shor", "html_url": "https://github.com/joel-shor", "followers_url": "https://api.github.com/users/joel-shor/followers", "following_url": "https://api.github.com/users/joel-shor/following{/other_user}", "gists_url": "https://api.github.com/users/joel-shor/gists{/gist_id}", "starred_url": "https://api.github.com/users/joel-shor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joel-shor/subscriptions", "organizations_url": "https://api.github.com/users/joel-shor/orgs", "repos_url": "https://api.github.com/users/joel-shor/repos", "events_url": "https://api.github.com/users/joel-shor/events{/privacy}", "received_events_url": "https://api.github.com/users/joel-shor/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2018-09-05T07:10:30Z", "updated_at": "2018-11-20T13:30:45Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>When I test the performance of GAN model (<a href=\"https://github.com/tensorflow/models/tree/master/research/gan\">https://github.com/tensorflow/models/tree/master/research/gan</a>), I find to use FusedBatchNorm can boost the performance by 20% to 30% (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"355476026\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/models/issues/5206\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/models/issues/5206/hovercard\" href=\"https://github.com/tensorflow/models/issues/5206\">tensorflow/models#5206</a>).</p>\n<p>However, when use gan_loss with gradient_penalty, there is no performance improvement with FusedBatchNorm.  I find the root cause is FusedBatchNormGradGrad is very low performance.</p>\n<p>I propose to set fused_batch_norm to false on (<a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/gan/python/losses/python/losses_impl.py#L367\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/gan/python/losses/python/losses_impl.py#L367</a>) to use BatchNormGradGrad to replace FusedBatchNormGradGrad. There is about 20% performance improvement with this change.<br>\nChange<br>\n<code>disc_interpolates = discriminator_fn(interpolates, generator_inputs)</code><br>\nto<br>\n<code>disc_interpolates = discriminator_fn(interpolates, generator_inputs, fused_batch_norm=false)</code></p>", "body_text": "When I test the performance of GAN model (https://github.com/tensorflow/models/tree/master/research/gan), I find to use FusedBatchNorm can boost the performance by 20% to 30% (tensorflow/models#5206).\nHowever, when use gan_loss with gradient_penalty, there is no performance improvement with FusedBatchNorm.  I find the root cause is FusedBatchNormGradGrad is very low performance.\nI propose to set fused_batch_norm to false on (https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/gan/python/losses/python/losses_impl.py#L367) to use BatchNormGradGrad to replace FusedBatchNormGradGrad. There is about 20% performance improvement with this change.\nChange\ndisc_interpolates = discriminator_fn(interpolates, generator_inputs)\nto\ndisc_interpolates = discriminator_fn(interpolates, generator_inputs, fused_batch_norm=false)", "body": "When I test the performance of GAN model (https://github.com/tensorflow/models/tree/master/research/gan), I find to use FusedBatchNorm can boost the performance by 20% to 30% (https://github.com/tensorflow/models/issues/5206).\r\n\r\nHowever, when use gan_loss with gradient_penalty, there is no performance improvement with FusedBatchNorm.  I find the root cause is FusedBatchNormGradGrad is very low performance.\r\n\r\nI propose to set fused_batch_norm to false on (https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/gan/python/losses/python/losses_impl.py#L367) to use BatchNormGradGrad to replace FusedBatchNormGradGrad. There is about 20% performance improvement with this change. \r\nChange\r\n`disc_interpolates = discriminator_fn(interpolates, generator_inputs)`\r\nto \r\n`disc_interpolates = discriminator_fn(interpolates, generator_inputs, fused_batch_norm=false)`\r\n   \r\n"}