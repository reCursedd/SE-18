{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17336", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17336/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17336/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17336/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17336", "id": 301220741, "node_id": "MDU6SXNzdWUzMDEyMjA3NDE=", "number": 17336, "title": "Feature Request: Axis support for scatter update", "user": {"login": "is8ac", "id": 8010041, "node_id": "MDQ6VXNlcjgwMTAwNDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/8010041?v=4", "gravatar_id": "", "url": "https://api.github.com/users/is8ac", "html_url": "https://github.com/is8ac", "followers_url": "https://api.github.com/users/is8ac/followers", "following_url": "https://api.github.com/users/is8ac/following{/other_user}", "gists_url": "https://api.github.com/users/is8ac/gists{/gist_id}", "starred_url": "https://api.github.com/users/is8ac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/is8ac/subscriptions", "organizations_url": "https://api.github.com/users/is8ac/orgs", "repos_url": "https://api.github.com/users/is8ac/repos", "events_url": "https://api.github.com/users/is8ac/events{/privacy}", "received_events_url": "https://api.github.com/users/is8ac/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-02-28T23:15:23Z", "updated_at": "2018-03-23T21:06:19Z", "closed_at": "2018-03-23T21:06:19Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Arch Linux</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: source</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.6.0</li>\n<li><strong>Python version</strong>: N/A (applicable to both Python and Go bindings)</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.10.1</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: 7.3.0</li>\n<li><strong>CUDA/cuDNN version</strong>: N/A (CPU only)</li>\n<li><strong>GPU model and memory</strong>: N/A</li>\n<li><strong>Exact command to reproduce</strong>: See below</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>GatherV2 allows one to specify axis. ResourceScatterUpdate however does not.</p>\n<p>Use case: Consider a variable of shape <code>[2, 3, 5]</code>. It may be useful to update the first dimension with data of shape <code>[2]</code> at indices specified in the last two dimensions. AFAICT, it is not possible to do this with the current ResourceScatterNdUpdate or ResourceScatterUpdate operations. Using a variable with transposed dimensions such as <code>[3, 5, 2]</code> is a potential workaround, but is inelegant and would require that it be wrapped in transpose operations.</p>\n<p>Can this be achieved using existing operations, and if not, is it worth create a new operation or extending an existing operation to supports it?</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Arch Linux\nTensorFlow installed from (source or binary): source\nTensorFlow version (use command below): 1.6.0\nPython version: N/A (applicable to both Python and Go bindings)\nBazel version (if compiling from source): 0.10.1\nGCC/Compiler version (if compiling from source): 7.3.0\nCUDA/cuDNN version: N/A (CPU only)\nGPU model and memory: N/A\nExact command to reproduce: See below\n\nDescribe the problem\nGatherV2 allows one to specify axis. ResourceScatterUpdate however does not.\nUse case: Consider a variable of shape [2, 3, 5]. It may be useful to update the first dimension with data of shape [2] at indices specified in the last two dimensions. AFAICT, it is not possible to do this with the current ResourceScatterNdUpdate or ResourceScatterUpdate operations. Using a variable with transposed dimensions such as [3, 5, 2] is a potential workaround, but is inelegant and would require that it be wrapped in transpose operations.\nCan this be achieved using existing operations, and if not, is it worth create a new operation or extending an existing operation to supports it?", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Arch Linux\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: 1.6.0\r\n- **Python version**: N/A (applicable to both Python and Go bindings)\r\n- **Bazel version (if compiling from source)**: 0.10.1\r\n- **GCC/Compiler version (if compiling from source)**: 7.3.0\r\n- **CUDA/cuDNN version**: N/A (CPU only)\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: See below\r\n\r\n### Describe the problem\r\nGatherV2 allows one to specify axis. ResourceScatterUpdate however does not.\r\n\r\nUse case: Consider a variable of shape `[2, 3, 5]`. It may be useful to update the first dimension with data of shape `[2]` at indices specified in the last two dimensions. AFAICT, it is not possible to do this with the current ResourceScatterNdUpdate or ResourceScatterUpdate operations. Using a variable with transposed dimensions such as `[3, 5, 2]` is a potential workaround, but is inelegant and would require that it be wrapped in transpose operations.\r\n\r\nCan this be achieved using existing operations, and if not, is it worth create a new operation or extending an existing operation to supports it?\r\n"}