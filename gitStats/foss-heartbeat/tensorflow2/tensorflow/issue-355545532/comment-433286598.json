{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/433286598", "html_url": "https://github.com/tensorflow/tensorflow/issues/21974#issuecomment-433286598", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21974", "id": 433286598, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzI4NjU5OA==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-26T04:58:17Z", "updated_at": "2018-10-26T04:58:17Z", "author_association": "CONTRIBUTOR", "body_html": "<p>There are a couple of other possible approaches, though without understanding your application it's hard to say what would work better:</p>\n<ol>\n<li>Use one of the stateless RNG ops in <a href=\"https://www.tensorflow.org/api_docs/python/tf/contrib/stateless\" rel=\"nofollow\"><code>tf.contrib.stateless</code></a>.</li>\n<li>Use <a href=\"https://www.tensorflow.org/api_docs/python/tf/contrib/data/RandomDataset\" rel=\"nofollow\"><code>tf.data.experimental.RandomDataset</code></a>. It generates random <code>int64</code> values, and you could use it together with <code>tf.contrib.stateless</code> to generate numbers in a distribution of your choice. See the <a href=\"https://github.com/tensorflow/tensorflow/blob/030f7828c9cfcef0c875d60198db57d0cd94f214/tensorflow/python/data/experimental/ops/interleave_ops.py#L187-L195\">implementation</a> of <code>tf.data.experimental.sample_from_datasets()</code> for an example of how to use it.</li>\n</ol>", "body_text": "There are a couple of other possible approaches, though without understanding your application it's hard to say what would work better:\n\nUse one of the stateless RNG ops in tf.contrib.stateless.\nUse tf.data.experimental.RandomDataset. It generates random int64 values, and you could use it together with tf.contrib.stateless to generate numbers in a distribution of your choice. See the implementation of tf.data.experimental.sample_from_datasets() for an example of how to use it.", "body": "There are a couple of other possible approaches, though without understanding your application it's hard to say what would work better:\r\n\r\n1. Use one of the stateless RNG ops in [`tf.contrib.stateless`](https://www.tensorflow.org/api_docs/python/tf/contrib/stateless).\r\n2. Use [`tf.data.experimental.RandomDataset`](https://www.tensorflow.org/api_docs/python/tf/contrib/data/RandomDataset). It generates random `int64` values, and you could use it together with `tf.contrib.stateless` to generate numbers in a distribution of your choice. See the [implementation](https://github.com/tensorflow/tensorflow/blob/030f7828c9cfcef0c875d60198db57d0cd94f214/tensorflow/python/data/experimental/ops/interleave_ops.py#L187-L195) of `tf.data.experimental.sample_from_datasets()` for an example of how to use it."}