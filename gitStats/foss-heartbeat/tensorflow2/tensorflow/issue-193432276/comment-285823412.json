{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/285823412", "html_url": "https://github.com/tensorflow/tensorflow/issues/6081#issuecomment-285823412", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6081", "id": 285823412, "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTgyMzQxMg==", "user": {"login": "StanislawAntol", "id": 1846231, "node_id": "MDQ6VXNlcjE4NDYyMzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1846231?v=4", "gravatar_id": "", "url": "https://api.github.com/users/StanislawAntol", "html_url": "https://github.com/StanislawAntol", "followers_url": "https://api.github.com/users/StanislawAntol/followers", "following_url": "https://api.github.com/users/StanislawAntol/following{/other_user}", "gists_url": "https://api.github.com/users/StanislawAntol/gists{/gist_id}", "starred_url": "https://api.github.com/users/StanislawAntol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/StanislawAntol/subscriptions", "organizations_url": "https://api.github.com/users/StanislawAntol/orgs", "repos_url": "https://api.github.com/users/StanislawAntol/repos", "events_url": "https://api.github.com/users/StanislawAntol/events{/privacy}", "received_events_url": "https://api.github.com/users/StanislawAntol/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-11T00:42:35Z", "updated_at": "2017-03-11T00:42:35Z", "author_association": "CONTRIBUTOR", "body_html": "<p>In your initial post, you're confusing the logging output with the actual value of global_step. In your follow-up code, you're not taking advantage of the MonitoredTrainingSession's restoring of variables. I think you can get away with this:</p>\n<pre><code>ckpt = tf.train.get_checkpoint_state(FLAGS.train_dir)\nglobal_step_init = -1\n# The correct value will be assigned with the restore.\n# The global step variable used by the optimizer (in cifar10.train()) \n# and I assume by whatever is using the Saver object (and more?).\nglobal_step = tf.contrib.framework.get_or_create_global_step()\nif ckpt and ckpt.model_checkpoint_path:\n        # This is only for the logger (e.g., it is not responsible for saving).\n        global_step_init = int(ckpt.model_checkpoint_path.split('/')[-1].split('-')[-1])\ntrainable=False)\n</code></pre>", "body_text": "In your initial post, you're confusing the logging output with the actual value of global_step. In your follow-up code, you're not taking advantage of the MonitoredTrainingSession's restoring of variables. I think you can get away with this:\nckpt = tf.train.get_checkpoint_state(FLAGS.train_dir)\nglobal_step_init = -1\n# The correct value will be assigned with the restore.\n# The global step variable used by the optimizer (in cifar10.train()) \n# and I assume by whatever is using the Saver object (and more?).\nglobal_step = tf.contrib.framework.get_or_create_global_step()\nif ckpt and ckpt.model_checkpoint_path:\n        # This is only for the logger (e.g., it is not responsible for saving).\n        global_step_init = int(ckpt.model_checkpoint_path.split('/')[-1].split('-')[-1])\ntrainable=False)", "body": "In your initial post, you're confusing the logging output with the actual value of global_step. In your follow-up code, you're not taking advantage of the MonitoredTrainingSession's restoring of variables. I think you can get away with this:\r\n\r\n```\r\nckpt = tf.train.get_checkpoint_state(FLAGS.train_dir)\r\nglobal_step_init = -1\r\n# The correct value will be assigned with the restore.\r\n# The global step variable used by the optimizer (in cifar10.train()) \r\n# and I assume by whatever is using the Saver object (and more?).\r\nglobal_step = tf.contrib.framework.get_or_create_global_step()\r\nif ckpt and ckpt.model_checkpoint_path:\r\n        # This is only for the logger (e.g., it is not responsible for saving).\r\n        global_step_init = int(ckpt.model_checkpoint_path.split('/')[-1].split('-')[-1])\r\ntrainable=False)\r\n```"}