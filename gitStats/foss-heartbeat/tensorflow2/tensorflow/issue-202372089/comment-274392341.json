{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/274392341", "html_url": "https://github.com/tensorflow/tensorflow/issues/7005#issuecomment-274392341", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7005", "id": 274392341, "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDM5MjM0MQ==", "user": {"login": "SunnerLi", "id": 11500871, "node_id": "MDQ6VXNlcjExNTAwODcx", "avatar_url": "https://avatars0.githubusercontent.com/u/11500871?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SunnerLi", "html_url": "https://github.com/SunnerLi", "followers_url": "https://api.github.com/users/SunnerLi/followers", "following_url": "https://api.github.com/users/SunnerLi/following{/other_user}", "gists_url": "https://api.github.com/users/SunnerLi/gists{/gist_id}", "starred_url": "https://api.github.com/users/SunnerLi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SunnerLi/subscriptions", "organizations_url": "https://api.github.com/users/SunnerLi/orgs", "repos_url": "https://api.github.com/users/SunnerLi/repos", "events_url": "https://api.github.com/users/SunnerLi/events{/privacy}", "received_events_url": "https://api.github.com/users/SunnerLi/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-23T03:35:46Z", "updated_at": "2017-01-23T03:36:29Z", "author_association": "NONE", "body_html": "<p>I found the solution at last.<br>\nThe following show the revised code:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\nmax_length <span class=\"pl-k\">=</span> <span class=\"pl-c1\">82</span>\nframe_size <span class=\"pl-k\">=</span> <span class=\"pl-c1\">2</span>\nnum_hidden <span class=\"pl-k\">=</span> <span class=\"pl-c1\">64</span>\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">length</span>(<span class=\"pl-smi\">sequence</span>):\n    used <span class=\"pl-k\">=</span> tf.sign(tf.reduce_max(tf.abs(sequence), <span class=\"pl-v\">reduction_indices</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">2</span>))\n    length <span class=\"pl-k\">=</span> tf.reduce_sum(used, <span class=\"pl-v\">reduction_indices</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>)\n    <span class=\"pl-k\">return</span> length\n\n_input <span class=\"pl-k\">=</span> tf.placeholder(tf.float32, [<span class=\"pl-c1\">None</span>, max_length, <span class=\"pl-c1\">100</span>])\n_taggg <span class=\"pl-k\">=</span> tf.placeholder(tf.float32, [<span class=\"pl-c1\">None</span>, max_length, <span class=\"pl-c1\">2</span>])\n\noutput, state, _ <span class=\"pl-k\">=</span> tf.nn.bidirectional_rnn(\n    tf.nn.rnn_cell.MultiRNNCell([tf.nn.rnn_cell.GRUCell(num_hidden)]),\n    tf.nn.rnn_cell.MultiRNNCell([tf.nn.rnn_cell.GRUCell(num_hidden)]),\n    tf.unpack(tf.transpose(_input, <span class=\"pl-v\">perm</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">2</span>])),\n    <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.float32,\n    <span class=\"pl-v\">sequence_length</span><span class=\"pl-k\">=</span>length(_taggg),\n)</pre></div>\n<p>You should unpack the input as the list, and the list will be transfer to the sequence by tensorflow automatically.<br>\nThe last but not least, output of the function is three args.</p>", "body_text": "I found the solution at last.\nThe following show the revised code:\nimport tensorflow as tf\n\nmax_length = 82\nframe_size = 2\nnum_hidden = 64\n\ndef length(sequence):\n    used = tf.sign(tf.reduce_max(tf.abs(sequence), reduction_indices=2))\n    length = tf.reduce_sum(used, reduction_indices=1)\n    return length\n\n_input = tf.placeholder(tf.float32, [None, max_length, 100])\n_taggg = tf.placeholder(tf.float32, [None, max_length, 2])\n\noutput, state, _ = tf.nn.bidirectional_rnn(\n    tf.nn.rnn_cell.MultiRNNCell([tf.nn.rnn_cell.GRUCell(num_hidden)]),\n    tf.nn.rnn_cell.MultiRNNCell([tf.nn.rnn_cell.GRUCell(num_hidden)]),\n    tf.unpack(tf.transpose(_input, perm=[1, 0, 2])),\n    dtype=tf.float32,\n    sequence_length=length(_taggg),\n)\nYou should unpack the input as the list, and the list will be transfer to the sequence by tensorflow automatically.\nThe last but not least, output of the function is three args.", "body": "I found the solution at last.\r\nThe following show the revised code:\r\n```python\r\nimport tensorflow as tf\r\n\r\nmax_length = 82\r\nframe_size = 2\r\nnum_hidden = 64\r\n\r\ndef length(sequence):\r\n    used = tf.sign(tf.reduce_max(tf.abs(sequence), reduction_indices=2))\r\n    length = tf.reduce_sum(used, reduction_indices=1)\r\n    return length\r\n\r\n_input = tf.placeholder(tf.float32, [None, max_length, 100])\r\n_taggg = tf.placeholder(tf.float32, [None, max_length, 2])\r\n\r\noutput, state, _ = tf.nn.bidirectional_rnn(\r\n    tf.nn.rnn_cell.MultiRNNCell([tf.nn.rnn_cell.GRUCell(num_hidden)]),\r\n    tf.nn.rnn_cell.MultiRNNCell([tf.nn.rnn_cell.GRUCell(num_hidden)]),\r\n    tf.unpack(tf.transpose(_input, perm=[1, 0, 2])),\r\n    dtype=tf.float32,\r\n    sequence_length=length(_taggg),\r\n)\r\n```\r\nYou should unpack the input as the list, and the list will be transfer to the sequence by tensorflow automatically. \r\nThe last but not least, output of the function is three args. "}