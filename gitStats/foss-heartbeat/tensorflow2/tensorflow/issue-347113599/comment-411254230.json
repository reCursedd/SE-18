{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/411254230", "html_url": "https://github.com/tensorflow/tensorflow/issues/21345#issuecomment-411254230", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21345", "id": 411254230, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTI1NDIzMA==", "user": {"login": "sjain-stanford", "id": 19234106, "node_id": "MDQ6VXNlcjE5MjM0MTA2", "avatar_url": "https://avatars0.githubusercontent.com/u/19234106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjain-stanford", "html_url": "https://github.com/sjain-stanford", "followers_url": "https://api.github.com/users/sjain-stanford/followers", "following_url": "https://api.github.com/users/sjain-stanford/following{/other_user}", "gists_url": "https://api.github.com/users/sjain-stanford/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjain-stanford/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjain-stanford/subscriptions", "organizations_url": "https://api.github.com/users/sjain-stanford/orgs", "repos_url": "https://api.github.com/users/sjain-stanford/repos", "events_url": "https://api.github.com/users/sjain-stanford/events{/privacy}", "received_events_url": "https://api.github.com/users/sjain-stanford/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-08T01:29:23Z", "updated_at": "2018-08-08T01:29:23Z", "author_association": "NONE", "body_html": "<p>Thanks <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=32465472\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/angersson\">@angersson</a> for checking on this. I think this can be classified as a bug, since it is breaking the code that is supposed to otherwise run, and does run normally on an earlier version (1.7). The details from the issue template are all populated. Please try to re-create it at your end to see how this actually affects the forward compatibility of the codebase written for 1.7.</p>\n<p>As long as the code in <code>modify.py</code> looks reasonable to do (allowed by TF design), the fact that it breaks importing the graph in TF1.9 and not in TF1.7 speaks to the nature of this issue.</p>\n<p>The real issue is this:<br>\nIn earlier versions, importing a graph def had no checks for the node attributes and if they're valid. It was added in TF1.8 onwards, I believe to ensure no invalid attributes are present when importing the graph def. However it should indeed allow room for a user-attribute, which can be added through the <code>NameAttrList func</code> in the <a href=\"https://github.com/tensorflow/tensorflow/blob/25c197e02393bd44f50079945409009dd4d434f8/tensorflow/core/framework/attr_value.proto#L40-L44\">attr_value.proto</a>, which is a valid TF definition for a node attribute.</p>\n<p>Please let me know if you need help re-creating the issue at your end.</p>", "body_text": "Thanks @angersson for checking on this. I think this can be classified as a bug, since it is breaking the code that is supposed to otherwise run, and does run normally on an earlier version (1.7). The details from the issue template are all populated. Please try to re-create it at your end to see how this actually affects the forward compatibility of the codebase written for 1.7.\nAs long as the code in modify.py looks reasonable to do (allowed by TF design), the fact that it breaks importing the graph in TF1.9 and not in TF1.7 speaks to the nature of this issue.\nThe real issue is this:\nIn earlier versions, importing a graph def had no checks for the node attributes and if they're valid. It was added in TF1.8 onwards, I believe to ensure no invalid attributes are present when importing the graph def. However it should indeed allow room for a user-attribute, which can be added through the NameAttrList func in the attr_value.proto, which is a valid TF definition for a node attribute.\nPlease let me know if you need help re-creating the issue at your end.", "body": "Thanks @angersson for checking on this. I think this can be classified as a bug, since it is breaking the code that is supposed to otherwise run, and does run normally on an earlier version (1.7). The details from the issue template are all populated. Please try to re-create it at your end to see how this actually affects the forward compatibility of the codebase written for 1.7. \r\n\r\nAs long as the code in `modify.py` looks reasonable to do (allowed by TF design), the fact that it breaks importing the graph in TF1.9 and not in TF1.7 speaks to the nature of this issue.\r\n\r\nThe real issue is this: \r\nIn earlier versions, importing a graph def had no checks for the node attributes and if they're valid. It was added in TF1.8 onwards, I believe to ensure no invalid attributes are present when importing the graph def. However it should indeed allow room for a user-attribute, which can be added through the `NameAttrList func` in the [attr_value.proto](https://github.com/tensorflow/tensorflow/blob/25c197e02393bd44f50079945409009dd4d434f8/tensorflow/core/framework/attr_value.proto#L40-L44), which is a valid TF definition for a node attribute. \r\n\r\nPlease let me know if you need help re-creating the issue at your end."}