{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/312436208", "html_url": "https://github.com/tensorflow/tensorflow/issues/10950#issuecomment-312436208", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10950", "id": 312436208, "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjQzNjIwOA==", "user": {"login": "albertz", "id": 59132, "node_id": "MDQ6VXNlcjU5MTMy", "avatar_url": "https://avatars0.githubusercontent.com/u/59132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/albertz", "html_url": "https://github.com/albertz", "followers_url": "https://api.github.com/users/albertz/followers", "following_url": "https://api.github.com/users/albertz/following{/other_user}", "gists_url": "https://api.github.com/users/albertz/gists{/gist_id}", "starred_url": "https://api.github.com/users/albertz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/albertz/subscriptions", "organizations_url": "https://api.github.com/users/albertz/orgs", "repos_url": "https://api.github.com/users/albertz/repos", "events_url": "https://api.github.com/users/albertz/events{/privacy}", "received_events_url": "https://api.github.com/users/albertz/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-01T14:50:09Z", "updated_at": "2017-07-01T14:50:09Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=184424\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ali01\">@ali01</a>  Well, I wrote already the TF versions, and I wrote that I used the pip package, and this should be independent of the platform, but if it matters, I tried both Linux and MacOSX. I also posted all the code already, both the C++ part and the TF part. You can use <code>g++</code> for compiling, e.g. with the flags which I wrote. Maybe here how to load the module, if that is unclear:</p>\n<pre><code>mod = tf.load_op_library(\"TFArrayContainer.so\")\n</code></pre>\n<p>Then, as I already wrote, the computation graph:</p>\n<pre><code>handle = mod.array_container_create(T=tf.int32)\nsize = mod.array_container_get_size(handle=handle)\n</code></pre>\n<p>Then, this is how you evaluate it (given that you have a default session):</p>\n<pre><code>size.eval()\n</code></pre>\n<p>I'm not exactly sure what information is missing.</p>", "body_text": "@ali01  Well, I wrote already the TF versions, and I wrote that I used the pip package, and this should be independent of the platform, but if it matters, I tried both Linux and MacOSX. I also posted all the code already, both the C++ part and the TF part. You can use g++ for compiling, e.g. with the flags which I wrote. Maybe here how to load the module, if that is unclear:\nmod = tf.load_op_library(\"TFArrayContainer.so\")\n\nThen, as I already wrote, the computation graph:\nhandle = mod.array_container_create(T=tf.int32)\nsize = mod.array_container_get_size(handle=handle)\n\nThen, this is how you evaluate it (given that you have a default session):\nsize.eval()\n\nI'm not exactly sure what information is missing.", "body": "@ali01  Well, I wrote already the TF versions, and I wrote that I used the pip package, and this should be independent of the platform, but if it matters, I tried both Linux and MacOSX. I also posted all the code already, both the C++ part and the TF part. You can use `g++` for compiling, e.g. with the flags which I wrote. Maybe here how to load the module, if that is unclear:\r\n```\r\nmod = tf.load_op_library(\"TFArrayContainer.so\")\r\n```\r\nThen, as I already wrote, the computation graph:\r\n```\r\nhandle = mod.array_container_create(T=tf.int32)\r\nsize = mod.array_container_get_size(handle=handle)\r\n```\r\nThen, this is how you evaluate it (given that you have a default session):\r\n```\r\nsize.eval()\r\n```\r\nI'm not exactly sure what information is missing.\r\n"}