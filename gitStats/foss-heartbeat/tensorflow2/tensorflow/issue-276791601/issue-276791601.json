{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14883", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14883/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14883/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14883/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/14883", "id": 276791601, "node_id": "MDExOlB1bGxSZXF1ZXN0MTU0NjYwNDky", "number": 14883, "title": "Add uint32 and uint64 support for `bitwise_and/or/xor`", "user": {"login": "yongtang", "id": 6932348, "node_id": "MDQ6VXNlcjY5MzIzNDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/6932348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yongtang", "html_url": "https://github.com/yongtang", "followers_url": "https://api.github.com/users/yongtang/followers", "following_url": "https://api.github.com/users/yongtang/following{/other_user}", "gists_url": "https://api.github.com/users/yongtang/gists{/gist_id}", "starred_url": "https://api.github.com/users/yongtang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yongtang/subscriptions", "organizations_url": "https://api.github.com/users/yongtang/orgs", "repos_url": "https://api.github.com/users/yongtang/repos", "events_url": "https://api.github.com/users/yongtang/events{/privacy}", "received_events_url": "https://api.github.com/users/yongtang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390482148, "node_id": "MDU6TGFiZWwzOTA0ODIxNDg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/awaiting%20review", "name": "awaiting review", "color": "fef2c0", "default": false}, {"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-26T01:41:43Z", "updated_at": "2017-12-03T14:43:58Z", "closed_at": "2017-12-03T14:30:40Z", "author_association": "MEMBER", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/14883", "html_url": "https://github.com/tensorflow/tensorflow/pull/14883", "diff_url": "https://github.com/tensorflow/tensorflow/pull/14883.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/14883.patch"}, "body_html": "<p>In <code>tensorflow/core/ops/bitwise_ops.cc</code>, uint32 and uint64 have been enabled for bitwise operations <code>and/or/xor/left_shift/right_shift</code>.</p>\n<p>However, the kernels of <code>and/or/xor</code> have no support of uint32 and uint64.</p>\n<p>This is in comparision to <code>left_shift/right_shift</code> which have the uint32/uint64 support, and, is tested in <code>bitwise_ops_test.py</code>.</p>\n<p>This fix adds uint32 and uint64 to bitwise <code>and/or/xor</code> kernels.</p>\n<p>This fix also adds relevant test cases in <code>bitwise_ops_test.py</code>, to bring <code>and/or/xor</code> as <code>left_shift/right_shift</code>.</p>\n<p>Signed-off-by: Yong Tang <a href=\"mailto:yong.tang.github@outlook.com\">yong.tang.github@outlook.com</a></p>", "body_text": "In tensorflow/core/ops/bitwise_ops.cc, uint32 and uint64 have been enabled for bitwise operations and/or/xor/left_shift/right_shift.\nHowever, the kernels of and/or/xor have no support of uint32 and uint64.\nThis is in comparision to left_shift/right_shift which have the uint32/uint64 support, and, is tested in bitwise_ops_test.py.\nThis fix adds uint32 and uint64 to bitwise and/or/xor kernels.\nThis fix also adds relevant test cases in bitwise_ops_test.py, to bring and/or/xor as left_shift/right_shift.\nSigned-off-by: Yong Tang yong.tang.github@outlook.com", "body": "In `tensorflow/core/ops/bitwise_ops.cc`, uint32 and uint64 have been enabled for bitwise operations `and/or/xor/left_shift/right_shift`.\r\n\r\nHowever, the kernels of `and/or/xor` have no support of uint32 and uint64.\r\n\r\nThis is in comparision to `left_shift/right_shift` which have the uint32/uint64 support, and, is tested in `bitwise_ops_test.py`.\r\n\r\nThis fix adds uint32 and uint64 to bitwise `and/or/xor` kernels.\r\n\r\nThis fix also adds relevant test cases in `bitwise_ops_test.py`, to bring `and/or/xor` as `left_shift/right_shift`.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>"}