{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13583", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13583/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13583/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13583/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/13583", "id": 263902407, "node_id": "MDU6SXNzdWUyNjM5MDI0MDc=", "number": 13583, "title": "InvalidArgumentError : Expected image (JPEG, PNG, or GIF), got unknown format starting with '255'", "user": {"login": "engahmed1190", "id": 25582838, "node_id": "MDQ6VXNlcjI1NTgyODM4", "avatar_url": "https://avatars0.githubusercontent.com/u/25582838?v=4", "gravatar_id": "", "url": "https://api.github.com/users/engahmed1190", "html_url": "https://github.com/engahmed1190", "followers_url": "https://api.github.com/users/engahmed1190/followers", "following_url": "https://api.github.com/users/engahmed1190/following{/other_user}", "gists_url": "https://api.github.com/users/engahmed1190/gists{/gist_id}", "starred_url": "https://api.github.com/users/engahmed1190/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/engahmed1190/subscriptions", "organizations_url": "https://api.github.com/users/engahmed1190/orgs", "repos_url": "https://api.github.com/users/engahmed1190/repos", "events_url": "https://api.github.com/users/engahmed1190/events{/privacy}", "received_events_url": "https://api.github.com/users/engahmed1190/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}, {"id": 473184161, "node_id": "MDU6TGFiZWw0NzMxODQxNjE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:support", "name": "type:support", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-10-09T13:50:40Z", "updated_at": "2018-02-23T12:14:32Z", "closed_at": "2017-10-09T18:01:23Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>OS Platform and Distribution</strong>  :Linux Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from</strong>  :binary</li>\n<li><strong>TensorFlow version</strong>  :1.1.0</li>\n<li><strong>Python version</strong> : 2.7.12</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>trying to feed a model an image encoded in string as the model require that as an input string</p>\n<pre><code>signature_def {\n  key: \"serving_default\"\n  value {\n    inputs {\n      key: \"image_bytes\"\n      value {\n        name: \"Placeholder:0\"\n        dtype: DT_STRING\n        tensor_shape {\n          dim {\n            size: -1\n          }\n        }\n      }\n    }\n    inputs {\n      key: \"key\"\n      value {\n        name: \"Placeholder_1:0\"\n        dtype: DT_STRING\n        tensor_shape {\n          dim {\n            size: -1\n          }\n        }\n      }\n    }\n    outputs {\n      key: \"key\"\n      value {\n        name: \"Identity:0\"\n        dtype: DT_STRING\n        tensor_shape {\n          dim {\n            size: -1\n          }\n        }\n      }\n    }\n    outputs {\n      key: \"prediction\"\n      value {\n        name: \"ArgMax:0\"\n        dtype: DT_INT64\n        tensor_shape {\n          dim {\n            size: -1\n          }\n        }\n      }\n    }\n    outputs {\n      key: \"scores\"\n      value {\n        name: \"final_ops/softmax:0\"\n        dtype: DT_FLOAT\n        tensor_shape {\n          dim {\n            size: -1\n          }\n          dim {\n            size: 3\n          }\n        }\n      }\n    }\n    method_name: \"tensorflow/serving/predict\"\n  }\n}\n</code></pre>\n<p>Here is the code :-</p>\n<pre><code>def load_image( infilename ) :\n    img = Image.open( infilename )\n    img.load()\n    data = np.asarray( img, dtype=\"string\" )\n    return data\n\nexport_dir = '.'\nwith tf.Session(graph=tf.Graph()) as sess:\n\tmodel = tf.saved_model.loader.load(sess, ['serve'], export_dir)\n\tinput_dict, output_dict =_signature_def_to_tensors(model.signature_def['serving_default'])\n\tout = sess.run(output_dict, feed_dict={input_dict['image_bytes']: load_image(\"fullsize.jpeg\").flatten()})\n\tprint(input_dict)\n</code></pre>\n<p>Error returns  is :</p>\n<pre><code>InvalidArgumentError (see above for traceback): Expected image (JPEG, PNG, or GIF), got unknown format starting with '255'\n\t [[Node: map/while/DecodeJpeg = DecodeJpeg[acceptable_fraction=1, channels=3, dct_method=\"\", fancy_upscaling=true, ratio=1, try_recover_truncated=false, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](map/while/TensorArrayReadV3)]]\n</code></pre>\n<p>how i can solve that , any help</p>", "body_text": "System information\n\nOS Platform and Distribution  :Linux Ubuntu 16.04\nTensorFlow installed from  :binary\nTensorFlow version  :1.1.0\nPython version : 2.7.12\n\nDescribe the problem\ntrying to feed a model an image encoded in string as the model require that as an input string\nsignature_def {\n  key: \"serving_default\"\n  value {\n    inputs {\n      key: \"image_bytes\"\n      value {\n        name: \"Placeholder:0\"\n        dtype: DT_STRING\n        tensor_shape {\n          dim {\n            size: -1\n          }\n        }\n      }\n    }\n    inputs {\n      key: \"key\"\n      value {\n        name: \"Placeholder_1:0\"\n        dtype: DT_STRING\n        tensor_shape {\n          dim {\n            size: -1\n          }\n        }\n      }\n    }\n    outputs {\n      key: \"key\"\n      value {\n        name: \"Identity:0\"\n        dtype: DT_STRING\n        tensor_shape {\n          dim {\n            size: -1\n          }\n        }\n      }\n    }\n    outputs {\n      key: \"prediction\"\n      value {\n        name: \"ArgMax:0\"\n        dtype: DT_INT64\n        tensor_shape {\n          dim {\n            size: -1\n          }\n        }\n      }\n    }\n    outputs {\n      key: \"scores\"\n      value {\n        name: \"final_ops/softmax:0\"\n        dtype: DT_FLOAT\n        tensor_shape {\n          dim {\n            size: -1\n          }\n          dim {\n            size: 3\n          }\n        }\n      }\n    }\n    method_name: \"tensorflow/serving/predict\"\n  }\n}\n\nHere is the code :-\ndef load_image( infilename ) :\n    img = Image.open( infilename )\n    img.load()\n    data = np.asarray( img, dtype=\"string\" )\n    return data\n\nexport_dir = '.'\nwith tf.Session(graph=tf.Graph()) as sess:\n\tmodel = tf.saved_model.loader.load(sess, ['serve'], export_dir)\n\tinput_dict, output_dict =_signature_def_to_tensors(model.signature_def['serving_default'])\n\tout = sess.run(output_dict, feed_dict={input_dict['image_bytes']: load_image(\"fullsize.jpeg\").flatten()})\n\tprint(input_dict)\n\nError returns  is :\nInvalidArgumentError (see above for traceback): Expected image (JPEG, PNG, or GIF), got unknown format starting with '255'\n\t [[Node: map/while/DecodeJpeg = DecodeJpeg[acceptable_fraction=1, channels=3, dct_method=\"\", fancy_upscaling=true, ratio=1, try_recover_truncated=false, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](map/while/TensorArrayReadV3)]]\n\nhow i can solve that , any help", "body": "### System information\r\n-  **OS Platform and Distribution**  :Linux Ubuntu 16.04\r\n-  **TensorFlow installed from**  :binary\r\n-  **TensorFlow version**  :1.1.0\r\n-  **Python version** : 2.7.12\r\n\r\n\r\n### Describe the problem\r\ntrying to feed a model an image encoded in string as the model require that as an input string\r\n```\r\nsignature_def {\r\n  key: \"serving_default\"\r\n  value {\r\n    inputs {\r\n      key: \"image_bytes\"\r\n      value {\r\n        name: \"Placeholder:0\"\r\n        dtype: DT_STRING\r\n        tensor_shape {\r\n          dim {\r\n            size: -1\r\n          }\r\n        }\r\n      }\r\n    }\r\n    inputs {\r\n      key: \"key\"\r\n      value {\r\n        name: \"Placeholder_1:0\"\r\n        dtype: DT_STRING\r\n        tensor_shape {\r\n          dim {\r\n            size: -1\r\n          }\r\n        }\r\n      }\r\n    }\r\n    outputs {\r\n      key: \"key\"\r\n      value {\r\n        name: \"Identity:0\"\r\n        dtype: DT_STRING\r\n        tensor_shape {\r\n          dim {\r\n            size: -1\r\n          }\r\n        }\r\n      }\r\n    }\r\n    outputs {\r\n      key: \"prediction\"\r\n      value {\r\n        name: \"ArgMax:0\"\r\n        dtype: DT_INT64\r\n        tensor_shape {\r\n          dim {\r\n            size: -1\r\n          }\r\n        }\r\n      }\r\n    }\r\n    outputs {\r\n      key: \"scores\"\r\n      value {\r\n        name: \"final_ops/softmax:0\"\r\n        dtype: DT_FLOAT\r\n        tensor_shape {\r\n          dim {\r\n            size: -1\r\n          }\r\n          dim {\r\n            size: 3\r\n          }\r\n        }\r\n      }\r\n    }\r\n    method_name: \"tensorflow/serving/predict\"\r\n  }\r\n}\r\n```\r\nHere is the code :-\r\n```\r\ndef load_image( infilename ) :\r\n    img = Image.open( infilename )\r\n    img.load()\r\n    data = np.asarray( img, dtype=\"string\" )\r\n    return data\r\n\r\nexport_dir = '.'\r\nwith tf.Session(graph=tf.Graph()) as sess:\r\n\tmodel = tf.saved_model.loader.load(sess, ['serve'], export_dir)\r\n\tinput_dict, output_dict =_signature_def_to_tensors(model.signature_def['serving_default'])\r\n\tout = sess.run(output_dict, feed_dict={input_dict['image_bytes']: load_image(\"fullsize.jpeg\").flatten()})\r\n\tprint(input_dict)\r\n```\r\nError returns  is :\r\n```\r\nInvalidArgumentError (see above for traceback): Expected image (JPEG, PNG, or GIF), got unknown format starting with '255'\r\n\t [[Node: map/while/DecodeJpeg = DecodeJpeg[acceptable_fraction=1, channels=3, dct_method=\"\", fancy_upscaling=true, ratio=1, try_recover_truncated=false, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](map/while/TensorArrayReadV3)]]\r\n```\r\n\r\nhow i can solve that , any help "}