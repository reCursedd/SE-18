{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1869", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1869/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1869/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1869/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/1869", "id": 147643612, "node_id": "MDExOlB1bGxSZXF1ZXN0NjYxMDU3Mzk=", "number": 1869, "title": "Add QOL improvements for tf.one_hot()", "user": {"login": "samjabrahams", "id": 11607205, "node_id": "MDQ6VXNlcjExNjA3MjA1", "avatar_url": "https://avatars0.githubusercontent.com/u/11607205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samjabrahams", "html_url": "https://github.com/samjabrahams", "followers_url": "https://api.github.com/users/samjabrahams/followers", "following_url": "https://api.github.com/users/samjabrahams/following{/other_user}", "gists_url": "https://api.github.com/users/samjabrahams/gists{/gist_id}", "starred_url": "https://api.github.com/users/samjabrahams/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samjabrahams/subscriptions", "organizations_url": "https://api.github.com/users/samjabrahams/orgs", "repos_url": "https://api.github.com/users/samjabrahams/repos", "events_url": "https://api.github.com/users/samjabrahams/events{/privacy}", "received_events_url": "https://api.github.com/users/samjabrahams/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "girving", "id": 70511, "node_id": "MDQ6VXNlcjcwNTEx", "avatar_url": "https://avatars1.githubusercontent.com/u/70511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/girving", "html_url": "https://github.com/girving", "followers_url": "https://api.github.com/users/girving/followers", "following_url": "https://api.github.com/users/girving/following{/other_user}", "gists_url": "https://api.github.com/users/girving/gists{/gist_id}", "starred_url": "https://api.github.com/users/girving/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/girving/subscriptions", "organizations_url": "https://api.github.com/users/girving/orgs", "repos_url": "https://api.github.com/users/girving/repos", "events_url": "https://api.github.com/users/girving/events{/privacy}", "received_events_url": "https://api.github.com/users/girving/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "girving", "id": 70511, "node_id": "MDQ6VXNlcjcwNTEx", "avatar_url": "https://avatars1.githubusercontent.com/u/70511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/girving", "html_url": "https://github.com/girving", "followers_url": "https://api.github.com/users/girving/followers", "following_url": "https://api.github.com/users/girving/following{/other_user}", "gists_url": "https://api.github.com/users/girving/gists{/gist_id}", "starred_url": "https://api.github.com/users/girving/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/girving/subscriptions", "organizations_url": "https://api.github.com/users/girving/orgs", "repos_url": "https://api.github.com/users/girving/repos", "events_url": "https://api.github.com/users/girving/events{/privacy}", "received_events_url": "https://api.github.com/users/girving/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 22, "created_at": "2016-04-12T06:15:10Z", "updated_at": "2016-05-01T17:20:32Z", "closed_at": "2016-04-26T01:20:02Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/1869", "html_url": "https://github.com/tensorflow/tensorflow/pull/1869", "diff_url": "https://github.com/tensorflow/tensorflow/pull/1869.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/1869.patch"}, "body_html": "<p>This commit adds a Python wrapper for tf.one_hot(), and introduces two<br>\nmain, backwards compatible, improvements, as mentioned in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"146413719\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/1799\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/1799/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/1799\">#1799</a>:</p>\n<ol>\n<li>The parameters <code>on_value</code> and <code>off_value</code> now have default values 1 and 0<br>\nrespectively, as 32-bit integers. Because the most common use case of<br>\none_hot() is to create Tensors for one-hot encoding, it will save users<br>\nsome headache to not have to manually type in these values by hand each<br>\ntime it is used. The parameters can still be given different values as<br>\nbefore, and this does not any previous behavior.</li>\n<li><code>indices</code> and <code>depth</code> no longer have to be cast by hand as <code>int64</code> and<br>\n<code>int32</code> values, respectively. Previously, one_hot() would complain if<br>\nthese values weren't of the exact right type- it now casts the values to<br>\nthe appropriate type on its own.</li>\n</ol>\n<p>Pinging <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1794715\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ebrevdo\">@ebrevdo</a> for review.</p>", "body_text": "This commit adds a Python wrapper for tf.one_hot(), and introduces two\nmain, backwards compatible, improvements, as mentioned in #1799:\n\nThe parameters on_value and off_value now have default values 1 and 0\nrespectively, as 32-bit integers. Because the most common use case of\none_hot() is to create Tensors for one-hot encoding, it will save users\nsome headache to not have to manually type in these values by hand each\ntime it is used. The parameters can still be given different values as\nbefore, and this does not any previous behavior.\nindices and depth no longer have to be cast by hand as int64 and\nint32 values, respectively. Previously, one_hot() would complain if\nthese values weren't of the exact right type- it now casts the values to\nthe appropriate type on its own.\n\nPinging @ebrevdo for review.", "body": "This commit adds a Python wrapper for tf.one_hot(), and introduces two\nmain, backwards compatible, improvements, as mentioned in #1799:\n1. The parameters `on_value` and `off_value` now have default values 1 and 0\n   respectively, as 32-bit integers. Because the most common use case of\n   one_hot() is to create Tensors for one-hot encoding, it will save users\n   some headache to not have to manually type in these values by hand each\n   time it is used. The parameters can still be given different values as\n   before, and this does not any previous behavior.\n2. `indices` and `depth` no longer have to be cast by hand as `int64` and\n   `int32` values, respectively. Previously, one_hot() would complain if\n   these values weren't of the exact right type- it now casts the values to\n   the appropriate type on its own.\n\nPinging @ebrevdo for review.\n"}