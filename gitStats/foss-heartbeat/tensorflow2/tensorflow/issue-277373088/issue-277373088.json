{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14937", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14937/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14937/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14937/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14937", "id": 277373088, "node_id": "MDU6SXNzdWUyNzczNzMwODg=", "number": 14937, "title": "_dynamic_rnn_loop flat_output_size prevents arbitrary-shaped output tensors", "user": {"login": "RylanSchaeffer", "id": 8942987, "node_id": "MDQ6VXNlcjg5NDI5ODc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8942987?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RylanSchaeffer", "html_url": "https://github.com/RylanSchaeffer", "followers_url": "https://api.github.com/users/RylanSchaeffer/followers", "following_url": "https://api.github.com/users/RylanSchaeffer/following{/other_user}", "gists_url": "https://api.github.com/users/RylanSchaeffer/gists{/gist_id}", "starred_url": "https://api.github.com/users/RylanSchaeffer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RylanSchaeffer/subscriptions", "organizations_url": "https://api.github.com/users/RylanSchaeffer/orgs", "repos_url": "https://api.github.com/users/RylanSchaeffer/repos", "events_url": "https://api.github.com/users/RylanSchaeffer/events{/privacy}", "received_events_url": "https://api.github.com/users/RylanSchaeffer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 736653459, "node_id": "MDU6TGFiZWw3MzY2NTM0NTk=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:eager", "name": "comp:eager", "color": "0052cc", "default": false}, {"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 20, "created_at": "2017-11-28T12:50:11Z", "updated_at": "2018-02-07T15:44:44Z", "closed_at": "2018-02-07T15:44:44Z", "author_association": "NONE", "body_html": "<p>I want a custom RNN cell to output multiple tensors, each with a different shape. I can handle the logic internally, but I'm running into the issue that <code>_dynamic_rnn_loop</code> automatically constructs initial outputs using <code>flat_output_size = nest.flatten(cell.output_size)</code>. This is problematic because the flattening prevents me from specifying arbitrary-shapes for my output tensors.</p>\n<p>For concreteness, I'd like to output three tensors with shapes (batch size, a), (batch size, b), (batch size, c, d, e). However, both</p>\n<pre><code>@property\ndef output_size(self):\n    return (a, b, (c, d, e))\n</code></pre>\n<p>and</p>\n<pre><code>@property\ndef output_size(self):\n    return (a, b, c, d, e)\n</code></pre>\n<p>fail to create a third tensor with shape (batch size, 210, 160, 3). In the first case, <code>zero_output</code> is a tuple of (batch size, a), (batch_size, b), ((batch size, c), (batch size, d), and (batch size, e)). In the second case, the <code>zero_output</code> is a tuple of (batch size, a), (batch_size, b), (batch size, c), (batch size, d), and (batch size, e).</p>\n<p>I feel that RNN cell outputs should be permitted to be arbitrary shapes. I don't know if this is a desired feature or a bug.</p>\n<p>Linux Ubuntu 16.04<br>\nTensorFlow versions: ('v1.3.0-rc1-5211-gab0fcac', '1.5.0-dev20171127')</p>", "body_text": "I want a custom RNN cell to output multiple tensors, each with a different shape. I can handle the logic internally, but I'm running into the issue that _dynamic_rnn_loop automatically constructs initial outputs using flat_output_size = nest.flatten(cell.output_size). This is problematic because the flattening prevents me from specifying arbitrary-shapes for my output tensors.\nFor concreteness, I'd like to output three tensors with shapes (batch size, a), (batch size, b), (batch size, c, d, e). However, both\n@property\ndef output_size(self):\n    return (a, b, (c, d, e))\n\nand\n@property\ndef output_size(self):\n    return (a, b, c, d, e)\n\nfail to create a third tensor with shape (batch size, 210, 160, 3). In the first case, zero_output is a tuple of (batch size, a), (batch_size, b), ((batch size, c), (batch size, d), and (batch size, e)). In the second case, the zero_output is a tuple of (batch size, a), (batch_size, b), (batch size, c), (batch size, d), and (batch size, e).\nI feel that RNN cell outputs should be permitted to be arbitrary shapes. I don't know if this is a desired feature or a bug.\nLinux Ubuntu 16.04\nTensorFlow versions: ('v1.3.0-rc1-5211-gab0fcac', '1.5.0-dev20171127')", "body": "I want a custom RNN cell to output multiple tensors, each with a different shape. I can handle the logic internally, but I'm running into the issue that `_dynamic_rnn_loop` automatically constructs initial outputs using `flat_output_size = nest.flatten(cell.output_size)`. This is problematic because the flattening prevents me from specifying arbitrary-shapes for my output tensors.\r\n\r\nFor concreteness, I'd like to output three tensors with shapes (batch size, a), (batch size, b), (batch size, c, d, e). However, both\r\n\r\n    @property\r\n    def output_size(self):\r\n        return (a, b, (c, d, e))\r\n\r\nand \r\n\r\n    @property\r\n    def output_size(self):\r\n        return (a, b, c, d, e)\r\n\r\nfail to create a third tensor with shape (batch size, 210, 160, 3). In the first case, `zero_output` is a tuple of (batch size, a), (batch_size, b), ((batch size, c), (batch size, d), and (batch size, e)). In the second case, the `zero_output` is a tuple of (batch size, a), (batch_size, b), (batch size, c), (batch size, d), and (batch size, e).\r\n\r\nI feel that RNN cell outputs should be permitted to be arbitrary shapes. I don't know if this is a desired feature or a bug.\r\n\r\nLinux Ubuntu 16.04\r\nTensorFlow versions: ('v1.3.0-rc1-5211-gab0fcac', '1.5.0-dev20171127')"}