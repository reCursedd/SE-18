{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/347523432", "html_url": "https://github.com/tensorflow/tensorflow/issues/14937#issuecomment-347523432", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14937", "id": 347523432, "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzUyMzQzMg==", "user": {"login": "RylanSchaeffer", "id": 8942987, "node_id": "MDQ6VXNlcjg5NDI5ODc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8942987?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RylanSchaeffer", "html_url": "https://github.com/RylanSchaeffer", "followers_url": "https://api.github.com/users/RylanSchaeffer/followers", "following_url": "https://api.github.com/users/RylanSchaeffer/following{/other_user}", "gists_url": "https://api.github.com/users/RylanSchaeffer/gists{/gist_id}", "starred_url": "https://api.github.com/users/RylanSchaeffer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RylanSchaeffer/subscriptions", "organizations_url": "https://api.github.com/users/RylanSchaeffer/orgs", "repos_url": "https://api.github.com/users/RylanSchaeffer/repos", "events_url": "https://api.github.com/users/RylanSchaeffer/events{/privacy}", "received_events_url": "https://api.github.com/users/RylanSchaeffer/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-28T13:29:28Z", "updated_at": "2017-11-28T13:30:12Z", "author_association": "NONE", "body_html": "<p>Using TensorShapes in the output_size property solves the first issue i.e.</p>\n<pre><code>def output_size(self):\n    return tf.TensorShape([a]), tf.TensorShape([b]), tf.TensorShape([c, d, e])\n</code></pre>\n<p>Also, I think the second issue is caused by TensorFlow eager. Specifically, the problem arises from array_ops.stack, which is only called if eager.in_graph_mode() is false. From rnn.py:</p>\n<pre><code>  final_outputs = nest.pack_sequence_as(\n      structure=cell.output_size, flat_sequence=final_outputs)\n  if not in_graph_mode:\n    final_outputs = array_ops.stack(final_outputs, axis=0)\n</code></pre>", "body_text": "Using TensorShapes in the output_size property solves the first issue i.e.\ndef output_size(self):\n    return tf.TensorShape([a]), tf.TensorShape([b]), tf.TensorShape([c, d, e])\n\nAlso, I think the second issue is caused by TensorFlow eager. Specifically, the problem arises from array_ops.stack, which is only called if eager.in_graph_mode() is false. From rnn.py:\n  final_outputs = nest.pack_sequence_as(\n      structure=cell.output_size, flat_sequence=final_outputs)\n  if not in_graph_mode:\n    final_outputs = array_ops.stack(final_outputs, axis=0)", "body": "Using TensorShapes in the output_size property solves the first issue i.e.\r\n\r\n    def output_size(self):\r\n        return tf.TensorShape([a]), tf.TensorShape([b]), tf.TensorShape([c, d, e])\r\n\r\nAlso, I think the second issue is caused by TensorFlow eager. Specifically, the problem arises from array_ops.stack, which is only called if eager.in_graph_mode() is false. From rnn.py:\r\n\r\n```\r\n  final_outputs = nest.pack_sequence_as(\r\n      structure=cell.output_size, flat_sequence=final_outputs)\r\n  if not in_graph_mode:\r\n    final_outputs = array_ops.stack(final_outputs, axis=0)\r\n```"}