{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/388589488", "html_url": "https://github.com/tensorflow/tensorflow/issues/17629#issuecomment-388589488", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17629", "id": 388589488, "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODU4OTQ4OA==", "user": {"login": "dashsd", "id": 7460707, "node_id": "MDQ6VXNlcjc0NjA3MDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/7460707?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dashsd", "html_url": "https://github.com/dashsd", "followers_url": "https://api.github.com/users/dashsd/followers", "following_url": "https://api.github.com/users/dashsd/following{/other_user}", "gists_url": "https://api.github.com/users/dashsd/gists{/gist_id}", "starred_url": "https://api.github.com/users/dashsd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dashsd/subscriptions", "organizations_url": "https://api.github.com/users/dashsd/orgs", "repos_url": "https://api.github.com/users/dashsd/repos", "events_url": "https://api.github.com/users/dashsd/events{/privacy}", "received_events_url": "https://api.github.com/users/dashsd/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-12T23:08:15Z", "updated_at": "2018-05-12T23:08:15Z", "author_association": "NONE", "body_html": "<p>This issue is related to Google's protobuf-compiler due to which tensorflow fails to find the shared object file, in this instance, libcublas.so.9.0. Even switching from CUDA 9.1 to 9.0 didn't help as tensorflow was still unable to locate the file.</p>\n<p>Building the latest version of protobuf (3.5.0) from source didn't help either. What worked for me was to install the system-wide protobuf compiler through apt install protobuf-compiler on Ubuntu 16.04. And, install the python version through pip3 install protobuf. I am using CUDA 9.0 as 9.1 is not yet compatible with tensorflow's pre-built binary.</p>\n<p>You can check the system-wide protobuf version using protoc --version which is 2.6.1 on 16.04. The protoc python version is 3.5.2.post1. Hope this helps. I had a similar issue using earlier versions of tensorflow and CUDA 8, and had documented this troubleshooting procedure. Using the same procedure, I am able to use tensorflow 1.8.0 too.</p>", "body_text": "This issue is related to Google's protobuf-compiler due to which tensorflow fails to find the shared object file, in this instance, libcublas.so.9.0. Even switching from CUDA 9.1 to 9.0 didn't help as tensorflow was still unable to locate the file.\nBuilding the latest version of protobuf (3.5.0) from source didn't help either. What worked for me was to install the system-wide protobuf compiler through apt install protobuf-compiler on Ubuntu 16.04. And, install the python version through pip3 install protobuf. I am using CUDA 9.0 as 9.1 is not yet compatible with tensorflow's pre-built binary.\nYou can check the system-wide protobuf version using protoc --version which is 2.6.1 on 16.04. The protoc python version is 3.5.2.post1. Hope this helps. I had a similar issue using earlier versions of tensorflow and CUDA 8, and had documented this troubleshooting procedure. Using the same procedure, I am able to use tensorflow 1.8.0 too.", "body": "This issue is related to Google's protobuf-compiler due to which tensorflow fails to find the shared object file, in this instance, libcublas.so.9.0. Even switching from CUDA 9.1 to 9.0 didn't help as tensorflow was still unable to locate the file.\r\n\r\nBuilding the latest version of protobuf (3.5.0) from source didn't help either. What worked for me was to install the system-wide protobuf compiler through apt install protobuf-compiler on Ubuntu 16.04. And, install the python version through pip3 install protobuf. I am using CUDA 9.0 as 9.1 is not yet compatible with tensorflow's pre-built binary.\r\n\r\nYou can check the system-wide protobuf version using protoc --version which is 2.6.1 on 16.04. The protoc python version is 3.5.2.post1. Hope this helps. I had a similar issue using earlier versions of tensorflow and CUDA 8, and had documented this troubleshooting procedure. Using the same procedure, I am able to use tensorflow 1.8.0 too."}