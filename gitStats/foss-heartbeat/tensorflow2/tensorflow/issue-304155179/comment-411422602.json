{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/411422602", "html_url": "https://github.com/tensorflow/tensorflow/issues/17629#issuecomment-411422602", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17629", "id": 411422602, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTQyMjYwMg==", "user": {"login": "cgdsss", "id": 18716778, "node_id": "MDQ6VXNlcjE4NzE2Nzc4", "avatar_url": "https://avatars0.githubusercontent.com/u/18716778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cgdsss", "html_url": "https://github.com/cgdsss", "followers_url": "https://api.github.com/users/cgdsss/followers", "following_url": "https://api.github.com/users/cgdsss/following{/other_user}", "gists_url": "https://api.github.com/users/cgdsss/gists{/gist_id}", "starred_url": "https://api.github.com/users/cgdsss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cgdsss/subscriptions", "organizations_url": "https://api.github.com/users/cgdsss/orgs", "repos_url": "https://api.github.com/users/cgdsss/repos", "events_url": "https://api.github.com/users/cgdsss/events{/privacy}", "received_events_url": "https://api.github.com/users/cgdsss/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-08T14:19:58Z", "updated_at": "2018-08-08T14:28:06Z", "author_association": "NONE", "body_html": "<p>re-compile tensorflow.<br>\n<a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=14248890\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/angeload\">@angeload</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=11509917\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Parnia\">@Parnia</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=28497542\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/agilebean\">@agilebean</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=12521950\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/fay111101\">@fay111101</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1641629\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mesargent\">@mesargent</a><br>\ninstall bazel:</p>\n<pre><code>sudo apt-get install openjdk-8-jdk\necho \"deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8\" | sudo tee /etc/apt/sources.list.d/bazel.list\nsudo apt-get install curl\ncurl https://bazel.build/bazel-release.pub.gpg | sudo apt-key add -\nsudo apt-get update &amp;&amp; sudo apt-get install bazel\n</code></pre>\n<p>clone tf code:</p>\n<pre><code>git clone https://github.com/tensorflow/tensorflow.git\ncd tensorflow\ngit pull\ngit checkout r1.9 \n</code></pre>\n<p><code>./configure</code></p>\n<p>Do you wish to build TensorFlow with jemalloc as malloc support? [Y/n]: enter<br>\nDo you wish to build TensorFlow with Google Cloud Platform support? [Y/n]: enter<br>\nDo you wish to build TensorFlow with Hadoop File System support? [Y/n]: enter<br>\nDo you wish to build TensorFlow with Amazon S3 File System support? [Y/n]: enter<br>\nDo you wish to build TensorFlow with Apache Kafka Platform support? [Y/n]: enter<br>\nDo you wish to build TensorFlow with XLA JIT support? [y/N]: enter<br>\nDo you wish to build TensorFlow with GDR support? [y/N]: enter<br>\nDo you wish to build TensorFlow with VERBS support? [y/N]: enter<br>\nDo you wish to build TensorFlow with OpenCL SYCL support? [y/N]: enter<br>\n<strong>Do you wish to build TensorFlow with CUDA support? [y/N]: Y</strong><br>\n<strong>Please specify the CUDA SDK version you want to use, e.g. 7.0. [Leave empty to default to CUDA 9.0]: 9.2</strong><br>\nPlease specify the location where CUDA 9.2 toolkit is installed. Refer to README.md for more details. [Default is /usr/local/cuda]: /usr/local/cuda-9.2<br>\n<strong>Please specify the cuDNN version you want to use. [Leave empty to default to cuDNN 7.0]: 7.1.4</strong><br>\nPlease specify the location where cuDNN 7 library is installed. Refer to README.md for more details. [Default is /usr/local/cuda-9.2]: /usr/local/cuda-9.2<br>\nDo you wish to build TensorFlow with TensorRT support? [y/N]: enter<br>\nPlease specify the NCCL version you want to use. [Leave empty to default to NCCL 1.3]: enter<br>\nPlease note that each additional compute capability significantly increases your build time and binary size. [Default is: 6.1]: enter<br>\nDo you want to use clang as CUDA compiler? [y/N]: enter<br>\nPlease specify which gcc should be used by nvcc as the host compiler. [Default is /usr/bin/gcc]: enter<br>\nDo you wish to build TensorFlow with MPI support? [y/N]: enter<br>\nPlease specify optimization flags to use during compilation when bazel option \"--config=opt\" is specified [Default is -march=native]: -march=native<br>\nWould you like to interactively configure ./WORKSPACE for Android builds? [y/N]:enter</p>\n<p>build:</p>\n<pre><code>bazel build --config=opt //tensorflow/tools/pip_package:build_pip_package\nbazel-bin/tensorflow/tools/pip_package/build_pip_package tensorflow_pkg\ncd tensorflow_pkg\nsudo pip install tensorflow*.whl\n</code></pre>\n<p>testing:</p>\n<pre><code>import tensorflow as tf   \nhello = tf.constant('Hello, TensorFlow!')\nsess = tf.Session()\nprint(sess.run(hello))\n</code></pre>\n<p>print  <strong>Hello, TensorFlow!</strong></p>", "body_text": "re-compile tensorflow.\n@angeload @Parnia @agilebean @fay111101 @mesargent\ninstall bazel:\nsudo apt-get install openjdk-8-jdk\necho \"deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8\" | sudo tee /etc/apt/sources.list.d/bazel.list\nsudo apt-get install curl\ncurl https://bazel.build/bazel-release.pub.gpg | sudo apt-key add -\nsudo apt-get update && sudo apt-get install bazel\n\nclone tf code:\ngit clone https://github.com/tensorflow/tensorflow.git\ncd tensorflow\ngit pull\ngit checkout r1.9 \n\n./configure\nDo you wish to build TensorFlow with jemalloc as malloc support? [Y/n]: enter\nDo you wish to build TensorFlow with Google Cloud Platform support? [Y/n]: enter\nDo you wish to build TensorFlow with Hadoop File System support? [Y/n]: enter\nDo you wish to build TensorFlow with Amazon S3 File System support? [Y/n]: enter\nDo you wish to build TensorFlow with Apache Kafka Platform support? [Y/n]: enter\nDo you wish to build TensorFlow with XLA JIT support? [y/N]: enter\nDo you wish to build TensorFlow with GDR support? [y/N]: enter\nDo you wish to build TensorFlow with VERBS support? [y/N]: enter\nDo you wish to build TensorFlow with OpenCL SYCL support? [y/N]: enter\nDo you wish to build TensorFlow with CUDA support? [y/N]: Y\nPlease specify the CUDA SDK version you want to use, e.g. 7.0. [Leave empty to default to CUDA 9.0]: 9.2\nPlease specify the location where CUDA 9.2 toolkit is installed. Refer to README.md for more details. [Default is /usr/local/cuda]: /usr/local/cuda-9.2\nPlease specify the cuDNN version you want to use. [Leave empty to default to cuDNN 7.0]: 7.1.4\nPlease specify the location where cuDNN 7 library is installed. Refer to README.md for more details. [Default is /usr/local/cuda-9.2]: /usr/local/cuda-9.2\nDo you wish to build TensorFlow with TensorRT support? [y/N]: enter\nPlease specify the NCCL version you want to use. [Leave empty to default to NCCL 1.3]: enter\nPlease note that each additional compute capability significantly increases your build time and binary size. [Default is: 6.1]: enter\nDo you want to use clang as CUDA compiler? [y/N]: enter\nPlease specify which gcc should be used by nvcc as the host compiler. [Default is /usr/bin/gcc]: enter\nDo you wish to build TensorFlow with MPI support? [y/N]: enter\nPlease specify optimization flags to use during compilation when bazel option \"--config=opt\" is specified [Default is -march=native]: -march=native\nWould you like to interactively configure ./WORKSPACE for Android builds? [y/N]:enter\nbuild:\nbazel build --config=opt //tensorflow/tools/pip_package:build_pip_package\nbazel-bin/tensorflow/tools/pip_package/build_pip_package tensorflow_pkg\ncd tensorflow_pkg\nsudo pip install tensorflow*.whl\n\ntesting:\nimport tensorflow as tf   \nhello = tf.constant('Hello, TensorFlow!')\nsess = tf.Session()\nprint(sess.run(hello))\n\nprint  Hello, TensorFlow!", "body": "re-compile tensorflow.\r\n@angeload @Parnia @agilebean @fay111101 @mesargent \r\ninstall bazel:\r\n```\r\nsudo apt-get install openjdk-8-jdk\r\necho \"deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8\" | sudo tee /etc/apt/sources.list.d/bazel.list\r\nsudo apt-get install curl\r\ncurl https://bazel.build/bazel-release.pub.gpg | sudo apt-key add -\r\nsudo apt-get update && sudo apt-get install bazel\r\n```\r\nclone tf code:\r\n```\r\ngit clone https://github.com/tensorflow/tensorflow.git\r\ncd tensorflow\r\ngit pull\r\ngit checkout r1.9 \r\n```\r\n\r\n`./configure`\r\n\r\nDo you wish to build TensorFlow with jemalloc as malloc support? [Y/n]: enter\r\nDo you wish to build TensorFlow with Google Cloud Platform support? [Y/n]: enter\r\nDo you wish to build TensorFlow with Hadoop File System support? [Y/n]: enter\r\nDo you wish to build TensorFlow with Amazon S3 File System support? [Y/n]: enter\r\nDo you wish to build TensorFlow with Apache Kafka Platform support? [Y/n]: enter\r\nDo you wish to build TensorFlow with XLA JIT support? [y/N]: enter\r\nDo you wish to build TensorFlow with GDR support? [y/N]: enter\r\nDo you wish to build TensorFlow with VERBS support? [y/N]: enter\r\nDo you wish to build TensorFlow with OpenCL SYCL support? [y/N]: enter\r\n**Do you wish to build TensorFlow with CUDA support? [y/N]: Y**\r\n**Please specify the CUDA SDK version you want to use, e.g. 7.0. [Leave empty to default to CUDA 9.0]: 9.2**\r\nPlease specify the location where CUDA 9.2 toolkit is installed. Refer to README.md for more details. [Default is /usr/local/cuda]: /usr/local/cuda-9.2\r\n**Please specify the cuDNN version you want to use. [Leave empty to default to cuDNN 7.0]: 7.1.4**\r\nPlease specify the location where cuDNN 7 library is installed. Refer to README.md for more details. [Default is /usr/local/cuda-9.2]: /usr/local/cuda-9.2\r\nDo you wish to build TensorFlow with TensorRT support? [y/N]: enter\r\nPlease specify the NCCL version you want to use. [Leave empty to default to NCCL 1.3]: enter\r\nPlease note that each additional compute capability significantly increases your build time and binary size. [Default is: 6.1]: enter\r\nDo you want to use clang as CUDA compiler? [y/N]: enter\r\nPlease specify which gcc should be used by nvcc as the host compiler. [Default is /usr/bin/gcc]: enter\r\nDo you wish to build TensorFlow with MPI support? [y/N]: enter\r\nPlease specify optimization flags to use during compilation when bazel option \"--config=opt\" is specified [Default is -march=native]: -march=native\r\nWould you like to interactively configure ./WORKSPACE for Android builds? [y/N]:enter\r\n\r\nbuild:\r\n```\r\nbazel build --config=opt //tensorflow/tools/pip_package:build_pip_package\r\nbazel-bin/tensorflow/tools/pip_package/build_pip_package tensorflow_pkg\r\ncd tensorflow_pkg\r\nsudo pip install tensorflow*.whl\r\n```\r\ntesting:\r\n```\r\nimport tensorflow as tf   \r\nhello = tf.constant('Hello, TensorFlow!')\r\nsess = tf.Session()\r\nprint(sess.run(hello))\r\n```\r\nprint  **Hello, TensorFlow!**"}