{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/189127653", "pull_request_review_id": 121248062, "id": 189127653, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4OTEyNzY1Mw==", "diff_hunk": "@@ -43,7 +47,37 @@ ThreadPoolDevice::ThreadPoolDevice(const SessionOptions& options,\n     : LocalDevice(options, Device::BuildDeviceAttributes(\n                                name, DEVICE_CPU, memory_limit, locality)),\n       allocator_(allocator),\n-      scoped_allocator_mgr_(new ScopedAllocatorMgr(name)) {}\n+      scoped_allocator_mgr_(new ScopedAllocatorMgr(name)) {\n+#ifdef INTEL_MKL\n+#ifdef _OPENMP\n+  // Defaults for MKL optimized kernel execution.\n+  if (getenv(\"KMP_BLOCKTIME\") == NULL) {\n+    // Explicitly set block time to reduce interference from spinning openmp\n+    // threads\n+    setenv(\"KMP_BLOCKTIME\", \"1\", 1);\n+  }\n+\n+  if (getenv(\"KMP_AFFINITY\") == NULL && getenv(\"OMP_PROC_BIND\") == NULL) {\n+    // Bind threads to processors to reduce OS scheduling overhead\n+    setenv(\"OMP_PROC_BIND\", \"true\", 1);\n+  }\n+\n+  const char* user_omp_threads = getenv(\"OMP_NUM_THREADS\");\n+  if (user_omp_threads == nullptr) {\n+    // OMP_NUM_THREADS controls MKL's intra-op parallelization\n+    // Default to available physical cores\n+    const int mkl_intra_op = port::NumSchedulableCPUs();\n+    const int ht = port::NumHyperthreadsPerCore();\n+    omp_set_num_threads((mkl_intra_op + ht - 1) / ht);\n+  } else {\n+    uint64 user_val = 0;\n+    if (strings::safe_strtou64(user_omp_threads, &user_val)) {\n+      omp_set_num_threads(user_val);", "path": "tensorflow/core/common_runtime/threadpool_device.cc", "position": null, "original_position": 42, "commit_id": "a7f096a05f36d34462df77ed467577254f594ab1", "original_commit_id": "a67ef809af435c11d3d021d2bbdc3ee0b5cc368f", "user": {"login": "jktomer", "id": 7492685, "node_id": "MDQ6VXNlcjc0OTI2ODU=", "avatar_url": "https://avatars3.githubusercontent.com/u/7492685?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jktomer", "html_url": "https://github.com/jktomer", "followers_url": "https://api.github.com/users/jktomer/followers", "following_url": "https://api.github.com/users/jktomer/following{/other_user}", "gists_url": "https://api.github.com/users/jktomer/gists{/gist_id}", "starred_url": "https://api.github.com/users/jktomer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jktomer/subscriptions", "organizations_url": "https://api.github.com/users/jktomer/orgs", "repos_url": "https://api.github.com/users/jktomer/repos", "events_url": "https://api.github.com/users/jktomer/events{/privacy}", "received_events_url": "https://api.github.com/users/jktomer/received_events", "type": "User", "site_admin": false}, "body": "This call is superfluous, since omp_set_num_threads(N) is exactly the same as setting OMP_NUM_THREADS to N.", "created_at": "2018-05-17T23:16:25Z", "updated_at": "2018-05-21T16:53:34Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/19136#discussion_r189127653", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/19136", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/189127653"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/19136#discussion_r189127653"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/19136"}}, "body_html": "<p>This call is superfluous, since omp_set_num_threads(N) is exactly the same as setting OMP_NUM_THREADS to N.</p>", "body_text": "This call is superfluous, since omp_set_num_threads(N) is exactly the same as setting OMP_NUM_THREADS to N."}