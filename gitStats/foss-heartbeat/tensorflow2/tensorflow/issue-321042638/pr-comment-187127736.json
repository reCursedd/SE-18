{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/187127736", "pull_request_review_id": 118845460, "id": 187127736, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzEyNzczNg==", "diff_hunk": "@@ -47,10 +52,27 @@ thread::ThreadPool* ComputePool(const SessionOptions& options) {\n }\n \n int32 NumInterOpThreadsFromSessionOptions(const SessionOptions& options) {\n-  const int32 t = options.config.inter_op_parallelism_threads();\n-  if (t != 0) return t;\n+  const int32 inter_op = options.config.inter_op_parallelism_threads();\n+  if (inter_op != 0) return inter_op;\n+#ifdef INTEL_MKL\n+  // MKL library executes ops in parallel using OMP threads\n+  // Set inter_op conservatively to avoid thread oversubscription that could \n+  // lead to severe perf degradations and OMP resource exhaustion\n+  int mkl_intra_op = 1;\n+#ifdef _OPENMP\n+  mkl_intra_op = omp_get_max_threads();\n+#endif\n+  CHECK_GE(mkl_intra_op, 1);\n+  const int32 mkl_inter_op = std::max(\n+          (port::NumSchedulableCPUs() + mkl_intra_op - 1) / mkl_intra_op, 2);\n+  VLOG(0) << \"Creating new thread pool with default inter op setting: \"\n+          << mkl_inter_op\n+          << \". Tune using inter_op_parallelism_threads for best performance.\";\n+  return mkl_inter_op;\n+#else\n   // Default to using the number of cores available in the process.\n   return port::NumSchedulableCPUs();", "path": "tensorflow/core/common_runtime/process_util.cc", "position": null, "original_position": 37, "commit_id": "a7f096a05f36d34462df77ed467577254f594ab1", "original_commit_id": "ec8db8f0482ecdeda716c756f914395c66b82715", "user": {"login": "jbobba", "id": 21375855, "node_id": "MDQ6VXNlcjIxMzc1ODU1", "avatar_url": "https://avatars1.githubusercontent.com/u/21375855?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbobba", "html_url": "https://github.com/jbobba", "followers_url": "https://api.github.com/users/jbobba/followers", "following_url": "https://api.github.com/users/jbobba/following{/other_user}", "gists_url": "https://api.github.com/users/jbobba/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbobba/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbobba/subscriptions", "organizations_url": "https://api.github.com/users/jbobba/orgs", "repos_url": "https://api.github.com/users/jbobba/repos", "events_url": "https://api.github.com/users/jbobba/events{/privacy}", "received_events_url": "https://api.github.com/users/jbobba/received_events", "type": "User", "site_admin": false}, "body": "Agree. I can change it but will need to make sure that we get a HT solution for non-Intel CPUs as well.", "created_at": "2018-05-09T18:07:37Z", "updated_at": "2018-05-21T16:53:34Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/19136#discussion_r187127736", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/19136", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/187127736"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/19136#discussion_r187127736"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/19136"}}, "body_html": "<p>Agree. I can change it but will need to make sure that we get a HT solution for non-Intel CPUs as well.</p>", "body_text": "Agree. I can change it but will need to make sure that we get a HT solution for non-Intel CPUs as well.", "in_reply_to_id": 187113042}