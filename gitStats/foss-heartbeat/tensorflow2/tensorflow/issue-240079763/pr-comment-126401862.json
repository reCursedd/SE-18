{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/126401862", "pull_request_review_id": 48881082, "id": 126401862, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNjQwMTg2Mg==", "diff_hunk": "@@ -36,11 +36,7 @@ REGISTER_KERNEL_BUILDER(Name(\"Add\")\n \n \n #if TENSORFLOW_USE_SYCL\n-REGISTER(BinaryOp, SYCL, \"Add\", functor::add, float);\n-\n-#ifndef SYCL_NO_DOUBLE\n-REGISTER(BinaryOp, SYCL, \"Add\", functor::add, double);\n-#endif\n+REGISTER_FLOATING(BinaryOp, SYCL, \"Add\", functor::add);", "path": "tensorflow/core/kernels/cwise_op_add_1.cc", "position": null, "original_position": 9, "commit_id": "5ca4ce3714542e6e3f8b91a07e20fa89914052d8", "original_commit_id": "f9845d72f605ae83b7511d7dd39d2c79221f5bc4", "user": {"login": "lukeiwanski", "id": 8373795, "node_id": "MDQ6VXNlcjgzNzM3OTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/8373795?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukeiwanski", "html_url": "https://github.com/lukeiwanski", "followers_url": "https://api.github.com/users/lukeiwanski/followers", "following_url": "https://api.github.com/users/lukeiwanski/following{/other_user}", "gists_url": "https://api.github.com/users/lukeiwanski/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukeiwanski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukeiwanski/subscriptions", "organizations_url": "https://api.github.com/users/lukeiwanski/orgs", "repos_url": "https://api.github.com/users/lukeiwanski/repos", "events_url": "https://api.github.com/users/lukeiwanski/events{/privacy}", "received_events_url": "https://api.github.com/users/lukeiwanski/received_events", "type": "User", "site_admin": false}, "body": "Assuming that we added macros to (https://github.com/tensorflow/tensorflow/pull/11234/commits/f9845d72f605ae83b7511d7dd39d2c79221f5bc4#r126394733)\r\nlike  `TF_CALL_SYCL_NUMBER_TYPES` - that could be somehow composed - depending on the compiler flag - to include / exclude some types ( eg double or half )\r\n\r\nwe should be able to replace REGISTERx macro with something like:\r\n\r\n```\r\n#define REGISTER_KERNEL(type)                                  \\\r\nREGISTER(BinaryOp, SYCL, \"Add\", functor::add, type);\r\nTF_CALL_SYCL_NUMBER_TYPES(REGISTER_KERNEL);\r\n```\r\nSuggested (https://github.com/tensorflow/tensorflow/pull/11234/commits/f9845d72f605ae83b7511d7dd39d2c79221f5bc4#diff-0c5a090f03366bec631c68d29f852ceeR490) will work for cwise ops but other ops (eg. conv, pooling ) would benefit from adding `TF_CALL_SYCL_NUMBER_TYPES` to `register_types.h`\r\n\r\nWhat do you think?", "created_at": "2017-07-10T12:04:54Z", "updated_at": "2017-07-11T14:33:48Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/11234#discussion_r126401862", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11234", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/126401862"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/11234#discussion_r126401862"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11234"}}, "body_html": "<p>Assuming that we added macros to (<a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/f9845d72f605ae83b7511d7dd39d2c79221f5bc4#r126394733/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/f9845d72f605ae83b7511d7dd39d2c79221f5bc4#r126394733\"><tt>f9845d7</tt>#r126394733</a>)<br>\nlike  <code>TF_CALL_SYCL_NUMBER_TYPES</code> - that could be somehow composed - depending on the compiler flag - to include / exclude some types ( eg double or half )</p>\n<p>we should be able to replace REGISTERx macro with something like:</p>\n<pre><code>#define REGISTER_KERNEL(type)                                  \\\nREGISTER(BinaryOp, SYCL, \"Add\", functor::add, type);\nTF_CALL_SYCL_NUMBER_TYPES(REGISTER_KERNEL);\n</code></pre>\n<p>Suggested (<a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/f9845d72f605ae83b7511d7dd39d2c79221f5bc4#diff-0c5a090f03366bec631c68d29f852ceeR490/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/f9845d72f605ae83b7511d7dd39d2c79221f5bc4#diff-0c5a090f03366bec631c68d29f852ceeR490\"><tt>f9845d7</tt>#diff-0c5a090f03366bec631c68d29f852ceeR490</a>) will work for cwise ops but other ops (eg. conv, pooling ) would benefit from adding <code>TF_CALL_SYCL_NUMBER_TYPES</code> to <code>register_types.h</code></p>\n<p>What do you think?</p>", "body_text": "Assuming that we added macros to (f9845d7#r126394733)\nlike  TF_CALL_SYCL_NUMBER_TYPES - that could be somehow composed - depending on the compiler flag - to include / exclude some types ( eg double or half )\nwe should be able to replace REGISTERx macro with something like:\n#define REGISTER_KERNEL(type)                                  \\\nREGISTER(BinaryOp, SYCL, \"Add\", functor::add, type);\nTF_CALL_SYCL_NUMBER_TYPES(REGISTER_KERNEL);\n\nSuggested (f9845d7#diff-0c5a090f03366bec631c68d29f852ceeR490) will work for cwise ops but other ops (eg. conv, pooling ) would benefit from adding TF_CALL_SYCL_NUMBER_TYPES to register_types.h\nWhat do you think?"}