{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/117908073", "pull_request_review_id": 39651157, "id": 117908073, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNzkwODA3Mw==", "diff_hunk": "@@ -54,18 +54,26 @@ def testToInt16(self):\n       self.assertEqual([None, None], decode.get_shape().as_list())\n \n       result = decode.eval(feed_dict={in_bytes: [\"AaBC\"]})\n-      if sys.byteorder == \"big\":\n-        self.assertAllEqual(\n-            [[ord(\"A\") * 256 + ord(\"a\"), ord(\"B\") * 256 + ord(\"C\")]], result)\n-      else:\n-        self.assertAllEqual(\n-            [[ord(\"A\") + ord(\"a\") * 256, ord(\"B\") + ord(\"C\") * 256]], result)\n+      self.assertAllEqual(\n+          [[ord(\"A\") + ord(\"a\") * 256, ord(\"B\") + ord(\"C\") * 256]], result)\n \n       with self.assertRaisesOpError(\n           \"Input to DecodeRaw has length 3 that is not a multiple of 2, the \"\n           \"size of int16\"):\n         decode.eval(feed_dict={in_bytes: [\"123\", \"456\"]})\n \n+  def testEndianness(self):\n+    with self.test_session():\n+      in_bytes = array_ops.placeholder(dtypes.string, shape=[None])\n+      decode_le = parsing_ops.decode_raw(\n+          in_bytes, out_type=dtypes.int32, little_endian=True)\n+      decode_be = parsing_ops.decode_raw(\n+          in_bytes, out_type=dtypes.int32, little_endian=False)\n+      result = decode_le.eval(feed_dict={in_bytes: [\"\\x01\\x02\\x03\\x04\"]})", "path": "tensorflow/python/kernel_tests/decode_raw_op_test.py", "position": 25, "original_position": 25, "commit_id": "d7c9b9b78591ec14994be5512071d8461894e5cd", "original_commit_id": "d7c9b9b78591ec14994be5512071d8461894e5cd", "user": {"login": "jiefangxuanyan", "id": 10000148, "node_id": "MDQ6VXNlcjEwMDAwMTQ4", "avatar_url": "https://avatars0.githubusercontent.com/u/10000148?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jiefangxuanyan", "html_url": "https://github.com/jiefangxuanyan", "followers_url": "https://api.github.com/users/jiefangxuanyan/followers", "following_url": "https://api.github.com/users/jiefangxuanyan/following{/other_user}", "gists_url": "https://api.github.com/users/jiefangxuanyan/gists{/gist_id}", "starred_url": "https://api.github.com/users/jiefangxuanyan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jiefangxuanyan/subscriptions", "organizations_url": "https://api.github.com/users/jiefangxuanyan/orgs", "repos_url": "https://api.github.com/users/jiefangxuanyan/repos", "events_url": "https://api.github.com/users/jiefangxuanyan/events{/privacy}", "received_events_url": "https://api.github.com/users/jiefangxuanyan/received_events", "type": "User", "site_admin": false}, "body": "It won't. This decode op gets same result on machines with different endianness, just like the way these machines receive data from the network. In fact, platform endianness is considered in the C++ code (`if (port::kLittleEndian == little_endian_)`) to ensure consistency. As I said before, the old platform-dependent behavior in this test is contradictionary with the documentation.", "created_at": "2017-05-23T06:23:23Z", "updated_at": "2017-05-23T06:23:24Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/9876#discussion_r117908073", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/9876", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/117908073"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/9876#discussion_r117908073"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/9876"}}, "body_html": "<p>It won't. This decode op gets same result on machines with different endianness, just like the way these machines receive data from the network. In fact, platform endianness is considered in the C++ code (<code>if (port::kLittleEndian == little_endian_)</code>) to ensure consistency. As I said before, the old platform-dependent behavior in this test is contradictionary with the documentation.</p>", "body_text": "It won't. This decode op gets same result on machines with different endianness, just like the way these machines receive data from the network. In fact, platform endianness is considered in the C++ code (if (port::kLittleEndian == little_endian_)) to ensure consistency. As I said before, the old platform-dependent behavior in this test is contradictionary with the documentation.", "in_reply_to_id": 117791581}