{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/240563026", "html_url": "https://github.com/tensorflow/tensorflow/issues/3819#issuecomment-240563026", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3819", "id": 240563026, "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDU2MzAyNg==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2016-08-17T22:02:22Z", "updated_at": "2016-08-17T22:02:22Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=463737\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vrv\">@vrv</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5205204\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/alquraishi\">@alquraishi</a> If I understand the <a href=\"https://github.com/tensorflow/tensorflow/commit/4c85a95925a68fec324f70cd0d7f3d4548f97a38\">commit</a> that broke this correctly, the problem was that <code>all_variables()</code> determined not just what was initialized when you do <code>tf.initialize_all_variables()</code> but <strong>also</strong> what variables are saved when you construct a <code>tf.train.Saver()</code> with no arguments. This particular variable would turn up in checkpoints and cause problems (e.g. you'd restore a model and try to use it for training, but the epoch limit in the input producer would already be reached, so you'd get OutOfRange as soon as you started).</p>\n<p>Agreed that we should fix the naming, but possibly we should also separate out the notion of \"all\" (which seems useful and uncontroversial) from the notion of \"things that get saved in checkpoints by default\".</p>", "body_text": "@vrv @alquraishi If I understand the commit that broke this correctly, the problem was that all_variables() determined not just what was initialized when you do tf.initialize_all_variables() but also what variables are saved when you construct a tf.train.Saver() with no arguments. This particular variable would turn up in checkpoints and cause problems (e.g. you'd restore a model and try to use it for training, but the epoch limit in the input producer would already be reached, so you'd get OutOfRange as soon as you started).\nAgreed that we should fix the naming, but possibly we should also separate out the notion of \"all\" (which seems useful and uncontroversial) from the notion of \"things that get saved in checkpoints by default\".", "body": "@vrv @alquraishi If I understand the [commit](https://github.com/tensorflow/tensorflow/commit/4c85a95925a68fec324f70cd0d7f3d4548f97a38) that broke this correctly, the problem was that `all_variables()` determined not just what was initialized when you do `tf.initialize_all_variables()` but **also** what variables are saved when you construct a `tf.train.Saver()` with no arguments. This particular variable would turn up in checkpoints and cause problems (e.g. you'd restore a model and try to use it for training, but the epoch limit in the input producer would already be reached, so you'd get OutOfRange as soon as you started).\n\nAgreed that we should fix the naming, but possibly we should also separate out the notion of \"all\" (which seems useful and uncontroversial) from the notion of \"things that get saved in checkpoints by default\".\n"}