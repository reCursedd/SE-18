{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10074", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10074/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10074/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10074/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/10074", "id": 230207735, "node_id": "MDU6SXNzdWUyMzAyMDc3MzU=", "number": 10074, "title": "fatal problem with saving variables", "user": {"login": "yanghoonkim", "id": 9985986, "node_id": "MDQ6VXNlcjk5ODU5ODY=", "avatar_url": "https://avatars2.githubusercontent.com/u/9985986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yanghoonkim", "html_url": "https://github.com/yanghoonkim", "followers_url": "https://api.github.com/users/yanghoonkim/followers", "following_url": "https://api.github.com/users/yanghoonkim/following{/other_user}", "gists_url": "https://api.github.com/users/yanghoonkim/gists{/gist_id}", "starred_url": "https://api.github.com/users/yanghoonkim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yanghoonkim/subscriptions", "organizations_url": "https://api.github.com/users/yanghoonkim/orgs", "repos_url": "https://api.github.com/users/yanghoonkim/repos", "events_url": "https://api.github.com/users/yanghoonkim/events{/privacy}", "received_events_url": "https://api.github.com/users/yanghoonkim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-21T09:09:46Z", "updated_at": "2017-05-21T11:26:55Z", "closed_at": "2017-05-21T11:25:41Z", "author_association": "NONE", "body_html": "<p>I coded a simple feedforward neural network and it works very well.</p>\n<p>I tried to save the computation time, and created:<br>\n<strong>self.total_time</strong> = tf.Variable(0, dtype = tf.float32, trainable = True, name = 'total_time')<br>\nin the fnn class.</p>\n<p>and i tried to print the total training time per some training epoch.<br>\n<strong>I made it to grow with time:</strong></p>\n<p><strong># Check &amp; Print training time</strong><br>\ntill_now = time.time() - start_time<br>\nself.total_time += till_now<br>\nprint_time(self.total_time.eval())</p>\n<p><strong>and the result look something like this :</strong></p>\n<h2>Epoch :   0 | Evaluation :  115 | Learning Rate : 0.50</h2>\n<p>Training Loss :         0.040919<br>\nValidation Loss :      0.0741969<br>\nValidation Accuracy :      97.77%<br>\nTotal time cost : 0.38 seconds</p>\n<h2>Epoch :   1 | Evaluation :  116 | Learning Rate : 0.50</h2>\n<p>Training Loss :        0.0417941<br>\nValidation Loss :       0.073841<br>\nValidation Accuracy :      97.73%<br>\nTotal time cost : 0.71 seconds</p>\n<h2>Epoch :   2 | Evaluation :  117 | Learning Rate : 0.50</h2>\n<p>Training Loss :        0.0334573<br>\nValidation Loss :      0.0745566<br>\nValidation Accuracy :      97.75%<br>\nTotal time cost : 1.01 seconds</p>\n<p>However, When i interrupt the training procedure and try to restore global variables and restart the training, I just lose the value of <strong>variable total_time</strong> and it initialized as 0 which is the value i first give to.<br>\nI also checked tf.global_variables() include self.total_time.</p>\n<p>What is wrong?</p>", "body_text": "I coded a simple feedforward neural network and it works very well.\nI tried to save the computation time, and created:\nself.total_time = tf.Variable(0, dtype = tf.float32, trainable = True, name = 'total_time')\nin the fnn class.\nand i tried to print the total training time per some training epoch.\nI made it to grow with time:\n# Check & Print training time\ntill_now = time.time() - start_time\nself.total_time += till_now\nprint_time(self.total_time.eval())\nand the result look something like this :\nEpoch :   0 | Evaluation :  115 | Learning Rate : 0.50\nTraining Loss :         0.040919\nValidation Loss :      0.0741969\nValidation Accuracy :      97.77%\nTotal time cost : 0.38 seconds\nEpoch :   1 | Evaluation :  116 | Learning Rate : 0.50\nTraining Loss :        0.0417941\nValidation Loss :       0.073841\nValidation Accuracy :      97.73%\nTotal time cost : 0.71 seconds\nEpoch :   2 | Evaluation :  117 | Learning Rate : 0.50\nTraining Loss :        0.0334573\nValidation Loss :      0.0745566\nValidation Accuracy :      97.75%\nTotal time cost : 1.01 seconds\nHowever, When i interrupt the training procedure and try to restore global variables and restart the training, I just lose the value of variable total_time and it initialized as 0 which is the value i first give to.\nI also checked tf.global_variables() include self.total_time.\nWhat is wrong?", "body": "I coded a simple feedforward neural network and it works very well.\r\n\r\nI tried to save the computation time, and created:\r\n**self.total_time** = tf.Variable(0, dtype = tf.float32, trainable = True, name = 'total_time')\r\nin the fnn class.\r\n\r\nand i tried to print the total training time per some training epoch.\r\n**I made it to grow with time:**\r\n\r\n**# Check & Print training time**\r\ntill_now = time.time() - start_time\r\nself.total_time += till_now\r\nprint_time(self.total_time.eval())\r\n\r\n**and the result look something like this :** \r\n\r\nEpoch :   0 | Evaluation :  115 | Learning Rate : 0.50\r\n-------------------------------------------------------\r\nTraining Loss :         0.040919\r\nValidation Loss :      0.0741969\r\nValidation Accuracy :      97.77%\r\nTotal time cost : 0.38 seconds\r\n\r\nEpoch :   1 | Evaluation :  116 | Learning Rate : 0.50\r\n-------------------------------------------------------\r\nTraining Loss :        0.0417941\r\nValidation Loss :       0.073841\r\nValidation Accuracy :      97.73%\r\nTotal time cost : 0.71 seconds\r\n\r\nEpoch :   2 | Evaluation :  117 | Learning Rate : 0.50\r\n-------------------------------------------------------\r\nTraining Loss :        0.0334573\r\nValidation Loss :      0.0745566\r\nValidation Accuracy :      97.75%\r\nTotal time cost : 1.01 seconds\r\n\r\nHowever, When i interrupt the training procedure and try to restore global variables and restart the training, I just lose the value of **variable total_time** and it initialized as 0 which is the value i first give to.\r\nI also checked tf.global_variables() include self.total_time.\r\n\r\nWhat is wrong?"}