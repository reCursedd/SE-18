{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4128", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4128/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4128/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4128/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/4128", "id": 174302672, "node_id": "MDU6SXNzdWUxNzQzMDI2NzI=", "number": 4128, "title": "Docs for Inception Model", "user": {"login": "Hvass-Labs", "id": 13588114, "node_id": "MDQ6VXNlcjEzNTg4MTE0", "avatar_url": "https://avatars2.githubusercontent.com/u/13588114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hvass-Labs", "html_url": "https://github.com/Hvass-Labs", "followers_url": "https://api.github.com/users/Hvass-Labs/followers", "following_url": "https://api.github.com/users/Hvass-Labs/following{/other_user}", "gists_url": "https://api.github.com/users/Hvass-Labs/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hvass-Labs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hvass-Labs/subscriptions", "organizations_url": "https://api.github.com/users/Hvass-Labs/orgs", "repos_url": "https://api.github.com/users/Hvass-Labs/repos", "events_url": "https://api.github.com/users/Hvass-Labs/events{/privacy}", "received_events_url": "https://api.github.com/users/Hvass-Labs/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 284443156, "node_id": "MDU6TGFiZWwyODQ0NDMxNTY=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:docs", "name": "type:docs", "color": "159b2e", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2016-08-31T15:22:50Z", "updated_at": "2017-06-16T11:24:31Z", "closed_at": "2016-09-13T01:24:29Z", "author_association": "CONTRIBUTOR", "body_html": "<p>TensorFlow 0.10.0rc0 CPU on Linux.</p>\n<p>This is about the Inception model and example that is included with TensorFlow:</p>\n<p><a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/models/image/imagenet/classify_image.py\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/models/image/imagenet/classify_image.py</a></p>\n<p>I am using this version of the Inception model:</p>\n<p><a href=\"http://download.tensorflow.org/models/image/imagenet/inception-2015-12-05.tgz\" rel=\"nofollow\">http://download.tensorflow.org/models/image/imagenet/inception-2015-12-05.tgz</a></p>\n<p>I'm not sure whether to ask these questions here or on StackOverflow, but there are some related questions there that haven't been answered, and this is also sort of a request for improving the TensorFlow docs, so I hope it's OK that I ask the questions here.</p>\n<p>My questions are:</p>\n<p>(1) The softmax classifier apparently outputs an array of length 1008 - but there is only 1000 classes in the data-set. Why is there a difference? How should I adjust for this difference?</p>\n<p>(2) What is the size of the input JPEG-images supposed to be, and is the Inception model rescaling them automatically?</p>\n<p>(3) I get a deprecation warning. I don't know what is causing this. Does it mean that this Inception model will stop working in the future?</p>\n<blockquote>\n<p>/home/foo/anaconda3/envs/tensorflow/lib/python3.5/site-packages/tensorflow/python/ops/array_ops.py:1811: VisibleDeprecationWarning: converting an array with ndim &gt; 0 to an index will result in an error in the future<br>\nresult_shape.insert(dim, 1)<br>\nW tensorflow/core/framework/op_def_util.cc:332] Op BatchNormWithGlobalNormalization is deprecated. It will cease to work in GraphDef version 9. Use tf.nn.batch_normalization().</p>\n</blockquote>\n<p>(4) The sample code uses <code>tf.gfile.Exists()</code> which just wraps <code>os.path.exists()</code> so it seems to be completely redundant. Why is it used?</p>\n<p>(5) The sample code also uses <code>tf.gfile.FastGFile()</code> which seems to be the non-thread-safe version of TensorFlow's file-class. Why not use Python's built-in <code>open()</code> instead?</p>\n<p>(6) The function <code>run_inference_on_image()</code> creates a new TensorFlow session for each image that is being processed. Is the TensorFlow session so lightweight that this is the preferred way of doing it? Or is it better to create a single session and use it repeatedly?</p>\n<p>Thanks.</p>", "body_text": "TensorFlow 0.10.0rc0 CPU on Linux.\nThis is about the Inception model and example that is included with TensorFlow:\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/models/image/imagenet/classify_image.py\nI am using this version of the Inception model:\nhttp://download.tensorflow.org/models/image/imagenet/inception-2015-12-05.tgz\nI'm not sure whether to ask these questions here or on StackOverflow, but there are some related questions there that haven't been answered, and this is also sort of a request for improving the TensorFlow docs, so I hope it's OK that I ask the questions here.\nMy questions are:\n(1) The softmax classifier apparently outputs an array of length 1008 - but there is only 1000 classes in the data-set. Why is there a difference? How should I adjust for this difference?\n(2) What is the size of the input JPEG-images supposed to be, and is the Inception model rescaling them automatically?\n(3) I get a deprecation warning. I don't know what is causing this. Does it mean that this Inception model will stop working in the future?\n\n/home/foo/anaconda3/envs/tensorflow/lib/python3.5/site-packages/tensorflow/python/ops/array_ops.py:1811: VisibleDeprecationWarning: converting an array with ndim > 0 to an index will result in an error in the future\nresult_shape.insert(dim, 1)\nW tensorflow/core/framework/op_def_util.cc:332] Op BatchNormWithGlobalNormalization is deprecated. It will cease to work in GraphDef version 9. Use tf.nn.batch_normalization().\n\n(4) The sample code uses tf.gfile.Exists() which just wraps os.path.exists() so it seems to be completely redundant. Why is it used?\n(5) The sample code also uses tf.gfile.FastGFile() which seems to be the non-thread-safe version of TensorFlow's file-class. Why not use Python's built-in open() instead?\n(6) The function run_inference_on_image() creates a new TensorFlow session for each image that is being processed. Is the TensorFlow session so lightweight that this is the preferred way of doing it? Or is it better to create a single session and use it repeatedly?\nThanks.", "body": "TensorFlow 0.10.0rc0 CPU on Linux.\n\nThis is about the Inception model and example that is included with TensorFlow:\n\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/models/image/imagenet/classify_image.py\n\nI am using this version of the Inception model:\n\nhttp://download.tensorflow.org/models/image/imagenet/inception-2015-12-05.tgz\n\nI'm not sure whether to ask these questions here or on StackOverflow, but there are some related questions there that haven't been answered, and this is also sort of a request for improving the TensorFlow docs, so I hope it's OK that I ask the questions here.\n\nMy questions are:\n\n(1) The softmax classifier apparently outputs an array of length 1008 - but there is only 1000 classes in the data-set. Why is there a difference? How should I adjust for this difference?\n\n(2) What is the size of the input JPEG-images supposed to be, and is the Inception model rescaling them automatically?\n\n(3) I get a deprecation warning. I don't know what is causing this. Does it mean that this Inception model will stop working in the future?\n\n> /home/foo/anaconda3/envs/tensorflow/lib/python3.5/site-packages/tensorflow/python/ops/array_ops.py:1811: VisibleDeprecationWarning: converting an array with ndim > 0 to an index will result in an error in the future\n>  result_shape.insert(dim, 1)\n> W tensorflow/core/framework/op_def_util.cc:332] Op BatchNormWithGlobalNormalization is deprecated. It will cease to work in GraphDef version 9. Use tf.nn.batch_normalization().\n\n(4) The sample code uses `tf.gfile.Exists()` which just wraps `os.path.exists()` so it seems to be completely redundant. Why is it used?\n\n(5) The sample code also uses `tf.gfile.FastGFile()` which seems to be the non-thread-safe version of TensorFlow's file-class. Why not use Python's built-in `open()` instead?\n\n(6) The function `run_inference_on_image()` creates a new TensorFlow session for each image that is being processed. Is the TensorFlow session so lightweight that this is the preferred way of doing it? Or is it better to create a single session and use it repeatedly?\n\nThanks.\n"}