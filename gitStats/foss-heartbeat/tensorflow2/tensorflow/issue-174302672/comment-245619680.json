{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/245619680", "html_url": "https://github.com/tensorflow/tensorflow/issues/4128#issuecomment-245619680", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4128", "id": 245619680, "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTYxOTY4MA==", "user": {"login": "Hvass-Labs", "id": 13588114, "node_id": "MDQ6VXNlcjEzNTg4MTE0", "avatar_url": "https://avatars2.githubusercontent.com/u/13588114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hvass-Labs", "html_url": "https://github.com/Hvass-Labs", "followers_url": "https://api.github.com/users/Hvass-Labs/followers", "following_url": "https://api.github.com/users/Hvass-Labs/following{/other_user}", "gists_url": "https://api.github.com/users/Hvass-Labs/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hvass-Labs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hvass-Labs/subscriptions", "organizations_url": "https://api.github.com/users/Hvass-Labs/orgs", "repos_url": "https://api.github.com/users/Hvass-Labs/repos", "events_url": "https://api.github.com/users/Hvass-Labs/events{/privacy}", "received_events_url": "https://api.github.com/users/Hvass-Labs/received_events", "type": "User", "site_admin": false}, "created_at": "2016-09-08T14:40:01Z", "updated_at": "2016-09-08T14:40:01Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I have finished my new tutorial on how to use the pre-trained Inception Model and I have two suggestions to the TensorFlow developers:</p>\n<p>(A) The Inception v3 model seems to have problems recognizing people. I give several examples of this in the tutorial (link below). This would seem to make the pre-trained Inception model useless in practice. I'm not sure, but I think the problem is maybe in the training-set you're using. Please consider training the Inception model on a data-set that is more relevant. Instead of having 1000 classes, maybe only have 100 classes that it could recognize more accurately and that were more relevant?</p>\n<p>(B) As mentioned above, I think the TensorFlow API for using pre-trained \"Zoo\" models could be much simpler. The current methods for loading pre-trained models are rather convoluted. If users could just do something like the following to load a good pre-trained model, then you might see a multitude of new interesting Android apps using image recognition:</p>\n<pre><code>import tensorflow as tf\nmodel = tf.models.Inception(auto_download=True)\npredicted_labels, predicted_scores = model.classify(image=\"foo.jpg\")\n</code></pre>\n<p>Here's my new tutorial on the Inception Model as a Notebook and YouTube talk:</p>\n<p><a href=\"https://github.com/Hvass-Labs/TensorFlow-Tutorials/blob/master/07_Inception_Model.ipynb\">https://github.com/Hvass-Labs/TensorFlow-Tutorials/blob/master/07_Inception_Model.ipynb</a></p>\n<p><a href=\"https://www.youtube.com/watch?v=ZG_hoLgNFNo\" rel=\"nofollow\">https://www.youtube.com/watch?v=ZG_hoLgNFNo</a></p>", "body_text": "I have finished my new tutorial on how to use the pre-trained Inception Model and I have two suggestions to the TensorFlow developers:\n(A) The Inception v3 model seems to have problems recognizing people. I give several examples of this in the tutorial (link below). This would seem to make the pre-trained Inception model useless in practice. I'm not sure, but I think the problem is maybe in the training-set you're using. Please consider training the Inception model on a data-set that is more relevant. Instead of having 1000 classes, maybe only have 100 classes that it could recognize more accurately and that were more relevant?\n(B) As mentioned above, I think the TensorFlow API for using pre-trained \"Zoo\" models could be much simpler. The current methods for loading pre-trained models are rather convoluted. If users could just do something like the following to load a good pre-trained model, then you might see a multitude of new interesting Android apps using image recognition:\nimport tensorflow as tf\nmodel = tf.models.Inception(auto_download=True)\npredicted_labels, predicted_scores = model.classify(image=\"foo.jpg\")\n\nHere's my new tutorial on the Inception Model as a Notebook and YouTube talk:\nhttps://github.com/Hvass-Labs/TensorFlow-Tutorials/blob/master/07_Inception_Model.ipynb\nhttps://www.youtube.com/watch?v=ZG_hoLgNFNo", "body": "I have finished my new tutorial on how to use the pre-trained Inception Model and I have two suggestions to the TensorFlow developers:\n\n(A) The Inception v3 model seems to have problems recognizing people. I give several examples of this in the tutorial (link below). This would seem to make the pre-trained Inception model useless in practice. I'm not sure, but I think the problem is maybe in the training-set you're using. Please consider training the Inception model on a data-set that is more relevant. Instead of having 1000 classes, maybe only have 100 classes that it could recognize more accurately and that were more relevant?\n\n(B) As mentioned above, I think the TensorFlow API for using pre-trained \"Zoo\" models could be much simpler. The current methods for loading pre-trained models are rather convoluted. If users could just do something like the following to load a good pre-trained model, then you might see a multitude of new interesting Android apps using image recognition:\n\n```\nimport tensorflow as tf\nmodel = tf.models.Inception(auto_download=True)\npredicted_labels, predicted_scores = model.classify(image=\"foo.jpg\")\n```\n\nHere's my new tutorial on the Inception Model as a Notebook and YouTube talk:\n\nhttps://github.com/Hvass-Labs/TensorFlow-Tutorials/blob/master/07_Inception_Model.ipynb\n\nhttps://www.youtube.com/watch?v=ZG_hoLgNFNo\n"}