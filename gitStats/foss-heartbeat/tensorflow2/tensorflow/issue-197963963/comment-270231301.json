{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/270231301", "html_url": "https://github.com/tensorflow/tensorflow/issues/6555#issuecomment-270231301", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6555", "id": 270231301, "node_id": "MDEyOklzc3VlQ29tbWVudDI3MDIzMTMwMQ==", "user": {"login": "zafartahirov", "id": 4216323, "node_id": "MDQ6VXNlcjQyMTYzMjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/4216323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zafartahirov", "html_url": "https://github.com/zafartahirov", "followers_url": "https://api.github.com/users/zafartahirov/followers", "following_url": "https://api.github.com/users/zafartahirov/following{/other_user}", "gists_url": "https://api.github.com/users/zafartahirov/gists{/gist_id}", "starred_url": "https://api.github.com/users/zafartahirov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zafartahirov/subscriptions", "organizations_url": "https://api.github.com/users/zafartahirov/orgs", "repos_url": "https://api.github.com/users/zafartahirov/repos", "events_url": "https://api.github.com/users/zafartahirov/events{/privacy}", "received_events_url": "https://api.github.com/users/zafartahirov/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-03T21:34:48Z", "updated_at": "2017-01-03T21:34:48Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=326106\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/aselle\">@aselle</a> That what the original script was doing -- I assumed it was on purpose -- the only reason it would be required is if there are two different locations that the script would have to work with: one where <code>SOURCE_BASE_DIR</code> is, and another where the <code>configure</code> is located. Assuming TF allows them to be in different locations, it makes sense to keep one of them on a stack, while working in the other. Otherwise, I think the script should be</p>\n<div class=\"highlight highlight-source-shell\"><pre><span class=\"pl-c\"><span class=\"pl-c\">#!</span>/usr/bin/env bash</span>\n\n<span class=\"pl-c1\">set</span> -e\n<span class=\"pl-c1\">set</span> -o pipefail\n\nSOURCE_BASE_DIR=<span class=\"pl-s\"><span class=\"pl-pds\">`</span>pwd -P<span class=\"pl-pds\">`</span></span></pre></div>\n<p>I was trying to see the <code>Blame</code> for the <code>popd</code>, <code>pushd</code> lines, and this is the only thing there:</p>\n<pre><code>It is necessary to symlink in files from .git/ in order to make\nbazel aware of changes to the current head. As it is this is not\ncompletely reliable when git repositories are in a dirty index\nstate. First class support for bazel git a reported bug but\nnot a high priority.\n\n./configure sets up the symlinks by calling the gen_git_source.py\na bazel genrule calls gen_git_source.py to generate version_info.cc\n\nAlso changed cmake and make to build this properly.\nChange: 132328009\n</code></pre>", "body_text": "@aselle That what the original script was doing -- I assumed it was on purpose -- the only reason it would be required is if there are two different locations that the script would have to work with: one where SOURCE_BASE_DIR is, and another where the configure is located. Assuming TF allows them to be in different locations, it makes sense to keep one of them on a stack, while working in the other. Otherwise, I think the script should be\n#!/usr/bin/env bash\n\nset -e\nset -o pipefail\n\nSOURCE_BASE_DIR=`pwd -P`\nI was trying to see the Blame for the popd, pushd lines, and this is the only thing there:\nIt is necessary to symlink in files from .git/ in order to make\nbazel aware of changes to the current head. As it is this is not\ncompletely reliable when git repositories are in a dirty index\nstate. First class support for bazel git a reported bug but\nnot a high priority.\n\n./configure sets up the symlinks by calling the gen_git_source.py\na bazel genrule calls gen_git_source.py to generate version_info.cc\n\nAlso changed cmake and make to build this properly.\nChange: 132328009", "body": "@aselle That what the original script was doing -- I assumed it was on purpose -- the only reason it would be required is if there are two different locations that the script would have to work with: one where `SOURCE_BASE_DIR` is, and another where the `configure` is located. Assuming TF allows them to be in different locations, it makes sense to keep one of them on a stack, while working in the other. Otherwise, I think the script should be \r\n\r\n```bash\r\n#!/usr/bin/env bash\r\n\r\nset -e\r\nset -o pipefail\r\n\r\nSOURCE_BASE_DIR=`pwd -P`\r\n```\r\n\r\nI was trying to see the `Blame` for the `popd`, `pushd` lines, and this is the only thing there:\r\n\r\n```\r\nIt is necessary to symlink in files from .git/ in order to make\r\nbazel aware of changes to the current head. As it is this is not\r\ncompletely reliable when git repositories are in a dirty index\r\nstate. First class support for bazel git a reported bug but\r\nnot a high priority.\r\n\r\n./configure sets up the symlinks by calling the gen_git_source.py\r\na bazel genrule calls gen_git_source.py to generate version_info.cc\r\n\r\nAlso changed cmake and make to build this properly.\r\nChange: 132328009\r\n```"}