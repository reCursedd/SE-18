{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7314", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7314/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7314/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7314/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/7314", "id": 205773469, "node_id": "MDU6SXNzdWUyMDU3NzM0Njk=", "number": 7314, "title": "slice_input_producer does not return a queue", "user": {"login": "jkiske", "id": 1057200, "node_id": "MDQ6VXNlcjEwNTcyMDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1057200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jkiske", "html_url": "https://github.com/jkiske", "followers_url": "https://api.github.com/users/jkiske/followers", "following_url": "https://api.github.com/users/jkiske/following{/other_user}", "gists_url": "https://api.github.com/users/jkiske/gists{/gist_id}", "starred_url": "https://api.github.com/users/jkiske/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jkiske/subscriptions", "organizations_url": "https://api.github.com/users/jkiske/orgs", "repos_url": "https://api.github.com/users/jkiske/repos", "events_url": "https://api.github.com/users/jkiske/events{/privacy}", "received_events_url": "https://api.github.com/users/jkiske/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-02-07T03:11:03Z", "updated_at": "2017-02-09T05:28:52Z", "closed_at": "2017-02-09T05:28:52Z", "author_association": "NONE", "body_html": "<p><code>tf.train.slice_input_producer</code> does not return a queue for each slice. This means the outputs cannot be used with the BaseReader api. Shouldn't this be consistent with the other <code>*_input_producer</code> methods like <code>string_input_producer</code>?</p>\n<h3>What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?</h3>\n<p><a href=\"http://stackoverflow.com/questions/34340489/tensorflow-read-images-with-labels\" rel=\"nofollow\">http://stackoverflow.com/questions/34340489/tensorflow-read-images-with-labels</a></p>\n<h3>Environment info</h3>\n<p>Operating System:<br>\nUbuntu 14.04</p>\n<h3>Installed version of CUDA and cuDNN:</h3>\n<p>Cuda 8.0.44<br>\nCudnn 5.1.5</p>\n<h3>Tensorflow Version:</h3>\n<p>0.12.1</p>\n<h3>If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)</h3>\n<div class=\"highlight highlight-source-python\"><pre>image_files <span class=\"pl-k\">=</span> glob(<span class=\"pl-c1\">...</span>)\nlabel_files <span class=\"pl-k\">=</span> [s.replace(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>image.jpg<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>labels.jpg<span class=\"pl-pds\">'</span></span>) <span class=\"pl-k\">for</span> s <span class=\"pl-k\">in</span> image_files]\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Create a queue where the elements are pairs (image, label)</span>\nimage_queue, label_queue <span class=\"pl-k\">=</span> tf.train.slice_input_producer([image_files, label_files])\nimages, labels <span class=\"pl-k\">=</span> [], []\n<span class=\"pl-k\">for</span> _ <span class=\"pl-k\">in</span> num_threads:\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> Create two readers for each thread - one for the image and one for the label</span>\n    image_reader, label_reader <span class=\"pl-k\">=</span> tf.SomeReader(), tf.SomeReader()\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> Read the image and label pair</span>\n    _, image_op <span class=\"pl-k\">=</span> image_reader.read(image_queue)\n    _, label_op <span class=\"pl-k\">=</span> label_reader.read(label_queue)\n    images.append(image_op)\n    labels.append(label_op)</pre></div>\n<h2>Error</h2>\n<div class=\"highlight highlight-source-python\"><pre>File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/io_ops.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">265</span>, <span class=\"pl-k\">in</span> read\n  <span class=\"pl-k\">return</span> gen_io_ops._reader_read(<span class=\"pl-c1\">self</span>._reader_ref, queue_ref, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span>name)\nFile <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gen_io_ops.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">213</span>, <span class=\"pl-k\">in</span> _reader_read\n  queue_handle<span class=\"pl-k\">=</span>queue_handle, name<span class=\"pl-k\">=</span>name)\nFile <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/op_def_library.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">613</span>, <span class=\"pl-k\">in</span> apply_op\n  (input_name, op_type_name))\n<span class=\"pl-c1\">TypeError</span>: Input <span class=\"pl-s\"><span class=\"pl-pds\">'</span>queue_handle<span class=\"pl-pds\">'</span></span> of <span class=\"pl-s\"><span class=\"pl-pds\">'</span>ReaderRead<span class=\"pl-pds\">'</span></span> Op requires l<span class=\"pl-k\">-</span>value <span class=\"pl-c1\">input</span></pre></div>\n<h3>What other attempted solutions have you tried?</h3>\n<p>Using two <code>string_input_producers</code> with the same random seed</p>", "body_text": "tf.train.slice_input_producer does not return a queue for each slice. This means the outputs cannot be used with the BaseReader api. Shouldn't this be consistent with the other *_input_producer methods like string_input_producer?\nWhat related GitHub issues or StackOverflow threads have you found by searching the web for your problem?\nhttp://stackoverflow.com/questions/34340489/tensorflow-read-images-with-labels\nEnvironment info\nOperating System:\nUbuntu 14.04\nInstalled version of CUDA and cuDNN:\nCuda 8.0.44\nCudnn 5.1.5\nTensorflow Version:\n0.12.1\nIf possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\nimage_files = glob(...)\nlabel_files = [s.replace('image.jpg', 'labels.jpg') for s in image_files]\n# Create a queue where the elements are pairs (image, label)\nimage_queue, label_queue = tf.train.slice_input_producer([image_files, label_files])\nimages, labels = [], []\nfor _ in num_threads:\n    # Create two readers for each thread - one for the image and one for the label\n    image_reader, label_reader = tf.SomeReader(), tf.SomeReader()\n    # Read the image and label pair\n    _, image_op = image_reader.read(image_queue)\n    _, label_op = label_reader.read(label_queue)\n    images.append(image_op)\n    labels.append(label_op)\nError\nFile \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/io_ops.py\", line 265, in read\n  return gen_io_ops._reader_read(self._reader_ref, queue_ref, name=name)\nFile \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gen_io_ops.py\", line 213, in _reader_read\n  queue_handle=queue_handle, name=name)\nFile \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/op_def_library.py\", line 613, in apply_op\n  (input_name, op_type_name))\nTypeError: Input 'queue_handle' of 'ReaderRead' Op requires l-value input\nWhat other attempted solutions have you tried?\nUsing two string_input_producers with the same random seed", "body": "`tf.train.slice_input_producer` does not return a queue for each slice. This means the outputs cannot be used with the BaseReader api. Shouldn't this be consistent with the other `*_input_producer` methods like `string_input_producer`?\r\n\r\n### What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?\r\nhttp://stackoverflow.com/questions/34340489/tensorflow-read-images-with-labels\r\n\r\n### Environment info\r\nOperating System:\r\nUbuntu 14.04\r\n\r\n### Installed version of CUDA and cuDNN: \r\nCuda 8.0.44\r\nCudnn 5.1.5\r\n\r\n### Tensorflow Version:\r\n0.12.1\r\n\r\n### If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\r\n```python\r\nimage_files = glob(...)\r\nlabel_files = [s.replace('image.jpg', 'labels.jpg') for s in image_files]\r\n# Create a queue where the elements are pairs (image, label)\r\nimage_queue, label_queue = tf.train.slice_input_producer([image_files, label_files])\r\nimages, labels = [], []\r\nfor _ in num_threads:\r\n    # Create two readers for each thread - one for the image and one for the label\r\n    image_reader, label_reader = tf.SomeReader(), tf.SomeReader()\r\n    # Read the image and label pair\r\n    _, image_op = image_reader.read(image_queue)\r\n    _, label_op = label_reader.read(label_queue)\r\n    images.append(image_op)\r\n    labels.append(label_op)\r\n```\r\n## Error\r\n```python\r\nFile \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/io_ops.py\", line 265, in read\r\n  return gen_io_ops._reader_read(self._reader_ref, queue_ref, name=name)\r\nFile \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gen_io_ops.py\", line 213, in _reader_read\r\n  queue_handle=queue_handle, name=name)\r\nFile \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/op_def_library.py\", line 613, in apply_op\r\n  (input_name, op_type_name))\r\nTypeError: Input 'queue_handle' of 'ReaderRead' Op requires l-value input\r\n```\r\n\r\n### What other attempted solutions have you tried?\r\nUsing two `string_input_producers` with the same random seed\r\n"}