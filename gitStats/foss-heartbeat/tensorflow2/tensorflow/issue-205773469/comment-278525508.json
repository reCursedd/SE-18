{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/278525508", "html_url": "https://github.com/tensorflow/tensorflow/issues/7314#issuecomment-278525508", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7314", "id": 278525508, "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODUyNTUwOA==", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "created_at": "2017-02-09T02:08:48Z", "updated_at": "2017-02-09T02:09:41Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Be careful with \"images_queue, labels_queue\" construction. If they go into <code>train_op</code>, and you run this op in parallel (ie, from different Python threads), then your images and labels can go out of sync because your second run dequeues can \"wedge in\" between the first run's image_op dequeue and label_op dequeue. This is a natural consequence of <code>.run</code> calls not being atomic. More details in <a href=\"http://stackoverflow.com/questions/41920371/tensorflow-multi-threaded-queuerunner\" rel=\"nofollow\">http://stackoverflow.com/questions/41920371/tensorflow-multi-threaded-queuerunner</a></p>", "body_text": "Be careful with \"images_queue, labels_queue\" construction. If they go into train_op, and you run this op in parallel (ie, from different Python threads), then your images and labels can go out of sync because your second run dequeues can \"wedge in\" between the first run's image_op dequeue and label_op dequeue. This is a natural consequence of .run calls not being atomic. More details in http://stackoverflow.com/questions/41920371/tensorflow-multi-threaded-queuerunner", "body": "Be careful with \"images_queue, labels_queue\" construction. If they go into `train_op`, and you run this op in parallel (ie, from different Python threads), then your images and labels can go out of sync because your second run dequeues can \"wedge in\" between the first run's image_op dequeue and label_op dequeue. This is a natural consequence of `.run` calls not being atomic. More details in http://stackoverflow.com/questions/41920371/tensorflow-multi-threaded-queuerunner"}