{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/410962623", "html_url": "https://github.com/tensorflow/tensorflow/issues/21335#issuecomment-410962623", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21335", "id": 410962623, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDk2MjYyMw==", "user": {"login": "tejaswid", "id": 11408325, "node_id": "MDQ6VXNlcjExNDA4MzI1", "avatar_url": "https://avatars2.githubusercontent.com/u/11408325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tejaswid", "html_url": "https://github.com/tejaswid", "followers_url": "https://api.github.com/users/tejaswid/followers", "following_url": "https://api.github.com/users/tejaswid/following{/other_user}", "gists_url": "https://api.github.com/users/tejaswid/gists{/gist_id}", "starred_url": "https://api.github.com/users/tejaswid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tejaswid/subscriptions", "organizations_url": "https://api.github.com/users/tejaswid/orgs", "repos_url": "https://api.github.com/users/tejaswid/repos", "events_url": "https://api.github.com/users/tejaswid/events{/privacy}", "received_events_url": "https://api.github.com/users/tejaswid/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-07T07:33:00Z", "updated_at": "2018-08-07T07:33:00Z", "author_association": "NONE", "body_html": "<p>When I run the following simple example,</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">_parse_data</span>(<span class=\"pl-smi\">raw_tfrecord</span>):\n    feature <span class=\"pl-k\">=</span> {<span class=\"pl-s\"><span class=\"pl-pds\">'</span>/value<span class=\"pl-pds\">'</span></span>: tf.FixedLenFeature([], tf.int64)}\n    data <span class=\"pl-k\">=</span> tf.parse_single_example(raw_tfrecord, <span class=\"pl-v\">features</span><span class=\"pl-k\">=</span>feature)\n    value <span class=\"pl-k\">=</span> tf.cast(data[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>/value<span class=\"pl-pds\">'</span></span>], tf.int32)\n    <span class=\"pl-k\">return</span> value\n\ndata <span class=\"pl-k\">=</span> tf.data.TFRecordDataset(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>&lt;FILENAME&gt;<span class=\"pl-pds\">\"</span></span>)  <span class=\"pl-c\"><span class=\"pl-c\">#</span> see below for explanation</span>\ndata_parsed <span class=\"pl-k\">=</span> data.map(_parse_data)\nbatched_dataset <span class=\"pl-k\">=</span> data_parsed.batch(<span class=\"pl-c1\">1</span>)\niterator <span class=\"pl-k\">=</span> batched_dataset.make_initializable_iterator()\nnext_element <span class=\"pl-k\">=</span> iterator.get_next()\n\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n    sess.run(tf.global_variables_initializer())\n    sess.run(iterator.initializer)\n    <span class=\"pl-c1\">print</span>(sess.run(next_element))\n    sess.close()</pre></div>\n<p>If <code>&lt;FILENAME&gt;</code> is a non-existent file (like empty string) the error says</p>\n<pre><code>NotFoundError (see above for traceback): ; No such file or directory\n[[Node: IteratorGetNext = IteratorGetNext[output_shapes=[[?]], output_types=[DT_STRING], _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](Iterator)]]\n</code></pre>\n<p>If <code>&lt;FILENAME&gt;</code> is an existing directory but not a <em>.tfrecords</em> file the error says</p>\n<pre><code>FailedPreconditionError (see above for traceback): /media/drzadmin/Z/repos/python/datasets; Is a directory\n\t [[Node: IteratorGetNext = IteratorGetNext[output_shapes=[[?]], output_types=[DT_INT32], _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](Iterator)]]\n</code></pre>\n<p>which I think is the expected behaviour.</p>\n<p>When I run the code mentioned in my first post, no error is thrown. Instead loss is not computed at all and remains <strong>None</strong>. The following lines in the function <strong>_train_with_estimator_spec</strong> in <strong>estimator.py</strong> is where the loss should actually be computed, but it remains None after the sess.run call. Furthermore the training continues but the <strong>global_step value always remains at 0</strong>.</p>\n<div class=\"highlight highlight-source-python\"><pre>loss <span class=\"pl-k\">=</span> <span class=\"pl-c1\">None</span>\n<span class=\"pl-k\">while</span> <span class=\"pl-k\">not</span> mon_sess.should_stop():\n    _, loss <span class=\"pl-k\">=</span> mon_sess.run([estimator_spec.train_op, estimator_spec.loss])\n<span class=\"pl-k\">return</span> loss</pre></div>", "body_text": "When I run the following simple example,\nimport tensorflow as tf\n\ndef _parse_data(raw_tfrecord):\n    feature = {'/value': tf.FixedLenFeature([], tf.int64)}\n    data = tf.parse_single_example(raw_tfrecord, features=feature)\n    value = tf.cast(data['/value'], tf.int32)\n    return value\n\ndata = tf.data.TFRecordDataset(\"<FILENAME>\")  # see below for explanation\ndata_parsed = data.map(_parse_data)\nbatched_dataset = data_parsed.batch(1)\niterator = batched_dataset.make_initializable_iterator()\nnext_element = iterator.get_next()\n\nwith tf.Session() as sess:\n    sess.run(tf.global_variables_initializer())\n    sess.run(iterator.initializer)\n    print(sess.run(next_element))\n    sess.close()\nIf <FILENAME> is a non-existent file (like empty string) the error says\nNotFoundError (see above for traceback): ; No such file or directory\n[[Node: IteratorGetNext = IteratorGetNext[output_shapes=[[?]], output_types=[DT_STRING], _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](Iterator)]]\n\nIf <FILENAME> is an existing directory but not a .tfrecords file the error says\nFailedPreconditionError (see above for traceback): /media/drzadmin/Z/repos/python/datasets; Is a directory\n\t [[Node: IteratorGetNext = IteratorGetNext[output_shapes=[[?]], output_types=[DT_INT32], _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](Iterator)]]\n\nwhich I think is the expected behaviour.\nWhen I run the code mentioned in my first post, no error is thrown. Instead loss is not computed at all and remains None. The following lines in the function _train_with_estimator_spec in estimator.py is where the loss should actually be computed, but it remains None after the sess.run call. Furthermore the training continues but the global_step value always remains at 0.\nloss = None\nwhile not mon_sess.should_stop():\n    _, loss = mon_sess.run([estimator_spec.train_op, estimator_spec.loss])\nreturn loss", "body": "When I run the following simple example,\r\n```python\r\nimport tensorflow as tf\r\n\r\ndef _parse_data(raw_tfrecord):\r\n    feature = {'/value': tf.FixedLenFeature([], tf.int64)}\r\n    data = tf.parse_single_example(raw_tfrecord, features=feature)\r\n    value = tf.cast(data['/value'], tf.int32)\r\n    return value\r\n\r\ndata = tf.data.TFRecordDataset(\"<FILENAME>\")  # see below for explanation\r\ndata_parsed = data.map(_parse_data)\r\nbatched_dataset = data_parsed.batch(1)\r\niterator = batched_dataset.make_initializable_iterator()\r\nnext_element = iterator.get_next()\r\n\r\nwith tf.Session() as sess:\r\n    sess.run(tf.global_variables_initializer())\r\n    sess.run(iterator.initializer)\r\n    print(sess.run(next_element))\r\n    sess.close()\r\n```\r\nIf `<FILENAME>` is a non-existent file (like empty string) the error says\r\n```\r\nNotFoundError (see above for traceback): ; No such file or directory\r\n[[Node: IteratorGetNext = IteratorGetNext[output_shapes=[[?]], output_types=[DT_STRING], _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](Iterator)]]\r\n```\r\nIf `<FILENAME>` is an existing directory but not a _.tfrecords_ file the error says\r\n```\r\nFailedPreconditionError (see above for traceback): /media/drzadmin/Z/repos/python/datasets; Is a directory\r\n\t [[Node: IteratorGetNext = IteratorGetNext[output_shapes=[[?]], output_types=[DT_INT32], _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](Iterator)]]\r\n```\r\nwhich I think is the expected behaviour.\r\n\r\nWhen I run the code mentioned in my first post, no error is thrown. Instead loss is not computed at all and remains **None**. The following lines in the function **_train_with_estimator_spec** in **estimator.py** is where the loss should actually be computed, but it remains None after the sess.run call. Furthermore the training continues but the **global_step value always remains at 0**.\r\n\r\n```python\r\nloss = None\r\nwhile not mon_sess.should_stop():\r\n    _, loss = mon_sess.run([estimator_spec.train_op, estimator_spec.loss])\r\nreturn loss\r\n```\r\n"}