{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/345891508", "html_url": "https://github.com/tensorflow/tensorflow/pull/12316#issuecomment-345891508", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12316", "id": 345891508, "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTg5MTUwOA==", "user": {"login": "resec", "id": 4277636, "node_id": "MDQ6VXNlcjQyNzc2MzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/4277636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/resec", "html_url": "https://github.com/resec", "followers_url": "https://api.github.com/users/resec/followers", "following_url": "https://api.github.com/users/resec/following{/other_user}", "gists_url": "https://api.github.com/users/resec/gists{/gist_id}", "starred_url": "https://api.github.com/users/resec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/resec/subscriptions", "organizations_url": "https://api.github.com/users/resec/orgs", "repos_url": "https://api.github.com/users/resec/repos", "events_url": "https://api.github.com/users/resec/events{/privacy}", "received_events_url": "https://api.github.com/users/resec/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-21T01:56:59Z", "updated_at": "2017-11-21T01:56:59Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1794715\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ebrevdo\">@ebrevdo</a> do you mean that I should create a wrapping function which returns the output tensor, to class <code>tf.nn.rnn_cell.DropoutWrapper</code>, just like function <code>tf.layers.dropout</code> to class <code>tf.layers.Dropout</code>?</p>\n<p>But normally we pass the created RNN Cell object to other wrapper methods like <code>tf.nn.dynamic_rnn</code>. Maybe we should define the training in Cell construction and adjust its actions when is applied?</p>\n<p>Please correct me if I am misunderstanding anything.</p>", "body_text": "@ebrevdo do you mean that I should create a wrapping function which returns the output tensor, to class tf.nn.rnn_cell.DropoutWrapper, just like function tf.layers.dropout to class tf.layers.Dropout?\nBut normally we pass the created RNN Cell object to other wrapper methods like tf.nn.dynamic_rnn. Maybe we should define the training in Cell construction and adjust its actions when is applied?\nPlease correct me if I am misunderstanding anything.", "body": "@ebrevdo do you mean that I should create a wrapping function which returns the output tensor, to class `tf.nn.rnn_cell.DropoutWrapper`, just like function `tf.layers.dropout` to class `tf.layers.Dropout`?\r\n\r\nBut normally we pass the created RNN Cell object to other wrapper methods like `tf.nn.dynamic_rnn`. Maybe we should define the training in Cell construction and adjust its actions when is applied?\r\n\r\nPlease correct me if I am misunderstanding anything."}