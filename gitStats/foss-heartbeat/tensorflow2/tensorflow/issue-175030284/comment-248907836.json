{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/248907836", "html_url": "https://github.com/tensorflow/tensorflow/issues/4203#issuecomment-248907836", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4203", "id": 248907836, "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODkwNzgzNg==", "user": {"login": "mschulkind", "id": 523089, "node_id": "MDQ6VXNlcjUyMzA4OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/523089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mschulkind", "html_url": "https://github.com/mschulkind", "followers_url": "https://api.github.com/users/mschulkind/followers", "following_url": "https://api.github.com/users/mschulkind/following{/other_user}", "gists_url": "https://api.github.com/users/mschulkind/gists{/gist_id}", "starred_url": "https://api.github.com/users/mschulkind/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mschulkind/subscriptions", "organizations_url": "https://api.github.com/users/mschulkind/orgs", "repos_url": "https://api.github.com/users/mschulkind/repos", "events_url": "https://api.github.com/users/mschulkind/events{/privacy}", "received_events_url": "https://api.github.com/users/mschulkind/received_events", "type": "User", "site_admin": false}, "created_at": "2016-09-22T13:46:20Z", "updated_at": "2016-09-22T13:46:20Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I'm having almost the exact same problem, but for a slightly different reason.</p>\n<p>I'm using <code>graph_actions.evaluate</code> to evaluate my mode (through <code>BaseEstimator</code>, through <code>ValidationMonitor</code>), and I'm using an <code>input_fn</code> backed by a reader. I only want to run through my test data once, so I set <code>num_epochs=1</code>. I have 260 vectors in my test set, and <code>batch_size=100</code>, so as you'd expect, I get back 100, 100, 60 (because <code>allow_smaller_final_batch=True</code>), and then the next time  I get an <code>OutOfRangeError</code> which looks like it reproduces almost exactly the same problem.</p>\n<p>I'm running about 0.10. I haven't had the time to try against master, but it seems like the relevant code hasn't changed there.</p>\n<p>The line that causes the exception is:<br>\n<a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/learn/python/learn/graph_actions.py#L754\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/learn/python/learn/graph_actions.py#L754</a></p>\n<pre><code>      finally:\n        if eval_results is None or step != eval_step:\n          eval_results = session.run(eval_dict, feed_dict=feed_dict) # &lt;---- This is the culprit.\n          eval_step = step\n        # Stop session first, before queue runners.\n        session.close()\n</code></pre>\n<p>This means that <code>eval_results</code> never gets set, and the session doesn't even get closed.</p>\n<p>The exception handler catches it just fine at:<br>\n<a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/learn/python/learn/graph_actions.py#L768\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/learn/python/learn/graph_actions.py#L768</a></p>\n<pre><code>    except errors.OutOfRangeError as e:\n      if max_steps is None:\n        logging.info('Input queue is exhausted.')\n      else:\n        logging.warn('Input queue is exhausted: %s.', e)\n</code></pre>\n<p>...but this means that the call at:<br>\n<a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/learn/python/learn/graph_actions.py#L781\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/learn/python/learn/graph_actions.py#L781</a></p>\n<pre><code>  _write_summary_results(output_dir, eval_results, current_global_step)\n</code></pre>\n<p>gets <code>None</code> for <code>eval_results</code>, which then causes problems at...<br>\n<a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/learn/python/learn/graph_actions.py#L612\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/learn/python/learn/graph_actions.py#L612</a></p>\n<pre><code>  return ', '.join('%s = %s' % (k, v) for k, v in eval_results.items())\n</code></pre>\n<p>because you can't call <code>.items()</code> on <code>None</code>.</p>", "body_text": "I'm having almost the exact same problem, but for a slightly different reason.\nI'm using graph_actions.evaluate to evaluate my mode (through BaseEstimator, through ValidationMonitor), and I'm using an input_fn backed by a reader. I only want to run through my test data once, so I set num_epochs=1. I have 260 vectors in my test set, and batch_size=100, so as you'd expect, I get back 100, 100, 60 (because allow_smaller_final_batch=True), and then the next time  I get an OutOfRangeError which looks like it reproduces almost exactly the same problem.\nI'm running about 0.10. I haven't had the time to try against master, but it seems like the relevant code hasn't changed there.\nThe line that causes the exception is:\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/learn/python/learn/graph_actions.py#L754\n      finally:\n        if eval_results is None or step != eval_step:\n          eval_results = session.run(eval_dict, feed_dict=feed_dict) # <---- This is the culprit.\n          eval_step = step\n        # Stop session first, before queue runners.\n        session.close()\n\nThis means that eval_results never gets set, and the session doesn't even get closed.\nThe exception handler catches it just fine at:\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/learn/python/learn/graph_actions.py#L768\n    except errors.OutOfRangeError as e:\n      if max_steps is None:\n        logging.info('Input queue is exhausted.')\n      else:\n        logging.warn('Input queue is exhausted: %s.', e)\n\n...but this means that the call at:\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/learn/python/learn/graph_actions.py#L781\n  _write_summary_results(output_dir, eval_results, current_global_step)\n\ngets None for eval_results, which then causes problems at...\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/learn/python/learn/graph_actions.py#L612\n  return ', '.join('%s = %s' % (k, v) for k, v in eval_results.items())\n\nbecause you can't call .items() on None.", "body": "I'm having almost the exact same problem, but for a slightly different reason.\n\nI'm using `graph_actions.evaluate` to evaluate my mode (through `BaseEstimator`, through `ValidationMonitor`), and I'm using an `input_fn` backed by a reader. I only want to run through my test data once, so I set `num_epochs=1`. I have 260 vectors in my test set, and `batch_size=100`, so as you'd expect, I get back 100, 100, 60 (because `allow_smaller_final_batch=True`), and then the next time  I get an `OutOfRangeError` which looks like it reproduces almost exactly the same problem.\n\nI'm running about 0.10. I haven't had the time to try against master, but it seems like the relevant code hasn't changed there.\n\nThe line that causes the exception is:\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/learn/python/learn/graph_actions.py#L754\n\n```\n      finally:\n        if eval_results is None or step != eval_step:\n          eval_results = session.run(eval_dict, feed_dict=feed_dict) # <---- This is the culprit.\n          eval_step = step\n        # Stop session first, before queue runners.\n        session.close()\n```\n\nThis means that `eval_results` never gets set, and the session doesn't even get closed.\n\nThe exception handler catches it just fine at:\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/learn/python/learn/graph_actions.py#L768\n\n```\n    except errors.OutOfRangeError as e:\n      if max_steps is None:\n        logging.info('Input queue is exhausted.')\n      else:\n        logging.warn('Input queue is exhausted: %s.', e)\n```\n\n...but this means that the call at:\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/learn/python/learn/graph_actions.py#L781\n\n```\n  _write_summary_results(output_dir, eval_results, current_global_step)\n```\n\ngets `None` for `eval_results`, which then causes problems at...\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/learn/python/learn/graph_actions.py#L612\n\n```\n  return ', '.join('%s = %s' % (k, v) for k, v in eval_results.items())\n```\n\nbecause you can't call `.items()` on `None`.\n"}