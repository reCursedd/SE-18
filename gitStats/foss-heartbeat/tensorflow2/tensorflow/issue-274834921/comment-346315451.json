{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/346315451", "html_url": "https://github.com/tensorflow/tensorflow/pull/14653#issuecomment-346315451", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14653", "id": 346315451, "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjMxNTQ1MQ==", "user": {"login": "DavidNorman", "id": 606831, "node_id": "MDQ6VXNlcjYwNjgzMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/606831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DavidNorman", "html_url": "https://github.com/DavidNorman", "followers_url": "https://api.github.com/users/DavidNorman/followers", "following_url": "https://api.github.com/users/DavidNorman/following{/other_user}", "gists_url": "https://api.github.com/users/DavidNorman/gists{/gist_id}", "starred_url": "https://api.github.com/users/DavidNorman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DavidNorman/subscriptions", "organizations_url": "https://api.github.com/users/DavidNorman/orgs", "repos_url": "https://api.github.com/users/DavidNorman/repos", "events_url": "https://api.github.com/users/DavidNorman/events{/privacy}", "received_events_url": "https://api.github.com/users/DavidNorman/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-22T10:54:33Z", "updated_at": "2017-11-22T11:04:31Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1794715\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ebrevdo\">@ebrevdo</a></p>\n<p>hello.</p>\n<p>thanks for the feedback. I have a working version of dynamic_rnn at the moment, although obviously it relies on changes to the XLA bridge, while_loop and dynamic_rnn that are not present in the public version of Tensorflow.  In an ideal world I would rather abandon my changes and have our version of TF the same as the public one.</p>\n<p>i am interested to hear more about what you are doing. can someone who is working on it contact me so I can get a better idea of what is going on?  for instance, are you going to have the python code for while_loop generate XlaWhile ops directly, or fix up the functionalize_loop and mark_for_compilation_pass code. also - will you change the clustering code so that the forward and backward pass loops (and the gather loop) are placed into the same cluster to be compiled together?</p>\n<p>thanks.</p>", "body_text": "@ebrevdo\nhello.\nthanks for the feedback. I have a working version of dynamic_rnn at the moment, although obviously it relies on changes to the XLA bridge, while_loop and dynamic_rnn that are not present in the public version of Tensorflow.  In an ideal world I would rather abandon my changes and have our version of TF the same as the public one.\ni am interested to hear more about what you are doing. can someone who is working on it contact me so I can get a better idea of what is going on?  for instance, are you going to have the python code for while_loop generate XlaWhile ops directly, or fix up the functionalize_loop and mark_for_compilation_pass code. also - will you change the clustering code so that the forward and backward pass loops (and the gather loop) are placed into the same cluster to be compiled together?\nthanks.", "body": "@ebrevdo \r\n\r\nhello.\r\n\r\nthanks for the feedback. I have a working version of dynamic_rnn at the moment, although obviously it relies on changes to the XLA bridge, while_loop and dynamic_rnn that are not present in the public version of Tensorflow.  In an ideal world I would rather abandon my changes and have our version of TF the same as the public one.\r\n\r\ni am interested to hear more about what you are doing. can someone who is working on it contact me so I can get a better idea of what is going on?  for instance, are you going to have the python code for while_loop generate XlaWhile ops directly, or fix up the functionalize_loop and mark_for_compilation_pass code. also - will you change the clustering code so that the forward and backward pass loops (and the gather loop) are placed into the same cluster to be compiled together?\r\n\r\n thanks.\r\n\r\n\r\n"}