{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/269351005", "html_url": "https://github.com/tensorflow/tensorflow/pull/6387#issuecomment-269351005", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6387", "id": 269351005, "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTM1MTAwNQ==", "user": {"login": "AndreasMadsen", "id": 505333, "node_id": "MDQ6VXNlcjUwNTMzMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/505333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreasMadsen", "html_url": "https://github.com/AndreasMadsen", "followers_url": "https://api.github.com/users/AndreasMadsen/followers", "following_url": "https://api.github.com/users/AndreasMadsen/following{/other_user}", "gists_url": "https://api.github.com/users/AndreasMadsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreasMadsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreasMadsen/subscriptions", "organizations_url": "https://api.github.com/users/AndreasMadsen/orgs", "repos_url": "https://api.github.com/users/AndreasMadsen/repos", "events_url": "https://api.github.com/users/AndreasMadsen/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreasMadsen/received_events", "type": "User", "site_admin": false}, "created_at": "2016-12-27T16:48:46Z", "updated_at": "2016-12-27T16:48:46Z", "author_association": "CONTRIBUTOR", "body_html": "<blockquote>\n<p>I don't think we need to worry about top_k not having a GPU kernel-- it's a core op, so adding kernels to it is more straightforward than adding (and supporting and maintaining) a few new kernels in contrib.</p>\n</blockquote>\n<p>Originally we implemented sparsemax from a performance perspective, not from a maintenance perspective.</p>\n<p>I've replaced the kernels such the implementations just use core ops (see <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/ccf12a892d4a9b4f3166e5818374bf65e7a13195/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/ccf12a892d4a9b4f3166e5818374bf65e7a13195\"><tt>ccf12a8</tt></a>). One issue I couldn't solve was how to extract the cumsum values without depending on the batch size <code>.get_shape()[0]</code> (see <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/ccf12a892d4a9b4f3166e5818374bf65e7a13195#diff-e786beafb4ecbf8faeae13d5d3d75ea4R66/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/ccf12a892d4a9b4f3166e5818374bf65e7a13195#diff-e786beafb4ecbf8faeae13d5d3d75ea4R66\"><tt>ccf12a8</tt>#diff-e786beafb4ecbf8faeae13d5d3d75ea4R66</a>).</p>\n<blockquote>\n<p>As for gradients, it can be done with Defun and grad_func, see for example <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"180147209\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/4661\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/4661/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/4661\">#4661</a>. But I'm curious why it is needed at all?</p>\n</blockquote>\n<p>It is not necessary as such, but the gradients of <code>sparsemax</code> and <code>sparsemax_loss</code> are very simple. I assume it will be more performant to express them directly, than just using backprop though a fairly complex graph. I tried to implement them using <code>Defun</code> as you sugested, unfortunately I get <code>ValueError: Cannot convert an unknown Dimension to a Tensor: ?</code> errors. Can you take a look at <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/ca605df0991d4de2f4f78c7381e9ed30d53548cf/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/ca605df0991d4de2f4f78c7381e9ed30d53548cf\"><tt>ca605df</tt></a> ?</p>\n<details>\n  <summary>full error message</summary>\n<pre><code>$ PYTHONPATH=tensorflow/_python_build python3 tensorflow/tensorflow/contrib/sparsemax/python/kernel_tests/sparsemax_test.py\n\n/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/function.py:969: DeprecationWarning: inspect.getargspec() is deprecated, use inspect.signature() instead\n  argspec = inspect.getargspec(func)\nEE.\n======================================================================\nERROR: testDouble (__main__.SparsemaxTest)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/op_def_library.py\", line 491, in apply_op\n    preferred_dtype=default_dtype)\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/ops.py\", line 716, in internal_convert_to_tensor\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/constant_op.py\", line 212, in _dimension_tensor_conversion_function\n    raise ValueError(\"Cannot convert an unknown Dimension to a Tensor: %s\" % d)\nValueError: Cannot convert an unknown Dimension to a Tensor: ?\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"tensorflow/tensorflow/contrib/sparsemax/python/kernel_tests/sparsemax_test.py\", line 258, in testDouble\n    self._test_dtype('float64')\n  File \"tensorflow/tensorflow/contrib/sparsemax/python/kernel_tests/sparsemax_test.py\", line 224, in _test_dtype\n    self._test_sparsemax_against_numpy(dtype, random, use_gpu=False)\n  File \"tensorflow/tensorflow/contrib/sparsemax/python/kernel_tests/sparsemax_test.py\", line 83, in _test_sparsemax_against_numpy\n    tf_sparsemax_op, tf_sparsemax_out = self._tf_sparsemax(z, dtype, use_gpu)\n  File \"tensorflow/tensorflow/contrib/sparsemax/python/kernel_tests/sparsemax_test.py\", line 74, in _tf_sparsemax\n    tf_sparsemax_op = sparsemax(z.astype(dtype))\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/function.py\", line 885, in __call__\n    return self.instantiate(input_types)(*args, **kwargs)\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/function.py\", line 860, in instantiate\n    _ = defined.name  # Fully instantiate the function definition.\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/function.py\", line 608, in name\n    self._create_definition_if_needed()\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/function.py\", line 659, in _create_definition_if_needed\n    outputs = self._func(*inputs)\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/contrib/sparsemax/python/ops/sparsemax.py\", line 90, in sparsemax\n    return fprop(logits)\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/function.py\", line 885, in __call__\n    return self.instantiate(input_types)(*args, **kwargs)\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/function.py\", line 860, in instantiate\n    _ = defined.name  # Fully instantiate the function definition.\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/function.py\", line 608, in name\n    self._create_definition_if_needed()\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/function.py\", line 659, in _create_definition_if_needed\n    outputs = self._func(*inputs)\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/contrib/sparsemax/python/ops/sparsemax.py\", line 67, in fprop\n    z_sorted, _ = nn.top_k(z, k=dims)\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/ops/nn_ops.py\", line 1946, in top_k\n    return gen_nn_ops._top_kv2(input, k=k, sorted=sorted, name=name)\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/ops/gen_nn_ops.py\", line 2464, in _top_kv2\n    name=name)\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/op_def_library.py\", line 504, in apply_op\n    values, as_ref=input_arg.is_ref).dtype.name\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/ops.py\", line 716, in internal_convert_to_tensor\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/constant_op.py\", line 212, in _dimension_tensor_conversion_function\n    raise ValueError(\"Cannot convert an unknown Dimension to a Tensor: %s\" % d)\nValueError: Cannot convert an unknown Dimension to a Tensor: ?\n\n======================================================================\nERROR: testFloat (__main__.SparsemaxTest)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/op_def_library.py\", line 491, in apply_op\n    preferred_dtype=default_dtype)\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/ops.py\", line 716, in internal_convert_to_tensor\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/constant_op.py\", line 212, in _dimension_tensor_conversion_function\n    raise ValueError(\"Cannot convert an unknown Dimension to a Tensor: %s\" % d)\nValueError: Cannot convert an unknown Dimension to a Tensor: ?\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"tensorflow/tensorflow/contrib/sparsemax/python/kernel_tests/sparsemax_test.py\", line 255, in testFloat\n    self._test_dtype('float32')\n  File \"tensorflow/tensorflow/contrib/sparsemax/python/kernel_tests/sparsemax_test.py\", line 224, in _test_dtype\n    self._test_sparsemax_against_numpy(dtype, random, use_gpu=False)\n  File \"tensorflow/tensorflow/contrib/sparsemax/python/kernel_tests/sparsemax_test.py\", line 83, in _test_sparsemax_against_numpy\n    tf_sparsemax_op, tf_sparsemax_out = self._tf_sparsemax(z, dtype, use_gpu)\n  File \"tensorflow/tensorflow/contrib/sparsemax/python/kernel_tests/sparsemax_test.py\", line 74, in _tf_sparsemax\n    tf_sparsemax_op = sparsemax(z.astype(dtype))\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/function.py\", line 885, in __call__\n    return self.instantiate(input_types)(*args, **kwargs)\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/function.py\", line 860, in instantiate\n    _ = defined.name  # Fully instantiate the function definition.\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/function.py\", line 608, in name\n    self._create_definition_if_needed()\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/function.py\", line 659, in _create_definition_if_needed\n    outputs = self._func(*inputs)\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/contrib/sparsemax/python/ops/sparsemax.py\", line 90, in sparsemax\n    return fprop(logits)\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/function.py\", line 885, in __call__\n    return self.instantiate(input_types)(*args, **kwargs)\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/function.py\", line 860, in instantiate\n    _ = defined.name  # Fully instantiate the function definition.\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/function.py\", line 608, in name\n    self._create_definition_if_needed()\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/function.py\", line 659, in _create_definition_if_needed\n    outputs = self._func(*inputs)\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/contrib/sparsemax/python/ops/sparsemax.py\", line 67, in fprop\n    z_sorted, _ = nn.top_k(z, k=dims)\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/ops/nn_ops.py\", line 1946, in top_k\n    return gen_nn_ops._top_kv2(input, k=k, sorted=sorted, name=name)\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/ops/gen_nn_ops.py\", line 2464, in _top_kv2\n    name=name)\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/op_def_library.py\", line 504, in apply_op\n    values, as_ref=input_arg.is_ref).dtype.name\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/ops.py\", line 716, in internal_convert_to_tensor\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/constant_op.py\", line 212, in _dimension_tensor_conversion_function\n    raise ValueError(\"Cannot convert an unknown Dimension to a Tensor: %s\" % d)\nValueError: Cannot convert an unknown Dimension to a Tensor: ?\n\n----------------------------------------------------------------------\nRan 3 tests in 0.029s\n\nFAILED (errors=2)\n</code></pre>\n</details>", "body_text": "I don't think we need to worry about top_k not having a GPU kernel-- it's a core op, so adding kernels to it is more straightforward than adding (and supporting and maintaining) a few new kernels in contrib.\n\nOriginally we implemented sparsemax from a performance perspective, not from a maintenance perspective.\nI've replaced the kernels such the implementations just use core ops (see ccf12a8). One issue I couldn't solve was how to extract the cumsum values without depending on the batch size .get_shape()[0] (see ccf12a8#diff-e786beafb4ecbf8faeae13d5d3d75ea4R66).\n\nAs for gradients, it can be done with Defun and grad_func, see for example #4661. But I'm curious why it is needed at all?\n\nIt is not necessary as such, but the gradients of sparsemax and sparsemax_loss are very simple. I assume it will be more performant to express them directly, than just using backprop though a fairly complex graph. I tried to implement them using Defun as you sugested, unfortunately I get ValueError: Cannot convert an unknown Dimension to a Tensor: ? errors. Can you take a look at ca605df ?\n\n  full error message\n$ PYTHONPATH=tensorflow/_python_build python3 tensorflow/tensorflow/contrib/sparsemax/python/kernel_tests/sparsemax_test.py\n\n/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/function.py:969: DeprecationWarning: inspect.getargspec() is deprecated, use inspect.signature() instead\n  argspec = inspect.getargspec(func)\nEE.\n======================================================================\nERROR: testDouble (__main__.SparsemaxTest)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/op_def_library.py\", line 491, in apply_op\n    preferred_dtype=default_dtype)\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/ops.py\", line 716, in internal_convert_to_tensor\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/constant_op.py\", line 212, in _dimension_tensor_conversion_function\n    raise ValueError(\"Cannot convert an unknown Dimension to a Tensor: %s\" % d)\nValueError: Cannot convert an unknown Dimension to a Tensor: ?\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"tensorflow/tensorflow/contrib/sparsemax/python/kernel_tests/sparsemax_test.py\", line 258, in testDouble\n    self._test_dtype('float64')\n  File \"tensorflow/tensorflow/contrib/sparsemax/python/kernel_tests/sparsemax_test.py\", line 224, in _test_dtype\n    self._test_sparsemax_against_numpy(dtype, random, use_gpu=False)\n  File \"tensorflow/tensorflow/contrib/sparsemax/python/kernel_tests/sparsemax_test.py\", line 83, in _test_sparsemax_against_numpy\n    tf_sparsemax_op, tf_sparsemax_out = self._tf_sparsemax(z, dtype, use_gpu)\n  File \"tensorflow/tensorflow/contrib/sparsemax/python/kernel_tests/sparsemax_test.py\", line 74, in _tf_sparsemax\n    tf_sparsemax_op = sparsemax(z.astype(dtype))\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/function.py\", line 885, in __call__\n    return self.instantiate(input_types)(*args, **kwargs)\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/function.py\", line 860, in instantiate\n    _ = defined.name  # Fully instantiate the function definition.\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/function.py\", line 608, in name\n    self._create_definition_if_needed()\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/function.py\", line 659, in _create_definition_if_needed\n    outputs = self._func(*inputs)\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/contrib/sparsemax/python/ops/sparsemax.py\", line 90, in sparsemax\n    return fprop(logits)\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/function.py\", line 885, in __call__\n    return self.instantiate(input_types)(*args, **kwargs)\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/function.py\", line 860, in instantiate\n    _ = defined.name  # Fully instantiate the function definition.\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/function.py\", line 608, in name\n    self._create_definition_if_needed()\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/function.py\", line 659, in _create_definition_if_needed\n    outputs = self._func(*inputs)\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/contrib/sparsemax/python/ops/sparsemax.py\", line 67, in fprop\n    z_sorted, _ = nn.top_k(z, k=dims)\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/ops/nn_ops.py\", line 1946, in top_k\n    return gen_nn_ops._top_kv2(input, k=k, sorted=sorted, name=name)\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/ops/gen_nn_ops.py\", line 2464, in _top_kv2\n    name=name)\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/op_def_library.py\", line 504, in apply_op\n    values, as_ref=input_arg.is_ref).dtype.name\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/ops.py\", line 716, in internal_convert_to_tensor\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/constant_op.py\", line 212, in _dimension_tensor_conversion_function\n    raise ValueError(\"Cannot convert an unknown Dimension to a Tensor: %s\" % d)\nValueError: Cannot convert an unknown Dimension to a Tensor: ?\n\n======================================================================\nERROR: testFloat (__main__.SparsemaxTest)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/op_def_library.py\", line 491, in apply_op\n    preferred_dtype=default_dtype)\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/ops.py\", line 716, in internal_convert_to_tensor\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/constant_op.py\", line 212, in _dimension_tensor_conversion_function\n    raise ValueError(\"Cannot convert an unknown Dimension to a Tensor: %s\" % d)\nValueError: Cannot convert an unknown Dimension to a Tensor: ?\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"tensorflow/tensorflow/contrib/sparsemax/python/kernel_tests/sparsemax_test.py\", line 255, in testFloat\n    self._test_dtype('float32')\n  File \"tensorflow/tensorflow/contrib/sparsemax/python/kernel_tests/sparsemax_test.py\", line 224, in _test_dtype\n    self._test_sparsemax_against_numpy(dtype, random, use_gpu=False)\n  File \"tensorflow/tensorflow/contrib/sparsemax/python/kernel_tests/sparsemax_test.py\", line 83, in _test_sparsemax_against_numpy\n    tf_sparsemax_op, tf_sparsemax_out = self._tf_sparsemax(z, dtype, use_gpu)\n  File \"tensorflow/tensorflow/contrib/sparsemax/python/kernel_tests/sparsemax_test.py\", line 74, in _tf_sparsemax\n    tf_sparsemax_op = sparsemax(z.astype(dtype))\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/function.py\", line 885, in __call__\n    return self.instantiate(input_types)(*args, **kwargs)\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/function.py\", line 860, in instantiate\n    _ = defined.name  # Fully instantiate the function definition.\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/function.py\", line 608, in name\n    self._create_definition_if_needed()\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/function.py\", line 659, in _create_definition_if_needed\n    outputs = self._func(*inputs)\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/contrib/sparsemax/python/ops/sparsemax.py\", line 90, in sparsemax\n    return fprop(logits)\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/function.py\", line 885, in __call__\n    return self.instantiate(input_types)(*args, **kwargs)\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/function.py\", line 860, in instantiate\n    _ = defined.name  # Fully instantiate the function definition.\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/function.py\", line 608, in name\n    self._create_definition_if_needed()\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/function.py\", line 659, in _create_definition_if_needed\n    outputs = self._func(*inputs)\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/contrib/sparsemax/python/ops/sparsemax.py\", line 67, in fprop\n    z_sorted, _ = nn.top_k(z, k=dims)\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/ops/nn_ops.py\", line 1946, in top_k\n    return gen_nn_ops._top_kv2(input, k=k, sorted=sorted, name=name)\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/ops/gen_nn_ops.py\", line 2464, in _top_kv2\n    name=name)\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/op_def_library.py\", line 504, in apply_op\n    values, as_ref=input_arg.is_ref).dtype.name\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/ops.py\", line 716, in internal_convert_to_tensor\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/constant_op.py\", line 212, in _dimension_tensor_conversion_function\n    raise ValueError(\"Cannot convert an unknown Dimension to a Tensor: %s\" % d)\nValueError: Cannot convert an unknown Dimension to a Tensor: ?\n\n----------------------------------------------------------------------\nRan 3 tests in 0.029s\n\nFAILED (errors=2)", "body": "> I don't think we need to worry about top_k not having a GPU kernel-- it's a core op, so adding kernels to it is more straightforward than adding (and supporting and maintaining) a few new kernels in contrib.\r\n\r\nOriginally we implemented sparsemax from a performance perspective, not from a maintenance perspective.\r\n\r\nI've replaced the kernels such the implementations just use core ops (see https://github.com/tensorflow/tensorflow/pull/6387/commits/ccf12a892d4a9b4f3166e5818374bf65e7a13195). One issue I couldn't solve was how to extract the cumsum values without depending on the batch size `.get_shape()[0]` (see https://github.com/tensorflow/tensorflow/pull/6387/commits/ccf12a892d4a9b4f3166e5818374bf65e7a13195#diff-e786beafb4ecbf8faeae13d5d3d75ea4R66).\r\n\r\n> As for gradients, it can be done with Defun and grad_func, see for example #4661. But I'm curious why it is needed at all?\r\n\r\nIt is not necessary as such, but the gradients of `sparsemax` and `sparsemax_loss` are very simple. I assume it will be more performant to express them directly, than just using backprop though a fairly complex graph. I tried to implement them using `Defun` as you sugested, unfortunately I get `ValueError: Cannot convert an unknown Dimension to a Tensor: ?` errors. Can you take a look at https://github.com/tensorflow/tensorflow/pull/6387/commits/ca605df0991d4de2f4f78c7381e9ed30d53548cf ?\r\n\r\n\r\n<details>\r\n  <summary>full error message</summary>\r\n\r\n```\r\n$ PYTHONPATH=tensorflow/_python_build python3 tensorflow/tensorflow/contrib/sparsemax/python/kernel_tests/sparsemax_test.py\r\n\r\n/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/function.py:969: DeprecationWarning: inspect.getargspec() is deprecated, use inspect.signature() instead\r\n  argspec = inspect.getargspec(func)\r\nEE.\r\n======================================================================\r\nERROR: testDouble (__main__.SparsemaxTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/op_def_library.py\", line 491, in apply_op\r\n    preferred_dtype=default_dtype)\r\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/ops.py\", line 716, in internal_convert_to_tensor\r\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\r\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/constant_op.py\", line 212, in _dimension_tensor_conversion_function\r\n    raise ValueError(\"Cannot convert an unknown Dimension to a Tensor: %s\" % d)\r\nValueError: Cannot convert an unknown Dimension to a Tensor: ?\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"tensorflow/tensorflow/contrib/sparsemax/python/kernel_tests/sparsemax_test.py\", line 258, in testDouble\r\n    self._test_dtype('float64')\r\n  File \"tensorflow/tensorflow/contrib/sparsemax/python/kernel_tests/sparsemax_test.py\", line 224, in _test_dtype\r\n    self._test_sparsemax_against_numpy(dtype, random, use_gpu=False)\r\n  File \"tensorflow/tensorflow/contrib/sparsemax/python/kernel_tests/sparsemax_test.py\", line 83, in _test_sparsemax_against_numpy\r\n    tf_sparsemax_op, tf_sparsemax_out = self._tf_sparsemax(z, dtype, use_gpu)\r\n  File \"tensorflow/tensorflow/contrib/sparsemax/python/kernel_tests/sparsemax_test.py\", line 74, in _tf_sparsemax\r\n    tf_sparsemax_op = sparsemax(z.astype(dtype))\r\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/function.py\", line 885, in __call__\r\n    return self.instantiate(input_types)(*args, **kwargs)\r\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/function.py\", line 860, in instantiate\r\n    _ = defined.name  # Fully instantiate the function definition.\r\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/function.py\", line 608, in name\r\n    self._create_definition_if_needed()\r\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/function.py\", line 659, in _create_definition_if_needed\r\n    outputs = self._func(*inputs)\r\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/contrib/sparsemax/python/ops/sparsemax.py\", line 90, in sparsemax\r\n    return fprop(logits)\r\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/function.py\", line 885, in __call__\r\n    return self.instantiate(input_types)(*args, **kwargs)\r\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/function.py\", line 860, in instantiate\r\n    _ = defined.name  # Fully instantiate the function definition.\r\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/function.py\", line 608, in name\r\n    self._create_definition_if_needed()\r\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/function.py\", line 659, in _create_definition_if_needed\r\n    outputs = self._func(*inputs)\r\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/contrib/sparsemax/python/ops/sparsemax.py\", line 67, in fprop\r\n    z_sorted, _ = nn.top_k(z, k=dims)\r\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/ops/nn_ops.py\", line 1946, in top_k\r\n    return gen_nn_ops._top_kv2(input, k=k, sorted=sorted, name=name)\r\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/ops/gen_nn_ops.py\", line 2464, in _top_kv2\r\n    name=name)\r\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/op_def_library.py\", line 504, in apply_op\r\n    values, as_ref=input_arg.is_ref).dtype.name\r\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/ops.py\", line 716, in internal_convert_to_tensor\r\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\r\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/constant_op.py\", line 212, in _dimension_tensor_conversion_function\r\n    raise ValueError(\"Cannot convert an unknown Dimension to a Tensor: %s\" % d)\r\nValueError: Cannot convert an unknown Dimension to a Tensor: ?\r\n\r\n======================================================================\r\nERROR: testFloat (__main__.SparsemaxTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/op_def_library.py\", line 491, in apply_op\r\n    preferred_dtype=default_dtype)\r\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/ops.py\", line 716, in internal_convert_to_tensor\r\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\r\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/constant_op.py\", line 212, in _dimension_tensor_conversion_function\r\n    raise ValueError(\"Cannot convert an unknown Dimension to a Tensor: %s\" % d)\r\nValueError: Cannot convert an unknown Dimension to a Tensor: ?\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"tensorflow/tensorflow/contrib/sparsemax/python/kernel_tests/sparsemax_test.py\", line 255, in testFloat\r\n    self._test_dtype('float32')\r\n  File \"tensorflow/tensorflow/contrib/sparsemax/python/kernel_tests/sparsemax_test.py\", line 224, in _test_dtype\r\n    self._test_sparsemax_against_numpy(dtype, random, use_gpu=False)\r\n  File \"tensorflow/tensorflow/contrib/sparsemax/python/kernel_tests/sparsemax_test.py\", line 83, in _test_sparsemax_against_numpy\r\n    tf_sparsemax_op, tf_sparsemax_out = self._tf_sparsemax(z, dtype, use_gpu)\r\n  File \"tensorflow/tensorflow/contrib/sparsemax/python/kernel_tests/sparsemax_test.py\", line 74, in _tf_sparsemax\r\n    tf_sparsemax_op = sparsemax(z.astype(dtype))\r\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/function.py\", line 885, in __call__\r\n    return self.instantiate(input_types)(*args, **kwargs)\r\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/function.py\", line 860, in instantiate\r\n    _ = defined.name  # Fully instantiate the function definition.\r\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/function.py\", line 608, in name\r\n    self._create_definition_if_needed()\r\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/function.py\", line 659, in _create_definition_if_needed\r\n    outputs = self._func(*inputs)\r\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/contrib/sparsemax/python/ops/sparsemax.py\", line 90, in sparsemax\r\n    return fprop(logits)\r\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/function.py\", line 885, in __call__\r\n    return self.instantiate(input_types)(*args, **kwargs)\r\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/function.py\", line 860, in instantiate\r\n    _ = defined.name  # Fully instantiate the function definition.\r\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/function.py\", line 608, in name\r\n    self._create_definition_if_needed()\r\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/function.py\", line 659, in _create_definition_if_needed\r\n    outputs = self._func(*inputs)\r\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/contrib/sparsemax/python/ops/sparsemax.py\", line 67, in fprop\r\n    z_sorted, _ = nn.top_k(z, k=dims)\r\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/ops/nn_ops.py\", line 1946, in top_k\r\n    return gen_nn_ops._top_kv2(input, k=k, sorted=sorted, name=name)\r\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/ops/gen_nn_ops.py\", line 2464, in _top_kv2\r\n    name=name)\r\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/op_def_library.py\", line 504, in apply_op\r\n    values, as_ref=input_arg.is_ref).dtype.name\r\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/ops.py\", line 716, in internal_convert_to_tensor\r\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\r\n  File \"/Users/Andreas/Sites/tensorflow/_python_build/tensorflow/python/framework/constant_op.py\", line 212, in _dimension_tensor_conversion_function\r\n    raise ValueError(\"Cannot convert an unknown Dimension to a Tensor: %s\" % d)\r\nValueError: Cannot convert an unknown Dimension to a Tensor: ?\r\n\r\n----------------------------------------------------------------------\r\nRan 3 tests in 0.029s\r\n\r\nFAILED (errors=2)\r\n```\r\n</details>"}