{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/94929298", "pull_request_review_id": 15471630, "id": 94929298, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk0OTI5Mjk4", "diff_hunk": "@@ -0,0 +1,252 @@\n+# Copyright 2016 The TensorFlow Authors. All Rights Reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ==============================================================================\n+\"\"\"Tests for SparsemaxOp.\"\"\"\n+\n+from __future__ import absolute_import\n+from __future__ import division\n+from __future__ import print_function\n+\n+import numpy as np\n+\n+from tensorflow.contrib.sparsemax import sparsemax\n+from tensorflow.python.ops import gradient_checker\n+from tensorflow.python.ops import array_ops\n+from tensorflow.python.ops import gradients_impl\n+from tensorflow.python.framework import constant_op\n+from tensorflow.python.platform import test\n+\n+test_obs = 100\n+\n+\n+class SparsemaxTest(test.TestCase):\n+\n+  def _np_sparsemax(self, z):\n+    z = z - np.mean(z, axis=1)[:, np.newaxis]\n+\n+    # sort z\n+    z_sorted = np.sort(z, axis=1)[:, ::-1]\n+\n+    # calculate k(z)\n+    z_cumsum = np.cumsum(z_sorted, axis=1)\n+    k = np.arange(1, z.shape[1] + 1)\n+    z_check = 1 + k * z_sorted > z_cumsum\n+    # use argmax to get the index by row as .nonzero() doesn't\n+    # take an axis argument. np.argmax return the first index, but the last\n+    # index is required here, use np.flip to get the last index and\n+    # `z.shape[axis]` to compensate for np.flip afterwards.\n+    k_z = z.shape[1] - np.argmax(z_check[:, ::-1], axis=1)\n+\n+    # calculate tau(z)\n+    tau_sum = z_cumsum[np.arange(0, z.shape[0]), k_z - 1]\n+    tau_z = ((tau_sum - 1) / k_z).reshape(-1, 1)\n+\n+    # calculate p\n+    return np.maximum(0, z - tau_z)\n+\n+  def _np_sparsemax_grad(self, z):\n+    # chain rule\n+    grad = np.ones_like(z)\n+\n+    # Construct S(z)\n+    properbility = self._np_sparsemax(z)", "path": "tensorflow/contrib/sparsemax/python/kernel_tests/sparsemax_test.py", "position": null, "original_position": 63, "commit_id": "801ad7826fa0037221badde9d80e4b0898dcd4eb", "original_commit_id": "b4183d0669efe3e2116ffe0f1c77e4ef6123e0c9", "user": {"login": "scottclifford", "id": 1653312, "node_id": "MDQ6VXNlcjE2NTMzMTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1653312?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottclifford", "html_url": "https://github.com/scottclifford", "followers_url": "https://api.github.com/users/scottclifford/followers", "following_url": "https://api.github.com/users/scottclifford/following{/other_user}", "gists_url": "https://api.github.com/users/scottclifford/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottclifford/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottclifford/subscriptions", "organizations_url": "https://api.github.com/users/scottclifford/orgs", "repos_url": "https://api.github.com/users/scottclifford/repos", "events_url": "https://api.github.com/users/scottclifford/events{/privacy}", "received_events_url": "https://api.github.com/users/scottclifford/received_events", "type": "User", "site_admin": false}, "body": "probability?", "created_at": "2017-01-06T10:46:32Z", "updated_at": "2017-02-03T08:54:17Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/6387#discussion_r94929298", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/6387", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/94929298"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/6387#discussion_r94929298"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/6387"}}, "body_html": "<p>probability?</p>", "body_text": "probability?"}