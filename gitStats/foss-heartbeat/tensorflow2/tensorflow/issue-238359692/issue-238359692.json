{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11039", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11039/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11039/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11039/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/11039", "id": 238359692, "node_id": "MDExOlB1bGxSZXF1ZXN0MTI3MzUyNDg4", "number": 11039, "title": "coerce dict keys to strings when sorting for python3 compat", "user": {"login": "bmabey", "id": 1837, "node_id": "MDQ6VXNlcjE4Mzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmabey", "html_url": "https://github.com/bmabey", "followers_url": "https://api.github.com/users/bmabey/followers", "following_url": "https://api.github.com/users/bmabey/following{/other_user}", "gists_url": "https://api.github.com/users/bmabey/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmabey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmabey/subscriptions", "organizations_url": "https://api.github.com/users/bmabey/orgs", "repos_url": "https://api.github.com/users/bmabey/repos", "events_url": "https://api.github.com/users/bmabey/events{/privacy}", "received_events_url": "https://api.github.com/users/bmabey/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 419840263, "node_id": "MDU6TGFiZWw0MTk4NDAyNjM=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/awaiting%20testing%20(then%20merge)", "name": "awaiting testing (then merge)", "color": "c2e0c6", "default": false}, {"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-25T04:44:07Z", "updated_at": "2017-06-26T18:00:08Z", "closed_at": "2017-06-26T18:00:08Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11039", "html_url": "https://github.com/tensorflow/tensorflow/pull/11039", "diff_url": "https://github.com/tensorflow/tensorflow/pull/11039.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/11039.patch"}, "body_html": "<p>When tensor dicts have heterogeneous key types python 3 blows up due to the way <code>sorted</code> is being used.</p>\n<p>In python 2 you can sort dicts with heterogeneous types:</p>\n<div class=\"highlight highlight-source-python\"><pre>   In [<span class=\"pl-c1\">1</span>]: d <span class=\"pl-k\">=</span> {<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>z<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>: <span class=\"pl-c1\">42</span>, (<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>a<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>b<span class=\"pl-pds\">\"</span></span>): <span class=\"pl-c1\">100</span>}\n   In [<span class=\"pl-c1\">2</span>]: <span class=\"pl-c1\">sorted</span>(d)\n   Out[<span class=\"pl-c1\">2</span>]: [<span class=\"pl-c1\">1</span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>z<span class=\"pl-pds\">'</span></span>, (<span class=\"pl-s\"><span class=\"pl-pds\">'</span>a<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>b<span class=\"pl-pds\">'</span></span>)]</pre></div>\n<p>In python 3 you get an error:</p>\n<div class=\"highlight highlight-source-python\"><pre>   In [<span class=\"pl-c1\">1</span>]: d <span class=\"pl-k\">=</span> {<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>z<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>: <span class=\"pl-c1\">42</span>, (<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>a<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>b<span class=\"pl-pds\">\"</span></span>): <span class=\"pl-c1\">100</span>}\n   In [<span class=\"pl-c1\">2</span>]: <span class=\"pl-c1\">sorted</span>(d)\n   <span class=\"pl-ii\">--------------------------------------------------------------------------</span><span class=\"pl-k\">-</span>\n   <span class=\"pl-c1\">TypeError</span>                                 Traceback (most recent call last)\n   <span class=\"pl-k\">&lt;</span>ipython<span class=\"pl-k\">-</span><span class=\"pl-c1\">input</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">5</span><span class=\"pl-k\">-</span><span class=\"pl-ii\">01813638448d</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">in</span> <span class=\"pl-k\">&lt;</span>module<span class=\"pl-k\">&gt;</span>()\n   <span class=\"pl-ii\">----</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">1</span> <span class=\"pl-c1\">sorted</span>(d)</pre></div>\n<p>BTW, I ran into this issue when using the train script in the new object detection model/API: <a href=\"https://github.com/tensorflow/models/blob/master/object_detection/g3doc/running_locally.md\">https://github.com/tensorflow/models/blob/master/object_detection/g3doc/running_locally.md</a></p>", "body_text": "When tensor dicts have heterogeneous key types python 3 blows up due to the way sorted is being used.\nIn python 2 you can sort dicts with heterogeneous types:\n   In [1]: d = {\"z\": 1, 1: 42, (\"a\", \"b\"): 100}\n   In [2]: sorted(d)\n   Out[2]: [1, 'z', ('a', 'b')]\nIn python 3 you get an error:\n   In [1]: d = {\"z\": 1, 1: 42, (\"a\", \"b\"): 100}\n   In [2]: sorted(d)\n   ---------------------------------------------------------------------------\n   TypeError                                 Traceback (most recent call last)\n   <ipython-input-5-01813638448d> in <module>()\n   ----> 1 sorted(d)\nBTW, I ran into this issue when using the train script in the new object detection model/API: https://github.com/tensorflow/models/blob/master/object_detection/g3doc/running_locally.md", "body": "When tensor dicts have heterogeneous key types python 3 blows up due to the way `sorted` is being used.\r\n\r\nIn python 2 you can sort dicts with heterogeneous types:\r\n```python\r\n   In [1]: d = {\"z\": 1, 1: 42, (\"a\", \"b\"): 100}\r\n   In [2]: sorted(d)\r\n   Out[2]: [1, 'z', ('a', 'b')]\r\n```\r\n\r\nIn python 3 you get an error:\r\n```python\r\n   In [1]: d = {\"z\": 1, 1: 42, (\"a\", \"b\"): 100}\r\n   In [2]: sorted(d)\r\n   ---------------------------------------------------------------------------\r\n   TypeError                                 Traceback (most recent call last)\r\n   <ipython-input-5-01813638448d> in <module>()\r\n   ----> 1 sorted(d)\r\n```\r\nBTW, I ran into this issue when using the train script in the new object detection model/API: https://github.com/tensorflow/models/blob/master/object_detection/g3doc/running_locally.md\r\n\r\n\r\n"}