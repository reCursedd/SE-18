{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/420110834", "html_url": "https://github.com/tensorflow/tensorflow/issues/22140#issuecomment-420110834", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22140", "id": 420110834, "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDExMDgzNA==", "user": {"login": "chenghuige", "id": 6323467, "node_id": "MDQ6VXNlcjYzMjM0Njc=", "avatar_url": "https://avatars0.githubusercontent.com/u/6323467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenghuige", "html_url": "https://github.com/chenghuige", "followers_url": "https://api.github.com/users/chenghuige/followers", "following_url": "https://api.github.com/users/chenghuige/following{/other_user}", "gists_url": "https://api.github.com/users/chenghuige/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenghuige/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenghuige/subscriptions", "organizations_url": "https://api.github.com/users/chenghuige/orgs", "repos_url": "https://api.github.com/users/chenghuige/repos", "events_url": "https://api.github.com/users/chenghuige/events{/privacy}", "received_events_url": "https://api.github.com/users/chenghuige/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-11T01:04:18Z", "updated_at": "2018-09-11T01:05:29Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3731025\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/allenlavoie\">@allenlavoie</a> How to add variables to a Model by assigning them to an attribute just like with sub-Layers ?  I could not find any related examples.  Something like self.abc = self.add_variable(\"abc\", [1, 100], initializer=tf.ones_initializer(dtype=tf.float32)) in Model.<strong>init</strong>() will fail and error say '<code>add_variable</code> is not supported on Networks. However, you may assign variables to attributes and they will show up in the weights and variables properties'<br>\nAnother question is if I want to use a Dense layer in a Model,  but the Dense layer out dim is unknown until I see the first input example, say if input is [batch_size, dim] then I will use Dense(dim) , if using Layer<br>\nI think I can do this using build method, for Model how to do this ? I need to write another Layer to do this at first ?</p>", "body_text": "@allenlavoie How to add variables to a Model by assigning them to an attribute just like with sub-Layers ?  I could not find any related examples.  Something like self.abc = self.add_variable(\"abc\", [1, 100], initializer=tf.ones_initializer(dtype=tf.float32)) in Model.init() will fail and error say 'add_variable is not supported on Networks. However, you may assign variables to attributes and they will show up in the weights and variables properties'\nAnother question is if I want to use a Dense layer in a Model,  but the Dense layer out dim is unknown until I see the first input example, say if input is [batch_size, dim] then I will use Dense(dim) , if using Layer\nI think I can do this using build method, for Model how to do this ? I need to write another Layer to do this at first ?", "body": "@allenlavoie How to add variables to a Model by assigning them to an attribute just like with sub-Layers ?  I could not find any related examples.  Something like self.abc = self.add_variable(\"abc\", [1, 100], initializer=tf.ones_initializer(dtype=tf.float32)) in Model.__init__() will fail and error say '`add_variable` is not supported on Networks. However, you may assign variables to attributes and they will show up in the weights and variables properties'  \r\nAnother question is if I want to use a Dense layer in a Model,  but the Dense layer out dim is unknown until I see the first input example, say if input is [batch_size, dim] then I will use Dense(dim) , if using Layer\r\nI think I can do this using build method, for Model how to do this ? I need to write another Layer to do this at first ?"}