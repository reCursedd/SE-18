{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/440565400", "html_url": "https://github.com/tensorflow/tensorflow/issues/23873#issuecomment-440565400", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23873", "id": 440565400, "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDU2NTQwMA==", "user": {"login": "galeone", "id": 8427788, "node_id": "MDQ6VXNlcjg0Mjc3ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/8427788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/galeone", "html_url": "https://github.com/galeone", "followers_url": "https://api.github.com/users/galeone/followers", "following_url": "https://api.github.com/users/galeone/following{/other_user}", "gists_url": "https://api.github.com/users/galeone/gists{/gist_id}", "starred_url": "https://api.github.com/users/galeone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/galeone/subscriptions", "organizations_url": "https://api.github.com/users/galeone/orgs", "repos_url": "https://api.github.com/users/galeone/repos", "events_url": "https://api.github.com/users/galeone/events{/privacy}", "received_events_url": "https://api.github.com/users/galeone/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-21T07:34:28Z", "updated_at": "2018-11-21T07:34:28Z", "author_association": "NONE", "body_html": "<p>It doesn't work because, as stated by <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=710255\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/fchollet\">@fchollet</a> in the comment I linked, the update operations are no more added to the graph (in the global collection) by Keras design, because the keras layers are designed to be used with the keras training loop.</p>\n<p>However, this is a huge problem for the upcoming Tensorflow 2.0, since tf.layers are going to be removed in favor of tf.keras.layers, but those are not drop in replacement.</p>\n<p>As a proof I added the line:</p>\n<div class=\"highlight highlight-source-python\"><pre>update_ops <span class=\"pl-k\">=</span> tf.get_collection(tf.GraphKeys.<span class=\"pl-c1\">UPDATE_OPS</span>)</pre></div>\n<p>just before the definition of <code>train_d</code>.</p>\n<p>The <code>update_ops</code> variable is an empty list.</p>\n<p>I could find the update operations inside the Keras model using <code>D.updates</code>, <code>G.updates</code>, <code>E.updates</code>: but those operations are a function of some \"input\" that's not the input I define when, for example, I define the output tensor <code>G_z = G(z)</code>.</p>\n<p>Hence, Keras layers are not a replacement for the tf.layers and this is a huge problem, especially for people that don't want to use Keras and want to continue using Tensorflow using MonitoredSession, static graph definition and defining the training loop by their self.</p>", "body_text": "It doesn't work because, as stated by @fchollet in the comment I linked, the update operations are no more added to the graph (in the global collection) by Keras design, because the keras layers are designed to be used with the keras training loop.\nHowever, this is a huge problem for the upcoming Tensorflow 2.0, since tf.layers are going to be removed in favor of tf.keras.layers, but those are not drop in replacement.\nAs a proof I added the line:\nupdate_ops = tf.get_collection(tf.GraphKeys.UPDATE_OPS)\njust before the definition of train_d.\nThe update_ops variable is an empty list.\nI could find the update operations inside the Keras model using D.updates, G.updates, E.updates: but those operations are a function of some \"input\" that's not the input I define when, for example, I define the output tensor G_z = G(z).\nHence, Keras layers are not a replacement for the tf.layers and this is a huge problem, especially for people that don't want to use Keras and want to continue using Tensorflow using MonitoredSession, static graph definition and defining the training loop by their self.", "body": "It doesn't work because, as stated by @fchollet in the comment I linked, the update operations are no more added to the graph (in the global collection) by Keras design, because the keras layers are designed to be used with the keras training loop.\r\n\r\nHowever, this is a huge problem for the upcoming Tensorflow 2.0, since tf.layers are going to be removed in favor of tf.keras.layers, but those are not drop in replacement.\r\n\r\nAs a proof I added the line:\r\n```python\r\nupdate_ops = tf.get_collection(tf.GraphKeys.UPDATE_OPS)\r\n```\r\njust before the definition of `train_d`.\r\n\r\nThe `update_ops` variable is an empty list.\r\n\r\nI could find the update operations inside the Keras model using `D.updates`, `G.updates`, `E.updates`: but those operations are a function of some \"input\" that's not the input I define when, for example, I define the output tensor `G_z = G(z)`.\r\n\r\nHence, Keras layers are not a replacement for the tf.layers and this is a huge problem, especially for people that don't want to use Keras and want to continue using Tensorflow using MonitoredSession, static graph definition and defining the training loop by their self."}