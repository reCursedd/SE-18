{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21914", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21914/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21914/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21914/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21914", "id": 354507515, "node_id": "MDU6SXNzdWUzNTQ1MDc1MTU=", "number": 21914, "title": "Read tensor from open cv numpy array with preprocessing for inference", "user": {"login": "tispratik", "id": 80631, "node_id": "MDQ6VXNlcjgwNjMx", "avatar_url": "https://avatars2.githubusercontent.com/u/80631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tispratik", "html_url": "https://github.com/tispratik", "followers_url": "https://api.github.com/users/tispratik/followers", "following_url": "https://api.github.com/users/tispratik/following{/other_user}", "gists_url": "https://api.github.com/users/tispratik/gists{/gist_id}", "starred_url": "https://api.github.com/users/tispratik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tispratik/subscriptions", "organizations_url": "https://api.github.com/users/tispratik/orgs", "repos_url": "https://api.github.com/users/tispratik/repos", "events_url": "https://api.github.com/users/tispratik/events{/privacy}", "received_events_url": "https://api.github.com/users/tispratik/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "poxvoculi", "id": 15676913, "node_id": "MDQ6VXNlcjE1Njc2OTEz", "avatar_url": "https://avatars2.githubusercontent.com/u/15676913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poxvoculi", "html_url": "https://github.com/poxvoculi", "followers_url": "https://api.github.com/users/poxvoculi/followers", "following_url": "https://api.github.com/users/poxvoculi/following{/other_user}", "gists_url": "https://api.github.com/users/poxvoculi/gists{/gist_id}", "starred_url": "https://api.github.com/users/poxvoculi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poxvoculi/subscriptions", "organizations_url": "https://api.github.com/users/poxvoculi/orgs", "repos_url": "https://api.github.com/users/poxvoculi/repos", "events_url": "https://api.github.com/users/poxvoculi/events{/privacy}", "received_events_url": "https://api.github.com/users/poxvoculi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "poxvoculi", "id": 15676913, "node_id": "MDQ6VXNlcjE1Njc2OTEz", "avatar_url": "https://avatars2.githubusercontent.com/u/15676913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poxvoculi", "html_url": "https://github.com/poxvoculi", "followers_url": "https://api.github.com/users/poxvoculi/followers", "following_url": "https://api.github.com/users/poxvoculi/following{/other_user}", "gists_url": "https://api.github.com/users/poxvoculi/gists{/gist_id}", "starred_url": "https://api.github.com/users/poxvoculi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poxvoculi/subscriptions", "organizations_url": "https://api.github.com/users/poxvoculi/orgs", "repos_url": "https://api.github.com/users/poxvoculi/repos", "events_url": "https://api.github.com/users/poxvoculi/events{/privacy}", "received_events_url": "https://api.github.com/users/poxvoculi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-08-27T22:55:49Z", "updated_at": "2018-09-19T22:27:22Z", "closed_at": "2018-09-19T22:27:22Z", "author_association": "NONE", "body_html": "<p><code>label_image.py</code> implementation for inference of an image works great for images on disk. But i have a case wherein I am reading a streaming video from a webcam and I would like to run inference on each image frame to detect the object in the camera feed.</p>\n<p>Currently <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/label_image/label_image.py#L38\">label_image.py</a> only accepts an image on disk and using <code>read_tensor_from_image_file</code> converts it into a Tensor. How do i get a Tensor with the necessary pre-processing as being done in <code>read_tensor_from_image_file</code> from the Open CV image frame that i have in memory?</p>", "body_text": "label_image.py implementation for inference of an image works great for images on disk. But i have a case wherein I am reading a streaming video from a webcam and I would like to run inference on each image frame to detect the object in the camera feed.\nCurrently label_image.py only accepts an image on disk and using read_tensor_from_image_file converts it into a Tensor. How do i get a Tensor with the necessary pre-processing as being done in read_tensor_from_image_file from the Open CV image frame that i have in memory?", "body": "`label_image.py` implementation for inference of an image works great for images on disk. But i have a case wherein I am reading a streaming video from a webcam and I would like to run inference on each image frame to detect the object in the camera feed.\r\n\r\nCurrently [label_image.py][1] only accepts an image on disk and using `read_tensor_from_image_file` converts it into a Tensor. How do i get a Tensor with the necessary pre-processing as being done in `read_tensor_from_image_file` from the Open CV image frame that i have in memory?\r\n\r\n  [1]: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/label_image/label_image.py#L38"}