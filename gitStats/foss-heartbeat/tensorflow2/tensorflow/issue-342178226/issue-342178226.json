{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20908", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20908/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20908/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20908/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20908", "id": 342178226, "node_id": "MDU6SXNzdWUzNDIxNzgyMjY=", "number": 20908, "title": "tf.nn.conv2d() inconsistent dilation rate at runtime", "user": {"login": "yinoue93", "id": 6501574, "node_id": "MDQ6VXNlcjY1MDE1NzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/6501574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yinoue93", "html_url": "https://github.com/yinoue93", "followers_url": "https://api.github.com/users/yinoue93/followers", "following_url": "https://api.github.com/users/yinoue93/following{/other_user}", "gists_url": "https://api.github.com/users/yinoue93/gists{/gist_id}", "starred_url": "https://api.github.com/users/yinoue93/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yinoue93/subscriptions", "organizations_url": "https://api.github.com/users/yinoue93/orgs", "repos_url": "https://api.github.com/users/yinoue93/repos", "events_url": "https://api.github.com/users/yinoue93/events{/privacy}", "received_events_url": "https://api.github.com/users/yinoue93/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-07-18T05:05:42Z", "updated_at": "2018-10-03T08:01:35Z", "closed_at": "2018-08-30T01:28:56Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu 16.04 LTS</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary (pip install)</li>\n<li><strong>TensorFlow version (use command below)</strong>: ('v1.7.0-3-g024aecf414', '1.7.0')</li>\n<li><strong>Python version</strong>: 2.7.12</li>\n<li><strong>Bazel version (if compiling from source)</strong>: N/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: N/A</li>\n<li><strong>CUDA/cuDNN version</strong>: 9.0/7.0.5</li>\n<li><strong>GPU model and memory</strong>: GTX1080, 8GB</li>\n<li><strong>Exact command to reproduce</strong>: shown below</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>Dilated convolution via tf.nn.conv2d() with data_format='NHWC' gets corrupted to 'NCHW' during sess.run(). Since the data_format alone is corrupted and the dilation rate is unchanged, the code fails with an error message indicating that it does not support dilation along the depth dimension (dilation rate of [1, 2, 2, 1] is valid for 'NHWC' format but not for 'NCHW' format).</p>\n<p>It seems that this is a CUDA problem, since if I disable the GPU using os.environ['CUDA_VISIBLE_DEVICES'] = '' line, the code does not error out.<br>\nWeirdly enough, if I don't do anything to the output of tf.nn.conv2d(), the code does not error out either (corresponds to setting use_reduce_mean=False in the below example).<br>\nAlso, if the dilation rate is set as [1, 1, 2, 2], the code does not error out, although this goes against the <a href=\"https://www.tensorflow.org/versions/r1.7/api_docs/python/tf/nn/conv2d\" rel=\"nofollow\">documentation</a>, which says that <code>The dimension order is determined by the value of data_format</code></p>\n<h3>Source code / logs</h3>\n<p>source code to reproduce the bug</p>\n<pre><code>import os\n\nimport numpy as np\nimport tensorflow as tf\n\n# os.environ['CUDA_VISIBLE_DEVICES'] = ''\n\n\ndef bug():\n    use_reduce_mean = True\n    dilation_rate = 2\n\n    # bug # 1: conv2d changes from NHWC to NCHW\n    input_shape = [1, 32, 32, 1]\n    in_place = tf.placeholder(dtype=tf.float32, shape=input_shape)\n    filter_tensor = tf.Variable(tf.random_normal(\n        [3, 3, 1, 1], dtype=tf.float32, stddev=0.1), trainable=True)\n\n    out_tensor = tf.nn.conv2d(\n        in_place, filter=filter_tensor, strides=(1, 1, 1, 1),\n        padding='SAME', dilations=(1, dilation_rate, dilation_rate, 1),\n        data_format='NHWC')\n\n    if use_reduce_mean:\n        out_tensor = tf.reduce_mean(out_tensor)\n    \n    with tf.Session() as sess:\n        init_op = tf.global_variables_initializer()\n        init_op.run()\n    \n        f_dict = {in_place: np.zeros(input_shape)}\n        sess_out = sess.run(out_tensor, feed_dict=f_dict)\n\n\nif __name__ == \"__main__\":\n    bug()\n</code></pre>\n<p>error message:</p>\n<pre><code> Executor failed to create kernel. Invalid argument: Current implementation does not yet support dilations in the batch and depth dimensions.\n         [[Node: Conv2D = Conv2D[T=DT_FLOAT, data_format=\"NCHW\", dilations=[1, 2, 2, 1], padding=\"SAME\", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](Conv2D-0-TransposeNHWCToNCHW-LayoutOptimizer, Variable/read)]]\nTraceback (most recent call last):\n  File \"tmp.py\", line 48, in &lt;module&gt;\n    bug()\n  File \"tmp.py\", line 44, in bug\n    sess_out = sess.run(out_tensor, feed_dict=f_dict)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 905, in run\n    run_metadata_ptr)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1140, in _run\n    feed_dict_tensor, options, run_metadata)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1321, in _do_run\n    run_metadata)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1340, in _do_call\n    raise type(e)(node_def, op, message)\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Current implementation does not yet support dilations in the batch and depth dimensions.\n         [[Node: Conv2D = Conv2D[T=DT_FLOAT, data_format=\"NCHW\", dilations=[1, 2, 2, 1], padding=\"SAME\", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](Conv2D-0-TransposeNHWCToNCHW-LayoutOptimizer, Variable/read)]]\n\nCaused by op u'Conv2D', defined at:\n  File \"tmp.py\", line 48, in &lt;module&gt;\n    bug()\n  File \"tmp.py\", line 27, in bug\n    data_format='NHWC')\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gen_nn_ops.py\", line 953, in conv2d\n    data_format=data_format, dilations=dilations, name=name)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/op_def_library.py\", line 787, in _apply_op_helper\n    op_def=op_def)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 3290, in create_op\n    op_def=op_def)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 1654, in __init__\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\n\nInvalidArgumentError (see above for traceback): Current implementation does not yet support dilations in the batch and depth dimensions.\n         [[Node: Conv2D = Conv2D[T=DT_FLOAT, data_format=\"NCHW\", dilations=[1, 2, 2, 1], padding=\"SAME\", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](Conv2D-0-TransposeNHWCToNCHW-LayoutOptimizer, Variable/read)]]\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04 LTS\nTensorFlow installed from (source or binary): binary (pip install)\nTensorFlow version (use command below): ('v1.7.0-3-g024aecf414', '1.7.0')\nPython version: 2.7.12\nBazel version (if compiling from source): N/A\nGCC/Compiler version (if compiling from source): N/A\nCUDA/cuDNN version: 9.0/7.0.5\nGPU model and memory: GTX1080, 8GB\nExact command to reproduce: shown below\n\nDescribe the problem\nDilated convolution via tf.nn.conv2d() with data_format='NHWC' gets corrupted to 'NCHW' during sess.run(). Since the data_format alone is corrupted and the dilation rate is unchanged, the code fails with an error message indicating that it does not support dilation along the depth dimension (dilation rate of [1, 2, 2, 1] is valid for 'NHWC' format but not for 'NCHW' format).\nIt seems that this is a CUDA problem, since if I disable the GPU using os.environ['CUDA_VISIBLE_DEVICES'] = '' line, the code does not error out.\nWeirdly enough, if I don't do anything to the output of tf.nn.conv2d(), the code does not error out either (corresponds to setting use_reduce_mean=False in the below example).\nAlso, if the dilation rate is set as [1, 1, 2, 2], the code does not error out, although this goes against the documentation, which says that The dimension order is determined by the value of data_format\nSource code / logs\nsource code to reproduce the bug\nimport os\n\nimport numpy as np\nimport tensorflow as tf\n\n# os.environ['CUDA_VISIBLE_DEVICES'] = ''\n\n\ndef bug():\n    use_reduce_mean = True\n    dilation_rate = 2\n\n    # bug # 1: conv2d changes from NHWC to NCHW\n    input_shape = [1, 32, 32, 1]\n    in_place = tf.placeholder(dtype=tf.float32, shape=input_shape)\n    filter_tensor = tf.Variable(tf.random_normal(\n        [3, 3, 1, 1], dtype=tf.float32, stddev=0.1), trainable=True)\n\n    out_tensor = tf.nn.conv2d(\n        in_place, filter=filter_tensor, strides=(1, 1, 1, 1),\n        padding='SAME', dilations=(1, dilation_rate, dilation_rate, 1),\n        data_format='NHWC')\n\n    if use_reduce_mean:\n        out_tensor = tf.reduce_mean(out_tensor)\n    \n    with tf.Session() as sess:\n        init_op = tf.global_variables_initializer()\n        init_op.run()\n    \n        f_dict = {in_place: np.zeros(input_shape)}\n        sess_out = sess.run(out_tensor, feed_dict=f_dict)\n\n\nif __name__ == \"__main__\":\n    bug()\n\nerror message:\n Executor failed to create kernel. Invalid argument: Current implementation does not yet support dilations in the batch and depth dimensions.\n         [[Node: Conv2D = Conv2D[T=DT_FLOAT, data_format=\"NCHW\", dilations=[1, 2, 2, 1], padding=\"SAME\", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](Conv2D-0-TransposeNHWCToNCHW-LayoutOptimizer, Variable/read)]]\nTraceback (most recent call last):\n  File \"tmp.py\", line 48, in <module>\n    bug()\n  File \"tmp.py\", line 44, in bug\n    sess_out = sess.run(out_tensor, feed_dict=f_dict)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 905, in run\n    run_metadata_ptr)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1140, in _run\n    feed_dict_tensor, options, run_metadata)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1321, in _do_run\n    run_metadata)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1340, in _do_call\n    raise type(e)(node_def, op, message)\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Current implementation does not yet support dilations in the batch and depth dimensions.\n         [[Node: Conv2D = Conv2D[T=DT_FLOAT, data_format=\"NCHW\", dilations=[1, 2, 2, 1], padding=\"SAME\", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](Conv2D-0-TransposeNHWCToNCHW-LayoutOptimizer, Variable/read)]]\n\nCaused by op u'Conv2D', defined at:\n  File \"tmp.py\", line 48, in <module>\n    bug()\n  File \"tmp.py\", line 27, in bug\n    data_format='NHWC')\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gen_nn_ops.py\", line 953, in conv2d\n    data_format=data_format, dilations=dilations, name=name)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/op_def_library.py\", line 787, in _apply_op_helper\n    op_def=op_def)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 3290, in create_op\n    op_def=op_def)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 1654, in __init__\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\n\nInvalidArgumentError (see above for traceback): Current implementation does not yet support dilations in the batch and depth dimensions.\n         [[Node: Conv2D = Conv2D[T=DT_FLOAT, data_format=\"NCHW\", dilations=[1, 2, 2, 1], padding=\"SAME\", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](Conv2D-0-TransposeNHWCToNCHW-LayoutOptimizer, Variable/read)]]", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04 LTS\r\n- **TensorFlow installed from (source or binary)**: binary (pip install)\r\n- **TensorFlow version (use command below)**: ('v1.7.0-3-g024aecf414', '1.7.0')\r\n- **Python version**: 2.7.12\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: 9.0/7.0.5\r\n- **GPU model and memory**: GTX1080, 8GB\r\n- **Exact command to reproduce**: shown below\r\n\r\n### Describe the problem\r\nDilated convolution via tf.nn.conv2d() with data_format='NHWC' gets corrupted to 'NCHW' during sess.run(). Since the data_format alone is corrupted and the dilation rate is unchanged, the code fails with an error message indicating that it does not support dilation along the depth dimension (dilation rate of [1, 2, 2, 1] is valid for 'NHWC' format but not for 'NCHW' format).\r\n\r\nIt seems that this is a CUDA problem, since if I disable the GPU using os.environ['CUDA_VISIBLE_DEVICES'] = '' line, the code does not error out. \r\nWeirdly enough, if I don't do anything to the output of tf.nn.conv2d(), the code does not error out either (corresponds to setting use_reduce_mean=False in the below example).\r\nAlso, if the dilation rate is set as [1, 1, 2, 2], the code does not error out, although this goes against the [documentation](https://www.tensorflow.org/versions/r1.7/api_docs/python/tf/nn/conv2d), which says that `The dimension order is determined by the value of data_format`\r\n\r\n### Source code / logs\r\n\r\nsource code to reproduce the bug\r\n```\r\nimport os\r\n\r\nimport numpy as np\r\nimport tensorflow as tf\r\n\r\n# os.environ['CUDA_VISIBLE_DEVICES'] = ''\r\n\r\n\r\ndef bug():\r\n    use_reduce_mean = True\r\n    dilation_rate = 2\r\n\r\n    # bug # 1: conv2d changes from NHWC to NCHW\r\n    input_shape = [1, 32, 32, 1]\r\n    in_place = tf.placeholder(dtype=tf.float32, shape=input_shape)\r\n    filter_tensor = tf.Variable(tf.random_normal(\r\n        [3, 3, 1, 1], dtype=tf.float32, stddev=0.1), trainable=True)\r\n\r\n    out_tensor = tf.nn.conv2d(\r\n        in_place, filter=filter_tensor, strides=(1, 1, 1, 1),\r\n        padding='SAME', dilations=(1, dilation_rate, dilation_rate, 1),\r\n        data_format='NHWC')\r\n\r\n    if use_reduce_mean:\r\n        out_tensor = tf.reduce_mean(out_tensor)\r\n    \r\n    with tf.Session() as sess:\r\n        init_op = tf.global_variables_initializer()\r\n        init_op.run()\r\n    \r\n        f_dict = {in_place: np.zeros(input_shape)}\r\n        sess_out = sess.run(out_tensor, feed_dict=f_dict)\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    bug()\r\n```\r\n\r\nerror message:\r\n```\r\n Executor failed to create kernel. Invalid argument: Current implementation does not yet support dilations in the batch and depth dimensions.\r\n         [[Node: Conv2D = Conv2D[T=DT_FLOAT, data_format=\"NCHW\", dilations=[1, 2, 2, 1], padding=\"SAME\", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](Conv2D-0-TransposeNHWCToNCHW-LayoutOptimizer, Variable/read)]]\r\nTraceback (most recent call last):\r\n  File \"tmp.py\", line 48, in <module>\r\n    bug()\r\n  File \"tmp.py\", line 44, in bug\r\n    sess_out = sess.run(out_tensor, feed_dict=f_dict)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 905, in run\r\n    run_metadata_ptr)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1140, in _run\r\n    feed_dict_tensor, options, run_metadata)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1321, in _do_run\r\n    run_metadata)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1340, in _do_call\r\n    raise type(e)(node_def, op, message)\r\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Current implementation does not yet support dilations in the batch and depth dimensions.\r\n         [[Node: Conv2D = Conv2D[T=DT_FLOAT, data_format=\"NCHW\", dilations=[1, 2, 2, 1], padding=\"SAME\", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](Conv2D-0-TransposeNHWCToNCHW-LayoutOptimizer, Variable/read)]]\r\n\r\nCaused by op u'Conv2D', defined at:\r\n  File \"tmp.py\", line 48, in <module>\r\n    bug()\r\n  File \"tmp.py\", line 27, in bug\r\n    data_format='NHWC')\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gen_nn_ops.py\", line 953, in conv2d\r\n    data_format=data_format, dilations=dilations, name=name)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/op_def_library.py\", line 787, in _apply_op_helper\r\n    op_def=op_def)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 3290, in create_op\r\n    op_def=op_def)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 1654, in __init__\r\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\r\n\r\nInvalidArgumentError (see above for traceback): Current implementation does not yet support dilations in the batch and depth dimensions.\r\n         [[Node: Conv2D = Conv2D[T=DT_FLOAT, data_format=\"NCHW\", dilations=[1, 2, 2, 1], padding=\"SAME\", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](Conv2D-0-TransposeNHWCToNCHW-LayoutOptimizer, Variable/read)]]\r\n```"}