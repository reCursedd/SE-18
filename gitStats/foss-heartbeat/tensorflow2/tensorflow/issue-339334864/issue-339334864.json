{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20640", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20640/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20640/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20640/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20640", "id": 339334864, "node_id": "MDU6SXNzdWUzMzkzMzQ4NjQ=", "number": 20640, "title": "Weird issue when using TextLineReader nested in a function", "user": {"login": "gqy1005", "id": 11623229, "node_id": "MDQ6VXNlcjExNjIzMjI5", "avatar_url": "https://avatars2.githubusercontent.com/u/11623229?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gqy1005", "html_url": "https://github.com/gqy1005", "followers_url": "https://api.github.com/users/gqy1005/followers", "following_url": "https://api.github.com/users/gqy1005/following{/other_user}", "gists_url": "https://api.github.com/users/gqy1005/gists{/gist_id}", "starred_url": "https://api.github.com/users/gqy1005/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gqy1005/subscriptions", "organizations_url": "https://api.github.com/users/gqy1005/orgs", "repos_url": "https://api.github.com/users/gqy1005/repos", "events_url": "https://api.github.com/users/gqy1005/events{/privacy}", "received_events_url": "https://api.github.com/users/gqy1005/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "aselle", "id": 326106, "node_id": "MDQ6VXNlcjMyNjEwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/326106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aselle", "html_url": "https://github.com/aselle", "followers_url": "https://api.github.com/users/aselle/followers", "following_url": "https://api.github.com/users/aselle/following{/other_user}", "gists_url": "https://api.github.com/users/aselle/gists{/gist_id}", "starred_url": "https://api.github.com/users/aselle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aselle/subscriptions", "organizations_url": "https://api.github.com/users/aselle/orgs", "repos_url": "https://api.github.com/users/aselle/repos", "events_url": "https://api.github.com/users/aselle/events{/privacy}", "received_events_url": "https://api.github.com/users/aselle/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "aselle", "id": 326106, "node_id": "MDQ6VXNlcjMyNjEwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/326106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aselle", "html_url": "https://github.com/aselle", "followers_url": "https://api.github.com/users/aselle/followers", "following_url": "https://api.github.com/users/aselle/following{/other_user}", "gists_url": "https://api.github.com/users/aselle/gists{/gist_id}", "starred_url": "https://api.github.com/users/aselle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aselle/subscriptions", "organizations_url": "https://api.github.com/users/aselle/orgs", "repos_url": "https://api.github.com/users/aselle/repos", "events_url": "https://api.github.com/users/aselle/events{/privacy}", "received_events_url": "https://api.github.com/users/aselle/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-07-09T07:30:01Z", "updated_at": "2018-08-15T22:22:11Z", "closed_at": "2018-08-15T22:22:11Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li>WIndows 7 enterprise:</li>\n<li>TensorFlow installed from conda:</li>\n<li>TensorFlow version (1.8.0):</li>\n<li>Python version (3.6.5), installed with Anaconda:</li>\n<li>Not using GPU</li>\n<li>Reproduction: unzip the following zip file, two files, test.py and test.txt, under tensorflow environment,<br>\nrun test.py.<br>\n<a href=\"https://github.com/tensorflow/tensorflow/files/2179025/tf.bug.report.zip\">tf bug report.zip</a></li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I was testing the functionality of TextLineReader, a very simple try. Here is my code, just a few lines:</p>\n<h6>MY CODE#######</h6>\n<p>import tensorflow as tf</p>\n<p>def input_func():<br>\nfile_queue = tf.train.string_input_producer([\"D:/tmp_10_data_test.txt\"], num_epochs=5)<br>\nreader = tf.TextLineReader(skip_header_lines=1)<br>\nreturn reader.read_up_to(file_queue, num_records=5)</p>\n<p>with tf.Session() as sess:<br>\nsess.run(tf.global_variables_initializer())<br>\nsess.run(tf.local_variables_initializer())<br>\ncoord = tf.train.Coordinator()<br>\nthreads = tf.train.start_queue_runners(coord=coord, sess=sess)<br>\nprint(sess.run(input_func()))<br>\ncoord.request_stop()<br>\ncoord.join(threads)</p>\n<p>###################<br>\nThe weird part is, when I'm running this piece of code, the program keeps running without any error, any output, and it just runs forever. This issue happens when I run the code with PyCharm and Jupyter Notebook. I resolved it by moving the file_queue declaration outside the function as:<br>\n#####################<br>\nfile_queue = tf.train.string_input_producer([\"D:/tmp_10_data_test.txt\"], num_epochs=5)<br>\ndef input_func():<br>\nreader = tf.TextLineReader(skip_header_lines=1)<br>\nreturn reader.read_up_to(file_queue, num_records=5)<br>\n######################<br>\nAnd the program runs correctly and outputs the result as expected. But This is just weird, what happened when I declare the file queue inside the very simple function? Shouldn't it be the same regardless of where it is declared? I guess you can replace the file with your own multi-line txt file and the problem should still exist, although I didn't try it...</p>", "body_text": "System information\n\nWIndows 7 enterprise:\nTensorFlow installed from conda:\nTensorFlow version (1.8.0):\nPython version (3.6.5), installed with Anaconda:\nNot using GPU\nReproduction: unzip the following zip file, two files, test.py and test.txt, under tensorflow environment,\nrun test.py.\ntf bug report.zip\n\nDescribe the problem\nI was testing the functionality of TextLineReader, a very simple try. Here is my code, just a few lines:\nMY CODE#######\nimport tensorflow as tf\ndef input_func():\nfile_queue = tf.train.string_input_producer([\"D:/tmp_10_data_test.txt\"], num_epochs=5)\nreader = tf.TextLineReader(skip_header_lines=1)\nreturn reader.read_up_to(file_queue, num_records=5)\nwith tf.Session() as sess:\nsess.run(tf.global_variables_initializer())\nsess.run(tf.local_variables_initializer())\ncoord = tf.train.Coordinator()\nthreads = tf.train.start_queue_runners(coord=coord, sess=sess)\nprint(sess.run(input_func()))\ncoord.request_stop()\ncoord.join(threads)\n###################\nThe weird part is, when I'm running this piece of code, the program keeps running without any error, any output, and it just runs forever. This issue happens when I run the code with PyCharm and Jupyter Notebook. I resolved it by moving the file_queue declaration outside the function as:\n#####################\nfile_queue = tf.train.string_input_producer([\"D:/tmp_10_data_test.txt\"], num_epochs=5)\ndef input_func():\nreader = tf.TextLineReader(skip_header_lines=1)\nreturn reader.read_up_to(file_queue, num_records=5)\n######################\nAnd the program runs correctly and outputs the result as expected. But This is just weird, what happened when I declare the file queue inside the very simple function? Shouldn't it be the same regardless of where it is declared? I guess you can replace the file with your own multi-line txt file and the problem should still exist, although I didn't try it...", "body": "### System information\r\n- WIndows 7 enterprise:\r\n- TensorFlow installed from conda:\r\n- TensorFlow version (1.8.0):\r\n- Python version (3.6.5), installed with Anaconda: \r\n- Not using GPU\r\n- Reproduction: unzip the following zip file, two files, test.py and test.txt, under tensorflow environment, \r\nrun test.py.\r\n[tf bug report.zip](https://github.com/tensorflow/tensorflow/files/2179025/tf.bug.report.zip)\r\n\r\n### Describe the problem\r\nI was testing the functionality of TextLineReader, a very simple try. Here is my code, just a few lines:\r\n###### MY CODE#######\r\nimport tensorflow as tf\r\n\r\ndef input_func():\r\n    file_queue = tf.train.string_input_producer([\"D:/tmp_10_data_test.txt\"], num_epochs=5)\r\n    reader = tf.TextLineReader(skip_header_lines=1)\r\n    return reader.read_up_to(file_queue, num_records=5)\r\n\r\nwith tf.Session() as sess:\r\n    sess.run(tf.global_variables_initializer())\r\n    sess.run(tf.local_variables_initializer())\r\n    coord = tf.train.Coordinator()\r\n    threads = tf.train.start_queue_runners(coord=coord, sess=sess)\r\n    print(sess.run(input_func()))\r\n    coord.request_stop()\r\n    coord.join(threads)\r\n\r\n\r\n###################\r\nThe weird part is, when I'm running this piece of code, the program keeps running without any error, any output, and it just runs forever. This issue happens when I run the code with PyCharm and Jupyter Notebook. I resolved it by moving the file_queue declaration outside the function as:\r\n#####################\r\nfile_queue = tf.train.string_input_producer([\"D:/tmp_10_data_test.txt\"], num_epochs=5)\r\ndef input_func():\r\n    reader = tf.TextLineReader(skip_header_lines=1)\r\n    return reader.read_up_to(file_queue, num_records=5)\r\n######################\r\nAnd the program runs correctly and outputs the result as expected. But This is just weird, what happened when I declare the file queue inside the very simple function? Shouldn't it be the same regardless of where it is declared? I guess you can replace the file with your own multi-line txt file and the problem should still exist, although I didn't try it...\r\n"}