{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2645", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2645/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2645/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2645/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/2645", "id": 158449325, "node_id": "MDU6SXNzdWUxNTg0NDkzMjU=", "number": 2645, "title": "Persistent Tensor deletion fails when tensor was moved", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "yuanbyu", "id": 2342391, "node_id": "MDQ6VXNlcjIzNDIzOTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/2342391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuanbyu", "html_url": "https://github.com/yuanbyu", "followers_url": "https://api.github.com/users/yuanbyu/followers", "following_url": "https://api.github.com/users/yuanbyu/following{/other_user}", "gists_url": "https://api.github.com/users/yuanbyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuanbyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuanbyu/subscriptions", "organizations_url": "https://api.github.com/users/yuanbyu/orgs", "repos_url": "https://api.github.com/users/yuanbyu/repos", "events_url": "https://api.github.com/users/yuanbyu/events{/privacy}", "received_events_url": "https://api.github.com/users/yuanbyu/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "yuanbyu", "id": 2342391, "node_id": "MDQ6VXNlcjIzNDIzOTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/2342391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuanbyu", "html_url": "https://github.com/yuanbyu", "followers_url": "https://api.github.com/users/yuanbyu/followers", "following_url": "https://api.github.com/users/yuanbyu/following{/other_user}", "gists_url": "https://api.github.com/users/yuanbyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuanbyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuanbyu/subscriptions", "organizations_url": "https://api.github.com/users/yuanbyu/orgs", "repos_url": "https://api.github.com/users/yuanbyu/repos", "events_url": "https://api.github.com/users/yuanbyu/events{/privacy}", "received_events_url": "https://api.github.com/users/yuanbyu/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2016-06-03T20:34:35Z", "updated_at": "2017-02-09T22:02:14Z", "closed_at": "2016-06-14T00:17:56Z", "author_association": "CONTRIBUTOR", "body_html": "<p>TLDR; handle movers register Python SessionHandle instead of string session handle, which causes <code>InternalError: Unable to get element from the feed.</code> when garbage collection is triggered on moved persistent tensors.</p>\n<p>The solution is to replace <code>self._register_dead_handle(handle)</code> with <code>self._register_dead_handle(handle.handle)</code> in <code>session.py</code></p>\n<h2>Discussion</h2>\n<p>There are two types of handle objects, Python TensorHandle and \"native\" string session handle. The conversion from Python <code>TensorHandle</code> object to native handle <code>string</code> object is done in <code>session.py</code> and <code>session_ops.py</code> in one of those 3 ways.</p>\n<ul>\n<li><code>self._handle = compat.as_str_any(handle)</code></li>\n<li><code>str(handle)</code></li>\n<li><code>handle.handle</code></li>\n</ul>\n<p>The \"str\" conversion is not very Python since <code>__str__</code> is supposed to be used for display/debugging purposes. Some suggestions to make it easier to avoid bugs like above:</p>\n<ol>\n<li>Annotate which kind of handle object is being dealt with. Perhaps <code>py_handle</code> variable should refer to Python TensorHandle objects and <code>handle</code> refer to native \"string\" handle objects</li>\n<li>Only use one kind of conversion method, perhaps as <code>py_handle.handle</code></li>\n<li><code>__str__</code> method of TensorHandle could be <code>return</code>\"TensorHandle(%s)\"%(self.handle)` for easier debugging</li>\n</ol>\n<h2>Test case</h2>\n<pre><code>class EnvTest(tf.test.TestCase):\n\n  def testHandleDeletion(self):\n    dtype = tf.float32\n    # soft-placement to work around #2587\n    config = tf.ConfigProto(log_device_placement=True,\n                            allow_soft_placement=True)\n    sess = tf.Session(config=config)\n\n    # initial values live on CPU\n    with tf.device(\"/cpu:0\"):\n      one = tf.constant(1, dtype=dtype)\n      one_handle = sess.run(tf.get_session_handle(one))\n      x = tf.get_session_handle(one)\n      x_handle = sess.run(tf.get_session_handle(one))\n\n    # addition lives on GPU\n    with tf.device(\"/gpu:0\"):\n      add_holder1, add_tensor1 = tf.get_session_tensor(dtype)\n      add_holder2, add_tensor2 = tf.get_session_tensor(dtype)\n      add_op = tf.add(add_tensor1, add_tensor2)\n      add_output = tf.get_session_handle(add_op)\n\n\n    # add 1 to tensor 20 times\n    for i in range(20):\n      x_handle = sess.run(add_output, feed_dict={add_holder1: one_handle.handle,\n                                                 add_holder2: x_handle.handle})\n</code></pre>\n<p>The failure is</p>\n<pre><code>\n======================================================================\nERROR: testHandleDeletion (__main__.EnvTest)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/yaroslavvb/tfimmediate_macbook/tensorflow/bazel-bin/tensorflow/contrib/immediate/tensor_handle_test.runfiles/org_tensorflow/tensorflow/contrib/immediate/python/immediate/tensor_handle_test.py\", line 35, in testHandleDeletion\n    add_holder2: x_handle.handle})\n  File \"/Users/yaroslavvb/tfimmediate_macbook/tensorflow/bazel-bin/tensorflow/contrib/immediate/tensor_handle_test.runfiles/org_tensorflow/tensorflow/python/client/session.py\", line 333, in run\n    run_metadata_ptr)\n  File \"/Users/yaroslavvb/tfimmediate_macbook/tensorflow/bazel-bin/tensorflow/contrib/immediate/tensor_handle_test.runfiles/org_tensorflow/tensorflow/python/client/session.py\", line 591, in _run\n    self._register_dead_handle(handle)\n  File \"/Users/yaroslavvb/tfimmediate_macbook/tensorflow/bazel-bin/tensorflow/contrib/immediate/tensor_handle_test.runfiles/org_tensorflow/tensorflow/python/client/session.py\", line 726, in _register_dead_handle\n    self.run(fetches, feed_dict=feeds)\n  File \"/Users/yaroslavvb/tfimmediate_macbook/tensorflow/bazel-bin/tensorflow/contrib/immediate/tensor_handle_test.runfiles/org_tensorflow/tensorflow/python/client/session.py\", line 333, in run\n    run_metadata_ptr)\n  File \"/Users/yaroslavvb/tfimmediate_macbook/tensorflow/bazel-bin/tensorflow/contrib/immediate/tensor_handle_test.runfiles/org_tensorflow/tensorflow/python/client/session.py\", line 587, in _run\n    feed_dict_string, options, run_metadata)\n  File \"/Users/yaroslavvb/tfimmediate_macbook/tensorflow/bazel-bin/tensorflow/contrib/immediate/tensor_handle_test.runfiles/org_tensorflow/tensorflow/python/client/session.py\", line 662, in _do_run\n    target_list, options, run_metadata)\n  File \"/Users/yaroslavvb/tfimmediate_macbook/tensorflow/bazel-bin/tensorflow/contrib/immediate/tensor_handle_test.runfiles/org_tensorflow/tensorflow/python/client/session.py\", line 682, in _do_call\n    raise type(e)(node_def, op, message)\nInternalError: Unable to get element from the feed.\n\n</code></pre>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=2342391\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/yuanbyu\">@yuanbyu</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=229914\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/keveman\">@keveman</a></p>", "body_text": "TLDR; handle movers register Python SessionHandle instead of string session handle, which causes InternalError: Unable to get element from the feed. when garbage collection is triggered on moved persistent tensors.\nThe solution is to replace self._register_dead_handle(handle) with self._register_dead_handle(handle.handle) in session.py\nDiscussion\nThere are two types of handle objects, Python TensorHandle and \"native\" string session handle. The conversion from Python TensorHandle object to native handle string object is done in session.py and session_ops.py in one of those 3 ways.\n\nself._handle = compat.as_str_any(handle)\nstr(handle)\nhandle.handle\n\nThe \"str\" conversion is not very Python since __str__ is supposed to be used for display/debugging purposes. Some suggestions to make it easier to avoid bugs like above:\n\nAnnotate which kind of handle object is being dealt with. Perhaps py_handle variable should refer to Python TensorHandle objects and handle refer to native \"string\" handle objects\nOnly use one kind of conversion method, perhaps as py_handle.handle\n__str__ method of TensorHandle could be return\"TensorHandle(%s)\"%(self.handle)` for easier debugging\n\nTest case\nclass EnvTest(tf.test.TestCase):\n\n  def testHandleDeletion(self):\n    dtype = tf.float32\n    # soft-placement to work around #2587\n    config = tf.ConfigProto(log_device_placement=True,\n                            allow_soft_placement=True)\n    sess = tf.Session(config=config)\n\n    # initial values live on CPU\n    with tf.device(\"/cpu:0\"):\n      one = tf.constant(1, dtype=dtype)\n      one_handle = sess.run(tf.get_session_handle(one))\n      x = tf.get_session_handle(one)\n      x_handle = sess.run(tf.get_session_handle(one))\n\n    # addition lives on GPU\n    with tf.device(\"/gpu:0\"):\n      add_holder1, add_tensor1 = tf.get_session_tensor(dtype)\n      add_holder2, add_tensor2 = tf.get_session_tensor(dtype)\n      add_op = tf.add(add_tensor1, add_tensor2)\n      add_output = tf.get_session_handle(add_op)\n\n\n    # add 1 to tensor 20 times\n    for i in range(20):\n      x_handle = sess.run(add_output, feed_dict={add_holder1: one_handle.handle,\n                                                 add_holder2: x_handle.handle})\n\nThe failure is\n\n======================================================================\nERROR: testHandleDeletion (__main__.EnvTest)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/yaroslavvb/tfimmediate_macbook/tensorflow/bazel-bin/tensorflow/contrib/immediate/tensor_handle_test.runfiles/org_tensorflow/tensorflow/contrib/immediate/python/immediate/tensor_handle_test.py\", line 35, in testHandleDeletion\n    add_holder2: x_handle.handle})\n  File \"/Users/yaroslavvb/tfimmediate_macbook/tensorflow/bazel-bin/tensorflow/contrib/immediate/tensor_handle_test.runfiles/org_tensorflow/tensorflow/python/client/session.py\", line 333, in run\n    run_metadata_ptr)\n  File \"/Users/yaroslavvb/tfimmediate_macbook/tensorflow/bazel-bin/tensorflow/contrib/immediate/tensor_handle_test.runfiles/org_tensorflow/tensorflow/python/client/session.py\", line 591, in _run\n    self._register_dead_handle(handle)\n  File \"/Users/yaroslavvb/tfimmediate_macbook/tensorflow/bazel-bin/tensorflow/contrib/immediate/tensor_handle_test.runfiles/org_tensorflow/tensorflow/python/client/session.py\", line 726, in _register_dead_handle\n    self.run(fetches, feed_dict=feeds)\n  File \"/Users/yaroslavvb/tfimmediate_macbook/tensorflow/bazel-bin/tensorflow/contrib/immediate/tensor_handle_test.runfiles/org_tensorflow/tensorflow/python/client/session.py\", line 333, in run\n    run_metadata_ptr)\n  File \"/Users/yaroslavvb/tfimmediate_macbook/tensorflow/bazel-bin/tensorflow/contrib/immediate/tensor_handle_test.runfiles/org_tensorflow/tensorflow/python/client/session.py\", line 587, in _run\n    feed_dict_string, options, run_metadata)\n  File \"/Users/yaroslavvb/tfimmediate_macbook/tensorflow/bazel-bin/tensorflow/contrib/immediate/tensor_handle_test.runfiles/org_tensorflow/tensorflow/python/client/session.py\", line 662, in _do_run\n    target_list, options, run_metadata)\n  File \"/Users/yaroslavvb/tfimmediate_macbook/tensorflow/bazel-bin/tensorflow/contrib/immediate/tensor_handle_test.runfiles/org_tensorflow/tensorflow/python/client/session.py\", line 682, in _do_call\n    raise type(e)(node_def, op, message)\nInternalError: Unable to get element from the feed.\n\n\n@yuanbyu @keveman", "body": "TLDR; handle movers register Python SessionHandle instead of string session handle, which causes `InternalError: Unable to get element from the feed.` when garbage collection is triggered on moved persistent tensors.\n\nThe solution is to replace `self._register_dead_handle(handle)` with `self._register_dead_handle(handle.handle)` in `session.py`\n## Discussion\n\nThere are two types of handle objects, Python TensorHandle and \"native\" string session handle. The conversion from Python `TensorHandle` object to native handle `string` object is done in `session.py` and `session_ops.py` in one of those 3 ways.\n- `self._handle = compat.as_str_any(handle)`\n- `str(handle)`\n- `handle.handle`\n\nThe \"str\" conversion is not very Python since `__str__` is supposed to be used for display/debugging purposes. Some suggestions to make it easier to avoid bugs like above:\n1. Annotate which kind of handle object is being dealt with. Perhaps `py_handle` variable should refer to Python TensorHandle objects and `handle` refer to native \"string\" handle objects\n2. Only use one kind of conversion method, perhaps as `py_handle.handle`\n3. `__str__` method of TensorHandle could be `return`\"TensorHandle(%s)\"%(self.handle)` for easier debugging\n## Test case\n\n```\nclass EnvTest(tf.test.TestCase):\n\n  def testHandleDeletion(self):\n    dtype = tf.float32\n    # soft-placement to work around #2587\n    config = tf.ConfigProto(log_device_placement=True,\n                            allow_soft_placement=True)\n    sess = tf.Session(config=config)\n\n    # initial values live on CPU\n    with tf.device(\"/cpu:0\"):\n      one = tf.constant(1, dtype=dtype)\n      one_handle = sess.run(tf.get_session_handle(one))\n      x = tf.get_session_handle(one)\n      x_handle = sess.run(tf.get_session_handle(one))\n\n    # addition lives on GPU\n    with tf.device(\"/gpu:0\"):\n      add_holder1, add_tensor1 = tf.get_session_tensor(dtype)\n      add_holder2, add_tensor2 = tf.get_session_tensor(dtype)\n      add_op = tf.add(add_tensor1, add_tensor2)\n      add_output = tf.get_session_handle(add_op)\n\n\n    # add 1 to tensor 20 times\n    for i in range(20):\n      x_handle = sess.run(add_output, feed_dict={add_holder1: one_handle.handle,\n                                                 add_holder2: x_handle.handle})\n```\n\nThe failure is\n\n```\n\n======================================================================\nERROR: testHandleDeletion (__main__.EnvTest)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/yaroslavvb/tfimmediate_macbook/tensorflow/bazel-bin/tensorflow/contrib/immediate/tensor_handle_test.runfiles/org_tensorflow/tensorflow/contrib/immediate/python/immediate/tensor_handle_test.py\", line 35, in testHandleDeletion\n    add_holder2: x_handle.handle})\n  File \"/Users/yaroslavvb/tfimmediate_macbook/tensorflow/bazel-bin/tensorflow/contrib/immediate/tensor_handle_test.runfiles/org_tensorflow/tensorflow/python/client/session.py\", line 333, in run\n    run_metadata_ptr)\n  File \"/Users/yaroslavvb/tfimmediate_macbook/tensorflow/bazel-bin/tensorflow/contrib/immediate/tensor_handle_test.runfiles/org_tensorflow/tensorflow/python/client/session.py\", line 591, in _run\n    self._register_dead_handle(handle)\n  File \"/Users/yaroslavvb/tfimmediate_macbook/tensorflow/bazel-bin/tensorflow/contrib/immediate/tensor_handle_test.runfiles/org_tensorflow/tensorflow/python/client/session.py\", line 726, in _register_dead_handle\n    self.run(fetches, feed_dict=feeds)\n  File \"/Users/yaroslavvb/tfimmediate_macbook/tensorflow/bazel-bin/tensorflow/contrib/immediate/tensor_handle_test.runfiles/org_tensorflow/tensorflow/python/client/session.py\", line 333, in run\n    run_metadata_ptr)\n  File \"/Users/yaroslavvb/tfimmediate_macbook/tensorflow/bazel-bin/tensorflow/contrib/immediate/tensor_handle_test.runfiles/org_tensorflow/tensorflow/python/client/session.py\", line 587, in _run\n    feed_dict_string, options, run_metadata)\n  File \"/Users/yaroslavvb/tfimmediate_macbook/tensorflow/bazel-bin/tensorflow/contrib/immediate/tensor_handle_test.runfiles/org_tensorflow/tensorflow/python/client/session.py\", line 662, in _do_run\n    target_list, options, run_metadata)\n  File \"/Users/yaroslavvb/tfimmediate_macbook/tensorflow/bazel-bin/tensorflow/contrib/immediate/tensor_handle_test.runfiles/org_tensorflow/tensorflow/python/client/session.py\", line 682, in _do_call\n    raise type(e)(node_def, op, message)\nInternalError: Unable to get element from the feed.\n\n```\n\n@yuanbyu @keveman \n"}