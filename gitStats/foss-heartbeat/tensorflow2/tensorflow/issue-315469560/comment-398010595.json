{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/398010595", "html_url": "https://github.com/tensorflow/tensorflow/issues/18652#issuecomment-398010595", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18652", "id": 398010595, "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODAxMDU5NQ==", "user": {"login": "ludwigprager", "id": 21967151, "node_id": "MDQ6VXNlcjIxOTY3MTUx", "avatar_url": "https://avatars1.githubusercontent.com/u/21967151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ludwigprager", "html_url": "https://github.com/ludwigprager", "followers_url": "https://api.github.com/users/ludwigprager/followers", "following_url": "https://api.github.com/users/ludwigprager/following{/other_user}", "gists_url": "https://api.github.com/users/ludwigprager/gists{/gist_id}", "starred_url": "https://api.github.com/users/ludwigprager/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ludwigprager/subscriptions", "organizations_url": "https://api.github.com/users/ludwigprager/orgs", "repos_url": "https://api.github.com/users/ludwigprager/repos", "events_url": "https://api.github.com/users/ludwigprager/events{/privacy}", "received_events_url": "https://api.github.com/users/ludwigprager/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-18T10:26:24Z", "updated_at": "2018-06-18T10:26:24Z", "author_association": "NONE", "body_html": "<p>I have the same issue: a timeout of exactly 2 minutes before computation starts.<br>\nIs it perhaps related to \"Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA\" ?<br>\nI'm using<br>\nhost: ubuntu 18.04<br>\ncontainer: tensorflow/tensorflow:latest-gpu</p>\n<pre><code>root@76611d5f5dd1:/notebooks# python /usr/local/bin/validate_installation.py \n/usr/local/lib/python2.7/dist-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.flo\nat64 == np.dtype(float).type`.\n  from ._conv import register_converters as _register_converters\n2018-06-18 10:15:12.462431: I tensorflow/core/platform/cpu_feature_guard.cc:140] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA\n2018-06-18 10:15:12.672108: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:898] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n2018-06-18 10:15:12.672988: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1356] Found device 0 with properties: \nname: GeForce 940MX major: 5 minor: 0 memoryClockRate(GHz): 1.189\npciBusID: 0000:02:00.0\ntotalMemory: 1.96GiB freeMemory: 1.93GiB\n2018-06-18 10:15:12.673024: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1435] Adding visible gpu devices: 0\n2018-06-18 10:17:11.465729: I tensorflow/core/common_runtime/gpu/gpu_device.cc:923] Device interconnect StreamExecutor with strength 1 edge matrix:\n2018-06-18 10:17:11.465769: I tensorflow/core/common_runtime/gpu/gpu_device.cc:929]      0 \n2018-06-18 10:17:11.465778: I tensorflow/core/common_runtime/gpu/gpu_device.cc:942] 0:   N \n2018-06-18 10:17:11.466050: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1053] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 1695 MB memory) -&gt; physical GPU (device: 0, name: GeForce 940MX, pci bus id: 0000:02:00.0, compute capability: 5.0)\nHello, TensorFlow!\n</code></pre>\n<p>the script I used to install nvidia-docker after a fresh installation of ubuntu 18.04:</p>\n<pre><code># Install packages to allow apt to use a repository over HTTPS:\nsudo apt-get install \\\n    apt-transport-https \\\n    ca-certificates \\\n    curl \\\n    software-properties-common\n\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\nsudo apt-key fingerprint 0EBFCD88\n\nsudo add-apt-repository \\\n   \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\\n   $(lsb_release -cs) \\\n   stable\"\n\nsudo apt-get update\n\n# docker-ce not yet ready -&gt; docker.io\n#\napt -y install docker.io\n\n\necho blacklist nouveau &gt;&gt; /etc/modprobe.d/blacklist-nouveau.conf\necho options nouveau modeset=0 &gt;&gt; /etc/modprobe.d/blacklist-nouveau.conf\n\nsudo update-initramfs -u\n# reboot\n\n\nsudo apt-get install dkms build-essential make\n\nsudo dpkg --add-architecture i386\nsudo apt update\nsudo apt -y install libc6:i386\n\nsudo bash NVIDIA-Linux-x86_64-390.67.run --dkms --install-libglvnd\n\n# https://nvidia.github.io/nvidia-docker/\n\ncurl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | \\\n  sudo apt-key add -\ndistribution=$(. /etc/os-release;echo $ID$VERSION_ID)\ncurl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.list | \\\n  sudo tee /etc/apt/sources.list.d/nvidia-docker.list\nsudo apt-get update\n\nsudo apt -y install nvidia-docker2\n\napt -y install nvidia-utils\n</code></pre>", "body_text": "I have the same issue: a timeout of exactly 2 minutes before computation starts.\nIs it perhaps related to \"Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA\" ?\nI'm using\nhost: ubuntu 18.04\ncontainer: tensorflow/tensorflow:latest-gpu\nroot@76611d5f5dd1:/notebooks# python /usr/local/bin/validate_installation.py \n/usr/local/lib/python2.7/dist-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.flo\nat64 == np.dtype(float).type`.\n  from ._conv import register_converters as _register_converters\n2018-06-18 10:15:12.462431: I tensorflow/core/platform/cpu_feature_guard.cc:140] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA\n2018-06-18 10:15:12.672108: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:898] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n2018-06-18 10:15:12.672988: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1356] Found device 0 with properties: \nname: GeForce 940MX major: 5 minor: 0 memoryClockRate(GHz): 1.189\npciBusID: 0000:02:00.0\ntotalMemory: 1.96GiB freeMemory: 1.93GiB\n2018-06-18 10:15:12.673024: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1435] Adding visible gpu devices: 0\n2018-06-18 10:17:11.465729: I tensorflow/core/common_runtime/gpu/gpu_device.cc:923] Device interconnect StreamExecutor with strength 1 edge matrix:\n2018-06-18 10:17:11.465769: I tensorflow/core/common_runtime/gpu/gpu_device.cc:929]      0 \n2018-06-18 10:17:11.465778: I tensorflow/core/common_runtime/gpu/gpu_device.cc:942] 0:   N \n2018-06-18 10:17:11.466050: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1053] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 1695 MB memory) -> physical GPU (device: 0, name: GeForce 940MX, pci bus id: 0000:02:00.0, compute capability: 5.0)\nHello, TensorFlow!\n\nthe script I used to install nvidia-docker after a fresh installation of ubuntu 18.04:\n# Install packages to allow apt to use a repository over HTTPS:\nsudo apt-get install \\\n    apt-transport-https \\\n    ca-certificates \\\n    curl \\\n    software-properties-common\n\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\nsudo apt-key fingerprint 0EBFCD88\n\nsudo add-apt-repository \\\n   \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\\n   $(lsb_release -cs) \\\n   stable\"\n\nsudo apt-get update\n\n# docker-ce not yet ready -> docker.io\n#\napt -y install docker.io\n\n\necho blacklist nouveau >> /etc/modprobe.d/blacklist-nouveau.conf\necho options nouveau modeset=0 >> /etc/modprobe.d/blacklist-nouveau.conf\n\nsudo update-initramfs -u\n# reboot\n\n\nsudo apt-get install dkms build-essential make\n\nsudo dpkg --add-architecture i386\nsudo apt update\nsudo apt -y install libc6:i386\n\nsudo bash NVIDIA-Linux-x86_64-390.67.run --dkms --install-libglvnd\n\n# https://nvidia.github.io/nvidia-docker/\n\ncurl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | \\\n  sudo apt-key add -\ndistribution=$(. /etc/os-release;echo $ID$VERSION_ID)\ncurl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.list | \\\n  sudo tee /etc/apt/sources.list.d/nvidia-docker.list\nsudo apt-get update\n\nsudo apt -y install nvidia-docker2\n\napt -y install nvidia-utils", "body": "I have the same issue: a timeout of exactly 2 minutes before computation starts.\r\nIs it perhaps related to \"Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA\" ?\r\nI'm using  \r\nhost: ubuntu 18.04\r\ncontainer: tensorflow/tensorflow:latest-gpu\r\n\r\n~~~\r\nroot@76611d5f5dd1:/notebooks# python /usr/local/bin/validate_installation.py \r\n/usr/local/lib/python2.7/dist-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.flo\r\nat64 == np.dtype(float).type`.\r\n  from ._conv import register_converters as _register_converters\r\n2018-06-18 10:15:12.462431: I tensorflow/core/platform/cpu_feature_guard.cc:140] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA\r\n2018-06-18 10:15:12.672108: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:898] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\r\n2018-06-18 10:15:12.672988: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1356] Found device 0 with properties: \r\nname: GeForce 940MX major: 5 minor: 0 memoryClockRate(GHz): 1.189\r\npciBusID: 0000:02:00.0\r\ntotalMemory: 1.96GiB freeMemory: 1.93GiB\r\n2018-06-18 10:15:12.673024: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1435] Adding visible gpu devices: 0\r\n2018-06-18 10:17:11.465729: I tensorflow/core/common_runtime/gpu/gpu_device.cc:923] Device interconnect StreamExecutor with strength 1 edge matrix:\r\n2018-06-18 10:17:11.465769: I tensorflow/core/common_runtime/gpu/gpu_device.cc:929]      0 \r\n2018-06-18 10:17:11.465778: I tensorflow/core/common_runtime/gpu/gpu_device.cc:942] 0:   N \r\n2018-06-18 10:17:11.466050: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1053] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 1695 MB memory) -> physical GPU (device: 0, name: GeForce 940MX, pci bus id: 0000:02:00.0, compute capability: 5.0)\r\nHello, TensorFlow!\r\n~~~\r\n\r\nthe script I used to install nvidia-docker after a fresh installation of ubuntu 18.04:\r\n~~~\r\n# Install packages to allow apt to use a repository over HTTPS:\r\nsudo apt-get install \\\r\n    apt-transport-https \\\r\n    ca-certificates \\\r\n    curl \\\r\n    software-properties-common\r\n\r\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\r\nsudo apt-key fingerprint 0EBFCD88\r\n\r\nsudo add-apt-repository \\\r\n   \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\\r\n   $(lsb_release -cs) \\\r\n   stable\"\r\n\r\nsudo apt-get update\r\n\r\n# docker-ce not yet ready -> docker.io\r\n#\r\napt -y install docker.io\r\n\r\n\r\necho blacklist nouveau >> /etc/modprobe.d/blacklist-nouveau.conf\r\necho options nouveau modeset=0 >> /etc/modprobe.d/blacklist-nouveau.conf\r\n\r\nsudo update-initramfs -u\r\n# reboot\r\n\r\n\r\nsudo apt-get install dkms build-essential make\r\n\r\nsudo dpkg --add-architecture i386\r\nsudo apt update\r\nsudo apt -y install libc6:i386\r\n\r\nsudo bash NVIDIA-Linux-x86_64-390.67.run --dkms --install-libglvnd\r\n\r\n# https://nvidia.github.io/nvidia-docker/\r\n\r\ncurl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | \\\r\n  sudo apt-key add -\r\ndistribution=$(. /etc/os-release;echo $ID$VERSION_ID)\r\ncurl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.list | \\\r\n  sudo tee /etc/apt/sources.list.d/nvidia-docker.list\r\nsudo apt-get update\r\n\r\nsudo apt -y install nvidia-docker2\r\n\r\napt -y install nvidia-utils\r\n~~~"}