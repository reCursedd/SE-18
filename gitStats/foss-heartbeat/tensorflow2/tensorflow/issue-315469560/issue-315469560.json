{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18652", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18652/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18652/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18652/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18652", "id": 315469560, "node_id": "MDU6SXNzdWUzMTU0Njk1NjA=", "number": 18652, "title": "Bug: tensorflow-gpu takes long time before beginning to compute", "user": {"login": "philippHRO", "id": 23098362, "node_id": "MDQ6VXNlcjIzMDk4MzYy", "avatar_url": "https://avatars0.githubusercontent.com/u/23098362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philippHRO", "html_url": "https://github.com/philippHRO", "followers_url": "https://api.github.com/users/philippHRO/followers", "following_url": "https://api.github.com/users/philippHRO/following{/other_user}", "gists_url": "https://api.github.com/users/philippHRO/gists{/gist_id}", "starred_url": "https://api.github.com/users/philippHRO/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philippHRO/subscriptions", "organizations_url": "https://api.github.com/users/philippHRO/orgs", "repos_url": "https://api.github.com/users/philippHRO/repos", "events_url": "https://api.github.com/users/philippHRO/events{/privacy}", "received_events_url": "https://api.github.com/users/philippHRO/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "gunan", "id": 7946809, "node_id": "MDQ6VXNlcjc5NDY4MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7946809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gunan", "html_url": "https://github.com/gunan", "followers_url": "https://api.github.com/users/gunan/followers", "following_url": "https://api.github.com/users/gunan/following{/other_user}", "gists_url": "https://api.github.com/users/gunan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gunan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gunan/subscriptions", "organizations_url": "https://api.github.com/users/gunan/orgs", "repos_url": "https://api.github.com/users/gunan/repos", "events_url": "https://api.github.com/users/gunan/events{/privacy}", "received_events_url": "https://api.github.com/users/gunan/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "gunan", "id": 7946809, "node_id": "MDQ6VXNlcjc5NDY4MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7946809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gunan", "html_url": "https://github.com/gunan", "followers_url": "https://api.github.com/users/gunan/followers", "following_url": "https://api.github.com/users/gunan/following{/other_user}", "gists_url": "https://api.github.com/users/gunan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gunan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gunan/subscriptions", "organizations_url": "https://api.github.com/users/gunan/orgs", "repos_url": "https://api.github.com/users/gunan/repos", "events_url": "https://api.github.com/users/gunan/events{/privacy}", "received_events_url": "https://api.github.com/users/gunan/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 28, "created_at": "2018-04-18T13:01:14Z", "updated_at": "2018-11-22T15:07:47Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>I noticed that tensorflow always takes about ~2min before it actually starts to compute. I've been trying to find out, why this happens, and nothing really worked so far.</p>\n<p><a href=\"https://www.tensorflow.org/install/install_windows\" rel=\"nofollow\">Tensorflow site</a> says, I should use CUDA\u00ae Toolkit 9.0 and cuDNN v7.0. I have CUDA 9.0, so I downloaded CuDNN 7.0.5 for CUDA 9.0 and pasted the files to *C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v9.0*, overwriting the ones form cuDNN 7.1.2, which I tested earlier. To make sure, I pip-installed tensorflow-gpu into a fresh anaconda env. See install <a href=\"https://pastebin.com/rjiV1s3b\" rel=\"nofollow\">here</a>. The issue is still the same.</p>\n<p>CUDA works, since it prints the  <em>'Hello, TensorFlow!'</em>, when I use the official test example, but before that it takes like 2minutes every time!</p>\n<p>When I tested this with <a href=\"https://drive.google.com/drive/folders/1lVK_ABvVHzVYKs7X5SUhcZFBgKpC41Qw\" rel=\"nofollow\">another wheel</a> (<a href=\"http://www.python36.com/install-tensorflow-gpu-windows/\" rel=\"nofollow\">which is linked in this tutorial</a>, I did not compile it myself.) on cuda 9.1/cudnn7.0.5, I had the same issues. A NVIDIA employee <a href=\"https://stackoverflow.com/questions/49770217/why-does-cuda-initialisation-take-so-long-python-vscode-anaconda-tensorflow\" rel=\"nofollow\">on stackoverflow</a> suggested, I may be hitting a lengthy JIT compile step, because the GTX 1080 has compute capability of 6.1, which the wheel I used may not be compiled for.</p>\n<p>So I tried to find wheels for tensorflow with compute capability 6.1 for windows, but <a href=\"https://github.com/fo40225/tensorflow-windows-wheel/tree/master/1.5.0/py36/GPU/cuda91cudnn7avx2\">the only one I found</a> and tested produced the same problem.</p>\n<p>Am I doing something wrong here, or do I just have to accept the 2min delay everytime I start my tensorflow/keras scripts?</p>\n<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:<br>\nCode:</li>\n</ul>\n<pre><code>import time\nstart_time = time.time()\nimport tensorflow as tf\na = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=[2, 3], name='a')\nb = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=[3, 2], name='b')\nc = tf.matmul(a, b)\nsess = tf.Session(config=tf.ConfigProto(log_device_placement=True))\nprint(sess.run(c))\ntimer = time.time()\nprint(timer - start_time)\n</code></pre>\n<p>Output:</p>\n<pre><code>(tf_clean) C:\\python_code\\test&gt;C:/anaconda/envs/tf_clean/python.exe c:/python_code/test/tf_test.py\n2018-04-18 14:36:04.376661: I T:\\src\\github\\tensorflow\\tensorflow\\core\\platform\\cpu_feature_guard.cc:140] Your CPU supports instructions that this\nTensorFlow binary was not compiled to use: AVX2\n2018-04-18 14:36:04.689661: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1344] Found device 0 with properties:\nname: GeForce GTX 1080 major: 6 minor: 1 memoryClockRate(GHz): 1.7335\npciBusID: 0000:01:00.0\ntotalMemory: 8.00GiB freeMemory: 6.60GiB\n2018-04-18 14:36:04.699485: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1423] Adding visible gpu devices: 0\n2018-04-18 14:38:12.227561: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:911] Device interconnect StreamExecutor with strength 1 edge matrix:\n2018-04-18 14:38:12.234504: I T:\\src\\github\\tens2018-04-18 14:38:12.237156: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:930] 0:   N\n2018-04-18 14:38:12.240997: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1041] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 6379 MB memory) -&gt; physical GPU (device: 0, name: GeForce GTX 1080, pci bus id: 0000:01:00.0, compute capability: 6.1)\nDevice mapping:\n/job:localhost/replica:0/task:0/device:GPU:0 -&gt; device: 0, name: GeForce GTX 1080, pci bus id: 0000:01:00.0, compute capability: 6.1\n2018-04-18 14:38:12.548288: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\direct_session.cc:297] Device mapping:\n/job:localhost/replica:0/task:0/device:GPU:0 -&gt; device: 0, name: GeForce GTX 1080, pci bus id: 0000:01:00.0, compute capability: 6.1\nMatMul: (MatMul): /job:localhost/replica:0/task:0/device:GPU:0\n2018-04-18 14:38:12.559262: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\placer.cc:884] MatMul: (MatMul)/job:localhost/replica:0/task:0/device:GPU:0\nb: (Const): /job:localhost/replica:0/task:0/device:GPU:0\n2018-04-18 14:38:12.564847: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\placer.cc:884] b: (Const)/job:localhost/replica:0/task:0/device:GPU:0\na: (Const): /job:localhost/replica:0/task:0/device:GPU:0\n2018-04-18 14:38:12.570545: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\placer.cc:884] a: (Const)/job:localhost/replica:0/task:0/device:GPU:0\n[[22. 28.]\n [49. 64.]]\n129.14624643325806\n</code></pre>\n<ul>\n<li>\n<p><strong>OS Platform and Distribution</strong>:<br>\nWindows 10 Education (Version 10.0.16299 Build 16299)<br>\nIntel(R) Core(TM) i5-7500 CPU @ 3.40GHz, 3408 MHz, 4 Cores</p>\n</li>\n<li>\n<p><strong>TensorFlow installed from (source or binary)</strong>:<br>\nbinary</p>\n</li>\n<li>\n<p><strong>TensorFlow version</strong>:<br>\ntensorflow-gpu 1.5.0, 1.7.0</p>\n</li>\n<li>\n<p><strong>Python version</strong>:<br>\n3.5.5 &amp; 3.6 (via anaconda, conda 4.5.1.)</p>\n</li>\n<li>\n<p><strong>Bazel Version</strong>:<br>\nN/A</p>\n</li>\n<li>\n<p><strong>CUDA/cuDNN version</strong>:<br>\nTested combinations:<br>\nCUDA 9.0 and CuDNN 7.1.2 (tested on tensorflow 1.5.0, 1.7.0 and 1.8.0-dev20180329)<br>\nCUDA 9.1 and CuDNN 7.0.5 (tested on tensorflow 1.5.0 and 1.7.0)</p>\n</li>\n<li>\n<p><strong>GPU model and memory</strong>:<br>\nNVIDIA GeForce GTX 1080 (GP104-400) [Hewlett-Packard], 8192 MBytes of GDDR5X SDRAM [Micron]</p>\n</li>\n<li>\n<p><strong>Exact command to reproduce</strong>:<br>\nSee: <em>Have I written custom code...</em></p>\n</li>\n</ul>", "body_text": "I noticed that tensorflow always takes about ~2min before it actually starts to compute. I've been trying to find out, why this happens, and nothing really worked so far.\nTensorflow site says, I should use CUDA\u00ae Toolkit 9.0 and cuDNN v7.0. I have CUDA 9.0, so I downloaded CuDNN 7.0.5 for CUDA 9.0 and pasted the files to *C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v9.0*, overwriting the ones form cuDNN 7.1.2, which I tested earlier. To make sure, I pip-installed tensorflow-gpu into a fresh anaconda env. See install here. The issue is still the same.\nCUDA works, since it prints the  'Hello, TensorFlow!', when I use the official test example, but before that it takes like 2minutes every time!\nWhen I tested this with another wheel (which is linked in this tutorial, I did not compile it myself.) on cuda 9.1/cudnn7.0.5, I had the same issues. A NVIDIA employee on stackoverflow suggested, I may be hitting a lengthy JIT compile step, because the GTX 1080 has compute capability of 6.1, which the wheel I used may not be compiled for.\nSo I tried to find wheels for tensorflow with compute capability 6.1 for windows, but the only one I found and tested produced the same problem.\nAm I doing something wrong here, or do I just have to accept the 2min delay everytime I start my tensorflow/keras scripts?\nSystem information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nCode:\n\nimport time\nstart_time = time.time()\nimport tensorflow as tf\na = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=[2, 3], name='a')\nb = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=[3, 2], name='b')\nc = tf.matmul(a, b)\nsess = tf.Session(config=tf.ConfigProto(log_device_placement=True))\nprint(sess.run(c))\ntimer = time.time()\nprint(timer - start_time)\n\nOutput:\n(tf_clean) C:\\python_code\\test>C:/anaconda/envs/tf_clean/python.exe c:/python_code/test/tf_test.py\n2018-04-18 14:36:04.376661: I T:\\src\\github\\tensorflow\\tensorflow\\core\\platform\\cpu_feature_guard.cc:140] Your CPU supports instructions that this\nTensorFlow binary was not compiled to use: AVX2\n2018-04-18 14:36:04.689661: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1344] Found device 0 with properties:\nname: GeForce GTX 1080 major: 6 minor: 1 memoryClockRate(GHz): 1.7335\npciBusID: 0000:01:00.0\ntotalMemory: 8.00GiB freeMemory: 6.60GiB\n2018-04-18 14:36:04.699485: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1423] Adding visible gpu devices: 0\n2018-04-18 14:38:12.227561: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:911] Device interconnect StreamExecutor with strength 1 edge matrix:\n2018-04-18 14:38:12.234504: I T:\\src\\github\\tens2018-04-18 14:38:12.237156: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:930] 0:   N\n2018-04-18 14:38:12.240997: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1041] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 6379 MB memory) -> physical GPU (device: 0, name: GeForce GTX 1080, pci bus id: 0000:01:00.0, compute capability: 6.1)\nDevice mapping:\n/job:localhost/replica:0/task:0/device:GPU:0 -> device: 0, name: GeForce GTX 1080, pci bus id: 0000:01:00.0, compute capability: 6.1\n2018-04-18 14:38:12.548288: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\direct_session.cc:297] Device mapping:\n/job:localhost/replica:0/task:0/device:GPU:0 -> device: 0, name: GeForce GTX 1080, pci bus id: 0000:01:00.0, compute capability: 6.1\nMatMul: (MatMul): /job:localhost/replica:0/task:0/device:GPU:0\n2018-04-18 14:38:12.559262: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\placer.cc:884] MatMul: (MatMul)/job:localhost/replica:0/task:0/device:GPU:0\nb: (Const): /job:localhost/replica:0/task:0/device:GPU:0\n2018-04-18 14:38:12.564847: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\placer.cc:884] b: (Const)/job:localhost/replica:0/task:0/device:GPU:0\na: (Const): /job:localhost/replica:0/task:0/device:GPU:0\n2018-04-18 14:38:12.570545: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\placer.cc:884] a: (Const)/job:localhost/replica:0/task:0/device:GPU:0\n[[22. 28.]\n [49. 64.]]\n129.14624643325806\n\n\n\nOS Platform and Distribution:\nWindows 10 Education (Version 10.0.16299 Build 16299)\nIntel(R) Core(TM) i5-7500 CPU @ 3.40GHz, 3408 MHz, 4 Cores\n\n\nTensorFlow installed from (source or binary):\nbinary\n\n\nTensorFlow version:\ntensorflow-gpu 1.5.0, 1.7.0\n\n\nPython version:\n3.5.5 & 3.6 (via anaconda, conda 4.5.1.)\n\n\nBazel Version:\nN/A\n\n\nCUDA/cuDNN version:\nTested combinations:\nCUDA 9.0 and CuDNN 7.1.2 (tested on tensorflow 1.5.0, 1.7.0 and 1.8.0-dev20180329)\nCUDA 9.1 and CuDNN 7.0.5 (tested on tensorflow 1.5.0 and 1.7.0)\n\n\nGPU model and memory:\nNVIDIA GeForce GTX 1080 (GP104-400) [Hewlett-Packard], 8192 MBytes of GDDR5X SDRAM [Micron]\n\n\nExact command to reproduce:\nSee: Have I written custom code...", "body": "I noticed that tensorflow always takes about ~2min before it actually starts to compute. I've been trying to find out, why this happens, and nothing really worked so far. \r\n\r\n[Tensorflow site](https://www.tensorflow.org/install/install_windows) says, I should use CUDA\u00ae Toolkit 9.0 and cuDNN v7.0. I have CUDA 9.0, so I downloaded CuDNN 7.0.5 for CUDA 9.0 and pasted the files to *C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v9.0\\*, overwriting the ones form cuDNN 7.1.2, which I tested earlier. To make sure, I pip-installed tensorflow-gpu into a fresh anaconda env. See install [here](https://pastebin.com/rjiV1s3b). The issue is still the same.\r\n\r\nCUDA works, since it prints the  *'Hello, TensorFlow!'*, when I use the official test example, but before that it takes like 2minutes every time! \r\n\r\nWhen I tested this with [another wheel](https://drive.google.com/drive/folders/1lVK_ABvVHzVYKs7X5SUhcZFBgKpC41Qw) ([which is linked in this tutorial](http://www.python36.com/install-tensorflow-gpu-windows/), I did not compile it myself.) on cuda 9.1/cudnn7.0.5, I had the same issues. A NVIDIA employee [on stackoverflow](https://stackoverflow.com/questions/49770217/why-does-cuda-initialisation-take-so-long-python-vscode-anaconda-tensorflow) suggested, I may be hitting a lengthy JIT compile step, because the GTX 1080 has compute capability of 6.1, which the wheel I used may not be compiled for. \r\n\r\nSo I tried to find wheels for tensorflow with compute capability 6.1 for windows, but [the only one I found](https://github.com/fo40225/tensorflow-windows-wheel/tree/master/1.5.0/py36/GPU/cuda91cudnn7avx2) and tested produced the same problem.\r\n\r\nAm I doing something wrong here, or do I just have to accept the 2min delay everytime I start my tensorflow/keras scripts?\r\n\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nCode:\r\n```\r\nimport time\r\nstart_time = time.time()\r\nimport tensorflow as tf\r\na = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=[2, 3], name='a')\r\nb = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=[3, 2], name='b')\r\nc = tf.matmul(a, b)\r\nsess = tf.Session(config=tf.ConfigProto(log_device_placement=True))\r\nprint(sess.run(c))\r\ntimer = time.time()\r\nprint(timer - start_time)\r\n```\r\nOutput:\r\n```\r\n(tf_clean) C:\\python_code\\test>C:/anaconda/envs/tf_clean/python.exe c:/python_code/test/tf_test.py\r\n2018-04-18 14:36:04.376661: I T:\\src\\github\\tensorflow\\tensorflow\\core\\platform\\cpu_feature_guard.cc:140] Your CPU supports instructions that this\r\nTensorFlow binary was not compiled to use: AVX2\r\n2018-04-18 14:36:04.689661: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1344] Found device 0 with properties:\r\nname: GeForce GTX 1080 major: 6 minor: 1 memoryClockRate(GHz): 1.7335\r\npciBusID: 0000:01:00.0\r\ntotalMemory: 8.00GiB freeMemory: 6.60GiB\r\n2018-04-18 14:36:04.699485: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1423] Adding visible gpu devices: 0\r\n2018-04-18 14:38:12.227561: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:911] Device interconnect StreamExecutor with strength 1 edge matrix:\r\n2018-04-18 14:38:12.234504: I T:\\src\\github\\tens2018-04-18 14:38:12.237156: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:930] 0:   N\r\n2018-04-18 14:38:12.240997: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1041] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 6379 MB memory) -> physical GPU (device: 0, name: GeForce GTX 1080, pci bus id: 0000:01:00.0, compute capability: 6.1)\r\nDevice mapping:\r\n/job:localhost/replica:0/task:0/device:GPU:0 -> device: 0, name: GeForce GTX 1080, pci bus id: 0000:01:00.0, compute capability: 6.1\r\n2018-04-18 14:38:12.548288: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\direct_session.cc:297] Device mapping:\r\n/job:localhost/replica:0/task:0/device:GPU:0 -> device: 0, name: GeForce GTX 1080, pci bus id: 0000:01:00.0, compute capability: 6.1\r\nMatMul: (MatMul): /job:localhost/replica:0/task:0/device:GPU:0\r\n2018-04-18 14:38:12.559262: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\placer.cc:884] MatMul: (MatMul)/job:localhost/replica:0/task:0/device:GPU:0\r\nb: (Const): /job:localhost/replica:0/task:0/device:GPU:0\r\n2018-04-18 14:38:12.564847: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\placer.cc:884] b: (Const)/job:localhost/replica:0/task:0/device:GPU:0\r\na: (Const): /job:localhost/replica:0/task:0/device:GPU:0\r\n2018-04-18 14:38:12.570545: I T:\\src\\github\\tensorflow\\tensorflow\\core\\common_runtime\\placer.cc:884] a: (Const)/job:localhost/replica:0/task:0/device:GPU:0\r\n[[22. 28.]\r\n [49. 64.]]\r\n129.14624643325806\r\n```\r\n\r\n- **OS Platform and Distribution**:\r\nWindows 10 Education (Version 10.0.16299 Build 16299)\r\nIntel(R) Core(TM) i5-7500 CPU @ 3.40GHz, 3408 MHz, 4 Cores\r\n\r\n- **TensorFlow installed from (source or binary)**:\r\nbinary\r\n\r\n- **TensorFlow version**:\r\ntensorflow-gpu 1.5.0, 1.7.0\r\n\r\n- **Python version**: \r\n3.5.5 & 3.6 (via anaconda, conda 4.5.1.)\r\n\r\n- **Bazel Version**:\r\nN/A\r\n\r\n- **CUDA/cuDNN version**:\r\nTested combinations: \r\n   CUDA 9.0 and CuDNN 7.1.2 (tested on tensorflow 1.5.0, 1.7.0 and 1.8.0-dev20180329)\r\n   CUDA 9.1 and CuDNN 7.0.5 (tested on tensorflow 1.5.0 and 1.7.0)\r\n\r\n- **GPU model and memory**:\r\nNVIDIA GeForce GTX 1080 (GP104-400) [Hewlett-Packard], 8192 MBytes of GDDR5X SDRAM [Micron]\r\n\r\n- **Exact command to reproduce**:\r\nSee: *Have I written custom code...*"}