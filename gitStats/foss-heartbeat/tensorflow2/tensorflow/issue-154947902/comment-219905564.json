{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/219905564", "html_url": "https://github.com/tensorflow/tensorflow/issues/2382#issuecomment-219905564", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2382", "id": 219905564, "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTkwNTU2NA==", "user": {"login": "wangbm", "id": 18027987, "node_id": "MDQ6VXNlcjE4MDI3OTg3", "avatar_url": "https://avatars3.githubusercontent.com/u/18027987?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wangbm", "html_url": "https://github.com/wangbm", "followers_url": "https://api.github.com/users/wangbm/followers", "following_url": "https://api.github.com/users/wangbm/following{/other_user}", "gists_url": "https://api.github.com/users/wangbm/gists{/gist_id}", "starred_url": "https://api.github.com/users/wangbm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wangbm/subscriptions", "organizations_url": "https://api.github.com/users/wangbm/orgs", "repos_url": "https://api.github.com/users/wangbm/repos", "events_url": "https://api.github.com/users/wangbm/events{/privacy}", "received_events_url": "https://api.github.com/users/wangbm/received_events", "type": "User", "site_admin": false}, "created_at": "2016-05-18T02:02:05Z", "updated_at": "2016-05-18T02:02:05Z", "author_association": "NONE", "body_html": "<p>Thank you!<br>\nThe return type of <code>rboltz.fit(...)</code> is <code>ndarray</code>.<br>\nI use <code>W = tf.Variable(self.W_list[i], name = 'weights')</code> to create variables. I have try to use <code>tf.placeholder</code> instead of <code>tf.Variable</code>, but it turned out that 'there are no variables to optimize'. Now I have no idea how to deal with it.<br>\nIt doesn't make sense. Tensorflow can't solve the problem when the graph is very big and deep? There must be a solution. <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=192142\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mrry\">@mrry</a></p>", "body_text": "Thank you!\nThe return type of rboltz.fit(...) is ndarray.\nI use W = tf.Variable(self.W_list[i], name = 'weights') to create variables. I have try to use tf.placeholder instead of tf.Variable, but it turned out that 'there are no variables to optimize'. Now I have no idea how to deal with it.\nIt doesn't make sense. Tensorflow can't solve the problem when the graph is very big and deep? There must be a solution. @mrry", "body": "Thank you!\nThe return type of `rboltz.fit(...)` is `ndarray`.\nI use `W = tf.Variable(self.W_list[i], name = 'weights')` to create variables. I have try to use `tf.placeholder` instead of `tf.Variable`, but it turned out that 'there are no variables to optimize'. Now I have no idea how to deal with it.\nIt doesn't make sense. Tensorflow can't solve the problem when the graph is very big and deep? There must be a solution. @mrry \n"}