{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/138335000", "pull_request_review_id": 62115169, "id": 138335000, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzODMzNTAwMA==", "diff_hunk": "@@ -537,56 +548,72 @@ private static void throwExceptionIfNotByteOfByteArrays(Object array) {\n     }\n   }\n \n+  static HashMap<Class<?>, DataType> class_datatypes = new HashMap<>();\n+  static {\n+    class_datatypes.put(int.class, DataType.INT32);\n+    class_datatypes.put(Integer.class, DataType.INT32);\n+    class_datatypes.put(long.class, DataType.INT64);\n+    class_datatypes.put(Long.class, DataType.INT64);\n+    class_datatypes.put(float.class, DataType.FLOAT);\n+    class_datatypes.put(Float.class, DataType.FLOAT);\n+    class_datatypes.put(double.class, DataType.DOUBLE);\n+    class_datatypes.put(Double.class, DataType.DOUBLE);\n+    class_datatypes.put(byte.class, DataType.STRING);\n+    class_datatypes.put(Byte.class, DataType.STRING);\n+    class_datatypes.put(boolean.class, DataType.BOOL);\n+    class_datatypes.put(Boolean.class, DataType.BOOL);\n+  }\n+\n   private static DataType dataTypeOf(Object o) {\n-    if (o.getClass().isArray()) {\n-      if (Array.getLength(o) == 0) {\n-        throw new IllegalArgumentException(\"cannot create Tensors with a 0 dimension\");\n-      }\n-      // byte[] is a DataType.STRING scalar.\n-      Object e = Array.get(o, 0);\n-      if (e == null) {\n-        throwExceptionIfNotByteOfByteArrays(o);\n-        return DataType.STRING;\n-      }\n-      if (Byte.class.isInstance(e) || byte.class.isInstance(e)) {\n-        return DataType.STRING;\n-      }\n-      return dataTypeOf(e);\n+    Class<?> c = o.getClass();\n+    while (c.isArray()) {\n+      c = c.getComponentType();\n     }\n-    if (Float.class.isInstance(o) || float.class.isInstance(o)) {\n-      return DataType.FLOAT;\n-    } else if (Double.class.isInstance(o) || double.class.isInstance(o)) {\n-      return DataType.DOUBLE;\n-    } else if (Integer.class.isInstance(o) || int.class.isInstance(o)) {\n-      return DataType.INT32;\n-    } else if (Long.class.isInstance(o) || long.class.isInstance(o)) {\n-      return DataType.INT64;\n-    } else if (Boolean.class.isInstance(o) || boolean.class.isInstance(o)) {\n-      return DataType.BOOL;\n-    } else {\n-      throw new IllegalArgumentException(\"cannot create Tensors of \" + o.getClass().getName());\n+    DataType ret = class_datatypes.get(c);\n+    if (ret != null) { \n+      return ret;\n     }\n+    throw new IllegalArgumentException(\"cannot create Tensors of type \" + c.getName());\n   }\n \n-  private static int numDimensions(Object o) {\n-    if (o.getClass().isArray()) {\n-      Object e = Array.get(o, 0);\n-      if (e == null) {\n-        throwExceptionIfNotByteOfByteArrays(o);\n-        return 1;\n-      } else if (Byte.class.isInstance(e) || byte.class.isInstance(e)) {\n-        return 0;\n-      }\n-      return 1 + numDimensions(e);\n+  /** Returns the number of dimensions of a tensor of type dtype\n+   *  when represented by the object o.", "path": "tensorflow/java/src/main/java/org/tensorflow/Tensor.java", "position": null, "original_position": 99, "commit_id": "776f85a359760f721162811d2d00f4ad38e29ef9", "original_commit_id": "37c798b1bed83e1df2cbb2766cfe47040977cff7", "user": {"login": "andrewcmyers", "id": 4623813, "node_id": "MDQ6VXNlcjQ2MjM4MTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/4623813?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewcmyers", "html_url": "https://github.com/andrewcmyers", "followers_url": "https://api.github.com/users/andrewcmyers/followers", "following_url": "https://api.github.com/users/andrewcmyers/following{/other_user}", "gists_url": "https://api.github.com/users/andrewcmyers/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewcmyers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewcmyers/subscriptions", "organizations_url": "https://api.github.com/users/andrewcmyers/orgs", "repos_url": "https://api.github.com/users/andrewcmyers/repos", "events_url": "https://api.github.com/users/andrewcmyers/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewcmyers/received_events", "type": "User", "site_admin": false}, "body": "Done.", "created_at": "2017-09-12T12:42:13Z", "updated_at": "2017-09-12T12:42:13Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/12928#discussion_r138335000", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/12928", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/138335000"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/12928#discussion_r138335000"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/12928"}}, "body_html": "<p>Done.</p>", "body_text": "Done.", "in_reply_to_id": 138238125}