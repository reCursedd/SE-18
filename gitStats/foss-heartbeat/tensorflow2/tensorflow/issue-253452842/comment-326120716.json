{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/326120716", "html_url": "https://github.com/tensorflow/tensorflow/issues/12659#issuecomment-326120716", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12659", "id": 326120716, "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjEyMDcxNg==", "user": {"login": "jart", "id": 49262, "node_id": "MDQ6VXNlcjQ5MjYy", "avatar_url": "https://avatars1.githubusercontent.com/u/49262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jart", "html_url": "https://github.com/jart", "followers_url": "https://api.github.com/users/jart/followers", "following_url": "https://api.github.com/users/jart/following{/other_user}", "gists_url": "https://api.github.com/users/jart/gists{/gist_id}", "starred_url": "https://api.github.com/users/jart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jart/subscriptions", "organizations_url": "https://api.github.com/users/jart/orgs", "repos_url": "https://api.github.com/users/jart/repos", "events_url": "https://api.github.com/users/jart/events{/privacy}", "received_events_url": "https://api.github.com/users/jart/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-30T21:12:12Z", "updated_at": "2017-08-30T21:12:12Z", "author_association": "MEMBER", "body_html": "<p>Well that's concerning. What's odd is that if you don't use <code>feed_dict</code>, then it actually does return <code>nan</code>:</p>\n<div class=\"highlight highlight-text-python-console\"><pre>&gt;&gt;&gt; tf.Session().run(tf.maximum(np.nan, <span class=\"pl-c1\">1</span>.))\nnan</pre></div>\n<p>What do you think about this <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=192142\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mrry\">@mrry</a>?</p>", "body_text": "Well that's concerning. What's odd is that if you don't use feed_dict, then it actually does return nan:\n>>> tf.Session().run(tf.maximum(np.nan, 1.))\nnan\nWhat do you think about this @mrry?", "body": "Well that's concerning. What's odd is that if you don't use `feed_dict`, then it actually does return `nan`:\r\n\r\n```pycon\r\n>>> tf.Session().run(tf.maximum(np.nan, 1.))\r\nnan\r\n```\r\n\r\nWhat do you think about this @mrry?"}