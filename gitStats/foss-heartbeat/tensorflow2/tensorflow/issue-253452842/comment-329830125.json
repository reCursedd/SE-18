{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/329830125", "html_url": "https://github.com/tensorflow/tensorflow/issues/12659#issuecomment-329830125", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12659", "id": 329830125, "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTgzMDEyNQ==", "user": {"login": "yongtang", "id": 6932348, "node_id": "MDQ6VXNlcjY5MzIzNDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/6932348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yongtang", "html_url": "https://github.com/yongtang", "followers_url": "https://api.github.com/users/yongtang/followers", "following_url": "https://api.github.com/users/yongtang/following{/other_user}", "gists_url": "https://api.github.com/users/yongtang/gists{/gist_id}", "starred_url": "https://api.github.com/users/yongtang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yongtang/subscriptions", "organizations_url": "https://api.github.com/users/yongtang/orgs", "repos_url": "https://api.github.com/users/yongtang/repos", "events_url": "https://api.github.com/users/yongtang/events{/privacy}", "received_events_url": "https://api.github.com/users/yongtang/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-15T16:20:13Z", "updated_at": "2017-09-15T16:20:13Z", "author_association": "MEMBER", "body_html": "<p>On GPU the issue exists as well:</p>\n<div class=\"highlight highlight-source-python\"><pre>Python <span class=\"pl-c1\">2.7</span>.12 (default, Nov <span class=\"pl-c1\">19</span> <span class=\"pl-c1\">2016</span>, <span class=\"pl-c1\">0<span class=\"pl-ii\">6</span></span>:<span class=\"pl-c1\">48</span>:<span class=\"pl-c1\">10</span>) \n[<span class=\"pl-c1\">GCC</span> <span class=\"pl-c1\">5.4</span>.0 <span class=\"pl-c1\">20160609</span>] on linux2\nType <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>help<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>copyright<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>credits<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">or</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>license<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">for</span> more information.\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> \n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">print</span> tf.Session().run(tf.maximum(np.nan, <span class=\"pl-c1\">1</span>.))\n<span class=\"pl-c1\">2017</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">0<span class=\"pl-ii\">9</span></span><span class=\"pl-k\">-</span><span class=\"pl-c1\">15</span> <span class=\"pl-c1\">16</span>:<span class=\"pl-c1\">17</span>:<span class=\"pl-c1\">47.560456</span>: I tensorflow<span class=\"pl-k\">/</span>stream_executor<span class=\"pl-k\">/</span>cuda<span class=\"pl-k\">/</span>cuda_gpu_executor.cc:<span class=\"pl-c1\">892</span>] successful <span class=\"pl-c1\">NUMA</span> node read <span class=\"pl-k\">from</span> SysFS had negative value (<span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>), but there must be at least one <span class=\"pl-c1\">NUMA</span> node, so returning <span class=\"pl-c1\">NUMA</span> node zero\n<span class=\"pl-c1\">2017</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">0<span class=\"pl-ii\">9</span></span><span class=\"pl-k\">-</span><span class=\"pl-c1\">15</span> <span class=\"pl-c1\">16</span>:<span class=\"pl-c1\">17</span>:<span class=\"pl-c1\">47.560956</span>: I tensorflow<span class=\"pl-k\">/</span>core<span class=\"pl-k\">/</span>common_runtime<span class=\"pl-k\">/</span>gpu<span class=\"pl-k\">/</span>gpu_device.cc:<span class=\"pl-c1\">965</span>] Found device <span class=\"pl-c1\">0</span> <span class=\"pl-k\">with</span> properties: \nname: Tesla K80 major: <span class=\"pl-c1\">3</span> minor: <span class=\"pl-c1\">7</span> memoryClockRate(GHz): <span class=\"pl-c1\">0.8235</span>\npciBusID: <span class=\"pl-c1\">0000</span>:<span class=\"pl-c1\">00</span>:<span class=\"pl-ii\">1e</span>.0\ntotalMemory: <span class=\"pl-c1\">11.</span><span class=\"pl-ii\">17GiB</span> freeMemory: <span class=\"pl-c1\">11.</span><span class=\"pl-ii\">11GiB</span>\n<span class=\"pl-c1\">2017</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">0<span class=\"pl-ii\">9</span></span><span class=\"pl-k\">-</span><span class=\"pl-c1\">15</span> <span class=\"pl-c1\">16</span>:<span class=\"pl-c1\">17</span>:<span class=\"pl-c1\">47.560992</span>: I tensorflow<span class=\"pl-k\">/</span>core<span class=\"pl-k\">/</span>common_runtime<span class=\"pl-k\">/</span>gpu<span class=\"pl-k\">/</span>gpu_device.cc:<span class=\"pl-c1\">1055</span>] Creating TensorFlow device (<span class=\"pl-k\">/</span>device:<span class=\"pl-c1\">GPU</span>:<span class=\"pl-c1\">0</span>) <span class=\"pl-ii\">-&gt;</span> (device: <span class=\"pl-c1\">0</span>, name: Tesla K80, pci bus <span class=\"pl-c1\">id</span>: <span class=\"pl-c1\">0000</span>:<span class=\"pl-c1\">00</span>:<span class=\"pl-ii\">1e</span>.0, compute capability: <span class=\"pl-c1\">3.7</span>)\nnan\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> \n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">print</span> tf.Session().run(tf.maximum(<span class=\"pl-c1\">1</span>., np.nan))\n<span class=\"pl-c1\">2017</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">0<span class=\"pl-ii\">9</span></span><span class=\"pl-k\">-</span><span class=\"pl-c1\">15</span> <span class=\"pl-c1\">16</span>:<span class=\"pl-c1\">18</span>:<span class=\"pl-c1\">14.369889</span>: I tensorflow<span class=\"pl-k\">/</span>core<span class=\"pl-k\">/</span>common_runtime<span class=\"pl-k\">/</span>gpu<span class=\"pl-k\">/</span>gpu_device.cc:<span class=\"pl-c1\">1055</span>] Creating TensorFlow device (<span class=\"pl-k\">/</span>device:<span class=\"pl-c1\">GPU</span>:<span class=\"pl-c1\">0</span>) <span class=\"pl-ii\">-&gt;</span> (device: <span class=\"pl-c1\">0</span>, name: Tesla K80, pci bus <span class=\"pl-c1\">id</span>: <span class=\"pl-c1\">0000</span>:<span class=\"pl-c1\">00</span>:<span class=\"pl-ii\">1e</span>.0, compute capability: <span class=\"pl-c1\">3.7</span>)\n<span class=\"pl-c1\">1.0</span>\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> \n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> a <span class=\"pl-k\">=</span> tf.placeholder(<span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.float32)\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> max_a <span class=\"pl-k\">=</span> tf.maximum(a, <span class=\"pl-c1\">1</span>.)\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">with</span> tf.Session():\n<span class=\"pl-c1\">...</span>     <span class=\"pl-c1\">print</span> max_a.eval(<span class=\"pl-v\">feed_dict</span><span class=\"pl-k\">=</span>{a: np.nan})\n<span class=\"pl-c1\">...</span> \n<span class=\"pl-c1\">2017</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">0<span class=\"pl-ii\">9</span></span><span class=\"pl-k\">-</span><span class=\"pl-c1\">15</span> <span class=\"pl-c1\">16</span>:<span class=\"pl-c1\">18</span>:<span class=\"pl-c1\">44.264749</span>: I tensorflow<span class=\"pl-k\">/</span>core<span class=\"pl-k\">/</span>common_runtime<span class=\"pl-k\">/</span>gpu<span class=\"pl-k\">/</span>gpu_device.cc:<span class=\"pl-c1\">1055</span>] Creating TensorFlow device (<span class=\"pl-k\">/</span>device:<span class=\"pl-c1\">GPU</span>:<span class=\"pl-c1\">0</span>) <span class=\"pl-ii\">-&gt;</span> (device: <span class=\"pl-c1\">0</span>, name: Tesla K80, pci bus <span class=\"pl-c1\">id</span>: <span class=\"pl-c1\">0000</span>:<span class=\"pl-c1\">00</span>:<span class=\"pl-ii\">1e</span>.0, compute capability: <span class=\"pl-c1\">3.7</span>)\n<span class=\"pl-c1\">1.0</span>\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> a <span class=\"pl-k\">=</span> tf.placeholder(<span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.float32)\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> max_a <span class=\"pl-k\">=</span> tf.maximum(<span class=\"pl-c1\">1</span>., a)\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">with</span> tf.Session():\n<span class=\"pl-c1\">...</span>   <span class=\"pl-c1\">print</span> max_a.eval(<span class=\"pl-v\">feed_dict</span><span class=\"pl-k\">=</span>{a: np.nan})\n<span class=\"pl-c1\">...</span> \n<span class=\"pl-c1\">2017</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">0<span class=\"pl-ii\">9</span></span><span class=\"pl-k\">-</span><span class=\"pl-c1\">15</span> <span class=\"pl-c1\">16</span>:<span class=\"pl-c1\">19</span>:<span class=\"pl-c1\">20.710406</span>: I tensorflow<span class=\"pl-k\">/</span>core<span class=\"pl-k\">/</span>common_runtime<span class=\"pl-k\">/</span>gpu<span class=\"pl-k\">/</span>gpu_device.cc:<span class=\"pl-c1\">1055</span>] Creating TensorFlow device (<span class=\"pl-k\">/</span>device:<span class=\"pl-c1\">GPU</span>:<span class=\"pl-c1\">0</span>) <span class=\"pl-ii\">-&gt;</span> (device: <span class=\"pl-c1\">0</span>, name: Tesla K80, pci bus <span class=\"pl-c1\">id</span>: <span class=\"pl-c1\">0000</span>:<span class=\"pl-c1\">00</span>:<span class=\"pl-ii\">1e</span>.0, compute capability: <span class=\"pl-c1\">3.7</span>)\n<span class=\"pl-c1\">1.0</span>\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> </pre></div>", "body_text": "On GPU the issue exists as well:\nPython 2.7.12 (default, Nov 19 2016, 06:48:10) \n[GCC 5.4.0 20160609] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import tensorflow as tf\n>>> import numpy as np\n>>> \n>>> print tf.Session().run(tf.maximum(np.nan, 1.))\n2017-09-15 16:17:47.560456: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:892] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n2017-09-15 16:17:47.560956: I tensorflow/core/common_runtime/gpu/gpu_device.cc:965] Found device 0 with properties: \nname: Tesla K80 major: 3 minor: 7 memoryClockRate(GHz): 0.8235\npciBusID: 0000:00:1e.0\ntotalMemory: 11.17GiB freeMemory: 11.11GiB\n2017-09-15 16:17:47.560992: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1055] Creating TensorFlow device (/device:GPU:0) -> (device: 0, name: Tesla K80, pci bus id: 0000:00:1e.0, compute capability: 3.7)\nnan\n>>> \n>>> print tf.Session().run(tf.maximum(1., np.nan))\n2017-09-15 16:18:14.369889: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1055] Creating TensorFlow device (/device:GPU:0) -> (device: 0, name: Tesla K80, pci bus id: 0000:00:1e.0, compute capability: 3.7)\n1.0\n>>> \n>>> a = tf.placeholder(dtype=tf.float32)\n>>> max_a = tf.maximum(a, 1.)\n>>> with tf.Session():\n...     print max_a.eval(feed_dict={a: np.nan})\n... \n2017-09-15 16:18:44.264749: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1055] Creating TensorFlow device (/device:GPU:0) -> (device: 0, name: Tesla K80, pci bus id: 0000:00:1e.0, compute capability: 3.7)\n1.0\n>>> a = tf.placeholder(dtype=tf.float32)\n>>> max_a = tf.maximum(1., a)\n>>> with tf.Session():\n...   print max_a.eval(feed_dict={a: np.nan})\n... \n2017-09-15 16:19:20.710406: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1055] Creating TensorFlow device (/device:GPU:0) -> (device: 0, name: Tesla K80, pci bus id: 0000:00:1e.0, compute capability: 3.7)\n1.0\n>>>", "body": "On GPU the issue exists as well:\r\n```python\r\nPython 2.7.12 (default, Nov 19 2016, 06:48:10) \r\n[GCC 5.4.0 20160609] on linux2\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import tensorflow as tf\r\n>>> import numpy as np\r\n>>> \r\n>>> print tf.Session().run(tf.maximum(np.nan, 1.))\r\n2017-09-15 16:17:47.560456: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:892] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\r\n2017-09-15 16:17:47.560956: I tensorflow/core/common_runtime/gpu/gpu_device.cc:965] Found device 0 with properties: \r\nname: Tesla K80 major: 3 minor: 7 memoryClockRate(GHz): 0.8235\r\npciBusID: 0000:00:1e.0\r\ntotalMemory: 11.17GiB freeMemory: 11.11GiB\r\n2017-09-15 16:17:47.560992: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1055] Creating TensorFlow device (/device:GPU:0) -> (device: 0, name: Tesla K80, pci bus id: 0000:00:1e.0, compute capability: 3.7)\r\nnan\r\n>>> \r\n>>> print tf.Session().run(tf.maximum(1., np.nan))\r\n2017-09-15 16:18:14.369889: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1055] Creating TensorFlow device (/device:GPU:0) -> (device: 0, name: Tesla K80, pci bus id: 0000:00:1e.0, compute capability: 3.7)\r\n1.0\r\n>>> \r\n>>> a = tf.placeholder(dtype=tf.float32)\r\n>>> max_a = tf.maximum(a, 1.)\r\n>>> with tf.Session():\r\n...     print max_a.eval(feed_dict={a: np.nan})\r\n... \r\n2017-09-15 16:18:44.264749: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1055] Creating TensorFlow device (/device:GPU:0) -> (device: 0, name: Tesla K80, pci bus id: 0000:00:1e.0, compute capability: 3.7)\r\n1.0\r\n>>> a = tf.placeholder(dtype=tf.float32)\r\n>>> max_a = tf.maximum(1., a)\r\n>>> with tf.Session():\r\n...   print max_a.eval(feed_dict={a: np.nan})\r\n... \r\n2017-09-15 16:19:20.710406: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1055] Creating TensorFlow device (/device:GPU:0) -> (device: 0, name: Tesla K80, pci bus id: 0000:00:1e.0, compute capability: 3.7)\r\n1.0\r\n>>> \r\n```"}