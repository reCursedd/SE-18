{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/329836438", "html_url": "https://github.com/tensorflow/tensorflow/issues/13039#issuecomment-329836438", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13039", "id": 329836438, "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTgzNjQzOA==", "user": {"login": "tnikolla", "id": 9167664, "node_id": "MDQ6VXNlcjkxNjc2NjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/9167664?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tnikolla", "html_url": "https://github.com/tnikolla", "followers_url": "https://api.github.com/users/tnikolla/followers", "following_url": "https://api.github.com/users/tnikolla/following{/other_user}", "gists_url": "https://api.github.com/users/tnikolla/gists{/gist_id}", "starred_url": "https://api.github.com/users/tnikolla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tnikolla/subscriptions", "organizations_url": "https://api.github.com/users/tnikolla/orgs", "repos_url": "https://api.github.com/users/tnikolla/repos", "events_url": "https://api.github.com/users/tnikolla/events{/privacy}", "received_events_url": "https://api.github.com/users/tnikolla/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-15T16:46:23Z", "updated_at": "2017-09-15T17:47:53Z", "author_association": "NONE", "body_html": "<p>So, I write the tfrecord with build_cgd_dataset.py. This works always. The problem lies in reading them.</p>\n<p>I've done some more careful tests today. I'm writing here the programs:</p>\n<p><strong>writer.py</strong></p>\n<pre><code>import tensorflow as tf\n\ndef _int64_feature(v):\n    return tf.train.Feature(int64_list=tf.train.Int64List(value=v))\n\ndef _floats_feature(v):\n    return tf.train.Feature(float_list=tf.train.FloatList(value=v))\n\ndef convert_to_example():\n    return tf.train.Example(features=tf.train.Features(feature={\n            'a': _floats_feature(a)}))\n\n#a = [1, 2, 3]\na = [1., 2., 3.]\ndef main():\n    writer = tf.python_io.TFRecordWriter('tfrecord_float')\n    example = convert_to_example()\n    writer.write(example.SerializeToString())\n    writer.close()\n\nif __name__ == '__main__':\n    main()\n</code></pre>\n<p><strong>reader.py</strong></p>\n<pre><code>import tensorflow as tf\n\nfilename = '/home/tomi/issue/tfrecord_float'\nrecord_iter = tf.python_io.tf_record_iterator(path=filename)\nexample = tf.train.Example()\nfor record in record_iter:\n    example.ParseFromString(record)\n    a = example.features.feature['a'].float_list.value[:]\n    print(a)\n</code></pre>\n<p><strong>Running the reader from the terminal</strong> (and not Spyder 2.3.8) everything works as should. Running the reader from Spyder reading a list of floats crushes Spyder. With a list of integers, more often than not, the reader works fine. Maybe the issue should be closed.</p>", "body_text": "So, I write the tfrecord with build_cgd_dataset.py. This works always. The problem lies in reading them.\nI've done some more careful tests today. I'm writing here the programs:\nwriter.py\nimport tensorflow as tf\n\ndef _int64_feature(v):\n    return tf.train.Feature(int64_list=tf.train.Int64List(value=v))\n\ndef _floats_feature(v):\n    return tf.train.Feature(float_list=tf.train.FloatList(value=v))\n\ndef convert_to_example():\n    return tf.train.Example(features=tf.train.Features(feature={\n            'a': _floats_feature(a)}))\n\n#a = [1, 2, 3]\na = [1., 2., 3.]\ndef main():\n    writer = tf.python_io.TFRecordWriter('tfrecord_float')\n    example = convert_to_example()\n    writer.write(example.SerializeToString())\n    writer.close()\n\nif __name__ == '__main__':\n    main()\n\nreader.py\nimport tensorflow as tf\n\nfilename = '/home/tomi/issue/tfrecord_float'\nrecord_iter = tf.python_io.tf_record_iterator(path=filename)\nexample = tf.train.Example()\nfor record in record_iter:\n    example.ParseFromString(record)\n    a = example.features.feature['a'].float_list.value[:]\n    print(a)\n\nRunning the reader from the terminal (and not Spyder 2.3.8) everything works as should. Running the reader from Spyder reading a list of floats crushes Spyder. With a list of integers, more often than not, the reader works fine. Maybe the issue should be closed.", "body": "So, I write the tfrecord with build_cgd_dataset.py. This works always. The problem lies in reading them.\r\n\r\nI've done some more careful tests today. I'm writing here the programs:\r\n\r\n**writer.py**\r\n\r\n    import tensorflow as tf\r\n\r\n    def _int64_feature(v):\r\n        return tf.train.Feature(int64_list=tf.train.Int64List(value=v))\r\n\r\n    def _floats_feature(v):\r\n        return tf.train.Feature(float_list=tf.train.FloatList(value=v))\r\n    \r\n    def convert_to_example():\r\n        return tf.train.Example(features=tf.train.Features(feature={\r\n                'a': _floats_feature(a)}))\r\n    \r\n    #a = [1, 2, 3]\r\n    a = [1., 2., 3.]\r\n    def main():\r\n        writer = tf.python_io.TFRecordWriter('tfrecord_float')\r\n        example = convert_to_example()\r\n        writer.write(example.SerializeToString())\r\n        writer.close()\r\n\r\n    if __name__ == '__main__':\r\n        main()\r\n\r\n**reader.py**\r\n\r\n    import tensorflow as tf\r\n\r\n    filename = '/home/tomi/issue/tfrecord_float'\r\n    record_iter = tf.python_io.tf_record_iterator(path=filename)\r\n    example = tf.train.Example()\r\n    for record in record_iter:\r\n        example.ParseFromString(record)\r\n        a = example.features.feature['a'].float_list.value[:]\r\n        print(a)\r\n\r\n**Running the reader from the terminal** (and not Spyder 2.3.8) everything works as should. Running the reader from Spyder reading a list of floats crushes Spyder. With a list of integers, more often than not, the reader works fine. Maybe the issue should be closed."}