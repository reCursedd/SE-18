{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/332041769", "html_url": "https://github.com/tensorflow/tensorflow/pull/13205#issuecomment-332041769", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13205", "id": 332041769, "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjA0MTc2OQ==", "user": {"login": "martinwicke", "id": 577277, "node_id": "MDQ6VXNlcjU3NzI3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/577277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinwicke", "html_url": "https://github.com/martinwicke", "followers_url": "https://api.github.com/users/martinwicke/followers", "following_url": "https://api.github.com/users/martinwicke/following{/other_user}", "gists_url": "https://api.github.com/users/martinwicke/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinwicke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinwicke/subscriptions", "organizations_url": "https://api.github.com/users/martinwicke/orgs", "repos_url": "https://api.github.com/users/martinwicke/repos", "events_url": "https://api.github.com/users/martinwicke/events{/privacy}", "received_events_url": "https://api.github.com/users/martinwicke/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-25T23:25:02Z", "updated_at": "2017-09-25T23:25:02Z", "author_association": "MEMBER", "body_html": "<p>I agree, this is rather ugly. <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=22060313\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/annarev\">@annarev</a> is working on a better way to generate our python API from the op definitions -- the new process could fix this.</p>\n<p>Possibly we need to give users more control how Op attrs are turned into python args, maybe by allowing .attr and .attr_after? It's all a little sad, but that's the cost of backwards compatibility.</p>", "body_text": "I agree, this is rather ugly. @annarev is working on a better way to generate our python API from the op definitions -- the new process could fix this.\nPossibly we need to give users more control how Op attrs are turned into python args, maybe by allowing .attr and .attr_after? It's all a little sad, but that's the cost of backwards compatibility.", "body": "I agree, this is rather ugly. @annarev is working on a better way to generate our python API from the op definitions -- the new process could fix this. \r\n\r\nPossibly we need to give users more control how Op attrs are turned into python args, maybe by allowing .attr and .attr_after? It's all a little sad, but that's the cost of backwards compatibility."}