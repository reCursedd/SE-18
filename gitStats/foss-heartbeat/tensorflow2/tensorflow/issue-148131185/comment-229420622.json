{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/229420622", "html_url": "https://github.com/tensorflow/tensorflow/issues/1924#issuecomment-229420622", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1924", "id": 229420622, "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTQyMDYyMg==", "user": {"login": "ilaripih", "id": 1620663, "node_id": "MDQ6VXNlcjE2MjA2NjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1620663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilaripih", "html_url": "https://github.com/ilaripih", "followers_url": "https://api.github.com/users/ilaripih/followers", "following_url": "https://api.github.com/users/ilaripih/following{/other_user}", "gists_url": "https://api.github.com/users/ilaripih/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilaripih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilaripih/subscriptions", "organizations_url": "https://api.github.com/users/ilaripih/orgs", "repos_url": "https://api.github.com/users/ilaripih/repos", "events_url": "https://api.github.com/users/ilaripih/events{/privacy}", "received_events_url": "https://api.github.com/users/ilaripih/received_events", "type": "User", "site_admin": false}, "created_at": "2016-06-29T17:00:18Z", "updated_at": "2016-06-29T17:00:18Z", "author_association": "NONE", "body_html": "<p>Has anyone managed to solve the C++ issue, or work around it so that OpenCV's <code>cv::imdecode</code> could still be used? Is dynamic linking to <code>libtensorflow.so</code> the way to go? I'd even be happy with a solution that completely removed JPEG and PNG reading abilities from TensorFlow as I don't need them.</p>", "body_text": "Has anyone managed to solve the C++ issue, or work around it so that OpenCV's cv::imdecode could still be used? Is dynamic linking to libtensorflow.so the way to go? I'd even be happy with a solution that completely removed JPEG and PNG reading abilities from TensorFlow as I don't need them.", "body": "Has anyone managed to solve the C++ issue, or work around it so that OpenCV's `cv::imdecode` could still be used? Is dynamic linking to `libtensorflow.so` the way to go? I'd even be happy with a solution that completely removed JPEG and PNG reading abilities from TensorFlow as I don't need them.\n"}