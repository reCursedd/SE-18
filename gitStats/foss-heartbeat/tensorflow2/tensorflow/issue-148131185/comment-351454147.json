{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/351454147", "html_url": "https://github.com/tensorflow/tensorflow/issues/1924#issuecomment-351454147", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1924", "id": 351454147, "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTQ1NDE0Nw==", "user": {"login": "tuanphuc", "id": 18749811, "node_id": "MDQ6VXNlcjE4NzQ5ODEx", "avatar_url": "https://avatars2.githubusercontent.com/u/18749811?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tuanphuc", "html_url": "https://github.com/tuanphuc", "followers_url": "https://api.github.com/users/tuanphuc/followers", "following_url": "https://api.github.com/users/tuanphuc/following{/other_user}", "gists_url": "https://api.github.com/users/tuanphuc/gists{/gist_id}", "starred_url": "https://api.github.com/users/tuanphuc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tuanphuc/subscriptions", "organizations_url": "https://api.github.com/users/tuanphuc/orgs", "repos_url": "https://api.github.com/users/tuanphuc/repos", "events_url": "https://api.github.com/users/tuanphuc/events{/privacy}", "received_events_url": "https://api.github.com/users/tuanphuc/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-13T16:59:23Z", "updated_at": "2017-12-13T20:50:09Z", "author_association": "NONE", "body_html": "<p>I use tensorflow 1.4.0 and opencv 3.2.0 on ubuntu 16.04. I built libtensorflow_cc.so with bazel then I took the code from <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3530657\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/beniz\">@beniz</a></p>\n<div class=\"highlight highlight-source-c++\"><pre>#<span class=\"pl-k\">include</span> <span class=\"pl-s\"><span class=\"pl-pds\">&lt;</span>iostream<span class=\"pl-pds\">&gt;</span></span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span>#include \"tensorflow/core/public/session.h\"                                                                   </span>\n#<span class=\"pl-k\">include</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>tensorflow/core/platform/env.h<span class=\"pl-pds\">\"</span></span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span>#include \"tensorflow/core/framework/tensor.h\"                                                                 </span>\n\n#<span class=\"pl-k\">include</span> <span class=\"pl-s\"><span class=\"pl-pds\">&lt;</span>opencv2/opencv.hpp<span class=\"pl-pds\">&gt;</span></span>\n#<span class=\"pl-k\">include</span> <span class=\"pl-s\"><span class=\"pl-pds\">&lt;</span>opencv2/imgproc/imgproc.hpp<span class=\"pl-pds\">&gt;</span></span>\n\n<span class=\"pl-k\">int</span> <span class=\"pl-en\">main</span>(<span class=\"pl-k\">int</span> argc, <span class=\"pl-k\">char</span>** argv)\n{\n  <span class=\"pl-c\"><span class=\"pl-c\">//</span> Loading the file path provided in the arg into a mat objects                                               </span>\n  std::string path = argv[<span class=\"pl-c1\">1</span>];\n  cv::Mat readImage = <span class=\"pl-c1\">cv::imread</span>(path);\n  std::cerr &lt;&lt; <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>read image size<span class=\"pl-pds\">\"</span></span> &lt;&lt; readImage.<span class=\"pl-c1\">size</span>() &lt;&lt; std::endl;\n}</pre></div>\n<p>and compile it with gcc.</p>\n<p>I saw that if tensorflow is built without cuda, it can read the image fine with <code>tensorflow/core/public/session.h</code> or <code>tensorflow/core/framework/tensor.h</code> commented or uncommented. However if I want to show the image with <code>cv::imshow</code>, the seg fault error comes again. Is there anyone has the same problem ?</p>", "body_text": "I use tensorflow 1.4.0 and opencv 3.2.0 on ubuntu 16.04. I built libtensorflow_cc.so with bazel then I took the code from @beniz\n#include <iostream>\n//#include \"tensorflow/core/public/session.h\"                                                                   \n#include \"tensorflow/core/platform/env.h\"\n//#include \"tensorflow/core/framework/tensor.h\"                                                                 \n\n#include <opencv2/opencv.hpp>\n#include <opencv2/imgproc/imgproc.hpp>\n\nint main(int argc, char** argv)\n{\n  // Loading the file path provided in the arg into a mat objects                                               \n  std::string path = argv[1];\n  cv::Mat readImage = cv::imread(path);\n  std::cerr << \"read image size\" << readImage.size() << std::endl;\n}\nand compile it with gcc.\nI saw that if tensorflow is built without cuda, it can read the image fine with tensorflow/core/public/session.h or tensorflow/core/framework/tensor.h commented or uncommented. However if I want to show the image with cv::imshow, the seg fault error comes again. Is there anyone has the same problem ?", "body": "I use tensorflow 1.4.0 and opencv 3.2.0 on ubuntu 16.04. I built libtensorflow_cc.so with bazel then I took the code from @beniz \r\n```cpp\r\n#include <iostream>\r\n//#include \"tensorflow/core/public/session.h\"                                                                   \r\n#include \"tensorflow/core/platform/env.h\"\r\n//#include \"tensorflow/core/framework/tensor.h\"                                                                 \r\n\r\n#include <opencv2/opencv.hpp>\r\n#include <opencv2/imgproc/imgproc.hpp>\r\n\r\nint main(int argc, char** argv)\r\n{\r\n  // Loading the file path provided in the arg into a mat objects                                               \r\n  std::string path = argv[1];\r\n  cv::Mat readImage = cv::imread(path);\r\n  std::cerr << \"read image size\" << readImage.size() << std::endl;\r\n}\r\n```\r\nand compile it with gcc.\r\n\r\nI saw that if tensorflow is built without cuda, it can read the image fine with `tensorflow/core/public/session.h` or `tensorflow/core/framework/tensor.h` commented or uncommented. However if I want to show the image with `cv::imshow`, the seg fault error comes again. Is there anyone has the same problem ?"}