{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/233861119", "html_url": "https://github.com/tensorflow/tensorflow/issues/1924#issuecomment-233861119", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1924", "id": 233861119, "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzg2MTExOQ==", "user": {"login": "ilaripih", "id": 1620663, "node_id": "MDQ6VXNlcjE2MjA2NjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1620663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilaripih", "html_url": "https://github.com/ilaripih", "followers_url": "https://api.github.com/users/ilaripih/followers", "following_url": "https://api.github.com/users/ilaripih/following{/other_user}", "gists_url": "https://api.github.com/users/ilaripih/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilaripih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilaripih/subscriptions", "organizations_url": "https://api.github.com/users/ilaripih/orgs", "repos_url": "https://api.github.com/users/ilaripih/repos", "events_url": "https://api.github.com/users/ilaripih/events{/privacy}", "received_events_url": "https://api.github.com/users/ilaripih/received_events", "type": "User", "site_admin": false}, "created_at": "2016-07-20T07:08:58Z", "updated_at": "2016-07-20T07:08:58Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=9475734\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/chenbiaolong\">@chenbiaolong</a> My solution was to to build <code>libtensorflow.so</code> with the version script that only exports the <code>*tensorflow*</code> symbols, and link to it dynamically from my project. You seem to be using static linkage to some tensorflow modules, which won't work.</p>\n<p>I only used Bazel to build <code>libtensorflow.so</code>, but for building my own project I found that it was a lot easier to just use a traditional Makefile.</p>", "body_text": "@chenbiaolong My solution was to to build libtensorflow.so with the version script that only exports the *tensorflow* symbols, and link to it dynamically from my project. You seem to be using static linkage to some tensorflow modules, which won't work.\nI only used Bazel to build libtensorflow.so, but for building my own project I found that it was a lot easier to just use a traditional Makefile.", "body": "@chenbiaolong My solution was to to build `libtensorflow.so` with the version script that only exports the `*tensorflow*` symbols, and link to it dynamically from my project. You seem to be using static linkage to some tensorflow modules, which won't work.\n\nI only used Bazel to build `libtensorflow.so`, but for building my own project I found that it was a lot easier to just use a traditional Makefile.\n"}