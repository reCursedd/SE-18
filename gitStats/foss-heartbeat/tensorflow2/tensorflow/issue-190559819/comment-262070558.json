{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/262070558", "html_url": "https://github.com/tensorflow/tensorflow/issues/5733#issuecomment-262070558", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5733", "id": 262070558, "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjA3MDU1OA==", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "created_at": "2016-11-21T21:20:06Z", "updated_at": "2016-11-21T21:20:06Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5083018\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/lukasz-pyrzyk\">@lukasz-pyrzyk</a> : Could you provide some code snippet to reproduce this?</p>\n<p>Looking at the stacktrace, I don't see anything obvious in the C API or the Go code (since the Go code does seem to ensure that <code>TF_NewSession</code> gets all valid, non-NULL arguments. If that's the case, then the segfault would appear to trigger inside the C++ runtime due to some peculiarity of the input its currently getting. Any hints on reproducing this, or any more characteristics about the calling code will greatly help. For example, are you setting <code>SessionOptions.Target</code> and if so, what to?</p>", "body_text": "@lukasz-pyrzyk : Could you provide some code snippet to reproduce this?\nLooking at the stacktrace, I don't see anything obvious in the C API or the Go code (since the Go code does seem to ensure that TF_NewSession gets all valid, non-NULL arguments. If that's the case, then the segfault would appear to trigger inside the C++ runtime due to some peculiarity of the input its currently getting. Any hints on reproducing this, or any more characteristics about the calling code will greatly help. For example, are you setting SessionOptions.Target and if so, what to?", "body": "@lukasz-pyrzyk : Could you provide some code snippet to reproduce this? \r\n\r\nLooking at the stacktrace, I don't see anything obvious in the C API or the Go code (since the Go code does seem to ensure that `TF_NewSession` gets all valid, non-NULL arguments. If that's the case, then the segfault would appear to trigger inside the C++ runtime due to some peculiarity of the input its currently getting. Any hints on reproducing this, or any more characteristics about the calling code will greatly help. For example, are you setting `SessionOptions.Target` and if so, what to?"}