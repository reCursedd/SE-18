{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21361", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21361/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21361/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21361/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21361", "id": 347477414, "node_id": "MDU6SXNzdWUzNDc0Nzc0MTQ=", "number": 21361, "title": "[tf.keras] Fit Generator & TensorBoard Callback with Stateful Metrics", "user": {"login": "brge17", "id": 33430930, "node_id": "MDQ6VXNlcjMzNDMwOTMw", "avatar_url": "https://avatars3.githubusercontent.com/u/33430930?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brge17", "html_url": "https://github.com/brge17", "followers_url": "https://api.github.com/users/brge17/followers", "following_url": "https://api.github.com/users/brge17/following{/other_user}", "gists_url": "https://api.github.com/users/brge17/gists{/gist_id}", "starred_url": "https://api.github.com/users/brge17/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brge17/subscriptions", "organizations_url": "https://api.github.com/users/brge17/orgs", "repos_url": "https://api.github.com/users/brge17/repos", "events_url": "https://api.github.com/users/brge17/events{/privacy}", "received_events_url": "https://api.github.com/users/brge17/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "jart", "id": 49262, "node_id": "MDQ6VXNlcjQ5MjYy", "avatar_url": "https://avatars1.githubusercontent.com/u/49262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jart", "html_url": "https://github.com/jart", "followers_url": "https://api.github.com/users/jart/followers", "following_url": "https://api.github.com/users/jart/following{/other_user}", "gists_url": "https://api.github.com/users/jart/gists{/gist_id}", "starred_url": "https://api.github.com/users/jart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jart/subscriptions", "organizations_url": "https://api.github.com/users/jart/orgs", "repos_url": "https://api.github.com/users/jart/repos", "events_url": "https://api.github.com/users/jart/events{/privacy}", "received_events_url": "https://api.github.com/users/jart/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jart", "id": 49262, "node_id": "MDQ6VXNlcjQ5MjYy", "avatar_url": "https://avatars1.githubusercontent.com/u/49262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jart", "html_url": "https://github.com/jart", "followers_url": "https://api.github.com/users/jart/followers", "following_url": "https://api.github.com/users/jart/following{/other_user}", "gists_url": "https://api.github.com/users/jart/gists{/gist_id}", "starred_url": "https://api.github.com/users/jart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jart/subscriptions", "organizations_url": "https://api.github.com/users/jart/orgs", "repos_url": "https://api.github.com/users/jart/repos", "events_url": "https://api.github.com/users/jart/events{/privacy}", "received_events_url": "https://api.github.com/users/jart/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-08-03T17:29:25Z", "updated_at": "2018-08-22T19:51:14Z", "closed_at": "2018-08-22T19:51:14Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: No</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Ubuntu 16.04/OSX</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>: n/a</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.9.0/1.10.0rc1</li>\n<li><strong>Python version</strong>: 3.6</li>\n<li><strong>Bazel version (if compiling from source)</strong>: n/a</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: n/a</li>\n<li><strong>CUDA/cuDNN version</strong>: n/a</li>\n<li><strong>GPU model and memory</strong>: n/a</li>\n<li><strong>Exact command to reproduce</strong>: n/a</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>When using <code>fit_generator</code> with <code>TensorBoard</code> callback and a <code>StatefulMetric</code> inside <code>tf.keras</code>:</p>\n<pre><code>  File \"/anaconda/lib/python3.6/site-packages/tensorflow/python/keras/callbacks.py\", line 841, in on_epoch_end\n    summary_value.simple_value = value.item()\nAttributeError: 'float' object has no attribute 'item'\n</code></pre>\n<p><strong>This issue was fixed in regular Keras</strong> (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"341151609\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/keras-team/keras/issues/10673\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/keras-team/keras/pull/10673/hovercard\" href=\"https://github.com/keras-team/keras/pull/10673\">keras-team/keras#10673</a>), but has not been reviewed (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"343798695\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/21071\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/tensorflow/tensorflow/pull/21071/hovercard\" href=\"https://github.com/tensorflow/tensorflow/pull/21071\">#21071</a>) yet in TensorFlow</p>\n<h3>Source code / logs</h3>\n<p>Heres a dummy example of fit_generator with a dummy stateful metric that demonstrates the error:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">from</span> tensorflow.python.keras.layers <span class=\"pl-k\">import</span> Input, Dense\n<span class=\"pl-k\">from</span> tensorflow.python.keras.models <span class=\"pl-k\">import</span> Model\n<span class=\"pl-k\">from</span> tensorflow.python.ops <span class=\"pl-k\">import</span> state_ops\n\n<span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n\n<span class=\"pl-k\">class</span> <span class=\"pl-en\">BatchCounter</span>(<span class=\"pl-e\">tf</span>.<span class=\"pl-e\">keras</span>.<span class=\"pl-e\">layers</span>.<span class=\"pl-e\">Layer</span>):\n\n        <span class=\"pl-k\">def</span> <span class=\"pl-c1\">__init__</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>, <span class=\"pl-smi\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>batch_counter<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-k\">**</span><span class=\"pl-smi\">kwargs</span>):\n            <span class=\"pl-c1\">super</span>(BatchCounter, <span class=\"pl-c1\">self</span>).<span class=\"pl-c1\">__init__</span>(<span class=\"pl-v\">name</span><span class=\"pl-k\">=</span>name, <span class=\"pl-k\">**</span>kwargs)\n            <span class=\"pl-c1\">self</span>.stateful <span class=\"pl-k\">=</span> <span class=\"pl-c1\">True</span>\n            <span class=\"pl-c1\">self</span>.batches <span class=\"pl-k\">=</span> tf.keras.backend.variable(<span class=\"pl-v\">value</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0</span>, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>int32<span class=\"pl-pds\">\"</span></span>)\n\n        <span class=\"pl-k\">def</span> <span class=\"pl-en\">reset_states</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>):\n            tf.keras.backend.set_value(<span class=\"pl-c1\">self</span>.batches, <span class=\"pl-c1\">0</span>)\n\n        <span class=\"pl-k\">def</span> <span class=\"pl-c1\">__call__</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>, <span class=\"pl-smi\">y_true</span>, <span class=\"pl-smi\">y_pred</span>):\n            current_batches <span class=\"pl-k\">=</span> <span class=\"pl-c1\">self</span>.batches <span class=\"pl-k\">*</span> <span class=\"pl-c1\">1</span>\n            <span class=\"pl-c1\">self</span>.add_update(\n              state_ops.assign_add(<span class=\"pl-c1\">self</span>.batches,\n                                   tf.keras.backend.variable(<span class=\"pl-v\">value</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>int32<span class=\"pl-pds\">\"</span></span>)))\n            <span class=\"pl-k\">return</span> current_batches <span class=\"pl-k\">+</span> <span class=\"pl-c1\">1</span>\n\n<span class=\"pl-k\">class</span> <span class=\"pl-en\">DummyGenerator</span>(<span class=\"pl-c1\">object</span>):\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"\"\"</span> Dummy data generator. <span class=\"pl-pds\">\"\"\"</span></span>\n\n    <span class=\"pl-k\">def</span> <span class=\"pl-en\">run</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>):\n        <span class=\"pl-k\">while</span> <span class=\"pl-c1\">True</span>:\n            <span class=\"pl-k\">yield</span> np.ones((<span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">1</span>)), np.zeros((<span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">1</span>))\n\ntrain_gen <span class=\"pl-k\">=</span> DummyGenerator()\nval_gen <span class=\"pl-k\">=</span> DummyGenerator()\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Dummy model</span>\ninputs <span class=\"pl-k\">=</span> Input(<span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">1</span>,))\noutputs <span class=\"pl-k\">=</span> Dense(<span class=\"pl-c1\">1</span>)(inputs)\nmodel <span class=\"pl-k\">=</span> Model(<span class=\"pl-v\">inputs</span><span class=\"pl-k\">=</span>inputs, <span class=\"pl-v\">outputs</span><span class=\"pl-k\">=</span>outputs)\nmodel.compile(<span class=\"pl-v\">loss</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>mse<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-v\">optimizer</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>adam<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-v\">metrics</span><span class=\"pl-k\">=</span>[BatchCounter()])\n\nmodel.fit_generator(\n    train_gen.run(),\n    <span class=\"pl-v\">steps_per_epoch</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">5</span>,\n    <span class=\"pl-v\">epochs</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">200</span>,\n    <span class=\"pl-v\">validation_data</span><span class=\"pl-k\">=</span>val_gen.run(),\n    <span class=\"pl-v\">validation_steps</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">5</span>,\n    <span class=\"pl-v\">callbacks</span><span class=\"pl-k\">=</span>[tf.keras.callbacks.TensorBoard()])</pre></div>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): No\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 16.04/OSX\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: n/a\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): 1.9.0/1.10.0rc1\nPython version: 3.6\nBazel version (if compiling from source): n/a\nGCC/Compiler version (if compiling from source): n/a\nCUDA/cuDNN version: n/a\nGPU model and memory: n/a\nExact command to reproduce: n/a\n\nDescribe the problem\nWhen using fit_generator with TensorBoard callback and a StatefulMetric inside tf.keras:\n  File \"/anaconda/lib/python3.6/site-packages/tensorflow/python/keras/callbacks.py\", line 841, in on_epoch_end\n    summary_value.simple_value = value.item()\nAttributeError: 'float' object has no attribute 'item'\n\nThis issue was fixed in regular Keras (keras-team/keras#10673), but has not been reviewed (#21071) yet in TensorFlow\nSource code / logs\nHeres a dummy example of fit_generator with a dummy stateful metric that demonstrates the error:\nimport tensorflow as tf\nfrom tensorflow.python.keras.layers import Input, Dense\nfrom tensorflow.python.keras.models import Model\nfrom tensorflow.python.ops import state_ops\n\nimport numpy as np\n\nclass BatchCounter(tf.keras.layers.Layer):\n\n        def __init__(self, name=\"batch_counter\", **kwargs):\n            super(BatchCounter, self).__init__(name=name, **kwargs)\n            self.stateful = True\n            self.batches = tf.keras.backend.variable(value=0, dtype=\"int32\")\n\n        def reset_states(self):\n            tf.keras.backend.set_value(self.batches, 0)\n\n        def __call__(self, y_true, y_pred):\n            current_batches = self.batches * 1\n            self.add_update(\n              state_ops.assign_add(self.batches,\n                                   tf.keras.backend.variable(value=1, dtype=\"int32\")))\n            return current_batches + 1\n\nclass DummyGenerator(object):\n    \"\"\" Dummy data generator. \"\"\"\n\n    def run(self):\n        while True:\n            yield np.ones((10, 1)), np.zeros((10, 1))\n\ntrain_gen = DummyGenerator()\nval_gen = DummyGenerator()\n\n# Dummy model\ninputs = Input(shape=(1,))\noutputs = Dense(1)(inputs)\nmodel = Model(inputs=inputs, outputs=outputs)\nmodel.compile(loss=\"mse\", optimizer=\"adam\", metrics=[BatchCounter()])\n\nmodel.fit_generator(\n    train_gen.run(),\n    steps_per_epoch=5,\n    epochs=200,\n    validation_data=val_gen.run(),\n    validation_steps=5,\n    callbacks=[tf.keras.callbacks.TensorBoard()])", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 16.04/OSX\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**: n/a\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.9.0/1.10.0rc1\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**: n/a\r\n- **GCC/Compiler version (if compiling from source)**: n/a\r\n- **CUDA/cuDNN version**: n/a\r\n- **GPU model and memory**: n/a\r\n- **Exact command to reproduce**: n/a\r\n\r\n### Describe the problem\r\nWhen using ``fit_generator`` with ``TensorBoard`` callback and a ``StatefulMetric`` inside ``tf.keras``:\r\n\r\n```\r\n  File \"/anaconda/lib/python3.6/site-packages/tensorflow/python/keras/callbacks.py\", line 841, in on_epoch_end\r\n    summary_value.simple_value = value.item()\r\nAttributeError: 'float' object has no attribute 'item'\r\n```\r\n**This issue was fixed in regular Keras** (https://github.com/keras-team/keras/pull/10673), but has not been reviewed (https://github.com/tensorflow/tensorflow/pull/21071) yet in TensorFlow\r\n\r\n### Source code / logs\r\n\r\nHeres a dummy example of fit_generator with a dummy stateful metric that demonstrates the error:\r\n\r\n```python\r\nimport tensorflow as tf\r\nfrom tensorflow.python.keras.layers import Input, Dense\r\nfrom tensorflow.python.keras.models import Model\r\nfrom tensorflow.python.ops import state_ops\r\n\r\nimport numpy as np\r\n\r\nclass BatchCounter(tf.keras.layers.Layer):\r\n\r\n        def __init__(self, name=\"batch_counter\", **kwargs):\r\n            super(BatchCounter, self).__init__(name=name, **kwargs)\r\n            self.stateful = True\r\n            self.batches = tf.keras.backend.variable(value=0, dtype=\"int32\")\r\n\r\n        def reset_states(self):\r\n            tf.keras.backend.set_value(self.batches, 0)\r\n\r\n        def __call__(self, y_true, y_pred):\r\n            current_batches = self.batches * 1\r\n            self.add_update(\r\n              state_ops.assign_add(self.batches,\r\n                                   tf.keras.backend.variable(value=1, dtype=\"int32\")))\r\n            return current_batches + 1\r\n\r\nclass DummyGenerator(object):\r\n    \"\"\" Dummy data generator. \"\"\"\r\n\r\n    def run(self):\r\n        while True:\r\n            yield np.ones((10, 1)), np.zeros((10, 1))\r\n\r\ntrain_gen = DummyGenerator()\r\nval_gen = DummyGenerator()\r\n\r\n# Dummy model\r\ninputs = Input(shape=(1,))\r\noutputs = Dense(1)(inputs)\r\nmodel = Model(inputs=inputs, outputs=outputs)\r\nmodel.compile(loss=\"mse\", optimizer=\"adam\", metrics=[BatchCounter()])\r\n\r\nmodel.fit_generator(\r\n    train_gen.run(),\r\n    steps_per_epoch=5,\r\n    epochs=200,\r\n    validation_data=val_gen.run(),\r\n    validation_steps=5,\r\n    callbacks=[tf.keras.callbacks.TensorBoard()])\r\n```\r\n"}