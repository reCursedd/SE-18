{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/165960962", "html_url": "https://github.com/tensorflow/tensorflow/issues/511#issuecomment-165960962", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/511", "id": 165960962, "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTk2MDk2Mg==", "user": {"login": "wchan", "id": 1131892, "node_id": "MDQ6VXNlcjExMzE4OTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1131892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wchan", "html_url": "https://github.com/wchan", "followers_url": "https://api.github.com/users/wchan/followers", "following_url": "https://api.github.com/users/wchan/following{/other_user}", "gists_url": "https://api.github.com/users/wchan/gists{/gist_id}", "starred_url": "https://api.github.com/users/wchan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wchan/subscriptions", "organizations_url": "https://api.github.com/users/wchan/orgs", "repos_url": "https://api.github.com/users/wchan/repos", "events_url": "https://api.github.com/users/wchan/events{/privacy}", "received_events_url": "https://api.github.com/users/wchan/received_events", "type": "User", "site_admin": false}, "created_at": "2015-12-19T08:36:19Z", "updated_at": "2015-12-19T08:36:19Z", "author_association": "NONE", "body_html": "<p>FYI, I've got a working implementation for \"Gru\" and \"GruCell\" .. GruCell is 1 timeslice monolithic op, while \"Gru\" operates on a sequence (dynamic computation). GruCell is roughly 20% faster per step (on TITAN X), and both ops have massive edge in the graph creation time (esp if you unroll large timesteps). The code is by no means optimized at this point (using 6 matrices atm, proper impl should concat them and use 3 matrices), and lots of code cleanup -- but if anyone needs/wants to try the code, give me a ping and I can point you to the right direction.</p>\n<p>I'll work w/ <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1794715\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ebrevdo\">@ebrevdo</a> to get this pushed to upstream \"soon\", but atm, I have other priorities. Also, not in the mood of learning how to write tests : p</p>", "body_text": "FYI, I've got a working implementation for \"Gru\" and \"GruCell\" .. GruCell is 1 timeslice monolithic op, while \"Gru\" operates on a sequence (dynamic computation). GruCell is roughly 20% faster per step (on TITAN X), and both ops have massive edge in the graph creation time (esp if you unroll large timesteps). The code is by no means optimized at this point (using 6 matrices atm, proper impl should concat them and use 3 matrices), and lots of code cleanup -- but if anyone needs/wants to try the code, give me a ping and I can point you to the right direction.\nI'll work w/ @ebrevdo to get this pushed to upstream \"soon\", but atm, I have other priorities. Also, not in the mood of learning how to write tests : p", "body": "FYI, I've got a working implementation for \"Gru\" and \"GruCell\" .. GruCell is 1 timeslice monolithic op, while \"Gru\" operates on a sequence (dynamic computation). GruCell is roughly 20% faster per step (on TITAN X), and both ops have massive edge in the graph creation time (esp if you unroll large timesteps). The code is by no means optimized at this point (using 6 matrices atm, proper impl should concat them and use 3 matrices), and lots of code cleanup -- but if anyone needs/wants to try the code, give me a ping and I can point you to the right direction.\n\nI'll work w/ @ebrevdo to get this pushed to upstream \"soon\", but atm, I have other priorities. Also, not in the mood of learning how to write tests : p\n"}