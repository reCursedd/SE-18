{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/225365928", "html_url": "https://github.com/tensorflow/tensorflow/issues/2109#issuecomment-225365928", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2109", "id": 225365928, "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTM2NTkyOA==", "user": {"login": "akors", "id": 3023492, "node_id": "MDQ6VXNlcjMwMjM0OTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/3023492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akors", "html_url": "https://github.com/akors", "followers_url": "https://api.github.com/users/akors/followers", "following_url": "https://api.github.com/users/akors/following{/other_user}", "gists_url": "https://api.github.com/users/akors/gists{/gist_id}", "starred_url": "https://api.github.com/users/akors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akors/subscriptions", "organizations_url": "https://api.github.com/users/akors/orgs", "repos_url": "https://api.github.com/users/akors/repos", "events_url": "https://api.github.com/users/akors/events{/privacy}", "received_events_url": "https://api.github.com/users/akors/received_events", "type": "User", "site_admin": false}, "created_at": "2016-06-11T14:31:21Z", "updated_at": "2016-06-11T14:38:47Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=70511\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/girving\">@girving</a> OK, so I redid all the testing with the most recent HEADs of TensorFlow and bazel. I will try to summarize comprehensively:</p>\n<p>Custom GCC, Bazel 0.2.3 (Release), TensorFlow head (<a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/b3621c95160a916d4d255f9f44318b9d465701af/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/b3621c95160a916d4d255f9f44318b9d465701af\"><tt>b3621c9</tt></a>): compilation fails with the undeclared inclusion messages above.</p>\n<p>Custom GCC, Bazel head (e7e2301) compiled with CC and CXX set to the custom GCC, TensorFlow head (<a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/b3621c95160a916d4d255f9f44318b9d465701af/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/b3621c95160a916d4d255f9f44318b9d465701af\"><tt>b3621c9</tt></a>): compilation fails with the undeclared inclusion messages above.</p>\n<p>Custom GCC, Bazel head (e7e2301) compiled with CC and CXX set to the custom GCC, TensorFlow head (<a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/b3621c95160a916d4d255f9f44318b9d465701af/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/b3621c95160a916d4d255f9f44318b9d465701af\"><tt>b3621c9</tt></a>) with CROSSTOOL <code>cxx_builtin_include_directory</code> modified to the custom GCC include paths: compilation succeeds.</p>\n<p>Custom GCC, Bazel 0.2.3 (Release), TensorFlow head (<a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/b3621c95160a916d4d255f9f44318b9d465701af/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/b3621c95160a916d4d255f9f44318b9d465701af\"><tt>b3621c9</tt></a>) with CROSSTOOL <code>cxx_builtin_include_directory</code> modified to the custom GCC include paths: compilation succeeds.</p>\n<p>That's what's up. I believe the first two methods should also work, but you can divide this issue up as you wish.</p>\n<hr>\n<p>ps.: Might I quote from the CROSSTOOL file, right above the <code>cxx_builtin_include_directory</code> definitions?</p>\n<pre><code># TODO(bazel-team): In theory, the path here ought to exactly match the path\n# used by gcc. That works because bazel currently doesn't track files at\n# absolute locations and has no remote execution, yet. However, this will need\n# to be fixed, maybe with auto-detection?\n</code></pre>\n<p>I would agree to that. This will need to be fixed ;)</p>", "body_text": "@girving OK, so I redid all the testing with the most recent HEADs of TensorFlow and bazel. I will try to summarize comprehensively:\nCustom GCC, Bazel 0.2.3 (Release), TensorFlow head (b3621c9): compilation fails with the undeclared inclusion messages above.\nCustom GCC, Bazel head (e7e2301) compiled with CC and CXX set to the custom GCC, TensorFlow head (b3621c9): compilation fails with the undeclared inclusion messages above.\nCustom GCC, Bazel head (e7e2301) compiled with CC and CXX set to the custom GCC, TensorFlow head (b3621c9) with CROSSTOOL cxx_builtin_include_directory modified to the custom GCC include paths: compilation succeeds.\nCustom GCC, Bazel 0.2.3 (Release), TensorFlow head (b3621c9) with CROSSTOOL cxx_builtin_include_directory modified to the custom GCC include paths: compilation succeeds.\nThat's what's up. I believe the first two methods should also work, but you can divide this issue up as you wish.\n\nps.: Might I quote from the CROSSTOOL file, right above the cxx_builtin_include_directory definitions?\n# TODO(bazel-team): In theory, the path here ought to exactly match the path\n# used by gcc. That works because bazel currently doesn't track files at\n# absolute locations and has no remote execution, yet. However, this will need\n# to be fixed, maybe with auto-detection?\n\nI would agree to that. This will need to be fixed ;)", "body": "@girving OK, so I redid all the testing with the most recent HEADs of TensorFlow and bazel. I will try to summarize comprehensively:\n\nCustom GCC, Bazel 0.2.3 (Release), TensorFlow head (b3621c95160a916d4d255f9f44318b9d465701af): compilation fails with the undeclared inclusion messages above.\n\nCustom GCC, Bazel head (e7e2301) compiled with CC and CXX set to the custom GCC, TensorFlow head (b3621c95160a916d4d255f9f44318b9d465701af): compilation fails with the undeclared inclusion messages above.\n\nCustom GCC, Bazel head (e7e2301) compiled with CC and CXX set to the custom GCC, TensorFlow head (b3621c95160a916d4d255f9f44318b9d465701af) with CROSSTOOL `cxx_builtin_include_directory` modified to the custom GCC include paths: compilation succeeds.\n\nCustom GCC, Bazel 0.2.3 (Release), TensorFlow head (b3621c95160a916d4d255f9f44318b9d465701af) with CROSSTOOL `cxx_builtin_include_directory` modified to the custom GCC include paths: compilation succeeds.\n\nThat's what's up. I believe the first two methods should also work, but you can divide this issue up as you wish.\n\n---\n\nps.: Might I quote from the CROSSTOOL file, right above the `cxx_builtin_include_directory` definitions?\n\n```\n# TODO(bazel-team): In theory, the path here ought to exactly match the path\n# used by gcc. That works because bazel currently doesn't track files at\n# absolute locations and has no remote execution, yet. However, this will need\n# to be fixed, maybe with auto-detection?\n```\n\nI would agree to that. This will need to be fixed ;)\n"}