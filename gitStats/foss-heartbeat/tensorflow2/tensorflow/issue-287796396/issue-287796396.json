{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16040", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16040/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16040/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16040/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16040", "id": 287796396, "node_id": "MDU6SXNzdWUyODc3OTYzOTY=", "number": 16040, "title": "Bug in boolean input tensors for ops ", "user": {"login": "eddy-ilg", "id": 7202425, "node_id": "MDQ6VXNlcjcyMDI0MjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/7202425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddy-ilg", "html_url": "https://github.com/eddy-ilg", "followers_url": "https://api.github.com/users/eddy-ilg/followers", "following_url": "https://api.github.com/users/eddy-ilg/following{/other_user}", "gists_url": "https://api.github.com/users/eddy-ilg/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddy-ilg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddy-ilg/subscriptions", "organizations_url": "https://api.github.com/users/eddy-ilg/orgs", "repos_url": "https://api.github.com/users/eddy-ilg/repos", "events_url": "https://api.github.com/users/eddy-ilg/events{/privacy}", "received_events_url": "https://api.github.com/users/eddy-ilg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-11T14:02:20Z", "updated_at": "2018-01-11T14:13:33Z", "closed_at": "2018-01-11T14:13:33Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li>\n<p><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:<br>\nYes.</p>\n</li>\n<li>\n<p><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:<br>\nUbuntu 16.04</p>\n</li>\n<li>\n<p><strong>TensorFlow installed from (source or binary)</strong>:<br>\npip3 install --user tensorflow-gpu</p>\n</li>\n<li>\n<p><strong>TensorFlow version (use command below)</strong>:<br>\n1.4.1</p>\n</li>\n<li>\n<p><strong>Python version</strong>:<br>\n3.5.2</p>\n</li>\n<li>\n<p><strong>Bazel version (if compiling from source)</strong>:<br>\nNA</p>\n</li>\n<li>\n<p><strong>GCC/Compiler version (if compiling from source)</strong>:<br>\ngcc (Ubuntu 5.4.0-6ubuntu1~16.04.5) 5.4.0 20160609</p>\n</li>\n<li>\n<p><strong>CUDA/cuDNN version</strong>:<br>\ncuda-8.0.61-cudnn-v6</p>\n</li>\n<li>\n<p><strong>GPU model and memory</strong>:<br>\nany</p>\n</li>\n<li>\n<p><strong>Exact command to reproduce</strong>:<br>\nsee description below</p>\n</li>\n</ul>\n<p>You can collect some of this information using our environment capture script:</p>\n<p><a href=\"https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\">https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh</a></p>\n<p>You can obtain the TensorFlow version with</p>\n<p>python -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"</p>\n<h3>Describe the problem</h3>\n<p>Boolean tensors seem to have a bug.</p>\n<p>In C++ I define an op with a boolean input tensor like so:<br>\nREGISTER_OP(\"SpatialAugmentationPossible\")<br>\n.Input(\"input: float32\")<br>\n.Output(\"output: bool\")<br>\n.Input(\"mirror: bool\")<br>\n.Input(\"angle: float32\")<br>\n.Input(\"dx: float32\")<br>\n.Input(\"dy: float32\")<br>\n.Input(\"sx: float32\")<br>\n.Input(\"sy: float32\")<br>\n.Attr(\"crop_width: int\")<br>\n.Attr(\"crop_height: int\")<br>\n...<br>\nNote that mirror is a boolean tensor. The op compiles fine. When calling like this:</p>\n<pre><code>                op = ops.spatial_augmentation_possible(\n                    input=test_input,\n                    mirror=tf.cast(mirror, dtype=tf.bool),\n                    angle=tf.convert_to_tensor(angle, dtype=tf.float32),\n                    dx=tf.convert_to_tensor(dx, dtype=tf.float32),\n                    dy=tf.convert_to_tensor(dy, dtype=tf.float32),\n                    sx=tf.convert_to_tensor(sx, dtype=tf.float32),\n                    sy=tf.convert_to_tensor(sy, dtype=tf.float32),\n                    crop_width = 500,\n                    crop_height = 300\n                )\n\n                possible_tensor = sess.run(op)\n</code></pre>\n<p>I get:</p>\n<p>2018-01-11 14:57:45.722505: F tensorflow/core/framework/tensor.cc:586] Check failed: dtype() == expected_dtype (10 vs. 1)</p>\n<p>I checked the proto, 10 corresponds to boolean and 1 to float32. If I change the line with the mirror argument like this:</p>\n<pre><code>                mirror=tf.cast(mirror, dtype=tf.float32),\n</code></pre>\n<p>I get:</p>\n<p>ValueError: Tensor conversion requested dtype bool for Tensor with dtype float32: 'Tensor(\"Cast:0\", shape=(1,), dtype=float32, device=/device:GPU:0)'</p>\n<p>That means now it is complaining that I don't input a bool. But the message above is saying that I shouldn't input a bool. For this reason there seems to be a bug.</p>\n<p>Best,</p>\n<p>Eddy</p>", "body_text": "System information\n\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nYes.\n\n\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nUbuntu 16.04\n\n\nTensorFlow installed from (source or binary):\npip3 install --user tensorflow-gpu\n\n\nTensorFlow version (use command below):\n1.4.1\n\n\nPython version:\n3.5.2\n\n\nBazel version (if compiling from source):\nNA\n\n\nGCC/Compiler version (if compiling from source):\ngcc (Ubuntu 5.4.0-6ubuntu1~16.04.5) 5.4.0 20160609\n\n\nCUDA/cuDNN version:\ncuda-8.0.61-cudnn-v6\n\n\nGPU model and memory:\nany\n\n\nExact command to reproduce:\nsee description below\n\n\nYou can collect some of this information using our environment capture script:\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\nYou can obtain the TensorFlow version with\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\nDescribe the problem\nBoolean tensors seem to have a bug.\nIn C++ I define an op with a boolean input tensor like so:\nREGISTER_OP(\"SpatialAugmentationPossible\")\n.Input(\"input: float32\")\n.Output(\"output: bool\")\n.Input(\"mirror: bool\")\n.Input(\"angle: float32\")\n.Input(\"dx: float32\")\n.Input(\"dy: float32\")\n.Input(\"sx: float32\")\n.Input(\"sy: float32\")\n.Attr(\"crop_width: int\")\n.Attr(\"crop_height: int\")\n...\nNote that mirror is a boolean tensor. The op compiles fine. When calling like this:\n                op = ops.spatial_augmentation_possible(\n                    input=test_input,\n                    mirror=tf.cast(mirror, dtype=tf.bool),\n                    angle=tf.convert_to_tensor(angle, dtype=tf.float32),\n                    dx=tf.convert_to_tensor(dx, dtype=tf.float32),\n                    dy=tf.convert_to_tensor(dy, dtype=tf.float32),\n                    sx=tf.convert_to_tensor(sx, dtype=tf.float32),\n                    sy=tf.convert_to_tensor(sy, dtype=tf.float32),\n                    crop_width = 500,\n                    crop_height = 300\n                )\n\n                possible_tensor = sess.run(op)\n\nI get:\n2018-01-11 14:57:45.722505: F tensorflow/core/framework/tensor.cc:586] Check failed: dtype() == expected_dtype (10 vs. 1)\nI checked the proto, 10 corresponds to boolean and 1 to float32. If I change the line with the mirror argument like this:\n                mirror=tf.cast(mirror, dtype=tf.float32),\n\nI get:\nValueError: Tensor conversion requested dtype bool for Tensor with dtype float32: 'Tensor(\"Cast:0\", shape=(1,), dtype=float32, device=/device:GPU:0)'\nThat means now it is complaining that I don't input a bool. But the message above is saying that I shouldn't input a bool. For this reason there seems to be a bug.\nBest,\nEddy", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nYes. \r\n\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nUbuntu 16.04\r\n\r\n- **TensorFlow installed from (source or binary)**:\r\npip3 install --user tensorflow-gpu \r\n\r\n- **TensorFlow version (use command below)**:\r\n1.4.1 \r\n\r\n- **Python version**: \r\n3.5.2 \r\n\r\n- **Bazel version (if compiling from source)**:\r\nNA\r\n\r\n- **GCC/Compiler version (if compiling from source)**:\r\ngcc (Ubuntu 5.4.0-6ubuntu1~16.04.5) 5.4.0 20160609\r\n\r\n- **CUDA/cuDNN version**:\r\ncuda-8.0.61-cudnn-v6\r\n\r\n- **GPU model and memory**:\r\nany\r\n\r\n- **Exact command to reproduce**:\r\nsee description below\r\n\r\nYou can collect some of this information using our environment capture script:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\nYou can obtain the TensorFlow version with\r\n\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n\r\n### Describe the problem\r\n\r\nBoolean tensors seem to have a bug. \r\n\r\nIn C++ I define an op with a boolean input tensor like so: \r\n    REGISTER_OP(\"SpatialAugmentationPossible\")\r\n        .Input(\"input: float32\")\r\n        .Output(\"output: bool\")\r\n        .Input(\"mirror: bool\")\r\n        .Input(\"angle: float32\")\r\n        .Input(\"dx: float32\")\r\n        .Input(\"dy: float32\")\r\n        .Input(\"sx: float32\")\r\n        .Input(\"sy: float32\")\r\n        .Attr(\"crop_width: int\")\r\n        .Attr(\"crop_height: int\")\r\n    ...\r\nNote that mirror is a boolean tensor. The op compiles fine. When calling like this: \r\n\r\n                    op = ops.spatial_augmentation_possible(\r\n                        input=test_input,\r\n                        mirror=tf.cast(mirror, dtype=tf.bool),\r\n                        angle=tf.convert_to_tensor(angle, dtype=tf.float32),\r\n                        dx=tf.convert_to_tensor(dx, dtype=tf.float32),\r\n                        dy=tf.convert_to_tensor(dy, dtype=tf.float32),\r\n                        sx=tf.convert_to_tensor(sx, dtype=tf.float32),\r\n                        sy=tf.convert_to_tensor(sy, dtype=tf.float32),\r\n                        crop_width = 500,\r\n                        crop_height = 300\r\n                    )\r\n\r\n                    possible_tensor = sess.run(op)\r\n\r\nI get:\r\n\r\n2018-01-11 14:57:45.722505: F tensorflow/core/framework/tensor.cc:586] Check failed: dtype() == expected_dtype (10 vs. 1)\r\n\r\nI checked the proto, 10 corresponds to boolean and 1 to float32. If I change the line with the mirror argument like this:                     \r\n\r\n                    mirror=tf.cast(mirror, dtype=tf.float32),\r\n\r\nI get: \r\n\r\nValueError: Tensor conversion requested dtype bool for Tensor with dtype float32: 'Tensor(\"Cast:0\", shape=(1,), dtype=float32, device=/device:GPU:0)'\r\n\r\n\r\nThat means now it is complaining that I don't input a bool. But the message above is saying that I shouldn't input a bool. For this reason there seems to be a bug. \r\n\r\nBest, \r\n\r\n\r\nEddy\r\n                    \r\n\r\n"}