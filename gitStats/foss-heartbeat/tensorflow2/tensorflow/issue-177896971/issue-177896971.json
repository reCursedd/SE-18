{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4474", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4474/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4474/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4474/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/4474", "id": 177896971, "node_id": "MDU6SXNzdWUxNzc4OTY5NzE=", "number": 4474, "title": "Feature request: Patch extracting given location implementation needed.", "user": {"login": "ShownX", "id": 9678100, "node_id": "MDQ6VXNlcjk2NzgxMDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/9678100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ShownX", "html_url": "https://github.com/ShownX", "followers_url": "https://api.github.com/users/ShownX/followers", "following_url": "https://api.github.com/users/ShownX/following{/other_user}", "gists_url": "https://api.github.com/users/ShownX/gists{/gist_id}", "starred_url": "https://api.github.com/users/ShownX/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ShownX/subscriptions", "organizations_url": "https://api.github.com/users/ShownX/orgs", "repos_url": "https://api.github.com/users/ShownX/repos", "events_url": "https://api.github.com/users/ShownX/events{/privacy}", "received_events_url": "https://api.github.com/users/ShownX/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-19T21:01:47Z", "updated_at": "2017-04-07T20:47:38Z", "closed_at": "2017-04-07T20:47:38Z", "author_association": "NONE", "body_html": "<p>Hello there,</p>\n<h2>Feature</h2>\n<p>I consider a lot but finally decide put this request here.<br>\nI know there are some matrix operation and image operations like <code>image_patch_extract</code> and <code>image.extract_glimpse()</code>.<br>\nBut what I want is extract the patches given several locations.</p>\n<p>Input Tensor:</p>\n<div class=\"highlight highlight-source-python\"><pre>         batch image: [batch_size, image_height, image_width, image_channel]\n         batch locations: [batch_size, num_patches, <span class=\"pl-c1\">2</span>]</pre></div>\n<p>Output Tensor:</p>\n<div class=\"highlight highlight-source-python\"><pre>        [batch_size, num_patches, patch_height, patch_width, image_channel]\n<span class=\"pl-k\">or</span> \n        [batch_size <span class=\"pl-k\">*</span> num_patches, patch_height, patch_width, image_channel]</pre></div>\n<h2>Reference:</h2>\n<p>Georgis have done the similar thing and he made the a patch in v0.8.0 and only cpu supports.</p>\n<pre><code>https://github.com/trigeorgis/tensorflow\n</code></pre>\n<p>But when I use it in v0.10.0, it requires me to define a shape function.<br>\nI really want to use it in the future, so I am glad it can be added as a new feature.</p>\n<h2>Other solution I tried</h2>\n<p>I have tried use <code>extract_glimpse()</code> instead.</p>\n<div class=\"highlight highlight-source-python\"><pre>output_list <span class=\"pl-k\">=</span> [[] <span class=\"pl-k\">for</span> _ <span class=\"pl-k\">in</span> <span class=\"pl-c1\">range</span>(batch_size)]   <span class=\"pl-c\"><span class=\"pl-c\">#</span> create n_patch list</span>\nlocations <span class=\"pl-k\">=</span> locations<span class=\"pl-k\">/</span>image_size  <span class=\"pl-c\"><span class=\"pl-c\">#</span> normalize the location</span>\n<span class=\"pl-k\">for</span> j <span class=\"pl-k\">in</span> <span class=\"pl-c1\">range</span>(n_patch):\n    patch_one <span class=\"pl-k\">=</span> tf.image.glimpse(batch_image, tf.constant([<span class=\"pl-c1\">20</span>, <span class=\"pl-c1\">20</span>]), locations[:, j, :], <span class=\"pl-v\">centered</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">False</span>)\n    <span class=\"pl-k\">for</span> i <span class=\"pl-k\">in</span> <span class=\"pl-c1\">range</span>(batch_size):\n          output_list[i].append(patch_one[j])  <span class=\"pl-c\"><span class=\"pl-c\">#</span> add tensor to each list</span>\npatches <span class=\"pl-k\">=</span> tf.pack(output_list)  <span class=\"pl-c\"><span class=\"pl-c\">#</span> pack the list to tensor, size = [batch_size, n_patch, patch_size, patch_height, image_channel]</span></pre></div>", "body_text": "Hello there,\nFeature\nI consider a lot but finally decide put this request here.\nI know there are some matrix operation and image operations like image_patch_extract and image.extract_glimpse().\nBut what I want is extract the patches given several locations.\nInput Tensor:\n         batch image: [batch_size, image_height, image_width, image_channel]\n         batch locations: [batch_size, num_patches, 2]\nOutput Tensor:\n        [batch_size, num_patches, patch_height, patch_width, image_channel]\nor \n        [batch_size * num_patches, patch_height, patch_width, image_channel]\nReference:\nGeorgis have done the similar thing and he made the a patch in v0.8.0 and only cpu supports.\nhttps://github.com/trigeorgis/tensorflow\n\nBut when I use it in v0.10.0, it requires me to define a shape function.\nI really want to use it in the future, so I am glad it can be added as a new feature.\nOther solution I tried\nI have tried use extract_glimpse() instead.\noutput_list = [[] for _ in range(batch_size)]   # create n_patch list\nlocations = locations/image_size  # normalize the location\nfor j in range(n_patch):\n    patch_one = tf.image.glimpse(batch_image, tf.constant([20, 20]), locations[:, j, :], centered=False)\n    for i in range(batch_size):\n          output_list[i].append(patch_one[j])  # add tensor to each list\npatches = tf.pack(output_list)  # pack the list to tensor, size = [batch_size, n_patch, patch_size, patch_height, image_channel]", "body": "Hello there,\n## Feature\n\nI consider a lot but finally decide put this request here.\nI know there are some matrix operation and image operations like `image_patch_extract` and `image.extract_glimpse()`.\nBut what I want is extract the patches given several locations.\n\nInput Tensor: \n\n``` python\n         batch image: [batch_size, image_height, image_width, image_channel]\n         batch locations: [batch_size, num_patches, 2]\n```\n\nOutput Tensor: \n\n``` python\n        [batch_size, num_patches, patch_height, patch_width, image_channel]\nor \n        [batch_size * num_patches, patch_height, patch_width, image_channel]\n```\n## Reference:\n\nGeorgis have done the similar thing and he made the a patch in v0.8.0 and only cpu supports.\n\n```\nhttps://github.com/trigeorgis/tensorflow\n```\n\nBut when I use it in v0.10.0, it requires me to define a shape function. \nI really want to use it in the future, so I am glad it can be added as a new feature.\n## Other solution I tried\n\nI have tried use `extract_glimpse()` instead.\n\n``` python\noutput_list = [[] for _ in range(batch_size)]   # create n_patch list\nlocations = locations/image_size  # normalize the location\nfor j in range(n_patch):\n    patch_one = tf.image.glimpse(batch_image, tf.constant([20, 20]), locations[:, j, :], centered=False)\n    for i in range(batch_size):\n          output_list[i].append(patch_one[j])  # add tensor to each list\npatches = tf.pack(output_list)  # pack the list to tensor, size = [batch_size, n_patch, patch_size, patch_height, image_channel]\n```\n"}