{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/280937773", "html_url": "https://github.com/tensorflow/tensorflow/issues/7658#issuecomment-280937773", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7658", "id": 280937773, "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDkzNzc3Mw==", "user": {"login": "saman-aghazadeh", "id": 3586023, "node_id": "MDQ6VXNlcjM1ODYwMjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3586023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saman-aghazadeh", "html_url": "https://github.com/saman-aghazadeh", "followers_url": "https://api.github.com/users/saman-aghazadeh/followers", "following_url": "https://api.github.com/users/saman-aghazadeh/following{/other_user}", "gists_url": "https://api.github.com/users/saman-aghazadeh/gists{/gist_id}", "starred_url": "https://api.github.com/users/saman-aghazadeh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saman-aghazadeh/subscriptions", "organizations_url": "https://api.github.com/users/saman-aghazadeh/orgs", "repos_url": "https://api.github.com/users/saman-aghazadeh/repos", "events_url": "https://api.github.com/users/saman-aghazadeh/events{/privacy}", "received_events_url": "https://api.github.com/users/saman-aghazadeh/received_events", "type": "User", "site_admin": false}, "created_at": "2017-02-19T18:27:11Z", "updated_at": "2017-02-19T18:27:11Z", "author_association": "NONE", "body_html": "<p>Thanks much for the help. The reason I've posted the issue here is, because I haven't got any response on stackoverflow, so I thought it maybe an issue with TensorFlow.</p>\n<p>I have tried what you've advised and unfortunately I get a weird error as:</p>\n<p><code>NotImplementedError: ('Trying to optimize unsupported type ', &lt;tf.Tensor 'mentor/weights_mentor_l1:0' shape=(784, 1200) dtype=float32_ref&gt;)</code></p>\n<p>Here is the code I've developed to create a list instead of collection, as you've suggested:</p>\n<pre><code>mentor_training_vars = []\n\nmentor_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentor/weights_mentor_l1:0\"))\nmentor_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentor/biases_mentor_l1:0\"))\nmentor_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentor/weights_mentor_l2:0\"))\nmentor_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentor/biases_mentor_l2:0\"))\nmentor_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentor/weights_mentor_l3:0\"))\nmentor_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentor/biases_mentor_l3:0\"))\nmentor_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentor/weights_mentor_l4:0\"))\nmentor_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentor/biases_mentor_l4:0\"))\nmentor_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentor_embed/weights_mentor_embed:0\"))\nmentor_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentor_embed/biases_mentor_embed:0\"))\n\n# mentor_training_vars = tf.get_collection(tf.GraphKeys.TRAINABLE_VARIABLES, \"mentor\")\ntrain_op_mentor = mnist.training(loss_mentor, FLAGS.learning_rate, mentor_training_vars)\nmentee_training_vars = []\nmentee_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentee/weights_mentee_l1:0\"))\nmentee_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentee/biases_mentee_l1:0\"))\nmentee_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentee/weights_mentee_l2:0\"))\nmentee_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentee/biases_mentee_l2:0\"))\nmentee_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentee/weights_mentee_l3:0\"))\nmentee_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentee/biases_mentee_l3:0\"))\nmentee_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentee_embed/weights_mentee_embed:0\"))\nmentee_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentee_embed/biases_mentee_embed:0\"))\n\n#mentee_training_vars = tf.get_collection(tf.GraphKeys.TRAINABLE_VARIABLES, \"mentee\")\ntrain_op_mentee = mnist.training(loss_mentee, FLAGS.learning_rate, mentee_training_vars)\nmentee_indep_training_vars = []\nmentee_indep_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentee_indep/weights_mentee_indep_l1:0\"))\nmentee_indep_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentee_indep/biases_mentee_indep_l1:0\"))\nmentee_indep_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentee_indep/weights_mentee_indep_l2:0\"))\nmentee_indep_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentee_indep/biases_mentee_indep_l2:0\"))\nmentee_indep_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentee_indep/weights_mentee_indep_l3:0\"))\nmentee_indep_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentee_indep/biases_mentee_indep_l3:0\"))\n\n#mentee_indep_training_vars = tf.get_collection(tf.GraphKeys.TRAINABLE_VARIABLES, \"mentee_indep\"\ntrain_op_mentee_indep = mnist.training(loss_mentee_indep, FLAGS.learning_rate, mentee_indep_training_vars)\n</code></pre>", "body_text": "Thanks much for the help. The reason I've posted the issue here is, because I haven't got any response on stackoverflow, so I thought it maybe an issue with TensorFlow.\nI have tried what you've advised and unfortunately I get a weird error as:\nNotImplementedError: ('Trying to optimize unsupported type ', <tf.Tensor 'mentor/weights_mentor_l1:0' shape=(784, 1200) dtype=float32_ref>)\nHere is the code I've developed to create a list instead of collection, as you've suggested:\nmentor_training_vars = []\n\nmentor_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentor/weights_mentor_l1:0\"))\nmentor_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentor/biases_mentor_l1:0\"))\nmentor_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentor/weights_mentor_l2:0\"))\nmentor_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentor/biases_mentor_l2:0\"))\nmentor_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentor/weights_mentor_l3:0\"))\nmentor_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentor/biases_mentor_l3:0\"))\nmentor_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentor/weights_mentor_l4:0\"))\nmentor_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentor/biases_mentor_l4:0\"))\nmentor_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentor_embed/weights_mentor_embed:0\"))\nmentor_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentor_embed/biases_mentor_embed:0\"))\n\n# mentor_training_vars = tf.get_collection(tf.GraphKeys.TRAINABLE_VARIABLES, \"mentor\")\ntrain_op_mentor = mnist.training(loss_mentor, FLAGS.learning_rate, mentor_training_vars)\nmentee_training_vars = []\nmentee_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentee/weights_mentee_l1:0\"))\nmentee_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentee/biases_mentee_l1:0\"))\nmentee_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentee/weights_mentee_l2:0\"))\nmentee_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentee/biases_mentee_l2:0\"))\nmentee_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentee/weights_mentee_l3:0\"))\nmentee_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentee/biases_mentee_l3:0\"))\nmentee_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentee_embed/weights_mentee_embed:0\"))\nmentee_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentee_embed/biases_mentee_embed:0\"))\n\n#mentee_training_vars = tf.get_collection(tf.GraphKeys.TRAINABLE_VARIABLES, \"mentee\")\ntrain_op_mentee = mnist.training(loss_mentee, FLAGS.learning_rate, mentee_training_vars)\nmentee_indep_training_vars = []\nmentee_indep_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentee_indep/weights_mentee_indep_l1:0\"))\nmentee_indep_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentee_indep/biases_mentee_indep_l1:0\"))\nmentee_indep_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentee_indep/weights_mentee_indep_l2:0\"))\nmentee_indep_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentee_indep/biases_mentee_indep_l2:0\"))\nmentee_indep_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentee_indep/weights_mentee_indep_l3:0\"))\nmentee_indep_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentee_indep/biases_mentee_indep_l3:0\"))\n\n#mentee_indep_training_vars = tf.get_collection(tf.GraphKeys.TRAINABLE_VARIABLES, \"mentee_indep\"\ntrain_op_mentee_indep = mnist.training(loss_mentee_indep, FLAGS.learning_rate, mentee_indep_training_vars)", "body": "Thanks much for the help. The reason I've posted the issue here is, because I haven't got any response on stackoverflow, so I thought it maybe an issue with TensorFlow.\r\n\r\nI have tried what you've advised and unfortunately I get a weird error as:\r\n\r\n`NotImplementedError: ('Trying to optimize unsupported type ', <tf.Tensor 'mentor/weights_mentor_l1:0' shape=(784, 1200) dtype=float32_ref>)`\r\n\r\nHere is the code I've developed to create a list instead of collection, as you've suggested:\r\n\r\n```\r\nmentor_training_vars = []\r\n\r\nmentor_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentor/weights_mentor_l1:0\"))\r\nmentor_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentor/biases_mentor_l1:0\"))\r\nmentor_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentor/weights_mentor_l2:0\"))\r\nmentor_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentor/biases_mentor_l2:0\"))\r\nmentor_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentor/weights_mentor_l3:0\"))\r\nmentor_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentor/biases_mentor_l3:0\"))\r\nmentor_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentor/weights_mentor_l4:0\"))\r\nmentor_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentor/biases_mentor_l4:0\"))\r\nmentor_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentor_embed/weights_mentor_embed:0\"))\r\nmentor_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentor_embed/biases_mentor_embed:0\"))\r\n\r\n# mentor_training_vars = tf.get_collection(tf.GraphKeys.TRAINABLE_VARIABLES, \"mentor\")\r\ntrain_op_mentor = mnist.training(loss_mentor, FLAGS.learning_rate, mentor_training_vars)\r\nmentee_training_vars = []\r\nmentee_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentee/weights_mentee_l1:0\"))\r\nmentee_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentee/biases_mentee_l1:0\"))\r\nmentee_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentee/weights_mentee_l2:0\"))\r\nmentee_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentee/biases_mentee_l2:0\"))\r\nmentee_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentee/weights_mentee_l3:0\"))\r\nmentee_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentee/biases_mentee_l3:0\"))\r\nmentee_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentee_embed/weights_mentee_embed:0\"))\r\nmentee_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentee_embed/biases_mentee_embed:0\"))\r\n\r\n#mentee_training_vars = tf.get_collection(tf.GraphKeys.TRAINABLE_VARIABLES, \"mentee\")\r\ntrain_op_mentee = mnist.training(loss_mentee, FLAGS.learning_rate, mentee_training_vars)\r\nmentee_indep_training_vars = []\r\nmentee_indep_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentee_indep/weights_mentee_indep_l1:0\"))\r\nmentee_indep_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentee_indep/biases_mentee_indep_l1:0\"))\r\nmentee_indep_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentee_indep/weights_mentee_indep_l2:0\"))\r\nmentee_indep_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentee_indep/biases_mentee_indep_l2:0\"))\r\nmentee_indep_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentee_indep/weights_mentee_indep_l3:0\"))\r\nmentee_indep_training_vars.append(tf.get_default_graph().get_tensor_by_name(\"mentee_indep/biases_mentee_indep_l3:0\"))\r\n\r\n#mentee_indep_training_vars = tf.get_collection(tf.GraphKeys.TRAINABLE_VARIABLES, \"mentee_indep\"\r\ntrain_op_mentee_indep = mnist.training(loss_mentee_indep, FLAGS.learning_rate, mentee_indep_training_vars)\r\n```\r\n"}