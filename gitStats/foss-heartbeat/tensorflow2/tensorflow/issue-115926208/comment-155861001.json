{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/155861001", "html_url": "https://github.com/tensorflow/tensorflow/issues/18#issuecomment-155861001", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18", "id": 155861001, "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTg2MTAwMQ==", "user": {"login": "dazinator", "id": 3176632, "node_id": "MDQ6VXNlcjMxNzY2MzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/3176632?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dazinator", "html_url": "https://github.com/dazinator", "followers_url": "https://api.github.com/users/dazinator/followers", "following_url": "https://api.github.com/users/dazinator/following{/other_user}", "gists_url": "https://api.github.com/users/dazinator/gists{/gist_id}", "starred_url": "https://api.github.com/users/dazinator/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dazinator/subscriptions", "organizations_url": "https://api.github.com/users/dazinator/orgs", "repos_url": "https://api.github.com/users/dazinator/repos", "events_url": "https://api.github.com/users/dazinator/events{/privacy}", "received_events_url": "https://api.github.com/users/dazinator/received_events", "type": "User", "site_admin": false}, "created_at": "2015-11-11T17:55:19Z", "updated_at": "2015-11-11T17:55:19Z", "author_association": "NONE", "body_html": "<p>Just a general +1 from me!<br>\n<a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5283042\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/davidzchen\">@davidzchen</a> - I am not familiar with Bazel but assuming the that the idea behind you mentioning it being extended to run on Windows, along with the new C# rules, would be to allow us to build this repo on Windows, including the code for the potential .NET (mono) interop library?</p>\n<p>Could an alternative approach be to just build and distribute the native tensorflow libs (dll's) on NuGet - and then in a completely seperate repo, create this.NET interop. This seperate repo can be built using MSBUILD or something so would eliminate Bazel as a blocker?</p>", "body_text": "Just a general +1 from me!\n@davidzchen - I am not familiar with Bazel but assuming the that the idea behind you mentioning it being extended to run on Windows, along with the new C# rules, would be to allow us to build this repo on Windows, including the code for the potential .NET (mono) interop library?\nCould an alternative approach be to just build and distribute the native tensorflow libs (dll's) on NuGet - and then in a completely seperate repo, create this.NET interop. This seperate repo can be built using MSBUILD or something so would eliminate Bazel as a blocker?", "body": "Just a general +1 from me! \n@davidzchen - I am not familiar with Bazel but assuming the that the idea behind you mentioning it being extended to run on Windows, along with the new C# rules, would be to allow us to build this repo on Windows, including the code for the potential .NET (mono) interop library?\n\nCould an alternative approach be to just build and distribute the native tensorflow libs (dll's) on NuGet - and then in a completely seperate repo, create this.NET interop. This seperate repo can be built using MSBUILD or something so would eliminate Bazel as a blocker?\n"}