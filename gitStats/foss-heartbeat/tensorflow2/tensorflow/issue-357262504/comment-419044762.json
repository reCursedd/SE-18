{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/419044762", "html_url": "https://github.com/tensorflow/tensorflow/issues/22095#issuecomment-419044762", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22095", "id": 419044762, "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTA0NDc2Mg==", "user": {"login": "gerbenvv", "id": 1511521, "node_id": "MDQ6VXNlcjE1MTE1MjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1511521?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gerbenvv", "html_url": "https://github.com/gerbenvv", "followers_url": "https://api.github.com/users/gerbenvv/followers", "following_url": "https://api.github.com/users/gerbenvv/following{/other_user}", "gists_url": "https://api.github.com/users/gerbenvv/gists{/gist_id}", "starred_url": "https://api.github.com/users/gerbenvv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gerbenvv/subscriptions", "organizations_url": "https://api.github.com/users/gerbenvv/orgs", "repos_url": "https://api.github.com/users/gerbenvv/repos", "events_url": "https://api.github.com/users/gerbenvv/events{/privacy}", "received_events_url": "https://api.github.com/users/gerbenvv/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-06T10:28:13Z", "updated_at": "2018-09-06T10:28:13Z", "author_association": "NONE", "body_html": "<p>This is not just a problem with large batch sizes, but rather, large inputs. The script:</p>\n<pre><code>import tensorflow as tf\nimport numpy as np\n\n\n\nrun_on_gpu = True  # Set to false for the correct result, computed on the CPU.\n\n\n\nrandom_state = np.random.RandomState(42)\n\ninputs = tf.placeholder(tf.float32, (None, 1, 1, 1, 1), 'inputs')\n\ndevice_name = '/gpu:0' if run_on_gpu else '/cpu:0'\n\nwith tf.device(device_name):\n    outputs = tf.tile(inputs, (1, 160, 320, 320, 16))\n    weights = tf.constant(random_state.randn(1, 1, 1, 16, 16).astype(np.float32))\n    outputs = tf.nn.conv3d(outputs, weights, strides=(1, 1, 1, 1, 1), padding='VALID')\n\nsession = tf.Session()\n\nrandom_inputs = random_state.randn(1, 1, 1, 1, 1).astype(np.float32)\n\na = session.run(outputs, feed_dict={inputs: random_inputs})\n\nprint(a.shape, a.ravel()[-1])\n</code></pre>\n<p>Produces different results for the GTX 1080 Ti and CPU.</p>", "body_text": "This is not just a problem with large batch sizes, but rather, large inputs. The script:\nimport tensorflow as tf\nimport numpy as np\n\n\n\nrun_on_gpu = True  # Set to false for the correct result, computed on the CPU.\n\n\n\nrandom_state = np.random.RandomState(42)\n\ninputs = tf.placeholder(tf.float32, (None, 1, 1, 1, 1), 'inputs')\n\ndevice_name = '/gpu:0' if run_on_gpu else '/cpu:0'\n\nwith tf.device(device_name):\n    outputs = tf.tile(inputs, (1, 160, 320, 320, 16))\n    weights = tf.constant(random_state.randn(1, 1, 1, 16, 16).astype(np.float32))\n    outputs = tf.nn.conv3d(outputs, weights, strides=(1, 1, 1, 1, 1), padding='VALID')\n\nsession = tf.Session()\n\nrandom_inputs = random_state.randn(1, 1, 1, 1, 1).astype(np.float32)\n\na = session.run(outputs, feed_dict={inputs: random_inputs})\n\nprint(a.shape, a.ravel()[-1])\n\nProduces different results for the GTX 1080 Ti and CPU.", "body": "This is not just a problem with large batch sizes, but rather, large inputs. The script:\r\n\r\n```\r\nimport tensorflow as tf\r\nimport numpy as np\r\n\r\n\r\n\r\nrun_on_gpu = True  # Set to false for the correct result, computed on the CPU.\r\n\r\n\r\n\r\nrandom_state = np.random.RandomState(42)\r\n\r\ninputs = tf.placeholder(tf.float32, (None, 1, 1, 1, 1), 'inputs')\r\n\r\ndevice_name = '/gpu:0' if run_on_gpu else '/cpu:0'\r\n\r\nwith tf.device(device_name):\r\n    outputs = tf.tile(inputs, (1, 160, 320, 320, 16))\r\n    weights = tf.constant(random_state.randn(1, 1, 1, 16, 16).astype(np.float32))\r\n    outputs = tf.nn.conv3d(outputs, weights, strides=(1, 1, 1, 1, 1), padding='VALID')\r\n\r\nsession = tf.Session()\r\n\r\nrandom_inputs = random_state.randn(1, 1, 1, 1, 1).astype(np.float32)\r\n\r\na = session.run(outputs, feed_dict={inputs: random_inputs})\r\n\r\nprint(a.shape, a.ravel()[-1])\r\n```\r\n\r\nProduces different results for the GTX 1080 Ti and CPU."}