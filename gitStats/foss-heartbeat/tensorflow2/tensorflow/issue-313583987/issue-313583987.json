{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18448", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18448/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18448/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18448/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/18448", "id": 313583987, "node_id": "MDExOlB1bGxSZXF1ZXN0MTgxMDk1NTM2", "number": 18448, "title": "Replace all COMPILER_MSVC to _MSC_VER and _WIN32 accordingly", "user": {"login": "rongjiecomputer", "id": 13115060, "node_id": "MDQ6VXNlcjEzMTE1MDYw", "avatar_url": "https://avatars2.githubusercontent.com/u/13115060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rongjiecomputer", "html_url": "https://github.com/rongjiecomputer", "followers_url": "https://api.github.com/users/rongjiecomputer/followers", "following_url": "https://api.github.com/users/rongjiecomputer/following{/other_user}", "gists_url": "https://api.github.com/users/rongjiecomputer/gists{/gist_id}", "starred_url": "https://api.github.com/users/rongjiecomputer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rongjiecomputer/subscriptions", "organizations_url": "https://api.github.com/users/rongjiecomputer/orgs", "repos_url": "https://api.github.com/users/rongjiecomputer/repos", "events_url": "https://api.github.com/users/rongjiecomputer/events{/privacy}", "received_events_url": "https://api.github.com/users/rongjiecomputer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 419840263, "node_id": "MDU6TGFiZWw0MTk4NDAyNjM=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/awaiting%20testing%20(then%20merge)", "name": "awaiting testing (then merge)", "color": "c2e0c6", "default": false}, {"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-04-12T05:39:54Z", "updated_at": "2018-04-12T22:37:40Z", "closed_at": "2018-04-12T19:36:52Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/18448", "html_url": "https://github.com/tensorflow/tensorflow/pull/18448", "diff_url": "https://github.com/tensorflow/tensorflow/pull/18448.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/18448.patch"}, "body_html": "<p><code>-D</code> compile flag should be avoided as much as possible. Many Google projects like Chromium follow  (which uses CMake or GN) only define macro in header file like below and always include the header file to get the macro (IWYU).</p>\n<div class=\"highlight highlight-source-c++\"><pre>#<span class=\"pl-k\">ifdef</span> _MSC_VER\n#<span class=\"pl-k\">define</span> <span class=\"pl-en\">COMPILER_MSVC</span>\n#<span class=\"pl-k\">endif</span></pre></div>\n<p>However, such rule is not easy to implement for Tensorflow as Bazel require strict header dependency. It is easier to just use <code>_MSC_VER</code> and <code>_WIN32</code> directly.</p>\n<p>Other stuff:</p>\n<ul>\n<li>Remove <code>ARRAYSIZE</code> macro in <code>tensorflow/stream_executor/platform/port.h</code> (only used in <code>tensorflow/stream_executor/cuda/cuda_driver.cc</code>, which is now replaced with <code>TF_ARRAYSIZE</code> from <code>tensorflow/stream_executor/platform/macros.h</code>).</li>\n</ul>", "body_text": "-D compile flag should be avoided as much as possible. Many Google projects like Chromium follow  (which uses CMake or GN) only define macro in header file like below and always include the header file to get the macro (IWYU).\n#ifdef _MSC_VER\n#define COMPILER_MSVC\n#endif\nHowever, such rule is not easy to implement for Tensorflow as Bazel require strict header dependency. It is easier to just use _MSC_VER and _WIN32 directly.\nOther stuff:\n\nRemove ARRAYSIZE macro in tensorflow/stream_executor/platform/port.h (only used in tensorflow/stream_executor/cuda/cuda_driver.cc, which is now replaced with TF_ARRAYSIZE from tensorflow/stream_executor/platform/macros.h).", "body": "`-D` compile flag should be avoided as much as possible. Many Google projects like Chromium follow  (which uses CMake or GN) only define macro in header file like below and always include the header file to get the macro (IWYU).\r\n\r\n```cpp\r\n#ifdef _MSC_VER\r\n#define COMPILER_MSVC\r\n#endif\r\n```\r\n\r\nHowever, such rule is not easy to implement for Tensorflow as Bazel require strict header dependency. It is easier to just use `_MSC_VER` and `_WIN32` directly.\r\n\r\nOther stuff:\r\n\r\n- Remove `ARRAYSIZE` macro in `tensorflow/stream_executor/platform/port.h` (only used in `tensorflow/stream_executor/cuda/cuda_driver.cc`, which is now replaced with `TF_ARRAYSIZE` from `tensorflow/stream_executor/platform/macros.h`)."}