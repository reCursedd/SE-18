{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13260", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13260/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13260/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13260/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/13260", "id": 260002033, "node_id": "MDU6SXNzdWUyNjAwMDIwMzM=", "number": 13260, "title": "ValueError: No gradients provided for any variable, check your graph for ops that do not support gradients,", "user": {"login": "changiseng", "id": 27992783, "node_id": "MDQ6VXNlcjI3OTkyNzgz", "avatar_url": "https://avatars3.githubusercontent.com/u/27992783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/changiseng", "html_url": "https://github.com/changiseng", "followers_url": "https://api.github.com/users/changiseng/followers", "following_url": "https://api.github.com/users/changiseng/following{/other_user}", "gists_url": "https://api.github.com/users/changiseng/gists{/gist_id}", "starred_url": "https://api.github.com/users/changiseng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/changiseng/subscriptions", "organizations_url": "https://api.github.com/users/changiseng/orgs", "repos_url": "https://api.github.com/users/changiseng/repos", "events_url": "https://api.github.com/users/changiseng/events{/privacy}", "received_events_url": "https://api.github.com/users/changiseng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-23T11:37:25Z", "updated_at": "2017-10-03T09:45:15Z", "closed_at": "2017-10-03T09:45:15Z", "author_association": "NONE", "body_html": "<p>I am green in a tensorflow</p>\n<p>I do not know where it is wrong</p>\n<p>here is a warning</p>\n<p>ValueError: No gradients provided for any variable, check your graph for ops that do not support gradients, between variables [\"\", \"</p>\n<p>here is my code</p>\n<p>import tensorflow as tf<br>\nimport numpy as np<br>\nimport pandas as pd<br>\nimport math<br>\nfrom sklearn import tree<br>\nfrom sklearn.cross_validation import train_test_split</p>\n<p>COLUMNS = [\"CLD_A\",\"DDI\",\"DFS_A\",\"DFS_B\",\"deg1\",\"deg2\",\"y\"]</p>\n<p>filename=\"D:/outputs/train.csv\"<br>\nfile = pd.read_csv(filename, skipinitialspace=True,<br>\nskiprows=0, names=COLUMNS)</p>\n<p>n_samples = file[['CLD_A','DDI','DFS_A','DFS_B','deg1','deg2']]<br>\nn_samples=n_samples.as_matrix()</p>\n<p>n_features= file[['y']]<br>\nn_features=n_features.as_matrix()</p>\n<p>train_X, test_X, train_y, test_y = train_test_split(n_samples, n_features,<br>\ntest_size = 0.8,random_state=0)</p>\n<p>x=tf.placeholder(tf.int32,shape=[None, 6])<br>\ny=tf.placeholder(tf.int32,shape=[None, 1])</p>\n<p>l1 = tf.layers.dense(x, 10, tf.nn.relu)          # hidden layer<br>\noutput = tf.layers.dense(l1, 1)</p>\n<p>loss = tf.losses.mean_squared_error(y, output)<br>\noptimizer = tf.train.GradientDescentOptimizer(learning_rate = 0.01)<br>\ntrain_op = optimizer.minimize(loss)<br>\nwith tf.Session() as sess:<br>\ninit=tf.global_variables_initializer()<br>\nsess = tf.Session()<br>\nsess.run(init)<br>\nfor i in range(1000):<br>\ntotal_loss = 0<br>\nfor i in range(len(train_X)):<br>\nfeed={x:train_X,y:train_y}<br>\nsess.run(train_op,feed_dict={x:train_X,y:train_y})<br>\nif i%100==0:<br>\nprint(sess.run(loss, feed ={x:train_X,y:train_y}))</p>", "body_text": "I am green in a tensorflow\nI do not know where it is wrong\nhere is a warning\nValueError: No gradients provided for any variable, check your graph for ops that do not support gradients, between variables [\"\", \"\nhere is my code\nimport tensorflow as tf\nimport numpy as np\nimport pandas as pd\nimport math\nfrom sklearn import tree\nfrom sklearn.cross_validation import train_test_split\nCOLUMNS = [\"CLD_A\",\"DDI\",\"DFS_A\",\"DFS_B\",\"deg1\",\"deg2\",\"y\"]\nfilename=\"D:/outputs/train.csv\"\nfile = pd.read_csv(filename, skipinitialspace=True,\nskiprows=0, names=COLUMNS)\nn_samples = file[['CLD_A','DDI','DFS_A','DFS_B','deg1','deg2']]\nn_samples=n_samples.as_matrix()\nn_features= file[['y']]\nn_features=n_features.as_matrix()\ntrain_X, test_X, train_y, test_y = train_test_split(n_samples, n_features,\ntest_size = 0.8,random_state=0)\nx=tf.placeholder(tf.int32,shape=[None, 6])\ny=tf.placeholder(tf.int32,shape=[None, 1])\nl1 = tf.layers.dense(x, 10, tf.nn.relu)          # hidden layer\noutput = tf.layers.dense(l1, 1)\nloss = tf.losses.mean_squared_error(y, output)\noptimizer = tf.train.GradientDescentOptimizer(learning_rate = 0.01)\ntrain_op = optimizer.minimize(loss)\nwith tf.Session() as sess:\ninit=tf.global_variables_initializer()\nsess = tf.Session()\nsess.run(init)\nfor i in range(1000):\ntotal_loss = 0\nfor i in range(len(train_X)):\nfeed={x:train_X,y:train_y}\nsess.run(train_op,feed_dict={x:train_X,y:train_y})\nif i%100==0:\nprint(sess.run(loss, feed ={x:train_X,y:train_y}))", "body": " I am green in a tensorflow\r\n\r\nI do not know where it is wrong\r\n\r\nhere is a warning\r\n\r\nValueError: No gradients provided for any variable, check your graph for ops that do not support gradients, between variables [\"\", \"\r\n\r\nhere is my code\r\n\r\nimport tensorflow as tf\r\nimport numpy as np\r\nimport pandas as pd\r\nimport math\r\nfrom sklearn import tree\r\nfrom sklearn.cross_validation import train_test_split\r\n\r\n\r\nCOLUMNS = [\"CLD_A\",\"DDI\",\"DFS_A\",\"DFS_B\",\"deg1\",\"deg2\",\"y\"]\r\n\r\nfilename=\"D:/outputs/train.csv\"\r\nfile = pd.read_csv(filename, skipinitialspace=True,\r\n                       skiprows=0, names=COLUMNS)\r\n\r\n\r\nn_samples = file[['CLD_A','DDI','DFS_A','DFS_B','deg1','deg2']]\r\nn_samples=n_samples.as_matrix()\r\n\r\nn_features= file[['y']]\r\nn_features=n_features.as_matrix()\r\n\r\ntrain_X, test_X, train_y, test_y = train_test_split(n_samples, n_features, \r\ntest_size = 0.8,random_state=0)\r\n\r\n\r\nx=tf.placeholder(tf.int32,shape=[None, 6]) \r\ny=tf.placeholder(tf.int32,shape=[None, 1])\r\n\r\n\r\nl1 = tf.layers.dense(x, 10, tf.nn.relu)          # hidden layer\r\noutput = tf.layers.dense(l1, 1) \r\n\r\n\r\nloss = tf.losses.mean_squared_error(y, output)\r\noptimizer = tf.train.GradientDescentOptimizer(learning_rate = 0.01)\r\ntrain_op = optimizer.minimize(loss)\r\nwith tf.Session() as sess:\r\n  init=tf.global_variables_initializer()\r\n  sess = tf.Session()\r\n  sess.run(init)\r\nfor i in range(1000):\r\n    total_loss = 0\r\n    for i in range(len(train_X)):\r\n        feed={x:train_X,y:train_y}\r\n        sess.run(train_op,feed_dict={x:train_X,y:train_y})\r\n        if i%100==0:\r\n            print(sess.run(loss, feed ={x:train_X,y:train_y}))\r\n\r\n"}