{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22504", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22504/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22504/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22504/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/22504", "id": 363660209, "node_id": "MDU6SXNzdWUzNjM2NjAyMDk=", "number": 22504, "title": "Weird behaviour of back propagation in a while_loop in Tensorflow", "user": {"login": "dblueeye", "id": 11167572, "node_id": "MDQ6VXNlcjExMTY3NTcy", "avatar_url": "https://avatars1.githubusercontent.com/u/11167572?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dblueeye", "html_url": "https://github.com/dblueeye", "followers_url": "https://api.github.com/users/dblueeye/followers", "following_url": "https://api.github.com/users/dblueeye/following{/other_user}", "gists_url": "https://api.github.com/users/dblueeye/gists{/gist_id}", "starred_url": "https://api.github.com/users/dblueeye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dblueeye/subscriptions", "organizations_url": "https://api.github.com/users/dblueeye/orgs", "repos_url": "https://api.github.com/users/dblueeye/repos", "events_url": "https://api.github.com/users/dblueeye/events{/privacy}", "received_events_url": "https://api.github.com/users/dblueeye/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "aselle", "id": 326106, "node_id": "MDQ6VXNlcjMyNjEwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/326106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aselle", "html_url": "https://github.com/aselle", "followers_url": "https://api.github.com/users/aselle/followers", "following_url": "https://api.github.com/users/aselle/following{/other_user}", "gists_url": "https://api.github.com/users/aselle/gists{/gist_id}", "starred_url": "https://api.github.com/users/aselle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aselle/subscriptions", "organizations_url": "https://api.github.com/users/aselle/orgs", "repos_url": "https://api.github.com/users/aselle/repos", "events_url": "https://api.github.com/users/aselle/events{/privacy}", "received_events_url": "https://api.github.com/users/aselle/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "aselle", "id": 326106, "node_id": "MDQ6VXNlcjMyNjEwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/326106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aselle", "html_url": "https://github.com/aselle", "followers_url": "https://api.github.com/users/aselle/followers", "following_url": "https://api.github.com/users/aselle/following{/other_user}", "gists_url": "https://api.github.com/users/aselle/gists{/gist_id}", "starred_url": "https://api.github.com/users/aselle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aselle/subscriptions", "organizations_url": "https://api.github.com/users/aselle/orgs", "repos_url": "https://api.github.com/users/aselle/repos", "events_url": "https://api.github.com/users/aselle/events{/privacy}", "received_events_url": "https://api.github.com/users/aselle/received_events", "type": "User", "site_admin": false}, {"login": "wt-huang", "id": 42785337, "node_id": "MDQ6VXNlcjQyNzg1MzM3", "avatar_url": "https://avatars0.githubusercontent.com/u/42785337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wt-huang", "html_url": "https://github.com/wt-huang", "followers_url": "https://api.github.com/users/wt-huang/followers", "following_url": "https://api.github.com/users/wt-huang/following{/other_user}", "gists_url": "https://api.github.com/users/wt-huang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wt-huang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wt-huang/subscriptions", "organizations_url": "https://api.github.com/users/wt-huang/orgs", "repos_url": "https://api.github.com/users/wt-huang/repos", "events_url": "https://api.github.com/users/wt-huang/events{/privacy}", "received_events_url": "https://api.github.com/users/wt-huang/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2018-09-25T16:16:23Z", "updated_at": "2018-10-24T18:19:13Z", "closed_at": "2018-10-24T14:43:02Z", "author_association": "NONE", "body_html": "<ul>\n<li>**Have I written custom code: Yes</li>\n<li>**OS Platform and Distribution: Windows 10 (primary), Ubunto 16.04.3 LTS (secondary)</li>\n<li>**TensorFlow installed from (source or binary): Binary</li>\n<li>**TensorFlow version (use command below): b'v1.10.0-rc1-19-g656e7a2b34' 1.10.0</li>\n<li>**Python version: Python 3.6.6 :: Anaconda, Inc.</li>\n<li><strong>CUDA/cuDNN version</strong>: N/A (not relevant)</li>\n<li><strong>GPU model and memory</strong>: N/A (not relevant)</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I am trying to see if Tensorflow can backpropagate through a while_loop without a pre-defined number of loops. Something weird caught my attention: the following script results in the error</p>\n<blockquote>\n<p>InvalidArgumentError: Retval[0] does not have value</p>\n</blockquote>\n<p>However, when I replaced <code>tf.add(X,X)</code> by <code>tf.multiply(X,2)</code>, the code can be executed and return the correct answer graVal=64.</p>\n<p>Could anyone help me to understand where the error came from when I was using <code>tf.add(X,X)</code>? Thanks in advance!</p>\n<h3>Source code / logs</h3>\n<pre><code>import tensorflow as tf\nfrom numpy import *\n\ntf.reset_default_graph()\n\nX = tf.Variable(5.0, dtype = float32)\nY = tf.Variable(4.0, dtype = float32)\n\ndef cond(iterN, Y):\n    return iterN&lt;6\n\ndef body(iterN, X):\n    return iterN+1, tf.add(X,X)\n    # return iterN+1, tf.multiply(X,2)\n\nfinalOutX = tf.while_loop(cond, body, [0,X], parallel_iterations=1, back_prop=True, swap_memory=True)\n\ngra = tf.gradients(finalOutX, X)\n\ninit = tf.global_variables_initializer()\n\nwith tf.Session() as sess:\n\n    init.run()\n    X_val, graVal, = sess.run([finalOutX, gra])    \n\nprint(X_val)\nprint(graVal)\n</code></pre>", "body_text": "**Have I written custom code: Yes\n**OS Platform and Distribution: Windows 10 (primary), Ubunto 16.04.3 LTS (secondary)\n**TensorFlow installed from (source or binary): Binary\n**TensorFlow version (use command below): b'v1.10.0-rc1-19-g656e7a2b34' 1.10.0\n**Python version: Python 3.6.6 :: Anaconda, Inc.\nCUDA/cuDNN version: N/A (not relevant)\nGPU model and memory: N/A (not relevant)\nExact command to reproduce:\n\nDescribe the problem\nI am trying to see if Tensorflow can backpropagate through a while_loop without a pre-defined number of loops. Something weird caught my attention: the following script results in the error\n\nInvalidArgumentError: Retval[0] does not have value\n\nHowever, when I replaced tf.add(X,X) by tf.multiply(X,2), the code can be executed and return the correct answer graVal=64.\nCould anyone help me to understand where the error came from when I was using tf.add(X,X)? Thanks in advance!\nSource code / logs\nimport tensorflow as tf\nfrom numpy import *\n\ntf.reset_default_graph()\n\nX = tf.Variable(5.0, dtype = float32)\nY = tf.Variable(4.0, dtype = float32)\n\ndef cond(iterN, Y):\n    return iterN<6\n\ndef body(iterN, X):\n    return iterN+1, tf.add(X,X)\n    # return iterN+1, tf.multiply(X,2)\n\nfinalOutX = tf.while_loop(cond, body, [0,X], parallel_iterations=1, back_prop=True, swap_memory=True)\n\ngra = tf.gradients(finalOutX, X)\n\ninit = tf.global_variables_initializer()\n\nwith tf.Session() as sess:\n\n    init.run()\n    X_val, graVal, = sess.run([finalOutX, gra])    \n\nprint(X_val)\nprint(graVal)", "body": "- **Have I written custom code: Yes\r\n- **OS Platform and Distribution: Windows 10 (primary), Ubunto 16.04.3 LTS (secondary)\r\n- **TensorFlow installed from (source or binary): Binary\r\n- **TensorFlow version (use command below): b'v1.10.0-rc1-19-g656e7a2b34' 1.10.0\r\n- **Python version: Python 3.6.6 :: Anaconda, Inc.\r\n- **CUDA/cuDNN version**: N/A (not relevant)\r\n- **GPU model and memory**: N/A (not relevant) \r\n- **Exact command to reproduce**:\r\n\r\n\r\n### Describe the problem\r\n\r\nI am trying to see if Tensorflow can backpropagate through a while_loop without a pre-defined number of loops. Something weird caught my attention: the following script results in the error \r\n\r\n> InvalidArgumentError: Retval[0] does not have value\r\n\r\nHowever, when I replaced `tf.add(X,X)` by `tf.multiply(X,2)`, the code can be executed and return the correct answer graVal=64. \r\n\r\n\r\nCould anyone help me to understand where the error came from when I was using `tf.add(X,X)`? Thanks in advance!\r\n\r\n### Source code / logs\r\n```\r\nimport tensorflow as tf\r\nfrom numpy import *\r\n\r\ntf.reset_default_graph()\r\n\r\nX = tf.Variable(5.0, dtype = float32)\r\nY = tf.Variable(4.0, dtype = float32)\r\n\r\ndef cond(iterN, Y):\r\n    return iterN<6\r\n\r\ndef body(iterN, X):\r\n    return iterN+1, tf.add(X,X)\r\n    # return iterN+1, tf.multiply(X,2)\r\n\r\nfinalOutX = tf.while_loop(cond, body, [0,X], parallel_iterations=1, back_prop=True, swap_memory=True)\r\n\r\ngra = tf.gradients(finalOutX, X)\r\n\r\ninit = tf.global_variables_initializer()\r\n\r\nwith tf.Session() as sess:\r\n\r\n    init.run()\r\n    X_val, graVal, = sess.run([finalOutX, gra])    \r\n\r\nprint(X_val)\r\nprint(graVal)\r\n```"}