{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/410537049", "html_url": "https://github.com/tensorflow/tensorflow/issues/21391#issuecomment-410537049", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21391", "id": 410537049, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDUzNzA0OQ==", "user": {"login": "RanFeldesh", "id": 8627404, "node_id": "MDQ6VXNlcjg2Mjc0MDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/8627404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RanFeldesh", "html_url": "https://github.com/RanFeldesh", "followers_url": "https://api.github.com/users/RanFeldesh/followers", "following_url": "https://api.github.com/users/RanFeldesh/following{/other_user}", "gists_url": "https://api.github.com/users/RanFeldesh/gists{/gist_id}", "starred_url": "https://api.github.com/users/RanFeldesh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RanFeldesh/subscriptions", "organizations_url": "https://api.github.com/users/RanFeldesh/orgs", "repos_url": "https://api.github.com/users/RanFeldesh/repos", "events_url": "https://api.github.com/users/RanFeldesh/events{/privacy}", "received_events_url": "https://api.github.com/users/RanFeldesh/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-05T18:01:32Z", "updated_at": "2018-08-05T18:05:01Z", "author_association": "NONE", "body_html": "<p>Dear <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6932348\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/yongtang\">@yongtang</a> , thank you so much for the quick reply and verification on your machine.<br>\nThe first post's error message was with eager mode. With the graph mode, I get a similar error message  to your Linux example. It didn't occur to me that the vague error message might be due to eager mode. I usually debug in eager, then execute in graph. It might be possible to add the explicit error message in eager mode as well. I wonder how simple it is adding it, and if it falls within the TF API design rules.</p>\n<p>Running on same config as in the first post:</p>\n<ul>\n<li>Here is the complete code for eager mode:</li>\n</ul>\n<pre><code>import tensorflow as tf\ntf.enable_eager_execution()\ntf.linspace(1,2,1)\n</code></pre>\n<ul>\n<li>And the associated error message (eager mode; it doesn't state the error type explicitly):</li>\n</ul>\n<pre><code>Traceback (most recent call last):\n  File \"C:/Users/Ran/Documents/TensorFlow Models/NeuronalMemory/linspace.py\", line 3, in &lt;module&gt;\n    tf.linspace(1,2,1)\n  File \"C:\\Users\\Ran\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\tensorflow\\python\\ops\\gen_math_ops.py\", line 4205, in lin_space\n    start, stop, num, name=name, ctx=_ctx)\n  File \"C:\\Users\\Ran\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\tensorflow\\python\\ops\\gen_math_ops.py\", line 4225, in lin_space_eager_fallback\n    attrs=_attrs, ctx=_ctx, name=name)\n  File \"C:\\Users\\Ran\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\tensorflow\\python\\eager\\execute.py\", line 66, in quick_execute\n    six.raise_from(core._status_to_exception(e.code, message), None)\n  File \"&lt;string&gt;\", line 3, in raise_from\ntensorflow.python.framework.errors_impl.InternalError: Could not find valid device for node name: \"LinSpace\"\nop: \"LinSpace\"\ninput: \"dummy_input\"\ninput: \"dummy_input\"\ninput: \"dummy_input\"\nattr {\n  key: \"T\"\n  value {\n    type: DT_INT32\n  }\n}\nattr {\n  key: \"Tidx\"\n  value {\n    type: DT_INT32\n  }\n}\n [Op:LinSpace]\n\nProcess finished with exit code 1\n</code></pre>\n<ul>\n<li>The same in a graph-mode code:</li>\n</ul>\n<pre><code>import tensorflow as tf\ntf.linspace(1,2,1)\n</code></pre>\n<ul>\n<li>the error message in graph mode (which states error explicitly - which is great!):</li>\n</ul>\n<pre><code>File \"C:/Users/Ran/Documents/TensorFlow Models/NeuronalMemory/linspace.py\", line 2, in &lt;module&gt;\n    tf.linspace(1,2,1)\n  File \"C:\\Users\\Ran\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\tensorflow\\python\\ops\\gen_math_ops.py\", line 4188, in lin_space\n    \"LinSpace\", start=start, stop=stop, num=num, name=name)\n  File \"C:\\Users\\Ran\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\op_def_library.py\", line 609, in _apply_op_helper\n    param_name=input_name)\n  File \"C:\\Users\\Ran\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\op_def_library.py\", line 60, in _SatisfiesTypeConstraint\n    \", \".join(dtypes.as_dtype(x).name for x in allowed_list)))\nTypeError: Value passed to parameter 'start' has DataType int32 not in list of allowed values: bfloat16, float32, float64\n</code></pre>", "body_text": "Dear @yongtang , thank you so much for the quick reply and verification on your machine.\nThe first post's error message was with eager mode. With the graph mode, I get a similar error message  to your Linux example. It didn't occur to me that the vague error message might be due to eager mode. I usually debug in eager, then execute in graph. It might be possible to add the explicit error message in eager mode as well. I wonder how simple it is adding it, and if it falls within the TF API design rules.\nRunning on same config as in the first post:\n\nHere is the complete code for eager mode:\n\nimport tensorflow as tf\ntf.enable_eager_execution()\ntf.linspace(1,2,1)\n\n\nAnd the associated error message (eager mode; it doesn't state the error type explicitly):\n\nTraceback (most recent call last):\n  File \"C:/Users/Ran/Documents/TensorFlow Models/NeuronalMemory/linspace.py\", line 3, in <module>\n    tf.linspace(1,2,1)\n  File \"C:\\Users\\Ran\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\tensorflow\\python\\ops\\gen_math_ops.py\", line 4205, in lin_space\n    start, stop, num, name=name, ctx=_ctx)\n  File \"C:\\Users\\Ran\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\tensorflow\\python\\ops\\gen_math_ops.py\", line 4225, in lin_space_eager_fallback\n    attrs=_attrs, ctx=_ctx, name=name)\n  File \"C:\\Users\\Ran\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\tensorflow\\python\\eager\\execute.py\", line 66, in quick_execute\n    six.raise_from(core._status_to_exception(e.code, message), None)\n  File \"<string>\", line 3, in raise_from\ntensorflow.python.framework.errors_impl.InternalError: Could not find valid device for node name: \"LinSpace\"\nop: \"LinSpace\"\ninput: \"dummy_input\"\ninput: \"dummy_input\"\ninput: \"dummy_input\"\nattr {\n  key: \"T\"\n  value {\n    type: DT_INT32\n  }\n}\nattr {\n  key: \"Tidx\"\n  value {\n    type: DT_INT32\n  }\n}\n [Op:LinSpace]\n\nProcess finished with exit code 1\n\n\nThe same in a graph-mode code:\n\nimport tensorflow as tf\ntf.linspace(1,2,1)\n\n\nthe error message in graph mode (which states error explicitly - which is great!):\n\nFile \"C:/Users/Ran/Documents/TensorFlow Models/NeuronalMemory/linspace.py\", line 2, in <module>\n    tf.linspace(1,2,1)\n  File \"C:\\Users\\Ran\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\tensorflow\\python\\ops\\gen_math_ops.py\", line 4188, in lin_space\n    \"LinSpace\", start=start, stop=stop, num=num, name=name)\n  File \"C:\\Users\\Ran\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\op_def_library.py\", line 609, in _apply_op_helper\n    param_name=input_name)\n  File \"C:\\Users\\Ran\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\op_def_library.py\", line 60, in _SatisfiesTypeConstraint\n    \", \".join(dtypes.as_dtype(x).name for x in allowed_list)))\nTypeError: Value passed to parameter 'start' has DataType int32 not in list of allowed values: bfloat16, float32, float64", "body": "Dear @yongtang , thank you so much for the quick reply and verification on your machine.\r\nThe first post's error message was with eager mode. With the graph mode, I get a similar error message  to your Linux example. It didn't occur to me that the vague error message might be due to eager mode. I usually debug in eager, then execute in graph. It might be possible to add the explicit error message in eager mode as well. I wonder how simple it is adding it, and if it falls within the TF API design rules.\r\n\r\nRunning on same config as in the first post:\r\n* Here is the complete code for eager mode:\r\n```\r\nimport tensorflow as tf\r\ntf.enable_eager_execution()\r\ntf.linspace(1,2,1)\r\n```\r\n* And the associated error message (eager mode; it doesn't state the error type explicitly):\r\n```\r\nTraceback (most recent call last):\r\n  File \"C:/Users/Ran/Documents/TensorFlow Models/NeuronalMemory/linspace.py\", line 3, in <module>\r\n    tf.linspace(1,2,1)\r\n  File \"C:\\Users\\Ran\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\tensorflow\\python\\ops\\gen_math_ops.py\", line 4205, in lin_space\r\n    start, stop, num, name=name, ctx=_ctx)\r\n  File \"C:\\Users\\Ran\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\tensorflow\\python\\ops\\gen_math_ops.py\", line 4225, in lin_space_eager_fallback\r\n    attrs=_attrs, ctx=_ctx, name=name)\r\n  File \"C:\\Users\\Ran\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\tensorflow\\python\\eager\\execute.py\", line 66, in quick_execute\r\n    six.raise_from(core._status_to_exception(e.code, message), None)\r\n  File \"<string>\", line 3, in raise_from\r\ntensorflow.python.framework.errors_impl.InternalError: Could not find valid device for node name: \"LinSpace\"\r\nop: \"LinSpace\"\r\ninput: \"dummy_input\"\r\ninput: \"dummy_input\"\r\ninput: \"dummy_input\"\r\nattr {\r\n  key: \"T\"\r\n  value {\r\n    type: DT_INT32\r\n  }\r\n}\r\nattr {\r\n  key: \"Tidx\"\r\n  value {\r\n    type: DT_INT32\r\n  }\r\n}\r\n [Op:LinSpace]\r\n\r\nProcess finished with exit code 1\r\n```\r\n* The same in a graph-mode code:\r\n```\r\nimport tensorflow as tf\r\ntf.linspace(1,2,1)\r\n```\r\n* the error message in graph mode (which states error explicitly - which is great!):\r\n```\r\nFile \"C:/Users/Ran/Documents/TensorFlow Models/NeuronalMemory/linspace.py\", line 2, in <module>\r\n    tf.linspace(1,2,1)\r\n  File \"C:\\Users\\Ran\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\tensorflow\\python\\ops\\gen_math_ops.py\", line 4188, in lin_space\r\n    \"LinSpace\", start=start, stop=stop, num=num, name=name)\r\n  File \"C:\\Users\\Ran\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\op_def_library.py\", line 609, in _apply_op_helper\r\n    param_name=input_name)\r\n  File \"C:\\Users\\Ran\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\op_def_library.py\", line 60, in _SatisfiesTypeConstraint\r\n    \", \".join(dtypes.as_dtype(x).name for x in allowed_list)))\r\nTypeError: Value passed to parameter 'start' has DataType int32 not in list of allowed values: bfloat16, float32, float64\r\n```"}