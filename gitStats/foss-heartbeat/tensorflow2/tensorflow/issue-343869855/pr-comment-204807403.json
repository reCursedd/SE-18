{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/204807403", "pull_request_review_id": 139951834, "id": 204807403, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDgwNzQwMw==", "diff_hunk": "@@ -250,6 +250,28 @@ Status RestoreTensorsV2(OpKernelContext* context, const Tensor& prefix,\n   // TODO(zongheng): consider measuring speed and issuing concurrent lookups\n   // within a fixed memory budget.\n   TensorShape restored_full_shape;\n+  DataType original_dtype;\n+  std::vector<string> mismatched_errors;\n+  for (auto i : sorted_name_idx) {\n+    const string& tensor_name = tensor_names_flat(i);\n+    TF_RETURN_IF_ERROR(\n+        reader.LookupDtypeAndShape(tensor_name,\n+                                   &original_dtype, &restored_full_shape));\n+    if (dtypes[i] != original_dtype) {\n+      string error_msg = string(\"tensor_name = \") + tensor_name +\n+                         \"; expected dtype \" + DataTypeString(dtypes[i]) +\n+                         \" does not equal original dtype \" +\n+                         DataTypeString(original_dtype) + '\\n';\n+      mismatched_errors.emplace_back(error_msg);\n+    }\n+  }\n+  if (!mismatched_errors.empty()) {\n+    string error_msg = std::accumulate(mismatched_errors.begin(),", "path": "tensorflow/core/kernels/save_restore_tensor.cc", "position": null, "original_position": 20, "commit_id": "8c2bf00a4c0e02fa12a69dc4b73eabb5d934b1f6", "original_commit_id": "3d7c2729da4d6373e5dfe32c791b8b002e02f376", "user": {"login": "drpngx", "id": 20959853, "node_id": "MDQ6VXNlcjIwOTU5ODUz", "avatar_url": "https://avatars1.githubusercontent.com/u/20959853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drpngx", "html_url": "https://github.com/drpngx", "followers_url": "https://api.github.com/users/drpngx/followers", "following_url": "https://api.github.com/users/drpngx/following{/other_user}", "gists_url": "https://api.github.com/users/drpngx/gists{/gist_id}", "starred_url": "https://api.github.com/users/drpngx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drpngx/subscriptions", "organizations_url": "https://api.github.com/users/drpngx/orgs", "repos_url": "https://api.github.com/users/drpngx/repos", "events_url": "https://api.github.com/users/drpngx/events{/privacy}", "received_events_url": "https://api.github.com/users/drpngx/received_events", "type": "User", "site_admin": false}, "body": "You can use `str_util::Join`. Use `const string error_msg`.", "created_at": "2018-07-24T15:40:26Z", "updated_at": "2018-07-29T14:20:24Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/21078#discussion_r204807403", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21078", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/204807403"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/21078#discussion_r204807403"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21078"}}, "body_html": "<p>You can use <code>str_util::Join</code>. Use <code>const string error_msg</code>.</p>", "body_text": "You can use str_util::Join. Use const string error_msg."}