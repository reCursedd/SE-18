{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/341632022", "html_url": "https://github.com/tensorflow/tensorflow/issues/14181#issuecomment-341632022", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14181", "id": 341632022, "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTYzMjAyMg==", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-03T06:48:40Z", "updated_at": "2017-11-03T06:48:40Z", "author_association": "MEMBER", "body_html": "<p>First of all, thanks for filling in the the issue template with all the details and providing clear instructions to reproduce the problem. This is very helpful!</p>\n<p>I modified your snippet a bit to reduce iteration time and dump out memory stats inline (so avoid generating a new random numpy array on each iteration and I see issues even without creating a session):</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n<span class=\"pl-k\">import</span> resource\n\nreps <span class=\"pl-k\">=</span> <span class=\"pl-c1\">30</span>\nx <span class=\"pl-k\">=</span> np.random.random((<span class=\"pl-c1\">1000</span>, <span class=\"pl-c1\">1000</span>, <span class=\"pl-c1\">200</span>, <span class=\"pl-c1\">1</span>))\n<span class=\"pl-k\">for</span> i <span class=\"pl-k\">in</span> <span class=\"pl-c1\">range</span>(reps):\n  <span class=\"pl-k\">with</span> tf.Graph().as_default() <span class=\"pl-k\">as</span> graph:\n    tf.constant(x)\n  <span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Iteration <span class=\"pl-pds\">'</span></span>, i, <span class=\"pl-s\"><span class=\"pl-pds\">'</span> maxrss: <span class=\"pl-pds\">'</span></span>, resource.getrusage(resource.<span class=\"pl-c1\">RUSAGE_SELF</span>).ru_maxrss)</pre></div>\n<p>The snippet above does show <code>maxrss</code> constantly increasing, while if I add the <code>gc</code> as you suggested:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n<span class=\"pl-k\">import</span> resource\n<span class=\"pl-k\">import</span> gc\n\nreps <span class=\"pl-k\">=</span> <span class=\"pl-c1\">30</span>\nx <span class=\"pl-k\">=</span> np.random.random((<span class=\"pl-c1\">1000</span>, <span class=\"pl-c1\">1000</span>, <span class=\"pl-c1\">200</span>, <span class=\"pl-c1\">1</span>))\n<span class=\"pl-k\">for</span> i <span class=\"pl-k\">in</span> <span class=\"pl-c1\">range</span>(reps):\n  <span class=\"pl-k\">with</span> tf.Graph().as_default() <span class=\"pl-k\">as</span> graph:\n    tf.constant(x)\n  <span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Iteration <span class=\"pl-pds\">'</span></span>, i, <span class=\"pl-s\"><span class=\"pl-pds\">'</span> maxrss: <span class=\"pl-pds\">'</span></span>, resource.getrusage(resource.<span class=\"pl-c1\">RUSAGE_SELF</span>).ru_maxrss)\n  gc.collect()</pre></div>\n<p>Then <code>maxrss</code> remains stable.</p>\n<p>Thanks for the report.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3731025\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/allenlavoie\">@allenlavoie</a> has been looking at some other garbage generation and might have some thoughts.<br>\n<a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=88808\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/skye\">@skye</a> might also know a bit about graph construction code.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3731025\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/allenlavoie\">@allenlavoie</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=88808\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/skye\">@skye</a> : Mind taking a look? Thanks!</p>", "body_text": "First of all, thanks for filling in the the issue template with all the details and providing clear instructions to reproduce the problem. This is very helpful!\nI modified your snippet a bit to reduce iteration time and dump out memory stats inline (so avoid generating a new random numpy array on each iteration and I see issues even without creating a session):\nimport tensorflow as tf\nimport numpy as np\nimport resource\n\nreps = 30\nx = np.random.random((1000, 1000, 200, 1))\nfor i in range(reps):\n  with tf.Graph().as_default() as graph:\n    tf.constant(x)\n  print('Iteration ', i, ' maxrss: ', resource.getrusage(resource.RUSAGE_SELF).ru_maxrss)\nThe snippet above does show maxrss constantly increasing, while if I add the gc as you suggested:\nimport tensorflow as tf\nimport numpy as np\nimport resource\nimport gc\n\nreps = 30\nx = np.random.random((1000, 1000, 200, 1))\nfor i in range(reps):\n  with tf.Graph().as_default() as graph:\n    tf.constant(x)\n  print('Iteration ', i, ' maxrss: ', resource.getrusage(resource.RUSAGE_SELF).ru_maxrss)\n  gc.collect()\nThen maxrss remains stable.\nThanks for the report.\n@allenlavoie has been looking at some other garbage generation and might have some thoughts.\n@skye might also know a bit about graph construction code.\n@allenlavoie @skye : Mind taking a look? Thanks!", "body": "First of all, thanks for filling in the the issue template with all the details and providing clear instructions to reproduce the problem. This is very helpful!\r\n\r\nI modified your snippet a bit to reduce iteration time and dump out memory stats inline (so avoid generating a new random numpy array on each iteration and I see issues even without creating a session):\r\n\r\n```python\r\nimport tensorflow as tf\r\nimport numpy as np\r\nimport resource\r\n\r\nreps = 30\r\nx = np.random.random((1000, 1000, 200, 1))\r\nfor i in range(reps):\r\n  with tf.Graph().as_default() as graph:\r\n    tf.constant(x)\r\n  print('Iteration ', i, ' maxrss: ', resource.getrusage(resource.RUSAGE_SELF).ru_maxrss)\r\n```\r\n\r\nThe snippet above does show `maxrss` constantly increasing, while if I add the `gc` as you suggested:\r\n\r\n```python\r\nimport tensorflow as tf\r\nimport numpy as np\r\nimport resource\r\nimport gc\r\n\r\nreps = 30\r\nx = np.random.random((1000, 1000, 200, 1))\r\nfor i in range(reps):\r\n  with tf.Graph().as_default() as graph:\r\n    tf.constant(x)\r\n  print('Iteration ', i, ' maxrss: ', resource.getrusage(resource.RUSAGE_SELF).ru_maxrss)\r\n  gc.collect()\r\n```\r\n\r\nThen `maxrss` remains stable.\r\n\r\nThanks for the report.\r\n\r\n@allenlavoie has been looking at some other garbage generation and might have some thoughts.\r\n@skye might also know a bit about graph construction code.\r\n\r\n@allenlavoie @skye : Mind taking a look? Thanks!"}