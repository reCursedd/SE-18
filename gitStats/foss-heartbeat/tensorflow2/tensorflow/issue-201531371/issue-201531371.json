{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6925", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6925/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6925/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6925/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/6925", "id": 201531371, "node_id": "MDU6SXNzdWUyMDE1MzEzNzE=", "number": 6925, "title": "support for depth pooling in maxpool3d?", "user": {"login": "odellus", "id": 4686956, "node_id": "MDQ6VXNlcjQ2ODY5NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/4686956?v=4", "gravatar_id": "", "url": "https://api.github.com/users/odellus", "html_url": "https://github.com/odellus", "followers_url": "https://api.github.com/users/odellus/followers", "following_url": "https://api.github.com/users/odellus/following{/other_user}", "gists_url": "https://api.github.com/users/odellus/gists{/gist_id}", "starred_url": "https://api.github.com/users/odellus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/odellus/subscriptions", "organizations_url": "https://api.github.com/users/odellus/orgs", "repos_url": "https://api.github.com/users/odellus/repos", "events_url": "https://api.github.com/users/odellus/events{/privacy}", "received_events_url": "https://api.github.com/users/odellus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-01-18T10:19:29Z", "updated_at": "2018-08-05T20:07:25Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>Is depth pooling in the works for MaxPool3D? Any pointers on how I should/could get this going myself?</p>\n<pre><code>UnimplementedError (see above for traceback): Pooling is not yet supported on the depth dimension.\n[[Node: max_pool_1 = MaxPool3D[T=DT_FLOAT, ksize=[1, 2, 2, 2, 64], padding=\"VALID\", strides=[1,\n 1, 1, 1, 1], _device=\"/job:localhost/replica:0/task:0/gpu:0\"](Relu_1)]]\n</code></pre>\n<p>Here's an example of how I'm using it:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">maxpool3d</span>(<span class=\"pl-smi\">input_</span>, <span class=\"pl-smi\">kd</span>, <span class=\"pl-smi\">kh</span>, <span class=\"pl-smi\">kw</span>, <span class=\"pl-smi\">stride</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>,<span class=\"pl-smi\">scope</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">None</span>):\n    input_cdim <span class=\"pl-k\">=</span> input_.get_shape().as_list()[<span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>]\n    batch_size <span class=\"pl-k\">=</span> input_.get_shape().as_list()[<span class=\"pl-c1\">0</span>]\n    kernel <span class=\"pl-k\">=</span> [batch_size, kd, kh, kw, input_cdim]\n    <span class=\"pl-k\">return</span> tf.nn.max_pool3d(input_, kernel,\n        <span class=\"pl-v\">strides</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">1</span>,stride,stride,stride,<span class=\"pl-c1\">1</span>], <span class=\"pl-v\">padding</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>VALID<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span>scope)\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> ...</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Perform 2 3D convolutions without max pooling.</span>\nx <span class=\"pl-k\">=</span> tf.nn.relu(conv3d(x, <span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">64</span>, <span class=\"pl-v\">scope</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>conv_1<span class=\"pl-pds\">\"</span></span>))\nx <span class=\"pl-k\">=</span> tf.nn.relu(conv3d(x, <span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">64</span>, <span class=\"pl-v\">scope</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>conv_2<span class=\"pl-pds\">\"</span></span>))\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Downsample with max pooling.</span>\nx <span class=\"pl-k\">=</span> maxpool3d(x, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-v\">scope</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>max_pool_1<span class=\"pl-pds\">\"</span></span>)</pre></div>", "body_text": "Is depth pooling in the works for MaxPool3D? Any pointers on how I should/could get this going myself?\nUnimplementedError (see above for traceback): Pooling is not yet supported on the depth dimension.\n[[Node: max_pool_1 = MaxPool3D[T=DT_FLOAT, ksize=[1, 2, 2, 2, 64], padding=\"VALID\", strides=[1,\n 1, 1, 1, 1], _device=\"/job:localhost/replica:0/task:0/gpu:0\"](Relu_1)]]\n\nHere's an example of how I'm using it:\ndef maxpool3d(input_, kd, kh, kw, stride=1,scope=None):\n    input_cdim = input_.get_shape().as_list()[-1]\n    batch_size = input_.get_shape().as_list()[0]\n    kernel = [batch_size, kd, kh, kw, input_cdim]\n    return tf.nn.max_pool3d(input_, kernel,\n        strides=[1,stride,stride,stride,1], padding=\"VALID\", name=scope)\n# ...\n# Perform 2 3D convolutions without max pooling.\nx = tf.nn.relu(conv3d(x, 4, 4, 4, 64, scope=\"conv_1\"))\nx = tf.nn.relu(conv3d(x, 4, 4, 4, 64, scope=\"conv_2\"))\n\n# Downsample with max pooling.\nx = maxpool3d(x, 2, 2, 2, scope=\"max_pool_1\")", "body": "Is depth pooling in the works for MaxPool3D? Any pointers on how I should/could get this going myself? \r\n```\r\nUnimplementedError (see above for traceback): Pooling is not yet supported on the depth dimension.\r\n[[Node: max_pool_1 = MaxPool3D[T=DT_FLOAT, ksize=[1, 2, 2, 2, 64], padding=\"VALID\", strides=[1,\r\n 1, 1, 1, 1], _device=\"/job:localhost/replica:0/task:0/gpu:0\"](Relu_1)]]\r\n```\r\nHere's an example of how I'm using it:\r\n```Python\r\ndef maxpool3d(input_, kd, kh, kw, stride=1,scope=None):\r\n    input_cdim = input_.get_shape().as_list()[-1]\r\n    batch_size = input_.get_shape().as_list()[0]\r\n    kernel = [batch_size, kd, kh, kw, input_cdim]\r\n    return tf.nn.max_pool3d(input_, kernel,\r\n        strides=[1,stride,stride,stride,1], padding=\"VALID\", name=scope)\r\n# ...\r\n# Perform 2 3D convolutions without max pooling.\r\nx = tf.nn.relu(conv3d(x, 4, 4, 4, 64, scope=\"conv_1\"))\r\nx = tf.nn.relu(conv3d(x, 4, 4, 4, 64, scope=\"conv_2\"))\r\n\r\n# Downsample with max pooling.\r\nx = maxpool3d(x, 2, 2, 2, scope=\"max_pool_1\")\r\n```"}