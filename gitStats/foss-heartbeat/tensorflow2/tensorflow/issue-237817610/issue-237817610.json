{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10980", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10980/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10980/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10980/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/10980", "id": 237817610, "node_id": "MDExOlB1bGxSZXF1ZXN0MTI2OTcxOTAw", "number": 10980, "title": "python_configure.bzl: Add python import library on Windows", "user": {"login": "meteorcloudy", "id": 4171702, "node_id": "MDQ6VXNlcjQxNzE3MDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/4171702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meteorcloudy", "html_url": "https://github.com/meteorcloudy", "followers_url": "https://api.github.com/users/meteorcloudy/followers", "following_url": "https://api.github.com/users/meteorcloudy/following{/other_user}", "gists_url": "https://api.github.com/users/meteorcloudy/gists{/gist_id}", "starred_url": "https://api.github.com/users/meteorcloudy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meteorcloudy/subscriptions", "organizations_url": "https://api.github.com/users/meteorcloudy/orgs", "repos_url": "https://api.github.com/users/meteorcloudy/repos", "events_url": "https://api.github.com/users/meteorcloudy/events{/privacy}", "received_events_url": "https://api.github.com/users/meteorcloudy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "gunan", "id": 7946809, "node_id": "MDQ6VXNlcjc5NDY4MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7946809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gunan", "html_url": "https://github.com/gunan", "followers_url": "https://api.github.com/users/gunan/followers", "following_url": "https://api.github.com/users/gunan/following{/other_user}", "gists_url": "https://api.github.com/users/gunan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gunan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gunan/subscriptions", "organizations_url": "https://api.github.com/users/gunan/orgs", "repos_url": "https://api.github.com/users/gunan/repos", "events_url": "https://api.github.com/users/gunan/events{/privacy}", "received_events_url": "https://api.github.com/users/gunan/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "gunan", "id": 7946809, "node_id": "MDQ6VXNlcjc5NDY4MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7946809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gunan", "html_url": "https://github.com/gunan", "followers_url": "https://api.github.com/users/gunan/followers", "following_url": "https://api.github.com/users/gunan/following{/other_user}", "gists_url": "https://api.github.com/users/gunan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gunan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gunan/subscriptions", "organizations_url": "https://api.github.com/users/gunan/orgs", "repos_url": "https://api.github.com/users/gunan/repos", "events_url": "https://api.github.com/users/gunan/events{/privacy}", "received_events_url": "https://api.github.com/users/gunan/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2017-06-22T11:41:13Z", "updated_at": "2018-03-05T15:17:55Z", "closed_at": "2017-06-26T19:26:13Z", "author_association": "MEMBER", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/10980", "html_url": "https://github.com/tensorflow/tensorflow/pull/10980", "diff_url": "https://github.com/tensorflow/tensorflow/pull/10980.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/10980.patch"}, "body_html": "<p>When building a Python C/C++ extension on Windows, we need to link to the python <a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/ms682592(v=vs.85).aspx\" rel=\"nofollow\">import library</a> pythonXY.lib (eg. <code>C:\\Program Files\\Anaconda3\\libs\\python35.lib</code>)<br>\nSee <a href=\"https://docs.python.org/3/extending/windows.html\" rel=\"nofollow\">https://docs.python.org/3/extending/windows.html</a></p>\n<p>Previously, TensorFlow relies on Bazel <a href=\"https://github.com/bazelbuild/bazel/blob/master/tools/cpp/windows_cc_configure.bzl#L324\">adding </a>the python lib path <code>C:\\Program Files\\Anaconda3\\libs</code> into <code>LIB</code> environment variable, the build will break after Bazel stop doing so.</p>\n<p>To solve this problem, we generate a python_import_lib rule. Ideally, it should be a <code>cc_library</code>, but when building a dll, Bazel add /WHOLEARCHIVE to <code>python35.lib</code> because it cannot tell it's a static library or import library(they have the same extension <code>.lib</code>). This will cause a linking error. As a workaround, we put it into <code>linkopts</code> if <code>python_headers</code>.<br>\nSee more details at <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"237592909\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/bazelbuild/bazel/issues/3237\" data-hovercard-type=\"issue\" data-hovercard-url=\"/bazelbuild/bazel/issues/3237/hovercard\" href=\"https://github.com/bazelbuild/bazel/issues/3237\">bazelbuild/bazel#3237</a></p>", "body_text": "When building a Python C/C++ extension on Windows, we need to link to the python import library pythonXY.lib (eg. C:\\Program Files\\Anaconda3\\libs\\python35.lib)\nSee https://docs.python.org/3/extending/windows.html\nPreviously, TensorFlow relies on Bazel adding the python lib path C:\\Program Files\\Anaconda3\\libs into LIB environment variable, the build will break after Bazel stop doing so.\nTo solve this problem, we generate a python_import_lib rule. Ideally, it should be a cc_library, but when building a dll, Bazel add /WHOLEARCHIVE to python35.lib because it cannot tell it's a static library or import library(they have the same extension .lib). This will cause a linking error. As a workaround, we put it into linkopts if python_headers.\nSee more details at bazelbuild/bazel#3237", "body": "When building a Python C/C++ extension on Windows, we need to link to the python [import library](https://msdn.microsoft.com/en-us/library/windows/desktop/ms682592(v=vs.85).aspx) pythonXY.lib (eg. `C:\\Program Files\\Anaconda3\\libs\\python35.lib`)\r\nSee https://docs.python.org/3/extending/windows.html\r\n\r\nPreviously, TensorFlow relies on Bazel [adding ](https://github.com/bazelbuild/bazel/blob/master/tools/cpp/windows_cc_configure.bzl#L324)the python lib path `C:\\Program Files\\Anaconda3\\libs` into `LIB` environment variable, the build will break after Bazel stop doing so.\r\n\r\nTo solve this problem, we generate a python_import_lib rule. Ideally, it should be a `cc_library`, but when building a dll, Bazel add /WHOLEARCHIVE to `python35.lib` because it cannot tell it's a static library or import library(they have the same extension `.lib`). This will cause a linking error. As a workaround, we put it into `linkopts` if `python_headers`.\r\nSee more details at https://github.com/bazelbuild/bazel/issues/3237"}