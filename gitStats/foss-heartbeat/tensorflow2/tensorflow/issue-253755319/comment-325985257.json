{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/325985257", "html_url": "https://github.com/tensorflow/tensorflow/issues/12689#issuecomment-325985257", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12689", "id": 325985257, "node_id": "MDEyOklzc3VlQ29tbWVudDMyNTk4NTI1Nw==", "user": {"login": "TianwenWei", "id": 22830466, "node_id": "MDQ6VXNlcjIyODMwNDY2", "avatar_url": "https://avatars1.githubusercontent.com/u/22830466?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TianwenWei", "html_url": "https://github.com/TianwenWei", "followers_url": "https://api.github.com/users/TianwenWei/followers", "following_url": "https://api.github.com/users/TianwenWei/following{/other_user}", "gists_url": "https://api.github.com/users/TianwenWei/gists{/gist_id}", "starred_url": "https://api.github.com/users/TianwenWei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TianwenWei/subscriptions", "organizations_url": "https://api.github.com/users/TianwenWei/orgs", "repos_url": "https://api.github.com/users/TianwenWei/repos", "events_url": "https://api.github.com/users/TianwenWei/events{/privacy}", "received_events_url": "https://api.github.com/users/TianwenWei/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-30T13:11:03Z", "updated_at": "2017-08-30T13:12:33Z", "author_association": "NONE", "body_html": "<p>I think I have found the problem. To make sure that the Variables are stored in CPU, we need to use context manager<br>\n<code>with slim.arg_scope([slim.model_variable, slim.variable], device='/cpu:0'):</code><br>\ninstead of<br>\n<code>with slim.arg_scope([slim.variable], device='/cpu:0'):</code><br>\nAs a matter of fact, although <code>slim.model_variable</code> eventually calls <code>slim.variable</code> and variables in collection <code>sim.get_model_variables()</code> is a subset of those in collection <code>sim.get_variables()</code>, code<br>\n<code>with slim.arg_scope([slim.variable], device='/cpu:0'):</code> does not set default device to cpu for variabels created by <code>sim.get_model_variables</code>.</p>", "body_text": "I think I have found the problem. To make sure that the Variables are stored in CPU, we need to use context manager\nwith slim.arg_scope([slim.model_variable, slim.variable], device='/cpu:0'):\ninstead of\nwith slim.arg_scope([slim.variable], device='/cpu:0'):\nAs a matter of fact, although slim.model_variable eventually calls slim.variable and variables in collection sim.get_model_variables() is a subset of those in collection sim.get_variables(), code\nwith slim.arg_scope([slim.variable], device='/cpu:0'): does not set default device to cpu for variabels created by sim.get_model_variables.", "body": "I think I have found the problem. To make sure that the Variables are stored in CPU, we need to use context manager\r\n`with slim.arg_scope([slim.model_variable, slim.variable], device='/cpu:0'):`\r\ninstead of \r\n`with slim.arg_scope([slim.variable], device='/cpu:0'):`\r\nAs a matter of fact, although `slim.model_variable` eventually calls `slim.variable` and variables in collection `sim.get_model_variables()` is a subset of those in collection `sim.get_variables()`, code\r\n`with slim.arg_scope([slim.variable], device='/cpu:0'):` does not set default device to cpu for variabels created by `sim.get_model_variables`."}