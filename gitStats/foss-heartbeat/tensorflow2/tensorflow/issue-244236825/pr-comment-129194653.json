{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/129194653", "pull_request_review_id": 51940398, "id": 129194653, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyOTE5NDY1Mw==", "diff_hunk": "@@ -183,6 +186,54 @@ class SegmentReductionOp : public OpKernel {\n   }\n };\n \n+#ifdef GOOGLE_CUDA\n+//  SegmentSumGPUOp is a segment sum operator implemented for GPU only.\n+template <class T, class Index>\n+class SegmentSumGPUOp : public OpKernel {\n+ public:\n+  explicit SegmentSumGPUOp(OpKernelConstruction* context) : OpKernel(context) {}\n+\n+  void Compute(OpKernelContext* context) override {\n+    const Tensor& input = context->input(0);\n+    const Tensor& segment_ids = context->input(1);\n+\n+    if (!SegmentReductionDoValidation(context, input, segment_ids)) {\n+      return;\n+    }\n+\n+    const int64 num_indices = segment_ids.NumElements();\n+\n+    Index output_rows;\n+    context->eigen_device<GPUDevice>().memcpyDeviceToHost(\n+        (void*)&output_rows,\n+        (void*)(segment_ids.template flat<Index>().data() + (num_indices - 1)),\n+        sizeof(Index));\n+    output_rows++;\n+\n+    OP_REQUIRES(context, output_rows > 0,\n+                errors::InvalidArgument(\"segment ids must be >= 0\"));\n+\n+    TensorShape output_shape = input.shape();\n+    output_shape.set_dim(0, output_rows);\n+\n+    Tensor* output = nullptr;\n+    OP_REQUIRES_OK(context, context->allocate_output(0, output_shape, &output));\n+\n+    auto output_flat = output->flat_outer_dims<T>();\n+    auto data_ptr = input.template flat<T>().data();\n+    auto segment_flat = segment_ids.flat<Index>();\n+\n+    functor_(context, context->eigen_device<GPUDevice>(), output_rows,", "path": "tensorflow/core/kernels/segment_reduction_ops.cc", "position": null, "original_position": 51, "commit_id": "50517c902261289b8163ded0979d5ac28bfe9c6d", "original_commit_id": "aba87c28d57d9fd16aacce476b405ebeed50263e", "user": {"login": "zheng-xq", "id": 15736910, "node_id": "MDQ6VXNlcjE1NzM2OTEw", "avatar_url": "https://avatars0.githubusercontent.com/u/15736910?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zheng-xq", "html_url": "https://github.com/zheng-xq", "followers_url": "https://api.github.com/users/zheng-xq/followers", "following_url": "https://api.github.com/users/zheng-xq/following{/other_user}", "gists_url": "https://api.github.com/users/zheng-xq/gists{/gist_id}", "starred_url": "https://api.github.com/users/zheng-xq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zheng-xq/subscriptions", "organizations_url": "https://api.github.com/users/zheng-xq/orgs", "repos_url": "https://api.github.com/users/zheng-xq/repos", "events_url": "https://api.github.com/users/zheng-xq/events{/privacy}", "received_events_url": "https://api.github.com/users/zheng-xq/received_events", "type": "User", "site_admin": false}, "body": "Since the functor is trivial, we don't have to cache it. ", "created_at": "2017-07-25T01:34:43Z", "updated_at": "2017-08-29T00:31:24Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/11630#discussion_r129194653", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11630", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/129194653"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/11630#discussion_r129194653"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11630"}}, "body_html": "<p>Since the functor is trivial, we don't have to cache it.</p>", "body_text": "Since the functor is trivial, we don't have to cache it."}