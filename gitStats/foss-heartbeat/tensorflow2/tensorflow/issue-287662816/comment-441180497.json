{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/441180497", "html_url": "https://github.com/tensorflow/tensorflow/issues/16028#issuecomment-441180497", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16028", "id": 441180497, "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTE4MDQ5Nw==", "user": {"login": "iiphii", "id": 8495059, "node_id": "MDQ6VXNlcjg0OTUwNTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/8495059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iiphii", "html_url": "https://github.com/iiphii", "followers_url": "https://api.github.com/users/iiphii/followers", "following_url": "https://api.github.com/users/iiphii/following{/other_user}", "gists_url": "https://api.github.com/users/iiphii/gists{/gist_id}", "starred_url": "https://api.github.com/users/iiphii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iiphii/subscriptions", "organizations_url": "https://api.github.com/users/iiphii/orgs", "repos_url": "https://api.github.com/users/iiphii/repos", "events_url": "https://api.github.com/users/iiphii/events{/privacy}", "received_events_url": "https://api.github.com/users/iiphii/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-23T08:38:25Z", "updated_at": "2018-11-23T08:38:25Z", "author_association": "NONE", "body_html": "<p>I haven't tried this myself but the concept of Lp-norm seems to me like a natural approach for \"softening\" the max function. For your two number case, the Lp-norm is defined as<br>\n<code>y = (|a|^p + |b|^p)^(1/p)</code><br>\nwhere p is a free parameter.</p>\n<p>The case p-&gt;\u221e corresponds to<br>\n<code>y = tf.maximum(a,b)</code><br>\nand the case p=2 corresponds to the familiar Eucledian distance. Perhaps there could be an intermediate p value which would suit your use case.</p>", "body_text": "I haven't tried this myself but the concept of Lp-norm seems to me like a natural approach for \"softening\" the max function. For your two number case, the Lp-norm is defined as\ny = (|a|^p + |b|^p)^(1/p)\nwhere p is a free parameter.\nThe case p->\u221e corresponds to\ny = tf.maximum(a,b)\nand the case p=2 corresponds to the familiar Eucledian distance. Perhaps there could be an intermediate p value which would suit your use case.", "body": "I haven't tried this myself but the concept of Lp-norm seems to me like a natural approach for \"softening\" the max function. For your two number case, the Lp-norm is defined as \r\n`y = (|a|^p + |b|^p)^(1/p)`\r\nwhere p is a free parameter.\r\n\r\nThe case p->\u221e corresponds to\r\n`y = tf.maximum(a,b)`\r\nand the case p=2 corresponds to the familiar Eucledian distance. Perhaps there could be an intermediate p value which would suit your use case."}