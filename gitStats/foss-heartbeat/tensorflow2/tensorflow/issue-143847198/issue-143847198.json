{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1672", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1672/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1672/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1672/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/1672", "id": 143847198, "node_id": "MDU6SXNzdWUxNDM4NDcxOTg=", "number": 1672, "title": "Shape information is not preserved through sampling", "user": {"login": "bayerj", "id": 50352, "node_id": "MDQ6VXNlcjUwMzUy", "avatar_url": "https://avatars3.githubusercontent.com/u/50352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bayerj", "html_url": "https://github.com/bayerj", "followers_url": "https://api.github.com/users/bayerj/followers", "following_url": "https://api.github.com/users/bayerj/following{/other_user}", "gists_url": "https://api.github.com/users/bayerj/gists{/gist_id}", "starred_url": "https://api.github.com/users/bayerj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bayerj/subscriptions", "organizations_url": "https://api.github.com/users/bayerj/orgs", "repos_url": "https://api.github.com/users/bayerj/repos", "events_url": "https://api.github.com/users/bayerj/events{/privacy}", "received_events_url": "https://api.github.com/users/bayerj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-03-27T20:53:47Z", "updated_at": "2016-03-28T20:39:24Z", "closed_at": "2016-03-28T15:11:28Z", "author_association": "NONE", "body_html": "<p>When I create a sample from a normal based on the shape of another tensor, that shape information is not retained.</p>\n<p>Using Tensorflow 0.7.1:</p>\n<pre><code>&gt;&gt;&gt; import tensorflow as tf\n&gt;&gt;&gt; x = tf.placeholder(tf.float32, (None, 12))\n&gt;&gt;&gt; y = tf.random_normal(tf.shape(x))\n&gt;&gt;&gt; y.get_shape()\nTensorShape([Dimension(None), Dimension(None)])\n</code></pre>\n<p>I would have expected <code>TensorShape([Dimension(None), Dimension(12)])</code> instead.</p>", "body_text": "When I create a sample from a normal based on the shape of another tensor, that shape information is not retained.\nUsing Tensorflow 0.7.1:\n>>> import tensorflow as tf\n>>> x = tf.placeholder(tf.float32, (None, 12))\n>>> y = tf.random_normal(tf.shape(x))\n>>> y.get_shape()\nTensorShape([Dimension(None), Dimension(None)])\n\nI would have expected TensorShape([Dimension(None), Dimension(12)]) instead.", "body": "When I create a sample from a normal based on the shape of another tensor, that shape information is not retained.\n\nUsing Tensorflow 0.7.1:\n\n```\n>>> import tensorflow as tf\n>>> x = tf.placeholder(tf.float32, (None, 12))\n>>> y = tf.random_normal(tf.shape(x))\n>>> y.get_shape()\nTensorShape([Dimension(None), Dimension(None)])\n```\n\nI would have expected `TensorShape([Dimension(None), Dimension(12)])` instead.\n"}