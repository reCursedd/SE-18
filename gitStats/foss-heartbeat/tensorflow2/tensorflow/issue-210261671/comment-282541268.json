{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/282541268", "html_url": "https://github.com/tensorflow/tensorflow/issues/7886#issuecomment-282541268", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7886", "id": 282541268, "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjU0MTI2OA==", "user": {"login": "fengsky401", "id": 11943769, "node_id": "MDQ6VXNlcjExOTQzNzY5", "avatar_url": "https://avatars0.githubusercontent.com/u/11943769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fengsky401", "html_url": "https://github.com/fengsky401", "followers_url": "https://api.github.com/users/fengsky401/followers", "following_url": "https://api.github.com/users/fengsky401/following{/other_user}", "gists_url": "https://api.github.com/users/fengsky401/gists{/gist_id}", "starred_url": "https://api.github.com/users/fengsky401/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fengsky401/subscriptions", "organizations_url": "https://api.github.com/users/fengsky401/orgs", "repos_url": "https://api.github.com/users/fengsky401/repos", "events_url": "https://api.github.com/users/fengsky401/events{/privacy}", "received_events_url": "https://api.github.com/users/fengsky401/received_events", "type": "User", "site_admin": false}, "created_at": "2017-02-26T08:33:47Z", "updated_at": "2017-02-28T02:17:31Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=2375962\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/inflation\">@inflation</a> Actually I tried these before, the code is as below</p>\n<pre><code>import tensorflow as tf\nsess = tf.Session()\n\nnew_saver = tf.train.import_meta_graph('/home/scw4750/Liuhongkun/tfrecord/zooscan/Alexnet/Modal/model20170226041552612/mymodel.meta')\n#print( tf.train.latest_checkpoint('./'))\nwhat=new_saver.restore(sess, '/home/scw4750/Liuhongkun/tfrecord/zooscan/Alexnet/Modal/model20170226041552612/mymodel')\n#print(what)\nall_vars = tf.get_collection('alexnet_v2')\nprint(all_vars)\nfor v in all_vars:\n    v_ = sess.run(v)\n    print(v_)\n</code></pre>\n<p>The function tf.get_collection() at least has the key for the collection, I tried the scope name defined in alexnet.py , print(all_vars) shows nothing but [ ]. So I don't know how could I get the key.</p>\n<pre><code>tf.get_collection(key, scope=None) {#get_collection}\n\nWrapper for Graph.get_collection() using the default graph.\n\nSee Graph.get_collection() for more details.\nArgs:\n\n    key: The key for the collection. For example, the GraphKeys class contains many standard names for collections.\n    scope: (Optional.) If supplied, the resulting list is filtered to include only items whose name attribute matches using re.match. Items without a name attribute are never returned if a scope is supplied and the choice or re.match means that a scope without special tokens filters by prefix.\n\nReturns:\n\nThe list of values in the collection with the given name, or an empty list if no value has been added to that collection. The list contains the values in the order under which they were collected.\n</code></pre>", "body_text": "@inflation Actually I tried these before, the code is as below\nimport tensorflow as tf\nsess = tf.Session()\n\nnew_saver = tf.train.import_meta_graph('/home/scw4750/Liuhongkun/tfrecord/zooscan/Alexnet/Modal/model20170226041552612/mymodel.meta')\n#print( tf.train.latest_checkpoint('./'))\nwhat=new_saver.restore(sess, '/home/scw4750/Liuhongkun/tfrecord/zooscan/Alexnet/Modal/model20170226041552612/mymodel')\n#print(what)\nall_vars = tf.get_collection('alexnet_v2')\nprint(all_vars)\nfor v in all_vars:\n    v_ = sess.run(v)\n    print(v_)\n\nThe function tf.get_collection() at least has the key for the collection, I tried the scope name defined in alexnet.py , print(all_vars) shows nothing but [ ]. So I don't know how could I get the key.\ntf.get_collection(key, scope=None) {#get_collection}\n\nWrapper for Graph.get_collection() using the default graph.\n\nSee Graph.get_collection() for more details.\nArgs:\n\n    key: The key for the collection. For example, the GraphKeys class contains many standard names for collections.\n    scope: (Optional.) If supplied, the resulting list is filtered to include only items whose name attribute matches using re.match. Items without a name attribute are never returned if a scope is supplied and the choice or re.match means that a scope without special tokens filters by prefix.\n\nReturns:\n\nThe list of values in the collection with the given name, or an empty list if no value has been added to that collection. The list contains the values in the order under which they were collected.", "body": "@inflation Actually I tried these before, the code is as below\r\n```\r\nimport tensorflow as tf\r\nsess = tf.Session()\r\n\r\nnew_saver = tf.train.import_meta_graph('/home/scw4750/Liuhongkun/tfrecord/zooscan/Alexnet/Modal/model20170226041552612/mymodel.meta')\r\n#print( tf.train.latest_checkpoint('./'))\r\nwhat=new_saver.restore(sess, '/home/scw4750/Liuhongkun/tfrecord/zooscan/Alexnet/Modal/model20170226041552612/mymodel')\r\n#print(what)\r\nall_vars = tf.get_collection('alexnet_v2')\r\nprint(all_vars)\r\nfor v in all_vars:\r\n    v_ = sess.run(v)\r\n    print(v_)\r\n```\r\nThe function tf.get_collection() at least has the key for the collection, I tried the scope name defined in alexnet.py , print(all_vars) shows nothing but [ ]. So I don't know how could I get the key.\r\n\r\n```\r\ntf.get_collection(key, scope=None) {#get_collection}\r\n\r\nWrapper for Graph.get_collection() using the default graph.\r\n\r\nSee Graph.get_collection() for more details.\r\nArgs:\r\n\r\n    key: The key for the collection. For example, the GraphKeys class contains many standard names for collections.\r\n    scope: (Optional.) If supplied, the resulting list is filtered to include only items whose name attribute matches using re.match. Items without a name attribute are never returned if a scope is supplied and the choice or re.match means that a scope without special tokens filters by prefix.\r\n\r\nReturns:\r\n\r\nThe list of values in the collection with the given name, or an empty list if no value has been added to that collection. The list contains the values in the order under which they were collected.\r\n```"}