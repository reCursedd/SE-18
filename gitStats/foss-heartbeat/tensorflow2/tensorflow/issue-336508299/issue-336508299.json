{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20370", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20370/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20370/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20370/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20370", "id": 336508299, "node_id": "MDU6SXNzdWUzMzY1MDgyOTk=", "number": 20370, "title": "MirroredStrategy fails with \"no supported kernel for GPU devices is available\"", "user": {"login": "martin-gorner", "id": 959847, "node_id": "MDQ6VXNlcjk1OTg0Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/959847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martin-gorner", "html_url": "https://github.com/martin-gorner", "followers_url": "https://api.github.com/users/martin-gorner/followers", "following_url": "https://api.github.com/users/martin-gorner/following{/other_user}", "gists_url": "https://api.github.com/users/martin-gorner/gists{/gist_id}", "starred_url": "https://api.github.com/users/martin-gorner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martin-gorner/subscriptions", "organizations_url": "https://api.github.com/users/martin-gorner/orgs", "repos_url": "https://api.github.com/users/martin-gorner/repos", "events_url": "https://api.github.com/users/martin-gorner/events{/privacy}", "received_events_url": "https://api.github.com/users/martin-gorner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "drpngx", "id": 20959853, "node_id": "MDQ6VXNlcjIwOTU5ODUz", "avatar_url": "https://avatars1.githubusercontent.com/u/20959853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drpngx", "html_url": "https://github.com/drpngx", "followers_url": "https://api.github.com/users/drpngx/followers", "following_url": "https://api.github.com/users/drpngx/following{/other_user}", "gists_url": "https://api.github.com/users/drpngx/gists{/gist_id}", "starred_url": "https://api.github.com/users/drpngx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drpngx/subscriptions", "organizations_url": "https://api.github.com/users/drpngx/orgs", "repos_url": "https://api.github.com/users/drpngx/repos", "events_url": "https://api.github.com/users/drpngx/events{/privacy}", "received_events_url": "https://api.github.com/users/drpngx/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "drpngx", "id": 20959853, "node_id": "MDQ6VXNlcjIwOTU5ODUz", "avatar_url": "https://avatars1.githubusercontent.com/u/20959853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drpngx", "html_url": "https://github.com/drpngx", "followers_url": "https://api.github.com/users/drpngx/followers", "following_url": "https://api.github.com/users/drpngx/following{/other_user}", "gists_url": "https://api.github.com/users/drpngx/gists{/gist_id}", "starred_url": "https://api.github.com/users/drpngx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drpngx/subscriptions", "organizations_url": "https://api.github.com/users/drpngx/orgs", "repos_url": "https://api.github.com/users/drpngx/repos", "events_url": "https://api.github.com/users/drpngx/events{/privacy}", "received_events_url": "https://api.github.com/users/drpngx/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 15, "created_at": "2018-06-28T07:40:54Z", "updated_at": "2018-07-20T00:45:26Z", "closed_at": "2018-07-05T23:55:26Z", "author_association": "NONE", "body_html": "<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: YES</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: ML Engine default</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: ML Engine default</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.8</li>\n<li><strong>Python version</strong>: 2.6</li>\n<li><strong>Bazel version (if compiling from source)</strong>: N/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: N/A</li>\n<li><strong>CUDA/cuDNN version</strong>: ML Engine default</li>\n<li><strong>GPU model and memory</strong>: NVIDIA Tesla K80</li>\n<li><strong>Exact command to reproduce</strong>: N/A</li>\n</ul>\n<p>MirroredStrategy fails with \"no supported kernel for GPU devices is available\". The same code works on a single GPU.</p>\n<p>Traceback:<br>\nTraceback (most recent call last): File \"/usr/lib/python2.7/runpy.py\", line 174, in _run_module_as_main \"<strong>main</strong>\", fname, loader, pkg_name) File \"/usr/lib/python2.7/runpy.py\", line 72, in _run_code exec code in run_globals File \"/root/.local/lib/python2.7/site-packages/trainer_yolo/main.py\", line 188, in  main(sys.argv) File \"/root/.local/lib/python2.7/site-packages/trainer_yolo/main.py\", line 184, in main start_training(output_dir, hparams, **otherargs) File \"/root/.local/lib/python2.7/site-packages/trainer_yolo/main.py\", line 131, in start_training tf.estimator.train_and_evaluate(estimator, train_spec, eval_spec) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/estimator/training.py\", line 439, in train_and_evaluate executor.run() File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/estimator/training.py\", line 546, in run getattr(self, task_to_run)() File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/estimator/training.py\", line 601, in run_master self._start_distributed_training(saving_listeners=saving_listeners) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/estimator/training.py\", line 739, in _start_distributed_training saving_listeners=saving_listeners) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/estimator/estimator.py\", line 363, in train loss = self._train_model(input_fn, hooks, saving_listeners) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/estimator/estimator.py\", line 841, in _train_model return self._train_model_distributed(input_fn, hooks, saving_listeners) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/estimator/estimator.py\", line 977, in _train_model_distributed saving_listeners) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/estimator/estimator.py\", line 1056, in _train_with_estimator_spec log_step_count_steps=self._config.log_step_count_steps) as mon_sess: File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/monitored_session.py\", line 405, in MonitoredTrainingSession stop_grace_period_secs=stop_grace_period_secs) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/monitored_session.py\", line 816, in <strong>init</strong> stop_grace_period_secs=stop_grace_period_secs) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/monitored_session.py\", line 539, in <strong>init</strong> self._sess = _RecoverableSession(self._coordinated_creator) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/monitored_session.py\", line 1002, in <strong>init</strong> _WrappedSession.<strong>init</strong>(self, self._create_session()) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/monitored_session.py\", line 1007, in _create_session return self._sess_creator.create_session() File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/monitored_session.py\", line 696, in create_session self.tf_sess = self._session_creator.create_session() File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/monitored_session.py\", line 467, in create_session init_fn=self._scaffold.init_fn) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/session_manager.py\", line 285, in prepare_session sess.run(init_op, feed_dict=init_feed_dict) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 900, in run run_metadata_ptr) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1135, in _run feed_dict_tensor, options, run_metadata) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1316, in _do_run run_metadata) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1335, in _do_call raise type(e)(node_def, op, message) InvalidArgumentError: Cannot assign a device for operation 'tower_3/Tile_7/input': Could not satisfy explicit device specification '/device:GPU:3' because <strong>no supported kernel for GPU devices is available</strong>. Registered kernels: device='CPU'; T in [DT_QINT32] device='CPU'; T in [DT_QUINT8] device='CPU'; T in [DT_QINT8] device='CPU'; T in [DT_VARIANT] device='CPU'; T in [DT_RESOURCE] device='CPU'; T in [DT_STRING] device='CPU'; T in [DT_BOOL] device='CPU'; T in [DT_COMPLEX128] device='CPU'; T in [DT_COMPLEX64] device='CPU'; T in [DT_DOUBLE] device='CPU'; T in [DT_FLOAT] device='CPU'; T in [DT_BFLOAT16] device='CPU'; T in [DT_HALF] device='CPU'; T in [DT_INT8] device='CPU'; T in [DT_UINT8] device='CPU'; T in [DT_INT16] device='CPU'; T in [DT_UINT16] device='CPU'; T in [DT_INT32] device='CPU'; T in [DT_INT64] device='GPU'; T in [DT_INT32] device='GPU'; T in [DT_BOOL] device='GPU'; T in [DT_INT64] device='GPU'; T in [DT_BFLOAT16] device='GPU'; T in [DT_DOUBLE] device='GPU'; T in [DT_FLOAT] device='GPU'; T in [DT_HALF] [[Node: tower_3/Tile_7/input = Pack<a href=\"tower_3/Cast_4\">N=1, T=DT_INT16, axis=0, _device=\"/device:GPU:3\"</a>]] Caused by op u'tower_3/Tile_7/input', defined at: File \"/usr/lib/python2.7/threading.py\", line 774, in __bootstrap self.__bootstrap_inner() File \"/usr/lib/python2.7/threading.py\", line 801, in __bootstrap_inner self.run() File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/distribute/python/mirrored_strategy.py\", line 465, in run self.main_result = self.main_fn(*self.main_args, **self.main_kwargs) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/estimator/estimator.py\", line 831, in _call_model_fn model_fn_results = self._model_fn(features=features, **kwargs) File \"/root/.local/lib/python2.7/site-packages/trainer_yolo/model.py\", line 230, in model_fn iou_accuracy = box.compute_safe_IOU(target_rois, detected_rois, detected_rois_overflow, settings.TILE_SIZE) File \"/root/.local/lib/python2.7/site-packages/trainer_yolo/utils_box.py\", line 521, in compute_safe_IOU iou_accuracy = IOUCalculator.batch_intersection_over_union(detected_rois * tile_size, target_rois * tile_size, tile_size=tile_size) File \"/root/.local/lib/python2.7/site-packages/trainer_yolo/utils_box.py\", line 476, in batch_intersection_over_union linmap2 = cls.__iou_gen_linmap(batch, n2, tile_size) File \"/root/.local/lib/python2.7/site-packages/trainer_yolo/utils_box.py\", <strong>line 428, in __iou_gen_linmap linmap = tf.tile([row], [tile_size, 1])</strong> File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gen_array_ops.py\", line 8430, in tile \"Tile\", input=input, multiples=multiples, name=name) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/op_def_library.py\", line 510, in _apply_op_helper preferred_dtype=default_dtype) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 1104, in internal_convert_to_tensor ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/array_ops.py\", line 1034, in _autopacking_conversion_function return _autopacking_helper(v, inferred_dtype, name or \"packed\") File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/array_ops.py\", line 997, in _autopacking_helper return gen_array_ops.pack(elems_as_tensors, name=scope) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gen_array_ops.py\", line 4517, in pack \"Pack\", values=values, axis=axis, name=name) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/op_def_library.py\", line 787, in _apply_op_helper op_def=op_def) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 3392, in create_op op_def=op_def) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 1718, in <strong>init</strong> self._traceback = self._graph._extract_stack() # pylint: disable=protected-access InvalidArgumentError (see above for traceback): Cannot assign a device for operation 'tower_3/Tile_7/input': Could not satisfy explicit device specification '/device:GPU:3' because <strong>no supported kernel for GPU devices is available</strong>. Registered kernels: device='CPU'; T in [DT_QINT32] device='CPU'; T in [DT_QUINT8] device='CPU'; T in [DT_QINT8] device='CPU'; T in [DT_VARIANT] device='CPU'; T in [DT_RESOURCE] device='CPU'; T in [DT_STRING] device='CPU'; T in [DT_BOOL] device='CPU'; T in [DT_COMPLEX128] device='CPU'; T in [DT_COMPLEX64] device='CPU'; T in [DT_DOUBLE] device='CPU'; T in [DT_FLOAT] device='CPU'; T in [DT_BFLOAT16] device='CPU'; T in [DT_HALF] device='CPU'; T in [DT_INT8] device='CPU'; T in [DT_UINT8] device='CPU'; T in [DT_INT16] device='CPU'; T in [DT_UINT16] device='CPU'; T in [DT_INT32] device='CPU'; T in [DT_INT64] device='GPU'; T in [DT_INT32] device='GPU'; T in [DT_BOOL] device='GPU'; T in [DT_INT64] device='GPU'; T in [DT_BFLOAT16] device='GPU'; T in [DT_DOUBLE] device='GPU'; T in [DT_FLOAT] device='GPU'; T in [DT_HALF] [[Node: tower_3/Tile_7/input = Pack<a href=\"tower_3/Cast_4\">N=1, T=DT_INT16, axis=0, _device=\"/device:GPU:3\"</a>]]</p>", "body_text": "Have I written custom code (as opposed to using a stock example script provided in TensorFlow): YES\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): ML Engine default\nTensorFlow installed from (source or binary): ML Engine default\nTensorFlow version (use command below): 1.8\nPython version: 2.6\nBazel version (if compiling from source): N/A\nGCC/Compiler version (if compiling from source): N/A\nCUDA/cuDNN version: ML Engine default\nGPU model and memory: NVIDIA Tesla K80\nExact command to reproduce: N/A\n\nMirroredStrategy fails with \"no supported kernel for GPU devices is available\". The same code works on a single GPU.\nTraceback:\nTraceback (most recent call last): File \"/usr/lib/python2.7/runpy.py\", line 174, in _run_module_as_main \"main\", fname, loader, pkg_name) File \"/usr/lib/python2.7/runpy.py\", line 72, in _run_code exec code in run_globals File \"/root/.local/lib/python2.7/site-packages/trainer_yolo/main.py\", line 188, in  main(sys.argv) File \"/root/.local/lib/python2.7/site-packages/trainer_yolo/main.py\", line 184, in main start_training(output_dir, hparams, **otherargs) File \"/root/.local/lib/python2.7/site-packages/trainer_yolo/main.py\", line 131, in start_training tf.estimator.train_and_evaluate(estimator, train_spec, eval_spec) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/estimator/training.py\", line 439, in train_and_evaluate executor.run() File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/estimator/training.py\", line 546, in run getattr(self, task_to_run)() File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/estimator/training.py\", line 601, in run_master self._start_distributed_training(saving_listeners=saving_listeners) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/estimator/training.py\", line 739, in _start_distributed_training saving_listeners=saving_listeners) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/estimator/estimator.py\", line 363, in train loss = self._train_model(input_fn, hooks, saving_listeners) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/estimator/estimator.py\", line 841, in _train_model return self._train_model_distributed(input_fn, hooks, saving_listeners) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/estimator/estimator.py\", line 977, in _train_model_distributed saving_listeners) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/estimator/estimator.py\", line 1056, in _train_with_estimator_spec log_step_count_steps=self._config.log_step_count_steps) as mon_sess: File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/monitored_session.py\", line 405, in MonitoredTrainingSession stop_grace_period_secs=stop_grace_period_secs) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/monitored_session.py\", line 816, in init stop_grace_period_secs=stop_grace_period_secs) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/monitored_session.py\", line 539, in init self._sess = _RecoverableSession(self._coordinated_creator) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/monitored_session.py\", line 1002, in init _WrappedSession.init(self, self._create_session()) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/monitored_session.py\", line 1007, in _create_session return self._sess_creator.create_session() File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/monitored_session.py\", line 696, in create_session self.tf_sess = self._session_creator.create_session() File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/monitored_session.py\", line 467, in create_session init_fn=self._scaffold.init_fn) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/session_manager.py\", line 285, in prepare_session sess.run(init_op, feed_dict=init_feed_dict) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 900, in run run_metadata_ptr) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1135, in _run feed_dict_tensor, options, run_metadata) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1316, in _do_run run_metadata) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1335, in _do_call raise type(e)(node_def, op, message) InvalidArgumentError: Cannot assign a device for operation 'tower_3/Tile_7/input': Could not satisfy explicit device specification '/device:GPU:3' because no supported kernel for GPU devices is available. Registered kernels: device='CPU'; T in [DT_QINT32] device='CPU'; T in [DT_QUINT8] device='CPU'; T in [DT_QINT8] device='CPU'; T in [DT_VARIANT] device='CPU'; T in [DT_RESOURCE] device='CPU'; T in [DT_STRING] device='CPU'; T in [DT_BOOL] device='CPU'; T in [DT_COMPLEX128] device='CPU'; T in [DT_COMPLEX64] device='CPU'; T in [DT_DOUBLE] device='CPU'; T in [DT_FLOAT] device='CPU'; T in [DT_BFLOAT16] device='CPU'; T in [DT_HALF] device='CPU'; T in [DT_INT8] device='CPU'; T in [DT_UINT8] device='CPU'; T in [DT_INT16] device='CPU'; T in [DT_UINT16] device='CPU'; T in [DT_INT32] device='CPU'; T in [DT_INT64] device='GPU'; T in [DT_INT32] device='GPU'; T in [DT_BOOL] device='GPU'; T in [DT_INT64] device='GPU'; T in [DT_BFLOAT16] device='GPU'; T in [DT_DOUBLE] device='GPU'; T in [DT_FLOAT] device='GPU'; T in [DT_HALF] [[Node: tower_3/Tile_7/input = PackN=1, T=DT_INT16, axis=0, _device=\"/device:GPU:3\"]] Caused by op u'tower_3/Tile_7/input', defined at: File \"/usr/lib/python2.7/threading.py\", line 774, in __bootstrap self.__bootstrap_inner() File \"/usr/lib/python2.7/threading.py\", line 801, in __bootstrap_inner self.run() File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/distribute/python/mirrored_strategy.py\", line 465, in run self.main_result = self.main_fn(*self.main_args, **self.main_kwargs) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/estimator/estimator.py\", line 831, in _call_model_fn model_fn_results = self._model_fn(features=features, **kwargs) File \"/root/.local/lib/python2.7/site-packages/trainer_yolo/model.py\", line 230, in model_fn iou_accuracy = box.compute_safe_IOU(target_rois, detected_rois, detected_rois_overflow, settings.TILE_SIZE) File \"/root/.local/lib/python2.7/site-packages/trainer_yolo/utils_box.py\", line 521, in compute_safe_IOU iou_accuracy = IOUCalculator.batch_intersection_over_union(detected_rois * tile_size, target_rois * tile_size, tile_size=tile_size) File \"/root/.local/lib/python2.7/site-packages/trainer_yolo/utils_box.py\", line 476, in batch_intersection_over_union linmap2 = cls.__iou_gen_linmap(batch, n2, tile_size) File \"/root/.local/lib/python2.7/site-packages/trainer_yolo/utils_box.py\", line 428, in __iou_gen_linmap linmap = tf.tile([row], [tile_size, 1]) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gen_array_ops.py\", line 8430, in tile \"Tile\", input=input, multiples=multiples, name=name) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/op_def_library.py\", line 510, in _apply_op_helper preferred_dtype=default_dtype) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 1104, in internal_convert_to_tensor ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/array_ops.py\", line 1034, in _autopacking_conversion_function return _autopacking_helper(v, inferred_dtype, name or \"packed\") File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/array_ops.py\", line 997, in _autopacking_helper return gen_array_ops.pack(elems_as_tensors, name=scope) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gen_array_ops.py\", line 4517, in pack \"Pack\", values=values, axis=axis, name=name) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/op_def_library.py\", line 787, in _apply_op_helper op_def=op_def) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 3392, in create_op op_def=op_def) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 1718, in init self._traceback = self._graph._extract_stack() # pylint: disable=protected-access InvalidArgumentError (see above for traceback): Cannot assign a device for operation 'tower_3/Tile_7/input': Could not satisfy explicit device specification '/device:GPU:3' because no supported kernel for GPU devices is available. Registered kernels: device='CPU'; T in [DT_QINT32] device='CPU'; T in [DT_QUINT8] device='CPU'; T in [DT_QINT8] device='CPU'; T in [DT_VARIANT] device='CPU'; T in [DT_RESOURCE] device='CPU'; T in [DT_STRING] device='CPU'; T in [DT_BOOL] device='CPU'; T in [DT_COMPLEX128] device='CPU'; T in [DT_COMPLEX64] device='CPU'; T in [DT_DOUBLE] device='CPU'; T in [DT_FLOAT] device='CPU'; T in [DT_BFLOAT16] device='CPU'; T in [DT_HALF] device='CPU'; T in [DT_INT8] device='CPU'; T in [DT_UINT8] device='CPU'; T in [DT_INT16] device='CPU'; T in [DT_UINT16] device='CPU'; T in [DT_INT32] device='CPU'; T in [DT_INT64] device='GPU'; T in [DT_INT32] device='GPU'; T in [DT_BOOL] device='GPU'; T in [DT_INT64] device='GPU'; T in [DT_BFLOAT16] device='GPU'; T in [DT_DOUBLE] device='GPU'; T in [DT_FLOAT] device='GPU'; T in [DT_HALF] [[Node: tower_3/Tile_7/input = PackN=1, T=DT_INT16, axis=0, _device=\"/device:GPU:3\"]]", "body": "- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: YES\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: ML Engine default\r\n- **TensorFlow installed from (source or binary)**: ML Engine default\r\n- **TensorFlow version (use command below)**: 1.8\r\n- **Python version**: 2.6\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: ML Engine default\r\n- **GPU model and memory**: NVIDIA Tesla K80\r\n- **Exact command to reproduce**: N/A\r\n\r\nMirroredStrategy fails with \"no supported kernel for GPU devices is available\". The same code works on a single GPU.\r\n\r\nTraceback:\r\nTraceback (most recent call last): File \"/usr/lib/python2.7/runpy.py\", line 174, in _run_module_as_main \"__main__\", fname, loader, pkg_name) File \"/usr/lib/python2.7/runpy.py\", line 72, in _run_code exec code in run_globals File \"/root/.local/lib/python2.7/site-packages/trainer_yolo/main.py\", line 188, in <module> main(sys.argv) File \"/root/.local/lib/python2.7/site-packages/trainer_yolo/main.py\", line 184, in main start_training(output_dir, hparams, **otherargs) File \"/root/.local/lib/python2.7/site-packages/trainer_yolo/main.py\", line 131, in start_training tf.estimator.train_and_evaluate(estimator, train_spec, eval_spec) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/estimator/training.py\", line 439, in train_and_evaluate executor.run() File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/estimator/training.py\", line 546, in run getattr(self, task_to_run)() File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/estimator/training.py\", line 601, in run_master self._start_distributed_training(saving_listeners=saving_listeners) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/estimator/training.py\", line 739, in _start_distributed_training saving_listeners=saving_listeners) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/estimator/estimator.py\", line 363, in train loss = self._train_model(input_fn, hooks, saving_listeners) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/estimator/estimator.py\", line 841, in _train_model return self._train_model_distributed(input_fn, hooks, saving_listeners) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/estimator/estimator.py\", line 977, in _train_model_distributed saving_listeners) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/estimator/estimator.py\", line 1056, in _train_with_estimator_spec log_step_count_steps=self._config.log_step_count_steps) as mon_sess: File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/monitored_session.py\", line 405, in MonitoredTrainingSession stop_grace_period_secs=stop_grace_period_secs) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/monitored_session.py\", line 816, in __init__ stop_grace_period_secs=stop_grace_period_secs) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/monitored_session.py\", line 539, in __init__ self._sess = _RecoverableSession(self._coordinated_creator) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/monitored_session.py\", line 1002, in __init__ _WrappedSession.__init__(self, self._create_session()) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/monitored_session.py\", line 1007, in _create_session return self._sess_creator.create_session() File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/monitored_session.py\", line 696, in create_session self.tf_sess = self._session_creator.create_session() File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/monitored_session.py\", line 467, in create_session init_fn=self._scaffold.init_fn) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/session_manager.py\", line 285, in prepare_session sess.run(init_op, feed_dict=init_feed_dict) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 900, in run run_metadata_ptr) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1135, in _run feed_dict_tensor, options, run_metadata) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1316, in _do_run run_metadata) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1335, in _do_call raise type(e)(node_def, op, message) InvalidArgumentError: Cannot assign a device for operation 'tower_3/Tile_7/input': Could not satisfy explicit device specification '/device:GPU:3' because **no supported kernel for GPU devices is available**. Registered kernels: device='CPU'; T in [DT_QINT32] device='CPU'; T in [DT_QUINT8] device='CPU'; T in [DT_QINT8] device='CPU'; T in [DT_VARIANT] device='CPU'; T in [DT_RESOURCE] device='CPU'; T in [DT_STRING] device='CPU'; T in [DT_BOOL] device='CPU'; T in [DT_COMPLEX128] device='CPU'; T in [DT_COMPLEX64] device='CPU'; T in [DT_DOUBLE] device='CPU'; T in [DT_FLOAT] device='CPU'; T in [DT_BFLOAT16] device='CPU'; T in [DT_HALF] device='CPU'; T in [DT_INT8] device='CPU'; T in [DT_UINT8] device='CPU'; T in [DT_INT16] device='CPU'; T in [DT_UINT16] device='CPU'; T in [DT_INT32] device='CPU'; T in [DT_INT64] device='GPU'; T in [DT_INT32] device='GPU'; T in [DT_BOOL] device='GPU'; T in [DT_INT64] device='GPU'; T in [DT_BFLOAT16] device='GPU'; T in [DT_DOUBLE] device='GPU'; T in [DT_FLOAT] device='GPU'; T in [DT_HALF] [[Node: tower_3/Tile_7/input = Pack[N=1, T=DT_INT16, axis=0, _device=\"/device:GPU:3\"](tower_3/Cast_4)]] Caused by op u'tower_3/Tile_7/input', defined at: File \"/usr/lib/python2.7/threading.py\", line 774, in __bootstrap self.__bootstrap_inner() File \"/usr/lib/python2.7/threading.py\", line 801, in __bootstrap_inner self.run() File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/distribute/python/mirrored_strategy.py\", line 465, in run self.main_result = self.main_fn(*self.main_args, **self.main_kwargs) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/estimator/estimator.py\", line 831, in _call_model_fn model_fn_results = self._model_fn(features=features, **kwargs) File \"/root/.local/lib/python2.7/site-packages/trainer_yolo/model.py\", line 230, in model_fn iou_accuracy = box.compute_safe_IOU(target_rois, detected_rois, detected_rois_overflow, settings.TILE_SIZE) File \"/root/.local/lib/python2.7/site-packages/trainer_yolo/utils_box.py\", line 521, in compute_safe_IOU iou_accuracy = IOUCalculator.batch_intersection_over_union(detected_rois * tile_size, target_rois * tile_size, tile_size=tile_size) File \"/root/.local/lib/python2.7/site-packages/trainer_yolo/utils_box.py\", line 476, in batch_intersection_over_union linmap2 = cls.__iou_gen_linmap(batch, n2, tile_size) File \"/root/.local/lib/python2.7/site-packages/trainer_yolo/utils_box.py\", **line 428, in __iou_gen_linmap linmap = tf.tile([row], [tile_size, 1])** File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gen_array_ops.py\", line 8430, in tile \"Tile\", input=input, multiples=multiples, name=name) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/op_def_library.py\", line 510, in _apply_op_helper preferred_dtype=default_dtype) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 1104, in internal_convert_to_tensor ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/array_ops.py\", line 1034, in _autopacking_conversion_function return _autopacking_helper(v, inferred_dtype, name or \"packed\") File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/array_ops.py\", line 997, in _autopacking_helper return gen_array_ops.pack(elems_as_tensors, name=scope) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gen_array_ops.py\", line 4517, in pack \"Pack\", values=values, axis=axis, name=name) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/op_def_library.py\", line 787, in _apply_op_helper op_def=op_def) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 3392, in create_op op_def=op_def) File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 1718, in __init__ self._traceback = self._graph._extract_stack() # pylint: disable=protected-access InvalidArgumentError (see above for traceback): Cannot assign a device for operation 'tower_3/Tile_7/input': Could not satisfy explicit device specification '/device:GPU:3' because **no supported kernel for GPU devices is available**. Registered kernels: device='CPU'; T in [DT_QINT32] device='CPU'; T in [DT_QUINT8] device='CPU'; T in [DT_QINT8] device='CPU'; T in [DT_VARIANT] device='CPU'; T in [DT_RESOURCE] device='CPU'; T in [DT_STRING] device='CPU'; T in [DT_BOOL] device='CPU'; T in [DT_COMPLEX128] device='CPU'; T in [DT_COMPLEX64] device='CPU'; T in [DT_DOUBLE] device='CPU'; T in [DT_FLOAT] device='CPU'; T in [DT_BFLOAT16] device='CPU'; T in [DT_HALF] device='CPU'; T in [DT_INT8] device='CPU'; T in [DT_UINT8] device='CPU'; T in [DT_INT16] device='CPU'; T in [DT_UINT16] device='CPU'; T in [DT_INT32] device='CPU'; T in [DT_INT64] device='GPU'; T in [DT_INT32] device='GPU'; T in [DT_BOOL] device='GPU'; T in [DT_INT64] device='GPU'; T in [DT_BFLOAT16] device='GPU'; T in [DT_DOUBLE] device='GPU'; T in [DT_FLOAT] device='GPU'; T in [DT_HALF] [[Node: tower_3/Tile_7/input = Pack[N=1, T=DT_INT16, axis=0, _device=\"/device:GPU:3\"](tower_3/Cast_4)]]\r\n"}