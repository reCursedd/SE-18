{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/222337783", "html_url": "https://github.com/tensorflow/tensorflow/issues/2255#issuecomment-222337783", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2255", "id": 222337783, "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjMzNzc4Mw==", "user": {"login": "khaotik", "id": 6271084, "node_id": "MDQ6VXNlcjYyNzEwODQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/6271084?v=4", "gravatar_id": "", "url": "https://api.github.com/users/khaotik", "html_url": "https://github.com/khaotik", "followers_url": "https://api.github.com/users/khaotik/followers", "following_url": "https://api.github.com/users/khaotik/following{/other_user}", "gists_url": "https://api.github.com/users/khaotik/gists{/gist_id}", "starred_url": "https://api.github.com/users/khaotik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/khaotik/subscriptions", "organizations_url": "https://api.github.com/users/khaotik/orgs", "repos_url": "https://api.github.com/users/khaotik/repos", "events_url": "https://api.github.com/users/khaotik/events{/privacy}", "received_events_url": "https://api.github.com/users/khaotik/received_events", "type": "User", "site_admin": false}, "created_at": "2016-05-29T01:36:53Z", "updated_at": "2016-05-29T01:46:50Z", "author_association": "NONE", "body_html": "<p>I'm trying to implement unitary RNN and I have exactly the same issue. It appears TF can't calculate complex gradient through transpose op. But otherwise complex gradient works well.</p>\n<pre><code>    out_ = vec_in * diag0\n    refl0 = normalize_c(refl0)\n    refl1 = normalize_c(refl1)\n    out_ = refl_c(math_ops.batch_fft(out_)*fft_scale,refl0)\n    out_ = diag1 * tf.transpose(tf.gather(tf.transpose(out_), perm0))\n    #above line works if changed to out_=diag1 * out_\n    out_ = diag2 * refl_c(math_ops.batch_ifft(out_)*fft_scale, refl1)\n</code></pre>\n<p>Error message:</p>\n<pre><code>File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/ops/gradients.py\", line 481, in gradients\n    in_grads = _AsList(grad_fn(op, *out_grads))\n  File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/ops/array_grad.py\", line 260, in _TransposeGrad\n    return [array_ops.transpose(grad, array_ops.invert_permutation(p)), None]\n  File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/ops/array_ops.py\", line 694, in transpose\n    ret = gen_array_ops.transpose(a, perm, name=name)\n  File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/ops/gen_array_ops.py\", line 1905, in transpose\n    result = _op_def_lib.apply_op(\"Transpose\", x=x, perm=perm, name=name)\n  File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/ops/op_def_library.py\", line 455, in apply_op\n    as_ref=input_arg.is_ref)\n  File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/ops.py\", line 620, in convert_to_tensor\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n  File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/ops/gradients.py\", line 94, in _IndexedSlicesToTensor\n    name=name)\n  File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/ops/gen_math_ops.py\", line 2147, in unsorted_segment_sum\n    num_segments=num_segments, name=name)\n  File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/ops/op_def_library.py\", line 530, in apply_op\n    _Attr(op_def, input_arg.type_attr))\n  File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/ops/op_def_library.py\", line 61, in _SatisfiesTypeConstraint\n    \", \".join(dtypes.as_dtype(x).name for x in allowed_list)))\nTypeError: DataType complex64 for attr 'T' not in list of allowed values: float32, float64, int32, int64, uint8, int16, int8, uint16, float16\n</code></pre>", "body_text": "I'm trying to implement unitary RNN and I have exactly the same issue. It appears TF can't calculate complex gradient through transpose op. But otherwise complex gradient works well.\n    out_ = vec_in * diag0\n    refl0 = normalize_c(refl0)\n    refl1 = normalize_c(refl1)\n    out_ = refl_c(math_ops.batch_fft(out_)*fft_scale,refl0)\n    out_ = diag1 * tf.transpose(tf.gather(tf.transpose(out_), perm0))\n    #above line works if changed to out_=diag1 * out_\n    out_ = diag2 * refl_c(math_ops.batch_ifft(out_)*fft_scale, refl1)\n\nError message:\nFile \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/ops/gradients.py\", line 481, in gradients\n    in_grads = _AsList(grad_fn(op, *out_grads))\n  File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/ops/array_grad.py\", line 260, in _TransposeGrad\n    return [array_ops.transpose(grad, array_ops.invert_permutation(p)), None]\n  File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/ops/array_ops.py\", line 694, in transpose\n    ret = gen_array_ops.transpose(a, perm, name=name)\n  File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/ops/gen_array_ops.py\", line 1905, in transpose\n    result = _op_def_lib.apply_op(\"Transpose\", x=x, perm=perm, name=name)\n  File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/ops/op_def_library.py\", line 455, in apply_op\n    as_ref=input_arg.is_ref)\n  File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/ops.py\", line 620, in convert_to_tensor\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n  File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/ops/gradients.py\", line 94, in _IndexedSlicesToTensor\n    name=name)\n  File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/ops/gen_math_ops.py\", line 2147, in unsorted_segment_sum\n    num_segments=num_segments, name=name)\n  File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/ops/op_def_library.py\", line 530, in apply_op\n    _Attr(op_def, input_arg.type_attr))\n  File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/ops/op_def_library.py\", line 61, in _SatisfiesTypeConstraint\n    \", \".join(dtypes.as_dtype(x).name for x in allowed_list)))\nTypeError: DataType complex64 for attr 'T' not in list of allowed values: float32, float64, int32, int64, uint8, int16, int8, uint16, float16", "body": "I'm trying to implement unitary RNN and I have exactly the same issue. It appears TF can't calculate complex gradient through transpose op. But otherwise complex gradient works well.\n\n```\n    out_ = vec_in * diag0\n    refl0 = normalize_c(refl0)\n    refl1 = normalize_c(refl1)\n    out_ = refl_c(math_ops.batch_fft(out_)*fft_scale,refl0)\n    out_ = diag1 * tf.transpose(tf.gather(tf.transpose(out_), perm0))\n    #above line works if changed to out_=diag1 * out_\n    out_ = diag2 * refl_c(math_ops.batch_ifft(out_)*fft_scale, refl1)\n```\n\nError message:\n\n```\nFile \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/ops/gradients.py\", line 481, in gradients\n    in_grads = _AsList(grad_fn(op, *out_grads))\n  File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/ops/array_grad.py\", line 260, in _TransposeGrad\n    return [array_ops.transpose(grad, array_ops.invert_permutation(p)), None]\n  File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/ops/array_ops.py\", line 694, in transpose\n    ret = gen_array_ops.transpose(a, perm, name=name)\n  File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/ops/gen_array_ops.py\", line 1905, in transpose\n    result = _op_def_lib.apply_op(\"Transpose\", x=x, perm=perm, name=name)\n  File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/ops/op_def_library.py\", line 455, in apply_op\n    as_ref=input_arg.is_ref)\n  File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/ops.py\", line 620, in convert_to_tensor\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n  File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/ops/gradients.py\", line 94, in _IndexedSlicesToTensor\n    name=name)\n  File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/ops/gen_math_ops.py\", line 2147, in unsorted_segment_sum\n    num_segments=num_segments, name=name)\n  File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/ops/op_def_library.py\", line 530, in apply_op\n    _Attr(op_def, input_arg.type_attr))\n  File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/ops/op_def_library.py\", line 61, in _SatisfiesTypeConstraint\n    \", \".join(dtypes.as_dtype(x).name for x in allowed_list)))\nTypeError: DataType complex64 for attr 'T' not in list of allowed values: float32, float64, int32, int64, uint8, int16, int8, uint16, float16\n```\n"}