{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21467", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21467/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21467/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21467/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21467", "id": 348552749, "node_id": "MDU6SXNzdWUzNDg1NTI3NDk=", "number": 21467, "title": "FP16 Batch Matmul still does not run", "user": {"login": "dingsiyu", "id": 21340925, "node_id": "MDQ6VXNlcjIxMzQwOTI1", "avatar_url": "https://avatars0.githubusercontent.com/u/21340925?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dingsiyu", "html_url": "https://github.com/dingsiyu", "followers_url": "https://api.github.com/users/dingsiyu/followers", "following_url": "https://api.github.com/users/dingsiyu/following{/other_user}", "gists_url": "https://api.github.com/users/dingsiyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/dingsiyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dingsiyu/subscriptions", "organizations_url": "https://api.github.com/users/dingsiyu/orgs", "repos_url": "https://api.github.com/users/dingsiyu/repos", "events_url": "https://api.github.com/users/dingsiyu/events{/privacy}", "received_events_url": "https://api.github.com/users/dingsiyu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "smit-hinsu", "id": 1990079, "node_id": "MDQ6VXNlcjE5OTAwNzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1990079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smit-hinsu", "html_url": "https://github.com/smit-hinsu", "followers_url": "https://api.github.com/users/smit-hinsu/followers", "following_url": "https://api.github.com/users/smit-hinsu/following{/other_user}", "gists_url": "https://api.github.com/users/smit-hinsu/gists{/gist_id}", "starred_url": "https://api.github.com/users/smit-hinsu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smit-hinsu/subscriptions", "organizations_url": "https://api.github.com/users/smit-hinsu/orgs", "repos_url": "https://api.github.com/users/smit-hinsu/repos", "events_url": "https://api.github.com/users/smit-hinsu/events{/privacy}", "received_events_url": "https://api.github.com/users/smit-hinsu/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "smit-hinsu", "id": 1990079, "node_id": "MDQ6VXNlcjE5OTAwNzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1990079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smit-hinsu", "html_url": "https://github.com/smit-hinsu", "followers_url": "https://api.github.com/users/smit-hinsu/followers", "following_url": "https://api.github.com/users/smit-hinsu/following{/other_user}", "gists_url": "https://api.github.com/users/smit-hinsu/gists{/gist_id}", "starred_url": "https://api.github.com/users/smit-hinsu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smit-hinsu/subscriptions", "organizations_url": "https://api.github.com/users/smit-hinsu/orgs", "repos_url": "https://api.github.com/users/smit-hinsu/repos", "events_url": "https://api.github.com/users/smit-hinsu/events{/privacy}", "received_events_url": "https://api.github.com/users/smit-hinsu/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-08-08T02:32:23Z", "updated_at": "2018-09-12T01:58:26Z", "closed_at": "2018-09-12T01:36:42Z", "author_association": "NONE", "body_html": "<p><strong>System information</strong></p>\n<p>Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Slightly.</p>\n<p>OS Platform and Distribution : centos6.3</p>\n<p>TensorFlow installed from: conda</p>\n<p>TensorFlow version (use command below): v1.8.0(it already has the code TF_CALL_half(REGISTER_BATCH_MATMUL_GPU);)</p>\n<p>Python version: 3.6</p>\n<p>CUDA/cuDNN version: 9.2</p>\n<p>GPU model and memory: V100</p>\n<p>Exact command to reproduce:</p>\n<p>with tf.device(\"/gpu:0\"):<br>\na = tf.random_normal(dtype=tf.float16, shape=[5, 2, 3], name='a')<br>\nb = tf.random_normal(dtype=tf.float16, shape=[5, 3, 2], name='b')<br>\nc = tf.matmul(a, b)<br>\nsess = tf.Session(config=tf.ConfigProto(log_device_placement=True, allow_soft_placement=False))<br>\nprint(sess.run(c).shape)</p>\n<p>the problem:</p>\n<p>Source code / logs</p>\n<p>InvalidArgumentError (see above for traceback): Cannot assign a device for operation 'MatMul_1': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.<br>\nRegistered kernels:<br>\ndevice='GPU'; T in [DT_DOUBLE]<br>\ndevice='GPU'; T in [DT_FLOAT]<br>\ndevice='GPU'; T in [DT_COMPLEX128]<br>\ndevice='GPU'; T in [DT_COMPLEX64]<br>\ndevice='CPU'; T in [DT_INT32]<br>\ndevice='CPU'; T in [DT_HALF]<br>\ndevice='CPU'; T in [DT_DOUBLE]<br>\ndevice='CPU'; T in [DT_FLOAT]<br>\ndevice='CPU'; T in [DT_COMPLEX128]<br>\ndevice='CPU'; T in [DT_COMPLEX64]</p>\n<pre><code>     [[Node: MatMul_1 = BatchMatMul[T=DT_HALF, adj_x=false, adj_y=false, _device=\"/devic\n</code></pre>", "body_text": "System information\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Slightly.\nOS Platform and Distribution : centos6.3\nTensorFlow installed from: conda\nTensorFlow version (use command below): v1.8.0(it already has the code TF_CALL_half(REGISTER_BATCH_MATMUL_GPU);)\nPython version: 3.6\nCUDA/cuDNN version: 9.2\nGPU model and memory: V100\nExact command to reproduce:\nwith tf.device(\"/gpu:0\"):\na = tf.random_normal(dtype=tf.float16, shape=[5, 2, 3], name='a')\nb = tf.random_normal(dtype=tf.float16, shape=[5, 3, 2], name='b')\nc = tf.matmul(a, b)\nsess = tf.Session(config=tf.ConfigProto(log_device_placement=True, allow_soft_placement=False))\nprint(sess.run(c).shape)\nthe problem:\nSource code / logs\nInvalidArgumentError (see above for traceback): Cannot assign a device for operation 'MatMul_1': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.\nRegistered kernels:\ndevice='GPU'; T in [DT_DOUBLE]\ndevice='GPU'; T in [DT_FLOAT]\ndevice='GPU'; T in [DT_COMPLEX128]\ndevice='GPU'; T in [DT_COMPLEX64]\ndevice='CPU'; T in [DT_INT32]\ndevice='CPU'; T in [DT_HALF]\ndevice='CPU'; T in [DT_DOUBLE]\ndevice='CPU'; T in [DT_FLOAT]\ndevice='CPU'; T in [DT_COMPLEX128]\ndevice='CPU'; T in [DT_COMPLEX64]\n     [[Node: MatMul_1 = BatchMatMul[T=DT_HALF, adj_x=false, adj_y=false, _device=\"/devic", "body": "**System information**\r\n\r\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Slightly.\r\n\r\nOS Platform and Distribution : centos6.3\r\n\r\nTensorFlow installed from: conda\r\n\r\nTensorFlow version (use command below): v1.8.0(it already has the code TF_CALL_half(REGISTER_BATCH_MATMUL_GPU);)\r\n\r\nPython version: 3.6\r\n\r\nCUDA/cuDNN version: 9.2\r\n\r\nGPU model and memory: V100 \r\n\r\nExact command to reproduce:\r\n\r\nwith tf.device(\"/gpu:0\"):\r\n    a = tf.random_normal(dtype=tf.float16, shape=[5, 2, 3], name='a')\r\n    b = tf.random_normal(dtype=tf.float16, shape=[5, 3, 2], name='b')\r\n    c = tf.matmul(a, b)\r\nsess = tf.Session(config=tf.ConfigProto(log_device_placement=True, allow_soft_placement=False))\r\nprint(sess.run(c).shape)\r\n\r\n\r\nthe problem:\r\n\r\nSource code / logs\r\n\r\nInvalidArgumentError (see above for traceback): Cannot assign a device for operation 'MatMul_1': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.\r\nRegistered kernels:\r\n  device='GPU'; T in [DT_DOUBLE]\r\n  device='GPU'; T in [DT_FLOAT]\r\n  device='GPU'; T in [DT_COMPLEX128]\r\n  device='GPU'; T in [DT_COMPLEX64]\r\n  device='CPU'; T in [DT_INT32]\r\n  device='CPU'; T in [DT_HALF]\r\n  device='CPU'; T in [DT_DOUBLE]\r\n  device='CPU'; T in [DT_FLOAT]\r\n  device='CPU'; T in [DT_COMPLEX128]\r\n  device='CPU'; T in [DT_COMPLEX64]\r\n\r\n         [[Node: MatMul_1 = BatchMatMul[T=DT_HALF, adj_x=false, adj_y=false, _device=\"/devic\r\n\r\n\r\n\r\n"}