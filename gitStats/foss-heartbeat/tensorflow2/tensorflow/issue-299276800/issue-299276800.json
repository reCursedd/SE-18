{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17192", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17192/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17192/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17192/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17192", "id": 299276800, "node_id": "MDU6SXNzdWUyOTkyNzY4MDA=", "number": 17192, "title": "TrainingHelper & ScheduledEmbeddingTrainingHelper  GPU Error - works on CPU", "user": {"login": "keotic", "id": 19147264, "node_id": "MDQ6VXNlcjE5MTQ3MjY0", "avatar_url": "https://avatars1.githubusercontent.com/u/19147264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keotic", "html_url": "https://github.com/keotic", "followers_url": "https://api.github.com/users/keotic/followers", "following_url": "https://api.github.com/users/keotic/following{/other_user}", "gists_url": "https://api.github.com/users/keotic/gists{/gist_id}", "starred_url": "https://api.github.com/users/keotic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keotic/subscriptions", "organizations_url": "https://api.github.com/users/keotic/orgs", "repos_url": "https://api.github.com/users/keotic/repos", "events_url": "https://api.github.com/users/keotic/events{/privacy}", "received_events_url": "https://api.github.com/users/keotic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 12, "created_at": "2018-02-22T09:25:46Z", "updated_at": "2018-07-03T00:58:10Z", "closed_at": "2018-07-03T00:55:37Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li>**Have I written custom code **: Yes</li>\n<li><strong>OS Platform and Distribution</strong>:16.04.3 LTS (Xenial Xerus)</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:source</li>\n<li><strong>TensorFlow version (use command below)</strong>:1.4.1</li>\n<li><strong>Python version</strong>: Python 3.5.2</li>\n<li><strong>Bazel version (if compiling from source)</strong>:NA</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:c++ (Ubuntu 5.4.0-6ubuntu1~16.04.6) 5.4.0 20160609</li>\n<li><strong>CUDA/cuDNN version</strong>:CUDA 8.0 / 6.0</li>\n<li><strong>GPU model and memory</strong>:GeForce GTX 1080, 8G RAM, NVIDIA DRIVER: 390.25</li>\n<li><strong>Exact command to reproduce</strong>:NA</li>\n</ul>\n<h3>problem</h3>\n<p>Having trouble running an RNN dynamic decoder on GPU when using the following  decoding helpers:<br>\ntf.contrib.seq2seq.ScheduledEmbeddingTrainingHelper<br>\ntf.contrib.seq2seq.TrainingHelper</p>\n<p>It seems that there is a problem with the sequence length stopping condition, as the problem<br>\nis not present when using  tf.contrib.seq2seq.GreedyEmbeddingHelper as a decoder helper.</p>\n<p>On CPU all functions are working correctly, the problem arise on GPUs only.<br>\nTried on TF-1.4 compiled from source, TF-1.4 installed from pip, and TF-1.5 installed from source.<br>\nThey all fail</p>\n<h3>Error log:</h3>\n<pre><code>NotFoundError (see above for traceback): No registered 'Switch' OpKernel for GPU devices compatible with node Decoders/StackedDecoder_text_rnn_0/decoder/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch = Switch[T=DT_RESOURCE, _class=[\"loc:@Decoders/StackedDecoder_text_rnn_0/ScheduledEmbeddingSamplingWrapper/TrainingHelper/TensorArray\"], _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](Decoders/StackedDecoder_text_rnn_0/ScheduledEmbeddingSamplingWrapper/TrainingHelper/TensorArray/_281, Decoders/StackedDecoder_text_rnn_0/decoder/TrainingHelperInitialize/All)\n\t (OpKernel was found, but attributes didn't match)\n\t.  Registered:  device='GPU'; T in [DT_STRING]\n  device='GPU'; T in [DT_BOOL]\n  device='GPU'; T in [DT_INT32]\n  device='GPU'; T in [DT_COMPLEX128]\n  device='GPU'; T in [DT_COMPLEX64]\n  device='GPU'; T in [DT_INT8]\n  device='GPU'; T in [DT_UINT8]\n  device='GPU'; T in [DT_INT16]\n  device='GPU'; T in [DT_UINT16]\n  device='GPU'; T in [DT_INT64]\n  device='GPU'; T in [DT_DOUBLE]\n  device='GPU'; T in [DT_FLOAT]\n  device='GPU'; T in [DT_HALF]\n  device='CPU'; T in [DT_QINT32]\n  device='CPU'; T in [DT_QUINT8]\n  device='CPU'; T in [DT_QINT8]\n  device='CPU'; T in [DT_RESOURCE]\n  device='CPU'; T in [DT_STRING]\n  device='CPU'; T in [DT_BOOL]\n  device='CPU'; T in [DT_COMPLEX128]\n  device='CPU'; T in [DT_COMPLEX64]\n  device='CPU'; T in [DT_DOUBLE]\n  device='CPU'; T in [DT_FLOAT]\n  device='CPU'; T in [DT_HALF]\n  device='CPU'; T in [DT_INT8]\n  device='CPU'; T in [DT_UINT8]\n  device='CPU'; T in [DT_INT16]\n  device='CPU'; T in [DT_UINT16]\n  device='CPU'; T in [DT_INT32]\n  device='CPU'; T in [DT_INT64]\n\t [[Node: Decoders/StackedDecoder_text_rnn_0/decoder/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch = Switch[T=DT_RESOURCE, _class=[\"loc:@Decoders/StackedDecoder_text_rnn_0/ScheduledEmbeddingSamplingWrapper/TrainingHelper/TensorArray\"], _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](Decoders/StackedDecoder_text_rnn_0/ScheduledEmbeddingSamplingWrapper/TrainingHelper/TensorArray/_281, Decoders/StackedDecoder_text_rnn_0/decoder/TrainingHelperInitialize/All)]]\n</code></pre>", "body_text": "System information\n\n**Have I written custom code **: Yes\nOS Platform and Distribution:16.04.3 LTS (Xenial Xerus)\nTensorFlow installed from (source or binary):source\nTensorFlow version (use command below):1.4.1\nPython version: Python 3.5.2\nBazel version (if compiling from source):NA\nGCC/Compiler version (if compiling from source):c++ (Ubuntu 5.4.0-6ubuntu1~16.04.6) 5.4.0 20160609\nCUDA/cuDNN version:CUDA 8.0 / 6.0\nGPU model and memory:GeForce GTX 1080, 8G RAM, NVIDIA DRIVER: 390.25\nExact command to reproduce:NA\n\nproblem\nHaving trouble running an RNN dynamic decoder on GPU when using the following  decoding helpers:\ntf.contrib.seq2seq.ScheduledEmbeddingTrainingHelper\ntf.contrib.seq2seq.TrainingHelper\nIt seems that there is a problem with the sequence length stopping condition, as the problem\nis not present when using  tf.contrib.seq2seq.GreedyEmbeddingHelper as a decoder helper.\nOn CPU all functions are working correctly, the problem arise on GPUs only.\nTried on TF-1.4 compiled from source, TF-1.4 installed from pip, and TF-1.5 installed from source.\nThey all fail\nError log:\nNotFoundError (see above for traceback): No registered 'Switch' OpKernel for GPU devices compatible with node Decoders/StackedDecoder_text_rnn_0/decoder/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch = Switch[T=DT_RESOURCE, _class=[\"loc:@Decoders/StackedDecoder_text_rnn_0/ScheduledEmbeddingSamplingWrapper/TrainingHelper/TensorArray\"], _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](Decoders/StackedDecoder_text_rnn_0/ScheduledEmbeddingSamplingWrapper/TrainingHelper/TensorArray/_281, Decoders/StackedDecoder_text_rnn_0/decoder/TrainingHelperInitialize/All)\n\t (OpKernel was found, but attributes didn't match)\n\t.  Registered:  device='GPU'; T in [DT_STRING]\n  device='GPU'; T in [DT_BOOL]\n  device='GPU'; T in [DT_INT32]\n  device='GPU'; T in [DT_COMPLEX128]\n  device='GPU'; T in [DT_COMPLEX64]\n  device='GPU'; T in [DT_INT8]\n  device='GPU'; T in [DT_UINT8]\n  device='GPU'; T in [DT_INT16]\n  device='GPU'; T in [DT_UINT16]\n  device='GPU'; T in [DT_INT64]\n  device='GPU'; T in [DT_DOUBLE]\n  device='GPU'; T in [DT_FLOAT]\n  device='GPU'; T in [DT_HALF]\n  device='CPU'; T in [DT_QINT32]\n  device='CPU'; T in [DT_QUINT8]\n  device='CPU'; T in [DT_QINT8]\n  device='CPU'; T in [DT_RESOURCE]\n  device='CPU'; T in [DT_STRING]\n  device='CPU'; T in [DT_BOOL]\n  device='CPU'; T in [DT_COMPLEX128]\n  device='CPU'; T in [DT_COMPLEX64]\n  device='CPU'; T in [DT_DOUBLE]\n  device='CPU'; T in [DT_FLOAT]\n  device='CPU'; T in [DT_HALF]\n  device='CPU'; T in [DT_INT8]\n  device='CPU'; T in [DT_UINT8]\n  device='CPU'; T in [DT_INT16]\n  device='CPU'; T in [DT_UINT16]\n  device='CPU'; T in [DT_INT32]\n  device='CPU'; T in [DT_INT64]\n\t [[Node: Decoders/StackedDecoder_text_rnn_0/decoder/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch = Switch[T=DT_RESOURCE, _class=[\"loc:@Decoders/StackedDecoder_text_rnn_0/ScheduledEmbeddingSamplingWrapper/TrainingHelper/TensorArray\"], _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](Decoders/StackedDecoder_text_rnn_0/ScheduledEmbeddingSamplingWrapper/TrainingHelper/TensorArray/_281, Decoders/StackedDecoder_text_rnn_0/decoder/TrainingHelperInitialize/All)]]", "body": "### System information\r\n- **Have I written custom code **: Yes\r\n- **OS Platform and Distribution**:16.04.3 LTS (Xenial Xerus)\r\n- **TensorFlow installed from (source or binary)**:source\r\n- **TensorFlow version (use command below)**:1.4.1\r\n- **Python version**: Python 3.5.2\r\n- **Bazel version (if compiling from source)**:NA\r\n- **GCC/Compiler version (if compiling from source)**:c++ (Ubuntu 5.4.0-6ubuntu1~16.04.6) 5.4.0 20160609\r\n- **CUDA/cuDNN version**:CUDA 8.0 / 6.0\r\n- **GPU model and memory**:GeForce GTX 1080, 8G RAM, NVIDIA DRIVER: 390.25\r\n- **Exact command to reproduce**:NA\r\n\r\n###  problem\r\nHaving trouble running an RNN dynamic decoder on GPU when using the following  decoding helpers:\r\ntf.contrib.seq2seq.ScheduledEmbeddingTrainingHelper \r\ntf.contrib.seq2seq.TrainingHelper \r\n\r\nIt seems that there is a problem with the sequence length stopping condition, as the problem\r\nis not present when using  tf.contrib.seq2seq.GreedyEmbeddingHelper as a decoder helper.\r\n\r\nOn CPU all functions are working correctly, the problem arise on GPUs only.\r\nTried on TF-1.4 compiled from source, TF-1.4 installed from pip, and TF-1.5 installed from source.\r\nThey all fail\r\n\r\n### Error log:\r\n```\r\nNotFoundError (see above for traceback): No registered 'Switch' OpKernel for GPU devices compatible with node Decoders/StackedDecoder_text_rnn_0/decoder/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch = Switch[T=DT_RESOURCE, _class=[\"loc:@Decoders/StackedDecoder_text_rnn_0/ScheduledEmbeddingSamplingWrapper/TrainingHelper/TensorArray\"], _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](Decoders/StackedDecoder_text_rnn_0/ScheduledEmbeddingSamplingWrapper/TrainingHelper/TensorArray/_281, Decoders/StackedDecoder_text_rnn_0/decoder/TrainingHelperInitialize/All)\r\n\t (OpKernel was found, but attributes didn't match)\r\n\t.  Registered:  device='GPU'; T in [DT_STRING]\r\n  device='GPU'; T in [DT_BOOL]\r\n  device='GPU'; T in [DT_INT32]\r\n  device='GPU'; T in [DT_COMPLEX128]\r\n  device='GPU'; T in [DT_COMPLEX64]\r\n  device='GPU'; T in [DT_INT8]\r\n  device='GPU'; T in [DT_UINT8]\r\n  device='GPU'; T in [DT_INT16]\r\n  device='GPU'; T in [DT_UINT16]\r\n  device='GPU'; T in [DT_INT64]\r\n  device='GPU'; T in [DT_DOUBLE]\r\n  device='GPU'; T in [DT_FLOAT]\r\n  device='GPU'; T in [DT_HALF]\r\n  device='CPU'; T in [DT_QINT32]\r\n  device='CPU'; T in [DT_QUINT8]\r\n  device='CPU'; T in [DT_QINT8]\r\n  device='CPU'; T in [DT_RESOURCE]\r\n  device='CPU'; T in [DT_STRING]\r\n  device='CPU'; T in [DT_BOOL]\r\n  device='CPU'; T in [DT_COMPLEX128]\r\n  device='CPU'; T in [DT_COMPLEX64]\r\n  device='CPU'; T in [DT_DOUBLE]\r\n  device='CPU'; T in [DT_FLOAT]\r\n  device='CPU'; T in [DT_HALF]\r\n  device='CPU'; T in [DT_INT8]\r\n  device='CPU'; T in [DT_UINT8]\r\n  device='CPU'; T in [DT_INT16]\r\n  device='CPU'; T in [DT_UINT16]\r\n  device='CPU'; T in [DT_INT32]\r\n  device='CPU'; T in [DT_INT64]\r\n\t [[Node: Decoders/StackedDecoder_text_rnn_0/decoder/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch = Switch[T=DT_RESOURCE, _class=[\"loc:@Decoders/StackedDecoder_text_rnn_0/ScheduledEmbeddingSamplingWrapper/TrainingHelper/TensorArray\"], _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](Decoders/StackedDecoder_text_rnn_0/ScheduledEmbeddingSamplingWrapper/TrainingHelper/TensorArray/_281, Decoders/StackedDecoder_text_rnn_0/decoder/TrainingHelperInitialize/All)]]\r\n```\r\n"}