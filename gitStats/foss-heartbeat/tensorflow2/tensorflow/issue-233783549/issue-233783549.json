{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10449", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10449/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10449/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10449/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/10449", "id": 233783549, "node_id": "MDU6SXNzdWUyMzM3ODM1NDk=", "number": 10449, "title": "[Feature]Adding automatic model average parallelism support in TF", "user": {"login": "yangjunpro", "id": 407784, "node_id": "MDQ6VXNlcjQwNzc4NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/407784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yangjunpro", "html_url": "https://github.com/yangjunpro", "followers_url": "https://api.github.com/users/yangjunpro/followers", "following_url": "https://api.github.com/users/yangjunpro/following{/other_user}", "gists_url": "https://api.github.com/users/yangjunpro/gists{/gist_id}", "starred_url": "https://api.github.com/users/yangjunpro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yangjunpro/subscriptions", "organizations_url": "https://api.github.com/users/yangjunpro/orgs", "repos_url": "https://api.github.com/users/yangjunpro/repos", "events_url": "https://api.github.com/users/yangjunpro/events{/privacy}", "received_events_url": "https://api.github.com/users/yangjunpro/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390482148, "node_id": "MDU6TGFiZWwzOTA0ODIxNDg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/awaiting%20review", "name": "awaiting review", "color": "fef2c0", "default": false}, {"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2017-06-06T05:33:29Z", "updated_at": "2018-02-06T16:31:13Z", "closed_at": "2018-02-06T16:31:13Z", "author_association": "NONE", "body_html": "<p>Model Average is a common paradigm for distributed DL training, also there are several papers regarding to it and its variants:</p>\n<p>(<a href=\"https://arxiv.org/pdf/1410.7455v8.pdf\" rel=\"nofollow\">https://arxiv.org/pdf/1410.7455v8.pdf</a>)<br>\n(<a href=\"http://www.microsoft.com/en-us/research/wp-content/uploads/2016/08/0005880.pdf\" rel=\"nofollow\">http://www.microsoft.com/en-us/research/wp-content/uploads/2016/08/0005880.pdf</a>)</p>\n<p>Do we have any plan to bring this support into TF? Actually we have already implemented model average support and benchmarked it on several in-house models, the speed up is good, about 3X(4 cards) to 9X(16 cards) convergence speed-up. Also we are working on making the model average mechanism as automatic as possible, so modeling guys could easily leverage this nice feature.</p>\n<p>If TF community is fine with this feature/enhancement, we will be happy to merge our code into community.</p>\n<p>Thanks.</p>", "body_text": "Model Average is a common paradigm for distributed DL training, also there are several papers regarding to it and its variants:\n(https://arxiv.org/pdf/1410.7455v8.pdf)\n(http://www.microsoft.com/en-us/research/wp-content/uploads/2016/08/0005880.pdf)\nDo we have any plan to bring this support into TF? Actually we have already implemented model average support and benchmarked it on several in-house models, the speed up is good, about 3X(4 cards) to 9X(16 cards) convergence speed-up. Also we are working on making the model average mechanism as automatic as possible, so modeling guys could easily leverage this nice feature.\nIf TF community is fine with this feature/enhancement, we will be happy to merge our code into community.\nThanks.", "body": "Model Average is a common paradigm for distributed DL training, also there are several papers regarding to it and its variants:\r\n\r\n(https://arxiv.org/pdf/1410.7455v8.pdf)\r\n(http://www.microsoft.com/en-us/research/wp-content/uploads/2016/08/0005880.pdf)\r\n\r\nDo we have any plan to bring this support into TF? Actually we have already implemented model average support and benchmarked it on several in-house models, the speed up is good, about 3X(4 cards) to 9X(16 cards) convergence speed-up. Also we are working on making the model average mechanism as automatic as possible, so modeling guys could easily leverage this nice feature.\r\n\r\nIf TF community is fine with this feature/enhancement, we will be happy to merge our code into community.\r\n\r\nThanks.\r\n\r\n"}