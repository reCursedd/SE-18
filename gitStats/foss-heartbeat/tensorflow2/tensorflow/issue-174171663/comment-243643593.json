{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/243643593", "html_url": "https://github.com/tensorflow/tensorflow/issues/4114#issuecomment-243643593", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4114", "id": 243643593, "node_id": "MDEyOklzc3VlQ29tbWVudDI0MzY0MzU5Mw==", "user": {"login": "tobegit3hub", "id": 2715000, "node_id": "MDQ6VXNlcjI3MTUwMDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/2715000?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tobegit3hub", "html_url": "https://github.com/tobegit3hub", "followers_url": "https://api.github.com/users/tobegit3hub/followers", "following_url": "https://api.github.com/users/tobegit3hub/following{/other_user}", "gists_url": "https://api.github.com/users/tobegit3hub/gists{/gist_id}", "starred_url": "https://api.github.com/users/tobegit3hub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tobegit3hub/subscriptions", "organizations_url": "https://api.github.com/users/tobegit3hub/orgs", "repos_url": "https://api.github.com/users/tobegit3hub/repos", "events_url": "https://api.github.com/users/tobegit3hub/events{/privacy}", "received_events_url": "https://api.github.com/users/tobegit3hub/received_events", "type": "User", "site_admin": false}, "created_at": "2016-08-31T02:50:15Z", "updated_at": "2016-08-31T02:50:15Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1794715\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ebrevdo\">@ebrevdo</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=192142\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mrry\">@mrry</a> can you guys help?</p>\n<p>I thinks it's an general scenario but we have no idea to implement it with TensorFlow. We have implemented the logistic regression model with the same dataset in Spark. It iterates each example without batching and doesn't have this issue. We can also fill up the <code>unknown</code> data with zeros or default values but this is some kind of inefficient because actually we don't need to compute their variables.</p>", "body_text": "@ebrevdo @mrry can you guys help?\nI thinks it's an general scenario but we have no idea to implement it with TensorFlow. We have implemented the logistic regression model with the same dataset in Spark. It iterates each example without batching and doesn't have this issue. We can also fill up the unknown data with zeros or default values but this is some kind of inefficient because actually we don't need to compute their variables.", "body": "@ebrevdo @mrry can you guys help?\n\nI thinks it's an general scenario but we have no idea to implement it with TensorFlow. We have implemented the logistic regression model with the same dataset in Spark. It iterates each example without batching and doesn't have this issue. We can also fill up the `unknown` data with zeros or default values but this is some kind of inefficient because actually we don't need to compute their variables.\n"}