{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12781", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12781/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12781/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12781/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/12781", "id": 254893052, "node_id": "MDU6SXNzdWUyNTQ4OTMwNTI=", "number": 12781, "title": "Compile from source on Skylake-X (Intel i9)", "user": {"login": "armafire", "id": 8807976, "node_id": "MDQ6VXNlcjg4MDc5NzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/8807976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/armafire", "html_url": "https://github.com/armafire", "followers_url": "https://api.github.com/users/armafire/followers", "following_url": "https://api.github.com/users/armafire/following{/other_user}", "gists_url": "https://api.github.com/users/armafire/gists{/gist_id}", "starred_url": "https://api.github.com/users/armafire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/armafire/subscriptions", "organizations_url": "https://api.github.com/users/armafire/orgs", "repos_url": "https://api.github.com/users/armafire/repos", "events_url": "https://api.github.com/users/armafire/events{/privacy}", "received_events_url": "https://api.github.com/users/armafire/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}, {"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2017-09-03T18:47:27Z", "updated_at": "2018-02-23T00:28:54Z", "closed_at": "2018-02-23T00:28:54Z", "author_association": "NONE", "body_html": "<p>Hello,</p>\n<p>Compiling tensorflow source on Skylake-X Intel i9 with \"--config=opt\" gives the following error in the snappy external module:</p>\n<hr>\n<blockquote>\n<p>ERROR: /home/armafire/.cache/bazel/<em>bazel_armafire/efbef35334c587b69e16a82829bb0e2d/external/snappy/BUILD:19:1: C++ compilation of rule '@snappy//:snappy' failed (Exit 1): crosstool_wrapper_driver_is_not_gcc failed: error executing command<br>\n(cd /home/armafire/.cache/bazel/<em>bazel_armafire/efbef35334c587b69e16a82829bb0e2d/execroot/org_tensorflow &amp;&amp; <br>\nexec env - <br>\nCUDA_TOOLKIT_PATH=/usr/local/cuda <br>\nCUDNN_INSTALL_PATH=/usr/local/cuda-8.0 <br>\nGCC_HOST_COMPILER_PATH=/usr/bin/gcc <br>\nPWD=/proc/self/cwd <br>\nPYTHON_BIN_PATH=/usr/bin/python <br>\nPYTHON_LIB_PATH=/usr/local/lib/python2.7/dist-packages <br>\nTF_CUDA_CLANG=0 <br>\nTF_CUDA_COMPUTE_CAPABILITIES=6.1 <br>\nTF_CUDA_VERSION=8.0 <br>\nTF_CUDNN_VERSION=6 <br>\nTF_NEED_CUDA=1 <br>\nTF_NEED_OPENCL=0 <br>\nexternal/local_config_cuda/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc -U_FORTIFY_SOURCE '-D_FORTIFY_SOURCE=1' -fstack-protector -fPIE -Wall -Wunused-but-set-parameter -Wno-free-nonheap-object -fno-omit-frame-pointer -g0 -O2 -DNDEBUG -ffunction-sections -fdata-sections '-march=native' '-std=c++11' '-march=native' -MD -MF bazel-out/local_linux-opt/bin/external/snappy/<em>objs/snappy/external/snappy/snappy.pic.d '-frandom-seed=bazel-out/local_linux-opt/bin/external/snappy/<em>objs/snappy/external/snappy/snappy.pic.o' -fPIC -iquote external/snappy -iquote bazel-out/local_linux-opt/genfiles/external/snappy -iquote external/bazel_tools -iquote bazel-out/local_linux-opt/genfiles/external/bazel_tools -isystem external/bazel_tools/tools/cpp/gcc3 -Wno-shift-negative-value -Wno-implicit-function-declaration -no-canonical-prefixes -Wno-builtin-macro-redefined '-D__DATE</em></em>=\"redacted\"' '-D__TIMESTAMP</em></em>=\"redacted\"' '-D__TIME__=\"redacted\"' -fno-canonical-system-headers -c external/snappy/snappy.cc -o bazel-out/local_linux-opt/bin/external/snappy/<em>objs/snappy/external/snappy/snappy.pic.o)<br>\ncc1plus: warning: command line option '-Wno-implicit-function-declaration' is valid for C/ObjC but not for C++<br>\nexternal/snappy/snappy.cc: In member function 'void snappy::SnappySinkAllocator::Flush(size_t)':<br>\nexternal/snappy/snappy.cc:1403:23: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]<br>\nfor (int i = 0; i &lt; blocks</em>.size(); ++i) {<br>\n~~^~~~~~~~~~~~~~~~<br>\nIn file included from external/snappy/snappy-internal.h:34:0,<br>\nfrom external/snappy/snappy.cc:30:<br>\nexternal/snappy/snappy.cc: In instantiation of 'bool snappy::SnappyScatteredWriter::AppendFromSelf(size_t, size_t) [with Allocator = snappy::SnappySinkAllocator; size_t = long unsigned int]':<br>\nexternal/snappy/snappy.cc:715:13:   required from 'void snappy::SnappyDecompressor::DecompressAllTags(Writer*) [with Writer = snappy::SnappyScatteredWritersnappy::SnappySinkAllocator]'<br>\nexternal/snappy/snappy.cc:799:3:   required from 'bool snappy::InternalUncompressAllTags(snappy::SnappyDecompressor*, Writer*, snappy::uint32) [with Writer = snappy::SnappyScatteredWritersnappy::SnappySinkAllocator; snappy::uint32 = unsigned int]'<br>\nexternal/snappy/snappy.cc:1460:78:   required from here<br>\nexternal/snappy/snappy.cc:1316:34: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]<br>\nif (PREDICT_TRUE(offset - 1u &lt; op_ptr_ - op_base_ &amp;&amp; op_end &lt;= op_limit_)) {<br>\n~~~~~~~~~~~~^~~~~~~~~~~~~<br>\nexternal/snappy/snappy-stubs-internal.h:80:25: note: in definition of macro 'PREDICT_TRUE'<br>\n#define PREDICT_TRUE(x) x<br>\n^<br>\n/tmp/ccxBWytY.s: Assembler messages:<br>\n<strong><em>/tmp/ccxBWytY.s:389: Error: no such instruction: <code>kmovq %rdx,%k3' /tmp/ccxBWytY.s:391: Error: no such instruction: </code>kshiftrq $32,%k3,%k2'<br>\n/tmp/ccxBWytY.s:394: Error: no such instruction: <code>kmovq %k2,%rdx' /tmp/ccxBWytY.s:600: Error: no such instruction: </code>kmovq %rsi,%k1'<br>\n/tmp/ccxBWytY.s:602: Error: no such instruction: <code>kshiftrq $32,%k1,%k0' /tmp/ccxBWytY.s:605: Error: no such instruction: </code>kmovq %k0,%rsi'</em></strong><br>\nTarget //tensorflow/tools/pip_package:build_pip_package failed to build<br>\nINFO: Elapsed time: 34.595s, Critical Path: 14.66s<br>\nFAILED: Build did NOT complete successfully</p>\n</blockquote>\n<hr>\n<p>The command I use is:</p>\n<p>bazel build --config=opt -c opt //tensorflow/tools/pip_package:build_pip_package --verbose_failures -j 64</p>\n<p>If I change to --config=mkl, then it compiles fine. Therefore, it seems that the problem is \"--march=native\" (generated by \"--config=opt\"), which forces the snappy module to generate AVX512, however, the generated assembly is not correct for Skylake-X Intel i9 (which supports AVX512). I tried \"--march=skylake-avx512\" and all other AVX512 options like \"-mavx512f\" and similar, and all result in the same error.</p>\n<p>My goal is to compile tensorflow with Eigen AVX512. Any ideas how this can be done?</p>", "body_text": "Hello,\nCompiling tensorflow source on Skylake-X Intel i9 with \"--config=opt\" gives the following error in the snappy external module:\n\n\nERROR: /home/armafire/.cache/bazel/bazel_armafire/efbef35334c587b69e16a82829bb0e2d/external/snappy/BUILD:19:1: C++ compilation of rule '@snappy//:snappy' failed (Exit 1): crosstool_wrapper_driver_is_not_gcc failed: error executing command\n(cd /home/armafire/.cache/bazel/bazel_armafire/efbef35334c587b69e16a82829bb0e2d/execroot/org_tensorflow && \nexec env - \nCUDA_TOOLKIT_PATH=/usr/local/cuda \nCUDNN_INSTALL_PATH=/usr/local/cuda-8.0 \nGCC_HOST_COMPILER_PATH=/usr/bin/gcc \nPWD=/proc/self/cwd \nPYTHON_BIN_PATH=/usr/bin/python \nPYTHON_LIB_PATH=/usr/local/lib/python2.7/dist-packages \nTF_CUDA_CLANG=0 \nTF_CUDA_COMPUTE_CAPABILITIES=6.1 \nTF_CUDA_VERSION=8.0 \nTF_CUDNN_VERSION=6 \nTF_NEED_CUDA=1 \nTF_NEED_OPENCL=0 \nexternal/local_config_cuda/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc -U_FORTIFY_SOURCE '-D_FORTIFY_SOURCE=1' -fstack-protector -fPIE -Wall -Wunused-but-set-parameter -Wno-free-nonheap-object -fno-omit-frame-pointer -g0 -O2 -DNDEBUG -ffunction-sections -fdata-sections '-march=native' '-std=c++11' '-march=native' -MD -MF bazel-out/local_linux-opt/bin/external/snappy/objs/snappy/external/snappy/snappy.pic.d '-frandom-seed=bazel-out/local_linux-opt/bin/external/snappy/objs/snappy/external/snappy/snappy.pic.o' -fPIC -iquote external/snappy -iquote bazel-out/local_linux-opt/genfiles/external/snappy -iquote external/bazel_tools -iquote bazel-out/local_linux-opt/genfiles/external/bazel_tools -isystem external/bazel_tools/tools/cpp/gcc3 -Wno-shift-negative-value -Wno-implicit-function-declaration -no-canonical-prefixes -Wno-builtin-macro-redefined '-D__DATE=\"redacted\"' '-D__TIMESTAMP=\"redacted\"' '-D__TIME__=\"redacted\"' -fno-canonical-system-headers -c external/snappy/snappy.cc -o bazel-out/local_linux-opt/bin/external/snappy/objs/snappy/external/snappy/snappy.pic.o)\ncc1plus: warning: command line option '-Wno-implicit-function-declaration' is valid for C/ObjC but not for C++\nexternal/snappy/snappy.cc: In member function 'void snappy::SnappySinkAllocator::Flush(size_t)':\nexternal/snappy/snappy.cc:1403:23: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\nfor (int i = 0; i < blocks.size(); ++i) {\n~~^~~~~~~~~~~~~~~~\nIn file included from external/snappy/snappy-internal.h:34:0,\nfrom external/snappy/snappy.cc:30:\nexternal/snappy/snappy.cc: In instantiation of 'bool snappy::SnappyScatteredWriter::AppendFromSelf(size_t, size_t) [with Allocator = snappy::SnappySinkAllocator; size_t = long unsigned int]':\nexternal/snappy/snappy.cc:715:13:   required from 'void snappy::SnappyDecompressor::DecompressAllTags(Writer*) [with Writer = snappy::SnappyScatteredWritersnappy::SnappySinkAllocator]'\nexternal/snappy/snappy.cc:799:3:   required from 'bool snappy::InternalUncompressAllTags(snappy::SnappyDecompressor*, Writer*, snappy::uint32) [with Writer = snappy::SnappyScatteredWritersnappy::SnappySinkAllocator; snappy::uint32 = unsigned int]'\nexternal/snappy/snappy.cc:1460:78:   required from here\nexternal/snappy/snappy.cc:1316:34: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\nif (PREDICT_TRUE(offset - 1u < op_ptr_ - op_base_ && op_end <= op_limit_)) {\n~~~~~~~~~~~~^~~~~~~~~~~~~\nexternal/snappy/snappy-stubs-internal.h:80:25: note: in definition of macro 'PREDICT_TRUE'\n#define PREDICT_TRUE(x) x\n^\n/tmp/ccxBWytY.s: Assembler messages:\n/tmp/ccxBWytY.s:389: Error: no such instruction: kmovq %rdx,%k3' /tmp/ccxBWytY.s:391: Error: no such instruction: kshiftrq $32,%k3,%k2'\n/tmp/ccxBWytY.s:394: Error: no such instruction: kmovq %k2,%rdx' /tmp/ccxBWytY.s:600: Error: no such instruction: kmovq %rsi,%k1'\n/tmp/ccxBWytY.s:602: Error: no such instruction: kshiftrq $32,%k1,%k0' /tmp/ccxBWytY.s:605: Error: no such instruction: kmovq %k0,%rsi'\nTarget //tensorflow/tools/pip_package:build_pip_package failed to build\nINFO: Elapsed time: 34.595s, Critical Path: 14.66s\nFAILED: Build did NOT complete successfully\n\n\nThe command I use is:\nbazel build --config=opt -c opt //tensorflow/tools/pip_package:build_pip_package --verbose_failures -j 64\nIf I change to --config=mkl, then it compiles fine. Therefore, it seems that the problem is \"--march=native\" (generated by \"--config=opt\"), which forces the snappy module to generate AVX512, however, the generated assembly is not correct for Skylake-X Intel i9 (which supports AVX512). I tried \"--march=skylake-avx512\" and all other AVX512 options like \"-mavx512f\" and similar, and all result in the same error.\nMy goal is to compile tensorflow with Eigen AVX512. Any ideas how this can be done?", "body": "Hello,\r\n\r\nCompiling tensorflow source on Skylake-X Intel i9 with \"--config=opt\" gives the following error in the snappy external module:\r\n\r\n-----------------------\r\n\r\n> ERROR: /home/armafire/.cache/bazel/_bazel_armafire/efbef35334c587b69e16a82829bb0e2d/external/snappy/BUILD:19:1: C++ compilation of rule '@snappy//:snappy' failed (Exit 1): crosstool_wrapper_driver_is_not_gcc failed: error executing command \r\n>   (cd /home/armafire/.cache/bazel/_bazel_armafire/efbef35334c587b69e16a82829bb0e2d/execroot/org_tensorflow && \\\r\n>   exec env - \\\r\n>     CUDA_TOOLKIT_PATH=/usr/local/cuda \\\r\n>     CUDNN_INSTALL_PATH=/usr/local/cuda-8.0 \\\r\n>     GCC_HOST_COMPILER_PATH=/usr/bin/gcc \\\r\n>     PWD=/proc/self/cwd \\\r\n>     PYTHON_BIN_PATH=/usr/bin/python \\\r\n>     PYTHON_LIB_PATH=/usr/local/lib/python2.7/dist-packages \\\r\n>     TF_CUDA_CLANG=0 \\\r\n>     TF_CUDA_COMPUTE_CAPABILITIES=6.1 \\\r\n>     TF_CUDA_VERSION=8.0 \\\r\n>     TF_CUDNN_VERSION=6 \\\r\n>     TF_NEED_CUDA=1 \\\r\n>     TF_NEED_OPENCL=0 \\\r\n>   external/local_config_cuda/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc -U_FORTIFY_SOURCE '-D_FORTIFY_SOURCE=1' -fstack-protector -fPIE -Wall -Wunused-but-set-parameter -Wno-free-nonheap-object -fno-omit-frame-pointer -g0 -O2 -DNDEBUG -ffunction-sections -fdata-sections '-march=native' '-std=c++11' '-march=native' -MD -MF bazel-out/local_linux-opt/bin/external/snappy/_objs/snappy/external/snappy/snappy.pic.d '-frandom-seed=bazel-out/local_linux-opt/bin/external/snappy/_objs/snappy/external/snappy/snappy.pic.o' -fPIC -iquote external/snappy -iquote bazel-out/local_linux-opt/genfiles/external/snappy -iquote external/bazel_tools -iquote bazel-out/local_linux-opt/genfiles/external/bazel_tools -isystem external/bazel_tools/tools/cpp/gcc3 -Wno-shift-negative-value -Wno-implicit-function-declaration -no-canonical-prefixes -Wno-builtin-macro-redefined '-D__DATE__=\"redacted\"' '-D__TIMESTAMP__=\"redacted\"' '-D__TIME__=\"redacted\"' -fno-canonical-system-headers -c external/snappy/snappy.cc -o bazel-out/local_linux-opt/bin/external/snappy/_objs/snappy/external/snappy/snappy.pic.o)\r\n> cc1plus: warning: command line option '-Wno-implicit-function-declaration' is valid for C/ObjC but not for C++\r\n> external/snappy/snappy.cc: In member function 'void snappy::SnappySinkAllocator::Flush(size_t)':\r\n> external/snappy/snappy.cc:1403:23: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\r\n>      for (int i = 0; i < blocks_.size(); ++i) {\r\n>                      ~~^~~~~~~~~~~~~~~~\r\n> In file included from external/snappy/snappy-internal.h:34:0,\r\n>                  from external/snappy/snappy.cc:30:\r\n> external/snappy/snappy.cc: In instantiation of 'bool snappy::SnappyScatteredWriter<Allocator>::AppendFromSelf(size_t, size_t) [with Allocator = snappy::SnappySinkAllocator; size_t = long unsigned int]':\r\n> external/snappy/snappy.cc:715:13:   required from 'void snappy::SnappyDecompressor::DecompressAllTags(Writer*) [with Writer = snappy::SnappyScatteredWriter<snappy::SnappySinkAllocator>]'\r\n> external/snappy/snappy.cc:799:3:   required from 'bool snappy::InternalUncompressAllTags(snappy::SnappyDecompressor*, Writer*, snappy::uint32) [with Writer = snappy::SnappyScatteredWriter<snappy::SnappySinkAllocator>; snappy::uint32 = unsigned int]'\r\n> external/snappy/snappy.cc:1460:78:   required from here\r\n> external/snappy/snappy.cc:1316:34: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\r\n>      if (PREDICT_TRUE(offset - 1u < op_ptr_ - op_base_ && op_end <= op_limit_)) {\r\n>                       ~~~~~~~~~~~~^~~~~~~~~~~~~\r\n> external/snappy/snappy-stubs-internal.h:80:25: note: in definition of macro 'PREDICT_TRUE'\r\n>  #define PREDICT_TRUE(x) x\r\n>                          ^\r\n> /tmp/ccxBWytY.s: Assembler messages:\r\n> **_/tmp/ccxBWytY.s:389: Error: no such instruction: `kmovq %rdx,%k3'\r\n> /tmp/ccxBWytY.s:391: Error: no such instruction: `kshiftrq $32,%k3,%k2'\r\n> /tmp/ccxBWytY.s:394: Error: no such instruction: `kmovq %k2,%rdx'\r\n> /tmp/ccxBWytY.s:600: Error: no such instruction: `kmovq %rsi,%k1'\r\n> /tmp/ccxBWytY.s:602: Error: no such instruction: `kshiftrq $32,%k1,%k0'\r\n> /tmp/ccxBWytY.s:605: Error: no such instruction: `kmovq %k0,%rsi'_**\r\n> Target //tensorflow/tools/pip_package:build_pip_package failed to build\r\n> INFO: Elapsed time: 34.595s, Critical Path: 14.66s\r\n> FAILED: Build did NOT complete successfully\r\n\r\n-----------------------\r\n\r\nThe command I use is:\r\n\r\nbazel build --config=opt -c opt //tensorflow/tools/pip_package:build_pip_package --verbose_failures -j 64\r\n\r\nIf I change to --config=mkl, then it compiles fine. Therefore, it seems that the problem is \"--march=native\" (generated by \"--config=opt\"), which forces the snappy module to generate AVX512, however, the generated assembly is not correct for Skylake-X Intel i9 (which supports AVX512). I tried \"--march=skylake-avx512\" and all other AVX512 options like \"-mavx512f\" and similar, and all result in the same error.\r\n\r\nMy goal is to compile tensorflow with Eigen AVX512. Any ideas how this can be done?"}