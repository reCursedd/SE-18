{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1066", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1066/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1066/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1066/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/1066", "id": 133111577, "node_id": "MDU6SXNzdWUxMzMxMTE1Nzc=", "number": 1066, "title": "build fail with cuda: identifier \"__builtin_ia32_mwaitx\" is undefined", "user": {"login": "nlgranger", "id": 3764009, "node_id": "MDQ6VXNlcjM3NjQwMDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/3764009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlgranger", "html_url": "https://github.com/nlgranger", "followers_url": "https://api.github.com/users/nlgranger/followers", "following_url": "https://api.github.com/users/nlgranger/following{/other_user}", "gists_url": "https://api.github.com/users/nlgranger/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlgranger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlgranger/subscriptions", "organizations_url": "https://api.github.com/users/nlgranger/orgs", "repos_url": "https://api.github.com/users/nlgranger/repos", "events_url": "https://api.github.com/users/nlgranger/events{/privacy}", "received_events_url": "https://api.github.com/users/nlgranger/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 284463744, "node_id": "MDU6TGFiZWwyODQ0NjM3NDQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cuda", "name": "cuda", "color": "f7c6c7", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2016-02-11T23:06:14Z", "updated_at": "2016-07-01T16:13:04Z", "closed_at": "2016-07-01T16:13:04Z", "author_association": "NONE", "body_html": "<p>Using gcc 5 with cuda support results in a compilation error:</p>\n<pre><code>INFO: From Compiling tensorflow/core/kernels/adjust_contrast_op_gpu.cu.cc:\n\n# Omitting warnings\n\n/usr/lib/gcc/x86_64-unknown-linux-gnu/5.3.0/include/mwaitxintrin.h(36): error: identifier \"__builtin_ia32_monitorx\" is undefined\n\n/usr/lib/gcc/x86_64-unknown-linux-gnu/5.3.0/include/mwaitxintrin.h(42): error: identifier \"__builtin_ia32_mwaitx\" is undefined\n\n2 errors detected in the compilation of \"/tmp/tmpxft_00002a59_00000000-7_adjust_contrast_op_gpu.cu.cpp1.ii\".\n</code></pre>\n<p>Build process is as follows:</p>\n<pre><code>  TF_UNOFFICIAL_SETTING=1 ./configure &lt;&lt;EOF\n/usr/bin/python\ny\n7.5\n/opt/cuda\n4.0.7\n/opt/cuda\n5.2\nEOF\n\n    bazel build --jobs 4 --config=cuda -c opt --verbose_failures \\\n        //tensorflow/tools/pip_package:build_pip_package\n</code></pre>\n<p>The environnement is:</p>\n<ul>\n<li>bazel 0.1.5-1</li>\n<li>cuda 7.5</li>\n<li>cudnn 4</li>\n<li>gcc 5.3.0</li>\n<li>boost 1.60 (is it even relevant?)</li>\n<li>python3.5 (/usr/bin/python is python3)</li>\n</ul>\n<p>This issue might be related to boost 1.60 or gcc 5 as mentioned <a href=\"http://stackoverflow.com/questions/34996295/trying-to-get-cuda-7-5-to-work-with-gcc-5-x\" rel=\"nofollow\">here</a> or <a href=\"https://medicineyeh.wordpress.com/2016/01/19/how-to-build-nvidia-caffe-deep-learning-on-arch-linux/\" rel=\"nofollow\">there</a>.<br>\nOne suggested fix is to restrict gcc to ansi c++, which can be achieved like so:</p>\n<div class=\"highlight highlight-source-diff\"><pre><span class=\"pl-c1\">diff --git a/third_party/gpus/crosstool/CROSSTOOL b/third_party/gpus/crosstool/CROSSTOOL</span>\nindex dfde7cd..547441f 100644\n<span class=\"pl-md\">--- a/third_party/gpus/crosstool/CROSSTOOL</span>\n<span class=\"pl-mi1\">+++ b/third_party/gpus/crosstool/CROSSTOOL</span>\n<span class=\"pl-mdr\">@@ -46,6 +46,8 @@</span> toolchain {\n   # Use \"-std=c++11\" for nvcc. For consistency, force both the host compiler\n   # and the device compiler to use \"-std=c++11\".\n   cxx_flag: \"-std=c++11\"\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>  cxx_flag: \"-D_MWAITXINTRIN_H_INCLUDED\"</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>  cxx_flag: \"-D__STRICT_ANSI__\"</span>\n   linker_flag: \"-lstdc++\"\n   linker_flag: \"-B/usr/bin/\"</pre></div>\n<p>(btw. thank you <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=463737\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vrv\">@vrv</a> for telling which file to change).</p>\n<p>Could anyone please kindly review this, and integrate it (or not)? Note that I am not quite sure wether both flags are actually required and what the side effects might be.</p>", "body_text": "Using gcc 5 with cuda support results in a compilation error:\nINFO: From Compiling tensorflow/core/kernels/adjust_contrast_op_gpu.cu.cc:\n\n# Omitting warnings\n\n/usr/lib/gcc/x86_64-unknown-linux-gnu/5.3.0/include/mwaitxintrin.h(36): error: identifier \"__builtin_ia32_monitorx\" is undefined\n\n/usr/lib/gcc/x86_64-unknown-linux-gnu/5.3.0/include/mwaitxintrin.h(42): error: identifier \"__builtin_ia32_mwaitx\" is undefined\n\n2 errors detected in the compilation of \"/tmp/tmpxft_00002a59_00000000-7_adjust_contrast_op_gpu.cu.cpp1.ii\".\n\nBuild process is as follows:\n  TF_UNOFFICIAL_SETTING=1 ./configure <<EOF\n/usr/bin/python\ny\n7.5\n/opt/cuda\n4.0.7\n/opt/cuda\n5.2\nEOF\n\n    bazel build --jobs 4 --config=cuda -c opt --verbose_failures \\\n        //tensorflow/tools/pip_package:build_pip_package\n\nThe environnement is:\n\nbazel 0.1.5-1\ncuda 7.5\ncudnn 4\ngcc 5.3.0\nboost 1.60 (is it even relevant?)\npython3.5 (/usr/bin/python is python3)\n\nThis issue might be related to boost 1.60 or gcc 5 as mentioned here or there.\nOne suggested fix is to restrict gcc to ansi c++, which can be achieved like so:\ndiff --git a/third_party/gpus/crosstool/CROSSTOOL b/third_party/gpus/crosstool/CROSSTOOL\nindex dfde7cd..547441f 100644\n--- a/third_party/gpus/crosstool/CROSSTOOL\n+++ b/third_party/gpus/crosstool/CROSSTOOL\n@@ -46,6 +46,8 @@ toolchain {\n   # Use \"-std=c++11\" for nvcc. For consistency, force both the host compiler\n   # and the device compiler to use \"-std=c++11\".\n   cxx_flag: \"-std=c++11\"\n+  cxx_flag: \"-D_MWAITXINTRIN_H_INCLUDED\"\n+  cxx_flag: \"-D__STRICT_ANSI__\"\n   linker_flag: \"-lstdc++\"\n   linker_flag: \"-B/usr/bin/\"\n(btw. thank you @vrv for telling which file to change).\nCould anyone please kindly review this, and integrate it (or not)? Note that I am not quite sure wether both flags are actually required and what the side effects might be.", "body": "Using gcc 5 with cuda support results in a compilation error:\n\n```\nINFO: From Compiling tensorflow/core/kernels/adjust_contrast_op_gpu.cu.cc:\n\n# Omitting warnings\n\n/usr/lib/gcc/x86_64-unknown-linux-gnu/5.3.0/include/mwaitxintrin.h(36): error: identifier \"__builtin_ia32_monitorx\" is undefined\n\n/usr/lib/gcc/x86_64-unknown-linux-gnu/5.3.0/include/mwaitxintrin.h(42): error: identifier \"__builtin_ia32_mwaitx\" is undefined\n\n2 errors detected in the compilation of \"/tmp/tmpxft_00002a59_00000000-7_adjust_contrast_op_gpu.cu.cpp1.ii\".\n```\n\nBuild process is as follows:\n\n```\n  TF_UNOFFICIAL_SETTING=1 ./configure <<EOF\n/usr/bin/python\ny\n7.5\n/opt/cuda\n4.0.7\n/opt/cuda\n5.2\nEOF\n\n    bazel build --jobs 4 --config=cuda -c opt --verbose_failures \\\n        //tensorflow/tools/pip_package:build_pip_package\n```\n\nThe environnement is:\n- bazel 0.1.5-1\n- cuda 7.5\n- cudnn 4\n- gcc 5.3.0\n- boost 1.60 (is it even relevant?)\n- python3.5 (/usr/bin/python is python3)\n\nThis issue might be related to boost 1.60 or gcc 5 as mentioned [here](http://stackoverflow.com/questions/34996295/trying-to-get-cuda-7-5-to-work-with-gcc-5-x) or [there](https://medicineyeh.wordpress.com/2016/01/19/how-to-build-nvidia-caffe-deep-learning-on-arch-linux/).\nOne suggested fix is to restrict gcc to ansi c++, which can be achieved like so:\n\n``` diff\ndiff --git a/third_party/gpus/crosstool/CROSSTOOL b/third_party/gpus/crosstool/CROSSTOOL\nindex dfde7cd..547441f 100644\n--- a/third_party/gpus/crosstool/CROSSTOOL\n+++ b/third_party/gpus/crosstool/CROSSTOOL\n@@ -46,6 +46,8 @@ toolchain {\n   # Use \"-std=c++11\" for nvcc. For consistency, force both the host compiler\n   # and the device compiler to use \"-std=c++11\".\n   cxx_flag: \"-std=c++11\"\n+  cxx_flag: \"-D_MWAITXINTRIN_H_INCLUDED\"\n+  cxx_flag: \"-D__STRICT_ANSI__\"\n   linker_flag: \"-lstdc++\"\n   linker_flag: \"-B/usr/bin/\"\n```\n\n(btw. thank you @vrv for telling which file to change).\n\nCould anyone please kindly review this, and integrate it (or not)? Note that I am not quite sure wether both flags are actually required and what the side effects might be.\n"}