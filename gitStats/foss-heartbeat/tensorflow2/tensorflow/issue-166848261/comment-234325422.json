{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/234325422", "html_url": "https://github.com/tensorflow/tensorflow/issues/3444#issuecomment-234325422", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3444", "id": 234325422, "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDMyNTQyMg==", "user": {"login": "andrewharp", "id": 3376817, "node_id": "MDQ6VXNlcjMzNzY4MTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/3376817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewharp", "html_url": "https://github.com/andrewharp", "followers_url": "https://api.github.com/users/andrewharp/followers", "following_url": "https://api.github.com/users/andrewharp/following{/other_user}", "gists_url": "https://api.github.com/users/andrewharp/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewharp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewharp/subscriptions", "organizations_url": "https://api.github.com/users/andrewharp/orgs", "repos_url": "https://api.github.com/users/andrewharp/repos", "events_url": "https://api.github.com/users/andrewharp/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewharp/received_events", "type": "User", "site_admin": false}, "created_at": "2016-07-21T17:30:57Z", "updated_at": "2016-07-21T18:24:48Z", "author_association": "MEMBER", "body_html": "<p>Hi, I've just given this a whirl and managed to successfully open the Android Tensorflow Demo under Android Studio and build it from there. You'll still need Bazel for building the native libs, but you'll be able to get full Java support through Android Studio.</p>\n<p>Some of these steps are shared with<br>\n<a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/android/README.md\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/android/README.md</a>, so feel free to skip if you've already done them.</p>\n<p><strong>Instructions:</strong><br>\nDownload and install bazel 0.3.0 for your system: <a href=\"https://github.com/bazelbuild/bazel/releases\">https://github.com/bazelbuild/bazel/releases</a></p>\n<p>Download Android NDK r11c and unzip it somewhere:</p>\n<ul>\n<li>osx: <a href=\"https://dl.google.com/android/repository/android-ndk-r11c-darwin-x86_64.zip\" rel=\"nofollow\">https://dl.google.com/android/repository/android-ndk-r11c-darwin-x86_64.zip</a></li>\n<li>linux: <a href=\"http://dl.google.com/android/repository/android-ndk-r11c-linux-x86_64.zip\" rel=\"nofollow\">http://dl.google.com/android/repository/android-ndk-r11c-linux-x86_64.zip</a></li>\n</ul>\n<p><strong>Clone repo:</strong></p>\n<pre><code>git clone --recursive https://github.com/tensorflow/tensorflow/\ncd tensorflow\n</code></pre>\n<p>Now edit <code>WORKSPACE</code> to point to your NDK (the SDK should be unnecessary, since only AS will be using it, not Bazel).</p>\n<p><strong>Install Assets for Demo:</strong></p>\n<pre><code>wget https://storage.googleapis.com/download.tensorflow.org/models/inception5h.zip -O /tmp/inception5h.zip\nunzip /tmp/inception5h.zip -d tensorflow/examples/android/assets/\n</code></pre>\n<p><strong>Build native libs:</strong></p>\n<pre><code>CPU=armeabi-v7a\nbazel build //tensorflow/examples/android:tensorflow_native_libs --crosstool_top=//external:android/crosstool --cpu=$CPU --host_crosstool_top=@bazel_tools//tools/cpp:toolchain\n\nNATIVE_FOLDER=tensorflow/examples/android/libs/$CPU\nmkdir -p $NATIVE_FOLDER\ncp bazel-bin/tensorflow/examples/android/libtensorflow_demo.so $NATIVE_FOLDER \n</code></pre>\n<p><strong>Set up the Android Studio project:</strong></p>\n<ul>\n<li>Select \"Open an existing Android Studio project\" (it's not, but don't worry about that)</li>\n<li>It will detect an AndroidManifest.xml, and ask you to configure. Do so.</li>\n<li>Open \"File/Project Structure\"\n<ul>\n<li>click \"Modules\"\n<ul>\n<li>select the \"android\" module (not the \"Android\" below it)\n<ul>\n<li>On the \"Sources\" tab, make sure that res is a resource directory, and src is a source directory.</li>\n<li>On the \"Paths\" tab, make sure that the paths are set to a directory you want to output to.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><strong>Build the APK</strong><br>\nUnder Build, click \"Generate Signed APK\"</p>\n<p>With any luck, this should create a working APK! <strong>You'll need to re-run the \"Build Native Libs\" instructions any time you modify .cc or .h files</strong>, but you should be able to edit the Java code as you normally would for any other Android project.</p>\n<p>In the future we may better support Android Studio with cmake support, so that some of these steps would be unnecessary.</p>", "body_text": "Hi, I've just given this a whirl and managed to successfully open the Android Tensorflow Demo under Android Studio and build it from there. You'll still need Bazel for building the native libs, but you'll be able to get full Java support through Android Studio.\nSome of these steps are shared with\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/android/README.md, so feel free to skip if you've already done them.\nInstructions:\nDownload and install bazel 0.3.0 for your system: https://github.com/bazelbuild/bazel/releases\nDownload Android NDK r11c and unzip it somewhere:\n\nosx: https://dl.google.com/android/repository/android-ndk-r11c-darwin-x86_64.zip\nlinux: http://dl.google.com/android/repository/android-ndk-r11c-linux-x86_64.zip\n\nClone repo:\ngit clone --recursive https://github.com/tensorflow/tensorflow/\ncd tensorflow\n\nNow edit WORKSPACE to point to your NDK (the SDK should be unnecessary, since only AS will be using it, not Bazel).\nInstall Assets for Demo:\nwget https://storage.googleapis.com/download.tensorflow.org/models/inception5h.zip -O /tmp/inception5h.zip\nunzip /tmp/inception5h.zip -d tensorflow/examples/android/assets/\n\nBuild native libs:\nCPU=armeabi-v7a\nbazel build //tensorflow/examples/android:tensorflow_native_libs --crosstool_top=//external:android/crosstool --cpu=$CPU --host_crosstool_top=@bazel_tools//tools/cpp:toolchain\n\nNATIVE_FOLDER=tensorflow/examples/android/libs/$CPU\nmkdir -p $NATIVE_FOLDER\ncp bazel-bin/tensorflow/examples/android/libtensorflow_demo.so $NATIVE_FOLDER \n\nSet up the Android Studio project:\n\nSelect \"Open an existing Android Studio project\" (it's not, but don't worry about that)\nIt will detect an AndroidManifest.xml, and ask you to configure. Do so.\nOpen \"File/Project Structure\"\n\nclick \"Modules\"\n\nselect the \"android\" module (not the \"Android\" below it)\n\nOn the \"Sources\" tab, make sure that res is a resource directory, and src is a source directory.\nOn the \"Paths\" tab, make sure that the paths are set to a directory you want to output to.\n\n\n\n\n\n\n\nBuild the APK\nUnder Build, click \"Generate Signed APK\"\nWith any luck, this should create a working APK! You'll need to re-run the \"Build Native Libs\" instructions any time you modify .cc or .h files, but you should be able to edit the Java code as you normally would for any other Android project.\nIn the future we may better support Android Studio with cmake support, so that some of these steps would be unnecessary.", "body": "Hi, I've just given this a whirl and managed to successfully open the Android Tensorflow Demo under Android Studio and build it from there. You'll still need Bazel for building the native libs, but you'll be able to get full Java support through Android Studio.\n\nSome of these steps are shared with\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/android/README.md, so feel free to skip if you've already done them.\n\n**Instructions:**\nDownload and install bazel 0.3.0 for your system: https://github.com/bazelbuild/bazel/releases\n\nDownload Android NDK r11c and unzip it somewhere:\n- osx: https://dl.google.com/android/repository/android-ndk-r11c-darwin-x86_64.zip\n- linux: http://dl.google.com/android/repository/android-ndk-r11c-linux-x86_64.zip\n\n**Clone repo:**\n\n```\ngit clone --recursive https://github.com/tensorflow/tensorflow/\ncd tensorflow\n```\n\nNow edit `WORKSPACE` to point to your NDK (the SDK should be unnecessary, since only AS will be using it, not Bazel).\n\n**Install Assets for Demo:**\n\n```\nwget https://storage.googleapis.com/download.tensorflow.org/models/inception5h.zip -O /tmp/inception5h.zip\nunzip /tmp/inception5h.zip -d tensorflow/examples/android/assets/\n```\n\n**Build native libs:**\n\n```\nCPU=armeabi-v7a\nbazel build //tensorflow/examples/android:tensorflow_native_libs --crosstool_top=//external:android/crosstool --cpu=$CPU --host_crosstool_top=@bazel_tools//tools/cpp:toolchain\n\nNATIVE_FOLDER=tensorflow/examples/android/libs/$CPU\nmkdir -p $NATIVE_FOLDER\ncp bazel-bin/tensorflow/examples/android/libtensorflow_demo.so $NATIVE_FOLDER \n```\n\n**Set up the Android Studio project:**\n- Select \"Open an existing Android Studio project\" (it's not, but don't worry about that)\n- It will detect an AndroidManifest.xml, and ask you to configure. Do so.\n- Open \"File/Project Structure\"\n  - click \"Modules\"\n    - select the \"android\" module (not the \"Android\" below it)\n      - On the \"Sources\" tab, make sure that res is a resource directory, and src is a source directory.\n      - On the \"Paths\" tab, make sure that the paths are set to a directory you want to output to.\n\n**Build the APK**\nUnder Build, click \"Generate Signed APK\"\n\nWith any luck, this should create a working APK! **You'll need to re-run the \"Build Native Libs\" instructions any time you modify .cc or .h files**, but you should be able to edit the Java code as you normally would for any other Android project.\n\nIn the future we may better support Android Studio with cmake support, so that some of these steps would be unnecessary.\n"}