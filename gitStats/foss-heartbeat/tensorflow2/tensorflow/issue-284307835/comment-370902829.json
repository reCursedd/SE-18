{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/370902829", "html_url": "https://github.com/tensorflow/tensorflow/issues/15604#issuecomment-370902829", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15604", "id": 370902829, "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDkwMjgyOQ==", "user": {"login": "dartdog", "id": 87834, "node_id": "MDQ6VXNlcjg3ODM0", "avatar_url": "https://avatars2.githubusercontent.com/u/87834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dartdog", "html_url": "https://github.com/dartdog", "followers_url": "https://api.github.com/users/dartdog/followers", "following_url": "https://api.github.com/users/dartdog/following{/other_user}", "gists_url": "https://api.github.com/users/dartdog/gists{/gist_id}", "starred_url": "https://api.github.com/users/dartdog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dartdog/subscriptions", "organizations_url": "https://api.github.com/users/dartdog/orgs", "repos_url": "https://api.github.com/users/dartdog/repos", "events_url": "https://api.github.com/users/dartdog/events{/privacy}", "received_events_url": "https://api.github.com/users/dartdog/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-06T19:40:54Z", "updated_at": "2018-03-06T19:42:28Z", "author_association": "NONE", "body_html": "<p>And this is why availability of a binary that supports 9.1 would be nice: (from the TF1.6 release notes)</p>\n<p>Using XLA:GPU with CUDA 9 and CUDA 9.1 results in garbage results and/or<br>\nCUDA_ILLEGAL_ADDRESS failures.</p>\n<p>Google discovered in mid-December 2017 that the PTX-to-SASS compiler in CUDA 9<br>\nand CUDA 9.1 sometimes does not properly compute the carry bit when<br>\ndecomposing 64-bit address calculations with large offsets (e.g. load [x + large_constant]) into 32-bit arithmetic in SASS.</p>\n<p>As a result, these versions of ptxas miscompile most XLA programs which use<br>\nmore than 4GB of temp memory. This results in garbage results and/or<br>\nCUDA_ERROR_ILLEGAL_ADDRESS failures.</p>\n<p>A fix in CUDA 9.1.121 is expected in late February 2018. We do not expect a<br>\nfix for CUDA 9.0.x. Until the fix is available, the only workaround is to<br>\ndowngrade to CUDA 8.0.x<br>\nor disable XLA:GPU.</p>\n<p>Maybe one of the nightlies does it?</p>", "body_text": "And this is why availability of a binary that supports 9.1 would be nice: (from the TF1.6 release notes)\nUsing XLA:GPU with CUDA 9 and CUDA 9.1 results in garbage results and/or\nCUDA_ILLEGAL_ADDRESS failures.\nGoogle discovered in mid-December 2017 that the PTX-to-SASS compiler in CUDA 9\nand CUDA 9.1 sometimes does not properly compute the carry bit when\ndecomposing 64-bit address calculations with large offsets (e.g. load [x + large_constant]) into 32-bit arithmetic in SASS.\nAs a result, these versions of ptxas miscompile most XLA programs which use\nmore than 4GB of temp memory. This results in garbage results and/or\nCUDA_ERROR_ILLEGAL_ADDRESS failures.\nA fix in CUDA 9.1.121 is expected in late February 2018. We do not expect a\nfix for CUDA 9.0.x. Until the fix is available, the only workaround is to\ndowngrade to CUDA 8.0.x\nor disable XLA:GPU.\nMaybe one of the nightlies does it?", "body": "And this is why availability of a binary that supports 9.1 would be nice: (from the TF1.6 release notes)\r\n\r\nUsing XLA:GPU with CUDA 9 and CUDA 9.1 results in garbage results and/or\r\nCUDA_ILLEGAL_ADDRESS failures.\r\n\r\nGoogle discovered in mid-December 2017 that the PTX-to-SASS compiler in CUDA 9\r\nand CUDA 9.1 sometimes does not properly compute the carry bit when\r\ndecomposing 64-bit address calculations with large offsets (e.g. load [x + large_constant]) into 32-bit arithmetic in SASS.\r\n\r\nAs a result, these versions of ptxas miscompile most XLA programs which use\r\nmore than 4GB of temp memory. This results in garbage results and/or\r\nCUDA_ERROR_ILLEGAL_ADDRESS failures.\r\n\r\nA fix in CUDA 9.1.121 is expected in late February 2018. We do not expect a\r\nfix for CUDA 9.0.x. Until the fix is available, the only workaround is to\r\ndowngrade to CUDA 8.0.x\r\nor disable XLA:GPU.\r\n\r\nMaybe one of the nightlies does it?"}