{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/44562218", "pull_request_review_id": null, "id": 44562218, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTYyMjE4", "diff_hunk": "@@ -198,10 +255,14 @@ def run_benchmark():\n     sess.run(init)\n \n     # Run the forward benchmark.\n-    time_tensorflow_run(sess, pool5, \"Forward\")\n-\n-    # Add a simple objective so we can calculate the backward pass.\n-    objective = tf.nn.l2_loss(pool5)\n+    time_tensorflow_run(sess, logits, \"Forward\")\n+\n+    # Add the objective so we can calculate the backward pass.\n+    if FLAGS.l2_loss:\n+      objective = tf.nn.l2_loss(logits)\n+    else:\n+      objective = tf.reduce_mean(tf.nn.softmax_cross_entropy_with_logits(\n+          logits, labels))\n     # Compute the gradient with respect to all the parameters.\n     grad = tf.gradients(objective, parameters)", "path": "tensorflow/models/image/alexnet/alexnet_benchmark.py", "position": 121, "original_position": 121, "commit_id": "585ce08076afa9157f79b158d4bb35c0decccacb", "original_commit_id": "92a734bf70a16b06d30ce1ca04b419c925489391", "user": {"login": "Yangqing", "id": 551151, "node_id": "MDQ6VXNlcjU1MTE1MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/551151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Yangqing", "html_url": "https://github.com/Yangqing", "followers_url": "https://api.github.com/users/Yangqing/followers", "following_url": "https://api.github.com/users/Yangqing/following{/other_user}", "gists_url": "https://api.github.com/users/Yangqing/gists{/gist_id}", "starred_url": "https://api.github.com/users/Yangqing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Yangqing/subscriptions", "organizations_url": "https://api.github.com/users/Yangqing/orgs", "repos_url": "https://api.github.com/users/Yangqing/repos", "events_url": "https://api.github.com/users/Yangqing/events{/privacy}", "received_events_url": "https://api.github.com/users/Yangqing/received_events", "type": "User", "site_admin": false}, "body": "So, here intead of running with all grad being the target, we can have a \"sink\" that will not require memcpy. This can be achieved by:\n\n``` python\nsink = tf.group(*grad)\ntime_tensorflow_run(sess, sink, \"Forward-backward\")\n```\n\nNote that this matches training time behavior, since we most likely would want everything to stay on the GPU during training, so no memcpy will be needed effectively.\n", "created_at": "2015-11-11T17:49:35Z", "updated_at": "2015-11-11T20:44:02Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/113#discussion_r44562218", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/113", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/44562218"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/113#discussion_r44562218"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/113"}}, "body_html": "<p>So, here intead of running with all grad being the target, we can have a \"sink\" that will not require memcpy. This can be achieved by:</p>\n<div class=\"highlight highlight-source-python\"><pre>sink <span class=\"pl-k\">=</span> tf.group(<span class=\"pl-k\">*</span>grad)\ntime_tensorflow_run(sess, sink, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Forward-backward<span class=\"pl-pds\">\"</span></span>)</pre></div>\n<p>Note that this matches training time behavior, since we most likely would want everything to stay on the GPU during training, so no memcpy will be needed effectively.</p>", "body_text": "So, here intead of running with all grad being the target, we can have a \"sink\" that will not require memcpy. This can be achieved by:\nsink = tf.group(*grad)\ntime_tensorflow_run(sess, sink, \"Forward-backward\")\nNote that this matches training time behavior, since we most likely would want everything to stay on the GPU during training, so no memcpy will be needed effectively."}