{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/155906809", "html_url": "https://github.com/tensorflow/tensorflow/pull/113#issuecomment-155906809", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/113", "id": 155906809, "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTkwNjgwOQ==", "user": {"login": "jeffdonahue", "id": 965190, "node_id": "MDQ6VXNlcjk2NTE5MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/965190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeffdonahue", "html_url": "https://github.com/jeffdonahue", "followers_url": "https://api.github.com/users/jeffdonahue/followers", "following_url": "https://api.github.com/users/jeffdonahue/following{/other_user}", "gists_url": "https://api.github.com/users/jeffdonahue/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeffdonahue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeffdonahue/subscriptions", "organizations_url": "https://api.github.com/users/jeffdonahue/orgs", "repos_url": "https://api.github.com/users/jeffdonahue/repos", "events_url": "https://api.github.com/users/jeffdonahue/events{/privacy}", "received_events_url": "https://api.github.com/users/jeffdonahue/received_events", "type": "User", "site_admin": false}, "created_at": "2015-11-11T20:54:14Z", "updated_at": "2015-11-11T20:54:14Z", "author_association": "NONE", "body_html": "<p>Thanks for looking into this and posting the fix <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=551151\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Yangqing\">@Yangqing</a>! The performance (see below) is now similar to what <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1310570\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/soumith\">@soumith</a> reported at <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"116287942\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/soumith/convnet-benchmarks/issues/66\" data-hovercard-type=\"issue\" data-hovercard-url=\"/soumith/convnet-benchmarks/issues/66/hovercard\" href=\"https://github.com/soumith/convnet-benchmarks/issues/66\">soumith/convnet-benchmarks#66</a>.  I'm a bit confused as to why he didn't have to use the group trick in <a href=\"https://github.com/soumith/convnet-benchmarks/blob/master/tensorflow/benchmark_alexnet.py\">his implementation</a> to get these speeds -- when I run his script I get the previous slow speeds.  But the issue I raised here is resolved and I guess is not technically a bug so I'll close it.  Thanks again <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=551151\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Yangqing\">@Yangqing</a>, and to the whole TensorFlow team for open-sourcing this.</p>\n<pre><code>2015-11-11 12:48:04.346213: step 10, duration = 0.326\n2015-11-11 12:48:07.607321: step 20, duration = 0.326\n2015-11-11 12:48:10.873735: step 30, duration = 0.326\n2015-11-11 12:48:14.139584: step 40, duration = 0.327\n2015-11-11 12:48:17.405379: step 50, duration = 0.328\n2015-11-11 12:48:20.676191: step 60, duration = 0.326\n2015-11-11 12:48:23.941887: step 70, duration = 0.326\n2015-11-11 12:48:27.229217: step 80, duration = 0.329\n2015-11-11 12:48:30.514869: step 90, duration = 0.329\n2015-11-11 12:48:33.473680: Forward-backward across 100 steps, 0.324 +/- 0.033 sec / batch\n</code></pre>", "body_text": "Thanks for looking into this and posting the fix @Yangqing! The performance (see below) is now similar to what @soumith reported at soumith/convnet-benchmarks#66.  I'm a bit confused as to why he didn't have to use the group trick in his implementation to get these speeds -- when I run his script I get the previous slow speeds.  But the issue I raised here is resolved and I guess is not technically a bug so I'll close it.  Thanks again @Yangqing, and to the whole TensorFlow team for open-sourcing this.\n2015-11-11 12:48:04.346213: step 10, duration = 0.326\n2015-11-11 12:48:07.607321: step 20, duration = 0.326\n2015-11-11 12:48:10.873735: step 30, duration = 0.326\n2015-11-11 12:48:14.139584: step 40, duration = 0.327\n2015-11-11 12:48:17.405379: step 50, duration = 0.328\n2015-11-11 12:48:20.676191: step 60, duration = 0.326\n2015-11-11 12:48:23.941887: step 70, duration = 0.326\n2015-11-11 12:48:27.229217: step 80, duration = 0.329\n2015-11-11 12:48:30.514869: step 90, duration = 0.329\n2015-11-11 12:48:33.473680: Forward-backward across 100 steps, 0.324 +/- 0.033 sec / batch", "body": "Thanks for looking into this and posting the fix @Yangqing! The performance (see below) is now similar to what @soumith reported at https://github.com/soumith/convnet-benchmarks/issues/66.  I'm a bit confused as to why he didn't have to use the group trick in [his implementation](https://github.com/soumith/convnet-benchmarks/blob/master/tensorflow/benchmark_alexnet.py) to get these speeds -- when I run his script I get the previous slow speeds.  But the issue I raised here is resolved and I guess is not technically a bug so I'll close it.  Thanks again @Yangqing, and to the whole TensorFlow team for open-sourcing this.\n\n```\n2015-11-11 12:48:04.346213: step 10, duration = 0.326\n2015-11-11 12:48:07.607321: step 20, duration = 0.326\n2015-11-11 12:48:10.873735: step 30, duration = 0.326\n2015-11-11 12:48:14.139584: step 40, duration = 0.327\n2015-11-11 12:48:17.405379: step 50, duration = 0.328\n2015-11-11 12:48:20.676191: step 60, duration = 0.326\n2015-11-11 12:48:23.941887: step 70, duration = 0.326\n2015-11-11 12:48:27.229217: step 80, duration = 0.329\n2015-11-11 12:48:30.514869: step 90, duration = 0.329\n2015-11-11 12:48:33.473680: Forward-backward across 100 steps, 0.324 +/- 0.033 sec / batch\n```\n"}