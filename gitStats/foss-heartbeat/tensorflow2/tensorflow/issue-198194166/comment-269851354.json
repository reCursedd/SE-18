{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/269851354", "html_url": "https://github.com/tensorflow/tensorflow/pull/6577#issuecomment-269851354", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6577", "id": 269851354, "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTg1MTM1NA==", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "created_at": "2016-12-31T05:59:04Z", "updated_at": "2016-12-31T05:59:21Z", "author_association": "MEMBER", "body_html": "<p>Thanks for the PR! Took a quick look, and at a very high level this looks great. Will make a detailed pass a little later (apologies for the slow responses, I've been traveling but will be back next week and faster to respond thereafter :)</p>\n<p>One thing to keep in mind: Since part of the intention here is for serialization, this isn't quite accurate. Turns out that the in-memory representation and serialized form aren't always the same (even if you ignore endian-ness).  Ideally we'd always use what is filled in <a href=\"https://github.com/tensorflow/tensorflow/blob/9c41d5f64efedf44d30e5cc21f900ea07097395c/tensorflow/core/framework/tensor.proto#L36\"><code>TensorProto</code></a> as the serialized form, which is produced by <a href=\"https://www.tensorflow.org/api_docs/cc/class/tensorflow/tensor#asprototensorcontent\" rel=\"nofollow\"><code>Tensor::AsProtoTensorContent</code></a> in C++.</p>\n<p>So I would avoid committing to the <code>ByteBuffer</code> over the wire. Do keep that in mind. Though, at this stage I'm mostly interested in getting the API right, not having a comprehensive implementation in the short term is fine (For example, we did that with <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/go/tensor.go#L196\">Go</a>).</p>\n<p>(CC <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=170179\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jhseu\">@jhseu</a> )</p>", "body_text": "Thanks for the PR! Took a quick look, and at a very high level this looks great. Will make a detailed pass a little later (apologies for the slow responses, I've been traveling but will be back next week and faster to respond thereafter :)\nOne thing to keep in mind: Since part of the intention here is for serialization, this isn't quite accurate. Turns out that the in-memory representation and serialized form aren't always the same (even if you ignore endian-ness).  Ideally we'd always use what is filled in TensorProto as the serialized form, which is produced by Tensor::AsProtoTensorContent in C++.\nSo I would avoid committing to the ByteBuffer over the wire. Do keep that in mind. Though, at this stage I'm mostly interested in getting the API right, not having a comprehensive implementation in the short term is fine (For example, we did that with Go).\n(CC @jhseu )", "body": "Thanks for the PR! Took a quick look, and at a very high level this looks great. Will make a detailed pass a little later (apologies for the slow responses, I've been traveling but will be back next week and faster to respond thereafter :)\r\n\r\nOne thing to keep in mind: Since part of the intention here is for serialization, this isn't quite accurate. Turns out that the in-memory representation and serialized form aren't always the same (even if you ignore endian-ness).  Ideally we'd always use what is filled in [`TensorProto`](https://github.com/tensorflow/tensorflow/blob/9c41d5f64efedf44d30e5cc21f900ea07097395c/tensorflow/core/framework/tensor.proto#L36) as the serialized form, which is produced by [`Tensor::AsProtoTensorContent`](https://www.tensorflow.org/api_docs/cc/class/tensorflow/tensor#asprototensorcontent) in C++. \r\n\r\nSo I would avoid committing to the `ByteBuffer` over the wire. Do keep that in mind. Though, at this stage I'm mostly interested in getting the API right, not having a comprehensive implementation in the short term is fine (For example, we did that with [Go](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/go/tensor.go#L196)).\r\n\r\n(CC @jhseu )"}