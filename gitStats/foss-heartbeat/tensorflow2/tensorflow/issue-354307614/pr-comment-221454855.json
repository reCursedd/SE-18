{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/221454855", "pull_request_review_id": 160110155, "id": 221454855, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMTQ1NDg1NQ==", "diff_hunk": "@@ -0,0 +1,41 @@\n+/*\n+Copyright 2016 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+*/\n+\n+package op\n+\n+import tf \"github.com/tensorflow/tensorflow/tensorflow/go\"\n+\n+// Gradients adds gradients computation ops to the graph according to scope.\n+//\n+// Arguments:\n+//  prefix: unique string prefix applied before the names of nodes added to the graph to\n+//    compute gradients. If null, will use \"Gradients\".\n+//  y: output of the function to derive\n+//  x: inputs of the function for which partial derivatives are computed\n+//  dx: if not null, the partial derivatives of some loss function L w.r.t. y\n+//\n+//  return the partial derivatives\n+func Gradients(scope *Scope, prefix string, y []tf.Output, x []tf.Output, dx ...tf.Output) (output []tf.Output) {", "path": "tensorflow/go/op/gradients.go", "position": null, "original_position": 31, "commit_id": "a911ecf5a94e037554f677670762b0122c062b41", "original_commit_id": "e40c032d62075621053262758c065f9bfb9faed9", "user": {"login": "Cibifang", "id": 9337824, "node_id": "MDQ6VXNlcjkzMzc4MjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/9337824?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cibifang", "html_url": "https://github.com/Cibifang", "followers_url": "https://api.github.com/users/Cibifang/followers", "following_url": "https://api.github.com/users/Cibifang/following{/other_user}", "gists_url": "https://api.github.com/users/Cibifang/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cibifang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cibifang/subscriptions", "organizations_url": "https://api.github.com/users/Cibifang/orgs", "repos_url": "https://api.github.com/users/Cibifang/repos", "events_url": "https://api.github.com/users/Cibifang/events{/privacy}", "received_events_url": "https://api.github.com/users/Cibifang/received_events", "type": "User", "site_admin": false}, "body": "In fact, we can add suffix(such as `_1`, `_2`) to avoid conflict, it is now supported for who don't set prefix(It's one of test case).\r\nDo you mean we should also remove this feature but just return error when user use `Gradients` for same namespace twice? Or just remove `prefix` but still reserve this?", "created_at": "2018-09-30T10:25:52Z", "updated_at": "2018-11-21T06:08:04Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/21895#discussion_r221454855", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21895", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/221454855"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/21895#discussion_r221454855"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21895"}}, "body_html": "<p>In fact, we can add suffix(such as <code>_1</code>, <code>_2</code>) to avoid conflict, it is now supported for who don't set prefix(It's one of test case).<br>\nDo you mean we should also remove this feature but just return error when user use <code>Gradients</code> for same namespace twice? Or just remove <code>prefix</code> but still reserve this?</p>", "body_text": "In fact, we can add suffix(such as _1, _2) to avoid conflict, it is now supported for who don't set prefix(It's one of test case).\nDo you mean we should also remove this feature but just return error when user use Gradients for same namespace twice? Or just remove prefix but still reserve this?", "in_reply_to_id": 221054688}