{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/221129461", "pull_request_review_id": 159705253, "id": 221129461, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMTEyOTQ2MQ==", "diff_hunk": "@@ -0,0 +1,41 @@\n+/*\n+Copyright 2016 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+*/\n+\n+package op\n+\n+import tf \"github.com/tensorflow/tensorflow/tensorflow/go\"\n+\n+// Gradients adds gradients computation ops to the graph according to scope.\n+//\n+// Arguments:\n+//  prefix: unique string prefix applied before the names of nodes added to the graph to\n+//    compute gradients. If null, will use \"Gradients\".\n+//  y: output of the function to derive\n+//  x: inputs of the function for which partial derivatives are computed\n+//  dx: if not null, the partial derivatives of some loss function L w.r.t. y\n+//\n+//  return the partial derivatives\n+func Gradients(scope *Scope, prefix string, y []tf.Output, x []tf.Output, dx ...tf.Output) (output []tf.Output) {", "path": "tensorflow/go/op/gradients.go", "position": null, "original_position": 31, "commit_id": "a911ecf5a94e037554f677670762b0122c062b41", "original_commit_id": "e40c032d62075621053262758c065f9bfb9faed9", "user": {"login": "Cibifang", "id": 9337824, "node_id": "MDQ6VXNlcjkzMzc4MjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/9337824?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cibifang", "html_url": "https://github.com/Cibifang", "followers_url": "https://api.github.com/users/Cibifang/followers", "following_url": "https://api.github.com/users/Cibifang/following{/other_user}", "gists_url": "https://api.github.com/users/Cibifang/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cibifang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cibifang/subscriptions", "organizations_url": "https://api.github.com/users/Cibifang/orgs", "repos_url": "https://api.github.com/users/Cibifang/repos", "events_url": "https://api.github.com/users/Cibifang/events{/privacy}", "received_events_url": "https://api.github.com/users/Cibifang/received_events", "type": "User", "site_admin": false}, "body": "I'm not sure.\r\nThe meaning of `namespace` in `Scope` is not completely same with `prefix` for gradient.\r\n\r\nFor example:\r\nIf the `namespace` is `sub`, the  `Op.name()` of the `gradients` should be `sub/Gradients`;\r\nBut if we need a `sub/my_gradients`, there isn't other methods except for a `prefix` argument...\r\n\r\nThe JAVA implementation adds a `opName` to `Scope` structure(to be exact, it's a new `NameScope` structure). So they can add customized prefix by change the value of `opName`.\r\n\r\nIf we actually don't want a `prefix` argument, we have two solutions (I see):\r\n1. Always use `Gradients` as prefix, such as `Gradients`, `sub/Gradients`, `sub/Gradients_1`, etc\r\n\r\n2. Add `opName` to `Scope` structure(also related methods like `SubScopeWithName`(to new a scope with customized opName) and `opName`(need to change behavior). It will be same with java implementation.", "created_at": "2018-09-28T02:46:58Z", "updated_at": "2018-11-21T06:08:04Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/21895#discussion_r221129461", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21895", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/221129461"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/21895#discussion_r221129461"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21895"}}, "body_html": "<p>I'm not sure.<br>\nThe meaning of <code>namespace</code> in <code>Scope</code> is not completely same with <code>prefix</code> for gradient.</p>\n<p>For example:<br>\nIf the <code>namespace</code> is <code>sub</code>, the  <code>Op.name()</code> of the <code>gradients</code> should be <code>sub/Gradients</code>;<br>\nBut if we need a <code>sub/my_gradients</code>, there isn't other methods except for a <code>prefix</code> argument...</p>\n<p>The JAVA implementation adds a <code>opName</code> to <code>Scope</code> structure(to be exact, it's a new <code>NameScope</code> structure). So they can add customized prefix by change the value of <code>opName</code>.</p>\n<p>If we actually don't want a <code>prefix</code> argument, we have two solutions (I see):</p>\n<ol>\n<li>\n<p>Always use <code>Gradients</code> as prefix, such as <code>Gradients</code>, <code>sub/Gradients</code>, <code>sub/Gradients_1</code>, etc</p>\n</li>\n<li>\n<p>Add <code>opName</code> to <code>Scope</code> structure(also related methods like <code>SubScopeWithName</code>(to new a scope with customized opName) and <code>opName</code>(need to change behavior). It will be same with java implementation.</p>\n</li>\n</ol>", "body_text": "I'm not sure.\nThe meaning of namespace in Scope is not completely same with prefix for gradient.\nFor example:\nIf the namespace is sub, the  Op.name() of the gradients should be sub/Gradients;\nBut if we need a sub/my_gradients, there isn't other methods except for a prefix argument...\nThe JAVA implementation adds a opName to Scope structure(to be exact, it's a new NameScope structure). So they can add customized prefix by change the value of opName.\nIf we actually don't want a prefix argument, we have two solutions (I see):\n\n\nAlways use Gradients as prefix, such as Gradients, sub/Gradients, sub/Gradients_1, etc\n\n\nAdd opName to Scope structure(also related methods like SubScopeWithName(to new a scope with customized opName) and opName(need to change behavior). It will be same with java implementation.", "in_reply_to_id": 221054688}