{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/216257483", "pull_request_review_id": 153694726, "id": 216257483, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjI1NzQ4Mw==", "diff_hunk": "@@ -147,6 +147,73 @@ func (g *Graph) Operations() []Operation {\n \treturn ops\n }\n \n+// AddGradients adds operations to compute the partial derivatives of sum of `y`s w.r.t `x`s,\n+// i.e., d(y_1 + y_2 + ...)/dx_1, d(y_1 + y_2 + ...)/dx_2...\n+// This is a simplified version of AddGradientsWithPrefix() without prefix\n+func (g *Graph) AddGradients(y []Output, x []Output, dx []Output) ([]Output, error) {\n+\treturn g.AddGradientsWithPrefix(\"\", y, x, dx)\n+}\n+\n+// AddGradientsWithPrefix adds operations to compute the partial derivatives of sum of `y`s w.r.t `x`s,\n+// i.e., d(y_1 + y_2 + ...)/dx_1, d(y_1 + y_2 + ...)/dx_2...\n+// This is a variant of AddGradients that allows to caller to pass a custom\n+// name prefix to the operations added to a graph to compute the gradients.\n+func (g *Graph) AddGradientsWithPrefix(prefix string, y []Output, x []Output, dx []Output) ([]Output, error) {", "path": "tensorflow/go/graph.go", "position": null, "original_position": 15, "commit_id": "a911ecf5a94e037554f677670762b0122c062b41", "original_commit_id": "ccccbe7259f9862e115e267fcce3d8bfb119b3cf", "user": {"login": "Cibifang", "id": 9337824, "node_id": "MDQ6VXNlcjkzMzc4MjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/9337824?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cibifang", "html_url": "https://github.com/Cibifang", "followers_url": "https://api.github.com/users/Cibifang/followers", "following_url": "https://api.github.com/users/Cibifang/following{/other_user}", "gists_url": "https://api.github.com/users/Cibifang/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cibifang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cibifang/subscriptions", "organizations_url": "https://api.github.com/users/Cibifang/orgs", "repos_url": "https://api.github.com/users/Cibifang/repos", "events_url": "https://api.github.com/users/Cibifang/events{/privacy}", "received_events_url": "https://api.github.com/users/Cibifang/received_events", "type": "User", "site_admin": false}, "body": "Thanks for reviewing!\r\n\r\nSome questions:\r\n1. If the \"appropriate prefix from the `Scope`\u201d is `namespace` of `Scope`?\r\n2. In the example, the method name is `Gradients`, is this a suggest name? Or I should still use `AddGradients`?\r\n3. Also in the example, the `Gradients` Method only have three parameters(`scope`, `y[]`, `x[]`), don't have the `dx[]`, is this a suggestion that in the method the `dx[]` should just be set to `nil`?\r\n4. I see all `op` method is in `wrappers.go`, same for this method?\r\n\r\nAn implementation example:\r\n```\r\nfunc Gradients(scope *Scope, y []tf.Output, x []tf.Output) (output [] tf.Output) {\r\n\tvar err error\r\n\tif output, err = scope.graph.AddGradients(scope.namespace, y, x, nil); err != nil {\r\n\t\tscope.UpdateErr(\"Gradients\", err)\r\n\t\treturn\r\n\t}\r\n\treturn output\r\n}\r\n```", "created_at": "2018-09-10T09:36:34Z", "updated_at": "2018-11-21T06:08:04Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/21895#discussion_r216257483", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21895", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/216257483"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/21895#discussion_r216257483"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21895"}}, "body_html": "<p>Thanks for reviewing!</p>\n<p>Some questions:</p>\n<ol>\n<li>If the \"appropriate prefix from the <code>Scope</code>\u201d is <code>namespace</code> of <code>Scope</code>?</li>\n<li>In the example, the method name is <code>Gradients</code>, is this a suggest name? Or I should still use <code>AddGradients</code>?</li>\n<li>Also in the example, the <code>Gradients</code> Method only have three parameters(<code>scope</code>, <code>y[]</code>, <code>x[]</code>), don't have the <code>dx[]</code>, is this a suggestion that in the method the <code>dx[]</code> should just be set to <code>nil</code>?</li>\n<li>I see all <code>op</code> method is in <code>wrappers.go</code>, same for this method?</li>\n</ol>\n<p>An implementation example:</p>\n<pre><code>func Gradients(scope *Scope, y []tf.Output, x []tf.Output) (output [] tf.Output) {\n\tvar err error\n\tif output, err = scope.graph.AddGradients(scope.namespace, y, x, nil); err != nil {\n\t\tscope.UpdateErr(\"Gradients\", err)\n\t\treturn\n\t}\n\treturn output\n}\n</code></pre>", "body_text": "Thanks for reviewing!\nSome questions:\n\nIf the \"appropriate prefix from the Scope\u201d is namespace of Scope?\nIn the example, the method name is Gradients, is this a suggest name? Or I should still use AddGradients?\nAlso in the example, the Gradients Method only have three parameters(scope, y[], x[]), don't have the dx[], is this a suggestion that in the method the dx[] should just be set to nil?\nI see all op method is in wrappers.go, same for this method?\n\nAn implementation example:\nfunc Gradients(scope *Scope, y []tf.Output, x []tf.Output) (output [] tf.Output) {\n\tvar err error\n\tif output, err = scope.graph.AddGradients(scope.namespace, y, x, nil); err != nil {\n\t\tscope.UpdateErr(\"Gradients\", err)\n\t\treturn\n\t}\n\treturn output\n}", "in_reply_to_id": 215724728}