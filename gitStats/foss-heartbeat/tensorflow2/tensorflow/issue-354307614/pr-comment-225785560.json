{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/225785560", "pull_request_review_id": 165461539, "id": 225785560, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNTc4NTU2MA==", "diff_hunk": "@@ -0,0 +1,36 @@\n+/*\n+Copyright 2016 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+*/\n+\n+package op\n+\n+import tf \"github.com/tensorflow/tensorflow/tensorflow/go\"\n+\n+// Gradients adds gradients computation ops to the graph according to scope.\n+//\n+// Arguments:\n+//  y: output of the function to derive\n+//  x: inputs of the function for which partial derivatives are computed\n+//  dx: if not null, the partial derivatives of some loss function L w.r.t. y\n+//\n+//  return the partial derivatives\n+func Gradients(scope *Scope, y []tf.Output, x []tf.Output, dx ...tf.Output) (output []tf.Output) {\n+\tvar err error\n+\tif output, err = scope.graph.AddGradients(scope.opName(scope.uniqueName(\"Gradients\")), y, x, dx); err != nil {", "path": "tensorflow/go/op/gradients.go", "position": null, "original_position": 31, "commit_id": "a911ecf5a94e037554f677670762b0122c062b41", "original_commit_id": "8c9d5eb52b0d8e551b0e751186edfcdecbef62fb", "user": {"login": "Cibifang", "id": 9337824, "node_id": "MDQ6VXNlcjkzMzc4MjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/9337824?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cibifang", "html_url": "https://github.com/Cibifang", "followers_url": "https://api.github.com/users/Cibifang/followers", "following_url": "https://api.github.com/users/Cibifang/following{/other_user}", "gists_url": "https://api.github.com/users/Cibifang/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cibifang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cibifang/subscriptions", "organizations_url": "https://api.github.com/users/Cibifang/orgs", "repos_url": "https://api.github.com/users/Cibifang/repos", "events_url": "https://api.github.com/users/Cibifang/events{/privacy}", "received_events_url": "https://api.github.com/users/Cibifang/received_events", "type": "User", "site_admin": false}, "body": " Thanks for explanation but I am sorry that I still have some confusion.\r\n\r\nAccording the implementation and test case in C/C++ and Java. `AddGradient` is not like with other op of scope.\r\n\r\nFor example, we can see test case in C++, [TEST_F(GradientsTest, TwoMatMuls_Chained)](https://github.com/tensorflow/tensorflow/blob/94ab1a9e82fb7630b1aae44984d73968508dc917/tensorflow/cc/framework/gradients_test.cc#L139-L170).\r\nIn this case, we can see the common op like `Const`/`MatMul` and gradient op `AddSymbolicGradients`. \r\nIn [here](https://github.com/tensorflow/tensorflow/blob/94ab1a9e82fb7630b1aae44984d73968508dc917/tensorflow/c/c_api_test.cc#L1695-L1710), These common op is implemented with `TF_NewOperation` and `TF_FinishOperation`, so they can invoke `TF_AddInput` or `TF_AddControlInput` or `TF_SetDevice`(All these functions need a `TF_OperationDescription` returned by `TF_NewOperation`.\r\nBut [`AddSymbolicGradients`](https://github.com/tensorflow/tensorflow/blob/94ab1a9e82fb7630b1aae44984d73968508dc917/tensorflow/cc/framework/gradients.cc#L557-L565) doesn't invoke `TF_NewOperation`, so it can't invoke `TF_AddControlInput` or `TF_SetDevice` because it don't have a `TF_OperationDescription`.\r\n\r\nOur implementation in Go actually needs to invode C implementation. So I'm confused how to invoke `TF_AddControlInput` or `TF_SetDevice` when the c implementation doesn't invoke these function...\r\nIf we just use [`WithControlDependencies`](https://github.com/tensorflow/tensorflow/blob/94ab1a9e82fb7630b1aae44984d73968508dc917/tensorflow/go/op/scope.go#L115-L133), it will be effective until next \"common op\" is used.", "created_at": "2018-10-17T05:36:37Z", "updated_at": "2018-11-21T06:08:04Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/21895#discussion_r225785560", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21895", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/225785560"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/21895#discussion_r225785560"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21895"}}, "body_html": "<p>Thanks for explanation but I am sorry that I still have some confusion.</p>\n<p>According the implementation and test case in C/C++ and Java. <code>AddGradient</code> is not like with other op of scope.</p>\n<p>For example, we can see test case in C++, <a href=\"https://github.com/tensorflow/tensorflow/blob/94ab1a9e82fb7630b1aae44984d73968508dc917/tensorflow/cc/framework/gradients_test.cc#L139-L170\">TEST_F(GradientsTest, TwoMatMuls_Chained)</a>.<br>\nIn this case, we can see the common op like <code>Const</code>/<code>MatMul</code> and gradient op <code>AddSymbolicGradients</code>.<br>\nIn <a href=\"https://github.com/tensorflow/tensorflow/blob/94ab1a9e82fb7630b1aae44984d73968508dc917/tensorflow/c/c_api_test.cc#L1695-L1710\">here</a>, These common op is implemented with <code>TF_NewOperation</code> and <code>TF_FinishOperation</code>, so they can invoke <code>TF_AddInput</code> or <code>TF_AddControlInput</code> or <code>TF_SetDevice</code>(All these functions need a <code>TF_OperationDescription</code> returned by <code>TF_NewOperation</code>.<br>\nBut <a href=\"https://github.com/tensorflow/tensorflow/blob/94ab1a9e82fb7630b1aae44984d73968508dc917/tensorflow/cc/framework/gradients.cc#L557-L565\"><code>AddSymbolicGradients</code></a> doesn't invoke <code>TF_NewOperation</code>, so it can't invoke <code>TF_AddControlInput</code> or <code>TF_SetDevice</code> because it don't have a <code>TF_OperationDescription</code>.</p>\n<p>Our implementation in Go actually needs to invode C implementation. So I'm confused how to invoke <code>TF_AddControlInput</code> or <code>TF_SetDevice</code> when the c implementation doesn't invoke these function...<br>\nIf we just use <a href=\"https://github.com/tensorflow/tensorflow/blob/94ab1a9e82fb7630b1aae44984d73968508dc917/tensorflow/go/op/scope.go#L115-L133\"><code>WithControlDependencies</code></a>, it will be effective until next \"common op\" is used.</p>", "body_text": "Thanks for explanation but I am sorry that I still have some confusion.\nAccording the implementation and test case in C/C++ and Java. AddGradient is not like with other op of scope.\nFor example, we can see test case in C++, TEST_F(GradientsTest, TwoMatMuls_Chained).\nIn this case, we can see the common op like Const/MatMul and gradient op AddSymbolicGradients.\nIn here, These common op is implemented with TF_NewOperation and TF_FinishOperation, so they can invoke TF_AddInput or TF_AddControlInput or TF_SetDevice(All these functions need a TF_OperationDescription returned by TF_NewOperation.\nBut AddSymbolicGradients doesn't invoke TF_NewOperation, so it can't invoke TF_AddControlInput or TF_SetDevice because it don't have a TF_OperationDescription.\nOur implementation in Go actually needs to invode C implementation. So I'm confused how to invoke TF_AddControlInput or TF_SetDevice when the c implementation doesn't invoke these function...\nIf we just use WithControlDependencies, it will be effective until next \"common op\" is used.", "in_reply_to_id": 222117365}