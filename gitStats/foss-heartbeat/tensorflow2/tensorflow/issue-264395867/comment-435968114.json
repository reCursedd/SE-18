{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/435968114", "html_url": "https://github.com/tensorflow/tensorflow/issues/13616#issuecomment-435968114", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13616", "id": 435968114, "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTk2ODExNA==", "user": {"login": "alextp", "id": 5061, "node_id": "MDQ6VXNlcjUwNjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alextp", "html_url": "https://github.com/alextp", "followers_url": "https://api.github.com/users/alextp/followers", "following_url": "https://api.github.com/users/alextp/following{/other_user}", "gists_url": "https://api.github.com/users/alextp/gists{/gist_id}", "starred_url": "https://api.github.com/users/alextp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alextp/subscriptions", "organizations_url": "https://api.github.com/users/alextp/orgs", "repos_url": "https://api.github.com/users/alextp/repos", "events_url": "https://api.github.com/users/alextp/events{/privacy}", "received_events_url": "https://api.github.com/users/alextp/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-05T17:47:20Z", "updated_at": "2018-11-05T17:47:20Z", "author_association": "MEMBER", "body_html": "<div class=\"email-fragment\">Reevaluation does not work outside of a loop; a tensor is only evaluated a\nsingle time within a single call to session.run.\n\nTry to have more than one update per call to session.run and you'll see\nthings breaking.\n\n(your example also relies on the lack of a memory model for legacy tf\nvariables but this is not relevant)</div>\n<span class=\"email-hidden-toggle\"><a href=\"#\">\u2026</a></span><div class=\"email-hidden-reply\">\n<div class=\"email-quoted-reply\">On Sat, Nov 3, 2018 at 11:32 AM Jonas Eschle ***@***.***&gt; wrote:\n A year later, did anything change on that? <a class=\"user-mention\" href=\"https://github.com/alextp\">@alextp</a>\n &lt;<a href=\"https://github.com/alextp\">https://github.com/alextp</a>&gt;, is it still impossible? I find that it\n somehow works and am confused about why it does/does not (I write here as\n the previous discussion is basically the same thing as I try to accomplish):\n\n Basically, the re-evaluation works *outside* of a loop, that's confusing\n for me\n\n Pseudo-code\n\n x = &lt;Tensor depending on var&gt;\n\n var_assign = tf.assign(var, value)\n with tf.control_dependencies([var_assign])\n \tsess.run(x)  # prints with the old value, of course\n\n but adding an identity before\n\n\n var_assign = tf.assign(var, value)\n with tf.control_dependencies([var_assign])\n \tx_2 = tf.identity(x)\n \tsess.run(x_2)  # prints with the new value!\n\n So in the second case, sess.run reevaluates the whole Tensor X. But this\n does not work in a while loop (of course, we cannot have a sess.run). So\n why does x_2 get's re-evaluated here but not in a while-loop? I did not\n expect this way to work\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n &lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"264395867\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/13616\" href=\"https://github.com/tensorflow/tensorflow/issues/13616#issuecomment-435610487\">#13616 (comment)</a>&gt;,\n or mute the thread\n &lt;<a href=\"https://github.com/notifications/unsubscribe-auth/AAATxfWbCkETnuov7i73C5uTctP_vaXXks5ureFJgaJpZM4P0qPF\">https://github.com/notifications/unsubscribe-auth/AAATxfWbCkETnuov7i73C5uTctP_vaXXks5ureFJgaJpZM4P0qPF</a>&gt;\n .\n</div>\n<div class=\"email-fragment\"></div>\n<div class=\"email-signature-reply\">-- \n - Alex</div>\n</div>", "body_text": "Reevaluation does not work outside of a loop; a tensor is only evaluated a\nsingle time within a single call to session.run.\n\nTry to have more than one update per call to session.run and you'll see\nthings breaking.\n\n(your example also relies on the lack of a memory model for legacy tf\nvariables but this is not relevant)\n\u2026\nOn Sat, Nov 3, 2018 at 11:32 AM Jonas Eschle ***@***.***> wrote:\n A year later, did anything change on that? @alextp\n <https://github.com/alextp>, is it still impossible? I find that it\n somehow works and am confused about why it does/does not (I write here as\n the previous discussion is basically the same thing as I try to accomplish):\n\n Basically, the re-evaluation works *outside* of a loop, that's confusing\n for me\n\n Pseudo-code\n\n x = <Tensor depending on var>\n\n var_assign = tf.assign(var, value)\n with tf.control_dependencies([var_assign])\n \tsess.run(x)  # prints with the old value, of course\n\n but adding an identity before\n\n\n var_assign = tf.assign(var, value)\n with tf.control_dependencies([var_assign])\n \tx_2 = tf.identity(x)\n \tsess.run(x_2)  # prints with the new value!\n\n So in the second case, sess.run reevaluates the whole Tensor X. But this\n does not work in a while loop (of course, we cannot have a sess.run). So\n why does x_2 get's re-evaluated here but not in a while-loop? I did not\n expect this way to work\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#13616 (comment)>,\n or mute the thread\n <https://github.com/notifications/unsubscribe-auth/AAATxfWbCkETnuov7i73C5uTctP_vaXXks5ureFJgaJpZM4P0qPF>\n .\n\n\n-- \n - Alex", "body": "Reevaluation does not work outside of a loop; a tensor is only evaluated a\nsingle time within a single call to session.run.\n\nTry to have more than one update per call to session.run and you'll see\nthings breaking.\n\n(your example also relies on the lack of a memory model for legacy tf\nvariables but this is not relevant)\n\nOn Sat, Nov 3, 2018 at 11:32 AM Jonas Eschle <notifications@github.com>\nwrote:\n\n> A year later, did anything change on that? @alextp\n> <https://github.com/alextp>, is it still impossible? I find that it\n> somehow works and am confused about why it does/does not (I write here as\n> the previous discussion is basically the same thing as I try to accomplish):\n>\n> Basically, the re-evaluation works *outside* of a loop, that's confusing\n> for me\n>\n> Pseudo-code\n>\n> x = <Tensor depending on var>\n>\n> var_assign = tf.assign(var, value)\n> with tf.control_dependencies([var_assign])\n> \tsess.run(x)  # prints with the old value, of course\n>\n> but adding an identity before\n>\n>\n> var_assign = tf.assign(var, value)\n> with tf.control_dependencies([var_assign])\n> \tx_2 = tf.identity(x)\n> \tsess.run(x_2)  # prints with the new value!\n>\n> So in the second case, sess.run reevaluates the whole Tensor X. But this\n> does not work in a while loop (of course, we cannot have a sess.run). So\n> why does x_2 get's re-evaluated here but not in a while-loop? I did not\n> expect this way to work\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/tensorflow/issues/13616#issuecomment-435610487>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAATxfWbCkETnuov7i73C5uTctP_vaXXks5ureFJgaJpZM4P0qPF>\n> .\n>\n\n\n-- \n - Alex\n"}