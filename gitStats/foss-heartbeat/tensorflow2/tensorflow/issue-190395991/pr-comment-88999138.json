{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/88999138", "pull_request_review_id": 9553293, "id": 88999138, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4OTk5MTM4", "diff_hunk": "@@ -343,7 +348,7 @@ def config(self):\n       SCIKIT_DECOUPLE_DATE, SCIKIT_DECOUPLE_INSTRUCTIONS, 'x', 'y', 'batch_size'\n   )\n   def fit(self, x=None, y=None, input_fn=None, steps=None, batch_size=None,\n-          monitors=None, max_steps=None):\n+          monitors=None, max_steps=None, *input_fn_args, **input_fn_kwargs):", "path": "tensorflow/contrib/learn/python/learn/estimators/estimator.py", "position": 17, "original_position": 17, "commit_id": "78e8cdd1167a7504538a66ef8fa6324375adbf2f", "original_commit_id": "78e8cdd1167a7504538a66ef8fa6324375adbf2f", "user": {"login": "elibixby", "id": 6596957, "node_id": "MDQ6VXNlcjY1OTY5NTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/6596957?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elibixby", "html_url": "https://github.com/elibixby", "followers_url": "https://api.github.com/users/elibixby/followers", "following_url": "https://api.github.com/users/elibixby/following{/other_user}", "gists_url": "https://api.github.com/users/elibixby/gists{/gist_id}", "starred_url": "https://api.github.com/users/elibixby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elibixby/subscriptions", "organizations_url": "https://api.github.com/users/elibixby/orgs", "repos_url": "https://api.github.com/users/elibixby/repos", "events_url": "https://api.github.com/users/elibixby/events{/privacy}", "received_events_url": "https://api.github.com/users/elibixby/received_events", "type": "User", "site_admin": false}, "body": "I suppose, although it would be nice for users to be able to specify require arguments without having to resort to:\r\n```\r\nif arg is None:\r\n  raise ValueError()\r\n```\r\nor a downstream error\r\n\r\nStill I'm sensitive to the backwards compat issues taking arbitrary positional args raises. I still prefer allowing a catchall pass through here, but if you feel strongly I can remove it (or replace it with:\r\n```\r\ndef fit(..., input_fn_args=[], **input_fn_kwargs)\r\n```\r\neven. ", "created_at": "2016-11-21T22:03:33Z", "updated_at": "2016-11-21T22:03:33Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/5699#discussion_r88999138", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/5699", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/88999138"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/5699#discussion_r88999138"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/5699"}}, "body_html": "<p>I suppose, although it would be nice for users to be able to specify require arguments without having to resort to:</p>\n<pre><code>if arg is None:\n  raise ValueError()\n</code></pre>\n<p>or a downstream error</p>\n<p>Still I'm sensitive to the backwards compat issues taking arbitrary positional args raises. I still prefer allowing a catchall pass through here, but if you feel strongly I can remove it (or replace it with:</p>\n<pre><code>def fit(..., input_fn_args=[], **input_fn_kwargs)\n</code></pre>\n<p>even.</p>", "body_text": "I suppose, although it would be nice for users to be able to specify require arguments without having to resort to:\nif arg is None:\n  raise ValueError()\n\nor a downstream error\nStill I'm sensitive to the backwards compat issues taking arbitrary positional args raises. I still prefer allowing a catchall pass through here, but if you feel strongly I can remove it (or replace it with:\ndef fit(..., input_fn_args=[], **input_fn_kwargs)\n\neven.", "in_reply_to_id": 88971968}