{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4964", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4964/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4964/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4964/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/4964", "id": 182995092, "node_id": "MDU6SXNzdWUxODI5OTUwOTI=", "number": 4964, "title": "Where is the documentation for contrib/layers? (Docs in general ...)", "user": {"login": "Hvass-Labs", "id": 13588114, "node_id": "MDQ6VXNlcjEzNTg4MTE0", "avatar_url": "https://avatars2.githubusercontent.com/u/13588114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hvass-Labs", "html_url": "https://github.com/Hvass-Labs", "followers_url": "https://api.github.com/users/Hvass-Labs/followers", "following_url": "https://api.github.com/users/Hvass-Labs/following{/other_user}", "gists_url": "https://api.github.com/users/Hvass-Labs/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hvass-Labs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hvass-Labs/subscriptions", "organizations_url": "https://api.github.com/users/Hvass-Labs/orgs", "repos_url": "https://api.github.com/users/Hvass-Labs/repos", "events_url": "https://api.github.com/users/Hvass-Labs/events{/privacy}", "received_events_url": "https://api.github.com/users/Hvass-Labs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-10-14T08:45:38Z", "updated_at": "2016-11-03T22:29:50Z", "closed_at": "2016-10-15T03:33:29Z", "author_association": "CONTRIBUTOR", "body_html": "<p>In another thread I asked about consolidation of the builder API's for TensorFlow. (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"170890988\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/3771\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/3771/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/3771\">#3771</a>)</p>\n<p>The response was that contrib/layers was going to be one of the official builder API's to be included in TensorFlow core along with contrib/learn. So I wanted to see how it works and learn how to use it. But the only documentation I could find for contrib/layers was this:</p>\n<p><a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/layers/README.md\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/layers/README.md</a></p>\n<p><a href=\"https://www.tensorflow.org/versions/r0.11/api_docs/python/contrib.layers.html\" rel=\"nofollow\">https://www.tensorflow.org/versions/r0.11/api_docs/python/contrib.layers.html</a></p>\n<p>Is this really all the documentation there is for contrib/layers? Surely there must be more? You couldn't possibly expect people to be able to learn how to use it from these two documents alone? The README doesn't even make any sense. Am I missing something?</p>\n<p>Please allow me a short rant.</p>\n<p>I'm sure you're familiar with scikit-learn's beautifully designed API and extensive, polished documentation. It might serve as a good inspiration for TensorFlow. You may think that you don't have time to streamline the TensorFlow API and improve the documentation because there's more important things that must be done. But I believe this is actually the single most important thing you could do to move the project forward. Here's why:</p>\n<p>If each new person wastes 10 hours trying to learn TensorFlow and there's 10,000 people who are learning to use it, then it's 100,000 wasted developer-hours! I actually think those numbers are very conservative. Personally I've probably wasted more than 100 hours trying to figure out how the complicated and poorly documented TensorFlow API works, and it seems there's many more than 10,000 people using TensorFlow. So maybe it's more than 1 million wasted developer-hours in total! That is 500 developer-years (assuming a month is about 160 work-hours)! Imagine if this developer-time was put into more constructive use. All it takes is for the TensorFlow API and docs to be more polished so it would be easier to learn. It would be a tiny investment in time and effort from the dev-team, compared to the return you'll get in productivity from the community. I really wish this is something you would prioritize highly.</p>\n<p>Thanks!</p>", "body_text": "In another thread I asked about consolidation of the builder API's for TensorFlow. (#3771)\nThe response was that contrib/layers was going to be one of the official builder API's to be included in TensorFlow core along with contrib/learn. So I wanted to see how it works and learn how to use it. But the only documentation I could find for contrib/layers was this:\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/layers/README.md\nhttps://www.tensorflow.org/versions/r0.11/api_docs/python/contrib.layers.html\nIs this really all the documentation there is for contrib/layers? Surely there must be more? You couldn't possibly expect people to be able to learn how to use it from these two documents alone? The README doesn't even make any sense. Am I missing something?\nPlease allow me a short rant.\nI'm sure you're familiar with scikit-learn's beautifully designed API and extensive, polished documentation. It might serve as a good inspiration for TensorFlow. You may think that you don't have time to streamline the TensorFlow API and improve the documentation because there's more important things that must be done. But I believe this is actually the single most important thing you could do to move the project forward. Here's why:\nIf each new person wastes 10 hours trying to learn TensorFlow and there's 10,000 people who are learning to use it, then it's 100,000 wasted developer-hours! I actually think those numbers are very conservative. Personally I've probably wasted more than 100 hours trying to figure out how the complicated and poorly documented TensorFlow API works, and it seems there's many more than 10,000 people using TensorFlow. So maybe it's more than 1 million wasted developer-hours in total! That is 500 developer-years (assuming a month is about 160 work-hours)! Imagine if this developer-time was put into more constructive use. All it takes is for the TensorFlow API and docs to be more polished so it would be easier to learn. It would be a tiny investment in time and effort from the dev-team, compared to the return you'll get in productivity from the community. I really wish this is something you would prioritize highly.\nThanks!", "body": "In another thread I asked about consolidation of the builder API's for TensorFlow. (https://github.com/tensorflow/tensorflow/issues/3771)\n\nThe response was that contrib/layers was going to be one of the official builder API's to be included in TensorFlow core along with contrib/learn. So I wanted to see how it works and learn how to use it. But the only documentation I could find for contrib/layers was this:\n\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/layers/README.md\n\nhttps://www.tensorflow.org/versions/r0.11/api_docs/python/contrib.layers.html\n\nIs this really all the documentation there is for contrib/layers? Surely there must be more? You couldn't possibly expect people to be able to learn how to use it from these two documents alone? The README doesn't even make any sense. Am I missing something?\n\nPlease allow me a short rant.\n\nI'm sure you're familiar with scikit-learn's beautifully designed API and extensive, polished documentation. It might serve as a good inspiration for TensorFlow. You may think that you don't have time to streamline the TensorFlow API and improve the documentation because there's more important things that must be done. But I believe this is actually the single most important thing you could do to move the project forward. Here's why:\n\nIf each new person wastes 10 hours trying to learn TensorFlow and there's 10,000 people who are learning to use it, then it's 100,000 wasted developer-hours! I actually think those numbers are very conservative. Personally I've probably wasted more than 100 hours trying to figure out how the complicated and poorly documented TensorFlow API works, and it seems there's many more than 10,000 people using TensorFlow. So maybe it's more than 1 million wasted developer-hours in total! That is 500 developer-years (assuming a month is about 160 work-hours)! Imagine if this developer-time was put into more constructive use. All it takes is for the TensorFlow API and docs to be more polished so it would be easier to learn. It would be a tiny investment in time and effort from the dev-team, compared to the return you'll get in productivity from the community. I really wish this is something you would prioritize highly.\n\nThanks!\n"}