{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/254136010", "html_url": "https://github.com/tensorflow/tensorflow/issues/4964#issuecomment-254136010", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4964", "id": 254136010, "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDEzNjAxMA==", "user": {"login": "Hvass-Labs", "id": 13588114, "node_id": "MDQ6VXNlcjEzNTg4MTE0", "avatar_url": "https://avatars2.githubusercontent.com/u/13588114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hvass-Labs", "html_url": "https://github.com/Hvass-Labs", "followers_url": "https://api.github.com/users/Hvass-Labs/followers", "following_url": "https://api.github.com/users/Hvass-Labs/following{/other_user}", "gists_url": "https://api.github.com/users/Hvass-Labs/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hvass-Labs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hvass-Labs/subscriptions", "organizations_url": "https://api.github.com/users/Hvass-Labs/orgs", "repos_url": "https://api.github.com/users/Hvass-Labs/repos", "events_url": "https://api.github.com/users/Hvass-Labs/events{/privacy}", "received_events_url": "https://api.github.com/users/Hvass-Labs/received_events", "type": "User", "site_admin": false}, "created_at": "2016-10-17T07:48:45Z", "updated_at": "2016-10-17T07:48:45Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Thanks for the quick and positive reply.</p>\n<p>I have already spent months trying to help explain TensorFlow to a wider audience. This is done on my own time for my own money:</p>\n<p><a href=\"https://www.youtube.com/playlist?list=PL9Hr9sNUjfsmEu1ZniY0XpHSzl5uihcXZ\" rel=\"nofollow\">https://www.youtube.com/playlist?list=PL9Hr9sNUjfsmEu1ZniY0XpHSzl5uihcXZ</a></p>\n<p>But I am frequently stuck and spend days trying to figure out how to do things that should be fairly simple, because there's no example code showing how to do it, and the TensorFlow API is generally quite complicated and lots of features are poorly documented.</p>\n<p>There is a school of thought in software engineering that beginners can help document code as they learn how to use it. I strongly disagree with that notion. It takes a beginner maybe 50x as much time to learn a piece of code as the engineer who wrote it, and it is unlikely that a beginner will understand all the implications of a particular function or class. In my opinion, code is not completed before it is polished and well-documented.</p>\n<p>It is the same with fixing bugs. I previously posted a report here for a bug that occasionally showed itself. The TensorFlow developer couldn't reproduce and hence marked it as community support. Fair enough. Several other individuals later posted they experienced it as well. But the function where it happened wasn't well-documented so I had no idea what the function was supposed to do, and hence I couldn't help fix the bug. It was eventually fixed so all is good, but it demonstrates how difficult it is for the community to help out if the docs don't describe the API very well.</p>\n<p>How many times do you have to ask a co-worker how to do something in TensorFlow? Well, people in the community don't have that extensive and quick support-network. All we can do is post a question on StackOverflow and hope it gets answered (a lot of questions don't even though <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=192142\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mrry\">@mrry</a> is making a valiant effort).</p>\n<p>Once again, I very much appreciate your friendly and welcoming response, but I hope that the TensorFlow team considers the possibility that perhaps you still have quite a way to go before the API and docs are as polished as e.g. scikit-learn. A good place to start would be consolidation and proper documentation of the builder API's (e.g. contrib.layers, contrib.slim and PrettyTensor).</p>\n<p>Cheers!</p>", "body_text": "Thanks for the quick and positive reply.\nI have already spent months trying to help explain TensorFlow to a wider audience. This is done on my own time for my own money:\nhttps://www.youtube.com/playlist?list=PL9Hr9sNUjfsmEu1ZniY0XpHSzl5uihcXZ\nBut I am frequently stuck and spend days trying to figure out how to do things that should be fairly simple, because there's no example code showing how to do it, and the TensorFlow API is generally quite complicated and lots of features are poorly documented.\nThere is a school of thought in software engineering that beginners can help document code as they learn how to use it. I strongly disagree with that notion. It takes a beginner maybe 50x as much time to learn a piece of code as the engineer who wrote it, and it is unlikely that a beginner will understand all the implications of a particular function or class. In my opinion, code is not completed before it is polished and well-documented.\nIt is the same with fixing bugs. I previously posted a report here for a bug that occasionally showed itself. The TensorFlow developer couldn't reproduce and hence marked it as community support. Fair enough. Several other individuals later posted they experienced it as well. But the function where it happened wasn't well-documented so I had no idea what the function was supposed to do, and hence I couldn't help fix the bug. It was eventually fixed so all is good, but it demonstrates how difficult it is for the community to help out if the docs don't describe the API very well.\nHow many times do you have to ask a co-worker how to do something in TensorFlow? Well, people in the community don't have that extensive and quick support-network. All we can do is post a question on StackOverflow and hope it gets answered (a lot of questions don't even though @mrry is making a valiant effort).\nOnce again, I very much appreciate your friendly and welcoming response, but I hope that the TensorFlow team considers the possibility that perhaps you still have quite a way to go before the API and docs are as polished as e.g. scikit-learn. A good place to start would be consolidation and proper documentation of the builder API's (e.g. contrib.layers, contrib.slim and PrettyTensor).\nCheers!", "body": "Thanks for the quick and positive reply.\n\nI have already spent months trying to help explain TensorFlow to a wider audience. This is done on my own time for my own money:\n\nhttps://www.youtube.com/playlist?list=PL9Hr9sNUjfsmEu1ZniY0XpHSzl5uihcXZ\n\nBut I am frequently stuck and spend days trying to figure out how to do things that should be fairly simple, because there's no example code showing how to do it, and the TensorFlow API is generally quite complicated and lots of features are poorly documented.\n\nThere is a school of thought in software engineering that beginners can help document code as they learn how to use it. I strongly disagree with that notion. It takes a beginner maybe 50x as much time to learn a piece of code as the engineer who wrote it, and it is unlikely that a beginner will understand all the implications of a particular function or class. In my opinion, code is not completed before it is polished and well-documented.\n\nIt is the same with fixing bugs. I previously posted a report here for a bug that occasionally showed itself. The TensorFlow developer couldn't reproduce and hence marked it as community support. Fair enough. Several other individuals later posted they experienced it as well. But the function where it happened wasn't well-documented so I had no idea what the function was supposed to do, and hence I couldn't help fix the bug. It was eventually fixed so all is good, but it demonstrates how difficult it is for the community to help out if the docs don't describe the API very well.\n\nHow many times do you have to ask a co-worker how to do something in TensorFlow? Well, people in the community don't have that extensive and quick support-network. All we can do is post a question on StackOverflow and hope it gets answered (a lot of questions don't even though @mrry is making a valiant effort).\n\nOnce again, I very much appreciate your friendly and welcoming response, but I hope that the TensorFlow team considers the possibility that perhaps you still have quite a way to go before the API and docs are as polished as e.g. scikit-learn. A good place to start would be consolidation and proper documentation of the builder API's (e.g. contrib.layers, contrib.slim and PrettyTensor).\n\nCheers!\n"}