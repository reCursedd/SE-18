{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23238", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23238/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23238/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23238/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/23238", "id": 373745102, "node_id": "MDU6SXNzdWUzNzM3NDUxMDI=", "number": 23238, "title": "intel mkl optimized tensorflow performance degradation", "user": {"login": "patelprateek", "id": 22586349, "node_id": "MDQ6VXNlcjIyNTg2MzQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/22586349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/patelprateek", "html_url": "https://github.com/patelprateek", "followers_url": "https://api.github.com/users/patelprateek/followers", "following_url": "https://api.github.com/users/patelprateek/following{/other_user}", "gists_url": "https://api.github.com/users/patelprateek/gists{/gist_id}", "starred_url": "https://api.github.com/users/patelprateek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/patelprateek/subscriptions", "organizations_url": "https://api.github.com/users/patelprateek/orgs", "repos_url": "https://api.github.com/users/patelprateek/repos", "events_url": "https://api.github.com/users/patelprateek/events{/privacy}", "received_events_url": "https://api.github.com/users/patelprateek/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1104829434, "node_id": "MDU6TGFiZWwxMTA0ODI5NDM0", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:mkl", "name": "comp:mkl", "color": "0052cc", "default": false}, {"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}], "state": "open", "locked": false, "assignee": {"login": "TensorFlow-MKL", "id": 44416303, "node_id": "MDQ6VXNlcjQ0NDE2MzAz", "avatar_url": "https://avatars2.githubusercontent.com/u/44416303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TensorFlow-MKL", "html_url": "https://github.com/TensorFlow-MKL", "followers_url": "https://api.github.com/users/TensorFlow-MKL/followers", "following_url": "https://api.github.com/users/TensorFlow-MKL/following{/other_user}", "gists_url": "https://api.github.com/users/TensorFlow-MKL/gists{/gist_id}", "starred_url": "https://api.github.com/users/TensorFlow-MKL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TensorFlow-MKL/subscriptions", "organizations_url": "https://api.github.com/users/TensorFlow-MKL/orgs", "repos_url": "https://api.github.com/users/TensorFlow-MKL/repos", "events_url": "https://api.github.com/users/TensorFlow-MKL/events{/privacy}", "received_events_url": "https://api.github.com/users/TensorFlow-MKL/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "TensorFlow-MKL", "id": 44416303, "node_id": "MDQ6VXNlcjQ0NDE2MzAz", "avatar_url": "https://avatars2.githubusercontent.com/u/44416303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TensorFlow-MKL", "html_url": "https://github.com/TensorFlow-MKL", "followers_url": "https://api.github.com/users/TensorFlow-MKL/followers", "following_url": "https://api.github.com/users/TensorFlow-MKL/following{/other_user}", "gists_url": "https://api.github.com/users/TensorFlow-MKL/gists{/gist_id}", "starred_url": "https://api.github.com/users/TensorFlow-MKL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TensorFlow-MKL/subscriptions", "organizations_url": "https://api.github.com/users/TensorFlow-MKL/orgs", "repos_url": "https://api.github.com/users/TensorFlow-MKL/repos", "events_url": "https://api.github.com/users/TensorFlow-MKL/events{/privacy}", "received_events_url": "https://api.github.com/users/TensorFlow-MKL/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 18, "created_at": "2018-10-25T02:12:40Z", "updated_at": "2018-11-15T19:00:07Z", "closed_at": null, "author_association": "NONE", "body_html": "<p><strong>System information</strong></p>\n<ul>\n<li>Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes</li>\n<li>OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Google Deep Learning VM<br>\nVersion: m10<br>\nBased on: Debian GNU/Linux 9.5 (stretch) (GNU/Linux 4.9.0-8-amd64 x86_64\\n)</li>\n<li>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:</li>\n<li>TensorFlow installed from (source or binary): deep-learning image</li>\n<li>TensorFlow version (use command below): 1.11</li>\n<li>Python version: 2.7</li>\n<li>Bazel version (if compiling from source):</li>\n<li>GCC/Compiler version (if compiling from source):</li>\n<li>CUDA/cuDNN version:</li>\n<li>GPU model and memory: N/A</li>\n</ul>\n<p>You can collect some of this information using our environment capture <a href=\"https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\">script</a><br>\nYou can also obtain the TensorFlow version with<br>\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"</p>\n<p><strong>Describe the current behavior</strong><br>\nRunning deep model and some wide linear models. Inference performance is very bad. 2-4x slower relative to running inference without MKL<br>\n<strong>Describe the expected behavior</strong><br>\nPerformance should actually improve with intel mkl instruction set .</p>\n<p><strong>Code to reproduce the issue</strong><br>\ncode for deep and wide linear model. or logistic regression example code from tensorflow example</p>\n<p><strong>Other info / logs</strong><br>\nWhen running using google deep learning image version M9 on gpu machine  (image : tf-latest-cu92, version M9) . Note : the inference is only running on cpu as i turn off the visibility for cuda devices, So the tensorflow code runs only runs on cpu. The image family says they are intel optimized packages but when i rung the benchmarks with verbosity on , i do not observe any mkl related stuff.</p>\n<p>I start another deep learning image (tf-latest-cpu , version M10): Running exact same code on this machine with environment variable (export MKL_VERBOSE=1): I can observe a lot of openMP thread settings , KMP_xxx settings and mkl instructions logged with some timing information. I didn't observe any such thing in the M9 gpu image , even though in both place when i execute command   i observe following logs:<br>\nM9 gpu image<br>\nNumpy + Intel(R) MKL: THREADING LAYER: (null)<br>\nNumpy + Intel(R) MKL: setting Intel(R) MKL to use INTEL OpenMP runtime<br>\nNumpy + Intel(R) MKL: preloading libiomp5.so runtime<br>\nMKL_VERBOSE Intel(R) MKL 2019.0 Product build 20180829 for Intel(R) 64 architecture Intel(R) Advanced Vector Extensions 2 (Intel(R) AVX2) enabled processors, Lnx 2.20GHz lp64 intel_thread<br>\nMKL_VERBOSE SDOT(2,0x55fd25117d40,1,0x55fd25117d40,1) 1.61ms CNR:OFF Dyn:1 FastMM:1 TID:0  NThr:16<br>\n1.11.0</p>\n<p>M10 cpu image :<br>\nNumpy + Intel(R) MKL: THREADING LAYER: (null)<br>\nNumpy + Intel(R) MKL: setting Intel(R) MKL to use INTEL OpenMP runtime<br>\nNumpy + Intel(R) MKL: preloading libiomp5.so runtime</p>\n<p>User settings:</p>\n<p>KMP_AFFINITY=granularity=fine,verbose,compact,1,0<br>\nKMP_BLOCKTIME=0<br>\nKMP_SETTINGS=1<br>\nOMP_NUM_THREADS=32</p>\n<p>Effective settings:</p>\n<p>KMP_ABORT_DELAY=0<br>\nKMP_ADAPTIVE_LOCK_PROPS='1,1024'<br>\nKMP_ALIGN_ALLOC=64<br>\nKMP_ALL_THREADPRIVATE=128<br>\nKMP_ATOMIC_MODE=2<br>\nKMP_BLOCKTIME=0<br>\nKMP_CPUINFO_FILE: value is not defined<br>\nKMP_DETERMINISTIC_REDUCTION=false<br>\nKMP_DEVICE_THREAD_LIMIT=2147483647<br>\nKMP_DISP_HAND_THREAD=false<br>\nKMP_DISP_NUM_BUFFERS=7<br>\nKMP_DUPLICATE_LIB_OK=false<br>\nKMP_FORCE_REDUCTION: value is not defined<br>\nKMP_FOREIGN_THREADS_THREADPRIVATE=true<br>\nKMP_FORKJOIN_BARRIER='2,2'<br>\nKMP_FORKJOIN_BARRIER_PATTERN='hyper,hyper'<br>\nKMP_FORKJOIN_FRAMES=true<br>\nKMP_FORKJOIN_FRAMES_MODE=3<br>\nKMP_GTID_MODE=3<br>\nKMP_HANDLE_SIGNALS=false<br>\nKMP_HOT_TEAMS_MAX_LEVEL=1<br>\nKMP_HOT_TEAMS_MODE=0<br>\nKMP_INIT_AT_FORK=true<br>\nKMP_INIT_WAIT=2048<br>\nKMP_ITT_PREPARE_DELAY=0<br>\nKMP_LIBRARY=throughput<br>\nKMP_LOCK_KIND=queuing<br>\nKMP_MALLOC_POOL_INCR=1M<br>\nKMP_NEXT_WAIT=1024<br>\nKMP_NUM_LOCKS_IN_BLOCK=1<br>\nKMP_PLAIN_BARRIER='2,2'<br>\nKMP_PLAIN_BARRIER_PATTERN='hyper,hyper'<br>\nKMP_REDUCTION_BARRIER='1,1'<br>\nKMP_REDUCTION_BARRIER_PATTERN='hyper,hyper'<br>\nKMP_SCHEDULE='static,balanced;guided,iterative'<br>\nKMP_SETTINGS=true<br>\nKMP_SPIN_BACKOFF_PARAMS='4096,100'<br>\nKMP_STACKOFFSET=64<br>\nKMP_STACKPAD=0<br>\nKMP_STACKSIZE=4M<br>\nKMP_STORAGE_MAP=false<br>\nKMP_TASKING=2<br>\nKMP_TASKLOOP_MIN_TASKS=0<br>\nKMP_TASK_STEALING_CONSTRAINT=1<br>\nKMP_TEAMS_THREAD_LIMIT=32<br>\nKMP_TOPOLOGY_METHOD=all<br>\nKMP_USER_LEVEL_MWAIT=false<br>\nKMP_VERSION=false<br>\nKMP_WARNINGS=true<br>\nOMP_AFFINITY_FORMAT='OMP: pid %P tid %T thread %n bound to OS proc set {%a}'<br>\nOMP_ALLOCATOR=omp_default_mem_alloc<br>\nOMP_CANCELLATION=false<br>\nOMP_DEBUG=disabled<br>\nOMP_DEFAULT_DEVICE=0<br>\nOMP_DISPLAY_AFFINITY=false<br>\nOMP_DISPLAY_ENV=false<br>\nOMP_DYNAMIC=false<br>\nOMP_MAX_ACTIVE_LEVELS=2147483647<br>\nOMP_MAX_TASK_PRIORITY=0<br>\nOMP_NESTED=false<br>\nOMP_NUM_THREADS='32'<br>\nOMP_PLACES: value is not defined<br>\nOMP_PROC_BIND='intel'<br>\nOMP_SCHEDULE='static'<br>\nOMP_STACKSIZE=4M<br>\nOMP_TARGET_OFFLOAD=DEFAULT<br>\nOMP_THREAD_LIMIT=2147483647<br>\nOMP_TOOL=enabled<br>\nOMP_TOOL_LIBRARIES: value is not defined<br>\nOMP_WAIT_POLICY=PASSIVE<br>\nKMP_AFFINITY='verbose,warnings,respect,granularity=fine,compact,1,0'</p>\n<p>OMP: Info <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"116869296\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/212\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/212/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/212\">#212</a>: KMP_AFFINITY: decoding x2APIC ids.<br>\nOMP: Info <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"116841232\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/210\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/210/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/210\">#210</a>: KMP_AFFINITY: Affinity capable, using global cpuid leaf 11 info<br>\nOMP: Info <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"116433852\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/154\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/tensorflow/tensorflow/pull/154/hovercard\" href=\"https://github.com/tensorflow/tensorflow/pull/154\">#154</a>: KMP_AFFINITY: Initial OS proc set respected: 0-31<br>\nOMP: Info <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"116441460\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/156\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/156/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/156\">#156</a>: KMP_AFFINITY: 32 available OS procs<br>\nOMP: Info <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"116444691\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/157\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/tensorflow/tensorflow/pull/157/hovercard\" href=\"https://github.com/tensorflow/tensorflow/pull/157\">#157</a>: KMP_AFFINITY: Uniform topology<br>\nOMP: Info <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"116597495\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/179\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/179/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/179\">#179</a>: KMP_AFFINITY: 1 packages x 16 cores/pkg x 2 threads/core (16 total cores)<br>\nOMP: Info <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"116895438\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/214\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/214/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/214\">#214</a>: KMP_AFFINITY: OS proc to physical thread map:<br>\nOMP: Info <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"116516798\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/171\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/171/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/171\">#171</a>: KMP_AFFINITY: OS proc 0 maps to package 0 core 0 thread 0<br>\nOMP: Info <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"116516798\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/171\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/171/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/171\">#171</a>: KMP_AFFINITY: OS proc 16 maps to package 0 core 0 thread 1<br>\nOMP: Info <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"116516798\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/171\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/171/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/171\">#171</a>: KMP_AFFINITY: OS proc 1 maps to package 0 core 1 thread 0<br>\nOMP: Info <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"116516798\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/171\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/171/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/171\">#171</a>: KMP_AFFINITY: OS proc 17 maps to package 0 core 1 thread 1<br>\nOMP: Info <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"116516798\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/171\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/171/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/171\">#171</a>: KMP_AFFINITY: OS proc 2 maps to package 0 core 2 thread 0<br>\nOMP: Info <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"116516798\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/171\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/171/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/171\">#171</a>: KMP_AFFINITY: OS proc 18 maps to package 0 core 2 thread 1<br>\nOMP: Info <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"116516798\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/171\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/171/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/171\">#171</a>: KMP_AFFINITY: OS proc 3 maps to package 0 core 3 thread 0<br>\nOMP: Info <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"116516798\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/171\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/171/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/171\">#171</a>: KMP_AFFINITY: OS proc 19 maps to package 0 core 3 thread 1<br>\nOMP: Info <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"116516798\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/171\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/171/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/171\">#171</a>: KMP_AFFINITY: OS proc 4 maps to package 0 core 4 thread 0<br>\nOMP: Info <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"116516798\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/171\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/171/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/171\">#171</a>: KMP_AFFINITY: OS proc 20 maps to package 0 core 4 thread 1</p>\n<p>OMP: Info <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"117261381\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/250\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/250/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/250\">#250</a>: KMP_AFFINITY: pid 8331 tid 8331 thread 0 bound to OS proc set 0<br>\nMKL_VERBOSE Intel(R) MKL 2019.0 Product build 20180829 for Intel(R) 64 architecture Intel(R) Advanced Vector Extensions 2 (Intel(R) AVX2) enabled processors, Lnx 2.20GHz lp64 intel_thread<br>\nMKL_VERBOSE SDOT(2,0x5622b7736500,1,0x5622b7736500,1) 2.54ms CNR:OFF Dyn:1 FastMM:1 TID:0  NThr:16<br>\n1.11.0</p>\n<p>So i assume intel mkl is being used in M10 image where as mkl is not being used in the M9 image (Note: i have turned off visibility for cuda devices so only cpu inference is being compared) . I observe 2-4x performance degradation with intel mkl.<br>\nThe mkl suggested flags are appropriate:<br>\nKMP_AFFINITY=granularity=fine,verbose,compact,1,0<br>\nKMP_BLOCKTIME=0<br>\nKMP_SETTINGS=1<br>\nOMP_NUM_THREADS=32</p>\n<p>Any ideas on how to debug the root cause and get the maximum performance for my models.</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Google Deep Learning VM\nVersion: m10\nBased on: Debian GNU/Linux 9.5 (stretch) (GNU/Linux 4.9.0-8-amd64 x86_64\\n)\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:\nTensorFlow installed from (source or binary): deep-learning image\nTensorFlow version (use command below): 1.11\nPython version: 2.7\nBazel version (if compiling from source):\nGCC/Compiler version (if compiling from source):\nCUDA/cuDNN version:\nGPU model and memory: N/A\n\nYou can collect some of this information using our environment capture script\nYou can also obtain the TensorFlow version with\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\nDescribe the current behavior\nRunning deep model and some wide linear models. Inference performance is very bad. 2-4x slower relative to running inference without MKL\nDescribe the expected behavior\nPerformance should actually improve with intel mkl instruction set .\nCode to reproduce the issue\ncode for deep and wide linear model. or logistic regression example code from tensorflow example\nOther info / logs\nWhen running using google deep learning image version M9 on gpu machine  (image : tf-latest-cu92, version M9) . Note : the inference is only running on cpu as i turn off the visibility for cuda devices, So the tensorflow code runs only runs on cpu. The image family says they are intel optimized packages but when i rung the benchmarks with verbosity on , i do not observe any mkl related stuff.\nI start another deep learning image (tf-latest-cpu , version M10): Running exact same code on this machine with environment variable (export MKL_VERBOSE=1): I can observe a lot of openMP thread settings , KMP_xxx settings and mkl instructions logged with some timing information. I didn't observe any such thing in the M9 gpu image , even though in both place when i execute command   i observe following logs:\nM9 gpu image\nNumpy + Intel(R) MKL: THREADING LAYER: (null)\nNumpy + Intel(R) MKL: setting Intel(R) MKL to use INTEL OpenMP runtime\nNumpy + Intel(R) MKL: preloading libiomp5.so runtime\nMKL_VERBOSE Intel(R) MKL 2019.0 Product build 20180829 for Intel(R) 64 architecture Intel(R) Advanced Vector Extensions 2 (Intel(R) AVX2) enabled processors, Lnx 2.20GHz lp64 intel_thread\nMKL_VERBOSE SDOT(2,0x55fd25117d40,1,0x55fd25117d40,1) 1.61ms CNR:OFF Dyn:1 FastMM:1 TID:0  NThr:16\n1.11.0\nM10 cpu image :\nNumpy + Intel(R) MKL: THREADING LAYER: (null)\nNumpy + Intel(R) MKL: setting Intel(R) MKL to use INTEL OpenMP runtime\nNumpy + Intel(R) MKL: preloading libiomp5.so runtime\nUser settings:\nKMP_AFFINITY=granularity=fine,verbose,compact,1,0\nKMP_BLOCKTIME=0\nKMP_SETTINGS=1\nOMP_NUM_THREADS=32\nEffective settings:\nKMP_ABORT_DELAY=0\nKMP_ADAPTIVE_LOCK_PROPS='1,1024'\nKMP_ALIGN_ALLOC=64\nKMP_ALL_THREADPRIVATE=128\nKMP_ATOMIC_MODE=2\nKMP_BLOCKTIME=0\nKMP_CPUINFO_FILE: value is not defined\nKMP_DETERMINISTIC_REDUCTION=false\nKMP_DEVICE_THREAD_LIMIT=2147483647\nKMP_DISP_HAND_THREAD=false\nKMP_DISP_NUM_BUFFERS=7\nKMP_DUPLICATE_LIB_OK=false\nKMP_FORCE_REDUCTION: value is not defined\nKMP_FOREIGN_THREADS_THREADPRIVATE=true\nKMP_FORKJOIN_BARRIER='2,2'\nKMP_FORKJOIN_BARRIER_PATTERN='hyper,hyper'\nKMP_FORKJOIN_FRAMES=true\nKMP_FORKJOIN_FRAMES_MODE=3\nKMP_GTID_MODE=3\nKMP_HANDLE_SIGNALS=false\nKMP_HOT_TEAMS_MAX_LEVEL=1\nKMP_HOT_TEAMS_MODE=0\nKMP_INIT_AT_FORK=true\nKMP_INIT_WAIT=2048\nKMP_ITT_PREPARE_DELAY=0\nKMP_LIBRARY=throughput\nKMP_LOCK_KIND=queuing\nKMP_MALLOC_POOL_INCR=1M\nKMP_NEXT_WAIT=1024\nKMP_NUM_LOCKS_IN_BLOCK=1\nKMP_PLAIN_BARRIER='2,2'\nKMP_PLAIN_BARRIER_PATTERN='hyper,hyper'\nKMP_REDUCTION_BARRIER='1,1'\nKMP_REDUCTION_BARRIER_PATTERN='hyper,hyper'\nKMP_SCHEDULE='static,balanced;guided,iterative'\nKMP_SETTINGS=true\nKMP_SPIN_BACKOFF_PARAMS='4096,100'\nKMP_STACKOFFSET=64\nKMP_STACKPAD=0\nKMP_STACKSIZE=4M\nKMP_STORAGE_MAP=false\nKMP_TASKING=2\nKMP_TASKLOOP_MIN_TASKS=0\nKMP_TASK_STEALING_CONSTRAINT=1\nKMP_TEAMS_THREAD_LIMIT=32\nKMP_TOPOLOGY_METHOD=all\nKMP_USER_LEVEL_MWAIT=false\nKMP_VERSION=false\nKMP_WARNINGS=true\nOMP_AFFINITY_FORMAT='OMP: pid %P tid %T thread %n bound to OS proc set {%a}'\nOMP_ALLOCATOR=omp_default_mem_alloc\nOMP_CANCELLATION=false\nOMP_DEBUG=disabled\nOMP_DEFAULT_DEVICE=0\nOMP_DISPLAY_AFFINITY=false\nOMP_DISPLAY_ENV=false\nOMP_DYNAMIC=false\nOMP_MAX_ACTIVE_LEVELS=2147483647\nOMP_MAX_TASK_PRIORITY=0\nOMP_NESTED=false\nOMP_NUM_THREADS='32'\nOMP_PLACES: value is not defined\nOMP_PROC_BIND='intel'\nOMP_SCHEDULE='static'\nOMP_STACKSIZE=4M\nOMP_TARGET_OFFLOAD=DEFAULT\nOMP_THREAD_LIMIT=2147483647\nOMP_TOOL=enabled\nOMP_TOOL_LIBRARIES: value is not defined\nOMP_WAIT_POLICY=PASSIVE\nKMP_AFFINITY='verbose,warnings,respect,granularity=fine,compact,1,0'\nOMP: Info #212: KMP_AFFINITY: decoding x2APIC ids.\nOMP: Info #210: KMP_AFFINITY: Affinity capable, using global cpuid leaf 11 info\nOMP: Info #154: KMP_AFFINITY: Initial OS proc set respected: 0-31\nOMP: Info #156: KMP_AFFINITY: 32 available OS procs\nOMP: Info #157: KMP_AFFINITY: Uniform topology\nOMP: Info #179: KMP_AFFINITY: 1 packages x 16 cores/pkg x 2 threads/core (16 total cores)\nOMP: Info #214: KMP_AFFINITY: OS proc to physical thread map:\nOMP: Info #171: KMP_AFFINITY: OS proc 0 maps to package 0 core 0 thread 0\nOMP: Info #171: KMP_AFFINITY: OS proc 16 maps to package 0 core 0 thread 1\nOMP: Info #171: KMP_AFFINITY: OS proc 1 maps to package 0 core 1 thread 0\nOMP: Info #171: KMP_AFFINITY: OS proc 17 maps to package 0 core 1 thread 1\nOMP: Info #171: KMP_AFFINITY: OS proc 2 maps to package 0 core 2 thread 0\nOMP: Info #171: KMP_AFFINITY: OS proc 18 maps to package 0 core 2 thread 1\nOMP: Info #171: KMP_AFFINITY: OS proc 3 maps to package 0 core 3 thread 0\nOMP: Info #171: KMP_AFFINITY: OS proc 19 maps to package 0 core 3 thread 1\nOMP: Info #171: KMP_AFFINITY: OS proc 4 maps to package 0 core 4 thread 0\nOMP: Info #171: KMP_AFFINITY: OS proc 20 maps to package 0 core 4 thread 1\nOMP: Info #250: KMP_AFFINITY: pid 8331 tid 8331 thread 0 bound to OS proc set 0\nMKL_VERBOSE Intel(R) MKL 2019.0 Product build 20180829 for Intel(R) 64 architecture Intel(R) Advanced Vector Extensions 2 (Intel(R) AVX2) enabled processors, Lnx 2.20GHz lp64 intel_thread\nMKL_VERBOSE SDOT(2,0x5622b7736500,1,0x5622b7736500,1) 2.54ms CNR:OFF Dyn:1 FastMM:1 TID:0  NThr:16\n1.11.0\nSo i assume intel mkl is being used in M10 image where as mkl is not being used in the M9 image (Note: i have turned off visibility for cuda devices so only cpu inference is being compared) . I observe 2-4x performance degradation with intel mkl.\nThe mkl suggested flags are appropriate:\nKMP_AFFINITY=granularity=fine,verbose,compact,1,0\nKMP_BLOCKTIME=0\nKMP_SETTINGS=1\nOMP_NUM_THREADS=32\nAny ideas on how to debug the root cause and get the maximum performance for my models.", "body": "**System information**\r\n- Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Google Deep Learning VM\r\nVersion: m10\r\nBased on: Debian GNU/Linux 9.5 (stretch) (GNU/Linux 4.9.0-8-amd64 x86_64\\n)\r\n- Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:\r\n- TensorFlow installed from (source or binary): deep-learning image  \r\n- TensorFlow version (use command below): 1.11\r\n- Python version: 2.7\r\n- Bazel version (if compiling from source):\r\n- GCC/Compiler version (if compiling from source):\r\n- CUDA/cuDNN version:\r\n- GPU model and memory: N/A \r\n\r\n\r\nYou can collect some of this information using our environment capture [script](https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh)\r\nYou can also obtain the TensorFlow version with\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n\r\n**Describe the current behavior**\r\nRunning deep model and some wide linear models. Inference performance is very bad. 2-4x slower relative to running inference without MKL\r\n**Describe the expected behavior**\r\nPerformance should actually improve with intel mkl instruction set .\r\n\r\n**Code to reproduce the issue**\r\ncode for deep and wide linear model. or logistic regression example code from tensorflow example\r\n\r\n**Other info / logs**\r\nWhen running using google deep learning image version M9 on gpu machine  (image : tf-latest-cu92, version M9) . Note : the inference is only running on cpu as i turn off the visibility for cuda devices, So the tensorflow code runs only runs on cpu. The image family says they are intel optimized packages but when i rung the benchmarks with verbosity on , i do not observe any mkl related stuff.\r\n\r\nI start another deep learning image (tf-latest-cpu , version M10): Running exact same code on this machine with environment variable (export MKL_VERBOSE=1): I can observe a lot of openMP thread settings , KMP_xxx settings and mkl instructions logged with some timing information. I didn't observe any such thing in the M9 gpu image , even though in both place when i execute command   i observe following logs: \r\nM9 gpu image \r\nNumpy + Intel(R) MKL: THREADING LAYER: (null)\r\nNumpy + Intel(R) MKL: setting Intel(R) MKL to use INTEL OpenMP runtime\r\nNumpy + Intel(R) MKL: preloading libiomp5.so runtime\r\nMKL_VERBOSE Intel(R) MKL 2019.0 Product build 20180829 for Intel(R) 64 architecture Intel(R) Advanced Vector Extensions 2 (Intel(R) AVX2) enabled processors, Lnx 2.20GHz lp64 intel_thread\r\nMKL_VERBOSE SDOT(2,0x55fd25117d40,1,0x55fd25117d40,1) 1.61ms CNR:OFF Dyn:1 FastMM:1 TID:0  NThr:16\r\n1.11.0\r\n\r\nM10 cpu image : \r\nNumpy + Intel(R) MKL: THREADING LAYER: (null)\r\nNumpy + Intel(R) MKL: setting Intel(R) MKL to use INTEL OpenMP runtime\r\nNumpy + Intel(R) MKL: preloading libiomp5.so runtime\r\n\r\nUser settings:\r\n\r\n   KMP_AFFINITY=granularity=fine,verbose,compact,1,0\r\n   KMP_BLOCKTIME=0\r\n   KMP_SETTINGS=1\r\n   OMP_NUM_THREADS=32\r\n\r\nEffective settings:\r\n\r\n   KMP_ABORT_DELAY=0\r\n   KMP_ADAPTIVE_LOCK_PROPS='1,1024'\r\n   KMP_ALIGN_ALLOC=64\r\n   KMP_ALL_THREADPRIVATE=128\r\n   KMP_ATOMIC_MODE=2\r\n   KMP_BLOCKTIME=0\r\n   KMP_CPUINFO_FILE: value is not defined\r\n   KMP_DETERMINISTIC_REDUCTION=false\r\n   KMP_DEVICE_THREAD_LIMIT=2147483647\r\n   KMP_DISP_HAND_THREAD=false\r\n   KMP_DISP_NUM_BUFFERS=7\r\n   KMP_DUPLICATE_LIB_OK=false\r\n   KMP_FORCE_REDUCTION: value is not defined\r\n   KMP_FOREIGN_THREADS_THREADPRIVATE=true\r\n   KMP_FORKJOIN_BARRIER='2,2'\r\n   KMP_FORKJOIN_BARRIER_PATTERN='hyper,hyper'\r\n   KMP_FORKJOIN_FRAMES=true\r\n   KMP_FORKJOIN_FRAMES_MODE=3\r\n   KMP_GTID_MODE=3\r\n   KMP_HANDLE_SIGNALS=false\r\n   KMP_HOT_TEAMS_MAX_LEVEL=1\r\n   KMP_HOT_TEAMS_MODE=0\r\n   KMP_INIT_AT_FORK=true\r\n   KMP_INIT_WAIT=2048\r\n   KMP_ITT_PREPARE_DELAY=0\r\n   KMP_LIBRARY=throughput\r\n   KMP_LOCK_KIND=queuing\r\n   KMP_MALLOC_POOL_INCR=1M\r\n   KMP_NEXT_WAIT=1024\r\n   KMP_NUM_LOCKS_IN_BLOCK=1\r\n   KMP_PLAIN_BARRIER='2,2'\r\n   KMP_PLAIN_BARRIER_PATTERN='hyper,hyper'\r\n   KMP_REDUCTION_BARRIER='1,1'\r\n   KMP_REDUCTION_BARRIER_PATTERN='hyper,hyper'\r\n   KMP_SCHEDULE='static,balanced;guided,iterative'\r\n   KMP_SETTINGS=true\r\n   KMP_SPIN_BACKOFF_PARAMS='4096,100'\r\n   KMP_STACKOFFSET=64\r\n   KMP_STACKPAD=0\r\n   KMP_STACKSIZE=4M\r\n   KMP_STORAGE_MAP=false\r\n   KMP_TASKING=2\r\n   KMP_TASKLOOP_MIN_TASKS=0\r\n   KMP_TASK_STEALING_CONSTRAINT=1\r\n   KMP_TEAMS_THREAD_LIMIT=32\r\n   KMP_TOPOLOGY_METHOD=all\r\n   KMP_USER_LEVEL_MWAIT=false\r\n   KMP_VERSION=false\r\n   KMP_WARNINGS=true\r\n   OMP_AFFINITY_FORMAT='OMP: pid %P tid %T thread %n bound to OS proc set {%a}'\r\n   OMP_ALLOCATOR=omp_default_mem_alloc\r\n   OMP_CANCELLATION=false\r\n   OMP_DEBUG=disabled\r\n   OMP_DEFAULT_DEVICE=0\r\n   OMP_DISPLAY_AFFINITY=false\r\n   OMP_DISPLAY_ENV=false\r\n   OMP_DYNAMIC=false\r\n   OMP_MAX_ACTIVE_LEVELS=2147483647\r\n   OMP_MAX_TASK_PRIORITY=0\r\n   OMP_NESTED=false\r\n   OMP_NUM_THREADS='32'\r\n   OMP_PLACES: value is not defined\r\n   OMP_PROC_BIND='intel'\r\n   OMP_SCHEDULE='static'\r\n   OMP_STACKSIZE=4M\r\n   OMP_TARGET_OFFLOAD=DEFAULT\r\n   OMP_THREAD_LIMIT=2147483647\r\n   OMP_TOOL=enabled\r\n   OMP_TOOL_LIBRARIES: value is not defined\r\n   OMP_WAIT_POLICY=PASSIVE\r\n   KMP_AFFINITY='verbose,warnings,respect,granularity=fine,compact,1,0'\r\n\r\nOMP: Info #212: KMP_AFFINITY: decoding x2APIC ids.\r\nOMP: Info #210: KMP_AFFINITY: Affinity capable, using global cpuid leaf 11 info\r\nOMP: Info #154: KMP_AFFINITY: Initial OS proc set respected: 0-31\r\nOMP: Info #156: KMP_AFFINITY: 32 available OS procs\r\nOMP: Info #157: KMP_AFFINITY: Uniform topology\r\nOMP: Info #179: KMP_AFFINITY: 1 packages x 16 cores/pkg x 2 threads/core (16 total cores)\r\nOMP: Info #214: KMP_AFFINITY: OS proc to physical thread map:\r\nOMP: Info #171: KMP_AFFINITY: OS proc 0 maps to package 0 core 0 thread 0\r\nOMP: Info #171: KMP_AFFINITY: OS proc 16 maps to package 0 core 0 thread 1\r\nOMP: Info #171: KMP_AFFINITY: OS proc 1 maps to package 0 core 1 thread 0\r\nOMP: Info #171: KMP_AFFINITY: OS proc 17 maps to package 0 core 1 thread 1\r\nOMP: Info #171: KMP_AFFINITY: OS proc 2 maps to package 0 core 2 thread 0\r\nOMP: Info #171: KMP_AFFINITY: OS proc 18 maps to package 0 core 2 thread 1\r\nOMP: Info #171: KMP_AFFINITY: OS proc 3 maps to package 0 core 3 thread 0\r\nOMP: Info #171: KMP_AFFINITY: OS proc 19 maps to package 0 core 3 thread 1\r\nOMP: Info #171: KMP_AFFINITY: OS proc 4 maps to package 0 core 4 thread 0\r\nOMP: Info #171: KMP_AFFINITY: OS proc 20 maps to package 0 core 4 thread 1\r\n\r\nOMP: Info #250: KMP_AFFINITY: pid 8331 tid 8331 thread 0 bound to OS proc set 0\r\nMKL_VERBOSE Intel(R) MKL 2019.0 Product build 20180829 for Intel(R) 64 architecture Intel(R) Advanced Vector Extensions 2 (Intel(R) AVX2) enabled processors, Lnx 2.20GHz lp64 intel_thread\r\nMKL_VERBOSE SDOT(2,0x5622b7736500,1,0x5622b7736500,1) 2.54ms CNR:OFF Dyn:1 FastMM:1 TID:0  NThr:16\r\n1.11.0\r\n\r\nSo i assume intel mkl is being used in M10 image where as mkl is not being used in the M9 image (Note: i have turned off visibility for cuda devices so only cpu inference is being compared) . I observe 2-4x performance degradation with intel mkl.\r\nThe mkl suggested flags are appropriate: \r\nKMP_AFFINITY=granularity=fine,verbose,compact,1,0\r\n   KMP_BLOCKTIME=0\r\n   KMP_SETTINGS=1\r\n   OMP_NUM_THREADS=32\r\n\r\nAny ideas on how to debug the root cause and get the maximum performance for my models.\r\n"}