{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19262", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19262/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19262/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19262/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19262", "id": 322702278, "node_id": "MDU6SXNzdWUzMjI3MDIyNzg=", "number": 19262, "title": "PosixFileSystem::CreateDir should create directory respecting umask", "user": {"login": "voegtlel", "id": 5764745, "node_id": "MDQ6VXNlcjU3NjQ3NDU=", "avatar_url": "https://avatars0.githubusercontent.com/u/5764745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/voegtlel", "html_url": "https://github.com/voegtlel", "followers_url": "https://api.github.com/users/voegtlel/followers", "following_url": "https://api.github.com/users/voegtlel/following{/other_user}", "gists_url": "https://api.github.com/users/voegtlel/gists{/gist_id}", "starred_url": "https://api.github.com/users/voegtlel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/voegtlel/subscriptions", "organizations_url": "https://api.github.com/users/voegtlel/orgs", "repos_url": "https://api.github.com/users/voegtlel/repos", "events_url": "https://api.github.com/users/voegtlel/events{/privacy}", "received_events_url": "https://api.github.com/users/voegtlel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-05-14T07:33:24Z", "updated_at": "2018-11-14T19:18:20Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.8.0</li>\n<li><strong>Python version</strong>: 3.6.5</li>\n<li><strong>Bazel version (if compiling from source)</strong>: N/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: N/A</li>\n<li><strong>CUDA/cuDNN version</strong>: N/A</li>\n<li><strong>GPU model and memory</strong>: N/A</li>\n<li><strong>Exact command to reproduce</strong>: See below</li>\n</ul>\n<h3>The Problem</h3>\n<p>When using the EventFileWriter to write event files to a non-existent directory, the directory will be created but will not have group or other permissions, even if the parent directory has the sticky bit set and umask is set to 0777.</p>\n<p>The problem originates from <a href=\"https://github.com/tensorflow/tensorflow/blob/e7f158858479400f17a1b6351e9827e3aa83e7ff/tensorflow/core/platform/posix/posix_file_system.cc#L244\">posix_file_system.cc:244</a>. Here the mask is set to 0755, which may not be desired. Instead setting this to 0777 will respect the umask, thus work as expected.</p>\n<h3>Source code / logs</h3>\n<p>The following code will create the directory \"nonexistent-directory\" with permissions 0755 even when umask is set to 0775 or 0755:</p>\n<pre><code>from tensorflow.python.training.summary_io import SummaryWriterCache\nSummaryWriterCache.get(\"nonexistent-directory\")\n</code></pre>\n<h3>Workaround</h3>\n<p>As a workaround, the directory can be created before the <code>SummaryWriterCache</code> is used:</p>\n<pre><code>from tensorflow.python.training.summary_io import SummaryWriterCache\nimport os\nos.makedirs(\"nonexistent-directory\", exist_ok=True)\nSummaryWriterCache.get(\"nonexistent-directory\")\n</code></pre>\n<p>In this case the umask is respected correctly.</p>\n<h3>Fix</h3>\n<p>Replacing <a href=\"https://github.com/tensorflow/tensorflow/blob/e7f158858479400f17a1b6351e9827e3aa83e7ff/tensorflow/core/platform/posix/posix_file_system.cc#L244\">posix_file_system.cc:244</a> by <code>if (mkdir(TranslateName(name).c_str(), 0777) != 0) {</code> should fix the problem.</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): 1.8.0\nPython version: 3.6.5\nBazel version (if compiling from source): N/A\nGCC/Compiler version (if compiling from source): N/A\nCUDA/cuDNN version: N/A\nGPU model and memory: N/A\nExact command to reproduce: See below\n\nThe Problem\nWhen using the EventFileWriter to write event files to a non-existent directory, the directory will be created but will not have group or other permissions, even if the parent directory has the sticky bit set and umask is set to 0777.\nThe problem originates from posix_file_system.cc:244. Here the mask is set to 0755, which may not be desired. Instead setting this to 0777 will respect the umask, thus work as expected.\nSource code / logs\nThe following code will create the directory \"nonexistent-directory\" with permissions 0755 even when umask is set to 0775 or 0755:\nfrom tensorflow.python.training.summary_io import SummaryWriterCache\nSummaryWriterCache.get(\"nonexistent-directory\")\n\nWorkaround\nAs a workaround, the directory can be created before the SummaryWriterCache is used:\nfrom tensorflow.python.training.summary_io import SummaryWriterCache\nimport os\nos.makedirs(\"nonexistent-directory\", exist_ok=True)\nSummaryWriterCache.get(\"nonexistent-directory\")\n\nIn this case the umask is respected correctly.\nFix\nReplacing posix_file_system.cc:244 by if (mkdir(TranslateName(name).c_str(), 0777) != 0) { should fix the problem.", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.8.0\r\n- **Python version**: 3.6.5\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: See below\r\n\r\n### The Problem\r\nWhen using the EventFileWriter to write event files to a non-existent directory, the directory will be created but will not have group or other permissions, even if the parent directory has the sticky bit set and umask is set to 0777.\r\n\r\nThe problem originates from [posix_file_system.cc:244](https://github.com/tensorflow/tensorflow/blob/e7f158858479400f17a1b6351e9827e3aa83e7ff/tensorflow/core/platform/posix/posix_file_system.cc#L244). Here the mask is set to 0755, which may not be desired. Instead setting this to 0777 will respect the umask, thus work as expected.\r\n\r\n### Source code / logs\r\nThe following code will create the directory \"nonexistent-directory\" with permissions 0755 even when umask is set to 0775 or 0755:\r\n```\r\nfrom tensorflow.python.training.summary_io import SummaryWriterCache\r\nSummaryWriterCache.get(\"nonexistent-directory\")\r\n```\r\n\r\n### Workaround\r\nAs a workaround, the directory can be created before the `SummaryWriterCache` is used:\r\n```\r\nfrom tensorflow.python.training.summary_io import SummaryWriterCache\r\nimport os\r\nos.makedirs(\"nonexistent-directory\", exist_ok=True)\r\nSummaryWriterCache.get(\"nonexistent-directory\")\r\n```\r\nIn this case the umask is respected correctly.\r\n\r\n### Fix\r\nReplacing [posix_file_system.cc:244](https://github.com/tensorflow/tensorflow/blob/e7f158858479400f17a1b6351e9827e3aa83e7ff/tensorflow/core/platform/posix/posix_file_system.cc#L244) by `if (mkdir(TranslateName(name).c_str(), 0777) != 0) {` should fix the problem."}