{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17323", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17323/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17323/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17323/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17323", "id": 301024267, "node_id": "MDU6SXNzdWUzMDEwMjQyNjc=", "number": 17323, "title": "Save activation map for a specific convnet in the process of tf.train.MonitoredTrainingSession()", "user": {"login": "anbai106", "id": 16743978, "node_id": "MDQ6VXNlcjE2NzQzOTc4", "avatar_url": "https://avatars0.githubusercontent.com/u/16743978?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anbai106", "html_url": "https://github.com/anbai106", "followers_url": "https://api.github.com/users/anbai106/followers", "following_url": "https://api.github.com/users/anbai106/following{/other_user}", "gists_url": "https://api.github.com/users/anbai106/gists{/gist_id}", "starred_url": "https://api.github.com/users/anbai106/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anbai106/subscriptions", "organizations_url": "https://api.github.com/users/anbai106/orgs", "repos_url": "https://api.github.com/users/anbai106/repos", "events_url": "https://api.github.com/users/anbai106/events{/privacy}", "received_events_url": "https://api.github.com/users/anbai106/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-02-28T13:30:35Z", "updated_at": "2018-03-07T00:55:19Z", "closed_at": "2018-03-07T00:55:19Z", "author_association": "NONE", "body_html": "<p>ADDING FEATURES</p>\n<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: ('v1.4.0-19-ga52c8d9', '1.4.1')</li>\n<li><strong>Python version</strong>:  2.7 anaconda</li>\n<li><strong>Bazel version (if compiling from source)</strong>:</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:</li>\n<li><strong>CUDA/cuDNN version</strong>:</li>\n<li><strong>GPU model and memory</strong>: Quadro K400</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I followed this tutorial from the source code of TF: <strong>model/tutorials/image/cifar10/</strong>, in the tutorial, you used tf.train.MonitoredTrainingSession() to log the checkpoint or tensor for future usage with TensorBoard, my question is to display the activation maps of my convnet during training process. But inside the:<br>\n<code>while not mon_sess.should_stop(): mon_sess.run(train_op)</code></p>\n<p>I can not add new tensor because the Graph is finalized. So I want to ask you how to add something like <strong>tf.summary.image</strong>: Pass one example image to a specific convnet  after relu, and save it as png for all the filters???</p>\n<p>I think I can easily implement this in a normal <strong>tf.Session()</strong>, but I am still interested if we can do it in <strong>tf.train.MonitoredTrainingSession()</strong>.</p>\n<p>I think that would be great for the newbie to understand what happened for our CNN.</p>\n<p>Thanks in advance</p>", "body_text": "ADDING FEATURES\nSystem information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): ('v1.4.0-19-ga52c8d9', '1.4.1')\nPython version:  2.7 anaconda\nBazel version (if compiling from source):\nGCC/Compiler version (if compiling from source):\nCUDA/cuDNN version:\nGPU model and memory: Quadro K400\nExact command to reproduce:\n\nDescribe the problem\nI followed this tutorial from the source code of TF: model/tutorials/image/cifar10/, in the tutorial, you used tf.train.MonitoredTrainingSession() to log the checkpoint or tensor for future usage with TensorBoard, my question is to display the activation maps of my convnet during training process. But inside the:\nwhile not mon_sess.should_stop(): mon_sess.run(train_op)\nI can not add new tensor because the Graph is finalized. So I want to ask you how to add something like tf.summary.image: Pass one example image to a specific convnet  after relu, and save it as png for all the filters???\nI think I can easily implement this in a normal tf.Session(), but I am still interested if we can do it in tf.train.MonitoredTrainingSession().\nI think that would be great for the newbie to understand what happened for our CNN.\nThanks in advance", "body": "ADDING FEATURES\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: ('v1.4.0-19-ga52c8d9', '1.4.1')\r\n- **Python version**:  2.7 anaconda\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**: \r\n- **GPU model and memory**: Quadro K400\r\n- **Exact command to reproduce**:\r\n\r\n\r\n### Describe the problem\r\nI followed this tutorial from the source code of TF: **model/tutorials/image/cifar10/**, in the tutorial, you used tf.train.MonitoredTrainingSession() to log the checkpoint or tensor for future usage with TensorBoard, my question is to display the activation maps of my convnet during training process. But inside the:\r\n`while not mon_sess.should_stop():\r\n             mon_sess.run(train_op)`\r\n\r\nI can not add new tensor because the Graph is finalized. So I want to ask you how to add something like **tf.summary.image**: Pass one example image to a specific convnet  after relu, and save it as png for all the filters???\r\n\r\nI think I can easily implement this in a normal **tf.Session()**, but I am still interested if we can do it in **tf.train.MonitoredTrainingSession()**.\r\n\r\nI think that would be great for the newbie to understand what happened for our CNN.\r\n\r\nThanks in advance\r\n\r\n\r\n"}