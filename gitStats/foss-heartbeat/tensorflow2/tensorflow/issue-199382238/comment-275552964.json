{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/275552964", "html_url": "https://github.com/tensorflow/tensorflow/issues/6716#issuecomment-275552964", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6716", "id": 275552964, "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTU1Mjk2NA==", "user": {"login": "michaelisard", "id": 5376757, "node_id": "MDQ6VXNlcjUzNzY3NTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/5376757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelisard", "html_url": "https://github.com/michaelisard", "followers_url": "https://api.github.com/users/michaelisard/followers", "following_url": "https://api.github.com/users/michaelisard/following{/other_user}", "gists_url": "https://api.github.com/users/michaelisard/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelisard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelisard/subscriptions", "organizations_url": "https://api.github.com/users/michaelisard/orgs", "repos_url": "https://api.github.com/users/michaelisard/repos", "events_url": "https://api.github.com/users/michaelisard/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelisard/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-27T00:03:41Z", "updated_at": "2017-01-27T00:03:41Z", "author_association": "MEMBER", "body_html": "<p>The issue would arise if temporaries got allocated by threads on the Eigen threadpool. So it shouldn't happen for GPU allocations. For CPU I haven't looked at all the ops: someone could do it, but it seems unlikely to be performance-friendly.</p>\n<p>Anything held in the resource manager may persist across run calls, and therefore be allocated and deallocated by different calls. E.g., a tensor in a queue, or a variable that is being replaced by one of a different shape. Off-hand I don't think other allocations should cross run calls, but I am not 100% sure.</p>", "body_text": "The issue would arise if temporaries got allocated by threads on the Eigen threadpool. So it shouldn't happen for GPU allocations. For CPU I haven't looked at all the ops: someone could do it, but it seems unlikely to be performance-friendly.\nAnything held in the resource manager may persist across run calls, and therefore be allocated and deallocated by different calls. E.g., a tensor in a queue, or a variable that is being replaced by one of a different shape. Off-hand I don't think other allocations should cross run calls, but I am not 100% sure.", "body": "The issue would arise if temporaries got allocated by threads on the Eigen threadpool. So it shouldn't happen for GPU allocations. For CPU I haven't looked at all the ops: someone could do it, but it seems unlikely to be performance-friendly.\r\n\r\nAnything held in the resource manager may persist across run calls, and therefore be allocated and deallocated by different calls. E.g., a tensor in a queue, or a variable that is being replaced by one of a different shape. Off-hand I don't think other allocations should cross run calls, but I am not 100% sure."}