{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/275478889", "html_url": "https://github.com/tensorflow/tensorflow/issues/6716#issuecomment-275478889", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6716", "id": 275478889, "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTQ3ODg4OQ==", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-26T19:00:29Z", "updated_at": "2017-01-26T19:00:29Z", "author_association": "CONTRIBUTOR", "body_html": "<p>It seems hard to get accurate deallocation information even from VLOG messages.</p>\n<p>The problem is that you can have multiple allocations with the same allocation id, but different step ids in the same <code>.run</code> call. The deallocation message does not include step_id, so it's ambiguous.</p>\n<p>Here's an example \"leak\" I spent this morning debugging</p>\n<pre><code>2017-01-26 10:13:30: I tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorAllocation { step_id: -6 kernel_name: \"Unknown (from Proto)\" tensor { dtype: DT_FLOAT shape { } allocation_description { requested_bytes: 4 allocated_bytes: 4 allocator_name: \"cpu\" allocation_id: 6 has_single_reference: true ptr: 5045586496 } } }\n\n2017-01-26 10:13:30: I tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 6 allocator_name: \"cpu\" }\n\n2017-01-26 10:13:30: I tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorAllocation { step_id: 2 kernel_name: \"a1\" tensor { dtype: DT_FLOAT shape { dim { size: 250000 } } allocation_description { requested_bytes: 1000000 allocated_bytes: 1000192 allocator_name: \"gpu_bfc\" allocation_id: 6 has_single_reference: true ptr: 30078652160 } } }\n\n2017-01-26 10:13:30: I tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 6 allocator_name: \"gpu_bfc\" }\n\n</code></pre>", "body_text": "It seems hard to get accurate deallocation information even from VLOG messages.\nThe problem is that you can have multiple allocations with the same allocation id, but different step ids in the same .run call. The deallocation message does not include step_id, so it's ambiguous.\nHere's an example \"leak\" I spent this morning debugging\n2017-01-26 10:13:30: I tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorAllocation { step_id: -6 kernel_name: \"Unknown (from Proto)\" tensor { dtype: DT_FLOAT shape { } allocation_description { requested_bytes: 4 allocated_bytes: 4 allocator_name: \"cpu\" allocation_id: 6 has_single_reference: true ptr: 5045586496 } } }\n\n2017-01-26 10:13:30: I tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 6 allocator_name: \"cpu\" }\n\n2017-01-26 10:13:30: I tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorAllocation { step_id: 2 kernel_name: \"a1\" tensor { dtype: DT_FLOAT shape { dim { size: 250000 } } allocation_description { requested_bytes: 1000000 allocated_bytes: 1000192 allocator_name: \"gpu_bfc\" allocation_id: 6 has_single_reference: true ptr: 30078652160 } } }\n\n2017-01-26 10:13:30: I tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 6 allocator_name: \"gpu_bfc\" }", "body": "It seems hard to get accurate deallocation information even from VLOG messages.\r\n\r\nThe problem is that you can have multiple allocations with the same allocation id, but different step ids in the same `.run` call. The deallocation message does not include step_id, so it's ambiguous.\r\n\r\nHere's an example \"leak\" I spent this morning debugging\r\n\r\n```\r\n2017-01-26 10:13:30: I tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorAllocation { step_id: -6 kernel_name: \"Unknown (from Proto)\" tensor { dtype: DT_FLOAT shape { } allocation_description { requested_bytes: 4 allocated_bytes: 4 allocator_name: \"cpu\" allocation_id: 6 has_single_reference: true ptr: 5045586496 } } }\r\n\r\n2017-01-26 10:13:30: I tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 6 allocator_name: \"cpu\" }\r\n\r\n2017-01-26 10:13:30: I tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorAllocation { step_id: 2 kernel_name: \"a1\" tensor { dtype: DT_FLOAT shape { dim { size: 250000 } } allocation_description { requested_bytes: 1000000 allocated_bytes: 1000192 allocator_name: \"gpu_bfc\" allocation_id: 6 has_single_reference: true ptr: 30078652160 } } }\r\n\r\n2017-01-26 10:13:30: I tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 6 allocator_name: \"gpu_bfc\" }\r\n\r\n```"}