{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/275803830", "html_url": "https://github.com/tensorflow/tensorflow/issues/6716#issuecomment-275803830", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6716", "id": 275803830, "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTgwMzgzMA==", "user": {"login": "michaelisard", "id": 5376757, "node_id": "MDQ6VXNlcjUzNzY3NTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/5376757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelisard", "html_url": "https://github.com/michaelisard", "followers_url": "https://api.github.com/users/michaelisard/followers", "following_url": "https://api.github.com/users/michaelisard/following{/other_user}", "gists_url": "https://api.github.com/users/michaelisard/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelisard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelisard/subscriptions", "organizations_url": "https://api.github.com/users/michaelisard/orgs", "repos_url": "https://api.github.com/users/michaelisard/repos", "events_url": "https://api.github.com/users/michaelisard/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelisard/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-27T23:39:23Z", "updated_at": "2017-01-27T23:39:23Z", "author_association": "MEMBER", "body_html": "<p>For the orphan allocation, I think the most likely is that someone is calling AllocateRaw and forgetting to call LogMemory::RecordRawAllocation at the same time. The easiest way to debug it is probably to add a log statement in TrackingAllocator::AllocateRaw. If there's an orphan deallocation of size Q, grep through for all the allocations of size Q and look for the one with no matching <strong>LOG_MEMORY</strong>. Then report the bug :)</p>", "body_text": "For the orphan allocation, I think the most likely is that someone is calling AllocateRaw and forgetting to call LogMemory::RecordRawAllocation at the same time. The easiest way to debug it is probably to add a log statement in TrackingAllocator::AllocateRaw. If there's an orphan deallocation of size Q, grep through for all the allocations of size Q and look for the one with no matching LOG_MEMORY. Then report the bug :)", "body": "For the orphan allocation, I think the most likely is that someone is calling AllocateRaw and forgetting to call LogMemory::RecordRawAllocation at the same time. The easiest way to debug it is probably to add a log statement in TrackingAllocator::AllocateRaw. If there's an orphan deallocation of size Q, grep through for all the allocations of size Q and look for the one with no matching __LOG_MEMORY__. Then report the bug :)"}