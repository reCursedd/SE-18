{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/352189481", "html_url": "https://github.com/tensorflow/tensorflow/issues/15410#issuecomment-352189481", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15410", "id": 352189481, "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjE4OTQ4MQ==", "user": {"login": "aselle", "id": 326106, "node_id": "MDQ6VXNlcjMyNjEwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/326106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aselle", "html_url": "https://github.com/aselle", "followers_url": "https://api.github.com/users/aselle/followers", "following_url": "https://api.github.com/users/aselle/following{/other_user}", "gists_url": "https://api.github.com/users/aselle/gists{/gist_id}", "starred_url": "https://api.github.com/users/aselle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aselle/subscriptions", "organizations_url": "https://api.github.com/users/aselle/orgs", "repos_url": "https://api.github.com/users/aselle/repos", "events_url": "https://api.github.com/users/aselle/events{/privacy}", "received_events_url": "https://api.github.com/users/aselle/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-16T15:15:50Z", "updated_at": "2017-12-16T15:15:50Z", "author_association": "MEMBER", "body_html": "<p>Sorry about this. It seems it has to do with the interface sealing in tensorflow (where we try to prevent exposing symbols unrelated to the interfaces). You can work around this with the following code</p>\n<pre><code>\nimport tensorflow as tf\n# manually put back imported modules\nimport tempfile\nimport subprocess\ntf.contrib.lite.tempfile = tempfile\ntf.contrib.lite.subprocess = subprocess\n\nimg = tf.placeholder(name=\"img\", dtype=tf.float32, shape=(1, 64, 64, 3))\nval = img + tf.constant([1., 2., 3.]) + tf.constant([1., 4., 4.])\nout = tf.identity(val, name=\"out\")\nwith tf.Session() as sess:\n  tflite_model = tf.contrib.lite.toco_convert(sess.graph_def, [img], [out])\n  open(\"converteds_model.tflite\", \"wb\").write(tflite_model)\n</code></pre>\n<p>I'll make a more permanent fix soon.</p>", "body_text": "Sorry about this. It seems it has to do with the interface sealing in tensorflow (where we try to prevent exposing symbols unrelated to the interfaces). You can work around this with the following code\n\nimport tensorflow as tf\n# manually put back imported modules\nimport tempfile\nimport subprocess\ntf.contrib.lite.tempfile = tempfile\ntf.contrib.lite.subprocess = subprocess\n\nimg = tf.placeholder(name=\"img\", dtype=tf.float32, shape=(1, 64, 64, 3))\nval = img + tf.constant([1., 2., 3.]) + tf.constant([1., 4., 4.])\nout = tf.identity(val, name=\"out\")\nwith tf.Session() as sess:\n  tflite_model = tf.contrib.lite.toco_convert(sess.graph_def, [img], [out])\n  open(\"converteds_model.tflite\", \"wb\").write(tflite_model)\n\nI'll make a more permanent fix soon.", "body": "Sorry about this. It seems it has to do with the interface sealing in tensorflow (where we try to prevent exposing symbols unrelated to the interfaces). You can work around this with the following code\r\n\r\n```\r\n\r\nimport tensorflow as tf\r\n# manually put back imported modules\r\nimport tempfile\r\nimport subprocess\r\ntf.contrib.lite.tempfile = tempfile\r\ntf.contrib.lite.subprocess = subprocess\r\n\r\nimg = tf.placeholder(name=\"img\", dtype=tf.float32, shape=(1, 64, 64, 3))\r\nval = img + tf.constant([1., 2., 3.]) + tf.constant([1., 4., 4.])\r\nout = tf.identity(val, name=\"out\")\r\nwith tf.Session() as sess:\r\n  tflite_model = tf.contrib.lite.toco_convert(sess.graph_def, [img], [out])\r\n  open(\"converteds_model.tflite\", \"wb\").write(tflite_model)\r\n```\r\nI'll make a more permanent fix soon.\r\n"}