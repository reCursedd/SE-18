{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9859", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9859/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9859/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9859/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9859", "id": 228288192, "node_id": "MDU6SXNzdWUyMjgyODgxOTI=", "number": 9859, "title": "Where is tf.layers.flatten?", "user": {"login": "Hvass-Labs", "id": 13588114, "node_id": "MDQ6VXNlcjEzNTg4MTE0", "avatar_url": "https://avatars2.githubusercontent.com/u/13588114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hvass-Labs", "html_url": "https://github.com/Hvass-Labs", "followers_url": "https://api.github.com/users/Hvass-Labs/followers", "following_url": "https://api.github.com/users/Hvass-Labs/following{/other_user}", "gists_url": "https://api.github.com/users/Hvass-Labs/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hvass-Labs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hvass-Labs/subscriptions", "organizations_url": "https://api.github.com/users/Hvass-Labs/orgs", "repos_url": "https://api.github.com/users/Hvass-Labs/repos", "events_url": "https://api.github.com/users/Hvass-Labs/events{/privacy}", "received_events_url": "https://api.github.com/users/Hvass-Labs/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2017-05-12T13:13:38Z", "updated_at": "2018-02-19T08:04:06Z", "closed_at": "2017-11-14T06:17:48Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I hope this question is considered suitable for asking here on GitHub rather than StackOverflow as it relates to a possibly missing feature of the TensorFlow API. I apologize beforehand if I am wasting your time.</p>\n<p>This concerns TensorFlow 1.1.0 and <code>tf.layers</code></p>\n<p>The tutorial on <code>tf.layers</code> uses manual reshaping to get from 4-rank to 2-rank tensors (search for the word flatten):</p>\n<p><a href=\"https://www.tensorflow.org/tutorials/layers\" rel=\"nofollow\">https://www.tensorflow.org/tutorials/layers</a></p>\n<p>This is not very elegant and I would prefer to use a <code>flatten()</code> function.</p>\n<p>The documentation for <code>tf.layers.dense()</code> says something about flattening the input, but it apparently does something else, as discussed in other threads <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"212525271\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/8175\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/8175/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/8175\">#8175</a> and <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"220211978\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/9043\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/tensorflow/tensorflow/pull/9043/hovercard\" href=\"https://github.com/tensorflow/tensorflow/pull/9043\">#9043</a></p>\n<p>There does not seem to be any <code>tf.layers.flatten()</code> function, see e.g. the API docs:</p>\n<p><a href=\"https://www.tensorflow.org/api_docs/python/tf/layers\" rel=\"nofollow\">https://www.tensorflow.org/api_docs/python/tf/layers</a></p>\n<p>Although there is one for <code>tf.contrib.layers.flatten()</code> as shown here:</p>\n<p><a href=\"https://www.tensorflow.org/api_docs/python/tf/contrib/layers/flatten\" rel=\"nofollow\">https://www.tensorflow.org/api_docs/python/tf/contrib/layers/flatten</a></p>\n<p>I wonder if <code>flatten()</code> has been omitted for some reason when moving <code>layers</code> to TF core (why?) or perhaps it has been moved somewhere else, but I have searched and I cannot find it anywhere?</p>\n<p>Furthermore, I would like to ask if I can expect that <code>tf.layers</code> is going to be the standard builder API going forward? Or will you focus on Keras instead? I have previously used PrettyTensor. There is also tf.slim and other builder APIs. I don't want to change builder API every 6 months, so I'd like to know what the TF developers are betting on this time?</p>", "body_text": "I hope this question is considered suitable for asking here on GitHub rather than StackOverflow as it relates to a possibly missing feature of the TensorFlow API. I apologize beforehand if I am wasting your time.\nThis concerns TensorFlow 1.1.0 and tf.layers\nThe tutorial on tf.layers uses manual reshaping to get from 4-rank to 2-rank tensors (search for the word flatten):\nhttps://www.tensorflow.org/tutorials/layers\nThis is not very elegant and I would prefer to use a flatten() function.\nThe documentation for tf.layers.dense() says something about flattening the input, but it apparently does something else, as discussed in other threads #8175 and #9043\nThere does not seem to be any tf.layers.flatten() function, see e.g. the API docs:\nhttps://www.tensorflow.org/api_docs/python/tf/layers\nAlthough there is one for tf.contrib.layers.flatten() as shown here:\nhttps://www.tensorflow.org/api_docs/python/tf/contrib/layers/flatten\nI wonder if flatten() has been omitted for some reason when moving layers to TF core (why?) or perhaps it has been moved somewhere else, but I have searched and I cannot find it anywhere?\nFurthermore, I would like to ask if I can expect that tf.layers is going to be the standard builder API going forward? Or will you focus on Keras instead? I have previously used PrettyTensor. There is also tf.slim and other builder APIs. I don't want to change builder API every 6 months, so I'd like to know what the TF developers are betting on this time?", "body": "I hope this question is considered suitable for asking here on GitHub rather than StackOverflow as it relates to a possibly missing feature of the TensorFlow API. I apologize beforehand if I am wasting your time.\r\n\r\nThis concerns TensorFlow 1.1.0 and `tf.layers`\r\n\r\nThe tutorial on `tf.layers` uses manual reshaping to get from 4-rank to 2-rank tensors (search for the word flatten):\r\n\r\nhttps://www.tensorflow.org/tutorials/layers\r\n\r\nThis is not very elegant and I would prefer to use a `flatten()` function.\r\n\r\nThe documentation for `tf.layers.dense()` says something about flattening the input, but it apparently does something else, as discussed in other threads https://github.com/tensorflow/tensorflow/issues/8175 and https://github.com/tensorflow/tensorflow/pull/9043\r\n\r\nThere does not seem to be any `tf.layers.flatten()` function, see e.g. the API docs:\r\n\r\nhttps://www.tensorflow.org/api_docs/python/tf/layers\r\n\r\nAlthough there is one for `tf.contrib.layers.flatten()` as shown here:\r\n\r\nhttps://www.tensorflow.org/api_docs/python/tf/contrib/layers/flatten\r\n\r\nI wonder if `flatten()` has been omitted for some reason when moving `layers` to TF core (why?) or perhaps it has been moved somewhere else, but I have searched and I cannot find it anywhere?\r\n\r\nFurthermore, I would like to ask if I can expect that `tf.layers` is going to be the standard builder API going forward? Or will you focus on Keras instead? I have previously used PrettyTensor. There is also tf.slim and other builder APIs. I don't want to change builder API every 6 months, so I'd like to know what the TF developers are betting on this time?"}