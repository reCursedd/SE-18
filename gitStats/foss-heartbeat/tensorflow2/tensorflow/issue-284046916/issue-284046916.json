{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15569", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15569/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15569/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15569/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15569", "id": 284046916, "node_id": "MDU6SXNzdWUyODQwNDY5MTY=", "number": 15569, "title": "Dataset shuffle operation is not deterministic", "user": {"login": "ahmedanis03", "id": 16265018, "node_id": "MDQ6VXNlcjE2MjY1MDE4", "avatar_url": "https://avatars3.githubusercontent.com/u/16265018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahmedanis03", "html_url": "https://github.com/ahmedanis03", "followers_url": "https://api.github.com/users/ahmedanis03/followers", "following_url": "https://api.github.com/users/ahmedanis03/following{/other_user}", "gists_url": "https://api.github.com/users/ahmedanis03/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahmedanis03/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahmedanis03/subscriptions", "organizations_url": "https://api.github.com/users/ahmedanis03/orgs", "repos_url": "https://api.github.com/users/ahmedanis03/repos", "events_url": "https://api.github.com/users/ahmedanis03/events{/privacy}", "received_events_url": "https://api.github.com/users/ahmedanis03/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-22T01:07:43Z", "updated_at": "2017-12-22T15:12:55Z", "closed_at": "2017-12-22T15:12:54Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:elementary OS 0.4.1 Loki</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version</strong>: v1.4.0-19-ga52c8d9 1.4.1</li>\n<li><strong>Python version</strong>: 3.5.2</li>\n<li><strong>Bazel version (if compiling from source)</strong>: N/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: N/A</li>\n<li><strong>CUDA/cuDNN version</strong>: Not related</li>\n<li><strong>GPU model and memory</strong>: Not related</li>\n<li><strong>Exact command to reproduce</strong>: mentioned below</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>Dataset Shuffle operation is not determenastic</p>\n<h3>Source code / logs</h3>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n<span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">test</span>():\n  np.random.seed(<span class=\"pl-c1\">42</span>)\n  tf.set_random_seed(<span class=\"pl-c1\">42</span>)\n  numbers <span class=\"pl-k\">=</span> np.arange(<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">100</span>)\n\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">get_data</span>():\n    dataset <span class=\"pl-k\">=</span> tf.data.Dataset.from_tensor_slices(numbers)  <span class=\"pl-c\"><span class=\"pl-c\">#</span> some initial dataset</span>\n    dataset <span class=\"pl-k\">=</span>  dataset.shuffle(<span class=\"pl-c1\">100</span>)\n    x <span class=\"pl-k\">=</span> dataset.make_one_shot_iterator().get_next()\n    <span class=\"pl-k\">return</span> x\n\n  <span class=\"pl-c\"><span class=\"pl-c\">#</span> execution 1</span>\n  x <span class=\"pl-k\">=</span> get_data()\n  <span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n    x_batch1 <span class=\"pl-k\">=</span> sess.run(x)\n    <span class=\"pl-c1\">print</span>(x_batch1)\n  <span class=\"pl-c\"><span class=\"pl-c\">#</span> clear out everything</span>\n  tf.reset_default_graph()\n\n  <span class=\"pl-c\"><span class=\"pl-c\">#</span> execution 2</span>\n  x <span class=\"pl-k\">=</span> get_data()\n  <span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n    x_batch2 <span class=\"pl-k\">=</span> sess.run(x)\n    <span class=\"pl-c1\">print</span>(x_batch2)\n  <span class=\"pl-c\"><span class=\"pl-c\">#</span> results should be equivalent</span>\n  <span class=\"pl-k\">assert</span> np.allclose(x_batch1, x_batch2)\ntest()</pre></div>\n<p>test code sample taken from <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5431337\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/dusenberrymw\">@dusenberrymw</a></p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):elementary OS 0.4.1 Loki\nTensorFlow installed from (source or binary): binary\nTensorFlow version: v1.4.0-19-ga52c8d9 1.4.1\nPython version: 3.5.2\nBazel version (if compiling from source): N/A\nGCC/Compiler version (if compiling from source): N/A\nCUDA/cuDNN version: Not related\nGPU model and memory: Not related\nExact command to reproduce: mentioned below\n\nDescribe the problem\nDataset Shuffle operation is not determenastic\nSource code / logs\nimport numpy as np\nimport tensorflow as tf\n\ndef test():\n  np.random.seed(42)\n  tf.set_random_seed(42)\n  numbers = np.arange(1,100)\n\n  def get_data():\n    dataset = tf.data.Dataset.from_tensor_slices(numbers)  # some initial dataset\n    dataset =  dataset.shuffle(100)\n    x = dataset.make_one_shot_iterator().get_next()\n    return x\n\n  # execution 1\n  x = get_data()\n  with tf.Session() as sess:\n    x_batch1 = sess.run(x)\n    print(x_batch1)\n  # clear out everything\n  tf.reset_default_graph()\n\n  # execution 2\n  x = get_data()\n  with tf.Session() as sess:\n    x_batch2 = sess.run(x)\n    print(x_batch2)\n  # results should be equivalent\n  assert np.allclose(x_batch1, x_batch2)\ntest()\ntest code sample taken from @dusenberrymw", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:elementary OS 0.4.1 Loki\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version**: v1.4.0-19-ga52c8d9 1.4.1\r\n- **Python version**: 3.5.2\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: Not related\r\n- **GPU model and memory**: Not related \r\n- **Exact command to reproduce**: mentioned below\r\n\r\n\r\n### Describe the problem\r\nDataset Shuffle operation is not determenastic \r\n\r\n### Source code / logs\r\n```python\r\nimport numpy as np\r\nimport tensorflow as tf\r\n\r\ndef test():\r\n  np.random.seed(42)\r\n  tf.set_random_seed(42)\r\n  numbers = np.arange(1,100)\r\n\r\n  def get_data():\r\n    dataset = tf.data.Dataset.from_tensor_slices(numbers)  # some initial dataset\r\n    dataset =  dataset.shuffle(100)\r\n    x = dataset.make_one_shot_iterator().get_next()\r\n    return x\r\n\r\n  # execution 1\r\n  x = get_data()\r\n  with tf.Session() as sess:\r\n    x_batch1 = sess.run(x)\r\n    print(x_batch1)\r\n  # clear out everything\r\n  tf.reset_default_graph()\r\n\r\n  # execution 2\r\n  x = get_data()\r\n  with tf.Session() as sess:\r\n    x_batch2 = sess.run(x)\r\n    print(x_batch2)\r\n  # results should be equivalent\r\n  assert np.allclose(x_batch1, x_batch2)\r\ntest()\r\n```\r\ntest code sample taken from @dusenberrymw"}