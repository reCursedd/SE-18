{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/260758479", "html_url": "https://github.com/tensorflow/tensorflow/pull/5463#issuecomment-260758479", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5463", "id": 260758479, "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDc1ODQ3OQ==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2016-11-15T20:30:55Z", "updated_at": "2016-11-15T20:30:55Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1794715\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ebrevdo\">@ebrevdo</a>: I don't think we want a single kernel (at the very least, we need separate kernels for backwards compatibility, but I would also prefer it aesthetically)... but the aim is to cut down on repeated code: so we might want to refactor the queue implementation so that (e.g.) the padding (output preparation) logic is separate from the coordination and the element selection code.</p>", "body_text": "@ebrevdo: I don't think we want a single kernel (at the very least, we need separate kernels for backwards compatibility, but I would also prefer it aesthetically)... but the aim is to cut down on repeated code: so we might want to refactor the queue implementation so that (e.g.) the padding (output preparation) logic is separate from the coordination and the element selection code.", "body": "@ebrevdo: I don't think we want a single kernel (at the very least, we need separate kernels for backwards compatibility, but I would also prefer it aesthetically)... but the aim is to cut down on repeated code: so we might want to refactor the queue implementation so that (e.g.) the padding (output preparation) logic is separate from the coordination and the element selection code.\n"}