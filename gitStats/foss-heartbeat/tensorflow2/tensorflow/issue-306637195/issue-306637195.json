{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17844", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17844/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17844/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17844/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17844", "id": 306637195, "node_id": "MDU6SXNzdWUzMDY2MzcxOTU=", "number": 17844, "title": "Dropout training placeholder fails in tf.while_loop ", "user": {"login": "gongzhitaao", "id": 704995, "node_id": "MDQ6VXNlcjcwNDk5NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/704995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gongzhitaao", "html_url": "https://github.com/gongzhitaao", "followers_url": "https://api.github.com/users/gongzhitaao/followers", "following_url": "https://api.github.com/users/gongzhitaao/following{/other_user}", "gists_url": "https://api.github.com/users/gongzhitaao/gists{/gist_id}", "starred_url": "https://api.github.com/users/gongzhitaao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gongzhitaao/subscriptions", "organizations_url": "https://api.github.com/users/gongzhitaao/orgs", "repos_url": "https://api.github.com/users/gongzhitaao/repos", "events_url": "https://api.github.com/users/gongzhitaao/events{/privacy}", "received_events_url": "https://api.github.com/users/gongzhitaao/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}], "state": "open", "locked": false, "assignee": {"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-03-19T21:11:38Z", "updated_at": "2018-11-22T18:54:47Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>If I pass a placeholder to <code>training</code> parameter in <code>tf.layers.dropout</code>, then the model fails in <code>tf.while_loop</code>.  If I directly pass a boolean value, it works fine.</p>\n<ul>\n<li>OS Platform and Distribution: Linux Ubuntu 17.10</li>\n<li>TensorFlow installed from: pip</li>\n<li>TensorFlow version: v1.6.0:</li>\n<li>Python version: 3.6</li>\n<li>Have I written custom code: yes</li>\n<li>Bazel version: N/A</li>\n<li>CUDA/cuDNN version: N/A</li>\n<li>GPU model and memory: N/A</li>\n<li>Exact command to reproduce: N/A</li>\n</ul>\n<p>See the following code.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> os\n\n<span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n<span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\n\nos.environ[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>TF_CPP_MIN_LOG_LEVEL<span class=\"pl-pds\">'</span></span>] <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>3<span class=\"pl-pds\">'</span></span>\n\n\n<span class=\"pl-c1\">print</span>(tf.<span class=\"pl-c1\">__version__</span>)\n\n\n<span class=\"pl-k\">class</span> <span class=\"pl-en\">Config</span>:\n    <span class=\"pl-k\">def</span> <span class=\"pl-c1\">__init__</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>):\n        <span class=\"pl-c1\">self</span>.units <span class=\"pl-k\">=</span> <span class=\"pl-c1\">10</span>\n        <span class=\"pl-c1\">self</span>.n_classes <span class=\"pl-k\">=</span> <span class=\"pl-c1\">2</span>\n        <span class=\"pl-c1\">self</span>.drop_rate <span class=\"pl-k\">=</span> <span class=\"pl-c1\">0.5</span>\n\n\n<span class=\"pl-k\">class</span> <span class=\"pl-en\">Model</span>:\n    <span class=\"pl-k\">def</span> <span class=\"pl-c1\">__init__</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>, <span class=\"pl-smi\">cfg</span>):\n        <span class=\"pl-c1\">self</span>.cfg <span class=\"pl-k\">=</span> cfg\n        <span class=\"pl-c1\">self</span>.mlp <span class=\"pl-k\">=</span> tf.layers.Dense(cfg.units)\n        <span class=\"pl-c1\">self</span>.resize <span class=\"pl-k\">=</span> tf.layers.Dense(cfg.n_classes)\n\n    <span class=\"pl-k\">def</span> <span class=\"pl-en\">predict</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>, <span class=\"pl-smi\">x</span>):\n        z <span class=\"pl-k\">=</span> <span class=\"pl-c1\">self</span>.mlp(x)\n        z <span class=\"pl-k\">=</span> tf.layers.dropout(z, <span class=\"pl-v\">rate</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">self</span>.cfg.drop_rate,\n                              <span class=\"pl-v\">training</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">self</span>.cfg.training)\n        z <span class=\"pl-k\">=</span> <span class=\"pl-c1\">self</span>.resize(z)\n        <span class=\"pl-k\">return</span> z\n\n\ncfg <span class=\"pl-k\">=</span> Config()\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> training = tf.placeholder_with_default(False, (), 'mode')</span>\ntraining <span class=\"pl-k\">=</span> <span class=\"pl-c1\">False</span>\ncfg.training <span class=\"pl-k\">=</span> training\n\nmodel <span class=\"pl-k\">=</span> Model(cfg)\n\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">_cond</span>(<span class=\"pl-smi\">x</span>, <span class=\"pl-smi\">i</span>):\n    <span class=\"pl-k\">return</span> tf.less(i, <span class=\"pl-c1\">20</span>)\n\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">_body</span>(<span class=\"pl-smi\">x</span>, <span class=\"pl-smi\">i</span>):\n    y <span class=\"pl-k\">=</span> model.predict(x)\n    dy_dx <span class=\"pl-k\">=</span> tf.gradients(y, x)[<span class=\"pl-c1\">0</span>]\n    x <span class=\"pl-k\">=</span> dy_dx\n    <span class=\"pl-k\">return</span> x, i<span class=\"pl-k\">+</span><span class=\"pl-c1\">1</span>\n\n\nx <span class=\"pl-k\">=</span> tf.placeholder(tf.float32, (<span class=\"pl-c1\">None</span>, <span class=\"pl-c1\">3</span>))\ny <span class=\"pl-k\">=</span> model.predict(x)\nxx, ind <span class=\"pl-k\">=</span> tf.while_loop(_cond, _body, [x, <span class=\"pl-c1\">0</span>])\n\nsess <span class=\"pl-k\">=</span> tf.Session()\nsess.run(tf.global_variables_initializer())\n\nval <span class=\"pl-k\">=</span> sess.run(xx, <span class=\"pl-v\">feed_dict</span><span class=\"pl-k\">=</span>{x: np.random.random((<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">3</span>))})\n<span class=\"pl-c1\">print</span>(val)\n\nsess.close()</pre></div>", "body_text": "If I pass a placeholder to training parameter in tf.layers.dropout, then the model fails in tf.while_loop.  If I directly pass a boolean value, it works fine.\n\nOS Platform and Distribution: Linux Ubuntu 17.10\nTensorFlow installed from: pip\nTensorFlow version: v1.6.0:\nPython version: 3.6\nHave I written custom code: yes\nBazel version: N/A\nCUDA/cuDNN version: N/A\nGPU model and memory: N/A\nExact command to reproduce: N/A\n\nSee the following code.\nimport os\n\nimport numpy as np\nimport tensorflow as tf\n\n\nos.environ['TF_CPP_MIN_LOG_LEVEL'] = '3'\n\n\nprint(tf.__version__)\n\n\nclass Config:\n    def __init__(self):\n        self.units = 10\n        self.n_classes = 2\n        self.drop_rate = 0.5\n\n\nclass Model:\n    def __init__(self, cfg):\n        self.cfg = cfg\n        self.mlp = tf.layers.Dense(cfg.units)\n        self.resize = tf.layers.Dense(cfg.n_classes)\n\n    def predict(self, x):\n        z = self.mlp(x)\n        z = tf.layers.dropout(z, rate=self.cfg.drop_rate,\n                              training=self.cfg.training)\n        z = self.resize(z)\n        return z\n\n\ncfg = Config()\n# training = tf.placeholder_with_default(False, (), 'mode')\ntraining = False\ncfg.training = training\n\nmodel = Model(cfg)\n\n\ndef _cond(x, i):\n    return tf.less(i, 20)\n\n\ndef _body(x, i):\n    y = model.predict(x)\n    dy_dx = tf.gradients(y, x)[0]\n    x = dy_dx\n    return x, i+1\n\n\nx = tf.placeholder(tf.float32, (None, 3))\ny = model.predict(x)\nxx, ind = tf.while_loop(_cond, _body, [x, 0])\n\nsess = tf.Session()\nsess.run(tf.global_variables_initializer())\n\nval = sess.run(xx, feed_dict={x: np.random.random((1, 3))})\nprint(val)\n\nsess.close()", "body": " If I pass a placeholder to `training` parameter in `tf.layers.dropout`, then the model fails in `tf.while_loop`.  If I directly pass a boolean value, it works fine.  \r\n\r\n- OS Platform and Distribution: Linux Ubuntu 17.10\r\n- TensorFlow installed from: pip\r\n- TensorFlow version: v1.6.0:\r\n- Python version: 3.6\r\n- Have I written custom code: yes\r\n- Bazel version: N/A\r\n- CUDA/cuDNN version: N/A\r\n- GPU model and memory: N/A\r\n- Exact command to reproduce: N/A\r\n\r\nSee the following code.\r\n```py\r\nimport os\r\n\r\nimport numpy as np\r\nimport tensorflow as tf\r\n\r\n\r\nos.environ['TF_CPP_MIN_LOG_LEVEL'] = '3'\r\n\r\n\r\nprint(tf.__version__)\r\n\r\n\r\nclass Config:\r\n    def __init__(self):\r\n        self.units = 10\r\n        self.n_classes = 2\r\n        self.drop_rate = 0.5\r\n\r\n\r\nclass Model:\r\n    def __init__(self, cfg):\r\n        self.cfg = cfg\r\n        self.mlp = tf.layers.Dense(cfg.units)\r\n        self.resize = tf.layers.Dense(cfg.n_classes)\r\n\r\n    def predict(self, x):\r\n        z = self.mlp(x)\r\n        z = tf.layers.dropout(z, rate=self.cfg.drop_rate,\r\n                              training=self.cfg.training)\r\n        z = self.resize(z)\r\n        return z\r\n\r\n\r\ncfg = Config()\r\n# training = tf.placeholder_with_default(False, (), 'mode')\r\ntraining = False\r\ncfg.training = training\r\n\r\nmodel = Model(cfg)\r\n\r\n\r\ndef _cond(x, i):\r\n    return tf.less(i, 20)\r\n\r\n\r\ndef _body(x, i):\r\n    y = model.predict(x)\r\n    dy_dx = tf.gradients(y, x)[0]\r\n    x = dy_dx\r\n    return x, i+1\r\n\r\n\r\nx = tf.placeholder(tf.float32, (None, 3))\r\ny = model.predict(x)\r\nxx, ind = tf.while_loop(_cond, _body, [x, 0])\r\n\r\nsess = tf.Session()\r\nsess.run(tf.global_variables_initializer())\r\n\r\nval = sess.run(xx, feed_dict={x: np.random.random((1, 3))})\r\nprint(val)\r\n\r\nsess.close()\r\n```\r\n"}