{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/414496462", "html_url": "https://github.com/tensorflow/tensorflow/pull/20155#issuecomment-414496462", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20155", "id": 414496462, "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDQ5NjQ2Mg==", "user": {"login": "tfboyd", "id": 23486130, "node_id": "MDQ6VXNlcjIzNDg2MTMw", "avatar_url": "https://avatars1.githubusercontent.com/u/23486130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tfboyd", "html_url": "https://github.com/tfboyd", "followers_url": "https://api.github.com/users/tfboyd/followers", "following_url": "https://api.github.com/users/tfboyd/following{/other_user}", "gists_url": "https://api.github.com/users/tfboyd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tfboyd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tfboyd/subscriptions", "organizations_url": "https://api.github.com/users/tfboyd/orgs", "repos_url": "https://api.github.com/users/tfboyd/repos", "events_url": "https://api.github.com/users/tfboyd/events{/privacy}", "received_events_url": "https://api.github.com/users/tfboyd/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-20T23:27:04Z", "updated_at": "2018-08-20T23:27:26Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=8660918\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jayfurmanek\">@jayfurmanek</a>   I see the logic this way, as a strawperson:</p>\n<ul>\n<li>Can I find it in the path, check ld or whatever</li>\n<li>If not user provides ./configure with the path which would either have to be individually to the .so and .h or to a parent directory that assumes a structure underneath like the .tgz.</li>\n</ul>\n<p>I am very interested in other ideas.  For CUDA I can just point to another folder and off I go. While I would not want to build with multiple NCCL versions on a single system I would want to be able to do that.  That is where option <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"115894138\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/2\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/2/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/2\">#2</a> comes in and providing the path. Do you ask for the path to both .so and .h or a parent with a known structure.  Thoughts?</p>\n<p><strong>I also apologize that this is so confusing.</strong></p>", "body_text": "@jayfurmanek   I see the logic this way, as a strawperson:\n\nCan I find it in the path, check ld or whatever\nIf not user provides ./configure with the path which would either have to be individually to the .so and .h or to a parent directory that assumes a structure underneath like the .tgz.\n\nI am very interested in other ideas.  For CUDA I can just point to another folder and off I go. While I would not want to build with multiple NCCL versions on a single system I would want to be able to do that.  That is where option #2 comes in and providing the path. Do you ask for the path to both .so and .h or a parent with a known structure.  Thoughts?\nI also apologize that this is so confusing.", "body": "@jayfurmanek   I see the logic this way, as a strawperson:\r\n\r\n- Can I find it in the path, check ld or whatever\r\n- If not user provides ./configure with the path which would either have to be individually to the .so and .h or to a parent directory that assumes a structure underneath like the .tgz.\r\n\r\nI am very interested in other ideas.  For CUDA I can just point to another folder and off I go. While I would not want to build with multiple NCCL versions on a single system I would want to be able to do that.  That is where option #2 comes in and providing the path. Do you ask for the path to both .so and .h or a parent with a known structure.  Thoughts?\r\n\r\n**I also apologize that this is so confusing.**"}