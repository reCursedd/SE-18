{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/369537711", "html_url": "https://github.com/tensorflow/tensorflow/issues/17237#issuecomment-369537711", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17237", "id": 369537711, "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTUzNzcxMQ==", "user": {"login": "Johnson145", "id": 6339078, "node_id": "MDQ6VXNlcjYzMzkwNzg=", "avatar_url": "https://avatars0.githubusercontent.com/u/6339078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Johnson145", "html_url": "https://github.com/Johnson145", "followers_url": "https://api.github.com/users/Johnson145/followers", "following_url": "https://api.github.com/users/Johnson145/following{/other_user}", "gists_url": "https://api.github.com/users/Johnson145/gists{/gist_id}", "starred_url": "https://api.github.com/users/Johnson145/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Johnson145/subscriptions", "organizations_url": "https://api.github.com/users/Johnson145/orgs", "repos_url": "https://api.github.com/users/Johnson145/repos", "events_url": "https://api.github.com/users/Johnson145/events{/privacy}", "received_events_url": "https://api.github.com/users/Johnson145/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-01T09:49:41Z", "updated_at": "2018-03-01T09:49:41Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Well, almost literally. Actually, it's an <code>unrecognized</code> option instead of an <code>unknown</code> one, but the actual content is just the same. Here is the full error message having <code>--verbose_failures</code> enabled:</p>\n<pre><code>ERROR: tensorflow/tensorflow/contrib/lite/examples/label_image/BUILD:15:1: Linking of rule '//tensorflow/contrib/lite/examples/label_image:label_image' failed (Exit 1): crosstool_wrapper_driver_is_not_gcc failed: error executing command \n  (cd /home/user/.cache/bazel/_bazel_user/9227ee1bdf044d663b48d04003e34de8/execroot/org_tensorflow &amp;&amp; \\\n  exec env - \\\n    CUDA_TOOLKIT_PATH=/usr/local/cuda \\\n    CUDNN_INSTALL_PATH=/usr/local/cuda-9.0 \\\n    GCC_HOST_COMPILER_PATH=/usr/bin/gcc \\\n    LD_LIBRARY_PATH=/opt/intel/compilers_and_libraries_2017.0.098/linux/tbb/lib/intel64/gcc4.4:/opt/intel/compilers_and_libraries_2017.0.098/linux/compiler/lib/intel64:/opt/intel/compilers_and_libraries_2017.0.098/linux/mkl/lib/intel64:/opt/intel/compilers_and_libraries_2017.0.098/linux/compiler/lib/intel64_lin:/usr/local/cuda/lib64:/usr/local/cuda/extras/CUPTI/lib64 \\\n    PWD=/proc/self/cwd \\\n    PYTHON_BIN_PATH=/usr/bin/python3 \\\n    PYTHON_LIB_PATH=/usr/lib/python3/dist-packages \\\n    TF_CUDA_CLANG=0 \\\n    TF_CUDA_COMPUTE_CAPABILITIES=6.1 \\\n    TF_CUDA_VERSION=9.0 \\\n    TF_CUDNN_VERSION=7 \\\n    TF_NEED_CUDA=1 \\\n    TF_NEED_OPENCL_SYCL=0 \\\n  external/local_config_cuda/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc -o bazel-out/k8-py3-opt/bin/tensorflow/contrib/lite/examples/label_image/label_image '-Wl,-rpath,$ORIGIN/../../../../../_solib_local/_U_S_Stensorflow_Scontrib_Slite_Sexamples_Slabel_Uimage_Clabel_Uimage___Utensorflow' -Lbazel-out/k8-py3-opt/bin/_solib_local/_U_S_Stensorflow_Scontrib_Slite_Sexamples_Slabel_Uimage_Clabel_Uimage___Utensorflow '-Wl,--icf=all' '-Wl,-rpath,$ORIGIN/,-rpath,$ORIGIN/..,-rpath,$ORIGIN/../..,-rpath,$ORIGIN/../../..,-rpath,$ORIGIN/../../../..' -Wl,-no-as-needed -B/usr/bin/ -pie -Wl,-z,relro,-z,now -no-canonical-prefixes -pass-exit-codes '-Wl,--build-id=md5' '-Wl,--hash-style=gnu' -Wl,--gc-sections -Wl,@bazel-out/k8-py3-opt/bin/tensorflow/contrib/lite/examples/label_image/label_image-2.params)\n/usr/bin/ld: unrecognized option '--icf=all'\n/usr/bin/ld: use the --help option for usage information\ncollect2: error: ld returned 1 exit status\nTarget //tensorflow/contrib/lite/examples/label_image:label_image failed to build\n</code></pre>\n<p>The only related information I could find using Google is <a href=\"https://github.com/turol/smaaDemo/issues/1\" data-hovercard-type=\"issue\" data-hovercard-url=\"/turol/smaaDemo/issues/1/hovercard\">this GitHub issue from a different repo</a>. It suggests that the default Linux ld linker doesn't support this option either, doesn't it?</p>", "body_text": "Well, almost literally. Actually, it's an unrecognized option instead of an unknown one, but the actual content is just the same. Here is the full error message having --verbose_failures enabled:\nERROR: tensorflow/tensorflow/contrib/lite/examples/label_image/BUILD:15:1: Linking of rule '//tensorflow/contrib/lite/examples/label_image:label_image' failed (Exit 1): crosstool_wrapper_driver_is_not_gcc failed: error executing command \n  (cd /home/user/.cache/bazel/_bazel_user/9227ee1bdf044d663b48d04003e34de8/execroot/org_tensorflow && \\\n  exec env - \\\n    CUDA_TOOLKIT_PATH=/usr/local/cuda \\\n    CUDNN_INSTALL_PATH=/usr/local/cuda-9.0 \\\n    GCC_HOST_COMPILER_PATH=/usr/bin/gcc \\\n    LD_LIBRARY_PATH=/opt/intel/compilers_and_libraries_2017.0.098/linux/tbb/lib/intel64/gcc4.4:/opt/intel/compilers_and_libraries_2017.0.098/linux/compiler/lib/intel64:/opt/intel/compilers_and_libraries_2017.0.098/linux/mkl/lib/intel64:/opt/intel/compilers_and_libraries_2017.0.098/linux/compiler/lib/intel64_lin:/usr/local/cuda/lib64:/usr/local/cuda/extras/CUPTI/lib64 \\\n    PWD=/proc/self/cwd \\\n    PYTHON_BIN_PATH=/usr/bin/python3 \\\n    PYTHON_LIB_PATH=/usr/lib/python3/dist-packages \\\n    TF_CUDA_CLANG=0 \\\n    TF_CUDA_COMPUTE_CAPABILITIES=6.1 \\\n    TF_CUDA_VERSION=9.0 \\\n    TF_CUDNN_VERSION=7 \\\n    TF_NEED_CUDA=1 \\\n    TF_NEED_OPENCL_SYCL=0 \\\n  external/local_config_cuda/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc -o bazel-out/k8-py3-opt/bin/tensorflow/contrib/lite/examples/label_image/label_image '-Wl,-rpath,$ORIGIN/../../../../../_solib_local/_U_S_Stensorflow_Scontrib_Slite_Sexamples_Slabel_Uimage_Clabel_Uimage___Utensorflow' -Lbazel-out/k8-py3-opt/bin/_solib_local/_U_S_Stensorflow_Scontrib_Slite_Sexamples_Slabel_Uimage_Clabel_Uimage___Utensorflow '-Wl,--icf=all' '-Wl,-rpath,$ORIGIN/,-rpath,$ORIGIN/..,-rpath,$ORIGIN/../..,-rpath,$ORIGIN/../../..,-rpath,$ORIGIN/../../../..' -Wl,-no-as-needed -B/usr/bin/ -pie -Wl,-z,relro,-z,now -no-canonical-prefixes -pass-exit-codes '-Wl,--build-id=md5' '-Wl,--hash-style=gnu' -Wl,--gc-sections -Wl,@bazel-out/k8-py3-opt/bin/tensorflow/contrib/lite/examples/label_image/label_image-2.params)\n/usr/bin/ld: unrecognized option '--icf=all'\n/usr/bin/ld: use the --help option for usage information\ncollect2: error: ld returned 1 exit status\nTarget //tensorflow/contrib/lite/examples/label_image:label_image failed to build\n\nThe only related information I could find using Google is this GitHub issue from a different repo. It suggests that the default Linux ld linker doesn't support this option either, doesn't it?", "body": "Well, almost literally. Actually, it's an `unrecognized` option instead of an `unknown` one, but the actual content is just the same. Here is the full error message having `--verbose_failures` enabled:\r\n```\r\nERROR: tensorflow/tensorflow/contrib/lite/examples/label_image/BUILD:15:1: Linking of rule '//tensorflow/contrib/lite/examples/label_image:label_image' failed (Exit 1): crosstool_wrapper_driver_is_not_gcc failed: error executing command \r\n  (cd /home/user/.cache/bazel/_bazel_user/9227ee1bdf044d663b48d04003e34de8/execroot/org_tensorflow && \\\r\n  exec env - \\\r\n    CUDA_TOOLKIT_PATH=/usr/local/cuda \\\r\n    CUDNN_INSTALL_PATH=/usr/local/cuda-9.0 \\\r\n    GCC_HOST_COMPILER_PATH=/usr/bin/gcc \\\r\n    LD_LIBRARY_PATH=/opt/intel/compilers_and_libraries_2017.0.098/linux/tbb/lib/intel64/gcc4.4:/opt/intel/compilers_and_libraries_2017.0.098/linux/compiler/lib/intel64:/opt/intel/compilers_and_libraries_2017.0.098/linux/mkl/lib/intel64:/opt/intel/compilers_and_libraries_2017.0.098/linux/compiler/lib/intel64_lin:/usr/local/cuda/lib64:/usr/local/cuda/extras/CUPTI/lib64 \\\r\n    PWD=/proc/self/cwd \\\r\n    PYTHON_BIN_PATH=/usr/bin/python3 \\\r\n    PYTHON_LIB_PATH=/usr/lib/python3/dist-packages \\\r\n    TF_CUDA_CLANG=0 \\\r\n    TF_CUDA_COMPUTE_CAPABILITIES=6.1 \\\r\n    TF_CUDA_VERSION=9.0 \\\r\n    TF_CUDNN_VERSION=7 \\\r\n    TF_NEED_CUDA=1 \\\r\n    TF_NEED_OPENCL_SYCL=0 \\\r\n  external/local_config_cuda/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc -o bazel-out/k8-py3-opt/bin/tensorflow/contrib/lite/examples/label_image/label_image '-Wl,-rpath,$ORIGIN/../../../../../_solib_local/_U_S_Stensorflow_Scontrib_Slite_Sexamples_Slabel_Uimage_Clabel_Uimage___Utensorflow' -Lbazel-out/k8-py3-opt/bin/_solib_local/_U_S_Stensorflow_Scontrib_Slite_Sexamples_Slabel_Uimage_Clabel_Uimage___Utensorflow '-Wl,--icf=all' '-Wl,-rpath,$ORIGIN/,-rpath,$ORIGIN/..,-rpath,$ORIGIN/../..,-rpath,$ORIGIN/../../..,-rpath,$ORIGIN/../../../..' -Wl,-no-as-needed -B/usr/bin/ -pie -Wl,-z,relro,-z,now -no-canonical-prefixes -pass-exit-codes '-Wl,--build-id=md5' '-Wl,--hash-style=gnu' -Wl,--gc-sections -Wl,@bazel-out/k8-py3-opt/bin/tensorflow/contrib/lite/examples/label_image/label_image-2.params)\r\n/usr/bin/ld: unrecognized option '--icf=all'\r\n/usr/bin/ld: use the --help option for usage information\r\ncollect2: error: ld returned 1 exit status\r\nTarget //tensorflow/contrib/lite/examples/label_image:label_image failed to build\r\n```\r\n\r\nThe only related information I could find using Google is [this GitHub issue from a different repo](https://github.com/turol/smaaDemo/issues/1). It suggests that the default Linux ld linker doesn't support this option either, doesn't it?"}