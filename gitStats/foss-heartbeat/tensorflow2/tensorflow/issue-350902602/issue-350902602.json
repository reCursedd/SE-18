{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21637", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21637/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21637/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21637/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21637", "id": 350902602, "node_id": "MDU6SXNzdWUzNTA5MDI2MDI=", "number": 21637, "title": "Tensorflow Prediction Artifacts", "user": {"login": "tibuch", "id": 5450869, "node_id": "MDQ6VXNlcjU0NTA4Njk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5450869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tibuch", "html_url": "https://github.com/tibuch", "followers_url": "https://api.github.com/users/tibuch/followers", "following_url": "https://api.github.com/users/tibuch/following{/other_user}", "gists_url": "https://api.github.com/users/tibuch/gists{/gist_id}", "starred_url": "https://api.github.com/users/tibuch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tibuch/subscriptions", "organizations_url": "https://api.github.com/users/tibuch/orgs", "repos_url": "https://api.github.com/users/tibuch/repos", "events_url": "https://api.github.com/users/tibuch/events{/privacy}", "received_events_url": "https://api.github.com/users/tibuch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}, {"login": "poxvoculi", "id": 15676913, "node_id": "MDQ6VXNlcjE1Njc2OTEz", "avatar_url": "https://avatars2.githubusercontent.com/u/15676913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poxvoculi", "html_url": "https://github.com/poxvoculi", "followers_url": "https://api.github.com/users/poxvoculi/followers", "following_url": "https://api.github.com/users/poxvoculi/following{/other_user}", "gists_url": "https://api.github.com/users/poxvoculi/gists{/gist_id}", "starred_url": "https://api.github.com/users/poxvoculi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poxvoculi/subscriptions", "organizations_url": "https://api.github.com/users/poxvoculi/orgs", "repos_url": "https://api.github.com/users/poxvoculi/repos", "events_url": "https://api.github.com/users/poxvoculi/events{/privacy}", "received_events_url": "https://api.github.com/users/poxvoculi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2018-08-15T17:49:59Z", "updated_at": "2018-11-20T13:30:14Z", "closed_at": null, "author_association": "NONE", "body_html": "<h3>System Information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: No</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Mint 18</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>: N/A</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: Binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: v1.10.0-0-g656e7a2b34 1.10.0</li>\n<li><strong>Python version</strong>: 3.6</li>\n<li><strong>Bazel version (if compiling from source)</strong>: N/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: N/A</li>\n<li><strong>CUDA/cuDNN version</strong>: 9.0.176/7.1.2</li>\n<li><strong>GPU model and memory</strong>: Tesla P40 24GB</li>\n<li><strong>Exact command to reproduce</strong>: python3 example.py</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>Hello,<br>\nI am using Tensorflow on 3D image data and I observe some strange prediction artifacts once my input exceeds a certain size.<br>\nI created a minimal working example (below) which produces the artifacts. In the example all weights of the loaded u-net are initialized to 0.5 and then a 3D volume (Z: 180, Y: 196, X: 240) with a gradient in Z direction is given as prediction input. The returned output contains the gradient up to Z around 140 and then the output values change to smaller values.<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/5450869/44163361-7661fc00-a0c3-11e8-8c67-a3524370b632.png\"><img src=\"https://user-images.githubusercontent.com/5450869/44163361-7661fc00-a0c3-11e8-8c67-a3524370b632.png\" alt=\"observation\" style=\"max-width:100%;\"></a></p>\n<p>If a slightly smaller 3D volume (Z: 176, Y: 196, X: 240) is given, the output contains the full gradient as expected.</p>\n<p>Unfortunately I don't know if this is a TensorFlow, CUDA, cuDNN or some other sort of bug. I am grateful for any explanation or any hints on what it could be or how to fix this issue (without cropping/tiling the input).</p>\n<h3>Source code / logs</h3>\n<p>The minimum example:</p>\n<pre><code>import tensorflow as tf\nfrom tensorflow.keras.models import model_from_json\nimport numpy as np\nfrom tifffile import imsave\n\n# load u-net architecture, kernel-size = 3, depth = 2\njson_file = open('model.json', 'r')\nloaded_model_json = json_file.read()\njson_file.close()\nmodel = model_from_json(loaded_model_json)\n\n# set all weights to 0.5\nw = model.get_weights()\ninit = []\nfor l in w:\n    init.append(l*0 + 0.5)\n\nmodel.set_weights(init)\n\ntmp = np.zeros((180, 196, 240), np.float32)\nfor i in range(tmp.shape[0]):\n    tmp[i] = i\n\ntmp = tmp[:, :, :, np.newaxis]\n\nprediction_fail = np.moveaxis(model.predict(np.moveaxis(tmp[np.newaxis], 4, -1))[0], 3, 0)\ntmp = tmp[:176]\nprediction_succ = np.moveaxis(model.predict(np.moveaxis(tmp[np.newaxis], 4, -1))[0], 3, 0)\n\nimsave('input.tif', tmp)\nimsave('prediction_fail.tif', prediction_fail[0])\nimsave('prediction_success.tif', prediction_succ[0])\n</code></pre>\n<p>The model.json with the u-net architecture:</p>\n<pre><code>{\"class_name\": \"Model\", \"config\": {\"name\": \"model_3\", \"layers\": [{\"name\": \"input\", \"class_name\": \"InputLayer\", \"config\": {\"batch_input_shape\": [null, null, null, null, 1], \"dtype\": \"float32\", \"sparse\": false, \"name\": \"input\"}, \"inbound_nodes\": []}, {\"name\": \"down_level_0_no_0\", \"class_name\": \"Conv3D\", \"config\": {\"name\": \"down_level_0_no_0\", \"trainable\": true, \"filters\": 32, \"kernel_size\": [3, 3, 3], \"strides\": [1, 1, 1], \"padding\": \"same\", \"data_format\": \"channels_last\", \"dilation_rate\": [1, 1, 1], \"activation\": \"relu\", \"use_bias\": true, \"kernel_initializer\": {\"class_name\": \"VarianceScaling\", \"config\": {\"scale\": 1.0, \"mode\": \"fan_avg\", \"distribution\": \"uniform\", \"seed\": null}}, \"bias_initializer\": {\"class_name\": \"Zeros\", \"config\": {}}, \"kernel_regularizer\": null, \"bias_regularizer\": null, \"activity_regularizer\": null, \"kernel_constraint\": null, \"bias_constraint\": null}, \"inbound_nodes\": [[[\"input\", 0, 0, {}]]]}, {\"name\": \"down_level_0_no_1\", \"class_name\": \"Conv3D\", \"config\": {\"name\": \"down_level_0_no_1\", \"trainable\": true, \"filters\": 32, \"kernel_size\": [3, 3, 3], \"strides\": [1, 1, 1], \"padding\": \"same\", \"data_format\": \"channels_last\", \"dilation_rate\": [1, 1, 1], \"activation\": \"relu\", \"use_bias\": true, \"kernel_initializer\": {\"class_name\": \"VarianceScaling\", \"config\": {\"scale\": 1.0, \"mode\": \"fan_avg\", \"distribution\": \"uniform\", \"seed\": null}}, \"bias_initializer\": {\"class_name\": \"Zeros\", \"config\": {}}, \"kernel_regularizer\": null, \"bias_regularizer\": null, \"activity_regularizer\": null, \"kernel_constraint\": null, \"bias_constraint\": null}, \"inbound_nodes\": [[[\"down_level_0_no_0\", 0, 0, {}]]]}, {\"name\": \"max_0\", \"class_name\": \"MaxPooling3D\", \"config\": {\"name\": \"max_0\", \"trainable\": true, \"pool_size\": [2, 2, 2], \"padding\": \"valid\", \"strides\": [2, 2, 2], \"data_format\": \"channels_last\"}, \"inbound_nodes\": [[[\"down_level_0_no_1\", 0, 0, {}]]]}, {\"name\": \"down_level_1_no_0\", \"class_name\": \"Conv3D\", \"config\": {\"name\": \"down_level_1_no_0\", \"trainable\": true, \"filters\": 64, \"kernel_size\": [3, 3, 3], \"strides\": [1, 1, 1], \"padding\": \"same\", \"data_format\": \"channels_last\", \"dilation_rate\": [1, 1, 1], \"activation\": \"relu\", \"use_bias\": true, \"kernel_initializer\": {\"class_name\": \"VarianceScaling\", \"config\": {\"scale\": 1.0, \"mode\": \"fan_avg\", \"distribution\": \"uniform\", \"seed\": null}}, \"bias_initializer\": {\"class_name\": \"Zeros\", \"config\": {}}, \"kernel_regularizer\": null, \"bias_regularizer\": null, \"activity_regularizer\": null, \"kernel_constraint\": null, \"bias_constraint\": null}, \"inbound_nodes\": [[[\"max_0\", 0, 0, {}]]]}, {\"name\": \"down_level_1_no_1\", \"class_name\": \"Conv3D\", \"config\": {\"name\": \"down_level_1_no_1\", \"trainable\": true, \"filters\": 64, \"kernel_size\": [3, 3, 3], \"strides\": [1, 1, 1], \"padding\": \"same\", \"data_format\": \"channels_last\", \"dilation_rate\": [1, 1, 1], \"activation\": \"relu\", \"use_bias\": true, \"kernel_initializer\": {\"class_name\": \"VarianceScaling\", \"config\": {\"scale\": 1.0, \"mode\": \"fan_avg\", \"distribution\": \"uniform\", \"seed\": null}}, \"bias_initializer\": {\"class_name\": \"Zeros\", \"config\": {}}, \"kernel_regularizer\": null, \"bias_regularizer\": null, \"activity_regularizer\": null, \"kernel_constraint\": null, \"bias_constraint\": null}, \"inbound_nodes\": [[[\"down_level_1_no_0\", 0, 0, {}]]]}, {\"name\": \"max_1\", \"class_name\": \"MaxPooling3D\", \"config\": {\"name\": \"max_1\", \"trainable\": true, \"pool_size\": [2, 2, 2], \"padding\": \"valid\", \"strides\": [2, 2, 2], \"data_format\": \"channels_last\"}, \"inbound_nodes\": [[[\"down_level_1_no_1\", 0, 0, {}]]]}, {\"name\": \"middle_0\", \"class_name\": \"Conv3D\", \"config\": {\"name\": \"middle_0\", \"trainable\": true, \"filters\": 128, \"kernel_size\": [3, 3, 3], \"strides\": [1, 1, 1], \"padding\": \"same\", \"data_format\": \"channels_last\", \"dilation_rate\": [1, 1, 1], \"activation\": \"relu\", \"use_bias\": true, \"kernel_initializer\": {\"class_name\": \"VarianceScaling\", \"config\": {\"scale\": 1.0, \"mode\": \"fan_avg\", \"distribution\": \"uniform\", \"seed\": null}}, \"bias_initializer\": {\"class_name\": \"Zeros\", \"config\": {}}, \"kernel_regularizer\": null, \"bias_regularizer\": null, \"activity_regularizer\": null, \"kernel_constraint\": null, \"bias_constraint\": null}, \"inbound_nodes\": [[[\"max_1\", 0, 0, {}]]]}, {\"name\": \"middle_2\", \"class_name\": \"Conv3D\", \"config\": {\"name\": \"middle_2\", \"trainable\": true, \"filters\": 64, \"kernel_size\": [3, 3, 3], \"strides\": [1, 1, 1], \"padding\": \"same\", \"data_format\": \"channels_last\", \"dilation_rate\": [1, 1, 1], \"activation\": \"relu\", \"use_bias\": true, \"kernel_initializer\": {\"class_name\": \"VarianceScaling\", \"config\": {\"scale\": 1.0, \"mode\": \"fan_avg\", \"distribution\": \"uniform\", \"seed\": null}}, \"bias_initializer\": {\"class_name\": \"Zeros\", \"config\": {}}, \"kernel_regularizer\": null, \"bias_regularizer\": null, \"activity_regularizer\": null, \"kernel_constraint\": null, \"bias_constraint\": null}, \"inbound_nodes\": [[[\"middle_0\", 0, 0, {}]]]}, {\"name\": \"up_sampling3d_5\", \"class_name\": \"UpSampling3D\", \"config\": {\"name\": \"up_sampling3d_5\", \"trainable\": true, \"size\": [2, 2, 2], \"data_format\": \"channels_last\"}, \"inbound_nodes\": [[[\"middle_2\", 0, 0, {}]]]}, {\"name\": \"concatenate_5\", \"class_name\": \"Concatenate\", \"config\": {\"name\": \"concatenate_5\", \"trainable\": true, \"axis\": -1}, \"inbound_nodes\": [[[\"up_sampling3d_5\", 0, 0, {}], [\"down_level_1_no_1\", 0, 0, {}]]]}, {\"name\": \"up_level_1_no_0\", \"class_name\": \"Conv3D\", \"config\": {\"name\": \"up_level_1_no_0\", \"trainable\": true, \"filters\": 64, \"kernel_size\": [3, 3, 3], \"strides\": [1, 1, 1], \"padding\": \"same\", \"data_format\": \"channels_last\", \"dilation_rate\": [1, 1, 1], \"activation\": \"relu\", \"use_bias\": true, \"kernel_initializer\": {\"class_name\": \"VarianceScaling\", \"config\": {\"scale\": 1.0, \"mode\": \"fan_avg\", \"distribution\": \"uniform\", \"seed\": null}}, \"bias_initializer\": {\"class_name\": \"Zeros\", \"config\": {}}, \"kernel_regularizer\": null, \"bias_regularizer\": null, \"activity_regularizer\": null, \"kernel_constraint\": null, \"bias_constraint\": null}, \"inbound_nodes\": [[[\"concatenate_5\", 0, 0, {}]]]}, {\"name\": \"up_level_1_no_2\", \"class_name\": \"Conv3D\", \"config\": {\"name\": \"up_level_1_no_2\", \"trainable\": true, \"filters\": 32, \"kernel_size\": [3, 3, 3], \"strides\": [1, 1, 1], \"padding\": \"same\", \"data_format\": \"channels_last\", \"dilation_rate\": [1, 1, 1], \"activation\": \"relu\", \"use_bias\": true, \"kernel_initializer\": {\"class_name\": \"VarianceScaling\", \"config\": {\"scale\": 1.0, \"mode\": \"fan_avg\", \"distribution\": \"uniform\", \"seed\": null}}, \"bias_initializer\": {\"class_name\": \"Zeros\", \"config\": {}}, \"kernel_regularizer\": null, \"bias_regularizer\": null, \"activity_regularizer\": null, \"kernel_constraint\": null, \"bias_constraint\": null}, \"inbound_nodes\": [[[\"up_level_1_no_0\", 0, 0, {}]]]}, {\"name\": \"up_sampling3d_6\", \"class_name\": \"UpSampling3D\", \"config\": {\"name\": \"up_sampling3d_6\", \"trainable\": true, \"size\": [2, 2, 2], \"data_format\": \"channels_last\"}, \"inbound_nodes\": [[[\"up_level_1_no_2\", 0, 0, {}]]]}, {\"name\": \"concatenate_6\", \"class_name\": \"Concatenate\", \"config\": {\"name\": \"concatenate_6\", \"trainable\": true, \"axis\": -1}, \"inbound_nodes\": [[[\"up_sampling3d_6\", 0, 0, {}], [\"down_level_0_no_1\", 0, 0, {}]]]}, {\"name\": \"up_level_0_no_0\", \"class_name\": \"Conv3D\", \"config\": {\"name\": \"up_level_0_no_0\", \"trainable\": true, \"filters\": 32, \"kernel_size\": [3, 3, 3], \"strides\": [1, 1, 1], \"padding\": \"same\", \"data_format\": \"channels_last\", \"dilation_rate\": [1, 1, 1], \"activation\": \"relu\", \"use_bias\": true, \"kernel_initializer\": {\"class_name\": \"VarianceScaling\", \"config\": {\"scale\": 1.0, \"mode\": \"fan_avg\", \"distribution\": \"uniform\", \"seed\": null}}, \"bias_initializer\": {\"class_name\": \"Zeros\", \"config\": {}}, \"kernel_regularizer\": null, \"bias_regularizer\": null, \"activity_regularizer\": null, \"kernel_constraint\": null, \"bias_constraint\": null}, \"inbound_nodes\": [[[\"concatenate_6\", 0, 0, {}]]]}, {\"name\": \"up_level_0_no_2\", \"class_name\": \"Conv3D\", \"config\": {\"name\": \"up_level_0_no_2\", \"trainable\": true, \"filters\": 32, \"kernel_size\": [3, 3, 3], \"strides\": [1, 1, 1], \"padding\": \"same\", \"data_format\": \"channels_last\", \"dilation_rate\": [1, 1, 1], \"activation\": \"relu\", \"use_bias\": true, \"kernel_initializer\": {\"class_name\": \"VarianceScaling\", \"config\": {\"scale\": 1.0, \"mode\": \"fan_avg\", \"distribution\": \"uniform\", \"seed\": null}}, \"bias_initializer\": {\"class_name\": \"Zeros\", \"config\": {}}, \"kernel_regularizer\": null, \"bias_regularizer\": null, \"activity_regularizer\": null, \"kernel_constraint\": null, \"bias_constraint\": null}, \"inbound_nodes\": [[[\"up_level_0_no_0\", 0, 0, {}]]]}, {\"name\": \"conv3d_3\", \"class_name\": \"Conv3D\", \"config\": {\"name\": \"conv3d_3\", \"trainable\": true, \"filters\": 1, \"kernel_size\": [1, 1, 1], \"strides\": [1, 1, 1], \"padding\": \"valid\", \"data_format\": \"channels_last\", \"dilation_rate\": [1, 1, 1], \"activation\": \"linear\", \"use_bias\": true, \"kernel_initializer\": {\"class_name\": \"VarianceScaling\", \"config\": {\"scale\": 1.0, \"mode\": \"fan_avg\", \"distribution\": \"uniform\", \"seed\": null}}, \"bias_initializer\": {\"class_name\": \"Zeros\", \"config\": {}}, \"kernel_regularizer\": null, \"bias_regularizer\": null, \"activity_regularizer\": null, \"kernel_constraint\": null, \"bias_constraint\": null}, \"inbound_nodes\": [[[\"up_level_0_no_2\", 0, 0, {}]]]}, {\"name\": \"add_19\", \"class_name\": \"Add\", \"config\": {\"name\": \"add_19\", \"trainable\": true}, \"inbound_nodes\": [[[\"conv3d_3\", 0, 0, {}], [\"input\", 0, 0, {}]]]}, {\"name\": \"activation_52\", \"class_name\": \"Activation\", \"config\": {\"name\": \"activation_52\", \"trainable\": true, \"activation\": \"linear\"}, \"inbound_nodes\": [[[\"add_19\", 0, 0, {}]]]}], \"input_layers\": [[\"input\", 0, 0]], \"output_layers\": [[\"activation_52\", 0, 0]]}, \"keras_version\": \"2.2.0\", \"backend\": \"tensorflow\"}\n</code></pre>", "body_text": "System Information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): No\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Mint 18\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A\nTensorFlow installed from (source or binary): Binary\nTensorFlow version (use command below): v1.10.0-0-g656e7a2b34 1.10.0\nPython version: 3.6\nBazel version (if compiling from source): N/A\nGCC/Compiler version (if compiling from source): N/A\nCUDA/cuDNN version: 9.0.176/7.1.2\nGPU model and memory: Tesla P40 24GB\nExact command to reproduce: python3 example.py\n\nDescribe the problem\nHello,\nI am using Tensorflow on 3D image data and I observe some strange prediction artifacts once my input exceeds a certain size.\nI created a minimal working example (below) which produces the artifacts. In the example all weights of the loaded u-net are initialized to 0.5 and then a 3D volume (Z: 180, Y: 196, X: 240) with a gradient in Z direction is given as prediction input. The returned output contains the gradient up to Z around 140 and then the output values change to smaller values.\n\nIf a slightly smaller 3D volume (Z: 176, Y: 196, X: 240) is given, the output contains the full gradient as expected.\nUnfortunately I don't know if this is a TensorFlow, CUDA, cuDNN or some other sort of bug. I am grateful for any explanation or any hints on what it could be or how to fix this issue (without cropping/tiling the input).\nSource code / logs\nThe minimum example:\nimport tensorflow as tf\nfrom tensorflow.keras.models import model_from_json\nimport numpy as np\nfrom tifffile import imsave\n\n# load u-net architecture, kernel-size = 3, depth = 2\njson_file = open('model.json', 'r')\nloaded_model_json = json_file.read()\njson_file.close()\nmodel = model_from_json(loaded_model_json)\n\n# set all weights to 0.5\nw = model.get_weights()\ninit = []\nfor l in w:\n    init.append(l*0 + 0.5)\n\nmodel.set_weights(init)\n\ntmp = np.zeros((180, 196, 240), np.float32)\nfor i in range(tmp.shape[0]):\n    tmp[i] = i\n\ntmp = tmp[:, :, :, np.newaxis]\n\nprediction_fail = np.moveaxis(model.predict(np.moveaxis(tmp[np.newaxis], 4, -1))[0], 3, 0)\ntmp = tmp[:176]\nprediction_succ = np.moveaxis(model.predict(np.moveaxis(tmp[np.newaxis], 4, -1))[0], 3, 0)\n\nimsave('input.tif', tmp)\nimsave('prediction_fail.tif', prediction_fail[0])\nimsave('prediction_success.tif', prediction_succ[0])\n\nThe model.json with the u-net architecture:\n{\"class_name\": \"Model\", \"config\": {\"name\": \"model_3\", \"layers\": [{\"name\": \"input\", \"class_name\": \"InputLayer\", \"config\": {\"batch_input_shape\": [null, null, null, null, 1], \"dtype\": \"float32\", \"sparse\": false, \"name\": \"input\"}, \"inbound_nodes\": []}, {\"name\": \"down_level_0_no_0\", \"class_name\": \"Conv3D\", \"config\": {\"name\": \"down_level_0_no_0\", \"trainable\": true, \"filters\": 32, \"kernel_size\": [3, 3, 3], \"strides\": [1, 1, 1], \"padding\": \"same\", \"data_format\": \"channels_last\", \"dilation_rate\": [1, 1, 1], \"activation\": \"relu\", \"use_bias\": true, \"kernel_initializer\": {\"class_name\": \"VarianceScaling\", \"config\": {\"scale\": 1.0, \"mode\": \"fan_avg\", \"distribution\": \"uniform\", \"seed\": null}}, \"bias_initializer\": {\"class_name\": \"Zeros\", \"config\": {}}, \"kernel_regularizer\": null, \"bias_regularizer\": null, \"activity_regularizer\": null, \"kernel_constraint\": null, \"bias_constraint\": null}, \"inbound_nodes\": [[[\"input\", 0, 0, {}]]]}, {\"name\": \"down_level_0_no_1\", \"class_name\": \"Conv3D\", \"config\": {\"name\": \"down_level_0_no_1\", \"trainable\": true, \"filters\": 32, \"kernel_size\": [3, 3, 3], \"strides\": [1, 1, 1], \"padding\": \"same\", \"data_format\": \"channels_last\", \"dilation_rate\": [1, 1, 1], \"activation\": \"relu\", \"use_bias\": true, \"kernel_initializer\": {\"class_name\": \"VarianceScaling\", \"config\": {\"scale\": 1.0, \"mode\": \"fan_avg\", \"distribution\": \"uniform\", \"seed\": null}}, \"bias_initializer\": {\"class_name\": \"Zeros\", \"config\": {}}, \"kernel_regularizer\": null, \"bias_regularizer\": null, \"activity_regularizer\": null, \"kernel_constraint\": null, \"bias_constraint\": null}, \"inbound_nodes\": [[[\"down_level_0_no_0\", 0, 0, {}]]]}, {\"name\": \"max_0\", \"class_name\": \"MaxPooling3D\", \"config\": {\"name\": \"max_0\", \"trainable\": true, \"pool_size\": [2, 2, 2], \"padding\": \"valid\", \"strides\": [2, 2, 2], \"data_format\": \"channels_last\"}, \"inbound_nodes\": [[[\"down_level_0_no_1\", 0, 0, {}]]]}, {\"name\": \"down_level_1_no_0\", \"class_name\": \"Conv3D\", \"config\": {\"name\": \"down_level_1_no_0\", \"trainable\": true, \"filters\": 64, \"kernel_size\": [3, 3, 3], \"strides\": [1, 1, 1], \"padding\": \"same\", \"data_format\": \"channels_last\", \"dilation_rate\": [1, 1, 1], \"activation\": \"relu\", \"use_bias\": true, \"kernel_initializer\": {\"class_name\": \"VarianceScaling\", \"config\": {\"scale\": 1.0, \"mode\": \"fan_avg\", \"distribution\": \"uniform\", \"seed\": null}}, \"bias_initializer\": {\"class_name\": \"Zeros\", \"config\": {}}, \"kernel_regularizer\": null, \"bias_regularizer\": null, \"activity_regularizer\": null, \"kernel_constraint\": null, \"bias_constraint\": null}, \"inbound_nodes\": [[[\"max_0\", 0, 0, {}]]]}, {\"name\": \"down_level_1_no_1\", \"class_name\": \"Conv3D\", \"config\": {\"name\": \"down_level_1_no_1\", \"trainable\": true, \"filters\": 64, \"kernel_size\": [3, 3, 3], \"strides\": [1, 1, 1], \"padding\": \"same\", \"data_format\": \"channels_last\", \"dilation_rate\": [1, 1, 1], \"activation\": \"relu\", \"use_bias\": true, \"kernel_initializer\": {\"class_name\": \"VarianceScaling\", \"config\": {\"scale\": 1.0, \"mode\": \"fan_avg\", \"distribution\": \"uniform\", \"seed\": null}}, \"bias_initializer\": {\"class_name\": \"Zeros\", \"config\": {}}, \"kernel_regularizer\": null, \"bias_regularizer\": null, \"activity_regularizer\": null, \"kernel_constraint\": null, \"bias_constraint\": null}, \"inbound_nodes\": [[[\"down_level_1_no_0\", 0, 0, {}]]]}, {\"name\": \"max_1\", \"class_name\": \"MaxPooling3D\", \"config\": {\"name\": \"max_1\", \"trainable\": true, \"pool_size\": [2, 2, 2], \"padding\": \"valid\", \"strides\": [2, 2, 2], \"data_format\": \"channels_last\"}, \"inbound_nodes\": [[[\"down_level_1_no_1\", 0, 0, {}]]]}, {\"name\": \"middle_0\", \"class_name\": \"Conv3D\", \"config\": {\"name\": \"middle_0\", \"trainable\": true, \"filters\": 128, \"kernel_size\": [3, 3, 3], \"strides\": [1, 1, 1], \"padding\": \"same\", \"data_format\": \"channels_last\", \"dilation_rate\": [1, 1, 1], \"activation\": \"relu\", \"use_bias\": true, \"kernel_initializer\": {\"class_name\": \"VarianceScaling\", \"config\": {\"scale\": 1.0, \"mode\": \"fan_avg\", \"distribution\": \"uniform\", \"seed\": null}}, \"bias_initializer\": {\"class_name\": \"Zeros\", \"config\": {}}, \"kernel_regularizer\": null, \"bias_regularizer\": null, \"activity_regularizer\": null, \"kernel_constraint\": null, \"bias_constraint\": null}, \"inbound_nodes\": [[[\"max_1\", 0, 0, {}]]]}, {\"name\": \"middle_2\", \"class_name\": \"Conv3D\", \"config\": {\"name\": \"middle_2\", \"trainable\": true, \"filters\": 64, \"kernel_size\": [3, 3, 3], \"strides\": [1, 1, 1], \"padding\": \"same\", \"data_format\": \"channels_last\", \"dilation_rate\": [1, 1, 1], \"activation\": \"relu\", \"use_bias\": true, \"kernel_initializer\": {\"class_name\": \"VarianceScaling\", \"config\": {\"scale\": 1.0, \"mode\": \"fan_avg\", \"distribution\": \"uniform\", \"seed\": null}}, \"bias_initializer\": {\"class_name\": \"Zeros\", \"config\": {}}, \"kernel_regularizer\": null, \"bias_regularizer\": null, \"activity_regularizer\": null, \"kernel_constraint\": null, \"bias_constraint\": null}, \"inbound_nodes\": [[[\"middle_0\", 0, 0, {}]]]}, {\"name\": \"up_sampling3d_5\", \"class_name\": \"UpSampling3D\", \"config\": {\"name\": \"up_sampling3d_5\", \"trainable\": true, \"size\": [2, 2, 2], \"data_format\": \"channels_last\"}, \"inbound_nodes\": [[[\"middle_2\", 0, 0, {}]]]}, {\"name\": \"concatenate_5\", \"class_name\": \"Concatenate\", \"config\": {\"name\": \"concatenate_5\", \"trainable\": true, \"axis\": -1}, \"inbound_nodes\": [[[\"up_sampling3d_5\", 0, 0, {}], [\"down_level_1_no_1\", 0, 0, {}]]]}, {\"name\": \"up_level_1_no_0\", \"class_name\": \"Conv3D\", \"config\": {\"name\": \"up_level_1_no_0\", \"trainable\": true, \"filters\": 64, \"kernel_size\": [3, 3, 3], \"strides\": [1, 1, 1], \"padding\": \"same\", \"data_format\": \"channels_last\", \"dilation_rate\": [1, 1, 1], \"activation\": \"relu\", \"use_bias\": true, \"kernel_initializer\": {\"class_name\": \"VarianceScaling\", \"config\": {\"scale\": 1.0, \"mode\": \"fan_avg\", \"distribution\": \"uniform\", \"seed\": null}}, \"bias_initializer\": {\"class_name\": \"Zeros\", \"config\": {}}, \"kernel_regularizer\": null, \"bias_regularizer\": null, \"activity_regularizer\": null, \"kernel_constraint\": null, \"bias_constraint\": null}, \"inbound_nodes\": [[[\"concatenate_5\", 0, 0, {}]]]}, {\"name\": \"up_level_1_no_2\", \"class_name\": \"Conv3D\", \"config\": {\"name\": \"up_level_1_no_2\", \"trainable\": true, \"filters\": 32, \"kernel_size\": [3, 3, 3], \"strides\": [1, 1, 1], \"padding\": \"same\", \"data_format\": \"channels_last\", \"dilation_rate\": [1, 1, 1], \"activation\": \"relu\", \"use_bias\": true, \"kernel_initializer\": {\"class_name\": \"VarianceScaling\", \"config\": {\"scale\": 1.0, \"mode\": \"fan_avg\", \"distribution\": \"uniform\", \"seed\": null}}, \"bias_initializer\": {\"class_name\": \"Zeros\", \"config\": {}}, \"kernel_regularizer\": null, \"bias_regularizer\": null, \"activity_regularizer\": null, \"kernel_constraint\": null, \"bias_constraint\": null}, \"inbound_nodes\": [[[\"up_level_1_no_0\", 0, 0, {}]]]}, {\"name\": \"up_sampling3d_6\", \"class_name\": \"UpSampling3D\", \"config\": {\"name\": \"up_sampling3d_6\", \"trainable\": true, \"size\": [2, 2, 2], \"data_format\": \"channels_last\"}, \"inbound_nodes\": [[[\"up_level_1_no_2\", 0, 0, {}]]]}, {\"name\": \"concatenate_6\", \"class_name\": \"Concatenate\", \"config\": {\"name\": \"concatenate_6\", \"trainable\": true, \"axis\": -1}, \"inbound_nodes\": [[[\"up_sampling3d_6\", 0, 0, {}], [\"down_level_0_no_1\", 0, 0, {}]]]}, {\"name\": \"up_level_0_no_0\", \"class_name\": \"Conv3D\", \"config\": {\"name\": \"up_level_0_no_0\", \"trainable\": true, \"filters\": 32, \"kernel_size\": [3, 3, 3], \"strides\": [1, 1, 1], \"padding\": \"same\", \"data_format\": \"channels_last\", \"dilation_rate\": [1, 1, 1], \"activation\": \"relu\", \"use_bias\": true, \"kernel_initializer\": {\"class_name\": \"VarianceScaling\", \"config\": {\"scale\": 1.0, \"mode\": \"fan_avg\", \"distribution\": \"uniform\", \"seed\": null}}, \"bias_initializer\": {\"class_name\": \"Zeros\", \"config\": {}}, \"kernel_regularizer\": null, \"bias_regularizer\": null, \"activity_regularizer\": null, \"kernel_constraint\": null, \"bias_constraint\": null}, \"inbound_nodes\": [[[\"concatenate_6\", 0, 0, {}]]]}, {\"name\": \"up_level_0_no_2\", \"class_name\": \"Conv3D\", \"config\": {\"name\": \"up_level_0_no_2\", \"trainable\": true, \"filters\": 32, \"kernel_size\": [3, 3, 3], \"strides\": [1, 1, 1], \"padding\": \"same\", \"data_format\": \"channels_last\", \"dilation_rate\": [1, 1, 1], \"activation\": \"relu\", \"use_bias\": true, \"kernel_initializer\": {\"class_name\": \"VarianceScaling\", \"config\": {\"scale\": 1.0, \"mode\": \"fan_avg\", \"distribution\": \"uniform\", \"seed\": null}}, \"bias_initializer\": {\"class_name\": \"Zeros\", \"config\": {}}, \"kernel_regularizer\": null, \"bias_regularizer\": null, \"activity_regularizer\": null, \"kernel_constraint\": null, \"bias_constraint\": null}, \"inbound_nodes\": [[[\"up_level_0_no_0\", 0, 0, {}]]]}, {\"name\": \"conv3d_3\", \"class_name\": \"Conv3D\", \"config\": {\"name\": \"conv3d_3\", \"trainable\": true, \"filters\": 1, \"kernel_size\": [1, 1, 1], \"strides\": [1, 1, 1], \"padding\": \"valid\", \"data_format\": \"channels_last\", \"dilation_rate\": [1, 1, 1], \"activation\": \"linear\", \"use_bias\": true, \"kernel_initializer\": {\"class_name\": \"VarianceScaling\", \"config\": {\"scale\": 1.0, \"mode\": \"fan_avg\", \"distribution\": \"uniform\", \"seed\": null}}, \"bias_initializer\": {\"class_name\": \"Zeros\", \"config\": {}}, \"kernel_regularizer\": null, \"bias_regularizer\": null, \"activity_regularizer\": null, \"kernel_constraint\": null, \"bias_constraint\": null}, \"inbound_nodes\": [[[\"up_level_0_no_2\", 0, 0, {}]]]}, {\"name\": \"add_19\", \"class_name\": \"Add\", \"config\": {\"name\": \"add_19\", \"trainable\": true}, \"inbound_nodes\": [[[\"conv3d_3\", 0, 0, {}], [\"input\", 0, 0, {}]]]}, {\"name\": \"activation_52\", \"class_name\": \"Activation\", \"config\": {\"name\": \"activation_52\", \"trainable\": true, \"activation\": \"linear\"}, \"inbound_nodes\": [[[\"add_19\", 0, 0, {}]]]}], \"input_layers\": [[\"input\", 0, 0]], \"output_layers\": [[\"activation_52\", 0, 0]]}, \"keras_version\": \"2.2.0\", \"backend\": \"tensorflow\"}", "body": "### System Information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Mint 18\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**: N/A\r\n- **TensorFlow installed from (source or binary)**: Binary\r\n- **TensorFlow version (use command below)**: v1.10.0-0-g656e7a2b34 1.10.0\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: 9.0.176/7.1.2\r\n- **GPU model and memory**: Tesla P40 24GB\r\n- **Exact command to reproduce**: python3 example.py\r\n\r\n### Describe the problem\r\nHello,\r\nI am using Tensorflow on 3D image data and I observe some strange prediction artifacts once my input exceeds a certain size.\r\nI created a minimal working example (below) which produces the artifacts. In the example all weights of the loaded u-net are initialized to 0.5 and then a 3D volume (Z: 180, Y: 196, X: 240) with a gradient in Z direction is given as prediction input. The returned output contains the gradient up to Z around 140 and then the output values change to smaller values. \r\n![observation](https://user-images.githubusercontent.com/5450869/44163361-7661fc00-a0c3-11e8-8c67-a3524370b632.png)\r\n\r\nIf a slightly smaller 3D volume (Z: 176, Y: 196, X: 240) is given, the output contains the full gradient as expected. \r\n\r\nUnfortunately I don't know if this is a TensorFlow, CUDA, cuDNN or some other sort of bug. I am grateful for any explanation or any hints on what it could be or how to fix this issue (without cropping/tiling the input).\r\n\r\n### Source code / logs\r\n\r\nThe minimum example:\r\n```\r\nimport tensorflow as tf\r\nfrom tensorflow.keras.models import model_from_json\r\nimport numpy as np\r\nfrom tifffile import imsave\r\n\r\n# load u-net architecture, kernel-size = 3, depth = 2\r\njson_file = open('model.json', 'r')\r\nloaded_model_json = json_file.read()\r\njson_file.close()\r\nmodel = model_from_json(loaded_model_json)\r\n\r\n# set all weights to 0.5\r\nw = model.get_weights()\r\ninit = []\r\nfor l in w:\r\n    init.append(l*0 + 0.5)\r\n\r\nmodel.set_weights(init)\r\n\r\ntmp = np.zeros((180, 196, 240), np.float32)\r\nfor i in range(tmp.shape[0]):\r\n    tmp[i] = i\r\n\r\ntmp = tmp[:, :, :, np.newaxis]\r\n\r\nprediction_fail = np.moveaxis(model.predict(np.moveaxis(tmp[np.newaxis], 4, -1))[0], 3, 0)\r\ntmp = tmp[:176]\r\nprediction_succ = np.moveaxis(model.predict(np.moveaxis(tmp[np.newaxis], 4, -1))[0], 3, 0)\r\n\r\nimsave('input.tif', tmp)\r\nimsave('prediction_fail.tif', prediction_fail[0])\r\nimsave('prediction_success.tif', prediction_succ[0])\r\n```\r\n\r\nThe model.json with the u-net architecture:\r\n```\r\n{\"class_name\": \"Model\", \"config\": {\"name\": \"model_3\", \"layers\": [{\"name\": \"input\", \"class_name\": \"InputLayer\", \"config\": {\"batch_input_shape\": [null, null, null, null, 1], \"dtype\": \"float32\", \"sparse\": false, \"name\": \"input\"}, \"inbound_nodes\": []}, {\"name\": \"down_level_0_no_0\", \"class_name\": \"Conv3D\", \"config\": {\"name\": \"down_level_0_no_0\", \"trainable\": true, \"filters\": 32, \"kernel_size\": [3, 3, 3], \"strides\": [1, 1, 1], \"padding\": \"same\", \"data_format\": \"channels_last\", \"dilation_rate\": [1, 1, 1], \"activation\": \"relu\", \"use_bias\": true, \"kernel_initializer\": {\"class_name\": \"VarianceScaling\", \"config\": {\"scale\": 1.0, \"mode\": \"fan_avg\", \"distribution\": \"uniform\", \"seed\": null}}, \"bias_initializer\": {\"class_name\": \"Zeros\", \"config\": {}}, \"kernel_regularizer\": null, \"bias_regularizer\": null, \"activity_regularizer\": null, \"kernel_constraint\": null, \"bias_constraint\": null}, \"inbound_nodes\": [[[\"input\", 0, 0, {}]]]}, {\"name\": \"down_level_0_no_1\", \"class_name\": \"Conv3D\", \"config\": {\"name\": \"down_level_0_no_1\", \"trainable\": true, \"filters\": 32, \"kernel_size\": [3, 3, 3], \"strides\": [1, 1, 1], \"padding\": \"same\", \"data_format\": \"channels_last\", \"dilation_rate\": [1, 1, 1], \"activation\": \"relu\", \"use_bias\": true, \"kernel_initializer\": {\"class_name\": \"VarianceScaling\", \"config\": {\"scale\": 1.0, \"mode\": \"fan_avg\", \"distribution\": \"uniform\", \"seed\": null}}, \"bias_initializer\": {\"class_name\": \"Zeros\", \"config\": {}}, \"kernel_regularizer\": null, \"bias_regularizer\": null, \"activity_regularizer\": null, \"kernel_constraint\": null, \"bias_constraint\": null}, \"inbound_nodes\": [[[\"down_level_0_no_0\", 0, 0, {}]]]}, {\"name\": \"max_0\", \"class_name\": \"MaxPooling3D\", \"config\": {\"name\": \"max_0\", \"trainable\": true, \"pool_size\": [2, 2, 2], \"padding\": \"valid\", \"strides\": [2, 2, 2], \"data_format\": \"channels_last\"}, \"inbound_nodes\": [[[\"down_level_0_no_1\", 0, 0, {}]]]}, {\"name\": \"down_level_1_no_0\", \"class_name\": \"Conv3D\", \"config\": {\"name\": \"down_level_1_no_0\", \"trainable\": true, \"filters\": 64, \"kernel_size\": [3, 3, 3], \"strides\": [1, 1, 1], \"padding\": \"same\", \"data_format\": \"channels_last\", \"dilation_rate\": [1, 1, 1], \"activation\": \"relu\", \"use_bias\": true, \"kernel_initializer\": {\"class_name\": \"VarianceScaling\", \"config\": {\"scale\": 1.0, \"mode\": \"fan_avg\", \"distribution\": \"uniform\", \"seed\": null}}, \"bias_initializer\": {\"class_name\": \"Zeros\", \"config\": {}}, \"kernel_regularizer\": null, \"bias_regularizer\": null, \"activity_regularizer\": null, \"kernel_constraint\": null, \"bias_constraint\": null}, \"inbound_nodes\": [[[\"max_0\", 0, 0, {}]]]}, {\"name\": \"down_level_1_no_1\", \"class_name\": \"Conv3D\", \"config\": {\"name\": \"down_level_1_no_1\", \"trainable\": true, \"filters\": 64, \"kernel_size\": [3, 3, 3], \"strides\": [1, 1, 1], \"padding\": \"same\", \"data_format\": \"channels_last\", \"dilation_rate\": [1, 1, 1], \"activation\": \"relu\", \"use_bias\": true, \"kernel_initializer\": {\"class_name\": \"VarianceScaling\", \"config\": {\"scale\": 1.0, \"mode\": \"fan_avg\", \"distribution\": \"uniform\", \"seed\": null}}, \"bias_initializer\": {\"class_name\": \"Zeros\", \"config\": {}}, \"kernel_regularizer\": null, \"bias_regularizer\": null, \"activity_regularizer\": null, \"kernel_constraint\": null, \"bias_constraint\": null}, \"inbound_nodes\": [[[\"down_level_1_no_0\", 0, 0, {}]]]}, {\"name\": \"max_1\", \"class_name\": \"MaxPooling3D\", \"config\": {\"name\": \"max_1\", \"trainable\": true, \"pool_size\": [2, 2, 2], \"padding\": \"valid\", \"strides\": [2, 2, 2], \"data_format\": \"channels_last\"}, \"inbound_nodes\": [[[\"down_level_1_no_1\", 0, 0, {}]]]}, {\"name\": \"middle_0\", \"class_name\": \"Conv3D\", \"config\": {\"name\": \"middle_0\", \"trainable\": true, \"filters\": 128, \"kernel_size\": [3, 3, 3], \"strides\": [1, 1, 1], \"padding\": \"same\", \"data_format\": \"channels_last\", \"dilation_rate\": [1, 1, 1], \"activation\": \"relu\", \"use_bias\": true, \"kernel_initializer\": {\"class_name\": \"VarianceScaling\", \"config\": {\"scale\": 1.0, \"mode\": \"fan_avg\", \"distribution\": \"uniform\", \"seed\": null}}, \"bias_initializer\": {\"class_name\": \"Zeros\", \"config\": {}}, \"kernel_regularizer\": null, \"bias_regularizer\": null, \"activity_regularizer\": null, \"kernel_constraint\": null, \"bias_constraint\": null}, \"inbound_nodes\": [[[\"max_1\", 0, 0, {}]]]}, {\"name\": \"middle_2\", \"class_name\": \"Conv3D\", \"config\": {\"name\": \"middle_2\", \"trainable\": true, \"filters\": 64, \"kernel_size\": [3, 3, 3], \"strides\": [1, 1, 1], \"padding\": \"same\", \"data_format\": \"channels_last\", \"dilation_rate\": [1, 1, 1], \"activation\": \"relu\", \"use_bias\": true, \"kernel_initializer\": {\"class_name\": \"VarianceScaling\", \"config\": {\"scale\": 1.0, \"mode\": \"fan_avg\", \"distribution\": \"uniform\", \"seed\": null}}, \"bias_initializer\": {\"class_name\": \"Zeros\", \"config\": {}}, \"kernel_regularizer\": null, \"bias_regularizer\": null, \"activity_regularizer\": null, \"kernel_constraint\": null, \"bias_constraint\": null}, \"inbound_nodes\": [[[\"middle_0\", 0, 0, {}]]]}, {\"name\": \"up_sampling3d_5\", \"class_name\": \"UpSampling3D\", \"config\": {\"name\": \"up_sampling3d_5\", \"trainable\": true, \"size\": [2, 2, 2], \"data_format\": \"channels_last\"}, \"inbound_nodes\": [[[\"middle_2\", 0, 0, {}]]]}, {\"name\": \"concatenate_5\", \"class_name\": \"Concatenate\", \"config\": {\"name\": \"concatenate_5\", \"trainable\": true, \"axis\": -1}, \"inbound_nodes\": [[[\"up_sampling3d_5\", 0, 0, {}], [\"down_level_1_no_1\", 0, 0, {}]]]}, {\"name\": \"up_level_1_no_0\", \"class_name\": \"Conv3D\", \"config\": {\"name\": \"up_level_1_no_0\", \"trainable\": true, \"filters\": 64, \"kernel_size\": [3, 3, 3], \"strides\": [1, 1, 1], \"padding\": \"same\", \"data_format\": \"channels_last\", \"dilation_rate\": [1, 1, 1], \"activation\": \"relu\", \"use_bias\": true, \"kernel_initializer\": {\"class_name\": \"VarianceScaling\", \"config\": {\"scale\": 1.0, \"mode\": \"fan_avg\", \"distribution\": \"uniform\", \"seed\": null}}, \"bias_initializer\": {\"class_name\": \"Zeros\", \"config\": {}}, \"kernel_regularizer\": null, \"bias_regularizer\": null, \"activity_regularizer\": null, \"kernel_constraint\": null, \"bias_constraint\": null}, \"inbound_nodes\": [[[\"concatenate_5\", 0, 0, {}]]]}, {\"name\": \"up_level_1_no_2\", \"class_name\": \"Conv3D\", \"config\": {\"name\": \"up_level_1_no_2\", \"trainable\": true, \"filters\": 32, \"kernel_size\": [3, 3, 3], \"strides\": [1, 1, 1], \"padding\": \"same\", \"data_format\": \"channels_last\", \"dilation_rate\": [1, 1, 1], \"activation\": \"relu\", \"use_bias\": true, \"kernel_initializer\": {\"class_name\": \"VarianceScaling\", \"config\": {\"scale\": 1.0, \"mode\": \"fan_avg\", \"distribution\": \"uniform\", \"seed\": null}}, \"bias_initializer\": {\"class_name\": \"Zeros\", \"config\": {}}, \"kernel_regularizer\": null, \"bias_regularizer\": null, \"activity_regularizer\": null, \"kernel_constraint\": null, \"bias_constraint\": null}, \"inbound_nodes\": [[[\"up_level_1_no_0\", 0, 0, {}]]]}, {\"name\": \"up_sampling3d_6\", \"class_name\": \"UpSampling3D\", \"config\": {\"name\": \"up_sampling3d_6\", \"trainable\": true, \"size\": [2, 2, 2], \"data_format\": \"channels_last\"}, \"inbound_nodes\": [[[\"up_level_1_no_2\", 0, 0, {}]]]}, {\"name\": \"concatenate_6\", \"class_name\": \"Concatenate\", \"config\": {\"name\": \"concatenate_6\", \"trainable\": true, \"axis\": -1}, \"inbound_nodes\": [[[\"up_sampling3d_6\", 0, 0, {}], [\"down_level_0_no_1\", 0, 0, {}]]]}, {\"name\": \"up_level_0_no_0\", \"class_name\": \"Conv3D\", \"config\": {\"name\": \"up_level_0_no_0\", \"trainable\": true, \"filters\": 32, \"kernel_size\": [3, 3, 3], \"strides\": [1, 1, 1], \"padding\": \"same\", \"data_format\": \"channels_last\", \"dilation_rate\": [1, 1, 1], \"activation\": \"relu\", \"use_bias\": true, \"kernel_initializer\": {\"class_name\": \"VarianceScaling\", \"config\": {\"scale\": 1.0, \"mode\": \"fan_avg\", \"distribution\": \"uniform\", \"seed\": null}}, \"bias_initializer\": {\"class_name\": \"Zeros\", \"config\": {}}, \"kernel_regularizer\": null, \"bias_regularizer\": null, \"activity_regularizer\": null, \"kernel_constraint\": null, \"bias_constraint\": null}, \"inbound_nodes\": [[[\"concatenate_6\", 0, 0, {}]]]}, {\"name\": \"up_level_0_no_2\", \"class_name\": \"Conv3D\", \"config\": {\"name\": \"up_level_0_no_2\", \"trainable\": true, \"filters\": 32, \"kernel_size\": [3, 3, 3], \"strides\": [1, 1, 1], \"padding\": \"same\", \"data_format\": \"channels_last\", \"dilation_rate\": [1, 1, 1], \"activation\": \"relu\", \"use_bias\": true, \"kernel_initializer\": {\"class_name\": \"VarianceScaling\", \"config\": {\"scale\": 1.0, \"mode\": \"fan_avg\", \"distribution\": \"uniform\", \"seed\": null}}, \"bias_initializer\": {\"class_name\": \"Zeros\", \"config\": {}}, \"kernel_regularizer\": null, \"bias_regularizer\": null, \"activity_regularizer\": null, \"kernel_constraint\": null, \"bias_constraint\": null}, \"inbound_nodes\": [[[\"up_level_0_no_0\", 0, 0, {}]]]}, {\"name\": \"conv3d_3\", \"class_name\": \"Conv3D\", \"config\": {\"name\": \"conv3d_3\", \"trainable\": true, \"filters\": 1, \"kernel_size\": [1, 1, 1], \"strides\": [1, 1, 1], \"padding\": \"valid\", \"data_format\": \"channels_last\", \"dilation_rate\": [1, 1, 1], \"activation\": \"linear\", \"use_bias\": true, \"kernel_initializer\": {\"class_name\": \"VarianceScaling\", \"config\": {\"scale\": 1.0, \"mode\": \"fan_avg\", \"distribution\": \"uniform\", \"seed\": null}}, \"bias_initializer\": {\"class_name\": \"Zeros\", \"config\": {}}, \"kernel_regularizer\": null, \"bias_regularizer\": null, \"activity_regularizer\": null, \"kernel_constraint\": null, \"bias_constraint\": null}, \"inbound_nodes\": [[[\"up_level_0_no_2\", 0, 0, {}]]]}, {\"name\": \"add_19\", \"class_name\": \"Add\", \"config\": {\"name\": \"add_19\", \"trainable\": true}, \"inbound_nodes\": [[[\"conv3d_3\", 0, 0, {}], [\"input\", 0, 0, {}]]]}, {\"name\": \"activation_52\", \"class_name\": \"Activation\", \"config\": {\"name\": \"activation_52\", \"trainable\": true, \"activation\": \"linear\"}, \"inbound_nodes\": [[[\"add_19\", 0, 0, {}]]]}], \"input_layers\": [[\"input\", 0, 0]], \"output_layers\": [[\"activation_52\", 0, 0]]}, \"keras_version\": \"2.2.0\", \"backend\": \"tensorflow\"}\r\n```\r\n"}