{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/418820450", "html_url": "https://github.com/tensorflow/tensorflow/issues/21983#issuecomment-418820450", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21983", "id": 418820450, "node_id": "MDEyOklzc3VlQ29tbWVudDQxODgyMDQ1MA==", "user": {"login": "zmjjmz", "id": 1694612, "node_id": "MDQ6VXNlcjE2OTQ2MTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1694612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zmjjmz", "html_url": "https://github.com/zmjjmz", "followers_url": "https://api.github.com/users/zmjjmz/followers", "following_url": "https://api.github.com/users/zmjjmz/following{/other_user}", "gists_url": "https://api.github.com/users/zmjjmz/gists{/gist_id}", "starred_url": "https://api.github.com/users/zmjjmz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zmjjmz/subscriptions", "organizations_url": "https://api.github.com/users/zmjjmz/orgs", "repos_url": "https://api.github.com/users/zmjjmz/repos", "events_url": "https://api.github.com/users/zmjjmz/events{/privacy}", "received_events_url": "https://api.github.com/users/zmjjmz/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-05T17:48:51Z", "updated_at": "2018-09-05T17:48:51Z", "author_association": "NONE", "body_html": "<p>I'd refer to the code sample provided in the gist I linked. Previously I was going the pure <code>model_fn</code> route, however the issue with the way I was doing it before was that by manually creating the loss function I was losing anything that might contribute to that loss function, e.g. an L2 penalty.</p>\n<p>It's not clear to me that using the <code>multi_class_head</code> solves this, as it seems to create the loss function <a href=\"https://github.com/tensorflow/tensorflow/blob/r1.10/tensorflow/python/estimator/canned/head.py#L602\">here</a> which doesn't appear to have any knowledge of the Keras superstructure and thus regularizers that are meant to be applied, but I could be wrong. Would it be able to take those into account?</p>", "body_text": "I'd refer to the code sample provided in the gist I linked. Previously I was going the pure model_fn route, however the issue with the way I was doing it before was that by manually creating the loss function I was losing anything that might contribute to that loss function, e.g. an L2 penalty.\nIt's not clear to me that using the multi_class_head solves this, as it seems to create the loss function here which doesn't appear to have any knowledge of the Keras superstructure and thus regularizers that are meant to be applied, but I could be wrong. Would it be able to take those into account?", "body": "I'd refer to the code sample provided in the gist I linked. Previously I was going the pure `model_fn` route, however the issue with the way I was doing it before was that by manually creating the loss function I was losing anything that might contribute to that loss function, e.g. an L2 penalty.\r\n\r\nIt's not clear to me that using the `multi_class_head` solves this, as it seems to create the loss function [here](https://github.com/tensorflow/tensorflow/blob/r1.10/tensorflow/python/estimator/canned/head.py#L602) which doesn't appear to have any knowledge of the Keras superstructure and thus regularizers that are meant to be applied, but I could be wrong. Would it be able to take those into account?"}