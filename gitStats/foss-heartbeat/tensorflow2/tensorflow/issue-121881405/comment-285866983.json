{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/285866983", "html_url": "https://github.com/tensorflow/tensorflow/issues/492#issuecomment-285866983", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/492", "id": 285866983, "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTg2Njk4Mw==", "user": {"login": "botev", "id": 1889878, "node_id": "MDQ6VXNlcjE4ODk4Nzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1889878?v=4", "gravatar_id": "", "url": "https://api.github.com/users/botev", "html_url": "https://github.com/botev", "followers_url": "https://api.github.com/users/botev/followers", "following_url": "https://api.github.com/users/botev/following{/other_user}", "gists_url": "https://api.github.com/users/botev/gists{/gist_id}", "starred_url": "https://api.github.com/users/botev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/botev/subscriptions", "organizations_url": "https://api.github.com/users/botev/orgs", "repos_url": "https://api.github.com/users/botev/repos", "events_url": "https://api.github.com/users/botev/events{/privacy}", "received_events_url": "https://api.github.com/users/botev/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-11T13:34:07Z", "updated_at": "2017-03-11T13:40:32Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=23068\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/yaroslavvb\">@yaroslavvb</a> It seems that the <code>memory_stats_op.MaxBytesInUse()</code> is wrong. I'm running a single tensorflow instance and that being the only thing running on that GPU. Under <code>nvidia-smi</code> there are 8459MB memory used on the tensorflow, the op returns 4254MB. I have no idea what is going wrong but this is clearly wrong</p>\n<pre><code>memory_stats_ops = tf.load_op_library(memory_stats_ops_loc)\nstats_op = memory_stats_ops.max_bytes_in_use()\nmemory = session.run((train, cost, stats_op), feed_dict=feed_dict)[2] // (1024 * 1024)\n</code></pre>\n<p>PS: I'm loading it as an external library, as we are using <code>r1.0</code> which do not have the op and we can not use non stable releases.</p>", "body_text": "@yaroslavvb It seems that the memory_stats_op.MaxBytesInUse() is wrong. I'm running a single tensorflow instance and that being the only thing running on that GPU. Under nvidia-smi there are 8459MB memory used on the tensorflow, the op returns 4254MB. I have no idea what is going wrong but this is clearly wrong\nmemory_stats_ops = tf.load_op_library(memory_stats_ops_loc)\nstats_op = memory_stats_ops.max_bytes_in_use()\nmemory = session.run((train, cost, stats_op), feed_dict=feed_dict)[2] // (1024 * 1024)\n\nPS: I'm loading it as an external library, as we are using r1.0 which do not have the op and we can not use non stable releases.", "body": "@yaroslavvb It seems that the `memory_stats_op.MaxBytesInUse()` is wrong. I'm running a single tensorflow instance and that being the only thing running on that GPU. Under `nvidia-smi` there are 8459MB memory used on the tensorflow, the op returns 4254MB. I have no idea what is going wrong but this is clearly wrong\r\n```\r\nmemory_stats_ops = tf.load_op_library(memory_stats_ops_loc)\r\nstats_op = memory_stats_ops.max_bytes_in_use()\r\nmemory = session.run((train, cost, stats_op), feed_dict=feed_dict)[2] // (1024 * 1024)\r\n```\r\nPS: I'm loading it as an external library, as we are using `r1.0` which do not have the op and we can not use non stable releases."}