{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/280093509", "html_url": "https://github.com/tensorflow/tensorflow/issues/492#issuecomment-280093509", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/492", "id": 280093509, "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDA5MzUwOQ==", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "created_at": "2017-02-15T18:19:53Z", "updated_at": "2017-02-15T18:19:53Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1690869\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/asanakoy\">@asanakoy</a> a <code>function.Defun</code> node is treated as a single tensorflow node for the purpose of backprop. IE, similar to what happens in a single op launch -- there may be intermediate temporary variables that could've been useful for the backprop kernel, but they get recomputed rather than reused. I haven't checked precisely how it's implemented with <code>function.Defun</code>, but I suspect that the backprop graph has a copy of <code>function.Defun</code> graph with same input as original <code>function.Defun</code>.</p>", "body_text": "@asanakoy a function.Defun node is treated as a single tensorflow node for the purpose of backprop. IE, similar to what happens in a single op launch -- there may be intermediate temporary variables that could've been useful for the backprop kernel, but they get recomputed rather than reused. I haven't checked precisely how it's implemented with function.Defun, but I suspect that the backprop graph has a copy of function.Defun graph with same input as original function.Defun.", "body": "@asanakoy a `function.Defun` node is treated as a single tensorflow node for the purpose of backprop. IE, similar to what happens in a single op launch -- there may be intermediate temporary variables that could've been useful for the backprop kernel, but they get recomputed rather than reused. I haven't checked precisely how it's implemented with `function.Defun`, but I suspect that the backprop graph has a copy of `function.Defun` graph with same input as original `function.Defun`. "}