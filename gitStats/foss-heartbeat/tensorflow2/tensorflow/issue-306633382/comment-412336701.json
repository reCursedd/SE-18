{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/412336701", "html_url": "https://github.com/tensorflow/tensorflow/issues/17843#issuecomment-412336701", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17843", "id": 412336701, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjMzNjcwMQ==", "user": {"login": "hsgkim", "id": 34839382, "node_id": "MDQ6VXNlcjM0ODM5Mzgy", "avatar_url": "https://avatars0.githubusercontent.com/u/34839382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hsgkim", "html_url": "https://github.com/hsgkim", "followers_url": "https://api.github.com/users/hsgkim/followers", "following_url": "https://api.github.com/users/hsgkim/following{/other_user}", "gists_url": "https://api.github.com/users/hsgkim/gists{/gist_id}", "starred_url": "https://api.github.com/users/hsgkim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hsgkim/subscriptions", "organizations_url": "https://api.github.com/users/hsgkim/orgs", "repos_url": "https://api.github.com/users/hsgkim/repos", "events_url": "https://api.github.com/users/hsgkim/events{/privacy}", "received_events_url": "https://api.github.com/users/hsgkim/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-12T11:34:49Z", "updated_at": "2018-08-12T11:34:49Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=986732\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/tatianashp\">@tatianashp</a> Sorry, this is my first time ever contributing to TensorFlow, so I'm not quite sure where to place my files; should they be under <code>tensorflow/core/kernels</code> so that my op becomes <code>tf.extract_volume_patches</code>, or somewhere under <code>contrib</code>?</p>\n<p>And it looks like Eigen for some reason designed <code>extract_volume_patches</code> in a way that does not let you pass the <code>rate</code>s (in a very straightforward way at least), i.e.</p>\n<div class=\"highlight highlight-source-c++\"><pre>EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE\n<span class=\"pl-k\">const</span> TensorVolumePatchOp&lt;Dynamic, Dynamic, Dynamic, <span class=\"pl-k\">const</span> Derived&gt;\n<span class=\"pl-en\">extract_volume_patches</span>(<span class=\"pl-k\">const</span> Index patch_planes, <span class=\"pl-k\">const</span> Index patch_rows, <span class=\"pl-k\">const</span> Index patch_cols,\n                       <span class=\"pl-k\">const</span> Index plane_stride = <span class=\"pl-c1\">1</span>, <span class=\"pl-k\">const</span> Index row_stride = <span class=\"pl-c1\">1</span>, <span class=\"pl-k\">const</span> Index col_stride = <span class=\"pl-c1\">1</span>,\n                       <span class=\"pl-k\">const</span> PaddingType padding_type = PADDING_SAME, <span class=\"pl-k\">const</span> Scalar padding_value = Scalar(<span class=\"pl-c1\">0</span>)) <span class=\"pl-k\">const</span> {\n  <span class=\"pl-k\">return</span> TensorVolumePatchOp&lt;Dynamic, Dynamic, Dynamic, <span class=\"pl-k\">const</span> Derived&gt;(<span class=\"pl-c1\">derived</span>(), patch_planes, patch_rows, patch_cols, plane_stride, row_stride, col_stride, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>, padding_type, padding_value);\n}</pre></div>\n<p>cf) <code>extract_image_patches</code></p>\n<div class=\"highlight highlight-source-c++\"><pre>EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE\n<span class=\"pl-k\">const</span> TensorImagePatchOp&lt;Dynamic, Dynamic, <span class=\"pl-k\">const</span> Derived&gt;\n<span class=\"pl-en\">extract_image_patches</span>(<span class=\"pl-k\">const</span> Index patch_rows = <span class=\"pl-c1\">1</span>, <span class=\"pl-k\">const</span> Index patch_cols = <span class=\"pl-c1\">1</span>,\n                      <span class=\"pl-k\">const</span> Index row_stride = <span class=\"pl-c1\">1</span>, <span class=\"pl-k\">const</span> Index col_stride = <span class=\"pl-c1\">1</span>,\n                      <span class=\"pl-k\">const</span> Index in_row_stride = <span class=\"pl-c1\">1</span>, <span class=\"pl-k\">const</span> Index in_col_stride = <span class=\"pl-c1\">1</span>,\n                      <span class=\"pl-k\">const</span> PaddingType padding_type = PADDING_SAME, <span class=\"pl-k\">const</span> Scalar padding_value = Scalar(<span class=\"pl-c1\">0</span>)) <span class=\"pl-k\">const</span> {\n  <span class=\"pl-k\">return</span> TensorImagePatchOp&lt;Dynamic, Dynamic, <span class=\"pl-k\">const</span> Derived&gt;(<span class=\"pl-c1\">derived</span>(), patch_rows, patch_cols, row_stride, col_stride,\n                                                             in_row_stride, in_col_stride, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>, padding_type, padding_value);\n}</pre></div>\n<p>Is it a must to keep the <code>rate</code> arguments or can I leave them out for volume patches?</p>", "body_text": "@tatianashp Sorry, this is my first time ever contributing to TensorFlow, so I'm not quite sure where to place my files; should they be under tensorflow/core/kernels so that my op becomes tf.extract_volume_patches, or somewhere under contrib?\nAnd it looks like Eigen for some reason designed extract_volume_patches in a way that does not let you pass the rates (in a very straightforward way at least), i.e.\nEIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE\nconst TensorVolumePatchOp<Dynamic, Dynamic, Dynamic, const Derived>\nextract_volume_patches(const Index patch_planes, const Index patch_rows, const Index patch_cols,\n                       const Index plane_stride = 1, const Index row_stride = 1, const Index col_stride = 1,\n                       const PaddingType padding_type = PADDING_SAME, const Scalar padding_value = Scalar(0)) const {\n  return TensorVolumePatchOp<Dynamic, Dynamic, Dynamic, const Derived>(derived(), patch_planes, patch_rows, patch_cols, plane_stride, row_stride, col_stride, 1, 1, 1, 1, 1, 1, padding_type, padding_value);\n}\ncf) extract_image_patches\nEIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE\nconst TensorImagePatchOp<Dynamic, Dynamic, const Derived>\nextract_image_patches(const Index patch_rows = 1, const Index patch_cols = 1,\n                      const Index row_stride = 1, const Index col_stride = 1,\n                      const Index in_row_stride = 1, const Index in_col_stride = 1,\n                      const PaddingType padding_type = PADDING_SAME, const Scalar padding_value = Scalar(0)) const {\n  return TensorImagePatchOp<Dynamic, Dynamic, const Derived>(derived(), patch_rows, patch_cols, row_stride, col_stride,\n                                                             in_row_stride, in_col_stride, 1, 1, padding_type, padding_value);\n}\nIs it a must to keep the rate arguments or can I leave them out for volume patches?", "body": "@tatianashp Sorry, this is my first time ever contributing to TensorFlow, so I'm not quite sure where to place my files; should they be under `tensorflow/core/kernels` so that my op becomes `tf.extract_volume_patches`, or somewhere under `contrib`?\r\n\r\nAnd it looks like Eigen for some reason designed `extract_volume_patches` in a way that does not let you pass the `rate`s (in a very straightforward way at least), i.e.\r\n```c++\r\nEIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE\r\nconst TensorVolumePatchOp<Dynamic, Dynamic, Dynamic, const Derived>\r\nextract_volume_patches(const Index patch_planes, const Index patch_rows, const Index patch_cols,\r\n                       const Index plane_stride = 1, const Index row_stride = 1, const Index col_stride = 1,\r\n                       const PaddingType padding_type = PADDING_SAME, const Scalar padding_value = Scalar(0)) const {\r\n  return TensorVolumePatchOp<Dynamic, Dynamic, Dynamic, const Derived>(derived(), patch_planes, patch_rows, patch_cols, plane_stride, row_stride, col_stride, 1, 1, 1, 1, 1, 1, padding_type, padding_value);\r\n}\r\n```\r\n\r\ncf) `extract_image_patches`\r\n```c++\r\nEIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE\r\nconst TensorImagePatchOp<Dynamic, Dynamic, const Derived>\r\nextract_image_patches(const Index patch_rows = 1, const Index patch_cols = 1,\r\n                      const Index row_stride = 1, const Index col_stride = 1,\r\n                      const Index in_row_stride = 1, const Index in_col_stride = 1,\r\n                      const PaddingType padding_type = PADDING_SAME, const Scalar padding_value = Scalar(0)) const {\r\n  return TensorImagePatchOp<Dynamic, Dynamic, const Derived>(derived(), patch_rows, patch_cols, row_stride, col_stride,\r\n                                                             in_row_stride, in_col_stride, 1, 1, padding_type, padding_value);\r\n}\r\n```\r\n\r\nIs it a must to keep the `rate` arguments or can I leave them out for volume patches?"}