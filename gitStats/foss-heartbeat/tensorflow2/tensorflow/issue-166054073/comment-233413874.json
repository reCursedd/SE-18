{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/233413874", "html_url": "https://github.com/tensorflow/tensorflow/issues/3358#issuecomment-233413874", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3358", "id": 233413874, "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzQxMzg3NA==", "user": {"login": "gorBaghdasaryan", "id": 14294236, "node_id": "MDQ6VXNlcjE0Mjk0MjM2", "avatar_url": "https://avatars2.githubusercontent.com/u/14294236?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gorBaghdasaryan", "html_url": "https://github.com/gorBaghdasaryan", "followers_url": "https://api.github.com/users/gorBaghdasaryan/followers", "following_url": "https://api.github.com/users/gorBaghdasaryan/following{/other_user}", "gists_url": "https://api.github.com/users/gorBaghdasaryan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gorBaghdasaryan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gorBaghdasaryan/subscriptions", "organizations_url": "https://api.github.com/users/gorBaghdasaryan/orgs", "repos_url": "https://api.github.com/users/gorBaghdasaryan/repos", "events_url": "https://api.github.com/users/gorBaghdasaryan/events{/privacy}", "received_events_url": "https://api.github.com/users/gorBaghdasaryan/received_events", "type": "User", "site_admin": false}, "created_at": "2016-07-18T18:21:50Z", "updated_at": "2016-07-18T18:22:58Z", "author_association": "CONTRIBUTOR", "body_html": "<p>a code in which an error is thrown</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">deconvolution_2d</span>(<span class=\"pl-smi\">x</span>, <span class=\"pl-smi\">in_channels</span>, <span class=\"pl-smi\">out_channels</span>, <span class=\"pl-smi\">ksize</span>, <span class=\"pl-smi\">stride</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>, <span class=\"pl-smi\">pad</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0</span>, <span class=\"pl-smi\">name</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">None</span>):\n        <span class=\"pl-k\">with</span> tf.variable_scope(name) <span class=\"pl-k\">as</span> scope:\n            kernel <span class=\"pl-k\">=</span> FastStyleNet.make_var(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>weights<span class=\"pl-pds\">'</span></span>, [ksize, ksize, out_channels, in_channels])\n\n            <span class=\"pl-k\">def</span> <span class=\"pl-en\">get_deconv_outsize</span>(<span class=\"pl-smi\">size</span>, <span class=\"pl-smi\">k</span>, <span class=\"pl-smi\">s</span>, <span class=\"pl-smi\">p</span>, <span class=\"pl-smi\">cover_all</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">False</span>):\n                res <span class=\"pl-k\">=</span> s <span class=\"pl-k\">*</span> (size <span class=\"pl-k\">-</span> <span class=\"pl-c1\">1</span>) <span class=\"pl-k\">+</span> k <span class=\"pl-k\">-</span> <span class=\"pl-c1\">2</span> <span class=\"pl-k\">*</span> p\n                <span class=\"pl-k\">return</span> res\n\n            x_s <span class=\"pl-k\">=</span> tf.shape(x)\n            x_s0 <span class=\"pl-k\">=</span> x_s[<span class=\"pl-c1\">0</span>]\n            x_s012 <span class=\"pl-k\">=</span> get_deconv_outsize(x_s, ksize, stride, pad)\n            output_shape <span class=\"pl-k\">=</span> tf.pack(\n                [x_s0, x_s012[<span class=\"pl-c1\">1</span>], x_s012[<span class=\"pl-c1\">2</span>],\n                 out_channels])\n\n            <span class=\"pl-k\">return</span> tf.nn.conv2d_transpose(x, kernel, output_shape, [<span class=\"pl-c1\">1</span>, stride, stride, <span class=\"pl-c1\">1</span>])</pre></div>", "body_text": "a code in which an error is thrown\ndef deconvolution_2d(x, in_channels, out_channels, ksize, stride=1, pad=0, name=None):\n        with tf.variable_scope(name) as scope:\n            kernel = FastStyleNet.make_var('weights', [ksize, ksize, out_channels, in_channels])\n\n            def get_deconv_outsize(size, k, s, p, cover_all=False):\n                res = s * (size - 1) + k - 2 * p\n                return res\n\n            x_s = tf.shape(x)\n            x_s0 = x_s[0]\n            x_s012 = get_deconv_outsize(x_s, ksize, stride, pad)\n            output_shape = tf.pack(\n                [x_s0, x_s012[1], x_s012[2],\n                 out_channels])\n\n            return tf.nn.conv2d_transpose(x, kernel, output_shape, [1, stride, stride, 1])", "body": "a code in which an error is thrown\n\n``` python\ndef deconvolution_2d(x, in_channels, out_channels, ksize, stride=1, pad=0, name=None):\n        with tf.variable_scope(name) as scope:\n            kernel = FastStyleNet.make_var('weights', [ksize, ksize, out_channels, in_channels])\n\n            def get_deconv_outsize(size, k, s, p, cover_all=False):\n                res = s * (size - 1) + k - 2 * p\n                return res\n\n            x_s = tf.shape(x)\n            x_s0 = x_s[0]\n            x_s012 = get_deconv_outsize(x_s, ksize, stride, pad)\n            output_shape = tf.pack(\n                [x_s0, x_s012[1], x_s012[2],\n                 out_channels])\n\n            return tf.nn.conv2d_transpose(x, kernel, output_shape, [1, stride, stride, 1])\n```\n"}