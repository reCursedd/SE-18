{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/134563251", "pull_request_review_id": 57869206, "id": 134563251, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNDU2MzI1MQ==", "diff_hunk": "@@ -721,109 +720,133 @@ void RdmaTensorBuffer::SendNextItem() {\n           host_alloc_attrs.set_on_host(true);\n           Allocator* alloc = ProcessState::singleton()->GetCUDAHostAllocator(0);\n           copy = Tensor(alloc, in.dtype(), in.shape());\n-          s = VerbsUtil::CopyGPUTensorToCPUSync(\n-              src_dev, send_args.device_context, &in, &copy);\n-          CHECK(s.ok()) << \"copy tensor from gpu sync\";\n-          copy_buf = copy.tensor_data();\n+          tensor_bytes = in.TotalBytes();\n+          buffer_size += tensor_bytes;\n+          GPUUtil::CopyGPUTensorToCPU(\n+              src_dev, send_args.device_context, &in, &copy,\n+              [this, copy, tensor_bytes, buffer_size, key, in, step_id,\n+               key_with_step_id, is_dead](const Status& s) {\n+                CHECK(s.ok()) << \"copy tensor from gpu sync\";\n+                StringPiece copy_buf;\n+                copy_buf = copy.tensor_data();\n+                PostCopyOperations(true, buffer_size, tensor_bytes, key, in,\n+                                   step_id, is_dead, key_with_step_id, &copy,\n+                                   NULL, &copy_buf);\n+              });\n         } else {\n-          // \"val\" is on a GPU. Uses GPUUtil to fill the proto.\n-          s = VerbsUtil::SetProtoFromGPUSync(\n-              in, src_dev, send_args.device_context, &proto, is_dead);\n-          CHECK(s.ok()) << \"set proto from gpu sync\";\n+          // \"val\" is on a GPU. No longer uses GPUUtil to fill the proto, use\n+          // aync instead\n+          GPUUtil::SetProtoFromGPU(\n+              in, src_dev, send_args.device_context, &proto, is_dead,", "path": "tensorflow/contrib/verbs/rdma.cc", "position": 37, "original_position": 37, "commit_id": "3488f9c1b68da6302d4ade9007d9826b0adaff64", "original_commit_id": "3488f9c1b68da6302d4ade9007d9826b0adaff64", "user": {"login": "junshi15", "id": 12075848, "node_id": "MDQ6VXNlcjEyMDc1ODQ4", "avatar_url": "https://avatars3.githubusercontent.com/u/12075848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/junshi15", "html_url": "https://github.com/junshi15", "followers_url": "https://api.github.com/users/junshi15/followers", "following_url": "https://api.github.com/users/junshi15/following{/other_user}", "gists_url": "https://api.github.com/users/junshi15/gists{/gist_id}", "starred_url": "https://api.github.com/users/junshi15/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/junshi15/subscriptions", "organizations_url": "https://api.github.com/users/junshi15/orgs", "repos_url": "https://api.github.com/users/junshi15/repos", "events_url": "https://api.github.com/users/junshi15/events{/privacy}", "received_events_url": "https://api.github.com/users/junshi15/received_events", "type": "User", "site_admin": false}, "body": "Agreed. The error handling can be improved. Maybe we should send error status back to the caller (like [here](https://github.com/petewarden/tensorflow_makefile/blob/49c08e4d4ff3b6e7d99374dc2fbf8b358150ef9c/tensorflow/core/distributed_runtime/rpc/grpc_worker_service.cc#L410-L413)) and let the caller decide what to do, either re-try or abort. \r\n\r\nHowever, for this patch, let's not address it as returning the error status to the caller/requester may require an extra signal path.\r\n\r\nThis patch looks good to me otherwise.\r\n\r\n", "created_at": "2017-08-22T18:23:30Z", "updated_at": "2017-08-22T18:23:30Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/12361#discussion_r134563251", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/12361", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/134563251"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/12361#discussion_r134563251"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/12361"}}, "body_html": "<p>Agreed. The error handling can be improved. Maybe we should send error status back to the caller (like <a href=\"https://github.com/petewarden/tensorflow_makefile/blob/49c08e4d4ff3b6e7d99374dc2fbf8b358150ef9c/tensorflow/core/distributed_runtime/rpc/grpc_worker_service.cc#L410-L413\">here</a>) and let the caller decide what to do, either re-try or abort.</p>\n<p>However, for this patch, let's not address it as returning the error status to the caller/requester may require an extra signal path.</p>\n<p>This patch looks good to me otherwise.</p>", "body_text": "Agreed. The error handling can be improved. Maybe we should send error status back to the caller (like here) and let the caller decide what to do, either re-try or abort.\nHowever, for this patch, let's not address it as returning the error status to the caller/requester may require an extra signal path.\nThis patch looks good to me otherwise.", "in_reply_to_id": 134557481}