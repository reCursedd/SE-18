{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/164726265", "html_url": "https://github.com/tensorflow/tensorflow/issues/505#issuecomment-164726265", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/505", "id": 164726265, "node_id": "MDEyOklzc3VlQ29tbWVudDE2NDcyNjI2NQ==", "user": {"login": "tomasmcz", "id": 4395563, "node_id": "MDQ6VXNlcjQzOTU1NjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/4395563?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomasmcz", "html_url": "https://github.com/tomasmcz", "followers_url": "https://api.github.com/users/tomasmcz/followers", "following_url": "https://api.github.com/users/tomasmcz/following{/other_user}", "gists_url": "https://api.github.com/users/tomasmcz/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomasmcz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomasmcz/subscriptions", "organizations_url": "https://api.github.com/users/tomasmcz/orgs", "repos_url": "https://api.github.com/users/tomasmcz/repos", "events_url": "https://api.github.com/users/tomasmcz/events{/privacy}", "received_events_url": "https://api.github.com/users/tomasmcz/received_events", "type": "User", "site_admin": false}, "created_at": "2015-12-15T10:53:47Z", "updated_at": "2015-12-15T10:53:47Z", "author_association": "NONE", "body_html": "<p>This is the smallest example I was able to write. Embeddings seem to be an important part of the problem.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c\"><span class=\"pl-c\">#</span>!/usr/bin/env python</span>\n\n<span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\ninput_op <span class=\"pl-k\">=</span> tf.placeholder(tf.int32, <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">7</span>, <span class=\"pl-c1\">3</span>))\ntarget_op <span class=\"pl-k\">=</span> tf.placeholder(tf.float32, <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">7</span>))\n\nembeddings <span class=\"pl-k\">=</span> tf.Variable(tf.random_uniform((<span class=\"pl-c1\">13</span>, <span class=\"pl-c1\">5</span>), <span class=\"pl-k\">-</span><span class=\"pl-c1\">1.0</span>, <span class=\"pl-c1\">1.0</span>))\nemb <span class=\"pl-k\">=</span> tf.nn.embedding_lookup(embeddings, input_op)\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> This does not work with Momentum:</span>\nreshaped <span class=\"pl-k\">=</span> tf.reshape(emb, (<span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">15</span>))\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> This works with Momentum:</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>_emb = []</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>for x in tf.split(1, 3, input_op):</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>    _emb.append(tf.nn.embedding_lookup(embeddings, tf.squeeze(x)))</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>reshaped = tf.concat(1, _emb)</span>\n\nW <span class=\"pl-k\">=</span> tf.Variable(tf.random_uniform([<span class=\"pl-c1\">15</span>, <span class=\"pl-c1\">1</span>], <span class=\"pl-k\">-</span><span class=\"pl-c1\">1.0</span>, <span class=\"pl-c1\">1.0</span>))\nloss <span class=\"pl-k\">=</span> tf.nn.sigmoid_cross_entropy_with_logits(tf.matmul(reshaped, W), target_op)\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>optimizer = tf.train.GradientDescentOptimizer(learning_rate=0.01).minimize(loss)</span>\noptimizer <span class=\"pl-k\">=</span> tf.train.MomentumOptimizer(<span class=\"pl-c1\">0.01</span>, <span class=\"pl-c1\">0.9</span>).minimize(loss)\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>optimizer = tf.train.AdagradOptimizer(0.01).minimize(loss)</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>optimizer = tf.train.AdamOptimizer().minimize(loss)</span></pre></div>", "body_text": "This is the smallest example I was able to write. Embeddings seem to be an important part of the problem.\n#!/usr/bin/env python\n\nimport tensorflow as tf\n\ninput_op = tf.placeholder(tf.int32, shape=(7, 3))\ntarget_op = tf.placeholder(tf.float32, shape=(7))\n\nembeddings = tf.Variable(tf.random_uniform((13, 5), -1.0, 1.0))\nemb = tf.nn.embedding_lookup(embeddings, input_op)\n\n# This does not work with Momentum:\nreshaped = tf.reshape(emb, (-1, 15))\n\n# This works with Momentum:\n#_emb = []\n#for x in tf.split(1, 3, input_op):\n#    _emb.append(tf.nn.embedding_lookup(embeddings, tf.squeeze(x)))\n#reshaped = tf.concat(1, _emb)\n\nW = tf.Variable(tf.random_uniform([15, 1], -1.0, 1.0))\nloss = tf.nn.sigmoid_cross_entropy_with_logits(tf.matmul(reshaped, W), target_op)\n\n#optimizer = tf.train.GradientDescentOptimizer(learning_rate=0.01).minimize(loss)\noptimizer = tf.train.MomentumOptimizer(0.01, 0.9).minimize(loss)\n#optimizer = tf.train.AdagradOptimizer(0.01).minimize(loss)\n#optimizer = tf.train.AdamOptimizer().minimize(loss)", "body": "This is the smallest example I was able to write. Embeddings seem to be an important part of the problem.\n\n``` python\n#!/usr/bin/env python\n\nimport tensorflow as tf\n\ninput_op = tf.placeholder(tf.int32, shape=(7, 3))\ntarget_op = tf.placeholder(tf.float32, shape=(7))\n\nembeddings = tf.Variable(tf.random_uniform((13, 5), -1.0, 1.0))\nemb = tf.nn.embedding_lookup(embeddings, input_op)\n\n# This does not work with Momentum:\nreshaped = tf.reshape(emb, (-1, 15))\n\n# This works with Momentum:\n#_emb = []\n#for x in tf.split(1, 3, input_op):\n#    _emb.append(tf.nn.embedding_lookup(embeddings, tf.squeeze(x)))\n#reshaped = tf.concat(1, _emb)\n\nW = tf.Variable(tf.random_uniform([15, 1], -1.0, 1.0))\nloss = tf.nn.sigmoid_cross_entropy_with_logits(tf.matmul(reshaped, W), target_op)\n\n#optimizer = tf.train.GradientDescentOptimizer(learning_rate=0.01).minimize(loss)\noptimizer = tf.train.MomentumOptimizer(0.01, 0.9).minimize(loss)\n#optimizer = tf.train.AdagradOptimizer(0.01).minimize(loss)\n#optimizer = tf.train.AdamOptimizer().minimize(loss)\n```\n"}