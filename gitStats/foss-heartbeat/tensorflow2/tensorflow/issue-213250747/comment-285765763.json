{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/285765763", "html_url": "https://github.com/tensorflow/tensorflow/issues/8264#issuecomment-285765763", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8264", "id": 285765763, "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTc2NTc2Mw==", "user": {"login": "byzhang", "id": 872149, "node_id": "MDQ6VXNlcjg3MjE0OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/872149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/byzhang", "html_url": "https://github.com/byzhang", "followers_url": "https://api.github.com/users/byzhang/followers", "following_url": "https://api.github.com/users/byzhang/following{/other_user}", "gists_url": "https://api.github.com/users/byzhang/gists{/gist_id}", "starred_url": "https://api.github.com/users/byzhang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/byzhang/subscriptions", "organizations_url": "https://api.github.com/users/byzhang/orgs", "repos_url": "https://api.github.com/users/byzhang/repos", "events_url": "https://api.github.com/users/byzhang/events{/privacy}", "received_events_url": "https://api.github.com/users/byzhang/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-10T19:43:09Z", "updated_at": "2017-03-10T19:43:09Z", "author_association": "NONE", "body_html": "<p>sure.</p>\n<pre><code> \u276f ./configure                                                                                                                                                                                           Please specify the location of python. [Default is /usr/bin/python]:\nPlease specify optimization flags to use during compilation [Default is -march=native]:\nDo you wish to use jemalloc as the malloc implementation? (Linux only) [Y/n]\njemalloc enabled on Linux\nDo you wish to build TensorFlow with Google Cloud Platform support? [y/N]\nNo Google Cloud Platform support will be enabled for TensorFlow\nDo you wish to build TensorFlow with Hadoop File System support? [y/N]\nNo Hadoop File System support will be enabled for TensorFlow\nDo you wish to build TensorFlow with the XLA just-in-time compiler (experimental)? [y/N]\nNo XLA support will be enabled for TensorFlow\nFound possible Python library paths:\n  /usr/local/lib/python2.7/dist-packages\n  /usr/lib/python2.7/dist-packages\nPlease input the desired Python library path to use.  Default is [/usr/local/lib/python2.7/dist-packages]\n\nUsing python library path: /usr/local/lib/python2.7/dist-packages\nDo you wish to build TensorFlow with OpenCL support? [y/N]\nNo OpenCL support will be enabled for TensorFlow\nDo you wish to build TensorFlow with CUDA support? [y/N] y\nCUDA support will be enabled for TensorFlow\nPlease specify which gcc should be used by nvcc as the host compiler. [Default is /usr/bin/gcc]:\nPlease specify the CUDA SDK version you want to use, e.g. 7.0. [Leave empty to use system default]: 8.0\nPlease specify the location where CUDA 8.0 toolkit is installed. Refer to README.md for more details. [Default is /usr/local/cuda]:\nPlease specify the Cudnn version you want to use. [Leave empty to use system default]: 5\nPlease specify the location where cuDNN 5 library is installed. Refer to README.md for more details. [Default is /usr/local/cuda]: /usr/lib/x86_64-linux-gnu\nPlease specify a list of comma-separated Cuda compute capabilities you want to build with.\nYou can find the compute capability of your device at: https://developer.nvidia.com/cuda-gpus.\nPlease note that each additional compute capability significantly increases your build time and binary size.\n[Default is: \"3.5,5.2\"]: 3.0,3.5,5.2,6.0,6.1\nINFO: Reading 'startup' options from /root/.bazelrc: --batch\nINFO: Starting clean (this may take a while). Consider using --expunge_async if the clean takes more than several minutes.\nINFO: Reading 'startup' options from /root/.bazelrc: --batch\nERROR: package contains errors: tensorflow/stream_executor.\nERROR: error loading package 'tensorflow/stream_executor': Encountered error while reading extension file 'cuda/build_defs.bzl': no such package '@local_config_cuda//cuda': Traceback (most recent call last):\n        File \"/tensorflow/third_party/gpus/cuda_configure.bzl\", line 815\n                _create_cuda_repository(repository_ctx)\n        File \"/tensorflow/third_party/gpus/cuda_configure.bzl\", line 728, in _create_cuda_repository\n                _get_cuda_config(repository_ctx)\n        File \"/tensorflow/third_party/gpus/cuda_configure.bzl\", line 584, in _get_cuda_config\n                _cudnn_version(repository_ctx, cudnn_install_base..., ...)\n        File \"/tensorflow/third_party/gpus/cuda_configure.bzl\", line 295, in _cudnn_version\n                _find_cuda_define(repository_ctx, cudnn_install_base..., ...)\n        File \"/tensorflow/third_party/gpus/cuda_configure.bzl\", line 270, in _find_cuda_define\n                auto_configure_fail(\"Cannot find cudnn.h at %s\" % st...))\n        File \"/tensorflow/third_party/gpus/cuda_configure.bzl\", line 93, in auto_configure_fail\n                fail(\"\n%sAuto-Configuration Error:%s ...))\n\nAuto-Configuration Error: Cannot find cudnn.h at /usr/lib/x86_64-linux-gnu/include/cudnn.h\n.\n</code></pre>\n<p>The cudnn.h was installed in</p>\n<pre><code>/usr/include/cudnn.h\n</code></pre>\n<p>which links to</p>\n<pre><code>lrwxrwxrwx 1 root 26 Mar  1 11:58 /usr/include/cudnn.h -&gt; /etc/alternatives/libcudnn\n</code></pre>\n<p>and again</p>\n<pre><code>lrwxrwxrwx 1 root 40 Mar  1 11:58 /etc/alternatives/libcudnn -&gt; /usr/include/x86_64-linux-gnu/cudnn_v5.h\n</code></pre>\n<p>I read cuda_configure.bzl, but didn't find an easy way to let it find the cudnn headers.</p>", "body_text": "sure.\n \u276f ./configure                                                                                                                                                                                           Please specify the location of python. [Default is /usr/bin/python]:\nPlease specify optimization flags to use during compilation [Default is -march=native]:\nDo you wish to use jemalloc as the malloc implementation? (Linux only) [Y/n]\njemalloc enabled on Linux\nDo you wish to build TensorFlow with Google Cloud Platform support? [y/N]\nNo Google Cloud Platform support will be enabled for TensorFlow\nDo you wish to build TensorFlow with Hadoop File System support? [y/N]\nNo Hadoop File System support will be enabled for TensorFlow\nDo you wish to build TensorFlow with the XLA just-in-time compiler (experimental)? [y/N]\nNo XLA support will be enabled for TensorFlow\nFound possible Python library paths:\n  /usr/local/lib/python2.7/dist-packages\n  /usr/lib/python2.7/dist-packages\nPlease input the desired Python library path to use.  Default is [/usr/local/lib/python2.7/dist-packages]\n\nUsing python library path: /usr/local/lib/python2.7/dist-packages\nDo you wish to build TensorFlow with OpenCL support? [y/N]\nNo OpenCL support will be enabled for TensorFlow\nDo you wish to build TensorFlow with CUDA support? [y/N] y\nCUDA support will be enabled for TensorFlow\nPlease specify which gcc should be used by nvcc as the host compiler. [Default is /usr/bin/gcc]:\nPlease specify the CUDA SDK version you want to use, e.g. 7.0. [Leave empty to use system default]: 8.0\nPlease specify the location where CUDA 8.0 toolkit is installed. Refer to README.md for more details. [Default is /usr/local/cuda]:\nPlease specify the Cudnn version you want to use. [Leave empty to use system default]: 5\nPlease specify the location where cuDNN 5 library is installed. Refer to README.md for more details. [Default is /usr/local/cuda]: /usr/lib/x86_64-linux-gnu\nPlease specify a list of comma-separated Cuda compute capabilities you want to build with.\nYou can find the compute capability of your device at: https://developer.nvidia.com/cuda-gpus.\nPlease note that each additional compute capability significantly increases your build time and binary size.\n[Default is: \"3.5,5.2\"]: 3.0,3.5,5.2,6.0,6.1\nINFO: Reading 'startup' options from /root/.bazelrc: --batch\nINFO: Starting clean (this may take a while). Consider using --expunge_async if the clean takes more than several minutes.\nINFO: Reading 'startup' options from /root/.bazelrc: --batch\nERROR: package contains errors: tensorflow/stream_executor.\nERROR: error loading package 'tensorflow/stream_executor': Encountered error while reading extension file 'cuda/build_defs.bzl': no such package '@local_config_cuda//cuda': Traceback (most recent call last):\n        File \"/tensorflow/third_party/gpus/cuda_configure.bzl\", line 815\n                _create_cuda_repository(repository_ctx)\n        File \"/tensorflow/third_party/gpus/cuda_configure.bzl\", line 728, in _create_cuda_repository\n                _get_cuda_config(repository_ctx)\n        File \"/tensorflow/third_party/gpus/cuda_configure.bzl\", line 584, in _get_cuda_config\n                _cudnn_version(repository_ctx, cudnn_install_base..., ...)\n        File \"/tensorflow/third_party/gpus/cuda_configure.bzl\", line 295, in _cudnn_version\n                _find_cuda_define(repository_ctx, cudnn_install_base..., ...)\n        File \"/tensorflow/third_party/gpus/cuda_configure.bzl\", line 270, in _find_cuda_define\n                auto_configure_fail(\"Cannot find cudnn.h at %s\" % st...))\n        File \"/tensorflow/third_party/gpus/cuda_configure.bzl\", line 93, in auto_configure_fail\n                fail(\"\n%sAuto-Configuration Error:%s ...))\n\nAuto-Configuration Error: Cannot find cudnn.h at /usr/lib/x86_64-linux-gnu/include/cudnn.h\n.\n\nThe cudnn.h was installed in\n/usr/include/cudnn.h\n\nwhich links to\nlrwxrwxrwx 1 root 26 Mar  1 11:58 /usr/include/cudnn.h -> /etc/alternatives/libcudnn\n\nand again\nlrwxrwxrwx 1 root 40 Mar  1 11:58 /etc/alternatives/libcudnn -> /usr/include/x86_64-linux-gnu/cudnn_v5.h\n\nI read cuda_configure.bzl, but didn't find an easy way to let it find the cudnn headers.", "body": "sure.\r\n```\r\n \u276f ./configure                                                                                                                                                                                           Please specify the location of python. [Default is /usr/bin/python]:\r\nPlease specify optimization flags to use during compilation [Default is -march=native]:\r\nDo you wish to use jemalloc as the malloc implementation? (Linux only) [Y/n]\r\njemalloc enabled on Linux\r\nDo you wish to build TensorFlow with Google Cloud Platform support? [y/N]\r\nNo Google Cloud Platform support will be enabled for TensorFlow\r\nDo you wish to build TensorFlow with Hadoop File System support? [y/N]\r\nNo Hadoop File System support will be enabled for TensorFlow\r\nDo you wish to build TensorFlow with the XLA just-in-time compiler (experimental)? [y/N]\r\nNo XLA support will be enabled for TensorFlow\r\nFound possible Python library paths:\r\n  /usr/local/lib/python2.7/dist-packages\r\n  /usr/lib/python2.7/dist-packages\r\nPlease input the desired Python library path to use.  Default is [/usr/local/lib/python2.7/dist-packages]\r\n\r\nUsing python library path: /usr/local/lib/python2.7/dist-packages\r\nDo you wish to build TensorFlow with OpenCL support? [y/N]\r\nNo OpenCL support will be enabled for TensorFlow\r\nDo you wish to build TensorFlow with CUDA support? [y/N] y\r\nCUDA support will be enabled for TensorFlow\r\nPlease specify which gcc should be used by nvcc as the host compiler. [Default is /usr/bin/gcc]:\r\nPlease specify the CUDA SDK version you want to use, e.g. 7.0. [Leave empty to use system default]: 8.0\r\nPlease specify the location where CUDA 8.0 toolkit is installed. Refer to README.md for more details. [Default is /usr/local/cuda]:\r\nPlease specify the Cudnn version you want to use. [Leave empty to use system default]: 5\r\nPlease specify the location where cuDNN 5 library is installed. Refer to README.md for more details. [Default is /usr/local/cuda]: /usr/lib/x86_64-linux-gnu\r\nPlease specify a list of comma-separated Cuda compute capabilities you want to build with.\r\nYou can find the compute capability of your device at: https://developer.nvidia.com/cuda-gpus.\r\nPlease note that each additional compute capability significantly increases your build time and binary size.\r\n[Default is: \"3.5,5.2\"]: 3.0,3.5,5.2,6.0,6.1\r\nINFO: Reading 'startup' options from /root/.bazelrc: --batch\r\nINFO: Starting clean (this may take a while). Consider using --expunge_async if the clean takes more than several minutes.\r\nINFO: Reading 'startup' options from /root/.bazelrc: --batch\r\nERROR: package contains errors: tensorflow/stream_executor.\r\nERROR: error loading package 'tensorflow/stream_executor': Encountered error while reading extension file 'cuda/build_defs.bzl': no such package '@local_config_cuda//cuda': Traceback (most recent call last):\r\n        File \"/tensorflow/third_party/gpus/cuda_configure.bzl\", line 815\r\n                _create_cuda_repository(repository_ctx)\r\n        File \"/tensorflow/third_party/gpus/cuda_configure.bzl\", line 728, in _create_cuda_repository\r\n                _get_cuda_config(repository_ctx)\r\n        File \"/tensorflow/third_party/gpus/cuda_configure.bzl\", line 584, in _get_cuda_config\r\n                _cudnn_version(repository_ctx, cudnn_install_base..., ...)\r\n        File \"/tensorflow/third_party/gpus/cuda_configure.bzl\", line 295, in _cudnn_version\r\n                _find_cuda_define(repository_ctx, cudnn_install_base..., ...)\r\n        File \"/tensorflow/third_party/gpus/cuda_configure.bzl\", line 270, in _find_cuda_define\r\n                auto_configure_fail(\"Cannot find cudnn.h at %s\" % st...))\r\n        File \"/tensorflow/third_party/gpus/cuda_configure.bzl\", line 93, in auto_configure_fail\r\n                fail(\"\r\n%sAuto-Configuration Error:%s ...))\r\n\r\nAuto-Configuration Error: Cannot find cudnn.h at /usr/lib/x86_64-linux-gnu/include/cudnn.h\r\n.\r\n```\r\n\r\nThe cudnn.h was installed in\r\n```\r\n/usr/include/cudnn.h\r\n```\r\nwhich links to \r\n```\r\nlrwxrwxrwx 1 root 26 Mar  1 11:58 /usr/include/cudnn.h -> /etc/alternatives/libcudnn\r\n```\r\nand again\r\n```\r\nlrwxrwxrwx 1 root 40 Mar  1 11:58 /etc/alternatives/libcudnn -> /usr/include/x86_64-linux-gnu/cudnn_v5.h\r\n```\r\nI read cuda_configure.bzl, but didn't find an easy way to let it find the cudnn headers."}