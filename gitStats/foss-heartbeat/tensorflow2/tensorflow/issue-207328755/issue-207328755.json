{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7473", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7473/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7473/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7473/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/7473", "id": 207328755, "node_id": "MDU6SXNzdWUyMDczMjg3NTU=", "number": 7473, "title": "Jupyter notebook: Kernel dies when running timeline trace [Nvidia-docker]", "user": {"login": "neotheicebird", "id": 4669552, "node_id": "MDQ6VXNlcjQ2Njk1NTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/4669552?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neotheicebird", "html_url": "https://github.com/neotheicebird", "followers_url": "https://api.github.com/users/neotheicebird/followers", "following_url": "https://api.github.com/users/neotheicebird/following{/other_user}", "gists_url": "https://api.github.com/users/neotheicebird/gists{/gist_id}", "starred_url": "https://api.github.com/users/neotheicebird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neotheicebird/subscriptions", "organizations_url": "https://api.github.com/users/neotheicebird/orgs", "repos_url": "https://api.github.com/users/neotheicebird/repos", "events_url": "https://api.github.com/users/neotheicebird/events{/privacy}", "received_events_url": "https://api.github.com/users/neotheicebird/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}, {"id": 473184161, "node_id": "MDU6TGFiZWw0NzMxODQxNjE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:support", "name": "type:support", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-02-13T20:22:39Z", "updated_at": "2017-03-03T23:42:07Z", "closed_at": "2017-03-03T23:42:07Z", "author_association": "NONE", "body_html": "<p>I am trying to use timeline to profile GPU memory usage on an EC2 instance using Tensorflow-Gpu Nvidia-Docker. When I add a few lines to my notebook which runs a convNet, it keeps restarting with a \"Kernel died\" message.</p>\n<p>Some of the changes I made:</p>\n<pre><code>from tensorflow.python.client import timeline\n</code></pre>\n<pre><code>run_metadata = tf.RunMetadata()\n\nwith tf.Session(graph=graph, config=tf.ConfigProto(log_device_placement=True)) as session:\n    tf.global_variables_initializer().run()\n    for step in range(num_steps):\n        batch_data, batch_labels = generate_batch(\n          batch_size, num_skips, skip_window)\n        feed_dict = {train_dataset : batch_data, train_labels : batch_labels}\n        if step == 1000:\n            _, l = session.run([optimizer, loss], feed_dict=feed_dict, options=tf.RunOptions(trace_level=tf.RunOptions.FULL_TRACE), run_metadata=run_metadata)\n            trace = timeline.Timeline(step_stats=run_metadata.step_stats)\n            with open('timeline.ctf.json', 'w') as trace_file:\n                trace_file.write(trace.generate_chrome_trace_format())\n        else:\n            _, l = session.run([optimizer, loss], feed_dict=feed_dict)\n        ...\n</code></pre>", "body_text": "I am trying to use timeline to profile GPU memory usage on an EC2 instance using Tensorflow-Gpu Nvidia-Docker. When I add a few lines to my notebook which runs a convNet, it keeps restarting with a \"Kernel died\" message.\nSome of the changes I made:\nfrom tensorflow.python.client import timeline\n\nrun_metadata = tf.RunMetadata()\n\nwith tf.Session(graph=graph, config=tf.ConfigProto(log_device_placement=True)) as session:\n    tf.global_variables_initializer().run()\n    for step in range(num_steps):\n        batch_data, batch_labels = generate_batch(\n          batch_size, num_skips, skip_window)\n        feed_dict = {train_dataset : batch_data, train_labels : batch_labels}\n        if step == 1000:\n            _, l = session.run([optimizer, loss], feed_dict=feed_dict, options=tf.RunOptions(trace_level=tf.RunOptions.FULL_TRACE), run_metadata=run_metadata)\n            trace = timeline.Timeline(step_stats=run_metadata.step_stats)\n            with open('timeline.ctf.json', 'w') as trace_file:\n                trace_file.write(trace.generate_chrome_trace_format())\n        else:\n            _, l = session.run([optimizer, loss], feed_dict=feed_dict)\n        ...", "body": "I am trying to use timeline to profile GPU memory usage on an EC2 instance using Tensorflow-Gpu Nvidia-Docker. When I add a few lines to my notebook which runs a convNet, it keeps restarting with a \"Kernel died\" message.\r\n\r\nSome of the changes I made:\r\n```\r\nfrom tensorflow.python.client import timeline\r\n```\r\n\r\n```\r\nrun_metadata = tf.RunMetadata()\r\n\r\nwith tf.Session(graph=graph, config=tf.ConfigProto(log_device_placement=True)) as session:\r\n    tf.global_variables_initializer().run()\r\n    for step in range(num_steps):\r\n        batch_data, batch_labels = generate_batch(\r\n          batch_size, num_skips, skip_window)\r\n        feed_dict = {train_dataset : batch_data, train_labels : batch_labels}\r\n        if step == 1000:\r\n            _, l = session.run([optimizer, loss], feed_dict=feed_dict, options=tf.RunOptions(trace_level=tf.RunOptions.FULL_TRACE), run_metadata=run_metadata)\r\n            trace = timeline.Timeline(step_stats=run_metadata.step_stats)\r\n            with open('timeline.ctf.json', 'w') as trace_file:\r\n                trace_file.write(trace.generate_chrome_trace_format())\r\n        else:\r\n            _, l = session.run([optimizer, loss], feed_dict=feed_dict)\r\n        ...\r\n```"}