{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22979", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22979/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22979/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22979/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/22979", "id": 370026355, "node_id": "MDU6SXNzdWUzNzAwMjYzNTU=", "number": 22979, "title": "\"Unknwon layer\" error while using custom Keras layer with tf.contrib.distribute.MirroredStrategy", "user": {"login": "kami93", "id": 20102, "node_id": "MDQ6VXNlcjIwMTAy", "avatar_url": "https://avatars0.githubusercontent.com/u/20102?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kami93", "html_url": "https://github.com/kami93", "followers_url": "https://api.github.com/users/kami93/followers", "following_url": "https://api.github.com/users/kami93/following{/other_user}", "gists_url": "https://api.github.com/users/kami93/gists{/gist_id}", "starred_url": "https://api.github.com/users/kami93/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kami93/subscriptions", "organizations_url": "https://api.github.com/users/kami93/orgs", "repos_url": "https://api.github.com/users/kami93/repos", "events_url": "https://api.github.com/users/kami93/events{/privacy}", "received_events_url": "https://api.github.com/users/kami93/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ymodak", "id": 42785357, "node_id": "MDQ6VXNlcjQyNzg1MzU3", "avatar_url": "https://avatars1.githubusercontent.com/u/42785357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ymodak", "html_url": "https://github.com/ymodak", "followers_url": "https://api.github.com/users/ymodak/followers", "following_url": "https://api.github.com/users/ymodak/following{/other_user}", "gists_url": "https://api.github.com/users/ymodak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ymodak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ymodak/subscriptions", "organizations_url": "https://api.github.com/users/ymodak/orgs", "repos_url": "https://api.github.com/users/ymodak/repos", "events_url": "https://api.github.com/users/ymodak/events{/privacy}", "received_events_url": "https://api.github.com/users/ymodak/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ymodak", "id": 42785357, "node_id": "MDQ6VXNlcjQyNzg1MzU3", "avatar_url": "https://avatars1.githubusercontent.com/u/42785357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ymodak", "html_url": "https://github.com/ymodak", "followers_url": "https://api.github.com/users/ymodak/followers", "following_url": "https://api.github.com/users/ymodak/following{/other_user}", "gists_url": "https://api.github.com/users/ymodak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ymodak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ymodak/subscriptions", "organizations_url": "https://api.github.com/users/ymodak/orgs", "repos_url": "https://api.github.com/users/ymodak/repos", "events_url": "https://api.github.com/users/ymodak/events{/privacy}", "received_events_url": "https://api.github.com/users/ymodak/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-10-15T07:07:56Z", "updated_at": "2018-10-16T21:20:14Z", "closed_at": "2018-10-16T21:19:41Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes. See STLSTM.py in <a href=\"https://gist.github.com/kami93/c49f0cdd19b318f3e2699df13971f7b1\">https://gist.github.com/kami93/c49f0cdd19b318f3e2699df13971f7b1</a></li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu 18.04.1</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>:<br>\nN/A</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: Source</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.11.0</li>\n<li><strong>Python version</strong>: Anaconda Python 3.6.6</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.17.2</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: 7.3.0</li>\n<li><strong>CUDA/cuDNN version</strong>:9.2</li>\n<li><strong>GPU model and memory</strong>:Gefroce 1080Ti * 4 (4-way GPU)</li>\n<li><strong>Exact command to reproduce</strong>: Run predRNN.py in <a href=\"https://gist.github.com/kami93/c49f0cdd19b318f3e2699df13971f7b1\">https://gist.github.com/kami93/c49f0cdd19b318f3e2699df13971f7b1</a></li>\n</ul>\n<h3>Describe the problem</h3>\n<p>Hi. I am getting an \"Unknown layer\" error while running a custom keras layer with tf.contrib.distribute.MirroredStrategy turned on. The trackback is in the Source code / logs section.</p>\n<p>The error is not raised when I omit the \"distribute\" argument from model compile method call (line 75 of the predRNN.py) so that the training runs without distribution strategy and only a single GPU works.</p>\n<p>Breif explanation on predRNN.py:<br>\npredRNN.py builds input pipeline, makes, compiles and fits the Keras sequential model which includes the STLSTM2D custom layer.<br>\nThe training data can be downloaded from <a href=\"http://www.cs.toronto.edu/~nitish/unsupervised_video/\" rel=\"nofollow\">http://www.cs.toronto.edu/~nitish/unsupervised_video/</a> (Moving MNIST dataset)</p>\n<p>Breif explanation on STLSTM.py:<br>\nSTLSTM is a sophisticated convolutional RNN model suggested from PredRNN (Wang et al. 2017, <a href=\"https://papers.nips.cc/paper/6689-predrnn-recurrent-neural-networks-for-predictive-learning-using-spatiotemporal-lstms\" rel=\"nofollow\">https://papers.nips.cc/paper/6689-predrnn-recurrent-neural-networks-for-predictive-learning-using-spatiotemporal-lstms</a>).</p>\n<p>STLSTM.py contains three classes - STLSTM2D, StackedSTLSTMCells, STLSTMCell which inherit from the Keras RNN class(in tensorflow/python/keras/layers/recurrent.py), Keras Layer class, and Keras Layer class, repectively.</p>\n<ul>\n<li>\n<p>STLSTM2D  is based on ConvRNN2D class in tensorflow/python/keras/layers/convolutional_recurrent.py. It forms a Keras RNN layer that performs recurrent functions with the STLSTM Cell.</p>\n</li>\n<li>\n<p>StackedSTLSTMCells is a wrapper to make a list of multiple STLSTMCells look like a single cell.</p>\n</li>\n<li>\n<p>STLSTMCell is based on ConvLSTM2DCell in tensorflow/python/keras/layers/convolutional_recurrent.py. The modification is performed such that STLSTM has an additional hidden state (The M-state) and different operation procedure compared to the ConvLSTM2D.</p>\n</li>\n</ul>\n<h3>Source code / logs</h3>\n<p>Source code : <a href=\"https://gist.github.com/kami93/c49f0cdd19b318f3e2699df13971f7b1\">https://gist.github.com/kami93/c49f0cdd19b318f3e2699df13971f7b1</a><br>\nerror traceback : <a href=\"https://pastebin.com/6dPKZrzX\" rel=\"nofollow\">https://pastebin.com/6dPKZrzX</a></p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes. See STLSTM.py in https://gist.github.com/kami93/c49f0cdd19b318f3e2699df13971f7b1\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 18.04.1\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:\nN/A\nTensorFlow installed from (source or binary): Source\nTensorFlow version (use command below): 1.11.0\nPython version: Anaconda Python 3.6.6\nBazel version (if compiling from source): 0.17.2\nGCC/Compiler version (if compiling from source): 7.3.0\nCUDA/cuDNN version:9.2\nGPU model and memory:Gefroce 1080Ti * 4 (4-way GPU)\nExact command to reproduce: Run predRNN.py in https://gist.github.com/kami93/c49f0cdd19b318f3e2699df13971f7b1\n\nDescribe the problem\nHi. I am getting an \"Unknown layer\" error while running a custom keras layer with tf.contrib.distribute.MirroredStrategy turned on. The trackback is in the Source code / logs section.\nThe error is not raised when I omit the \"distribute\" argument from model compile method call (line 75 of the predRNN.py) so that the training runs without distribution strategy and only a single GPU works.\nBreif explanation on predRNN.py:\npredRNN.py builds input pipeline, makes, compiles and fits the Keras sequential model which includes the STLSTM2D custom layer.\nThe training data can be downloaded from http://www.cs.toronto.edu/~nitish/unsupervised_video/ (Moving MNIST dataset)\nBreif explanation on STLSTM.py:\nSTLSTM is a sophisticated convolutional RNN model suggested from PredRNN (Wang et al. 2017, https://papers.nips.cc/paper/6689-predrnn-recurrent-neural-networks-for-predictive-learning-using-spatiotemporal-lstms).\nSTLSTM.py contains three classes - STLSTM2D, StackedSTLSTMCells, STLSTMCell which inherit from the Keras RNN class(in tensorflow/python/keras/layers/recurrent.py), Keras Layer class, and Keras Layer class, repectively.\n\n\nSTLSTM2D  is based on ConvRNN2D class in tensorflow/python/keras/layers/convolutional_recurrent.py. It forms a Keras RNN layer that performs recurrent functions with the STLSTM Cell.\n\n\nStackedSTLSTMCells is a wrapper to make a list of multiple STLSTMCells look like a single cell.\n\n\nSTLSTMCell is based on ConvLSTM2DCell in tensorflow/python/keras/layers/convolutional_recurrent.py. The modification is performed such that STLSTM has an additional hidden state (The M-state) and different operation procedure compared to the ConvLSTM2D.\n\n\nSource code / logs\nSource code : https://gist.github.com/kami93/c49f0cdd19b318f3e2699df13971f7b1\nerror traceback : https://pastebin.com/6dPKZrzX", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes. See STLSTM.py in https://gist.github.com/kami93/c49f0cdd19b318f3e2699df13971f7b1\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 18.04.1\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**:\r\n N/A\r\n- **TensorFlow installed from (source or binary)**: Source\r\n- **TensorFlow version (use command below)**: 1.11.0\r\n- **Python version**: Anaconda Python 3.6.6\r\n- **Bazel version (if compiling from source)**: 0.17.2\r\n- **GCC/Compiler version (if compiling from source)**: 7.3.0\r\n- **CUDA/cuDNN version**:9.2\r\n- **GPU model and memory**:Gefroce 1080Ti * 4 (4-way GPU)\r\n- **Exact command to reproduce**: Run predRNN.py in https://gist.github.com/kami93/c49f0cdd19b318f3e2699df13971f7b1\r\n\r\n### Describe the problem\r\nHi. I am getting an \"Unknown layer\" error while running a custom keras layer with tf.contrib.distribute.MirroredStrategy turned on. The trackback is in the Source code / logs section.\r\n\r\nThe error is not raised when I omit the \"distribute\" argument from model compile method call (line 75 of the predRNN.py) so that the training runs without distribution strategy and only a single GPU works.\r\n\r\nBreif explanation on predRNN.py:\r\npredRNN.py builds input pipeline, makes, compiles and fits the Keras sequential model which includes the STLSTM2D custom layer.\r\nThe training data can be downloaded from http://www.cs.toronto.edu/~nitish/unsupervised_video/ (Moving MNIST dataset)\r\n\r\nBreif explanation on STLSTM.py:\r\nSTLSTM is a sophisticated convolutional RNN model suggested from PredRNN (Wang et al. 2017, https://papers.nips.cc/paper/6689-predrnn-recurrent-neural-networks-for-predictive-learning-using-spatiotemporal-lstms).\r\n\r\nSTLSTM.py contains three classes - STLSTM2D, StackedSTLSTMCells, STLSTMCell which inherit from the Keras RNN class(in tensorflow/python/keras/layers/recurrent.py), Keras Layer class, and Keras Layer class, repectively. \r\n\r\n- STLSTM2D  is based on ConvRNN2D class in tensorflow/python/keras/layers/convolutional_recurrent.py. It forms a Keras RNN layer that performs recurrent functions with the STLSTM Cell.\r\n\r\n- StackedSTLSTMCells is a wrapper to make a list of multiple STLSTMCells look like a single cell.\r\n\r\n- STLSTMCell is based on ConvLSTM2DCell in tensorflow/python/keras/layers/convolutional_recurrent.py. The modification is performed such that STLSTM has an additional hidden state (The M-state) and different operation procedure compared to the ConvLSTM2D.\r\n\r\n### Source code / logs\r\nSource code : https://gist.github.com/kami93/c49f0cdd19b318f3e2699df13971f7b1\r\nerror traceback : https://pastebin.com/6dPKZrzX"}