{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/427640978", "html_url": "https://github.com/tensorflow/tensorflow/issues/4735#issuecomment-427640978", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4735", "id": 427640978, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzY0MDk3OA==", "user": {"login": "deepakmeena635", "id": 37202245, "node_id": "MDQ6VXNlcjM3MjAyMjQ1", "avatar_url": "https://avatars0.githubusercontent.com/u/37202245?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deepakmeena635", "html_url": "https://github.com/deepakmeena635", "followers_url": "https://api.github.com/users/deepakmeena635/followers", "following_url": "https://api.github.com/users/deepakmeena635/following{/other_user}", "gists_url": "https://api.github.com/users/deepakmeena635/gists{/gist_id}", "starred_url": "https://api.github.com/users/deepakmeena635/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deepakmeena635/subscriptions", "organizations_url": "https://api.github.com/users/deepakmeena635/orgs", "repos_url": "https://api.github.com/users/deepakmeena635/repos", "events_url": "https://api.github.com/users/deepakmeena635/events{/privacy}", "received_events_url": "https://api.github.com/users/deepakmeena635/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-07T10:05:41Z", "updated_at": "2018-10-07T10:05:41Z", "author_association": "NONE", "body_html": "<p>Notebook to reGenerate the: <a href=\"https://colab.research.google.com/drive/1Y93EdHeSIT5ik1PnVeJ1CfU7ClapiaOQ\" rel=\"nofollow\">https://colab.research.google.com/drive/1Y93EdHeSIT5ik1PnVeJ1CfU7ClapiaOQ</a></p>\n<p>UPDATE  :</p>\n<h1>looks like the error is occuring at global_variable_initialisation<br>\nheres the full log</h1>\n<p>ResourceExhaustedError                    Traceback (most recent call last)<br>\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/client/session.py in _do_call(self, fn, *args)<br>\n1291     try:<br>\n-&gt; 1292       return fn(*args)<br>\n1293     except errors.OpError as e:</p>\n<p>/usr/local/lib/python3.6/dist-packages/tensorflow/python/client/session.py in _run_fn(feed_dict, fetch_list, target_list, options, run_metadata)<br>\n1276       return self._call_tf_sessionrun(<br>\n-&gt; 1277           options, feed_dict, fetch_list, target_list, run_metadata)<br>\n1278</p>\n<p>/usr/local/lib/python3.6/dist-packages/tensorflow/python/client/session.py in _call_tf_sessionrun(self, options, feed_dict, fetch_list, target_list, run_metadata)<br>\n1366         self._session, options, feed_dict, fetch_list, target_list,<br>\n-&gt; 1367         run_metadata)<br>\n1368</p>\n<p>ResourceExhaustedError: OOM when allocating tensor with shape[12836,50320] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc<br>\n[[{{node rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/RandomUniform}} = RandomUniform<a href=\"rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/shape\">T=DT_INT32, _class=[\"loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Assign\"], dtype=DT_FLOAT, seed=0, seed2=0, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"</a>]]<br>\nHint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.</p>\n<p>During handling of the above exception, another exception occurred:</p>\n<p>ResourceExhaustedError                    Traceback (most recent call last)<br>\n in ()<br>\n----&gt; 1 train( batch_size )</p>\n<p> in train(batch_size)<br>\n11     with tf.Session(config=config) as sess:<br>\n12<br>\n---&gt; 13         sess.run(tf.global_variables_initializer())<br>\n14<br>\n15</p>\n<p>/usr/local/lib/python3.6/dist-packages/tensorflow/python/client/session.py in run(self, fetches, feed_dict, options, run_metadata)<br>\n885     try:<br>\n886       result = self._run(None, fetches, feed_dict, options_ptr,<br>\n--&gt; 887                          run_metadata_ptr)<br>\n888       if run_metadata:<br>\n889         proto_data = tf_session.TF_GetBuffer(run_metadata_ptr)</p>\n<p>/usr/local/lib/python3.6/dist-packages/tensorflow/python/client/session.py in _run(self, handle, fetches, feed_dict, options, run_metadata)<br>\n1108     if final_fetches or final_targets or (handle and feed_dict_tensor):<br>\n1109       results = self._do_run(handle, final_targets, final_fetches,<br>\n-&gt; 1110                              feed_dict_tensor, options, run_metadata)<br>\n1111     else:<br>\n1112       results = []</p>\n<p>/usr/local/lib/python3.6/dist-packages/tensorflow/python/client/session.py in _do_run(self, handle, target_list, fetch_list, feed_dict, options, run_metadata)<br>\n1284     if handle is None:<br>\n1285       return self._do_call(_run_fn, feeds, fetches, targets, options,<br>\n-&gt; 1286                            run_metadata)<br>\n1287     else:<br>\n1288       return self._do_call(_prun_fn, handle, feeds, fetches)</p>\n<p>/usr/local/lib/python3.6/dist-packages/tensorflow/python/client/session.py in _do_call(self, fn, *args)<br>\n1306           self._config.experimental.client_handles_error_formatting):<br>\n1307         message = error_interpolation.interpolate(message, self._graph)<br>\n-&gt; 1308       raise type(e)(node_def, op, message)<br>\n1309<br>\n1310   def _extend_graph(self):</p>\n<p>ResourceExhaustedError: OOM when allocating tensor with shape[12836,50320] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc<br>\n[[{{node rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/RandomUniform}} = RandomUniform<a href=\"rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/shape\">T=DT_INT32, _class=[\"loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Assign\"], dtype=DT_FLOAT, seed=0, seed2=0, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"</a>]]<br>\nHint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.</p>\n<p>Caused by op 'rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/RandomUniform', defined at:<br>\nFile \"/usr/lib/python3.6/runpy.py\", line 193, in _run_module_as_main<br>\n\"<strong>main</strong>\", mod_spec)<br>\nFile \"/usr/lib/python3.6/runpy.py\", line 85, in _run_code<br>\nexec(code, run_globals)<br>\nFile \"/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py\", line 16, in <br>\napp.launch_new_instance()<br>\nFile \"/usr/local/lib/python3.6/dist-packages/traitlets/config/application.py\", line 658, in launch_instance<br>\napp.start()<br>\nFile \"/usr/local/lib/python3.6/dist-packages/ipykernel/kernelapp.py\", line 477, in start<br>\nioloop.IOLoop.instance().start()<br>\nFile \"/usr/local/lib/python3.6/dist-packages/zmq/eventloop/ioloop.py\", line 177, in start<br>\nsuper(ZMQIOLoop, self).start()<br>\nFile \"/usr/local/lib/python3.6/dist-packages/tornado/ioloop.py\", line 888, in start<br>\nhandler_func(fd_obj, events)<br>\nFile \"/usr/local/lib/python3.6/dist-packages/tornado/stack_context.py\", line 277, in null_wrapper<br>\nreturn fn(*args, **kwargs)<br>\nFile \"/usr/local/lib/python3.6/dist-packages/zmq/eventloop/zmqstream.py\", line 440, in _handle_events<br>\nself._handle_recv()<br>\nFile \"/usr/local/lib/python3.6/dist-packages/zmq/eventloop/zmqstream.py\", line 472, in _handle_recv<br>\nself._run_callback(callback, msg)<br>\nFile \"/usr/local/lib/python3.6/dist-packages/zmq/eventloop/zmqstream.py\", line 414, in _run_callback<br>\ncallback(*args, **kwargs)<br>\nFile \"/usr/local/lib/python3.6/dist-packages/tornado/stack_context.py\", line 277, in null_wrapper<br>\nreturn fn(*args, **kwargs)<br>\nFile \"/usr/local/lib/python3.6/dist-packages/ipykernel/kernelbase.py\", line 283, in dispatcher<br>\nreturn self.dispatch_shell(stream, msg)<br>\nFile \"/usr/local/lib/python3.6/dist-packages/ipykernel/kernelbase.py\", line 235, in dispatch_shell<br>\nhandler(stream, idents, msg)<br>\nFile \"/usr/local/lib/python3.6/dist-packages/ipykernel/kernelbase.py\", line 399, in execute_request<br>\nuser_expressions, allow_stdin)<br>\nFile \"/usr/local/lib/python3.6/dist-packages/ipykernel/ipkernel.py\", line 196, in do_execute<br>\nres = shell.run_cell(code, store_history=store_history, silent=silent)<br>\nFile \"/usr/local/lib/python3.6/dist-packages/ipykernel/zmqshell.py\", line 533, in run_cell<br>\nreturn super(ZMQInteractiveShell, self).run_cell(*args, **kwargs)<br>\nFile \"/usr/local/lib/python3.6/dist-packages/IPython/core/interactiveshell.py\", line 2718, in run_cell<br>\ninteractivity=interactivity, compiler=compiler, result=result)<br>\nFile \"/usr/local/lib/python3.6/dist-packages/IPython/core/interactiveshell.py\", line 2822, in run_ast_nodes<br>\nif self.run_code(code, result):<br>\nFile \"/usr/local/lib/python3.6/dist-packages/IPython/core/interactiveshell.py\", line 2882, in run_code<br>\nexec(code_obj, self.user_global_ns, self.user_ns)<br>\nFile \"\", line 2, in <br>\nres1  = run_bitch( plc_x, plc_seq_len, batch_size )<br>\nFile \"\", line 11, in run_bitch<br>\ntime_major=False )<br>\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/rnn.py\", line 664, in dynamic_rnn<br>\ndtype=dtype)<br>\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/rnn.py\", line 868, in _dynamic_rnn_loop<br>\nswap_memory=swap_memory)<br>\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/control_flow_ops.py\", line 3274, in while_loop<br>\nreturn_same_structure)<br>\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/control_flow_ops.py\", line 2994, in BuildLoop<br>\npred, body, original_loop_vars, loop_vars, shape_invariants)<br>\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/control_flow_ops.py\", line 2929, in _BuildLoop<br>\nbody_result = body(*packed_vars_for_body)<br>\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/control_flow_ops.py\", line 3243, in <br>\nbody = lambda i, lv: (i + 1, orig_body(*lv))<br>\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/rnn.py\", line 834, in _time_step<br>\nskip_conditionals=True)<br>\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/rnn.py\", line 275, in _rnn_step<br>\nnew_output, new_state = call_cell()<br>\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/rnn.py\", line 822, in <br>\ncall_cell = lambda: cell(input_t, state)<br>\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/rnn_cell_impl.py\", line 233, in <strong>call</strong><br>\nreturn super(RNNCell, self).<strong>call</strong>(inputs, state)<br>\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/layers/base.py\", line 364, in <strong>call</strong><br>\noutputs = super(Layer, self).<strong>call</strong>(inputs, *args, **kwargs)<br>\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/base_layer.py\", line 769, in <strong>call</strong><br>\noutputs = self.call(inputs, *args, **kwargs)<br>\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/rnn_cell_impl.py\", line 1484, in call<br>\ncur_inp, new_state = cell(cur_inp, cur_state)<br>\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/rnn_cell_impl.py\", line 370, in <strong>call</strong><br>\n*args, **kwargs)<br>\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/layers/base.py\", line 364, in <strong>call</strong><br>\noutputs = super(Layer, self).<strong>call</strong>(inputs, *args, **kwargs)<br>\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/base_layer.py\", line 759, in <strong>call</strong><br>\nself.build(input_shapes)<br>\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/utils/tf_utils.py\", line 149, in wrapper<br>\noutput_shape = fn(instance, input_shape)<br>\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/rnn_cell_impl.py\", line 923, in build<br>\npartitioner=maybe_partitioner)<br>\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/base_layer.py\", line 472, in add_variable<br>\nreturn self.add_weight(*args, **kwargs)<br>\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/layers/base.py\", line 278, in add_weight<br>\ngetter=vs.get_variable)<br>\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/base_layer.py\", line 586, in add_weight<br>\naggregation=aggregation)<br>\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/training/checkpointable/base.py\", line 591, in _add_variable_with_custom_getter<br>\n**kwargs_for_getter)<br>\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/variable_scope.py\", line 1484, in get_variable<br>\naggregation=aggregation)<br>\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/variable_scope.py\", line 1234, in get_variable<br>\naggregation=aggregation)<br>\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/variable_scope.py\", line 521, in get_variable<br>\nreturn custom_getter(**custom_getter_kwargs)<br>\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/rnn_cell_impl.py\", line 236, in _rnn_get_variable<br>\nvariable = getter(*args, **kwargs)<br>\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/variable_scope.py\", line 492, in _true_getter<br>\naggregation=aggregation)<br>\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/variable_scope.py\", line 920, in _get_single_variable<br>\naggregation=aggregation)<br>\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/variables.py\", line 145, in <strong>call</strong><br>\nreturn cls._variable_call(*args, **kwargs)<br>\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/variables.py\", line 141, in _variable_call<br>\naggregation=aggregation)<br>\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/variables.py\", line 120, in <br>\nprevious_getter = lambda **kwargs: default_variable_creator(None, **kwargs)<br>\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/variable_scope.py\", line 2441, in default_variable_creator<br>\nexpected_shape=expected_shape, import_scope=import_scope)<br>\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/variables.py\", line 147, in <strong>call</strong><br>\nreturn super(VariableMetaclass, cls).<strong>call</strong>(*args, **kwargs)<br>\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/variables.py\", line 1104, in <strong>init</strong><br>\nconstraint=constraint)<br>\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/variables.py\", line 1212, in _init_from_args<br>\ninitial_value(), name=\"initial_value\", dtype=dtype)<br>\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/variable_scope.py\", line 894, in <br>\nshape.as_list(), dtype=dtype, partition_info=partition_info)<br>\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/init_ops.py\", line 483, in <strong>call</strong><br>\nshape, -limit, limit, dtype, seed=self.seed)<br>\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/random_ops.py\", line 242, in random_uniform<br>\nrnd = gen_random_ops.random_uniform(shape, dtype, seed=seed1, seed2=seed2)<br>\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/gen_random_ops.py\", line 733, in random_uniform<br>\nname=name)<br>\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/op_def_library.py\", line 787, in _apply_op_helper<br>\nop_def=op_def)<br>\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/util/deprecation.py\", line 488, in new_func<br>\nreturn func(*args, **kwargs)<br>\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py\", line 3272, in create_op<br>\nop_def=op_def)<br>\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py\", line 1768, in <strong>init</strong><br>\nself._traceback = tf_stack.extract_stack()</p>\n<p>ResourceExhaustedError (see above for traceback): OOM when allocating tensor with shape[12836,50320] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc<br>\n[[{{node rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/RandomUniform}} = RandomUniform<a href=\"rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/shape\">T=DT_INT32, _class=[\"loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Assign\"], dtype=DT_FLOAT, seed=0, seed2=0, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"</a>]]<br>\nHint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.</p>\n<p>==============================================================</p>", "body_text": "Notebook to reGenerate the: https://colab.research.google.com/drive/1Y93EdHeSIT5ik1PnVeJ1CfU7ClapiaOQ\nUPDATE  :\nlooks like the error is occuring at global_variable_initialisation\nheres the full log\nResourceExhaustedError                    Traceback (most recent call last)\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/client/session.py in _do_call(self, fn, *args)\n1291     try:\n-> 1292       return fn(*args)\n1293     except errors.OpError as e:\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/client/session.py in _run_fn(feed_dict, fetch_list, target_list, options, run_metadata)\n1276       return self._call_tf_sessionrun(\n-> 1277           options, feed_dict, fetch_list, target_list, run_metadata)\n1278\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/client/session.py in _call_tf_sessionrun(self, options, feed_dict, fetch_list, target_list, run_metadata)\n1366         self._session, options, feed_dict, fetch_list, target_list,\n-> 1367         run_metadata)\n1368\nResourceExhaustedError: OOM when allocating tensor with shape[12836,50320] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc\n[[{{node rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/RandomUniform}} = RandomUniformT=DT_INT32, _class=[\"loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Assign\"], dtype=DT_FLOAT, seed=0, seed2=0, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"]]\nHint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.\nDuring handling of the above exception, another exception occurred:\nResourceExhaustedError                    Traceback (most recent call last)\n in ()\n----> 1 train( batch_size )\n in train(batch_size)\n11     with tf.Session(config=config) as sess:\n12\n---> 13         sess.run(tf.global_variables_initializer())\n14\n15\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/client/session.py in run(self, fetches, feed_dict, options, run_metadata)\n885     try:\n886       result = self._run(None, fetches, feed_dict, options_ptr,\n--> 887                          run_metadata_ptr)\n888       if run_metadata:\n889         proto_data = tf_session.TF_GetBuffer(run_metadata_ptr)\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/client/session.py in _run(self, handle, fetches, feed_dict, options, run_metadata)\n1108     if final_fetches or final_targets or (handle and feed_dict_tensor):\n1109       results = self._do_run(handle, final_targets, final_fetches,\n-> 1110                              feed_dict_tensor, options, run_metadata)\n1111     else:\n1112       results = []\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/client/session.py in _do_run(self, handle, target_list, fetch_list, feed_dict, options, run_metadata)\n1284     if handle is None:\n1285       return self._do_call(_run_fn, feeds, fetches, targets, options,\n-> 1286                            run_metadata)\n1287     else:\n1288       return self._do_call(_prun_fn, handle, feeds, fetches)\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/client/session.py in _do_call(self, fn, *args)\n1306           self._config.experimental.client_handles_error_formatting):\n1307         message = error_interpolation.interpolate(message, self._graph)\n-> 1308       raise type(e)(node_def, op, message)\n1309\n1310   def _extend_graph(self):\nResourceExhaustedError: OOM when allocating tensor with shape[12836,50320] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc\n[[{{node rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/RandomUniform}} = RandomUniformT=DT_INT32, _class=[\"loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Assign\"], dtype=DT_FLOAT, seed=0, seed2=0, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"]]\nHint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.\nCaused by op 'rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/RandomUniform', defined at:\nFile \"/usr/lib/python3.6/runpy.py\", line 193, in _run_module_as_main\n\"main\", mod_spec)\nFile \"/usr/lib/python3.6/runpy.py\", line 85, in _run_code\nexec(code, run_globals)\nFile \"/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py\", line 16, in \napp.launch_new_instance()\nFile \"/usr/local/lib/python3.6/dist-packages/traitlets/config/application.py\", line 658, in launch_instance\napp.start()\nFile \"/usr/local/lib/python3.6/dist-packages/ipykernel/kernelapp.py\", line 477, in start\nioloop.IOLoop.instance().start()\nFile \"/usr/local/lib/python3.6/dist-packages/zmq/eventloop/ioloop.py\", line 177, in start\nsuper(ZMQIOLoop, self).start()\nFile \"/usr/local/lib/python3.6/dist-packages/tornado/ioloop.py\", line 888, in start\nhandler_func(fd_obj, events)\nFile \"/usr/local/lib/python3.6/dist-packages/tornado/stack_context.py\", line 277, in null_wrapper\nreturn fn(*args, **kwargs)\nFile \"/usr/local/lib/python3.6/dist-packages/zmq/eventloop/zmqstream.py\", line 440, in _handle_events\nself._handle_recv()\nFile \"/usr/local/lib/python3.6/dist-packages/zmq/eventloop/zmqstream.py\", line 472, in _handle_recv\nself._run_callback(callback, msg)\nFile \"/usr/local/lib/python3.6/dist-packages/zmq/eventloop/zmqstream.py\", line 414, in _run_callback\ncallback(*args, **kwargs)\nFile \"/usr/local/lib/python3.6/dist-packages/tornado/stack_context.py\", line 277, in null_wrapper\nreturn fn(*args, **kwargs)\nFile \"/usr/local/lib/python3.6/dist-packages/ipykernel/kernelbase.py\", line 283, in dispatcher\nreturn self.dispatch_shell(stream, msg)\nFile \"/usr/local/lib/python3.6/dist-packages/ipykernel/kernelbase.py\", line 235, in dispatch_shell\nhandler(stream, idents, msg)\nFile \"/usr/local/lib/python3.6/dist-packages/ipykernel/kernelbase.py\", line 399, in execute_request\nuser_expressions, allow_stdin)\nFile \"/usr/local/lib/python3.6/dist-packages/ipykernel/ipkernel.py\", line 196, in do_execute\nres = shell.run_cell(code, store_history=store_history, silent=silent)\nFile \"/usr/local/lib/python3.6/dist-packages/ipykernel/zmqshell.py\", line 533, in run_cell\nreturn super(ZMQInteractiveShell, self).run_cell(*args, **kwargs)\nFile \"/usr/local/lib/python3.6/dist-packages/IPython/core/interactiveshell.py\", line 2718, in run_cell\ninteractivity=interactivity, compiler=compiler, result=result)\nFile \"/usr/local/lib/python3.6/dist-packages/IPython/core/interactiveshell.py\", line 2822, in run_ast_nodes\nif self.run_code(code, result):\nFile \"/usr/local/lib/python3.6/dist-packages/IPython/core/interactiveshell.py\", line 2882, in run_code\nexec(code_obj, self.user_global_ns, self.user_ns)\nFile \"\", line 2, in \nres1  = run_bitch( plc_x, plc_seq_len, batch_size )\nFile \"\", line 11, in run_bitch\ntime_major=False )\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/rnn.py\", line 664, in dynamic_rnn\ndtype=dtype)\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/rnn.py\", line 868, in _dynamic_rnn_loop\nswap_memory=swap_memory)\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/control_flow_ops.py\", line 3274, in while_loop\nreturn_same_structure)\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/control_flow_ops.py\", line 2994, in BuildLoop\npred, body, original_loop_vars, loop_vars, shape_invariants)\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/control_flow_ops.py\", line 2929, in _BuildLoop\nbody_result = body(*packed_vars_for_body)\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/control_flow_ops.py\", line 3243, in \nbody = lambda i, lv: (i + 1, orig_body(*lv))\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/rnn.py\", line 834, in _time_step\nskip_conditionals=True)\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/rnn.py\", line 275, in _rnn_step\nnew_output, new_state = call_cell()\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/rnn.py\", line 822, in \ncall_cell = lambda: cell(input_t, state)\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/rnn_cell_impl.py\", line 233, in call\nreturn super(RNNCell, self).call(inputs, state)\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/layers/base.py\", line 364, in call\noutputs = super(Layer, self).call(inputs, *args, **kwargs)\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/base_layer.py\", line 769, in call\noutputs = self.call(inputs, *args, **kwargs)\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/rnn_cell_impl.py\", line 1484, in call\ncur_inp, new_state = cell(cur_inp, cur_state)\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/rnn_cell_impl.py\", line 370, in call\n*args, **kwargs)\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/layers/base.py\", line 364, in call\noutputs = super(Layer, self).call(inputs, *args, **kwargs)\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/base_layer.py\", line 759, in call\nself.build(input_shapes)\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/utils/tf_utils.py\", line 149, in wrapper\noutput_shape = fn(instance, input_shape)\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/rnn_cell_impl.py\", line 923, in build\npartitioner=maybe_partitioner)\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/base_layer.py\", line 472, in add_variable\nreturn self.add_weight(*args, **kwargs)\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/layers/base.py\", line 278, in add_weight\ngetter=vs.get_variable)\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/base_layer.py\", line 586, in add_weight\naggregation=aggregation)\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/training/checkpointable/base.py\", line 591, in _add_variable_with_custom_getter\n**kwargs_for_getter)\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/variable_scope.py\", line 1484, in get_variable\naggregation=aggregation)\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/variable_scope.py\", line 1234, in get_variable\naggregation=aggregation)\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/variable_scope.py\", line 521, in get_variable\nreturn custom_getter(**custom_getter_kwargs)\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/rnn_cell_impl.py\", line 236, in _rnn_get_variable\nvariable = getter(*args, **kwargs)\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/variable_scope.py\", line 492, in _true_getter\naggregation=aggregation)\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/variable_scope.py\", line 920, in _get_single_variable\naggregation=aggregation)\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/variables.py\", line 145, in call\nreturn cls._variable_call(*args, **kwargs)\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/variables.py\", line 141, in _variable_call\naggregation=aggregation)\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/variables.py\", line 120, in \nprevious_getter = lambda **kwargs: default_variable_creator(None, **kwargs)\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/variable_scope.py\", line 2441, in default_variable_creator\nexpected_shape=expected_shape, import_scope=import_scope)\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/variables.py\", line 147, in call\nreturn super(VariableMetaclass, cls).call(*args, **kwargs)\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/variables.py\", line 1104, in init\nconstraint=constraint)\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/variables.py\", line 1212, in _init_from_args\ninitial_value(), name=\"initial_value\", dtype=dtype)\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/variable_scope.py\", line 894, in \nshape.as_list(), dtype=dtype, partition_info=partition_info)\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/init_ops.py\", line 483, in call\nshape, -limit, limit, dtype, seed=self.seed)\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/random_ops.py\", line 242, in random_uniform\nrnd = gen_random_ops.random_uniform(shape, dtype, seed=seed1, seed2=seed2)\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/gen_random_ops.py\", line 733, in random_uniform\nname=name)\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/op_def_library.py\", line 787, in _apply_op_helper\nop_def=op_def)\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/util/deprecation.py\", line 488, in new_func\nreturn func(*args, **kwargs)\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py\", line 3272, in create_op\nop_def=op_def)\nFile \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py\", line 1768, in init\nself._traceback = tf_stack.extract_stack()\nResourceExhaustedError (see above for traceback): OOM when allocating tensor with shape[12836,50320] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc\n[[{{node rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/RandomUniform}} = RandomUniformT=DT_INT32, _class=[\"loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Assign\"], dtype=DT_FLOAT, seed=0, seed2=0, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"]]\nHint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.\n==============================================================", "body": "Notebook to reGenerate the: https://colab.research.google.com/drive/1Y93EdHeSIT5ik1PnVeJ1CfU7ClapiaOQ \r\n\r\nUPDATE  :\r\n\r\nlooks like the error is occuring at global_variable_initialisation \r\nheres the full log \r\n==================================================\r\nResourceExhaustedError                    Traceback (most recent call last)\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/client/session.py in _do_call(self, fn, *args)\r\n   1291     try:\r\n-> 1292       return fn(*args)\r\n   1293     except errors.OpError as e:\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/client/session.py in _run_fn(feed_dict, fetch_list, target_list, options, run_metadata)\r\n   1276       return self._call_tf_sessionrun(\r\n-> 1277           options, feed_dict, fetch_list, target_list, run_metadata)\r\n   1278 \r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/client/session.py in _call_tf_sessionrun(self, options, feed_dict, fetch_list, target_list, run_metadata)\r\n   1366         self._session, options, feed_dict, fetch_list, target_list,\r\n-> 1367         run_metadata)\r\n   1368 \r\n\r\nResourceExhaustedError: OOM when allocating tensor with shape[12836,50320] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc\r\n\t [[{{node rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/RandomUniform}} = RandomUniform[T=DT_INT32, _class=[\"loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Assign\"], dtype=DT_FLOAT, seed=0, seed2=0, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/shape)]]\r\nHint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.\r\n\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nResourceExhaustedError                    Traceback (most recent call last)\r\n<ipython-input-38-e7395c10000b> in <module>()\r\n----> 1 train( batch_size )\r\n\r\n<ipython-input-37-97871c34bfb9> in train(batch_size)\r\n     11     with tf.Session(config=config) as sess:\r\n     12 \r\n---> 13         sess.run(tf.global_variables_initializer())\r\n     14 \r\n     15 \r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/client/session.py in run(self, fetches, feed_dict, options, run_metadata)\r\n    885     try:\r\n    886       result = self._run(None, fetches, feed_dict, options_ptr,\r\n--> 887                          run_metadata_ptr)\r\n    888       if run_metadata:\r\n    889         proto_data = tf_session.TF_GetBuffer(run_metadata_ptr)\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/client/session.py in _run(self, handle, fetches, feed_dict, options, run_metadata)\r\n   1108     if final_fetches or final_targets or (handle and feed_dict_tensor):\r\n   1109       results = self._do_run(handle, final_targets, final_fetches,\r\n-> 1110                              feed_dict_tensor, options, run_metadata)\r\n   1111     else:\r\n   1112       results = []\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/client/session.py in _do_run(self, handle, target_list, fetch_list, feed_dict, options, run_metadata)\r\n   1284     if handle is None:\r\n   1285       return self._do_call(_run_fn, feeds, fetches, targets, options,\r\n-> 1286                            run_metadata)\r\n   1287     else:\r\n   1288       return self._do_call(_prun_fn, handle, feeds, fetches)\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/client/session.py in _do_call(self, fn, *args)\r\n   1306           self._config.experimental.client_handles_error_formatting):\r\n   1307         message = error_interpolation.interpolate(message, self._graph)\r\n-> 1308       raise type(e)(node_def, op, message)\r\n   1309 \r\n   1310   def _extend_graph(self):\r\n\r\nResourceExhaustedError: OOM when allocating tensor with shape[12836,50320] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc\r\n\t [[{{node rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/RandomUniform}} = RandomUniform[T=DT_INT32, _class=[\"loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Assign\"], dtype=DT_FLOAT, seed=0, seed2=0, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/shape)]]\r\nHint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.\r\n\r\n\r\nCaused by op 'rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/RandomUniform', defined at:\r\n  File \"/usr/lib/python3.6/runpy.py\", line 193, in _run_module_as_main\r\n    \"__main__\", mod_spec)\r\n  File \"/usr/lib/python3.6/runpy.py\", line 85, in _run_code\r\n    exec(code, run_globals)\r\n  File \"/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py\", line 16, in <module>\r\n    app.launch_new_instance()\r\n  File \"/usr/local/lib/python3.6/dist-packages/traitlets/config/application.py\", line 658, in launch_instance\r\n    app.start()\r\n  File \"/usr/local/lib/python3.6/dist-packages/ipykernel/kernelapp.py\", line 477, in start\r\n    ioloop.IOLoop.instance().start()\r\n  File \"/usr/local/lib/python3.6/dist-packages/zmq/eventloop/ioloop.py\", line 177, in start\r\n    super(ZMQIOLoop, self).start()\r\n  File \"/usr/local/lib/python3.6/dist-packages/tornado/ioloop.py\", line 888, in start\r\n    handler_func(fd_obj, events)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tornado/stack_context.py\", line 277, in null_wrapper\r\n    return fn(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/zmq/eventloop/zmqstream.py\", line 440, in _handle_events\r\n    self._handle_recv()\r\n  File \"/usr/local/lib/python3.6/dist-packages/zmq/eventloop/zmqstream.py\", line 472, in _handle_recv\r\n    self._run_callback(callback, msg)\r\n  File \"/usr/local/lib/python3.6/dist-packages/zmq/eventloop/zmqstream.py\", line 414, in _run_callback\r\n    callback(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tornado/stack_context.py\", line 277, in null_wrapper\r\n    return fn(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/ipykernel/kernelbase.py\", line 283, in dispatcher\r\n    return self.dispatch_shell(stream, msg)\r\n  File \"/usr/local/lib/python3.6/dist-packages/ipykernel/kernelbase.py\", line 235, in dispatch_shell\r\n    handler(stream, idents, msg)\r\n  File \"/usr/local/lib/python3.6/dist-packages/ipykernel/kernelbase.py\", line 399, in execute_request\r\n    user_expressions, allow_stdin)\r\n  File \"/usr/local/lib/python3.6/dist-packages/ipykernel/ipkernel.py\", line 196, in do_execute\r\n    res = shell.run_cell(code, store_history=store_history, silent=silent)\r\n  File \"/usr/local/lib/python3.6/dist-packages/ipykernel/zmqshell.py\", line 533, in run_cell\r\n    return super(ZMQInteractiveShell, self).run_cell(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/IPython/core/interactiveshell.py\", line 2718, in run_cell\r\n    interactivity=interactivity, compiler=compiler, result=result)\r\n  File \"/usr/local/lib/python3.6/dist-packages/IPython/core/interactiveshell.py\", line 2822, in run_ast_nodes\r\n    if self.run_code(code, result):\r\n  File \"/usr/local/lib/python3.6/dist-packages/IPython/core/interactiveshell.py\", line 2882, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-34-dfec99fe8c0f>\", line 2, in <module>\r\n    res1  = run_bitch( plc_x, plc_seq_len, batch_size )\r\n  File \"<ipython-input-21-7a1aec9218d8>\", line 11, in run_bitch\r\n    time_major=False )\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/rnn.py\", line 664, in dynamic_rnn\r\n    dtype=dtype)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/rnn.py\", line 868, in _dynamic_rnn_loop\r\n    swap_memory=swap_memory)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/control_flow_ops.py\", line 3274, in while_loop\r\n    return_same_structure)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/control_flow_ops.py\", line 2994, in BuildLoop\r\n    pred, body, original_loop_vars, loop_vars, shape_invariants)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/control_flow_ops.py\", line 2929, in _BuildLoop\r\n    body_result = body(*packed_vars_for_body)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/control_flow_ops.py\", line 3243, in <lambda>\r\n    body = lambda i, lv: (i + 1, orig_body(*lv))\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/rnn.py\", line 834, in _time_step\r\n    skip_conditionals=True)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/rnn.py\", line 275, in _rnn_step\r\n    new_output, new_state = call_cell()\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/rnn.py\", line 822, in <lambda>\r\n    call_cell = lambda: cell(input_t, state)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/rnn_cell_impl.py\", line 233, in __call__\r\n    return super(RNNCell, self).__call__(inputs, state)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/layers/base.py\", line 364, in __call__\r\n    outputs = super(Layer, self).__call__(inputs, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/base_layer.py\", line 769, in __call__\r\n    outputs = self.call(inputs, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/rnn_cell_impl.py\", line 1484, in call\r\n    cur_inp, new_state = cell(cur_inp, cur_state)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/rnn_cell_impl.py\", line 370, in __call__\r\n    *args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/layers/base.py\", line 364, in __call__\r\n    outputs = super(Layer, self).__call__(inputs, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/base_layer.py\", line 759, in __call__\r\n    self.build(input_shapes)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/utils/tf_utils.py\", line 149, in wrapper\r\n    output_shape = fn(instance, input_shape)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/rnn_cell_impl.py\", line 923, in build\r\n    partitioner=maybe_partitioner)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/base_layer.py\", line 472, in add_variable\r\n    return self.add_weight(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/layers/base.py\", line 278, in add_weight\r\n    getter=vs.get_variable)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/base_layer.py\", line 586, in add_weight\r\n    aggregation=aggregation)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/training/checkpointable/base.py\", line 591, in _add_variable_with_custom_getter\r\n    **kwargs_for_getter)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/variable_scope.py\", line 1484, in get_variable\r\n    aggregation=aggregation)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/variable_scope.py\", line 1234, in get_variable\r\n    aggregation=aggregation)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/variable_scope.py\", line 521, in get_variable\r\n    return custom_getter(**custom_getter_kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/rnn_cell_impl.py\", line 236, in _rnn_get_variable\r\n    variable = getter(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/variable_scope.py\", line 492, in _true_getter\r\n    aggregation=aggregation)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/variable_scope.py\", line 920, in _get_single_variable\r\n    aggregation=aggregation)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/variables.py\", line 145, in __call__\r\n    return cls._variable_call(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/variables.py\", line 141, in _variable_call\r\n    aggregation=aggregation)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/variables.py\", line 120, in <lambda>\r\n    previous_getter = lambda **kwargs: default_variable_creator(None, **kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/variable_scope.py\", line 2441, in default_variable_creator\r\n    expected_shape=expected_shape, import_scope=import_scope)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/variables.py\", line 147, in __call__\r\n    return super(VariableMetaclass, cls).__call__(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/variables.py\", line 1104, in __init__\r\n    constraint=constraint)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/variables.py\", line 1212, in _init_from_args\r\n    initial_value(), name=\"initial_value\", dtype=dtype)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/variable_scope.py\", line 894, in <lambda>\r\n    shape.as_list(), dtype=dtype, partition_info=partition_info)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/init_ops.py\", line 483, in __call__\r\n    shape, -limit, limit, dtype, seed=self.seed)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/random_ops.py\", line 242, in random_uniform\r\n    rnd = gen_random_ops.random_uniform(shape, dtype, seed=seed1, seed2=seed2)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/gen_random_ops.py\", line 733, in random_uniform\r\n    name=name)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/op_def_library.py\", line 787, in _apply_op_helper\r\n    op_def=op_def)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/util/deprecation.py\", line 488, in new_func\r\n    return func(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py\", line 3272, in create_op\r\n    op_def=op_def)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py\", line 1768, in __init__\r\n    self._traceback = tf_stack.extract_stack()\r\n\r\nResourceExhaustedError (see above for traceback): OOM when allocating tensor with shape[12836,50320] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc\r\n\t [[{{node rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/RandomUniform}} = RandomUniform[T=DT_INT32, _class=[\"loc:@rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Assign\"], dtype=DT_FLOAT, seed=0, seed2=0, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](rnn/multi_rnn_cell/cell_1/lstm_cell/kernel/Initializer/random_uniform/shape)]]\r\nHint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.\r\n\r\n\r\n==============================================================  \r\n"}