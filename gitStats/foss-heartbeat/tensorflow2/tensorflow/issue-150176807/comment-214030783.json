{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/214030783", "html_url": "https://github.com/tensorflow/tensorflow/issues/2053#issuecomment-214030783", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2053", "id": 214030783, "node_id": "MDEyOklzc3VlQ29tbWVudDIxNDAzMDc4Mw==", "user": {"login": "akors", "id": 3023492, "node_id": "MDQ6VXNlcjMwMjM0OTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/3023492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akors", "html_url": "https://github.com/akors", "followers_url": "https://api.github.com/users/akors/followers", "following_url": "https://api.github.com/users/akors/following{/other_user}", "gists_url": "https://api.github.com/users/akors/gists{/gist_id}", "starred_url": "https://api.github.com/users/akors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akors/subscriptions", "organizations_url": "https://api.github.com/users/akors/orgs", "repos_url": "https://api.github.com/users/akors/repos", "events_url": "https://api.github.com/users/akors/events{/privacy}", "received_events_url": "https://api.github.com/users/akors/received_events", "type": "User", "site_admin": false}, "created_at": "2016-04-24T20:18:41Z", "updated_at": "2016-04-24T20:18:41Z", "author_association": "NONE", "body_html": "<blockquote>\n<p>If you manually run bazel-out/host/bin/tensorflow/cc/ops/random_ops_gen_cc, do you still see the failure?</p>\n</blockquote>\n<p>No, then the library can be found.</p>\n<pre><code>$ bazel-out/host/bin/tensorflow/cc/ops/logging_ops_gen_cc\nUsage: bazel-out/host/bin/tensorflow/cc/ops/logging_ops_gen_cc out.h out.cc include_internal\n  include_internal: 1 means include internal ops\n[alexander@desktop-fedora tensorflow]$ ldd bazel-out/host/bin/tensorflow/cc/ops/logging_ops_gen_cc\n    linux-vdso.so.1 (0x00007ffcef5b6000)\n    libcudart.so.7.5 =&gt; /home/alexander/.local/src/tensorflow/bazel-out/host/bin/tensorflow/cc/ops/../../../_solib_local/_U_S_Sthird_Uparty_Sgpus_Scuda_Ccudart___Uthird_Uparty_Sgpus_Scuda_Slib64/libcudart.so.7.5 (0x00007f5991bd4000)\n    libm.so.6 =&gt; /lib64/libm.so.6 (0x00007f59918a1000)\n    libdl.so.2 =&gt; /lib64/libdl.so.2 (0x00007f599169d000)\n    libz.so.1 =&gt; /lib64/libz.so.1 (0x00007f5991487000)\n    libpthread.so.0 =&gt; /lib64/libpthread.so.0 (0x00007f5991269000)\n    libstdc++.so.6 =&gt; /lib64/libstdc++.so.6 (0x00007f5990ee7000)\n    libgcc_s.so.1 =&gt; /lib64/libgcc_s.so.1 (0x00007f5990cd0000)\n    libc.so.6 =&gt; /lib64/libc.so.6 (0x00007f599090e000)\n    librt.so.1 =&gt; /lib64/librt.so.1 (0x00007f5990706000)\n    /lib64/ld-linux-x86-64.so.2 (0x000055fcecd2f000)\n</code></pre>\n<blockquote>\n<p>Do you see a bazel-out/host/bin/tensorflow/cc/ops/random_ops_gen_cc.runfiles/third_party/gpus/cuda/lib64/libcudart.so symlink?</p>\n</blockquote>\n<p>Not <code>libcudart.so</code>, but <code>libcudart.so.7.5</code> . The link is valid, and links into the bazel-cache directory.</p>\n<blockquote>\n<p>Btw the reason we don't use gcc 5+ is that nvcc currently isn't compatible with it, so we're all stuck on 4.8 or 4.9 :(</p>\n</blockquote>\n<p>I understand. Did you also have to patch your CROSSTOOL file?</p>\n<blockquote>\n<p>On this machine, I'm using ubuntu 14.04, gcc 4.8.4 provided by distro.</p>\n</blockquote>\n<p>Thanks. Does this mean you are using CUDA 7.0, not 7.5?</p>", "body_text": "If you manually run bazel-out/host/bin/tensorflow/cc/ops/random_ops_gen_cc, do you still see the failure?\n\nNo, then the library can be found.\n$ bazel-out/host/bin/tensorflow/cc/ops/logging_ops_gen_cc\nUsage: bazel-out/host/bin/tensorflow/cc/ops/logging_ops_gen_cc out.h out.cc include_internal\n  include_internal: 1 means include internal ops\n[alexander@desktop-fedora tensorflow]$ ldd bazel-out/host/bin/tensorflow/cc/ops/logging_ops_gen_cc\n    linux-vdso.so.1 (0x00007ffcef5b6000)\n    libcudart.so.7.5 => /home/alexander/.local/src/tensorflow/bazel-out/host/bin/tensorflow/cc/ops/../../../_solib_local/_U_S_Sthird_Uparty_Sgpus_Scuda_Ccudart___Uthird_Uparty_Sgpus_Scuda_Slib64/libcudart.so.7.5 (0x00007f5991bd4000)\n    libm.so.6 => /lib64/libm.so.6 (0x00007f59918a1000)\n    libdl.so.2 => /lib64/libdl.so.2 (0x00007f599169d000)\n    libz.so.1 => /lib64/libz.so.1 (0x00007f5991487000)\n    libpthread.so.0 => /lib64/libpthread.so.0 (0x00007f5991269000)\n    libstdc++.so.6 => /lib64/libstdc++.so.6 (0x00007f5990ee7000)\n    libgcc_s.so.1 => /lib64/libgcc_s.so.1 (0x00007f5990cd0000)\n    libc.so.6 => /lib64/libc.so.6 (0x00007f599090e000)\n    librt.so.1 => /lib64/librt.so.1 (0x00007f5990706000)\n    /lib64/ld-linux-x86-64.so.2 (0x000055fcecd2f000)\n\n\nDo you see a bazel-out/host/bin/tensorflow/cc/ops/random_ops_gen_cc.runfiles/third_party/gpus/cuda/lib64/libcudart.so symlink?\n\nNot libcudart.so, but libcudart.so.7.5 . The link is valid, and links into the bazel-cache directory.\n\nBtw the reason we don't use gcc 5+ is that nvcc currently isn't compatible with it, so we're all stuck on 4.8 or 4.9 :(\n\nI understand. Did you also have to patch your CROSSTOOL file?\n\nOn this machine, I'm using ubuntu 14.04, gcc 4.8.4 provided by distro.\n\nThanks. Does this mean you are using CUDA 7.0, not 7.5?", "body": "> If you manually run bazel-out/host/bin/tensorflow/cc/ops/random_ops_gen_cc, do you still see the failure?\n\nNo, then the library can be found.\n\n```\n$ bazel-out/host/bin/tensorflow/cc/ops/logging_ops_gen_cc\nUsage: bazel-out/host/bin/tensorflow/cc/ops/logging_ops_gen_cc out.h out.cc include_internal\n  include_internal: 1 means include internal ops\n[alexander@desktop-fedora tensorflow]$ ldd bazel-out/host/bin/tensorflow/cc/ops/logging_ops_gen_cc\n    linux-vdso.so.1 (0x00007ffcef5b6000)\n    libcudart.so.7.5 => /home/alexander/.local/src/tensorflow/bazel-out/host/bin/tensorflow/cc/ops/../../../_solib_local/_U_S_Sthird_Uparty_Sgpus_Scuda_Ccudart___Uthird_Uparty_Sgpus_Scuda_Slib64/libcudart.so.7.5 (0x00007f5991bd4000)\n    libm.so.6 => /lib64/libm.so.6 (0x00007f59918a1000)\n    libdl.so.2 => /lib64/libdl.so.2 (0x00007f599169d000)\n    libz.so.1 => /lib64/libz.so.1 (0x00007f5991487000)\n    libpthread.so.0 => /lib64/libpthread.so.0 (0x00007f5991269000)\n    libstdc++.so.6 => /lib64/libstdc++.so.6 (0x00007f5990ee7000)\n    libgcc_s.so.1 => /lib64/libgcc_s.so.1 (0x00007f5990cd0000)\n    libc.so.6 => /lib64/libc.so.6 (0x00007f599090e000)\n    librt.so.1 => /lib64/librt.so.1 (0x00007f5990706000)\n    /lib64/ld-linux-x86-64.so.2 (0x000055fcecd2f000)\n```\n\n> Do you see a bazel-out/host/bin/tensorflow/cc/ops/random_ops_gen_cc.runfiles/third_party/gpus/cuda/lib64/libcudart.so symlink?\n\nNot `libcudart.so`, but `libcudart.so.7.5` . The link is valid, and links into the bazel-cache directory.\n\n> Btw the reason we don't use gcc 5+ is that nvcc currently isn't compatible with it, so we're all stuck on 4.8 or 4.9 :(\n\nI understand. Did you also have to patch your CROSSTOOL file?\n\n> On this machine, I'm using ubuntu 14.04, gcc 4.8.4 provided by distro.\n\nThanks. Does this mean you are using CUDA 7.0, not 7.5?\n"}