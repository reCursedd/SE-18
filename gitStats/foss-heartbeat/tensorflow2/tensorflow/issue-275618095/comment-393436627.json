{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/393436627", "html_url": "https://github.com/tensorflow/tensorflow/issues/14746#issuecomment-393436627", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14746", "id": 393436627, "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzQzNjYyNw==", "user": {"login": "makai281", "id": 19256627, "node_id": "MDQ6VXNlcjE5MjU2NjI3", "avatar_url": "https://avatars2.githubusercontent.com/u/19256627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/makai281", "html_url": "https://github.com/makai281", "followers_url": "https://api.github.com/users/makai281/followers", "following_url": "https://api.github.com/users/makai281/following{/other_user}", "gists_url": "https://api.github.com/users/makai281/gists{/gist_id}", "starred_url": "https://api.github.com/users/makai281/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/makai281/subscriptions", "organizations_url": "https://api.github.com/users/makai281/orgs", "repos_url": "https://api.github.com/users/makai281/repos", "events_url": "https://api.github.com/users/makai281/events{/privacy}", "received_events_url": "https://api.github.com/users/makai281/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-31T07:29:31Z", "updated_at": "2018-05-31T07:32:01Z", "author_association": "NONE", "body_html": "<p>supposed to be like this?<br>\n`<br>\n# initialize random embedding matrix<br>\nwith tf.variable_scope('embedding'):<br>\nself.embedding_matrix = tf.get_variable( \"embedding\", shape=[self.vocab_size, self.embd_size], dtype=tf.float32, initializer=self.initializer)</p>\n<p>with tf.name_scope('input'):<br>\nself.input_batch = tf.placeholder(tf.int64, shape=(None, None))<br>\nself.inputs = tf.nn.embedding_lookup(self.embedding_matrix, self.input_batch)</p>\n<p>with tf.name_scope('word_dropout'):<br>\nself.inputs = tf.nn.dropout(self.inputs, keep_prob=self.word_dropout, noise_shape=[tf.shape(self.inputs)[0], tf.shape(self.inputs)[1], 1])</p>\n<p>`</p>", "body_text": "supposed to be like this?\n`\n# initialize random embedding matrix\nwith tf.variable_scope('embedding'):\nself.embedding_matrix = tf.get_variable( \"embedding\", shape=[self.vocab_size, self.embd_size], dtype=tf.float32, initializer=self.initializer)\nwith tf.name_scope('input'):\nself.input_batch = tf.placeholder(tf.int64, shape=(None, None))\nself.inputs = tf.nn.embedding_lookup(self.embedding_matrix, self.input_batch)\nwith tf.name_scope('word_dropout'):\nself.inputs = tf.nn.dropout(self.inputs, keep_prob=self.word_dropout, noise_shape=[tf.shape(self.inputs)[0], tf.shape(self.inputs)[1], 1])\n`", "body": "supposed to be like this? \r\n`\r\n\\# initialize random embedding matrix\r\nwith tf.variable_scope('embedding'):\r\n   self.embedding_matrix = tf.get_variable( \"embedding\", shape=[self.vocab_size, self.embd_size], dtype=tf.float32, initializer=self.initializer)\r\n\r\nwith tf.name_scope('input'):\r\n   self.input_batch = tf.placeholder(tf.int64, shape=(None, None))\r\n   self.inputs = tf.nn.embedding_lookup(self.embedding_matrix, self.input_batch)\r\n\r\nwith tf.name_scope('word_dropout'):\r\n   self.inputs = tf.nn.dropout(self.inputs, keep_prob=self.word_dropout, noise_shape=[tf.shape(self.inputs)[0], tf.shape(self.inputs)[1], 1]) \r\n\r\n`\r\n"}