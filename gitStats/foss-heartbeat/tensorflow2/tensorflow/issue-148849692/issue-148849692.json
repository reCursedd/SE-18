{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1981", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1981/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1981/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1981/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/1981", "id": 148849692, "node_id": "MDU6SXNzdWUxNDg4NDk2OTI=", "number": 1981, "title": "Make sklearn adapter to use LabelBinarizer by default", "user": {"login": "kudkudak", "id": 1571945, "node_id": "MDQ6VXNlcjE1NzE5NDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1571945?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kudkudak", "html_url": "https://github.com/kudkudak", "followers_url": "https://api.github.com/users/kudkudak/followers", "following_url": "https://api.github.com/users/kudkudak/following{/other_user}", "gists_url": "https://api.github.com/users/kudkudak/gists{/gist_id}", "starred_url": "https://api.github.com/users/kudkudak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kudkudak/subscriptions", "organizations_url": "https://api.github.com/users/kudkudak/orgs", "repos_url": "https://api.github.com/users/kudkudak/repos", "events_url": "https://api.github.com/users/kudkudak/events{/privacy}", "received_events_url": "https://api.github.com/users/kudkudak/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "ilblackdragon", "id": 175486, "node_id": "MDQ6VXNlcjE3NTQ4Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/175486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilblackdragon", "html_url": "https://github.com/ilblackdragon", "followers_url": "https://api.github.com/users/ilblackdragon/followers", "following_url": "https://api.github.com/users/ilblackdragon/following{/other_user}", "gists_url": "https://api.github.com/users/ilblackdragon/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilblackdragon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilblackdragon/subscriptions", "organizations_url": "https://api.github.com/users/ilblackdragon/orgs", "repos_url": "https://api.github.com/users/ilblackdragon/repos", "events_url": "https://api.github.com/users/ilblackdragon/events{/privacy}", "received_events_url": "https://api.github.com/users/ilblackdragon/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ilblackdragon", "id": 175486, "node_id": "MDQ6VXNlcjE3NTQ4Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/175486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilblackdragon", "html_url": "https://github.com/ilblackdragon", "followers_url": "https://api.github.com/users/ilblackdragon/followers", "following_url": "https://api.github.com/users/ilblackdragon/following{/other_user}", "gists_url": "https://api.github.com/users/ilblackdragon/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilblackdragon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilblackdragon/subscriptions", "organizations_url": "https://api.github.com/users/ilblackdragon/orgs", "repos_url": "https://api.github.com/users/ilblackdragon/repos", "events_url": "https://api.github.com/users/ilblackdragon/events{/privacy}", "received_events_url": "https://api.github.com/users/ilblackdragon/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2016-04-16T12:46:01Z", "updated_at": "2017-02-09T22:37:24Z", "closed_at": "2017-01-24T00:12:05Z", "author_association": "NONE", "body_html": "<p>TensorFlowDNNClassifier doesn't handle cases, when target labels are not in <code>{0, 1}</code>. Usually <code>scikit-learn</code> models transform labels internally using <code>LabelBinarizer</code> so this is slightly misleading.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">from</span> sklearn <span class=\"pl-k\">import</span> datasets, metrics, cross_validation\n<span class=\"pl-k\">from</span> tensorflow.contrib <span class=\"pl-k\">import</span> skflow\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span># Load dataset and select only first two classes</span>\niris <span class=\"pl-k\">=</span> datasets.load_iris()\nids <span class=\"pl-k\">=</span> np.where((iris.target<span class=\"pl-k\">==</span><span class=\"pl-c1\">0</span>) <span class=\"pl-k\">|</span> (iris.target<span class=\"pl-k\">==</span><span class=\"pl-c1\">1</span>))\niris.data <span class=\"pl-k\">=</span> iris.data[ids]\niris.target <span class=\"pl-k\">=</span> iris.target[ids]\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span># Change labels from 0/1 to -1/1</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span># Comment out the following line to get 1.0 accuracy</span>\niris.target[iris.target<span class=\"pl-k\">==</span><span class=\"pl-c1\">0</span>] <span class=\"pl-k\">=</span> <span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span> \n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span># Train and predict on iris (copied from example)</span>\nX_train, X_test, y_train, y_test <span class=\"pl-k\">=</span> cross_validation.train_test_split(iris.data, iris.target,\n    <span class=\"pl-v\">test_size</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0.2</span>, <span class=\"pl-v\">random_state</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">42</span>)\n\nclassifier <span class=\"pl-k\">=</span> skflow.TensorFlowDNNClassifier(<span class=\"pl-v\">hidden_units</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">20</span>, <span class=\"pl-c1\">10</span>],\n    <span class=\"pl-v\">n_classes</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">3</span>, <span class=\"pl-v\">steps</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">200</span>)\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Fit and predict.</span>\nclassifier.fit(X_train, y_train)\nscore <span class=\"pl-k\">=</span> metrics.accuracy_score(y_test, classifier.predict(X_test))\n<span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Accuracy: <span class=\"pl-c1\">{0<span class=\"pl-k\">:f</span>}</span><span class=\"pl-pds\">'</span></span>.format(score)) <span class=\"pl-c\"><span class=\"pl-c\">#</span> Prints 0.4, but prints 1.0 without label change</span></pre></div>\n<p>TF version is <code>0.8.0rc0</code></p>\n<p>EDIT:</p>\n<p>What happens is that <code>classifier.predict(X_test)</code> is in [1,2] instead of [-1, 1]</p>", "body_text": "TensorFlowDNNClassifier doesn't handle cases, when target labels are not in {0, 1}. Usually scikit-learn models transform labels internally using LabelBinarizer so this is slightly misleading.\nfrom sklearn import datasets, metrics, cross_validation\nfrom tensorflow.contrib import skflow\n\n## Load dataset and select only first two classes\niris = datasets.load_iris()\nids = np.where((iris.target==0) | (iris.target==1))\niris.data = iris.data[ids]\niris.target = iris.target[ids]\n\n## Change labels from 0/1 to -1/1\n## Comment out the following line to get 1.0 accuracy\niris.target[iris.target==0] = -1 \n\n## Train and predict on iris (copied from example)\nX_train, X_test, y_train, y_test = cross_validation.train_test_split(iris.data, iris.target,\n    test_size=0.2, random_state=42)\n\nclassifier = skflow.TensorFlowDNNClassifier(hidden_units=[10, 20, 10],\n    n_classes=3, steps=200)\n\n# Fit and predict.\nclassifier.fit(X_train, y_train)\nscore = metrics.accuracy_score(y_test, classifier.predict(X_test))\nprint('Accuracy: {0:f}'.format(score)) # Prints 0.4, but prints 1.0 without label change\nTF version is 0.8.0rc0\nEDIT:\nWhat happens is that classifier.predict(X_test) is in [1,2] instead of [-1, 1]", "body": "TensorFlowDNNClassifier doesn't handle cases, when target labels are not in `{0, 1}`. Usually `scikit-learn` models transform labels internally using `LabelBinarizer` so this is slightly misleading. \n\n``` python\nfrom sklearn import datasets, metrics, cross_validation\nfrom tensorflow.contrib import skflow\n\n## Load dataset and select only first two classes\niris = datasets.load_iris()\nids = np.where((iris.target==0) | (iris.target==1))\niris.data = iris.data[ids]\niris.target = iris.target[ids]\n\n## Change labels from 0/1 to -1/1\n## Comment out the following line to get 1.0 accuracy\niris.target[iris.target==0] = -1 \n\n## Train and predict on iris (copied from example)\nX_train, X_test, y_train, y_test = cross_validation.train_test_split(iris.data, iris.target,\n    test_size=0.2, random_state=42)\n\nclassifier = skflow.TensorFlowDNNClassifier(hidden_units=[10, 20, 10],\n    n_classes=3, steps=200)\n\n# Fit and predict.\nclassifier.fit(X_train, y_train)\nscore = metrics.accuracy_score(y_test, classifier.predict(X_test))\nprint('Accuracy: {0:f}'.format(score)) # Prints 0.4, but prints 1.0 without label change\n```\n\nTF version is `0.8.0rc0`\n\nEDIT:\n\nWhat happens is that `classifier.predict(X_test)` is in [1,2] instead of [-1, 1]\n"}