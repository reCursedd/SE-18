{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/241181449", "html_url": "https://github.com/tensorflow/tensorflow/pull/3802#issuecomment-241181449", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3802", "id": 241181449, "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTE4MTQ0OQ==", "user": {"login": "lukaszkaiser", "id": 684901, "node_id": "MDQ6VXNlcjY4NDkwMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/684901?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukaszkaiser", "html_url": "https://github.com/lukaszkaiser", "followers_url": "https://api.github.com/users/lukaszkaiser/followers", "following_url": "https://api.github.com/users/lukaszkaiser/following{/other_user}", "gists_url": "https://api.github.com/users/lukaszkaiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukaszkaiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukaszkaiser/subscriptions", "organizations_url": "https://api.github.com/users/lukaszkaiser/orgs", "repos_url": "https://api.github.com/users/lukaszkaiser/repos", "events_url": "https://api.github.com/users/lukaszkaiser/events{/privacy}", "received_events_url": "https://api.github.com/users/lukaszkaiser/received_events", "type": "User", "site_admin": false}, "created_at": "2016-08-20T05:49:37Z", "updated_at": "2016-08-20T05:49:37Z", "author_association": "MEMBER", "body_html": "<p>I think the seq2seq module behaves like you say in the end: if output_projection is not None, it returns cell.output_size - sized tensors. If it is None, it returns num_decoder_symbol - sized tensors. Is it not so?</p>\n<p>The seq2seq_model example is a bit different. It uses sampled softmax, but that's only good for training. When decoding, it cannot sample from the softmax, so it just returns the dense logits. But that's seq2seq_model -- let's keep it separate from this issue, which is changing the seq2seq module.</p>\n<p>Or am I missing something? Let me know!</p>", "body_text": "I think the seq2seq module behaves like you say in the end: if output_projection is not None, it returns cell.output_size - sized tensors. If it is None, it returns num_decoder_symbol - sized tensors. Is it not so?\nThe seq2seq_model example is a bit different. It uses sampled softmax, but that's only good for training. When decoding, it cannot sample from the softmax, so it just returns the dense logits. But that's seq2seq_model -- let's keep it separate from this issue, which is changing the seq2seq module.\nOr am I missing something? Let me know!", "body": "I think the seq2seq module behaves like you say in the end: if output_projection is not None, it returns cell.output_size - sized tensors. If it is None, it returns num_decoder_symbol - sized tensors. Is it not so?\n\nThe seq2seq_model example is a bit different. It uses sampled softmax, but that's only good for training. When decoding, it cannot sample from the softmax, so it just returns the dense logits. But that's seq2seq_model -- let's keep it separate from this issue, which is changing the seq2seq module.\n\nOr am I missing something? Let me know!\n"}