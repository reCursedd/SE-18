{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13423", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13423/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13423/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13423/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/13423", "id": 261863254, "node_id": "MDU6SXNzdWUyNjE4NjMyNTQ=", "number": 13423, "title": "In what cases a OpKernel instance may be accessed concurrently?", "user": {"login": "x10000year", "id": 22427780, "node_id": "MDQ6VXNlcjIyNDI3Nzgw", "avatar_url": "https://avatars0.githubusercontent.com/u/22427780?v=4", "gravatar_id": "", "url": "https://api.github.com/users/x10000year", "html_url": "https://github.com/x10000year", "followers_url": "https://api.github.com/users/x10000year/followers", "following_url": "https://api.github.com/users/x10000year/following{/other_user}", "gists_url": "https://api.github.com/users/x10000year/gists{/gist_id}", "starred_url": "https://api.github.com/users/x10000year/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/x10000year/subscriptions", "organizations_url": "https://api.github.com/users/x10000year/orgs", "repos_url": "https://api.github.com/users/x10000year/repos", "events_url": "https://api.github.com/users/x10000year/events{/privacy}", "received_events_url": "https://api.github.com/users/x10000year/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-30T18:32:10Z", "updated_at": "2017-10-09T00:04:14Z", "closed_at": "2017-10-09T00:04:14Z", "author_association": "NONE", "body_html": "<p>In the documentation for adding new op, it is said that Compute method of OpKernel should be thread safe, because instances of your OpKernel may be accessed concurrently. I want to know in what cases an instance may be accessed concurrently. If the graph has no loop or any other control flow,does this guarantee that every OpKernel instance is accessed only once for each forward/backward pass?</p>\n<p>Thank you.</p>", "body_text": "In the documentation for adding new op, it is said that Compute method of OpKernel should be thread safe, because instances of your OpKernel may be accessed concurrently. I want to know in what cases an instance may be accessed concurrently. If the graph has no loop or any other control flow,does this guarantee that every OpKernel instance is accessed only once for each forward/backward pass?\nThank you.", "body": "In the documentation for adding new op, it is said that Compute method of OpKernel should be thread safe, because instances of your OpKernel may be accessed concurrently. I want to know in what cases an instance may be accessed concurrently. If the graph has no loop or any other control flow,does this guarantee that every OpKernel instance is accessed only once for each forward/backward pass?\r\n\r\nThank you."}