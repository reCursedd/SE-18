{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/413301336", "html_url": "https://github.com/tensorflow/tensorflow/pull/18954#issuecomment-413301336", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18954", "id": 413301336, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzMwMTMzNg==", "user": {"login": "nehaljwani", "id": 1779189, "node_id": "MDQ6VXNlcjE3NzkxODk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1779189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nehaljwani", "html_url": "https://github.com/nehaljwani", "followers_url": "https://api.github.com/users/nehaljwani/followers", "following_url": "https://api.github.com/users/nehaljwani/following{/other_user}", "gists_url": "https://api.github.com/users/nehaljwani/gists{/gist_id}", "starred_url": "https://api.github.com/users/nehaljwani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nehaljwani/subscriptions", "organizations_url": "https://api.github.com/users/nehaljwani/orgs", "repos_url": "https://api.github.com/users/nehaljwani/repos", "events_url": "https://api.github.com/users/nehaljwani/events{/privacy}", "received_events_url": "https://api.github.com/users/nehaljwani/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-15T19:03:35Z", "updated_at": "2018-08-15T19:04:25Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1299636\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/case540\">@case540</a> Error appears everytime. See below:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">import</span> re\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">import</span> os\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">TF_LIB_REGEX_FPATHS</span> <span class=\"pl-k\">=</span> [os.sep <span class=\"pl-k\">+</span> os.path.join(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>tensorflow<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>python<span class=\"pl-pds\">'</span></span>)]\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">def</span> <span class=\"pl-en\">_ignore_file_path</span>(<span class=\"pl-smi\">fname</span>, <span class=\"pl-smi\">ignore_regex_fpaths</span>):\n<span class=\"pl-c1\">...</span>   <span class=\"pl-k\">for</span> regex_pattern <span class=\"pl-k\">in</span> ignore_regex_fpaths:\n<span class=\"pl-c1\">...</span>     <span class=\"pl-k\">if</span> re.search(regex_pattern, fname):\n<span class=\"pl-c1\">...</span>       <span class=\"pl-k\">return</span> <span class=\"pl-c1\">True</span>\n<span class=\"pl-c1\">...</span>   <span class=\"pl-k\">return</span> <span class=\"pl-c1\">False</span>\n<span class=\"pl-c1\">...</span>\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">TF_LIB_REGEX_FPATHS</span>\n[<span class=\"pl-s\"><span class=\"pl-pds\">'</span><span class=\"pl-cce\">\\\\</span>tensorflow<span class=\"pl-cce\">\\\\</span>python<span class=\"pl-pds\">'</span></span>]\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> ignore_regex_fpaths <span class=\"pl-k\">=</span> <span class=\"pl-c1\">TF_LIB_REGEX_FPATHS</span>\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> _ignore_file_path(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>C:<span class=\"pl-cce\">\\t</span>flow<span class=\"pl-pds\">\"</span></span>, ignore_regex_fpaths)\nTraceback (most recent call last):\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>&lt;stdin&gt;<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">1</span>, <span class=\"pl-k\">in</span> <span class=\"pl-k\">&lt;</span>module<span class=\"pl-k\">&gt;</span>\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>&lt;stdin&gt;<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">3</span>, <span class=\"pl-k\">in</span> _ignore_file_path\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>F:<span class=\"pl-cce\">\\n</span>wani\\mc3\\lib<span class=\"pl-cce\">\\r</span>e.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">182</span>, <span class=\"pl-k\">in</span> search\n    <span class=\"pl-k\">return</span> _compile(pattern, flags).search(string)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>F:<span class=\"pl-cce\">\\n</span>wani\\mc3\\lib<span class=\"pl-cce\">\\r</span>e.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">301</span>, <span class=\"pl-k\">in</span> _compile\n    p <span class=\"pl-k\">=</span> sre_compile.compile(pattern, flags)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>F:<span class=\"pl-cce\">\\n</span>wani\\mc3\\lib\\sre_compile.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">562</span>, <span class=\"pl-k\">in</span> <span class=\"pl-c1\">compile</span>\n    p <span class=\"pl-k\">=</span> sre_parse.parse(p, flags)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>F:<span class=\"pl-cce\">\\n</span>wani\\mc3\\lib\\sre_parse.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">855</span>, <span class=\"pl-k\">in</span> parse\n    p <span class=\"pl-k\">=</span> _parse_sub(source, pattern, flags <span class=\"pl-k\">&amp;</span> <span class=\"pl-c1\">SRE_FLAG_VERBOSE</span>, <span class=\"pl-c1\">0</span>)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>F:<span class=\"pl-cce\">\\n</span>wani\\mc3\\lib\\sre_parse.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">416</span>, <span class=\"pl-k\">in</span> _parse_sub\n    <span class=\"pl-k\">not</span> nested <span class=\"pl-k\">and</span> <span class=\"pl-k\">not</span> items))\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>F:<span class=\"pl-cce\">\\n</span>wani\\mc3\\lib\\sre_parse.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">502</span>, <span class=\"pl-k\">in</span> _parse\n    code <span class=\"pl-k\">=</span> _escape(source, this, state)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>F:<span class=\"pl-cce\">\\n</span>wani\\mc3\\lib\\sre_parse.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">401</span>, <span class=\"pl-k\">in</span> _escape\n    <span class=\"pl-k\">raise</span> source.error(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>bad escape <span class=\"pl-c1\">%s</span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%</span> escape, <span class=\"pl-c1\">len</span>(escape))\nsre_constants.error: bad escape \\<span class=\"pl-ii\">p at position 11</span></pre></div>", "body_text": "@case540 Error appears everytime. See below:\n>>> import re\n>>> import os\n>>> TF_LIB_REGEX_FPATHS = [os.sep + os.path.join('tensorflow', 'python')]\n>>> def _ignore_file_path(fname, ignore_regex_fpaths):\n...   for regex_pattern in ignore_regex_fpaths:\n...     if re.search(regex_pattern, fname):\n...       return True\n...   return False\n...\n>>> TF_LIB_REGEX_FPATHS\n['\\\\tensorflow\\\\python']\n>>> ignore_regex_fpaths = TF_LIB_REGEX_FPATHS\n>>> _ignore_file_path(\"C:\\tflow\", ignore_regex_fpaths)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"<stdin>\", line 3, in _ignore_file_path\n  File \"F:\\nwani\\mc3\\lib\\re.py\", line 182, in search\n    return _compile(pattern, flags).search(string)\n  File \"F:\\nwani\\mc3\\lib\\re.py\", line 301, in _compile\n    p = sre_compile.compile(pattern, flags)\n  File \"F:\\nwani\\mc3\\lib\\sre_compile.py\", line 562, in compile\n    p = sre_parse.parse(p, flags)\n  File \"F:\\nwani\\mc3\\lib\\sre_parse.py\", line 855, in parse\n    p = _parse_sub(source, pattern, flags & SRE_FLAG_VERBOSE, 0)\n  File \"F:\\nwani\\mc3\\lib\\sre_parse.py\", line 416, in _parse_sub\n    not nested and not items))\n  File \"F:\\nwani\\mc3\\lib\\sre_parse.py\", line 502, in _parse\n    code = _escape(source, this, state)\n  File \"F:\\nwani\\mc3\\lib\\sre_parse.py\", line 401, in _escape\n    raise source.error(\"bad escape %s\" % escape, len(escape))\nsre_constants.error: bad escape \\p at position 11", "body": "@case540 Error appears everytime. See below:\r\n```python\r\n>>> import re\r\n>>> import os\r\n>>> TF_LIB_REGEX_FPATHS = [os.sep + os.path.join('tensorflow', 'python')]\r\n>>> def _ignore_file_path(fname, ignore_regex_fpaths):\r\n...   for regex_pattern in ignore_regex_fpaths:\r\n...     if re.search(regex_pattern, fname):\r\n...       return True\r\n...   return False\r\n...\r\n>>> TF_LIB_REGEX_FPATHS\r\n['\\\\tensorflow\\\\python']\r\n>>> ignore_regex_fpaths = TF_LIB_REGEX_FPATHS\r\n>>> _ignore_file_path(\"C:\\tflow\", ignore_regex_fpaths)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"<stdin>\", line 3, in _ignore_file_path\r\n  File \"F:\\nwani\\mc3\\lib\\re.py\", line 182, in search\r\n    return _compile(pattern, flags).search(string)\r\n  File \"F:\\nwani\\mc3\\lib\\re.py\", line 301, in _compile\r\n    p = sre_compile.compile(pattern, flags)\r\n  File \"F:\\nwani\\mc3\\lib\\sre_compile.py\", line 562, in compile\r\n    p = sre_parse.parse(p, flags)\r\n  File \"F:\\nwani\\mc3\\lib\\sre_parse.py\", line 855, in parse\r\n    p = _parse_sub(source, pattern, flags & SRE_FLAG_VERBOSE, 0)\r\n  File \"F:\\nwani\\mc3\\lib\\sre_parse.py\", line 416, in _parse_sub\r\n    not nested and not items))\r\n  File \"F:\\nwani\\mc3\\lib\\sre_parse.py\", line 502, in _parse\r\n    code = _escape(source, this, state)\r\n  File \"F:\\nwani\\mc3\\lib\\sre_parse.py\", line 401, in _escape\r\n    raise source.error(\"bad escape %s\" % escape, len(escape))\r\nsre_constants.error: bad escape \\p at position 11\r\n```"}