{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14309", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14309/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14309/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14309/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/14309", "id": 271710588, "node_id": "MDExOlB1bGxSZXF1ZXN0MTUxMDI1NTg0", "number": 14309, "title": "ONNX Support", "user": {"login": "tjingrant", "id": 6410074, "node_id": "MDQ6VXNlcjY0MTAwNzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/6410074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tjingrant", "html_url": "https://github.com/tjingrant", "followers_url": "https://api.github.com/users/tjingrant/followers", "following_url": "https://api.github.com/users/tjingrant/following{/other_user}", "gists_url": "https://api.github.com/users/tjingrant/gists{/gist_id}", "starred_url": "https://api.github.com/users/tjingrant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tjingrant/subscriptions", "organizations_url": "https://api.github.com/users/tjingrant/orgs", "repos_url": "https://api.github.com/users/tjingrant/repos", "events_url": "https://api.github.com/users/tjingrant/events{/privacy}", "received_events_url": "https://api.github.com/users/tjingrant/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-07T05:01:31Z", "updated_at": "2017-11-07T05:04:40Z", "closed_at": "2017-11-07T05:04:32Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/14309", "html_url": "https://github.com/tensorflow/tensorflow/pull/14309", "diff_url": "https://github.com/tensorflow/tensorflow/pull/14309.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/14309.patch"}, "body_html": "<p>As per <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"256068792\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/12888\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/12888/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/12888\">#12888</a>.</p>\n<p>We are porting a subset of our package of ONNX-TF from here <a href=\"https://github.com/tjingrant/onnx-tf\">https://github.com/tjingrant/onnx-tf</a>. Specifically, we want to enable users to do the following:</p>\n<pre><code>import tensorflow as tf\nimport numpy as np\nfrom onnx import helper\nfrom onnx.onnx_pb2 import TensorProto\n\nX = np.random.randn(3, 2).astype(np.float32)\nY_ref = np.clip(X, 0, np.inf)\n\nnode_def = helper.make_node(\n  \"Relu\", [\"X\"], [\"X\"])\n\ngraph_def = helper.make_graph(\n  [node_def],\n  name=\"test\",\n  inputs=[helper.make_tensor_value_info(\"X\", TensorProto.FLOAT, [3, 2])],\n  outputs=[helper.make_tensor_value_info(\"X\", TensorProto.FLOAT, [3, 2])])\n\ninput_dict, output_dict = tf.contrib.onnx.prepare(helper.make_model(graph_def))\nwith tf.Session() as sess:\n  out = sess.run(output_dict['X'], feed_dict={input_dict['X']: X})\n\nnp.testing.assert_almost_equal(out, Y_ref)\n</code></pre>\n<p>We are still working on fixing some of the tests as well as clearing as many TODO's as we can.<br>\nThe ONNX RNN API changed very recently and we are still updating our implementations with respect to that.</p>\n<p>We have not imported the ONNX package dependency as we'd like to get TF team's opinion regarding whether/how we should import ONNX package dependency. The benefit is that we can check for the legality of ONNX node/graph declaration.</p>", "body_text": "As per #12888.\nWe are porting a subset of our package of ONNX-TF from here https://github.com/tjingrant/onnx-tf. Specifically, we want to enable users to do the following:\nimport tensorflow as tf\nimport numpy as np\nfrom onnx import helper\nfrom onnx.onnx_pb2 import TensorProto\n\nX = np.random.randn(3, 2).astype(np.float32)\nY_ref = np.clip(X, 0, np.inf)\n\nnode_def = helper.make_node(\n  \"Relu\", [\"X\"], [\"X\"])\n\ngraph_def = helper.make_graph(\n  [node_def],\n  name=\"test\",\n  inputs=[helper.make_tensor_value_info(\"X\", TensorProto.FLOAT, [3, 2])],\n  outputs=[helper.make_tensor_value_info(\"X\", TensorProto.FLOAT, [3, 2])])\n\ninput_dict, output_dict = tf.contrib.onnx.prepare(helper.make_model(graph_def))\nwith tf.Session() as sess:\n  out = sess.run(output_dict['X'], feed_dict={input_dict['X']: X})\n\nnp.testing.assert_almost_equal(out, Y_ref)\n\nWe are still working on fixing some of the tests as well as clearing as many TODO's as we can.\nThe ONNX RNN API changed very recently and we are still updating our implementations with respect to that.\nWe have not imported the ONNX package dependency as we'd like to get TF team's opinion regarding whether/how we should import ONNX package dependency. The benefit is that we can check for the legality of ONNX node/graph declaration.", "body": "As per https://github.com/tensorflow/tensorflow/issues/12888.\r\n\r\nWe are porting a subset of our package of ONNX-TF from here https://github.com/tjingrant/onnx-tf. Specifically, we want to enable users to do the following:\r\n```\r\nimport tensorflow as tf\r\nimport numpy as np\r\nfrom onnx import helper\r\nfrom onnx.onnx_pb2 import TensorProto\r\n\r\nX = np.random.randn(3, 2).astype(np.float32)\r\nY_ref = np.clip(X, 0, np.inf)\r\n\r\nnode_def = helper.make_node(\r\n  \"Relu\", [\"X\"], [\"X\"])\r\n\r\ngraph_def = helper.make_graph(\r\n  [node_def],\r\n  name=\"test\",\r\n  inputs=[helper.make_tensor_value_info(\"X\", TensorProto.FLOAT, [3, 2])],\r\n  outputs=[helper.make_tensor_value_info(\"X\", TensorProto.FLOAT, [3, 2])])\r\n\r\ninput_dict, output_dict = tf.contrib.onnx.prepare(helper.make_model(graph_def))\r\nwith tf.Session() as sess:\r\n  out = sess.run(output_dict['X'], feed_dict={input_dict['X']: X})\r\n\r\nnp.testing.assert_almost_equal(out, Y_ref)\r\n```\r\n\r\nWe are still working on fixing some of the tests as well as clearing as many TODO's as we can.\r\nThe ONNX RNN API changed very recently and we are still updating our implementations with respect to that.\r\n\r\nWe have not imported the ONNX package dependency as we'd like to get TF team's opinion regarding whether/how we should import ONNX package dependency. The benefit is that we can check for the legality of ONNX node/graph declaration."}