{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/401834325", "html_url": "https://github.com/tensorflow/tensorflow/issues/19945#issuecomment-401834325", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19945", "id": 401834325, "node_id": "MDEyOklzc3VlQ29tbWVudDQwMTgzNDMyNQ==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-02T14:59:29Z", "updated_at": "2018-07-02T14:59:29Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I think this stems from these lines in <code>kernel_and_device.cc</code>:</p>\n<p><div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/a7b7aa856f34bf2e44fbeb91d817742c61483618/tensorflow/core/common_runtime/eager/kernel_and_device.cc#L86-L89\">tensorflow/tensorflow/core/common_runtime/eager/kernel_and_device.cc</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 86 to 89\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/a7b7aa856f34bf2e44fbeb91d817742c61483618\">a7b7aa8</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L86\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"86\"></td>\n          <td id=\"LC86\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-c\"><span class=\"pl-c\">//</span> TODO(apassos): use a thread pool.</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L87\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"87\"></td>\n          <td id=\"LC87\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> std::function&lt;<span class=\"pl-c1\">void</span>(std::function&lt;<span class=\"pl-c1\">void</span>()&gt;)&gt; runner = </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L88\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"88\"></td>\n          <td id=\"LC88\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     [](std::function&lt;<span class=\"pl-c1\">void</span>()&gt; f) { <span class=\"pl-c1\">f</span>(); }; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L89\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"89\"></td>\n          <td id=\"LC89\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> params.<span class=\"pl-smi\">runner</span> = &amp;runner; </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<p>What this means is that, by default, all ops will execute synchronously on the current thread. By contrast, in non-eager execution, the <code>runner</code> is defined to use the inter-op thread pool, which by default has one thread per core.</p>\n<p>Since Alex has a <code>TODO</code> to change this behavior, I'll assign this to him for now.</p>", "body_text": "I think this stems from these lines in kernel_and_device.cc:\n\n  \n    \n      tensorflow/tensorflow/core/common_runtime/eager/kernel_and_device.cc\n    \n    \n        Lines 86 to 89\n      in\n      a7b7aa8\n    \n    \n    \n    \n\n        \n          \n           // TODO(apassos): use a thread pool. \n        \n\n        \n          \n           std::function<void(std::function<void()>)> runner = \n        \n\n        \n          \n               [](std::function<void()> f) { f(); }; \n        \n\n        \n          \n           params.runner = &runner; \n        \n    \n  \n\n\nWhat this means is that, by default, all ops will execute synchronously on the current thread. By contrast, in non-eager execution, the runner is defined to use the inter-op thread pool, which by default has one thread per core.\nSince Alex has a TODO to change this behavior, I'll assign this to him for now.", "body": "I think this stems from these lines in `kernel_and_device.cc`:\r\n\r\nhttps://github.com/tensorflow/tensorflow/blob/a7b7aa856f34bf2e44fbeb91d817742c61483618/tensorflow/core/common_runtime/eager/kernel_and_device.cc#L86-L89\r\n\r\nWhat this means is that, by default, all ops will execute synchronously on the current thread. By contrast, in non-eager execution, the `runner` is defined to use the inter-op thread pool, which by default has one thread per core.\r\n\r\nSince Alex has a `TODO` to change this behavior, I'll assign this to him for now."}