{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/289258744", "html_url": "https://github.com/tensorflow/tensorflow/issues/8484#issuecomment-289258744", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8484", "id": 289258744, "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTI1ODc0NA==", "user": {"login": "w4nderlust", "id": 349256, "node_id": "MDQ6VXNlcjM0OTI1Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/349256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/w4nderlust", "html_url": "https://github.com/w4nderlust", "followers_url": "https://api.github.com/users/w4nderlust/followers", "following_url": "https://api.github.com/users/w4nderlust/following{/other_user}", "gists_url": "https://api.github.com/users/w4nderlust/gists{/gist_id}", "starred_url": "https://api.github.com/users/w4nderlust/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/w4nderlust/subscriptions", "organizations_url": "https://api.github.com/users/w4nderlust/orgs", "repos_url": "https://api.github.com/users/w4nderlust/repos", "events_url": "https://api.github.com/users/w4nderlust/events{/privacy}", "received_events_url": "https://api.github.com/users/w4nderlust/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-26T05:01:05Z", "updated_at": "2017-03-26T05:01:05Z", "author_association": "NONE", "body_html": "<p>embedding_lookup has a similar behavior: returns 0 for indices outside the range on GPU while it complains about those indices on CPU. What I personally would like to see as a user is an homogeneous behavior. Something like returning 0 or null for all problems for which the CPU implementation returns an error or a warning and the GPU implementation can't do checks.<br>\nAn additional idea / suggestion: maybe a \"debug mode\" flag could help, of by default, that you can turn on while developing and gives you more warning. Or, in alternative, write somewhere \"we suggest to run everything on CPU while in development in order to get significant errors and warnings and to run models on GPU only after having debugged them on the CPU\". I guess transparency and explanations about why something like this happens is the best approach.</p>", "body_text": "embedding_lookup has a similar behavior: returns 0 for indices outside the range on GPU while it complains about those indices on CPU. What I personally would like to see as a user is an homogeneous behavior. Something like returning 0 or null for all problems for which the CPU implementation returns an error or a warning and the GPU implementation can't do checks.\nAn additional idea / suggestion: maybe a \"debug mode\" flag could help, of by default, that you can turn on while developing and gives you more warning. Or, in alternative, write somewhere \"we suggest to run everything on CPU while in development in order to get significant errors and warnings and to run models on GPU only after having debugged them on the CPU\". I guess transparency and explanations about why something like this happens is the best approach.", "body": "embedding_lookup has a similar behavior: returns 0 for indices outside the range on GPU while it complains about those indices on CPU. What I personally would like to see as a user is an homogeneous behavior. Something like returning 0 or null for all problems for which the CPU implementation returns an error or a warning and the GPU implementation can't do checks.\r\nAn additional idea / suggestion: maybe a \"debug mode\" flag could help, of by default, that you can turn on while developing and gives you more warning. Or, in alternative, write somewhere \"we suggest to run everything on CPU while in development in order to get significant errors and warnings and to run models on GPU only after having debugged them on the CPU\". I guess transparency and explanations about why something like this happens is the best approach."}