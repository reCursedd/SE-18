{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/431537740", "html_url": "https://github.com/tensorflow/tensorflow/issues/8484#issuecomment-431537740", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8484", "id": 431537740, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMTUzNzc0MA==", "user": {"login": "Sayan-Paul", "id": 2988393, "node_id": "MDQ6VXNlcjI5ODgzOTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/2988393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sayan-Paul", "html_url": "https://github.com/Sayan-Paul", "followers_url": "https://api.github.com/users/Sayan-Paul/followers", "following_url": "https://api.github.com/users/Sayan-Paul/following{/other_user}", "gists_url": "https://api.github.com/users/Sayan-Paul/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sayan-Paul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sayan-Paul/subscriptions", "organizations_url": "https://api.github.com/users/Sayan-Paul/orgs", "repos_url": "https://api.github.com/users/Sayan-Paul/repos", "events_url": "https://api.github.com/users/Sayan-Paul/events{/privacy}", "received_events_url": "https://api.github.com/users/Sayan-Paul/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-20T01:29:08Z", "updated_at": "2018-10-20T01:29:08Z", "author_association": "NONE", "body_html": "<blockquote>\n<p>I spent quite some time debugging the <code>NaN</code> issue in my system and finally realized this is the issue. For ex: If you have 101 classes and you encode labels from 1-101, your model will always have a <code>NaN</code>! Because 101 is greater than the size of the logits!</p>\n<p>Can we have at least a Warning popping up, instead of simply showing that the loss diverged with a NaN? That can bring down the debugging time to a great extent for many users.</p>\n</blockquote>\n<p>Finally, the error makes sense. Spent a day printing tensors and trying to debug.</p>", "body_text": "I spent quite some time debugging the NaN issue in my system and finally realized this is the issue. For ex: If you have 101 classes and you encode labels from 1-101, your model will always have a NaN! Because 101 is greater than the size of the logits!\nCan we have at least a Warning popping up, instead of simply showing that the loss diverged with a NaN? That can bring down the debugging time to a great extent for many users.\n\nFinally, the error makes sense. Spent a day printing tensors and trying to debug.", "body": "> I spent quite some time debugging the `NaN` issue in my system and finally realized this is the issue. For ex: If you have 101 classes and you encode labels from 1-101, your model will always have a `NaN`! Because 101 is greater than the size of the logits!\r\n> \r\n> Can we have at least a Warning popping up, instead of simply showing that the loss diverged with a NaN? That can bring down the debugging time to a great extent for many users.\r\n\r\nFinally, the error makes sense. Spent a day printing tensors and trying to debug."}